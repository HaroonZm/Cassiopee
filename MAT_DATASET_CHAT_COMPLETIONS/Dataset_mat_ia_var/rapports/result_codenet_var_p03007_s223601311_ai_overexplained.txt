================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:56:10
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demander à l'utilisateur d'entrer un entier N (le nombre d'éléments du tableau).
N = int(input())

# Demander à l'utilisateur d'entrer N entiers séparés par des espaces, convertir chaque entrée en entier,
# créer une liste à partir de ces entiers, et finalement trier cette liste dans l'ordre croissant.
A = sorted((list(map(int, input().split()))))

# Si N est égal à 2, traiter ce cas séparément car il s'agit d'un cas simple où il n'y a que deux nombres.
if N == 2:
    # Décomposer la liste triée en deux variables y et x, la première reçoit le plus petit nombre,
    # la deuxième reçoit le plus grand.
    y, x = A
    # Calculer et afficher la différence entre les deux (éventuellement un nombre positif),
    # ce sera le "score" maximal possible.
    print(x-y)
    # Afficher x et y, qui seront les termes du premier (et unique) calcul, où x - y sera le résultat.
    print(x, y)
    # Arrêter le programme, car on a déjà traité ce cas.
    exit()

# Créer une liste vide XY pour stocker les paires (x, y) correspondant à chaque opération de soustraction x - y.
XY = []

# Définir deux compteurs pour compter combien il y a d'éléments positifs ou nuls (PLUS)
# et combien il y a d'éléments strictement négatifs (MINUS).
PLUS = 0   # Compteur pour les entiers >= 0
MINUS = 0  # Compteur pour les entiers < 0

# Parcourir chaque élément dans la liste A triée pour mettre à jour les compteurs PLUS et MINUS.
for a in A:
    if a >= 0:
        PLUS += 1  # Incrémenter PLUS si l'élément est positif ou nul
    else:
        MINUS += 1 # Incrémenter MINUS si l'élément est strictement négatif

# Réinitialiser la liste XY qui stockera les opérations effectuées.
XY = []

# Prendre le plus petit élément de la liste triée A et l'affecter à la variable temporaire tmp.
# Après ce point, tmp contiendra toujours le résultat temporaire des soustractions successives.
tmp = A[0]

# S'il y a à la fois des nombres positifs (ou nuls) ET des nombres négatifs dans la liste
if PLUS and MINUS:
    # On va privilégier une stratégie pour maximiser la différence finale.
    # Tant qu'il reste au moins deux entiers positifs ou nuls non utilisés,
    # on soustrait le plus grand de ces éléments à tmp à chaque étape.
    while PLUS >= 2:
        # Affecter à x la valeur de tmp (résultat courant), et à y le plus grand élément restant de la liste A.
        x, y = tmp, A.pop()  # Retirer l'élément de la fin (le plus grand)
        # Ajouter la paire (x, y) à la liste XY pour garder la trace de cette opération.
        XY.append((x, y))
        # Mettre à jour tmp en effectuant x - y, ce qui diminue (ou augmente négativement) tmp.
        tmp = x - y
        # Décrémenter le compteur PLUS car on vient d'utiliser un élément positif ou nul.
        PLUS -= 1

    # Après avoir soustrait tous les grands positifs sauf un, il reste à effectuer l'opération entre
    # le dernier positif et le résultat temporaire accumulé.
    x, y = A.pop(), tmp  # Prendre le dernier nombre positif restant et tmp
    XY.append((x, y))
    tmp = x - y

    # Maintenant il ne reste que les négatifs non utilisés au début.
    N = len(A)  # Met à jour N au nombre d'éléments restants (ce sont tous négatifs)
    # Commencer à partir du 2ème plus petit élément puisque le plus petit a déjà été utilisé comme tmp initial.
    for i in range(1, N):
        # Prendre chacun des éléments restant de la liste A, ce sont les valeurs négatives.
        a = A[i]
        # Effectuer la soustraction entre le résultat temporaire actuel et cet élément négatif.
        x, y = tmp, a
        XY.append((x, y))
        tmp = x - y  # Mettre à jour tmp

# S'il n'y a AUCUN élément strictement négatif (que des positifs ou des zéros)
elif PLUS:
    # Dans ce cas on procède différemment pour maximiser le résultat final.
    # Parcourir tous les éléments sauf le dernier.
    for i in range(N-1):
        # Tant qu'on n'est pas à l'avant-dernière étape, on continue à soustraire le plus grand disponible à tmp.
        if i < N-2:
            x, y = tmp, A.pop()  # tmp reste la première valeur (la plus petite) et A.pop() enlève le plus grand non utilisé.
            XY.append((x, y))
            tmp = x - y
        # À l'avant-dernier tour, on inverse l'ordre pour que tmp soit maintenant celui qu'on vient d'obtenir,
        # et le dernier élément restant de la liste (qui est la plus petite valeur positive si différents).
        if i == N-2:
            x, y = A.pop(), tmp
            XY.append((x, y))
            tmp = x - y

# S'il n'y a AUCUN nombre positif ou nul, donc que des valeurs négatives
else:
    # On effectue ici une stratégie adaptée aux valeurs strictement négatives.
    # On effectue d'abord la soustraction entre le plus grand négatif (donc celui le plus proche de 0)
    # et la plus petite valeur (la plus négative).
    for i in range(N-1):
        if i == 0:
            # x est le plus grand des négatifs (A.pop()), y est tmp (le plus petit/l'élément plus négatif)
            x, y = A.pop(), tmp
            XY.append((x, y))
            tmp = x - y
        else:
            # Ensuite, on continue à soustraire les autres plus grands à tmp successivement.
            x, y = tmp, A.pop()
            XY.append((x, y))
            tmp = x - y

# À la fin des opérations, tmp contient le résultat final obtenu après les (N-1) soustractions successives.
ans = tmp
# Afficher ce résultat final.
print(ans)
# Parcourir la liste XY et afficher chaque couple (x, y) sur une ligne, ce qui montre chaque opération effectuée.
for x, y in XY:
    print(x, y)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ander' (ID: 9330)
  → Token d'amorce (pas de prédiction)

Token 3: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10993359237909317
    2. ':' → logprob: -2.484933614730835
    3. '```' → logprob: -5.609933376312256
    4. '.' → logprob: -5.734933376312256
    5. 'd' → logprob: -5.984933376312256
    6. ' ' → logprob: -6.234933376312256
    7. '=' → logprob: -6.234933376312256
    8. ' de' → logprob: -6.984933376312256
    9. ' d' → logprob: -7.109933376312256
    10. '`' → logprob: -7.109933376312256

Token 4: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.18355052173137665
    2. 'util' → logprob: -1.933550477027893
    3. 'user' → logprob: -4.1835503578186035
    4. ' l' → logprob: -5.5585503578186035
    5. 'u' → logprob: -5.8085503578186035
    6. 'us' → logprob: -7.4335503578186035
    7. 'un' → logprob: -9.433550834655762
    8. ' user' → logprob: -9.558550834655762
    9. 'input' → logprob: -10.933550834655762
    10. 'client' → logprob: -11.058550834655762

Token 5: ''utilisateur' (ID: 140803)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.8029055595397949
    2. ''utilisateur' → logprob: -0.9279055595397949
    3. ' utilisateur' → logprob: -2.552905559539795
    4. 'u' → logprob: -3.052905559539795
    5. '’utilisateur' → logprob: -3.802905559539795
    6. 'a' → logprob: -5.302905559539795
    7. '_util' → logprob: -6.552905559539795
    8. ''' → logprob: -7.552905559539795
    9. 'user' → logprob: -7.552905559539795
    10. ' user' → logprob: -8.427906036376953

Token 6: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5825866460800171
    2. 's' → logprob: -2.2075867652893066
    3. 'input' → logprob: -2.3325867652893066
    4. '_' → logprob: -3.2075867652893066
    5. '`' → logprob: -3.3325867652893066
    6. '```' → logprob: -3.4575867652893066
    7. '#' → logprob: -4.082586765289307
    8. 'name' → logprob: -4.082586765289307
    9. ''' → logprob: -4.207586765289307
    10. ' input' → logprob: -5.082586765289307

Token 7: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.744756817817688
    2. ''' → logprob: -1.619756817817688
    3. 'entr' → logprob: -1.994756817817688
    4. ''entrée' → logprob: -2.3697566986083984
    5. 'entrée' → logprob: -3.3697566986083984
    6. ' entrer' → logprob: -3.4947566986083984
    7. ''ent' → logprob: -4.994756698608398
    8. 'a' → logprob: -5.369756698608398
    9. '```' → logprob: -5.869756698608398
    10. ' saisir' → logprob: -6.119756698608398

Token 8: 'entr' (ID: 12792)
  Prédit: 'entr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entr' → logprob: -0.009564596228301525
    2. 'entrée' → logprob: -5.134564399719238
    3. 'ent' → logprob: -6.134564399719238
    4. 's' → logprob: -7.009564399719238
    5. 'enter' → logprob: -8.634564399719238
    6. 'entre' → logprob: -8.884564399719238
    7. 'input' → logprob: -9.634564399719238
    8. 'entra' → logprob: -10.134564399719238
    9. '```' → logprob: -10.509564399719238
    10. 'entrant' → logprob: -10.884564399719238

Token 9: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.00018494461255613714
    2. 'e' → logprob: -9.375185012817383
    3. 'é' → logprob: -9.750185012817383
    4. 'éer' → logprob: -10.875185012817383
    5. 'ée' → logprob: -11.250185012817383
    6. 'eer' → logprob: -12.500185012817383
    7. 'erer' → logprob: -13.250185012817383
    8. '```' → logprob: -14.375185012817383
    9. 'érer' → logprob: -14.500185012817383
    10. 'er's' → logprob: -14.625185012817383

Token 10: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.6863477230072021
    2. ''un' → logprob: -2.311347723007202
    3. ' une' → logprob: -2.436347723007202
    4. ''' → logprob: -2.436347723007202
    5. 'un' → logprob: -2.561347723007202
    6. ''une' → logprob: -3.186347723007202
    7. 'une' → logprob: -3.436347723007202
    8. ' ' → logprob: -3.686347723007202
    9. '`' → logprob: -4.936347961425781
    10. '_' → logprob: -5.186347961425781

Token 11: ' entier' (ID: 80473)
  Prédit: ' nom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nom' → logprob: -1.384101152420044
    2. 'nom' → logprob: -1.759101152420044
    3. ' ' → logprob: -1.884101152420044
    4. ' espace' → logprob: -1.884101152420044
    5. 'nombre' → logprob: -3.259101152420044
    6. 'texte' → logprob: -3.634101152420044
    7. 'e' → logprob: -3.634101152420044
    8. '_' → logprob: -3.634101152420044
    9. 'n' → logprob: -3.759101152420044
    10. 'a' → logprob: -3.759101152420044

Token 12: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04314294457435608
    2. 'i' → logprob: -4.418142795562744
    3. 'x' → logprob: -4.418142795562744
    4. 'e' → logprob: -4.793142795562744
    5. '\' → logprob: -6.543142795562744
    6. '\n' → logprob: -6.668142795562744
    7. 'ent' → logprob: -6.668142795562744
    8. '#' → logprob: -6.918142795562744
    9. '```' → logprob: -7.043142795562744
    10. 'entr' → logprob: -7.168142795562744

Token 13: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6335411071777344
    2. 'N' → logprob: -0.7585411071777344
    3. '\n' → logprob: -8.258541107177734
    4. '\' → logprob: -8.508541107177734
    5. 'i' → logprob: -8.883541107177734
    6. 'x' → logprob: -9.633541107177734
    7. '```' → logprob: -9.633541107177734
    8. '`' → logprob: -10.008541107177734
    9. '#' → logprob: -10.633541107177734
    10. 'e' → logprob: -10.758541107177734

Token 14: 'le' (ID: 282)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009473674930632114
    2. '):' → logprob: -5.50947380065918
    3. ' )' → logprob: -5.50947380065918
    4. 'n' → logprob: -7.75947380065918
    5. '')' → logprob: -8.25947380065918
    6. '#' → logprob: -8.88447380065918
    7. '`)' → logprob: -9.25947380065918
    8. '=' → logprob: -9.63447380065918
    9. ':' → logprob: -9.63447380065918
    10. ')n' → logprob: -9.88447380065918

Token 15: ' nombre' (ID: 9733)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.49658238887786865
    2. ' )' → logprob: -1.9965823888778687
    3. 'nombre' → logprob: -2.121582508087158
    4. ' nombre' → logprob: -2.746582508087158
    5. ' ' → logprob: -3.871582508087158
    6. ' entier' → logprob: -4.246582508087158
    7. 's' → logprob: -4.996582508087158
    8. ' code' → logprob: -5.246582508087158
    9. 'n' → logprob: -5.746582508087158
    10. '=' → logprob: -5.871582508087158

Token 16: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05607151240110397
    2. ')' → logprob: -4.0560712814331055
    3. ' )' → logprob: -4.1810712814331055
    4. '_' → logprob: -4.3060712814331055
    5. ' d' → logprob: -5.6810712814331055
    6. ' de' → logprob: -5.8060712814331055
    7. 's' → logprob: -7.9310712814331055
    8. '  ' → logprob: -8.056071281433105
    9. ' =' → logprob: -8.931071281433105
    10. ' entier' → logprob: -8.931071281433105

Token 17: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3359653949737549
    2. 'e' → logprob: -1.8359653949737549
    3. ''é' → logprob: -2.960965394973755
    4. '_' → logprob: -3.835965394973755
    5. ''espace' → logprob: -4.210965156555176
    6. ' espaces' → logprob: -4.835965156555176
    7. 'é' → logprob: -5.210965156555176
    8. 'u' → logprob: -5.335965156555176
    9. ''esp' → logprob: -5.335965156555176
    10. ')' → logprob: -6.585965156555176

Token 18: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.26854848861694336
    2. 'é' → logprob: -1.6435484886169434
    3. ''' → logprob: -3.5185484886169434
    4. ''é' → logprob: -6.018548488616943
    5. ''ent' → logprob: -6.018548488616943
    6. 'él' → logprob: -6.643548488616943
    7. ''él' → logprob: -6.768548488616943
    8. 'ent' → logprob: -7.018548488616943
    9. 'è' → logprob: -7.393548488616943
    10. 'e' → logprob: -7.518548488616943

Token 19: 'ments' (ID: 1626)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.11491607129573822
    2. 'ments' → logprob: -2.2399160861968994
    3. 'ment' → logprob: -6.48991584777832
    4. ')' → logprob: -8.48991584777832
    5. '```' → logprob: -9.61491584777832
    6. 's' → logprob: -9.61491584777832
    7. 'м' → logprob: -10.48991584777832
    8. ' ' → logprob: -10.73991584777832
    9. 'e' → logprob: -10.73991584777832
    10. '`' → logprob: -10.86491584777832

Token 20: ' du' (ID: 1462)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006648937705904245
    2. ' )' → logprob: -5.131649017333984
    3. ' à' → logprob: -7.881649017333984
    4. 'a' → logprob: -8.881649017333984
    5. 'à' → logprob: -9.506649017333984
    6. 's' → logprob: -10.256649017333984
    7. ' ' → logprob: -10.631649017333984
    8. '`)' → logprob: -10.631649017333984
    9. '')' → logprob: -11.506649017333984
    10. '):' → logprob: -12.131649017333984

Token 21: ' tableau' (ID: 67053)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.43294572830200195
    2. ' tableau' → logprob: -1.307945728302002
    3. 'liste' → logprob: -2.682945728302002
    4. 'list' → logprob: -5.557945728302002
    5. ' table' → logprob: -6.307945728302002
    6. '```' → logprob: -6.932945728302002
    7. ')' → logprob: -7.057945728302002
    8. 'a' → logprob: -7.182945728302002
    9. ' liste' → logprob: -7.307945728302002
    10. 'tabl' → logprob: -7.307945728302002

Token 22: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00039158877916634083
    2. '#' → logprob: -9.000391960144043
    3. ')
' → logprob: -9.875391960144043
    4. ' )' → logprob: -9.875391960144043
    5. 'n' → logprob: -10.125391960144043
    6. '`)' → logprob: -10.625391960144043
    7. '):' → logprob: -10.625391960144043
    8. '')' → logprob: -11.000391960144043
    9. 'a' → logprob: -11.250391960144043
    10. 'e' → logprob: -11.750391960144043

Token 23: 'N' (ID: 45)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06307832896709442
    2. 'N' → logprob: -2.8130784034729004
    3. '#' → logprob: -8.188077926635742
    4. '```' → logprob: -8.438077926635742
    5. 'i' → logprob: -8.813077926635742
    6. '\n' → logprob: -8.938077926635742
    7. '\' → logprob: -9.813077926635742
    8. '' → logprob: -9.938077926635742
    9. '`' → logprob: -9.938077926635742
    10. ' ' → logprob: -10.438077926635742

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02633095160126686
    2. '=' → logprob: -3.6513309478759766
    3. 'space' → logprob: -11.901330947875977
    4. '_' → logprob: -11.901330947875977
    5. ' ' → logprob: -12.276330947875977
    6. ',' → logprob: -12.776330947875977
    7. 's' → logprob: -13.151330947875977
    8. '=int' → logprob: -13.151330947875977
    9. '=input' → logprob: -13.276330947875977
    10. '.' → logprob: -13.901330947875977

Token 25: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.018172303214669228
    2. 'int' → logprob: -4.018172264099121
    3. ' input' → logprob: -11.518172264099121
    4. ' ' → logprob: -11.518172264099121
    5. '=int' → logprob: -13.768172264099121
    6. 'input' → logprob: -14.393172264099121
    7. '0' → logprob: -14.768172264099121
    8. ' ' → logprob: -15.518172264099121
    9. '[int' → logprob: -16.768173217773438
    10. '<int' → logprob: -16.893173217773438

Token 26: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4741709232330322
    2. '(input' → logprob: -0.9741709232330322
    3. '()' → logprob: -10.474170684814453
    4. ' (' → logprob: -10.974170684814453
    5. 'input' → logprob: -10.974170684814453
    6. '('' → logprob: -11.474170684814453
    7. '(
' → logprob: -11.599170684814453
    8. '(int' → logprob: -12.974170684814453
    9. '(

' → logprob: -13.099170684814453
    10. '(user' → logprob: -13.099170684814453

Token 27: '())

' (ID: 27654)
  Prédit: '("("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("("' → logprob: -0.5387340784072876
    2. '(' → logprob: -1.0387340784072876
    3. '('' → logprob: -2.913733959197998
    4. '("' → logprob: -5.413733959197998
    5. '("")' → logprob: -6.663733959197998
    6. '()' → logprob: -6.788733959197998
    7. '(""))' → logprob: -7.413733959197998
    8. '(">' → logprob: -7.788733959197998
    9. '("(' → logprob: -8.538734436035156
    10. '(""' → logprob: -9.538734436035156

Token 28: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1553035974502563
    2. '#' → logprob: -2.030303478240967
    3. '
' → logprob: -2.155303478240967
    4. '\n' → logprob: -2.155303478240967
    5. ' ' → logprob: -2.655303478240967
    6. '[' → logprob: -2.780303478240967
    7. '<|end|>' → logprob: -3.155303478240967
    8. '```' → logprob: -3.405303478240967
    9. '\' → logprob: -3.530303478240967
    10. 'a' → logprob: -4.030303478240967

Token 29: ' Dem' (ID: 9458)
  Prédit: 'elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elements' → logprob: -0.3538089692592621
    2. 'array' → logprob: -2.478808879852295
    3. ' elements' → logprob: -2.603808879852295
    4. 'for' → logprob: -3.478808879852295
    5. '#' → logprob: -3.603808879852295
    6. 'table' → logprob: -3.853808879852295
    7. 'lst' → logprob: -4.228808879852295
    8. 'arr' → logprob: -4.603808879852295
    9. ' tableau' → logprob: -4.978808879852295
    10. ' array' → logprob: -4.978808879852295

Token 30: 'ander' (ID: 9330)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9327088594436646
    2. ' ' → logprob: -1.4327088594436646
    3. '[' → logprob: -2.057708740234375
    4. ')' → logprob: -2.057708740234375
    5. '_' → logprob: -2.807708740234375
    6. '#' → logprob: -4.682708740234375
    7. 'a' → logprob: -4.932708740234375
    8. '<|end|>' → logprob: -5.307708740234375
    9. 'e' → logprob: -6.057708740234375
    10. '   ' → logprob: -6.182708740234375

Token 31: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01285595167428255
    2. '("' → logprob: -4.7628560066223145
    3. '()' → logprob: -6.2628560066223145
    4. '('' → logprob: -6.6378560066223145
    5. ')' → logprob: -7.3878560066223145
    6. '(
' → logprob: -8.887855529785156
    7. ' (' → logprob: -10.012855529785156
    8. ' ' → logprob: -10.137855529785156
    9. '("""' → logprob: -10.637855529785156
    10. '("")' → logprob: -11.012855529785156

Token 32: ' l' (ID: 305)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9275234937667847
    2. ' l' → logprob: -1.0525234937667847
    3. 'l' → logprob: -2.427523612976074
    4. '<|end|>' → logprob: -3.177523612976074
    5. '_' → logprob: -3.927523612976074
    6. '(' → logprob: -3.927523612976074
    7. '()' → logprob: -4.052523612976074
    8. ')' → logprob: -4.802523612976074
    9. ' un' → logprob: -4.927523612976074
    10. ' )' → logprob: -5.177523612976074

Token 33: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -1.0408931970596313
    2. '(' → logprob: -1.6658931970596313
    3. ''' → logprob: -2.040893077850342
    4. '()' → logprob: -2.415893077850342
    5. 'a' → logprob: -3.165893077850342
    6. ' user' → logprob: -3.540893077850342
    7. ')' → logprob: -3.540893077850342
    8. '_' → logprob: -4.040893077850342
    9. 'au' → logprob: -4.415893077850342
    10. 'u' → logprob: -4.540893077850342

Token 34: ' d' (ID: 272)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12149655818939209
    2. '()' → logprob: -2.8714966773986816
    3. '("' → logprob: -3.7464966773986816
    4. ')' → logprob: -4.246496677398682
    5. '('' → logprob: -5.246496677398682
    6. ' ' → logprob: -5.496496677398682
    7. ' )' → logprob: -5.621496677398682
    8. ' (' → logprob: -5.871496677398682
    9. '<|end|>' → logprob: -7.746496677398682
    10. ' d' → logprob: -7.996496677398682

Token 35: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.04167358577251434
    2. ''ent' → logprob: -4.04167366027832
    3. ''entrée' → logprob: -4.54167366027832
    4. ' '' → logprob: -6.16667366027832
    5. '_' → logprob: -6.54167366027832
    6. 'e' → logprob: -6.79167366027832
    7. ''utilisateur' → logprob: -6.91667366027832
    8. ''entre' → logprob: -7.16667366027832
    9. ' ' → logprob: -7.16667366027832
    10. ''à' → logprob: -7.29167366027832

Token 36: 'entr' (ID: 12792)
  Prédit: 'entr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entr' → logprob: -0.23323267698287964
    2. ''' → logprob: -2.7332327365875244
    3. ' entrer' → logprob: -2.8582327365875244
    4. ''entrée' → logprob: -3.7332327365875244
    5. 'entrée' → logprob: -3.8582327365875244
    6. 'a' → logprob: -4.983232498168945
    7. ' entr' → logprob: -4.983232498168945
    8. '<|end|>' → logprob: -5.108232498168945
    9. ''ent' → logprob: -5.483232498168945
    10. 'enter' → logprob: -5.608232498168945

Token 37: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.07888438552618027
    2. 't' → logprob: -3.2038843631744385
    3. 'e' → logprob: -3.4538843631744385
    4. 'trer' → logprob: -7.203884601593018
    5. 'éer' → logprob: -7.328884601593018
    6. 'a' → logprob: -7.328884601593018
    7. '	e' → logprob: -8.07888412475586
    8. 'é' → logprob: -8.45388412475586
    9. 'ter' → logprob: -8.45388412475586
    10. 'd' → logprob: -8.70388412475586

Token 38: ' N' (ID: 478)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.38019606471061707
    2. '(' → logprob: -1.2551960945129395
    3. '()' → logprob: -3.8801960945129395
    4. ' (' → logprob: -5.6301960945129395
    5. ' )' → logprob: -6.5051960945129395
    6. ' ()' → logprob: -6.5051960945129395
    7. ' a' → logprob: -7.5051960945129395
    8. '_' → logprob: -7.5051960945129395
    9. ' ' → logprob: -7.7551960945129395
    10. '  ' → logprob: -8.005195617675781

Token 39: ' ent' (ID: 1121)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.005822856444865465
    2. '  ' → logprob: -6.505822658538818
    3. ' a' → logprob: -7.130822658538818
    4. ' )' → logprob: -7.255822658538818
    5. ' ,' → logprob: -8.255823135375977
    6. '(' → logprob: -8.255823135375977
    7. '_' → logprob: -8.380823135375977
    8. ' integers' → logprob: -8.880823135375977
    9. ' '' → logprob: -9.005823135375977
    10. ')' → logprob: -9.005823135375977

Token 40: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.09180565178394318
    2. 'i' → logprob: -3.0918056964874268
    3. 'ières' → logprob: -3.3418056964874268
    4. 'ière' → logprob: -6.216805458068848
    5. 'r' → logprob: -6.716805458068848
    6. 'e' → logprob: -7.341805458068848
    7. 'ier' → logprob: -7.466805458068848
    8. 'ié' → logprob: -7.841805458068848
    9. '```' → logprob: -8.466805458068848
    10. 'ers' → logprob: -8.591805458068848

Token 41: ' sépar' (ID: 97160)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5441074371337891
    2. 'for' → logprob: -1.294107437133789
    3. ' ' → logprob: -2.294107437133789
    4. ' for' → logprob: -4.294107437133789
    5. 's' → logprob: -4.419107437133789
    6. '[
' → logprob: -5.794107437133789
    7. '(' → logprob: -6.544107437133789
    8. ')' → logprob: -6.919107437133789
    9. ' [
' → logprob: -6.919107437133789
    10. ',' → logprob: -7.044107437133789

Token 42: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.017150426283478737
    2. 'é' → logprob: -4.142150402069092
    3. 'ément' → logprob: -7.767150402069092
    4. 'es' → logprob: -7.892150402069092
    5. ' par' → logprob: -9.76715087890625
    6. '```' → logprob: -9.89215087890625
    7. 'ées' → logprob: -10.01715087890625
    8. 's' → logprob: -10.39215087890625
    9. 'ès' → logprob: -10.51715087890625
    10. 'par' → logprob: -10.76715087890625

Token 43: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.39454010128974915
    2. 'par' → logprob: -1.2695400714874268
    3. 'es' → logprob: -4.894540309906006
    4. 'space' → logprob: -4.894540309906006
    5. 's' → logprob: -5.269540309906006
    6. ''espace' → logprob: -5.394540309906006
    7. ' espaces' → logprob: -6.019540309906006
    8. '```' → logprob: -6.144540309906006
    9. '(space' → logprob: -6.144540309906006
    10. ''' → logprob: -6.519540309906006

Token 44: ' des' (ID: 731)
  Prédit: ''espace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''espace' → logprob: -1.3790457248687744
    2. 'es' → logprob: -1.7540457248687744
    3. ' espaces' → logprob: -1.8790457248687744
    4. ' espace' → logprob: -2.0040457248687744
    5. ''' → logprob: -2.6290457248687744
    6. ''un' → logprob: -3.3790457248687744
    7. ' ' → logprob: -3.5040457248687744
    8. ' des' → logprob: -3.7540457248687744
    9. 'un' → logprob: -3.8790457248687744
    10. 'space' → logprob: -4.004045486450195

Token 45: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.02564948983490467
    2. ' espace' → logprob: -4.650649547576904
    3. 'esp' → logprob: -5.025649547576904
    4. 'es' → logprob: -5.525649547576904
    5. 'spaces' → logprob: -6.525649547576904
    6. ''espace' → logprob: -6.775649547576904
    7. 'space' → logprob: -6.900649547576904
    8. ''esp' → logprob: -7.275649547576904
    9. ' ' → logprob: -7.900649547576904
    10. ' spaces' → logprob: -9.025649070739746

Token 46: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1551744937896729
    2. 't' → logprob: -1.7801744937896729
    3. 'elements' → logprob: -2.030174493789673
    4. 'n' → logprob: -2.280174493789673
    5. 'a' → logprob: -2.655174493789673
    6. ')' → logprob: -3.530174493789673
    7. ' )' → logprob: -3.905174493789673
    8. ',' → logprob: -3.905174493789673
    9. ' t' → logprob: -4.030174255371094
    10. 'array' → logprob: -4.030174255371094

Token 47: ' convertir' (ID: 79223)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -1.643731951713562
    2. ' array' → logprob: -1.643731951713562
    3. ' elements' → logprob: -2.6437320709228516
    4. 't' → logprob: -2.7687320709228516
    5. ' tableau' → logprob: -2.7687320709228516
    6. 'tab' → logprob: -3.2687320709228516
    7. ' lst' → logprob: -3.3937320709228516
    8. 'arr' → logprob: -3.3937320709228516
    9. 'ent' → logprob: -3.5187320709228516
    10. ' a' → logprob: -3.5187320709228516

Token 48: ' chaque' (ID: 21194)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14304478466510773
    2. '()' → logprob: -2.2680447101593018
    3. ' ' → logprob: -5.268044948577881
    4. ' la' → logprob: -5.393044948577881
    5. '_' → logprob: -5.518044948577881
    6. ')' → logprob: -5.518044948577881
    7. ' les' → logprob: -6.393044948577881
    8. ' le' → logprob: -6.518044948577881
    9. ' (' → logprob: -6.518044948577881
    10. 'le' → logprob: -6.768044948577881

Token 49: ' entrée' (ID: 95590)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.029587218537926674
    2. 'élé' → logprob: -4.279587268829346
    3. ' élément' → logprob: -5.279587268829346
    4. '  ' → logprob: -5.904587268829346
    5. ')' → logprob: -6.154587268829346
    6. ' )' → logprob: -6.529587268829346
    7. '_' → logprob: -6.654587268829346
    8. ' ,' → logprob: -8.029586791992188
    9. '.' → logprob: -8.154586791992188
    10. ',' → logprob: -8.404586791992188

Token 50: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07388631254434586
    2. ' )' → logprob: -3.4488863945007324
    3. '[' → logprob: -4.323886394500732
    4. ',' → logprob: -4.573886394500732
    5. 's' → logprob: -5.448886394500732
    6. '.' → logprob: -6.323886394500732
    7. ' ' → logprob: -6.448886394500732
    8. '_' → logprob: -6.948886394500732
    9. '.split' → logprob: -6.948886394500732
    10. '[:]' → logprob: -7.448886394500732

Token 51: ' entier' (ID: 80473)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.20378822088241577
    2. ' un' → logprob: -2.8287882804870605
    3. ' ' → logprob: -3.0787882804870605
    4. ' ent' → logprob: -3.5787882804870605
    5. 'int' → logprob: -4.0787882804870605
    6. ' des' → logprob: -4.9537882804870605
    7. ' integers' → logprob: -4.9537882804870605
    8. 'ent' → logprob: -5.0787882804870605
    9. ' une' → logprob: -5.2037882804870605
    10. ' entier' → logprob: -5.8287882804870605

Token 52: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1931828260421753
    2. 's' → logprob: -2.693182945251465
    3. ')' → logprob: -2.943182945251465
    4. ' ,' → logprob: -3.943182945251465
    5. '[' → logprob: -4.443182945251465
    6. 't' → logprob: -4.943182945251465
    7. ' ' → logprob: -5.443182945251465
    8. 'a' → logprob: -5.943182945251465
    9. ' )' → logprob: -5.943182945251465
    10. ' t' → logprob: -6.693182945251465

Token 53: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.6920593976974487
    2. ')' → logprob: -1.9420593976974487
    3. ' puis' → logprob: -1.9420593976974487
    4. 'a' → logprob: -2.3170595169067383
    5. 's' → logprob: -2.6920595169067383
    6. 't' → logprob: -2.9420595169067383
    7. ' )' → logprob: -2.9420595169067383
    8. ' a' → logprob: -3.0670595169067383
    9. ' t' → logprob: -3.3170595169067383
    10. ' and' → logprob: -3.9420595169067383

Token 54: ' créer' (ID: 40938)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.7594530582427979
    2. 't' → logprob: -1.7594530582427979
    3. ' t' → logprob: -1.7594530582427979
    4. 'a' → logprob: -3.009453058242798
    5. ')' → logprob: -3.259453058242798
    6. ' array' → logprob: -3.384453058242798
    7. ' tableau' → logprob: -3.509453058242798
    8. 'table' → logprob: -3.634453058242798
    9. ' puis' → logprob: -3.634453058242798
    10. 'l' → logprob: -3.634453058242798

Token 55: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.6312747597694397
    2. ' ' → logprob: -1.256274700164795
    3. ' un' → logprob: -2.006274700164795
    4. ' la' → logprob: -3.506274700164795
    5. 'une' → logprob: -5.131274700164795
    6. ' a' → logprob: -5.131274700164795
    7. 's' → logprob: -6.381274700164795
    8. ' le' → logprob: -6.756274700164795
    9. ' ' → logprob: -7.131274700164795
    10. 'a' → logprob: -7.256274700164795

Token 56: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.2304011434316635
    2. 'liste' → logprob: -1.6054011583328247
    3. 'list' → logprob: -6.230401039123535
    4. ' list' → logprob: -6.230401039123535
    5. ' ' → logprob: -7.855401039123535
    6. ' listes' → logprob: -9.355401039123535
    7. 's' → logprob: -9.480401039123535
    8. 'Liste' → logprob: -9.730401039123535
    9. ' lst' → logprob: -9.855401039123535
    10. ' Liste' → logprob: -9.855401039123535

Token 57: ' à' (ID: 1221)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.40142595767974854
    2. 's' → logprob: -1.9014259576797485
    3. ',' → logprob: -2.526425838470459
    4. ' ' → logprob: -3.776425838470459
    5. ')' → logprob: -4.276425838470459
    6. '(' → logprob: -4.276425838470459
    7. ' =' → logprob: -4.526425838470459
    8. '_' → logprob: -5.026425838470459
    9. 'a' → logprob: -5.276425838470459
    10. ' [' → logprob: -6.151425838470459

Token 58: ' partir' (ID: 12100)
  Prédit: ' partir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partir' → logprob: -0.05818593129515648
    2. 'part' → logprob: -3.0581858158111572
    3. ' part' → logprob: -5.683186054229736
    4. ' l' → logprob: -6.683186054229736
    5. 'p' → logprob: -6.808186054229736
    6. 'l' → logprob: -6.808186054229736
    7. '_' → logprob: -7.808186054229736
    8. '```' → logprob: -7.933186054229736
    9. ' partire' → logprob: -8.058185577392578
    10. '_part' → logprob: -8.433185577392578

Token 59: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.08998469263315201
    2. ' des' → logprob: -3.839984655380249
    3. ' d' → logprob: -3.839984655380249
    4. '[' → logprob: -4.089984893798828
    5. 'de' → logprob: -4.714984893798828
    6. ')' → logprob: -5.464984893798828
    7. ' of' → logprob: -5.714984893798828
    8. 'des' → logprob: -5.839984893798828
    9. ' ' → logprob: -6.714984893798828
    10. 'd' → logprob: -6.714984893798828

Token 60: ' ces' (ID: 10532)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.3551437258720398
    2. 'la' → logprob: -1.8551437854766846
    3. ' input' → logprob: -2.8551437854766846
    4. ' ces' → logprob: -3.2301437854766846
    5. 'input' → logprob: -4.3551435470581055
    6. ' l' → logprob: -4.6051435470581055
    7. ' cette' → logprob: -4.7301435470581055
    8. 'l' → logprob: -4.9801435470581055
    9. ' ' → logprob: -6.8551435470581055
    10. 'ces' → logprob: -6.9801435470581055

Token 61: ' ent' (ID: 1121)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10596967488527298
    2. ' éléments' → logprob: -3.6059696674346924
    3. ' ent' → logprob: -3.9809696674346924
    4. ' valeurs' → logprob: -4.4809699058532715
    5. ' entr' → logprob: -4.8559699058532715
    6. '_' → logprob: -5.1059699058532715
    7. 'ent' → logprob: -5.4809699058532715
    8. 'élé' → logprob: -5.8559699058532715
    9. ' N' → logprob: -5.8559699058532715
    10. ' elements' → logprob: -5.9809699058532715

Token 62: 'iers' (ID: 11012)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.027374835684895515
    2. 'iers' → logprob: -3.902374744415283
    3. 'ié' → logprob: -5.402374744415283
    4. 'ières' → logprob: -6.777374744415283
    5. 'í' → logprob: -7.402374744415283
    6. 'ier' → logprob: -9.027375221252441
    7. 'ière' → logprob: -9.277375221252441
    8. 'î' → logprob: -9.277375221252441
    9. 'é' → logprob: -9.402375221252441
    10. '```' → logprob: -10.402375221252441

Token 63: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0305908918380737
    2. ' t' → logprob: -1.7805908918380737
    3. '[' → logprob: -2.0305910110473633
    4. 'a' → logprob: -2.6555910110473633
    5. ')' → logprob: -3.0305910110473633
    6. 't' → logprob: -3.1555910110473633
    7. ' array' → logprob: -3.7805910110473633
    8. ',' → logprob: -3.7805910110473633
    9. 'n' → logprob: -3.9055910110473633
    10. ' a' → logprob: -4.155591011047363

Token 64: ' et' (ID: 859)
  Prédit: ' array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' array' → logprob: -0.850301206111908
    2. 'arr' → logprob: -2.4753012657165527
    3. ' lst' → logprob: -2.7253012657165527
    4. 'a' → logprob: -2.8503012657165527
    5. ' arr' → logprob: -2.9753012657165527
    6. 'array' → logprob: -3.1003012657165527
    7. ' t' → logprob: -3.2253012657165527
    8. 't' → logprob: -3.4753012657165527
    9. ' tableau' → logprob: -3.4753012657165527
    10. 'lst' → logprob: -3.6003012657165527

Token 65: ' finalement' (ID: 77979)
  Prédit: ' array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' array' → logprob: -1.6272112131118774
    2. ' lst' → logprob: -1.7522112131118774
    3. ' split' → logprob: -2.127211093902588
    4. ' continuer' → logprob: -2.502211093902588
    5. ' ' → logprob: -2.877211093902588
    6. ' l' → logprob: -3.002211093902588
    7. ' tableau' → logprob: -3.252211093902588
    8. ' les' → logprob: -3.877211093902588
    9. ' t' → logprob: -3.877211093902588
    10. 'split' → logprob: -4.002211093902588

Token 66: ' tr' (ID: 498)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.739965796470642
    2. ' lst' → logprob: -2.2399659156799316
    3. ' t' → logprob: -2.4899659156799316
    4. ' continuer' → logprob: -2.4899659156799316
    5. ' array' → logprob: -3.1149659156799316
    6. ' tableau' → logprob: -3.1149659156799316
    7. ' créer' → logprob: -3.3649659156799316
    8. ' convertir' → logprob: -3.6149659156799316
    9. ' l' → logprob: -3.8649659156799316
    10. 't' → logprob: -3.8649659156799316

Token 67: 'ier' (ID: 905)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.7676980495452881
    2. 'ier' → logprob: -1.392698049545288
    3. 'a' → logprob: -1.517698049545288
    4. 'o' → logprob: -4.267698287963867
    5. 'on' → logprob: -5.142698287963867
    6. 'ouver' → logprob: -5.267698287963867
    7. 'an' → logprob: -5.517698287963867
    8. 'e' → logprob: -5.642698287963867
    9. 'anch' → logprob: -5.642698287963867
    10. 'i' → logprob: -5.642698287963867

Token 68: ' cette' (ID: 7696)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4839446544647217
    2. '()' → logprob: -0.9839446544647217
    3. ' (' → logprob: -5.483944892883301
    4. ' ()' → logprob: -5.733944892883301
    5. '(
' → logprob: -7.233944892883301
    6. 's' → logprob: -8.1089448928833
    7. '(l' → logprob: -8.4839448928833
    8. '(t' → logprob: -9.3589448928833
    9. '(u' → logprob: -9.3589448928833
    10. 'a' → logprob: -9.6089448928833

Token 69: ' liste' (ID: 31719)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.43307194113731384
    2. ' liste' → logprob: -1.1830719709396362
    3. '_' → logprob: -3.5580718517303467
    4. ' tableau' → logprob: -5.433072090148926
    5. 'liste' → logprob: -5.683072090148926
    6. ' _' → logprob: -5.683072090148926
    7. ' list' → logprob: -6.558072090148926
    8. 's' → logprob: -7.558072090148926
    9. ' l' → logprob: -7.683072090148926
    10. 'l' → logprob: -8.058072090148926

Token 70: ' dans' (ID: 2671)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -1.2079089879989624
    2. 'numbers' → logprob: -1.8329089879989624
    3. 'sorted' → logprob: -2.082909107208252
    4. 't' → logprob: -2.207909107208252
    5. 'array' → logprob: -2.457909107208252
    6. 'a' → logprob: -3.457909107208252
    7. 'tab' → logprob: -3.582909107208252
    8. 'lst' → logprob: -3.582909107208252
    9. ' array' → logprob: -3.957909107208252
    10. 's' → logprob: -4.207909107208252

Token 71: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.021582040935754776
    2. ' ascending' → logprob: -4.396582126617432
    3. ' ' → logprob: -4.896582126617432
    4. 'l' → logprob: -7.271582126617432
    5. ' le' → logprob: -8.896581649780273
    6. ' place' → logprob: -8.896581649780273
    7. ' la' → logprob: -9.146581649780273
    8. ' a' → logprob: -9.396581649780273
    9. ' ordre' → logprob: -9.771581649780273
    10. ' c' → logprob: -10.521581649780273

Token 72: ''ordre' (ID: 124753)
  Prédit: ''ordre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ordre' → logprob: -0.20379532873630524
    2. ''' → logprob: -2.4537954330444336
    3. 'a' → logprob: -3.2037954330444336
    4. 'e' → logprob: -3.7037954330444336
    5. ''e' → logprob: -4.953795433044434
    6. ''ex' → logprob: -5.203795433044434
    7. ''é' → logprob: -5.203795433044434
    8. ''a' → logprob: -5.578795433044434
    9. ''espace' → logprob: -5.703795433044434
    10. 'es' → logprob: -5.953795433044434

Token 73: ' cro' (ID: 11270)
  Prédit: 'cro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cro' → logprob: -0.752388060092926
    2. ' cro' → logprob: -0.877388060092926
    3. ' ' → logprob: -3.6273880004882812
    4. ' ascending' → logprob: -3.6273880004882812
    5. ' asc' → logprob: -4.127388000488281
    6. 'asc' → logprob: -4.127388000488281
    7. '_' → logprob: -4.502388000488281
    8. 'ascending' → logprob: -5.877388000488281
    9. ' )' → logprob: -6.502388000488281
    10. 'c' → logprob: -6.502388000488281

Token 74: 'issant' (ID: 31359)
  Prédit: 'issant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issant' → logprob: -0.07087516039609909
    2. 'issa' → logprob: -3.4458751678466797
    3. 'iss' → logprob: -4.07087516784668
    4. 'i' → logprob: -4.94587516784668
    5. 'is' → logprob: -5.19587516784668
    6. 'issent' → logprob: -6.07087516784668
    7. 'issance' → logprob: -6.82087516784668
    8. 'issan' → logprob: -6.82087516784668
    9. 'issante' → logprob: -7.32087516784668
    10. '```' → logprob: -7.44587516784668

Token 75: '.
' (ID: 558)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6981745958328247
    2. 'a' → logprob: -2.198174476623535
    3. ' t' → logprob: -2.323174476623535
    4. ' 
' → logprob: -2.948174476623535
    5. 'array' → logprob: -3.323174476623535
    6. 'arr' → logprob: -3.323174476623535
    7. ' array' → logprob: -3.448174476623535
    8. 's' → logprob: -3.698174476623535
    9. 'sorted' → logprob: -4.073174476623535
    10. 'numbers' → logprob: -4.073174476623535

Token 76: 'A' (ID: 32)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -1.1501410007476807
    2. 'numbers' → logprob: -1.1501410007476807
    3. 'array' → logprob: -1.9001410007476807
    4. 'a' → logprob: -2.5251410007476807
    5. 't' → logprob: -2.9001410007476807
    6. 'tab' → logprob: -4.150140762329102
    7. 'sorted' → logprob: -4.525140762329102
    8. ' numbers' → logprob: -4.775140762329102
    9. 'ent' → logprob: -5.025140762329102
    10. 'lst' → logprob: -5.025140762329102

Token 77: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13084471225738525
    2. '=' → logprob: -2.3808445930480957
    3. '.' → logprob: -3.5058445930480957
    4. ' .' → logprob: -10.380845069885254
    5. ',' → logprob: -10.630845069885254
    6. '.=' → logprob: -10.880845069885254
    7. '_' → logprob: -11.255845069885254
    8. '[' → logprob: -11.630845069885254
    9. ' ' → logprob: -11.630845069885254
    10. '.sort' → logprob: -11.880845069885254

Token 78: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.2814595103263855
    2. ' sorted' → logprob: -1.4064595699310303
    3. 'list' → logprob: -8.65645980834961
    4. 's' → logprob: -9.53145980834961
    5. ' list' → logprob: -10.40645980834961
    6. 'sort' → logprob: -11.65645980834961
    7. '(sorted' → logprob: -11.65645980834961
    8. ' ' → logprob: -12.78145980834961
    9. '[]' → logprob: -12.90645980834961
    10. '```' → logprob: -13.40645980834961

Token 79: '((' (ID: 2054)
  Prédit: '(list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.20917995274066925
    2. '(' → logprob: -1.7091799974441528
    3. '(int' → logprob: -5.459179878234863
    4. '(map' → logprob: -6.334179878234863
    5. '([' → logprob: -6.459179878234863
    6. '(input' → logprob: -9.334179878234863
    7. '(lst' → logprob: -11.834179878234863
    8. '(
' → logprob: -11.959179878234863
    9. ' (' → logprob: -12.084179878234863
    10. '((' → logprob: -12.084179878234863

Token 80: 'list' (ID: 2641)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.01933230832219124
    2. '[int' → logprob: -4.019332408905029
    3. 'input' → logprob: -7.644332408905029
    4. 'map' → logprob: -7.894332408905029
    5. ' int' → logprob: -8.519331932067871
    6. 'list' → logprob: -10.019331932067871
    7. '[i' → logprob: -10.519331932067871
    8. '[input' → logprob: -10.769331932067871
    9. 'i' → logprob: -11.644331932067871
    10. '<int' → logprob: -11.894331932067871

Token 81: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.014250943437218666
    2. '(' → logprob: -4.264250755310059
    3. '(int' → logprob: -9.389250755310059
    4. 'map' → logprob: -13.514250755310059
    5. '(
' → logprob: -14.014250755310059
    6. '(input' → logprob: -14.514250755310059
    7. ' (' → logprob: -15.139250755310059
    8. ' map' → logprob: -15.639250755310059
    9. '	map' → logprob: -16.014251708984375
    10. '(

' → logprob: -16.014251708984375

Token 82: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.1608055830001831
    2. '(' → logprob: -1.910805583000183
    3. '(
' → logprob: -7.910805702209473
    4. 'int' → logprob: -9.410805702209473
    5. '<int' → logprob: -9.410805702209473
    6. ')' → logprob: -11.285805702209473
    7. '[int' → logprob: -11.535805702209473
    8. ',int' → logprob: -12.160805702209473
    9. ']int' → logprob: -12.285805702209473
    10. '=int' → logprob: -12.410805702209473

Token 83: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.04381919652223587
    2. ',input' → logprob: -3.2938191890716553
    3. '(' → logprob: -5.668819427490234
    4. 'input' → logprob: -6.668819427490234
    5. ',' → logprob: -7.043819427490234
    6. ' (' → logprob: -9.418819427490234
    7. ' input' → logprob: -9.793819427490234
    8. '=input' → logprob: -11.793819427490234
    9. ' ,' → logprob: -11.918819427490234
    10. '(
' → logprob: -12.168819427490234

Token 84: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3136417865753174
    2. ' input' → logprob: -1.3136417865753174
    3. '(input' → logprob: -8.063641548156738
    4. ',input' → logprob: -10.563641548156738
    5. ')' → logprob: -10.688641548156738
    6. ' ' → logprob: -12.438641548156738
    7. '	input' → logprob: -12.938641548156738
    8. '=input' → logprob: -13.313641548156738
    9. ' )' → logprob: -13.438641548156738
    10. '))' → logprob: -13.688641548156738

Token 85: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0005810309085063636
    2. '()' → logprob: -7.62558126449585
    3. '(' → logprob: -9.750580787658691
    4. '('').' → logprob: -11.375580787658691
    5. '()))' → logprob: -12.000580787658691
    6. ' ().' → logprob: -12.250580787658691
    7. '("").' → logprob: -12.625580787658691
    8. ')' → logprob: -13.000580787658691
    9. '())))' → logprob: -13.750580787658691
    10. '('' → logprob: -13.875580787658691

Token 86: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.011087555438280106
    2. 'strip' → logprob: -4.511087417602539
    3. 'rstrip' → logprob: -10.386087417602539
    4. ' split' → logprob: -12.261087417602539
    5. '(split' → logprob: -12.636087417602539
    6. 'spl' → logprob: -15.011087417602539
    7. '.split' → logprob: -15.511087417602539
    8. 'plit' → logprob: -16.26108741760254
    9. ' strip' → logprob: -16.38608741760254
    10. ')' → logprob: -16.38608741760254

Token 87: '()))' (ID: 16829)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8335748910903931
    2. '())))' → logprob: -1.208574891090393
    3. '()))' → logprob: -1.458574891090393
    4. '())' → logprob: -4.2085747718811035
    5. '))))' → logprob: -5.0835747718811035
    6. '(' → logprob: -5.2085747718811035
    7. ')))' → logprob: -5.3335747718811035
    8. '('' → logprob: -6.9585747718811035
    9. '())))
' → logprob: -7.2085747718811035
    10. ')' → logprob: -7.7085747718811035

Token 88: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.13470670580863953
    2. ')' → logprob: -2.509706735610962
    3. ',' → logprob: -3.259706735610962
    4. ')))' → logprob: -5.259706497192383
    5. ' ))' → logprob: -7.884706497192383
    6. ',N' → logprob: -8.384706497192383
    7. ' ,' → logprob: -8.509706497192383
    8. '),' → logprob: -8.884706497192383
    9. '))
' → logprob: -10.384706497192383
    10. ' ' → logprob: -10.384706497192383

Token 89: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 90: ' Si' (ID: 7832)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3578038513660431
    2. '<|end|>' → logprob: -2.4828038215637207
    3. '\' → logprob: -2.9828038215637207
    4. '[' → logprob: -3.1078038215637207
    5. '.' → logprob: -3.1078038215637207
    6. '\n' → logprob: -3.7328038215637207
    7. '#' → logprob: -4.107803821563721
    8. ')' → logprob: -4.357803821563721
    9. '```' → logprob: -5.107803821563721
    10. 'for' → logprob: -6.107803821563721

Token 91: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.5712699294090271
    2. ' len' → logprob: -1.8212699890136719
    3. ' A' → logprob: -2.071269989013672
    4. 'N' → logprob: -2.821269989013672
    5. ' ' → logprob: -2.821269989013672
    6. 'A' → logprob: -3.946269989013672
    7. 'len' → logprob: -4.946269989013672
    8. ' ' → logprob: -7.196269989013672
    9. '  ' → logprob: -7.821269989013672
    10. '_' → logprob: -8.071269989013672

Token 92: ' est' (ID: 893)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.23893307149410248
    2. ' <=' → logprob: -2.2389330863952637
    3. ' ' → logprob: -2.7389330863952637
    4. ' <' → logprob: -3.6139330863952637
    5. ' ==' → logprob: -4.988933086395264
    6. '>' → logprob: -5.363933086395264
    7. ' >=' → logprob: -6.863933086395264
    8. '<|end|>' → logprob: -7.238933086395264
    9. '<=' → logprob: -8.238932609558105
    10. '  ' → logprob: -8.488932609558105

Token 93: ' égal' (ID: 15059)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4394758641719818
    2. '<|end|>' → logprob: -1.6894758939743042
    3. ' >' → logprob: -2.1894757747650146
    4. '>' → logprob: -2.9394757747650146
    5. '0' → logprob: -6.439476013183594
    6. ' not' → logprob: -6.689476013183594
    7. ' greater' → logprob: -7.189476013183594
    8. ')' → logprob: -8.189476013183594
    9. 'greater' → logprob: -8.314476013183594
    10. '<|end|>' → logprob: -8.689476013183594

Token 94: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.22063611447811127
    2. ' ' → logprob: -1.7206361293792725
    3. 'à' → logprob: -4.720635890960693
    4. '  ' → logprob: -5.970635890960693
    5. ' to' → logprob: -6.095635890960693
    6. ' a' → logprob: -6.345635890960693
    7. '<|end|>' → logprob: -6.595635890960693
    8. 'to' → logprob: -7.720635890960693
    9. 'a' → logprob: -7.720635890960693
    10. '```' → logprob: -8.220636367797852

Token 95: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8499289751052856
    2. '1' → logprob: -1.3499289751052856
    3. ' ' → logprob: -1.5999289751052856
    4. 'len' → logprob: -2.974928855895996
    5. ' len' → logprob: -3.474928855895996
    6. 'A' → logprob: -4.474928855895996
    7. '2' → logprob: -4.724928855895996
    8. ' A' → logprob: -4.974928855895996
    9. 'N' → logprob: -7.099928855895996
    10. '3' → logprob: -7.099928855895996

Token 96: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4208737909793854
    2. '1' → logprob: -1.920873761177063
    3. 'len' → logprob: -2.2958738803863525
    4. ' ' → logprob: -3.1708738803863525
    5. 'A' → logprob: -3.5458738803863525
    6. ' len' → logprob: -4.420873641967773
    7. '2' → logprob: -4.920873641967773
    8. ' A' → logprob: -5.795873641967773
    9. '3' → logprob: -6.045873641967773
    10. 'N' → logprob: -7.420873641967773

Token 97: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007349392864853144
    2. ':
' → logprob: -5.257349491119385
    3. ' :' → logprob: -6.507349491119385
    4. ' :
' → logprob: -8.632349014282227
    5. ',' → logprob: -8.882349014282227
    6. ' ' → logprob: -9.257349014282227
    7. ' if' → logprob: -9.507349014282227
    8. 'if' → logprob: -9.632349014282227
    9. ' and' → logprob: -11.632349014282227
    10. ' ,' → logprob: -11.757349014282227

Token 98: ' traiter' (ID: 105852)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5964913368225098
    2. ' :' → logprob: -0.8464913368225098
    3. ' :
' → logprob: -4.59649133682251
    4. ' ' → logprob: -5.22149133682251
    5. ':
' → logprob: -6.22149133682251
    6. ',' → logprob: -6.97149133682251
    7. ' ,' → logprob: -7.34649133682251
    8. '   ' → logprob: -7.97149133682251
    9. ' ' → logprob: -8.096490859985352
    10. ' if' → logprob: -9.346490859985352

Token 99: ' ce' (ID: 2357)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.4790603816509247
    2. ':' → logprob: -1.354060411453247
    3. ' ' → logprob: -2.479060411453247
    4. ' :
' → logprob: -3.354060411453247
    5. ':
' → logprob: -6.604060173034668
    6. ' (' → logprob: -7.854060173034668
    7. '(' → logprob: -7.979060173034668
    8. ' ,' → logprob: -8.354060173034668
    9. '  ' → logprob: -8.479060173034668
    10. '   ' → logprob: -8.604060173034668

Token 100: ' cas' (ID: 2108)
  Prédit: ' cas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cas' → logprob: -0.2423361837863922
    2. ' ' → logprob: -1.6173361539840698
    3. ':' → logprob: -5.117336273193359
    4. ' case' → logprob: -5.867336273193359
    5. 'cas' → logprob: -6.492336273193359
    6. '```' → logprob: -6.867336273193359
    7. 's' → logprob: -6.992336273193359
    8. ' ' → logprob: -7.242336273193359
    9. '_' → logprob: -7.617336273193359
    10. 'u' → logprob: -7.992336273193359

Token 101: ' sépar' (ID: 97160)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12634675204753876
    2. ' :' → logprob: -2.3763468265533447
    3. ' :
' → logprob: -4.126346588134766
    4. ':
' → logprob: -5.126346588134766
    5. ' ' → logprob: -6.501346588134766
    6. '[' → logprob: -7.501346588134766
    7. ' if' → logprob: -7.626346588134766
    8. '   ' → logprob: -8.376346588134766
    9. '```' → logprob: -8.376346588134766
    10. 'if' → logprob: -8.626346588134766

Token 102: 'ément' (ID: 17645)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.33467915654182434
    2. 'ément' → logprob: -1.834679126739502
    3. 'è' → logprob: -2.209679126739502
    4. 'e' → logprob: -4.834679126739502
    5. '```' → logprob: -5.709679126739502
    6. '#' → logprob: -7.084679126739502
    7. 'ement' → logprob: -7.459679126739502
    8. '`' → logprob: -8.45967960357666
    9. 'm' → logprob: -8.45967960357666
    10. 'ê' → logprob: -8.45967960357666

Token 103: ' car' (ID: 1669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.025069991126656532
    2. ':
' → logprob: -4.0250701904296875
    3. '
' → logprob: -6.0250701904296875
    4. 'if' → logprob: -6.5250701904296875
    5. ',' → logprob: -7.1500701904296875
    6. ' if' → logprob: -7.1500701904296875
    7. ' ' → logprob: -8.650070190429688
    8. 'i' → logprob: -8.900070190429688
    9. ' :' → logprob: -8.900070190429688
    10. '<|end|>' → logprob: -8.900070190429688

Token 104: ' il' (ID: 1793)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -1.5128276348114014
    2. ' N' → logprob: -1.7628276348114014
    3. ' ' → logprob: -1.8878276348114014
    4. ' len' → logprob: -2.1378276348114014
    5. ' la' → logprob: -2.6378276348114014
    6. ' ' → logprob: -3.1378276348114014
    7. ' il' → logprob: -3.1378276348114014
    8. ':' → logprob: -3.2628276348114014
    9. ' le' → logprob: -3.2628276348114014
    10. ' l' → logprob: -3.5128276348114014

Token 105: ' s' (ID: 265)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4261760115623474
    2. ' manque' → logprob: -1.6761760711669922
    3. ' faut' → logprob: -3.176176071166992
    4. 's' → logprob: -3.676176071166992
    5. 'n' → logprob: -4.051176071166992
    6. ' est' → logprob: -4.551176071166992
    7. ' a' → logprob: -4.551176071166992
    8. ' faudra' → logprob: -4.926176071166992
    9. ' ne' → logprob: -5.051176071166992
    10. ':' → logprob: -5.176176071166992

Token 106: ''agit' (ID: 72975)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7477646470069885
    2. 'e' → logprob: -2.1227645874023438
    3. ''agit' → logprob: -2.1227645874023438
    4. 'f' → logprob: -3.3727645874023438
    5. 'a' → logprob: -3.4977645874023438
    6. 's' → logprob: -3.6227645874023438
    7. '==' → logprob: -3.7477645874023438
    8. '#' → logprob: -3.7477645874023438
    9. ''est' → logprob: -3.9977645874023438
    10. ' ==' → logprob: -3.9977645874023438

Token 107: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.13959400355815887
    2. 'd' → logprob: -2.764594078063965
    3. '<|end|>' → logprob: -3.139594078063965
    4. ' de' → logprob: -4.514594078063965
    5. ' ' → logprob: -5.014594078063965
    6. 'de' → logprob: -5.889594078063965
    7. ' du' → logprob: -6.639594078063965
    8. ' des' → logprob: -6.889594078063965
    9. ' of' → logprob: -8.139594078063965
    10. '<|end|>' → logprob: -8.264594078063965

Token 108: ''un' (ID: 9788)
  Prédit: ''un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''un' → logprob: -0.08467486500740051
    2. ''une' → logprob: -3.084674835205078
    3. 'e' → logprob: -4.209674835205078
    4. 'un' → logprob: -4.959674835205078
    5. ' un' → logprob: -5.084674835205078
    6. ''' → logprob: -5.959674835205078
    7. 'a' → logprob: -6.084674835205078
    8. 'une' → logprob: -7.084674835205078
    9. 'u' → logprob: -7.459674835205078
    10. ' une' → logprob: -7.834674835205078

Token 109: ' cas' (ID: 2108)
  Prédit: ' cas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cas' → logprob: -0.02758719213306904
    2. 'cas' → logprob: -4.027587413787842
    3. 's' → logprob: -6.277587413787842
    4. ' ' → logprob: -6.527587413787842
    5. 'e' → logprob: -6.902587413787842
    6. ' tableau' → logprob: -6.902587413787842
    7. ' trip' → logprob: -7.777587413787842
    8. '_' → logprob: -8.277586936950684
    9. ' problème' → logprob: -8.277586936950684
    10. ' plus' → logprob: -8.277586936950684

Token 110: ' simple' (ID: 4705)
  Prédit: ' particulier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' particulier' → logprob: -0.18061502277851105
    2. ' spécial' → logprob: -2.180614948272705
    3. ' ' → logprob: -4.180614948272705
    4. ' special' → logprob: -4.305614948272705
    5. ' à' → logprob: -4.680614948272705
    6. ' particuli' → logprob: -5.930614948272705
    7. 'special' → logprob: -6.055614948272705
    8. ' d' → logprob: -6.555614948272705
    9. ' sp' → logprob: -7.055614948272705
    10. ' particuliers' → logprob: -7.430614948272705

Token 111: ' où' (ID: 15113)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04490478336811066
    2. 'if' → logprob: -3.9199047088623047
    3. ':
' → logprob: -4.544904708862305
    4. ',' → logprob: -5.794904708862305
    5. ' if' → logprob: -5.794904708862305
    6. ' :' → logprob: -5.919904708862305
    7. ' ' → logprob: -6.419904708862305
    8. '
' → logprob: -7.669904708862305
    9. 'i' → logprob: -7.794904708862305
    10. '<|end|>' → logprob: -7.794904708862305

Token 112: ' il' (ID: 1793)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.078021764755249
    2. ' on' → logprob: -1.328021764755249
    3. 'A' → logprob: -2.078021764755249
    4. ' A' → logprob: -3.078021764755249
    5. ' il' → logprob: -3.328021764755249
    6. ' le' → logprob: -3.578021764755249
    7. 'la' → logprob: -3.578021764755249
    8. 'on' → logprob: -3.828021764755249
    9. ' l' → logprob: -4.078022003173828
    10. 'le' → logprob: -4.203022003173828

Token 113: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7910051345825195
    2. 'n' → logprob: -1.4160051345825195
    3. 'f' → logprob: -1.7910051345825195
    4. 's' → logprob: -2.7910051345825195
    5. ' faut' → logprob: -2.9160051345825195
    6. ' ' → logprob: -5.4160051345825195
    7. ' manque' → logprob: -5.6660051345825195
    8. ' faudra' → logprob: -5.7910051345825195
    9. 'y' → logprob: -6.1660051345825195
    10. 'est' → logprob: -6.5410051345825195

Token 114: ''y' (ID: 27913)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.14702704548835754
    2. ''' → logprob: -2.397027015686035
    3. 'est' → logprob: -4.522027015686035
    4. ' ' → logprob: -4.897027015686035
    5. 'a' → logprob: -5.522027015686035
    6. ' faut' → logprob: -5.522027015686035
    7. 'y' → logprob: -5.897027015686035
    8. 's' → logprob: -6.272027015686035
    9. 'n' → logprob: -6.272027015686035
    10. '```' → logprob: -6.522027015686035

Token 115: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07554566115140915
    2. ' a' → logprob: -2.7005455493927
    3. ''a' → logprob: -5.825545787811279
    4. 's' → logprob: -6.575545787811279
    5. ''s' → logprob: -8.325545310974121
    6. '#a' → logprob: -8.450545310974121
    7. 'est' → logprob: -9.075545310974121
    8. 'pas' → logprob: -9.200545310974121
    9. '```' → logprob: -9.325545310974121
    10. 'A' → logprob: -9.700545310974121

Token 116: ' que' (ID: 661)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.996289849281311
    2. ' ' → logprob: -1.746289849281311
    3. ' seulement' → logprob: -1.746289849281311
    4. 'pas' → logprob: -2.7462897300720215
    5. ' juste' → logprob: -2.7462897300720215
    6. ' uniquement' → logprob: -3.6212897300720215
    7. ' peu' → logprob: -3.9962897300720215
    8. ' rien' → logprob: -3.9962897300720215
    9. ' exactement' → logprob: -4.1212897300720215
    10. 'exact' → logprob: -4.3712897300720215

Token 117: ' deux' (ID: 10301)
  Prédit: ' deux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.8678014278411865
    2. ' ' → logprob: -1.2428014278411865
    3. ' seulement' → logprob: -2.3678014278411865
    4. ' exactement' → logprob: -2.3678014278411865
    5. ' juste' → logprob: -3.4928014278411865
    6. 'exact' → logprob: -3.6178014278411865
    7. 'de' → logprob: -4.117801666259766
    8. 'just' → logprob: -5.117801666259766
    9. ' uniquement' → logprob: -5.117801666259766
    10. ' just' → logprob: -5.492801666259766

Token 118: ' nombres' (ID: 76205)
  Prédit: ' éléments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' éléments' → logprob: -0.18764260411262512
    2. 'élé' → logprob: -2.3126425743103027
    3. ' ' → logprob: -3.0626425743103027
    4. ' elements' → logprob: -4.562642574310303
    5. ' espaces' → logprob: -5.687642574310303
    6. 'elements' → logprob: -5.937642574310303
    7. '<|end|>' → logprob: -6.187642574310303
    8. ' )' → logprob: -6.937642574310303
    9. ' 
' → logprob: -7.187642574310303
    10. ' élément' → logprob: -7.312642574310303

Token 119: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.040676239877939224
    2. ' :' → logprob: -4.290676116943359
    3. ':
' → logprob: -4.665676116943359
    4. ',' → logprob: -4.665676116943359
    5. 'if' → logprob: -5.415676116943359
    6. ' if' → logprob: -6.915676116943359
    7. ' :
' → logprob: -7.040676116943359
    8. ' ' → logprob: -7.540676116943359
    9. '.' → logprob: -8.54067611694336
    10. ' ,' → logprob: -9.66567611694336

Token 120: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11350904405117035
    2. '
' → logprob: -2.238508939743042
    3. ' if' → logprob: -8.488509178161621
    4. '```' → logprob: -8.613509178161621
    5. ' 
' → logprob: -8.863509178161621
    6. 'i' → logprob: -9.238509178161621
    7. '

' → logprob: -11.363509178161621
    8. ':' → logprob: -11.863509178161621
    9. '  
' → logprob: -11.863509178161621
    10. '
' → logprob: -11.988509178161621

Token 121: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.002660435391589999
    2. ' ' → logprob: -6.127660274505615
    3. 'N' → logprob: -7.752660274505615
    4. ' ' → logprob: -10.002660751342773
    5. '	N' → logprob: -16.002660751342773
    6. ' (' → logprob: -16.377660751342773
    7. ' ‌' → logprob: -16.377660751342773
    8. ' ' → logprob: -16.627660751342773
    9. '  ' → logprob: -17.502660751342773
    10. ' n' → logprob: -18.502660751342773

Token 122: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.02664649859070778
    2. '==' → logprob: -3.651646614074707
    3. ' <=' → logprob: -8.401646614074707
    4. ' ' → logprob: -10.151646614074707
    5. '=' → logprob: -10.651646614074707
    6. ' ' → logprob: -10.776646614074707
    7. ' =' → logprob: -11.276646614074707
    8. ' <' → logprob: -11.526646614074707
    9. '<=' → logprob: -12.026646614074707
    10. '[' → logprob: -13.276646614074707

Token 123: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.005929863080382347
    2. '2' → logprob: -5.130929946899414
    3. ' ' → logprob: -13.755929946899414
    4. '1' → logprob: -16.255929946899414
    5. '<|end|>' → logprob: -16.380929946899414
    6. '```' → logprob: -17.255929946899414
    7. '  ' → logprob: -17.505929946899414
    8. '0' → logprob: -17.755929946899414
    9. ' 
' → logprob: -18.255929946899414
    10. ')' → logprob: -19.005929946899414

Token 124: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.47407710552215576
    2. ' ' → logprob: -0.9740771055221558
    3. '1' → logprob: -16.599077224731445
    4. ' ' → logprob: -17.724077224731445
    5. '```' → logprob: -18.349077224731445
    6. '  ' → logprob: -18.724077224731445
    7. '0' → logprob: -19.099077224731445
    8. '3' → logprob: -19.224077224731445
    9. ' 
' → logprob: -19.474077224731445
    10. ')' → logprob: -19.474077224731445

Token 125: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.114600834436715e-05
    2. ' :' → logprob: -9.625091552734375
    3. ':
' → logprob: -10.625091552734375
    4. ':return' → logprob: -15.500091552734375
    5. ':**' → logprob: -16.000091552734375
    6. ':

' → logprob: -16.000091552734375
    7. ':def' → logprob: -16.125091552734375
    8. '):' → logprob: -16.875091552734375
    9. ',' → logprob: -16.875091552734375
    10. ' :
' → logprob: -17.125091552734375

Token 126: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024229537695646286
    2. ':
' → logprob: -3.8992295265197754
    3. '
' → logprob: -6.274229526519775
    4. 'print' → logprob: -7.524229526519775
    5. ' :' → logprob: -7.899229526519775
    6. '   ' → logprob: -8.399230003356934
    7. ' :
' → logprob: -9.024230003356934
    8. ' 
' → logprob: -9.149230003356934
    9. '  
' → logprob: -9.149230003356934
    10. ' print' → logprob: -9.274230003356934

Token 127: ' #' (ID: 1069)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.150614932179451
    2. 'print' → logprob: -2.0256149768829346
    3. ' 
' → logprob: -6.1506147384643555
    4. ' if' → logprob: -6.6506147384643555
    5. '
' → logprob: -7.0256147384643555
    6. ' a' → logprob: -7.1506147384643555
    7. ' result' → logprob: -7.9006147384643555
    8. ' A' → logprob: -8.025614738464355
    9. ' ' → logprob: -8.275614738464355
    10. 'result' → logprob: -8.400614738464355

Token 128: ' Dé' (ID: 27247)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.6146843433380127
    2. 'print' → logprob: -0.8646843433380127
    3. 'diff' → logprob: -4.114684104919434
    4. ' diff' → logprob: -4.489684104919434
    5. 'a' → logprob: -6.114684104919434
    6. ' a' → logprob: -6.364684104919434
    7. 'result' → logprob: -6.489684104919434
    8. ' result' → logprob: -6.739684104919434
    9. 'difference' → logprob: -7.114684104919434
    10. '#' → logprob: -7.864684104919434

Token 129: 'composer' (ID: 165799)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.14842501282691956
    2. 'termin' → logprob: -2.8984251022338867
    3. '   ' → logprob: -3.7734251022338867
    4. 'caler' → logprob: -4.273425102233887
    5. 'f' → logprob: -4.523425102233887
    6. '#' → logprob: -5.398425102233887
    7. 'comment' → logprob: -5.398425102233887
    8. 'placer' → logprob: -5.648425102233887
    9. 'com' → logprob: -5.773425102233887
    10. 'composer' → logprob: -5.773425102233887

Token 130: ' la' (ID: 557)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.05518973246216774
    2. 'A' → logprob: -2.930189847946167
    3. ' ' → logprob: -9.180190086364746
    4. ' a' → logprob: -9.680190086364746
    5. 'a' → logprob: -9.805190086364746
    6. ' la' → logprob: -10.555190086364746
    7. ' N' → logprob: -10.680190086364746
    8. ' ' → logprob: -11.055190086364746
    9. ' l' → logprob: -12.680190086364746
    10. ' le' → logprob: -12.930190086364746

Token 131: ' liste' (ID: 31719)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -1.5140267610549927
    2. 'A' → logprob: -1.6390267610549927
    3. 'liste' → logprob: -2.014026641845703
    4. 'de' → logprob: -2.639026641845703
    5. 'a' → logprob: -2.764026641845703
    6. ' liste' → logprob: -3.014026641845703
    7. ' différence' → logprob: -3.014026641845703
    8. 'difference' → logprob: -3.014026641845703
    9. 's' → logprob: -3.139026641845703
    10. ' A' → logprob: -4.264026641845703

Token 132: ' tri' (ID: 12665)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.12370552122592926
    2. 'A' → logprob: -2.2487056255340576
    3. ' en' → logprob: -4.6237053871154785
    4. '[' → logprob: -7.7487053871154785
    5. ' ' → logprob: -8.123705863952637
    6. '   ' → logprob: -10.123705863952637
    7. 'a' → logprob: -10.123705863952637
    8. ' a' → logprob: -10.498705863952637
    9. ',' → logprob: -10.623705863952637
    10. ' in' → logprob: -10.748705863952637

Token 133: 'ée' (ID: 2894)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6643500328063965
    2. 'ée' → logprob: -1.6643500328063965
    3. 't' → logprob: -2.5393500328063965
    4. 'née' → logprob: -3.0393500328063965
    5. ' A' → logprob: -3.4143500328063965
    6. '   ' → logprob: -4.1643500328063965
    7. '(A' → logprob: -4.5393500328063965
    8. 'st' → logprob: -4.6643500328063965
    9. 'lée' → logprob: -4.6643500328063965
    10. 'd' → logprob: -4.9143500328063965

Token 134: ' en' (ID: 469)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.1533416211605072
    2. 'A' → logprob: -2.90334153175354
    3. ' en' → logprob: -3.15334153175354
    4. ' a' → logprob: -3.65334153175354
    5. 'a' → logprob: -4.528341770172119
    6. ' ' → logprob: -5.028341770172119
    7. ' 
' → logprob: -8.153341293334961
    8. '[' → logprob: -8.778341293334961
    9. ' in' → logprob: -8.903341293334961
    10. ',' → logprob: -9.278341293334961

Token 135: ' deux' (ID: 10301)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.43738287687301636
    2. 'a' → logprob: -1.4373829364776611
    3. ' x' → logprob: -2.312382936477661
    4. 'x' → logprob: -4.437382698059082
    5. ' val' → logprob: -6.187382698059082
    6. ' A' → logprob: -6.437382698059082
    7. 'A' → logprob: -7.562382698059082
    8. ' ' → logprob: -8.187382698059082
    9. 'val' → logprob: -8.187382698059082
    10. ' deux' → logprob: -8.812382698059082

Token 136: ' variables' (ID: 13955)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.5746597051620483
    2. ' A' → logprob: -1.5746597051620483
    3. 'a' → logprob: -1.6996597051620483
    4. ' variables' → logprob: -1.8246597051620483
    5. ' éléments' → logprob: -2.699659824371338
    6. ' valeurs' → logprob: -3.324659824371338
    7. 'x' → logprob: -3.449659824371338
    8. 'A' → logprob: -3.449659824371338
    9. ' nombres' → logprob: -3.574659824371338
    10. ',' → logprob: -4.574659824371338

Token 137: ' y' (ID: 342)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5349101424217224
    2. 'a' → logprob: -0.9099101424217224
    3. ' x' → logprob: -5.284910202026367
    4. 'x' → logprob: -5.534910202026367
    5. ',' → logprob: -6.284910202026367
    6. ' A' → logprob: -8.284910202026367
    7. 'n' → logprob: -8.784910202026367
    8. 'A' → logprob: -8.784910202026367
    9. ' n' → logprob: -9.409910202026367
    10. ' val' → logprob: -10.284910202026367

Token 138: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03488196060061455
    2. 'y' → logprob: -4.034882068634033
    3. 'a' → logprob: -5.034882068634033
    4. '1' → logprob: -5.159882068634033
    5. '_' → logprob: -7.034882068634033
    6. '0' → logprob: -7.034882068634033
    7. '_,' → logprob: -7.034882068634033
    8. ',y' → logprob: -7.534882068634033
    9. ' ,' → logprob: -7.784882068634033
    10. 'A' → logprob: -8.909881591796875

Token 139: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5712106823921204
    2. 'z' → logprob: -1.8212106227874756
    3. ' z' → logprob: -1.9462106227874756
    4. ' x' → logprob: -2.0712106227874756
    5. ' ' → logprob: -5.946210861206055
    6. ' y' → logprob: -6.946210861206055
    7. 'y' → logprob: -7.196210861206055
    8. ' t' → logprob: -9.946210861206055
    9. 't' → logprob: -10.571210861206055
    10. 'a' → logprob: -11.571210861206055

Token 140: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38401302695274353
    2. 'y' → logprob: -1.384013056755066
    3. ' =' → logprob: -2.8840129375457764
    4. ' y' → logprob: -5.6340131759643555
    5. 'a' → logprob: -5.8840131759643555
    6. ',y' → logprob: -6.0090131759643555
    7. ' ,' → logprob: -6.7590131759643555
    8. '=' → logprob: -7.2590131759643555
    9. ' ' → logprob: -7.6340131759643555
    10. '   ' → logprob: -8.259013175964355

Token 141: ' la' (ID: 557)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.25204724073410034
    2. 'y' → logprob: -1.5020473003387451
    3. ' ' → logprob: -9.877047538757324
    4. 'x' → logprob: -10.752047538757324
    5. ' x' → logprob: -11.627047538757324
    6. 'a' → logprob: -11.877047538757324
    7. ' 
' → logprob: -12.127047538757324
    8. ',' → logprob: -12.377047538757324
    9. '   ' → logprob: -12.627047538757324
    10. '	y' → logprob: -12.752047538757324

Token 142: ' première' (ID: 23423)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6208469867706299
    2. ' =' → logprob: -1.8708469867706299
    3. ' ,' → logprob: -1.9958469867706299
    4. ' y' → logprob: -3.12084698677063
    5. 'y' → logprob: -3.37084698677063
    6. ' ' → logprob: -3.74584698677063
    7. 'ur' → logprob: -4.620846748352051
    8. '=' → logprob: -4.745846748352051
    9. 's' → logprob: -5.370846748352051
    10. 'x' → logprob: -5.495846748352051

Token 143: ' reçoit' (ID: 151051)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013531939126551151
    2. ' =' → logprob: -5.5135321617126465
    3. '=' → logprob: -5.8885321617126465
    4. ' ,' → logprob: -6.0135321617126465
    5. 'y' → logprob: -6.1385321617126465
    6. ' y' → logprob: -7.6385321617126465
    7. ',y' → logprob: -8.263531684875488
    8. ',
' → logprob: -8.388531684875488
    9. 's' → logprob: -8.763531684875488
    10. '[' → logprob: -9.138531684875488

Token 144: ' le' (ID: 505)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.14823158085346222
    2. ' A' → logprob: -2.0232315063476562
    3. ' ' → logprob: -6.273231506347656
    4. '=A' → logprob: -6.398231506347656
    5. ' la' → logprob: -7.648231506347656
    6. 'l' → logprob: -7.898231506347656
    7. ' l' → logprob: -8.023231506347656
    8. ' =' → logprob: -8.273231506347656
    9. ' les' → logprob: -9.273231506347656
    10. ' ' → logprob: -9.398231506347656

Token 145: ' plus' (ID: 2932)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.2327893078327179
    2. ' premier' → logprob: -1.7327892780303955
    3. 'élé' → logprob: -5.357789516448975
    4. 'A' → logprob: -5.357789516448975
    5. ' A' → logprob: -5.482789516448975
    6. ' plus' → logprob: -5.482789516448975
    7. 'plus' → logprob: -5.732789516448975
    8. ' ' → logprob: -6.357789516448975
    9. '0' → logprob: -6.357789516448975
    10. 's' → logprob: -6.607789516448975

Token 146: ' petit' (ID: 20577)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.4873846769332886
    2. ' petit' → logprob: -1.6123846769332886
    3. 'grand' → logprob: -2.112384796142578
    4. ' grand' → logprob: -3.112384796142578
    5. 'gr' → logprob: -5.737384796142578
    6. ' pet' → logprob: -5.862384796142578
    7. ' petite' → logprob: -6.112384796142578
    8. ' ' → logprob: -6.112384796142578
    9. '_' → logprob: -6.737384796142578
    10. '-' → logprob: -7.237384796142578

Token 147: ' nombre' (ID: 9733)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5683702826499939
    2. '_' → logprob: -1.5683703422546387
    3. ',' → logprob: -1.8183703422546387
    4. ' ,' → logprob: -3.6933703422546387
    5. '<|end|>' → logprob: -3.6933703422546387
    6. '  ' → logprob: -5.943370342254639
    7. ' _' → logprob: -6.068370342254639
    8. 'élé' → logprob: -6.443370342254639
    9. ')' → logprob: -6.443370342254639
    10. ' )' → logprob: -7.443370342254639

Token 148: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007679146248847246
    2. 'y' → logprob: -5.007678985595703
    3. ' ,' → logprob: -8.382678985595703
    4. ' y' → logprob: -8.507678985595703
    5. 'A' → logprob: -8.757678985595703
    6. 'x' → logprob: -8.882678985595703
    7. ',y' → logprob: -9.132678985595703
    8. ',
' → logprob: -10.007678985595703
    9. '   ' → logprob: -10.757678985595703
    10. ' =' → logprob: -11.257678985595703

Token 149: '   ' (ID: 271)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.1835823655128479
    2. 'y' → logprob: -1.9335823059082031
    3. '   ' → logprob: -4.558582305908203
    4. 'x' → logprob: -4.808582305908203
    5. ' x' → logprob: -5.683582305908203
    6. ',' → logprob: -7.558582305908203
    7. ' ' → logprob: -8.558582305908203
    8. 'a' → logprob: -9.558582305908203
    9. '    ' → logprob: -9.683582305908203
    10. 'A' → logprob: -9.683582305908203

Token 150: ' #' (ID: 1069)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.2125927358865738
    2. 'y' → logprob: -2.087592840194702
    3. '   ' → logprob: -3.837592840194702
    4. ' x' → logprob: -3.837592840194702
    5. 'x' → logprob: -3.962592840194702
    6. ' la' → logprob: -5.837592601776123
    7. '#' (adapté à ' #') → logprob: -6.587592601776123
    8. ' #' → logprob: -8.087593078613281
    9. ' ' → logprob: -8.462593078613281
    10. ',' → logprob: -8.712593078613281

Token 151: ' la' (ID: 557)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.47832438349723816
    2. 'y' → logprob: -1.8533244132995605
    3. '   ' → logprob: -2.2283244132995605
    4. 'x' → logprob: -2.4783244132995605
    5. ' x' → logprob: -4.2283244132995605
    6. ' ' → logprob: -4.3533244132995605
    7. ' la' → logprob: -7.2283244132995605
    8. 'a' → logprob: -7.4783244132995605
    9. '  ' → logprob: -7.6033244132995605
    10. ',' → logprob: -7.6033244132995605

Token 152: ' deuxième' (ID: 51664)
  Prédit: ' second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' second' → logprob: -0.9234442710876465
    2. ' deuxième' → logprob: -1.0484442710876465
    3. 'de' → logprob: -2.2984442710876465
    4. 'second' → logprob: -2.7984442710876465
    5. ' plus' → logprob: -3.0484442710876465
    6. 'plus' → logprob: -4.9234442710876465
    7. '=' → logprob: -5.0484442710876465
    8. 'x' → logprob: -5.0484442710876465
    9. ' =' → logprob: -5.0484442710876465
    10. ' seconde' → logprob: -5.4234442710876465

Token 153: ' reçoit' (ID: 151051)
  Prédit: ' reçoit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reçoit' → logprob: -0.2712004482746124
    2. ',' → logprob: -2.77120041847229
    3. ' la' → logprob: -3.64620041847229
    4. 'rece' → logprob: -3.64620041847229
    5. ' ' → logprob: -3.77120041847229
    6. 're' → logprob: -3.89620041847229
    7. 'le' → logprob: -4.021200656890869
    8. '<|end|>' → logprob: -4.521200656890869
    9. ' le' → logprob: -4.646200656890869
    10. ' =' → logprob: -4.646200656890869

Token 154: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.18505024909973145
    2. 'le' → logprob: -2.3100502490997314
    3. ' l' → logprob: -3.1850502490997314
    4. ' ' → logprob: -3.9350502490997314
    5. ' la' → logprob: -5.810050010681152
    6. '_le' → logprob: -6.435050010681152
    7. ' ' → logprob: -6.560050010681152
    8. ' the' → logprob: -6.810050010681152
    9. 'l' → logprob: -7.810050010681152
    10. ',' → logprob: -7.810050010681152

Token 155: ' plus' (ID: 2932)
  Prédit: ' plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.18330730497837067
    2. 'plus' → logprob: -1.8083072900772095
    3. ' second' → logprob: -6.18330717086792
    4. ' deuxième' → logprob: -7.55830717086792
    5. ' ' → logprob: -8.058307647705078
    6. 'de' → logprob: -8.558307647705078
    7. 'second' → logprob: -8.808307647705078
    8. ' suivant' → logprob: -9.308307647705078
    9. 'dern' → logprob: -10.308307647705078
    10. '_plus' → logprob: -10.308307647705078

Token 156: ' grand' (ID: 6363)
  Prédit: ' grand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grand' → logprob: -0.20688794553279877
    2. 'grand' → logprob: -1.70688796043396
    3. ' petit' → logprob: -5.831887722015381
    4. ' ' → logprob: -7.081887722015381
    5. 'pet' → logprob: -7.456887722015381
    6. ' gros' → logprob: -7.956887722015381
    7. '_' → logprob: -8.456888198852539
    8. ' grands' → logprob: -9.456888198852539
    9. '_gr' → logprob: -9.706888198852539
    10. ' _' → logprob: -9.706888198852539

Token 157: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6867546439170837
    2. '_' → logprob: -2.0617547035217285
    3. 'A' → logprob: -2.5617547035217285
    4. ' nombre' → logprob: -3.0617547035217285
    5. 'nombre' → logprob: -3.3117547035217285
    6. ' ,' → logprob: -3.3117547035217285
    7. 'x' → logprob: -3.5617547035217285
    8. 's' → logprob: -3.6867547035217285
    9. ' A' → logprob: -4.3117547035217285
    10. '()' → logprob: -4.3117547035217285

Token 158: '   ' (ID: 271)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.004406263120472431
    2. ' y' → logprob: -6.129406452178955
    3. '   ' → logprob: -6.754406452178955
    4. '(y' → logprob: -7.754406452178955
    5. ',' → logprob: -8.254405975341797
    6. 'x' → logprob: -9.254405975341797
    7. '    
' → logprob: -9.629405975341797
    8. '(' → logprob: -9.879405975341797
    9. ',y' → logprob: -10.129405975341797
    10. 'a' → logprob: -10.254405975341797

Token 159: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.03376729413866997
    2. ' y' → logprob: -3.4087672233581543
    3. '(y' → logprob: -9.908767700195312
    4. 'x' → logprob: -10.158767700195312
    5. '   ' → logprob: -11.408767700195312
    6. '	y' → logprob: -12.283767700195312
    7. ' (' → logprob: -12.658767700195312
    8. '(' → logprob: -12.783767700195312
    9. 'a' → logprob: -12.908767700195312
    10. '    
' → logprob: -13.158767700195312

Token 160: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000387535837944597
    2. ',x' → logprob: -7.875387668609619
    3. 'x' → logprob: -12.500387191772461
    4. ' ,' → logprob: -13.500387191772461
    5. ',y' → logprob: -13.750387191772461
    6. '=' → logprob: -14.625387191772461
    7. ',
' → logprob: -14.875387191772461
    8. ',\
' → logprob: -16.37538719177246
    9. ',v' → logprob: -16.50038719177246
    10. ',

' → logprob: -17.00038719177246

Token 161: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.38687190413475037
    2. ' x' → logprob: -1.1368719339370728
    3. ' ' → logprob: -14.011872291564941
    4. '	x' → logprob: -16.511871337890625
    5. ' ' → logprob: -16.761871337890625
    6. '_x' → logprob: -18.511871337890625
    7. '  ' → logprob: -19.261871337890625
    8. 's' → logprob: -19.386871337890625
    9. 'z' → logprob: -19.761871337890625
    10. '=' → logprob: -19.886871337890625

Token 162: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4288228750228882
    2. '=' → logprob: -1.0538228750228882
    3. ',' → logprob: -9.05382251739502
    4. ' ' → logprob: -13.92882251739502
    5. ')' → logprob: -14.05382251739502
    6. ' =
' → logprob: -14.30382251739502
    7. ' =
' → logprob: -14.67882251739502
    8. '=

' → logprob: -14.80382251739502
    9. ' =)' → logprob: -14.80382251739502
    10. '＝' → logprob: -14.92882251739502

Token 163: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.4740773141384125
    2. ' A' → logprob: -0.9740773439407349
    3. ' ' → logprob: -15.849077224731445
    4. '	A' → logprob: -15.849077224731445
    5. '*A' → logprob: -17.349077224731445
    6. '(A' → logprob: -17.849077224731445
    7. '=A' → logprob: -18.349077224731445
    8. '   ' → logprob: -18.474077224731445
    9. '  ' → logprob: -18.974077224731445
    10. ' ' → logprob: -19.474077224731445

Token 164: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.35857826471328735
    2. '<|end|>' → logprob: -1.2335782051086426
    3. '[:]' → logprob: -5.233578205108643
    4. '[:' → logprob: -5.858578205108643
    5. '
' → logprob: -7.483578205108643
    6. '10' → logprob: -7.858578205108643
    7. ' ' → logprob: -8.4835786819458
    8. '0' → logprob: -8.6085786819458
    9. '<|end|>' → logprob: -8.6085786819458
    10. ')' → logprob: -10.2335786819458

Token 165: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.006618265528231859
    2. '   ' → logprob: -5.881618499755859
    3. '\n' → logprob: -6.381618499755859
    4. '<|end|>' → logprob: -7.131618499755859
    5. '    
' → logprob: -7.256618499755859
    6. '  
' → logprob: -8.88161849975586
    7. '
' → logprob: -9.00661849975586
    8. 'print' → logprob: -9.25661849975586
    9. ' 
' → logprob: -9.63161849975586
    10. ')' → logprob: -10.38161849975586

Token 166: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18970780074596405
    2. 'print' → logprob: -1.9397077560424805
    3. '   ' → logprob: -4.3147077560424805
    4. 'if' → logprob: -5.0647077560424805
    5. '    
' → logprob: -5.5647077560424805
    6. '
' → logprob: -6.9397077560424805
    7. '  
' → logprob: -7.4397077560424805
    8. 'x' → logprob: -7.5647077560424805
    9. ' print' → logprob: -7.5647077560424805
    10. '#' (adapté à ' #') → logprob: -7.5647077560424805

Token 167: ' Calcul' (ID: 57243)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.010131431743502617
    2. ' print' → logprob: -4.635131359100342
    3. 'if' → logprob: -8.3851318359375
    4. '
' → logprob: -10.2601318359375
    5. '#' → logprob: -10.3851318359375
    6. 'prin' → logprob: -10.7601318359375
    7. 'pr' → logprob: -11.3851318359375
    8. ' if' → logprob: -11.3851318359375
    9. '   ' → logprob: -11.5101318359375
    10. 'for' → logprob: -12.0101318359375

Token 168: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.010365179739892483
    2. '   ' → logprob: -6.260365009307861
    3. 'print' → logprob: -6.510365009307861
    4. 'r' → logprob: -6.760365009307861
    5. ' =' → logprob: -7.010365009307861
    6. '#' → logprob: -7.010365009307861
    7. '=' → logprob: -7.135365009307861
    8. 'result' → logprob: -7.135365009307861
    9. 'ate' → logprob: -7.135365009307861
    10. 'x' → logprob: -8.26036548614502

Token 169: ' et' (ID: 859)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.39114606380462646
    2. ' x' → logprob: -1.3911460638046265
    3. ' y' → logprob: -3.891146183013916
    4. 'x' → logprob: -4.016146183013916
    5. ' =' → logprob: -4.391146183013916
    6. '  ' → logprob: -5.266146183013916
    7. ' abs' → logprob: -5.641146183013916
    8. '_' → logprob: -6.391146183013916
    9. 'print' → logprob: -6.516146183013916
    10. ' l' → logprob: -6.516146183013916

Token 170: ' afficher' (ID: 146524)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.34863927960395813
    2. 'print' → logprob: -1.2236392498016357
    3. ' prin' → logprob: -10.098639488220215
    4. 'prin' → logprob: -10.473639488220215
    5. '   ' → logprob: -10.598639488220215
    6. '_print' → logprob: -11.098639488220215
    7. 'pr' → logprob: -11.098639488220215
    8. '#' → logprob: -11.598639488220215
    9. '    ' → logprob: -11.598639488220215
    10. ' #' → logprob: -11.973639488220215

Token 171: ' la' (ID: 557)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.43259647488594055
    2. ' x' → logprob: -1.1825964450836182
    3. '(x' → logprob: -4.057596683502197
    4. '(' → logprob: -4.182596683502197
    5. ' ' → logprob: -6.182596683502197
    6. ' (' → logprob: -6.182596683502197
    7. '"' → logprob: -6.307596683502197
    8. ' y' → logprob: -6.557596683502197
    9. ' abs' → logprob: -6.557596683502197
    10. ''' → logprob: -7.307596683502197

Token 172: ' différence' (ID: 79196)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.1940644979476929
    2. ' y' → logprob: -1.3190644979476929
    3. ' ' → logprob: -2.5690646171569824
    4. 'x' → logprob: -2.6940646171569824
    5. ' abs' → logprob: -3.1940646171569824
    6. 's' → logprob: -3.3190646171569824
    7. 'difference' → logprob: -3.4440646171569824
    8. ' max' → logprob: -3.5690646171569824
    9. 'abs' → logprob: -3.5690646171569824
    10. ' difference' → logprob: -3.6940646171569824

Token 173: ' entre' (ID: 3853)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.17954310774803162
    2. ' x' → logprob: -2.5545430183410645
    3. '(x' → logprob: -3.5545430183410645
    4. ',' → logprob: -3.8045430183410645
    5. '   ' → logprob: -3.9295430183410645
    6. 'print' → logprob: -5.3045430183410645
    7. ' =' → logprob: -5.8045430183410645
    8. ' ' → logprob: -6.3045430183410645
    9. ' between' → logprob: -6.8045430183410645
    10. '(' → logprob: -6.8045430183410645

Token 174: ' les' (ID: 1341)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.12694396078586578
    2. ' x' → logprob: -2.126944065093994
    3. '(x' → logprob: -11.626943588256836
    4. ' ' → logprob: -12.876943588256836
    5. ' y' → logprob: -13.751943588256836
    6. 'y' → logprob: -14.001943588256836
    7. '	x' → logprob: -14.376943588256836
    8. ' ' → logprob: -14.751943588256836
    9. '(' → logprob: -15.751943588256836
    10. ' la' → logprob: -15.751943588256836

Token 175: ' deux' (ID: 10301)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.024165306240320206
    2. ' x' → logprob: -3.774165391921997
    3. 'de' → logprob: -7.524165153503418
    4. ' deux' → logprob: -8.649165153503418
    5. 'y' → logprob: -9.399165153503418
    6. ' ' → logprob: -10.274165153503418
    7. ' y' → logprob: -10.524165153503418
    8. '2' → logprob: -11.649165153503418
    9. '	x' → logprob: -11.649165153503418
    10. ' ' → logprob: -11.774165153503418

Token 176: ' (' (ID: 350)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.1301945000886917
    2. ' ' → logprob: -3.8801944255828857
    3. 'x' → logprob: -4.255194664001465
    4. '-' → logprob: -4.755194664001465
    5. '   ' → logprob: -4.755194664001465
    6. ' y' → logprob: -5.130194664001465
    7. ' éléments' → logprob: -5.130194664001465
    8. ' x' → logprob: -5.130194664001465
    9. '_' → logprob: -5.255194664001465
    10. ',' → logprob: -5.255194664001465

Token 177: 'é' (ID: 377)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07449361681938171
    2. ' x' → logprob: -2.699493646621704
    3. ')' → logprob: -5.949493408203125
    4. ' )' → logprob: -6.574493408203125
    5. ' ' → logprob: -8.574493408203125
    6. '   ' → logprob: -9.074493408203125
    7. ')x' → logprob: -9.449493408203125
    8. ',' → logprob: -10.199493408203125
    9. ' ' → logprob: -10.449493408203125
    10. '(x' → logprob: -11.449493408203125

Token 178: 'vent' (ID: 818)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8951503038406372
    2. ')' → logprob: -1.1451503038406372
    3. '-' → logprob: -1.8951503038406372
    4. 'c' → logprob: -3.6451501846313477
    5. 'space' → logprob: -3.7701501846313477
    6. '   ' → logprob: -4.520150184631348
    7. '=' → logprob: -4.520150184631348
    8. '+' → logprob: -5.020150184631348
    9. 'g' → logprob: -5.270150184631348
    10. ' ' → logprob: -5.395150184631348

Token 179: 'uellement' (ID: 36026)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.1268103122711182
    2. 'x' → logprob: -1.2518103122711182
    3. ')' → logprob: -2.001810312271118
    4. ' x' → logprob: -2.251810312271118
    5. '   ' → logprob: -3.626810312271118
    6. 'y' → logprob: -3.876810312271118
    7. ' ' → logprob: -4.126810073852539
    8. ' -' → logprob: -4.376810073852539
    9. ' y' → logprob: -4.626810073852539
    10. 'abs' → logprob: -4.626810073852539

Token 180: ' un' (ID: 537)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6299625039100647
    2. ' x' → logprob: -0.8799625039100647
    3. ')' → logprob: -3.75496244430542
    4. ' )' → logprob: -4.50496244430542
    5. ' abs' → logprob: -4.62996244430542
    6. ' ' → logprob: -6.25496244430542
    7. 'abs' → logprob: -6.75496244430542
    8. ' y' → logprob: -7.12996244430542
    9. ' ' → logprob: -7.12996244430542
    10. 'y' → logprob: -7.50496244430542

Token 181: ' nombre' (ID: 9733)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4947134256362915
    2. 'x' → logprob: -1.7447134256362915
    3. 'es' → logprob: -1.9947134256362915
    4. ' x' → logprob: -2.619713306427002
    5. '+' → logprob: -2.744713306427002
    6. ' ' → logprob: -2.744713306427002
    7. '-' → logprob: -3.119713306427002
    8. ' espace' → logprob: -3.119713306427002
    9. 'e' → logprob: -3.369713306427002
    10. ' )' → logprob: -3.494713306427002

Token 182: ' positif' (ID: 89008)
  Prédit: ' nég'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nég' → logprob: -0.09101808816194534
    2. ' positif' → logprob: -3.3410181999206543
    3. ' ' → logprob: -3.9660181999206543
    4. ' negatif' → logprob: -4.591018199920654
    5. ' abs' → logprob: -5.591018199920654
    6. ' positive' → logprob: -6.091018199920654
    7. ')' → logprob: -6.216018199920654
    8. ' negative' → logprob: -6.466018199920654
    9. ' )' → logprob: -6.716018199920654
    10. ' entier' → logprob: -6.841018199920654

Token 183: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05388830974698067
    2. ' )' → logprob: -3.1788883209228516
    3. ',' → logprob: -5.678888320922852
    4. '   ' → logprob: -6.178888320922852
    5. ' ou' → logprob: -6.428888320922852
    6. ' ' → logprob: -6.428888320922852
    7. ' et' → logprob: -7.178888320922852
    8. ' or' → logprob: -8.428888320922852
    9. '  ' → logprob: -8.428888320922852
    10. '+' → logprob: -9.178888320922852

Token 184: '   ' (ID: 271)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5698298215866089
    2. 'x' → logprob: -1.3198298215866089
    3. ' abs' → logprob: -2.0698299407958984
    4. 'abs' → logprob: -3.9448299407958984
    5. '   ' → logprob: -4.694829940795898
    6. ' ' → logprob: -5.569829940795898
    7. 'end' → logprob: -5.819829940795898
    8. ' y' → logprob: -6.444829940795898
    9. ' end' → logprob: -6.819829940795898
    10. '  ' → logprob: -7.944829940795898

Token 185: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3742639720439911
    2. ' print' → logprob: -1.4992640018463135
    3. ' x' → logprob: -2.8742640018463135
    4. 'x' → logprob: -4.249263763427734
    5. ' y' → logprob: -5.124263763427734
    6. ' ' → logprob: -5.374263763427734
    7. ' abs' → logprob: -5.999263763427734
    8. '   ' → logprob: -5.999263763427734
    9. 'abs' → logprob: -7.499263763427734
    10. ' end' → logprob: -7.624263763427734

Token 186: ' ce' (ID: 2357)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04305228590965271
    2. ' print' → logprob: -3.1680521965026855
    3. '   ' → logprob: -10.418052673339844
    4. ' 
' → logprob: -12.543052673339844
    5. 'x' → logprob: -12.668052673339844
    6. 'abs' → logprob: -12.668052673339844
    7. ')' → logprob: -12.918052673339844
    8. ' ' → logprob: -13.168052673339844
    9. 'end' → logprob: -13.293052673339844
    10. ' y' → logprob: -13.543052673339844

Token 187: ' sera' (ID: 15511)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.053383488208055496
    2. ' print' → logprob: -4.3033833503723145
    3. '+' → logprob: -4.6783833503723145
    4. ')' → logprob: -5.0533833503723145
    5. '=' → logprob: -5.1783833503723145
    6. 'abs' → logprob: -5.5533833503723145
    7. '#' → logprob: -6.0533833503723145
    8. ''' → logprob: -6.5533833503723145
    9. 'x' → logprob: -6.6783833503723145
    10. ' ' → logprob: -6.6783833503723145

Token 188: ' le' (ID: 505)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.07242711633443832
    2. ' abs' → logprob: -3.1974270343780518
    3. 'x' → logprob: -3.8224270343780518
    4. ' ' → logprob: -5.697427272796631
    5. ' y' → logprob: -6.197427272796631
    6. 'abs' → logprob: -7.197427272796631
    7. '   ' → logprob: -8.197426795959473
    8. ' la' → logprob: -9.197426795959473
    9. '1' → logprob: -9.197426795959473
    10. ' (' → logprob: -9.697426795959473

Token 189: ' "' (ID: 392)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.953410804271698
    2. 'x' → logprob: -1.0784108638763428
    3. ' plus' → logprob: -2.5784108638763428
    4. ' max' → logprob: -3.3284108638763428
    5. '"' → logprob: -3.8284108638763428
    6. ' résultat' → logprob: -4.203410625457764
    7. ' maximum' → logprob: -4.203410625457764
    8. ' abs' → logprob: -4.328410625457764
    9. ' ' → logprob: -4.453410625457764
    10. 'max' → logprob: -4.953410625457764

Token 190: 'score' (ID: 21200)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.4650319814682007
    2. ' résultat' → logprob: -2.0900321006774902
    3. ' é' → logprob: -2.2150321006774902
    4. 'rés' → logprob: -2.5900321006774902
    5. 'max' → logprob: -2.7150321006774902
    6. 'plus' → logprob: -2.8400321006774902
    7. 'é' → logprob: -3.0900321006774902
    8. 'éc' → logprob: -3.2150321006774902
    9. 'diff' → logprob: -3.3400321006774902
    10. 'result' → logprob: -3.3400321006774902

Token 191: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.227021336555481
    2. ')' → logprob: -1.477021336555481
    3. ' "' → logprob: -1.977021336555481
    4. ' )' → logprob: -2.2270212173461914
    5. ' ")' → logprob: -3.3520212173461914
    6. 'diff' → logprob: -3.3520212173461914
    7. ' final' → logprob: -3.4770212173461914
    8. '   ' → logprob: -3.8520212173461914
    9. '")' → logprob: -4.102021217346191
    10. ' de' → logprob: -4.477021217346191

Token 192: ' maximal' (ID: 65414)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5338247418403625
    2. 'print' → logprob: -1.7838246822357178
    3. ')' → logprob: -3.0338246822357178
    4. ',' → logprob: -3.5338246822357178
    5. ' ' → logprob: -3.7838246822357178
    6. 'x' → logprob: -4.033824920654297
    7. '(x' → logprob: -4.158824920654297
    8. ':' → logprob: -4.408824920654297
    9. '()' → logprob: -4.533824920654297
    10. '(' → logprob: -4.783824920654297

Token 193: ' possible' (ID: 4149)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07830122113227844
    2. '   ' → logprob: -3.703301191329956
    3. ' print' → logprob: -3.828301191329956
    4. ',' → logprob: -4.328301429748535
    5. '
' → logprob: -5.203301429748535
    6. ')' → logprob: -5.203301429748535
    7. ',
' → logprob: -6.453301429748535
    8. ')
' → logprob: -7.203301429748535
    9. 'x' → logprob: -7.703301429748535
    10. '    
' → logprob: -8.078301429748535

Token 194: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.007981350645422935
    2. '
' → logprob: -5.507981300354004
    3. ' print' → logprob: -6.507981300354004
    4. ')
' → logprob: -7.382981300354004
    5. ',' → logprob: -7.507981300354004
    6. ',
' → logprob: -7.632981300354004
    7. ')' → logprob: -7.632981300354004
    8. '   ' → logprob: -8.882981300354004
    9. '.
' → logprob: -10.757981300354004
    10. '.' → logprob: -10.757981300354004

Token 195: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.018928589299321175
    2. '   ' → logprob: -4.518928527832031
    3. '
' → logprob: -4.893928527832031
    4. '```' → logprob: -8.768928527832031
    5. ' print' → logprob: -9.018928527832031
    6. '    
' → logprob: -10.393928527832031
    7. '\n' → logprob: -10.768928527832031
    8. '``' → logprob: -11.893928527832031
    9. '
' → logprob: -12.393928527832031
    10. ')
' → logprob: -12.643928527832031

Token 196: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0020913768094033003
    2. ' print' → logprob: -6.252091407775879
    3. '   ' → logprob: -8.877091407775879
    4. '
' → logprob: -10.752091407775879
    5. '```' → logprob: -13.877091407775879
    6. '    
' → logprob: -15.002091407775879
    7. ' 
' → logprob: -15.627091407775879
    8. '
' → logprob: -16.252090454101562
    9. 'pr' → logprob: -17.002090454101562
    10. '	print' → logprob: -17.252090454101562

Token 197: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.07165054976940155
    2. '(' → logprob: -3.196650505065918
    3. '(abs' → logprob: -3.571650505065918
    4. ' (' → logprob: -9.321650505065918
    5. '()' → logprob: -11.071650505065918
    6. 'abs' → logprob: -11.946650505065918
    7. '(max' → logprob: -11.946650505065918
    8. 'x' → logprob: -12.321650505065918
    9. '(
' → logprob: -12.571650505065918
    10. ' abs' → logprob: -12.696650505065918

Token 198: '-y' (ID: 18102)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4741790294647217
    2. '-' → logprob: -0.9741790294647217
    3. ')' → logprob: -10.2241792678833
    4. '-y' → logprob: -10.2241792678833
    5. ' ' → logprob: -10.5991792678833
    6. ' y' → logprob: -13.4741792678833
    7. '   ' → logprob: -14.4741792678833
    8. ' ' → logprob: -14.4741792678833
    9. ' -
' → logprob: -14.8491792678833
    10. 'y' → logprob: -14.8491792678833

Token 199: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011427151912357658
    2. '))' → logprob: -9.125114440917969
    3. ' )' → logprob: -12.500114440917969
    4. '+' → logprob: -14.375114440917969
    5. ')
' → logprob: -15.000114440917969
    6. ')))' → logprob: -15.500114440917969
    7. ')`' → logprob: -15.875114440917969
    8. '')' → logprob: -16.62511444091797
    9. ')}' → logprob: -16.87511444091797
    10. ')")' → logprob: -17.00011444091797

Token 200: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0015527134528383613
    2. 'elif' → logprob: -6.751552581787109
    3. ' else' → logprob: -8.00155258178711
    4. '```' → logprob: -11.12655258178711
    5. '
' → logprob: -11.37655258178711
    6. '<|end|>' → logprob: -12.37655258178711
    7. 'e' → logprob: -12.87655258178711
    8. ')' → logprob: -12.87655258178711
    9. '    
' → logprob: -13.12655258178711
    10. '#else' → logprob: -13.25155258178711

Token 201: ' #' (ID: 1069)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.00031985383247956634
    2. 'elif' → logprob: -8.875319480895996
    3. 'exit' → logprob: -9.125319480895996
    4. ' else' → logprob: -10.000319480895996
    5. '
' → logprob: -10.750319480895996
    6. '    
' → logprob: -13.500319480895996
    7. '```' → logprob: -14.125319480895996
    8. '#else' → logprob: -14.500319480895996
    9. '   ' → logprob: -14.625319480895996
    10. '  
' → logprob: -15.125319480895996

Token 202: ' Aff' (ID: 13741)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.3882072865962982
    2. 'else' → logprob: -1.1382073163986206
    3. ' exit' → logprob: -7.01320743560791
    4. 'elif' → logprob: -8.01320743560791
    5. 'quit' → logprob: -9.76320743560791
    6. ' else' → logprob: -10.38820743560791
    7. 'return' → logprob: -12.38820743560791
    8. '	exit' → logprob: -12.63820743560791
    9. '```' → logprob: -13.01320743560791
    10. '   ' → logprob: -13.13820743560791

Token 203: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.13208608329296112
    2. 'erm' → logprob: -3.8820860385894775
    3. 'f' → logprob: -4.007086277008057
    4. 'ort' → logprob: -4.007086277008057
    5. 'aire' → logprob: -4.007086277008057
    6. 'er' → logprob: -4.507086277008057
    7. '   ' → logprob: -5.382086277008057
    8. '#' → logprob: -5.382086277008057
    9. 'ichage' → logprob: -5.382086277008057
    10. 'ich' → logprob: -5.632086277008057

Token 204: ' x' (ID: 1215)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.011157349683344364
    2. '()' → logprob: -5.886157512664795
    3. '(exit' → logprob: -6.136157512664795
    4. ' exit' → logprob: -6.261157512664795
    5. 'quit' → logprob: -6.761157512664795
    6. 'else' → logprob: -7.511157512664795
    7. 'return' → logprob: -7.761157512664795
    8. ' ' → logprob: -7.886157512664795
    9. '(' → logprob: -8.261157035827637
    10. '("")' → logprob: -8.261157035827637

Token 205: ' et' (ID: 859)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 206: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0181842390447855
    2. ' y' → logprob: -4.018184185028076
    3. 'x' → logprob: -10.643184661865234
    4. ' ' → logprob: -12.518184661865234
    5. ''y' → logprob: -13.018184661865234
    6. '  ' → logprob: -14.393184661865234
    7. '"' → logprob: -14.393184661865234
    8. ''' → logprob: -14.643184661865234
    9. '	y' → logprob: -14.768184661865234
    10. '   ' → logprob: -14.768184661865234

Token 207: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5305429100990295
    2. '
' → logprob: -1.1555428504943848
    3. ',' → logprob: -2.9055428504943848
    4. 'print' → logprob: -3.6555428504943848
    5. '    
' → logprob: -4.655542850494385
    6. '\n' → logprob: -6.030542850494385
    7. '  
' → logprob: -6.905542850494385
    8. '\' → logprob: -7.030542850494385
    9. ',
' → logprob: -7.780542850494385
    10. '   
' → logprob: -7.905542850494385

Token 208: ' qui' (ID: 2780)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -1.161407470703125
    2. 'x' → logprob: -1.786407470703125
    3. 'print' → logprob: -1.786407470703125
    4. ')' → logprob: -2.661407470703125
    5. ' x' → logprob: -2.786407470703125
    6. '   ' → logprob: -2.911407470703125
    7. ' end' → logprob: -3.161407470703125
    8. ' ' → logprob: -3.536407470703125
    9. 'sep' → logprob: -3.536407470703125
    10. ' )' → logprob: -4.536407470703125

Token 209: ' seront' (ID: 35024)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -1.5110307931900024
    2. ' sont' → logprob: -1.6360307931900024
    3. ' for' → logprob: -1.7610307931900024
    4. 's' → logprob: -2.511030673980713
    5. ',' → logprob: -2.761030673980713
    6. 'for' → logprob: -3.261030673980713
    7. ' ' → logprob: -3.386030673980713
    8. 'ont' → logprob: -3.636030673980713
    9. ' print' → logprob: -3.636030673980713
    10. 'print' → logprob: -3.761030673980713

Token 210: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.4837172031402588
    2. 'les' → logprob: -1.4837172031402588
    3. 'le' → logprob: -3.608717203140259
    4. ' la' → logprob: -3.983717203140259
    5. ',' → logprob: -4.23371696472168
    6. 'print' → logprob: -4.60871696472168
    7. 'l' → logprob: -4.60871696472168
    8. ' sur' → logprob: -4.73371696472168
    9. ' utilisés' → logprob: -5.35871696472168
    10. ' the' → logprob: -5.48371696472168

Token 211: ' termes' (ID: 72480)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.5094545483589172
    2. 'val' → logprob: -2.2594544887542725
    3. ' plus' → logprob: -2.5094544887542725
    4. 'élé' → logprob: -2.7594544887542725
    5. 'plus' → logprob: -2.7594544887542725
    6. 'me' → logprob: -4.384454727172852
    7. 'end' → logprob: -4.509454727172852
    8. ' meilleurs' → logprob: -4.759454727172852
    9. ' nombres' → logprob: -5.009454727172852
    10. ' valeurs' → logprob: -5.134454727172852

Token 212: ' du' (ID: 1462)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5387816429138184
    2. ',' → logprob: -2.2887816429138184
    3. ' du' → logprob: -2.9137816429138184
    4. 'x' → logprob: -3.1637816429138184
    5. 'de' → logprob: -3.2887816429138184
    6. ' x' → logprob: -3.5387816429138184
    7. ' suivants' → logprob: -3.6637816429138184
    8. '   ' → logprob: -4.038781642913818
    9. ' sépar' → logprob: -4.288781642913818
    10. ' ' → logprob: -4.413781642913818

Token 213: ' premier' (ID: 15506)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.6253455877304077
    2. 'score' → logprob: -1.6253455877304077
    3. 'max' → logprob: -2.6253457069396973
    4. 'interval' → logprob: -3.0003457069396973
    5. 'diff' → logprob: -3.8753457069396973
    6. 'tuple' → logprob: -4.000345706939697
    7. ' plus' → logprob: -4.500345706939697
    8. 'rés' → logprob: -4.625345706939697
    9. 'table' → logprob: -4.750345706939697
    10. '#' → logprob: -4.750345706939697

Token 214: ' (' (ID: 350)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2387504577636719
    2. 'et' → logprob: -1.6137504577636719
    3. 'print' → logprob: -2.738750457763672
    4. 'plus' → logprob: -3.363750457763672
    5. 'interval' → logprob: -3.363750457763672
    6. 'diff' → logprob: -3.613750457763672
    7. 'ensemble' → logprob: -3.738750457763672
    8. ' 
' → logprob: -3.863750457763672
    9. 'é' → logprob: -3.863750457763672
    10. ' et' → logprob: -3.863750457763672

Token 215: 'et' (ID: 292)
  Prédit: 'et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.0684979110956192
    2. ')' → logprob: -3.693497896194458
    3. ' et' → logprob: -3.943497896194458
    4. 'ou' → logprob: -6.193498134613037
    5. 'print' → logprob: -6.193498134613037
    6. 'ligne' → logprob: -6.318498134613037
    7. 'plus' → logprob: -6.568498134613037
    8. 'x' → logprob: -6.568498134613037
    9. 'de' → logprob: -6.693498134613037
    10. 'e' → logprob: -6.943498134613037

Token 216: ' unique' (ID: 5746)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.47573405504226685
    2. ' seul' → logprob: -1.475733995437622
    3. '#' → logprob: -2.725733995437622
    4. ' unique' → logprob: -2.850733995437622
    5. 'unique' → logprob: -4.600734233856201
    6. ' seuls' → logprob: -4.975734233856201
    7. ' #' → logprob: -5.350734233856201
    8. ' uniquement' → logprob: -6.600734233856201
    9. ' seulement' → logprob: -6.850734233856201
    10. ' only' → logprob: -6.975734233856201

Token 217: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24311238527297974
    2. ' )' → logprob: -2.118112325668335
    3. ' couple' → logprob: -3.743112325668335
    4. ' sous' → logprob: -3.868112325668335
    5. 'interval' → logprob: -4.118112564086914
    6. 's' → logprob: -4.868112564086914
    7. ' interval' → logprob: -5.743112564086914
    8. ' ' → logprob: -5.743112564086914
    9. 'é' → logprob: -6.493112564086914
    10. ' trip' → logprob: -6.618112564086914

Token 218: ' calcul' (ID: 7559)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6623227000236511
    2. ' couple' → logprob: -2.287322759628296
    3. 'pair' → logprob: -2.662322759628296
    4. 'diff' → logprob: -3.037322759628296
    5. 'trip' → logprob: -3.412322759628296
    6. '
' → logprob: -3.662322759628296
    7. 'interval' → logprob: -3.787322759628296
    8. 'tuple' → logprob: -3.912322759628296
    9. ' sous' → logprob: -4.412322521209717
    10. ' 
' → logprob: -4.412322521209717

Token 219: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.4877042770385742
    2. '   ' → logprob: -1.4877042770385742
    3. ',' → logprob: -2.237704277038574
    4. '    
' → logprob: -2.487704277038574
    5. ')' → logprob: -2.612704277038574
    6. '  ' → logprob: -2.987704277038574
    7. ' de' → logprob: -3.612704277038574
    8. '
' → logprob: -3.612704277038574
    9. ' ' → logprob: -3.862704277038574
    10. 'ur' → logprob: -3.987704277038574

Token 220: ' où' (ID: 15113)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.5351535081863403
    2. '   ' → logprob: -1.4101535081863403
    3. ')' → logprob: -3.535153388977051
    4. '"\' → logprob: -3.660153388977051
    5. ' end' → logprob: -4.035153388977051
    6. 'x' → logprob: -4.035153388977051
    7. 'sep' → logprob: -4.285153388977051
    8. ')
' → logprob: -4.410153388977051
    9. 'print' → logprob: -4.660153388977051
    10. ' ' → logprob: -5.160153388977051

Token 221: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.12028028070926666
    2. 'y' → logprob: -3.2452802658081055
    3. ' x' → logprob: -3.3702802658081055
    4. 'print' → logprob: -3.7452802658081055
    5. ' y' → logprob: -4.7452802658081055
    6. 'le' → logprob: -6.1202802658081055
    7. 'l' → logprob: -6.6202802658081055
    8. '(x' → logprob: -7.2452802658081055
    9. '#' → logprob: -7.6202802658081055
    10. ' le' → logprob: -7.9952802658081055

Token 222: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16333726048469543
    2. ' -' → logprob: -2.913337230682373
    3. '>' → logprob: -3.038337230682373
    4. ',' → logprob: -3.413337230682373
    5. ' >' → logprob: -5.788337230682373
    6. '>=' → logprob: -6.038337230682373
    7. '+' → logprob: -6.163337230682373
    8. ' ' → logprob: -6.538337230682373
    9. ' ,' → logprob: -7.163337230682373
    10. ')' → logprob: -7.413337230682373

Token 223: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.16026261448860168
    2. ' y' → logprob: -1.9102625846862793
    3. ' ' → logprob: -10.660263061523438
    4. 'x' → logprob: -12.285263061523438
    5. '"' → logprob: -13.285263061523438
    6. '<|end|>' → logprob: -13.285263061523438
    7. ' ' → logprob: -13.660263061523438
    8. '  ' → logprob: -13.660263061523438
    9. ' x' → logprob: -14.410263061523438
    10. ')' → logprob: -14.535263061523438

Token 224: ' sera' (ID: 15511)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3598632514476776
    2. '   ' → logprob: -1.48486328125
    3. '<|end|>' → logprob: -3.85986328125
    4. '
' → logprob: -4.23486328125
    5. 'else' → logprob: -4.60986328125
    6. 'print' → logprob: -5.10986328125
    7. ',' → logprob: -5.48486328125
    8. ')
' → logprob: -5.48486328125
    9. '.' → logprob: -5.60986328125
    10. ' )' → logprob: -6.10986328125

Token 225: ' le' (ID: 505)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.4625482559204102
    2. 'l' → logprob: -1.7125482559204102
    3. 'le' → logprob: -2.08754825592041
    4. ' la' → logprob: -2.46254825592041
    5. ')' → logprob: -3.21254825592041
    6. '"' → logprob: -3.21254825592041
    7. ' x' → logprob: -3.33754825592041
    8. 'x' → logprob: -3.33754825592041
    9. 'la' → logprob: -3.46254825592041
    10. ' ' → logprob: -3.58754825592041

Token 226: ' résultat' (ID: 62556)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.6030309796333313
    2. ' score' → logprob: -1.6030309200286865
    3. 'rés' → logprob: -3.1030309200286865
    4. 'max' → logprob: -3.3530309200286865
    5. ' maximum' → logprob: -3.3530309200286865
    6. 'maximum' → logprob: -3.3530309200286865
    7. ' résultat' → logprob: -3.3530309200286865
    8. 'result' → logprob: -3.7280309200286865
    9. '"' → logprob: -5.353031158447266
    10. ' max' → logprob: -5.478031158447266

Token 227: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5985272526741028
    2. 'else' → logprob: -0.8485272526741028
    3. '
' → logprob: -4.098527431488037
    4. '    
' → logprob: -6.348527431488037
    5. ' else' → logprob: -6.598527431488037
    6. 'elif' → logprob: -6.723527431488037
    7. ')' → logprob: -7.848527431488037
    8. ',' → logprob: -8.723526954650879
    9. '<|end|>' → logprob: -8.848526954650879
    10. 'exit' → logprob: -8.973526954650879

Token 228: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5129247307777405
    2. '   ' → logprob: -1.0129246711730957
    3. '
' → logprob: -4.637924671173096
    4. '    
' → logprob: -4.762924671173096
    5. 'print' → logprob: -4.887924671173096
    6. 'elif' → logprob: -5.637924671173096
    7. ' else' → logprob: -5.887924671173096
    8. 'x' → logprob: -6.262924671173096
    9. '```' → logprob: -6.637924671173096
    10. 'exit' → logprob: -7.012924671173096

Token 229: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.018375743180513382
    2. '   ' → logprob: -4.018375873565674
    3. ' print' → logprob: -8.643375396728516
    4. '
' → logprob: -10.893375396728516
    5. 'else' → logprob: -11.018375396728516
    6. '```' → logprob: -12.143375396728516
    7. ' ' → logprob: -12.893375396728516
    8. '    
' → logprob: -12.893375396728516
    9. '  ' → logprob: -13.768375396728516
    10. '	print' → logprob: -14.018375396728516

Token 230: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0002795703476294875
    2. '(' → logprob: -8.375279426574707
    3. 'x' → logprob: -10.625279426574707
    4. '(f' → logprob: -11.125279426574707
    5. '(y' → logprob: -12.500279426574707
    6. ' (' → logprob: -12.875279426574707
    7. '((' → logprob: -13.000279426574707
    8. '(
' → logprob: -14.750279426574707
    9. '()' → logprob: -15.250279426574707
    10. '("' → logprob: -15.625279426574707

Token 231: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02087351307272911
    2. ',y' → logprob: -4.145873546600342
    3. ' ,' → logprob: -5.645873546600342
    4. ')' → logprob: -6.895873546600342
    5. ',x' → logprob: -9.145873069763184
    6. ' y' → logprob: -9.520873069763184
    7. ',end' → logprob: -9.770873069763184
    8. 'y' → logprob: -11.520873069763184
    9. ' ' → logprob: -11.770873069763184
    10. ',
' → logprob: -12.020873069763184

Token 232: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00033546582562848926
    2. ' y' → logprob: -8.000335693359375
    3. 'x' → logprob: -18.125335693359375
    4. ' ' → logprob: -18.250335693359375
    5. ')' → logprob: -18.500335693359375
    6. ''y' → logprob: -19.125335693359375
    7. '   ' → logprob: -19.375335693359375
    8. '	y' → logprob: -19.375335693359375
    9. ',y' → logprob: -19.750335693359375
    10. ',' → logprob: -19.750335693359375

Token 233: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.981667537620524e-06
    2. ')
' → logprob: -13.750001907348633
    3. ' )' → logprob: -14.375001907348633
    4. '')' → logprob: -16.000001907348633
    5. '))' → logprob: -17.375001907348633
    6. '")' → logprob: -17.750001907348633
    7. ')#' → logprob: -17.750001907348633
    8. '`)' → logprob: -18.500001907348633
    9. ')`' → logprob: -19.000001907348633
    10. ')")' → logprob: -19.000001907348633

Token 234: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.001156770158559084
    2. 'elif' → logprob: -7.001156806945801
    3. ' else' → logprob: -8.5011568069458
    4. '```' → logprob: -10.5011568069458
    5. '\n' → logprob: -13.1261568069458
    6. '#else' → logprob: -13.1261568069458
    7. '<|end|>' → logprob: -13.5011568069458
    8. ')' → logprob: -13.8761568069458
    9. '
' → logprob: -13.8761568069458
    10. '#' → logprob: -14.0011568069458

Token 235: ' #' (ID: 1069)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.00044926130794920027
    2. 'elif' → logprob: -7.875449180603027
    3. 'exit' → logprob: -9.875449180603027
    4. ' else' → logprob: -11.000449180603027
    5. '```' → logprob: -15.375449180603027
    6. '#else' → logprob: -15.625449180603027
    7. '#' (adapté à ' #') → logprob: -16.375450134277344
    8. ' exit' → logprob: -16.500450134277344
    9. 'x' → logprob: -16.625450134277344
    10. '   ' → logprob: -16.750450134277344

Token 236: ' Arr' (ID: 16880)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.4745883345603943
    2. 'exit' → logprob: -0.9745883345603943
    3. 'elif' → logprob: -7.849588394165039
    4. 'quit' → logprob: -9.349588394165039
    5. ' exit' → logprob: -10.724588394165039
    6. ' else' → logprob: -12.349588394165039
    7. 'return' → logprob: -12.474588394165039
    8. '   ' → logprob: -13.474588394165039
    9. '```' → logprob: -13.974588394165039
    10. '	exit' → logprob: -14.474588394165039

Token 237: 'êter' (ID: 73125)
  Prédit: 'êter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êter' → logprob: -0.0019514684099704027
    2. 'êt' → logprob: -6.376951694488525
    3. 'iver' → logprob: -9.126951217651367
    4. 'ê' → logprob: -9.376951217651367
    5. 'ête' → logprob: -10.501951217651367
    6. 'éter' → logprob: -11.126951217651367
    7. 'et' → logprob: -12.126951217651367
    8. 'eter' → logprob: -12.501951217651367
    9. 'êts' → logprob: -13.376951217651367
    10. 'e' → logprob: -14.626951217651367

Token 238: ' le' (ID: 505)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exit' → logprob: -1.2443495988845825
    2. '()' → logprob: -1.8693495988845825
    3. '#' → logprob: -2.119349479675293
    4. 'import' → logprob: -2.244349479675293
    5. '<|end|>' → logprob: -2.369349479675293
    6. '```' → logprob: -2.494349479675293
    7. '(exit' → logprob: -2.494349479675293
    8. 'le' → logprob: -3.994349479675293
    9. 'l' → logprob: -4.994349479675293
    10. '(' → logprob: -4.994349479675293

Token 239: ' programme' (ID: 18190)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.6752245426177979
    2. 'programme' → logprob: -1.3002245426177979
    3. 'program' → logprob: -1.8002245426177979
    4. ' programme' → logprob: -3.175224542617798
    5. ' program' → logprob: -4.925224304199219
    6. 'code' → logprob: -6.925224304199219
    7. ' exit' → logprob: -7.050224304199219
    8. 'script' → logprob: -7.300224304199219
    9. ' code' → logprob: -7.925224304199219
    10. ' script' → logprob: -8.175224304199219

Token 240: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01846116967499256
    2. 'exit' → logprob: -4.643461227416992
    3. '    
' → logprob: -5.518461227416992
    4. '
' → logprob: -6.393461227416992
    5. 'import' → logprob: -6.768461227416992
    6. 'else' → logprob: -7.018461227416992
    7. '	exit' → logprob: -8.643461227416992
    8. ' exit' → logprob: -8.768461227416992
    9. '```' → logprob: -8.893461227416992
    10. '  ' → logprob: -9.268461227416992

Token 241: ' car' (ID: 1669)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.41533854603767395
    2. ' exit' → logprob: -1.1653385162353516
    3. '   ' → logprob: -4.290338516235352
    4. 'import' → logprob: -4.540338516235352
    5. 'quit' → logprob: -6.290338516235352
    6. ' quit' → logprob: -6.790338516235352
    7. '    
' → logprob: -8.790338516235352
    8. '```' → logprob: -9.040338516235352
    9. '	exit' → logprob: -9.165338516235352
    10. '    ' → logprob: -9.290338516235352

Token 242: ' on' (ID: 402)
  Prédit: ' exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' exit' → logprob: -0.07098287343978882
    2. 'exit' → logprob: -2.6959829330444336
    3. ' quit' → logprob: -8.070982933044434
    4. ' ' → logprob: -9.195982933044434
    5. 'import' → logprob: -9.195982933044434
    6. '    ' → logprob: -9.445982933044434
    7. 'quit' → logprob: -9.695982933044434
    8. ' l' → logprob: -9.820982933044434
    9. '```' → logprob: -9.820982933044434
    10. '_exit' → logprob: -10.195982933044434

Token 243: ' a' (ID: 261)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7770965099334717
    2. ' a' → logprob: -1.6520965099334717
    3. ' ne' → logprob: -2.2770965099334717
    4. 'exit' → logprob: -2.4020965099334717
    5. ' exit' → logprob: -2.7770965099334717
    6. 'n' → logprob: -3.4020965099334717
    7. 'a' → logprob: -4.277096748352051
    8. ' doit' → logprob: -4.902096748352051
    9. ' veut' → logprob: -4.902096748352051
    10. ' ' → logprob: -5.402096748352051

Token 244: ' déjà' (ID: 21229)
  Prédit: ' terminé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' terminé' → logprob: -0.29430294036865234
    2. 'termin' → logprob: -2.2943029403686523
    3. ' fini' → logprob: -2.4193029403686523
    4. 'f' → logprob: -3.5443029403686523
    5. 'exit' → logprob: -4.669302940368652
    6. ' termin' → logprob: -5.544302940368652
    7. 'fait' → logprob: -5.794302940368652
    8. ' terminer' → logprob: -5.794302940368652
    9. ' termine' → logprob: -5.919302940368652
    10. ' exit' → logprob: -6.044302940368652

Token 245: ' traité' (ID: 160836)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.835339367389679
    2. 'termin' → logprob: -1.3353393077850342
    3. 'return' → logprob: -1.8353393077850342
    4. 'fait' → logprob: -3.460339307785034
    5. ' terminé' → logprob: -3.460339307785034
    6. ' exit' → logprob: -4.585339546203613
    7. '   ' → logprob: -4.710339546203613
    8. ' ' → logprob: -5.085339546203613
    9. 'quit' → logprob: -5.085339546203613
    10. ' return' → logprob: -5.210339546203613

Token 246: ' ce' (ID: 2357)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.6324548721313477
    2. '   ' → logprob: -2.0074548721313477
    3. ' le' → logprob: -2.3824548721313477
    4. 'tout' → logprob: -2.3824548721313477
    5. 'la' → logprob: -3.5074548721313477
    6. 'l' → logprob: -3.8824548721313477
    7. '```' → logprob: -3.8824548721313477
    8. ' la' → logprob: -4.132454872131348
    9. 'exit' → logprob: -4.257454872131348
    10. '  ' → logprob: -4.882454872131348

Token 247: ' cas' (ID: 2108)
  Prédit: ' cas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cas' → logprob: -0.36253684759140015
    2. 'cas' → logprob: -1.237536907196045
    3. '```' → logprob: -4.487536907196045
    4. 'return' → logprob: -6.487536907196045
    5. 'exit' → logprob: -8.612536430358887
    6. 'point' → logprob: -8.862536430358887
    7. 'print' → logprob: -9.112536430358887
    8. '``' → logprob: -9.362536430358887
    9. 'import' → logprob: -9.487536430358887
    10. 'programme' → logprob: -9.612536430358887

Token 248: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00415758416056633
    2. '    
' → logprob: -5.754157543182373
    3. '.' → logprob: -7.879157543182373
    4. '
' → logprob: -7.879157543182373
    5. 'exit' → logprob: -8.754158020019531
    6. 'import' → logprob: -11.379158020019531
    7. '	exit' → logprob: -11.379158020019531
    8. '    ' → logprob: -11.754158020019531
    9. '```' → logprob: -11.879158020019531
    10. '.exit' → logprob: -12.129158020019531

Token 249: '   ' (ID: 271)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.005708000622689724
    2. ' exit' → logprob: -5.63070821762085
    3. '   ' → logprob: -6.75570821762085
    4. 'else' → logprob: -7.50570821762085
    5. 'import' → logprob: -8.255707740783691
    6. 'quit' → logprob: -9.255707740783691
    7. '	exit' → logprob: -10.755707740783691
    8. ' quit' → logprob: -12.505707740783691
    9. '```' → logprob: -12.880707740783691
    10. 'elif' → logprob: -13.005707740783691

Token 250: ' exit' (ID: 10654)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' (adapté à ' exit') → logprob: -0.00022999993234407157
    2. ' exit' → logprob: -9.250229835510254
    3. 'quit' → logprob: -9.250229835510254
    4. 'import' → logprob: -10.250229835510254
    5. 'return' → logprob: -13.875229835510254
    6. '   ' → logprob: -14.000229835510254
    7. '	exit' → logprob: -14.875229835510254
    8. 'else' → logprob: -16.25023078918457
    9. ' quit' → logprob: -16.37523078918457
    10. ' ' → logprob: -16.75023078918457

Token 251: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.3226136767771095e-05
    2. '()
' → logprob: -10.375042915344238
    3. '(' → logprob: -12.125042915344238
    4. '()

' → logprob: -12.125042915344238
    5. '()\' → logprob: -15.000042915344238
    6. ' ()' → logprob: -15.250042915344238
    7. '()`' → logprob: -15.875042915344238
    8. '()<' → logprob: -16.125043869018555
    9. '()
' → logprob: -16.375043869018555
    10. '())' → logprob: -17.000043869018555

Token 252: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.048551030457019806
    2. '<|end|>' → logprob: -4.173551082611084
    3. ' 
' → logprob: -4.798551082611084
    4. '
' → logprob: -5.423551082611084
    5. 'else' → logprob: -5.548551082611084
    6. '  
' → logprob: -5.548551082611084
    7. 'x' → logprob: -6.173551082611084
    8. '```' → logprob: -6.298551082611084
    9. 'max' → logprob: -6.423551082611084
    10. 'for' → logprob: -6.548551082611084

Token 253: ' Cr' (ID: 5790)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2287539839744568
    2. 'diff' → logprob: -2.8537540435791016
    3. 'min' → logprob: -3.3537540435791016
    4. '#' → logprob: -3.4787540435791016
    5. 'result' → logprob: -4.353754043579102
    6. 'm' → logprob: -4.603754043579102
    7. 'd' → logprob: -5.103754043579102
    8. 'score' → logprob: -5.103754043579102
    9. 'for' → logprob: -5.353754043579102
    10. 'res' → logprob: -5.353754043579102

Token 254: 'éer' (ID: 83012)
  Prédit: 'éer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éer' → logprob: -0.006465956103056669
    2. 'ée' → logprob: -5.506465911865234
    3. 'e' → logprob: -7.006465911865234
    4. 'eer' → logprob: -7.256465911865234
    5. 'iter' → logprob: -8.131465911865234
    6. '#' → logprob: -8.881465911865234
    7. 'é' → logprob: -9.381465911865234
    8. 'ea' → logprob: -9.756465911865234
    9. 'édit' → logprob: -10.006465911865234
    10. 'a' → logprob: -10.881465911865234

Token 255: ' une' (ID: 2463)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.2140740156173706
    2. ' max' → logprob: -1.4640740156173706
    3. ' une' → logprob: -1.5890740156173706
    4. ' un' → logprob: -3.08907413482666
    5. 'une' → logprob: -3.33907413482666
    6. 'best' → logprob: -3.33907413482666
    7. 'score' → logprob: -3.58907413482666
    8. ' best' → logprob: -3.71407413482666
    9. ' score' → logprob: -4.21407413482666
    10. 'diff' → logprob: -4.33907413482666

Token 256: ' liste' (ID: 31719)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.9121180772781372
    2. 'diff' → logprob: -1.5371180772781372
    3. 'variable' → logprob: -1.6621180772781372
    4. 'dp' → logprob: -3.5371179580688477
    5. 'result' → logprob: -4.037117958068848
    6. 'min' → logprob: -4.162117958068848
    7. 'difference' → logprob: -4.162117958068848
    8. 'd' → logprob: -4.412117958068848
    9. 'def' → logprob: -4.662117958068848
    10. 'liste' → logprob: -4.662117958068848

Token 257: ' vide' (ID: 21835)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.4720553159713745
    2. ' des' → logprob: -2.347055435180664
    3. ' =' → logprob: -2.472055435180664
    4. 'dp' → logprob: -2.472055435180664
    5. '[]' → logprob: -2.972055435180664
    6. 'diff' → logprob: -3.097055435180664
    7. ' max' → logprob: -3.347055435180664
    8. 'max' → logprob: -3.472055435180664
    9. '=[]' → logprob: -3.472055435180664
    10. ' dp' → logprob: -3.597055435180664

Token 258: ' XY' (ID: 71987)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.6161879301071167
    2. 'diff' → logprob: -1.9911879301071167
    3. 'result' → logprob: -2.2411880493164062
    4. 'res' → logprob: -2.4911880493164062
    5. 'dif' → logprob: -2.6161880493164062
    6. 'max' → logprob: -2.8661880493164062
    7. 'results' → logprob: -2.8661880493164062
    8. 'pairs' → logprob: -2.9911880493164062
    9. 'D' → logprob: -3.2411880493164062
    10. 'scores' → logprob: -3.6161880493164062

Token 259: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5933089256286621
    2. '=' → logprob: -0.9683089256286621
    3. '=[]' → logprob: -2.843308925628662
    4. 'XY' → logprob: -4.843308925628662
    5. '[]' → logprob: -7.218308925628662
    6. '=[]
' → logprob: -7.843308925628662
    7. '_xy' → logprob: -8.34330940246582
    8. 'xy' → logprob: -9.59330940246582
    9. ' ' → logprob: -9.96830940246582
    10. '_' → logprob: -10.34330940246582

Token 260: ' stock' (ID: 6546)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.07356462627649307
    2. 'stock' → logprob: -3.0735645294189453
    3. '[' → logprob: -4.198564529418945
    4. 'range' → logprob: -5.698564529418945
    5. 'x' → logprob: -6.698564529418945
    6. '[x' → logprob: -6.698564529418945
    7. '[i' → logprob: -7.448564529418945
    8. ' stock' → logprob: -7.948564529418945
    9. '[(' → logprob: -7.948564529418945
    10. 'store' → logprob: -8.073564529418945

Token 261: 'er' (ID: 259)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.039457209408283234
    2. '=[]' → logprob: -4.164457321166992
    3. 'er' → logprob: -4.414457321166992
    4. '[' → logprob: -5.664457321166992
    5. ' []' → logprob: -6.289457321166992
    6. '_' → logprob: -6.914457321166992
    7. '=' → logprob: -6.914457321166992
    8. '([]' → logprob: -6.914457321166992
    9. 'e' → logprob: -7.164457321166992
    10. '[:]' → logprob: -7.664457321166992

Token 262: ' les' (ID: 1341)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.010228188708424568
    2. 'pairs' → logprob: -5.010228157043457
    3. '()' → logprob: -7.135228157043457
    4. ' []' → logprob: -7.385228157043457
    5. 'les' → logprob: -7.635228157043457
    6. ' pairs' → logprob: -8.385228157043457
    7. '[' → logprob: -8.635228157043457
    8. '([]' → logprob: -8.635228157043457
    9. '_pairs' → logprob: -9.010228157043457
    10. '(x' → logprob: -9.135228157043457

Token 263: ' p' (ID: 275)
  Prédit: ' tuples'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tuples' → logprob: -0.9073662757873535
    2. ' couples' → logprob: -1.1573662757873535
    3. ' pairs' → logprob: -2.1573662757873535
    4. 'pairs' → logprob: -2.5323662757873535
    5. 'diff' → logprob: -4.1573662757873535
    6. 'dif' → logprob: -4.5323662757873535
    7. ' p' → logprob: -4.6573662757873535
    8. 'tu' → logprob: -5.1573662757873535
    9. 'cou' → logprob: -5.2823662757873535
    10. ' résultats' → logprob: -5.4073662757873535

Token 264: 'aires' (ID: 8507)
  Prédit: 'aires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aires' → logprob: -0.37575194239616394
    2. 'airs' → logprob: -1.2507519721984863
    3. 'a' → logprob: -4.250751972198486
    4. 'air' → logprob: -5.375751972198486
    5. 'oss' → logprob: -5.625751972198486
    6. 'r' → logprob: -6.500751972198486
    7. 'ar' → logprob: -7.500751972198486
    8. 'oints' → logprob: -7.500751972198486
    9. 'aire' → logprob: -8.375751495361328
    10. 'pairs' → logprob: -8.500751495361328

Token 265: ' (' (ID: 350)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.15512634813785553
    2. '=[]' → logprob: -2.6551263332366943
    3. '_pairs' → logprob: -3.5301263332366943
    4. 'pairs' → logprob: -4.780126571655273
    5. ' []' → logprob: -5.030126571655273
    6. 'de' → logprob: -5.280126571655273
    7. ' =' → logprob: -5.655126571655273
    8. '()' → logprob: -5.905126571655273
    9. 'XY' → logprob: -6.030126571655273
    10. '([]' → logprob: -6.155126571655273

Token 266: 'x' (ID: 87)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7677956819534302
    2. 'x' → logprob: -1.0177956819534302
    3. '[]' → logprob: -2.6427955627441406
    4. '[],' → logprob: -3.1427955627441406
    5. '[])' → logprob: -3.1427955627441406
    6. '(x' → logprob: -5.142795562744141
    7. '0' → logprob: -6.017795562744141
    8. 'A' → logprob: -7.017795562744141
    9. '(' → logprob: -7.142795562744141
    10. ')x' → logprob: -7.392795562744141

Token 267: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0058024669997394085
    2. ',y' → logprob: -5.255802631378174
    3. ' ,' → logprob: -8.130802154541016
    4. 'y' → logprob: -8.880802154541016
    5. ',
' → logprob: -9.880802154541016
    6. ')' → logprob: -11.255802154541016
    7. ',)' → logprob: -11.255802154541016
    8. ',x' → logprob: -12.005802154541016
    9. '-' → logprob: -12.005802154541016
    10. ' ' → logprob: -12.380802154541016

Token 268: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.12979599833488464
    2. ' y' → logprob: -2.129796028137207
    3. 'x' → logprob: -6.379796028137207
    4. ',' → logprob: -7.379796028137207
    5. ')' → logprob: -8.379796028137207
    6. ',y' → logprob: -9.254796028137207
    7. ' x' → logprob: -9.379796028137207
    8. '
' → logprob: -10.504796028137207
    9. ' ' → logprob: -10.504796028137207
    10. '0' → logprob: -11.379796028137207

Token 269: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00032998246024362743
    2. 's' → logprob: -9.375329971313477
    3. '_pairs' → logprob: -9.625329971313477
    4. ',' → logprob: -9.750329971313477
    5. '),' → logprob: -10.250329971313477
    6. 'pairs' → logprob: -10.625329971313477
    7. ').' → logprob: -10.875329971313477
    8. '=' → logprob: -12.000329971313477
    9. ')
' → logprob: -12.000329971313477
    10. ' pairs' → logprob: -12.125329971313477

Token 270: ' correspondant' (ID: 146058)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22755777835845947
    2. '[]' → logprob: -2.10255765914917
    3. ' =' → logprob: -3.10255765914917
    4. '=[]' → logprob: -3.35255765914917
    5. '=[]
' → logprob: -8.102558135986328
    6. '[]=' → logprob: -8.477558135986328
    7. '()' → logprob: -8.602558135986328
    8. '[' → logprob: -8.852558135986328
    9. 'XY' → logprob: -9.352558135986328
    10. '([]' → logprob: -9.602558135986328

Token 271: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7439541220664978
    2. '[]' → logprob: -1.1189541816711426
    3. '=[]' → logprob: -2.2439541816711426
    4. 'à' → logprob: -3.1189541816711426
    5. ')' → logprob: -4.368954181671143
    6. ' à' → logprob: -4.493954181671143
    7. 'to' → logprob: -4.743954181671143
    8. '[]=' → logprob: -5.993954181671143
    9. '[' → logprob: -6.118954181671143
    10. ' =' → logprob: -6.118954181671143

Token 272: ' chaque' (ID: 21194)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.013546053320169449
    2. 'A' → logprob: -5.513545989990234
    3. '[(' → logprob: -6.013545989990234
    4. 'x' → logprob: -7.138545989990234
    5. 'pairs' → logprob: -7.513545989990234
    6. 'range' → logprob: -7.638545989990234
    7. 'des' → logprob: -7.638545989990234
    8. 'les' → logprob: -7.888545989990234
    9. ')' → logprob: -7.888545989990234
    10. '[],' → logprob: -8.013545989990234

Token 273: ' opération' (ID: 86023)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6531009078025818
    2. ' i' → logprob: -1.1531009674072266
    3. 'indice' → logprob: -3.6531009674072266
    4. 'range' → logprob: -4.153100967407227
    5. 'x' → logprob: -4.278100967407227
    6. 'index' → logprob: -4.403100967407227
    7. 'diff' → logprob: -4.653100967407227
    8. ')' → logprob: -4.903100967407227
    9. ' range' → logprob: -5.028100967407227
    10. 'interval' → logprob: -5.278100967407227

Token 274: ' de' (ID: 334)
  Prédit: 'XY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'XY' → logprob: -0.037508510053157806
    2. '[]' → logprob: -3.662508487701416
    3. '=' → logprob: -6.037508487701416
    4. '=[]' → logprob: -6.287508487701416
    5. 'xy' → logprob: -6.287508487701416
    6. ' =' → logprob: -6.537508487701416
    7. 'pairs' → logprob: -6.787508487701416
    8. ',' → logprob: -7.287508487701416
    9. '[]
' → logprob: -7.912508487701416
    10. ' XY' → logprob: -8.162508964538574

Token 275: ' sou' (ID: 4069)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.8285678029060364
    2. 'diff' → logprob: -1.9535677433013916
    3. 'zip' → logprob: -2.3285677433013916
    4. 'sub' → logprob: -2.5785677433013916
    5. 'for' → logprob: -2.7035677433013916
    6. 'x' → logprob: -3.3285677433013916
    7. 'A' → logprob: -3.7035677433013916
    8. 'max' → logprob: -3.9535677433013916
    9. 'append' → logprob: -4.078567981719971
    10. 's' → logprob: -4.953567981719971

Token 276: 'straction' (ID: 79887)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.08629010617733002
    2. 'straction' → logprob: -3.086290121078491
    3. 'bst' → logprob: -5.211289882659912
    4. 'p' → logprob: -5.211289882659912
    5. 'stra' → logprob: -5.336289882659912
    6. 'm' → logprob: -5.336289882659912
    7. 'bf' → logprob: -5.836289882659912
    8. 'mm' → logprob: -6.461289882659912
    9. 'r' → logprob: -6.461289882659912
    10. 'stract' → logprob: -6.586289882659912

Token 277: ' x' (ID: 1215)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.8096362352371216
    2. 'XY' → logprob: -0.9346362352371216
    3. '=' → logprob: -2.684636116027832
    4. '=[]' → logprob: -2.934636116027832
    5. ' =' → logprob: -4.059636116027832
    6. 'xy' → logprob: -4.184636116027832
    7. '[]
' → logprob: -6.559636116027832
    8. '=[]
' → logprob: -6.684636116027832
    9. '_xy' → logprob: -6.684636116027832
    10. ',' → logprob: -7.309636116027832

Token 278: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010942290537059307
    2. '-' → logprob: -5.135942459106445
    3. ' ,' → logprob: -6.010942459106445
    4. ',y' → logprob: -6.760942459106445
    5. '=' → logprob: -7.385942459106445
    6. ' -' → logprob: -8.135942459106445
    7. '#' → logprob: -8.760942459106445
    8. ' =' → logprob: -9.885942459106445
    9. ')' → logprob: -10.635942459106445
    10. ',
' → logprob: -10.635942459106445

Token 279: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.1800687611103058
    2. ' y' → logprob: -1.8050687313079834
    3. ' ' → logprob: -8.430068969726562
    4. ',' → logprob: -10.430068969726562
    5. 'Y' → logprob: -11.430068969726562
    6. 'x' → logprob: -11.555068969726562
    7. '  ' → logprob: -12.055068969726562
    8. '	y' → logprob: -12.055068969726562
    9. '   ' → logprob: -12.180068969726562
    10. '_y' → logprob: -12.430068969726562

Token 280: '.
' (ID: 558)
  Prédit: 'XY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'XY' → logprob: -0.013102341443300247
    2. '=' → logprob: -4.6381025314331055
    3. '=[]' → logprob: -6.1381025314331055
    4. ' =' → logprob: -7.3881025314331055
    5. '[]' → logprob: -7.8881025314331055
    6. 'xy' → logprob: -10.013102531433105
    7. ',' → logprob: -10.513102531433105
    8. '=[]
' → logprob: -10.513102531433105
    9. '.' → logprob: -10.763102531433105
    10. 'X' → logprob: -11.138102531433105

Token 281: 'XY' (ID: 27825)
  Prédit: 'XY'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XY' → logprob: -5.438573680294212e-06
    2. 'xy' → logprob: -12.750005722045898
    3. ' XY' → logprob: -13.125005722045898
    4. 'X' → logprob: -15.250005722045898
    5. '
' → logprob: -15.375005722045898
    6. '_xy' → logprob: -17.8750057220459
    7. '```' → logprob: -18.0000057220459
    8. 'XYZ' → logprob: -19.0000057220459
    9. 'pairs' → logprob: -19.2500057220459
    10. 'from' → logprob: -19.3750057220459

Token 282: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014320163987576962
    2. ' =' → logprob: -4.264320373535156
    3. '=[]' → logprob: -8.764320373535156
    4. '=[]
' → logprob: -15.264320373535156
    5. '=[]
' → logprob: -16.639320373535156
    6. ' ' → logprob: -16.889320373535156
    7. '[]' → logprob: -17.264320373535156
    8. ',' → logprob: -17.514320373535156
    9. '=[' → logprob: -17.764320373535156
    10. '＝' → logprob: -18.139320373535156

Token 283: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.1472419600977446e-06
    2. '[]
' → logprob: -14.250000953674316
    3. ' []' → logprob: -15.375000953674316
    4. '[' → logprob: -16.875001907348633
    5. '[]}' → logprob: -16.875001907348633
    6. '[]

' → logprob: -17.625001907348633
    7. '[]>' → logprob: -18.625001907348633
    8. '[],' → logprob: -19.125001907348633
    9. 'list' → logprob: -19.750001907348633
    10. '[]"' → logprob: -20.000001907348633

Token 284: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005348078440874815
    2. 'i' → logprob: -6.130348205566406
    3. '#' → logprob: -6.255348205566406
    4. 'x' → logprob: -7.630348205566406
    5. 'max' → logprob: -8.005348205566406
    6. ' for' → logprob: -8.130348205566406
    7. 'y' → logprob: -9.755348205566406
    8. 'prev' → logprob: -10.880348205566406
    9. 'from' → logprob: -11.755348205566406
    10. 'min' → logprob: -12.005348205566406

Token 285: ' Dé' (ID: 27247)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0008872798644006252
    2. 'i' → logprob: -8.500886917114258
    3. 'from' → logprob: -8.625886917114258
    4. 'x' → logprob: -8.750886917114258
    5. 'max' → logprob: -8.875886917114258
    6. '#' → logprob: -9.375886917114258
    7. 'y' → logprob: -10.750886917114258
    8. 'left' → logprob: -11.250886917114258
    9. 'diff' → logprob: -11.375886917114258
    10. 'prev' → logprob: -11.500886917114258

Token 286: 'fin' (ID: 6994)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1980247050523758
    2. 'f' → logprob: -2.3230247497558594
    3. 'fin' → logprob: -2.9480247497558594
    4. 'but' → logprob: -3.6980247497558594
    5. '#' → logprob: -5.823024749755859
    6. 'forcer' → logprob: -8.19802474975586
    7. 'placer' → logprob: -8.44802474975586
    8. 'x' → logprob: -8.69802474975586
    9. 'fi' → logprob: -8.94802474975586
    10. '
' → logprob: -9.57302474975586

Token 287: 'ir' (ID: 380)
  Prédit: 'inir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inir' → logprob: -0.006428772117942572
    2. 'er' → logprob: -6.5064287185668945
    3. 'ir' → logprob: -6.7564287185668945
    4. 'nir' → logprob: -7.1314287185668945
    5. 'ini' → logprob: -7.3814287185668945
    6. 'ier' → logprob: -7.8814287185668945
    7. 'ine' → logprob: -8.006428718566895
    8. 'iner' → logprob: -8.131428718566895
    9. '#' → logprob: -8.381428718566895
    10. 'enir' → logprob: -9.131428718566895

Token 288: ' deux' (ID: 10301)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0818207859992981
    2. 'max' → logprob: -2.8318207263946533
    3. ' def' → logprob: -5.331820964813232
    4. 'i' → logprob: -5.831820964813232
    5. ' max' → logprob: -6.081820964813232
    6. ' la' → logprob: -6.456820964813232
    7. 'l' → logprob: -6.706820964813232
    8. 'la' → logprob: -7.081820964813232
    9. 'min' → logprob: -7.206820964813232
    10. 'score' → logprob: -7.456820964813232

Token 289: ' compte' (ID: 19657)
  Prédit: ' poin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' poin' → logprob: -1.1142069101333618
    2. 'p' → logprob: -1.2392069101333618
    3. 'for' → logprob: -1.4892069101333618
    4. ' indices' → logprob: -2.8642067909240723
    5. 'indices' → logprob: -3.8642067909240723
    6. ' for' → logprob: -4.114206790924072
    7. ' pointers' → logprob: -4.489206790924072
    8. ' variables' → logprob: -4.489206790924072
    9. 'i' → logprob: -4.614206790924072
    10. '
' → logprob: -5.489206790924072

Token 290: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -2.8087270038668066e-05
    2. 's' → logprob: -11.500027656555176
    3. 'rs' → logprob: -11.500027656555176
    4. '#' → logprob: -12.875027656555176
    5. 'u' → logprob: -13.125027656555176
    6. 'ur' → logprob: -13.750027656555176
    7. '```' → logprob: -14.500027656555176
    8. 'urse' → logprob: -14.750027656555176
    9. 'urses' → logprob: -15.000027656555176
    10. 'eurs' → logprob: -16.000028610229492

Token 291: ' pour' (ID: 1930)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0225022304803133
    2. ' i' → logprob: -3.8975021839141846
    3. 'x' → logprob: -6.647502422332764
    4. ',' → logprob: -7.647502422332764
    5. ' =' → logprob: -9.522501945495605
    6. '=' → logprob: -10.022501945495605
    7. 'for' → logprob: -11.522501945495605
    8. ' x' → logprob: -11.522501945495605
    9. 'a' → logprob: -11.897501945495605
    10. ',i' → logprob: -11.897501945495605

Token 292: ' compter' (ID: 81694)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4307692050933838
    2. ' i' → logprob: -1.0557692050933838
    3. '0' → logprob: -7.430768966674805
    4. '_' → logprob: -8.180768966674805
    5. ' ' → logprob: -8.430768966674805
    6. 'l' → logprob: -8.555768966674805
    7. 'range' → logprob: -8.555768966674805
    8. ' range' → logprob: -8.680768966674805
    9. ' l' → logprob: -9.055768966674805
    10. 'x' → logprob: -9.305768966674805

Token 293: ' combien' (ID: 106648)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.40379226207733154
    2. 'i' → logprob: -1.1537922620773315
    3. 'x' → logprob: -5.153792381286621
    4. 'l' → logprob: -6.403792381286621
    5. ' les' → logprob: -6.403792381286621
    6. ' ' → logprob: -6.528792381286621
    7. ' l' → logprob: -6.653792381286621
    8. 'les' → logprob: -6.653792381286621
    9. ' x' → logprob: -6.778792381286621
    10. ' la' → logprob: -7.653792381286621

Token 294: ' il' (ID: 1793)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.7315952181816101
    2. ' de' → logprob: -1.6065952777862549
    3. ' ' → logprob: -2.481595277786255
    4. 'd' → logprob: -3.231595277786255
    5. ' =' → logprob: -3.231595277786255
    6. 'de' → logprob: -3.481595277786255
    7. 'x' → logprob: -3.606595277786255
    8. '=' → logprob: -3.856595277786255
    9. '  ' → logprob: -4.481595039367676
    10. 'i' → logprob: -4.731595039367676

Token 295: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.7426232099533081
    2. 'y' → logprob: -1.617623209953308
    3. 's' → logprob: -2.6176233291625977
    4. 'a' → logprob: -2.6176233291625977
    5. ' a' → logprob: -2.6176233291625977
    6. ' reste' → logprob: -3.4926233291625977
    7. 'f' → logprob: -3.7426233291625977
    8. 'A' → logprob: -4.742623329162598
    9. 'est' → logprob: -4.992623329162598
    10. 'rest' → logprob: -4.992623329162598

Token 296: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3885742127895355
    2. ' a' → logprob: -1.138574242591858
    3. ''a' → logprob: -7.013574123382568
    4. ' y' → logprob: -8.388574600219727
    5. 'ont' → logprob: -9.138574600219727
    6. '#' → logprob: -9.263574600219727
    7. 'y' → logprob: -9.263574600219727
    8. 'A' → logprob: -9.763574600219727
    9. ' ' → logprob: -10.263574600219727
    10. 'à' → logprob: -10.263574600219727

Token 297: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.6707496643066406
    2. ' de' → logprob: -1.6707496643066406
    3. 'd' → logprob: -1.7957496643066406
    4. 'de' → logprob: -3.0457496643066406
    5. ' ' → logprob: -3.2957496643066406
    6. 'x' → logprob: -3.4207496643066406
    7. ' x' → logprob: -5.920749664306641
    8. 's' → logprob: -6.545749664306641
    9. 'les' → logprob: -6.545749664306641
    10. '  ' → logprob: -6.795749664306641

Token 298: ''' (ID: 6)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.1780518293380737
    2. 'i' → logprob: -1.8030518293380737
    3. ''' → logprob: -2.1780519485473633
    4. ''esp' → logprob: -2.4280519485473633
    5. ''espace' → logprob: -2.8030519485473633
    6. 'a' → logprob: -2.9280519485473633
    7. 'e' → logprob: -3.6780519485473633
    8. ' i' → logprob: -3.8030519485473633
    9. ' espaces' → logprob: -4.053051948547363
    10. ''éc' → logprob: -4.678051948547363

Token 299: 'élé' (ID: 15228)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.42146992683410645
    2. 'i' → logprob: -2.1714699268341064
    3. 'A' → logprob: -3.5464699268341064
    4. 'esp' → logprob: -3.6714699268341064
    5. 'élé' → logprob: -3.6714699268341064
    6. 'y' → logprob: -3.9214699268341064
    7. 'éc' → logprob: -4.171469688415527
    8. ' x' → logprob: -4.296469688415527
    9. 'pairs' → logprob: -4.921469688415527
    10. 's' → logprob: -5.171469688415527

Token 300: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.0007463791989721358
    2. 'ment' → logprob: -7.375746250152588
    3. 'm' → logprob: -10.375746726989746
    4. 'ts' → logprob: -10.500746726989746
    5. 'nts' → logprob: -10.875746726989746
    6. 't' → logprob: -12.250746726989746
    7. 'me' → logprob: -12.625746726989746
    8. 'urs' → logprob: -12.750746726989746
    9. 'ents' → logprob: -13.000746726989746
    10. '   ' → logprob: -13.125746726989746

Token 301: ' posit' (ID: 13047)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.35344237089157104
    2. ' i' → logprob: -1.9784424304962158
    3. 'x' → logprob: -2.353442430496216
    4. ' de' → logprob: -4.353442192077637
    5. 'de' → logprob: -4.728442192077637
    6. '#' → logprob: -5.103442192077637
    7. ',' → logprob: -5.353442192077637
    8. '=' → logprob: -5.603442192077637
    9. ' x' → logprob: -5.603442192077637
    10. 'dans' → logprob: -5.853442192077637

Token 302: 'ifs' (ID: 14119)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8311739563941956
    2. 'ifs' → logprob: -0.9561739563941956
    3. 'urs' → logprob: -2.081173896789551
    4. 'eurs' → logprob: -3.081173896789551
    5. 'if' → logprob: -5.956173896789551
    6. 'x' → logprob: -5.956173896789551
    7. 'és' → logprob: -6.956173896789551
    8. '```' → logprob: -7.331173896789551
    9. 'i' → logprob: -7.456173896789551
    10. 'atifs' → logprob: -7.956173896789551

Token 303: ' ou' (ID: 2031)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.0669000148773193
    2. 'i' → logprob: -1.4419000148773193
    3. ',' → logprob: -2.1919000148773193
    4. 'posit' → logprob: -2.4419000148773193
    5. 'p' → logprob: -2.8169000148773193
    6. 'et' → logprob: -2.9419000148773193
    7. 'x' → logprob: -3.5669000148773193
    8. 'positive' → logprob: -3.6919000148773193
    9. '#' → logprob: -4.691900253295898
    10. ' i' → logprob: -4.941900253295898

Token 304: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9444862008094788
    2. ' nég' → logprob: -1.069486141204834
    3. 'neg' → logprob: -1.569486141204834
    4. ' n' → logprob: -3.069486141204834
    5. 'ég' → logprob: -5.444486141204834
    6. 'null' → logprob: -6.444486141204834
    7. '#' → logprob: -6.944486141204834
    8. 'non' → logprob: -7.069486141204834
    9. ' zéro' → logprob: -7.319486141204834
    10. '0' → logprob: -7.444486141204834

Token 305: 'uls' (ID: 13433)
  Prédit: 'ég'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ég' → logprob: -0.019281679764389992
    2. 'eg' → logprob: -4.01928186416626
    3. '#' → logprob: -7.64428186416626
    4. '```' → logprob: -8.519281387329102
    5. 'e' → logprob: -9.519281387329102
    6. 'é' → logprob: -9.894281387329102
    7. '%C' → logprob: -10.019281387329102
    8. 'égation' → logprob: -10.144281387329102
    9. 'neg' → logprob: -10.894281387329102
    10. 'on' → logprob: -11.019281387329102

Token 306: ' (' (ID: 350)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.6634483337402344
    2. 'posit' → logprob: -1.1634483337402344
    3. 'P' → logprob: -3.5384483337402344
    4. 'positive' → logprob: -3.5384483337402344
    5. '_pos' → logprob: -3.9134483337402344
    6. 'p' → logprob: -3.9134483337402344
    7. ',' → logprob: -4.163448333740234
    8. 'x' → logprob: -4.413448333740234
    9. 'et' → logprob: -5.288448333740234
    10. 'plus' → logprob: -5.288448333740234

Token 307: 'PLUS' (ID: 107077)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.9504274725914001
    2. 'A' → logprob: -1.950427532196045
    3. 'i' → logprob: -1.950427532196045
    4. 'posit' → logprob: -2.075427532196045
    5. ')' → logprob: -3.075427532196045
    6. 'positive' → logprob: -3.450427532196045
    7. 'x' → logprob: -3.575427532196045
    8. '0' → logprob: -4.450427532196045
    9. 'plus' → logprob: -4.575427532196045
    10. 'X' → logprob: -4.700427532196045

Token 308: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3099512457847595
    2. ',' → logprob: -2.5599513053894043
    3. '_pos' → logprob: -2.8099513053894043
    4. '),' → logprob: -2.9349513053894043
    5. '=' → logprob: -3.1849513053894043
    6. ' =' → logprob: -4.184951305389404
    7. ' )' → logprob: -5.559951305389404
    8. '_' → logprob: -5.809951305389404
    9. 'et' → logprob: -6.059951305389404
    10. 'pos' → logprob: -6.809951305389404

Token 309: '#' (ID: 2)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0131630897521973
    2. ',' → logprob: -1.3881630897521973
    3. ' =' → logprob: -1.5131630897521973
    4. 'et' → logprob: -2.1381630897521973
    5. 'and' → logprob: -4.388163089752197
    6. 'posit' → logprob: -4.888163089752197
    7. ' and' → logprob: -4.888163089752197
    8. 'pos' → logprob: -5.013163089752197
    9. ' et' → logprob: -5.638163089752197
    10. 'plus' → logprob: -5.763163089752197

Token 310: ' et' (ID: 859)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'et' → logprob: -1.1520764827728271
    2. 'and' → logprob: -1.4020764827728271
    3. 'neg' → logprob: -2.277076482772827
    4. 'NEG' → logprob: -2.277076482772827
    5. 'moins' → logprob: -3.027076482772827
    6. ',' → logprob: -3.402076482772827
    7. 'PLUS' → logprob: -3.527076482772827
    8. ' and' → logprob: -3.652076482772827
    9. '#' → logprob: -4.152076721191406
    10. 'plus' → logprob: -4.402076721191406

Token 311: ' combien' (ID: 106648)
  Prédit: 'neg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neg' → logprob: -0.26659271121025085
    2. 'n' → logprob: -1.8915927410125732
    3. ' nég' → logprob: -3.7665927410125732
    4. 'moins' → logprob: -3.7665927410125732
    5. 'comb' → logprob: -4.391592502593994
    6. ' combien' → logprob: -4.516592502593994
    7. '#' → logprob: -5.391592502593994
    8. 'd' → logprob: -6.266592502593994
    9. 'comment' → logprob: -6.391592502593994
    10. 'né' → logprob: -7.141592502593994

Token 312: ' il' (ID: 1793)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.052829235792160034
    2. 'neg' → logprob: -3.4278292655944824
    3. 'n' → logprob: -5.177829265594482
    4. 'de' → logprob: -5.552829265594482
    5. '#' → logprob: -5.802829265594482
    6. ' d' → logprob: -5.927829265594482
    7. 'il' → logprob: -6.552829265594482
    8. '   ' → logprob: -7.677829265594482
    9. 'ils' → logprob: -7.927829265594482
    10. ' nég' → logprob: -8.052828788757324

Token 313: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.18613050878047943
    2. ' y' → logprob: -1.8111305236816406
    3. 'd' → logprob: -5.311130523681641
    4. '#' → logprob: -7.436130523681641
    5. 'a' → logprob: -8.18613052368164
    6. ' d' → logprob: -8.56113052368164
    7. ''y' → logprob: -8.68613052368164
    8. 'neg' → logprob: -10.31113052368164
    9. '	y' → logprob: -10.56113052368164
    10. 'n' → logprob: -10.56113052368164

Token 314: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.14621445536613464
    2. ' a' → logprob: -2.021214485168457
    3. 'd' → logprob: -6.521214485168457
    4. ' d' → logprob: -7.646214485168457
    5. 'y' → logprob: -7.771214485168457
    6. ' y' → logprob: -8.146214485168457
    7. '#' → logprob: -8.396214485168457
    8. 'en' → logprob: -9.021214485168457
    9. ''a' → logprob: -9.021214485168457
    10. 'est' → logprob: -9.521214485168457

Token 315: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.23123539984226227
    2. ' d' → logprob: -1.606235384941101
    3. 'neg' → logprob: -6.106235504150391
    4. ' nég' → logprob: -6.356235504150391
    5. 'de' → logprob: -7.356235504150391
    6. ' de' → logprob: -7.481235504150391
    7. '#' → logprob: -8.73123550415039
    8. ' ' → logprob: -8.85623550415039
    9. 'strict' → logprob: -10.10623550415039
    10. 'n' → logprob: -10.48123550415039

Token 316: ''' (ID: 6)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.9268487095832825
    2. ' nég' → logprob: -1.4268486499786377
    3. ''' → logprob: -1.8018486499786377
    4. 'n' → logprob: -2.5518486499786377
    5. '#' → logprob: -3.0518486499786377
    6. 'd' → logprob: -4.176848888397217
    7. 'neg' → logprob: -4.801848888397217
    8. ' n' → logprob: -5.301848888397217
    9. ' d' → logprob: -5.301848888397217
    10. 'les' → logprob: -5.426848888397217

Token 317: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.38067007064819336
    2. 'n' → logprob: -1.5056700706481934
    3. ''' → logprob: -2.7556700706481934
    4. ' nég' → logprob: -4.880670070648193
    5. 'neg' → logprob: -5.130670070648193
    6. '
' → logprob: -5.380670070648193
    7. 'él' → logprob: -6.005670070648193
    8. 'né' → logprob: -6.255670070648193
    9. '#' → logprob: -6.380670070648193
    10. 'é' → logprob: -6.505670070648193

Token 318: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.00034356804098933935
    2. 'ment' → logprob: -8.750343322753906
    3. 'MENTS' → logprob: -9.875343322753906
    4. 'm' → logprob: -10.125343322753906
    5. 'éments' → logprob: -11.000343322753906
    6. 'phants' → logprob: -11.000343322753906
    7. 'ements' → logprob: -11.125343322753906
    8. '```' → logprob: -11.500343322753906
    9. 'nements' → logprob: -12.375343322753906
    10. 'men' → logprob: -13.000343322753906

Token 319: ' strict' (ID: 12035)
  Prédit: ' nég'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nég' → logprob: -0.048123959451913834
    2. 'neg' → logprob: -3.173124074935913
    3. 'n' → logprob: -5.548123836517334
    4. 'strict' → logprob: -7.798123836517334
    5. ' n' → logprob: -8.048124313354492
    6. ' neg' → logprob: -9.423124313354492
    7. ' strict' → logprob: -10.048124313354492
    8. '#' → logprob: -10.173124313354492
    9. 'moins' → logprob: -10.173124313354492
    10. ' negativ' → logprob: -10.423124313354492

Token 320: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.0007133854669518769
    2. 'ly' → logprob: -7.500713348388672
    3. 'ment' → logprob: -9.625713348388672
    4. 'ements' → logprob: -10.125713348388672
    5. 'ément' → logprob: -11.750713348388672
    6. 'lement' → logprob: -11.750713348388672
    7. 'em' → logprob: -12.125713348388672
    8. 'rement' → logprob: -12.250713348388672
    9. 'emment' → logprob: -12.500713348388672
    10. 'e' → logprob: -12.625713348388672

Token 321: ' nég' (ID: 55805)
  Prédit: 'posit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'posit' → logprob: -0.13725528120994568
    2. 'n' → logprob: -2.3872551918029785
    3. 'neg' → logprob: -4.1372551918029785
    4. 'inf' → logprob: -4.6372551918029785
    5. ' nég' → logprob: -5.0122551918029785
    6. ' posit' → logprob: -5.8872551918029785
    7. 'pos' → logprob: -7.5122551918029785
    8. '```' → logprob: -8.887255668640137
    9. 'moins' → logprob: -9.012255668640137
    10. 'plus' → logprob: -9.012255668640137

Token 322: 'atifs' (ID: 66205)
  Prédit: 'atifs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atifs' → logprob: -0.03189781308174133
    2. 's' → logprob: -4.156898021697998
    3. 'eg' → logprob: -4.781898021697998
    4. 'atif' → logprob: -6.406898021697998
    5. 'ifs' → logprob: -6.531898021697998
    6. 'aux' → logprob: -6.656898021697998
    7. 'egs' → logprob: -6.781898021697998
    8. 'ég' → logprob: -7.156898021697998
    9. 'ative' → logprob: -7.906898021697998
    10. 'ativement' → logprob: -8.65689754486084

Token 323: ' (' (ID: 350)
  Prédit: 'PLUS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'PLUS' → logprob: -0.30182912945747375
    2. 'POS' → logprob: -2.0518290996551514
    3. '(' → logprob: -2.9268290996551514
    4. ',' → logprob: -3.4268290996551514
    5. 'plus' → logprob: -4.0518293380737305
    6. 'pos' → logprob: -5.1768293380737305
    7. 'POSIT' → logprob: -5.4268293380737305
    8. 'positive' → logprob: -5.8018293380737305
    9. '(P' → logprob: -6.3018293380737305
    10. '#' → logprob: -6.3018293380737305

Token 324: 'MIN' (ID: 20797)
  Prédit: 'MO'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MO' → logprob: -0.5825934410095215
    2. 'MIN' → logprob: -1.7075934410095215
    3. 'NEG' → logprob: -1.7075934410095215
    4. 'PLUS' → logprob: -3.0825934410095215
    5. ')' → logprob: -4.9575934410095215
    6. 'moins' → logprob: -4.9575934410095215
    7. 'M' → logprob: -5.5825934410095215
    8. 'POS' → logprob: -5.8325934410095215
    9. 'MI' → logprob: -6.2075934410095215
    10. 'N' → logprob: -6.4575934410095215

Token 325: 'US' (ID: 3042)
  Prédit: 'US'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'US' → logprob: -0.1002955213189125
    2. 'S' → logprob: -3.2252955436706543
    3. ')' → logprob: -3.6002955436706543
    4. 'ES' → logprob: -4.100295543670654
    5. ')
' → logprob: -5.350295543670654
    6. 'E' → logprob: -6.225295543670654
    7. 'us' → logprob: -6.975295543670654
    8. 'U' → logprob: -7.350295543670654
    9. 'POS' → logprob: -7.850295543670654
    10. 'OS' → logprob: -7.975295543670654

Token 326: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.060644909739494324
    2. ')
' → logprob: -3.3106448650360107
    3. ').' → logprob: -3.9356448650360107
    4. ').
' → logprob: -6.56064510345459
    5. ')

' → logprob: -7.81064510345459
    6. '):
' → logprob: -8.56064510345459
    7. '):' → logprob: -8.68564510345459
    8. ',' → logprob: -8.81064510345459
    9. '),' → logprob: -9.31064510345459
    10. '#' → logprob: -9.43564510345459

Token 327: 'PLUS' (ID: 107077)
  Prédit: 'PLUS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'PLUS' → logprob: -0.014530492015182972
    2. 'plus' → logprob: -4.264530658721924
    3. ' PLUS' → logprob: -8.264530181884766
    4. 'POS' → logprob: -9.889530181884766
    5. 'PL' → logprob: -10.639530181884766
    6. 'positive' → logprob: -12.139530181884766
    7. '_PLUS' → logprob: -12.139530181884766
    8. 'Plus' → logprob: -12.139530181884766
    9. ' plus' → logprob: -12.389530181884766
    10. 'count' → logprob: -13.389530181884766

Token 328: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5775195360183716
    2. '=' → logprob: -0.8275195360183716
    3. ',' → logprob: -6.452519416809082
    4. ' ' → logprob: -14.077519416809082
    5. ' ,' → logprob: -14.327519416809082
    6. '=int' → logprob: -15.202519416809082
    7. '0' → logprob: -15.827519416809082
    8. '=len' → logprob: -16.0775203704834
    9. ')' → logprob: -16.7025203704834
    10. ' =
' → logprob: -16.8275203704834

Token 329: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2797148525714874
    2. 'sum' → logprob: -1.779714822769165
    3. 'len' → logprob: -2.904714822769165
    4. ' sum' → logprob: -4.779715061187744
    5. ' ' → logprob: -5.029715061187744
    6. ' len' → logprob: -5.404715061187744
    7. 'N' → logprob: -7.154715061187744
    8. ' N' → logprob: -8.654714584350586
    9. 'A' → logprob: -9.529714584350586
    10. '[len' → logprob: -10.779714584350586

Token 330: '0' (ID: 15)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.6047758460044861
    2. 'len' → logprob: -0.9797758460044861
    3. '0' → logprob: -2.604775905609131
    4. ' sum' → logprob: -6.479775905609131
    5. ' len' → logprob: -6.479775905609131
    6. 'N' → logprob: -6.729775905609131
    7. '[len' → logprob: -9.729775428771973
    8. ' ' → logprob: -10.104775428771973
    9. '[' → logprob: -10.854775428771973
    10. '1' → logprob: -10.854775428771973

Token 331: '  ' (ID: 256)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.32528960704803467
    2. 'MIN' → logprob: -1.5752896070480347
    3. 'NEG' → logprob: -3.950289726257324
    4. '<|end|>' → logprob: -4.575289726257324
    5. ' =' → logprob: -4.700289726257324
    6. '#' → logprob: -4.825289726257324
    7. 'for' → logprob: -5.200289726257324
    8. '=' → logprob: -5.325289726257324
    9. '0' → logprob: -5.950289726257324
    10. ',' → logprob: -6.325289726257324

Token 332: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.013591081835329533
    2. 'MIN' → logprob: -4.388591289520264
    3. '<|end|>' → logprob: -8.263590812683105
    4. 'NEG' → logprob: -8.638590812683105
    5. ' 
' → logprob: -8.763590812683105
    6. '#' (adapté à ' #') → logprob: -8.763590812683105
    7. '  
' → logprob: -9.388590812683105
    8. '0' → logprob: -10.013590812683105
    9. 'for' → logprob: -10.138590812683105
    10. ' ' → logprob: -10.138590812683105

Token 333: ' Comp' (ID: 5211)
  Prédit: 'MIN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MIN' → logprob: -0.054465461522340775
    2. 'for' → logprob: -3.8044655323028564
    3. '<|end|>' → logprob: -3.8044655323028564
    4. 'NEG' → logprob: -5.804465293884277
    5. 'PLUS' → logprob: -6.804465293884277
    6. '#' → logprob: -6.929465293884277
    7. ' for' → logprob: -7.179465293884277
    8. '0' → logprob: -7.304465293884277
    9. '_MINUS' → logprob: -7.554465293884277
    10. '<|end|>' → logprob: -8.054465293884277

Token 334: 'teur' (ID: 45262)
  Prédit: 'ter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ter' → logprob: -0.8061777353286743
    2. 'teur' → logprob: -0.8061777353286743
    3. 't' → logprob: -2.8061776161193848
    4. 'te' → logprob: -3.5561776161193848
    5. '=' → logprob: -5.056177616119385
    6. '#' → logprob: -5.431177616119385
    7. 'té' → logprob: -5.806177616119385
    8. 'ton' → logprob: -6.681177616119385
    9. 'tez' → logprob: -7.681177616119385
    10. '+=' → logprob: -8.431178092956543

Token 335: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 336: ' les' (ID: 1341)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8763664960861206
    2. 'élé' → logprob: -0.8763664960861206
    3. 'les' → logprob: -2.75136661529541
    4. 'A' → logprob: -3.12636661529541
    5. 'val' → logprob: -4.50136661529541
    6. '0' → logprob: -4.62636661529541
    7. 'i' → logprob: -4.87636661529541
    8. ' les' → logprob: -5.50136661529541
    9. 'el' → logprob: -5.50136661529541
    10. 'elements' → logprob: -5.50136661529541

Token 337: ' ent' (ID: 1121)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.015377555042505264
    2. 'n' → logprob: -5.515377521514893
    3. 'val' → logprob: -5.765377521514893
    4. 'posit' → logprob: -5.890377521514893
    5. 'x' → logprob: -7.015377521514893
    6. 'nombre' → logprob: -7.140377521514893
    7. ' éléments' → logprob: -7.140377521514893
    8. 'ent' → logprob: -7.265377521514893
    9. 'elements' → logprob: -7.390377521514893
    10. 'pos' → logprob: -7.640377521514893

Token 338: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.005471024662256241
    2. 'i' → logprob: -6.255471229553223
    3. 'ières' → logprob: -6.380471229553223
    4. 's' → logprob: -7.380471229553223
    5. 'ier' → logprob: -8.880471229553223
    6. 'ieurs' → logprob: -8.880471229553223
    7. 'ités' → logprob: -9.005471229553223
    8. 'érieurs' → logprob: -9.255471229553223
    9. 'ière' → logprob: -9.380471229553223
    10. 'rés' → logprob: -9.505471229553223

Token 339: ' >=' (ID: 5064)
  Prédit: 'posit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'posit' → logprob: -0.4284285306930542
    2. 'strict' → logprob: -1.4284285306930542
    3. 'n' → logprob: -3.9284286499023438
    4. 'neg' → logprob: -4.053428649902344
    5. ' posit' → logprob: -4.053428649902344
    6. '#' → logprob: -4.803428649902344
    7. ' nég' → logprob: -4.928428649902344
    8. 'pos' → logprob: -5.053428649902344
    9. 'plus' → logprob: -5.178428649902344
    10. '>=' → logprob: -5.553428649902344

Token 340: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006716555915772915
    2. ' ' → logprob: -5.006716728210449
    3. '   ' → logprob: -14.88171672821045
    4. '  ' → logprob: -15.25671672821045
    5. '```' → logprob: -16.006715774536133
    6. '
' → logprob: -16.506715774536133
    7. ' ' → logprob: -16.506715774536133
    8. ')' → logprob: -17.006715774536133
    9. 'A' → logprob: -17.131715774536133
    10. '1' → logprob: -17.256715774536133

Token 341: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '1' → logprob: -18.875009536743164
    4. '```' → logprob: -19.500009536743164
    5. 'zero' → logprob: -19.625009536743164
    6. '  ' → logprob: -19.625009536743164
    7. '=' → logprob: -20.125009536743164
    8. '۰' → logprob: -20.250009536743164
    9. '   ' → logprob: -20.500009536743164
    10. '-' → logprob: -20.750009536743164

Token 342: '
' (ID: 198)
  Prédit: 'MIN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MIN' → logprob: -0.0016453108983114362
    2. '
' → logprob: -7.001645088195801
    3. 'NEG' → logprob: -8.0016450881958
    4. 'PLUS' → logprob: -8.8766450881958
    5. '<|end|>' → logprob: -9.7516450881958
    6. '#' → logprob: -9.8766450881958
    7. ',' → logprob: -9.8766450881958
    8. '_MINUS' → logprob: -10.3766450881958
    9. ' MIN' → logprob: -11.5016450881958
    10. 'for' → logprob: -11.8766450881958

Token 343: 'MIN' (ID: 20797)
  Prédit: 'MIN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MIN' → logprob: -0.00023929782037157565
    2. 'for' → logprob: -8.750239372253418
    3. 'minus' → logprob: -9.750239372253418
    4. 'PLUS' → logprob: -12.000239372253418
    5. '_MINUS' → logprob: -12.250239372253418
    6. ' for' → logprob: -12.875239372253418
    7. 'Minus' → logprob: -13.125239372253418
    8. 'M' → logprob: -13.875239372253418
    9. '#' → logprob: -14.000239372253418
    10. ' MIN' → logprob: -14.125239372253418

Token 344: 'US' (ID: 3042)
  Prédit: 'US'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'US' → logprob: -0.01609947718679905
    2. ' =' → logprob: -4.891099452972412
    3. '=' → logprob: -5.266099452972412
    4. 'us' → logprob: -6.016099452972412
    5. 'U' → logprob: -7.891099452972412
    6. 'S' → logprob: -8.26609992980957
    7. ' ' → logprob: -10.26609992980957
    8. 'ES' → logprob: -10.76609992980957
    9. '>' → logprob: -10.89109992980957
    10. '   ' → logprob: -10.89109992980957

Token 345: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740825295448303
    2. '=' → logprob: -0.9740825295448303
    3. ' ' → logprob: -12.224082946777344
    4. '0' → logprob: -15.349082946777344
    5. ',' → logprob: -15.849082946777344
    6. '  ' → logprob: -15.974082946777344
    7. '   ' → logprob: -17.349082946777344
    8. '>' → logprob: -17.849082946777344
    9. ' =
' → logprob: -18.099082946777344
    10. '1' → logprob: -18.224082946777344

Token 346: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0049947709776461124
    2. ' ' → logprob: -5.504994869232178
    3. 'sum' → logprob: -7.379994869232178
    4. 'len' → logprob: -8.50499439239502
    5. 'A' → logprob: -10.25499439239502
    6. ' sum' → logprob: -10.37999439239502
    7. ' len' → logprob: -12.00499439239502
    8. ' A' → logprob: -12.37999439239502
    9. '1' → logprob: -12.37999439239502
    10. '  ' → logprob: -13.37999439239502

Token 347: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011629798245849088
    2. ' ' → logprob: -9.125116348266602
    3. '-' → logprob: -12.750116348266602
    4. 'len' → logprob: -13.250116348266602
    5. '1' → logprob: -13.500116348266602
    6. 'sum' → logprob: -14.625116348266602
    7. 'A' → logprob: -15.375116348266602
    8. '   ' → logprob: -16.2501163482666
    9. '  ' → logprob: -16.3751163482666
    10. 'N' → logprob: -16.3751163482666

Token 348: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24870958924293518
    2. '
' → logprob: -1.7487095594406128
    3. ' for' → logprob: -3.4987096786499023
    4. '<|end|>' → logprob: -4.373709678649902
    5. '#' → logprob: -6.998709678649902
    6. '

' → logprob: -7.373709678649902
    7. '  
' → logprob: -7.498709678649902
    8. '<|end|>' → logprob: -7.748709678649902
    9. '0' → logprob: -8.748709678649902
    10. ' ' → logprob: -8.873709678649902

Token 349: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0640808716416359
    2. '
' → logprob: -2.9390809535980225
    3. ' for' → logprob: -4.939080715179443
    4. '#' → logprob: -6.814080715179443
    5. '

' → logprob: -7.814080715179443
    6. '  
' → logprob: -8.939081192016602
    7. '<|end|>' → logprob: -9.314081192016602
    8. ' ' → logprob: -10.064081192016602
    9. '=' → logprob: -10.064081192016602
    10. ' 
' → logprob: -11.064081192016602

Token 350: ' Comp' (ID: 5211)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.738305926322937
    2. '1' → logprob: -1.488305926322937
    3. '#' → logprob: -2.1133060455322266
    4. 'sum' → logprob: -2.2383060455322266
    5. ' ' → logprob: -3.2383060455322266
    6. 'len' → logprob: -4.863306045532227
    7. ' sum' → logprob: -4.988306045532227
    8. 'N' → logprob: -5.238306045532227
    9. 'for' → logprob: -6.113306045532227
    10. 'A' → logprob: -6.238306045532227

Token 351: 'teur' (ID: 45262)
  Prédit: 'teur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'teur' → logprob: -0.005086225923150778
    2. '#' → logprob: -6.005086421966553
    3. 't' → logprob: -7.130086421966553
    4. '=' → logprob: -7.255086421966553
    5. 'p' → logprob: -8.630085945129395
    6. 'tor' → logprob: -9.255085945129395
    7. 'for' → logprob: -9.255085945129395
    8. 'te' → logprob: -9.505085945129395
    9. 'ateur' → logprob: -9.505085945129395
    10. 'enseur' → logprob: -9.505085945129395

Token 352: ' pour' (ID: 1930)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31738993525505066
    2. ' =' → logprob: -1.692389965057373
    3. 'for' → logprob: -2.692389965057373
    4. '  ' → logprob: -4.067389965057373
    5. ' for' → logprob: -6.442389965057373
    6. '#' → logprob: -7.567389965057373
    7. ' ' → logprob: -8.442389488220215
    8. '   ' → logprob: -8.817389488220215
    9. 'pour' → logprob: -8.817389488220215
    10. '+=' → logprob: -9.317389488220215

Token 353: ' les' (ID: 1341)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.344543993473053
    2. 'x' → logprob: -3.219543933868408
    3. '[x' → logprob: -3.344543933868408
    4. '[i' → logprob: -3.469543933868408
    5. 'len' → logprob: -3.594543933868408
    6. '(x' → logprob: -3.594543933868408
    7. '1' → logprob: -3.594543933868408
    8. 'filter' → logprob: -3.844543933868408
    9. '(A' → logprob: -4.344543933868408
    10. '[A' → logprob: -4.594543933868408

Token 354: ' ent' (ID: 1121)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.805599570274353
    2. 'A' → logprob: -1.305599570274353
    3. '1' → logprob: -2.4305996894836426
    4. 'x' → logprob: -2.6805996894836426
    5. 'ent' → logprob: -3.6805996894836426
    6. 'len' → logprob: -4.055599689483643
    7. ' ' → logprob: -4.430599689483643
    8. 'i' → logprob: -4.430599689483643
    9. 'val' → logprob: -4.555599689483643
    10. 'int' → logprob: -4.805599689483643

Token 355: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0016868433449417353
    2. 'ires' → logprob: -7.876687049865723
    3. 't' → logprob: -8.001687049865723
    4. 'ières' → logprob: -8.501687049865723
    5. 'ier' → logprob: -8.751687049865723
    6. 'ir' → logprob: -9.251687049865723
    7. '#' → logprob: -9.751687049865723
    8. 'irs' → logprob: -9.751687049865723
    9. 'ents' → logprob: -9.751687049865723
    10. 'ière' → logprob: -9.876687049865723

Token 356: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5242314338684082
    2. ' <' → logprob: -0.8992314338684082
    3. '>=' → logprob: -9.02423095703125
    4. '#' → logprob: -9.14923095703125
    5. '<int' → logprob: -9.14923095703125
    6. ' ' → logprob: -9.27423095703125
    7. '>' → logprob: -9.77423095703125
    8. '<len' → logprob: -9.77423095703125
    9. '<n' → logprob: -9.89923095703125
    10. ' >=' → logprob: -9.89923095703125

Token 357: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015029559144750237
    2. ' ' → logprob: -6.501502990722656
    3. '   ' → logprob: -16.001502990722656
    4. ')' → logprob: -16.001502990722656
    5. ' ' → logprob: -16.126502990722656
    6. ',' → logprob: -16.876502990722656
    7. '  ' → logprob: -16.876502990722656
    8. '1' → logprob: -17.939002990722656
    9. '```' → logprob: -18.001502990722656
    10. '۰' → logprob: -18.251502990722656

Token 358: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. ')' → logprob: -19.125001907348633
    4. 'A' → logprob: -19.625001907348633
    5. '1' → logprob: -19.750001907348633
    6. '۰' → logprob: -20.500001907348633
    7. 'O' → logprob: -20.750001907348633
    8. '(' → logprob: -21.000001907348633
    9. '```' → logprob: -21.000001907348633
    10. '2' → logprob: -21.125001907348633

Token 359: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.018051838502287865
    2. '
' → logprob: -4.143051624298096
    3. ' for' → logprob: -6.643051624298096
    4. '<|end|>' → logprob: -7.393051624298096
    5. '#' → logprob: -10.893052101135254
    6. 'i' → logprob: -11.518052101135254
    7. 'n' → logprob: -11.643052101135254
    8. '

' → logprob: -11.893052101135254
    9. '<|end|>' → logprob: -12.018052101135254
    10. '+
' → logprob: -12.018052101135254

Token 360: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00030316898482851684
    2. ' for' → logprob: -8.750303268432617
    3. '
' → logprob: -8.875303268432617
    4. 'i' → logprob: -12.500303268432617
    5. '```' → logprob: -15.000303268432617
    6. '<|end|>' → logprob: -15.000303268432617
    7. '#' → logprob: -15.875303268432617
    8. 'n' → logprob: -16.375303268432617
    9. ')' → logprob: -16.375303268432617
    10. '+' → logprob: -17.375303268432617

Token 361: ' Parc' (ID: 68618)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.723352049040841e-06
    2. '#' → logprob: -12.500004768371582
    3. ' for' → logprob: -14.500004768371582
    4. '```' → logprob: -15.875004768371582
    5. 'i' → logprob: -16.125003814697266
    6. 'For' → logprob: -17.125003814697266
    7. 'pour' → logprob: -17.500003814697266
    8. '
' → logprob: -17.625003814697266
    9. '	for' → logprob: -18.625003814697266
    10. 'fo' → logprob: -18.750003814697266

Token 362: 'our' (ID: 401)
  Prédit: 'our'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -3.9888433093437925e-05
    2. 'ours' → logprob: -10.875040054321289
    3. 'orrer' → logprob: -11.500040054321289
    4. '#' → logprob: -12.750040054321289
    5. 'or' → logprob: -12.750040054321289
    6. 'ou' → logprob: -13.875040054321289
    7. 'orer' → logprob: -14.000040054321289
    8. 'ourt' → logprob: -14.125040054321289
    9. 'Our' → logprob: -14.375040054321289
    10. 'user' → logprob: -15.000040054321289

Token 363: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -3.452426608419046e-05
    2. 'r' → logprob: -11.12503433227539
    3. 'er' → logprob: -11.50003433227539
    4. 'i' → logprob: -12.87503433227539
    5. '#' → logprob: -13.00003433227539
    6. 'is' → logprob: -13.25003433227539
    7. 'rir' → logprob: -14.12503433227539
    8. 's' → logprob: -14.62503433227539
    9. 'e' → logprob: -14.62503433227539
    10. 'ire' → logprob: -14.75003433227539

Token 364: ' chaque' (ID: 21194)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5764638781547546
    2. ' A' → logprob: -0.8264638781547546
    3. ' range' → logprob: -7.82646369934082
    4. ' ' → logprob: -9.82646369934082
    5. 'range' → logprob: -10.07646369934082
    6. ' for' → logprob: -12.20146369934082
    7. 'for' → logprob: -12.45146369934082
    8. ' la' → logprob: -12.82646369934082
    9. '(A' → logprob: -12.82646369934082
    10. ' a' → logprob: -13.07646369934082

Token 365: ' élément' (ID: 99627)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.27285557985305786
    2. 'x' → logprob: -2.272855520248413
    3. ' a' → logprob: -3.147855520248413
    4. 'i' → logprob: -3.397855520248413
    5. 'element' → logprob: -4.397855758666992
    6. 'value' → logprob: -4.772855758666992
    7. 'val' → logprob: -5.022855758666992
    8. 'e' → logprob: -5.272855758666992
    9. 'num' → logprob: -5.397855758666992
    10. ' i' → logprob: -5.397855758666992

Token 366: ' dans' (ID: 2671)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6443110704421997
    2. 'in' → logprob: -1.5193110704421997
    3. 'A' → logprob: -1.8943110704421997
    4. ' A' → logprob: -2.26931095123291
    5. ' de' → logprob: -6.76931095123291
    6. ' dans' → logprob: -8.51931095123291
    7. 'de' → logprob: -8.76931095123291
    8. 'dans' → logprob: -8.89431095123291
    9. ' ' → logprob: -9.01931095123291
    10. ' of' → logprob: -9.01931095123291

Token 367: ' la' (ID: 557)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0006265374249778688
    2. ' A' → logprob: -7.375626564025879
    3. ' ' → logprob: -18.250625610351562
    4. '(A' → logprob: -19.000625610351562
    5. '	A' → logprob: -19.250625610351562
    6. 'range' → logprob: -20.250625610351562
    7. 'a' → logprob: -20.375625610351562
    8. '   ' → logprob: -20.750625610351562
    9. ' range' → logprob: -21.625625610351562
    10. '
' → logprob: -21.625625610351562

Token 368: ' liste' (ID: 31719)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0002702760975807905
    2. ' A' → logprob: -8.250269889831543
    3. 'for' → logprob: -12.375269889831543
    4. 'range' → logprob: -13.375269889831543
    5. 'liste' → logprob: -13.375269889831543
    6. 'list' → logprob: -14.750269889831543
    7. ' range' → logprob: -15.375269889831543
    8. 'array' → logprob: -15.875269889831543
    9. ' ' → logprob: -16.00027084350586
    10. ' for' → logprob: -16.00027084350586

Token 369: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.1129494458436966
    2. ' A' → logprob: -2.2379493713378906
    3. 'for' → logprob: -9.23794937133789
    4. ' for' → logprob: -10.61294937133789
    5. '(A' → logprob: -12.61294937133789
    6. ':' → logprob: -14.61294937133789
    7. ' ' → logprob: -15.61294937133789
    8. ' de' → logprob: -15.73794937133789
    9. ':
' → logprob: -15.86294937133789
    10. 'in' → logprob: -15.86294937133789

Token 370: ' tri' (ID: 12665)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.35393717885017395
    2. 'for' → logprob: -1.6039371490478516
    3. ':
' → logprob: -2.3539371490478516
    4. ' for' → logprob: -6.228937149047852
    5. 'in' → logprob: -12.603937149047852
    6. ' :' → logprob: -13.353937149047852
    7. ':
' → logprob: -13.853937149047852
    8. 'pour' → logprob: -13.853937149047852
    9. ' :
' → logprob: -14.103937149047852
    10. '```' → logprob: -14.228937149047852

Token 371: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.03652583807706833
    2. 't' → logprob: -4.411525726318359
    3. 'ot' → logprob: -4.911525726318359
    4. 'é' → logprob: -5.286525726318359
    5. 'A' → logprob: -5.786525726318359
    6. 'née' → logprob: -6.036525726318359
    7. 's' → logprob: -6.536525726318359
    8. 'v' → logprob: -7.036525726318359
    9. '#' → logprob: -7.286525726318359
    10. 'és' → logprob: -7.536525726318359

Token 372: ' pour' (ID: 1930)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7663333415985107
    2. 'for' → logprob: -1.2663333415985107
    3. ':' → logprob: -1.3913333415985107
    4. ' for' → logprob: -5.39133358001709
    5. '
' → logprob: -9.64133358001709
    6. ' :
' → logprob: -11.14133358001709
    7. 'in' → logprob: -11.64133358001709
    8. ',' → logprob: -11.76633358001709
    9. '```' → logprob: -12.26633358001709
    10. ':
' → logprob: -12.39133358001709

Token 373: ' mettre' (ID: 25339)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.19003264605998993
    2. ' A' → logprob: -2.065032720565796
    3. ':' → logprob: -4.190032482147217
    4. ' ' → logprob: -4.815032482147217
    5. ' range' → logprob: -4.940032482147217
    6. '  ' → logprob: -5.440032482147217
    7. 'range' → logprob: -5.690032482147217
    8. '   ' → logprob: -6.815032482147217
    9. ' (' → logprob: -7.190032482147217
    10. ' déterminer' → logprob: -7.190032482147217

Token 374: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.6628469228744507
    2. ' à' → logprob: -1.5378469228744507
    3. 'A' → logprob: -1.9128469228744507
    4. 'À' → logprob: -2.6628470420837402
    5. ' A' → logprob: -4.66284704208374
    6. 'jour' → logprob: -4.91284704208374
    7. '#' → logprob: -5.03784704208374
    8. 'x' → logprob: -5.66284704208374
    9. 'PLUS' → logprob: -5.78784704208374
    10. 'la' → logprob: -6.16284704208374

Token 375: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.002453065011650324
    2. '```' → logprob: -6.252452850341797
    3. 'day' → logprob: -8.752452850341797
    4. 'jours' → logprob: -9.377452850341797
    5. 'jou' → logprob: -10.002452850341797
    6. ' jour' → logprob: -10.127452850341797
    7. '
' → logprob: -10.877452850341797
    8. ' ' → logprob: -11.002452850341797
    9. 'Jour' → logprob: -11.127452850341797
    10. 'A' → logprob: -11.127452850341797

Token 376: ' les' (ID: 1341)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14072534441947937
    2. ' for' → logprob: -2.3907253742218018
    3. 'PLUS' → logprob: -3.8907253742218018
    4. 'A' → logprob: -4.515725135803223
    5. 'range' → logprob: -5.890725135803223
    6. 'if' → logprob: -6.765725135803223
    7. ' range' → logprob: -6.890725135803223
    8. '(' → logprob: -7.015725135803223
    9. ' (' → logprob: -7.515725135803223
    10. '(A' → logprob: -7.515725135803223

Token 377: ' compte' (ID: 19657)
  Prédit: 'PLUS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'PLUS' → logprob: -0.6013107895851135
    2. 'for' → logprob: -1.6013107299804688
    3. 'if' → logprob: -1.7263107299804688
    4. ' for' → logprob: -3.2263107299804688
    5. ' PLUS' → logprob: -4.101310729980469
    6. ' if' → logprob: -4.476310729980469
    7. '_PLUS' → logprob: -6.601310729980469
    8. '#' → logprob: -7.226310729980469
    9. 'i' → logprob: -7.976310729980469
    10. ' (' → logprob: -8.601310729980469

Token 378: 'urs' (ID: 1628)
  Prédit: 'ur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.8003620505332947
    2. 'urs' → logprob: -0.9253620505332947
    3. 'for' → logprob: -2.3003621101379395
    4. 'nts' → logprob: -3.5503621101379395
    5. 'ments' → logprob: -4.1753621101379395
    6. 'A' → logprob: -5.5503621101379395
    7. 'r' → logprob: -5.8003621101379395
    8. 'ents' → logprob: -7.8003621101379395
    9. 'rs' → logprob: -7.9253621101379395
    10. ' for' → logprob: -8.300361633300781

Token 379: ' PLUS' (ID: 61301)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0015466450713574886
    2. ' for' → logprob: -7.126546859741211
    3. ':
' → logprob: -7.501546859741211
    4. ':' → logprob: -8.876546859741211
    5. '
' → logprob: -10.626546859741211
    6. '```' → logprob: -10.876546859741211
    7. 'pour' → logprob: -12.251546859741211
    8. 'in' → logprob: -13.626546859741211
    9. 'dans' → logprob: -15.501546859741211
    10. '``' → logprob: -16.00154685974121

Token 380: ' et' (ID: 859)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004631384275853634
    2. ':
' → logprob: -5.629631519317627
    3. ' for' → logprob: -7.754631519317627
    4. ':' → logprob: -7.754631519317627
    5. ',' → logprob: -9.629631042480469
    6. 'and' → logprob: -9.754631042480469
    7. 'pour' → logprob: -11.004631042480469
    8. 'et' → logprob: -11.629631042480469
    9. ' and' → logprob: -11.754631042480469
    10. '```' → logprob: -12.129631042480469

Token 381: ' MIN' (ID: 27151)
  Prédit: 'MIN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MIN' → logprob: -0.001502598519437015
    2. ' MIN' → logprob: -6.501502513885498
    3. ' ' → logprob: -15.626502990722656
    4. '_MIN' → logprob: -16.626502990722656
    5. '.MIN' → logprob: -17.376502990722656
    6. 'for' → logprob: -17.501502990722656
    7. ' ' → logprob: -18.251502990722656
    8. '  ' → logprob: -18.251502990722656
    9. ' for' → logprob: -18.376502990722656
    10. '   ' → logprob: -18.751502990722656

Token 382: 'US' (ID: 3042)
  Prédit: 'US'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'US' → logprob: -0.009957713074982166
    2. 'us' → logprob: -4.884957790374756
    3. 'OUS' → logprob: -6.759957790374756
    4. '
' → logprob: -8.634957313537598
    5. '```' → logprob: -8.759957313537598
    6. 'USES' → logprob: -8.759957313537598
    7. 'USE' → logprob: -9.384957313537598
    8. 'S' → logprob: -9.759957313537598
    9. 'UX' → logprob: -9.884957313537598
    10. '_MINUS' → logprob: -10.134957313537598

Token 383: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0004245972086209804
    2. ' for' → logprob: -8.3754243850708
    3. '
' → logprob: -9.0004243850708
    4. ':
' → logprob: -9.6254243850708
    5. ':' → logprob: -12.6254243850708
    6. '```' → logprob: -13.7504243850708
    7. 'pour' → logprob: -15.8754243850708
    8. 'in' → logprob: -17.125425338745117
    9. '.
' → logprob: -18.000425338745117
    10. '.' → logprob: -18.375425338745117

Token 384: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.704273118884885e-07
    2. ' for' → logprob: -14.375000953674316
    3. '
' → logprob: -17.5
    4. '```' → logprob: -17.625
    5. '	for' → logprob: -22.375
    6. '``' → logprob: -23.75
    7. ':' → logprob: -24.75
    8. 'For' → logprob: -25.5
    9. '    
' → logprob: -25.5
    10. 'from' → logprob: -25.625

Token 385: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.564277172088623
    2. 'num' → logprob: -2.064277172088623
    3. 'x' → logprob: -2.189277172088623
    4. ' a' → logprob: -2.689277172088623
    5. ' num' → logprob: -3.189277172088623
    6. 'value' → logprob: -3.814277172088623
    7. ' x' → logprob: -3.814277172088623
    8. ' value' → logprob: -5.064277172088623
    9. 'val' → logprob: -5.189277172088623
    10. 'v' → logprob: -5.439277172088623

Token 386: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011424093507230282
    2. 'in' → logprob: -4.5114240646362305
    3. ' ' → logprob: -8.01142406463623
    4. 'a' → logprob: -10.63642406463623
    5. 'n' → logprob: -12.01142406463623
    6. ' a' → logprob: -13.01142406463623
    7. 's' → logprob: -13.01142406463623
    8. '  ' → logprob: -13.01142406463623
    9. 'i' → logprob: -13.51142406463623
    10. ' i' → logprob: -13.63642406463623

Token 387: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0024758970830589533
    2. ' A' → logprob: -6.002475738525391
    3. ' ' → logprob: -15.87747573852539
    4. '	A' → logprob: -17.50247573852539
    5. '   ' → logprob: -18.75247573852539
    6. '(A' → logprob: -19.00247573852539
    7. '  ' → logprob: -20.00247573852539
    8. 'a' → logprob: -20.12747573852539
    9. '
' → logprob: -20.50247573852539
    10. '_A' → logprob: -20.75247573852539

Token 388: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2519364058971405
    2. ':
' → logprob: -1.501936435699463
    3. '):
' → logprob: -12.876935958862305
    4. ':
' → logprob: -13.751935958862305
    5. '   ' → logprob: -13.876935958862305
    6. ' :
' → logprob: -13.876935958862305
    7. ' :' → logprob: -14.126935958862305
    8. '():
' → logprob: -14.751935958862305
    9. ':

' → logprob: -15.251935958862305
    10. 'if' → logprob: -16.376935958862305

Token 389: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02740360051393509
    2. ' if' → logprob: -3.9024035930633545
    3. 'if' → logprob: -6.027403831481934
    4. '
' → logprob: -6.027403831481934
    5. ' 
' → logprob: -7.277403831481934
    6. '    
' → logprob: -7.277403831481934
    7. '<|end|>' → logprob: -8.402403831481934
    8. '```' → logprob: -8.527403831481934
    9. '	if' → logprob: -9.152403831481934
    10. '    ' → logprob: -10.902403831481934

Token 390: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7513601183891296
    2. 'if' (adapté à ' if') → logprob: -0.7513601183891296
    3. ' if' → logprob: -2.8763601779937744
    4. '```' → logprob: -9.501359939575195
    5. '    
' → logprob: -9.751359939575195
    6. '
' → logprob: -10.501359939575195
    7. '	if' → logprob: -10.626359939575195
    8. ' 
' → logprob: -11.126359939575195
    9. '  ' → logprob: -12.876359939575195
    10. '    ' → logprob: -12.876359939575195

Token 391: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0015023599844425917
    2. ' a' → logprob: -6.501502513885498
    3. '	a' → logprob: -17.751502990722656
    4. '   ' → logprob: -18.126502990722656
    5. ' ' → logprob: -18.751502990722656
    6. '0' → logprob: -20.751502990722656
    7. '_a' → logprob: -21.126502990722656
    8. '  ' → logprob: -21.251502990722656
    9. '(a' → logprob: -21.376502990722656
    10. '>a' → logprob: -22.126502990722656

Token 392: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.5762661695480347
    2. ' >=' → logprob: -0.8262661695480347
    3. '<' → logprob: -8.451266288757324
    4. ' <' → logprob: -9.701266288757324
    5. ' ' → logprob: -10.201266288757324
    6. ']>=' → logprob: -12.201266288757324
    7. '>' → logprob: -12.451266288757324
    8. ')>=' → logprob: -12.576266288757324
    9. '[' → logprob: -14.076266288757324
    10. '≥' → logprob: -14.951266288757324

Token 393: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026300301775336266
    2. ' ' → logprob: -3.6513001918792725
    3. '1' → logprob: -17.65130043029785
    4. '   ' → logprob: -17.77630043029785
    5. '  ' → logprob: -18.15130043029785
    6. ' ' → logprob: -19.27630043029785
    7. '```' → logprob: -19.27630043029785
    8. '۰' → logprob: -19.58880043029785
    9. '
' → logprob: -20.58880043029785
    10. ' 
' → logprob: -20.83880043029785

Token 394: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '
' → logprob: -18.375045776367188
    4. '  ' → logprob: -19.000045776367188
    5. '   ' → logprob: -19.125045776367188
    6. '```' → logprob: -20.000045776367188
    7. '۰' → logprob: -20.250045776367188
    8. '1' → logprob: -20.250045776367188
    9. '00' → logprob: -20.625045776367188
    10. '

' → logprob: -21.375045776367188

Token 395: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.575958251953125
    2. ':' → logprob: -0.825958251953125
    3. '):
' → logprob: -12.200958251953125
    4. '   ' → logprob: -12.450958251953125
    5. '+' → logprob: -12.825958251953125
    6. '+:' → logprob: -13.200958251953125
    7. ':
' → logprob: -13.700958251953125
    8. ' :
' → logprob: -13.825958251953125
    9. '):' → logprob: -13.950958251953125
    10. 'PLUS' → logprob: -14.200958251953125

Token 396: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06373957544565201
    2. 'PLUS' → logprob: -2.938739538192749
    3. ' PLUS' → logprob: -5.813739776611328
    4. '   ' → logprob: -5.938739776611328
    5. '
' → logprob: -6.188739776611328
    6. '_PLUS' → logprob: -7.688739776611328
    7. '        
' → logprob: -8.063739776611328
    8. '+' → logprob: -8.688739776611328
    9. '```' → logprob: -9.688739776611328
    10. '    
' → logprob: -10.188739776611328

Token 397: ' PLUS' (ID: 61301)
  Prédit: 'PLUS'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'PLUS' (adapté à ' PLUS') → logprob: -0.0025390402879565954
    2. ' PLUS' → logprob: -6.002539157867432
    3. '   ' → logprob: -9.752538681030273
    4. '       ' → logprob: -12.377538681030273
    5. '+' → logprob: -14.627538681030273
    6. '_PLUS' → logprob: -15.502538681030273
    7. 'plus' → logprob: -15.877538681030273
    8. ' plus' → logprob: -16.252538681030273
    9. '++' → logprob: -16.752538681030273
    10. 'Plus' → logprob: -17.877538681030273

Token 398: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0040785204619169235
    2. ' +=' → logprob: -5.504078388214111
    3. '=' → logprob: -17.129077911376953
    4. '+' → logprob: -18.004077911376953
    5. ']+=' → logprob: -18.629077911376953
    6. '   ' → logprob: -20.379077911376953
    7. '+="' → logprob: -21.754077911376953
    8. '+=(' → logprob: -21.879077911376953
    9. '+='' → logprob: -22.004077911376953
    10. ' ' → logprob: -23.629077911376953

Token 399: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020354038861114532
    2. ' ' → logprob: -8.500203132629395
    3. '   ' → logprob: -21.12520408630371
    4. '
' → logprob: -23.37520408630371
    5. '１' → logprob: -23.37520408630371
    6. '  ' → logprob: -23.62520408630371
    7. '```' → logprob: -23.62520408630371
    8. '0' → logprob: -23.87520408630371
    9. ' ' → logprob: -24.25020408630371
    10. '	' → logprob: -24.37520408630371

Token 400: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '   ' → logprob: -22.125
    4. '
' → logprob: -22.25
    5. '```' → logprob: -23.75
    6. '１' → logprob: -24.5
    7. '

' → logprob: -24.875
    8. '0' → logprob: -24.875
    9. '  ' → logprob: -25.25
    10. '+' → logprob: -25.375

Token 401: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37164318561553955
    2. 'else' → logprob: -1.3716431856155396
    3. ' else' → logprob: -2.87164306640625
    4. '
' → logprob: -9.74664306640625
    5. '	else' → logprob: -10.37164306640625
    6. '    
' → logprob: -12.49664306640625
    7. 'elif' → logprob: -12.74664306640625
    8. '```' → logprob: -12.87164306640625
    9. '  ' → logprob: -13.24664306640625
    10. 'continue' → logprob: -13.62164306640625

Token 402: ' #' (ID: 1069)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.03720637038350105
    2. ' else' → logprob: -3.5372064113616943
    3. '   ' → logprob: -4.912206172943115
    4. '
' → logprob: -10.037206649780273
    5. 'elif' → logprob: -10.787206649780273
    6. '	else' → logprob: -12.537206649780273
    7. '    
' → logprob: -13.662206649780273
    8. 'continue' → logprob: -13.912206649780273
    9. ' 
' → logprob: -15.162206649780273
    10. ' ' → logprob: -15.162206649780273

Token 403: ' In' (ID: 730)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.03714904934167862
    2. ' else' → logprob: -3.787148952484131
    3. 'continue' → logprob: -4.787148952484131
    4. 'MIN' → logprob: -5.662148952484131
    5. 'elif' → logprob: -7.162148952484131
    6. '   ' → logprob: -7.912148952484131
    7. ' continue' → logprob: -8.287149429321289
    8. '+' → logprob: -8.787149429321289
    9. '
' → logprob: -9.537149429321289
    10. 'PLUS' → logprob: -9.537149429321289

Token 404: 'cr' (ID: 798)
  Prédit: 'crement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'crement' → logprob: -0.09651778638362885
    2. 'cr' → logprob: -3.22151780128479
    3. 'cré' → logprob: -4.221517562866211
    4. 'cre' → logprob: -4.596517562866211
    5. 'dex' → logprob: -5.346517562866211
    6. '
' → logprob: -5.471517562866211
    7. 't' → logprob: -5.846517562866211
    8. 'def' → logprob: -6.096517562866211
    9. 'CREMENT' → logprob: -6.471517562866211
    10. 'else' → logprob: -6.471517562866211

Token 405: 'ément' (ID: 17645)
  Prédit: 'crement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'crement' → logprob: -0.043292611837387085
    2. 'cr' → logprob: -3.79329252243042
    3. 'CREMENT' → logprob: -5.04329252243042
    4. 'rement' → logprob: -6.04329252243042
    5. 'cre' → logprob: -6.04329252243042
    6. '+' → logprob: -6.54329252243042
    7. 'cer' → logprob: -6.91829252243042
    8. '#' → logprob: -7.29329252243042
    9. 'cré' → logprob: -7.54329252243042
    10. 'crire' → logprob: -7.54329252243042

Token 406: 'er' (ID: 259)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 407: ' PLUS' (ID: 61301)
  Prédit: 'PLUS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'PLUS' → logprob: -1.1354970932006836
    2. '
' → logprob: -1.2604970932006836
    3. '1' → logprob: -1.7604970932006836
    4. '<|end|>' → logprob: -1.7604970932006836
    5. '```' → logprob: -4.635497093200684
    6. '+' → logprob: -4.760497093200684
    7. ' PLUS' → logprob: -4.885497093200684
    8. '_PLUS' → logprob: -4.885497093200684
    9. 'plus' → logprob: -5.260497093200684
    10. ' 
' → logprob: -6.135497093200684

Token 408: ' si' (ID: 1784)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5241773724555969
    2. '   ' → logprob: -1.0241773128509521
    3. ' else' → logprob: -3.024177312850952
    4. '```' → logprob: -9.149177551269531
    5. '
' → logprob: -9.399177551269531
    6. '	else' → logprob: -10.399177551269531
    7. 'elif' → logprob: -10.774177551269531
    8. '    
' → logprob: -11.399177551269531
    9. '<|end|>' → logprob: -12.649177551269531
    10. ':' → logprob: -13.274177551269531

Token 409: ' l' (ID: 305)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1797735095024109
    2. ' a' → logprob: -1.8047735691070557
    3. ' ' → logprob: -11.929773330688477
    4. ' the' → logprob: -12.054773330688477
    5. '<|end|>' → logprob: -12.429773330688477
    6. ' ' → logprob: -12.804773330688477
    7. '>a' → logprob: -13.304773330688477
    8. 'l' → logprob: -13.554773330688477
    9. '	a' → logprob: -14.054773330688477
    10. 'the' → logprob: -14.179773330688477

Token 410: ''' (ID: 6)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004729634150862694
    2. ''a' → logprob: -5.754729747772217
    3. ' a' → logprob: -6.754729747772217
    4. ''utilisateur' → logprob: -9.004729270935059
    5. 'element' → logprob: -9.629729270935059
    6. 'élé' → logprob: -9.629729270935059
    7. 'e' → logprob: -10.004729270935059
    8. ' élément' → logprob: -10.504729270935059
    9. ''' → logprob: -11.504729270935059
    10. ''objet' → logprob: -11.879729270935059

Token 411: 'élé' (ID: 15228)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0028170011937618256
    2. ' a' → logprob: -5.877817153930664
    3. 'élé' → logprob: -12.377817153930664
    4. ''a' → logprob: -13.127817153930664
    5. ' ' → logprob: -13.627817153930664
    6. '```' → logprob: -14.252817153930664
    7. ' élément' → logprob: -14.377817153930664
    8. 'element' → logprob: -14.377817153930664
    9. 'value' → logprob: -15.002817153930664
    10. '`' → logprob: -15.002817153930664

Token 412: 'ment' (ID: 508)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06826834380626678
    2. 'ment' → logprob: -3.193268299102783
    3. 'lement' → logprob: -4.943268299102783
    4. 'ement' → logprob: -5.068268299102783
    5. 'ément' → logprob: -5.318268299102783
    6. 't' → logprob: -6.568268299102783
    7. 'm' → logprob: -7.193268299102783
    8. 'st' → logprob: -7.193268299102783
    9. 'l' → logprob: -7.943268299102783
    10. 'u' → logprob: -8.318268775939941

Token 413: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.3813842833042145
    2. 'est' → logprob: -1.631384253501892
    3. 'a' → logprob: -2.5063843727111816
    4. '>=' → logprob: -3.8813843727111816
    5. ' a' → logprob: -4.381384372711182
    6. ' >=' → logprob: -5.881384372711182
    7. ' is' → logprob: -5.881384372711182
    8. ' ' → logprob: -7.756384372711182
    9. 'is' → logprob: -8.631383895874023
    10. 's' → logprob: -8.631383895874023

Token 414: ' positif' (ID: 89008)
  Prédit: ' positif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' positif' → logprob: -0.7598806619644165
    2. 'posit' → logprob: -1.1348806619644165
    3. '>=' → logprob: -1.6348806619644165
    4. ' supérieur' → logprob: -5.259880542755127
    5. ' >=' → logprob: -5.384880542755127
    6. 'sup' → logprob: -6.634880542755127
    7. 'positive' → logprob: -6.759880542755127
    8. 'non' → logprob: -7.134880542755127
    9. '>' → logprob: -7.134880542755127
    10. ' positive' → logprob: -7.759880542755127

Token 415: ' ou' (ID: 2031)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0525707006454468
    2. ' or' → logprob: -1.0525707006454468
    3. '<|end|>' → logprob: -1.9275707006454468
    4. 'else' → logprob: -2.3025708198547363
    5. ' else' → logprob: -3.9275708198547363
    6. 'or' → logprob: -4.177570819854736
    7. 'ou' → logprob: -4.927570819854736
    8. ' ou' → logprob: -5.052570819854736
    9. '
' → logprob: -5.927570819854736
    10. '```' → logprob: -6.427570819854736

Token 416: ' nul' (ID: 64435)
  Prédit: 'nul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nul' → logprob: -0.5844181180000305
    2. 'égal' → logprob: -0.8344181180000305
    3. ' nul' → logprob: -6.209418296813965
    4. '0' → logprob: -6.209418296813965
    5. 'n' → logprob: -6.459418296813965
    6. 'ég' → logprob: -7.334418296813965
    7. ' égal' → logprob: -7.334418296813965
    8. 'ou' → logprob: -7.834418296813965
    9. 'egal' → logprob: -8.584418296813965
    10. 'null' → logprob: -8.584418296813965

Token 417: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013692107051610947
    2. 'else' → logprob: -4.3886919021606445
    3. ' else' → logprob: -6.7636919021606445
    4. '```' → logprob: -10.638691902160645
    5. '	else' → logprob: -13.638691902160645
    6. '
' → logprob: -14.263691902160645
    7. '  ' → logprob: -14.888691902160645
    8. 'elif' → logprob: -15.388691902160645
    9. '    
' → logprob: -15.513691902160645
    10. ':' → logprob: -17.26369285583496

Token 418: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0031860284507274628
    2. 'else' → logprob: -6.003186225891113
    3. ' else' → logprob: -7.253186225891113
    4. '```' → logprob: -14.003186225891113
    5. '	else' → logprob: -14.128186225891113
    6. '    
' → logprob: -15.378186225891113
    7. '       ' → logprob: -16.503185272216797
    8. '
' → logprob: -16.628185272216797
    9. '<|end|>' → logprob: -16.753185272216797
    10. 'elif' → logprob: -16.878185272216797

Token 419: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0019343505846336484
    2. ' else' → logprob: -6.25193452835083
    3. '   ' → logprob: -12.126934051513672
    4. 'elif' → logprob: -15.251934051513672
    5. '	else' → logprob: -17.251934051513672
    6. '```' → logprob: -17.751934051513672
    7. ' ' → logprob: -19.876934051513672
    8. 'elser' → logprob: -19.876934051513672
    9. '_else' → logprob: -20.876934051513672
    10. '    
' → logprob: -21.001934051513672

Token 420: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5793151259422302
    2. ':
' → logprob: -0.8293151259422302
    3. '   ' → logprob: -6.329315185546875
    4. '       ' → logprob: -6.454315185546875
    5. ' :
' → logprob: -12.704315185546875
    6. ':
' → logprob: -12.954315185546875
    7. '    ' → logprob: -13.079315185546875
    8. '     ' → logprob: -14.079315185546875
    9. '  ' → logprob: -14.204315185546875
    10. '      ' → logprob: -14.204315185546875

Token 421: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029794588685035706
    2. '   ' → logprob: -3.529794692993164
    3. 'MIN' → logprob: -10.279794692993164
    4. '           ' → logprob: -12.904794692993164
    5. '     ' → logprob: -13.279794692993164
    6. '      ' → logprob: -13.529794692993164
    7. '    ' → logprob: -13.654794692993164
    8. '  ' → logprob: -13.779794692993164
    9. ' ' → logprob: -14.029794692993164
    10. ' MIN' → logprob: -14.779794692993164

Token 422: ' MIN' (ID: 27151)
  Prédit: 'MIN'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MIN' (adapté à ' MIN') → logprob: -0.0002765902318060398
    2. '   ' → logprob: -8.250276565551758
    3. ' MIN' → logprob: -11.625276565551758
    4. '       ' → logprob: -12.000276565551758
    5. '  ' → logprob: -17.125276565551758
    6. '     ' → logprob: -17.250276565551758
    7. ' ' → logprob: -17.250276565551758
    8. '    ' → logprob: -18.125276565551758
    9. '_MIN' → logprob: -18.250276565551758
    10. '           ' → logprob: -18.375276565551758

Token 423: 'US' (ID: 3042)
  Prédit: 'US'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'US' → logprob: -0.005300873890519142
    2. 'us' → logprob: -5.630300998687744
    3. '   ' → logprob: -6.630300998687744
    4. '       ' → logprob: -9.255300521850586
    5. 'S' → logprob: -10.005300521850586
    6. '-' → logprob: -10.130300521850586
    7. ' -=' → logprob: -10.630300521850586
    8. '_MINUS' → logprob: -10.755300521850586
    9. '    ' → logprob: -11.130300521850586
    10. 'MIN' → logprob: -11.255300521850586

Token 424: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.16353365778923035
    2. ' +=' → logprob: -1.9135336875915527
    3. '-=' → logprob: -6.413533687591553
    4. ' -=' → logprob: -6.413533687591553
    5. '   ' → logprob: -10.663533210754395
    6. '=' → logprob: -13.913533210754395
    7. '-' → logprob: -14.163533210754395
    8. ' ' → logprob: -15.663533210754395
    9. ']+=' → logprob: -15.788533210754395
    10. '  ' → logprob: -16.53853416442871

Token 425: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002613358374219388
    2. ' ' → logprob: -8.250261306762695
    3. '   ' → logprob: -18.750261306762695
    4. '
' → logprob: -20.250261306762695
    5. '-' → logprob: -21.250261306762695
    6. '１' → logprob: -21.625261306762695
    7. ' ' → logprob: -21.750261306762695
    8. '  ' → logprob: -21.875261306762695
    9. '```' → logprob: -22.375261306762695
    10. '+' → logprob: -22.750261306762695

Token 426: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '-' → logprob: -20.875
    4. '
' → logprob: -21.25
    5. '   ' → logprob: -21.5
    6. '```' → logprob: -22.0
    7. '１' → logprob: -22.5
    8. '+' → logprob: -23.1875
    9. '۱' → logprob: -23.5625
    10. '0' → logprob: -24.125

Token 427: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.49876508116722107
    2. '<|end|>' → logprob: -0.9987651109695435
    3. 'for' → logprob: -4.873764991760254
    4. '```' → logprob: -5.373764991760254
    5. '<|end|>' → logprob: -5.373764991760254
    6. '
' → logprob: -5.998764991760254
    7. ' for' → logprob: -7.623764991760254
    8. 'if' → logprob: -7.748764991760254
    9. 'continue' → logprob: -7.748764991760254
    10. ' ' → logprob: -7.748764991760254

Token 428: ' In' (ID: 730)
  Prédit: 'MIN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MIN' → logprob: -0.3364793062210083
    2. '1' → logprob: -1.4614793062210083
    3. '   ' → logprob: -2.9614791870117188
    4. '       ' → logprob: -6.586479187011719
    5. ' MIN' → logprob: -8.211479187011719
    6. 'IN' → logprob: -9.211479187011719
    7. ' ' → logprob: -9.461479187011719
    8. '  ' → logprob: -9.586479187011719
    9. '+' → logprob: -10.461479187011719
    10. '    ' → logprob: -10.711479187011719

Token 429: 'cr' (ID: 798)
  Prédit: 'cr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cr' → logprob: -0.5640716552734375
    2. 'crement' → logprob: -0.9390716552734375
    3. 'cre' → logprob: -4.0640716552734375
    4. 'c' → logprob: -4.0640716552734375
    5. 'CREMENT' → logprob: -5.9390716552734375
    6. 'crire' → logprob: -7.3140716552734375
    7. 't' → logprob: -8.314071655273438
    8. 'dex' → logprob: -8.564071655273438
    9. 'cer' → logprob: -8.689071655273438
    10. 'counter' → logprob: -8.689071655273438

Token 430: 'ément' (ID: 17645)
  Prédit: 'ément'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ément' → logprob: -0.13185855746269226
    2. 'ment' → logprob: -2.3818585872650146
    3. 'érer' → logprob: -4.7568583488464355
    4. 'éter' → logprob: -4.7568583488464355
    5. 'enter' → logprob: -4.8818583488464355
    6. 'er' → logprob: -6.1318583488464355
    7. 'ént' → logprob: -6.8818583488464355
    8. 'ent' → logprob: -7.3818583488464355
    9. 'ement' → logprob: -7.7568583488464355
    10. 'ér' → logprob: -7.8818583488464355

Token 431: 'er' (ID: 259)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07958602905273438
    2. 'er' → logprob: -2.5795860290527344
    3. ' ' → logprob: -8.704586029052734
    4. '<|end|>' → logprob: -9.204586029052734
    5. 'r' → logprob: -9.579586029052734
    6. '#' → logprob: -9.829586029052734
    7. '+' → logprob: -9.954586029052734
    8. 'ate' → logprob: -10.329586029052734
    9. 'e' → logprob: -10.579586029052734
    10. '  ' → logprob: -10.704586029052734

Token 432: ' MIN' (ID: 27151)
  Prédit: 'MIN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MIN' → logprob: -0.2986776530742645
    2. '1' → logprob: -1.548677682876587
    3. ' MIN' → logprob: -3.173677682876587
    4. ' ' → logprob: -6.298677444458008
    5. 'PLUS' → logprob: -6.673677444458008
    6. ' minus' → logprob: -8.673677444458008
    7. 'Minus' → logprob: -8.798677444458008
    8. 'minus' → logprob: -9.173677444458008
    9. '_MINUS' → logprob: -9.173677444458008
    10. ' PLUS' → logprob: -9.548677444458008

Token 433: 'US' (ID: 3042)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.004114730749279261
    2. 'US' → logprob: -5.504114627838135
    3. '   ' → logprob: -12.129115104675293
    4. '#' → logprob: -12.879115104675293
    5. '```' → logprob: -12.879115104675293
    6. 'ус' → logprob: -13.254115104675293
    7. 'u' → logprob: -13.379115104675293
    8. ']' → logprob: -13.504115104675293
    9. '

' → logprob: -13.879115104675293
    10. '       ' → logprob: -13.879115104675293

Token 434: ' si' (ID: 1784)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.9540927410125732
    2. '+=' → logprob: -1.4540927410125732
    3. '   ' → logprob: -1.5790927410125732
    4. '+' → logprob: -2.7040927410125732
    5. '<|end|>' → logprob: -3.3290927410125732
    6. '1' → logprob: -3.4540927410125732
    7. ' ' → logprob: -4.579092979431152
    8. '```' → logprob: -4.579092979431152
    9. '  ' → logprob: -5.579092979431152
    10. '=' → logprob: -5.829092979431152

Token 435: ' l' (ID: 305)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.22546981275081635
    2. ' a' → logprob: -1.6004698276519775
    3. '-' → logprob: -10.850469589233398
    4. 'l' → logprob: -10.975469589233398
    5. '(a' → logprob: -11.600469589233398
    6. '1' → logprob: -12.600469589233398
    7. ' ' → logprob: -13.225469589233398
    8. '	a' → logprob: -13.350469589233398
    9. ' l' → logprob: -14.100469589233398
    10. '   ' → logprob: -14.225469589233398

Token 436: ''' (ID: 6)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5760115385055542
    2. ' a' → logprob: -0.8260115385055542
    3. '<' → logprob: -10.201011657714844
    4. ' ' → logprob: -11.451011657714844
    5. ' <' → logprob: -11.451011657714844
    6. 'e' → logprob: -13.201011657714844
    7. 'else' → logprob: -13.326011657714844
    8. ' ' → logprob: -13.826011657714844
    9. '	a' → logprob: -13.826011657714844
    10. '(a' → logprob: -14.076011657714844

Token 437: 'élé' (ID: 15228)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.008672603406012058
    2. ' a' → logprob: -4.758672714233398
    3. 'élé' → logprob: -9.883672714233398
    4. 'element' → logprob: -12.508672714233398
    5. ' élément' → logprob: -14.258672714233398
    6. '	a' → logprob: -14.633672714233398
    7. ' ' → logprob: -14.883672714233398
    8. '   ' → logprob: -15.133672714233398
    9. '  ' → logprob: -15.258672714233398
    10. 'else' → logprob: -15.383672714233398

Token 438: 'ment' (ID: 508)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06706332415342331
    2. '<' → logprob: -3.442063331604004
    3. ' <' → logprob: -3.942063331604004
    4. ' a' → logprob: -5.317063331604004
    5. '   ' → logprob: -5.942063331604004
    6. ' ' → logprob: -6.317063331604004
    7. 'est' → logprob: -7.442063331604004
    8. 'e' → logprob: -7.692063331604004
    9. 's' → logprob: -7.692063331604004
    10. 't' → logprob: -7.942063331604004

Token 439: ' est' (ID: 893)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6326397657394409
    2. '<' → logprob: -0.7576397657394409
    3. ' est' → logprob: -11.38263988494873
    4. 'est' → logprob: -11.63263988494873
    5. ' ' → logprob: -12.25763988494873
    6. '<n' → logprob: -12.75763988494873
    7. 'a' → logprob: -13.00763988494873
    8. ' <
' → logprob: -13.38263988494873
    9. '   ' → logprob: -13.63263988494873
    10. 'strict' → logprob: -14.13263988494873

Token 440: ' strict' (ID: 12035)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12204685062170029
    2. ' nég' → logprob: -3.122046947479248
    3. '<' → logprob: -3.247046947479248
    4. 'neg' → logprob: -4.622046947479248
    5. ' ' → logprob: -5.247046947479248
    6. ' negatif' → logprob: -5.372046947479248
    7. ' negative' → logprob: -6.247046947479248
    8. 'negative' → logprob: -6.497046947479248
    9. ' <' → logprob: -6.497046947479248
    10. ' a' → logprob: -6.622046947479248

Token 441: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.03903218358755112
    2. 'ment' → logprob: -4.164031982421875
    3. 'ly' → logprob: -4.289031982421875
    4. 'lement' → logprob: -5.664031982421875
    5. 'ément' → logprob: -6.164031982421875
    6. '<' → logprob: -6.414031982421875
    7. 'iquement' → logprob: -8.289031982421875
    8. 'ivement' → logprob: -8.539031982421875
    9. 'emment' → logprob: -8.539031982421875
    10. 'usement' → logprob: -8.539031982421875

Token 442: ' nég' (ID: 55805)
  Prédit: ' nég'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nég' → logprob: -0.10834836959838867
    2. 'neg' → logprob: -2.8583483695983887
    3. 'n' → logprob: -3.1083483695983887
    4. ' negatif' → logprob: -7.733348369598389
    5. 'negative' → logprob: -9.483348846435547
    6. '<' → logprob: -9.733348846435547
    7. 'nul' → logprob: -10.608348846435547
    8. 'moins' → logprob: -10.983348846435547
    9. ' inférieur' → logprob: -11.983348846435547
    10. ' negative' → logprob: -12.483348846435547

Token 443: 'atif' (ID: 23984)
  Prédit: 'atif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atif' → logprob: -0.04959636554121971
    2. 'eg' → logprob: -3.9245963096618652
    3. 'ot' → logprob: -4.799596309661865
    4. 'at' → logprob: -4.924596309661865
    5. 'act' → logprob: -6.299596309661865
    6. 'ect' → logprob: -6.299596309661865
    7. 'ement' → logprob: -6.424596309661865
    8. 't' → logprob: -6.924596309661865
    9. 'ent' → logprob: -7.049596309661865
    10. 'otif' → logprob: -7.049596309661865

Token 444: '

' (ID: 279)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.01824464648962021
    2. 'for' → logprob: -5.143244743347168
    3. '
' → logprob: -5.393244743347168
    4. '<|end|>' → logprob: -6.018244743347168
    5. 'x' → logprob: -6.643244743347168
    6. 'n' → logprob: -7.018244743347168
    7. 'if' → logprob: -7.393244743347168
    8. '```' → logprob: -7.768244743347168
    9. 'i' → logprob: -8.143244743347168
    10. '

' → logprob: -8.393244743347168

Token 445: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.13235962390899658
    2. 'if' → logprob: -2.757359504699707
    3. 'max' → logprob: -2.882359504699707
    4. 'x' → logprob: -6.382359504699707
    5. 'result' → logprob: -7.257359504699707
    6. 'total' → logprob: -8.007359504699707
    7. 'print' → logprob: -8.507359504699707
    8. 'for' → logprob: -8.507359504699707
    9. '```' → logprob: -8.757359504699707
    10. 'M' → logprob: -9.007359504699707

Token 446: ' Ré' (ID: 27181)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6051777005195618
    2. 'if' → logprob: -0.8551777005195618
    3. 'max' → logprob: -3.605177640914917
    4. '```' → logprob: -7.855177879333496
    5. 'result' → logprob: -8.355177879333496
    6. 'print' → logprob: -8.730177879333496
    7. 'x' → logprob: -8.855177879333496
    8. 'res' → logprob: -9.105177879333496
    9. 'score' → logprob: -9.730177879333496
    10. 'diff' → logprob: -9.855177879333496

Token 447: 'initial' (ID: 17493)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.026965856552124
    2. '#' → logprob: -1.276965856552124
    3. 's' → logprob: -1.526965856552124
    4. 'part' → logprob: -2.776965856552124
    5. 'si' → logprob: -3.776965856552124
    6. 'if' → logprob: -4.026966094970703
    7. 'initial' → logprob: -5.026966094970703
    8. 'st' → logprob: -5.276966094970703
    9. 'cap' → logprob: -5.276966094970703
    10. 'du' → logprob: -5.526966094970703

Token 448: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.001794658601284027
    2. 'er' → logprob: -6.501794815063477
    3. 'is' → logprob: -8.626794815063477
    4. '#' → logprob: -10.126794815063477
    5. 'izer' → logprob: -11.501794815063477
    6. 'isant' → logprob: -11.876794815063477
    7. 'isez' → logprob: -12.126794815063477
    8. '```' → logprob: -12.251794815063477
    9. 'IS' → logprob: -12.376794815063477
    10. 'isé' → logprob: -12.751794815063477

Token 449: ' la' (ID: 557)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.1756261587142944
    2. 'max' → logprob: -1.3006261587142944
    3. 'score' → logprob: -1.6756261587142944
    4. 'res' → logprob: -2.425626277923584
    5. 'MAX' → logprob: -3.675626277923584
    6. 'X' → logprob: -3.925626277923584
    7. '#' → logprob: -4.050626277923584
    8. 'best' → logprob: -4.175626277923584
    9. 'x' → logprob: -4.550626277923584
    10. 'i' → logprob: -4.675626277923584

Token 450: ' liste' (ID: 31719)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.644195020198822
    2. 'PLUS' → logprob: -1.8941950798034668
    3. 'res' → logprob: -2.894195079803467
    4. 'score' → logprob: -3.394195079803467
    5. 'diff' → logprob: -3.394195079803467
    6. 'max' → logprob: -3.519195079803467
    7. '#' → logprob: -3.519195079803467
    8. 'XY' → logprob: -3.519195079803467
    9. 'X' → logprob: -3.769195079803467
    10. 'if' → logprob: -4.019195079803467

Token 451: ' XY' (ID: 71987)
  Prédit: 'XY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XY' → logprob: -0.020970525220036507
    2. ' XY' → logprob: -3.895970582962036
    3. 'X' → logprob: -8.770970344543457
    4. 'A' → logprob: -8.770970344543457
    5. 'xy' → logprob: -10.270970344543457
    6. '#' → logprob: -11.020970344543457
    7. 'XYZ' → logprob: -11.270970344543457
    8. '_xy' → logprob: -12.020970344543457
    9. '(X' → logprob: -12.145970344543457
    10. 's' → logprob: -12.270970344543457

Token 452: ' qui' (ID: 2780)
  Prédit: 'XY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'XY' → logprob: -0.0580635592341423
    2. '=' → logprob: -2.933063507080078
    3. '=[]' → logprob: -6.308063507080078
    4. ' =' → logprob: -6.933063507080078
    5. '[]' → logprob: -8.683063507080078
    6. '[:]' → logprob: -9.058063507080078
    7. '=[]
' → logprob: -10.433063507080078
    8. ' XY' → logprob: -11.183063507080078
    9. '[' → logprob: -11.683063507080078
    10. '#' → logprob: -12.058063507080078

Token 453: ' stock' (ID: 6546)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07361602038145065
    2. ' =' → logprob: -2.6986160278320312
    3. '<|end|>' → logprob: -5.948616027832031
    4. '.clear' → logprob: -7.448616027832031
    5. '=[]' → logprob: -8.198616027832031
    6. '[:]' → logprob: -9.948616027832031
    7. '.' → logprob: -10.698616027832031
    8. '.append' → logprob: -10.948616027832031
    9. ' ' → logprob: -11.073616027832031
    10. '[]' → logprob: -11.198616027832031

Token 454: 'era' (ID: 2060)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.66867995262146
    2. '=[]' → logprob: -1.16867995262146
    3. 'er' → logprob: -1.91867995262146
    4. ' =' → logprob: -4.043680191040039
    5. '#' → logprob: -6.293680191040039
    6. 'a' → logprob: -6.543680191040039
    7. '[:]' → logprob: -6.793680191040039
    8. '[]' → logprob: -6.793680191040039
    9. '=[]
' → logprob: -7.168680191040039
    10. 'e' → logprob: -7.293680191040039

Token 455: ' les' (ID: 1341)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.02564193494617939
    2. ' []' → logprob: -3.900641918182373
    3. '[' → logprob: -6.775641918182373
    4. '=[]' → logprob: -7.275641918182373
    5. '[]
' → logprob: -7.275641918182373
    6. 'XY' → logprob: -7.900641918182373
    7. '[]=' → logprob: -8.150642395019531
    8. '([]' → logprob: -8.275642395019531
    9. '<|end|>' → logprob: -8.400642395019531
    10. 'A' → logprob: -8.525642395019531

Token 456: ' opérations' (ID: 102793)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.2012253999710083
    2. ' p' → logprob: -2.2012252807617188
    3. 'pairs' → logprob: -4.076225280761719
    4. 'calcul' → logprob: -4.326225280761719
    5. 'op' → logprob: -4.451225280761719
    6. ' opérations' → logprob: -5.076225280761719
    7. 'diff' → logprob: -5.326225280761719
    8. 'cou' → logprob: -5.701225280761719
    9. 'rés' → logprob: -6.076225280761719
    10. 'operations' → logprob: -6.576225280761719

Token 457: ' effectu' (ID: 100880)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.46733564138412476
    2. '=[]' → logprob: -1.3423357009887695
    3. '[]' → logprob: -2.9673357009887695
    4. 'XY' → logprob: -3.5923357009887695
    5. ' =' → logprob: -3.7173357009887695
    6. '[:]' → logprob: -5.0923357009887695
    7. '.clear' → logprob: -6.7173357009887695
    8. '=[]
' → logprob: -7.3423357009887695
    9. '[]=' → logprob: -7.8423357009887695
    10. '#' → logprob: -9.34233570098877

Token 458: 'ées' (ID: 5161)
  Prédit: '=[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[]' → logprob: -0.33810871839523315
    2. '=' → logprob: -1.588108777999878
    3. 'ées' → logprob: -3.463108777999878
    4. '[]' → logprob: -3.588108777999878
    5. 'es' → logprob: -4.213108539581299
    6. 'é' → logprob: -6.838108539581299
    7. 'és' → logprob: -6.838108539581299
    8. '[]=' → logprob: -6.838108539581299
    9. '[:]' → logprob: -6.838108539581299
    10. 'ée' → logprob: -6.963108539581299

Token 459: '.
' (ID: 558)
  Prédit: 'XY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'XY' → logprob: -0.012061245739459991
    2. '=[]' → logprob: -5.13706111907959
    3. '=' → logprob: -5.38706111907959
    4. '[]' → logprob: -6.76206111907959
    5. '#' → logprob: -9.01206111907959
    6. ' =' → logprob: -9.13706111907959
    7. '[:]' → logprob: -9.51206111907959
    8. '=[]
' → logprob: -11.26206111907959
    9. ' XY' → logprob: -11.51206111907959
    10. '[]
' → logprob: -11.76206111907959

Token 460: 'XY' (ID: 27825)
  Prédit: 'XY'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XY' → logprob: -4.008129963040119e-06
    2. ' XY' → logprob: -13.375003814697266
    3. '[]' → logprob: -14.500003814697266
    4. 'X' → logprob: -14.500003814697266
    5. 'xy' → logprob: -14.500003814697266
    6. 'XYZ' → logprob: -15.250003814697266
    7. '#' → logprob: -15.250003814697266
    8. '=[]' → logprob: -16.000003814697266
    9. 'del' → logprob: -16.000003814697266
    10. '=' → logprob: -16.250003814697266

Token 461: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014169503934681416
    2. ' =' → logprob: -4.264169692993164
    3. '=[]' → logprob: -12.639169692993164
    4. '.clear' → logprob: -13.139169692993164
    5. '.=' → logprob: -15.014169692993164
    6. '[:]' → logprob: -15.014169692993164
    7. ' ' → logprob: -18.139169692993164
    8. '.' → logprob: -18.264169692993164
    9. '＝' → logprob: -18.514169692993164
    10. '=[]
' → logprob: -19.389169692993164

Token 462: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.8624639324116288e-06
    2. '[]
' → logprob: -13.875001907348633
    3. '[' → logprob: -14.500001907348633
    4. ' []' → logprob: -15.875001907348633
    5. '[(' → logprob: -16.500001907348633
    6. '[]}' → logprob: -16.500001907348633
    7. '[]

' → logprob: -16.750001907348633
    8. '[]"' → logprob: -18.500001907348633
    9. '[])' → logprob: -18.500001907348633
    10. '[],' → logprob: -19.000001907348633

Token 463: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.647560715675354
    2. 'x' → logprob: -1.397560715675354
    3. '#' → logprob: -1.522560715675354
    4. 'max' → logprob: -4.8975605964660645
    5. 'for' → logprob: -7.3975605964660645
    6. 'i' → logprob: -7.5225605964660645
    7. '+' → logprob: -7.5225605964660645
    8. 'y' → logprob: -8.022561073303223
    9. 'print' → logprob: -8.022561073303223
    10. 'pos' → logprob: -8.647561073303223

Token 464: ' Pr' (ID: 2284)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.019215721637010574
    2. '#' → logprob: -4.6442155838012695
    3. 'x' → logprob: -4.8942155838012695
    4. 'max' → logprob: -6.7692155838012695
    5. 'score' → logprob: -8.51921558380127
    6. 'for' → logprob: -8.64421558380127
    7. 'i' → logprob: -8.76921558380127
    8. 'result' → logprob: -9.26921558380127
    9. 'print' → logprob: -10.64421558380127
    10. 'diff' → logprob: -10.64421558380127

Token 465: 'endre' (ID: 9574)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.05837497115135193
    2. '#' → logprob: -2.9333748817443848
    3. 'é' → logprob: -6.933374881744385
    4. 'e' → logprob: -6.933374881744385
    5. 'em' → logprob: -8.433375358581543
    6. 'és' → logprob: -8.433375358581543
    7. 'o' → logprob: -8.558375358581543
    8. 'in' → logprob: -8.808375358581543
    9. 'i' → logprob: -9.308375358581543
    10. 'ef' → logprob: -9.558375358581543

Token 466: ' le' (ID: 505)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.15213775634765625
    2. 'A' → logprob: -2.4021377563476562
    3. 'y' → logprob: -3.1521377563476562
    4. '0' → logprob: -5.902137756347656
    5. 'a' → logprob: -6.277137756347656
    6. 'min' → logprob: -6.902137756347656
    7. 'max' → logprob: -7.902137756347656
    8. 'le' → logprob: -8.527137756347656
    9. ' A' → logprob: -8.527137756347656
    10. 'l' → logprob: -8.777137756347656

Token 467: ' plus' (ID: 2932)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2003016471862793
    2. 'plus' → logprob: -2.2003016471862793
    3. 'y' → logprob: -3.5753016471862793
    4. 'max' → logprob: -4.200301647186279
    5. 'A' → logprob: -4.950301647186279
    6. 'a' → logprob: -4.950301647186279
    7. 'min' → logprob: -5.450301647186279
    8. 'b' → logprob: -6.700301647186279
    9. 'for' → logprob: -6.700301647186279
    10. 'prem' → logprob: -6.825301647186279

Token 468: ' petit' (ID: 20577)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.42960554361343384
    2. 'grand' → logprob: -1.054605484008789
    3. 'gr' → logprob: -7.929605484008789
    4. ' petit' → logprob: -8.429605484008789
    5. 'g' → logprob: -8.929605484008789
    6. ' grand' → logprob: -9.804605484008789
    7. 'p' → logprob: -9.804605484008789
    8. 'pt' → logprob: -11.179605484008789
    9. '```' → logprob: -11.429605484008789
    10. 'Petit' → logprob: -11.554605484008789

Token 469: ' élément' (ID: 99627)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.016898339614272118
    2. 'a' → logprob: -4.391898155212402
    3. 'val' → logprob: -6.266898155212402
    4. ' x' → logprob: -7.391898155212402
    5. '_x' → logprob: -7.891898155212402
    6. 'élé' → logprob: -8.141898155212402
    7. '_' → logprob: -8.266898155212402
    8. 'et' → logprob: -8.391898155212402
    9. 'y' → logprob: -8.766898155212402
    10. '_val' → logprob: -9.141898155212402

Token 470: ' de' (ID: 334)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.008305693045258522
    2. ' x' → logprob: -5.383305549621582
    3. ',' → logprob: -6.258305549621582
    4. 'y' → logprob: -6.508305549621582
    5. ' y' → logprob: -9.383305549621582
    6. 'min' → logprob: -10.258305549621582
    7. ' (' → logprob: -10.258305549621582
    8. '(x' → logprob: -10.633305549621582
    9. ' =' → logprob: -11.258305549621582
    10. '```' → logprob: -11.383305549621582

Token 471: ' la' (ID: 557)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.026434985920786858
    2. ' A' → logprob: -3.651434898376465
    3. 'l' → logprob: -9.901434898376465
    4. 'la' → logprob: -10.026434898376465
    5. ' la' → logprob: -10.276434898376465
    6. 'the' → logprob: -14.026434898376465
    7. 'a' → logprob: -14.151434898376465
    8. '(A' → logprob: -14.401434898376465
    9. 'liste' → logprob: -14.651434898376465
    10. '```' → logprob: -14.651434898376465

Token 472: ' liste' (ID: 31719)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0007230373448692262
    2. ' A' → logprob: -7.250722885131836
    3. 'list' → logprob: -12.375722885131836
    4. 'liste' → logprob: -13.500722885131836
    5. '```' → logprob: -13.625722885131836
    6. 'a' → logprob: -13.875722885131836
    7. 'sorted' → logprob: -14.000722885131836
    8. '#' → logprob: -14.250722885131836
    9. '[A' → logprob: -14.500722885131836
    10. '[' → logprob: -14.750722885131836

Token 473: ' tri' (ID: 12665)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.13574792444705963
    2. 'y' → logprob: -2.5107479095458984
    3. ',' → logprob: -4.010747909545898
    4. ' y' → logprob: -4.885747909545898
    5. ' (' → logprob: -5.010747909545898
    6. ' x' → logprob: -5.135747909545898
    7. '(x' → logprob: -5.760747909545898
    8. 'A' → logprob: -6.760747909545898
    9. ' =' → logprob: -7.260747909545898
    10. '(' → logprob: -7.635747909545898

Token 474: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.10121867805719376
    2. 'A' → logprob: -2.8512187004089355
    3. 'ot' → logprob: -4.6012187004089355
    4. 'st' → logprob: -5.1012187004089355
    5. 't' → logprob: -5.1012187004089355
    6. 'sorted' → logprob: -5.6012187004089355
    7. 'e' → logprob: -5.9762187004089355
    8. 'é' → logprob: -6.1012187004089355
    9. 'tee' → logprob: -6.6012187004089355
    10. 's' → logprob: -6.6012187004089355

Token 475: ' A' (ID: 355)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03687277063727379
    2. 'y' → logprob: -3.4118728637695312
    3. ',' → logprob: -6.411872863769531
    4. ' x' → logprob: -7.286872863769531
    5. ' y' → logprob: -8.161872863769531
    6. 'min' → logprob: -8.661872863769531
    7. '(x' → logprob: -9.161872863769531
    8. 'a' → logprob: -9.286872863769531
    9. ' (' → logprob: -10.036872863769531
    10. 'xmin' → logprob: -10.286872863769531

Token 476: ' et' (ID: 859)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.016650289297103882
    2. 'y' → logprob: -4.141650199890137
    3. ' x' → logprob: -8.391650199890137
    4. 'a' → logprob: -9.141650199890137
    5. 'min' → logprob: -9.641650199890137
    6. ',' → logprob: -9.641650199890137
    7. ' y' → logprob: -10.141650199890137
    8. '(x' → logprob: -10.391650199890137
    9. 'z' → logprob: -11.641650199890137
    10. 'xmin' → logprob: -11.641650199890137

Token 477: ' l' (ID: 305)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.41164419054985046
    2. 'le' → logprob: -1.6616442203521729
    3. 'x' → logprob: -2.411644220352173
    4. ' y' → logprob: -3.536644220352173
    5. 'y' → logprob: -4.036643981933594
    6. 'l' → logprob: -5.036643981933594
    7. ' l' → logprob: -6.661643981933594
    8. ' x' → logprob: -7.286643981933594
    9. 'mettre' → logprob: -7.536643981933594
    10. '#' → logprob: -8.286643981933594

Token 478: ''aff' (ID: 53397)
  Prédit: 'argest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argest' → logprob: -1.0376280546188354
    2. 'a' → logprob: -1.4126280546188354
    3. 'e' → logprob: -1.5376280546188354
    4. 'arger' → logprob: -2.787628173828125
    5. 'x' → logprob: -3.537628173828125
    6. 'arge' → logprob: -4.287628173828125
    7. ' =' → logprob: -4.412628173828125
    8. 'es' → logprob: -4.787628173828125
    9. 'aisser' → logprob: -5.037628173828125
    10. '[' → logprob: -5.162628173828125

Token 479: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.00011284107313258573
    2. 'igner' → logprob: -9.625112533569336
    3. 'ec' → logprob: -11.375112533569336
    4. 'ecta' → logprob: -12.000112533569336
    5. 'icher' → logprob: -12.375112533569336
    6. '#' → logprob: -12.625112533569336
    7. 'ectar' → logprob: -12.625112533569336
    8. 'ects' → logprob: -12.875112533569336
    9. 'fect' → logprob: -13.000112533569336
    10. 'a' → logprob: -13.250112533569336

Token 480: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0028640811797231436
    2. 'uer' → logprob: -6.002863883972168
    3. '#' → logprob: -8.752863883972168
    4. '=' → logprob: -9.002863883972168
    5. 'érer' → logprob: -10.377863883972168
    6. 'ier' → logprob: -10.752863883972168
    7. 'é' → logprob: -10.752863883972168
    8. '```' → logprob: -11.502863883972168
    9. 'éer' → logprob: -12.127863883972168
    10. '   ' → logprob: -12.877863883972168

Token 481: ' à' (ID: 1221)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7868930101394653
    2. ' à' → logprob: -0.7868930101394653
    3. 'à' → logprob: -3.536892890930176
    4. 'a' → logprob: -4.411892890930176
    5. 'y' → logprob: -4.536892890930176
    6. ' x' → logprob: -4.786892890930176
    7. ' a' → logprob: -4.786892890930176
    8. ' =' → logprob: -5.161892890930176
    9. ' to' → logprob: -5.786892890930176
    10. '=' → logprob: -6.036892890930176

Token 482: ' la' (ID: 557)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.524952232837677
    2. 'y' → logprob: -0.899952232837677
    3. ' y' → logprob: -7.149952411651611
    4. ' x' → logprob: -8.274951934814453
    5. 'X' → logprob: -9.024951934814453
    6. 'Y' → logprob: -9.024951934814453
    7. 'plus' → logprob: -9.149951934814453
    8. 'a' → logprob: -9.399951934814453
    9. 'min' → logprob: -9.899951934814453
    10. 'z' → logprob: -10.149951934814453

Token 483: ' variable' (ID: 11076)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2026592195034027
    2. 'y' → logprob: -1.702659249305725
    3. 'plus' → logprob: -7.8276591300964355
    4. 'a' → logprob: -8.077659606933594
    5. 'min' → logprob: -9.452659606933594
    6. 'm' → logprob: -9.827659606933594
    7. 'v' → logprob: -9.952659606933594
    8. ' y' → logprob: -10.202659606933594
    9. 'b' → logprob: -10.327659606933594
    10. 'n' → logprob: -10.327659606933594

Token 484: ' tempora' (ID: 117509)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.28239181637763977
    2. 'x' → logprob: -1.4073917865753174
    3. 'Y' → logprob: -8.157391548156738
    4. ' y' → logprob: -8.657391548156738
    5. 'a' → logprob: -8.782391548156738
    6. 'z' → logprob: -9.032391548156738
    7. 'X' → logprob: -9.657391548156738
    8. 'v' → logprob: -10.032391548156738
    9. 'm' → logprob: -10.032391548156738
    10. 's' → logprob: -10.282391548156738

Token 485: 'ire' (ID: 594)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.17554032802581787
    2. 'y' → logprob: -3.0505404472351074
    3. ' x' → logprob: -3.1755404472351074
    4. '_' → logprob: -3.5505404472351074
    5. 'a' → logprob: -4.300540447235107
    6. 's' → logprob: -4.550540447235107
    7. '_x' → logprob: -5.050540447235107
    8. ' =' → logprob: -5.925540447235107
    9. ' y' → logprob: -6.175540447235107
    10. '_s' → logprob: -7.050540447235107

Token 486: ' tmp' (ID: 8919)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2285388857126236
    2. 'y' → logprob: -2.103538990020752
    3. 'tmp' → logprob: -3.103538990020752
    4. 'temp' → logprob: -3.728538990020752
    5. 't' → logprob: -4.853538990020752
    6. 'a' → logprob: -6.228538990020752
    7. 'm' → logprob: -7.728538990020752
    8. 'z' → logprob: -7.728538990020752
    9. 'v' → logprob: -8.353538513183594
    10. ' x' → logprob: -8.478538513183594

Token 487: '.
' (ID: 558)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.046934012323617935
    2. ' =' → logprob: -3.171934127807617
    3. '=' → logprob: -5.796934127807617
    4. '_tmp' → logprob: -8.546934127807617
    5. '
' → logprob: -8.921934127807617
    6. ' tmp' → logprob: -9.046934127807617
    7. '(tmp' → logprob: -9.171934127807617
    8. '[tmp' → logprob: -9.296934127807617
    9. '/tmp' → logprob: -9.671934127807617
    10. ',' → logprob: -10.546934127807617

Token 488: '#' (ID: 2)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -1.8193366486229934e-05
    2. ' tmp' → logprob: -11.000018119812012
    3. 'temp' → logprob: -14.750018119812012
    4. '_tmp' → logprob: -15.125018119812012
    5. '```' → logprob: -16.000019073486328
    6. '/tmp' → logprob: -16.000019073486328
    7. '	tmp' → logprob: -16.125019073486328
    8. '$tmp' → logprob: -16.375019073486328
    9. '[tmp' → logprob: -16.500019073486328
    10. '(tmp' → logprob: -16.625019073486328

Token 489: ' Après' (ID: 47562)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -1.259079363080673e-05
    2. ' tmp' → logprob: -11.500012397766113
    3. 'temp' → logprob: -14.250012397766113
    4. '```' → logprob: -14.500012397766113
    5. '
' → logprob: -15.250012397766113
    6. '[tmp' → logprob: -15.250012397766113
    7. '	tmp' → logprob: -15.875012397766113
    8. '/tmp' → logprob: -16.12501335144043
    9. '$tmp' → logprob: -16.12501335144043
    10. '(tmp' → logprob: -16.25001335144043

Token 490: ' ce' (ID: 2357)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.16352830827236176
    2. ' =' → logprob: -2.7885282039642334
    3. ' tmp' → logprob: -2.9135282039642334
    4. '=' → logprob: -4.0385284423828125
    5. ' that' → logprob: -5.7885284423828125
    6. '_tmp' → logprob: -5.9135284423828125
    7. ' this' → logprob: -6.1635284423828125
    8. '#' → logprob: -6.6635284423828125
    9. 'that' → logprob: -6.7885284423828125
    10. 'this' → logprob: -7.0385284423828125

Token 491: ' point' (ID: 2438)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.801060676574707
    2. ' =' → logprob: -1.051060676574707
    3. 'tmp' → logprob: -1.801060676574707
    4. ' tmp' → logprob: -4.926060676574707
    5. 'A' → logprob: -5.051060676574707
    6. '_tmp' → logprob: -5.176060676574707
    7. '_' → logprob: -5.676060676574707
    8. 's' → logprob: -6.051060676574707
    9. '#' → logprob: -6.301060676574707
    10. 'temps' → logprob: -6.551060676574707

Token 492: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1409395933151245
    2. 'tmp' → logprob: -2.515939712524414
    3. '=' → logprob: -3.265939712524414
    4. ',' → logprob: -5.015939712524414
    5. ' tmp' → logprob: -5.265939712524414
    6. ',tmp' → logprob: -8.640939712524414
    7. '_tmp' → logprob: -9.015939712524414
    8. ' ' → logprob: -9.515939712524414
    9. '[tmp' → logprob: -9.640939712524414
    10. '	tmp' → logprob: -10.265939712524414

Token 493: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.0008059371029958129
    2. ' tmp' → logprob: -7.125805854797363
    3. '	tmp' → logprob: -14.375805854797363
    4. '```' → logprob: -15.625805854797363
    5. 't' → logprob: -16.37580680847168
    6. 'temp' → logprob: -16.50080680847168
    7. '$tmp' → logprob: -16.50080680847168
    8. '_tmp' → logprob: -16.62580680847168
    9. '[tmp' → logprob: -16.62580680847168
    10. '
' → logprob: -16.75080680847168

Token 494: ' cont' (ID: 836)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22547589242458344
    2. '=' → logprob: -1.6004759073257446
    3. ',' → logprob: -9.975476264953613
    4. ' ' → logprob: -11.225476264953613
    5. ' ' → logprob: -13.975476264953613
    6. 's' → logprob: -15.475476264953613
    7. '	' → logprob: -15.787976264953613
    8. '.' → logprob: -15.850476264953613
    9. ' =
' → logprob: -15.850476264953613
    10. ' ,' → logprob: -15.975476264953613

Token 495: 'i' (ID: 72)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18339978158473969
    2. 'ient' → logprob: -1.8083997964859009
    3. 'inue' → logprob: -6.308399677276611
    4. 'in' → logprob: -7.433399677276611
    5. 'i' → logprob: -7.558399677276611
    6. 'inu' → logprob: -8.30840015411377
    7. '=i' → logprob: -8.68340015411377
    8. ' =' → logprob: -10.05840015411377
    9. '=e' → logprob: -10.30840015411377
    10. '=int' → logprob: -10.43340015411377

Token 496: 'endra' (ID: 32364)
  Prédit: 'nera'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nera' → logprob: -0.9181899428367615
    2. 'n' → logprob: -1.0431900024414062
    3. 'nu' → logprob: -1.6681900024414062
    4. 'nt' → logprob: -3.0431900024414062
    5. 'uera' → logprob: -5.543190002441406
    6. 'ner' → logprob: -6.668190002441406
    7. 'nent' → logprob: -6.793190002441406
    8. 'nd' → logprob: -7.043190002441406
    9. 'ue' → logprob: -7.168190002441406
    10. '#' → logprob: -7.418190002441406

Token 497: ' toujours' (ID: 16867)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0036081476137042046
    2. ' A' → logprob: -5.628608226776123
    3. 'a' → logprob: -12.128607749938965
    4. 'tmp' → logprob: -14.628607749938965
    5. ' ' → logprob: -15.253607749938965
    6. 'the' → logprob: -15.503607749938965
    7. '=A' → logprob: -15.503607749938965
    8. 'N' → logprob: -15.628607749938965
    9. '	A' → logprob: -15.753607749938965
    10. 'min' → logprob: -15.878607749938965

Token 498: ' le' (ID: 505)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.014173506759107113
    2. ' A' → logprob: -4.26417350769043
    3. 'le' → logprob: -13.01417350769043
    4. ' le' → logprob: -13.13917350769043
    5. ' the' → logprob: -13.88917350769043
    6. 'a' → logprob: -14.01417350769043
    7. '=A' → logprob: -14.01417350769043
    8. 'l' → logprob: -14.13917350769043
    9. 'the' → logprob: -14.13917350769043
    10. ' ' → logprob: -14.26417350769043

Token 499: ' résultat' (ID: 62556)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.014545522630214691
    2. 'plus' → logprob: -4.514545440673828
    3. 'min' → logprob: -6.764545440673828
    4. 'prem' → logprob: -6.889545440673828
    5. ' A' → logprob: -7.389545440673828
    6. 'a' → logprob: -8.514545440673828
    7. 'x' → logprob: -9.264545440673828
    8. ' plus' → logprob: -9.514545440673828
    9. 'minimum' → logprob: -9.514545440673828
    10. 'moins' → logprob: -9.889545440673828

Token 500: ' tempora' (ID: 117509)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06424880027770996
    2. '=' → logprob: -2.81424880027771
    3. '=A' → logprob: -7.064249038696289
    4. 'A' → logprob: -7.689249038696289
    5. 's' → logprob: -8.189249038696289
    6. '_' → logprob: -8.439249038696289
    7. 'tmp' → logprob: -8.814249038696289
    8. 'de' → logprob: -9.439249038696289
    9. ',' → logprob: -9.814249038696289
    10. ' de' → logprob: -9.939249038696289

Token 501: 'ire' (ID: 594)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3930026590824127
    2. 'tmp' → logprob: -1.7680026292800903
    3. '=' → logprob: -2.01800274848938
    4. 't' → logprob: -4.393002510070801
    5. 'at' → logprob: -6.018002510070801
    6. '_' → logprob: -6.518002510070801
    7. '_tmp' → logprob: -6.643002510070801
    8. ' tmp' → logprob: -6.643002510070801
    9. ' ' → logprob: -7.643002510070801
    10. 'A' → logprob: -7.768002510070801

Token 502: ' des' (ID: 731)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.034045249223709106
    2. '=' → logprob: -3.4090452194213867
    3. '=A' → logprob: -8.409045219421387
    4. 'tmp' → logprob: -9.534045219421387
    5. 'A' → logprob: -9.909045219421387
    6. ',' → logprob: -10.534045219421387
    7. '_tmp' → logprob: -11.409045219421387
    8. 's' → logprob: -12.534045219421387
    9. ' A' → logprob: -12.784045219421387
    10. '_' → logprob: -12.784045219421387

Token 503: ' sou' (ID: 4069)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.022253112867474556
    2. 'calcul' → logprob: -4.022253036499023
    3. 'tmp' → logprob: -7.022253036499023
    4. ' A' → logprob: -7.022253036499023
    5. 'x' → logprob: -7.397253036499023
    6. 'l' → logprob: -7.772253036499023
    7. 'a' → logprob: -7.897253036499023
    8. 'X' → logprob: -8.647253036499023
    9. 'sou' → logprob: -8.772253036499023
    10. ' calcul' → logprob: -9.022253036499023

Token 504: 'stra' (ID: 14867)
  Prédit: 'straction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'straction' → logprob: -1.1938860416412354
    2. 'tract' → logprob: -1.8188860416412354
    3. 'traction' → logprob: -1.8188860416412354
    4. 'stract' → logprob: -2.5688860416412354
    5. 'tra' → logprob: -2.8188860416412354
    6. 'stra' → logprob: -2.8188860416412354
    7. 'tractions' → logprob: -2.9438860416412354
    8. 'A' → logprob: -3.1938860416412354
    9. 'tr' → logprob: -3.5688860416412354
    10. 'trait' → logprob: -4.693885803222656

Token 505: 'ctions' (ID: 2620)
  Prédit: 'ction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ction' → logprob: -0.7105015516281128
    2. 'ctions' → logprob: -0.7105015516281128
    3. 'ct' → logprob: -4.085501670837402
    4. 'c' → logprob: -9.585501670837402
    5. 'nt' → logprob: -9.585501670837402
    6. 'n' → logprob: -9.710501670837402
    7. 't' → logprob: -10.460501670837402
    8. 'ption' → logprob: -11.085501670837402
    9. '   ' → logprob: -11.210501670837402
    10. 'tion' → logprob: -11.335501670837402

Token 506: ' success' (ID: 3505)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3633113205432892
    2. '=' → logprob: -1.2383112907409668
    3. 'tmp' → logprob: -4.238311290740967
    4. ',' → logprob: -9.113311767578125
    5. '_tmp' → logprob: -9.738311767578125
    6. ' tmp' → logprob: -9.738311767578125
    7. ',tmp' → logprob: -10.488311767578125
    8. '/tmp' → logprob: -10.988311767578125
    9. '=A' → logprob: -11.488311767578125
    10. '(tmp' → logprob: -11.488311767578125

Token 507: 'ives' (ID: 2264)
  Prédit: 'ractions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ractions' → logprob: -1.167487621307373
    2. 'é' → logprob: -1.667487621307373
    3. 'écut' → logprob: -2.292487621307373
    4. 'r' → logprob: -2.917487621307373
    5. 'éc' → logprob: -3.542487621307373
    6. 'è' → logprob: -3.792487621307373
    7. 'rait' → logprob: -3.792487621307373
    8. 'a' → logprob: -3.917487621307373
    9. 'ctions' → logprob: -3.917487621307373
    10. 'èques' → logprob: -4.042487621307373

Token 508: '.
' (ID: 558)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08172817528247833
    2. '=' → logprob: -2.831728219985962
    3. 'tmp' → logprob: -3.956728219985962
    4. ',' → logprob: -8.956727981567383
    5. '_tmp' → logprob: -9.331727981567383
    6. ' tmp' → logprob: -9.456727981567383
    7. '/tmp' → logprob: -10.331727981567383
    8. ',tmp' → logprob: -10.581727981567383
    9. '[tmp' → logprob: -10.706727981567383
    10. '(tmp' → logprob: -11.081727981567383

Token 509: 'tmp' (ID: 11669)
  Prédit: 'tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -1.0280383548888494e-06
    2. ' tmp' → logprob: -14.125000953674316
    3. '
' → logprob: -16.125001907348633
    4. '/tmp' → logprob: -17.375001907348633
    5. '(tmp' → logprob: -17.375001907348633
    6. '	tmp' → logprob: -17.500001907348633
    7. '```' → logprob: -17.625001907348633
    8. '_tmp' → logprob: -17.625001907348633
    9. '[tmp' → logprob: -17.750001907348633
    10. 'temp' → logprob: -18.000001907348633

Token 510: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5761117339134216
    2. ' =' → logprob: -0.8261117339134216
    3. '=A' → logprob: -8.701111793518066
    4. ',' → logprob: -12.326111793518066
    5. ' ' → logprob: -14.826111793518066
    6. 'A' → logprob: -15.076111793518066
    7. ' ' → logprob: -15.951111793518066
    8. ' =
' → logprob: -16.07611083984375
    9. '=

' → logprob: -16.20111083984375
    10. '=
' → logprob: -16.45111083984375

Token 511: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0015023599844425917
    2. ' A' → logprob: -6.501502513885498
    3. '	A' → logprob: -17.501502990722656
    4. '   ' → logprob: -17.751502990722656
    5. 'a' → logprob: -18.626502990722656
    6. '(A' → logprob: -18.876502990722656
    7. ' ' → logprob: -19.001502990722656
    8. '=A' → logprob: -19.626502990722656
    9. 'y' → logprob: -21.376502990722656
    10. '[A' → logprob: -21.376502990722656

Token 512: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008099827100522816
    2. '0' → logprob: -7.125810146331787
    3. '[-' → logprob: -12.875809669494629
    4. ' [' → logprob: -13.375809669494629
    5. '[min' → logprob: -15.000809669494629
    6. '#' → logprob: -15.250809669494629
    7. '[N' → logprob: -16.000810623168945
    8. '
' → logprob: -16.125810623168945
    9. '[
' → logprob: -16.375810623168945
    10. '(' → logprob: -16.375810623168945

Token 513: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.319370302458992e-06
    2. ' ' → logprob: -12.750005722045898
    3. '1' → logprob: -13.875005722045898
    4. '[' → logprob: -14.500005722045898
    5. '#' → logprob: -15.250005722045898
    6. '   ' → logprob: -15.625005722045898
    7. '
' → logprob: -16.0000057220459
    8. '```' → logprob: -16.5625057220459
    9. '۰' → logprob: -17.0000057220459
    10. '-' → logprob: -17.6250057220459

Token 514: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00015979631280060858
    2. ')' → logprob: -9.500160217285156
    3. ']
' → logprob: -9.875160217285156
    4. ' ]' → logprob: -10.625160217285156
    5. ']

' → logprob: -11.875160217285156
    6. '])' → logprob: -14.000160217285156
    7. ']
' → logprob: -14.750160217285156
    8. ')]' → logprob: -15.750160217285156
    9. '}' → logprob: -16.000160217285156
    10. '```' → logprob: -16.125160217285156

Token 515: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11995161324739456
    2. '
' → logprob: -2.4949517250061035
    3. ' for' → logprob: -3.8699517250061035
    4. '<|end|>' → logprob: -5.9949517250061035
    5. ' 
' → logprob: -6.4949517250061035
    6. 'if' → logprob: -6.7449517250061035
    7. 'i' → logprob: -6.7449517250061035
    8. '+' → logprob: -7.3699517250061035
    9. '\n' → logprob: -7.6199517250061035
    10. '#' → logprob: -7.6199517250061035

Token 516: ' S' (ID: 336)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.016952838748693466
    2. 'if' → logprob: -4.141952991485596
    3. 'i' → logprob: -7.641952991485596
    4. '#' → logprob: -7.766952991485596
    5. 'idx' → logprob: -12.141952514648438
    6. 'index' → logprob: -12.516952514648438
    7. ' for' → logprob: -13.141952514648438
    8. '```' → logprob: -13.266952514648438
    9. 'from' → logprob: -14.141952514648438
    10. 'print' → logprob: -15.016952514648438

Token 517: ''il' (ID: 14683)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0021816655062139034
    2. 't' → logprob: -7.877181529998779
    3. 'i' → logprob: -8.377182006835938
    4. ' for' → logprob: -8.627182006835938
    5. 'earch' → logprob: -8.627182006835938
    6. '#' → logprob: -9.002182006835938
    7. 'e' → logprob: -9.002182006835938
    8. 'ur' → logprob: -9.127182006835938
    9. 'ince' → logprob: -9.752182006835938
    10. 'tr' → logprob: -9.877182006835938

Token 518: ' y' (ID: 342)
  Prédit: ' PLUS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' PLUS' → logprob: -0.6987642645835876
    2. 'PLUS' → logprob: -0.6987642645835876
    3. '_PLUS' → logprob: -7.073764324188232
    4. ' plus' → logprob: -7.198764324188232
    5. 'plus' → logprob: -7.323764324188232
    6. '>' → logprob: -7.448764324188232
    7. '#' → logprob: -7.448764324188232
    8. '+' → logprob: -7.448764324188232
    9. ' ' → logprob: -8.198763847351074
    10. 'MIN' → logprob: -8.323763847351074

Token 519: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.30308449268341064
    2. 'a' → logprob: -2.553084373474121
    3. 'plus' → logprob: -3.053084373474121
    4. '#' → logprob: -3.053084373474121
    5. 't' → logprob: -4.178084373474121
    6. 'Plus' → logprob: -4.803084373474121
    7. 'x' → logprob: -4.803084373474121
    8. '_plus' → logprob: -4.803084373474121
    9. '+' → logprob: -5.053084373474121
    10. 's' → logprob: -5.053084373474121

Token 520: ' à' (ID: 1221)
  Prédit: ' PLUS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' PLUS' → logprob: -0.4606829285621643
    2. 'PLUS' → logprob: -1.9606828689575195
    3. ' ' → logprob: -2.5856828689575195
    4. ' plus' → logprob: -2.8356828689575195
    5. ' MIN' → logprob: -3.5856828689575195
    6. 'MIN' → logprob: -4.0856828689575195
    7. ' more' → logprob: -4.2106828689575195
    8. ' only' → logprob: -4.3356828689575195
    9. '_PLUS' → logprob: -5.5856828689575195
    10. ' MORE' → logprob: -5.7106828689575195

Token 521: ' la' (ID: 557)
  Prédit: 'PLUS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'PLUS' → logprob: -0.2093205451965332
    2. 'u' → logprob: -2.959320545196533
    3. 'pp' → logprob: -2.959320545196533
    4. '_PLUS' → logprob: -3.834320545196533
    5. 'plus' → logprob: -4.584320545196533
    6. '1' → logprob: -4.834320545196533
    7. 'MIN' → logprob: -4.959320545196533
    8. ' PLUS' → logprob: -5.209320545196533
    9. 'rr' → logprob: -5.209320545196533
    10. 'rray' → logprob: -5.334320545196533

Token 522: ' fois' (ID: 14697)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.039328157901763916
    2. 'plus' → logprob: -3.539328098297119
    3. 'mo' → logprob: -5.539328098297119
    4. '1' → logprob: -7.039328098297119
    5. 'pp' → logprob: -7.414328098297119
    6. 'cc' → logprob: -7.539328098297119
    7. ' moins' → logprob: -7.664328098297119
    8. 'v' → logprob: -7.914328098297119
    9. 'PLUS' → logprob: -8.414328575134277
    10. 'l' → logprob: -8.539328575134277

Token 523: ' des' (ID: 731)
  Prédit: 'MIN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MIN' → logprob: -0.9953669309616089
    2. 'PLUS' → logprob: -0.9953669309616089
    3. ' PLUS' → logprob: -1.4953669309616089
    4. ' MIN' → logprob: -3.3703670501708984
    5. ' plus' → logprob: -6.995367050170898
    6. 'plus' → logprob: -7.870367050170898
    7. '_PLUS' → logprob: -8.620367050170898
    8. '+' → logprob: -9.245367050170898
    9. 'MORE' → logprob: -9.245367050170898
    10. ' ' → logprob: -9.370367050170898

Token 524: ' nombres' (ID: 76205)
  Prédit: 'PLUS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'PLUS' → logprob: -0.31688591837882996
    2. 'MIN' → logprob: -1.8168859481811523
    3. ' PLUS' → logprob: -2.5668859481811523
    4. 'plus' → logprob: -4.941885948181152
    5. ' MIN' → logprob: -5.066885948181152
    6. '-' → logprob: -5.316885948181152
    7. ' plus' → logprob: -5.691885948181152
    8. '+' → logprob: -6.066885948181152
    9. 'moins' → logprob: -6.941885948181152
    10. ' -' → logprob: -7.191885948181152

Token 525: ' posit' (ID: 13047)
  Prédit: ' posit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' posit' → logprob: -1.0221197605133057
    2. ' nég' → logprob: -1.0221197605133057
    3. 'posit' → logprob: -2.1471197605133057
    4. 'neg' → logprob: -2.3971197605133057
    5. 'strict' → logprob: -4.022119522094727
    6. '>=' → logprob: -4.147119522094727
    7. ' >=' → logprob: -5.022119522094727
    8. '<' → logprob: -5.522119522094727
    9. ' strict' → logprob: -5.647119522094727
    10. 'n' → logprob: -5.772119522094727

Token 526: 'ifs' (ID: 14119)
  Prédit: 'ifs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifs' → logprob: -0.05626501515507698
    2. 'if' → logprob: -3.181265115737915
    3. 's' → logprob: -4.556264877319336
    4. '>' → logprob: -7.306264877319336
    5. 'is' → logprob: -8.181264877319336
    6. ' ' → logprob: -8.306264877319336
    7. '>=' → logprob: -8.681264877319336
    8. 'f' → logprob: -8.681264877319336
    9. 'és' → logprob: -8.931264877319336
    10. 'atifs' → logprob: -8.931264877319336

Token 527: ' (' (ID: 350)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06482849270105362
    2. 'and' → logprob: -3.314828395843506
    3. ' et' → logprob: -4.064828395843506
    4. ' ' → logprob: -4.814828395843506
    5. ' or' → logprob: -7.689828395843506
    6. 'et' → logprob: -8.439828872680664
    7. '+' → logprob: -9.064828872680664
    8. '>' → logprob: -9.314828872680664
    9. '<|end|>' → logprob: -9.564828872680664
    10. ' >' → logprob: -9.814828872680664

Token 528: 'ou' (ID: 283)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1263156682252884
    2. '>' → logprob: -2.7513155937194824
    3. 'and' → logprob: -4.126315593719482
    4. ' )' → logprob: -4.376315593719482
    5. ' and' → logprob: -4.626315593719482
    6. 'et' → logprob: -5.251315593719482
    7. ' >' → logprob: -5.501315593719482
    8. 'PLUS' → logprob: -5.751315593719482
    9. ' et' → logprob: -6.126315593719482
    10. '>=' → logprob: -7.751315593719482

Token 529: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.541395366191864
    2. '=' → logprob: -1.7913954257965088
    3. ' ég' → logprob: -2.291395425796509
    4. 'ég' → logprob: -2.916395425796509
    5. '=n' → logprob: -3.166395425796509
    6. ' n' → logprob: -3.916395425796509
    7. 'égal' → logprob: -4.66639518737793
    8. '=None' → logprob: -5.16639518737793
    9. ')' → logprob: -5.29139518737793
    10. 'nul' → logprob: -5.79139518737793

Token 530: 'uls' (ID: 13433)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.8712979555130005
    2. '>' → logprob: -1.1212979555130005
    3. 'ull' → logprob: -1.9962979555130005
    4. 'ulle' → logprob: -4.121297836303711
    5. 'uls' → logprob: -4.246297836303711
    6. 'o' → logprob: -4.371297836303711
    7. 'ul' → logprob: -4.371297836303711
    8. 'ot' → logprob: -4.996297836303711
    9. '=' → logprob: -5.121297836303711
    10. '0' → logprob: -5.246297836303711

Token 531: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016030559781938791
    2. ' )' → logprob: -6.501603126525879
    3. 'et' → logprob: -10.126603126525879
    4. 'and' → logprob: -11.001603126525879
    5. '>' → logprob: -11.251603126525879
    6. ' et' → logprob: -11.251603126525879
    7. ' and' → logprob: -12.001603126525879
    8. '#' → logprob: -13.501603126525879
    9. '>)' → logprob: -13.876603126525879
    10. ' >' → logprob: -13.876603126525879

Token 532: ' ET' (ID: 23345)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2827693223953247
    2. 'and' → logprob: -1.4077693223953247
    3. '>' → logprob: -7.407769203186035
    4. ' et' → logprob: -7.532769203186035
    5. 'et' → logprob: -8.282769203186035
    6. ' >' → logprob: -8.782769203186035
    7. ' ' → logprob: -10.407769203186035
    8. '+' → logprob: -11.907769203186035
    9. '>=' → logprob: -12.157769203186035
    10. ',' → logprob: -12.532769203186035

Token 533: ' des' (ID: 731)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.11002852767705917
    2. 'MIN' → logprob: -2.6100285053253174
    3. 'neg' → logprob: -3.9850285053253174
    4. ' des' → logprob: -4.6100287437438965
    5. 'NEG' → logprob: -7.8600287437438965
    6. 'negative' → logprob: -7.9850287437438965
    7. 'strict' → logprob: -7.9850287437438965
    8. ' MIN' → logprob: -8.110028266906738
    9. 'min' → logprob: -8.610028266906738
    10. 'moins' → logprob: -8.610028266906738

Token 534: ' nombres' (ID: 76205)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05328097939491272
    2. 'neg' → logprob: -3.80328106880188
    3. ' nég' → logprob: -4.303280830383301
    4. ' nombres' → logprob: -4.553280830383301
    5. 'nombre' → logprob: -5.428280830383301
    6. 'strict' → logprob: -7.428280830383301
    7. ' n' → logprob: -9.1782808303833
    8. 'numbers' → logprob: -9.3032808303833
    9. '#' → logprob: -9.4282808303833
    10. 'moins' → logprob: -10.1782808303833

Token 535: ' nég' (ID: 55805)
  Prédit: 'strict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strict' → logprob: -0.26574963331222534
    2. 'n' → logprob: -2.14074969291687
    3. ' nég' → logprob: -2.51574969291687
    4. 'neg' → logprob: -3.39074969291687
    5. ' strict' → logprob: -7.640749454498291
    6. '<' → logprob: -8.64074993133545
    7. '<n' → logprob: -8.64074993133545
    8. 'inf' → logprob: -8.89074993133545
    9. 'str' → logprob: -9.89074993133545
    10. 'moins' → logprob: -10.26574993133545

Token 536: 'atifs' (ID: 66205)
  Prédit: 'atifs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atifs' → logprob: -0.008182375691831112
    2. 'aux' → logprob: -5.633182525634766
    3. 'ég' → logprob: -6.133182525634766
    4. 's' → logprob: -8.258182525634766
    5. 'ifs' → logprob: -8.633182525634766
    6. 'eg' → logprob: -8.633182525634766
    7. '>=' → logprob: -8.883182525634766
    8. 'atif' → logprob: -9.133182525634766
    9. 'x' → logprob: -9.383182525634766
    10. '0' → logprob: -9.383182525634766

Token 537: ' dans' (ID: 2671)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28115513920783997
    2. '>' → logprob: -2.0311551094055176
    3. ' >' → logprob: -3.1561551094055176
    4. ' and' → logprob: -3.5311551094055176
    5. ',' → logprob: -4.281155109405518
    6. 'and' → logprob: -4.656155109405518
    7. ' (>' → logprob: -4.781155109405518
    8. ' (' → logprob: -5.031155109405518
    9. '>:' → logprob: -6.906155109405518
    10. '+:' → logprob: -7.156155109405518

Token 538: ' la' (ID: 557)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0016860088799148798
    2. ' A' → logprob: -6.751686096191406
    3. 'la' → logprob: -8.001686096191406
    4. ' la' → logprob: -9.626686096191406
    5. 'le' → logprob: -10.501686096191406
    6. 'l' → logprob: -11.001686096191406
    7. 'the' → logprob: -11.251686096191406
    8. 'range' → logprob: -11.251686096191406
    9. 'les' → logprob: -11.501686096191406
    10. 'PLUS' → logprob: -12.001686096191406

Token 539: ' liste' (ID: 31719)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.033636242151260376
    2. ' A' → logprob: -3.5336363315582275
    3. '#' → logprob: -6.283636093139648
    4. 'if' → logprob: -7.533636093139648
    5. 'range' → logprob: -8.033636093139648
    6. 'list' → logprob: -8.158636093139648
    7. 'liste' → logprob: -9.158636093139648
    8. ' range' → logprob: -9.408636093139648
    9. 's' → logprob: -9.408636093139648
    10. ' ' → logprob: -9.658636093139648

Token 540: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6096018552780151
    2. ' and' → logprob: -1.2346018552780151
    3. '>' → logprob: -2.9846019744873047
    4. ' >' → logprob: -3.2346019744873047
    5. ',' → logprob: -3.3596019744873047
    6. 'and' → logprob: -3.6096019744873047
    7. ' :' → logprob: -5.359601974487305
    8. '+:' → logprob: -5.484601974487305
    9. ' (' → logprob: -6.734601974487305
    10. '+' → logprob: -7.109601974487305

Token 541: 'if' (ID: 366)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3938412666320801
    2. ' >' → logprob: -1.76884126663208
    3. '>' → logprob: -2.26884126663208
    4. ' and' → logprob: -3.39384126663208
    5. ' :' → logprob: -4.26884126663208
    6. 'and' → logprob: -6.26884126663208
    7. ',' → logprob: -7.51884126663208
    8. ' !=' → logprob: -8.143840789794922
    9. '>:' → logprob: -8.393840789794922
    10. ' >=' → logprob: -8.518840789794922

Token 542: ' PLUS' (ID: 61301)
  Prédit: ' PLUS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' PLUS' → logprob: -0.4784121811389923
    2. 'PLUS' → logprob: -1.10341215133667
    3. ' MIN' → logprob: -3.60341215133667
    4. 'MIN' → logprob: -3.85341215133667
    5. ' ' → logprob: -10.603412628173828
    6. ' plus' → logprob: -11.728412628173828
    7. '(' → logprob: -11.978412628173828
    8. 'plus' → logprob: -12.603412628173828
    9. '_PLUS' → logprob: -12.603412628173828
    10. 'Plus' → logprob: -12.853412628173828

Token 543: ' and' (ID: 326)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.007443463429808617
    2. '>' → logprob: -5.007443428039551
    3. ' and' → logprob: -8.13244342803955
    4. ' >=' → logprob: -8.75744342803955
    5. ' !=' → logprob: -8.75744342803955
    6. ' ==' → logprob: -9.75744342803955
    7. ' ' → logprob: -10.25744342803955
    8. 'and' → logprob: -11.75744342803955
    9. ' <' → logprob: -12.00744342803955
    10. '>=' → logprob: -12.75744342803955

Token 544: ' MIN' (ID: 27151)
  Prédit: 'MIN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MIN' → logprob: -0.5759432315826416
    2. ' MIN' → logprob: -0.8259432315826416
    3. ' ' → logprob: -13.075942993164062
    4. '   ' → logprob: -14.700942993164062
    5. 'PLUS' → logprob: -15.075942993164062
    6. ' ' → logprob: -15.200942993164062
    7. '_MIN' → logprob: -16.200942993164062
    8. ' PLUS' → logprob: -16.325942993164062
    9. '(M' → logprob: -16.450942993164062
    10. ' MINI' → logprob: -16.575942993164062

Token 545: 'US' (ID: 3042)
  Prédit: 'US'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'US' → logprob: -0.0012836871901527047
    2. '>' → logprob: -7.501283645629883
    3. 'us' → logprob: -8.376283645629883
    4. 'OUS' → logprob: -8.626283645629883
    5. '```' → logprob: -9.876283645629883
    6. 'USE' → logprob: -10.251283645629883
    7. 'UX' → logprob: -10.876283645629883
    8. ':
' → logprob: -11.001283645629883
    9. '>
' → logprob: -11.001283645629883
    10. '=' → logprob: -11.126283645629883

Token 546: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009522432461380959
    2. ' >' → logprob: -5.384522438049316
    3. ' :' → logprob: -6.134522438049316
    4. '>' → logprob: -6.259522438049316
    5. ':
' → logprob: -7.384522438049316
    6. ' ==' → logprob: -9.134522438049316
    7. ' >=' → logprob: -10.509522438049316
    8. '==' → logprob: -10.634522438049316
    9. '>:' → logprob: -11.384522438049316
    10. ' :
' → logprob: -11.509522438049316

Token 547: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.050187792629003525
    2. ':
' → logprob: -3.050187826156616
    3. '   ' → logprob: -6.675187587738037
    4. ' and' → logprob: -9.300188064575195
    5. ' :' → logprob: -9.300188064575195
    6. ' for' → logprob: -9.675188064575195
    7. ' :
' → logprob: -10.550188064575195
    8. '):' → logprob: -11.050188064575195
    9. ',' → logprob: -11.675188064575195
    10. 'for' → logprob: -12.050188064575195

Token 548: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9262203574180603
    2. ':' → logprob: -1.301220417022705
    3. 'for' → logprob: -1.926220417022705
    4. '   ' → logprob: -1.926220417022705
    5. ':
' → logprob: -3.801220417022705
    6. ' i' → logprob: -5.051220417022705
    7. '#' (adapté à ' #') → logprob: -5.926220417022705
    8. 'i' → logprob: -6.426220417022705
    9. '
' → logprob: -6.801220417022705
    10. '    
' → logprob: -6.801220417022705

Token 549: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1859026849269867
    2. '#' → logprob: -2.0609025955200195
    3. 'i' → logprob: -3.6859025955200195
    4. 'idx' → logprob: -4.9359025955200195
    5. 'j' → logprob: -5.6859025955200195
    6. 'index' → logprob: -6.3109025955200195
    7. 'pos' → logprob: -6.8109025955200195
    8. 'if' → logprob: -6.8109025955200195
    9. 'y' → logprob: -7.3109025955200195
    10. '   ' → logprob: -7.4359025955200195

Token 550: ' va' (ID: 3423)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7339684367179871
    2. 'for' → logprob: -0.7339684367179871
    3. '#' → logprob: -3.483968496322632
    4. ' continue' → logprob: -6.483968257904053
    5. ' #' → logprob: -6.608968257904053
    6. 's' → logprob: -7.233968257904053
    7. 'range' → logprob: -7.608968257904053
    8. 'i' → logprob: -7.608968257904053
    9. ' =' → logprob: -7.983968257904053
    10. ' range' → logprob: -8.233968734741211

Token 551: ' privilég' (ID: 164587)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7937067151069641
    2. '#' → logprob: -1.4187066555023193
    3. ' for' → logprob: -2.0437066555023193
    4. 'tmp' → logprob: -3.4187066555023193
    5. 'prendre' → logprob: -3.5437066555023193
    6. 'i' → logprob: -3.7937066555023193
    7. ' prendre' → logprob: -4.293706893920898
    8. '   ' → logprob: -4.543706893920898
    9. 'faire' → logprob: -4.543706893920898
    10. 'x' → logprob: -4.918706893920898

Token 552: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.0014716495061293244
    2. 'er' → logprob: -7.251471519470215
    3. 'g' → logprob: -7.501471519470215
    4. 'ger' → logprob: -8.876471519470215
    5. 'i' → logprob: -10.626471519470215
    6. 'iger' → logprob: -10.751471519470215
    7. '\' → logprob: -12.876471519470215
    8. '   ' → logprob: -12.876471519470215
    9. 'eg' → logprob: -13.126471519470215
    10. '#' → logprob: -13.126471519470215

Token 553: ' une' (ID: 2463)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.84544038772583
    2. ' i' → logprob: -1.84544038772583
    3. 'i' → logprob: -2.09544038772583
    4. ' la' → logprob: -2.09544038772583
    5. '#' → logprob: -2.22044038772583
    6. 'for' → logprob: -2.47044038772583
    7. 'x' → logprob: -3.09544038772583
    8. ' x' → logprob: -3.47044038772583
    9. ' l' → logprob: -3.47044038772583
    10. ' le' → logprob: -3.59544038772583

Token 554: ' stratégie' (ID: 79899)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6726245880126953
    2. ' for' → logprob: -1.6726245880126953
    3. ' stratégie' → logprob: -2.9226245880126953
    4. ' boucle' → logprob: -3.0476245880126953
    5. '#' → logprob: -3.2976245880126953
    6. ' approche' → logprob: -4.047624588012695
    7. 'x' → logprob: -4.047624588012695
    8. 'appro' → logprob: -4.547624588012695
    9. 'pour' → logprob: -4.922624588012695
    10. 'str' → logprob: -5.047624588012695

Token 555: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2840291261672974
    2. ' où' → logprob: -2.034029006958008
    3. ' where' → logprob: -2.284029006958008
    4. '#' → logprob: -2.534029006958008
    5. ' d' → logprob: -2.659029006958008
    6. ' qui' → logprob: -2.784029006958008
    7. 'où' → logprob: -3.034029006958008
    8. ' de' → logprob: -3.284029006958008
    9. 'd' → logprob: -3.409029006958008
    10. 'de' → logprob: -3.909029006958008

Token 556: ' maxim' (ID: 29045)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.0367132425308228
    2. 'i' → logprob: -1.1617132425308228
    3. 'x' → logprob: -1.7867132425308228
    4. ' maxim' → logprob: -2.286713123321533
    5. ' i' → logprob: -5.036713123321533
    6. 'y' → logprob: -5.536713123321533
    7. 'util' → logprob: -5.536713123321533
    8. '#' → logprob: -5.536713123321533
    9. ' x' → logprob: -5.661713123321533
    10. 'for' → logprob: -5.661713123321533

Token 557: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.35576707124710083
    2. 'al' → logprob: -1.230767011642456
    3. 'aler' → logprob: -6.730767250061035
    4. 'alyser' → logprob: -6.730767250061035
    5. '#' → logprob: -7.230767250061035
    6. 'er' → logprob: -7.480767250061035
    7. 'aiser' → logprob: -7.480767250061035
    8. 'ser' → logprob: -7.605767250061035
    9. '```' → logprob: -7.855767250061035
    10. 'alis' → logprob: -8.105767250061035

Token 558: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -1.505102515220642
    2. 'le' → logprob: -1.880102515220642
    3. 'x' → logprob: -2.0051026344299316
    4. '#' → logprob: -2.3801026344299316
    5. 'tmp' → logprob: -2.5051026344299316
    6. 'les' → logprob: -2.6301026344299316
    7. 'l' → logprob: -2.7551026344299316
    8. 'for' → logprob: -3.1301026344299316
    9. 'result' → logprob: -3.2551026344299316
    10. ' la' → logprob: -3.3801026344299316

Token 559: ' différence' (ID: 79196)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.9068130850791931
    2. 'diff' → logprob: -0.9068130850791931
    3. 'rés' → logprob: -2.281813144683838
    4. 'val' → logprob: -3.281813144683838
    5. 'result' → logprob: -3.531813144683838
    6. 'difference' → logprob: -4.156813144683838
    7. ' score' → logprob: -6.281813144683838
    8. 'tmp' → logprob: -6.781813144683838
    9. 's' → logprob: -7.406813144683838
    10. 'max' → logprob: -7.656813144683838

Token 560: ' finale' (ID: 37759)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.7519635558128357
    2. '   ' → logprob: -1.6269636154174805
    3. ':' → logprob: -2.0019636154174805
    4. ' for' → logprob: -3.1269636154174805
    5. 'en' → logprob: -3.1269636154174805
    6. 'for' → logprob: -4.0019636154174805
    7. ' pour' → logprob: -4.3769636154174805
    8. '#' → logprob: -4.5019636154174805
    9. ' entre' → logprob: -4.7519636154174805
    10. ' de' → logprob: -5.1269636154174805

Token 561: '.
' (ID: 558)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8675066828727722
    2. '   ' → logprob: -1.492506742477417
    3. 'for' → logprob: -1.742506742477417
    4. ':' → logprob: -2.117506742477417
    5. '.' → logprob: -4.117506504058838
    6. ',' → logprob: -4.617506504058838
    7. ' en' → logprob: -4.992506504058838
    8. ':
' → logprob: -5.117506504058838
    9. '#' → logprob: -6.242506504058838
    10. ' between' → logprob: -6.367506504058838

Token 562: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6053373217582703
    2. 'for' → logprob: -1.105337381362915
    3. '   ' → logprob: -2.105337381362915
    4. '#' → logprob: -8.230337142944336
    5. '	for' → logprob: -8.230337142944336
    6. ' i' → logprob: -8.730337142944336
    7. '    
' → logprob: -8.855337142944336
    8. '
' → logprob: -8.855337142944336
    9. 'i' → logprob: -9.605337142944336
    10. ' #' → logprob: -9.730337142944336

Token 563: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10160750150680542
    2. ' for' → logprob: -2.47660756111145
    3. '   ' → logprob: -4.976607322692871
    4. '#' (adapté à ' #') → logprob: -5.726607322692871
    5. 'i' → logprob: -6.226607322692871
    6. ' i' → logprob: -8.101607322692871
    7. '	for' → logprob: -10.101607322692871
    8. ' #' → logprob: -10.226607322692871
    9. 'idx' → logprob: -10.976607322692871
    10. 'x' → logprob: -10.976607322692871

Token 564: ' Tant' (ID: 169541)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00920050498098135
    2. ' for' → logprob: -4.884200572967529
    3. '#' → logprob: -6.759200572967529
    4. 'i' → logprob: -7.884200572967529
    5. ' i' → logprob: -11.009200096130371
    6. '   ' → logprob: -11.009200096130371
    7. 'x' → logprob: -12.259200096130371
    8. '
' → logprob: -12.509200096130371
    9. '	for' → logprob: -12.634200096130371
    10. ' #' → logprob: -13.134200096130371

Token 565: ' qu' (ID: 474)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.6116253137588501
    2. '   ' → logprob: -1.11162531375885
    3. '#' → logprob: -2.7366251945495605
    4. ' for' → logprob: -4.1116251945495605
    5. ' #' → logprob: -4.7366251945495605
    6. '_' → logprob: -4.9866251945495605
    7. 'for' → logprob: -5.4866251945495605
    8. '    ' → logprob: -5.6116251945495605
    9. 'que' → logprob: -5.6116251945495605
    10. 'PLUS' → logprob: -5.7366251945495605

Token 566: ''il' (ID: 14683)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.7959376573562622
    2. ' PLUS' → logprob: -1.9209376573562622
    3. ' tmp' → logprob: -2.0459375381469727
    4. 'PLUS' → logprob: -2.5459375381469727
    5. ' plus' → logprob: -3.6709375381469727
    6. ' True' → logprob: -4.045937538146973
    7. 'len' → logprob: -4.045937538146973
    8. 'A' → logprob: -4.170937538146973
    9. 'tmp' → logprob: -4.170937538146973
    10. ' A' → logprob: -4.295937538146973

Token 567: ' reste' (ID: 26769)
  Prédit: 'PLUS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'PLUS' → logprob: -0.7069339156150818
    2. ' y' → logprob: -1.3319339752197266
    3. ' PLUS' → logprob: -2.0819339752197266
    4. 'y' → logprob: -2.3319339752197266
    5. ' reste' → logprob: -4.581933975219727
    6. ' rest' → logprob: -5.456933975219727
    7. 'plus' → logprob: -6.331933975219727
    8. ' plus' → logprob: -6.581933975219727
    9. '#' → logprob: -6.831933975219727
    10. 'rest' → logprob: -7.831933975219727

Token 568: ' au' (ID: 2791)
  Prédit: 'MIN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MIN' → logprob: -1.1172980070114136
    2. ' PLUS' → logprob: -1.3672980070114136
    3. 'PLUS' → logprob: -1.4922980070114136
    4. ' MIN' → logprob: -1.8672980070114136
    5. ' not' → logprob: -4.867298126220703
    6. ' N' → logprob: -5.492298126220703
    7. ' ' → logprob: -5.742298126220703
    8. ' plus' → logprob: -5.992298126220703
    9. ' a' → logprob: -6.367298126220703
    10. ' tmp' → logprob: -6.367298126220703

Token 569: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.027972234413027763
    2. ' moins' → logprob: -3.9029722213745117
    3. 'PLUS' → logprob: -5.652972221374512
    4. 'plus' → logprob: -6.527972221374512
    5. 'len' → logprob: -6.777972221374512
    6. 'less' → logprob: -7.652972221374512
    7. '```' → logprob: -8.652972221374512
    8. 'mo' → logprob: -9.027972221374512
    9. '#' → logprob: -9.027972221374512
    10. 'N' → logprob: -10.027972221374512

Token 570: ' deux' (ID: 10301)
  Prédit: 'PLUS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'PLUS' → logprob: -0.2937468886375427
    2. ' PLUS' → logprob: -2.1687469482421875
    3. '1' → logprob: -3.4187469482421875
    4. 'len' → logprob: -3.5437469482421875
    5. '   ' → logprob: -3.9187469482421875
    6. ' len' → logprob: -4.1687469482421875
    7. 'N' → logprob: -4.9187469482421875
    8. ' ' → logprob: -4.9187469482421875
    9. ' N' → logprob: -5.2937469482421875
    10. 'MIN' → logprob: -5.2937469482421875

Token 571: ' ent' (ID: 1121)
  Prédit: 'PLUS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'PLUS' → logprob: -1.6433675289154053
    2. ' PLUS' → logprob: -2.0183675289154053
    3. '+' → logprob: -2.2683675289154053
    4. ' plus' → logprob: -2.5183675289154053
    5. 'plus' → logprob: -3.1433675289154053
    6. ' espaces' → logprob: -3.3933675289154053
    7. ' ' → logprob: -3.3933675289154053
    8. '>' → logprob: -3.5183675289154053
    9. ' elements' → logprob: -3.6433675289154053
    10. 'A' → logprob: -3.8933675289154053

Token 572: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.16976100206375122
    2. 'ier' → logprob: -2.0447609424591064
    3. 'emps' → logprob: -4.5447611808776855
    4. 'A' → logprob: -5.5447611808776855
    5. 'ières' → logprob: -5.7947611808776855
    6. 'res' → logprob: -6.4197611808776855
    7. '```' → logprob: -7.1697611808776855
    8. 't' → logprob: -7.6697611808776855
    9. 'ements' → logprob: -7.6697611808776855
    10. 's' → logprob: -7.6697611808776855

Token 573: ' posit' (ID: 13047)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.8591873049736023
    2. '>' → logprob: -1.859187364578247
    3. ' >=' → logprob: -2.234187364578247
    4. 'posit' → logprob: -2.984187364578247
    5. ' à' → logprob: -3.109187364578247
    6. ' >' → logprob: -3.734187364578247
    7. 'dans' → logprob: -3.859187364578247
    8. ' posit' → logprob: -4.234187126159668
    9. 'à' → logprob: -4.234187126159668
    10. ':' → logprob: -4.234187126159668

Token 574: 'ifs' (ID: 14119)
  Prédit: 'ifs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifs' → logprob: -0.0010735384421423078
    2. 's' → logprob: -7.751073360443115
    3. 'if' → logprob: -8.501073837280273
    4. 'fs' → logprob: -8.626073837280273
    5. '```' → logprob: -9.626073837280273
    6. '   ' → logprob: -9.626073837280273
    7. '#' → logprob: -10.001073837280273
    8. 'es' → logprob: -10.501073837280273
    9. 'és' → logprob: -11.376073837280273
    10. '>' → logprob: -12.126073837280273

Token 575: ' ou' (ID: 2031)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.1502447873353958
    2. ':' → logprob: -3.27524471282959
    3. '>' → logprob: -3.27524471282959
    4. 'or' → logprob: -3.90024471282959
    5. ' >' → logprob: -4.40024471282959
    6. ' ou' → logprob: -4.65024471282959
    7. 'ou' → logprob: -4.77524471282959
    8. '+' → logprob: -6.27524471282959
    9. '>=' → logprob: -6.40024471282959
    10. ' (' → logprob: -6.40024471282959

Token 576: ' n' (ID: 297)
  Prédit: 'ou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ou' → logprob: -0.0884784683585167
    2. 'plus' → logprob: -3.2134785652160645
    3. 'au' → logprob: -3.9634785652160645
    4. 'n' → logprob: -4.7134785652160645
    5. 'PLUS' → logprob: -5.5884785652160645
    6. '/ou' → logprob: -6.3384785652160645
    7. 'r' → logprob: -6.8384785652160645
    8. '(' → logprob: -6.8384785652160645
    9. '/' → logprob: -6.9634785652160645
    10. 'nul' → logprob: -7.2134785652160645

Token 577: 'uls' (ID: 13433)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.5862279534339905
    2. 'ul' → logprob: -2.3362278938293457
    3. 'on' → logprob: -2.4612278938293457
    4. 'ot' → logprob: -2.7112278938293457
    5. 'ull' → logprob: -3.0862278938293457
    6. 'o' → logprob: -3.2112278938293457
    7. 'plus' → logprob: -3.7112278938293457
    8. 'uls' → logprob: -3.9612278938293457
    9. 'ulle' → logprob: -4.461227893829346
    10. '0' → logprob: -4.461227893829346

Token 578: ' non' (ID: 2893)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.7034682631492615
    2. ':' → logprob: -0.8284682631492615
    3. '>' → logprob: -4.328468322753906
    4. ',' → logprob: -4.328468322753906
    5. ' and' → logprob: -4.328468322753906
    6. ' >' → logprob: -4.953468322753906
    7. ' :' → logprob: -5.078468322753906
    8. ' (' → logprob: -5.453468322753906
    9. ' ' → logprob: -6.203468322753906
    10. 'or' → logprob: -6.578468322753906

Token 579: ' utilisés' (ID: 94258)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25981971621513367
    2. 'z' → logprob: -3.134819746017456
    3. 'ég' → logprob: -3.384819746017456
    4. ' ' → logprob: -3.634819746017456
    5. ' ég' → logprob: -3.759819746017456
    6. 'n' → logprob: -3.884819746017456
    7. 'trait' → logprob: -4.009819507598877
    8. ' n' → logprob: -4.509819507598877
    9. '1' → logprob: -4.759819507598877
    10. '=' → logprob: -5.134819507598877

Token 580: ',
' (ID: 412)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4366591274738312
    2. ' and' → logprob: -1.6866590976715088
    3. ' or' → logprob: -2.311659097671509
    4. ',' → logprob: -3.311659097671509
    5. ' :' → logprob: -4.686659336090088
    6. 'and' → logprob: -4.686659336090088
    7. ' ' → logprob: -6.186659336090088
    8. ' (' → logprob: -6.186659336090088
    9. '   ' → logprob: -6.311659336090088
    10. ' in' → logprob: -6.311659336090088

Token 581: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2662732601165771
    2. '   ' → logprob: -1.5162732601165771
    3. '    ' → logprob: -2.141273260116577
    4. ' while' → logprob: -2.266273260116577
    5. ' plus' → logprob: -2.641273260116577
    6. ' for' → logprob: -2.891273260116577
    7. ' PLUS' → logprob: -3.516273260116577
    8. ' if' → logprob: -3.766273260116577
    9. ' and' → logprob: -4.016273498535156
    10. ' i' → logprob: -4.266273498535156

Token 582: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.628503143787384
    2. '   ' → logprob: -1.8785030841827393
    3. 'i' → logprob: -2.1285030841827393
    4. ' for' → logprob: -2.3785030841827393
    5. ' i' → logprob: -3.0035030841827393
    6. 'while' → logprob: -3.2535030841827393
    7. ' while' → logprob: -5.003503322601318
    8. 'idx' → logprob: -6.253503322601318
    9. 'plus' → logprob: -6.878503322601318
    10. 'if' → logprob: -7.128503322601318

Token 583: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7468060255050659
    2. ' for' → logprob: -0.9968060255050659
    3. 'i' → logprob: -2.3718061447143555
    4. ' i' → logprob: -3.3718061447143555
    5. '   ' → logprob: -4.3718061447143555
    6. 'PLUS' → logprob: -4.9968061447143555
    7. 'plus' → logprob: -5.8718061447143555
    8. 'idx' → logprob: -6.2468061447143555
    9. ' idx' → logprob: -6.4968061447143555
    10. ' PLUS' → logprob: -6.8718061447143555

Token 584: ' sou' (ID: 4069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.265329509973526
    2. 'for' → logprob: -1.6403294801712036
    3. '   ' → logprob: -3.765329599380493
    4. ':' → logprob: -5.265329360961914
    5. ' while' → logprob: -5.515329360961914
    6. ' +=' → logprob: -6.765329360961914
    7. 'while' → logprob: -7.265329360961914
    8. ' PLUS' → logprob: -7.390329360961914
    9. 'PLUS' → logprob: -7.640329360961914
    10. ' :' → logprob: -7.765329360961914

Token 585: 'stra' (ID: 14867)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5258790850639343
    2. '       ' → logprob: -1.900879144668579
    3. 'for' → logprob: -1.900879144668579
    4. '           ' → logprob: -2.525879144668579
    5. ' for' → logprob: -3.900879144668579
    6. 'it' → logprob: -6.40087890625
    7. 'tr' → logprob: -7.02587890625
    8. 'u' → logprob: -7.52587890625
    9. 'ject' → logprob: -7.52587890625
    10. 'if' → logprob: -7.65087890625

Token 586: 'it' (ID: 278)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.29105862975120544
    2. 'it' → logprob: -2.2910585403442383
    3. '   ' → logprob: -2.7910585403442383
    4. 'i' → logprob: -3.2910585403442383
    5. 't' → logprob: -4.666058540344238
    6. '       ' → logprob: -5.291058540344238
    7. 'c' → logprob: -5.791058540344238
    8. 'ire' → logprob: -5.791058540344238
    9. 'cter' → logprob: -5.791058540344238
    10. 'cte' → logprob: -6.103558540344238

Token 587: ' le' (ID: 505)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -1.0624595880508423
    2. ' A' → logprob: -1.1874595880508423
    3. 'A' → logprob: -1.6874595880508423
    4. ' tmp' → logprob: -2.4374594688415527
    5. '   ' → logprob: -4.062459468841553
    6. ' ' → logprob: -4.187459468841553
    7. ',' → logprob: -4.562459468841553
    8. '(tmp' → logprob: -4.937459468841553
    9. '    ' → logprob: -5.437459468841553
    10. 'from' → logprob: -5.562459468841553

Token 588: ' plus' (ID: 2932)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.6623101830482483
    2. 'A' → logprob: -1.4123101234436035
    3. ' plus' → logprob: -2.7873101234436035
    4. ' A' → logprob: -2.9123101234436035
    5. 'plus' → logprob: -2.9123101234436035
    6. ' tmp' → logprob: -3.2873101234436035
    7. ' next' → logprob: -5.2873101234436035
    8. '[tmp' → logprob: -5.6623101234436035
    9. ' dernier' → logprob: -5.7873101234436035
    10. '```' → logprob: -5.9123101234436035

Token 589: ' grand' (ID: 6363)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.6709067821502686
    2. ' grand' → logprob: -1.1709067821502686
    3. '[' → logprob: -2.7959067821502686
    4. 'A' → logprob: -3.5459067821502686
    5. 'large' → logprob: -4.045907020568848
    6. '   ' → logprob: -4.295907020568848
    7. ' grands' → logprob: -4.795907020568848
    8. ' petit' → logprob: -5.170907020568848
    9. 'plus' → logprob: -5.545907020568848
    10. 'élé' → logprob: -5.795907020568848

Token 590: ' de' (ID: 334)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8375229835510254
    2. ' -' → logprob: -1.0875229835510254
    3. ']' → logprob: -2.9625229835510254
    4. ' ' → logprob: -3.0875229835510254
    5. ' ]' → logprob: -3.7125229835510254
    6. ' (' → logprob: -3.8375229835510254
    7. ')' → logprob: -4.462522983551025
    8. ' >=' → logprob: -4.587522983551025
    9. 'A' → logprob: -4.712522983551025
    10. '+' → logprob: -5.212522983551025

Token 591: ' ces' (ID: 10532)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0028664469718933105
    2. ' A' → logprob: -6.252866268157959
    3. 'l' → logprob: -7.377866268157959
    4. '(A' → logprob: -9.752866744995117
    5. '#' → logprob: -10.377866744995117
    6. 'les' → logprob: -10.377866744995117
    7. 'la' → logprob: -10.502866744995117
    8. 'plus' → logprob: -10.627866744995117
    9. 'PLUS' → logprob: -10.627866744995117
    10. 's' → logprob: -11.502866744995117

Token 592: ' éléments' (ID: 57375)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2349230796098709
    2. 'PLUS' → logprob: -1.9849231243133545
    3. 'élé' → logprob: -4.609922885894775
    4. 'ux' → logprob: -4.859922885894775
    5. 'de' → logprob: -4.984922885894775
    6. 's' → logprob: -5.234922885894775
    7. '```' → logprob: -5.484922885894775
    8. 'rest' → logprob: -5.484922885894775
    9. 'plus' → logprob: -5.609922885894775
    10. ' PLUS' → logprob: -5.734922885894775

Token 593: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0115281343460083
    2. 's' → logprob: -1.7615281343460083
    3. 'from' → logprob: -2.5115280151367188
    4. '-' → logprob: -2.7615280151367188
    5. ' from' → logprob: -2.8865280151367188
    6. '   ' → logprob: -3.0115280151367188
    7. ' -' → logprob: -3.2615280151367188
    8. ' (' → logprob: -3.5115280151367188
    9. '[' → logprob: -3.7615280151367188
    10. ' ' → logprob: -4.511528015136719

Token 594: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.023631513118743896
    2. ' tmp' → logprob: -3.7736315727233887
    3. '	tmp' → logprob: -8.39863109588623
    4. '(tmp' → logprob: -9.64863109588623
    5. '/tmp' → logprob: -11.14863109588623
    6. '[tmp' → logprob: -11.14863109588623
    7. 'temp' → logprob: -11.52363109588623
    8. 't' → logprob: -11.64863109588623
    9. ' ' → logprob: -11.64863109588623
    10. '$tmp' → logprob: -11.77363109588623

Token 595: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04825039207935333
    2. ' while' → logprob: -3.798250436782837
    3. 'while' → logprob: -5.673250198364258
    4. ',' → logprob: -5.923250198364258
    5. '    ' → logprob: -5.923250198364258
    6. ':' → logprob: -5.923250198364258
    7. ' (' → logprob: -6.173250198364258
    8. '  ' → logprob: -6.673250198364258
    9. ' for' → logprob: -6.673250198364258
    10. ' and' → logprob: -6.798250198364258

Token 596: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -1.081961750984192
    2. 'l' → logprob: -1.581961750984192
    3. 'la' → logprob: -2.0819616317749023
    4. ' la' → logprob: -2.2069616317749023
    5. ' partir' → logprob: -3.3319616317749023
    6. 'plus' → logprob: -3.8319616317749023
    7. 'PLUS' → logprob: -3.8319616317749023
    8. '+' → logprob: -4.081961631774902
    9. ' l' → logprob: -4.456961631774902
    10. 'i' → logprob: -4.581961631774902

Token 597: ' étape' (ID: 83661)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5288615822792053
    2. 'for' → logprob: -1.9038615226745605
    3. 'tour' → logprob: -3.0288615226745605
    4. 'indice' → logprob: -3.5288615226745605
    5. 'iteration' → logprob: -3.7788615226745605
    6. ' tour' → logprob: -4.0288615226745605
    7. ' ' → logprob: -4.2788615226745605
    8. 'step' → logprob: -4.6538615226745605
    9. ' for' → logprob: -4.7788615226745605
    10. 'pass' → logprob: -4.9038615226745605

Token 598: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13191549479961395
    2. ' while' → logprob: -3.50691556930542
    3. '.' → logprob: -3.63191556930542
    4. ',' → logprob: -3.63191556930542
    5. '    
' → logprob: -4.50691556930542
    6. 'while' → logprob: -4.75691556930542
    7. '    ' → logprob: -5.00691556930542
    8. ' ,' → logprob: -6.25691556930542
    9. '  ' → logprob: -6.50691556930542
    10. '<|end|>' → logprob: -6.75691556930542

Token 599: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5907644629478455
    2. ' for' → logprob: -0.9657644629478455
    3. 'while' → logprob: -3.2157645225524902
    4. ' while' → logprob: -3.8407645225524902
    5. ' i' → logprob: -6.21576452255249
    6. 'i' → logprob: -6.96576452255249
    7. '   ' → logprob: -7.46576452255249
    8. '
' → logprob: -9.840764045715332
    9. '+' → logprob: -9.840764045715332
    10. ' 
' → logprob: -9.965764045715332

Token 600: ' while' (ID: 2049)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.63629549741745
    2. 'for' → logprob: -0.76129549741745
    3. ' while' → logprob: -6.511295318603516
    4. 'while' (adapté à ' while') → logprob: -6.886295318603516
    5. ' i' → logprob: -7.261295318603516
    6. 'i' → logprob: -8.136295318603516
    7. '+
' → logprob: -10.136295318603516
    8. '
' → logprob: -10.636295318603516
    9. ' plus' → logprob: -10.636295318603516
    10. '+' → logprob: -10.636295318603516

Token 601: ' PLUS' (ID: 61301)
  Prédit: 'PLUS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'PLUS' → logprob: -0.008616581559181213
    2. ' PLUS' → logprob: -4.7586164474487305
    3. 'plus' → logprob: -13.63361644744873
    4. '(' → logprob: -14.75861644744873
    5. '_PLUS' → logprob: -15.63361644744873
    6. ' plus' → logprob: -15.63361644744873
    7. 'Plus' → logprob: -15.75861644744873
    8. ' ' → logprob: -17.633617401123047
    9. '   ' → logprob: -18.008617401123047
    10. '(P' → logprob: -18.133617401123047

Token 602: ' >=' (ID: 5064)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5760148763656616
    2. '>' → logprob: -0.8260148763656616
    3. '>=' → logprob: -10.576014518737793
    4. ' >=' → logprob: -11.076014518737793
    5. ' ' → logprob: -11.201014518737793
    6. '   ' → logprob: -11.326014518737793
    7. ' and' → logprob: -13.201014518737793
    8. 'and' → logprob: -13.451014518737793
    9. '-' → logprob: -13.826014518737793
    10. '  ' → logprob: -13.951014518737793

Token 603: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0040956162847578526
    2. ' ' → logprob: -5.504095554351807
    3. '   ' → logprob: -11.879096031188965
    4. '1' → logprob: -12.254096031188965
    5. '  ' → logprob: -13.254096031188965
    6. '>' → logprob: -13.629096031188965
    7. '
' → logprob: -14.254096031188965
    8. '3' → logprob: -14.379096031188965
    9. '```' → logprob: -15.379096031188965
    10. '	' → logprob: -15.504096031188965

Token 604: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.613945101387799e-05
    2. '1' → logprob: -10.000085830688477
    3. ' ' → logprob: -10.250085830688477
    4. '3' → logprob: -13.250085830688477
    5. '   ' → logprob: -13.500085830688477
    6. '>' → logprob: -14.500085830688477
    7. '
' → logprob: -14.625085830688477
    8. '  ' → logprob: -14.875085830688477
    9. '

' → logprob: -15.687585830688477
    10. '```' → logprob: -15.875085830688477

Token 605: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02727113477885723
    2. ':
' → logprob: -4.152271270751953
    3. ' and' → logprob: -4.652271270751953
    4. '   ' → logprob: -6.527271270751953
    5. 'and' → logprob: -9.152271270751953
    6. ' :' → logprob: -10.277271270751953
    7. ':
' → logprob: -11.652271270751953
    8. ',' → logprob: -11.902271270751953
    9. ':

' → logprob: -12.527271270751953
    10. ' :
' → logprob: -12.777271270751953

Token 606: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005222613457590342
    2. ' x' → logprob: -5.380222797393799
    3. '	x' → logprob: -8.88022232055664
    4. 'x' → logprob: -9.25522232055664
    5. ' tmp' → logprob: -9.63022232055664
    6. '	tmp' → logprob: -9.75522232055664
    7. '+' → logprob: -10.00522232055664
    8. '   ' → logprob: -10.75522232055664
    9. '    ' → logprob: -10.88022232055664
    10. '       ' → logprob: -11.00522232055664

Token 607: ' #' (ID: 1069)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5861088633537292
    2. 'tmp' → logprob: -1.461108922958374
    3. '   ' → logprob: -2.086108922958374
    4. ' x' → logprob: -3.086108922958374
    5. ' tmp' → logprob: -3.836108922958374
    6. 'max' → logprob: -5.586108684539795
    7. 'y' → logprob: -6.211108684539795
    8. 't' → logprob: -6.336108684539795
    9. 'print' → logprob: -6.461108684539795
    10. '       ' → logprob: -6.461108684539795

Token 608: ' Affect' (ID: 190087)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.027469590306282043
    2. 'y' → logprob: -5.027469635009766
    3. ' x' → logprob: -5.152469635009766
    4. 'max' → logprob: -5.527469635009766
    5. 'tmp' → logprob: -5.902469635009766
    6. 'p' → logprob: -6.527469635009766
    7. '   ' → logprob: -7.152469635009766
    8. 'i' → logprob: -7.277469635009766
    9. 'idx' → logprob: -7.277469635009766
    10. 'pos' → logprob: -7.277469635009766

Token 609: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.008282046765089035
    2. 'uer' → logprob: -4.88328218460083
    3. '       ' → logprob: -7.38328218460083
    4. 'ation' → logprob: -11.258281707763672
    5. '   ' → logprob: -11.883281707763672
    6. 'erm' → logprob: -12.383281707763672
    7. 'x' → logprob: -12.508281707763672
    8. '           ' → logprob: -12.508281707763672
    9. 'e' → logprob: -12.758281707763672
    10. 'urer' → logprob: -13.133281707763672

Token 610: ' à' (ID: 1221)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.012929851189255714
    2. '   ' → logprob: -5.637929916381836
    3. ' x' → logprob: -5.887929916381836
    4. 'y' → logprob: -6.262929916381836
    5. 'max' → logprob: -6.512929916381836
    6. 'tmp' → logprob: -7.137929916381836
    7. 'A' → logprob: -7.262929916381836
    8. 'b' → logprob: -7.637929916381836
    9. 'a' → logprob: -7.762929916381836
    10. 'next' → logprob: -9.262929916381836

Token 611: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.11053202301263809
    2. 'tmp' → logprob: -2.36053204536438
    3. 'y' → logprob: -5.485531806945801
    4. 'largest' → logprob: -6.735531806945801
    5. 'max' → logprob: -6.985531806945801
    6. ' x' → logprob: -7.360531806945801
    7. 'next' → logprob: -7.485531806945801
    8. 'b' → logprob: -7.610531806945801
    9. 't' → logprob: -7.860531806945801
    10. 'last' → logprob: -8.4855318069458

Token 612: ' la' (ID: 557)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7440441846847534
    2. ' =' → logprob: -0.8690441846847534
    3. ',' → logprob: -2.869044303894043
    4. '=A' → logprob: -3.619044303894043
    5. 'x' → logprob: -4.494044303894043
    6. 'A' → logprob: -4.619044303894043
    7. ' A' → logprob: -7.619044303894043
    8. ',A' → logprob: -8.494044303894043
    9. 'max' → logprob: -10.494044303894043
    10. 'a' → logprob: -10.869044303894043

Token 613: ' valeur' (ID: 41664)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.006364805158227682
    2. 'max' → logprob: -5.881364822387695
    3. ' A' → logprob: -6.006364822387695
    4. 'x' → logprob: -7.256364822387695
    5. 'tmp' → logprob: -9.131364822387695
    6. 'largest' → logprob: -9.506364822387695
    7. ' max' → logprob: -9.756364822387695
    8. 'last' → logprob: -10.631364822387695
    9. '   ' → logprob: -10.631364822387695
    10. ' largest' → logprob: -11.006364822387695

Token 614: ' de' (ID: 334)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.002688967389985919
    2. ' A' → logprob: -6.502688884735107
    3. '   ' → logprob: -7.627688884735107
    4. 'tmp' → logprob: -8.252689361572266
    5. 'max' → logprob: -8.377689361572266
    6. 'x' → logprob: -9.627689361572266
    7. '       ' → logprob: -10.377689361572266
    8. '=A' → logprob: -10.627689361572266
    9. '(A' → logprob: -10.877689361572266
    10. '=' → logprob: -11.252689361572266

Token 615: ' tmp' (ID: 8919)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00018065694894175977
    2. ' A' → logprob: -8.8751802444458
    3. 'tmp' → logprob: -10.8751802444458
    4. 'max' → logprob: -11.0001802444458
    5. '   ' → logprob: -13.0001802444458
    6. ' ' → logprob: -13.5001802444458
    7. '	A' → logprob: -14.6251802444458
    8. 'a' → logprob: -15.0001802444458
    9. '  ' → logprob: -15.3751802444458
    10. '(A' → logprob: -16.125181198120117

Token 616: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5437843203544617
    2. '=' → logprob: -0.9187843203544617
    3. 'x' → logprob: -4.043784141540527
    4. 'tmp' → logprob: -7.043784141540527
    5. ',' → logprob: -7.418784141540527
    6. '
' → logprob: -8.168784141540527
    7. '=
' → logprob: -8.293784141540527
    8. ' ' → logprob: -8.418784141540527
    9. '=x' → logprob: -8.918784141540527
    10. ' =
' → logprob: -9.418784141540527

Token 617: 'rés' (ID: 60278)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.000661684141959995
    2. ' tmp' → logprob: -7.375661849975586
    3. 'x' → logprob: -10.750661849975586
    4. '   ' → logprob: -12.625661849975586
    5. '$tmp' → logprob: -13.000661849975586
    6. 'temp' → logprob: -13.375661849975586
    7. '/tmp' → logprob: -13.500661849975586
    8. '	tmp' → logprob: -13.500661849975586
    9. '(tmp' → logprob: -13.625661849975586
    10. '_tmp' → logprob: -14.375661849975586

Token 618: 'ultat' (ID: 133070)
  Prédit: 'ultat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ultat' → logprob: -0.5784476399421692
    2. 'ult' → logprob: -0.8284476399421692
    3. 'tmp' → logprob: -6.5784478187561035
    4. ')' → logprob: -7.7034478187561035
    5. 'ulat' → logprob: -8.703447341918945
    6. '       ' → logprob: -8.828447341918945
    7. '   ' → logprob: -8.953447341918945
    8. 'ul' → logprob: -10.328447341918945
    9. 'idu' → logprob: -10.703447341918945
    10. 'umé' → logprob: -10.953447341918945

Token 619: ' courant' (ID: 74694)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 620: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018768208101391792
    2. ')
' → logprob: -4.143768310546875
    3. '       ' → logprob: -7.268768310546875
    4. '<|end|>' → logprob: -7.268768310546875
    5. ' )' → logprob: -7.518768310546875
    6. '),' → logprob: -8.143768310546875
    7. '   ' → logprob: -9.518768310546875
    8. ' =' → logprob: -9.643768310546875
    9. '
' → logprob: -9.893768310546875
    10. '<|end|>' → logprob: -10.143768310546875

Token 621: ' et' (ID: 859)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.16218513250350952
    2. ' x' → logprob: -2.0371851921081543
    3. '       ' → logprob: -4.287185192108154
    4. 'tmp' → logprob: -5.787185192108154
    5. ' tmp' → logprob: -7.162185192108154
    6. ' =' → logprob: -7.287185192108154
    7. '=' → logprob: -8.037184715270996
    8. '   ' → logprob: -8.787184715270996
    9. ' 
' → logprob: -9.287184715270996
    10. ' ' → logprob: -9.287184715270996

Token 622: ' à' (ID: 1221)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.11838745325803757
    2. 'y' → logprob: -2.243387460708618
    3. 'tmp' → logprob: -5.993387222290039
    4. '       ' → logprob: -6.743387222290039
    5. 'print' → logprob: -6.868387222290039
    6. '   ' → logprob: -8.618387222290039
    7. '#' → logprob: -8.868387222290039
    8. ' y' → logprob: -9.493387222290039
    9. ' x' → logprob: -9.743387222290039
    10. '        
' → logprob: -9.868387222290039

Token 623: ' y' (ID: 342)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.009611946530640125
    2. 'y' → logprob: -4.759612083435059
    3. ' x' → logprob: -7.384612083435059
    4. 'A' → logprob: -8.259612083435059
    5. ' y' → logprob: -9.384612083435059
    6. 'a' → logprob: -10.884612083435059
    7. ' A' → logprob: -12.759612083435059
    8. 'tmp' → logprob: -12.884612083435059
    9. '	x' → logprob: -13.384612083435059
    10. '   ' → logprob: -13.759612083435059

Token 624: ' le' (ID: 505)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.12769126892089844
    2. 'x' → logprob: -3.3776912689208984
    3. 'le' → logprob: -4.002691268920898
    4. 'l' → logprob: -4.252691268920898
    5. 'la' → logprob: -4.252691268920898
    6. 'y' → logprob: -4.502691268920898
    7. '=' → logprob: -4.752691268920898
    8. ' A' → logprob: -5.627691268920898
    9. 'the' → logprob: -5.627691268920898
    10. ',' → logprob: -5.752691268920898

Token 625: ' plus' (ID: 2932)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.001226539141498506
    2. 'max' → logprob: -7.251226425170898
    3. 'plus' → logprob: -8.626226425170898
    4. 'dern' → logprob: -8.876226425170898
    5. 'last' → logprob: -9.876226425170898
    6. ' A' → logprob: -10.501226425170898
    7. 'maximum' → logprob: -10.751226425170898
    8. 'Dern' → logprob: -10.751226425170898
    9. 'largest' → logprob: -11.001226425170898
    10. ' dernier' → logprob: -11.501226425170898

Token 626: ' grand' (ID: 6363)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.31759291887283325
    2. 'A' → logprob: -1.9425928592681885
    3. ' grand' → logprob: -2.3175928592681885
    4. 'large' → logprob: -3.8175928592681885
    5. ' A' → logprob: -5.442593097686768
    6. 'max' → logprob: -7.192593097686768
    7. ' large' → logprob: -7.317593097686768
    8. 'x' → logprob: -7.567593097686768
    9. 'gr' → logprob: -8.31759262084961
    10. 'g' → logprob: -8.56759262084961

Token 627: ' élément' (ID: 99627)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.01227711420506239
    2. '(A' → logprob: -5.137277126312256
    3. 'element' → logprob: -6.387277126312256
    4. ' A' → logprob: -6.512277126312256
    5. 'élé' → logprob: -6.637277126312256
    6. '(' → logprob: -7.512277126312256
    7. 'a' → logprob: -8.387276649475098
    8. 'x' → logprob: -8.637276649475098
    9. 'val' → logprob: -9.137276649475098
    10. ')' → logprob: -9.262276649475098

Token 628: ' restant' (ID: 172358)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.027423549443483353
    2. 'de' → logprob: -4.52742338180542
    3. '(A' → logprob: -6.02742338180542
    4. ' A' → logprob: -6.15242338180542
    5. 'x' → logprob: -6.40242338180542
    6. '=' → logprob: -6.90242338180542
    7. '(' → logprob: -6.90242338180542
    8. 'tmp' → logprob: -7.27742338180542
    9. 'd' → logprob: -7.40242338180542
    10. 'of' → logprob: -7.52742338180542

Token 629: ' de' (ID: 334)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0869077742099762
    2. ' A' → logprob: -3.5869078636169434
    3. ' =' → logprob: -4.461907863616943
    4. '   ' → logprob: -4.586907863616943
    5. '=' → logprob: -4.961907863616943
    6. '=A' → logprob: -5.086907863616943
    7. 'x' → logprob: -5.461907863616943
    8. ' of' → logprob: -5.586907863616943
    9. '(A' → logprob: -6.211907863616943
    10. ',' → logprob: -6.211907863616943

Token 630: ' la' (ID: 557)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0011786778923124075
    2. ' A' → logprob: -6.751178741455078
    3. '[A' → logprob: -13.376178741455078
    4. 'the' → logprob: -13.501178741455078
    5. '   ' → logprob: -13.751178741455078
    6. ' ' → logprob: -13.751178741455078
    7. '[' → logprob: -14.501178741455078
    8. '(A' → logprob: -14.501178741455078
    9. '	A' → logprob: -14.626178741455078
    10. 'l' → logprob: -15.001178741455078

Token 631: ' liste' (ID: 31719)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00022189407900441438
    2. ' A' → logprob: -8.625222206115723
    3. '[' → logprob: -10.625222206115723
    4. '[A' → logprob: -11.625222206115723
    5. '[
' → logprob: -13.875222206115723
    6. '   ' → logprob: -14.125222206115723
    7. '+' → logprob: -14.250222206115723
    8. 'list' → logprob: -14.250222206115723
    9. '[]' → logprob: -14.375222206115723
    10. '`' → logprob: -14.875222206115723

Token 632: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.036830835044384
    2. '(A' → logprob: -4.411830902099609
    3. '   ' → logprob: -4.536830902099609
    4. ' A' → logprob: -4.786830902099609
    5. '(' → logprob: -6.411830902099609
    6. '[-' → logprob: -6.911830902099609
    7. ' (' → logprob: -7.286830902099609
    8. '#' → logprob: -8.16183090209961
    9. '(-' → logprob: -8.16183090209961
    10. ',' → logprob: -8.53683090209961

Token 633: '.
' (ID: 558)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5054162740707397
    2. '       ' → logprob: -1.5054162740707397
    3. ',' → logprob: -2.2554163932800293
    4. ' =' → logprob: -4.130416393280029
    5. '   ' → logprob: -4.255416393280029
    6. '[' → logprob: -4.505416393280029
    7. '[-' → logprob: -5.005416393280029
    8. '=' → logprob: -5.380416393280029
    9. ' x' → logprob: -5.505416393280029
    10. '#' → logprob: -6.130416393280029

Token 634: '       ' (ID: 309)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5097886323928833
    2. ' x' → logprob: -1.0097886323928833
    3. ' =' → logprob: -4.634788513183594
    4. '<|end|>' → logprob: -4.759788513183594
    5. '   ' → logprob: -4.884788513183594
    6. '[' → logprob: -6.134788513183594
    7. ' ' → logprob: -6.134788513183594
    8. '=' → logprob: -6.634788513183594
    9. ',' → logprob: -7.134788513183594
    10. '       ' → logprob: -7.509788513183594

Token 635: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.03596492484211922
    2. ' x' → logprob: -3.6609649658203125
    3. '   ' → logprob: -4.6609649658203125
    4. '       ' → logprob: -9.785964965820312
    5. '	x' → logprob: -10.535964965820312
    6. '[' → logprob: -11.285964965820312
    7. '    ' → logprob: -11.410964965820312
    8. ' ' → logprob: -11.660964965820312
    9. '#' → logprob: -11.910964965820312
    10. '  ' → logprob: -12.035964965820312

Token 636: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3005276024341583
    2. ' =' → logprob: -1.550527572631836
    3. ',' → logprob: -3.050527572631836
    4. '=
' → logprob: -10.675527572631836
    5. 'tmp' → logprob: -10.675527572631836
    6. 'x' → logprob: -11.300527572631836
    7. ' ,' → logprob: -11.425527572631836
    8. ',tmp' → logprob: -12.300527572631836
    9. '=x' → logprob: -12.800527572631836
    10. '=

' → logprob: -12.925527572631836

Token 637: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.04302544891834259
    2. ' y' → logprob: -3.168025493621826
    3. '	y' → logprob: -11.793025016784668
    4. '    ' → logprob: -12.293025016784668
    5. 'x' → logprob: -12.418025016784668
    6. '   ' → logprob: -13.043025016784668
    7. 'A' → logprob: -13.168025016784668
    8. ' =' → logprob: -13.293025016784668
    9. '=' → logprob: -13.668025016784668
    10. '  ' → logprob: -14.543025016784668

Token 638: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3134114146232605
    2. ' =' → logprob: -1.3134114742279053
    3. ',' → logprob: -8.813411712646484
    4. '=
' → logprob: -15.313411712646484
    5. ' ' → logprob: -15.813411712646484
    6. '=A' → logprob: -15.813411712646484
    7. '=}' → logprob: -16.688411712646484
    8. ' ,' → logprob: -16.938411712646484
    9. '=

' → logprob: -17.188411712646484
    10. ' =
' → logprob: -17.188411712646484

Token 639: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.018216317519545555
    2. 'A' → logprob: -4.018216133117676
    3. ' tmp' → logprob: -10.768216133117676
    4. '(tmp' → logprob: -11.143216133117676
    5. 'max' → logprob: -11.518216133117676
    6. '[tmp' → logprob: -12.143216133117676
    7. '   ' → logprob: -13.018216133117676
    8. 'sorted' → logprob: -13.018216133117676
    9. '/tmp' → logprob: -13.393216133117676
    10. 'temp' → logprob: -13.768216133117676

Token 640: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.022270360961556435
    2. 'A' → logprob: -3.897270441055298
    3. ',A' → logprob: -6.772270202636719
    4. ' ,' → logprob: -7.647270202636719
    5. ' A' → logprob: -9.272270202636719
    6. '[' → logprob: -13.772270202636719
    7. '   ' → logprob: -13.897270202636719
    8. '=' → logprob: -14.022270202636719
    9. '```' → logprob: -14.022270202636719
    10. ',
' → logprob: -14.647270202636719

Token 641: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00026336227892898023
    2. ' A' → logprob: -8.250263214111328
    3. '   ' → logprob: -13.500263214111328
    4. 'max' → logprob: -15.000263214111328
    5. ' ' → logprob: -15.500263214111328
    6. '	A' → logprob: -16.125263214111328
    7. '  ' → logprob: -17.500263214111328
    8. '-A' → logprob: -18.125263214111328
    9. 'a' → logprob: -18.500263214111328
    10. '-' → logprob: -18.750263214111328

Token 642: '.pop' (ID: 15746)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.019192809239029884
    2. '[' → logprob: -5.269192695617676
    3. '[N' → logprob: -5.269192695617676
    4. '-' → logprob: -5.394192695617676
    5. 'N' → logprob: -6.019192695617676
    6. '-N' → logprob: -6.644192695617676
    7. '-(' → logprob: -8.394192695617676
    8. '.pop' → logprob: -8.644192695617676
    9. 'PLUS' → logprob: -11.894192695617676
    10. 'pop' → logprob: -12.519192695617676

Token 643: '()' (ID: 416)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.27087298035621643
    2. '-' → logprob: -2.0208730697631836
    3. '()' → logprob: -2.2708730697631836
    4. '()-' → logprob: -7.020873069763184
    5. '(' → logprob: -7.895873069763184
    6. '[-' → logprob: -8.395873069763184
    7. '(-(' → logprob: -12.020873069763184
    8. '(len' → logprob: -12.520873069763184
    9. '().' → logprob: -12.520873069763184
    10. '(N' → logprob: -12.645873069763184

Token 644: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013461847556754947
    2. '        ' → logprob: -7.876346111297607
    3. '        
' → logprob: -8.126346588134766
    4. '   ' → logprob: -8.501346588134766
    5. '+' → logprob: -9.876346588134766
    6. '#' → logprob: -9.876346588134766
    7. '           ' → logprob: -10.001346588134766
    8. ' ' → logprob: -10.251346588134766
    9. '    ' → logprob: -10.376346588134766
    10. '	' → logprob: -10.501346588134766

Token 645: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0422162227332592
    2. 'tmp' → logprob: -3.2922163009643555
    3. ' tmp' → logprob: -5.9172163009643555
    4. '   ' → logprob: -7.0422163009643555
    5. 'print' → logprob: -8.917216300964355
    6. '	tmp' → logprob: -9.167216300964355
    7. '        
' → logprob: -9.417216300964355
    8. ' ' → logprob: -9.917216300964355
    9. '#' → logprob: -10.292216300964355
    10. '	' → logprob: -10.292216300964355

Token 646: ' Ret' (ID: 16724)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5140767097473145
    2. 'tmp' → logprob: -1.6390767097473145
    3. 'PLUS' → logprob: -2.1390767097473145
    4. 'y' → logprob: -2.6390767097473145
    5. '   ' → logprob: -4.8890767097473145
    6. 'print' → logprob: -5.5140767097473145
    7. 'MIN' → logprob: -7.0140767097473145
    8. ' tmp' → logprob: -7.3890767097473145
    9. ' y' → logprob: -7.3890767097473145
    10. '        ' → logprob: -7.7640767097473145

Token 647: 'irer' (ID: 85189)
  Prédit: 'irer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irer' → logprob: -0.034496109932661057
    2. 'ire' → logprob: -3.5344960689544678
    3. 'rait' → logprob: -5.659496307373047
    4. 'ra' → logprob: -7.909496307373047
    5. 'irez' → logprob: -8.284496307373047
    6. 'enir' → logprob: -9.034496307373047
    7. 'ir' → logprob: -9.284496307373047
    8. 'r' → logprob: -9.284496307373047
    9. 'urn' → logprob: -9.784496307373047
    10. 'ain' → logprob: -10.659496307373047

Token 648: ' l' (ID: 305)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.17732565104961395
    2. '()' → logprob: -2.55232572555542
    3. ' y' → logprob: -3.67732572555542
    4. 'A' → logprob: -4.30232572555542
    5. '<|end|>' → logprob: -4.30232572555542
    6. ')' → logprob: -4.67732572555542
    7. '(y' → logprob: -4.92732572555542
    8. '(-' → logprob: -5.67732572555542
    9. '(' → logprob: -6.05232572555542
    10. 'x' → logprob: -6.55232572555542

Token 649: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.056860327720642
    2. ' dernier' → logprob: -1.181860327720642
    3. ' y' → logprob: -2.0568604469299316
    4. ')' → logprob: -2.5568604469299316
    5. ' last' → logprob: -3.9318604469299316
    6. ']' → logprob: -3.9318604469299316
    7. 'a' → logprob: -4.056860446929932
    8. ''' → logprob: -4.306860446929932
    9. '')' → logprob: -4.806860446929932
    10. '()' → logprob: -4.931860446929932

Token 650: 'élé' (ID: 15228)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8385487794876099
    2. 'last' → logprob: -1.7135487794876099
    3. 'élé' → logprob: -2.2135486602783203
    4. 'dern' → logprob: -2.3385486602783203
    5. ' dernier' → logprob: -2.7135486602783203
    6. 'y' → logprob: -2.8385486602783203
    7. ' last' → logprob: -4.46354866027832
    8. 'e' → logprob: -5.33854866027832
    9. '-last' → logprob: -5.58854866027832
    10. 'end' → logprob: -5.58854866027832

Token 651: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.0009014541283249855
    2. 'ments' → logprob: -7.625901222229004
    3. 'mé' → logprob: -8.500901222229004
    4. 'men' → logprob: -9.500901222229004
    5. 'm' → logprob: -9.875901222229004
    6. 'me' → logprob: -10.750901222229004
    7. 'ement' → logprob: -10.875901222229004
    8. '   ' → logprob: -11.750901222229004
    9. '#' → logprob: -11.750901222229004
    10. 't' → logprob: -13.000901222229004

Token 652: ' de' (ID: 334)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.7799895405769348
    2. 'de' → logprob: -2.15498948097229
    3. ')' → logprob: -2.27998948097229
    4. 'from' → logprob: -3.15498948097229
    5. 'du' → logprob: -3.15498948097229
    6. ' y' → logprob: -3.27998948097229
    7. ' de' → logprob: -3.40498948097229
    8. '[-' → logprob: -3.52998948097229
    9. '#' → logprob: -3.65498948097229
    10. '-' → logprob: -4.654989719390869

Token 653: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.23735202848911285
    2. 'A' → logprob: -1.7373520135879517
    3. 'l' → logprob: -3.737352132797241
    4. '-' → logprob: -5.112351894378662
    5. 'fin' → logprob: -5.987351894378662
    6. 'len' → logprob: -7.612351894378662
    7. ' la' → logprob: -7.737351894378662
    8. '()' → logprob: -7.987351894378662
    9. ')' → logprob: -8.36235237121582
    10. 'liste' → logprob: -8.48735237121582

Token 654: ' fin' (ID: 2131)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.15286801755428314
    2. 'fin' → logprob: -2.0278680324554443
    3. 'list' → logprob: -5.027867794036865
    4. ' liste' → logprob: -5.902867794036865
    5. 'end' → logprob: -8.527868270874023
    6. ' fin' → logprob: -8.652868270874023
    7. 'A' → logprob: -9.027868270874023
    8. '#' → logprob: -9.027868270874023
    9. '```' → logprob: -9.527868270874023
    10. 'lista' → logprob: -9.527868270874023

Token 655: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01112823374569416
    2. '<|end|>' → logprob: -5.6361284255981445
    3. '   ' → logprob: -5.7611284255981445
    4. ')' → logprob: -7.0111284255981445
    5. '()' → logprob: -7.1361284255981445
    6. '        
' → logprob: -7.5111284255981445
    7. '	' → logprob: -7.8861284255981445
    8. '	   ' → logprob: -8.386128425598145
    9. ' (' → logprob: -8.511128425598145
    10. '(' → logprob: -8.761128425598145

Token 656: 'le' (ID: 282)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.629464328289032
    2. ')' → logprob: -1.2544643878936768
    3. 'y' → logprob: -2.5044643878936768
    4. 'A' → logprob: -3.2544643878936768
    5. ' -' → logprob: -4.504464149475098
    6. '-A' → logprob: -4.504464149475098
    7. '-l' → logprob: -5.129464149475098
    8. 'len' → logprob: -5.504464149475098
    9. '-la' → logprob: -5.629464149475098
    10. 'qui' → logprob: -6.254464149475098

Token 657: ' plus' (ID: 2932)
  Prédit: ' plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.4488638639450073
    2. 'plus' → logprob: -1.5738638639450073
    3. ')' → logprob: -2.948863983154297
    4. ' dernier' → logprob: -3.698863983154297
    5. 'last' → logprob: -4.198863983154297
    6. 'liste' → logprob: -4.698863983154297
    7. ' )' → logprob: -4.823863983154297
    8. ' last' → logprob: -5.323863983154297
    9. '```' → logprob: -5.573863983154297
    10. ' list' → logprob: -5.698863983154297

Token 658: ' grand' (ID: 6363)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.0014251177199184895
    2. ' grand' → logprob: -6.751425266265869
    3. 'gr' → logprob: -9.001424789428711
    4. 'g' → logprob: -10.251424789428711
    5. 'large' → logprob: -10.251424789428711
    6. ')' → logprob: -11.001424789428711
    7. 'plus' → logprob: -11.751424789428711
    8. '```' → logprob: -11.751424789428711
    9. 'gran' → logprob: -12.251424789428711
    10. 'grave' → logprob: -12.376424789428711

Token 659: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01127440296113491
    2. ' )' → logprob: -4.886274337768555
    3. ')
' → logprob: -6.511274337768555
    4. 'de' → logprob: -7.261274337768555
    5. ' de' → logprob: -7.636274337768555
    6. '()' → logprob: -7.886274337768555
    7. '())' → logprob: -8.636274337768555
    8. 'A' → logprob: -8.886274337768555
    9. ' ' → logprob: -9.886274337768555
    10. ' )
' → logprob: -10.386274337768555

Token 660: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6458744406700134
    2. '
' → logprob: -1.6458745002746582
    3. 'tmp' → logprob: -2.145874500274658
    4. ' tmp' → logprob: -2.645874500274658
    5. ' 
' → logprob: -3.770874500274658
    6. '        
' → logprob: -3.895874500274658
    7. '   ' → logprob: -4.020874500274658
    8. '  
' → logprob: -4.520874500274658
    9. '    
' → logprob: -5.145874500274658
    10. '	tmp' → logprob: -5.145874500274658

Token 661: ' #' (ID: 1069)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.029250947758555412
    2. '       ' → logprob: -4.1542510986328125
    3. 'print' → logprob: -4.4042510986328125
    4. '   ' → logprob: -8.279251098632812
    5. 'XY' → logprob: -8.404251098632812
    6. ' tmp' → logprob: -8.904251098632812
    7. '	tmp' → logprob: -9.404251098632812
    8. 'temp' → logprob: -9.904251098632812
    9. 'result' → logprob: -10.029251098632812
    10. 'xy' → logprob: -10.154251098632812

Token 662: ' Ajouter' (ID: 165754)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.04560543969273567
    2. 'XY' → logprob: -3.170605421066284
    3. 'xy' → logprob: -6.545605659484863
    4. 'print' → logprob: -8.170605659484863
    5. 'PLUS' → logprob: -8.170605659484863
    6. 'result' → logprob: -8.670605659484863
    7. '       ' → logprob: -9.295605659484863
    8. '   ' → logprob: -9.670605659484863
    9. 'diff' → logprob: -9.795605659484863
    10. 'z' → logprob: -10.170605659484863

Token 663: ' la' (ID: 557)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.002567694988101721
    2. ' (' → logprob: -6.002567768096924
    3. '   ' → logprob: -9.627567291259766
    4. '(' → logprob: -10.752567291259766
    5. '[x' → logprob: -12.752567291259766
    6. '((' → logprob: -14.252567291259766
    7. ' ' → logprob: -15.752567291259766
    8. '       ' → logprob: -15.752567291259766
    9. '
' → logprob: -15.752567291259766
    10. '[(' → logprob: -15.877567291259766

Token 664: ' paire' (ID: 148856)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.7152317762374878
    2. 'XY' → logprob: -1.4652317762374878
    3. 'x' → logprob: -2.0902318954467773
    4. 'xy' → logprob: -2.8402318954467773
    5. 'print' → logprob: -4.090231895446777
    6. 'y' → logprob: -4.465231895446777
    7. 'f' → logprob: -4.590231895446777
    8. ' (' → logprob: -4.715231895446777
    9. '(' → logprob: -4.715231895446777
    10. '"' → logprob: -4.840231895446777

Token 665: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00047214110963977873
    2. ' (' → logprob: -7.750472068786621
    3. '(' → logprob: -10.125472068786621
    4. '   ' → logprob: -14.000472068786621
    5. '((' → logprob: -14.875472068786621
    6. '(X' → logprob: -15.375472068786621
    7. '[x' → logprob: -17.250473022460938
    8. ',' → logprob: -19.375473022460938
    9. '(xs' → logprob: -19.375473022460938
    10. '       ' → logprob: -19.625473022460938

Token 666: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6932804584503174
    2. '(x' → logprob: -0.6932804584503174
    3. ' (' → logprob: -9.693280220031738
    4. ' x' → logprob: -9.943280220031738
    5. '(' → logprob: -11.568280220031738
    6. ')' → logprob: -12.068280220031738
    7. '{x' → logprob: -13.193280220031738
    8. '[x' → logprob: -13.443280220031738
    9. ',x' → logprob: -13.943280220031738
    10. ')x' → logprob: -14.068280220031738

Token 667: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0045508150942623615
    2. ',y' → logprob: -5.879550933837891
    3. ',x' → logprob: -6.504550933837891
    4. ' ,' → logprob: -8.50455093383789
    5. ',
' → logprob: -12.12955093383789
    6. ')' → logprob: -12.12955093383789
    7. ',n' → logprob: -12.37955093383789
    8. '(' → logprob: -12.75455093383789
    9. ',(' → logprob: -12.87955093383789
    10. ',t' → logprob: -12.87955093383789

Token 668: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0009581510093994439
    2. ' y' → logprob: -7.12595796585083
    3. '(y' → logprob: -9.250958442687988
    4. 'x' → logprob: -9.875958442687988
    5. '(x' → logprob: -12.875958442687988
    6. ' (' → logprob: -13.125958442687988
    7. ')' → logprob: -15.000958442687988
    8. '(' → logprob: -15.000958442687988
    9. ',' → logprob: -15.625958442687988
    10. '	y' → logprob: -15.750958442687988

Token 669: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0037564942613244057
    2. ',' → logprob: -6.003756523132324
    3. ')
' → logprob: -6.753756523132324
    4. '.append' → logprob: -10.128756523132324
    5. '),' → logprob: -10.253756523132324
    6. '       ' → logprob: -11.628756523132324
    7. ')`' → logprob: -12.628756523132324
    8. '   ' → logprob: -12.753756523132324
    9. ' )' → logprob: -12.878756523132324
    10. 'to' → logprob: -12.878756523132324

Token 670: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9032434821128845
    2. '       ' → logprob: -1.6532435417175293
    3. 'to' → logprob: -1.7782435417175293
    4. ' to' → logprob: -1.9032435417175293
    5. '.append' → logprob: -2.9032435417175293
    6. '   ' → logprob: -4.528243541717529
    7. ')' → logprob: -4.778243541717529
    8. 'XY' → logprob: -6.278243541717529
    9. '           ' → logprob: -6.778243541717529
    10. '
' → logprob: -6.903243541717529

Token 671: ' la' (ID: 557)
  Prédit: 'XY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'XY' → logprob: 0.0
    2. ' XY' → logprob: -17.375
    3. 'the' → logprob: -17.875
    4. 'xy' → logprob: -18.125
    5. 'X' → logprob: -19.75
    6. '(X' → logprob: -20.875
    7. '```' → logprob: -22.25
    8. '`' → logprob: -22.875
    9. 'XYZ' → logprob: -23.375
    10. '
' → logprob: -23.5

Token 672: ' liste' (ID: 31719)
  Prédit: 'XY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'XY' → logprob: 0.0
    2. ' XY' → logprob: -16.875
    3. 'xy' → logprob: -19.75
    4. 'X' → logprob: -21.0
    5. '[(' → logprob: -22.0
    6. '```' → logprob: -22.125
    7. '
' → logprob: -22.5
    8. '[
' → logprob: -22.75
    9. '   ' → logprob: -23.0
    10. '[]' → logprob: -23.125

Token 673: ' XY' (ID: 71987)
  Prédit: 'XY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XY' → logprob: -0.0005572011577896774
    2. '(X' → logprob: -7.5005574226379395
    3. ' XY' → logprob: -13.000556945800781
    4. '[(' → logprob: -13.500556945800781
    5. '(' → logprob: -15.375556945800781
    6. '   ' → logprob: -16.12555694580078
    7. '(x' → logprob: -16.50055694580078
    8. '.append' → logprob: -16.75055694580078
    9. '((' → logprob: -17.50055694580078
    10. '(T' → logprob: -18.50055694580078

Token 674: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6233986020088196
    2. '   ' → logprob: -0.8733986020088196
    3. 'XY' → logprob: -3.123398542404175
    4. '
' → logprob: -6.748398780822754
    5. ',' → logprob: -7.998398780822754
    6. '(X' → logprob: -8.873398780822754
    7. '  ' → logprob: -9.373398780822754
    8. ' XY' → logprob: -9.498398780822754
    9. '.append' → logprob: -9.623398780822754
    10. ')' → logprob: -9.748398780822754

Token 675: ' garder' (ID: 63069)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.8748035430908203
    2. 'su' → logprob: -1.9998035430908203
    3. 'later' → logprob: -2.8748035430908203
    4. 'XY' → logprob: -3.1248035430908203
    5. 'record' → logprob: -3.1248035430908203
    6. 'repr' → logprob: -3.4998035430908203
    7. 'print' → logprob: -3.8748035430908203
    8. 'la' → logprob: -3.9998035430908203
    9. 'reten' → logprob: -3.9998035430908203
    10. '#' → logprob: -4.24980354309082

Token 676: ' la' (ID: 557)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.19450043141841888
    2. 'track' → logprob: -1.81950044631958
    3. '[x' → logprob: -5.44450044631958
    4. 'trace' → logprob: -5.81950044631958
    5. 'la' → logprob: -6.44450044631958
    6. '[(' → logprob: -6.94450044631958
    7. 'x' → logprob: -6.94450044631958
    8. 'xy' → logprob: -7.31950044631958
    9. 'le' → logprob: -7.31950044631958
    10. '   ' → logprob: -7.56950044631958

Token 677: ' trace' (ID: 21523)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trace' → logprob: -0.6409499049186707
    2. 'su' → logprob: -1.6409499645233154
    3. 'calcul' → logprob: -2.2659499645233154
    4. '[(' → logprob: -2.8909499645233154
    5. '[
' → logprob: -3.6409499645233154
    6. '.append' → logprob: -4.390949726104736
    7. 'tracking' → logprob: -4.765949726104736
    8. 'op' → logprob: -4.765949726104736
    9. 'log' → logprob: -5.015949726104736
    10. '[' → logprob: -5.015949726104736

Token 678: ' de' (ID: 334)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.550037145614624
    2. '.append' → logprob: -1.050037145614624
    3. '(X' → logprob: -3.050037145614624
    4. '       ' → logprob: -4.300037384033203
    5. '   ' → logprob: -5.675037384033203
    6. ',' → logprob: -5.675037384033203
    7. ' (' → logprob: -6.425037384033203
    8. '[(' → logprob: -6.550037384033203
    9. '.' → logprob: -7.425037384033203
    10. 'XY' → logprob: -7.675037384033203

Token 679: ' cette' (ID: 7696)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0010708003537729383
    2. ' (' → logprob: -6.876070976257324
    3. '(' → logprob: -10.376070976257324
    4. '[(' → logprob: -12.376070976257324
    5. '[x' → logprob: -13.876070976257324
    6. '(X' → logprob: -14.251070976257324
    7. '
' → logprob: -15.251070976257324
    8. '   ' → logprob: -15.376070976257324
    9. '((' → logprob: -15.501070976257324
    10. '#' → logprob: -16.251070022583008

Token 680: ' opération' (ID: 86023)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.14247512817382812
    2. '(x' → logprob: -2.767475128173828
    3. ' subtraction' → logprob: -3.017475128173828
    4. ' operation' → logprob: -4.392475128173828
    5. 'operation' → logprob: -5.642475128173828
    6. ' (' → logprob: -6.017475128173828
    7. 'subtract' → logprob: -7.517475128173828
    8. '[x' → logprob: -8.267475128173828
    9. 'append' → logprob: -8.642475128173828
    10. '.subtract' → logprob: -8.642475128173828

Token 681: '.
' (ID: 558)
  Prédit: 'XY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'XY' → logprob: -0.9406930804252625
    2. '.append' → logprob: -1.1906931400299072
    3. '   ' → logprob: -1.9406931400299072
    4. '
' → logprob: -2.8156931400299072
    5. '       ' → logprob: -3.1906931400299072
    6. '(x' → logprob: -4.440692901611328
    7. ',' → logprob: -4.440692901611328
    8. 'xy' → logprob: -5.190692901611328
    9. '(X' → logprob: -5.190692901611328
    10. '.xy' → logprob: -5.315692901611328

Token 682: '       ' (ID: 309)
  Prédit: 'XY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XY' → logprob: -0.5788404941558838
    2. '   ' → logprob: -0.9538404941558838
    3. '       ' → logprob: -3.203840494155884
    4. ' XY' → logprob: -4.328840255737305
    5. '
' → logprob: -8.828840255737305
    6. 'xy' → logprob: -10.078840255737305
    7. ' ' → logprob: -10.203840255737305
    8. '(X' → logprob: -10.578840255737305
    9. '```' → logprob: -10.578840255737305
    10. '  ' → logprob: -11.078840255737305

Token 683: ' XY' (ID: 71987)
  Prédit: 'XY'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XY' (adapté à ' XY') → logprob: -0.00023238400171976537
    2. '   ' → logprob: -8.500232696533203
    3. ' XY' → logprob: -10.500232696533203
    4. '       ' → logprob: -13.750232696533203
    5. 'xy' → logprob: -15.500232696533203
    6. 'XYZ' → logprob: -17.000232696533203
    7. '```' → logprob: -17.750232696533203
    8. ' ' → logprob: -18.125232696533203
    9. '  ' → logprob: -18.750232696533203
    10. '(X' → logprob: -18.750232696533203

Token 684: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.5491004129871726e-05
    2. '.' → logprob: -10.000045776367188
    3. 'append' → logprob: -17.250045776367188
    4. '.app' → logprob: -18.500045776367188
    5. '.ap' → logprob: -18.500045776367188
    6. ' .' → logprob: -19.250045776367188
    7. '.Append' → logprob: -19.250045776367188
    8. '.add' → logprob: -19.500045776367188
    9. '.extend' → logprob: -19.500045776367188
    10. '+.' → logprob: -21.000045776367188

Token 685: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0003365350130479783
    2. '(' → logprob: -8.000336647033691
    3. '(x' → logprob: -13.875336647033691
    4. '(
' → logprob: -16.625335693359375
    5. ' ((' → logprob: -17.250335693359375
    6. ' ' → logprob: -19.250335693359375
    7. ' (' → logprob: -19.375335693359375
    8. '[(' → logprob: -20.000335693359375
    9. '([' → logprob: -20.375335693359375
    10. '(((' → logprob: -20.500335693359375

Token 686: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -9.088346359931165e-07
    2. ' x' → logprob: -14.500000953674316
    3. '(x' → logprob: -14.875000953674316
    4. '   ' → logprob: -21.0
    5. ' (' → logprob: -22.125
    6. '
' → logprob: -22.25
    7. '	x' → logprob: -22.75
    8. '"x' → logprob: -22.75
    9. '{x' → logprob: -22.875
    10. ')x' → logprob: -23.0

Token 687: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005913979839533567
    2. ',y' → logprob: -7.500591278076172
    3. ' ,' → logprob: -10.625591278076172
    4. ',
' → logprob: -11.375591278076172
    5. ',

' → logprob: -14.500591278076172
    6. ',),' → logprob: -14.625591278076172
    7. '),' → logprob: -14.750591278076172
    8. ',)' → logprob: -14.750591278076172
    9. 'y' → logprob: -15.125591278076172
    10. ')' → logprob: -15.500591278076172

Token 688: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0002613358374219388
    2. ' y' → logprob: -8.250261306762695
    3. '	y' → logprob: -18.000261306762695
    4. '   ' → logprob: -18.875261306762695
    5. '    ' → logprob: -19.250261306762695
    6. ')y' → logprob: -19.750261306762695
    7. '       ' → logprob: -19.875261306762695
    8. 'x' → logprob: -20.750261306762695
    9. ' ' → logprob: -21.125261306762695
    10. ')' → logprob: -21.375261306762695

Token 689: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.044684913009405136
    2. '))' → logprob: -3.294684886932373
    3. ')
' → logprob: -5.044684886932373
    4. '))
' → logprob: -8.669685363769531
    5. ' )' → logprob: -13.169685363769531
    6. ')

' → logprob: -13.544685363769531
    7. ')
' → logprob: -13.919685363769531
    8. ')#' → logprob: -14.544685363769531
    9. ')))' → logprob: -15.044685363769531
    10. '))

' → logprob: -15.544685363769531

Token 690: '       ' (ID: 309)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.5168319344520569
    2. '       ' → logprob: -1.016831874847412
    3. '   ' → logprob: -3.266831874847412
    4. ' tmp' → logprob: -5.766831874847412
    5. '	tmp' → logprob: -8.39183235168457
    6. '        
' → logprob: -8.76683235168457
    7. '    
' → logprob: -10.01683235168457
    8. ' ' → logprob: -10.14183235168457
    9. '    ' → logprob: -10.76683235168457
    10. '        ' → logprob: -11.14183235168457

Token 691: ' #' (ID: 1069)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.006774226203560829
    2. '       ' → logprob: -5.131774425506592
    3. '   ' → logprob: -8.006773948669434
    4. 'PLUS' → logprob: -8.506773948669434
    5. ' tmp' → logprob: -8.631773948669434
    6. '        
' → logprob: -9.631773948669434
    7. '	tmp' → logprob: -10.506773948669434
    8. '+' → logprob: -12.256773948669434
    9. '    
' → logprob: -12.756773948669434
    10. '
' → logprob: -12.881773948669434

Token 692: ' Met' (ID: 7227)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.00012511172099038959
    2. '       ' → logprob: -9.62512493133545
    3. 'PLUS' → logprob: -10.00012493133545
    4. '        
' → logprob: -12.00012493133545
    5. ' tmp' → logprob: -13.37512493133545
    6. '   ' → logprob: -13.50012493133545
    7. '#' → logprob: -13.87512493133545
    8. '	tmp' → logprob: -14.25012493133545
    9. 'temp' → logprob: -14.25012493133545
    10. '           ' → logprob: -15.00012493133545

Token 693: 'tre' (ID: 4086)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.4763752520084381
    2. 'mp' → logprob: -1.1013752222061157
    3. 'p' → logprob: -3.2263753414154053
    4. 'pm' → logprob: -5.726375102996826
    5. ' tmp' → logprob: -6.976375102996826
    6. '_tmp' → logprob: -7.976375102996826
    7. '       ' → logprob: -8.351375579833984
    8. 'm' → logprob: -8.351375579833984
    9. 'pr' → logprob: -8.351375579833984
    10. 'per' → logprob: -8.476375579833984

Token 694: ' à' (ID: 1221)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.010952319949865341
    2. 'à' → logprob: -4.885952472686768
    3. ' à' → logprob: -5.760952472686768
    4. 'temp' → logprob: -10.38595199584961
    5. 'À' → logprob: -10.51095199584961
    6. 'a' → logprob: -10.63595199584961
    7. ' tmp' → logprob: -10.88595199584961
    8. ''à' → logprob: -11.26095199584961
    9. '-à' → logprob: -11.38595199584961
    10. 'le' → logprob: -11.38595199584961

Token 695: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.8901157975196838
    2. 'y' → logprob: -1.015115737915039
    3. 'tmp' → logprob: -1.515115737915039
    4. ' jour' → logprob: -5.890115737915039
    5. 'A' → logprob: -6.015115737915039
    6. 'x' → logprob: -7.015115737915039
    7. 'jours' → logprob: -7.515115737915039
    8. 'day' → logprob: -8.640115737915039
    9. '```' → logprob: -9.140115737915039
    10. 'j' → logprob: -9.765115737915039

Token 696: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.0007131471065804362
    2. ' tmp' → logprob: -7.250713348388672
    3. '	tmp' → logprob: -13.125713348388672
    4. '(tmp' → logprob: -14.875713348388672
    5. '/tmp' → logprob: -15.000713348388672
    6. '$tmp' → logprob: -15.625713348388672
    7. '_tmp' → logprob: -16.125713348388672
    8. '[tmp' → logprob: -16.375713348388672
    9. '   ' → logprob: -16.625713348388672
    10. '```' → logprob: -17.000713348388672

Token 697: ' en' (ID: 469)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.40282800793647766
    2. ' =' → logprob: -1.1528279781341553
    3. '-=' → logprob: -4.402828216552734
    4. ' -=' → logprob: -5.652828216552734
    5. '-' → logprob: -9.902828216552734
    6. '+=' → logprob: -11.152828216552734
    7. ' -' → logprob: -11.527828216552734
    8. ' +=' → logprob: -13.652828216552734
    9. 'tmp' → logprob: -13.902828216552734
    10. '=
' → logprob: -14.027828216552734

Token 698: ' effect' (ID: 3159)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.018644418567419052
    2. 'tmp' → logprob: -4.643644332885742
    3. 'y' → logprob: -5.143644332885742
    4. ' x' → logprob: -6.143644332885742
    5. ' y' → logprob: -7.268644332885742
    6. ' tmp' → logprob: -9.268644332885742
    7. 't' → logprob: -11.268644332885742
    8. '/tmp' → logprob: -11.393644332885742
    9. 'temp' → logprob: -12.018644332885742
    10. '```' → logprob: -12.268644332885742

Token 699: 'uant' (ID: 44411)
  Prédit: 'uant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uant' → logprob: -0.31088826060295105
    2. 'uer' → logprob: -1.4358882904052734
    3. 'ct' → logprob: -4.560888290405273
    4. 'u' → logprob: -4.685888290405273
    5. '#' → logprob: -5.310888290405273
    6. 'uent' → logprob: -6.935888290405273
    7. 'ua' → logprob: -7.185888290405273
    8. 'tu' → logprob: -7.185888290405273
    9. 'er' → logprob: -7.810888290405273
    10. 'ant' → logprob: -8.560888290405273

Token 700: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0014317858731374145
    2. ' x' → logprob: -6.751431941986084
    3. 'tmp' → logprob: -8.376431465148926
    4. '(x' → logprob: -10.626431465148926
    5. '(tmp' → logprob: -13.376431465148926
    6. '```' → logprob: -13.626431465148926
    7. 'y' → logprob: -13.751431465148926
    8. ' tmp' → logprob: -14.626431465148926
    9. '	x' → logprob: -15.126431465148926
    10. 'a' → logprob: -15.376431465148926

Token 701: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06197183206677437
    2. '-' → logprob: -2.81197190284729
    3. '-y' → logprob: -13.311971664428711
    4. ' ' → logprob: -13.811971664428711
    5. ' ' → logprob: -14.061971664428711
    6. '-t' → logprob: -15.061971664428711
    7. ' minus' → logprob: -16.56197166442871
    8. ' -=' → logprob: -16.81197166442871
    9. '[' → logprob: -16.93697166442871
    10. 'y' → logprob: -17.06197166442871

Token 702: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.03804149478673935
    2. ' y' → logprob: -3.288041591644287
    3. '_y' → logprob: -16.913042068481445
    4. '	y' → logprob: -17.413042068481445
    5. ' ' → logprob: -17.913042068481445
    6. ''y' → logprob: -19.413042068481445
    7. '=' → logprob: -19.663042068481445
    8. 'x' → logprob: -19.788042068481445
    9. '=y' → logprob: -20.038042068481445
    10. '-y' → logprob: -20.038042068481445

Token 703: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25803080201148987
    2. ' =' → logprob: -2.008030891418457
    3. 'tmp' → logprob: -2.883030891418457
    4. '-' → logprob: -3.758030891418457
    5. '
' → logprob: -5.758030891418457
    6. '       ' → logprob: -5.883030891418457
    7. '   ' → logprob: -6.883030891418457
    8. '-=' → logprob: -6.883030891418457
    9. ' -=' → logprob: -7.008030891418457
    10. '=
' → logprob: -7.008030891418457

Token 704: ' ce' (ID: 2357)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3194727897644043
    2. '=' → logprob: -2.4444727897644043
    3. ' =' → logprob: -2.4444727897644043
    4. 'tmp' → logprob: -2.6944727897644043
    5. ' x' → logprob: -4.069472789764404
    6. ' tmp' → logprob: -5.569472789764404
    7. ' 
' → logprob: -5.819472789764404
    8. '    
' → logprob: -6.194472789764404
    9. '       ' → logprob: -6.444472789764404
    10. '        
' → logprob: -6.694472789764404

Token 705: ' qui' (ID: 2780)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mp' → logprob: -1.493550419807434
    2. '=' → logprob: -1.618550419807434
    3. 'tmp' → logprob: -1.868550419807434
    4. '#' → logprob: -2.1185503005981445
    5. ' =' → logprob: -2.3685503005981445
    6. 'space' → logprob: -2.9935503005981445
    7. 'n' → logprob: -3.1185503005981445
    8. 'x' → logprob: -3.6185503005981445
    9. '.' → logprob: -3.9935503005981445
    10. 'nt' → logprob: -4.9935503005981445

Token 706: ' dim' (ID: 6051)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.031931646168231964
    2. ' =' → logprob: -3.5319316387176514
    3. '-=' → logprob: -6.6569318771362305
    4. '*=' → logprob: -8.15693187713623
    5. ' -=' → logprob: -8.53193187713623
    6. ')' → logprob: -8.90693187713623
    7. '=
' → logprob: -9.53193187713623
    8. '=-' → logprob: -10.40693187713623
    9. '>' → logprob: -11.03193187713623
    10. 'tmp' → logprob: -11.03193187713623

Token 707: 'inue' (ID: 9329)
  Prédit: 'inue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inue' → logprob: -1.700132997939363e-05
    2. 'in' → logprob: -11.500017166137695
    3. 'ine' → logprob: -12.375017166137695
    4. 'tmp' → logprob: -14.250017166137695
    5. 'inu' → logprob: -14.250017166137695
    6. 'INUE' → logprob: -14.875017166137695
    7. 'inut' → logprob: -15.125017166137695
    8. 'e' → logprob: -16.500017166137695
    9. 'unit' → logprob: -16.625017166137695
    10. 'inie' → logprob: -17.000017166137695

Token 708: ' (' (ID: 350)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.049882762134075165
    2. ' tmp' → logprob: -3.049882650375366
    3. '(tmp' → logprob: -7.674882888793945
    4. '	tmp' → logprob: -8.424882888793945
    5. '       ' → logprob: -9.174882888793945
    6. 'le' → logprob: -9.299882888793945
    7. '[tmp' → logprob: -9.299882888793945
    8. '_tmp' → logprob: -9.424882888793945
    9. '   ' → logprob: -9.799882888793945
    10. 'temp' → logprob: -10.049882888793945

Token 709: 'ou' (ID: 283)
  Prédit: ' tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.41328680515289307
    2. 'tmp' → logprob: -1.288286805152893
    3. ')' → logprob: -3.1632866859436035
    4. ' )' → logprob: -4.1632866859436035
    5. '1' → logprob: -6.0382866859436035
    6. ' ' → logprob: -6.9132866859436035
    7. 'temp' → logprob: -8.538287162780762
    8. ' x' → logprob: -8.663287162780762
    9. '(tmp' → logprob: -8.788287162780762
    10. ' temp' → logprob: -8.788287162780762

Token 710: ' augmente' (ID: 150199)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0430159755051136
    2. '+=' → logprob: -3.793015956878662
    3. ')' → logprob: -4.543015956878662
    4. ' =' → logprob: -5.793015956878662
    5. ' +=' → logprob: -6.543015956878662
    6. ' tmp' → logprob: -6.793015956878662
    7. 'tmp' → logprob: -7.168015956878662
    8. '-=' → logprob: -7.418015956878662
    9. ' )' → logprob: -7.918015956878662
    10. ')=' → logprob: -8.04301643371582

Token 711: ' nég' (ID: 55805)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.47868093848228455
    2. ' tmp' → logprob: -0.9786809682846069
    3. ')' → logprob: -5.8536810874938965
    4. '(tmp' → logprob: -7.4786810874938965
    5. '	tmp' → logprob: -7.8536810874938965
    6. ' ' → logprob: -8.978680610656738
    7. ' le' → logprob: -8.978680610656738
    8. 'le' → logprob: -9.478680610656738
    9. '_tmp' → logprob: -9.603680610656738
    10. ' ' → logprob: -9.728680610656738

Token 712: 'ativement' (ID: 159073)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.2920237183570862
    2. 'ativement' → logprob: -1.5420236587524414
    3. '       ' → logprob: -4.042023658752441
    4. 't' → logprob: -4.917023658752441
    5. ')' → logprob: -5.667023658752441
    6. 'atif' → logprob: -5.792023658752441
    7. 'x' → logprob: -6.542023658752441
    8. ' tmp' → logprob: -7.167023658752441
    9. '(tmp' → logprob: -7.292023658752441
    10. 'atively' → logprob: -7.542023658752441

Token 713: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1149027347564697
    2. 'tmp' → logprob: -1.1149027347564697
    3. ' tmp' → logprob: -1.1149027347564697
    4. ' )' → logprob: -4.864902496337891
    5. '_tmp' → logprob: -5.864902496337891
    6. '(tmp' → logprob: -6.114902496337891
    7. '	tmp' → logprob: -7.114902496337891
    8. ' ' → logprob: -7.489902496337891
    9. '[tmp' → logprob: -7.489902496337891
    10. '=' → logprob: -8.23990249633789

Token 714: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.025337111204862595
    2. ' tmp' → logprob: -3.9003372192382812
    3. '(tmp' → logprob: -6.650337219238281
    4. 'x' → logprob: -7.150337219238281
    5. '=' → logprob: -7.400337219238281
    6. '
' → logprob: -8.275337219238281
    7. '	tmp' → logprob: -8.650337219238281
    8. 'temp' → logprob: -8.650337219238281
    9. '[tmp' → logprob: -8.650337219238281
    10. ' =' → logprob: -8.775337219238281

Token 715: '.
' (ID: 558)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13250507414340973
    2. ' =' → logprob: -2.132505178451538
    3. '-=' → logprob: -5.757504940032959
    4. ' -=' → logprob: -6.632504940032959
    5. '-' → logprob: -7.257504940032959
    6. '=
' → logprob: -8.882505416870117
    7. 'tmp' → logprob: -9.007505416870117
    8. ' -' → logprob: -10.507505416870117
    9. '       ' → logprob: -10.757505416870117
    10. '   ' → logprob: -10.882505416870117

Token 716: '       ' (ID: 309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.364217072725296
    2. '=' → logprob: -1.3642170429229736
    3. 'tmp' → logprob: -3.8642170429229736
    4. ' tmp' → logprob: -4.239217281341553
    5. ' -=' → logprob: -4.614217281341553
    6. '=
' → logprob: -6.864217281341553
    7. '-=' → logprob: -7.239217281341553
    8. ' =
' → logprob: -7.239217281341553
    9. '-' → logprob: -7.739217281341553
    10. '	tmp' → logprob: -8.114216804504395

Token 717: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' (adapté à ' tmp') → logprob: -0.012550270184874535
    2. ' tmp' → logprob: -4.387550354003906
    3. '	tmp' → logprob: -11.387550354003906
    4. 'x' → logprob: -11.762550354003906
    5. '/tmp' → logprob: -11.762550354003906
    6. '   ' → logprob: -11.887550354003906
    7. 'temp' → logprob: -12.887550354003906
    8. '$tmp' → logprob: -13.512550354003906
    9. '       ' → logprob: -14.387550354003906
    10. '```' → logprob: -14.512550354003906

Token 718: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5587379932403564
    2. ' -=' → logprob: -1.5587379932403564
    3. '-=' → logprob: -1.8087379932403564
    4. ' =' → logprob: -2.9337379932403564
    5. '-' → logprob: -7.433737754821777
    6. '+=' → logprob: -11.808737754821777
    7. ' -' → logprob: -11.808737754821777
    8. ' +=' → logprob: -13.433737754821777
    9. '*=' → logprob: -14.308737754821777
    10. '.=' → logprob: -14.933737754821777

Token 719: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.009428441524505615
    2. ' x' → logprob: -4.75942850112915
    3. 'tmp' → logprob: -7.13442850112915
    4. ' tmp' → logprob: -11.384428024291992
    5. '(x' → logprob: -12.884428024291992
    6. '	x' → logprob: -14.884428024291992
    7. ' ' → logprob: -15.134428024291992
    8. '   ' → logprob: -15.259428024291992
    9. '(tmp' → logprob: -15.509428024291992
    10. '/tmp' → logprob: -15.509428024291992

Token 720: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.25193047523498535
    2. '-' → logprob: -1.5019304752349854
    3. ' ' → logprob: -14.626930236816406
    4. ' ' → logprob: -15.126930236816406
    5. ' -
' → logprob: -15.376930236816406
    6. '-y' → logprob: -15.876930236816406
    7. '-
' → logprob: -16.376930236816406
    8. '−' → logprob: -16.751930236816406
    9. '+' → logprob: -17.126930236816406
    10. ',' → logprob: -17.126930236816406

Token 721: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0004307884373702109
    2. ' y' → logprob: -7.750430583953857
    3. '	y' → logprob: -17.125431060791016
    4. '   ' → logprob: -19.000431060791016
    5. '       ' → logprob: -19.750431060791016
    6. 'x' → logprob: -20.875431060791016
    7. ' ' → logprob: -21.250431060791016
    8. '    ' → logprob: -21.250431060791016
    9. '<|end|>' → logprob: -21.500431060791016
    10. '*y' → logprob: -21.625431060791016

Token 722: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9327817559242249
    2. '<|end|>' → logprob: -1.18278169631958
    3. ' 
' → logprob: -2.18278169631958
    4. '
' → logprob: -2.18278169631958
    5. ' ' → logprob: -4.05778169631958
    6. '        
' → logprob: -4.43278169631958
    7. '   ' → logprob: -4.93278169631958
    8. '    
' → logprob: -5.30778169631958
    9. '\n' → logprob: -5.43278169631958
    10. '​' → logprob: -5.55778169631958

Token 723: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00946044921875
    2. '   ' → logprob: -5.25946044921875
    3. '        
' → logprob: -6.00946044921875
    4. '    
' → logprob: -7.75946044921875
    5. '
' → logprob: -8.13446044921875
    6. ' 
' → logprob: -8.63446044921875
    7. '       
' → logprob: -8.75946044921875
    8. '    ' → logprob: -9.00946044921875
    9. '        ' → logprob: -9.38446044921875
    10. '+' → logprob: -9.63446044921875

Token 724: ' #' (ID: 1069)
  Prédit: 'PLUS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'PLUS' → logprob: -9.269565634895116e-05
    2. '       ' → logprob: -9.625092506408691
    3. ' PLUS' → logprob: -11.375092506408691
    4. '   ' → logprob: -11.750092506408691
    5. 'plus' → logprob: -12.500092506408691
    6. '_PLUS' → logprob: -13.500092506408691
    7. '+' → logprob: -14.000092506408691
    8. 'Plus' → logprob: -15.125092506408691
    9. '      ' → logprob: -15.625092506408691
    10. '+
' → logprob: -15.625092506408691

Token 725: ' Dé' (ID: 27247)
  Prédit: 'PLUS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'PLUS' → logprob: -1.1875571544806007e-05
    2. '       ' → logprob: -11.500011444091797
    3. '   ' → logprob: -14.125011444091797
    4. 'plus' → logprob: -14.500011444091797
    5. ' PLUS' → logprob: -15.500011444091797
    6. '_PLUS' → logprob: -16.125011444091797
    7. '      ' → logprob: -16.375011444091797
    8. 'Plus' → logprob: -16.500011444091797
    9. '#' → logprob: -17.750011444091797
    10. 'POS' → logprob: -18.500011444091797

Token 726: 'cr' (ID: 798)
  Prédit: 'PLUS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'PLUS' → logprob: -0.24025177955627441
    2. 'crease' → logprob: -1.9902517795562744
    3. 'CREASE' → logprob: -4.240251541137695
    4. 'lus' → logprob: -4.365251541137695
    5. 'crement' → logprob: -4.365251541137695
    6. 'f' → logprob: -4.865251541137695
    7. 'plus' → logprob: -5.365251541137695
    8. 'CREMENT' → logprob: -5.365251541137695
    9. 'cr' → logprob: -5.615251541137695
    10. 'P' → logprob: -5.865251541137695

Token 727: 'ément' (ID: 17645)
  Prédit: 'ment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.004440324380993843
    2. 'ément' → logprob: -6.5044403076171875
    3. 'MENT' → logprob: -6.5044403076171875
    4. 'ement' → logprob: -7.3794403076171875
    5. 'm' → logprob: -8.004440307617188
    6. 'mentar' → logprob: -8.004440307617188
    7. 'mente' → logprob: -10.129440307617188
    8. 'EMENT' → logprob: -11.004440307617188
    9. 'ments' → logprob: -11.129440307617188
    10. '#' → logprob: -11.379440307617188

Token 728: 'er' (ID: 259)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4376729428768158
    2. 'er' → logprob: -1.5626729726791382
    3. 'PLUS' → logprob: -1.9376729726791382
    4. ' PLUS' → logprob: -8.06267261505127
    5. 'ER' → logprob: -9.18767261505127
    6. '   ' → logprob: -9.18767261505127
    7. '_PLUS' → logprob: -9.31267261505127
    8. 'E' → logprob: -9.93767261505127
    9. 'ent' → logprob: -10.18767261505127
    10. '       ' → logprob: -10.31267261505127

Token 729: ' le' (ID: 505)
  Prédit: 'PLUS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'PLUS' → logprob: -1.9361264946837764e-07
    2. ' PLUS' → logprob: -17.0
    3. 'plus' → logprob: -17.625
    4. '_PLUS' → logprob: -18.625
    5. 'Plus' → logprob: -19.125
    6. 'PL' → logprob: -20.875
    7. '+' → logprob: -22.125
    8. 'PUT' → logprob: -22.5
    9. 'PLACE' → logprob: -22.625
    10. 'PLE' → logprob: -22.875

Token 730: ' compteur' (ID: 163344)
  Prédit: 'PLUS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'PLUS' → logprob: -3.128163257315464e-07
    2. ' PLUS' → logprob: -15.25
    3. 'plus' → logprob: -16.75
    4. '_PLUS' → logprob: -18.25
    5. 'Plus' → logprob: -18.75
    6. 'PL' → logprob: -19.0
    7. 'POS' → logprob: -21.375
    8. 'PLACE' → logprob: -21.625
    9. '+' → logprob: -21.875
    10. 'MORE' → logprob: -22.125

Token 731: ' PLUS' (ID: 61301)
  Prédit: 'PLUS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'PLUS' → logprob: -7.107425062713446e-06
    2. ' PLUS' → logprob: -11.875006675720215
    3. '_PLUS' → logprob: -17.12500762939453
    4. 'plus' → logprob: -17.87500762939453
    5. 'PL' → logprob: -18.25000762939453
    6. '   ' → logprob: -18.75000762939453
    7. 'Plus' → logprob: -18.75000762939453
    8. '[' → logprob: -19.12500762939453
    9. 'POS' → logprob: -20.37500762939453
    10. 'PLACE' → logprob: -20.62500762939453

Token 732: ' car' (ID: 1669)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.6108879446983337
    2. '-=' → logprob: -1.2358880043029785
    3. '       ' → logprob: -1.9858880043029785
    4. '-' → logprob: -3.6108880043029785
    5. '<|end|>' → logprob: -7.6108880043029785
    6. '        ' → logprob: -8.23588752746582
    7. '=' → logprob: -8.36088752746582
    8. ' -' → logprob: -8.86088752746582
    9. '_MINUS' → logprob: -8.98588752746582
    10. '+=' → logprob: -9.11088752746582

Token 733: ' on' (ID: 402)
  Prédit: 'PLUS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'PLUS' → logprob: -0.0016692342469468713
    2. '1' → logprob: -6.626669406890869
    3. ' PLUS' → logprob: -8.126668930053711
    4. 'plus' → logprob: -11.001668930053711
    5. '_PLUS' → logprob: -11.626668930053711
    6. '+' → logprob: -11.876668930053711
    7. '   ' → logprob: -12.251668930053711
    8. 'Plus' → logprob: -13.001668930053711
    9. 'len' → logprob: -13.001668930053711
    10. ' plus' → logprob: -14.251668930053711

Token 734: ' vient' (ID: 40370)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.12441524863243103
    2. '-=' → logprob: -2.499415159225464
    3. '-' → logprob: -3.749415159225464
    4. '   ' → logprob: -5.249415397644043
    5. '       ' → logprob: -5.749415397644043
    6. '  ' → logprob: -7.249415397644043
    7. ' -' → logprob: -7.749415397644043
    8. '=' → logprob: -7.874415397644043
    9. ' ' → logprob: -8.124415397644043
    10. '    ' → logprob: -8.374415397644043

Token 735: ' d' (ID: 272)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.4629843831062317
    2. '       ' → logprob: -1.837984323501587
    3. ' de' → logprob: -1.837984323501587
    4. '   ' → logprob: -3.712984323501587
    5. 'd' → logprob: -3.837984323501587
    6. ' d' → logprob: -6.462984561920166
    7. '    ' → logprob: -6.462984561920166
    8. '-=' → logprob: -6.962984561920166
    9. ' -=' → logprob: -7.337984561920166
    10. ' ' → logprob: -8.212984085083008

Token 736: ''utiliser' (ID: 133355)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-=' → logprob: -1.0760375261306763
    2. ' -=' → logprob: -1.5760375261306763
    3. '       ' → logprob: -1.8260375261306763
    4. '   ' → logprob: -2.0760374069213867
    5. '-' → logprob: -2.4510374069213867
    6. '=' → logprob: -3.7010374069213867
    7. '    ' → logprob: -4.451037406921387
    8. '  ' → logprob: -5.076037406921387
    9. '+=' → logprob: -5.201037406921387
    10. '      ' → logprob: -5.451037406921387

Token 737: ' un' (ID: 537)
  Prédit: 'PLUS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'PLUS' → logprob: -0.43381860852241516
    2. '1' → logprob: -1.0588185787200928
    3. '   ' → logprob: -6.183818817138672
    4. '+' → logprob: -6.183818817138672
    5. 'plus' → logprob: -7.933818817138672
    6. '```' → logprob: -8.933818817138672
    7. '+=' → logprob: -9.433818817138672
    8. 'y' → logprob: -9.683818817138672
    9. '_PLUS' → logprob: -9.683818817138672
    10. '++' → logprob: -9.808818817138672

Token 738: ' élément' (ID: 99627)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.54088294506073
    2. ')' → logprob: -1.04088294506073
    3. 'PLUS' → logprob: -3.5408830642700195
    4. ']' → logprob: -4.2908830642700195
    5. '>' → logprob: -4.6658830642700195
    6. 'plus' → logprob: -5.7908830642700195
    7. '++' → logprob: -6.0408830642700195
    8. 'élé' → logprob: -6.9158830642700195
    9. '1' → logprob: -7.1658830642700195
    10. ' PLUS' → logprob: -7.4158830642700195

Token 739: ' positif' (ID: 89008)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.6133685111999512
    2. '-' → logprob: -1.6133685111999512
    3. 'PLUS' → logprob: -1.7383685111999512
    4. '-=' → logprob: -3.113368511199951
    5. '+=' → logprob: -5.113368511199951
    6. ' -' → logprob: -5.238368511199951
    7. '[' → logprob: -5.238368511199951
    8. ' +=' → logprob: -5.613368511199951
    9. '=' → logprob: -5.738368511199951
    10. '       ' → logprob: -5.863368511199951

Token 740: ' ou' (ID: 2031)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.32573407888412476
    2. '-' → logprob: -1.7007341384887695
    3. '-=' → logprob: -3.2007341384887695
    4. '       ' → logprob: -3.8257341384887695
    5. '<|end|>' → logprob: -4.5757341384887695
    6. ' -' → logprob: -4.9507341384887695
    7. ' or' → logprob: -5.7007341384887695
    8. '   ' → logprob: -5.8257341384887695
    9. '_MINUS' → logprob: -6.7007341384887695
    10. '```' → logprob: -6.7007341384887695

Token 741: ' nul' (ID: 64435)
  Prédit: 'nul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nul' → logprob: -0.07119648903608322
    2. 'n' → logprob: -3.5711965560913086
    3. 'ou' → logprob: -3.8211965560913086
    4. '=' → logprob: -4.696196556091309
    5. '>' → logprob: -5.946196556091309
    6. 'null' → logprob: -6.321196556091309
    7. ' nul' → logprob: -6.946196556091309
    8. ' ' → logprob: -6.946196556091309
    9. '>=' → logprob: -7.071196556091309
    10. '0' → logprob: -7.571196556091309

Token 742: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05488025024533272
    2. '        
' → logprob: -4.054880142211914
    3. 'PLUS' → logprob: -4.554880142211914
    4. '-' → logprob: -5.304880142211914
    5. '<|end|>' → logprob: -5.429880142211914
    6. '           ' → logprob: -5.804880142211914
    7. '        ' → logprob: -6.054880142211914
    8. '+' → logprob: -6.429880142211914
    9. '   ' → logprob: -6.804880142211914
    10. '
' → logprob: -6.929880142211914

Token 743: '       ' (ID: 309)
  Prédit: 'PLUS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'PLUS' → logprob: -0.0002693224814720452
    2. ' PLUS' → logprob: -8.250268936157227
    3. '_PLUS' → logprob: -12.250268936157227
    4. '+' → logprob: -13.500268936157227
    5. '       ' → logprob: -13.625268936157227
    6. 'Plus' → logprob: -15.250268936157227
    7. '   ' → logprob: -15.500268936157227
    8. 'plus' → logprob: -15.875268936157227
    9. ' plus' → logprob: -16.625268936157227
    10. '++' → logprob: -17.000268936157227

Token 744: ' PLUS' (ID: 61301)
  Prédit: 'PLUS'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'PLUS' (adapté à ' PLUS') → logprob: -2.47495681833243e-05
    2. '       ' → logprob: -10.750024795532227
    3. ' PLUS' → logprob: -12.750024795532227
    4. '   ' → logprob: -15.750024795532227
    5. '_PLUS' → logprob: -16.500024795532227
    6. 'plus' → logprob: -16.875024795532227
    7. 'Plus' → logprob: -18.625024795532227
    8. '+' → logprob: -19.375024795532227
    9. '           ' → logprob: -19.375024795532227
    10. '      ' → logprob: -19.875024795532227

Token 745: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.049462269991636276
    2. ' -=' → logprob: -3.04946231842041
    3. '-' → logprob: -7.04946231842041
    4. '=' → logprob: -12.29946231842041
    5. '+=' → logprob: -13.29946231842041
    6. ' -' → logprob: -15.67446231842041
    7. '   ' → logprob: -16.799461364746094
    8. '--' → logprob: -18.299461364746094
    9. '```' → logprob: -18.299461364746094
    10. ' +=' → logprob: -18.299461364746094

Token 746: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '<|end|>' → logprob: -18.375009536743164
    4. '   ' → logprob: -18.875009536743164
    5. '۱' → logprob: -19.500009536743164
    6. '１' → logprob: -20.750009536743164
    7. '১' → logprob: -20.750009536743164
    8. '१' → logprob: -21.000009536743164
    9. '```' → logprob: -21.000009536743164
    10. '<|end|>' → logprob: -21.125009536743164

Token 747: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '<|end|>' → logprob: -17.625
    4. '۱' → logprob: -19.25
    5. '১' → logprob: -20.25
    6. '   ' → logprob: -20.5
    7. '１' → logprob: -20.625
    8. '१' → logprob: -20.625
    9. '<|end|>' → logprob: -20.875
    10. '2' → logprob: -21.25

Token 748: '

' (ID: 279)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7280495762825012
    2. '
' → logprob: -1.8530495166778564
    3. '<|end|>' → logprob: -1.9780495166778564
    4. '   ' → logprob: -3.3530495166778564
    5. '#' → logprob: -3.3530495166778564
    6. ' while' → logprob: -3.4780495166778564
    7. ' 
' → logprob: -3.4780495166778564
    8. '```' → logprob: -3.8530495166778564
    9. '    
' → logprob: -4.1030497550964355
    10. '  
' → logprob: -4.3530497550964355

Token 749: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5636501908302307
    2. 'for' → logprob: -1.063650131225586
    3. '#' → logprob: -2.563650131225586
    4. ' while' → logprob: -5.813650131225586
    5. '   ' → logprob: -6.188650131225586
    6. ' for' → logprob: -6.688650131225586
    7. 'elif' → logprob: -7.313650131225586
    8. '    
' → logprob: -7.938650131225586
    9. 'if' → logprob: -7.938650131225586
    10. 'else' → logprob: -8.313650131225586

Token 750: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6709797978401184
    2. '#' (adapté à ' #') → logprob: -1.0459797382354736
    3. 'for' → logprob: -2.2959797382354736
    4. '   ' → logprob: -3.4209797382354736
    5. ' while' → logprob: -6.295979976654053
    6. 'x' → logprob: -7.420979976654053
    7. ' for' → logprob: -8.045979499816895
    8. '    
' → logprob: -8.170979499816895
    9. '+' → logprob: -8.545979499816895
    10. 'if' → logprob: -8.795979499816895

Token 751: ' Après' (ID: 47562)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.1743033528327942
    2. '#' → logprob: -2.5493032932281494
    3. 'for' → logprob: -2.5493032932281494
    4. 'x' → logprob: -6.0493035316467285
    5. 'tmp' → logprob: -7.2993035316467285
    6. '   ' → logprob: -7.7993035316467285
    7. ' while' → logprob: -9.42430305480957
    8. 'y' → logprob: -9.79930305480957
    9. 'if' → logprob: -10.54930305480957
    10. 'from' → logprob: -11.54930305480957

Token 752: ' avoir' (ID: 16595)
  Prédit: ' avoir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' avoir' → logprob: -1.1611886024475098
    2. ' this' → logprob: -1.5361886024475098
    3. '#' → logprob: -1.7861886024475098
    4. 'while' → logprob: -2.2861886024475098
    5. ' ce' → logprob: -2.6611886024475098
    6. 'this' → logprob: -3.5361886024475098
    7. ' having' → logprob: -4.03618860244751
    8. ' cette' → logprob: -4.41118860244751
    9. ' while' → logprob: -4.41118860244751
    10. 'la' → logprob: -4.66118860244751

Token 753: ' sou' (ID: 4069)
  Prédit: ' utilisé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' utilisé' → logprob: -0.7940292358398438
    2. 'util' → logprob: -1.4190292358398438
    3. '#' → logprob: -2.2940292358398438
    4. 'while' → logprob: -2.7940292358398438
    5. ' traité' → logprob: -2.7940292358398438
    6. 'trait' → logprob: -3.5440292358398438
    7. ' while' → logprob: -5.044029235839844
    8. ' #' → logprob: -5.544029235839844
    9. ' effectué' → logprob: -5.794029235839844
    10. 's' → logprob: -5.794029235839844

Token 754: 'stra' (ID: 14867)
  Prédit: 'stra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stra' → logprob: -0.24233196675777435
    2. 'tra' → logprob: -1.8673319816589355
    3. 'str' → logprob: -3.7423319816589355
    4. 'tr' → logprob: -4.1173319816589355
    5. 'trait' → logprob: -5.2423319816589355
    6. 'stract' → logprob: -5.2423319816589355
    7. 'tract' → logprob: -5.9923319816589355
    8. 'tré' → logprob: -5.9923319816589355
    9. 'trat' → logprob: -6.4923319816589355
    10. 'b' → logprob: -7.8673319816589355

Token 755: 'it' (ID: 278)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.058665502816438675
    2. 't' → logprob: -3.0586655139923096
    3. 'nt' → logprob: -5.4336652755737305
    4. 'té' → logprob: -6.5586652755737305
    5. '   ' → logprob: -6.8086652755737305
    6. 'é' → logprob: -7.1836652755737305
    7. 'int' → logprob: -8.05866527557373
    8. 'it' → logprob: -8.43366527557373
    9. 'pt' → logprob: -8.43366527557373
    10. 'ant' → logprob: -8.55866527557373

Token 756: ' tous' (ID: 10688)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.7030792236328125
    2. 'les' → logprob: -2.0780792236328125
    3. ' le' → logprob: -2.0780792236328125
    4. '#' → logprob: -2.2030792236328125
    5. ' les' → logprob: -2.2030792236328125
    6. ' la' → logprob: -3.2030792236328125
    7. 'the' → logprob: -3.4530792236328125
    8. ' the' → logprob: -3.5780792236328125
    9. ' ' → logprob: -3.5780792236328125
    10. 'PLUS' → logprob: -3.5780792236328125

Token 757: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.5342087149620056
    2. ' les' → logprob: -0.9092087149620056
    3. '#' → logprob: -5.53420877456665
    4. ' (' → logprob: -5.78420877456665
    5. '(' → logprob: -7.03420877456665
    6. 'MIN' → logprob: -8.159208297729492
    7. 'le' → logprob: -8.159208297729492
    8. ' ' → logprob: -8.284208297729492
    9. ' #' → logprob: -8.409208297729492
    10. '_' → logprob: -8.534208297729492

Token 758: ' grands' (ID: 43085)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.13061052560806274
    2. 'PLUS' → logprob: -3.255610466003418
    3. 'n' → logprob: -4.130610466003418
    4. 'neg' → logprob: -4.255610466003418
    5. 'MIN' → logprob: -4.630610466003418
    6. 'posit' → logprob: -4.755610466003418
    7. 'elements' → logprob: -5.005610466003418
    8. ' éléments' → logprob: -5.380610466003418
    9. '#' → logprob: -5.505610466003418
    10. 'NEG' → logprob: -6.255610466003418

Token 759: ' posit' (ID: 13047)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.5392885208129883
    2. ' éléments' → logprob: -1.7892885208129883
    3. 'A' → logprob: -1.9142885208129883
    4. ' A' → logprob: -2.5392885208129883
    5. 'elements' → logprob: -4.914288520812988
    6. '#' → logprob: -5.664288520812988
    7. ' elements' → logprob: -5.789288520812988
    8. '+' → logprob: -7.039288520812988
    9. 'posit' → logprob: -7.164288520812988
    10. 'PLUS' → logprob: -7.289288520812988

Token 760: 'ifs' (ID: 14119)
  Prédit: 'ifs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifs' → logprob: -0.0001129602751461789
    2. 'if' → logprob: -10.250112533569336
    3. '#' → logprob: -10.625112533569336
    4. 'ion' → logprob: -11.375112533569336
    5. 'IFS' → logprob: -11.875112533569336
    6. 'ions' → logprob: -12.000112533569336
    7. '   ' → logprob: -12.125112533569336
    8. '+' → logprob: -12.125112533569336
    9. '```' → logprob: -12.375112533569336
    10. 'is' → logprob: -12.375112533569336

Token 761: ' sauf' (ID: 87919)
  Prédit: ' ou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ou' → logprob: -0.9020150899887085
    2. ',' → logprob: -1.6520150899887085
    3. 'ou' → logprob: -1.7770150899887085
    4. ' (' → logprob: -2.902015209197998
    5. '(or' → logprob: -3.152015209197998
    6. '(rest' → logprob: -3.777015209197998
    7. 'or' → logprob: -4.152015209197998
    8. '(' → logprob: -4.152015209197998
    9. 'except' → logprob: -4.277015209197998
    10. ' or' → logprob: -4.277015209197998

Token 762: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.019160760566592216
    2. ' un' → logprob: -4.644160747528076
    3. '1' → logprob: -5.144160747528076
    4. 'le' → logprob: -5.769160747528076
    5. ''un' → logprob: -9.019161224365234
    6. '	un' → logprob: -9.769161224365234
    7. ' ' → logprob: -9.894161224365234
    8. 'une' → logprob: -10.394161224365234
    9. 'one' → logprob: -10.519161224365234
    10. '_un' → logprob: -10.644161224365234

Token 763: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07687172293663025
    2. '   ' → logprob: -2.826871633529663
    3. '#' → logprob: -4.951871871948242
    4. ' except' → logprob: -6.326871871948242
    5. 'except' → logprob: -6.451871871948242
    6. ':' → logprob: -6.701871871948242
    7. ' (' → logprob: -6.951871871948242
    8. ',
' → logprob: -8.076871871948242
    9. ' ,' → logprob: -8.201871871948242
    10. ' #' → logprob: -8.701871871948242

Token 764: ' il' (ID: 1793)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6138249039649963
    2. '   ' → logprob: -1.2388248443603516
    3. 'while' → logprob: -1.8638248443603516
    4. ' while' → logprob: -4.738824844360352
    5. 'for' → logprob: -6.363824844360352
    6. 'x' → logprob: -6.488824844360352
    7. ' #' → logprob: -6.738824844360352
    8. ' for' → logprob: -8.613824844360352
    9. 'if' → logprob: -9.363824844360352
    10. '    
' → logprob: -9.738824844360352

Token 765: ' reste' (ID: 26769)
  Prédit: 'reste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reste' → logprob: -0.09573933482170105
    2. 'rest' → logprob: -2.9707393646240234
    3. '#' → logprob: -4.220739364624023
    4. ' reste' → logprob: -4.220739364624023
    5. 'f' → logprob: -4.720739364624023
    6. 'man' → logprob: -7.470739364624023
    7. 'remaining' → logprob: -8.095739364624023
    8. '   ' → logprob: -8.720739364624023
    9. 'en' → logprob: -9.095739364624023
    10. 'remain' → logprob: -9.470739364624023

Token 766: ' à' (ID: 1221)
  Prédit: 'PLUS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'PLUS' → logprob: -0.28945136070251465
    2. 'un' → logprob: -2.1644513607025146
    3. ' PLUS' → logprob: -2.5394513607025146
    4. ' un' → logprob: -3.9144513607025146
    5. '1' → logprob: -4.539451599121094
    6. 'plus' → logprob: -5.414451599121094
    7. ' une' → logprob: -5.539451599121094
    8. ' au' → logprob: -5.539451599121094
    9. 'une' → logprob: -5.539451599121094
    10. ' ' → logprob: -6.039451599121094

Token 767: ' effectuer' (ID: 98625)
  Prédit: 'PLUS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'PLUS' → logprob: -0.9434502720832825
    2. 'while' → logprob: -1.4434502124786377
    3. 'tmp' → logprob: -1.5684502124786377
    4. 'sou' → logprob: -3.0684502124786377
    5. 'moins' → logprob: -3.3184502124786377
    6. 'plus' → logprob: -3.9434502124786377
    7. '#' → logprob: -4.318450450897217
    8. 'ret' → logprob: -5.193450450897217
    9. 'util' → logprob: -5.443450450897217
    10. 'faire' → logprob: -5.568450450897217

Token 768: ' l' (ID: 305)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1309396028518677
    2. 'PLUS' → logprob: -1.1309396028518677
    3. '   ' → logprob: -2.005939483642578
    4. 'while' → logprob: -2.130939483642578
    5. ' PLUS' → logprob: -3.255939483642578
    6. 'une' → logprob: -4.505939483642578
    7. 'la' → logprob: -4.755939483642578
    8. 'for' → logprob: -5.005939483642578
    9. 'le' → logprob: -5.130939483642578
    10. 'plus' → logprob: -5.380939483642578

Token 769: ''op' (ID: 70747)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.035856008529663086
    2. 'a' → logprob: -4.035856246948242
    3. 'while' → logprob: -4.785856246948242
    4. '#' → logprob: -6.160856246948242
    5. ' while' → logprob: -6.285856246948242
    6. 'tmp' → logprob: -6.660856246948242
    7. 'x' → logprob: -6.910856246948242
    8. 'plus' → logprob: -7.410856246948242
    9. ' a' → logprob: -8.410856246948242
    10. 'es' → logprob: -8.535856246948242

Token 770: 'ération' (ID: 24977)
  Prédit: 'ération'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.12273425608873367
    2. 'er' → logprob: -2.622734308242798
    3. 'érations' → logprob: -3.247734308242798
    4. 'ér' → logprob: -6.747734069824219
    5. 'ERATION' → logprob: -6.872734069824219
    6. '#' → logprob: -7.997734069824219
    7. 'é' → logprob: -8.122734069824219
    8. 'PLUS' → logprob: -8.747734069824219
    9. 'ration' → logprob: -8.872734069824219
    10. '+' → logprob: -9.122734069824219

Token 771: ' entre' (ID: 3853)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.7708991765975952
    2. 'sur' → logprob: -1.7708991765975952
    3. 'avec' → logprob: -1.8958991765975952
    4. 'x' → logprob: -2.0208992958068848
    5. 'final' → logprob: -2.5208992958068848
    6. '   ' → logprob: -2.5208992958068848
    7. 'while' → logprob: -2.8958992958068848
    8. ' avec' → logprob: -3.6458992958068848
    9. 'with' → logprob: -3.6458992958068848
    10. 'for' → logprob: -3.8958992958068848

Token 772: '
' (ID: 198)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.03754686191678047
    2. 'le' → logprob: -3.9125468730926514
    3. ' tmp' → logprob: -5.412546634674072
    4. '#' → logprob: -6.037546634674072
    5. 'PLUS' → logprob: -6.037546634674072
    6. ' le' → logprob: -6.412546634674072
    7. 'x' → logprob: -6.662546634674072
    8. 'l' → logprob: -7.037546634674072
    9. 'la' → logprob: -7.037546634674072
    10. 'les' → logprob: -7.412546634674072

Token 773: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.5253349542617798
    2. 'tmp' → logprob: -1.6503349542617798
    3. 'PLUS' → logprob: -1.7753349542617798
    4. '   ' → logprob: -2.4003348350524902
    5. ' PLUS' → logprob: -2.6503348350524902
    6. ' tmp' → logprob: -2.6503348350524902
    7. 'x' → logprob: -3.0253348350524902
    8. ' le' → logprob: -3.4003348350524902
    9. ' A' → logprob: -3.5253348350524902
    10. ' x' → logprob: -4.02533483505249

Token 774: ' #' (ID: 1069)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.127296581864357
    2. 'PLUS' → logprob: -2.8772966861724854
    3. '#' (adapté à ' #') → logprob: -3.1272966861724854
    4. 'x' → logprob: -4.502296447753906
    5. 'plus' → logprob: -6.502296447753906
    6. 'MIN' → logprob: -6.502296447753906
    7. 'le' → logprob: -6.752296447753906
    8. 'de' → logprob: -6.877296447753906
    9. ' PLUS' → logprob: -8.002296447753906
    10. '+' → logprob: -8.252296447753906

Token 775: ' le' (ID: 505)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.2793397903442383
    2. 'le' → logprob: -2.2793397903442383
    3. 'PLUS' → logprob: -2.2793397903442383
    4. '#' → logprob: -4.154339790344238
    5. 'la' → logprob: -5.279339790344238
    6. 'les' → logprob: -5.404339790344238
    7. 'de' → logprob: -5.654339790344238
    8. 'un' → logprob: -6.029339790344238
    9. 'MIN' → logprob: -6.529339790344238
    10. 'x' → logprob: -6.779339790344238

Token 776: ' dernier' (ID: 27982)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -1.0925958156585693
    2. 'dern' → logprob: -1.0925958156585693
    3. 'tmp' → logprob: -1.3425958156585693
    4. 'PLUS' → logprob: -3.0925958156585693
    5. '#' → logprob: -4.967596054077148
    6. 'moins' → logprob: -5.842596054077148
    7. 'der' → logprob: -6.217596054077148
    8. 'de' → logprob: -6.342596054077148
    9. '+' → logprob: -6.717596054077148
    10. 'prem' → logprob: -6.967596054077148

Token 777: ' positif' (ID: 89008)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -1.061055302619934
    2. 'x' → logprob: -1.311055302619934
    3. 'posit' → logprob: -1.936055302619934
    4. 'A' → logprob: -2.5610551834106445
    5. '#' → logprob: -3.0610551834106445
    6. ' positif' → logprob: -3.5610551834106445
    7. 'plus' → logprob: -3.8110551834106445
    8. 'positive' → logprob: -3.9360551834106445
    9. 'pos' → logprob: -4.3110551834106445
    10. 'tmp' → logprob: -5.1860551834106445

Token 778: ' et' (ID: 859)
  Prédit: 'ou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ou' → logprob: -0.2103959619998932
    2. ' ou' → logprob: -2.0853960514068604
    3. 'or' → logprob: -2.9603960514068604
    4. ' or' → logprob: -4.585395812988281
    5. 'et' → logprob: -6.835395812988281
    6. '   ' → logprob: -7.210395812988281
    7. '(or' → logprob: -8.085395812988281
    8. '(s' → logprob: -8.335395812988281
    9. ' et' → logprob: -8.460395812988281
    10. 's' → logprob: -8.835395812988281

Token 779: ' le' (ID: 505)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.22573000192642212
    2. 'le' → logprob: -1.8507299423217773
    3. 'un' → logprob: -3.7257299423217773
    4. 'l' → logprob: -5.600729942321777
    5. 'les' → logprob: -5.600729942321777
    6. '#' → logprob: -5.725729942321777
    7. ' le' → logprob: -5.850729942321777
    8. '1' → logprob: -6.350729942321777
    9. ' tmp' → logprob: -6.475729942321777
    10. 'la' → logprob: -7.225729942321777

Token 780: ' résultat' (ID: 62556)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.13353729248046875
    2. 'tmp' → logprob: -2.7585372924804688
    3. 'prem' → logprob: -3.2585372924804688
    4. 'dern' → logprob: -4.508537292480469
    5. 'moins' → logprob: -4.883537292480469
    6. 'minus' → logprob: -6.883537292480469
    7. 'pet' → logprob: -7.133537292480469
    8. 'neg' → logprob: -7.383537292480469
    9. 'PLUS' → logprob: -7.758537292480469
    10. '#' → logprob: -8.383537292480469

Token 781: ' tempora' (ID: 117509)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.04171910136938095
    2. ' tmp' → logprob: -4.29171895980835
    3. 'final' → logprob: -4.29171895980835
    4. '   ' → logprob: -5.16671895980835
    5. '(tmp' → logprob: -6.54171895980835
    6. 'inter' → logprob: -7.04171895980835
    7. 'temp' → logprob: -7.29171895980835
    8. ' final' → logprob: -7.41671895980835
    9. '_tmp' → logprob: -7.41671895980835
    10. 'rest' → logprob: -7.66671895980835

Token 782: 'ire' (ID: 594)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.016040585935115814
    2. 'aire' → logprob: -4.516040802001953
    3. 'temp' → logprob: -6.641040802001953
    4. '(tmp' → logprob: -7.641040802001953
    5. ' tmp' → logprob: -7.766040802001953
    6. 'ire' → logprob: -8.016040802001953
    7. 'r' → logprob: -8.266040802001953
    8. 're' → logprob: -8.266040802001953
    9. '/tmp' → logprob: -8.266040802001953
    10. '_tmp' → logprob: -8.391040802001953

Token 783: ' accum' (ID: 23148)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1056148111820221
    2. '.' → logprob: -3.8556149005889893
    3. ',' → logprob: -4.23061466217041
    4. 'tmp' → logprob: -4.23061466217041
    5. '   ' → logprob: -4.60561466217041
    6. 'rest' → logprob: -4.60561466217041
    7. '#' → logprob: -5.10561466217041
    8. 'final' → logprob: -5.23061466217041
    9. ' (' → logprob: -5.35561466217041
    10. '(x' → logprob: -5.85561466217041

Token 784: 'ulé' (ID: 147268)
  Prédit: 'ulé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulé' → logprob: -0.0024799390230327845
    2. 'umul' → logprob: -6.5024800300598145
    3. 'ul' → logprob: -7.2524800300598145
    4. 'umé' → logprob: -9.252479553222656
    5. 'ule' → logprob: -9.377479553222656
    6. 'mul' → logprob: -10.627479553222656
    7. 'um' → logprob: -11.377479553222656
    8. '#' → logprob: -11.877479553222656
    9. 'ult' → logprob: -12.002479553222656
    10. '<ul' → logprob: -12.627479553222656

Token 785: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08190041035413742
    2. '.' → logprob: -2.9569003582000732
    3. 'x' → logprob: -4.456900596618652
    4. ',' → logprob: -4.581900596618652
    5. ':' → logprob: -6.206900596618652
    6. ' x' → logprob: -6.956900596618652
    7. '#' → logprob: -7.831900596618652
    8. '  ' → logprob: -8.206900596618652
    9. '    
' → logprob: -8.456900596618652
    10. ' ' → logprob: -8.581900596618652

Token 786: '   ' (ID: 271)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2325042188167572
    2. '   ' → logprob: -1.6075042486190796
    3. ' x' → logprob: -5.982504367828369
    4. 'while' → logprob: -6.107504367828369
    5. '#' → logprob: -6.982504367828369
    6. 'y' → logprob: -7.232504367828369
    7. ' while' → logprob: -8.732503890991211
    8. '+' → logprob: -9.232503890991211
    9. '    
' → logprob: -9.607503890991211
    10. ' ' → logprob: -10.232503890991211

Token 787: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.07152249664068222
    2. '   ' → logprob: -3.3215224742889404
    3. ' x' → logprob: -4.1965227127075195
    4. '#' → logprob: -4.3215227127075195
    5. ' while' → logprob: -6.9465227127075195
    6. 'while' → logprob: -6.9465227127075195
    7. 'y' → logprob: -7.4465227127075195
    8. 'else' → logprob: -7.5715227127075195
    9. ' #' → logprob: -7.8215227127075195
    10. '    
' → logprob: -8.57152271270752

Token 788: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.172891830326989e-05
    2. '=' → logprob: -10.125082015991211
    3. ',y' → logprob: -10.250082015991211
    4. ' =' → logprob: -12.375082015991211
    5. ' ,' → logprob: -13.375082015991211
    6. ',tmp' → logprob: -16.00008201599121
    7. ',x' → logprob: -16.12508201599121
    8. 'y' → logprob: -16.12508201599121
    9. 'tmp' → logprob: -17.00008201599121
    10. ',t' → logprob: -18.37508201599121

Token 789: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.005234713666141033
    2. ' y' → logprob: -5.255234718322754
    3. 'tmp' → logprob: -15.255234718322754
    4. '=' → logprob: -15.380234718322754
    5. '	y' → logprob: -15.880234718322754
    6. ' =' → logprob: -16.255233764648438
    7. 'x' → logprob: -16.755233764648438
    8. '   ' → logprob: -16.755233764648438
    9. ',' → logprob: -17.755233764648438
    10. '  ' → logprob: -18.005233764648438

Token 790: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196891888976097
    2. ' =' → logprob: -2.8119688034057617
    3. ',' → logprob: -13.811968803405762
    4. '=
' → logprob: -16.436969757080078
    5. '=

' → logprob: -16.436969757080078
    6. ' ' → logprob: -17.311969757080078
    7. '＝' → logprob: -18.311969757080078
    8. '=user' → logprob: -18.436969757080078
    9. '=}' → logprob: -18.561969757080078
    10. '=',' → logprob: -18.561969757080078

Token 791: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.04401758313179016
    2. 'tmp' → logprob: -3.1690175533294678
    3. ' A' → logprob: -7.044017791748047
    4. ' tmp' → logprob: -9.669017791748047
    5. 'x' → logprob: -9.919017791748047
    6. 'a' → logprob: -11.794017791748047
    7. '   ' → logprob: -12.169017791748047
    8. ' ' → logprob: -12.544017791748047
    9. '(tmp' → logprob: -13.044017791748047
    10. '(A' → logprob: -13.294017791748047

Token 792: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.0032947517465800047
    2. 'pop' → logprob: -6.253294944763184
    3. '[-' → logprob: -7.253294944763184
    4. '.' → logprob: -7.753294944763184
    5. '0' → logprob: -8.878294944763184
    6. '[' → logprob: -9.753294944763184
    7. ',' → logprob: -12.003294944763184
    8. '.append' → logprob: -12.128294944763184
    9. 'tmp' → logprob: -12.253294944763184
    10. '1' → logprob: -12.878294944763184

Token 793: '(),' (ID: 2547)
  Prédit: '(),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.29261133074760437
    2. '(' → logprob: -1.9176113605499268
    3. ',' → logprob: -2.4176113605499268
    4. '()' → logprob: -4.167611122131348
    5. '0' → logprob: -6.792611122131348
    6. '()
' → logprob: -7.542611122131348
    7. '(tmp' → logprob: -8.542611122131348
    8. '(-' → logprob: -9.167611122131348
    9. '(
' → logprob: -10.667611122131348
    10. ' ,' → logprob: -10.667611122131348

Token 794: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -3.547789674485102e-05
    2. ' tmp' → logprob: -10.250035285949707
    3. '	tmp' → logprob: -17.125036239624023
    4. 'temp' → logprob: -19.125036239624023
    5. '(tmp' → logprob: -19.875036239624023
    6. '/tmp' → logprob: -19.875036239624023
    7. '$tmp' → logprob: -20.000036239624023
    8. ' ' → logprob: -21.500036239624023
    9. '   ' → logprob: -21.875036239624023
    10. '_tmp' → logprob: -22.000036239624023

Token 795: ' ' (ID: 220)
  Prédit: 'XY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'XY' → logprob: -1.4765827655792236
    2. ',' → logprob: -1.6015827655792236
    3. '<|end|>' → logprob: -1.6015827655792236
    4. '#' → logprob: -1.8515827655792236
    5. 'xy' → logprob: -2.9765827655792236
    6. 'tmp' → logprob: -2.9765827655792236
    7. '   ' → logprob: -3.2265827655792236
    8. 'x' → logprob: -3.6015827655792236
    9. ' (' → logprob: -4.3515825271606445
    10. '(' → logprob: -4.9765825271606445

Token 796: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13314783573150635
    2. 'XY' → logprob: -2.508147716522217
    3. 'x' → logprob: -4.258147716522217
    4. 'xy' → logprob: -4.508147716522217
    5. '#' → logprob: -4.633147716522217
    6. 'tmp' → logprob: -5.633147716522217
    7. '       ' → logprob: -5.758147716522217
    8. ' ' → logprob: -7.883147716522217
    9. '  ' → logprob: -8.383148193359375
    10. '	' → logprob: -8.758148193359375

Token 797: ' Pr' (ID: 2284)
  Prédit: 'XY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'XY' → logprob: -0.12045212835073471
    2. 'xy' → logprob: -2.6204521656036377
    3. 'x' → logprob: -3.6204521656036377
    4. 'tmp' → logprob: -4.370451927185059
    5. '#' → logprob: -7.120451927185059
    6. 'y' → logprob: -7.870451927185059
    7. 'X' → logprob: -10.620451927185059
    8. ' XY' → logprob: -10.620451927185059
    9. '_xy' → logprob: -11.370451927185059
    10. '   ' → logprob: -11.495451927185059

Token 798: 'endre' (ID: 9574)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07889925688505173
    2. 'tmp' → logprob: -3.4538991451263428
    3. 'endre' → logprob: -3.4538991451263428
    4. 'r' → logprob: -6.078899383544922
    5. 'em' → logprob: -6.203899383544922
    6. 'et' → logprob: -6.328899383544922
    7. '#' → logprob: -6.328899383544922
    8. 'end' → logprob: -6.828899383544922
    9. 'e' → logprob: -7.703899383544922
    10. 'é' → logprob: -8.328899383544922

Token 799: ' le' (ID: 505)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.8329688906669617
    2. 'x' → logprob: -1.9579689502716064
    3. '(tmp' → logprob: -1.9579689502716064
    4. 'le' → logprob: -1.9579689502716064
    5. '<|end|>' → logprob: -3.4579689502716064
    6. '(' → logprob: -3.9579689502716064
    7. 'last' → logprob: -4.207968711853027
    8. 'the' → logprob: -4.582968711853027
    9. '[tmp' → logprob: -4.582968711853027
    10. '(x' → logprob: -4.832968711853027

Token 800: ' dernier' (ID: 27982)
  Prédit: 'dern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dern' → logprob: -0.22266298532485962
    2. 'plus' → logprob: -2.347662925720215
    3. 'tmp' → logprob: -2.472662925720215
    4. 'der' → logprob: -4.722662925720215
    5. 'prem' → logprob: -5.847662925720215
    6. 'last' → logprob: -6.347662925720215
    7. 'élé' → logprob: -7.097662925720215
    8. 'moins' → logprob: -7.097662925720215
    9. 'de' → logprob: -7.222662925720215
    10. 'reste' → logprob: -7.722662925720215

Token 801: ' nombre' (ID: 9733)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.7242318391799927
    2. 'x' → logprob: -1.2242318391799927
    3. '(tmp' → logprob: -2.349231719970703
    4. ',' → logprob: -2.974231719970703
    5. '(' → logprob: -3.599231719970703
    6. '(x' → logprob: -3.724231719970703
    7. '.' → logprob: -4.724231719970703
    8. 'élé' → logprob: -6.349231719970703
    9. 'positive' → logprob: -6.724231719970703
    10. ' (' → logprob: -6.849231719970703

Token 802: ' positif' (ID: 89008)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10548491775989532
    2. '<|end|>' → logprob: -2.980484962463379
    3. 'tmp' → logprob: -3.730484962463379
    4. 'x' → logprob: -3.980484962463379
    5. ' ,' → logprob: -6.730484962463379
    6. '(' → logprob: -6.980484962463379
    7. '#' → logprob: -6.980484962463379
    8. ',tmp' → logprob: -7.605484962463379
    9. ' (' → logprob: -7.855484962463379
    10. '(tmp' → logprob: -7.855484962463379

Token 803: ' restant' (ID: 172358)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 804: ' et' (ID: 859)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.06095070391893387
    2. '   ' → logprob: -3.435950756072998
    3. 'tmp' → logprob: -4.185950756072998
    4. '#' → logprob: -5.185950756072998
    5. 'xy' → logprob: -5.810950756072998
    6. '<|end|>' → logprob: -6.935950756072998
    7. ' x' → logprob: -7.935950756072998
    8. ' ' → logprob: -7.935950756072998
    9. 'y' → logprob: -8.18595027923584
    10. 'XY' → logprob: -8.31095027923584

Token 805: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.029271207749843597
    2. ' tmp' → logprob: -3.904271125793457
    3. 'y' → logprob: -5.029271125793457
    4. ' y' → logprob: -6.779271125793457
    5. 'x' → logprob: -7.654271125793457
    6. '(tmp' → logprob: -8.779271125793457
    7. '/tmp' → logprob: -9.404271125793457
    8. '$tmp' → logprob: -9.529271125793457
    9. '	tmp' → logprob: -10.279271125793457
    10. '[tmp' → logprob: -10.279271125793457

Token 806: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0310862064361572
    2. '   ' → logprob: -1.7810862064361572
    3. 'tmp' → logprob: -1.7810862064361572
    4. '#' → logprob: -2.2810862064361572
    5. 'x' → logprob: -2.2810862064361572
    6. ',' → logprob: -3.2810862064361572
    7. '<|end|>' → logprob: -4.031085968017578
    8. ' ' → logprob: -4.531085968017578
    9. '    
' → logprob: -5.531085968017578
    10. 'print' → logprob: -5.656085968017578

Token 807: '   ' (ID: 271)
  Prédit: 'XY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XY' → logprob: -0.022448616102337837
    2. 'tmp' → logprob: -4.147448539733887
    3. '   ' → logprob: -5.647448539733887
    4. 'xy' → logprob: -6.397448539733887
    5. 'x' → logprob: -7.022448539733887
    6. ' XY' → logprob: -8.897448539733887
    7. 'X' → logprob: -9.397448539733887
    8. '<|end|>' → logprob: -11.397448539733887
    9. '    
' → logprob: -11.647448539733887
    10. '_xy' → logprob: -12.022448539733887

Token 808: ' XY' (ID: 71987)
  Prédit: 'XY'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XY' (adapté à ' XY') → logprob: -0.043834708631038666
    2. 'tmp' → logprob: -3.293834686279297
    3. 'xy' → logprob: -5.543834686279297
    4. 'x' → logprob: -6.418834686279297
    5. '   ' → logprob: -9.293834686279297
    6. 'X' → logprob: -9.668834686279297
    7. ' XY' → logprob: -10.418834686279297
    8. '#' → logprob: -10.793834686279297
    9. 'TMP' → logprob: -12.418834686279297
    10. 'y' → logprob: -12.543834686279297

Token 809: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.2603901015827432e-05
    2. '.' → logprob: -10.875022888183594
    3. 'append' → logprob: -12.625022888183594
    4. '.app' → logprob: -15.625022888183594
    5. '.ap' → logprob: -17.000022888183594
    6. ' .' → logprob: -18.750022888183594
    7. '_append' → logprob: -19.250022888183594
    8. '.Append' → logprob: -19.375022888183594
    9. '.insert' → logprob: -19.625022888183594
    10. ' append' → logprob: -20.125022888183594

Token 810: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -3.786196975852363e-05
    2. '(' → logprob: -10.500038146972656
    3. '(x' → logprob: -11.500038146972656
    4. '(
' → logprob: -16.500038146972656
    5. '(('' → logprob: -17.625038146972656
    6. ' ' → logprob: -17.875038146972656
    7. ' ((' → logprob: -18.000038146972656
    8. '(("' → logprob: -19.500038146972656
    9. '([' → logprob: -19.625038146972656
    10. '   ' → logprob: -19.750038146972656

Token 811: 'x' (ID: 87)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.9266199160483666e-05
    2. 'x' → logprob: -10.875019073486328
    3. '(' → logprob: -15.375019073486328
    4. ' (' → logprob: -17.375019073486328
    5. '((' → logprob: -17.500019073486328
    6. '   ' → logprob: -17.875019073486328
    7. '(y' → logprob: -18.875019073486328
    8. '(
' → logprob: -20.250019073486328
    9. '[x' → logprob: -20.375019073486328
    10. '{x' → logprob: -20.500019073486328

Token 812: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0280383548888494e-06
    2. ' ,' → logprob: -14.000000953674316
    3. ',y' → logprob: -15.750000953674316
    4. ',
' → logprob: -17.250001907348633
    5. 'y' → logprob: -19.875001907348633
    6. ',

' → logprob: -20.250001907348633
    7. '',' → logprob: -20.875001907348633
    8. '`,' → logprob: -21.000001907348633
    9. '‌,' → logprob: -22.000001907348633
    10. '，' → logprob: -22.125001907348633

Token 813: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0010330495424568653
    2. ' y' → logprob: -6.876032829284668
    3. 'tmp' → logprob: -16.001033782958984
    4. '	y' → logprob: -16.376033782958984
    5. '   ' → logprob: -18.626033782958984
    6. ')y' → logprob: -19.126033782958984
    7. ''y' → logprob: -19.376033782958984
    8. '_y' → logprob: -19.626033782958984
    9. '(y' → logprob: -20.001033782958984
    10. '    ' → logprob: -20.376033782958984

Token 814: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16024118661880493
    2. ')
' → logprob: -1.9102411270141602
    3. ')
' → logprob: -11.53524112701416
    4. ')

' → logprob: -12.91024112701416
    5. ')#' → logprob: -13.28524112701416
    6. '   ' → logprob: -13.78524112701416
    7. '#' → logprob: -13.91024112701416
    8. '))' → logprob: -15.41024112701416
    9. ')`' → logprob: -15.91024112701416
    10. ')`
' → logprob: -16.035242080688477

Token 815: '   ' (ID: 271)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -7.584239938296378e-06
    2. 'temp' → logprob: -13.000007629394531
    3. ' tmp' → logprob: -13.000007629394531
    4. '
' → logprob: -14.000007629394531
    5. 'print' → logprob: -14.625007629394531
    6. 'x' → logprob: -14.625007629394531
    7. '    
' → logprob: -15.375007629394531
    8. '/tmp' → logprob: -15.500007629394531
    9. '	tmp' → logprob: -15.500007629394531
    10. '```' → logprob: -15.750007629394531

Token 816: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' (adapté à ' tmp') → logprob: -1.9361264946837764e-07
    2. 'temp' → logprob: -17.75
    3. ' tmp' → logprob: -17.875
    4. '#' → logprob: -17.875
    5. 'print' → logprob: -18.375
    6. '
' → logprob: -19.125
    7. '$tmp' → logprob: -19.25
    8. '	tmp' → logprob: -19.75
    9. '/tmp' → logprob: -20.0
    10. 'txt' → logprob: -20.0

Token 817: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141352713108063
    2. ' =' → logprob: -1.7014135122299194
    3. '-=' → logprob: -16.076414108276367
    4. ' -=' → logprob: -16.576414108276367
    5. '＝' → logprob: -16.576414108276367
    6. ',' → logprob: -17.576414108276367
    7. '.=' → logprob: -17.701414108276367
    8. '=

' → logprob: -17.826414108276367
    9. '=
' → logprob: -18.576414108276367
    10. ' ' → logprob: -18.701414108276367

Token 818: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.4391956685576588e-05
    2. ' x' → logprob: -10.625024795532227
    3. '0' → logprob: -20.000024795532227
    4. '(x' → logprob: -20.250024795532227
    5. '	x' → logprob: -20.625024795532227
    6. '{x' → logprob: -20.875024795532227
    7. 'y' → logprob: -20.875024795532227
    8. '<|end|>' → logprob: -20.875024795532227
    9. '$x' → logprob: -21.000024795532227
    10. '1' → logprob: -21.250024795532227

Token 819: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5759477615356445
    2. ' -' → logprob: -0.8259477615356445
    3. '-t' → logprob: -12.200947761535645
    4. ' ' → logprob: -13.700947761535645
    5. '-y' → logprob: -13.825947761535645
    6. '   ' → logprob: -14.450947761535645
    7. '	' → logprob: -16.200946807861328
    8. '-
' → logprob: -16.700946807861328
    9. '−' → logprob: -16.825946807861328
    10. 'tmp' → logprob: -16.825946807861328

Token 820: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -3.4121114822482923e-06
    2. ' y' → logprob: -12.625003814697266
    3. 'tmp' → logprob: -16.500003814697266
    4. '	y' → logprob: -21.750003814697266
    5. '_y' → logprob: -24.375003814697266
    6. ' tmp' → logprob: -24.750003814697266
    7. '   ' → logprob: -25.125003814697266
    8. 'Y' → logprob: -25.625003814697266
    9. 'x' → logprob: -25.750003814697266
    10. ''y' → logprob: -25.750003814697266

Token 821: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 822: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7349519729614258
    2. 'print' → logprob: -0.7349519729614258
    3. 'while' → logprob: -3.734951972961426
    4. '
' → logprob: -5.109951972961426
    5. '\n' → logprob: -5.484951972961426
    6. '```' → logprob: -5.984951972961426
    7. 'if' → logprob: -6.734951972961426
    8. '+
' → logprob: -7.109951972961426
    9. 'for' → logprob: -7.609951972961426
    10. '#
' → logprob: -7.984951972961426

Token 823: ' #' (ID: 1069)
  Prédit: 'PLUS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'PLUS' → logprob: -0.7440844178199768
    2. '#' (adapté à ' #') → logprob: -1.494084358215332
    3. 'for' → logprob: -2.119084358215332
    4. 'MIN' → logprob: -2.119084358215332
    5. 'print' → logprob: -2.994084358215332
    6. 'while' → logprob: -4.744084358215332
    7. 'plus' → logprob: -7.994084358215332
    8. 'else' → logprob: -8.369084358215332
    9. 'PRINT' → logprob: -8.744084358215332
    10. '```' → logprob: -8.869084358215332

Token 824: ' Maintenant' (ID: 163349)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0749595165252686
    2. '#' → logprob: -1.3249595165252686
    3. 'while' → logprob: -1.8249595165252686
    4. 'MIN' → logprob: -2.0749595165252686
    5. 'print' → logprob: -2.3249595165252686
    6. 'PLUS' → logprob: -4.949959754943848
    7. 'y' → logprob: -8.449959754943848
    8. 'x' → logprob: -8.574959754943848
    9. 'plus' → logprob: -8.824959754943848
    10. 'tmp' → logprob: -8.824959754943848

Token 825: ' il' (ID: 1793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09185881912708282
    2. '#' → logprob: -2.5918588638305664
    3. ',' → logprob: -4.716858863830566
    4. ' #' → logprob: -7.091858863830566
    5. '
' → logprob: -7.216858863830566
    6. '    
' → logprob: -7.841858863830566
    7. ':' → logprob: -8.216858863830566
    8. ' for' → logprob: -8.341858863830566
    9. 'while' → logprob: -8.466858863830566
    10. ' que' → logprob: -8.591858863830566

Token 826: ' ne' (ID: 453)
  Prédit: ' reste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' reste' → logprob: -0.09861095249652863
    2. 'reste' → logprob: -3.5986108779907227
    3. 'f' → logprob: -3.9736108779907227
    4. '#' → logprob: -4.223610877990723
    5. 'rest' → logprob: -4.348610877990723
    6. ' faut' → logprob: -5.098610877990723
    7. ' rest' → logprob: -5.473610877990723
    8. 'remain' → logprob: -5.973610877990723
    9. ' remains' → logprob: -6.098610877990723
    10. ' rester' → logprob: -6.473610877990723

Token 827: ' reste' (ID: 26769)
  Prédit: ' reste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reste' → logprob: -0.05144093185663223
    2. 'reste' → logprob: -4.176440715789795
    3. ' rest' → logprob: -4.551440715789795
    4. 'rest' → logprob: -4.676440715789795
    5. '#' → logprob: -4.676440715789795
    6. ' rester' → logprob: -6.801440715789795
    7. ' restent' → logprob: -6.801440715789795
    8. ' faut' → logprob: -6.926440715789795
    9. 'f' → logprob: -7.051440715789795
    10. ' resta' → logprob: -7.801440715789795

Token 828: ' que' (ID: 661)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.21878661215305328
    2. ' plus' → logprob: -2.2187867164611816
    3. 'PLUS' → logprob: -2.9687867164611816
    4. ' PLUS' → logprob: -4.218786716461182
    5. ' pas' → logprob: -5.218786716461182
    6. 'pas' → logprob: -6.093786716461182
    7. ' que' → logprob: -6.093786716461182
    8. '_plus' → logprob: -6.218786716461182
    9. '_PLUS' → logprob: -6.468786716461182
    10. ' aucun' → logprob: -6.593786716461182

Token 829: ' les' (ID: 1341)
  Prédit: 'MIN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MIN' → logprob: -0.0634445771574974
    2. 'les' → logprob: -3.9384446144104004
    3. 'un' → logprob: -4.0634446144104
    4. '1' → logprob: -4.5634446144104
    5. 'for' → logprob: -6.0634446144104
    6. 'des' → logprob: -6.0634446144104
    7. 'PLUS' → logprob: -6.3134446144104
    8. 'le' → logprob: -6.4384446144104
    9. 'la' → logprob: -7.0634446144104
    10. '#' → logprob: -7.1884446144104

Token 830: ' nég' (ID: 55805)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.15588493645191193
    2. 'n' → logprob: -2.6558849811553955
    3. 'MIN' → logprob: -3.4058849811553955
    4. 'neg' → logprob: -4.280884742736816
    5. 'A' → logprob: -4.905884742736816
    6. 'elements' → logprob: -5.030884742736816
    7. 'moins' → logprob: -5.530884742736816
    8. 'NEG' → logprob: -6.405884742736816
    9. 'nombre' → logprob: -6.530884742736816
    10. 'PLUS' → logprob: -7.155884742736816

Token 831: 'atifs' (ID: 66205)
  Prédit: 'atifs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atifs' → logprob: -0.00038825106457807124
    2. 'A' → logprob: -8.375388145446777
    3. 'atif' → logprob: -9.750388145446777
    4. 'aux' → logprob: -9.750388145446777
    5. '#' → logprob: -10.625388145446777
    6. 'a' → logprob: -13.125388145446777
    7. '```' → logprob: -13.250388145446777
    8. 'atives' → logprob: -13.375388145446777
    9. '_' → logprob: -13.625388145446777
    10. '[' → logprob: -13.750388145446777

Token 832: ' non' (ID: 2893)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4223291873931885
    2. 'while' → logprob: -1.1723291873931885
    3. ' while' → logprob: -3.4223291873931885
    4. ',' → logprob: -7.297328948974609
    5. '	while' → logprob: -7.672328948974609
    6. '#' → logprob: -7.922328948974609
    7. 'for' → logprob: -8.17232894897461
    8. '    ' → logprob: -9.54732894897461
    9. ' for' → logprob: -9.67232894897461
    10. '  ' → logprob: -9.67232894897461

Token 833: ' utilisés' (ID: 94258)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.20543719828128815
    2. ' utilisés' → logprob: -1.955437183380127
    3. 'used' → logprob: -3.205437183380127
    4. 'vid' → logprob: -6.205437183380127
    5. 'pop' → logprob: -7.455437183380127
    6. ' used' → logprob: -7.955437183380127
    7. ' utilisées' → logprob: -8.330437660217285
    8. '-util' → logprob: -9.080437660217285
    9. ' utilisé' → logprob: -9.580437660217285
    10. '_used' → logprob: -9.955437660217285

Token 834: ' au' (ID: 2791)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27207744121551514
    2. 'while' → logprob: -1.5220774412155151
    3. ' while' → logprob: -4.647077560424805
    4. '#' → logprob: -5.147077560424805
    5. 'for' → logprob: -6.772077560424805
    6. ',' → logprob: -6.772077560424805
    7. '.' → logprob: -7.397077560424805
    8. ':' → logprob: -7.647077560424805
    9. ' for' → logprob: -8.772077560424805
    10. ';' → logprob: -9.022077560424805

Token 835: ' début' (ID: 29589)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.4332035481929779
    2. 'c' → logprob: -2.6832034587860107
    3. 'x' → logprob: -3.0582034587860107
    4. 'n' → logprob: -3.4332034587860107
    5. 'tant' → logprob: -3.5582034587860107
    6. 'mil' → logprob: -3.5582034587860107
    7. 'xt' → logprob: -4.68320369720459
    8. 'tmp' → logprob: -4.68320369720459
    9. 'temps' → logprob: -4.68320369720459
    10. 'm' → logprob: -4.68320369720459

Token 836: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01605008915066719
    2. 'for' → logprob: -4.766049861907959
    3. 'while' → logprob: -5.641049861907959
    4. ' for' → logprob: -6.016049861907959
    5. ',' → logprob: -7.641049861907959
    6. ' while' → logprob: -7.891049861907959
    7. '#' → logprob: -9.141050338745117
    8. '.' → logprob: -9.516050338745117
    9. 'A' → logprob: -9.516050338745117
    10. ';' → logprob: -10.141050338745117

Token 837: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.004831668920814991
    2. 'for' → logprob: -5.379831790924072
    3. '   ' → logprob: -9.629831314086914
    4. 'i' → logprob: -9.879831314086914
    5. ' while' → logprob: -10.129831314086914
    6. '#' → logprob: -11.254831314086914
    7. 'A' → logprob: -11.504831314086914
    8. 'x' → logprob: -11.754831314086914
    9. 'tmp' → logprob: -12.129831314086914
    10. 'y' → logprob: -12.254831314086914

Token 838: ' N' (ID: 478)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.030040191486477852
    2. 'for' → logprob: -3.5300402641296387
    3. ' while' → logprob: -8.78003978729248
    4. '   ' → logprob: -10.15503978729248
    5. '```' → logprob: -10.40503978729248
    6. '#' → logprob: -10.53003978729248
    7. 'A' → logprob: -11.28003978729248
    8. 'x' → logprob: -11.53003978729248
    9. '
' → logprob: -12.65503978729248
    10. ' for' → logprob: -12.78003978729248

Token 839: ' =' (ID: 314)
  Prédit: 'eg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eg' → logprob: -1.0008963346481323
    2. '=' → logprob: -1.6258963346481323
    3. 'for' → logprob: -1.7508963346481323
    4. ' =' → logprob: -2.250896453857422
    5. ' -=' → logprob: -3.375896453857422
    6. '-=' → logprob: -3.375896453857422
    7. '-' → logprob: -3.875896453857422
    8. '#' → logprob: -4.750896453857422
    9. 'EG' → logprob: -4.875896453857422
    10. '_MINUS' → logprob: -5.000896453857422

Token 840: ' len' (ID: 4631)
  Prédit: 'MIN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MIN' → logprob: -0.0025634109042584896
    2. 'PLUS' → logprob: -6.3775634765625
    3. 'len' → logprob: -7.1275634765625
    4. ' MIN' → logprob: -10.8775634765625
    5. '0' → logprob: -11.2525634765625
    6. 'LEN' → logprob: -11.6275634765625
    7. 'plus' → logprob: -12.5025634765625
    8. 'minus' → logprob: -12.6275634765625
    9. 'N' → logprob: -13.1275634765625
    10. 'MAX' → logprob: -13.5025634765625

Token 841: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -7.584239938296378e-06
    2. 'A' → logprob: -11.875007629394531
    3. '(' → logprob: -14.750007629394531
    4. '(
' → logprob: -17.12500762939453
    5. '(X' → logprob: -17.12500762939453
    6. '(N' → logprob: -17.50000762939453
    7. '(a' → logprob: -18.25000762939453
    8. '((' → logprob: -18.50000762939453
    9. '[A' → logprob: -18.50000762939453
    10. '#' → logprob: -19.00000762939453

Token 842: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006845565512776375
    2. ' )' → logprob: -8.37568473815918
    3. ')-' → logprob: -8.50068473815918
    4. ')
' → logprob: -8.50068473815918
    5. ')#' → logprob: -11.37568473815918
    6. '#' → logprob: -11.62568473815918
    7. ')+' → logprob: -12.25068473815918
    8. '-' → logprob: -12.50068473815918
    9. '-)' → logprob: -12.75068473815918
    10. '   ' → logprob: -12.75068473815918

Token 843: ' ' (ID: 220)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.055923063308000565
    2. 'for' → logprob: -3.1809229850769043
    3. '#' → logprob: -4.555922985076904
    4. '   ' → logprob: -6.555922985076904
    5. ' while' → logprob: -8.055923461914062
    6. 'tmp' → logprob: -8.805923461914062
    7. 'x' → logprob: -9.430923461914062
    8. '    
' → logprob: -9.555923461914062
    9. '+' → logprob: -9.805923461914062
    10. 'N' → logprob: -9.805923461914062

Token 844: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.25994253158569336
    2. 'for' → logprob: -1.6349425315856934
    3. '#' → logprob: -3.7599425315856934
    4. 'MIN' → logprob: -5.509942531585693
    5. 'tmp' → logprob: -5.634942531585693
    6. 'A' → logprob: -6.884942531585693
    7. 'minus' → logprob: -7.634942531585693
    8. 'N' → logprob: -8.009943008422852
    9. 'i' → logprob: -8.384943008422852
    10. 'PLUS' → logprob: -8.509943008422852

Token 845: ' Met' (ID: 7227)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.40094947814941406
    2. 'for' → logprob: -1.650949478149414
    3. '#' → logprob: -2.025949478149414
    4. 'tmp' → logprob: -5.400949478149414
    5. 'N' → logprob: -7.150949478149414
    6. 'x' → logprob: -7.775949478149414
    7. 'PLUS' → logprob: -8.775949478149414
    8. ' while' → logprob: -9.025949478149414
    9. 'MIN' → logprob: -9.150949478149414
    10. '0' → logprob: -9.650949478149414

Token 846: ' à' (ID: 1221)
  Prédit: 'tre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tre' → logprob: -0.11742738634347916
    2. 'tmp' → logprob: -2.617427349090576
    3. 'trer' → logprob: -4.742427349090576
    4. 'ier' → logprob: -5.117427349090576
    5. 'urer' → logprob: -6.117427349090576
    6. 't' → logprob: -6.117427349090576
    7. '#' → logprob: -6.242427349090576
    8. 'tr' → logprob: -6.617427349090576
    9. 'tré' → logprob: -6.617427349090576
    10. 'N' → logprob: -7.117427349090576

Token 847: ' jour' (ID: 8379)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.4486629366874695
    2. '0' → logprob: -1.0736629962921143
    3. 'N' → logprob: -4.073662757873535
    4. 'jour' → logprob: -6.823662757873535
    5. '-' → logprob: -7.573662757873535
    6. '1' → logprob: -8.198662757873535
    7. 'A' → logprob: -8.198662757873535
    8. ' jour' → logprob: -9.198662757873535
    9. '#' → logprob: -9.448662757873535
    10. 'jou' → logprob: -10.073662757873535

Token 848: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.08812980353832245
    2. '#' → logprob: -3.338129758834839
    3. 'len' → logprob: -3.463129758834839
    4. 'la' → logprob: -4.963129997253418
    5. 'A' → logprob: -5.213129997253418
    6. 'tmp' → logprob: -6.463129997253418
    7. 'le' → logprob: -6.463129997253418
    8. 'l' → logprob: -7.463129997253418
    9. '0' → logprob: -8.463129997253418
    10. '(N' → logprob: -8.588129997253418

Token 849: ' au' (ID: 2791)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.38419926166534424
    2. '#' → logprob: -1.6341992616653442
    3. '=' → logprob: -2.5091991424560547
    4. '<|end|>' → logprob: -3.5091991424560547
    5. 'for' → logprob: -5.634199142456055
    6. 'N' → logprob: -6.384199142456055
    7. ' =' → logprob: -6.884199142456055
    8. '-N' → logprob: -7.009199142456055
    9. ' -' → logprob: -7.009199142456055
    10. '-=' → logprob: -7.759199142456055

Token 850: ' nombre' (ID: 9733)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.1597284972667694
    2. 'N' → logprob: -2.284728527069092
    3. '0' → logprob: -3.159728527069092
    4. '-' → logprob: -6.284728527069092
    5. '#' → logprob: -7.909728527069092
    6. 'moins' → logprob: -8.534728050231934
    7. '(len' → logprob: -8.909728050231934
    8. '-N' → logprob: -9.034728050231934
    9. '1' → logprob: -9.159728050231934
    10. 'tmp' → logprob: -9.284728050231934

Token 851: ' d' (ID: 272)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.170106053352356
    2. 'des' → logprob: -1.795106053352356
    3. 'len' → logprob: -1.795106053352356
    4. '(A' → logprob: -2.4201059341430664
    5. '(len' → logprob: -2.5451059341430664
    6. '=len' → logprob: -2.7951059341430664
    7. 'de' → logprob: -3.5451059341430664
    8. '#' → logprob: -3.5451059341430664
    9. 'rest' → logprob: -3.7951059341430664
    10. 'A' → logprob: -4.545105934143066

Token 852: ''' (ID: 6)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.12937116622924805
    2. '(A' → logprob: -2.129371166229248
    3. 'len' → logprob: -7.379371166229248
    4. 'N' → logprob: -7.629371166229248
    5. '-' → logprob: -7.879371166229248
    6. '#' → logprob: -8.129371643066406
    7. 'of' → logprob: -9.379371643066406
    8. 'neg' → logprob: -9.629371643066406
    9. 'for' → logprob: -10.004371643066406
    10. '(len' → logprob: -10.379371643066406

Token 853: 'élé' (ID: 15228)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0006659718346782029
    2. '(A' → logprob: -8.250665664672852
    3. 'neg' → logprob: -9.250665664672852
    4. '-' → logprob: -9.375665664672852
    5. 'N' → logprob: -9.875665664672852
    6. 'len' → logprob: -10.250665664672852
    7. 'minus' → logprob: -10.375665664672852
    8. '```' → logprob: -11.125665664672852
    9. 'negative' → logprob: -11.375665664672852
    10. 'moins' → logprob: -11.875665664672852

Token 854: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.03939119353890419
    2. 'ment' → logprob: -3.289391279220581
    3. 'm' → logprob: -7.789391040802002
    4. 'éments' → logprob: -7.789391040802002
    5. 'ts' → logprob: -8.53939151763916
    6. 't' → logprob: -8.91439151763916
    7. 'mé' → logprob: -10.03939151763916
    8. 'ements' → logprob: -10.41439151763916
    9. '#' → logprob: -10.66439151763916
    10. 'nts' → logprob: -10.66439151763916

Token 855: ' rest' (ID: 2867)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.9610292911529541
    2. '#' → logprob: -1.211029291152954
    3. 'for' → logprob: -2.086029291152954
    4. 'rest' → logprob: -2.461029291152954
    5. '=' → logprob: -3.461029291152954
    6. '-' → logprob: -4.086029052734375
    7. 'remaining' → logprob: -4.336029052734375
    8. '(A' → logprob: -4.836029052734375
    9. 'neg' → logprob: -5.086029052734375
    10. '(' → logprob: -5.711029052734375

Token 856: 'ants' (ID: 2027)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.414899617433548
    2. 'enant' → logprob: -1.6648995876312256
    3. '=A' → logprob: -3.5398995876312256
    4. 'ent' → logprob: -3.9148995876312256
    5. 'non' → logprob: -4.539899826049805
    6. 'nant' → logprob: -4.539899826049805
    7. 'ant' → logprob: -4.914899826049805
    8. 'nants' → logprob: -5.039899826049805
    9. 'avant' → logprob: -5.164899826049805
    10. 'endant' → logprob: -5.164899826049805

Token 857: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.052196260541677475
    2. 'while' → logprob: -3.5521962642669678
    3. '#' → logprob: -4.677196025848389
    4. 'i' → logprob: -5.177196025848389
    5. 'tmp' → logprob: -5.552196025848389
    6. 'PLUS' → logprob: -6.802196025848389
    7. 'A' → logprob: -7.052196025848389
    8. 'MIN' → logprob: -7.677196025848389
    9. 'XY' → logprob: -8.302196502685547
    10. 'N' → logprob: -8.427196502685547

Token 858: 'ce' (ID: 400)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.14305099844932556
    2. 'MIN' → logprob: -2.6430509090423584
    3. 'len' → logprob: -3.3930509090423584
    4. 'neg' → logprob: -4.5180511474609375
    5. 'A' → logprob: -5.5180511474609375
    6. 'NEG' → logprob: -6.1430511474609375
    7. '#' → logprob: -6.2680511474609375
    8. 'negative' → logprob: -7.0180511474609375
    9. 'moins' → logprob: -7.1430511474609375
    10. '-' → logprob: -7.2680511474609375

Token 859: ' sont' (ID: 5242)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8765444755554199
    2. '#' → logprob: -1.50154447555542
    3. '=' → logprob: -2.00154447555542
    4. ']' → logprob: -3.00154447555542
    5. '[' → logprob: -3.50154447555542
    6. '.' → logprob: -3.62654447555542
    7. 'x' → logprob: -4.12654447555542
    8. 'A' → logprob: -4.25154447555542
    9. '```' → logprob: -4.37654447555542
    10. ' =' → logprob: -4.75154447555542

Token 860: ' tous' (ID: 10688)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.0676313638687134
    2. 'des' → logprob: -1.5676313638687134
    3. '0' → logprob: -1.9426313638687134
    4. 'neg' → logprob: -2.567631244659424
    5. 'les' → logprob: -2.692631244659424
    6. '-' → logprob: -3.567631244659424
    7. 'len' → logprob: -3.817631244659424
    8. 'la' → logprob: -3.817631244659424
    9. ')' → logprob: -4.067631244659424
    10. '[' → logprob: -4.817631244659424

Token 861: ' nég' (ID: 55805)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.8529745936393738
    2. 'des' → logprob: -1.3529746532440186
    3. 'neg' → logprob: -1.6029746532440186
    4. 'les' → logprob: -3.2279746532440186
    5. ' des' → logprob: -4.1029744148254395
    6. '[' → logprob: -4.6029744148254395
    7. ' A' → logprob: -4.7279744148254395
    8. '#' → logprob: -4.8529744148254395
    9. ' nég' → logprob: -5.7279744148254395
    10. '(A' → logprob: -5.8529744148254395

Token 862: 'atifs' (ID: 66205)
  Prédit: 'atifs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atifs' → logprob: -0.041649915277957916
    2. 'gat' → logprob: -3.41664981842041
    3. 'ég' → logprob: -6.04164981842041
    4. 'ativement' → logprob: -7.41664981842041
    5. 'eg' → logprob: -7.66664981842041
    6. '__' → logprob: -7.79164981842041
    7. 'A' → logprob: -7.79164981842041
    8. 'g' → logprob: -7.79164981842041
    9. 'és' → logprob: -8.04164981842041
    10. '   ' → logprob: -8.16664981842041

Token 863: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004959598300047219
    2. ')
' → logprob: -8.500495910644531
    3. '   ' → logprob: -9.500495910644531
    4. '-' → logprob: -9.625495910644531
    5. ' -' → logprob: -10.250495910644531
    6. '#' → logprob: -10.250495910644531
    7. ' )' → logprob: -10.875495910644531
    8. 'A' → logprob: -11.125495910644531
    9. ')#' → logprob: -11.250495910644531
    10. '-)' → logprob: -11.750495910644531

Token 864: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08810120075941086
    2. 'while' → logprob: -2.5881011486053467
    3. 'i' → logprob: -5.088101387023926
    4. '#' → logprob: -6.213101387023926
    5. 'tmp' → logprob: -7.463101387023926
    6. 'A' → logprob: -8.463101387023926
    7. 'x' → logprob: -9.338101387023926
    8. ' for' → logprob: -10.213101387023926
    9. '```' → logprob: -10.713101387023926
    10. 'N' → logprob: -10.963101387023926

Token 865: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.267154335975647
    2. 'while' → logprob: -1.517154335975647
    3. 'tmp' → logprob: -4.642154216766357
    4. 'i' → logprob: -5.517154216766357
    5. 'x' → logprob: -7.517154216766357
    6. 'A' → logprob: -8.017154693603516
    7. '#' (adapté à ' #') → logprob: -8.142154693603516
    8. 'y' → logprob: -9.017154693603516
    9. 'PLUS' → logprob: -10.267154693603516
    10. 'plus' → logprob: -10.392154693603516

Token 866: ' Comm' (ID: 57464)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2527645528316498
    2. 'for' → logprob: -1.5027645826339722
    3. 'tmp' → logprob: -7.252764701843262
    4. 'x' → logprob: -9.752764701843262
    5. 'i' → logprob: -10.252764701843262
    6. '#' → logprob: -11.377764701843262
    7. 'y' → logprob: -11.627764701843262
    8. ' while' → logprob: -12.127764701843262
    9. '```' → logprob: -12.627764701843262
    10. ' for' → logprob: -14.252764701843262

Token 867: 'encer' (ID: 19726)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.170827254652977
    2. 'ence' → logprob: -2.4208271503448486
    3. 'encer' → logprob: -2.7958271503448486
    4. 'enter' → logprob: -5.420827388763428
    5. 'er' → logprob: -7.170827388763428
    6. '#' → logprob: -7.670827388763428
    7. 'e' → logprob: -7.920827388763428
    8. 'ancer' → logprob: -8.42082691192627
    9. 'ont' → logprob: -9.54582691192627
    10. 'ment' → logprob: -9.67082691192627

Token 868: ' à' (ID: 1221)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7519840598106384
    2. 'while' → logprob: -1.0019841194152832
    3. '   ' → logprob: -1.8769841194152832
    4. 'i' → logprob: -5.751984119415283
    5. 'a' → logprob: -6.876984119415283
    6. 'from' → logprob: -7.001984119415283
    7. ' for' → logprob: -7.126984119415283
    8. ' while' → logprob: -7.501984119415283
    9. '#' → logprob: -7.501984119415283
    10. 'range' → logprob: -7.876984119415283

Token 869: ' partir' (ID: 12100)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.048211876302957535
    2. 'i' → logprob: -3.5482118129730225
    3. 'while' → logprob: -4.298212051391602
    4. 'tmp' → logprob: -5.798212051391602
    5. 'x' → logprob: -7.423212051391602
    6. 'range' → logprob: -7.923212051391602
    7. '#' → logprob: -8.923212051391602
    8. '0' → logprob: -9.173212051391602
    9. 'a' → logprob: -9.548212051391602
    10. ' for' → logprob: -9.798212051391602

Token 870: ' du' (ID: 1462)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6101935505867004
    2. '0' → logprob: -1.8601934909820557
    3. '=' → logprob: -1.9851934909820557
    4. 'de' → logprob: -2.9851934909820557
    5. '(' → logprob: -3.1101934909820557
    6. '   ' → logprob: -3.9851934909820557
    7. 'i' → logprob: -4.360193729400635
    8. 'for' → logprob: -4.610193729400635
    9. '_' → logprob: -4.985193729400635
    10. 'N' → logprob: -5.735193729400635

Token 871: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18501578271389008
    2. '1' → logprob: -1.8100157976150513
    3. 'N' → logprob: -5.685015678405762
    4. 'A' → logprob: -7.185015678405762
    5. 'for' → logprob: -7.685015678405762
    6. '-' → logprob: -8.560015678405762
    7. 'len' → logprob: -8.810015678405762
    8. '#' → logprob: -9.435015678405762
    9. 'while' → logprob: -9.810015678405762
    10. 'range' → logprob: -10.560015678405762

Token 872: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6421353816986084
    2. '1' → logprob: -0.7671353816986084
    3. 'N' → logprob: -4.7671356201171875
    4. '-' → logprob: -7.8921356201171875
    5. 'len' → logprob: -8.017135620117188
    6. 'A' → logprob: -9.267135620117188
    7. 'for' → logprob: -9.392135620117188
    8. '#' → logprob: -10.517135620117188
    9. 'tmp' → logprob: -11.267135620117188
    10. 'i' → logprob: -11.892135620117188

Token 873: 'ème' (ID: 9767)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2826666235923767
    2. ' for' → logprob: -1.9076666831970215
    3. '<|end|>' → logprob: -2.7826666831970215
    4. 'while' → logprob: -4.2826666831970215
    5. 'nd' → logprob: -4.4076666831970215
    6. '<|end|>' → logprob: -6.1576666831970215
    7. ' while' → logprob: -6.6576666831970215
    8. '#' → logprob: -7.1576666831970215
    9. '
' → logprob: -7.4076666831970215
    10. 'ième' → logprob: -7.4076666831970215

Token 874: ' plus' (ID: 2932)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10196787863969803
    2. 'element' → logprob: -3.6019678115844727
    3. 'A' → logprob: -3.9769678115844727
    4. '_' → logprob: -4.476967811584473
    5. 'i' → logprob: -4.851967811584473
    6. ' for' → logprob: -4.976967811584473
    7. 'index' → logprob: -5.726967811584473
    8. 'élé' → logprob: -5.851967811584473
    9. 'a' → logprob: -6.101967811584473
    10. 'idx' → logprob: -6.476967811584473

Token 875: ' petit' (ID: 20577)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.8697208762168884
    2. 'grand' → logprob: -0.9947208762168884
    3. ' petit' → logprob: -2.744720935821533
    4. 'élé' → logprob: -3.494720935821533
    5. 'for' → logprob: -3.494720935821533
    6. '0' → logprob: -3.869720935821533
    7. '```' → logprob: -4.119720935821533
    8. '#' → logprob: -4.369720935821533
    9. 'plus' → logprob: -5.119720935821533
    10. ' grand' → logprob: -5.244720935821533

Token 876: ' élément' (ID: 99627)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2119704484939575
    2. 'élé' → logprob: -1.2119704484939575
    3. 'element' → logprob: -1.4619704484939575
    4. 'A' → logprob: -2.461970329284668
    5. ' élément' → logprob: -3.836970329284668
    6. ' for' → logprob: -3.836970329284668
    7. 'a' → logprob: -4.461970329284668
    8. 'i' → logprob: -4.586970329284668
    9. ' element' → logprob: -5.336970329284668
    10. '#' → logprob: -5.711970329284668

Token 877: ' puisque' (ID: 66135)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05657553672790527
    2. '   ' → logprob: -3.1815755367279053
    3. ' for' → logprob: -4.681575775146484
    4. 'i' → logprob: -5.681575775146484
    5. '(' → logprob: -8.306575775146484
    6. ',' → logprob: -8.681575775146484
    7. ' i' → logprob: -9.681575775146484
    8. '	for' → logprob: -9.931575775146484
    9. 'idx' → logprob: -10.056575775146484
    10. '[' → logprob: -10.431575775146484

Token 878: ' le' (ID: 505)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.518661379814148
    2. 'N' → logprob: -1.768661379814148
    3. '1' → logprob: -2.3936614990234375
    4. '0' → logprob: -2.7686614990234375
    5. 'tmp' → logprob: -3.2686614990234375
    6. ' A' → logprob: -4.0186614990234375
    7. ' N' → logprob: -4.8936614990234375
    8. 'len' → logprob: -4.8936614990234375
    9. ' ' → logprob: -5.6436614990234375
    10. '#' → logprob: -6.5186614990234375

Token 879: ' plus' (ID: 2932)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.3538963496685028
    2. 'for' → logprob: -2.103896379470825
    3. '0' → logprob: -2.978896379470825
    4. '#' → logprob: -3.103896379470825
    5. 'first' → logprob: -4.228896141052246
    6. 'A' → logprob: -4.353896141052246
    7. 'x' → logprob: -4.478896141052246
    8. 'prem' → logprob: -4.853896141052246
    9. ' tmp' → logprob: -5.103896141052246
    10. ' first' → logprob: -5.228896141052246

Token 880: ' petit' (ID: 20577)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.005237668287009001
    2. ' petit' → logprob: -6.505237579345703
    3. 'grand' → logprob: -7.130237579345703
    4. '```' → logprob: -7.380237579345703
    5. '[' → logprob: -7.755237579345703
    6. 'small' → logprob: -7.755237579345703
    7. '#' → logprob: -8.255237579345703
    8. 'prem' → logprob: -8.380237579345703
    9. 'élé' → logprob: -8.505237579345703
    10. 'Petit' → logprob: -8.755237579345703

Token 881: ' a' (ID: 261)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25734132528305054
    2. 'a' → logprob: -3.0073413848876953
    3. '<|end|>' → logprob: -3.5073413848876953
    4. ' for' → logprob: -3.7573413848876953
    5. '=' → logprob: -3.7573413848876953
    6. 'élé' → logprob: -4.007341384887695
    7. ' =' → logprob: -4.257341384887695
    8. 'idx' → logprob: -4.257341384887695
    9. 'A' → logprob: -4.757341384887695
    10. 'element' → logprob: -4.882341384887695

Token 882: ' déjà' (ID: 21229)
  Prédit: 'été'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'été' → logprob: -0.5211135745048523
    2. 'dé' → logprob: -1.521113634109497
    3. 'tmp' → logprob: -2.271113634109497
    4. '#' → logprob: -3.646113634109497
    5. ' été' → logprob: -3.646113634109497
    6. 'already' → logprob: -4.396113395690918
    7. 'been' → logprob: -4.771113395690918
    8. 'd' → logprob: -6.146113395690918
    9. ' déjà' → logprob: -6.396113395690918
    10. 'temp' → logprob: -7.021113395690918

Token 883: ' été' (ID: 9799)
  Prédit: 'été'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'été' → logprob: -0.5383965373039246
    2. 'been' → logprob: -1.0383965969085693
    3. 'tmp' → logprob: -3.1633965969085693
    4. ' été' → logprob: -4.78839635848999
    5. 'être' → logprob: -5.16339635848999
    6. ' been' → logprob: -6.28839635848999
    7. 'dé' → logprob: -6.28839635848999
    8. 'ét' → logprob: -7.66339635848999
    9. 'êt' → logprob: -7.78839635848999
    10. 'temp' → logprob: -8.288396835327148

Token 884: ' utilisé' (ID: 53138)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.059403322637081146
    2. 'tmp' → logprob: -3.934403419494629
    3. 'trait' → logprob: -4.559403419494629
    4. 'used' → logprob: -5.059403419494629
    5. 'ret' → logprob: -5.434403419494629
    6. 'pop' → logprob: -5.434403419494629
    7. 'pass' → logprob: -6.184403419494629
    8. '#' → logprob: -6.184403419494629
    9. 'temp' → logprob: -6.559403419494629
    10. 'cons' → logprob: -6.684403419494629

Token 885: ' comme' (ID: 7971)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00010735770774772391
    2. 'i' → logprob: -9.250107765197754
    3. ' for' → logprob: -12.250107765197754
    4. '   ' → logprob: -12.750107765197754
    5. '
' → logprob: -13.750107765197754
    6. '```' → logprob: -14.125107765197754
    7. 'range' → logprob: -14.375107765197754
    8. 'from' → logprob: -15.250107765197754
    9. '#' → logprob: -15.500107765197754
    10. '1' → logprob: -15.625107765197754

Token 886: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.007977684028446674
    2. 'y' → logprob: -5.507977485656738
    3. 'x' → logprob: -5.882977485656738
    4. 'base' → logprob: -7.257977485656738
    5. 'pivot' → logprob: -8.507977485656738
    6. 'a' → logprob: -9.632977485656738
    7. 'xy' → logprob: -10.632977485656738
    8. 'start' → logprob: -11.132977485656738
    9. '```' → logprob: -11.382977485656738
    10. 'index' → logprob: -11.757977485656738

Token 887: ' initial' (ID: 4871)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0008517975220456719
    2. 'i' → logprob: -7.750851631164551
    3. '   ' → logprob: -8.37585163116455
    4. '
' → logprob: -9.62585163116455
    5. ' for' → logprob: -10.00085163116455
    6. '1' → logprob: -10.37585163116455
    7. 'range' → logprob: -10.75085163116455
    8. '2' → logprob: -10.87585163116455
    9. '```' → logprob: -13.75085163116455
    10. '0' → logprob: -14.00085163116455

Token 888: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0014309515245258808
    2. 'i' → logprob: -6.626430988311768
    3. ' for' → logprob: -10.25143051147461
    4. '
' → logprob: -10.25143051147461
    5. '   ' → logprob: -10.62643051147461
    6. 'range' → logprob: -13.00143051147461
    7. '2' → logprob: -13.75143051147461
    8. '1' → logprob: -13.75143051147461
    9. 'idx' → logprob: -14.50143051147461
    10. 'from' → logprob: -14.75143051147461

Token 889: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003364158037584275
    2. 'i' → logprob: -8.000336647033691
    3. ' for' → logprob: -14.500336647033691
    4. '
' → logprob: -15.875336647033691
    5. '```' → logprob: -16.250335693359375
    6. 'from' → logprob: -16.625335693359375
    7. 'idx' → logprob: -17.125335693359375
    8. 'while' → logprob: -17.250335693359375
    9. 'f' → logprob: -17.500335693359375
    10. '   ' → logprob: -17.750335693359375

Token 890: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.005937448237091303
    2. 'i' → logprob: -5.130937576293945
    3. ' for' → logprob: -12.630937576293945
    4. '
' → logprob: -13.505937576293945
    5. '```' → logprob: -13.880937576293945
    6. 'idx' → logprob: -14.130937576293945
    7. 'from' → logprob: -14.380937576293945
    8. '   ' → logprob: -14.630937576293945
    9. 'start' → logprob: -15.630937576293945
    10. 'range' → logprob: -15.755937576293945

Token 891: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0044583664275705814
    2. ' i' → logprob: -5.504458427429199
    3. 'a' → logprob: -8.0044584274292
    4. '_i' → logprob: -11.5044584274292
    5. 'y' → logprob: -11.6294584274292
    6. '	i' → logprob: -11.6294584274292
    7. 'idx' → logprob: -12.3794584274292
    8. 'j' → logprob: -12.7544584274292
    9. 'x' → logprob: -12.8794584274292
    10. '_' → logprob: -13.1294584274292

Token 892: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10059450566768646
    2. 'in' → logprob: -2.3505945205688477
    3. ' ' → logprob: -8.225594520568848
    4. '1' → logprob: -9.725594520568848
    5. '2' → logprob: -11.225594520568848
    6. ' i' → logprob: -11.600594520568848
    7. 'range' → logprob: -11.600594520568848
    8. 'i' → logprob: -12.100594520568848
    9. '	in' → logprob: -12.225594520568848
    10. ' ' → logprob: -12.350594520568848

Token 893: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014173848554491997
    2. ' range' → logprob: -4.264173984527588
    3. ' ' → logprob: -12.38917350769043
    4. '1' → logprob: -12.88917350769043
    5. '  ' → logprob: -13.63917350769043
    6. '   ' → logprob: -13.63917350769043
    7. 'in' → logprob: -14.13917350769043
    8. ' in' → logprob: -15.26417350769043
    9. '	range' → logprob: -15.76417350769043
    10. '    ' → logprob: -16.01417350769043

Token 894: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009125363430939615
    2. '1' → logprob: -7.000912666320801
    3. ' (' → logprob: -15.1259126663208
    4. '(N' → logprob: -15.2509126663208
    5. '2' → logprob: -15.5009126663208
    6. '(
' → logprob: -15.6259126663208
    7. ',' → logprob: -16.000911712646484
    8. '   ' → logprob: -16.750911712646484
    9. '[' → logprob: -17.250911712646484
    10. 'N' → logprob: -18.375911712646484

Token 895: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003623000578954816
    2. 'N' → logprob: -5.628623008728027
    3. '0' → logprob: -11.503623008728027
    4. '2' → logprob: -12.003623008728027
    5. '(' → logprob: -12.878623008728027
    6. 'len' → logprob: -12.878623008728027
    7. '(N' → logprob: -14.253623008728027
    8. ' ' → logprob: -15.128623008728027
    9. ' N' → logprob: -16.50362205505371
    10. 'MIN' → logprob: -16.75362205505371

Token 896: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007298263721168041
    2. ',N' → logprob: -5.132298469543457
    3. ' ,' → logprob: -6.632298469543457
    4. ',len' → logprob: -10.382298469543457
    5. 'N' → logprob: -11.382298469543457
    6. ',n' → logprob: -11.882298469543457
    7. ',
' → logprob: -13.632298469543457
    8. ' N' → logprob: -14.632298469543457
    9. '   ' → logprob: -16.00729751586914
    10. '(N' → logprob: -16.13229751586914

Token 897: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -8.721228368813172e-05
    2. ' N' → logprob: -9.500086784362793
    3. 'len' → logprob: -11.375086784362793
    4. '   ' → logprob: -14.625086784362793
    5. '	N' → logprob: -16.62508773803711
    6. 'n' → logprob: -16.62508773803711
    7. ' ' → logprob: -16.62508773803711
    8. ' len' → logprob: -16.75008773803711
    9. 'MIN' → logprob: -17.00008773803711
    10. '  ' → logprob: -18.12508773803711

Token 898: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.47412437200546265
    2. '):' → logprob: -0.9741243720054626
    3. ')' → logprob: -11.34912395477295
    4. '   ' → logprob: -11.97412395477295
    5. '):
' → logprob: -11.97412395477295
    6. ' ):' → logprob: -11.97412395477295
    7. ' ):
' → logprob: -12.22412395477295
    8. ':' → logprob: -12.22412395477295
    9. ',' → logprob: -12.34912395477295
    10. '-' → logprob: -13.59912395477295

Token 899: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010059093125164509
    2. '       ' → logprob: -4.635058879852295
    3. 'x' → logprob: -8.510059356689453
    4. ' x' → logprob: -9.260059356689453
    5. '	x' → logprob: -12.885059356689453
    6. '    ' → logprob: -13.760059356689453
    7. '     ' → logprob: -14.260059356689453
    8. ' ' → logprob: -14.885059356689453
    9. '```' → logprob: -14.885059356689453
    10. ',' → logprob: -14.885059356689453

Token 900: ' #' (ID: 1069)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0017378974007442594
    2. ' x' → logprob: -7.00173807144165
    3. '   ' → logprob: -7.62673807144165
    4. '       ' → logprob: -8.001737594604492
    5. '	x' → logprob: -12.876737594604492
    6. '           ' → logprob: -15.001737594604492
    7. 'y' → logprob: -15.251737594604492
    8. '    ' → logprob: -15.626737594604492
    9. 'tmp' → logprob: -15.751737594604492
    10. '        ' → logprob: -16.376737594604492

Token 901: ' Pr' (ID: 2284)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00035369666875340044
    2. ' x' → logprob: -8.125353813171387
    3. '   ' → logprob: -10.250353813171387
    4. 'y' → logprob: -11.000353813171387
    5. '       ' → logprob: -12.750353813171387
    6. 'a' → logprob: -13.250353813171387
    7. 'tmp' → logprob: -15.125353813171387
    8. '	x' → logprob: -15.375353813171387
    9. '           ' → logprob: -16.25035285949707
    10. '
' → logprob: -16.25035285949707

Token 902: 'endre' (ID: 9574)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.05529081076383591
    2. '#' → logprob: -3.180290699005127
    3. 'e' → logprob: -5.305290699005127
    4. '   ' → logprob: -6.055290699005127
    5. 'x' → logprob: -6.680290699005127
    6. 'é' → logprob: -7.055290699005127
    7. 'et' → logprob: -8.055291175842285
    8. 'a' → logprob: -8.680291175842285
    9. 'ep' → logprob: -8.680291175842285
    10. 'ed' → logprob: -8.680291175842285

Token 903: ' chacun' (ID: 52136)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.06214066222310066
    2. 'A' → logprob: -3.562140703201294
    3. 'tmp' → logprob: -3.562140703201294
    4. 'a' → logprob: -6.062140464782715
    5. ' x' → logprob: -7.687140464782715
    6. 'y' → logprob: -8.312140464782715
    7. '   ' → logprob: -8.437140464782715
    8. ' A' → logprob: -9.437140464782715
    9. ' tmp' → logprob: -10.062140464782715
    10. '(x' → logprob: -10.562140464782715

Token 904: ' des' (ID: 731)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7503724098205566
    2. ',' → logprob: -1.2503724098205566
    3. 'A' → logprob: -1.6253724098205566
    4. 'tmp' → logprob: -5.000372409820557
    5. 'y' → logprob: -5.125372409820557
    6. '   ' → logprob: -5.250372409820557
    7. ' A' → logprob: -5.375372409820557
    8. ' x' → logprob: -5.625372409820557
    9. '(A' → logprob: -5.625372409820557
    10. ' ' → logprob: -5.875372409820557

Token 905: ' éléments' (ID: 57375)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00987189169973135
    2. ' A' → logprob: -5.384871959686279
    3. 'a' → logprob: -6.134871959686279
    4. 'tmp' → logprob: -6.384871959686279
    5. 'x' → logprob: -7.509871959686279
    6. 'y' → logprob: -8.009871482849121
    7. '(A' → logprob: -8.509871482849121
    8. 'i' → logprob: -9.384871482849121
    9. ' ' → logprob: -10.634871482849121
    10. ' a' → logprob: -11.009871482849121

Token 906: ' restant' (ID: 172358)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8261739611625671
    2. 'A' → logprob: -0.8261739611625671
    3. 'x' → logprob: -2.826174020767212
    4. 'y' → logprob: -4.076173782348633
    5. ' A' → logprob: -4.701173782348633
    6. '   ' → logprob: -4.951173782348633
    7. 'de' → logprob: -5.076173782348633
    8. 'a' → logprob: -5.326173782348633
    9. '(A' → logprob: -5.951173782348633
    10. ' =' → logprob: -6.576173782348633

Token 907: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4622173011302948
    2. '   ' → logprob: -1.7122173309326172
    3. 'A' → logprob: -2.212217330932617
    4. ' A' → logprob: -3.462217330932617
    5. 'x' → logprob: -4.212217330932617
    6. '(A' → logprob: -4.712217330932617
    7. ' ,' → logprob: -5.587217330932617
    8. ' =' → logprob: -5.712217330932617
    9. ' (' → logprob: -5.712217330932617
    10. '       ' → logprob: -6.212217330932617

Token 908: ' la' (ID: 557)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.008724482730031013
    2. ' A' → logprob: -4.758724689483643
    3. '(A' → logprob: -10.383724212646484
    4. 'l' → logprob: -10.633724212646484
    5. ' la' → logprob: -11.008724212646484
    6. 'range' → logprob: -11.133724212646484
    7. ' ' → logprob: -12.883724212646484
    8. '<|end|>' → logprob: -12.883724212646484
    9. 's' → logprob: -13.008724212646484
    10. ' (' → logprob: -13.383724212646484

Token 909: ' liste' (ID: 31719)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0011330705601722002
    2. ' A' → logprob: -6.876132965087891
    3. 'range' → logprob: -11.12613296508789
    4. '[
' → logprob: -11.50113296508789
    5. ',' → logprob: -11.75113296508789
    6. '[' → logprob: -12.00113296508789
    7. '```' → logprob: -12.12613296508789
    8. ' ' → logprob: -12.37613296508789
    9. 'for' → logprob: -12.37613296508789
    10. '
' → logprob: -12.43863296508789

Token 910: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.022020602598786354
    2. '(A' → logprob: -4.8970208168029785
    3. ' A' → logprob: -5.3970208168029785
    4. ',' → logprob: -5.3970208168029785
    5. '   ' → logprob: -5.8970208168029785
    6. ',A' → logprob: -7.3970208168029785
    7. '       ' → logprob: -8.14702033996582
    8. 'x' → logprob: -8.39702033996582
    9. '	A' → logprob: -8.39702033996582
    10. '[A' → logprob: -8.52202033996582

Token 911: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3062109649181366
    2. '       ' → logprob: -2.306210994720459
    3. ' =' → logprob: -2.681210994720459
    4. ' ,' → logprob: -4.056210994720459
    5. 'x' → logprob: -4.181210994720459
    6. '=' → logprob: -4.806210994720459
    7. '   ' → logprob: -5.056210994720459
    8. 'y' → logprob: -5.306210994720459
    9. 'a' → logprob: -5.431210994720459
    10. ' (' → logprob: -5.806210994720459

Token 912: ' ce' (ID: 2357)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.031187573447823524
    2. ' x' → logprob: -4.156187534332275
    3. '       ' → logprob: -4.531187534332275
    4. '   ' → logprob: -5.656187534332275
    5. '           ' → logprob: -7.906187534332275
    6. 'y' → logprob: -8.156188011169434
    7. '	x' → logprob: -9.531188011169434
    8. ' y' → logprob: -11.156188011169434
    9. '        ' → logprob: -11.406188011169434
    10. ' ' → logprob: -12.406188011169434

Token 913: ' sont' (ID: 5242)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9801333546638489
    2. '=' → logprob: -1.605133295059204
    3. 'x' → logprob: -1.605133295059204
    4. 'y' → logprob: -2.980133295059204
    5. ' =' → logprob: -3.355133295059204
    6. '#' → logprob: -3.855133295059204
    7. 'i' → logprob: -3.980133295059204
    8. '   ' → logprob: -4.105133533477783
    9. 'for' → logprob: -4.355133533477783
    10. 's' → logprob: -4.480133533477783

Token 914: ' les' (ID: 1341)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.15099845826625824
    2. 'des' → logprob: -3.52599835395813
    3. ' A' → logprob: -3.52599835395813
    4. ' des' → logprob: -3.90099835395813
    5. 'les' → logprob: -4.025998592376709
    6. ' les' → logprob: -4.900998592376709
    7. 'tmp' → logprob: -5.150998592376709
    8. 'neg' → logprob: -5.150998592376709
    9. ' ' → logprob: -5.275998592376709
    10. '   ' → logprob: -5.900998592376709

Token 915: ' valeurs' (ID: 73668)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2590440809726715
    2. 'neg' → logprob: -2.2590441703796387
    3. ' A' → logprob: -2.8840441703796387
    4. 'n' → logprob: -4.009044170379639
    5. 'élé' → logprob: -4.384044170379639
    6. ' nég' → logprob: -4.634044170379639
    7. '-' → logprob: -5.384044170379639
    8. 'a' → logprob: -5.509044170379639
    9. 'val' → logprob: -6.009044170379639
    10. 'y' → logprob: -6.009044170379639

Token 916: ' nég' (ID: 55805)
  Prédit: 'neg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neg' → logprob: -0.8759451508522034
    2. '[i' → logprob: -1.8759450912475586
    3. ' nég' → logprob: -2.1259450912475586
    4. 'A' → logprob: -2.5009450912475586
    5. 'x' → logprob: -3.1259450912475586
    6. '   ' → logprob: -3.2509450912475586
    7. 'i' → logprob: -3.3759450912475586
    8. ',' → logprob: -3.6259450912475586
    9. 'y' → logprob: -4.875945091247559
    10. 'n' → logprob: -5.000945091247559

Token 917: 'atives' (ID: 8015)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8383219838142395
    2. '[i' → logprob: -1.3383219242095947
    3. '       ' → logprob: -1.7133219242095947
    4. 'A' → logprob: -3.0883219242095947
    5. 'i' → logprob: -3.7133219242095947
    6. '```' → logprob: -4.588322162628174
    7. 'for' → logprob: -5.088322162628174
    8. 'x' → logprob: -5.838322162628174
    9. 'indices' → logprob: -5.838322162628174
    10. 's' → logprob: -6.213322162628174

Token 918: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30647334456443787
    2. ',' → logprob: -1.8064733743667603
    3. '   ' → logprob: -2.6814732551574707
    4. ':' → logprob: -4.556473255157471
    5. ' ,' → logprob: -5.431473255157471
    6. ':
' → logprob: -5.556473255157471
    7. ' =' → logprob: -5.806473255157471
    8. '[' → logprob: -6.306473255157471
    9. 'x' → logprob: -6.681473255157471
    10. ' ' → logprob: -7.181473255157471

Token 919: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5012266635894775
    2. '       ' → logprob: -1.2512266635894775
    3. 'x' → logprob: -2.2512266635894775
    4. ' x' → logprob: -6.126226425170898
    5. '	x' → logprob: -8.001226425170898
    6. '           ' → logprob: -8.876226425170898
    7. '	   ' → logprob: -10.501226425170898
    8. '    ' → logprob: -10.501226425170898
    9. ' ' → logprob: -10.626226425170898
    10. '     ' → logprob: -11.251226425170898

Token 920: ' a' (ID: 261)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.010244712233543396
    2. ' x' → logprob: -5.260244846343994
    3. '   ' → logprob: -5.385244846343994
    4. 'y' → logprob: -8.260244369506836
    5. '       ' → logprob: -9.135244369506836
    6. '	x' → logprob: -10.385244369506836
    7. ' y' → logprob: -11.635244369506836
    8. ' ' → logprob: -13.010244369506836
    9. '    ' → logprob: -13.510244369506836
    10. 'a' (adapté à ' a') → logprob: -13.760244369506836

Token 921: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5766186118125916
    2. ' =' → logprob: -0.8266186118125916
    3. ',' → logprob: -7.326618671417236
    4. ' ' → logprob: -11.701618194580078
    5. '=A' → logprob: -12.076618194580078
    6. '   ' → logprob: -12.576618194580078
    7. ' ,' → logprob: -14.076618194580078
    8. '=
' → logprob: -14.326618194580078
    9. '	' → logprob: -14.701618194580078
    10. '  ' → logprob: -14.826618194580078

Token 922: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.004078639671206474
    2. ' A' → logprob: -5.5040788650512695
    3. '	A' → logprob: -15.75407886505127
    4. '   ' → logprob: -17.629077911376953
    5. '-A' → logprob: -18.004077911376953
    6. ' ' → logprob: -18.629077911376953
    7. 'a' → logprob: -18.629077911376953
    8. '(A' → logprob: -19.504077911376953
    9. '>A' → logprob: -19.754077911376953
    10. '=A' → logprob: -19.879077911376953

Token 923: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: 0.0
    2. '[' → logprob: -17.375
    3. '[a' → logprob: -18.375
    4. '[I' → logprob: -19.75
    5. '[A' → logprob: -20.125
    6. 'i' → logprob: -20.125
    7. ' [' → logprob: -20.625
    8. '.pop' → logprob: -20.625
    9. 'pop' → logprob: -21.125
    10. '```' → logprob: -21.375

Token 924: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.044623471796512604
    2. ']' → logprob: -3.169623374938965
    3. ']
' → logprob: -6.919623374938965
    4. ' ]
' → logprob: -8.044623374938965
    5. ')
' → logprob: -8.919623374938965
    6. '       ' → logprob: -9.169623374938965
    7. ')' → logprob: -10.919623374938965
    8. ' ]' → logprob: -11.044623374938965
    9. '   ' → logprob: -11.169623374938965
    10. ']

' → logprob: -11.294623374938965

Token 925: '       ' (ID: 309)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04458276554942131
    2. '       ' → logprob: -3.1695828437805176
    3. ' x' → logprob: -6.919582843780518
    4. '   ' → logprob: -7.669582843780518
    5. ',' → logprob: -9.54458236694336
    6. '```' → logprob: -10.66958236694336
    7. '	x' → logprob: -11.16958236694336
    8. ',x' → logprob: -11.91958236694336
    9. '           ' → logprob: -13.04458236694336
    10. '#' → logprob: -13.54458236694336

Token 926: ' #' (ID: 1069)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0005629229708574712
    2. '       ' → logprob: -7.625563144683838
    3. ' x' → logprob: -9.75056266784668
    4. '	x' → logprob: -11.87556266784668
    5. '   ' → logprob: -12.25056266784668
    6. '           ' → logprob: -12.75056266784668
    7. '        ' → logprob: -14.37556266784668
    8. ',x' → logprob: -14.87556266784668
    9. 'y' → logprob: -15.37556266784668
    10. '```' → logprob: -15.62556266784668

Token 927: ' Effect' (ID: 22448)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.3358446166384965e-05
    2. ' x' → logprob: -10.000053405761719
    3. '       ' → logprob: -12.125053405761719
    4. '   ' → logprob: -14.125053405761719
    5. 'xy' → logprob: -14.500053405761719
    6. 'y' → logprob: -15.375053405761719
    7. '	x' → logprob: -15.625053405761719
    8. '
' → logprob: -16.12505340576172
    9. '           ' → logprob: -16.12505340576172
    10. 'X' → logprob: -16.25005340576172

Token 928: 'uer' (ID: 4615)
  Prédit: 'uer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uer' → logprob: -0.00010151672904612496
    2. '#' → logprob: -10.750101089477539
    3. 'u' → logprob: -10.875101089477539
    4. 'urer' → logprob: -11.125101089477539
    5. 'uver' → logprob: -11.250101089477539
    6. 'ver' → logprob: -12.125101089477539
    7. '       ' → logprob: -12.250101089477539
    8. 'ur' → logprob: -12.250101089477539
    9. '   ' → logprob: -12.500101089477539
    10. 'rer' → logprob: -13.250101089477539

Token 929: ' la' (ID: 557)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.507965624332428
    2. 'tmp' → logprob: -1.1329655647277832
    3. '(x' → logprob: -3.257965564727783
    4. '(tmp' → logprob: -3.757965564727783
    5. '(
' → logprob: -5.007965564727783
    6. '
' → logprob: -6.632965564727783
    7. ' tmp' → logprob: -6.757965564727783
    8. '   ' → logprob: -6.882965564727783
    9. ' x' → logprob: -6.882965564727783
    10. '(' → logprob: -6.882965564727783

Token 930: ' sou' (ID: 4069)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.011623837985098362
    2. 'tmp' → logprob: -4.636623859405518
    3. ' x' → logprob: -7.261623859405518
    4. 'print' → logprob: -7.886623859405518
    5. '(x' → logprob: -8.63662338256836
    6. '#' → logprob: -8.76162338256836
    7. '{
' → logprob: -9.01162338256836
    8. 'y' → logprob: -9.63662338256836
    9. '(' → logprob: -10.13662338256836
    10. '   ' → logprob: -10.26162338256836

Token 931: 'straction' (ID: 79887)
  Prédit: 'traction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'traction' → logprob: -0.4809592068195343
    2. 'straction' → logprob: -0.9809591770172119
    3. 'tmp' → logprob: -5.980959415435791
    4. 'x' → logprob: -6.355959415435791
    5. 'raction' → logprob: -7.105959415435791
    6. '   ' → logprob: -7.105959415435791
    7. 'tration' → logprob: -8.480958938598633
    8. 'str' → logprob: -8.730958938598633
    9. 'a' → logprob: -9.105958938598633
    10. 'b' → logprob: -9.480958938598633

Token 932: ' entre' (ID: 3853)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.25554707646369934
    2. '       ' → logprob: -2.130547046661377
    3. 'tmp' → logprob: -2.880547046661377
    4. ',' → logprob: -3.755547046661377
    5. ' x' → logprob: -4.130547046661377
    6. '(x' → logprob: -5.630547046661377
    7. ' tmp' → logprob: -5.880547046661377
    8. ' (' → logprob: -6.880547046661377
    9. ',x' → logprob: -7.005547046661377
    10. '(tmp' → logprob: -7.380547046661377

Token 933: ' le' (ID: 505)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -7.004696090007201e-05
    2. ' tmp' → logprob: -9.875069618225098
    3. 'a' → logprob: -11.750069618225098
    4. '	tmp' → logprob: -12.375069618225098
    5. 'x' → logprob: -13.000069618225098
    6. '(tmp' → logprob: -13.000069618225098
    7. 'temp' → logprob: -13.500069618225098
    8. '/tmp' → logprob: -15.750069618225098
    9. '$tmp' → logprob: -15.750069618225098
    10. '[tmp' → logprob: -16.500070571899414

Token 934: ' résultat' (ID: 62556)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -9.555654105497524e-05
    2. ' tmp' → logprob: -9.37509536743164
    3. 'temp' → logprob: -12.12509536743164
    4. 'a' → logprob: -12.75009536743164
    5. '	tmp' → logprob: -14.12509536743164
    6. '(tmp' → logprob: -15.00009536743164
    7. 'tm' → logprob: -15.37509536743164
    8. 't' → logprob: -15.62509536743164
    9. '[tmp' → logprob: -15.75009536743164
    10. '$tmp' → logprob: -15.75009536743164

Token 935: ' tempora' (ID: 117509)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.060462936758995056
    2. '=' → logprob: -3.6854629516601562
    3. ' =' → logprob: -3.9354629516601562
    4. ' tmp' → logprob: -4.560462951660156
    5. '_tmp' → logprob: -6.935462951660156
    6. '	tmp' → logprob: -7.560462951660156
    7. 'temp' → logprob: -7.685462951660156
    8. 'x' → logprob: -7.810462951660156
    9. '(tmp' → logprob: -7.810462951660156
    10. ',' → logprob: -8.810462951660156

Token 936: 'ire' (ID: 594)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.06018853560090065
    2. ' tmp' → logprob: -3.0601885318756104
    3. ' =' → logprob: -5.5601887702941895
    4. ',' → logprob: -6.1851887702941895
    5. '_tmp' → logprob: -6.8101887702941895
    6. '   ' → logprob: -6.9351887702941895
    7. '=' → logprob: -7.0601887702941895
    8. '(tmp' → logprob: -7.5601887702941895
    9. ',tmp' → logprob: -7.9351887702941895
    10. 'ur' → logprob: -7.9351887702941895

Token 937: ' actuel' (ID: 113646)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.06847096979618073
    2. ' tmp' → logprob: -3.1934709548950195
    3. ' and' → logprob: -4.8184709548950195
    4. '(tmp' → logprob: -4.9434709548950195
    5. ' =' → logprob: -5.9434709548950195
    6. ',' → logprob: -5.9434709548950195
    7. ' -' → logprob: -6.6934709548950195
    8. '-' → logprob: -6.9434709548950195
    9. '=' → logprob: -7.3184709548950195
    10. ',tmp' → logprob: -7.6934709548950195

Token 938: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.803398847579956
    2. 'tmp' → logprob: -1.053398847579956
    3. ' and' → logprob: -3.303398847579956
    4. ' =' → logprob: -3.303398847579956
    5. 'et' → logprob: -3.553398847579956
    6. '=' → logprob: -3.553398847579956
    7. '(tmp' → logprob: -4.053399085998535
    8. ',tmp' → logprob: -4.178399085998535
    9. 'and' → logprob: -4.553399085998535
    10. ' et' → logprob: -4.803399085998535

Token 939: ' cet' (ID: 19505)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0017025562701746821
    2. ' a' → logprob: -6.376702785491943
    3. '	a' → logprob: -15.501702308654785
    4. '   ' → logprob: -16.7517032623291
    5. 'tmp' → logprob: -16.8767032623291
    6. ' ' → logprob: -17.3767032623291
    7. ' ' → logprob: -18.5017032623291
    8. '       ' → logprob: -18.6267032623291
    9. '```' → logprob: -18.6267032623291
    10. '    ' → logprob: -18.7517032623291

Token 940: ' élément' (ID: 99627)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0435139425098896
    2. ' a' → logprob: -3.1685140132904053
    3. '	a' → logprob: -7.793513774871826
    4. ' ' → logprob: -10.543514251708984
    5. ' espace' → logprob: -10.918514251708984
    6. ' ' → logprob: -12.043514251708984
    7. '_a' → logprob: -12.168514251708984
    8. '```' → logprob: -12.293514251708984
    9. ' ' → logprob: -12.543514251708984
    10. '
' → logprob: -12.793514251708984

Token 941: ' nég' (ID: 55805)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.16602841019630432
    2. ',' → logprob: -3.4160284996032715
    3. '(tmp' → logprob: -3.5410284996032715
    4. ' tmp' → logprob: -4.0410284996032715
    5. '-' → logprob: -4.0410284996032715
    6. ' =' → logprob: -4.1660284996032715
    7. 'a' → logprob: -4.7910284996032715
    8. ' -' → logprob: -5.2910284996032715
    9. '=' → logprob: -5.5410284996032715
    10. '       ' → logprob: -6.0410284996032715

Token 942: 'atif' (ID: 23984)
  Prédit: 'atif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atif' → logprob: -0.0036077939439564943
    2. 'a' → logprob: -6.253607749938965
    3. '   ' → logprob: -7.003607749938965
    4. '       ' → logprob: -8.253607749938965
    5. 'eg' → logprob: -8.753607749938965
    6. 'ativ' → logprob: -10.003607749938965
    7. '[' → logprob: -10.253607749938965
    8. 'A' → logprob: -10.378607749938965
    9. 'ative' → logprob: -10.628607749938965
    10. '
' → logprob: -10.878607749938965

Token 943: '.
' (ID: 558)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -1.3331948518753052
    2. ',' → logprob: -1.4581948518753052
    3. 'x' → logprob: -1.4581948518753052
    4. ' =' → logprob: -1.5831948518753052
    5. '       ' → logprob: -3.9581947326660156
    6. '
' → logprob: -4.208194732666016
    7. '=' → logprob: -4.458194732666016
    8. '```' → logprob: -5.833194732666016
    9. ' tmp' → logprob: -6.083194732666016
    10. '   ' → logprob: -6.083194732666016

Token 944: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09566003084182739
    2. 'tmp' → logprob: -2.7206599712371826
    3. 'x' → logprob: -3.9706599712371826
    4. '   ' → logprob: -6.095660209655762
    5. ' tmp' → logprob: -6.095660209655762
    6. ' x' → logprob: -7.345660209655762
    7. '```' → logprob: -7.345660209655762
    8. ',' → logprob: -9.095660209655762
    9. '	tmp' → logprob: -9.095660209655762
    10. '        
' → logprob: -9.220660209655762

Token 945: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.00938285794109106
    2. ' x' → logprob: -5.009382724761963
    3. '       ' → logprob: -6.009382724761963
    4. '   ' → logprob: -9.009383201599121
    5. 'tmp' → logprob: -9.634383201599121
    6. '	x' → logprob: -11.759383201599121
    7. '           ' → logprob: -12.384383201599121
    8. '```' → logprob: -13.134383201599121
    9. '        ' → logprob: -13.384383201599121
    10. '    ' → logprob: -13.884383201599121

Token 946: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007697006221860647
    2. '=' → logprob: -4.882697105407715
    3. ' =' → logprob: -9.632697105407715
    4. ' ,' → logprob: -10.882697105407715
    5. ',tmp' → logprob: -12.382697105407715
    6. ',
' → logprob: -13.757697105407715
    7. ',y' → logprob: -15.132697105407715
    8. 'tmp' → logprob: -15.632697105407715
    9. ',t' → logprob: -16.2576961517334
    10. ',x' → logprob: -16.2576961517334

Token 947: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0001805377542041242
    2. ' y' → logprob: -8.6251802444458
    3. 'tmp' → logprob: -14.0001802444458
    4. '	y' → logprob: -16.250181198120117
    5. '=' → logprob: -17.250181198120117
    6. '_y' → logprob: -18.625181198120117
    7. '`' → logprob: -18.625181198120117
    8. ' =' → logprob: -19.125181198120117
    9. '   ' → logprob: -19.500181198120117
    10. 'x' → logprob: -19.750181198120117

Token 948: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03809783607721329
    2. ' =' → logprob: -3.288097858428955
    3. ',' → logprob: -9.788097381591797
    4. '=
' → logprob: -15.788097381591797
    5. ' ,' → logprob: -17.288097381591797
    6. '=

' → logprob: -17.413097381591797
    7. ' ' → logprob: -17.913097381591797
    8. '=',' → logprob: -18.163097381591797
    9. '=}' → logprob: -18.163097381591797
    10. '   ' → logprob: -18.288097381591797

Token 949: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -1.700132997939363e-05
    2. ' tmp' → logprob: -11.000017166137695
    3. 'temp' → logprob: -16.000017166137695
    4. '(tmp' → logprob: -16.750017166137695
    5. '	tmp' → logprob: -16.875017166137695
    6. '_tmp' → logprob: -18.375017166137695
    7. '/tmp' → logprob: -18.500017166137695
    8. ',tmp' → logprob: -18.750017166137695
    9. '$tmp' → logprob: -19.500017166137695
    10. 'Tmp' → logprob: -20.125017166137695

Token 950: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009550427086651325
    2. ',a' → logprob: -4.75955057144165
    3. 'a' → logprob: -7.00955057144165
    4. ' ,' → logprob: -10.634550094604492
    5. ' a' → logprob: -12.884550094604492
    6. ',y' → logprob: -13.009550094604492
    7. ',x' → logprob: -13.634550094604492
    8. ',tmp' → logprob: -14.009550094604492
    9. ',
' → logprob: -15.134550094604492
    10. '<|end|>' → logprob: -15.509550094604492

Token 951: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0031781906727701426
    2. ' a' → logprob: -5.753178119659424
    3. '	a' → logprob: -15.378178596496582
    4. '-a' → logprob: -15.628178596496582
    5. '-' → logprob: -17.503177642822266
    6. ' ' → logprob: -18.253177642822266
    7. '   ' → logprob: -18.378177642822266
    8. ' -' → logprob: -18.378177642822266
    9. ' ' → logprob: -20.003177642822266
    10. '_a' → logprob: -20.503177642822266

Token 952: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011188817210495472
    2. '   ' → logprob: -4.511188983917236
    3. 'XY' → logprob: -9.136188507080078
    4. '           ' → logprob: -11.761188507080078
    5. ' XY' → logprob: -12.511188507080078
    6. '      ' → logprob: -12.511188507080078
    7. '     ' → logprob: -12.636188507080078
    8. ',' → logprob: -12.886188507080078
    9. ' ' → logprob: -12.886188507080078
    10. '  ' → logprob: -13.136188507080078

Token 953: '       ' (ID: 309)
  Prédit: 'XY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XY' → logprob: -0.7602565288543701
    2. '       ' → logprob: -0.8852565288543701
    3. '   ' → logprob: -2.13525652885437
    4. ' XY' → logprob: -6.510256767272949
    5. ' ' → logprob: -9.88525676727295
    6. '	' → logprob: -11.01025676727295
    7. '           ' → logprob: -11.13525676727295
    8. 'tmp' → logprob: -11.26025676727295
    9. '```' → logprob: -11.38525676727295
    10. '  ' → logprob: -12.01025676727295

Token 954: ' XY' (ID: 71987)
  Prédit: 'XY'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XY' (adapté à ' XY') → logprob: -0.031458958983421326
    2. '       ' → logprob: -3.531458854675293
    3. '   ' → logprob: -7.156458854675293
    4. ' XY' → logprob: -7.156458854675293
    5. 'tmp' → logprob: -9.031458854675293
    6. 'xy' → logprob: -11.156458854675293
    7. ' ' → logprob: -12.781458854675293
    8. '	' → logprob: -13.281458854675293
    9. '        ' → logprob: -13.406458854675293
    10. '           ' → logprob: -13.531458854675293

Token 955: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007183883571997285
    2. '.' → logprob: -7.250718593597412
    3. 'append' → logprob: -12.000718116760254
    4. '.app' → logprob: -13.250718116760254
    5. '.Append' → logprob: -16.37571907043457
    6. '.ap' → logprob: -16.50071907043457
    7. '_append' → logprob: -16.62571907043457
    8. ' append' → logprob: -16.87571907043457
    9. ' .' → logprob: -17.12571907043457
    10. 'Append' → logprob: -17.62571907043457

Token 956: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.16472560167312622
    2. '(' → logprob: -1.9147255420684814
    3. '(x' → logprob: -5.4147257804870605
    4. '(
' → logprob: -10.164725303649902
    5. ' (' → logprob: -14.039725303649902
    6. '(X' → logprob: -14.914725303649902
    7. ',' → logprob: -15.164725303649902
    8. '(tmp' → logprob: -15.789725303649902
    9. '(

' → logprob: -16.28972625732422
    10. '(
' → logprob: -16.53972625732422

Token 957: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.339278580620885e-06
    2. ' x' → logprob: -13.125001907348633
    3. '(x' → logprob: -15.250001907348633
    4. ')x' → logprob: -20.000001907348633
    5. '	x' → logprob: -21.375001907348633
    6. '   ' → logprob: -21.500001907348633
    7. '(' → logprob: -21.875001907348633
    8. '"x' → logprob: -22.000001907348633
    9. ' (' → logprob: -22.500001907348633
    10. ''x' → logprob: -23.125001907348633

Token 958: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5048530030981055e-06
    2. ' ,' → logprob: -13.625001907348633
    3. ',y' → logprob: -15.125001907348633
    4. ',
' → logprob: -17.500001907348633
    5. '‌,' → logprob: -19.125001907348633
    6. ')' → logprob: -19.750001907348633
    7. ',v' → logprob: -20.000001907348633
    8. ',user' → logprob: -20.125001907348633
    9. '،' → logprob: -20.250001907348633
    10. ',)' → logprob: -20.375001907348633

Token 959: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0002613358374219388
    2. ' y' → logprob: -8.250261306762695
    3. '	y' → logprob: -18.750261306762695
    4. ')y' → logprob: -18.875261306762695
    5. 'x' → logprob: -20.250261306762695
    6. ')' → logprob: -20.375261306762695
    7. '   ' → logprob: -21.625261306762695
    8. ''y' → logprob: -21.875261306762695
    9. '       ' → logprob: -22.000261306762695
    10. ' ' → logprob: -22.875261306762695

Token 960: '))
' (ID: 2210)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.47411730885505676
    2. ')' → logprob: -0.9741172790527344
    3. ')
' → logprob: -10.224117279052734
    4. ')

' → logprob: -13.099117279052734
    5. '   ' → logprob: -14.474117279052734
    6. '       ' → logprob: -14.599117279052734
    7. ')`
' → logprob: -14.974117279052734
    8. ' )
' → logprob: -15.349117279052734
    9. ')#' → logprob: -15.599117279052734
    10. ')`' → logprob: -16.474117279052734

Token 961: '       ' (ID: 309)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.47555357217788696
    2. '       ' → logprob: -1.2255535125732422
    3. '   ' → logprob: -3.225553512573242
    4. '	tmp' → logprob: -3.600553512573242
    5. ' tmp' → logprob: -4.350553512573242
    6. '
' → logprob: -6.225553512573242
    7. '```' → logprob: -6.850553512573242
    8. '[tmp' → logprob: -7.850553512573242
    9. '(tmp' → logprob: -8.225553512573242
    10. '/tmp' → logprob: -8.350553512573242

Token 962: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' (adapté à ' tmp') → logprob: -0.003388264449313283
    2. ' tmp' → logprob: -5.753388404846191
    3. '       ' → logprob: -8.628388404846191
    4. '	tmp' → logprob: -11.003388404846191
    5. '   ' → logprob: -11.753388404846191
    6. '/tmp' → logprob: -12.253388404846191
    7. '[tmp' → logprob: -14.378388404846191
    8. '_tmp' → logprob: -14.503388404846191
    9. 'temp' → logprob: -14.628388404846191
    10. '$tmp' → logprob: -15.128388404846191

Token 963: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4780246615409851
    2. ' =' → logprob: -0.9780246615409851
    3. ' -=' → logprob: -5.728024482727051
    4. '-=' → logprob: -7.353024482727051
    5. '-' → logprob: -10.10302448272705
    6. ' -' → logprob: -12.47802448272705
    7. ' +=' → logprob: -14.97802448272705
    8. '+=' → logprob: -15.60302448272705
    9. ',' → logprob: -15.72802448272705
    10. ' ' → logprob: -15.97802448272705

Token 964: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04274166375398636
    2. 'tmp' → logprob: -3.2927417755126953
    3. ' x' → logprob: -5.417741775512695
    4. ' tmp' → logprob: -8.292741775512695
    5. 'temp' → logprob: -14.792741775512695
    6. 'txt' → logprob: -15.167741775512695
    7. 'tx' → logprob: -15.542741775512695
    8. '/tmp' → logprob: -15.792741775512695
    9. ' ' → logprob: -15.917741775512695
    10. '(tmp' → logprob: -16.042741775512695

Token 965: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03804366663098335
    2. '-' → logprob: -3.288043737411499
    3. ' ' → logprob: -13.913043975830078
    4. ' −' → logprob: -15.038043975830078
    5. ' -
' → logprob: -15.288043975830078
    6. ' ' → logprob: -15.538043975830078
    7. '-y' → logprob: -15.788043975830078
    8. '−' → logprob: -15.913043975830078
    9. ' –' → logprob: -16.413043975830078
    10. '`' → logprob: -17.163043975830078

Token 966: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0004307884373702109
    2. ' y' → logprob: -7.750430583953857
    3. '<|end|>' → logprob: -16.875431060791016
    4. '	y' → logprob: -18.625431060791016
    5. ' ' → logprob: -21.250431060791016
    6. '   ' → logprob: -21.375431060791016
    7. ' ' → logprob: -21.500431060791016
    8. '<|end|>' → logprob: -21.625431060791016
    9. ')y' → logprob: -21.875431060791016
    10. 'x' → logprob: -22.000431060791016

Token 967: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 968: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 969: ' Met' (ID: 7227)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05355028435587883
    2. 'continue' → logprob: -3.8035502433776855
    3. 'pass' → logprob: -4.9285502433776855
    4. '#' → logprob: -5.1785502433776855
    5. 'x' → logprob: -5.6785502433776855
    6. 'for' → logprob: -5.8035502433776855
    7. '   ' → logprob: -6.0535502433776855
    8. 'i' → logprob: -6.6785502433776855
    9. ')' → logprob: -6.8035502433776855
    10. 'PASS' → logprob: -7.0535502433776855

Token 970: 'tre' (ID: 4086)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.036265019327402115
    2. ' =' → logprob: -4.036264896392822
    3. '(tmp' → logprob: -5.036264896392822
    4. 'tmp' → logprob: -5.536264896392822
    5. 'à' → logprob: -6.286264896392822
    6. '       ' → logprob: -7.036264896392822
    7. 'x' → logprob: -7.036264896392822
    8. '+=' → logprob: -7.411264896392822
    9. '   ' → logprob: -7.911264896392822
    10. ' à' → logprob: -8.03626537322998

Token 971: ' à' (ID: 1221)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.4039999544620514
    2. 'à' → logprob: -1.403999924659729
    3. ' à' → logprob: -2.9040000438690186
    4. '=' → logprob: -4.1539998054504395
    5. 'x' → logprob: -5.5289998054504395
    6. '(tmp' → logprob: -5.6539998054504395
    7. 'À' → logprob: -6.1539998054504395
    8. '-à' → logprob: -6.1539998054504395
    9. ' tmp' → logprob: -6.7789998054504395
    10. 'a' → logprob: -7.2789998054504395

Token 972: ' jour' (ID: 8379)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.0003428528143558651
    2. 'jour' → logprob: -8.750343322753906
    3. ' tmp' → logprob: -9.375343322753906
    4. ' jour' → logprob: -10.125343322753906
    5. 'temp' → logprob: -11.125343322753906
    6. '(tmp' → logprob: -11.375343322753906
    7. 'x' → logprob: -11.625343322753906
    8. '/tmp' → logprob: -11.625343322753906
    9. '	tmp' → logprob: -12.250343322753906
    10. '[tmp' → logprob: -12.375343322753906

Token 973: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -3.5954712075181305e-05
    2. ' tmp' → logprob: -10.250036239624023
    3. '(tmp' → logprob: -14.500036239624023
    4. '	tmp' → logprob: -18.375036239624023
    5. '/tmp' → logprob: -18.750036239624023
    6. '$tmp' → logprob: -19.500036239624023
    7. 'temp' → logprob: -20.125036239624023
    8. 't' → logprob: -20.250036239624023
    9. '[tmp' → logprob: -20.250036239624023
    10. 'x' → logprob: -20.375036239624023

Token 974: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 975: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1933361142873764
    2. '#' → logprob: -2.318336009979248
    3. 'for' → logprob: -2.568336009979248
    4. '#print' → logprob: -8.568336486816406
    5. 'MIN' → logprob: -9.318336486816406
    6. 'PLUS' → logprob: -9.318336486816406
    7. ' for' → logprob: -9.693336486816406
    8. '```' → logprob: -9.943336486816406
    9. 'N' → logprob: -10.068336486816406
    10. '   ' → logprob: -10.568336486816406

Token 976: ' S' (ID: 336)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.003414870472624898
    2. 'elif' → logprob: -6.003415107727051
    3. ' else' → logprob: -7.253415107727051
    4. 'print' → logprob: -8.62841510772705
    5. '```' → logprob: -10.50341510772705
    6. '#' → logprob: -11.12841510772705
    7. '#else' → logprob: -12.87841510772705
    8. 'x' → logprob: -13.12841510772705
    9. ' elif' → logprob: -14.00341510772705
    10. '   ' → logprob: -14.25341510772705

Token 977: ''il' (ID: 14683)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.14521701633930206
    2. 'elif' → logprob: -2.020216941833496
    3. ' else' → logprob: -6.770216941833496
    4. ' elif' → logprob: -7.520216941833496
    5. 'e' → logprob: -7.895216941833496
    6. 'el' → logprob: -8.270216941833496
    7. '```' → logprob: -9.645216941833496
    8. '#' → logprob: -10.270216941833496
    9. 'elon' → logprob: -10.395216941833496
    10. '_else' → logprob: -10.395216941833496

Token 978: ' n' (ID: 297)
  Prédit: ' PLUS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' PLUS' → logprob: -0.7097451686859131
    2. 'elif' → logprob: -1.459745168685913
    3. 'PLUS' → logprob: -2.584745168685913
    4. 'else' → logprob: -2.959745168685913
    5. ' not' → logprob: -3.084745168685913
    6. ' elif' → logprob: -3.084745168685913
    7. ' N' → logprob: -3.334745168685913
    8. ' else' → logprob: -4.959745407104492
    9. 'plus' → logprob: -5.584745407104492
    10. ' n' → logprob: -6.084745407104492

Token 979: ''y' (ID: 27913)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.18391825258731842
    2. 'PLUS' → logprob: -2.8089182376861572
    3. 'e' → logprob: -3.3089182376861572
    4. 'elon' → logprob: -4.433918476104736
    5. 'else' → logprob: -4.683918476104736
    6. ' elif' → logprob: -4.683918476104736
    7. 'plus' → logprob: -5.058918476104736
    8. 'ur' → logprob: -5.058918476104736
    9. ' PLUS' → logprob: -5.183918476104736
    10. 'i' → logprob: -5.183918476104736

Token 980: ' a' (ID: 261)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.34489065408706665
    2. 'else' → logprob: -1.3448905944824219
    3. 'pas' → logprob: -4.719890594482422
    4. ' else' → logprob: -5.344890594482422
    5. 'e' → logprob: -5.469890594482422
    6. 'plus' → logprob: -5.844890594482422
    7. ' elif' → logprob: -6.469890594482422
    8. 'el' → logprob: -6.719890594482422
    9. 'a' → logprob: -6.969890594482422
    10. 't' → logprob: -7.219890594482422

Token 981: ' A' (ID: 355)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.6697381138801575
    2. 'pas' → logprob: -0.7947381138801575
    3. 'plus' → logprob: -5.044738292694092
    4. 'else' → logprob: -5.294738292694092
    5. ' only' → logprob: -5.544738292694092
    6. 'elif' → logprob: -5.919738292694092
    7. ' not' → logprob: -6.044738292694092
    8. ' PAS' → logprob: -6.294738292694092
    9. 'not' → logprob: -6.544738292694092
    10. ' else' → logprob: -6.669738292694092

Token 982: 'UC' (ID: 25949)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.30160290002822876
    2. 'else' → logprob: -1.926602840423584
    3. 'and' → logprob: -3.426602840423584
    4. ' else' → logprob: -3.551602840423584
    5. ' elif' → logprob: -3.676602840423584
    6. '[' → logprob: -5.301602840423584
    7. '==' → logprob: -5.426602840423584
    8. '#' → logprob: -6.051602840423584
    9. 'e' → logprob: -6.051602840423584
    10. 'len' → logprob: -6.426602840423584

Token 983: 'UN' (ID: 2926)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.08354100584983826
    2. 'elif' → logprob: -3.583540916442871
    3. 'pas' → logprob: -3.708540916442871
    4. 'a' → logprob: -5.333540916442871
    5. 'un' → logprob: -5.333540916442871
    6. 'el' → logprob: -6.083540916442871
    7. 'il' → logprob: -6.083540916442871
    8. 'u' → logprob: -6.458540916442871
    9. 'es' → logprob: -6.458540916442871
    10. 'on' → logprob: -6.708540916442871

Token 984: ' élément' (ID: 99627)
  Prédit: ' PLUS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' PLUS' → logprob: -0.7820618152618408
    2. 'PLUS' → logprob: -0.7820618152618408
    3. ' or' → logprob: -4.282061576843262
    4. ' A' → logprob: -4.282061576843262
    5. ' else' → logprob: -4.407061576843262
    6. 'A' → logprob: -4.532061576843262
    7. 'plus' → logprob: -4.532061576843262
    8. ' plus' → logprob: -5.157061576843262
    9. '_PLUS' → logprob: -5.407061576843262
    10. 'else' → logprob: -5.657061576843262

Token 985: ' strict' (ID: 12035)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.761683464050293
    2. 'elif' → logprob: -1.261683464050293
    3. 'else' → logprob: -2.386683464050293
    4. '=' → logprob: -2.761683464050293
    5. ' ==' → logprob: -3.136683464050293
    6. ' or' → logprob: -4.011683464050293
    7. '>' → logprob: -5.011683464050293
    8. 'or' → logprob: -5.011683464050293
    9. ' =' → logprob: -5.511683464050293
    10. ' else' → logprob: -5.636683464050293

Token 986: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.020841054618358612
    2. 'ly' → logprob: -3.895841121673584
    3. 'ément' → logprob: -9.520840644836426
    4. 'rement' → logprob: -9.645840644836426
    5. 'lement' → logprob: -9.770840644836426
    6. 'ment' → logprob: -9.895840644836426
    7. 'iment' → logprob: -11.020840644836426
    8. '#' → logprob: -11.770840644836426
    9. 'EMENT' → logprob: -12.520840644836426
    10. 'l' → logprob: -12.895840644836426

Token 987: ' nég' (ID: 55805)
  Prédit: 'neg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neg' → logprob: -0.6810750961303711
    2. 'posit' → logprob: -1.681075096130371
    3. ' nég' → logprob: -1.806075096130371
    4. 'n' → logprob: -2.056075096130371
    5. '<' → logprob: -4.806075096130371
    6. ' positif' → logprob: -5.556075096130371
    7. '>' → logprob: -7.681075096130371
    8. 'ment' → logprob: -7.931075096130371
    9. 'pos' → logprob: -7.931075096130371
    10. ' negatif' → logprob: -8.056075096130371

Token 988: 'atif' (ID: 23984)
  Prédit: 'ement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.08600489050149918
    2. 'eg' → logprob: -3.2110049724578857
    3. 'iment' → logprob: -4.336004734039307
    4. 'ément' → logprob: -4.586004734039307
    5. 'if' → logprob: -4.711004734039307
    6. 'ég' → logprob: -5.586004734039307
    7. 'atif' → logprob: -7.086004734039307
    8. 'u' → logprob: -7.086004734039307
    9. 'ativement' → logprob: -7.211004734039307
    10. 'e' → logprob: -7.586004734039307

Token 989: ' (' (ID: 350)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.31741875410079956
    2. 'elif' → logprob: -1.3174188137054443
    3. ':' → logprob: -5.692418575286865
    4. ' else' → logprob: -7.442418575286865
    5. ' elif' → logprob: -9.567419052124023
    6. 'if' → logprob: -9.692419052124023
    7. ' or' → logprob: -10.442419052124023
    8. 'el' → logprob: -11.567419052124023
    9. 'or' → logprob: -12.067419052124023
    10. ':
' → logprob: -12.692419052124023

Token 990: 'que' (ID: 1126)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9189125299453735
    2. '):' → logprob: -0.9189125299453735
    3. 'if' → logprob: -2.293912410736084
    4. ')' → logprob: -2.793912410736084
    5. 'and' → logprob: -4.293912410736084
    6. 'elif' → logprob: -4.418912410736084
    7. 'else' → logprob: -5.293912410736084
    8. ' and' → logprob: -5.793912410736084
    9. 'or' → logprob: -6.043912410736084
    10. ' or' → logprob: -6.293912410736084

Token 991: ' des' (ID: 731)
  Prédit: 'PLUS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'PLUS' → logprob: -0.6045777797698975
    2. ' or' → logprob: -2.2295777797698975
    3. ' A' → logprob: -2.8545777797698975
    4. ' ou' → logprob: -2.9795777797698975
    5. 'or' → logprob: -2.9795777797698975
    6. 'A' → logprob: -3.2295777797698975
    7. ' PLUS' → logprob: -3.2295777797698975
    8. 'plus' → logprob: -3.4795777797698975
    9. 'len' → logprob: -3.8545777797698975
    10. ' plus' → logprob: -4.229578018188477

Token 992: ' posit' (ID: 13047)
  Prédit: 'posit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'posit' → logprob: -0.3142550587654114
    2. ' posit' → logprob: -2.4392549991607666
    3. '0' → logprob: -2.9392549991607666
    4. 'pos' → logprob: -2.9392549991607666
    5. 'élé' → logprob: -3.6892549991607666
    6. 'ent' → logprob: -3.6892549991607666
    7. ' ent' → logprob: -5.689255237579346
    8. 'n' → logprob: -5.814255237579346
    9. ' éléments' → logprob: -5.814255237579346
    10. ' ' → logprob: -6.189255237579346

Token 993: 'ifs' (ID: 14119)
  Prédit: 'ifs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifs' → logprob: -0.16244347393512726
    2. 's' → logprob: -3.4124433994293213
    3. 'els' → logprob: -3.5374433994293213
    4. 'aux' → logprob: -3.9124433994293213
    5. 'fs' → logprob: -4.0374436378479
    6. 'f' → logprob: -4.0374436378479
    7. 'if' → logprob: -4.7874436378479
    8. 'als' → logprob: -5.6624436378479
    9. 'u' → logprob: -5.6624436378479
    10. 'os' → logprob: -6.0374436378479

Token 994: ' ou' (ID: 2031)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.7843732833862305
    2. ' ou' → logprob: -1.5343732833862305
    3. 'or' → logprob: -1.6593732833862305
    4. 'ou' → logprob: -2.1593732833862305
    5. ')' → logprob: -4.5343732833862305
    6. '):' → logprob: -4.6593732833862305
    7. '):
' → logprob: -7.1593732833862305
    8. ' ' → logprob: -7.6593732833862305
    9. '   ' → logprob: -8.15937328338623
    10. ' )' → logprob: -9.03437328338623

Token 995: ' des' (ID: 731)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1257028430700302
    2. 'nul' → logprob: -2.6257028579711914
    3. 'ég' → logprob: -3.8757028579711914
    4. 'null' → logprob: -4.875702857971191
    5. 'ou' → logprob: -4.875702857971191
    6. 'égal' → logprob: -5.625702857971191
    7. '=' → logprob: -5.875702857971191
    8. ' n' → logprob: -6.500702857971191
    9. '0' → logprob: -8.000702857971191
    10. 'nus' → logprob: -8.500702857971191

Token 996: ' z' (ID: 579)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06087016686797142
    2. 'null' → logprob: -3.4358701705932617
    3. 'nul' → logprob: -3.9358701705932617
    4. 'ég' → logprob: -5.560870170593262
    5. 'z' → logprob: -6.560870170593262
    6. '0' → logprob: -6.685870170593262
    7. 'égal' → logprob: -8.310870170593262
    8. ' n' → logprob: -8.935870170593262
    9. 'zeros' → logprob: -9.060870170593262
    10. '=' → logprob: -9.560870170593262

Token 997: 'éros' (ID: 120888)
  Prédit: 'ero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ero' → logprob: -0.8541450500488281
    2. 'éros' → logprob: -0.8541450500488281
    3. 'eros' → logprob: -2.729145050048828
    4. 'uls' → logprob: -3.854145050048828
    5. 'u' → logprob: -4.229145050048828
    6. 'eus' → logprob: -4.354145050048828
    7. 'eux' → logprob: -4.479145050048828
    8. 'éro' → logprob: -4.854145050048828
    9. 'e' → logprob: -4.979145050048828
    10. 'erus' → logprob: -5.979145050048828

Token 998: ')
' (ID: 446)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1350950449705124
    2. '):' → logprob: -2.1350951194763184
    3. ' or' → logprob: -6.260095119476318
    4. ':
' → logprob: -6.385095119476318
    5. '):
' → logprob: -7.135095119476318
    6. 'or' → logprob: -7.260095119476318
    7. 'if' → logprob: -7.260095119476318
    8. 'and' → logprob: -7.385095119476318
    9. 'elif' → logprob: -7.385095119476318
    10. ')' → logprob: -7.510095119476318

Token 999: 'elif' (ID: 29767)
  Prédit: 'elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.3723885118961334
    2. 'else' → logprob: -1.247388482093811
    3. 'if' → logprob: -4.1223883628845215
    4. ':' → logprob: -5.4973883628845215
    5. ':
' → logprob: -5.7473883628845215
    6. '```' → logprob: -8.99738883972168
    7. ' elif' → logprob: -11.24738883972168
    8. ' else' → logprob: -11.49738883972168
    9. ' if' → logprob: -12.99738883972168
    10. ':

' → logprob: -12.99738883972168

Token 1000: ' PLUS' (ID: 61301)
  Prédit: 'PLUS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'PLUS' → logprob: -0.25251564383506775
    2. ' PLUS' → logprob: -1.5025156736373901
    3. 'MIN' → logprob: -8.37751579284668
    4. 'N' → logprob: -9.12751579284668
    5. ' N' → logprob: -9.62751579284668
    6. ' not' → logprob: -9.75251579284668
    7. ' MIN' → logprob: -9.87751579284668
    8. 'plus' → logprob: -10.75251579284668
    9. 'A' → logprob: -11.12751579284668
    10. ' plus' → logprob: -11.37751579284668

Token 1001: ':
' (ID: 734)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -1.1093249320983887
    2. ' ==' → logprob: -1.4843249320983887
    3. ' >=' → logprob: -1.6093249320983887
    4. '>' → logprob: -2.1093249320983887
    5. '==' → logprob: -2.6093249320983887
    6. '>=' → logprob: -3.1093249320983887
    7. ' <=' → logprob: -5.984324932098389
    8. '<=' → logprob: -7.359324932098389
    9. ' <' → logprob: -8.359325408935547
    10. '   ' → logprob: -8.359325408935547

Token 1002: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.960208535194397
    2. '   ' → logprob: -0.960208535194397
    3. ':
' → logprob: -1.460208535194397
    4. 'for' → logprob: -7.210208415985107
    5. '#' → logprob: -7.710208415985107
    6. ' for' → logprob: -7.960208415985107
    7. ' :' → logprob: -8.835208892822266
    8. 'while' → logprob: -8.960208892822266
    9. ' :
' → logprob: -9.085208892822266
    10. ' and' → logprob: -9.460208892822266

Token 1003: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5459247827529907
    2. 'while' → logprob: -1.2959247827529907
    3. 'tmp' → logprob: -2.795924663543701
    4. '#' (adapté à ' #') → logprob: -3.045924663543701
    5. 'x' → logprob: -3.420924663543701
    6. '   ' → logprob: -5.420924663543701
    7. 'a' → logprob: -7.545924663543701
    8. 'i' → logprob: -8.29592514038086
    9. '```' → logprob: -8.54592514038086
    10. 'y' → logprob: -8.92092514038086

Token 1004: ' Dans' (ID: 22082)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4953206777572632
    2. 'x' → logprob: -1.6203206777572632
    3. 'while' → logprob: -2.3703207969665527
    4. 'tmp' → logprob: -2.6203207969665527
    5. '#' → logprob: -3.9953207969665527
    6. 'a' → logprob: -5.370320796966553
    7. 'y' → logprob: -5.870320796966553
    8. 'A' → logprob: -8.495320320129395
    9. '   ' → logprob: -8.995320320129395
    10. 'i' → logprob: -9.370320320129395

Token 1005: ' ce' (ID: 2357)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.15162762999534607
    2. 'A' → logprob: -2.651627540588379
    3. 'while' → logprob: -3.651627540588379
    4. 'tmp' → logprob: -4.151627540588379
    5. 'for' → logprob: -4.776627540588379
    6. 'range' → logprob: -5.151627540588379
    7. 'this' → logprob: -5.651627540588379
    8. '   ' → logprob: -6.151627540588379
    9. 'len' → logprob: -6.401627540588379
    10. 'N' → logprob: -6.901627540588379

Token 1006: ' cas' (ID: 2108)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.17338643968105316
    2. ' while' → logprob: -2.173386335372925
    3. '#' → logprob: -4.048386573791504
    4. 'for' → logprob: -4.548386573791504
    5. '   ' → logprob: -5.048386573791504
    6. 'else' → logprob: -5.548386573791504
    7. 'elif' → logprob: -6.423386573791504
    8. ' for' → logprob: -6.673386573791504
    9. ' #' → logprob: -6.923386573791504
    10. '
' → logprob: -7.423386573791504

Token 1007: ' on' (ID: 402)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6492528319358826
    2. ':' → logprob: -1.2742528915405273
    3. '   ' → logprob: -1.6492528915405273
    4. '#' → logprob: -5.899252891540527
    5. 'x' → logprob: -7.274252891540527
    6. 'for' → logprob: -7.774252891540527
    7. 'a' → logprob: -8.024252891540527
    8. 'tmp' → logprob: -8.149252891540527
    9. ' for' → logprob: -8.399252891540527
    10. ' x' → logprob: -8.399252891540527

Token 1008: ' proc' (ID: 14550)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8240475058555603
    2. '#' → logprob: -1.199047565460205
    3. 'for' → logprob: -2.199047565460205
    4. ' for' → logprob: -3.699047565460205
    5. 'tmp' → logprob: -3.699047565460205
    6. ' #' → logprob: -3.824047565460205
    7. 'continue' → logprob: -4.324047565460205
    8. ' continue' → logprob: -4.449047565460205
    9. 'a' → logprob: -4.699047565460205
    10. ' prend' → logprob: -5.199047565460205

Token 1009: 'ède' (ID: 48404)
  Prédit: 'ède'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ède' → logprob: -1.0722968578338623
    2. 'it' → logprob: -1.3222968578338623
    3. 'r' → logprob: -1.9472968578338623
    4. 'd' → logprob: -2.6972968578338623
    5. 'de' → logprob: -2.9472968578338623
    6. 'rs' → logprob: -3.8222968578338623
    7. 'ede' → logprob: -4.072297096252441
    8. 'iv' → logprob: -4.822297096252441
    9. 'rv' → logprob: -4.822297096252441
    10. 'ite' → logprob: -4.947297096252441

Token 1010: ' diff' (ID: 8868)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008422848768532276
    2. '#' → logprob: -5.7584228515625
    3. 'for' → logprob: -6.2584228515625
    4. 'à' → logprob: -6.3834228515625
    5. ' à' → logprob: -7.0084228515625
    6. '    ' → logprob: -8.5084228515625
    7. 'from' → logprob: -9.2584228515625
    8. '       ' → logprob: -9.2584228515625
    9. 'par' → logprob: -9.8834228515625
    10. ' ' → logprob: -10.2584228515625

Token 1011: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.5474047064781189
    2. '#' → logprob: -1.6724047660827637
    3. '       ' → logprob: -2.7974047660827637
    4. 'éd' → logprob: -3.2974047660827637
    5. '   ' → logprob: -3.6724047660827637
    6. 'u' → logprob: -4.172404766082764
    7. 'éder' → logprob: -4.797404766082764
    8. 'ur' → logprob: -4.797404766082764
    9. 'édé' → logprob: -5.047404766082764
    10. 'par' → logprob: -5.172404766082764

Token 1012: 'rem' (ID: 1935)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.09831710159778595
    2. 'rement' → logprob: -3.3483171463012695
    3. 'nit' → logprob: -4.5983171463012695
    4. 'par' → logprob: -5.3483171463012695
    5. 'init' → logprob: -5.3483171463012695
    6. 'rem' → logprob: -5.5983171463012695
    7. 'in' → logprob: -5.8483171463012695
    8. 'ri' → logprob: -6.2233171463012695
    9. '#' → logprob: -6.2233171463012695
    10. 'r' → logprob: -6.3483171463012695

Token 1013: 'ment' (ID: 508)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.12890946865081787
    2. 'od' → logprob: -3.6289095878601074
    3. 'ment' → logprob: -3.8789095878601074
    4. 'ode' → logprob: -4.253909587860107
    5. '#' → logprob: -4.503909587860107
    6. 'ent' → logprob: -4.753909587860107
    7. 'oder' → logprob: -5.253909587860107
    8. 'inement' → logprob: -5.628909587860107
    9. 'urement' → logprob: -5.878909587860107
    10. 'ed' → logprob: -6.003909587860107

Token 1014: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26479342579841614
    2. ':' → logprob: -1.5147933959960938
    3. ':
' → logprob: -4.389793395996094
    4. '#' → logprob: -9.139793395996094
    5. 'for' → logprob: -9.139793395996094
    6. ' for' → logprob: -9.889793395996094
    7. 'while' → logprob: -10.139793395996094
    8. ' :' → logprob: -11.389793395996094
    9. '    
' → logprob: -11.764793395996094
    10. ':\' → logprob: -12.139793395996094

Token 1015: ' maxim' (ID: 29045)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0866799354553223
    2. 'tmp' → logprob: -1.4616799354553223
    3. '#' → logprob: -1.8366799354553223
    4. ' x' → logprob: -2.7116799354553223
    5. ' tmp' → logprob: -2.9616799354553223
    6. 'i' → logprob: -3.3366799354553223
    7. 'a' → logprob: -3.5866799354553223
    8. 'for' → logprob: -3.7116799354553223
    9. ' y' → logprob: -3.8366799354553223
    10. 'y' → logprob: -4.336679935455322

Token 1016: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.003698058659210801
    2. 'ser' → logprob: -6.003697872161865
    3. 'al' → logprob: -7.128697872161865
    4. 'm' → logprob: -8.378698348999023
    5. 'is' → logprob: -9.753698348999023
    6. '#' → logprob: -10.378698348999023
    7. 'aiser' → logprob: -11.128698348999023
    8. 'user' → logprob: -11.253698348999023
    9. '```' → logprob: -11.253698348999023
    10. 'er' → logprob: -11.253698348999023

Token 1017: ' le' (ID: 505)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.6781654953956604
    2. ' la' → logprob: -1.5531654357910156
    3. 'tmp' → logprob: -2.4281654357910156
    4. 'le' → logprob: -2.6781654357910156
    5. '#' → logprob: -2.9281654357910156
    6. 'l' → logprob: -3.4281654357910156
    7. ' le' → logprob: -3.9281654357910156
    8. 'x' → logprob: -5.053165435791016
    9. 'the' → logprob: -6.053165435791016
    10. 'A' → logprob: -6.053165435791016

Token 1018: ' résultat' (ID: 62556)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.1450565904378891
    2. 'score' → logprob: -2.7700564861297607
    3. 'diff' → logprob: -3.5200564861297607
    4. '#' → logprob: -4.39505672454834
    5. 'result' → logprob: -4.39505672454834
    6. 'rés' → logprob: -5.02005672454834
    7. 'print' → logprob: -5.27005672454834
    8. 'éc' → logprob: -6.39505672454834
    9. 'while' → logprob: -6.77005672454834
    10. 'x' → logprob: -7.27005672454834

Token 1019: ' final' (ID: 1721)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6347320675849915
    2. '   ' → logprob: -0.7597320675849915
    3. ':
' → logprob: -6.259732246398926
    4. 'while' → logprob: -9.509732246398926
    5. ' :' → logprob: -9.759732246398926
    6. ' while' → logprob: -10.759732246398926
    7. '#' → logprob: -11.009732246398926
    8. ' =' → logprob: -11.884732246398926
    9. ',' → logprob: -12.009732246398926
    10. '.' → logprob: -12.134732246398926

Token 1020: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.299412339925766
    2. ':' → logprob: -1.4244123697280884
    3. ':
' → logprob: -4.049412250518799
    4. ' :' → logprob: -8.674412727355957
    5. 'while' → logprob: -9.174412727355957
    6. ' while' → logprob: -9.424412727355957
    7. ',' → logprob: -9.799412727355957
    8. '```' → logprob: -10.174412727355957
    9. ' :
' → logprob: -10.174412727355957
    10. '#' → logprob: -10.424412727355957

Token 1021: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005077573587186635
    2. 'while' → logprob: -8.625507354736328
    3. ' while' → logprob: -8.625507354736328
    4. '```' → logprob: -9.500507354736328
    5. '#' → logprob: -9.750507354736328
    6. '   ' → logprob: -13.000507354736328
    7. ' #' → logprob: -13.250507354736328
    8. '	while' → logprob: -13.375507354736328
    9. ' for' → logprob: -13.625507354736328
    10. 'for' → logprob: -13.625507354736328

Token 1022: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1451621651649475
    2. '#' (adapté à ' #') → logprob: -3.1451621055603027
    3. 'x' → logprob: -3.1451621055603027
    4. 'for' → logprob: -3.7701621055603027
    5. 'while' → logprob: -4.395162105560303
    6. 'tmp' → logprob: -5.395162105560303
    7. 'y' → logprob: -5.770162105560303
    8. 'a' → logprob: -6.145162105560303
    9. 'A' → logprob: -7.020162105560303
    10. ' for' → logprob: -7.145162105560303

Token 1023: ' Parc' (ID: 68618)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.549461841583252
    2. 'for' → logprob: -1.299461841583252
    3. 'x' → logprob: -2.674461841583252
    4. '#' → logprob: -3.174461841583252
    5. 'while' → logprob: -4.549461841583252
    6. ' for' → logprob: -4.674461841583252
    7. 'y' → logprob: -5.174461841583252
    8. 'a' → logprob: -5.549461841583252
    9. 'tmp' → logprob: -5.799461841583252
    10. 'A' → logprob: -6.299461841583252

Token 1024: 'our' (ID: 401)
  Prédit: 'our'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.01933383196592331
    2. '#' → logprob: -4.019333839416504
    3. 'ours' → logprob: -7.394333839416504
    4. 'ourt' → logprob: -8.769333839416504
    5. 'ou' → logprob: -9.269333839416504
    6. '```' → logprob: -10.019333839416504
    7. 'for' → logprob: -10.144333839416504
    8. 'cour' → logprob: -10.394333839416504
    9. 'o' → logprob: -10.644333839416504
    10. '   ' → logprob: -10.894333839416504

Token 1025: 'ir' (ID: 380)
  Prédit: 'our'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.1358007937669754
    2. '#' → logprob: -3.135800838470459
    3. 'ir' → logprob: -3.260800838470459
    4. 'r' → logprob: -3.510800838470459
    5. 'rir' → logprob: -5.885800838470459
    6. 'or' → logprob: -6.010800838470459
    7. 'ours' → logprob: -6.260800838470459
    8. '```' → logprob: -6.635800838470459
    9. 'ur' → logprob: -7.010800838470459
    10. 're' → logprob: -7.135800838470459

Token 1026: ' tous' (ID: 10688)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.030603041872382164
    2. ' range' → logprob: -3.5306029319763184
    3. 'A' → logprob: -7.780602931976318
    4. 'for' → logprob: -8.280603408813477
    5. '(range' → logprob: -8.780603408813477
    6. ' A' → logprob: -11.905603408813477
    7. '   ' → logprob: -12.155603408813477
    8. 'i' → logprob: -12.280603408813477
    9. '	range' → logprob: -13.405603408813477
    10. 're' → logprob: -13.655603408813477

Token 1027: ' les' (ID: 1341)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.25196409225463867
    2. 'A' → logprob: -2.2519640922546387
    3. ' range' → logprob: -3.0019640922546387
    4. 'i' → logprob: -3.1269640922546387
    5. '(range' → logprob: -4.876964092254639
    6. ' i' → logprob: -5.501964092254639
    7. ' A' → logprob: -6.251964092254639
    8. 'but' → logprob: -6.376964092254639
    9. '(A' → logprob: -6.376964092254639
    10. '#' → logprob: -6.876964092254639

Token 1028: ' éléments' (ID: 57375)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.18997716903686523
    2. 'A' → logprob: -1.9399771690368652
    3. 'a' → logprob: -5.064977169036865
    4. 'elements' → logprob: -5.064977169036865
    5. ' éléments' → logprob: -5.189977169036865
    6. 'i' → logprob: -5.564977169036865
    7. 'él' → logprob: -6.189977169036865
    8. 'except' → logprob: -6.814977169036865
    9. '#' → logprob: -6.939977169036865
    10. 'indices' → logprob: -7.064977169036865

Token 1029: ' sauf' (ID: 87919)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5577981472015381
    2. '(' → logprob: -1.932798147201538
    3. 'range' → logprob: -2.807798147201538
    4. ' for' → logprob: -2.807798147201538
    5. '[' → logprob: -3.057798147201538
    6. '[:-' → logprob: -3.557798147201538
    7. 'A' → logprob: -3.932798147201538
    8. ' range' → logprob: -4.307798385620117
    9. ' in' → logprob: -4.432798385620117
    10. 'in' → logprob: -5.057798385620117

Token 1030: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.09766276180744171
    2. 'l' → logprob: -3.0976626873016357
    3. 'la' → logprob: -3.8476626873016357
    4. 'A' → logprob: -4.597662925720215
    5. '0' → logprob: -4.972662925720215
    6. ' le' → logprob: -6.097662925720215
    7. '1' → logprob: -6.097662925720215
    8. 'len' → logprob: -6.597662925720215
    9. '#' → logprob: -7.097662925720215
    10. '(' → logprob: -7.597662925720215

Token 1031: ' dernier' (ID: 27982)
  Prédit: 'dern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dern' → logprob: -0.012655500322580338
    2. 'prem' → logprob: -4.887655735015869
    3. 'der' → logprob: -5.887655735015869
    4. '0' → logprob: -6.387655735015869
    5. ' dernier' → logprob: -8.012655258178711
    6. 'Dern' → logprob: -9.762655258178711
    7. '-' → logprob: -10.012655258178711
    8. '1' → logprob: -10.012655258178711
    9. 'last' → logprob: -10.387655258178711
    10. ' premier' → logprob: -10.887655258178711

Token 1032: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3513153791427612
    2. 'for' → logprob: -1.9763153791427612
    3. ' range' → logprob: -2.226315498352051
    4. '(' → logprob: -2.351315498352051
    5. ' for' → logprob: -2.351315498352051
    6. 'range' → logprob: -2.476315498352051
    7. '(range' → logprob: -3.351315498352051
    8. '(A' → logprob: -3.476315498352051
    9. ':' → logprob: -3.476315498352051
    10. '[:-' → logprob: -3.726315498352051

Token 1033: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43912819027900696
    2. ':' → logprob: -1.5641281604766846
    3. ' for' → logprob: -2.6891281604766846
    4. 'for' → logprob: -3.3141281604766846
    5. '```' → logprob: -3.9391281604766846
    6. ':
' → logprob: -4.689128398895264
    7. ',' → logprob: -5.064128398895264
    8. ' :' → logprob: -6.689128398895264
    9. '[:-' → logprob: -6.814128398895264
    10. ' (' → logprob: -7.439128398895264

Token 1034: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.589909017086029
    2. 'for' (adapté à ' for') → logprob: -1.0899090766906738
    3. ' for' → logprob: -2.214909076690674
    4. '	for' → logprob: -9.339908599853516
    5. '```' → logprob: -9.339908599853516
    6. 'i' → logprob: -11.839908599853516
    7. ' i' → logprob: -12.214908599853516
    8. 'x' → logprob: -12.714908599853516
    9. ' ' → logprob: -12.714908599853516
    10. ':' → logprob: -12.839908599853516

Token 1035: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01111467182636261
    2. ' i' → logprob: -4.511114597320557
    3. 'a' → logprob: -10.636115074157715
    4. ' ' → logprob: -11.011115074157715
    5. 'x' → logprob: -11.386115074157715
    6. '   ' → logprob: -12.261115074157715
    7. '	i' → logprob: -13.136115074157715
    8. 'A' → logprob: -13.511115074157715
    9. 'range' → logprob: -13.636115074157715
    10. '  ' → logprob: -13.636115074157715

Token 1036: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029778728261590004
    2. 'in' → logprob: -3.5297787189483643
    3. ',' → logprob: -11.529778480529785
    4. ' ' → logprob: -12.154778480529785
    5. 'import' → logprob: -13.029778480529785
    6. '0' → logprob: -13.154778480529785
    7. '_' → logprob: -13.404778480529785
    8. ' ,' → logprob: -13.904778480529785
    9. '   ' → logprob: -14.279778480529785
    10. '  ' → logprob: -14.404778480529785

Token 1037: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.003180094063282013
    2. ' range' → logprob: -5.753180027008057
    3. ' ' → logprob: -14.003180503845215
    4. '   ' → logprob: -14.003180503845215
    5. '  ' → logprob: -14.753180503845215
    6. '(range' → logprob: -16.5031795501709
    7. '    ' → logprob: -16.8781795501709
    8. '	range' → logprob: -17.2531795501709
    9. 'rang' → logprob: -18.0031795501709
    10. 'r' → logprob: -18.3781795501709

Token 1038: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.009209118783473969
    2. '(' → logprob: -4.759209156036377
    3. '(len' → logprob: -7.759209156036377
    4. 'N' → logprob: -8.884208679199219
    5. '0' → logprob: -10.634208679199219
    6. 'len' → logprob: -13.634208679199219
    7. '(P' → logprob: -14.009208679199219
    8. '(n' → logprob: -14.134208679199219
    9. ' (' → logprob: -14.634208679199219
    10. '   ' → logprob: -15.259208679199219

Token 1039: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.11376633495092392
    2. ' -' → logprob: -2.2387664318084717
    3. '):
' → logprob: -7.238766193389893
    4. '   ' → logprob: -9.23876667022705
    5. '):' → logprob: -9.86376667022705
    6. ' ' → logprob: -10.73876667022705
    7. '[:-' → logprob: -10.73876667022705
    8. ')' → logprob: -11.73876667022705
    9. ' ):
' → logprob: -12.23876667022705
    10. '1' → logprob: -12.36376667022705

Token 1040: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3782830137643032e-05
    2. '2' → logprob: -11.37501335144043
    3. ' ' → logprob: -13.37501335144043
    4. '   ' → logprob: -15.43751335144043
    5. '```' → logprob: -15.93751335144043
    6. '１' → logprob: -16.68751335144043
    7. ')' → logprob: -16.75001335144043
    8. '-' → logprob: -17.31251335144043
    9. '१' → logprob: -17.37501335144043
    10. '  ' → logprob: -17.87501335144043

Token 1041: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.16830509901046753
    2. '):' → logprob: -2.0433051586151123
    3. '-' → logprob: -4.043304920196533
    4. '   ' → logprob: -5.043304920196533
    5. ' -' → logprob: -7.418304920196533
    6. ')' → logprob: -8.293305397033691
    7. '):
' → logprob: -8.668305397033691
    8. ' ):
' → logprob: -9.668305397033691
    9. ':' → logprob: -9.793305397033691
    10. '  ' → logprob: -9.918305397033691

Token 1042: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022932328283786774
    2. '       ' → logprob: -6.752293109893799
    3. ' x' → logprob: -7.877293109893799
    4. 'x' → logprob: -8.502293586730957
    5. ':' → logprob: -8.627293586730957
    6. '```' → logprob: -8.752293586730957
    7. ',' → logprob: -9.752293586730957
    8. '    ' → logprob: -10.252293586730957
    9. '#' → logprob: -10.877293586730957
    10. '	x' → logprob: -11.252293586730957

Token 1043: ' #' (ID: 1069)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.016269903630018234
    2. '   ' → logprob: -4.516269683837891
    3. ' x' → logprob: -5.266269683837891
    4. '	x' → logprob: -10.64126968383789
    5. '       ' → logprob: -11.14126968383789
    6. ' ' → logprob: -12.14126968383789
    7. 'y' → logprob: -14.14126968383789
    8. '  ' → logprob: -14.76626968383789
    9. '    ' → logprob: -15.51626968383789
    10. 'a' → logprob: -15.76626968383789

Token 1044: ' Tant' (ID: 169541)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0002342912630410865
    2. 'a' → logprob: -8.500234603881836
    3. '   ' → logprob: -11.000234603881836
    4. ' x' → logprob: -11.250234603881836
    5. 'print' → logprob: -14.625234603881836
    6. 'y' → logprob: -15.250234603881836
    7. '```' → logprob: -15.250234603881836
    8. '	x' → logprob: -16.250234603881836
    9. '       ' → logprob: -17.500234603881836
    10. ' ' → logprob: -18.125234603881836

Token 1045: ' qu' (ID: 474)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016011256724596024
    2. '       ' → logprob: -4.5160112380981445
    3. 'not' → logprob: -6.5160112380981445
    4. 'x' → logprob: -6.7660112380981445
    5. 'A' → logprob: -7.3910112380981445
    6. ' not' → logprob: -8.141011238098145
    7. ' ' → logprob: -8.266011238098145
    8. '  ' → logprob: -8.266011238098145
    9. '(A' → logprob: -8.391011238098145
    10. '#' → logprob: -8.766011238098145

Token 1046: ''on' (ID: 25812)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.14773398637771606
    2. ' i' → logprob: -2.2727339267730713
    3. 'A' → logprob: -4.52273416519165
    4. '   ' → logprob: -4.64773416519165
    5. 'x' → logprob: -5.64773416519165
    6. ' A' → logprob: -6.27273416519165
    7. 'True' → logprob: -6.39773416519165
    8. 'PLUS' → logprob: -6.64773416519165
    9. ' ' → logprob: -7.02273416519165
    10. ' True' → logprob: -7.39773416519165

Token 1047: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.912834107875824
    2. '       ' → logprob: -1.4128341674804688
    3. 'i' → logprob: -2.0378341674804688
    4. 'a' → logprob: -2.5378341674804688
    5. ' i' → logprob: -3.4128341674804688
    6. 'x' → logprob: -4.037834167480469
    7. ' a' → logprob: -4.162834167480469
    8. ' x' → logprob: -4.537834167480469
    9. ' ' → logprob: -4.787834167480469
    10. ' y' → logprob: -5.412834167480469

Token 1048: ''est' (ID: 6616)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.9530119299888611
    2. ' <' → logprob: -1.5780119895935059
    3. ' !=' → logprob: -1.9530119895935059
    4. '!=' → logprob: -2.953011989593506
    5. '       ' → logprob: -3.328011989593506
    6. 'a' → logprob: -3.828011989593506
    7. '[i' → logprob: -3.953011989593506
    8. '   ' → logprob: -4.203011989593506
    9. 'ot' → logprob: -4.328011989593506
    10. ' i' → logprob: -4.453011989593506

Token 1049: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.18376430869102478
    2. ' pas' → logprob: -1.8087643384933472
    3. 'à' → logprob: -6.183764457702637
    4. '_pas' → logprob: -7.683764457702637
    5. 'not' → logprob: -8.308764457702637
    6. ' à' → logprob: -8.808764457702637
    7. 'Pas' → logprob: -8.808764457702637
    8. 'dans' → logprob: -8.808764457702637
    9. 'i' → logprob: -9.058764457702637
    10. ' not' → logprob: -9.308764457702637

Token 1050: ' à' (ID: 1221)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -1.001314401626587
    2. 'i' → logprob: -1.501314401626587
    3. 'dans' → logprob: -1.751314401626587
    4. 'à' → logprob: -2.251314401626587
    5. ' pas' → logprob: -2.501314401626587
    6. ' dans' → logprob: -3.751314401626587
    7. ' à' → logprob: -5.001314163208008
    8. 'A' → logprob: -6.001314163208008
    9. 'au' → logprob: -6.126314163208008
    10. ' i' → logprob: -6.251314163208008

Token 1051: ' l' (ID: 305)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.02249651402235031
    2. 'i' → logprob: -4.272496700286865
    3. '(N' → logprob: -5.647496700286865
    4. ' N' → logprob: -6.647496700286865
    5. 'range' → logprob: -6.772496700286865
    6. 'len' → logprob: -7.022496700286865
    7. '0' → logprob: -7.772496700286865
    8. '<N' → logprob: -8.397496223449707
    9. ' ' → logprob: -8.772496223449707
    10. 'A' → logprob: -8.897496223449707

Token 1052: ''avant' (ID: 161711)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.9605832695960999
    2. 'i' → logprob: -1.585583209991455
    3. 'N' → logprob: -1.960583209991455
    4. 'a' → logprob: -2.710583209991455
    5. 'last' → logprob: -2.835583209991455
    6. 'e' → logprob: -3.710583209991455
    7. 'ast' → logprob: -4.335583209991455
    8. '```' → logprob: -4.335583209991455
    9. '-' → logprob: -4.960583209991455
    10. '(N' → logprob: -5.085583209991455

Token 1053: '-' (ID: 12)
  Prédit: 'dern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dern' → logprob: -0.041292402893304825
    2. 'der' → logprob: -3.791292428970337
    3. '-' → logprob: -4.041292190551758
    4. '```' → logprob: -8.291292190551758
    5. 'Dern' → logprob: -10.416292190551758
    6. '_der' → logprob: -10.791292190551758
    7. ' dernier' → logprob: -12.541292190551758
    8. ' dernière' → logprob: -13.416292190551758
    9. 'last' → logprob: -14.291292190551758
    10. ' der' → logprob: -14.791292190551758

Token 1054: 'der' (ID: 761)
  Prédit: 'dern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dern' → logprob: -0.12701693177223206
    2. 'der' → logprob: -2.127017021179199
    3. '-' → logprob: -10.1270170211792
    4. '```' → logprob: -10.1270170211792
    5. 'avant' → logprob: -13.1270170211792
    6. 'd' → logprob: -13.8770170211792
    7. 'Dern' → logprob: -13.8770170211792
    8. 'last' → logprob: -14.1270170211792
    9. 'prem' → logprob: -14.3770170211792
    10. ' dernière' → logprob: -14.6270170211792

Token 1055: 'ni' (ID: 1906)
  Prédit: 'nier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nier' → logprob: -0.590623140335083
    2. 'ier' → logprob: -1.215623140335083
    3. 'ière' → logprob: -2.340623140335083
    4. 'ni' → logprob: -2.965623140335083
    5. 'der' → logprob: -7.090622901916504
    6. 'iere' → logprob: -7.965622901916504
    7. 'dern' → logprob: -9.465622901916504
    8. 'niers' → logprob: -9.465622901916504
    9. 'ières' → logprob: -9.840622901916504
    10. '1' → logprob: -9.965622901916504

Token 1056: 'ère' (ID: 4346)
  Prédit: 'ière'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ière' → logprob: -0.44592660665512085
    2. 'ier' → logprob: -1.1959266662597656
    3. 'i' → logprob: -3.1959266662597656
    4. 'der' → logprob: -4.820926666259766
    5. 'ni' → logprob: -5.820926666259766
    6. '-' → logprob: -6.445926666259766
    7. 'iere' → logprob: -6.820926666259766
    8. 'ime' → logprob: -7.195926666259766
    9. 'ième' → logprob: -7.195926666259766
    10. 'dern' → logprob: -7.820926666259766

Token 1057: ' étape' (ID: 83661)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.6472958326339722
    2. ':' → logprob: -1.1472958326339722
    3. ' :' → logprob: -2.8972959518432617
    4. 'element' → logprob: -3.0222959518432617
    5. 'i' → logprob: -4.022295951843262
    6. ' element' → logprob: -4.522295951843262
    7. ' i' → logprob: -5.397295951843262
    8. 'position' → logprob: -5.397295951843262
    9. ' ' → logprob: -5.647295951843262
    10. ' élément' → logprob: -5.772295951843262

Token 1058: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0506641864776611
    2. '   ' → logprob: -1.0506641864776611
    3. '       ' → logprob: -1.4256641864776611
    4. ':
' → logprob: -3.175664186477661
    5. ',' → logprob: -4.675663948059082
    6. '	' → logprob: -6.300663948059082
    7. ' :' → logprob: -6.425663948059082
    8. '	   ' → logprob: -6.675663948059082
    9. '{' → logprob: -7.175663948059082
    10. '           ' → logprob: -7.800663948059082

Token 1059: ' on' (ID: 402)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6250378489494324
    2. '   ' → logprob: -1.0000379085540771
    3. ' x' → logprob: -2.375037908554077
    4. '       ' → logprob: -5.750037670135498
    5. '	x' → logprob: -7.375037670135498
    6. ' ' → logprob: -9.875038146972656
    7. '  ' → logprob: -12.500038146972656
    8. '    ' → logprob: -12.500038146972656
    9. '```' → logprob: -13.000038146972656
    10. 'print' → logprob: -13.000038146972656

Token 1060: ' continue' (ID: 4901)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.5628178119659424
    2. '   ' → logprob: -1.6878178119659424
    3. '       ' → logprob: -1.9378178119659424
    4. '#' → logprob: -2.1878178119659424
    5. 'a' → logprob: -2.3128178119659424
    6. ',' → logprob: -3.3128178119659424
    7. 's' → logprob: -3.6878178119659424
    8. '    ' → logprob: -3.6878178119659424
    9. 'print' → logprob: -4.187817573547363
    10. 'contin' → logprob: -4.312817573547363

Token 1061: ' à' (ID: 1221)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7160027027130127
    2. '   ' → logprob: -0.8410027027130127
    3. 'x' → logprob: -3.7160027027130127
    4. ' x' → logprob: -3.7160027027130127
    5. ':' → logprob: -4.341002464294434
    6. ':
' → logprob: -5.716002464294434
    7. '{' → logprob: -5.841002464294434
    8. '	x' → logprob: -5.841002464294434
    9. '{x' → logprob: -6.216002464294434
    10. '    ' → logprob: -6.966002464294434

Token 1062: ' sou' (ID: 4069)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.14373256266117096
    2. 'a' → logprob: -2.2687325477600098
    3. 'y' → logprob: -4.26873254776001
    4. ' x' → logprob: -4.76873254776001
    5. 'print' → logprob: -5.51873254776001
    6. '   ' → logprob: -6.39373254776001
    7. ' y' → logprob: -6.64373254776001
    8. ' a' → logprob: -7.51873254776001
    9. ' print' → logprob: -9.268733024597168
    10. 's' → logprob: -10.018733024597168

Token 1063: 'stra' (ID: 14867)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.46923065185546875
    2. 'stra' → logprob: -1.0942306518554688
    3. 'tr' → logprob: -3.9692306518554688
    4. 'tra' → logprob: -4.594230651855469
    5. 'tract' → logprob: -5.719230651855469
    6. 'stract' → logprob: -6.094230651855469
    7. 'str' → logprob: -7.094230651855469
    8. 'A' → logprob: -7.344230651855469
    9. '   ' → logprob: -7.344230651855469
    10. '#' → logprob: -7.469230651855469

Token 1064: 'ire' (ID: 594)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.011979739181697369
    2. 'ire' → logprob: -5.511979579925537
    3. 'cter' → logprob: -5.886979579925537
    4. 'ction' → logprob: -6.511979579925537
    5. 'c' → logprob: -7.886979579925537
    6. 'nt' → logprob: -8.011980056762695
    7. '   ' → logprob: -8.011980056762695
    8. 'i' → logprob: -8.136980056762695
    9. 't' → logprob: -8.261980056762695
    10. '#' → logprob: -8.261980056762695

Token 1065: ' le' (ID: 505)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6186786890029907
    2. 'tmp' → logprob: -1.6186786890029907
    3. ' A' → logprob: -1.8686786890029907
    4. '(A' → logprob: -3.118678569793701
    5. '(' → logprob: -3.618678569793701
    6. ' tmp' → logprob: -3.868678569793701
    7. '(tmp' → logprob: -5.243678569793701
    8. ' (' → logprob: -5.243678569793701
    9. ',' → logprob: -5.493678569793701
    10. ' ' → logprob: -7.493678569793701

Token 1066: ' plus' (ID: 2932)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0014573780354112387
    2. ' A' → logprob: -6.626457214355469
    3. ',' → logprob: -9.376457214355469
    4. '0' → logprob: -10.501457214355469
    5. ' ' → logprob: -12.001457214355469
    6. 'i' → logprob: -13.126457214355469
    7. '[' → logprob: -13.126457214355469
    8. '(A' → logprob: -13.376457214355469
    9. ' ,' → logprob: -13.876457214355469
    10. ',A' → logprob: -14.126457214355469

Token 1067: ' grand' (ID: 6363)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.3876688778400421
    2. ' grand' → logprob: -1.1376688480377197
    3. ' grands' → logprob: -8.51266860961914
    4. 'large' → logprob: -9.01266860961914
    5. ' ' → logprob: -9.13766860961914
    6. '```' → logprob: -9.63766860961914
    7. ' large' → logprob: -10.26266860961914
    8. 'g' → logprob: -10.26266860961914
    9. 'Grand' → logprob: -10.63766860961914
    10. 'plus' → logprob: -11.01266860961914

Token 1068: ' disponible' (ID: 32165)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(A' → logprob: -1.1797059774398804
    2. '(' → logprob: -1.4297059774398804
    3. '()' → logprob: -1.5547059774398804
    4. 'A' → logprob: -2.17970609664917
    5. ' (' → logprob: -2.80470609664917
    6. '(
' → logprob: -4.30470609664917
    7. '(),' → logprob: -4.67970609664917
    8. ',' → logprob: -4.80470609664917
    9. 'élé' → logprob: -5.17970609664917
    10. ')' → logprob: -5.17970609664917

Token 1069: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0098739862442017
    2. '(' → logprob: -1.8848739862442017
    3. ' (' → logprob: -1.8848739862442017
    4. '(A' → logprob: -1.8848739862442017
    5. '   ' → logprob: -2.884873867034912
    6. ' de' → logprob: -3.884873867034912
    7. ' ' → logprob: -4.009873867034912
    8. ' ,' → logprob: -4.384873867034912
    9. '()' → logprob: -4.509873867034912
    10. 'from' → logprob: -4.759873867034912

Token 1070: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.021205373108386993
    2. 'A' → logprob: -4.021205425262451
    3. ' tmp' → logprob: -5.896205425262451
    4. ' A' → logprob: -8.521204948425293
    5. '0' → logprob: -10.521204948425293
    6. '(tmp' → logprob: -11.146204948425293
    7. '	tmp' → logprob: -11.521204948425293
    8. 'temp' → logprob: -11.896204948425293
    9. ',' → logprob: -12.396204948425293
    10. ' ' → logprob: -12.521204948425293

Token 1071: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3281222581863403
    2. '       ' → logprob: -1.4531222581863403
    3. '   ' → logprob: -1.4531222581863403
    4. ',' → logprob: -2.078122138977051
    5. ' =' → logprob: -2.328122138977051
    6. '=' → logprob: -3.828122138977051
    7. ' :' → logprob: -4.953122138977051
    8. ':
' → logprob: -5.578122138977051
    9. ' ,' → logprob: -6.328122138977051
    10. '.' → logprob: -6.578122138977051

Token 1072: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0988699346780777
    2. '   ' → logprob: -2.473870038986206
    3. ':' → logprob: -5.598869800567627
    4. 'x' → logprob: -6.973869800567627
    5. '```' → logprob: -6.973869800567627
    6. ' x' → logprob: -7.098869800567627
    7. ' :' → logprob: -7.348869800567627
    8. ':
' → logprob: -7.723869800567627
    9. '        
' → logprob: -7.723869800567627
    10. ',' → logprob: -7.973869800567627

Token 1073: ' if' (ID: 538)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.0915887355804443
    2. 'x' → logprob: -1.3415887355804443
    3. '   ' → logprob: -1.3415887355804443
    4. '       ' → logprob: -1.9665887355804443
    5. '	x' → logprob: -7.466588973999023
    6. '```' → logprob: -7.716588973999023
    7. ' ' → logprob: -8.716588973999023
    8. '    ' → logprob: -8.841588973999023
    9. '        
' → logprob: -10.591588973999023
    10. '	   ' → logprob: -10.591588973999023

Token 1074: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.009210065007209778
    2. 'A' → logprob: -5.634210109710693
    3. ' i' → logprob: -5.634210109710693
    4. 'tmp' → logprob: -6.634210109710693
    5. 'N' → logprob: -8.009209632873535
    6. 'PLUS' → logprob: -8.634209632873535
    7. ' A' → logprob: -10.384209632873535
    8. 'a' → logprob: -10.634209632873535
    9. ' tmp' → logprob: -10.759209632873535
    10. 'plus' → logprob: -10.884209632873535

Token 1075: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1679358184337616
    2. ' !=' → logprob: -2.167935848236084
    3. '<' → logprob: -3.417935848236084
    4. ' ==' → logprob: -6.167935848236084
    5. ' ' → logprob: -6.417935848236084
    6. '!=' → logprob: -6.542935848236084
    7. '<n' → logprob: -7.042935848236084
    8. '   ' → logprob: -8.042935371398926
    9. ' <=' → logprob: -8.417935371398926
    10. '<len' → logprob: -8.917935371398926

Token 1076: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00012415809032972902
    2. ' N' → logprob: -9.125123977661133
    3. '   ' → logprob: -11.750123977661133
    4. '(N' → logprob: -12.625123977661133
    5. '	N' → logprob: -13.875123977661133
    6. 'len' → logprob: -14.375123977661133
    7. 'n' → logprob: -14.375123977661133
    8. '(' → logprob: -14.500123977661133
    9. ' ' → logprob: -14.625123977661133
    10. '       ' → logprob: -15.500123977661133

Token 1077: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0028060602489858866
    2. ' -' → logprob: -5.877806186676025
    3. '()-' → logprob: -14.002805709838867
    4. ' ' → logprob: -15.377805709838867
    5. '```' → logprob: -17.252805709838867
    6. '   ' → logprob: -17.252805709838867
    7. '1' → logprob: -17.502805709838867
    8. '-
' → logprob: -17.502805709838867
    9. '  ' → logprob: -18.002805709838867
    10. '#' → logprob: -18.127805709838867

Token 1078: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.018250614404678345
    2. '1' → logprob: -4.018250465393066
    3. '3' → logprob: -9.518250465393066
    4. '```' → logprob: -11.143250465393066
    5. '-' → logprob: -12.268250465393066
    6. '   ' → logprob: -12.893250465393066
    7. ' ' → logprob: -12.955750465393066
    8. '``' → logprob: -15.018250465393066
    9. '
' → logprob: -15.330750465393066
    10. '4' → logprob: -15.455750465393066

Token 1079: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.18332131206989288
    2. ':' → logprob: -1.8083213567733765
    3. '       ' → logprob: -6.058321475982666
    4. '   ' → logprob: -7.683321475982666
    5. ' :
' → logprob: -7.683321475982666
    6. ' and' → logprob: -8.433320999145508
    7. ' :' → logprob: -10.308320999145508
    8. '):
' → logprob: -11.058320999145508
    9. ':
' → logprob: -11.433320999145508
    10. ',' → logprob: -12.058320999145508

Token 1080: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10119076818227768
    2. '   ' → logprob: -3.3511908054351807
    3. ':
' → logprob: -3.4761908054351807
    4. ':' → logprob: -3.8511908054351807
    5. ',' → logprob: -5.726190567016602
    6. ' x' → logprob: -5.976190567016602
    7. 'x' → logprob: -6.976190567016602
    8. ' and' → logprob: -7.476190567016602
    9. ' :
' → logprob: -8.101190567016602
    10. ' ,' → logprob: -8.726190567016602

Token 1081: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.19847612082958221
    2. ' x' → logprob: -1.8234760761260986
    3. '       ' → logprob: -4.448476314544678
    4. '   ' → logprob: -5.073476314544678
    5. '	x' → logprob: -7.573476314544678
    6. ' ' → logprob: -10.57347583770752
    7. ',' → logprob: -11.32347583770752
    8. '           ' → logprob: -11.69847583770752
    9. '```' → logprob: -12.19847583770752
    10. '#' → logprob: -12.19847583770752

Token 1082: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002015139180002734
    2. '=' → logprob: -8.750201225280762
    3. ' =' → logprob: -10.625201225280762
    4. ' ,' → logprob: -11.125201225280762
    5. ',tmp' → logprob: -13.375201225280762
    6. ',y' → logprob: -13.500201225280762
    7. 'tmp' → logprob: -15.375201225280762
    8. ',
' → logprob: -15.500201225280762
    9. ',x' → logprob: -15.500201225280762
    10. 'y' → logprob: -16.500202178955078

Token 1083: ' y' (ID: 342)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.003958597779273987
    2. 'A' → logprob: -6.253958702087402
    3. ' tmp' → logprob: -6.253958702087402
    4. 'temp' → logprob: -10.128958702087402
    5. '	tmp' → logprob: -11.628958702087402
    6. '[tmp' → logprob: -11.753958702087402
    7. ' A' → logprob: -11.878958702087402
    8. 't' → logprob: -12.378958702087402
    9. '$tmp' → logprob: -12.378958702087402
    10. 'x' → logprob: -12.503958702087402

Token 1084: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28175994753837585
    2. ' =' → logprob: -1.4067599773406982
    3. ',' → logprob: -7.406759738922119
    4. ' ,' → logprob: -13.406760215759277
    5. ' ' → logprob: -15.281760215759277
    6. '=
' → logprob: -15.531760215759277
    7. '	' → logprob: -16.90675926208496
    8. '   ' → logprob: -16.90675926208496
    9. '=

' → logprob: -16.90675926208496
    10. ')' → logprob: -17.59425926208496

Token 1085: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.004692849237471819
    2. 'A' → logprob: -5.379693031311035
    3. ' tmp' → logprob: -10.129693031311035
    4. 'temp' → logprob: -11.254693031311035
    5. '   ' → logprob: -12.504693031311035
    6. '	tmp' → logprob: -12.504693031311035
    7. '(tmp' → logprob: -13.129693031311035
    8. 'N' → logprob: -13.254693031311035
    9. '$tmp' → logprob: -13.879693031311035
    10. '[tmp' → logprob: -14.004693031311035

Token 1086: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024846551241353154
    2. ',A' → logprob: -8.750248908996582
    3. ' ,' → logprob: -9.750248908996582
    4. 'A' → logprob: -10.500248908996582
    5. ',x' → logprob: -13.625248908996582
    6. ',
' → logprob: -14.250248908996582
    7. '           ' → logprob: -14.875248908996582
    8. 'x' → logprob: -15.000248908996582
    9. ' A' → logprob: -15.125248908996582
    10. '   ' → logprob: -15.625248908996582

Token 1087: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00016063073417171836
    2. ' A' → logprob: -8.750160217285156
    3. '	A' → logprob: -14.125160217285156
    4. '   ' → logprob: -14.375160217285156
    5. ' ' → logprob: -15.000160217285156
    6. '0' → logprob: -15.375160217285156
    7. 'a' → logprob: -16.625160217285156
    8. '  ' → logprob: -16.875160217285156
    9. '(A' → logprob: -17.125160217285156
    10. '1' → logprob: -17.875160217285156

Token 1088: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.3189374804496765
    2. '[i' → logprob: -1.3189375400543213
    3. '[-' → logprob: -5.693937301635742
    4. '[N' → logprob: -6.193937301635742
    5. '[' → logprob: -9.068937301635742
    6. 'pop' → logprob: -9.318937301635742
    7. '.' → logprob: -11.068937301635742
    8. 'i' → logprob: -11.193937301635742
    9. 'N' → logprob: -12.193937301635742
    10. '.append' → logprob: -12.568937301635742

Token 1089: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00030066570616327226
    2. '()
' → logprob: -8.125300407409668
    3. '(' → logprob: -13.500300407409668
    4. '()

' → logprob: -13.500300407409668
    5. ' ()' → logprob: -14.000300407409668
    6. '()
' → logprob: -15.125300407409668
    7. '())' → logprob: -15.625300407409668
    8. '()]' → logprob: -15.625300407409668
    9. '()\' → logprob: -15.875300407409668
    10. '()`' → logprob: -16.250301361083984

Token 1090: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04112997278571129
    2. '   ' → logprob: -3.9161300659179688
    3. '       ' → logprob: -3.9161300659179688
    4. 'XY' → logprob: -8.291130065917969
    5. ' ' → logprob: -9.416130065917969
    6. ' XY' → logprob: -10.291130065917969
    7. '               ' → logprob: -11.041130065917969
    8. '  ' → logprob: -11.291130065917969
    9. '     ' → logprob: -11.416130065917969
    10. '            
' → logprob: -11.416130065917969

Token 1091: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0886799767613411
    2. '       ' → logprob: -2.9636800289154053
    3. '   ' → logprob: -3.7136800289154053
    4. 'XY' → logprob: -5.088679790496826
    5. ' ' → logprob: -6.588679790496826
    6. ' XY' → logprob: -8.213680267333984
    7. '            
' → logprob: -8.588680267333984
    8. '               ' → logprob: -8.963680267333984
    9. ')' → logprob: -9.213680267333984
    10. '  ' → logprob: -9.213680267333984

Token 1092: ' tmp' (ID: 8919)
  Prédit: 'XY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'XY' → logprob: -0.0926748588681221
    2. '           ' → logprob: -2.967674970626831
    3. ' XY' → logprob: -3.717674970626831
    4. '       ' → logprob: -4.967674732208252
    5. '   ' → logprob: -6.467674732208252
    6. '            
' → logprob: -6.842674732208252
    7. ' ' → logprob: -7.217674732208252
    8. 'xy' → logprob: -7.842674732208252
    9. '               ' → logprob: -8.34267520904541
    10. 'X' → logprob: -8.59267520904541

Token 1093: ' reste' (ID: 26769)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4476335644721985
    2. '-' → logprob: -1.0726335048675537
    3. ',' → logprob: -4.572633743286133
    4. '       ' → logprob: -5.572633743286133
    5. '   ' → logprob: -6.197633743286133
    6. ' ,' → logprob: -7.447633743286133
    7. '           ' → logprob: -7.697633743286133
    8. ' ' → logprob: -8.072633743286133
    9. '-
' → logprob: -8.197633743286133
    10. ' -
' → logprob: -8.322633743286133

Token 1094: ' la' (ID: 557)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3018808960914612
    2. ')' → logprob: -2.9268808364868164
    3. ' ,' → logprob: -2.9268808364868164
    4. '-' → logprob: -3.0518808364868164
    5. 'x' → logprob: -3.3018808364868164
    6. ' -' → logprob: -3.6768808364868164
    7. ' )' → logprob: -4.676880836486816
    8. ' x' → logprob: -4.801880836486816
    9. ' ' → logprob: -5.301880836486816
    10. 'y' → logprob: -5.801880836486816

Token 1095: ' première' (ID: 23423)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.8349752426147461
    2. 'x' → logprob: -1.584975242614746
    3. ' plus' → logprob: -2.459975242614746
    4. 'tmp' → logprob: -2.959975242614746
    5. 'val' → logprob: -3.209975242614746
    6. ' x' → logprob: -3.834975242614746
    7. '-' → logprob: -3.834975242614746
    8. ' ' → logprob: -4.334975242614746
    9. 'A' → logprob: -5.084975242614746
    10. ' valeur' → logprob: -5.084975242614746

Token 1096: ' valeur' (ID: 41664)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5682164430618286
    2. '-' → logprob: -1.8182164430618286
    3. ' ' → logprob: -1.8182164430618286
    4. 'token' → logprob: -4.318216323852539
    5. ' ,' → logprob: -4.568216323852539
    6. '[' → logprob: -4.568216323852539
    7. ')' → logprob: -4.693216323852539
    8. ',' → logprob: -4.943216323852539
    9. ' #' → logprob: -5.193216323852539
    10. 'if' → logprob: -5.193216323852539

Token 1097: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0817619115114212
    2. '           ' → logprob: -2.9567618370056152
    3. '   ' → logprob: -3.7067618370056152
    4. ' ' → logprob: -7.206761837005615
    5. 'XY' → logprob: -8.706762313842773
    6. '            
' → logprob: -9.081762313842773
    7. '<|end|>' → logprob: -9.081762313842773
    8. '  ' → logprob: -9.206762313842773
    9. '        
' → logprob: -9.206762313842773
    10. ',' → logprob: -9.456762313842773

Token 1098: 'la' (ID: 1675)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5359272360801697
    2. ' )' → logprob: -1.6609272956848145
    3. 'x' → logprob: -2.4109272956848145
    4. ' x' → logprob: -3.2859272956848145
    5. ' ' → logprob: -3.4109272956848145
    6. '<|end|>' → logprob: -3.9109272956848145
    7. ' )
' → logprob: -4.1609272956848145
    8. ')
' → logprob: -5.4109272956848145
    9. ' 
' → logprob: -5.7859272956848145
    10. 'tmp' → logprob: -6.1609272956848145

Token 1099: ' plus' (ID: 2932)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5181362628936768
    2. ' )' → logprob: -1.6431362628936768
    3. ' ' → logprob: -2.6431362628936768
    4. '+' → logprob: -4.268136024475098
    5. '[' → logprob: -4.268136024475098
    6. ' plus' → logprob: -4.393136024475098
    7. '0' → logprob: -4.393136024475098
    8. '#' → logprob: -4.643136024475098
    9. 'plus' → logprob: -4.643136024475098
    10. ' ' → logprob: -4.893136024475098

Token 1100: ' petite' (ID: 28119)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.08896946161985397
    2. 'grand' → logprob: -2.5889694690704346
    3. ' grande' → logprob: -4.8389692306518555
    4. 'à' → logprob: -6.9639692306518555
    5. ')' → logprob: -7.9639692306518555
    6. 'large' → logprob: -8.588969230651855
    7. 'pet' → logprob: -8.588969230651855
    8. 'import' → logprob: -9.588969230651855
    9. ' ' → logprob: -9.588969230651855
    10. ' à' → logprob: -9.838969230651855

Token 1101: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005860770586878061
    2. ' )' → logprob: -6.005860805511475
    3. ')
' → logprob: -6.255860805511475
    4. '<|end|>' → logprob: -7.505860805511475
    5. '   ' → logprob: -8.005860328674316
    6. '       ' → logprob: -8.505860328674316
    7. '),' → logprob: -8.880860328674316
    8. ',' → logprob: -9.505860328674316
    9. ' ' → logprob: -10.130860328674316
    10. ' )
' → logprob: -10.505860328674316

Token 1102: ' et' (ID: 859)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19586411118507385
    2. '           ' → logprob: -2.070864200592041
    3. '   ' → logprob: -3.195864200592041
    4. '
' → logprob: -5.570864200592041
    5. '            
' → logprob: -6.695864200592041
    6. '        
' → logprob: -6.945864200592041
    7. '    
' → logprob: -6.945864200592041
    8. ')' → logprob: -7.445864200592041
    9. '  
' → logprob: -7.445864200592041
    10. ')
' → logprob: -7.695864200592041

Token 1103: ' A' (ID: 355)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.6816750764846802
    2. 'y' → logprob: -0.8066750764846802
    3. 'XY' → logprob: -4.556674957275391
    4. 'xy' → logprob: -4.931674957275391
    5. ''' → logprob: -5.306674957275391
    6. ' XY' → logprob: -5.431674957275391
    7. ' xy' → logprob: -5.431674957275391
    8. 'x' → logprob: -6.181674957275391
    9. ' ' → logprob: -6.306674957275391
    10. '"' → logprob: -6.681674957275391

Token 1104: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.0001805377542041242
    2. '.' → logprob: -9.1251802444458
    3. ' .' → logprob: -10.0001802444458
    4. 'pop' → logprob: -11.5001802444458
    5. '.append' → logprob: -11.6251802444458
    6. '[-' → logprob: -12.5001802444458
    7. ').' → logprob: -13.7501802444458
    8. '[' → logprob: -15.0001802444458
    9. '.remove' → logprob: -15.0001802444458
    10. '	pop' → logprob: -15.1251802444458

Token 1105: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008710776455700397
    2. '())' → logprob: -4.758710861206055
    3. ')' → logprob: -10.133710861206055
    4. '()
' → logprob: -10.383710861206055
    5. '(),' → logprob: -12.258710861206055
    6. '()),' → logprob: -12.633710861206055
    7. '()

' → logprob: -12.633710861206055
    8. ' ()' → logprob: -12.758710861206055
    9. '()]' → logprob: -13.008710861206055
    10. ' ())' → logprob: -13.258710861206055

Token 1106: ' enl' (ID: 116494)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26364415884017944
    2. ')' → logprob: -1.6386442184448242
    3. '<|end|>' → logprob: -4.638644218444824
    4. '   ' → logprob: -5.138644218444824
    5. ')
' → logprob: -5.388644218444824
    6. ' )' → logprob: -5.388644218444824
    7. '()' → logprob: -5.763644218444824
    8. '           ' → logprob: -6.388644218444824
    9. '
' → logprob: -6.388644218444824
    10. ' ' → logprob: -6.888644218444824

Token 1107: 'ève' (ID: 41151)
  Prédit: 'ève'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ève' → logprob: -0.1002601608633995
    2. 'e' → logprob: -2.6002602577209473
    3. 'eve' → logprob: -3.9752602577209473
    4. 'ever' → logprob: -6.850260257720947
    5. 'a' → logprob: -8.350259780883789
    6. 'ev' → logprob: -8.725259780883789
    7. 'ète' → logprob: -9.225259780883789
    8. 'è' → logprob: -9.475259780883789
    9. 'eit' → logprob: -9.600259780883789
    10. 'erve' → logprob: -9.725259780883789

Token 1108: ' le' (ID: 505)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0972034931182861
    2. '()' → logprob: -1.4722034931182861
    3. 'le' → logprob: -1.5972034931182861
    4. 'the' → logprob: -2.847203493118286
    5. ' le' → logprob: -3.347203493118286
    6. ')' → logprob: -3.472203493118286
    7. ' (' → logprob: -3.472203493118286
    8. 'A' → logprob: -3.597203493118286
    9. '(A' → logprob: -4.097203254699707
    10. ' un' → logprob: -5.222203254699707

Token 1109: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.22651071846485138
    2. ' plus' → logprob: -1.851510763168335
    3. 'dern' → logprob: -3.726510763168335
    4. ' dernier' → logprob: -3.976510763168335
    5. 'élé' → logprob: -6.976510524749756
    6. '```' → logprob: -7.226510524749756
    7. 'grand' → logprob: -8.351511001586914
    8. '.' → logprob: -9.101511001586914
    9. ')' → logprob: -9.226511001586914
    10. '+' → logprob: -9.351511001586914

Token 1110: ' grand' (ID: 6363)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.012968563474714756
    2. ' grand' → logprob: -4.38796854019165
    3. ')' → logprob: -8.887969017028809
    4. 'gr' → logprob: -9.387969017028809
    5. 'g' → logprob: -9.762969017028809
    6. 'grave' → logprob: -10.137969017028809
    7. 'large' → logprob: -10.387969017028809
    8. '.' → logprob: -11.012969017028809
    9. '_gr' → logprob: -11.012969017028809
    10. ' gros' → logprob: -11.262969017028809

Token 1111: ' non' (ID: 2893)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007364541292190552
    2. '()' → logprob: -5.132364749908447
    3. ')
' → logprob: -7.007364749908447
    4. '<|end|>' → logprob: -9.257364273071289
    5. '   ' → logprob: -9.507364273071289
    6. '()
' → logprob: -9.757364273071289
    7. ' ' → logprob: -9.882364273071289
    8. ' )' → logprob: -9.882364273071289
    9. '(' → logprob: -9.882364273071289
    10. ',' → logprob: -10.882364273071289

Token 1112: ' utilisé' (ID: 53138)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05245397239923477
    2. ' ' → logprob: -3.9274539947509766
    3. '.' → logprob: -4.552453994750977
    4. 'pop' → logprob: -5.177453994750977
    5. '.pop' → logprob: -5.927453994750977
    6. ' None' → logprob: -6.427453994750977
    7. ' )' → logprob: -6.427453994750977
    8. '   ' → logprob: -7.177453994750977
    9. 'None' → logprob: -7.302453994750977
    10. 'vide' → logprob: -7.427453994750977

Token 1113: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09639860689640045
    2. ')' → logprob: -2.4713985919952393
    3. ')
' → logprob: -5.471398830413818
    4. '           ' → logprob: -6.346398830413818
    5. ' )' → logprob: -7.846398830413818
    6. '   ' → logprob: -8.59639835357666
    7. '<|end|>' → logprob: -8.59639835357666
    8. '        
' → logprob: -8.97139835357666
    9. '
' → logprob: -9.09639835357666
    10. ',' → logprob: -9.47139835357666

Token 1114: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14308208227157593
    2. '
' → logprob: -2.6430821418762207
    3. '           ' → logprob: -3.8930821418762207
    4. ')
' → logprob: -4.768082141876221
    5. '        
' → logprob: -5.018082141876221
    6. '   ' → logprob: -5.268082141876221
    7. ')' → logprob: -5.393082141876221
    8. ' 
' → logprob: -5.518082141876221
    9. '    
' → logprob: -6.018082141876221
    10. '  
' → logprob: -6.018082141876221

Token 1115: ' XY' (ID: 71987)
  Prédit: 'XY'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XY' (adapté à ' XY') → logprob: -0.008383014239370823
    2. '       ' → logprob: -5.383382797241211
    3. '           ' → logprob: -5.758382797241211
    4. '   ' → logprob: -7.508382797241211
    5. ' XY' → logprob: -10.008382797241211
    6. '               ' → logprob: -13.508382797241211
    7. 'XYZ' → logprob: -13.508382797241211
    8. ' ' → logprob: -14.258382797241211
    9. '```' → logprob: -14.383382797241211
    10. '     ' → logprob: -15.008382797241211

Token 1116: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007321976590901613
    2. '.' → logprob: -7.250732421875
    3. 'append' → logprob: -10.750732421875
    4. '.app' → logprob: -15.375732421875
    5. '_append' → logprob: -15.500732421875
    6. '.Append' → logprob: -16.000732421875
    7. ' append' → logprob: -16.375732421875
    8. ' .' → logprob: -17.375732421875
    9. '.add' → logprob: -17.875732421875
    10. 'Append' → logprob: -17.875732421875

Token 1117: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -1.8550976164988242e-05
    2. '(' → logprob: -11.125018119812012
    3. '(x' → logprob: -12.625018119812012
    4. ' ((' → logprob: -15.250018119812012
    5. '(
' → logprob: -16.375019073486328
    6. ' (' → logprob: -17.000019073486328
    7. ' ' → logprob: -18.000019073486328
    8. '[(' → logprob: -21.000019073486328
    9. '   ' → logprob: -21.250019073486328
    10. '	' → logprob: -21.250019073486328

Token 1118: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00035453110467642546
    2. '(x' → logprob: -8.000354766845703
    3. ' x' → logprob: -10.875354766845703
    4. ' (' → logprob: -16.250354766845703
    5. '   ' → logprob: -17.000354766845703
    6. '	x' → logprob: -17.875354766845703
    7. '(' → logprob: -18.375354766845703
    8. '"x' → logprob: -19.000354766845703
    9. ')x' → logprob: -19.250354766845703
    10. ' ' → logprob: -19.625354766845703

Token 1119: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2200749754119897e-06
    2. ' ,' → logprob: -13.375001907348633
    3. ',y' → logprob: -14.625001907348633
    4. ',
' → logprob: -15.875001907348633
    5. '‌,' → logprob: -19.250001907348633
    6. ',x' → logprob: -20.000001907348633
    7. '،' → logprob: -20.500001907348633
    8. ',

' → logprob: -20.750001907348633
    9. ',user' → logprob: -20.750001907348633
    10. '```' → logprob: -20.875001907348633

Token 1120: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.01814994215965271
    2. ' y' → logprob: -4.0181498527526855
    3. '	y' → logprob: -17.018150329589844
    4. ' ' → logprob: -19.893150329589844
    5. ')y' → logprob: -19.893150329589844
    6. ' ' → logprob: -20.018150329589844
    7. ')' → logprob: -20.143150329589844
    8. 'x' → logprob: -20.643150329589844
    9. '    ' → logprob: -21.518150329589844
    10. '   ' → logprob: -21.893150329589844

Token 1121: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3869273066520691
    2. ')
' → logprob: -1.1369273662567139
    3. '           ' → logprob: -10.761927604675293
    4. ')
' → logprob: -10.761927604675293
    5. '       ' → logprob: -12.011927604675293
    6. '   ' → logprob: -13.011927604675293
    7. ')`
' → logprob: -13.136927604675293
    8. ')

' → logprob: -13.636927604675293
    9. ')\
' → logprob: -14.386927604675293
    10. ' )
' → logprob: -14.511927604675293

Token 1122: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6086008548736572
    2. '       ' → logprob: -1.2336008548736572
    3. '   ' → logprob: -2.8586008548736572
    4. 'tmp' → logprob: -2.8586008548736572
    5. '
' → logprob: -3.4836008548736572
    6. '```' → logprob: -5.608600616455078
    7. '    
' → logprob: -5.733600616455078
    8. '            
' → logprob: -5.733600616455078
    9. '        
' → logprob: -6.358600616455078
    10. '		' → logprob: -6.858600616455078

Token 1123: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' (adapté à ' tmp') → logprob: -3.173704271830502e-06
    2. '           ' → logprob: -13.00000286102295
    3. ' tmp' → logprob: -14.37500286102295
    4. 'temp' → logprob: -16.750003814697266
    5. '	tmp' → logprob: -17.000003814697266
    6. '       ' → logprob: -17.375003814697266
    7. '   ' → logprob: -17.500003814697266
    8. '/tmp' → logprob: -18.000003814697266
    9. '```' → logprob: -18.375003814697266
    10. '$tmp' → logprob: -19.125003814697266

Token 1124: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00422940868884325
    2. ' =' → logprob: -5.754229545593262
    3. '-=' → logprob: -6.879229545593262
    4. ' -=' → logprob: -10.754229545593262
    5. '.=' → logprob: -15.129229545593262
    6. '-' → logprob: -15.254229545593262
    7. '+=' → logprob: -15.754229545593262
    8. '*=' → logprob: -16.504228591918945
    9. '=
' → logprob: -16.629228591918945
    10. '＝' → logprob: -17.754228591918945

Token 1125: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04441094398498535
    2. 'tmp' → logprob: -3.1694109439849854
    3. ' x' → logprob: -6.669410705566406
    4. ' tmp' → logprob: -8.919410705566406
    5. 'temp' → logprob: -12.044410705566406
    6. '/tmp' → logprob: -14.919410705566406
    7. '(tmp' → logprob: -15.169410705566406
    8. '0' → logprob: -15.294410705566406
    9. '1' → logprob: -15.794410705566406
    10. '   ' → logprob: -16.044410705566406

Token 1126: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5759428143501282
    2. ' -' → logprob: -0.8259428143501282
    3. ' ' → logprob: -13.450942993164062
    4. '-y' → logprob: -13.825942993164062
    5. ' -
' → logprob: -15.200942993164062
    6. '-
' → logprob: -15.325942993164062
    7. ' ' → logprob: -16.200942993164062
    8. ' y' → logprob: -16.450942993164062
    9. ' minus' → logprob: -17.075942993164062
    10. '_' → logprob: -17.325942993164062

Token 1127: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.023245595395565033
    2. ' y' → logprob: -3.7732455730438232
    3. '	y' → logprob: -16.273244857788086
    4. ' ' → logprob: -21.398244857788086
    5. '_y' → logprob: -21.398244857788086
    6. ''y' → logprob: -21.523244857788086
    7. 'Y' → logprob: -21.898244857788086
    8. '   ' → logprob: -22.148244857788086
    9. '‘y' → logprob: -22.148244857788086
    10. ')y' → logprob: -22.648244857788086

Token 1128: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1129: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12578736245632172
    2. '<|end|>' → logprob: -3.2507872581481934
    3. '   ' → logprob: -3.3757872581481934
    4. '
' → logprob: -3.7507872581481934
    5. '```' → logprob: -4.625787258148193
    6. '    
' → logprob: -5.500787258148193
    7. '        
' → logprob: -6.250787258148193
    8. ' 
' → logprob: -6.500787258148193
    9. '  
' → logprob: -7.000787258148193
    10. ' ' → logprob: -7.500787258148193

Token 1130: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.061619050800800323
    2. 'else' → logprob: -2.9366190433502197
    3. ' else' → logprob: -5.686619281768799
    4. '       ' → logprob: -5.811619281768799
    5. '	else' → logprob: -8.31161880493164
    6. '```' → logprob: -10.93661880493164
    7. '    
' → logprob: -11.43661880493164
    8. ' ' → logprob: -11.43661880493164
    9. 'elif' → logprob: -11.56161880493164
    10. '
' → logprob: -12.43661880493164

Token 1131: ' À' (ID: 27643)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0011995165841653943
    2. ' else' → logprob: -6.751199722290039
    3. 'elif' → logprob: -10.751199722290039
    4. 'x' → logprob: -12.001199722290039
    5. '   ' → logprob: -13.876199722290039
    6. '	else' → logprob: -15.626199722290039
    7. '```' → logprob: -15.751199722290039
    8. 'if' → logprob: -16.25119972229004
    9. '
' → logprob: -16.37619972229004
    10. ' ' → logprob: -17.12619972229004

Token 1132: ' l' (ID: 305)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11575045436620712
    2. ' i' → logprob: -2.865750551223755
    3. 'else' → logprob: -3.865750551223755
    4. 'N' → logprob: -3.865750551223755
    5. ' N' → logprob: -4.990750312805176
    6. ' else' → logprob: -6.365750312805176
    7. ' ' → logprob: -6.740750312805176
    8. '```' → logprob: -8.740750312805176
    9. '   ' → logprob: -8.990750312805176
    10. 'elif' → logprob: -9.115750312805176

Token 1133: ''avant' (ID: 161711)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08587755262851715
    2. 'else' → logprob: -2.7108776569366455
    3. 'elif' → logprob: -5.335877418518066
    4. 'last' → logprob: -5.960877418518066
    5. 'for' → logprob: -6.085877418518066
    6. 'range' → logprob: -6.460877418518066
    7. ' i' → logprob: -6.835877418518066
    8. '```' → logprob: -7.085877418518066
    9. '=' → logprob: -7.710877418518066
    10. ' else' → logprob: -7.835877418518066

Token 1134: '-' (ID: 12)
  Prédit: 'dern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dern' → logprob: -0.5839260220527649
    2. 'der' → logprob: -0.8339260220527649
    3. '-' → logprob: -5.083926200866699
    4. '```' → logprob: -6.833926200866699
    5. '   ' → logprob: -7.958926200866699
    6. '_der' → logprob: -8.9589262008667
    7. 'Dern' → logprob: -10.0839262008667
    8. ' ' → logprob: -10.2089262008667
    9. '	' → logprob: -10.5839262008667
    10. ' dernière' → logprob: -10.5839262008667

Token 1135: 'dern' (ID: 19098)
  Prédit: 'der'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'der' → logprob: -0.38700950145721436
    2. 'dern' → logprob: -1.1370095014572144
    3. '-' → logprob: -10.387009620666504
    4. '2' → logprob: -10.512009620666504
    5. 'last' → logprob: -10.512009620666504
    6. '```' → logprob: -10.512009620666504
    7. '1' → logprob: -11.887009620666504
    8. 'Dern' → logprob: -12.262009620666504
    9. 'de' → logprob: -12.637009620666504
    10. 'pen' → logprob: -12.637009620666504

Token 1136: 'ier' (ID: 905)
  Prédit: 'ière'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ière' → logprob: -0.607220470905304
    2. '-' → logprob: -0.857220470905304
    3. 'der' → logprob: -3.607220411300659
    4. 'ier' → logprob: -6.357220649719238
    5. 'i' → logprob: -7.232220649719238
    6. 'ni' → logprob: -7.732220649719238
    7. 'ère' → logprob: -8.857220649719238
    8. '_der' → logprob: -9.357220649719238
    9. ' dernière' → logprob: -9.607220649719238
    10. '--' → logprob: -9.607220649719238

Token 1137: ' tour' (ID: 6970)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14245620369911194
    2. 'else' → logprob: -2.392456293106079
    3. ' else' → logprob: -3.642456293106079
    4. ' :' → logprob: -4.6424560546875
    5. '```' → logprob: -6.3924560546875
    6. 'elif' → logprob: -6.6424560546875
    7. ':
' → logprob: -7.0174560546875
    8. ' elif' → logprob: -7.7674560546875
    9. 'i' → logprob: -8.1424560546875
    10. 'e' → logprob: -8.5174560546875

Token 1138: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2132132202386856
    2. '   ' → logprob: -2.0882132053375244
    3. ':
' → logprob: -3.3382132053375244
    4. ',' → logprob: -4.4632134437561035
    5. '       ' → logprob: -4.5882134437561035
    6. 'else' → logprob: -4.9632134437561035
    7. ' else' → logprob: -5.8382134437561035
    8. ' :' → logprob: -8.338212966918945
    9. '```' → logprob: -8.838212966918945
    10. '=' → logprob: -9.463212966918945

Token 1139: ' on' (ID: 402)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.47532135248184204
    2. '   ' → logprob: -1.8503212928771973
    3. ' x' → logprob: -2.1003212928771973
    4. '#' → logprob: -3.4753212928771973
    5. 'y' → logprob: -3.8503212928771973
    6. 'else' → logprob: -3.9753212928771973
    7. ' y' → logprob: -4.100321292877197
    8. '
' → logprob: -5.975321292877197
    9. '    ' → logprob: -5.975321292877197
    10. '       ' → logprob: -6.725321292877197

Token 1140: ' inverse' (ID: 53743)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4052303433418274
    2. ' =' → logprob: -1.9052302837371826
    3. 'else' → logprob: -2.4052302837371826
    4. ':' → logprob: -3.2802302837371826
    5. '   ' → logprob: -3.2802302837371826
    6. ':
' → logprob: -5.780230522155762
    7. '.' → logprob: -5.905230522155762
    8. ' else' → logprob: -5.905230522155762
    9. '       ' → logprob: -6.030230522155762
    10. ',' → logprob: -6.030230522155762

Token 1141: ' l' (ID: 305)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4015692472457886
    2. '(x' → logprob: -2.276569366455078
    3. '(tmp' → logprob: -2.526569366455078
    4. '(' → logprob: -3.026569366455078
    5. ' =' → logprob: -3.651569366455078
    6. 'tmp' → logprob: -4.151569366455078
    7. '=' → logprob: -4.276569366455078
    8. ',' → logprob: -4.401569366455078
    9. ' x' → logprob: -5.026569366455078
    10. 'le' → logprob: -5.276569366455078

Token 1142: ''ordre' (ID: 124753)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.1308073997497559
    2. ',' → logprob: -1.8808073997497559
    3. ' =' → logprob: -1.8808073997497559
    4. '=' → logprob: -1.8808073997497559
    5. ' ' → logprob: -2.505807399749756
    6. ' x' → logprob: -2.880807399749756
    7. 'y' → logprob: -4.505807399749756
    8. ' ,' → logprob: -4.755807399749756
    9. '[' → logprob: -4.880807399749756
    10. '_' → logprob: -4.880807399749756

Token 1143: ' pour' (ID: 1930)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.33173710107803345
    2. ':' → logprob: -1.9567370414733887
    3. '       ' → logprob: -2.3317370414733887
    4. '   ' → logprob: -3.3317370414733887
    5. 'else' → logprob: -6.206737041473389
    6. '```' → logprob: -6.581737041473389
    7. ' =' → logprob: -6.706737041473389
    8. '=' → logprob: -6.706737041473389
    9. 'x' → logprob: -7.956737041473389
    10. ':
' → logprob: -7.956737041473389

Token 1144: ' que' (ID: 661)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.4193357527256012
    2. 'x' → logprob: -1.1693357229232788
    3. ' y' → logprob: -3.7943358421325684
    4. 'tmp' → logprob: -5.919335842132568
    5. '   ' → logprob: -6.044335842132568
    6. ' x' → logprob: -6.544335842132568
    7. '       ' → logprob: -7.169335842132568
    8. 'print' → logprob: -7.419335842132568
    9. '```' → logprob: -7.419335842132568
    10. '	y' → logprob: -8.29433536529541

Token 1145: ' tmp' (ID: 8919)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3150561451911926
    2. 'y' → logprob: -1.3150560855865479
    3. ' y' → logprob: -6.815056324005127
    4. ' x' → logprob: -8.190055847167969
    5. '   ' → logprob: -8.315055847167969
    6. 'tmp' → logprob: -8.815055847167969
    7. 'print' → logprob: -12.565055847167969
    8. '	y' → logprob: -12.940055847167969
    9. '       ' → logprob: -13.190055847167969
    10. 'A' → logprob: -13.190055847167969

Token 1146: ' soit' (ID: 17293)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0035637267865240574
    2. '=' → logprob: -6.12856388092041
    3. ' ,' → logprob: -7.25356388092041
    4. ' =' → logprob: -7.50356388092041
    5. '           ' → logprob: -11.00356388092041
    6. '       ' → logprob: -11.00356388092041
    7. ',
' → logprob: -11.12856388092041
    8. '_,' → logprob: -11.62856388092041
    9. ',y' → logprob: -11.75356388092041
    10. 's' → logprob: -11.75356388092041

Token 1147: ' maintenant' (ID: 35735)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.321195513010025
    2. 'y' → logprob: -1.3211954832077026
    3. 'x' → logprob: -5.321195602416992
    4. ' A' → logprob: -6.696195602416992
    5. ' y' → logprob: -7.071195602416992
    6. 'tmp' → logprob: -7.696195602416992
    7. '=A' → logprob: -8.696195602416992
    8. '   ' → logprob: -9.321195602416992
    9. 'Y' → logprob: -9.946195602416992
    10. ',' → logprob: -10.196195602416992

Token 1148: ' celui' (ID: 27857)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5123450756072998
    2. 'y' → logprob: -1.2623450756072998
    3. '=' → logprob: -2.6373450756073
    4. 'x' → logprob: -4.012345314025879
    5. 'A' → logprob: -4.387345314025879
    6. '=A' → logprob: -4.887345314025879
    7. ' =' → logprob: -6.012345314025879
    8. 'l' → logprob: -6.137345314025879
    9. ' y' → logprob: -6.887345314025879
    10. ',y' → logprob: -7.137345314025879

Token 1149: ' qu' (ID: 474)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05834606662392616
    2. '=' → logprob: -2.9333460330963135
    3. ' =' → logprob: -6.058346271514893
    4. ' ,' → logprob: -7.058346271514893
    5. ',
' → logprob: -9.808345794677734
    6. '   ' → logprob: -9.808345794677734
    7. 'x' → logprob: -10.183345794677734
    8. ',x' → logprob: -10.308345794677734
    9. ',y' → logprob: -11.558345794677734
    10. '       ' → logprob: -11.933345794677734

Token 1150: ''on' (ID: 25812)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12859052419662476
    2. '=' → logprob: -3.3785905838012695
    3. 'y' → logprob: -3.8785905838012695
    4. '   ' → logprob: -4.2535905838012695
    5. '#' → logprob: -4.5035905838012695
    6. 'x' → logprob: -4.8785905838012695
    7. 'print' → logprob: -4.8785905838012695
    8. '-' → logprob: -5.2535905838012695
    9. ',
' → logprob: -5.5035905838012695
    10. '       ' → logprob: -5.8785905838012695

Token 1151: ' vient' (ID: 40370)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.28268396854400635
    2. ',' → logprob: -2.157683849334717
    3. '       ' → logprob: -3.407683849334717
    4. 'sou' → logprob: -3.407683849334717
    5. '=' → logprob: -4.157683849334717
    6. '-,' → logprob: -4.657683849334717
    7. '   ' → logprob: -5.157683849334717
    8. '-s' → logprob: -5.157683849334717
    9. 'subtract' → logprob: -5.157683849334717
    10. 's' → logprob: -5.532683849334717

Token 1152: ' d' (ID: 272)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.6998864412307739
    2. 'd' → logprob: -0.9498864412307739
    3. '           ' → logprob: -2.9498863220214844
    4. '       ' → logprob: -3.0748863220214844
    5. ' de' → logprob: -4.824886322021484
    6. '        ' → logprob: -5.199886322021484
    7. '#' → logprob: -6.074886322021484
    8. '         ' → logprob: -7.574886322021484
    9. ' d' → logprob: -7.699886322021484
    10. '   ' → logprob: -8.074886322021484

Token 1153: ''obtenir' (ID: 191633)
  Prédit: 'pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pop' → logprob: -1.1712769269943237
    2. 'sou' → logprob: -1.2962769269943237
    3. '   ' → logprob: -2.1712770462036133
    4. '       ' → logprob: -2.2962770462036133
    5. 'x' → logprob: -2.9212770462036133
    6. '#' → logprob: -3.0462770462036133
    7. 'prendre' → logprob: -3.5462770462036133
    8. 'ret' → logprob: -4.546277046203613
    9. '    ' → logprob: -4.796277046203613
    10. '```' → logprob: -4.921277046203613

Token 1154: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01854109577834606
    2. '           ' → logprob: -4.393540859222412
    3. '       ' → logprob: -6.143540859222412
    4. '   ' → logprob: -6.643540859222412
    5. '```' → logprob: -7.018540859222412
    6. ' ,' → logprob: -7.268540859222412
    7. ' =' → logprob: -8.39354133605957
    8. ',
' → logprob: -8.76854133605957
    9. '=' → logprob: -9.01854133605957
    10. '``' → logprob: -9.51854133605957

Token 1155: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11136549711227417
    2. '           ' → logprob: -2.361365556716919
    3. 'et' → logprob: -5.73636531829834
    4. '#' → logprob: -6.23636531829834
    5. 'y' → logprob: -6.36136531829834
    6. 'else' → logprob: -6.86136531829834
    7. '   ' → logprob: -7.48636531829834
    8. 'x' → logprob: -7.48636531829834
    9. '```' → logprob: -7.48636531829834
    10. ' y' → logprob: -7.73636531829834

Token 1156: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12291748821735382
    2. 'else' → logprob: -2.372917413711548
    3. '           ' → logprob: -4.872917652130127
    4. ' else' → logprob: -5.122917652130127
    5. '```' → logprob: -5.497917652130127
    6. 'x' → logprob: -6.122917652130127
    7. '   ' → logprob: -6.372917652130127
    8. ' x' → logprob: -8.247917175292969
    9. ' ' → logprob: -9.247917175292969
    10. ',' → logprob: -9.622917175292969

Token 1157: ' et' (ID: 859)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20782561600208282
    2. 'else' → logprob: -1.9578256607055664
    3. '           ' → logprob: -4.457825660705566
    4. 'y' → logprob: -4.582825660705566
    5. 'x' → logprob: -4.707825660705566
    6. '   ' → logprob: -5.457825660705566
    7. ' else' → logprob: -5.707825660705566
    8. '#' → logprob: -6.207825660705566
    9. ' y' → logprob: -6.332825660705566
    10. ' x' → logprob: -7.332825660705566

Token 1158: ' le' (ID: 505)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.418155312538147
    2. '           ' → logprob: -1.918155312538147
    3. '       ' → logprob: -2.5431551933288574
    4. 'x' → logprob: -3.0431551933288574
    5. '#' → logprob: -3.2931551933288574
    6. ' y' → logprob: -4.668155193328857
    7. 'le' → logprob: -5.168155193328857
    8. 'à' → logprob: -5.668155193328857
    9. 'l' → logprob: -6.418155193328857
    10. 'que' → logprob: -6.543155193328857

Token 1159: ' dernier' (ID: 27982)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.04825300723314285
    2. 'x' → logprob: -3.673253059387207
    3. ' y' → logprob: -4.173253059387207
    4. 'dern' → logprob: -5.673253059387207
    5. ' dernier' → logprob: -6.673253059387207
    6. ' last' → logprob: -8.048253059387207
    7. ' x' → logprob: -8.298253059387207
    8. 'plus' → logprob: -8.673253059387207
    9. '#' → logprob: -8.673253059387207
    10. 'der' → logprob: -9.173253059387207

Token 1160: ' élément' (ID: 99627)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1637420654296875
    2. '=' → logprob: -2.7887420654296875
    3. ' =' → logprob: -2.9137420654296875
    4. 'A' → logprob: -4.5387420654296875
    5. 'x' → logprob: -5.5387420654296875
    6. 'élé' → logprob: -5.7887420654296875
    7. ' A' → logprob: -5.9137420654296875
    8. ' ,' → logprob: -5.9137420654296875
    9. ' élément' → logprob: -6.2887420654296875
    10. 'pop' → logprob: -6.4137420654296875

Token 1161: ' restant' (ID: 172358)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03718707710504532
    2. ' =' → logprob: -3.662187099456787
    3. '=' → logprob: -4.662187099456787
    4. '```' → logprob: -7.537187099456787
    5. ' ,' → logprob: -8.662186622619629
    6. '       ' → logprob: -9.162186622619629
    7. '           ' → logprob: -9.662186622619629
    8. 'est' → logprob: -9.787186622619629
    9. '   ' → logprob: -10.037186622619629
    10. ')' → logprob: -10.162186622619629

Token 1162: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09671088308095932
    2. '=' → logprob: -2.7217109203338623
    3. ' =' → logprob: -4.221710681915283
    4. '           ' → logprob: -4.971710681915283
    5. 'x' → logprob: -6.346710681915283
    6. '       ' → logprob: -6.471710681915283
    7. '   ' → logprob: -7.346710681915283
    8. '```' → logprob: -8.471711158752441
    9. 'y' → logprob: -8.846711158752441
    10. '#' → logprob: -8.971711158752441

Token 1163: ' la' (ID: 557)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.021305497735738754
    2. ' A' → logprob: -3.896305561065674
    3. 'l' → logprob: -7.521305561065674
    4. ' la' → logprob: -8.771305084228516
    5. 'la' → logprob: -10.021305084228516
    6. ' l' → logprob: -11.396305084228516
    7. '	A' → logprob: -12.021305084228516
    8. ' ' → logprob: -13.521305084228516
    9. 'the' → logprob: -14.271305084228516
    10. '```' → logprob: -14.396305084228516

Token 1164: ' liste' (ID: 31719)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0030800290405750275
    2. 'pop' → logprob: -6.753079891204834
    3. 'liste' → logprob: -7.128079891204834
    4. 'list' → logprob: -7.753079891204834
    5. '```' → logprob: -8.128080368041992
    6. ' A' → logprob: -8.628080368041992
    7. '#' → logprob: -10.753080368041992
    8. 'code' → logprob: -11.003080368041992
    9. 'a' → logprob: -11.253080368041992
    10. 'print' → logprob: -11.253080368041992

Token 1165: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5025628209114075
    2. '       ' → logprob: -1.1275627613067627
    3. ' =' → logprob: -3.5025627613067627
    4. '=' → logprob: -4.502562999725342
    5. '           ' → logprob: -4.502562999725342
    6. '   ' → logprob: -4.877562999725342
    7. ' ,' → logprob: -6.252562999725342
    8. '#' → logprob: -6.877562999725342
    9. '```' → logprob: -6.877562999725342
    10. 'y' → logprob: -7.502562999725342

Token 1166: 'qui' (ID: 22771)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.23829500377178192
    2. 'x' → logprob: -2.363295078277588
    3. ')' → logprob: -3.488295078277588
    4. 'y' → logprob: -3.738295078277588
    5. 'tmp' → logprob: -3.738295078277588
    6. ' A' → logprob: -4.238295078277588
    7. ',' → logprob: -4.988295078277588
    8. '```' → logprob: -5.613295078277588
    9. ' y' → logprob: -5.738295078277588
    10. 'Y' → logprob: -6.238295078277588

Token 1167: ' est' (ID: 893)
  Prédit: '.pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.027543701231479645
    2. 'pop' → logprob: -4.402543544769287
    3. ')' → logprob: -5.402543544769287
    4. '#' → logprob: -5.902543544769287
    5. '	pop' → logprob: -6.027543544769287
    6. '.' → logprob: -6.277543544769287
    7. '=' → logprob: -7.027543544769287
    8. ' =' → logprob: -7.902543544769287
    9. '   ' → logprob: -8.027544021606445
    10. 'est' → logprob: -8.027544021606445

Token 1168: ' la' (ID: 557)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.063331238925457
    2. ' A' → logprob: -2.813331127166748
    3. 'tmp' → logprob: -7.938331127166748
    4. ' not' → logprob: -8.188331604003906
    5. '#' → logprob: -8.688331604003906
    6. ')' → logprob: -8.813331604003906
    7. 'pop' → logprob: -9.938331604003906
    8. '	A' → logprob: -10.063331604003906
    9. ' la' → logprob: -10.313331604003906
    10. 'l' → logprob: -10.313331604003906

Token 1169: ' plus' (ID: 2932)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.17043936252594
    2. 'pop' → logprob: -1.79543936252594
    3. ' plus' → logprob: -1.92043936252594
    4. ' A' → logprob: -2.4204392433166504
    5. '```' → logprob: -2.7954392433166504
    6. 'tmp' → logprob: -2.7954392433166504
    7. 'plus' → logprob: -3.5454392433166504
    8. ' last' → logprob: -3.6704392433166504
    9. ' pop' → logprob: -3.6704392433166504
    10. '``' → logprob: -3.7954392433166504

Token 1170: ' petite' (ID: 28119)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.3596512973308563
    2. 'grand' → logprob: -1.6096513271331787
    3. 'pet' → logprob: -2.9846513271331787
    4. ' grande' → logprob: -3.2346513271331787
    5. '```' → logprob: -5.2346510887146
    6. ')' → logprob: -6.2346510887146
    7. ' ' → logprob: -6.4846510887146
    8. 'g' → logprob: -7.6096510887146
    9. '	' → logprob: -7.8596510887146
    10. 'large' → logprob: -7.9846510887146

Token 1171: ' valeur' (ID: 41664)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08173488080501556
    2. ',' → logprob: -2.8317348957061768
    3. '),' → logprob: -5.331734657287598
    4. 'est' → logprob: -5.831734657287598
    5. 'de' → logprob: -6.206734657287598
    6. ' )' → logprob: -6.456734657287598
    7. ' sera' → logprob: -6.956734657287598
    8. 'rest' → logprob: -7.081734657287598
    9. 'reste' → logprob: -7.206734657287598
    10. ',)' → logprob: -7.331734657287598

Token 1172: ' positive' (ID: 8841)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07098520547151566
    2. ',' → logprob: -3.3209853172302246
    3. '),' → logprob: -5.070985317230225
    4. 'rest' → logprob: -5.195985317230225
    5. ' sera' → logprob: -5.695985317230225
    6. 'de' → logprob: -5.945985317230225
    7. 'est' → logprob: -6.070985317230225
    8. '       ' → logprob: -6.195985317230225
    9. '           ' → logprob: -6.195985317230225
    10. '   ' → logprob: -6.570985317230225

Token 1173: ' si' (ID: 1784)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2217063009738922
    2. ',' → logprob: -1.7217062711715698
    3. '),' → logprob: -4.346706390380859
    4. '   ' → logprob: -5.846706390380859
    5. ' ,' → logprob: -6.971706390380859
    6. ' )' → logprob: -7.596706390380859
    7. 'est' → logprob: -7.846706390380859
    8. '```' → logprob: -8.22170639038086
    9. ',)' → logprob: -8.34670639038086
    10. 'rest' → logprob: -8.47170639038086

Token 1174: ' différents' (ID: 36009)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5015501976013184
    2. 'A' → logprob: -1.7515501976013184
    3. 'N' → logprob: -2.0015501976013184
    4. ' i' → logprob: -3.1265501976013184
    5. 'len' → logprob: -4.251550197601318
    6. '```' → logprob: -4.876550197601318
    7. ' A' → logprob: -5.126550197601318
    8. ' N' → logprob: -5.501550197601318
    9. 'not' → logprob: -6.001550197601318
    10. 'n' → logprob: -6.751550197601318

Token 1175: ').
' (ID: 6294)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.8303848505020142
    2. ')' → logprob: -1.2053848505020142
    3. 'des' → logprob: -2.4553847312927246
    4. 'from' → logprob: -2.8303847312927246
    5. '       ' → logprob: -3.5803847312927246
    6. ',' → logprob: -3.9553847312927246
    7. ' de' → logprob: -4.205384731292725
    8. '```' → logprob: -4.955384731292725
    9. ' des' → logprob: -5.080384731292725
    10. ' du' → logprob: -5.205384731292725

Token 1176: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07935215532779694
    2. '```' → logprob: -3.3293521404266357
    3. '   ' → logprob: -3.8293521404266357
    4. ',' → logprob: -4.454352378845215
    5. '           ' → logprob: -6.204352378845215
    6. 'x' → logprob: -6.704352378845215
    7. 'else' → logprob: -7.079352378845215
    8. '	' → logprob: -7.204352378845215
    9. '``' → logprob: -7.579352378845215
    10. ' ,' → logprob: -7.829352378845215

Token 1177: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8769256472587585
    2. 'else' → logprob: -1.0019257068634033
    3. '   ' → logprob: -1.7519257068634033
    4. ' else' → logprob: -3.6269257068634033
    5. 'x' → logprob: -4.251925468444824
    6. '```' → logprob: -7.001925468444824
    7. ' ' → logprob: -7.751925468444824
    8. ' x' → logprob: -7.876925468444824
    9. 'elif' → logprob: -8.501925468444824
    10. '           ' → logprob: -8.876925468444824

Token 1178: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.14278294146060944
    2. ' i' → logprob: -2.0177829265594482
    3. '   ' → logprob: -10.267783164978027
    4. 'N' → logprob: -10.642783164978027
    5. '	i' → logprob: -10.892783164978027
    6. ' ' → logprob: -11.392783164978027
    7. ' N' → logprob: -12.142783164978027
    8. '  ' → logprob: -12.767783164978027
    9. 'not' → logprob: -13.017783164978027
    10. ' not' → logprob: -13.267783164978027

Token 1179: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5401380658149719
    2. ' <' → logprob: -0.9151380658149719
    3. ' ' → logprob: -5.040138244628906
    4. '==' → logprob: -5.040138244628906
    5. '<' → logprob: -5.790138244628906
    6. ' <=' → logprob: -7.915138244628906
    7. ' !=' → logprob: -7.915138244628906
    8. '+' → logprob: -10.915138244628906
    9. ' =' → logprob: -11.040138244628906
    10. ' ' → logprob: -11.290138244628906

Token 1180: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.02325270138680935
    2. ' N' → logprob: -3.7732527256011963
    3. '	N' → logprob: -13.148252487182617
    4. '(N' → logprob: -13.523252487182617
    5. '   ' → logprob: -13.773252487182617
    6. 'n' → logprob: -13.773252487182617
    7. '0' → logprob: -14.148252487182617
    8. ' ' → logprob: -14.398252487182617
    9. '1' → logprob: -16.148252487182617
    10. '<N' → logprob: -16.398252487182617

Token 1181: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0007099286303855479
    2. ' -' → logprob: -7.2507100105285645
    3. '-
' → logprob: -17.375709533691406
    4. '2' → logprob: -17.375709533691406
    5. ' ' → logprob: -18.875709533691406
    6. '()-' → logprob: -19.250709533691406
    7. '–' → logprob: -19.375709533691406
    8. '--' → logprob: -19.500709533691406
    9. '−' → logprob: -19.500709533691406
    10. '1' → logprob: -19.625709533691406

Token 1182: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001719446387141943
    2. '3' → logprob: -6.3767194747924805
    3. '1' → logprob: -11.12671947479248
    4. ' ' → logprob: -13.62671947479248
    5. '
' → logprob: -14.62671947479248
    6. '   ' → logprob: -14.81421947479248
    7. '```' → logprob: -16.001718521118164
    8. '۲' → logprob: -16.126718521118164
    9. '２' → logprob: -16.939218521118164
    10. '  ' → logprob: -17.501718521118164

Token 1183: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.20856615900993347
    2. ':' → logprob: -2.333566188812256
    3. '   ' → logprob: -2.583566188812256
    4. ',' → logprob: -4.583566188812256
    5. '       ' → logprob: -5.583566188812256
    6. ' and' → logprob: -7.208566188812256
    7. ' :
' → logprob: -7.958566188812256
    8. '=' → logprob: -8.708565711975098
    9. ' =' → logprob: -9.083565711975098
    10. ' ,' → logprob: -9.833565711975098

Token 1184: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24157099425792694
    2. '   ' → logprob: -1.9915709495544434
    3. 'x' → logprob: -2.9915709495544434
    4. ' x' → logprob: -3.7415709495544434
    5. ' y' → logprob: -6.366570949554443
    6. ':' → logprob: -7.741570949554443
    7. ' =' → logprob: -7.866570949554443
    8. '           ' → logprob: -8.366571426391602
    9. 'y' → logprob: -8.491571426391602
    10. ',' → logprob: -8.616571426391602

Token 1185: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.02727716602385044
    2. ' x' → logprob: -4.527276992797852
    3. '   ' → logprob: -4.902276992797852
    4. 'y' → logprob: -4.902276992797852
    5. 'tmp' → logprob: -7.152276992797852
    6. ' y' → logprob: -7.902276992797852
    7. '	x' → logprob: -10.152276992797852
    8. ' tmp' → logprob: -11.652276992797852
    9. ' ' → logprob: -12.152276992797852
    10. '```' → logprob: -12.152276992797852

Token 1186: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.062190741300582886
    2. '=' → logprob: -2.8121907711029053
    3. ' =' → logprob: -8.437191009521484
    4. '=A' → logprob: -13.687191009521484
    5. ',A' → logprob: -13.687191009521484
    6. ' ,' → logprob: -13.812191009521484
    7. 'A' → logprob: -14.562191009521484
    8. ',y' → logprob: -14.812191009521484
    9. '#' → logprob: -14.937191009521484
    10. ',
' → logprob: -15.062191009521484

Token 1187: ' y' (ID: 342)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.22820435464382172
    2. 'y' → logprob: -1.728204369544983
    3. 'tmp' → logprob: -3.7282042503356934
    4. ' A' → logprob: -6.603204250335693
    5. ' y' → logprob: -7.103204250335693
    6. ' tmp' → logprob: -9.353204727172852
    7. 'Y' → logprob: -10.478204727172852
    8. 'x' → logprob: -10.728204727172852
    9. '   ' → logprob: -11.103204727172852
    10. '	A' → logprob: -11.103204727172852

Token 1188: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0008260641479864717
    2. ' =' → logprob: -7.125825881958008
    3. ',' → logprob: -10.750825881958008
    4. '=
' → logprob: -16.000825881958008
    5. '=

' → logprob: -18.250825881958008
    6. '   ' → logprob: -18.750825881958008
    7. '=A' → logprob: -18.750825881958008
    8. '=y' → logprob: -19.000825881958008
    9. '＝' → logprob: -19.750825881958008
    10. '=}' → logprob: -19.750825881958008

Token 1189: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.006238637492060661
    2. 'tmp' → logprob: -5.1312384605407715
    3. ' A' → logprob: -8.13123893737793
    4. '   ' → logprob: -12.13123893737793
    5. ' tmp' → logprob: -12.88123893737793
    6. 'x' → logprob: -13.38123893737793
    7. ' ' → logprob: -13.63123893737793
    8. '       ' → logprob: -14.50623893737793
    9. '	A' → logprob: -14.50623893737793
    10. 'a' → logprob: -14.50623893737793

Token 1190: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.00020103710994590074
    2. 'pop' → logprob: -8.750201225280762
    3. '.' → logprob: -10.250201225280762
    4. '[-' → logprob: -12.125201225280762
    5. ',' → logprob: -13.875201225280762
    6. '[' → logprob: -15.125201225280762
    7. '.p' → logprob: -15.125201225280762
    8. 'p' → logprob: -16.625200271606445
    9. '[i' → logprob: -17.000200271606445
    10. ' .' → logprob: -17.000200271606445

Token 1191: '(),' (ID: 2547)
  Prédit: '(),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.00029279827140271664
    2. ',' → logprob: -8.250292778015137
    3. '()' → logprob: -10.875292778015137
    4. '(' → logprob: -11.750292778015137
    5. ' (),' → logprob: -12.875292778015137
    6. '(tmp' → logprob: -13.875292778015137
    7. '(),
' → logprob: -14.125292778015137
    8. '()
' → logprob: -14.750292778015137
    9. 'tmp' → logprob: -17.250293731689453
    10. ' ,' → logprob: -17.750293731689453

Token 1192: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.00020354038861114532
    2. ' tmp' → logprob: -8.500203132629395
    3. '	tmp' → logprob: -17.50020408630371
    4. 'temp' → logprob: -17.62520408630371
    5. '/tmp' → logprob: -20.75020408630371
    6. '$tmp' → logprob: -20.75020408630371
    7. ',tmp' → logprob: -21.25020408630371
    8. '(tmp' → logprob: -21.37520408630371
    9. '_tmp' → logprob: -21.62520408630371
    10. '[tmp' → logprob: -21.75020408630371

Token 1193: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016976037994027138
    2. '       ' → logprob: -4.6419758796691895
    3. '   ' → logprob: -5.1419758796691895
    4. '<|end|>' → logprob: -6.8919758796691895
    5. '               ' → logprob: -9.391976356506348
    6. '          ' → logprob: -10.141976356506348
    7. 'XY' → logprob: -10.266976356506348
    8. '	       ' → logprob: -10.266976356506348
    9. '		' → logprob: -10.391976356506348
    10. '            ' → logprob: -11.266976356506348

Token 1194: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1195: ' XY' (ID: 71987)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5810783505439758
    2. 'XY' (adapté à ' XY') → logprob: -0.8310783505439758
    3. '   ' → logprob: -5.58107852935791
    4. '       ' → logprob: -6.70607852935791
    5. ' XY' → logprob: -9.58107852935791
    6. '               ' → logprob: -11.33107852935791
    7. 'X' → logprob: -11.45607852935791
    8. 'XYZ' → logprob: -11.58107852935791
    9. 'tmp' → logprob: -12.45607852935791
    10. '```' → logprob: -12.58107852935791

Token 1196: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.786196975852363e-05
    2. '.' → logprob: -10.375038146972656
    3. 'append' → logprob: -12.125038146972656
    4. '.app' → logprob: -14.875038146972656
    5. '_append' → logprob: -15.500038146972656
    6. 'app' → logprob: -15.750038146972656
    7. '_APPEND' → logprob: -15.875038146972656
    8. ' .' → logprob: -16.125038146972656
    9. '.Append' → logprob: -16.375038146972656
    10. 'Append' → logprob: -16.625038146972656

Token 1197: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.07947779446840286
    2. '(x' → logprob: -2.5794777870178223
    3. '(' → logprob: -7.454477787017822
    4. '(
' → logprob: -11.70447826385498
    5. ' (' → logprob: -15.57947826385498
    6. '   ' → logprob: -16.204477310180664
    7. '({' → logprob: -16.454477310180664
    8. '[(' → logprob: -16.579477310180664
    9. ',' → logprob: -16.829477310180664
    10. '()' → logprob: -17.079477310180664

Token 1198: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.16022686660289764
    2. '(x' → logprob: -1.910226821899414
    3. ' x' → logprob: -13.035226821899414
    4. ' (' → logprob: -15.535226821899414
    5. '	x' → logprob: -16.410226821899414
    6. '(' → logprob: -16.410226821899414
    7. '   ' → logprob: -16.910226821899414
    8. '(
' → logprob: -17.785226821899414
    9. '[x' → logprob: -17.785226821899414
    10. '"x' → logprob: -18.035226821899414

Token 1199: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.511406809295295e-06
    2. ',y' → logprob: -12.750006675720215
    3. ' ,' → logprob: -12.750006675720215
    4. ',
' → logprob: -15.125006675720215
    5. ')' → logprob: -15.625006675720215
    6. ',x' → logprob: -16.3750057220459
    7. '،' → logprob: -18.3750057220459
    8. '	' → logprob: -18.5000057220459
    9. '```' → logprob: -18.5000057220459
    10. '‌,' → logprob: -18.5625057220459

Token 1200: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.39992672204971313
    2. 'x' → logprob: -1.1499266624450684
    3. '(x' → logprob: -4.399926662445068
    4. ' y' → logprob: -7.649926662445068
    5. '(y' → logprob: -8.649927139282227
    6. '(' → logprob: -10.524927139282227
    7. ' x' → logprob: -11.524927139282227
    8. ' (' → logprob: -12.899927139282227
    9. 'xy' → logprob: -13.774927139282227
    10. ')' → logprob: -14.524927139282227

Token 1201: '))
' (ID: 2210)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.031712137162685394
    2. ')' → logprob: -3.531712055206299
    3. '           ' → logprob: -6.281712055206299
    4. ')
' → logprob: -9.406712532043457
    5. '   ' → logprob: -12.531712532043457
    6. '       ' → logprob: -13.156712532043457
    7. ' )
' → logprob: -15.156712532043457
    8. ')`
' → logprob: -15.406712532043457
    9. 'tmp' → logprob: -15.656712532043457
    10. ')

' → logprob: -15.781712532043457

Token 1202: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14312724769115448
    2. 'tmp' → logprob: -2.143127202987671
    3. '   ' → logprob: -4.39312744140625
    4. '       ' → logprob: -6.26812744140625
    5. '		' → logprob: -7.64312744140625
    6. '	tmp' → logprob: -7.89312744140625
    7. ' tmp' → logprob: -8.39312744140625
    8. '               ' → logprob: -8.76812744140625
    9. '	       ' → logprob: -9.39312744140625
    10. '	   ' → logprob: -9.51812744140625

Token 1203: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' (adapté à ' tmp') → logprob: -0.00010199354437645525
    2. '           ' → logprob: -9.250102043151855
    3. ' tmp' → logprob: -13.000102043151855
    4. 'temp' → logprob: -13.125102043151855
    5. '	tmp' → logprob: -14.000102043151855
    6. '/tmp' → logprob: -15.125102043151855
    7. '   ' → logprob: -15.625102043151855
    8. '$tmp' → logprob: -16.37510108947754
    9. '_tmp' → logprob: -17.12510108947754
    10. '[tmp' → logprob: -17.75010108947754

Token 1204: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06199580803513527
    2. ' =' → logprob: -2.8119957447052
    3. '-=' → logprob: -11.061995506286621
    4. ' -=' → logprob: -11.311995506286621
    5. '-' → logprob: -16.686996459960938
    6. '+=' → logprob: -16.811996459960938
    7. '.=' → logprob: -17.061996459960938
    8. ' +=' → logprob: -17.311996459960938
    9. '＝' → logprob: -17.686996459960938
    10. ' ' → logprob: -17.811996459960938

Token 1205: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.000553151941858232
    2. ' x' → logprob: -7.500553131103516
    3. '0' → logprob: -17.125553131103516
    4. 'y' → logprob: -17.500553131103516
    5. 'tmp' → logprob: -17.625553131103516
    6. '	x' → logprob: -18.000553131103516
    7. '(x' → logprob: -18.125553131103516
    8. ' ' → logprob: -19.250553131103516
    9. '{x' → logprob: -19.375553131103516
    10. '1' → logprob: -19.375553131103516

Token 1206: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5233805179595947
    2. '-' → logprob: -0.8983805179595947
    3. '<|end|>' → logprob: -9.023380279541016
    4. ' ' → logprob: -9.648380279541016
    5. ')' → logprob: -10.773380279541016
    6. '-
' → logprob: -12.023380279541016
    7. '-x' → logprob: -12.023380279541016
    8. ' -
' → logprob: -12.273380279541016
    9. '-t' → logprob: -12.398380279541016
    10. '[' → logprob: -12.898380279541016

Token 1207: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00033546582562848926
    2. ' y' → logprob: -8.000335693359375
    3. '	y' → logprob: -19.375335693359375
    4. 'x' → logprob: -19.625335693359375
    5. ' ' → logprob: -21.625335693359375
    6. 'Y' → logprob: -22.000335693359375
    7. '_y' → logprob: -22.125335693359375
    8. ')y' → logprob: -22.250335693359375
    9. ''y' → logprob: -23.000335693359375
    10. ',y' → logprob: -23.125335693359375

Token 1208: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6351328492164612
    2. '#' → logprob: -1.3851327896118164
    3. '
' → logprob: -2.3851327896118164
    4. 'for' → logprob: -2.5101327896118164
    5. '<|end|>' → logprob: -3.6351327896118164
    6. '   ' → logprob: -5.010132789611816
    7. 'if' → logprob: -5.635132789611816
    8. '```' → logprob: -5.760132789611816
    9. '    
' → logprob: -5.885132789611816
    10. 'elif' → logprob: -7.260132789611816

Token 1209: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006899370811879635
    2. '#' → logprob: -5.006899356842041
    3. 'for' → logprob: -9.1318998336792
    4. '```' → logprob: -10.0068998336792
    5. 'else' → logprob: -11.0068998336792
    6. '#print' → logprob: -11.7568998336792
    7. '
' → logprob: -12.6318998336792
    8. '#
' → logprob: -14.2568998336792
    9. '    
' → logprob: -14.2568998336792
    10. '``' → logprob: -14.7568998336792

Token 1210: ' S' (ID: 336)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.009318724274635315
    2. 'elif' → logprob: -4.759318828582764
    3. '#' → logprob: -7.259318828582764
    4. ' else' → logprob: -14.884318351745605
    5. 'elseif' → logprob: -17.884319305419922
    6. 'if' → logprob: -17.884319305419922
    7. '```' → logprob: -18.634319305419922
    8. '#else' → logprob: -18.884319305419922
    9. '
' → logprob: -19.384319305419922
    10. 'Else' → logprob: -19.634319305419922

Token 1211: ''il' (ID: 14683)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.06366362422704697
    2. 'else' → logprob: -3.3136637210845947
    3. '#' → logprob: -3.6886637210845947
    4. ' elif' → logprob: -9.063663482666016
    5. 'e' → logprob: -9.438663482666016
    6. 'el' → logprob: -10.438663482666016
    7. '```' → logprob: -11.563663482666016
    8. 'elf' → logprob: -11.813663482666016
    9. '#elif' → logprob: -12.563663482666016
    10. 'ont' → logprob: -12.563663482666016

Token 1212: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.13725008070468903
    2. 'MIN' → logprob: -2.5122501850128174
    3. ' n' → logprob: -3.5122501850128174
    4. 'a' → logprob: -4.637249946594238
    5. 'e' → logprob: -5.637249946594238
    6. 'y' → logprob: -6.512249946594238
    7. 'est' → logprob: -7.137249946594238
    8. 'n't' → logprob: -7.387249946594238
    9. ' MIN' → logprob: -8.387249946594238
    10. ' a' → logprob: -9.012249946594238

Token 1213: ''y' (ID: 27913)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.11885996907949448
    2. 'e' → logprob: -2.2438600063323975
    3. ''est' → logprob: -6.493859767913818
    4. ''il' → logprob: -6.868859767913818
    5. 'el' → logprob: -7.493859767913818
    6. 'eg' → logprob: -7.743859767913818
    7. 'else' → logprob: -7.993859767913818
    8. ''y' → logprob: -8.118860244750977
    9. ''agit' → logprob: -8.368860244750977
    10. ' elif' → logprob: -8.493860244750977

Token 1214: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.09657376259565353
    2. 'elif' → logprob: -3.221573829650879
    3. 'else' → logprob: -3.221573829650879
    4. 'e' → logprob: -6.346573829650879
    5. '#' → logprob: -6.471573829650879
    6. 'est' → logprob: -6.471573829650879
    7. ' a' → logprob: -6.721573829650879
    8. 'n' → logprob: -6.971573829650879
    9. 'A' → logprob: -7.096573829650879
    10. 'avait' → logprob: -7.221573829650879

Token 1215: ' A' (ID: 355)
  Prédit: 'MIN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MIN' → logprob: -0.007560486905276775
    2. ' MIN' → logprob: -5.1325602531433105
    3. 'PLUS' → logprob: -6.6325602531433105
    4. 'not' → logprob: -8.757560729980469
    5. ' not' → logprob: -10.257560729980469
    6. 'PAS' → logprob: -10.632560729980469
    7. 'NOT' → logprob: -11.132560729980469
    8. 'pas' → logprob: -11.132560729980469
    9. ' ' → logprob: -11.382560729980469
    10. 'plus' → logprob: -11.757560729980469

Token 1216: 'UC' (ID: 25949)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.0100232362747192
    2. 'PLUS' → logprob: -1.1350232362747192
    3. '_PLUS' → logprob: -2.7600231170654297
    4. 'ucun' → logprob: -3.1350231170654297
    5. 'e' → logprob: -3.3850231170654297
    6. 'a' → logprob: -3.3850231170654297
    7. 'n' → logprob: -3.8850231170654297
    8. 'plus' → logprob: -4.38502311706543
    9. 'ucune' → logprob: -4.51002311706543
    10. 'elif' → logprob: -4.51002311706543

Token 1217: 'UN' (ID: 2926)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.06249034032225609
    2. 'ucun' → logprob: -3.687490224838257
    3. 'une' → logprob: -3.812490224838257
    4. 'pas' → logprob: -5.562490463256836
    5. 'auc' → logprob: -6.062490463256836
    6. 'ucune' → logprob: -6.312490463256836
    7. 'n' → logprob: -7.312490463256836
    8. 'uc' → logprob: -7.562490463256836
    9. ' aucun' → logprob: -7.562490463256836
    10. 'unes' → logprob: -7.687490463256836

Token 1218: ' nombre' (ID: 9733)
  Prédit: 'MIN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MIN' → logprob: -0.01108542736619711
    2. 'else' → logprob: -5.136085510253906
    3. '#' → logprob: -6.261085510253906
    4. 'not' → logprob: -7.011085510253906
    5. 'moins' → logprob: -7.386085510253906
    6. ' MIN' → logprob: -7.386085510253906
    7. 'elif' → logprob: -7.761085510253906
    8. 'pas' → logprob: -8.386085510253906
    9. 'minus' → logprob: -8.761085510253906
    10. 'PLUS' → logprob: -9.886085510253906

Token 1219: ' positif' (ID: 89008)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(M' → logprob: -1.1669447422027588
    2. '<' → logprob: -1.4169447422027588
    3. '==' → logprob: -2.291944742202759
    4. ' ==' → logprob: -2.416944742202759
    5. 'else' → logprob: -2.416944742202759
    6. ' <' → logprob: -3.041944742202759
    7. 'MIN' → logprob: -3.041944742202759
    8. 'elif' → logprob: -3.666944742202759
    9. '(' → logprob: -4.16694450378418
    10. 'if' → logprob: -5.54194450378418

Token 1220: ' ou' (ID: 2031)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.6455230712890625
    2. 'elif' → logprob: -0.7705230712890625
    3. ':' → logprob: -5.0205230712890625
    4. ':
' → logprob: -5.8955230712890625
    5. 'and' → logprob: -6.0205230712890625
    6. ' and' → logprob: -8.270523071289062
    7. 'or' → logprob: -8.520523071289062
    8. ' (' → logprob: -9.145523071289062
    9. '```' → logprob: -9.395523071289062
    10. '==' → logprob: -9.395523071289062

Token 1221: ' nul' (ID: 64435)
  Prédit: 'nul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nul' → logprob: -0.6769010424613953
    2. 'strict' → logprob: -0.9269010424613953
    3. 'n' → logprob: -3.17690110206604
    4. 'neg' → logprob: -3.42690110206604
    5. ' nul' → logprob: -4.926900863647461
    6. 'moins' → logprob: -5.051900863647461
    7. 's' → logprob: -6.301900863647461
    8. '#' → logprob: -6.801900863647461
    9. 'null' → logprob: -7.176900863647461
    10. ' nég' → logprob: -7.176900863647461

Token 1222: ',' (ID: 11)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.04919629171490669
    2. 'elif' → logprob: -3.049196243286133
    3. ':' → logprob: -7.424196243286133
    4. ' else' → logprob: -12.049196243286133
    5. ':
' → logprob: -12.799196243286133
    6. 'and' → logprob: -13.174196243286133
    7. 'elseif' → logprob: -14.174196243286133
    8. ' elif' → logprob: -15.049196243286133
    9. '_else' → logprob: -15.674196243286133
    10. 'elsif' → logprob: -16.049196243286133

Token 1223: ' donc' (ID: 14206)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.25193166732788086
    2. 'elif' → logprob: -1.5019316673278809
    3. '#' → logprob: -13.251932144165039
    4. ' else' → logprob: -14.626932144165039
    5. ':' → logprob: -15.751932144165039
    6. ' elif' → logprob: -16.12693214416504
    7. 'if' → logprob: -17.50193214416504
    8. '#elif' → logprob: -17.87693214416504
    9. '```' → logprob: -18.00193214416504
    10. '   ' → logprob: -18.50193214416504

Token 1224: ' que' (ID: 661)
  Prédit: 'MIN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MIN' → logprob: -0.609184980392456
    2. '#' → logprob: -1.234184980392456
    3. 'else' → logprob: -2.984184980392456
    4. ':' → logprob: -2.984184980392456
    5. 'PLUS' → logprob: -4.109185218811035
    6. 'moins' → logprob: -4.609185218811035
    7. 'elif' → logprob: -4.984185218811035
    8. 'plus' → logprob: -5.484185218811035
    9. 'NEG' → logprob: -5.484185218811035
    10. 'neg' → logprob: -5.484185218811035

Token 1225: ' des' (ID: 731)
  Prédit: 'MIN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MIN' → logprob: -0.07112422585487366
    2. 'PLUS' → logprob: -3.446124315261841
    3. ' MIN' → logprob: -3.821124315261841
    4. 'len' → logprob: -4.821124076843262
    5. 'else' → logprob: -6.946124076843262
    6. '#' → logprob: -7.071124076843262
    7. 'plus' → logprob: -7.321124076843262
    8. '(
' → logprob: -7.821124076843262
    9. '_PLUS' → logprob: -8.071124076843262
    10. ' des' → logprob: -8.071124076843262

Token 1226: ' valeurs' (ID: 73668)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.015932423993945122
    2. 'neg' → logprob: -4.890932559967041
    3. 'élé' → logprob: -5.265932559967041
    4. 'nombre' → logprob: -6.890932559967041
    5. 'strict' → logprob: -6.890932559967041
    6. ' nég' → logprob: -8.015932083129883
    7. 'a' → logprob: -8.515932083129883
    8. '#' → logprob: -8.515932083129883
    9. 'A' → logprob: -8.640932083129883
    10. ' nombres' → logprob: -9.390932083129883

Token 1227: ' nég' (ID: 55805)
  Prédit: 'neg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neg' → logprob: -0.4153843820095062
    2. 'n' → logprob: -2.540384292602539
    3. 'else' → logprob: -2.540384292602539
    4. '#' → logprob: -2.790384292602539
    5. ' nég' → logprob: -2.790384292602539
    6. 'strict' → logprob: -3.665384292602539
    7. 'elif' → logprob: -4.415384292602539
    8. 'NEG' → logprob: -4.665384292602539
    9. 'moins' → logprob: -5.915384292602539
    10. '   ' → logprob: -6.040384292602539

Token 1228: 'atives' (ID: 8015)
  Prédit: 'atifs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atifs' → logprob: -0.42897453904151917
    2. 'atives' → logprob: -1.0539745092391968
    3. 'eg' → logprob: -9.178974151611328
    4. 'atif' → logprob: -9.428974151611328
    5. '#' → logprob: -10.178974151611328
    6. 'ég' → logprob: -10.928974151611328
    7. 'aux' → logprob: -11.928974151611328
    8. 'ative' → logprob: -12.303974151611328
    9. '```' → logprob: -12.428974151611328
    10. 'ativos' → logprob: -12.428974151611328

Token 1229: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.10021886229515076
    2. 'elif' → logprob: -2.3502187728881836
    3. ':' → logprob: -11.475218772888184
    4. ':
' → logprob: -13.850218772888184
    5. 'if' → logprob: -14.475218772888184
    6. ' else' → logprob: -15.850218772888184
    7. '```' → logprob: -16.8502197265625
    8. '#' → logprob: -17.3502197265625
    9. 'and' → logprob: -17.6002197265625
    10. ' elif' → logprob: -17.9752197265625

Token 1230: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.16022787988185883
    2. 'elif' → logprob: -1.91022789478302
    3. ':' → logprob: -13.28522777557373
    4. 'if' → logprob: -13.66022777557373
    5. ' else' → logprob: -14.78522777557373
    6. '#' → logprob: -15.66022777557373
    7. ' elif' → logprob: -16.285228729248047
    8. 'for' → logprob: -16.535228729248047
    9. '```' → logprob: -16.535228729248047
    10. 'elseif' → logprob: -18.285228729248047

Token 1231: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0059302207082509995
    2. ':
' → logprob: -5.130930423736572
    3. ':
' → logprob: -14.130929946899414
    4. ' :' → logprob: -14.880929946899414
    5. ':

' → logprob: -15.255929946899414
    6. '   ' → logprob: -15.755929946899414
    7. ':#' → logprob: -17.505929946899414
    8. ' :
' → logprob: -18.505929946899414
    9. '```' → logprob: -19.255929946899414
    10. '#' → logprob: -19.380929946899414

Token 1232: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06825710088014603
    2. 'for' → logprob: -2.8182570934295654
    3. ' for' → logprob: -5.1932573318481445
    4. '#' → logprob: -7.3182573318481445
    5. '```' → logprob: -10.193257331848145
    6. 'while' → logprob: -11.943257331848145
    7. '
' → logprob: -12.818257331848145
    8. ':
' → logprob: -13.318257331848145
    9. '	for' → logprob: -13.818257331848145
    10. ':' → logprob: -13.943257331848145

Token 1233: ' #' (ID: 1069)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -1.109093189239502
    2. 'x' → logprob: -1.234093189239502
    3. 'for' → logprob: -1.234093189239502
    4. '#' (adapté à ' #') → logprob: -2.484093189239502
    5. '   ' → logprob: -5.484093189239502
    6. '```' → logprob: -8.734092712402344
    7. 'y' → logprob: -9.109092712402344
    8. 'while' → logprob: -9.484092712402344
    9. '``' → logprob: -11.359092712402344
    10. 'a' → logprob: -11.359092712402344

Token 1234: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05795208364725113
    2. 'x' → logprob: -3.4329521656036377
    3. 'tmp' → logprob: -4.432951927185059
    4. '#' → logprob: -4.432951927185059
    5. '   ' → logprob: -9.057951927185059
    6. 'while' → logprob: -9.557951927185059
    7. 'y' → logprob: -9.932951927185059
    8. 'a' → logprob: -12.307951927185059
    9. ' for' → logprob: -12.432951927185059
    10. '```' → logprob: -12.932951927185059

Token 1235: ' effect' (ID: 3159)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.9497880339622498
    2. 'for' → logprob: -1.0747880935668945
    3. '#' → logprob: -1.8247880935668945
    4. 'x' → logprob: -2.9497880935668945
    5. '   ' → logprob: -3.8247880935668945
    6. '=' → logprob: -4.1997880935668945
    7. ' for' → logprob: -5.5747880935668945
    8. 'y' → logprob: -5.6997880935668945
    9. ' =' → logprob: -5.6997880935668945
    10. '```' → logprob: -5.9497880935668945

Token 1236: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.006427944637835026
    2. 'u' → logprob: -5.506427764892578
    3. 'uera' → logprob: -6.506427764892578
    4. 'uer' → logprob: -7.131427764892578
    5. 'ure' → logprob: -11.506427764892578
    6. 'uate' → logprob: -11.756427764892578
    7. 'uent' → logprob: -11.756427764892578
    8. 'uez' → logprob: -12.006427764892578
    9. '   ' → logprob: -12.381427764892578
    10. 'uere' → logprob: -12.506427764892578

Token 1237: ' ici' (ID: 27994)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5847820043563843
    2. 'for' → logprob: -1.3347820043563843
    3. '#' → logprob: -2.459782123565674
    4. 'tmp' → logprob: -2.584782123565674
    5. '   ' → logprob: -4.459782123565674
    6. ' for' → logprob: -5.709782123565674
    7. '```' → logprob: -6.959782123565674
    8. ' x' → logprob: -7.334782123565674
    9. ' tmp' → logprob: -7.459782123565674
    10. 'la' → logprob: -7.584782123565674

Token 1238: ' une' (ID: 2463)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19375331699848175
    2. 'la' → logprob: -2.318753242492676
    3. '   ' → logprob: -3.068753242492676
    4. 'le' → logprob: -4.568753242492676
    5. 'une' → logprob: -5.068753242492676
    6. 'x' → logprob: -5.443753242492676
    7. '#' → logprob: -5.568753242492676
    8. ' la' → logprob: -6.443753242492676
    9. 'tmp' → logprob: -6.443753242492676
    10. ' for' → logprob: -6.818753242492676

Token 1239: ' stratégie' (ID: 79899)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24964860081672668
    2. '#' → logprob: -2.2496485710144043
    3. 'while' → logprob: -2.7496485710144043
    4. 'x' → logprob: -3.2496485710144043
    5. 'tmp' → logprob: -4.999648571014404
    6. 'bou' → logprob: -6.249648571014404
    7. '   ' → logprob: -7.124648571014404
    8. ' for' → logprob: -7.124648571014404
    9. 'operation' → logprob: -8.374649047851562
    10. 'A' → logprob: -8.624649047851562

Token 1240: ' adaptée' (ID: 139884)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02628868632018566
    2. 'for' → logprob: -3.9012887477874756
    3. '#' → logprob: -6.0262885093688965
    4. 'diff' → logprob: -6.7762885093688965
    5. 'pour' → logprob: -6.9012885093688965
    6. ' for' → logprob: -7.6512885093688965
    7. ':' → logprob: -8.776288986206055
    8. ' ' → logprob: -9.401288986206055
    9. '```' → logprob: -9.526288986206055
    10. 'sim' → logprob: -9.776288986206055

Token 1241: ' aux' (ID: 5850)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010910701006650925
    2. 'for' → logprob: -5.385910511016846
    3. ' for' → logprob: -5.760910511016846
    4. ':' → logprob: -6.135910511016846
    5. ' pour' → logprob: -8.510910987854004
    6. '#' → logprob: -8.635910987854004
    7. ':
' → logprob: -8.885910987854004
    8. ' to' → logprob: -9.135910987854004
    9. 'pour' → logprob: -9.385910987854004
    10. ' ' → logprob: -10.510910987854004

Token 1242: ' valeurs' (ID: 73668)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.6274611949920654
    2. 'n' → logprob: -1.5024611949920654
    3. 'N' → logprob: -2.1274611949920654
    4. ' nombres' → logprob: -3.5024611949920654
    5. 'cas' → logprob: -3.8774611949920654
    6. 'nombre' → logprob: -4.1274614334106445
    7. '#' → logprob: -4.1274614334106445
    8. 'élé' → logprob: -4.2524614334106445
    9. ' valeurs' → logprob: -5.5024614334106445
    10. 'A' → logprob: -5.6274614334106445

Token 1243: ' strict' (ID: 12035)
  Prédit: 'posit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'posit' → logprob: -0.5034111738204956
    2. ' nég' → logprob: -1.7534111738204956
    3. 'neg' → logprob: -2.003411293029785
    4. 'strict' → logprob: -3.753411293029785
    5. 'n' → logprob: -4.128411293029785
    6. 'positive' → logprob: -4.378411293029785
    7. '   ' → logprob: -4.753411293029785
    8. ' positives' → logprob: -4.753411293029785
    9. '#' → logprob: -4.878411293029785
    10. 'pos' → logprob: -6.378411293029785

Token 1244: 'ement' (ID: 962)
  Prédit: 'ict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ict' → logprob: -0.0683145523071289
    2. 'ic' → logprob: -3.193314552307129
    3. 'iqu' → logprob: -4.943314552307129
    4. 'iquement' → logprob: -5.193314552307129
    5. 'it' → logprob: -5.818314552307129
    6. 'iment' → logprob: -6.193314552307129
    7. '   ' → logprob: -6.443314552307129
    8. 'ement' → logprob: -7.068314552307129
    9. 'ect' → logprob: -7.068314552307129
    10. '#' → logprob: -7.443314552307129

Token 1245: ' nég' (ID: 55805)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.031818024814128876
    2. 'neg' → logprob: -3.53181791305542
    3. ' nég' → logprob: -6.65681791305542
    4. '```' → logprob: -8.531818389892578
    5. 'posit' → logprob: -8.906818389892578
    6. 'import' → logprob: -9.031818389892578
    7. 'inf' → logprob: -9.281818389892578
    8. 'strict' → logprob: -9.281818389892578
    9. 'ég' → logprob: -10.531818389892578
    10. '#' → logprob: -10.531818389892578

Token 1246: 'atives' (ID: 8015)
  Prédit: 'ég'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ég' → logprob: -0.7672072649002075
    2. 'atives' → logprob: -1.0172072649002075
    3. 'eg' → logprob: -1.8922072649002075
    4. 'atifs' → logprob: -4.267207145690918
    5. '```' → logprob: -6.017207145690918
    6. 'ites' → logprob: -6.267207145690918
    7. 'itives' → logprob: -6.892207145690918
    8. 'ativement' → logprob: -7.017207145690918
    9. 'ict' → logprob: -7.767207145690918
    10. '#' → logprob: -7.767207145690918

Token 1247: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7013141512870789
    2. '   ' → logprob: -0.8263141512870789
    3. ':
' → logprob: -3.3263142108917236
    4. 'for' → logprob: -3.5763142108917236
    5. ' for' → logprob: -6.7013139724731445
    6. '#' → logprob: -7.3263139724731445
    7. 'while' → logprob: -8.951313972473145
    8. ' :' → logprob: -9.201313972473145
    9. ':#' → logprob: -9.701313972473145
    10. ',' → logprob: -10.201313972473145

Token 1248: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.48686572909355164
    2. '   ' → logprob: -0.986865758895874
    3. 'x' → logprob: -5.361865520477295
    4. ' for' → logprob: -5.361865520477295
    5. '#' → logprob: -6.611865520477295
    6. 'tmp' → logprob: -6.736865520477295
    7. 'while' → logprob: -8.236865997314453
    8. '```' → logprob: -8.486865997314453
    9. '
' → logprob: -8.986865997314453
    10. 'y' → logprob: -9.361865997314453

Token 1249: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012475276365876198
    2. 'x' → logprob: -4.762475490570068
    3. '   ' → logprob: -6.012475490570068
    4. '#' (adapté à ' #') → logprob: -6.887475490570068
    5. 'tmp' → logprob: -8.13747501373291
    6. 'while' → logprob: -10.26247501373291
    7. '```' → logprob: -10.38747501373291
    8. 'y' → logprob: -11.88747501373291
    9. ' for' → logprob: -12.38747501373291
    10. '``' → logprob: -12.38747501373291

Token 1250: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.28059548139572144
    2. 'x' → logprob: -1.5305955410003662
    3. 'tmp' → logprob: -3.905595541000366
    4. '#' → logprob: -5.155595302581787
    5. 'y' → logprob: -6.655595302581787
    6. '   ' → logprob: -7.155595302581787
    7. 'a' → logprob: -9.030595779418945
    8. 'A' → logprob: -9.905595779418945
    9. 'while' → logprob: -9.905595779418945
    10. '```' → logprob: -10.280595779418945

Token 1251: ' effect' (ID: 3159)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4494575560092926
    2. 'tmp' → logprob: -2.1994576454162598
    3. ' for' → logprob: -2.5744576454162598
    4. '#' → logprob: -2.6994576454162598
    5. 'x' → logprob: -2.8244576454162598
    6. 'a' → logprob: -4.94945764541626
    7. ' tmp' → logprob: -5.07445764541626
    8. 'y' → logprob: -5.44945764541626
    9. ' =' → logprob: -5.57445764541626
    10. ' x' → logprob: -5.69945764541626

Token 1252: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.0035592082422226667
    2. 'uer' → logprob: -6.128559112548828
    3. 'u' → logprob: -7.503559112548828
    4. 'uera' → logprob: -7.503559112548828
    5. 'uez' → logprob: -9.503559112548828
    6. 'ues' → logprob: -9.878559112548828
    7. 'ure' → logprob: -10.003559112548828
    8. '#' → logprob: -10.253559112548828
    9. 'uere' → logprob: -10.878559112548828
    10. 'ué' → logprob: -11.253559112548828

Token 1253: ' d' (ID: 272)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8648048639297485
    2. 'for' → logprob: -1.2398048639297485
    3. 'tmp' → logprob: -1.9898048639297485
    4. '#' → logprob: -2.489804744720459
    5. 'le' → logprob: -3.864804744720459
    6. 'la' → logprob: -4.614804744720459
    7. '   ' → logprob: -4.739804744720459
    8. 'N' → logprob: -5.114804744720459
    9. '(tmp' → logprob: -5.739804744720459
    10. 'l' → logprob: -5.989804744720459

Token 1254: ''abord' (ID: 89989)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.648655116558075
    2. 'e' → logprob: -1.0236551761627197
    3. 'for' → logprob: -2.7736551761627197
    4. 'eux' → logprob: -4.148654937744141
    5. 'ans' → logprob: -4.398654937744141
    6. 'u' → logprob: -5.023654937744141
    7. '#' → logprob: -5.023654937744141
    8. 'x' → logprob: -5.773654937744141
    9. '```' → logprob: -6.148654937744141
    10. ' es' → logprob: -6.898654937744141

Token 1255: ' la' (ID: 557)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07269009202718735
    2. 'tmp' → logprob: -2.822690010070801
    3. 'la' → logprob: -5.572690010070801
    4. 'le' → logprob: -6.072690010070801
    5. '#' → logprob: -6.697690010070801
    6. ' x' → logprob: -6.822690010070801
    7. 'l' → logprob: -7.447690010070801
    8. 'les' → logprob: -8.1976900100708
    9. 'for' → logprob: -8.3226900100708
    10. ' la' → logprob: -8.4476900100708

Token 1256: ' sou' (ID: 4069)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3854326009750366
    2. 'tmp' → logprob: -1.6354326009750366
    3. 'for' → logprob: -2.635432720184326
    4. 'sou' → logprob: -3.885432720184326
    5. '#' → logprob: -4.385432720184326
    6. 'plus' → logprob: -5.260432720184326
    7. 'sub' → logprob: -5.885432720184326
    8. 'prem' → logprob: -6.135432720184326
    9. 's' → logprob: -6.385432720184326
    10. '```' → logprob: -7.010432720184326

Token 1257: 'straction' (ID: 79887)
  Prédit: 'straction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'straction' → logprob: -0.01673164963722229
    2. 'traction' → logprob: -4.1417317390441895
    3. 'stra' → logprob: -7.8917317390441895
    4. 'str' → logprob: -8.766731262207031
    5. 'tractions' → logprob: -9.516731262207031
    6. 'tr' → logprob: -10.516731262207031
    7. 'tract' → logprob: -10.766731262207031
    8. 'tra' → logprob: -11.141731262207031
    9. 'tration' → logprob: -11.891731262207031
    10. 'stract' → logprob: -11.891731262207031

Token 1258: ' entre' (ID: 3853)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6192152500152588
    2. 'entre' → logprob: -1.3692152500152588
    3. 'between' → logprob: -2.494215250015259
    4. ' entre' → logprob: -3.244215250015259
    5. 'tmp' → logprob: -3.494215250015259
    6. 'du' → logprob: -3.869215250015259
    7. ' between' → logprob: -4.49421501159668
    8. '   ' → logprob: -4.61921501159668
    9. 'des' → logprob: -5.74421501159668
    10. '#' → logprob: -5.86921501159668

Token 1259: ' le' (ID: 505)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.31347835063934326
    2. 'tmp' → logprob: -1.3134783506393433
    3. ' A' → logprob: -9.313478469848633
    4. ' tmp' → logprob: -9.438478469848633
    5. '(tmp' → logprob: -11.563478469848633
    6. '(A' → logprob: -12.688478469848633
    7. '[tmp' → logprob: -12.688478469848633
    8. 'x' → logprob: -12.813478469848633
    9. '```' → logprob: -12.813478469848633
    10. '#' → logprob: -12.813478469848633

Token 1260: ' plus' (ID: 2932)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5232986211776733
    2. 'tmp' → logprob: -0.8982986211776733
    3. ' tmp' → logprob: -9.648298263549805
    4. ' A' → logprob: -9.898298263549805
    5. '[tmp' → logprob: -11.773298263549805
    6. 'temp' → logprob: -12.023298263549805
    7. '(tmp' → logprob: -12.210798263549805
    8. '/tmp' → logprob: -12.710798263549805
    9. 'a' → logprob: -12.773298263549805
    10. 'x' → logprob: -12.773298263549805

Token 1261: ' grand' (ID: 6363)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.0011418843641877174
    2. '```' → logprob: -7.5011420249938965
    3. 'pet' → logprob: -7.6261420249938965
    4. ' grand' → logprob: -10.376141548156738
    5. 'g' → logprob: -10.501141548156738
    6. 'gr' → logprob: -10.876141548156738
    7. 'large' → logprob: -11.751141548156738
    8. 'x' → logprob: -12.376141548156738
    9. 'Grand' → logprob: -13.126141548156738
    10. 'A' → logprob: -13.751141548156738

Token 1262: ' nég' (ID: 55805)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2666308879852295
    2. 'A' → logprob: -2.2666308879852295
    3. 'de' → logprob: -2.6416308879852295
    4. ']' → logprob: -3.7666308879852295
    5. 'a' → logprob: -4.391631126403809
    6. 'élé' → logprob: -5.891631126403809
    7. '],' → logprob: -6.141631126403809
    8. 'val' → logprob: -6.141631126403809
    9. ' de' → logprob: -6.141631126403809
    10. 'element' → logprob: -6.266631126403809

Token 1263: 'atif' (ID: 23984)
  Prédit: 'atif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atif' → logprob: -0.1161457747220993
    2. 'A' → logprob: -2.7411458492279053
    3. 'itif' → logprob: -3.4911458492279053
    4. '```' → logprob: -6.366145610809326
    5. ')' → logprob: -6.991145610809326
    6. 'é' → logprob: -7.116145610809326
    7. 'al' → logprob: -7.241145610809326
    8. ']' → logprob: -7.241145610809326
    9. 'iciel' → logprob: -7.366145610809326
    10. '(A' → logprob: -7.616145610809326

Token 1264: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8062064051628113
    2. 'et' → logprob: -1.681206464767456
    3. ' et' → logprob: -1.681206464767456
    4. ']' → logprob: -2.806206464767456
    5. ' and' → logprob: -4.056206226348877
    6. 'A' → logprob: -4.181206226348877
    7. ' (' → logprob: -4.181206226348877
    8. '(' → logprob: -4.556206226348877
    9. 's' → logprob: -4.681206226348877
    10. ')' → logprob: -4.806206226348877

Token 1265: 'don' (ID: 22130)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.03572627529501915
    2. ' A' → logprob: -4.160726070404053
    3. 'tmp' → logprob: -4.660726070404053
    4. ')' → logprob: -6.035726070404053
    5. 'et' → logprob: -6.160726070404053
    6. ' et' → logprob: -6.285726070404053
    7. '#' → logprob: -7.035726070404053
    8. ' and' → logprob: -7.410726070404053
    9. 'x' → logprob: -7.535726070404053
    10. ',' → logprob: -7.535726070404053

Token 1266: 'c' (ID: 66)
  Prédit: 'né'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'né' → logprob: -0.1826935112476349
    2. 'é' → logprob: -2.3076934814453125
    3. 'A' → logprob: -3.6826934814453125
    4. 'née' → logprob: -4.0576934814453125
    5. 'e' → logprob: -5.0576934814453125
    6. '#' → logprob: -5.1826934814453125
    7. 'nées' → logprob: -5.3076934814453125
    8. 'nés' → logprob: -6.3076934814453125
    9. '(A' → logprob: -6.5576934814453125
    10. 'és' → logprob: -6.5576934814453125

Token 1267: ' celui' (ID: 27857)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.04035605117678642
    2. ' A' → logprob: -3.290356159210205
    3. ')' → logprob: -7.040356159210205
    4. 'tmp' → logprob: -7.040356159210205
    5. ' la' → logprob: -9.290355682373047
    6. 'l' → logprob: -9.665355682373047
    7. ' ' → logprob: -9.665355682373047
    8. '(A' → logprob: -9.915355682373047
    9. 'x' → logprob: -10.040355682373047
    10. ']' → logprob: -10.290355682373047

Token 1268: ' le' (ID: 505)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.2702467441558838
    2. ')' → logprob: -1.5202467441558838
    3. 'de' → logprob: -2.395246744155884
    4. ',' → logprob: -2.520246744155884
    5. ' le' → logprob: -2.770246744155884
    6. ' =' → logprob: -3.145246744155884
    7. ' ,' → logprob: -3.645246744155884
    8. ' du' → logprob: -3.770246744155884
    9. ' )' → logprob: -3.770246744155884
    10. '#' → logprob: -4.145246505737305

Token 1269: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.019016550853848457
    2. ' plus' → logprob: -4.019016742706299
    3. '_plus' → logprob: -7.519016742706299
    4. '#' → logprob: -9.14401626586914
    5. ']' → logprob: -9.89401626586914
    6. ')' → logprob: -10.14401626586914
    7. 'dern' → logprob: -10.64401626586914
    8. '+' → logprob: -10.76901626586914
    9. 'moins' → logprob: -10.89401626586914
    10. '-plus' → logprob: -11.39401626586914

Token 1270: ' proche' (ID: 61089)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.6830472350120544
    2. 'à' → logprob: -0.8080472350120544
    3. '```' → logprob: -3.433047294616699
    4. 'pro' → logprob: -4.933047294616699
    5. 'près' → logprob: -6.308047294616699
    6. 'large' → logprob: -6.683047294616699
    7. 'pet' → logprob: -6.808047294616699
    8. 'g' → logprob: -7.433047294616699
    9. 'é' → logprob: -7.558047294616699
    10. 'dern' → logprob: -7.558047294616699

Token 1271: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.4586336016654968
    2. 'du' → logprob: -1.2086336612701416
    3. ')' → logprob: -3.0836336612701416
    4. ' du' → logprob: -5.2086334228515625
    5. 'd' → logprob: -5.5836334228515625
    6. '   ' → logprob: -6.0836334228515625
    7. 'des' → logprob: -6.0836334228515625
    8. ',' → logprob: -6.2086334228515625
    9. '(' → logprob: -6.3336334228515625
    10. '```' → logprob: -6.8336334228515625

Token 1272: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004223947413265705
    2. 'z' → logprob: -6.004223823547363
    3. 'zero' → logprob: -6.379223823547363
    4. ' zéro' → logprob: -10.129223823547363
    5. '```' → logprob: -12.504223823547363
    6. 'l' → logprob: -14.129223823547363
    7. 'la' → logprob: -14.254223823547363
    8. 'zer' → logprob: -14.629223823547363
    9. '零' → logprob: -14.754223823547363
    10. '#' → logprob: -14.754223823547363

Token 1273: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002108267042785883
    2. 'z' → logprob: -6.752108097076416
    3. 'zero' → logprob: -7.002108097076416
    4. ' zéro' → logprob: -10.877108573913574
    5. 'l' → logprob: -12.752108573913574
    6. 'la' → logprob: -13.502108573913574
    7. ' ' → logprob: -13.752108573913574
    8. '```' → logprob: -13.877108573913574
    9. 'zer' → logprob: -15.252108573913574
    10. 'à' → logprob: -15.502108573913574

Token 1274: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007598468568176031
    2. ' )' → logprob: -5.007598400115967
    3. ')
' → logprob: -8.007598876953125
    4. '),' → logprob: -8.632598876953125
    5. 'de' → logprob: -9.632598876953125
    6. ',' → logprob: -9.632598876953125
    7. ' et' → logprob: -9.757598876953125
    8. 'et' → logprob: -10.257598876953125
    9. '   ' → logprob: -10.507598876953125
    10. ' de' → logprob: -10.632598876953125

Token 1275: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.049113210290670395
    2. '   ' → logprob: -3.9241132736206055
    3. ' =' → logprob: -4.4241132736206055
    4. 'et' → logprob: -5.0491132736206055
    5. ' and' → logprob: -6.0491132736206055
    6. '=' → logprob: -6.1741132736206055
    7. ' et' → logprob: -6.1741132736206055
    8. ')' → logprob: -6.6741132736206055
    9. ' ,' → logprob: -7.9241132736206055
    10. 'x' → logprob: -8.174113273620605

Token 1276: ' #' (ID: 1069)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06202403083443642
    2. ')' → logprob: -3.5620241165161133
    3. 'et' → logprob: -4.937024116516113
    4. ' et' → logprob: -5.187024116516113
    5. ' =' → logprob: -5.187024116516113
    6. ' and' → logprob: -5.562024116516113
    7. '),' → logprob: -5.687024116516113
    8. ' ,' → logprob: -5.687024116516113
    9. ']' → logprob: -6.812024116516113
    10. '=' → logprob: -7.812024116516113

Token 1277: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7316887378692627
    2. ' and' → logprob: -1.3566887378692627
    3. 'x' → logprob: -2.2316887378692627
    4. ' et' → logprob: -2.8566887378692627
    5. 'et' → logprob: -2.9816887378692627
    6. ' =' → logprob: -4.356688499450684
    7. 'tmp' → logprob: -4.606688499450684
    8. 'and' → logprob: -4.856688499450684
    9. ' x' → logprob: -5.106688499450684
    10. ' ,' → logprob: -6.106688499450684

Token 1278: ' la' (ID: 557)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.4747603237628937
    2. 'tmp' → logprob: -1.2247602939605713
    3. 'le' → logprob: -3.0997602939605713
    4. 'la' → logprob: -3.9747602939605713
    5. ' A' → logprob: -4.97476053237915
    6. 'l' → logprob: -5.09976053237915
    7. ' le' → logprob: -5.59976053237915
    8. ' la' → logprob: -6.47476053237915
    9. ' tmp' → logprob: -6.84976053237915
    10. 'the' → logprob: -8.349760055541992

Token 1279: ' plus' (ID: 2932)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.49485647678375244
    2. 'plus' → logprob: -1.6198564767837524
    3. ' plus' → logprob: -1.7448564767837524
    4. ' A' → logprob: -5.244856357574463
    5. 'tmp' → logprob: -5.244856357574463
    6. 'de' → logprob: -5.494856357574463
    7. 'min' → logprob: -7.369856357574463
    8. 'moins' → logprob: -7.869856357574463
    9. 'second' → logprob: -8.119856834411621
    10. '(tmp' → logprob: -8.244856834411621

Token 1280: ' petite' (ID: 28119)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.02466438338160515
    2. 'grand' → logprob: -3.7746644020080566
    3. ' petit' → logprob: -7.274664402008057
    4. 'small' → logprob: -7.399664402008057
    5. '```' → logprob: -9.899663925170898
    6. 'Petit' → logprob: -10.524663925170898
    7. 'gr' → logprob: -11.774663925170898
    8. 'neg' → logprob: -12.399663925170898
    9. '小' → logprob: -12.399663925170898
    10. 'g' → logprob: -12.399663925170898

Token 1281: ' valeur' (ID: 41664)
  Prédit: ' nég'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nég' → logprob: -0.5993071794509888
    2. 'val' → logprob: -2.349307060241699
    3. ' valeur' → logprob: -2.474307060241699
    4. '(' → logprob: -2.974307060241699
    5. ' negative' → logprob: -3.099307060241699
    6. ' (' → logprob: -3.224307060241699
    7. 'élé' → logprob: -3.599307060241699
    8. 'negative' → logprob: -3.599307060241699
    9. 'A' → logprob: -4.099307060241699
    10. 'neg' → logprob: -4.099307060241699

Token 1282: ' (' (ID: 350)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.8046680092811584
    2. ' nég' → logprob: -1.5546679496765137
    3. ' de' → logprob: -2.1796679496765137
    4. ' (' → logprob: -2.8046679496765137
    5. 'neg' → logprob: -3.0546679496765137
    6. '(A' → logprob: -3.5546679496765137
    7. '(' → logprob: -3.8046679496765137
    8. 'negative' → logprob: -3.9296679496765137
    9. ' negative' → logprob: -4.304667949676514
    10. 'A' → logprob: -4.804667949676514

Token 1283: 'la' (ID: 1675)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.3578869104385376
    2. ' A' → logprob: -1.4828869104385376
    3. 'tmp' → logprob: -3.857886791229248
    4. '(A' → logprob: -4.857886791229248
    5. '#' → logprob: -4.982886791229248
    6. ' ' → logprob: -5.107886791229248
    7. ' la' → logprob: -5.107886791229248
    8. '(tmp' → logprob: -5.357886791229248
    9. '   ' → logprob: -5.607886791229248
    10. ' tmp' → logprob: -5.607886791229248

Token 1284: ' plus' (ID: 2932)
  Prédit: ' plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -1.7531925439834595
    2. '[' → logprob: -2.00319242477417
    3. 'pop' → logprob: -2.00319242477417
    4. 'A' → logprob: -2.37819242477417
    5. 'plus' → logprob: -2.37819242477417
    6. ')
' → logprob: -2.50319242477417
    7. ')' → logprob: -2.75319242477417
    8. ' A' → logprob: -3.12819242477417
    9. '```' → logprob: -3.62819242477417
    10. '#' → logprob: -4.00319242477417

Token 1285: ' nég' (ID: 55805)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.4586509168148041
    2. 'gr' → logprob: -1.3336509466171265
    3. 'grand' → logprob: -3.333650827407837
    4. 'negative' → logprob: -3.833650827407837
    5. '```' → logprob: -4.208651065826416
    6. 'neg' → logprob: -4.833651065826416
    7. 'n' → logprob: -4.833651065826416
    8. '[' → logprob: -5.083651065826416
    9. 'large' → logprob: -6.208651065826416
    10. 'min' → logprob: -6.708651065826416

Token 1286: 'ative' (ID: 1799)
  Prédit: 'ative'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ative' → logprob: -0.02197081595659256
    2. 'g' → logprob: -4.021970748901367
    3. '
' → logprob: -6.771970748901367
    4. '#' → logprob: -8.146970748901367
    5. '<' → logprob: -8.396970748901367
    6. '```' → logprob: -8.396970748901367
    7. 'ale' → logprob: -8.521970748901367
    8. '[' → logprob: -8.646970748901367
    9. 'a' → logprob: -8.771970748901367
    10. '   ' → logprob: -8.896970748901367

Token 1287: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28200042247772217
    2. ')
' → logprob: -2.1570005416870117
    3. 'de' → logprob: -2.9070005416870117
    4. ' de' → logprob: -3.4070005416870117
    5. ').' → logprob: -4.782000541687012
    6. '())' → logprob: -4.907000541687012
    7. '())
' → logprob: -5.282000541687012
    8. '),' → logprob: -5.407000541687012
    9. ' )' → logprob: -5.907000541687012
    10. ').
' → logprob: -6.157000541687012

Token 1288: '   ' (ID: 271)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0346950963139534
    2. '   ' → logprob: -3.7846951484680176
    3. ' x' → logprob: -5.534695148468018
    4. 'A' → logprob: -5.909695148468018
    5. '```' → logprob: -6.534695148468018
    6. ',' → logprob: -6.909695148468018
    7. 'tmp' → logprob: -7.784695148468018
    8. '#' → logprob: -7.909695148468018
    9. ' =' → logprob: -8.03469467163086
    10. 'y' → logprob: -8.53469467163086

Token 1289: ' for' (ID: 395)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0002787359117064625
    2. '   ' → logprob: -8.37527847290039
    3. 'tmp' → logprob: -11.50027847290039
    4. ' x' → logprob: -11.50027847290039
    5. 'y' → logprob: -12.00027847290039
    6. '#' → logprob: -12.12527847290039
    7. 'a' → logprob: -12.50027847290039
    8. 'max' → logprob: -12.62527847290039
    9. 'A' → logprob: -12.75027847290039
    10. '    
' → logprob: -12.87527847290039

Token 1290: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004205070901662111
    2. ' i' → logprob: -5.504205226898193
    3. 'x' → logprob: -9.504204750061035
    4. 'j' → logprob: -11.004204750061035
    5. 'a' → logprob: -11.629204750061035
    6. '	i' → logprob: -11.629204750061035
    7. '_i' → logprob: -12.629204750061035
    8. '   ' → logprob: -12.879204750061035
    9. ' ' → logprob: -13.254204750061035
    10. 'y' → logprob: -13.379204750061035

Token 1291: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10038253664970398
    2. 'in' → logprob: -2.3503825664520264
    3. ',' → logprob: -9.725382804870605
    4. 'range' → logprob: -10.225382804870605
    5. ' ' → logprob: -10.475382804870605
    6. '   ' → logprob: -11.725382804870605
    7. '1' → logprob: -11.850382804870605
    8. '=' → logprob: -11.850382804870605
    9. ' =' → logprob: -12.100382804870605
    10. '(' → logprob: -12.725382804870605

Token 1292: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004095735494047403
    2. ' range' → logprob: -5.504095554351807
    3. '1' → logprob: -12.129096031188965
    4. '(range' → logprob: -12.504096031188965
    5. '   ' → logprob: -12.879096031188965
    6. 're' → logprob: -13.754096031188965
    7. '	range' → logprob: -13.879096031188965
    8. ' ' → logprob: -13.879096031188965
    9. '
' → logprob: -14.004096031188965
    10. 'A' → logprob: -15.004096031188965

Token 1293: '(N' (ID: 10564)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08864975720643997
    2. 'N' → logprob: -2.7136497497558594
    3. '(' → logprob: -4.088649749755859
    4. '(N' → logprob: -6.463649749755859
    5. '2' → logprob: -9.58864974975586
    6. '0' → logprob: -10.21364974975586
    7. 'len' → logprob: -10.33864974975586
    8. '
' → logprob: -10.58864974975586
    9. '   ' → logprob: -10.96364974975586
    10. 'range' → logprob: -10.96364974975586

Token 1294: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.004723583813756704
    2. '):
' → logprob: -5.62972354888916
    3. ' -' → logprob: -7.25472354888916
    4. '):' → logprob: -8.75472354888916
    5. '1' → logprob: -9.75472354888916
    6. '
' → logprob: -10.00472354888916
    7. '   ' → logprob: -10.00472354888916
    8. '-
' → logprob: -10.75472354888916
    9. '()-' → logprob: -11.00472354888916
    10. '#' → logprob: -11.25472354888916

Token 1295: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002951793372631073
    2. '2' → logprob: -5.877951622009277
    3. '-' → logprob: -9.127951622009277
    4. ' ' → logprob: -10.627951622009277
    5. '
' → logprob: -12.002951622009277
    6. '0' → logprob: -13.127951622009277
    7. '3' → logprob: -13.252951622009277
    8. '   ' → logprob: -13.815451622009277
    9. ' -' → logprob: -14.252951622009277
    10. '```' → logprob: -14.377951622009277

Token 1296: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.019951822236180305
    2. '   ' → logprob: -4.644951820373535
    3. '-' → logprob: -5.519951820373535
    4. '):' → logprob: -5.894951820373535
    5. ' ):
' → logprob: -6.644951820373535
    6. ':
' → logprob: -7.394951820373535
    7. '+' → logprob: -8.019951820373535
    8. ' -' → logprob: -8.269951820373535
    9. ':' → logprob: -8.519951820373535
    10. ',' → logprob: -8.894951820373535

Token 1297: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006131939589977264
    2. ' x' → logprob: -7.875613212585449
    3. 'x' → logprob: -8.62561321258545
    4. '	x' → logprob: -10.75061321258545
    5. 'a' → logprob: -11.75061321258545
    6. '       ' → logprob: -11.87561321258545
    7. '```' → logprob: -11.87561321258545
    8. '   ' → logprob: -13.12561321258545
    9. '#' → logprob: -13.25061321258545
    10. ' a' → logprob: -13.50061321258545

Token 1298: ' if' (ID: 538)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3974502384662628
    2. '   ' → logprob: -1.1474502086639404
    3. ' x' → logprob: -4.6474504470825195
    4. 'if' (adapté à ' if') → logprob: -7.2724504470825195
    5. '	x' → logprob: -9.27245044708252
    6. ' ' → logprob: -9.64745044708252
    7. ' if' → logprob: -10.27245044708252
    8. '       ' → logprob: -10.39745044708252
    9. 'a' → logprob: -11.89745044708252
    10. '  ' → logprob: -12.02245044708252

Token 1299: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.048700347542762756
    2. ' i' → logprob: -3.0487003326416016
    3. '	i' → logprob: -10.423700332641602
    4. '   ' → logprob: -10.548700332641602
    5. ' ' → logprob: -11.298700332641602
    6. 'N' → logprob: -11.423700332641602
    7. 'True' → logprob: -11.798700332641602
    8. '0' → logprob: -12.048700332641602
    9. '  ' → logprob: -12.548700332641602
    10. 'A' → logprob: -12.923700332641602

Token 1300: ' ==' (ID: 951)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.33015501499176025
    2. ' ==' → logprob: -1.3301550149917603
    3. '<' → logprob: -4.955154895782471
    4. '==' → logprob: -4.955154895782471
    5. ' ' → logprob: -6.580154895782471
    6. ' <
' → logprob: -8.205155372619629
    7. '0' → logprob: -8.330155372619629
    8. '   ' → logprob: -8.330155372619629
    9. ' <=' → logprob: -8.955155372619629
    10. ' !=' → logprob: -9.455155372619629

Token 1301: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010369796073064208
    2. ' ' → logprob: -7.001037120819092
    3. 'N' → logprob: -9.001036643981934
    4. ' N' → logprob: -13.376036643981934
    5. '   ' → logprob: -15.126036643981934
    6. '1' → logprob: -15.376036643981934
    7. '#' → logprob: -17.06353759765625
    8. '  ' → logprob: -17.43853759765625
    9. '(N' → logprob: -17.50103759765625
    10. '	N' → logprob: -17.93853759765625

Token 1302: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00876891054213047
    2. 'N' → logprob: -4.7587690353393555
    3. ' ' → logprob: -8.883769035339355
    4. ' N' → logprob: -11.508769035339355
    5. '1' → logprob: -13.508769035339355
    6. '   ' → logprob: -13.758769035339355
    7. '(N' → logprob: -13.883769035339355
    8. '	N' → logprob: -15.008769035339355
    9. 'i' → logprob: -15.383769035339355
    10. 'n' → logprob: -15.821269035339355

Token 1303: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.051881659775972366
    2. '   ' → logprob: -3.5518815517425537
    3. ':' → logprob: -4.051881790161133
    4. '       ' → logprob: -6.051881790161133
    5. ' :
' → logprob: -6.551881790161133
    6. ' and' → logprob: -7.551881790161133
    7. '):
' → logprob: -9.551881790161133
    8. ' :' → logprob: -10.676881790161133
    9. ',' → logprob: -10.676881790161133
    10. ' ' → logprob: -11.176881790161133

Token 1304: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1911855787038803
    2. 'x' → logprob: -2.316185474395752
    3. '   ' → logprob: -2.941185474395752
    4. ' x' → logprob: -3.816185474395752
    5. ',' → logprob: -7.816185474395752
    6. ' ' → logprob: -9.94118595123291
    7. '           ' → logprob: -11.06618595123291
    8. '    ' → logprob: -11.06618595123291
    9. '     ' → logprob: -11.19118595123291
    10. '	x' → logprob: -11.31618595123291

Token 1305: ' #' (ID: 1069)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0018370107281953096
    2. '   ' → logprob: -6.626836776733398
    3. ' x' → logprob: -7.626836776733398
    4. 'tmp' → logprob: -11.751836776733398
    5. '       ' → logprob: -11.876836776733398
    6. 'y' → logprob: -12.376836776733398
    7. '           ' → logprob: -13.126836776733398
    8. '	x' → logprob: -14.251836776733398
    9. 'a' → logprob: -14.626836776733398
    10. ' ' → logprob: -14.876836776733398

Token 1306: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.8828707804204896e-05
    2. ' x' → logprob: -10.625048637390137
    3. '   ' → logprob: -11.500048637390137
    4. 'tmp' → logprob: -11.500048637390137
    5. 'y' → logprob: -12.750048637390137
    6. '       ' → logprob: -15.125048637390137
    7. '           ' → logprob: -15.125048637390137
    8. '```' → logprob: -15.625048637390137
    9. 'a' → logprob: -15.875048637390137
    10. '#' → logprob: -15.875048637390137

Token 1307: ' est' (ID: 893)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006338149309158325
    2. ' =' → logprob: -5.506338119506836
    3. '=' → logprob: -6.131338119506836
    4. ' ,' → logprob: -9.506338119506836
    5. 'x' → logprob: -12.756338119506836
    6. ',y' → logprob: -12.881338119506836
    7. ',x' → logprob: -14.256338119506836
    8. 'y' → logprob: -14.506338119506836
    9. '<|end|>' → logprob: -14.631338119506836
    10. 's' → logprob: -15.131338119506836

Token 1308: ' le' (ID: 505)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.16227707266807556
    2. 'tmp' → logprob: -1.912277102470398
    3. ' A' → logprob: -6.6622772216796875
    4. ' tmp' → logprob: -7.4122772216796875
    5. ',' → logprob: -9.412277221679688
    6. ',tmp' → logprob: -11.162277221679688
    7. ',A' → logprob: -11.287277221679688
    8. '	A' → logprob: -12.037277221679688
    9. '(tmp' → logprob: -12.037277221679688
    10. '   ' → logprob: -12.349777221679688

Token 1309: ' plus' (ID: 2932)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.014126014895737171
    2. 'tmp' → logprob: -4.514125823974609
    3. ' A' → logprob: -5.889125823974609
    4. 'max' → logprob: -8.51412582397461
    5. ' tmp' → logprob: -9.88912582397461
    6. ' -' → logprob: -11.51412582397461
    7. '-A' → logprob: -11.76412582397461
    8. '-' → logprob: -11.88912582397461
    9. ' ' → logprob: -12.63912582397461
    10. ' max' → logprob: -13.26412582397461

Token 1310: ' grand' (ID: 6363)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.012917720712721348
    2. ' grand' → logprob: -4.387917518615723
    3. 'pet' → logprob: -9.387917518615723
    4. 'large' → logprob: -9.512917518615723
    5. 'g' → logprob: -9.637917518615723
    6. 'x' → logprob: -10.012917518615723
    7. 'A' → logprob: -10.137917518615723
    8. 'gr' → logprob: -10.637917518615723
    9. 'Grand' → logprob: -10.887917518615723
    10. '```' → logprob: -10.887917518615723

Token 1311: ' des' (ID: 731)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.49756622314453125
    2. ' =' → logprob: -1.7475662231445312
    3. '=' → logprob: -1.8725662231445312
    4. ' nég' → logprob: -4.247566223144531
    5. 'A' → logprob: -4.622566223144531
    6. '=A' → logprob: -4.622566223144531
    7. 'neg' → logprob: -4.747566223144531
    8. ' negative' → logprob: -5.372566223144531
    9. ' negatif' → logprob: -5.622566223144531
    10. 'negative' → logprob: -5.622566223144531

Token 1312: ' nég' (ID: 55805)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00010473522706888616
    2. ' A' → logprob: -9.750104904174805
    3. ')' → logprob: -11.375104904174805
    4. '(A' → logprob: -12.125104904174805
    5. '#' → logprob: -12.375104904174805
    6. 'tmp' → logprob: -13.125104904174805
    7. '-' → logprob: -13.125104904174805
    8. '	A' → logprob: -13.125104904174805
    9. '```' → logprob: -13.125104904174805
    10. 'XY' → logprob: -13.125104904174805

Token 1313: 'atifs' (ID: 66205)
  Prédit: 'atifs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atifs' → logprob: -0.19503839313983917
    2. 'A' → logprob: -1.8200384378433228
    3. ']' → logprob: -5.570038318634033
    4. ')' → logprob: -6.195038318634033
    5. 'atif' → logprob: -6.195038318634033
    6. '   ' → logprob: -6.195038318634033
    7. 'eg' → logprob: -6.695038318634033
    8. 'at' → logprob: -7.195038318634033
    9. '(A' → logprob: -7.445038318634033
    10. '[' → logprob: -7.820038318634033

Token 1314: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0986563116312027
    2. ' =' → logprob: -2.598656415939331
    3. ' ,' → logprob: -4.098656177520752
    4. '=' → logprob: -6.348656177520752
    5. 'x' → logprob: -7.223656177520752
    6. ' (' → logprob: -8.22365665435791
    7. ' x' → logprob: -9.47365665435791
    8. 'A' → logprob: -9.84865665435791
    9. '           ' → logprob: -10.84865665435791
    10. '   ' → logprob: -11.22365665435791

Token 1315: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.07110867649316788
    2. ' A' → logprob: -3.19610857963562
    3. 'x' → logprob: -3.94610857963562
    4. 'tmp' → logprob: -5.071108818054199
    5. ' x' → logprob: -7.321108818054199
    6. ',' → logprob: -7.946108818054199
    7. ' tmp' → logprob: -8.1961088180542
    8. '   ' → logprob: -8.3211088180542
    9. '           ' → logprob: -8.6961088180542
    10. '=A' → logprob: -9.0711088180542

Token 1316: '.pop' (ID: 15746)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.1363016664981842
    2. '.pop' → logprob: -2.7613017559051514
    3. '[N' → logprob: -3.2613017559051514
    4. '),' → logprob: -5.136301517486572
    5. '[' → logprob: -5.386301517486572
    6. 'pop' → logprob: -6.011301517486572
    7. ')' → logprob: -6.136301517486572
    8. ',' → logprob: -6.386301517486572
    9. ' =' → logprob: -6.386301517486572
    10. '   ' → logprob: -6.636301517486572

Token 1317: '()),' (ID: 24379)
  Prédit: '()),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()),' → logprob: -0.09081518650054932
    2. '()' → logprob: -2.8408150672912598
    3. '())' → logprob: -3.7158150672912598
    4. '(),' → logprob: -6.09081506729126
    5. '),' → logprob: -7.21581506729126
    6. ')' → logprob: -7.46581506729126
    7. '())
' → logprob: -8.715815544128418
    8. '()
' → logprob: -8.715815544128418
    9. '()),
' → logprob: -8.840815544128418
    10. '(' → logprob: -11.465815544128418

Token 1318: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3764205574989319
    2. 'x' → logprob: -1.751420497894287
    3. '           ' → logprob: -2.126420497894287
    4. ' y' → logprob: -4.001420497894287
    5. ' x' → logprob: -6.751420497894287
    6. '   ' → logprob: -7.376420497894287
    7. '       ' → logprob: -8.001420974731445
    8. ',' → logprob: -8.626420974731445
    9. ' ' → logprob: -9.751420974731445
    10. '#' → logprob: -9.876420974731445

Token 1319: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38758158683776855
    2. ' =' → logprob: -1.1375815868377686
    3. ',' → logprob: -7.262581825256348
    4. ' is' → logprob: -12.637581825256348
    5. ' est' → logprob: -13.262581825256348
    6. ' ' → logprob: -13.512581825256348
    7. 'est' → logprob: -14.637581825256348
    8. '<|end|>' → logprob: -14.887581825256348
    9. '=
' → logprob: -15.012581825256348
    10. '=A' → logprob: -15.262581825256348

Token 1320: ' tmp' (ID: 8919)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.003938529174774885
    2. 'tmp' → logprob: -5.753938674926758
    3. ' A' → logprob: -7.253938674926758
    4. '(A' → logprob: -10.503938674926758
    5. '(tmp' → logprob: -11.378938674926758
    6. ' tmp' → logprob: -11.753938674926758
    7. '   ' → logprob: -13.003938674926758
    8. ' ' → logprob: -13.378938674926758
    9. '(' → logprob: -14.253938674926758
    10. '  ' → logprob: -14.378938674926758

Token 1321: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.014025092124939
    2. ',' → logprob: -1.139025092124939
    3. ' =' → logprob: -1.389025092124939
    4. '=' → logprob: -2.7640252113342285
    5. '       ' → logprob: -6.2640252113342285
    6. '   ' → logprob: -7.5140252113342285
    7. ',
' → logprob: -7.5140252113342285
    8. '               ' → logprob: -8.01402473449707
    9. ')' → logprob: -8.38902473449707
    10. 'x' → logprob: -8.38902473449707

Token 1322: 'le' (ID: 282)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.1070113331079483
    2. 'tmp' → logprob: -2.357011318206787
    3. ' A' → logprob: -5.357011318206787
    4. ')' → logprob: -7.107011318206787
    5. ' tmp' → logprob: -7.482011318206787
    6. 'x' → logprob: -8.107011795043945
    7. '   ' → logprob: -9.357011795043945
    8. 'y' → logprob: -9.857011795043945
    9. '=A' → logprob: -10.107011795043945
    10. '       ' → logprob: -10.857011795043945

Token 1323: ' plus' (ID: 2932)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5073614120483398
    2. 'plus' → logprob: -1.1323614120483398
    3. ')' → logprob: -4.13236141204834
    4. 'prem' → logprob: -4.25736141204834
    5. '0' → logprob: -4.63236141204834
    6. '#' → logprob: -4.63236141204834
    7. 'tmp' → logprob: -4.88236141204834
    8. 'min' → logprob: -5.38236141204834
    9. ' plus' → logprob: -5.63236141204834
    10. '[' → logprob: -5.75736141204834

Token 1324: ' petit' (ID: 20577)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.10476431250572205
    2. '0' → logprob: -3.354764223098755
    3. 'small' → logprob: -3.479764223098755
    4. ' petit' → logprob: -3.729764223098755
    5. '[' → logprob: -5.229764461517334
    6. '```' → logprob: -6.229764461517334
    7. 'grand' → logprob: -7.979764461517334
    8. 'Petit' → logprob: -8.104763984680176
    9. '小' → logprob: -8.229763984680176
    10. 'prem' → logprob: -8.354763984680176

Token 1325: '/l' (ID: 16347)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.042013924568891525
    2. ')
' → logprob: -4.167014122009277
    3. '),' → logprob: -4.542014122009277
    4. '):
' → logprob: -5.917014122009277
    5. ' )' → logprob: -6.042014122009277
    6. ' nég' → logprob: -6.667014122009277
    7. ' de' → logprob: -6.917014122009277
    8. '):' → logprob: -6.917014122009277
    9. '),
' → logprob: -7.292014122009277
    10. ' des' → logprob: -7.292014122009277

Token 1326: ''' (ID: 6)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.767874538898468
    2. 'ist' → logprob: -1.2678744792938232
    3. 'a' → logprob: -2.2678744792938232
    4. 'e' → logprob: -3.1428744792938232
    5. 'arge' → logprob: -3.2678744792938232
    6. 'iste' → logprob: -4.517874717712402
    7. 'isted' → logprob: -4.767874717712402
    8. ')' → logprob: -4.892874717712402
    9. 'arger' → logprob: -5.517874717712402
    10. 'à' → logprob: -5.517874717712402

Token 1327: 'élé' (ID: 15228)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.06316159665584564
    2. 'élé' → logprob: -3.438161611557007
    3. '```' → logprob: -4.938161373138428
    4. 'a' → logprob: -5.188161373138428
    5. 'min' → logprob: -5.563161373138428
    6. 'pet' → logprob: -6.063161373138428
    7. '0' → logprob: -6.313161373138428
    8. 'à' → logprob: -6.563161373138428
    9. 'plus' → logprob: -6.688161373138428
    10. 'pop' → logprob: -6.813161373138428

Token 1328: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.4550359547138214
    2. 'ement' → logprob: -1.205035924911499
    3. 'em' → logprob: -3.080035924911499
    4. 'ément' → logprob: -4.205036163330078
    5. ']' → logprob: -6.330036163330078
    6. 'e' → logprob: -7.205036163330078
    7. ')' → logprob: -7.330036163330078
    8. 't' → logprob: -7.705036163330078
    9. 'm' → logprob: -7.955036163330078
    10. 'ent' → logprob: -8.205036163330078

Token 1329: ' plus' (ID: 2932)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6222200393676758
    2. ')' → logprob: -1.2472200393676758
    3. ' le' → logprob: -2.247220039367676
    4. 'de' → logprob: -3.122220039367676
    5. '[' → logprob: -4.872220039367676
    6. ' )' → logprob: -5.122220039367676
    7. '),' → logprob: -6.247220039367676
    8. 'le' → logprob: -6.247220039367676
    9. ')
' → logprob: -6.622220039367676
    10. ' nég' → logprob: -6.997220039367676

Token 1330: ' nég' (ID: 55805)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grand' → logprob: -1.2035763263702393
    2. 'pet' → logprob: -1.3285763263702393
    3. 'neg' → logprob: -1.7035763263702393
    4. 'à' → logprob: -1.9535763263702393
    5. ' nég' → logprob: -3.8285763263702393
    6. 'negative' → logprob: -3.9535763263702393
    7. '```' → logprob: -4.32857608795166
    8. 'A' → logprob: -4.57857608795166
    9. 'ancien' → logprob: -5.32857608795166
    10. 'n' → logprob: -5.45357608795166

Token 1331: 'atif' (ID: 23984)
  Prédit: 'atif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atif' → logprob: -0.0026210742071270943
    2. 'g' → logprob: -6.627621173858643
    3. 'ég' → logprob: -7.752621173858643
    4. 'gat' → logprob: -9.002620697021484
    5. '```' → logprob: -9.502620697021484
    6. '
' → logprob: -9.877620697021484
    7. 'eg' → logprob: -9.877620697021484
    8. '#' → logprob: -10.127620697021484
    9. 'at' → logprob: -10.127620697021484
    10. '   ' → logprob: -10.252620697021484

Token 1332: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06033680960536003
    2. ')
' → logprob: -2.9353368282318115
    3. '))' → logprob: -5.560336589813232
    4. '),' → logprob: -7.935336589813232
    5. ' )' → logprob: -8.18533706665039
    6. '))
' → logprob: -8.31033706665039
    7. ')))' → logprob: -8.93533706665039
    8. ' de' → logprob: -9.81033706665039
    9. '),
' → logprob: -10.06033706665039
    10. '):
' → logprob: -10.06033706665039

Token 1333: '           ' (ID: 352)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.646854043006897
    2. '           ' → logprob: -0.771854043006897
    3. '       ' → logprob: -5.021853923797607
    4. ' =' → logprob: -6.271853923797607
    5. ',
' → logprob: -6.896853923797607
    6. ' ,' → logprob: -7.271853923797607
    7. '   ' → logprob: -7.271853923797607
    8. '
' → logprob: -7.396853923797607
    9. ')' → logprob: -8.021854400634766
    10. ' x' → logprob: -8.021854400634766

Token 1334: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.012360483407974243
    2. '       ' → logprob: -4.887360572814941
    3. '           ' → logprob: -5.887360572814941
    4. ' x' → logprob: -6.262360572814941
    5. '   ' → logprob: -10.387360572814941
    6. '               ' → logprob: -10.762360572814941
    7. '```' → logprob: -12.637360572814941
    8. '
' → logprob: -13.012360572814941
    9. '	x' → logprob: -13.387360572814941
    10. ' ' → logprob: -14.137360572814941

Token 1335: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0037332146894186735
    2. '=' → logprob: -5.878733158111572
    3. ' =' → logprob: -7.003733158111572
    4. ' ,' → logprob: -11.00373363494873
    5. ',y' → logprob: -13.12873363494873
    6. ',
' → logprob: -15.62873363494873
    7. ',A' → logprob: -15.87873363494873
    8. ')' → logprob: -16.003732681274414
    9. '<|end|>' → logprob: -16.628732681274414
    10. '=A' → logprob: -16.753732681274414

Token 1336: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.25207066535949707
    2. ' y' → logprob: -1.502070665359497
    3. 'tmp' → logprob: -9.252070426940918
    4. ' tmp' → logprob: -10.502070426940918
    5. 'x' → logprob: -11.752070426940918
    6. '	y' → logprob: -12.752070426940918
    7. ' ' → logprob: -13.252070426940918
    8. '    ' → logprob: -13.502070426940918
    9. ' x' → logprob: -14.377070426940918
    10. 'A' → logprob: -14.502070426940918

Token 1337: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10047602653503418
    2. ' =' → logprob: -2.350476026535034
    3. ',' → logprob: -8.225476264953613
    4. '=
' → logprob: -14.225476264953613
    5. '=A' → logprob: -14.850476264953613
    6. ' ,' → logprob: -15.350476264953613
    7. ')' → logprob: -15.725476264953613
    8. ' =
' → logprob: -16.600475311279297
    9. '=

' → logprob: -17.100475311279297
    10. '   ' → logprob: -17.225475311279297

Token 1338: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00012403888104017824
    2. ' A' → logprob: -9.125123977661133
    3. 'tmp' → logprob: -11.125123977661133
    4. '   ' → logprob: -15.875123977661133
    5. '	A' → logprob: -16.625123977661133
    6. '(A' → logprob: -16.625123977661133
    7. ' ' → logprob: -17.375123977661133
    8. 'temp' → logprob: -17.875123977661133
    9. ' tmp' → logprob: -17.875123977661133
    10. '  ' → logprob: -18.500123977661133

Token 1339: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -4.961759259458631e-06
    2. 'pop' → logprob: -12.625004768371582
    3. '.' → logprob: -13.375004768371582
    4. '[-' → logprob: -18.6250057220459
    5. '.append' → logprob: -19.7500057220459
    6. ' .' → logprob: -19.7500057220459
    7. '.p' → logprob: -19.8750057220459
    8. '
' → logprob: -20.7500057220459
    9. ' pop' → logprob: -20.8750057220459
    10. '_pop' → logprob: -21.2500057220459

Token 1340: '(),' (ID: 2547)
  Prédit: '(),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.001396783976815641
    2. ',' → logprob: -6.626396656036377
    3. '()' → logprob: -9.626397132873535
    4. '(' → logprob: -12.626397132873535
    5. '(),
' → logprob: -14.501397132873535
    6. ' (),' → logprob: -14.751397132873535
    7. '()
' → logprob: -15.126397132873535
    8. ' ,' → logprob: -15.626397132873535
    9. '()),' → logprob: -18.00139617919922
    10. '0' → logprob: -18.12639617919922

Token 1341: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -9.627176768844947e-05
    2. ' tmp' → logprob: -9.250096321105957
    3. '	tmp' → logprob: -16.50009536743164
    4. 'temp' → logprob: -17.12509536743164
    5. '$tmp' → logprob: -17.50009536743164
    6. '/tmp' → logprob: -17.62509536743164
    7. '(tmp' → logprob: -18.12509536743164
    8. ',tmp' → logprob: -19.50009536743164
    9. '[tmp' → logprob: -19.75009536743164
    10. '_tmp' → logprob: -19.87509536743164

Token 1342: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01912052370607853
    2. '           ' → logprob: -4.519120693206787
    3. '   ' → logprob: -4.894120693206787
    4. ')' → logprob: -8.519120216369629
    5. '
' → logprob: -8.769120216369629
    6. '<|end|>' → logprob: -10.144120216369629
    7. '      ' → logprob: -10.394120216369629
    8. '     ' → logprob: -10.644120216369629
    9. '  ' → logprob: -11.019120216369629
    10. ' ' → logprob: -11.394120216369629

Token 1343: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17933917045593262
    2. '   ' → logprob: -1.9293391704559326
    3. '           ' → logprob: -4.054339408874512
    4. '
' → logprob: -7.179339408874512
    5. 'XY' → logprob: -8.429339408874512
    6. '	   ' → logprob: -9.179339408874512
    7. ' ' → logprob: -9.554339408874512
    8. '	' → logprob: -9.679339408874512
    9. '```' → logprob: -9.804339408874512
    10. '        
' → logprob: -9.929339408874512

Token 1344: ' XY' (ID: 71987)
  Prédit: 'XY'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XY' (adapté à ' XY') → logprob: -0.10568977147340775
    2. '           ' → logprob: -2.355689764022827
    3. '       ' → logprob: -5.605690002441406
    4. '   ' → logprob: -6.605690002441406
    5. ' XY' → logprob: -7.855690002441406
    6. 'xy' → logprob: -10.605690002441406
    7. ' ' → logprob: -11.855690002441406
    8. '               ' → logprob: -12.980690002441406
    9. 'XYZ' → logprob: -12.980690002441406
    10. '     ' → logprob: -13.355690002441406

Token 1345: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007350585656240582
    2. '.' → logprob: -7.250735282897949
    3. 'append' → logprob: -10.62573528289795
    4. '.app' → logprob: -14.37573528289795
    5. ' .' → logprob: -16.500734329223633
    6. 'Append' → logprob: -17.375734329223633
    7. ' append' → logprob: -17.625734329223633
    8. 'app' → logprob: -18.000734329223633
    9. '.Append' → logprob: -18.125734329223633
    10. '_append' → logprob: -19.000734329223633

Token 1346: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0004936986370012164
    2. '(' → logprob: -7.75049352645874
    3. '(x' → logprob: -9.875494003295898
    4. '(
' → logprob: -11.375494003295898
    5. ' ((' → logprob: -15.875494003295898
    6. ' (' → logprob: -16.7504940032959
    7. ',' → logprob: -18.1254940032959
    8. '(
' → logprob: -18.5004940032959
    9. '   ' → logprob: -19.0004940032959
    10. '([' → logprob: -19.1254940032959

Token 1347: 'x' (ID: 87)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.31326553225517273
    2. 'x' → logprob: -1.3132655620574951
    3. ' x' → logprob: -12.938265800476074
    4. ' (' → logprob: -13.813265800476074
    5. '(' → logprob: -15.688265800476074
    6. '{x' → logprob: -17.313264846801758
    7. ')x' → logprob: -17.438264846801758
    8. ',x' → logprob: -17.438264846801758
    9. '	x' → logprob: -17.438264846801758
    10. '(
' → logprob: -17.563264846801758

Token 1348: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.9153885558771435e-06
    2. ' ,' → logprob: -12.625005722045898
    3. ',y' → logprob: -13.125005722045898
    4. ',
' → logprob: -14.625005722045898
    5. '),' → logprob: -17.0000057220459
    6. '‌,' → logprob: -17.8750057220459
    7. ')' → logprob: -18.1250057220459
    8. ',),' → logprob: -18.3750057220459
    9. '<|end|>' → logprob: -18.6250057220459
    10. ',)' → logprob: -18.7500057220459

Token 1349: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.04858759790658951
    2. ' y' → logprob: -3.0485875606536865
    3. '	y' → logprob: -16.298587799072266
    4. 'x' → logprob: -16.673587799072266
    5. ' ' → logprob: -18.048587799072266
    6. ' ' → logprob: -18.548587799072266
    7. ')' → logprob: -18.798587799072266
    8. ',y' → logprob: -18.798587799072266
    9. ')y' → logprob: -19.048587799072266
    10. 'Y' → logprob: -19.548587799072266

Token 1350: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5763527154922485
    2. ')
' → logprob: -0.8263527154922485
    3. '           ' → logprob: -8.326353073120117
    4. '       ' → logprob: -9.451353073120117
    5. '   ' → logprob: -9.826353073120117
    6. ')
' → logprob: -10.326353073120117
    7. ')

' → logprob: -13.201353073120117
    8. ')\
' → logprob: -14.451353073120117
    9. ')#' → logprob: -14.576353073120117
    10. ' )
' → logprob: -14.576353073120117

Token 1351: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004134203307330608
    2. '
' → logprob: -6.754134178161621
    3. 'tmp' → logprob: -6.754134178161621
    4. '       ' → logprob: -7.004134178161621
    5. '   ' → logprob: -7.379134178161621
    6. '```' → logprob: -9.629134178161621
    7. '            
' → logprob: -10.254134178161621
    8. '		' → logprob: -10.254134178161621
    9. '<|end|>' → logprob: -11.004134178161621
    10. '	       ' → logprob: -11.254134178161621

Token 1352: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' (adapté à ' tmp') → logprob: -0.0025518848560750484
    2. '           ' → logprob: -6.252552032470703
    3. '   ' → logprob: -7.502552032470703
    4. ' tmp' → logprob: -10.252552032470703
    5. '       ' → logprob: -10.752552032470703
    6. '	tmp' → logprob: -11.377552032470703
    7. 'temp' → logprob: -14.252552032470703
    8. '/tmp' → logprob: -14.252552032470703
    9. '$tmp' → logprob: -14.627552032470703
    10. '
' → logprob: -15.252552032470703

Token 1353: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04859236627817154
    2. ' =' → logprob: -3.0485923290252686
    3. '-=' → logprob: -12.548592567443848
    4. ' -=' → logprob: -13.548592567443848
    5. '＝' → logprob: -16.54859161376953
    6. '=
' → logprob: -17.17359161376953
    7. '=

' → logprob: -17.17359161376953
    8. '.=' → logprob: -17.54859161376953
    9. '+=' → logprob: -17.92359161376953
    10. '	' → logprob: -18.17359161376953

Token 1354: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.002478273818269372
    2. ' x' → logprob: -6.002478122711182
    3. 'tmp' → logprob: -13.00247859954834
    4. ' ' → logprob: -16.627477645874023
    5. '   ' → logprob: -16.752477645874023
    6. '	x' → logprob: -16.752477645874023
    7. 'y' → logprob: -17.127477645874023
    8. '0' → logprob: -17.252477645874023
    9. ' tmp' → logprob: -17.314977645874023
    10. '(x' → logprob: -17.564977645874023

Token 1355: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.11282773315906525
    2. '-' → logprob: -2.237827777862549
    3. '-t' → logprob: -13.36282730102539
    4. '<|end|>' → logprob: -14.36282730102539
    5. ' ' → logprob: -14.48782730102539
    6. '-s' → logprob: -14.61282730102539
    7. '-y' → logprob: -14.73782730102539
    8. ' -
' → logprob: -15.11282730102539
    9. '-p' → logprob: -15.23782730102539
    10. ' ' → logprob: -15.61282730102539

Token 1356: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0031777136027812958
    2. ' y' → logprob: -5.753177642822266
    3. '	y' → logprob: -19.253177642822266
    4. 'tmp' → logprob: -19.753177642822266
    5. 'Y' → logprob: -20.378177642822266
    6. ' ' → logprob: -21.628177642822266
    7. '_y' → logprob: -22.128177642822266
    8. 'x' → logprob: -22.128177642822266
    9. 't' → logprob: -22.753177642822266
    10. '(y' → logprob: -23.253177642822266

Token 1357: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5987663269042969
    2. '       ' → logprob: -0.9737663269042969
    3. '<|end|>' → logprob: -2.723766326904297
    4. '
' → logprob: -5.598766326904297
    5. '  ' → logprob: -7.598766326904297
    6. '```' → logprob: -7.723766326904297
    7. 'continue' → logprob: -7.973766326904297
    8. ' ' → logprob: -8.098766326904297
    9. '<|end|>' → logprob: -8.223766326904297
    10. '    
' → logprob: -8.598766326904297

Token 1358: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1359: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01314917579293251
    2. 'else' (adapté à ' else') → logprob: -4.388149261474609
    3. '   ' → logprob: -7.388149261474609
    4. ' else' → logprob: -11.63814926147461
    5. 'elif' → logprob: -11.76314926147461
    6. '           ' → logprob: -13.63814926147461
    7. '```' → logprob: -13.63814926147461
    8. ' ' → logprob: -14.01314926147461
    9. '	' → logprob: -14.88814926147461
    10. 'for' → logprob: -15.01314926147461

Token 1360: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6864786148071289
    2. '       ' → logprob: -0.8114786148071289
    3. ':
' → logprob: -3.936478614807129
    4. ':' → logprob: -4.186478614807129
    5. '           ' → logprob: -4.436478614807129
    6. 'x' → logprob: -5.811478614807129
    7. '```' → logprob: -6.686478614807129
    8. ' x' → logprob: -7.436478614807129
    9. '#' → logprob: -8.561478614807129
    10. '
' → logprob: -8.936478614807129

Token 1361: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4791215658187866
    2. '   ' → logprob: -0.9791215658187866
    3. 'x' → logprob: -5.604121685028076
    4. ' x' → logprob: -7.229121685028076
    5. '           ' → logprob: -8.229121208190918
    6. '```' → logprob: -8.729121208190918
    7. '#' → logprob: -9.979121208190918
    8. ' for' → logprob: -10.354121208190918
    9. ' ' → logprob: -10.854121208190918
    10. 'a' → logprob: -11.104121208190918

Token 1362: ' #' (ID: 1069)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04806419834494591
    2. ' x' → logprob: -3.1730642318725586
    3. '           ' → logprob: -6.048064231872559
    4. '   ' → logprob: -6.423064231872559
    5. '       ' → logprob: -7.173064231872559
    6. '	x' → logprob: -8.548064231872559
    7. 'a' → logprob: -9.923064231872559
    8. '               ' → logprob: -10.548064231872559
    9. ' ' → logprob: -12.298064231872559
    10. ' a' → logprob: -12.423064231872559

Token 1363: ' Ensuite' (ID: 113884)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.006740357726812363
    2. 'a' → logprob: -5.131740570068359
    3. '           ' → logprob: -7.631740570068359
    4. ' x' → logprob: -8.88174057006836
    5. '   ' → logprob: -8.88174057006836
    6. 'y' → logprob: -10.63174057006836
    7. '       ' → logprob: -11.25674057006836
    8. '```' → logprob: -12.13174057006836
    9. '               ' → logprob: -13.38174057006836
    10. ' a' → logprob: -13.38174057006836

Token 1364: ',' (ID: 11)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.19309958815574646
    2. '           ' → logprob: -1.9430996179580688
    3. ' x' → logprob: -4.193099498748779
    4. '               ' → logprob: -4.818099498748779
    5. ':
' → logprob: -5.818099498748779
    6. ':' → logprob: -6.193099498748779
    7. '   ' → logprob: -6.193099498748779
    8. '       ' → logprob: -6.818099498748779
    9. '#' → logprob: -7.943099498748779
    10. '
' → logprob: -9.318099975585938

Token 1365: ' on' (ID: 402)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3209376335144043
    2. ' x' → logprob: -1.3209376335144043
    3. '           ' → logprob: -5.445937633514404
    4. 'a' → logprob: -6.445937633514404
    5. ' a' → logprob: -6.820937633514404
    6. '   ' → logprob: -7.820937633514404
    7. '       ' → logprob: -9.695938110351562
    8. '	x' → logprob: -10.070938110351562
    9. ' y' → logprob: -10.195938110351562
    10. '               ' → logprob: -10.195938110351562

Token 1366: ' continue' (ID: 4901)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9566280245780945
    2. 'for' → logprob: -1.0816280841827393
    3. '           ' → logprob: -2.3316280841827393
    4. ' for' → logprob: -2.9566280841827393
    5. ' x' → logprob: -3.7066280841827393
    6. 'contin' → logprob: -3.7066280841827393
    7. '   ' → logprob: -4.33162784576416
    8. 'a' → logprob: -4.45662784576416
    9. 'continue' → logprob: -4.83162784576416
    10. '       ' → logprob: -5.08162784576416

Token 1367: ' à' (ID: 1221)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.40204736590385437
    2. 'x' → logprob: -1.9020473957061768
    3. '       ' → logprob: -2.2770473957061768
    4. ',' → logprob: -3.5270473957061768
    5. '   ' → logprob: -4.152047157287598
    6. 'à' → logprob: -4.527047157287598
    7. ':' → logprob: -4.777047157287598
    8. ' à' → logprob: -5.277047157287598
    9. ':
' → logprob: -6.277047157287598
    10. 'with' → logprob: -6.527047157287598

Token 1368: ' sou' (ID: 4069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15046489238739014
    2. 'x' → logprob: -2.4004650115966797
    3. ' for' → logprob: -3.4004650115966797
    4. 'a' → logprob: -5.27546501159668
    5. '   ' → logprob: -5.40046501159668
    6. ' x' → logprob: -5.90046501159668
    7. 'tmp' → logprob: -6.27546501159668
    8. ' ' → logprob: -8.15046501159668
    9. ' a' → logprob: -8.40046501159668
    10. 'A' → logprob: -8.40046501159668

Token 1369: 'stra' (ID: 14867)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.005685718264430761
    2. 'stra' → logprob: -5.255685806274414
    3. 'stract' → logprob: -9.130685806274414
    4. 'bst' → logprob: -9.130685806274414
    5. 'bs' → logprob: -10.005685806274414
    6. 'straction' → logprob: -10.130685806274414
    7. 'str' → logprob: -10.505685806274414
    8. '[b' → logprob: -11.005685806274414
    9. 'br' → logprob: -11.755685806274414
    10. 'subtract' → logprob: -11.880685806274414

Token 1370: 'ire' (ID: 594)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.0954195037484169
    2. 'it' → logprob: -2.720419406890869
    3. 't' → logprob: -4.345419406890869
    4. 'c' → logprob: -5.345419406890869
    5. 'x' → logprob: -6.720419406890869
    6. 'r' → logprob: -6.845419406890869
    7. 'i' → logprob: -6.845419406890869
    8. 'ire' → logprob: -7.345419406890869
    9. 'cter' → logprob: -7.470419406890869
    10. 'ction' → logprob: -8.095419883728027

Token 1371: ' les' (ID: 1341)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.700721025466919
    2. '(tmp' → logprob: -0.700721025466919
    3. ' tmp' → logprob: -4.95072078704834
    4. ' (' → logprob: -9.45072078704834
    5. '(A' → logprob: -9.45072078704834
    6. 'A' → logprob: -9.82572078704834
    7. '	tmp' → logprob: -9.95072078704834
    8. '(' → logprob: -10.07572078704834
    9. ',tmp' → logprob: -10.32572078704834
    10. '(x' → logprob: -10.70072078704834

Token 1372: ' autres' (ID: 18701)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.8399362564086914
    2. 'A' → logprob: -1.3399362564086914
    3. ' A' → logprob: -2.0899362564086914
    4. ' tmp' → logprob: -2.3399362564086914
    5. '(' → logprob: -3.2149362564086914
    6. ' (' → logprob: -4.339936256408691
    7. '(tmp' → logprob: -5.089936256408691
    8. 'x' → logprob: -5.214936256408691
    9. '(
' → logprob: -5.339936256408691
    10. 'a' → logprob: -5.464936256408691

Token 1373: ' plus' (ID: 2932)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7507690787315369
    2. 'tmp' → logprob: -1.7507691383361816
    3. 'x' → logprob: -2.3757691383361816
    4. ' (' → logprob: -2.8757691383361816
    5. '(A' → logprob: -3.0007691383361816
    6. 'A' → logprob: -3.2507691383361816
    7. '(tmp' → logprob: -3.6257691383361816
    8. ' A' → logprob: -3.7507691383361816
    9. ' tmp' → logprob: -4.375769138336182
    10. 'a' → logprob: -4.750769138336182

Token 1374: ' grands' (ID: 43085)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.7755168676376343
    2. ' grand' → logprob: -1.5255168676376343
    3. ' grands' → logprob: -1.5255168676376343
    4. ' grandes' → logprob: -4.150516986846924
    5. ' petits' → logprob: -4.150516986846924
    6. 'A' → logprob: -4.525516986846924
    7. 'pet' → logprob: -4.650516986846924
    8. 'x' → logprob: -4.775516986846924
    9. ' petit' → logprob: -5.025516986846924
    10. ',' → logprob: -5.150516986846924

Token 1375: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06681302934885025
    2. 'A' → logprob: -3.5668129920959473
    3. ' ,' → logprob: -4.066812992095947
    4. ' A' → logprob: -5.191812992095947
    5. 'neg' → logprob: -5.691812992095947
    6. ' nég' → logprob: -6.066812992095947
    7. '```' → logprob: -6.316812992095947
    8. ',A' → logprob: -7.066812992095947
    9. ' elements' → logprob: -7.316812992095947
    10. ' ' → logprob: -7.691812992095947

Token 1376: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.023891573771834373
    2. ' tmp' → logprob: -3.7738916873931885
    3. '(tmp' → logprob: -7.398891448974609
    4. '	tmp' → logprob: -11.02389144897461
    5. '(' → logprob: -12.64889144897461
    6. '/tmp' → logprob: -12.89889144897461
    7. 'x' → logprob: -13.14889144897461
    8. 'Tmp' → logprob: -13.27389144897461
    9. ',tmp' → logprob: -13.27389144897461
    10. '$tmp' → logprob: -13.39889144897461

Token 1377: ' success' (ID: 3505)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007590298540890217
    2. '   ' → logprob: -5.882590293884277
    3. ' =' → logprob: -6.132590293884277
    4. ' ,' → logprob: -7.507590293884277
    5. ',x' → logprob: -7.632590293884277
    6. ',
' → logprob: -7.757590293884277
    7. '           ' → logprob: -7.882590293884277
    8. '```' → logprob: -8.132590293884277
    9. '       ' → logprob: -9.507590293884277
    10. '            
' → logprob: -9.632590293884277

Token 1378: 'ivement' (ID: 37978)
  Prédit: 'ivement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ivement' → logprob: -0.0012119027087464929
    2. 'vement' → logprob: -7.001212120056152
    3. '```' → logprob: -9.126212120056152
    4. 'iv' → logprob: -9.626212120056152
    5. 'ive' → logprob: -10.626212120056152
    6. '#' → logprob: -10.626212120056152
    7. '   ' → logprob: -10.751212120056152
    8. 'ves' → logprob: -11.626212120056152
    9. 'ives' → logprob: -11.751212120056152
    10. 'ively' → logprob: -12.251212120056152

Token 1379: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.140403613448143
    2. '```' → logprob: -3.3904035091400146
    3. ',
' → logprob: -3.6404035091400146
    4. '(x' → logprob: -3.6404035091400146
    5. '           ' → logprob: -3.7654035091400146
    6. ',x' → logprob: -5.140403747558594
    7. '   ' → logprob: -5.640403747558594
    8. '               ' → logprob: -5.765403747558594
    9. '       ' → logprob: -6.390403747558594
    10. 'x' → logprob: -6.890403747558594

Token 1380: '           ' (ID: 352)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.41828110814094543
    2. '   ' → logprob: -2.043281078338623
    3. '           ' → logprob: -2.293281078338623
    4. '```' → logprob: -2.418281078338623
    5. '       ' → logprob: -4.793281078338623
    6. '               ' → logprob: -5.168281078338623
    7. ' x' → logprob: -5.543281078338623
    8. '
' → logprob: -6.543281078338623
    9. '``' → logprob: -6.668281078338623
    10. '	x' → logprob: -7.543281078338623

Token 1381: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.0009231308358721435
    2. '   ' → logprob: -8.125923156738281
    3. ' x' → logprob: -8.375923156738281
    4. '           ' → logprob: -8.500923156738281
    5. '       ' → logprob: -9.000923156738281
    6. 'for' → logprob: -10.375923156738281
    7. '```' → logprob: -10.375923156738281
    8. '               ' → logprob: -13.250923156738281
    9. '	x' → logprob: -13.500923156738281
    10. ' for' → logprob: -14.000923156738281

Token 1382: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.3676733690081164e-05
    2. ' ,' → logprob: -10.75002384185791
    3. ',y' → logprob: -13.62502384185791
    4. ',
' → logprob: -14.62502384185791
    5. '=' → logprob: -15.50002384185791
    6. ',tmp' → logprob: -16.625022888183594
    7. ',Y' → logprob: -17.125022888183594
    8. '‌,' → logprob: -17.500022888183594
    9. ' =' → logprob: -17.625022888183594
    10. ',x' → logprob: -17.750022888183594

Token 1383: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.10900110751390457
    2. ' y' → logprob: -2.6090011596679688
    3. 'tmp' → logprob: -3.6090011596679688
    4. ' tmp' → logprob: -5.984001159667969
    5. 'A' → logprob: -10.359001159667969
    6. 'x' → logprob: -11.109001159667969
    7. ' A' → logprob: -12.734001159667969
    8. '	y' → logprob: -13.109001159667969
    9. 'temp' → logprob: -13.234001159667969
    10. ' ' → logprob: -13.609001159667969

Token 1384: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07373937964439392
    2. ',' → logprob: -2.8237392902374268
    3. ' =' → logprob: -4.448739528656006
    4. ' ,' → logprob: -11.823739051818848
    5. '=
' → logprob: -14.198739051818848
    6. ',tmp' → logprob: -14.448739051818848
    7. '=',' → logprob: -15.073739051818848
    8. '	' → logprob: -16.073740005493164
    9. ',
' → logprob: -16.573740005493164
    10. '=",' → logprob: -16.948740005493164

Token 1385: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.0009122979827225208
    2. ' tmp' → logprob: -7.000912189483643
    3. '	tmp' → logprob: -14.6259126663208
    4. '(tmp' → logprob: -15.2509126663208
    5. 'temp' → logprob: -16.750911712646484
    6. 'x' → logprob: -16.875911712646484
    7. '/tmp' → logprob: -17.000911712646484
    8. '$tmp' → logprob: -17.000911712646484
    9. '_tmp' → logprob: -17.875911712646484
    10. '[tmp' → logprob: -18.250911712646484

Token 1386: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.587483221665025e-05
    2. ' ,' → logprob: -10.125065803527832
    3. ',A' → logprob: -10.625065803527832
    4. 'A' → logprob: -13.875065803527832
    5. ',
' → logprob: -15.000065803527832
    6. '   ' → logprob: -16.62506675720215
    7. ' A' → logprob: -16.75006675720215
    8. '       ' → logprob: -17.87506675720215
    9. '‌,' → logprob: -18.00006675720215
    10. '`,' → logprob: -18.00006675720215

Token 1387: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0005530327325686812
    2. ' A' → logprob: -7.500553131103516
    3. ' ' → logprob: -18.375553131103516
    4. 'a' → logprob: -19.125553131103516
    5. '   ' → logprob: -19.250553131103516
    6. '	A' → logprob: -19.250553131103516
    7. '  ' → logprob: -19.625553131103516
    8. '(A' → logprob: -19.875553131103516
    9. '#' → logprob: -20.000553131103516
    10. '=A' → logprob: -20.750553131103516

Token 1388: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.10040593147277832
    2. '[i' → logprob: -2.3504059314727783
    3. 'pop' → logprob: -8.6004056930542
    4. '.' → logprob: -11.6004056930542
    5. '[' → logprob: -12.2254056930542
    6. '[-' → logprob: -14.4754056930542
    7. '[p' → logprob: -16.475406646728516
    8. '```' → logprob: -16.600406646728516
    9. '	pop' → logprob: -16.600406646728516
    10. 'i' → logprob: -16.725406646728516

Token 1389: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00038336371653713286
    2. '()
' → logprob: -7.875383377075195
    3. '()

' → logprob: -14.000383377075195
    4. '()\' → logprob: -14.125383377075195
    5. '()[' → logprob: -14.875383377075195
    6. '(),' → logprob: -14.875383377075195
    7. '()]' → logprob: -15.375383377075195
    8. '(' → logprob: -15.500383377075195
    9. '()`' → logprob: -15.875383377075195
    10. ' ()' → logprob: -16.000383377075195

Token 1390: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5032612681388855
    2. '       ' → logprob: -1.1282613277435303
    3. '   ' → logprob: -2.7532613277435303
    4. '```' → logprob: -5.378261089324951
    5. 'XY' → logprob: -6.378261089324951
    6. '``' → logprob: -7.503261089324951
    7. ' XY' → logprob: -8.25326156616211
    8. ')' → logprob: -8.87826156616211
    9. '
' → logprob: -9.12826156616211
    10. ')
' → logprob: -9.12826156616211

Token 1391: ' XY' (ID: 71987)
  Prédit: 'XY'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XY' (adapté à ' XY') → logprob: -0.05549607798457146
    2. ' XY' → logprob: -2.9304959774017334
    3. '           ' → logprob: -8.180496215820312
    4. '   ' → logprob: -8.555496215820312
    5. 'tmp' → logprob: -10.055496215820312
    6. '       ' → logprob: -10.180496215820312
    7. 'xy' → logprob: -10.680496215820312
    8. ' xy' → logprob: -11.555496215820312
    9. ' tmp' → logprob: -11.680496215820312
    10. ' ' → logprob: -12.305496215820312

Token 1392: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0002137882256647572
    2. '.' → logprob: -8.500213623046875
    3. 'append' → logprob: -11.625213623046875
    4. '.app' → logprob: -13.875213623046875
    5. '_append' → logprob: -15.875213623046875
    6. ' append' → logprob: -16.000213623046875
    7. ' .' → logprob: -17.000213623046875
    8. 'Append' → logprob: -17.500213623046875
    9. '.Append' → logprob: -17.875213623046875
    10. '	append' → logprob: -18.000213623046875

Token 1393: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -8.959636033978313e-05
    2. '(x' → logprob: -9.875089645385742
    3. '(' → logprob: -10.250089645385742
    4. '(
' → logprob: -12.875089645385742
    5. ' (' → logprob: -16.375089645385742
    6. ' ((' → logprob: -18.125089645385742
    7. '[(' → logprob: -19.000089645385742
    8. ')((' → logprob: -19.625089645385742
    9. '   ' → logprob: -19.750089645385742
    10. '>((' → logprob: -20.000089645385742

Token 1394: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.935296834039036e-06
    2. ' x' → logprob: -12.75000286102295
    3. '(x' → logprob: -17.375003814697266
    4. 'tmp' → logprob: -22.750003814697266
    5. '	x' → logprob: -23.000003814697266
    6. ')x' → logprob: -23.750003814697266
    7. '"x' → logprob: -24.125003814697266
    8. '$x' → logprob: -26.000003814697266
    9. '   ' → logprob: -26.375003814697266
    10. '_x' → logprob: -26.625003814697266

Token 1395: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.153795766294934e-06
    2. ',y' → logprob: -12.125005722045898
    3. ' ,' → logprob: -14.875005722045898
    4. ',
' → logprob: -15.375005722045898
    5. ')' → logprob: -16.1250057220459
    6. 'y' → logprob: -16.8750057220459
    7. '[' → logprob: -18.5000057220459
    8. ',)' → logprob: -18.8750057220459
    9. '),' → logprob: -18.8750057220459
    10. '```' → logprob: -19.2500057220459

Token 1396: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0002661039761733264
    2. ' y' → logprob: -8.250266075134277
    3. 'x' → logprob: -12.250266075134277
    4. '(y' → logprob: -17.750267028808594
    5. '	y' → logprob: -18.000267028808594
    6. ')y' → logprob: -18.250267028808594
    7. ')' → logprob: -18.375267028808594
    8. '(' → logprob: -18.750267028808594
    9. 'tmp' → logprob: -19.250267028808594
    10. '(x' → logprob: -20.750267028808594

Token 1397: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12698858976364136
    2. ')
' → logprob: -2.126988649368286
    3. '       ' → logprob: -10.251988410949707
    4. ')
' → logprob: -11.251988410949707
    5. '   ' → logprob: -11.751988410949707
    6. '           ' → logprob: -12.751988410949707
    7. ' )' → logprob: -15.251988410949707
    8. ')#' → logprob: -15.501988410949707
    9. ')`
' → logprob: -15.501988410949707
    10. ')

' → logprob: -15.876988410949707

Token 1398: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1317790448665619
    2. '       ' → logprob: -2.6317789554595947
    3. '   ' → logprob: -3.0067789554595947
    4. 'tmp' → logprob: -6.256779193878174
    5. '               ' → logprob: -10.006778717041016
    6. '```' → logprob: -10.881778717041016
    7. '	tmp' → logprob: -11.381778717041016
    8. '	       ' → logprob: -11.506778717041016
    9. '
' → logprob: -11.756778717041016
    10. '		' → logprob: -12.006778717041016

Token 1399: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' (adapté à ' tmp') → logprob: -0.0025668602902442217
    2. ' tmp' → logprob: -6.252566814422607
    3. '   ' → logprob: -7.502566814422607
    4. '           ' → logprob: -10.002567291259766
    5. '       ' → logprob: -10.377567291259766
    6. '	tmp' → logprob: -11.877567291259766
    7. '/tmp' → logprob: -13.502567291259766
    8. '$tmp' → logprob: -15.002567291259766
    9. '.tmp' → logprob: -15.127567291259766
    10. '_tmp' → logprob: -15.377567291259766

Token 1400: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2520120143890381
    2. ' =' → logprob: -1.502012014389038
    3. ' -=' → logprob: -9.752012252807617
    4. '-=' → logprob: -10.627012252807617
    5. '-' → logprob: -15.002012252807617
    6. ' +=' → logprob: -16.502012252807617
    7. '+=' → logprob: -17.002012252807617
    8. ' ' → logprob: -17.377012252807617
    9. ')' → logprob: -17.752012252807617
    10. '＝' → logprob: -17.877012252807617

Token 1401: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.006560713984072208
    2. ' x' → logprob: -5.506560802459717
    3. 'tmp' → logprob: -6.006560802459717
    4. ' tmp' → logprob: -11.006560325622559
    5. 'temp' → logprob: -17.756561279296875
    6. ' ' → logprob: -18.756561279296875
    7. '	x' → logprob: -18.881561279296875
    8. 't' → logprob: -19.131561279296875
    9. '(tmp' → logprob: -19.256561279296875
    10. '/tmp' → logprob: -19.631561279296875

Token 1402: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.20143857598304749
    2. '-' → logprob: -1.701438546180725
    3. ' ' → logprob: -11.951438903808594
    4. '[' → logprob: -12.201438903808594
    5. ')' → logprob: -13.076438903808594
    6. '<|end|>' → logprob: -13.076438903808594
    7. '  ' → logprob: -13.576438903808594
    8. ' -
' → logprob: -13.826438903808594
    9. ',' → logprob: -13.951438903808594
    10. '	' → logprob: -14.576438903808594

Token 1403: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0002613358374219388
    2. ' y' → logprob: -8.250261306762695
    3. '	y' → logprob: -20.875261306762695
    4. 'x' → logprob: -22.125261306762695
    5. ',y' → logprob: -22.500261306762695
    6. 'Y' → logprob: -22.500261306762695
    7. '1' → logprob: -22.500261306762695
    8. ' ' → logprob: -22.875261306762695
    9. 'v' → logprob: -23.250261306762695
    10. '_y' → logprob: -23.500261306762695

Token 1404: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.020288201048970222
    2. 'for' → logprob: -4.645287990570068
    3. '<|end|>' → logprob: -5.020287990570068
    4. ')' → logprob: -6.395287990570068
    5. '#' → logprob: -7.145287990570068
    6. '   ' → logprob: -7.395287990570068
    7. '
' → logprob: -8.020288467407227
    8. 'if' → logprob: -8.395288467407227
    9. '```' → logprob: -9.270288467407227
    10. '    
' → logprob: -10.145288467407227

Token 1405: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0033554669935256243
    2. '#' → logprob: -6.503355503082275
    3. 'for' → logprob: -6.628355503082275
    4. '```' → logprob: -7.753355503082275
    5. '#print' → logprob: -10.128355026245117
    6. '<|end|>' → logprob: -10.128355026245117
    7. '
' → logprob: -11.878355026245117
    8. 'pass' → logprob: -12.378355026245117
    9. 'if' → logprob: -13.253355026245117
    10. ' print' → logprob: -13.503355026245117

Token 1406: ' À' (ID: 27643)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '#' → logprob: -17.25
    3. 'for' → logprob: -17.375
    4. '```' → logprob: -19.5
    5. ' print' → logprob: -19.625
    6. '#print' → logprob: -21.0
    7. '``' → logprob: -22.75
    8. '
' → logprob: -23.125
    9. '    
' → logprob: -23.875
    10. '  
' → logprob: -24.375

Token 1407: ' la' (ID: 557)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1276599019765854
    2. 'print' → logprob: -2.502659797668457
    3. 'la' → logprob: -3.502659797668457
    4. ' la' → logprob: -5.252659797668457
    5. 'l' → logprob: -7.377659797668457
    6. 'len' → logprob: -7.752659797668457
    7. '
' → logprob: -7.752659797668457
    8. '#print' → logprob: -8.127659797668457
    9. 'the' → logprob: -8.752659797668457
    10. 'le' → logprob: -9.627659797668457

Token 1408: ' fin' (ID: 2131)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.17176134884357452
    2. '#' → logprob: -2.5467612743377686
    3. 'bout' → logprob: -3.0467612743377686
    4. 'pp' → logprob: -5.171761512756348
    5. 'près' → logprob: -5.171761512756348
    6. 'fter' → logprob: -5.546761512756348
    7. 'final' → logprob: -5.671761512756348
    8. 'prés' → logprob: -6.421761512756348
    9. 'la' → logprob: -6.546761512756348
    10. ' la' → logprob: -6.546761512756348

Token 1409: ' des' (ID: 731)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.011075416579842567
    2. '#' → logprob: -4.511075496673584
    3. '
' → logprob: -10.761075019836426
    4. '#print' → logprob: -12.386075019836426
    5. ' print' → logprob: -13.886075019836426
    6. ')
' → logprob: -15.261075019836426
    7. '```' → logprob: -15.261075019836426
    8. '#
' → logprob: -15.386075019836426
    9. ')' → logprob: -15.886075019836426
    10. ':
' → logprob: -15.886075019836426

Token 1410: ' opérations' (ID: 102793)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2827242314815521
    2. 'XY' → logprob: -1.5327242612838745
    3. '#' → logprob: -3.782724142074585
    4. 'len' → logprob: -6.282724380493164
    5. 'la' → logprob: -6.782724380493164
    6. ' XY' → logprob: -6.907724380493164
    7. 'l' → logprob: -7.532724380493164
    8. 'for' → logprob: -7.657724380493164
    9. 'instructions' → logprob: -7.782724380493164
    10. 'tmp' → logprob: -8.032724380493164

Token 1411: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0015370006440207362
    2. '#' → logprob: -6.501536846160889
    3. '
' → logprob: -10.626537322998047
    4. '#print' → logprob: -12.126537322998047
    5. ',' → logprob: -13.126537322998047
    6. ' print' → logprob: -13.751537322998047
    7. ':
' → logprob: -14.376537322998047
    8. 'for' → logprob: -14.501537322998047
    9. ')
' → logprob: -15.126537322998047
    10. ')' → logprob: -15.376537322998047

Token 1412: ' tmp' (ID: 8919)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.060365608893335e-05
    2. '#' → logprob: -10.125041007995605
    3. ' print' → logprob: -15.000041007995605
    4. '#print' → logprob: -16.50004005432129
    5. '```' → logprob: -17.37504005432129
    6. 'for' → logprob: -17.62504005432129
    7. '
' → logprob: -18.00004005432129
    8. 'max' → logprob: -19.62504005432129
    9. '    
' → logprob: -20.75004005432129
    10. '``' → logprob: -21.75004005432129

Token 1413: ' contient' (ID: 89067)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6039173007011414
    2. ' =' → logprob: -1.4789173603057861
    3. ',' → logprob: -2.228917360305786
    4. '<|end|>' → logprob: -3.853917360305786
    5. 'print' → logprob: -3.978917360305786
    6. '#' → logprob: -3.978917360305786
    7. ')' → logprob: -4.228917121887207
    8. '+=' → logprob: -4.978917121887207
    9. 'tmp' → logprob: -5.728917121887207
    10. '
' → logprob: -5.728917121887207

Token 1414: ' le' (ID: 505)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.05056888610124588
    2. 'le' → logprob: -3.1755688190460205
    3. 'la' → logprob: -5.5505690574646
    4. 'l' → logprob: -6.3005690574646
    5. ' le' → logprob: -7.8005690574646
    6. ' la' → logprob: -7.9255690574646
    7. ' tmp' → logprob: -8.050568580627441
    8. '(tmp' → logprob: -8.050568580627441
    9. 'the' → logprob: -8.675568580627441
    10. '#' → logprob: -9.300568580627441

Token 1415: ' résultat' (ID: 62556)
  Prédit: 'rés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rés' → logprob: -0.10534780472517014
    2. 'score' → logprob: -2.3553478717803955
    3. 'result' → logprob: -5.980347633361816
    4. ' résultat' → logprob: -6.230347633361816
    5. 'maximum' → logprob: -7.730347633361816
    6. 'max' → logprob: -9.480347633361816
    7. '#' → logprob: -9.605347633361816
    8. ' score' → logprob: -10.355347633361816
    9. 'Rés' → logprob: -12.855347633361816
    10. 'ré' → logprob: -13.230347633361816

Token 1416: ' final' (ID: 1721)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5804488658905029
    2. '#' → logprob: -1.330448865890503
    3. '.' → logprob: -2.830448865890503
    4. 'final' → logprob: -3.330448865890503
    5. ')' → logprob: -3.955448865890503
    6. ',' → logprob: -4.330449104309082
    7. '<|end|>' → logprob: -4.830449104309082
    8. '(' → logprob: -5.080449104309082
    9. '(
' → logprob: -5.080449104309082
    10. 'max' → logprob: -5.330449104309082

Token 1417: ' obtenu' (ID: 117330)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.171581091824919e-05
    2. '#' → logprob: -9.62507152557373
    3. ')
' → logprob: -13.12507152557373
    4. '
' → logprob: -13.62507152557373
    5. ')' → logprob: -13.62507152557373
    6. '#print' → logprob: -14.25007152557373
    7. '```' → logprob: -15.37507152557373
    8. ' print' → logprob: -15.62507152557373
    9. '  
' → logprob: -17.250072479248047
    10. '#
' → logprob: -17.625072479248047

Token 1418: ' après' (ID: 16460)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005051348707638681
    2. '#' → logprob: -7.625504970550537
    3. '#print' → logprob: -11.750505447387695
    4. '
' → logprob: -12.750505447387695
    5. ')' → logprob: -12.875505447387695
    6. ')
' → logprob: -13.125505447387695
    7. ' print' → logprob: -14.000505447387695
    8. '```' → logprob: -14.625505447387695
    9. ',' → logprob: -15.375505447387695
    10. '(print' → logprob: -16.125505447387695

Token 1419: ' les' (ID: 1341)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.4619092047214508
    2. 't' → logprob: -1.4619091749191284
    3. 'print' → logprob: -2.961909294128418
    4. ' toutes' → logprob: -3.461909294128418
    5. '#' → logprob: -4.086909294128418
    6. 'tmp' → logprob: -4.711909294128418
    7. 'tout' → logprob: -4.836909294128418
    8. 'les' → logprob: -5.461909294128418
    9. 'Toutes' → logprob: -5.711909294128418
    10. 'N' → logprob: -5.711909294128418

Token 1420: ' (' (ID: 350)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.0013577938079834
    2. ' N' → logprob: -1.1263577938079834
    3. 'calcul' → logprob: -1.6263577938079834
    4. 't' → logprob: -3.5013577938079834
    5. 'sou' → logprob: -3.5013577938079834
    6. 'n' → logprob: -4.0013580322265625
    7. 'diff' → logprob: -4.8763580322265625
    8. 'sub' → logprob: -5.3763580322265625
    9. 's' → logprob: -5.6263580322265625
    10. 'op' → logprob: -5.8763580322265625

Token 1421: 'N' (ID: 45)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.787690281867981
    2. 'len' → logprob: -1.037690281867981
    3. 'N' → logprob: -2.1626901626586914
    4. ')' → logprob: -3.0376901626586914
    5. ' len' → logprob: -4.537690162658691
    6. 'XY' → logprob: -5.537690162658691
    7. ' )' → logprob: -6.037690162658691
    8. '
' → logprob: -6.162690162658691
    9. '#' → logprob: -6.287690162658691
    10. 's' → logprob: -7.037690162658691

Token 1422: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.18796281516551971
    2. ')' → logprob: -1.8129627704620361
    3. ' )' → logprob: -5.437963008880615
    4. ' -' → logprob: -5.812963008880615
    5. '
' → logprob: -7.812963008880615
    6. '#' → logprob: -8.562962532043457
    7. ' ' → logprob: -9.312962532043457
    8. '-)' → logprob: -9.812962532043457
    9. ')
' → logprob: -10.687962532043457
    10. ' #' → logprob: -10.812962532043457

Token 1423: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.500001907348633
    3. '-' → logprob: -15.500001907348633
    4. ')' → logprob: -17.000001907348633
    5. '#' → logprob: -17.250001907348633
    6. '
' → logprob: -17.500001907348633
    7. ' ' → logprob: -18.875001907348633
    8. '2' → logprob: -19.125001907348633
    9. '１' → logprob: -19.125001907348633
    10. '   ' → logprob: -19.125001907348633

Token 1424: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5768182873725891
    2. ' )' → logprob: -0.8268182873725891
    3. ' )
' → logprob: -7.826818466186523
    4. ' ' → logprob: -8.576818466186523
    5. ')
' → logprob: -9.076818466186523
    6. ' opérations' → logprob: -9.451818466186523
    7. ' ' → logprob: -10.826818466186523
    8. '
' → logprob: -11.076818466186523
    9. ' 
' → logprob: -11.201818466186523
    10. '#' → logprob: -11.701818466186523

Token 1425: ' sou' (ID: 4069)
  Prédit: ' opérations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' opérations' → logprob: -0.09389185160398483
    2. 'sou' → logprob: -3.2188918590545654
    3. ' sou' → logprob: -3.7188918590545654
    4. '#' → logprob: -5.593891620635986
    5. ' operations' → logprob: -5.593891620635986
    6. '\n' → logprob: -5.593891620635986
    7. '  
' → logprob: -5.843891620635986
    8. '
' → logprob: -6.218891620635986
    9. ' #' → logprob: -6.593891620635986
    10. ' ' → logprob: -6.593891620635986

Token 1426: 'stra' (ID: 14867)
  Prédit: 'stra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stra' → logprob: -0.0033886220771819353
    2. '-' → logprob: -6.753388404846191
    3. 'tractions' → logprob: -6.753388404846191
    4. 'str' → logprob: -7.753388404846191
    5. 'straction' → logprob: -8.253388404846191
    6. '#' → logprob: -8.753388404846191
    7. 'tra' → logprob: -10.128388404846191
    8. 'stract' → logprob: -10.253388404846191
    9. 'f' → logprob: -11.003388404846191
    10. '−' → logprob: -11.128388404846191

Token 1427: 'ctions' (ID: 2620)
  Prédit: 'ctions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ctions' → logprob: -6.869017852295656e-06
    2. 'ction' → logprob: -13.250006675720215
    3. 'ct' → logprob: -13.375006675720215
    4. 'ptions' → logprob: -13.750006675720215
    5. '#' → logprob: -14.625006675720215
    6. 'CTIONS' → logprob: -14.625006675720215
    7. 'uctions' → logprob: -14.875006675720215
    8. '</' → logprob: -15.125006675720215
    9. 'ections' → logprob: -15.750006675720215
    10. '
' → logprob: -15.875006675720215

Token 1428: ' success' (ID: 3505)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -8.97155623533763e-05
    2. '#' → logprob: -9.375089645385742
    3. '
' → logprob: -13.250089645385742
    4. '```' → logprob: -13.750089645385742
    5. ')
' → logprob: -14.125089645385742
    6. '#print' → logprob: -14.250089645385742
    7. '#
' → logprob: -15.375089645385742
    8. '  
' → logprob: -16.125089645385742
    9. ')' → logprob: -16.250089645385742
    10. ' print' → logprob: -16.375089645385742

Token 1429: 'ives' (ID: 2264)
  Prédit: 'ess'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ess' → logprob: -0.3633285164833069
    2. 'es' → logprob: -1.363328456878662
    3. 'iv' → logprob: -3.863328456878662
    4. 'e' → logprob: -4.863328456878662
    5. 'ives' → logprob: -5.363328456878662
    6. 'cess' → logprob: -5.738328456878662
    7. 'ées' → logprob: -5.863328456878662
    8. '#' → logprob: -5.988328456878662
    9. 'ession' → logprob: -6.863328456878662
    10. ')' → logprob: -7.488328456878662

Token 1430: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.836499985889532e-05
    2. '#' → logprob: -9.8750581741333
    3. ')
' → logprob: -13.0000581741333
    4. ')' → logprob: -13.1250581741333
    5. '```' → logprob: -13.5000581741333
    6. '
' → logprob: -14.3750581741333
    7. '#print' → logprob: -15.0000581741333
    8. ' print' → logprob: -15.6250581741333
    9. '  
' → logprob: -16.750059127807617
    10. '#
' → logprob: -16.875059127807617

Token 1431: 'ans' (ID: 616)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.8961017202818766e-05
    2. '#' → logprob: -9.750059127807617
    3. '#print' → logprob: -15.000059127807617
    4. '```' → logprob: -15.000059127807617
    5. ' print' → logprob: -18.125059127807617
    6. '``' → logprob: -18.375059127807617
    7. '
' → logprob: -18.500059127807617
    8. '#
' → logprob: -19.000059127807617
    9. 'for' → logprob: -20.000059127807617
    10. '  
' → logprob: -20.000059127807617

Token 1432: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47837650775909424
    2. '=' → logprob: -0.9783765077590942
    3. '_' → logprob: -5.978376388549805
    4. 't' → logprob: -6.478376388549805
    5. ',' → logprob: -9.478376388549805
    6. ')' → logprob: -9.603376388549805
    7. '_=' → logprob: -11.478376388549805
    8. ' ' → logprob: -11.978376388549805
    9. ' =
' → logprob: -11.978376388549805
    10. '[' → logprob: -12.103376388549805

Token 1433: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -3.054500666621607e-06
    2. ' tmp' → logprob: -12.75000286102295
    3. 'temp' → logprob: -18.500003814697266
    4. '/tmp' → logprob: -19.250003814697266
    5. '	tmp' → logprob: -19.250003814697266
    6. '$tmp' → logprob: -19.375003814697266
    7. '(tmp' → logprob: -19.625003814697266
    8. '.tmp' → logprob: -21.250003814697266
    9. 'txt' → logprob: -21.375003814697266
    10. 'tm' → logprob: -21.500003814697266

Token 1434: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.704273118884885e-07
    2. '```' → logprob: -15.000000953674316
    3. '#' → logprob: -15.250000953674316
    4. '
' → logprob: -17.0
    5. ' print' → logprob: -18.375
    6. '#print' → logprob: -18.625
    7. 'for' → logprob: -18.75
    8. '  
' → logprob: -19.5
    9. '\' → logprob: -20.625
    10. 'max' → logprob: -20.875

Token 1435: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.6240566083070007e-06
    2. '```' → logprob: -13.875001907348633
    3. '#' → logprob: -14.375001907348633
    4. '``' → logprob: -17.375001907348633
    5. '
' → logprob: -18.375001907348633
    6. 'for' → logprob: -18.500001907348633
    7. ' print' → logprob: -18.500001907348633
    8. '#print' → logprob: -18.625001907348633
    9. '  
' → logprob: -19.375001907348633
    10. '<|end|>' → logprob: -20.000001907348633

Token 1436: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.451116051815916e-05
    2. '#' → logprob: -10.625024795532227
    3. '#print' → logprob: -16.500024795532227
    4. ' print' → logprob: -17.875024795532227
    5. '```' → logprob: -19.625024795532227
    6. '
' → logprob: -20.250024795532227
    7. 'for' → logprob: -21.125024795532227
    8. 'Print' → logprob: -22.125024795532227
    9. '  
' → logprob: -22.750024795532227
    10. '	print' → logprob: -22.875024795532227

Token 1437: 'icher' (ID: 13617)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8427675366401672
    2. 'icher' → logprob: -0.9677675366401672
    3. 'ich' → logprob: -1.7177674770355225
    4. 'iche' → logprob: -4.967767715454102
    5. '#' → logprob: -6.967767715454102
    6. 'or' → logprob: -7.592767715454102
    7. '```' → logprob: -7.717767715454102
    8. 'ort' → logprob: -8.217767715454102
    9. 'ichage' → logprob: -8.217767715454102
    10. 'for' → logprob: -8.592767715454102

Token 1438: ' ce' (ID: 2357)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.029777569696307182
    2. 'ans' → logprob: -3.5297775268554688
    3. 'print' → logprob: -10.529777526855469
    4. '(tmp' → logprob: -15.779777526855469
    5. 'tmp' → logprob: -16.52977752685547
    6. '	ans' → logprob: -16.90477752685547
    7. ' ans' → logprob: -17.65477752685547
    8. '(answer' → logprob: -17.77977752685547
    9. '(print' → logprob: -17.77977752685547
    10. 'ANS' → logprob: -18.02977752685547

Token 1439: ' résultat' (ID: 62556)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.008661013096570969
    2. 'ans' → logprob: -4.758660793304443
    3. '(' → logprob: -10.883661270141602
    4. '(tmp' → logprob: -11.133661270141602
    5. '(
' → logprob: -12.383661270141602
    6. 'tmp' → logprob: -13.258661270141602
    7. '(answer' → logprob: -13.508661270141602
    8. '()' → logprob: -13.633661270141602
    9. 'print' → logprob: -14.133661270141602
    10. '(a' → logprob: -14.383661270141602

Token 1440: ' final' (ID: 1721)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -15.625
    3. '(print' → logprob: -16.5
    4. '
' → logprob: -18.0
    5. ' print' → logprob: -18.625
    6. '(ans' → logprob: -19.625
    7. '#print' → logprob: -19.75
    8. '(' → logprob: -20.375
    9. ')' → logprob: -20.625
    10. 'ans' → logprob: -20.625

Token 1441: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.935296834039036e-06
    2. '(print' → logprob: -13.87500286102295
    3. '```' → logprob: -14.12500286102295
    4. '(ans' → logprob: -14.87500286102295
    5. '
' → logprob: -15.50000286102295
    6. ' print' → logprob: -15.62500286102295
    7. ')' → logprob: -15.62500286102295
    8. '(' → logprob: -16.250003814697266
    9. '()' → logprob: -16.500003814697266
    10. '()
' → logprob: -16.500003814697266

Token 1442: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.320199877838604e-07
    2. '```' → logprob: -15.0
    3. '``' → logprob: -19.875
    4. ' print' → logprob: -20.0
    5. '
' → logprob: -22.5
    6. '#print' → logprob: -24.375
    7. 'println' → logprob: -25.25
    8. '#' → logprob: -25.625
    9. 'python' → logprob: -25.75
    10. '`' → logprob: -26.125

Token 1443: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.2948405128554441e-05
    2. '(' → logprob: -11.62501335144043
    3. '(tmp' → logprob: -12.50001335144043
    4. 'ans' → logprob: -15.75001335144043
    5. '(abs' → logprob: -17.62501335144043
    6. '()' → logprob: -17.87501335144043
    7. ' (' → logprob: -18.00001335144043
    8. '(answer' → logprob: -18.62501335144043
    9. '	ans' → logprob: -20.25001335144043
    10. '(
' → logprob: -20.37501335144043

Token 1444: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.32397550344467163
    2. ')' → logprob: -1.3239755630493164
    3. 'for' → logprob: -4.573975563049316
    4. '#' → logprob: -8.198975563049316
    5. ')

' → logprob: -10.698975563049316
    6. ')#' → logprob: -11.448975563049316
    7. 'if' → logprob: -11.823975563049316
    8. ' for' → logprob: -11.823975563049316
    9. 'print' → logprob: -12.073975563049316
    10. ')
' → logprob: -12.698975563049316

Token 1445: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: 0.0
    2. ' for' → logprob: -17.875
    3. '#' → logprob: -18.375
    4. '```' → logprob: -20.25
    5. '	for' → logprob: -21.0
    6. '
' → logprob: -22.375
    7. 'For' → logprob: -23.5
    8. '``' → logprob: -23.5
    9. '   ' → logprob: -24.0
    10. '    
' → logprob: -24.75

Token 1446: ' Parc' (ID: 68618)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: 0.0
    2. ' for' → logprob: -20.0
    3. '#' → logprob: -21.375
    4. 'while' → logprob: -23.375
    5. '	for' → logprob: -23.375
    6. 'For' → logprob: -23.75
    7. '```' → logprob: -24.125
    8. '
' → logprob: -25.25
    9. '   ' → logprob: -26.25
    10. 'print' → logprob: -26.25

Token 1447: 'our' (ID: 401)
  Prédit: 'our'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.0005669722449965775
    2. '#' → logprob: -8.250567436218262
    3. 'orrer' → logprob: -9.000567436218262
    4. 'or' → logprob: -9.250567436218262
    5. 'orer' → logprob: -9.750567436218262
    6. 'ours' → logprob: -11.250567436218262
    7. 'ou' → logprob: -12.125567436218262
    8. 'ourt' → logprob: -13.000567436218262
    9. 'er' → logprob: -13.500567436218262
    10. 'orr' → logprob: -13.875567436218262

Token 1448: 'ir' (ID: 380)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.4401691257953644
    2. 'rer' → logprob: -1.440169095993042
    3. 'or' → logprob: -2.940169095993042
    4. 'our' → logprob: -3.440169095993042
    5. 'ir' → logprob: -4.315169334411621
    6. 'orer' → logprob: -4.565169334411621
    7. '#' → logprob: -5.565169334411621
    8. 'orrer' → logprob: -6.065169334411621
    9. 'urer' → logprob: -6.440169334411621
    10. 'r' → logprob: -6.565169334411621

Token 1449: ' la' (ID: 557)
  Prédit: 'XY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'XY' → logprob: -0.018237974494695663
    2. '(X' → logprob: -4.018238067626953
    3. ' XY' → logprob: -9.643238067626953
    4. 'X' → logprob: -11.643238067626953
    5. '((' → logprob: -12.268238067626953
    6. 'range' → logprob: -12.393238067626953
    7. 'for' → logprob: -12.768238067626953
    8. '(x' → logprob: -13.768238067626953
    9. '
' → logprob: -14.393238067626953
    10. 'xy' → logprob: -14.518238067626953

Token 1450: ' liste' (ID: 31719)
  Prédit: 'XY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'XY' → logprob: -1.5213274309644476e-05
    2. 'X' → logprob: -12.375015258789062
    3. 'for' → logprob: -12.500015258789062
    4. ' XY' → logprob: -12.500015258789062
    5. 'range' → logprob: -13.250015258789062
    6. '(X' → logprob: -13.500015258789062
    7. 'xy' → logprob: -16.000015258789062
    8. '[(' → logprob: -16.500015258789062
    9. '   ' → logprob: -18.750015258789062
    10. ' range' → logprob: -18.875015258789062

Token 1451: ' XY' (ID: 71987)
  Prédit: '(X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.06297983229160309
    2. 'XY' → logprob: -2.8129799365997314
    3. 'for' → logprob: -6.937979698181152
    4. '((' → logprob: -11.062979698181152
    5. ' XY' → logprob: -11.812979698181152
    6. '(x' → logprob: -12.312979698181152
    7. 'X' → logprob: -12.312979698181152
    8. '#' → logprob: -12.437979698181152
    9. '([(' → logprob: -13.562979698181152
    10. ' for' → logprob: -13.687979698181152

Token 1452: ' et' (ID: 859)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0098508819937706
    2. ':' → logprob: -4.884850978851318
    3. ':
' → logprob: -6.134850978851318
    4. ' for' → logprob: -9.88485050201416
    5. 'as' → logprob: -12.25985050201416
    6. '```' → logprob: -12.38485050201416
    7. '#' → logprob: -12.50985050201416
    8. 'in' → logprob: -12.63485050201416
    9. '[::-' → logprob: -12.88485050201416
    10. ':#' → logprob: -13.25985050201416

Token 1453: ' afficher' (ID: 146524)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.15310683415737e-05
    2. ' for' → logprob: -10.750021934509277
    3. 'print' → logprob: -19.75002098083496
    4. '	for' → logprob: -21.12502098083496
    5. '
' → logprob: -22.00002098083496
    6. '   ' → logprob: -22.75002098083496
    7. '```' → logprob: -23.00002098083496
    8. '.for' → logprob: -23.25002098083496
    9. 'import' → logprob: -24.00002098083496
    10. '_for' → logprob: -24.37502098083496

Token 1454: ' chaque' (ID: 21194)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.44530099630355835
    2. '(x' → logprob: -1.5703010559082031
    3. '*' → logprob: -2.945301055908203
    4. 'for' → logprob: -3.070301055908203
    5. '*x' → logprob: -4.320301055908203
    6. '*(' → logprob: -5.195301055908203
    7. '(' → logprob: -5.195301055908203
    8. '((' → logprob: -5.195301055908203
    9. '(*(' → logprob: -5.195301055908203
    10. 'xy' → logprob: -5.195301055908203

Token 1455: ' couple' (ID: 7167)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.005351040046662092
    2. '(x' → logprob: -5.2553510665893555
    3. 'operation' → logprob: -10.380351066589355
    4. 'pair' → logprob: -10.505351066589355
    5. ' x' → logprob: -11.130351066589355
    6. 'op' → logprob: -11.380351066589355
    7. '(' → logprob: -11.630351066589355
    8. '
' → logprob: -11.880351066589355
    9. 'xy' → logprob: -12.255351066589355
    10. 'print' → logprob: -13.005351066589355

Token 1456: ' (' (ID: 350)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.25292831659317017
    2. '(x' → logprob: -1.5029282569885254
    3. 'for' → logprob: -7.877928256988525
    4. '(' → logprob: -8.252928733825684
    5. '(i' → logprob: -8.377928733825684
    6. 'x' → logprob: -10.627928733825684
    7. '(*)' → logprob: -10.627928733825684
    8. '((' → logprob: -10.877928733825684
    9. '*' → logprob: -11.502928733825684
    10. '(a' → logprob: -11.502928733825684

Token 1457: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00025275684311054647
    2. '*x' → logprob: -8.500252723693848
    3. '*' → logprob: -10.500252723693848
    4. '(x' → logprob: -11.375252723693848
    5. ' x' → logprob: -11.875252723693848
    6. 'xy' → logprob: -13.375252723693848
    7. '   ' → logprob: -14.375252723693848
    8. '(*' → logprob: -15.000252723693848
    9. ')' → logprob: -15.375252723693848
    10. 'a' → logprob: -16.375253677368164

Token 1458: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04886315390467644
    2. '[' → logprob: -3.048863172531128
    3. ')' → logprob: -8.798863410949707
    4. ' ,' → logprob: -9.798863410949707
    5. ',x' → logprob: -10.673863410949707
    6. ',y' → logprob: -11.548863410949707
    7. '[,' → logprob: -12.173863410949707
    8. '```' → logprob: -12.548863410949707
    9. '   ' → logprob: -12.673863410949707
    10. ',)' → logprob: -12.923863410949707

Token 1459: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.004078401252627373
    2. ' y' → logprob: -5.504078388214111
    3. '	y' → logprob: -20.879077911376953
    4. ''y' → logprob: -21.879077911376953
    5. ',y' → logprob: -22.754077911376953
    6. '    ' → logprob: -23.379077911376953
    7. 'x' → logprob: -23.504077911376953
    8. ' ' → logprob: -23.629077911376953
    9. '   ' → logprob: -23.879077911376953
    10. '(y' → logprob: -23.879077911376953

Token 1460: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.35150426626205444
    2. '):
' → logprob: -1.8515043258666992
    3. ')' → logprob: -2.601504325866699
    4. ':' → logprob: -2.851504325866699
    5. ':
' → logprob: -5.226504325866699
    6. '   ' → logprob: -6.726504325866699
    7. ',' → logprob: -8.3515043258667
    8. 'for' → logprob: -8.8515043258667
    9. '```' → logprob: -8.9765043258667
    10. ' in' → logprob: -9.4765043258667

Token 1461: ' sur' (ID: 1512)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0008763278019614518
    2. ':
' → logprob: -7.625876426696777
    3. ' for' → logprob: -8.375876426696777
    4. ':' → logprob: -9.000876426696777
    5. 'in' → logprob: -10.875876426696777
    6. '(x' → logprob: -12.125876426696777
    7. '```' → logprob: -12.500876426696777
    8. ' in' → logprob: -13.125876426696777
    9. 'as' → logprob: -13.250876426696777
    10. '   ' → logprob: -13.625876426696777

Token 1462: ' une' (ID: 2463)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1925679445266724
    2. '   ' → logprob: -1.4425679445266724
    3. 'print' → logprob: -2.192567825317383
    4. ' la' → logprob: -2.192567825317383
    5. '
' → logprob: -2.567567825317383
    6. '"' → logprob: -3.442567825317383
    7. 'r' → logprob: -3.942567825317383
    8. ' ' → logprob: -4.192567825317383
    9. ' une' → logprob: -4.567567825317383
    10. 'l' → logprob: -4.692567825317383

Token 1463: ' ligne' (ID: 19583)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7050074338912964
    2. 'print' → logprob: -1.8300074338912964
    3. '
' → logprob: -2.455007553100586
    4. ')' → logprob: -2.830007553100586
    5. 'range' → logprob: -2.830007553100586
    6. '\n' → logprob: -4.080007553100586
    7. '"\' → logprob: -4.080007553100586
    8. ' for' → logprob: -4.205007553100586
    9. 'xy' → logprob: -4.455007553100586
    10. 'x' → logprob: -4.830007553100586

Token 1464: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01606052741408348
    2. '(x' → logprob: -4.2660603523254395
    3. ':
' → logprob: -6.6410603523254395
    4. ':' → logprob: -8.891060829162598
    5. ' for' → logprob: -9.516060829162598
    6. '
' → logprob: -9.641060829162598
    7. '(' → logprob: -9.641060829162598
    8. '```' → logprob: -9.641060829162598
    9. 'with' → logprob: -10.141060829162598
    10. 'in' → logprob: -10.641060829162598

Token 1465: ' ce' (ID: 2357)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.8802491215174086e-05
    2. ' for' → logprob: -10.500028610229492
    3. '   ' → logprob: -13.875028610229492
    4. '
' → logprob: -15.750028610229492
    5. '    
' → logprob: -17.750028610229492
    6. 'print' → logprob: -17.750028610229492
    7. '	for' → logprob: -18.125028610229492
    8. 'x' → logprob: -18.625028610229492
    9. '       ' → logprob: -18.750028610229492
    10. '```' → logprob: -19.375028610229492

Token 1466: ' qui' (ID: 2780)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16579261422157288
    2. ' for' → logprob: -1.9157925844192505
    3. ' =' → logprob: -6.915792465209961
    4. '   ' → logprob: -7.040792465209961
    5. ' pour' → logprob: -7.290792465209961
    6. '=' → logprob: -7.290792465209961
    7. '#' → logprob: -7.790792465209961
    8. ' ' → logprob: -7.915792465209961
    9. '):
' → logprob: -8.790792465209961
    10. ')' → logprob: -8.915792465209961

Token 1467: ' montre' (ID: 56262)
  Prédit: ' permet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' permet' → logprob: -0.8634006381034851
    2. '#' → logprob: -1.7384006977081299
    3. ' permettra' → logprob: -2.11340069770813
    4. 'for' → logprob: -2.61340069770813
    5. 'print' → logprob: -3.48840069770813
    6. ' print' → logprob: -3.61340069770813
    7. ' for' → logprob: -3.73840069770813
    8. ':' → logprob: -3.98840069770813
    9. ' représente' → logprob: -4.238400459289551
    10. ' #' → logprob: -4.488400459289551

Token 1468: ' chaque' (ID: 21194)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.37161746621131897
    2. '*x' → logprob: -1.8716174364089966
    3. '(x' → logprob: -2.496617555618286
    4. '(*' → logprob: -3.246617555618286
    5. '*' → logprob: -3.496617555618286
    6. 'xy' → logprob: -6.496617317199707
    7. 'for' → logprob: -7.246617317199707
    8. '("{}' → logprob: -7.246617317199707
    9. 'f' → logprob: -7.371617317199707
    10. '#' → logprob: -8.121617317199707

Token 1469: ' opération' (ID: 86023)
  Prédit: 'operation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'operation' → logprob: -0.7677352428436279
    2. '(x' → logprob: -1.017735242843628
    3. ' operation' → logprob: -2.267735242843628
    4. 'x' → logprob: -3.767735242843628
    5. 'print' → logprob: -4.767735481262207
    6. ' ' → logprob: -4.892735481262207
    7. '
' → logprob: -5.267735481262207
    8. ' x' → logprob: -5.267735481262207
    9. '()' → logprob: -5.392735481262207
    10. '(' → logprob: -5.642735481262207

Token 1470: ' effectu' (ID: 100880)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2957042455673218
    2. '(x' → logprob: -1.4207042455673218
    3. '()' → logprob: -4.545704364776611
    4. '(' → logprob: -6.045704364776611
    5. '(*' → logprob: -7.420704364776611
    6. ' for' → logprob: -8.795703887939453
    7. '((' → logprob: -9.170703887939453
    8. '(i' → logprob: -9.295703887939453
    9. '("{}' → logprob: -9.295703887939453
    10. '()
' → logprob: -9.420703887939453

Token 1471: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.02270979806780815
    2. 'é' → logprob: -4.147709846496582
    3. 'ées' → logprob: -5.147709846496582
    4. 'és' → logprob: -7.647709846496582
    5. 'e' → logprob: -8.272709846496582
    6. 'ee' → logprob: -9.772709846496582
    7. 'print' → logprob: -11.397709846496582
    8. 'er' → logprob: -11.522709846496582
    9. '```' → logprob: -12.147709846496582
    10. '#' → logprob: -12.272709846496582

Token 1472: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009249278344213963
    2. '(x' → logprob: -4.759249210357666
    3. ' for' → logprob: -8.259249687194824
    4. ':
' → logprob: -8.259249687194824
    5. ':' → logprob: -10.384249687194824
    6. '(' → logprob: -11.009249687194824
    7. '
' → logprob: -11.259249687194824
    8. 'with' → logprob: -11.509249687194824
    9. 'print' → logprob: -11.759249687194824
    10. 'x' → logprob: -11.884249687194824

Token 1473: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: 0.0
    2. '```' → logprob: -22.0
    3. ' for' → logprob: -22.125
    4. '``' → logprob: -26.125
    5. '	for' → logprob: -26.25
    6. '
' → logprob: -26.375
    7. 'from' → logprob: -29.5
    8. 'print' → logprob: -29.5
    9. 'For' → logprob: -30.25
    10. 'while' → logprob: -30.375

Token 1474: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03805446997284889
    2. ' x' → logprob: -3.2880544662475586
    3. '(x' → logprob: -11.538054466247559
    4. ' ' → logprob: -13.663054466247559
    5. 'xy' → logprob: -13.788054466247559
    6. '	x' → logprob: -14.538054466247559
    7. ' (' → logprob: -14.913054466247559
    8. '(' → logprob: -15.913054466247559
    9. '   ' → logprob: -17.163055419921875
    10. '_x' → logprob: -17.163055419921875

Token 1475: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011737978784367442
    2. ',y' → logprob: -6.751173973083496
    3. ' ,' → logprob: -12.626173973083496
    4. ',
' → logprob: -16.25117301940918
    5. ',Y' → logprob: -16.87617301940918
    6. 'y' → logprob: -17.12617301940918
    7. ',\
' → logprob: -17.50117301940918
    8. ',",' → logprob: -17.50117301940918
    9. ',_' → logprob: -17.87617301940918
    10. ',v' → logprob: -18.00117301940918

Token 1476: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0001234428636962548
    2. ' y' → logprob: -9.000123023986816
    3. '	y' → logprob: -18.625123977661133
    4. 'Y' → logprob: -21.250123977661133
    5. 'y's' → logprob: -21.375123977661133
    6. ' ' → logprob: -22.375123977661133
    7. '‘y' → logprob: -22.500123977661133
    8. '   ' → logprob: -22.625123977661133
    9. ''y' → logprob: -22.875123977661133
    10. '  ' → logprob: -23.000123977661133

Token 1477: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.31329289078712463
    2. ' in' → logprob: -1.3132928609848022
    3. ',' → logprob: -11.313292503356934
    4. 'print' → logprob: -12.063292503356934
    5. '	in' → logprob: -12.188292503356934
    6. '   ' → logprob: -13.188292503356934
    7. ')' → logprob: -13.563292503356934
    8. '_in' → logprob: -14.438292503356934
    9. '.' → logprob: -14.438292503356934
    10. '  ' → logprob: -14.563292503356934

Token 1478: ' XY' (ID: 71987)
  Prédit: 'XY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XY' → logprob: -0.008615635335445404
    2. ' XY' → logprob: -4.758615493774414
    3. 'print' → logprob: -14.633615493774414
    4. 'X' → logprob: -14.883615493774414
    5. ' ' → logprob: -16.133615493774414
    6. 'xy' → logprob: -17.133615493774414
    7. '  ' → logprob: -17.133615493774414
    8. '(X' → logprob: -17.758615493774414
    9. ' print' → logprob: -17.758615493774414
    10. '   ' → logprob: -18.258615493774414

Token 1479: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006978686898946762
    2. ':
' → logprob: -5.131978511810303
    3. 'print' → logprob: -6.881978511810303
    4. ' print' → logprob: -12.381978988647461
    5. '(print' → logprob: -12.381978988647461
    6. '.print' → logprob: -12.631978988647461
    7. '=' → logprob: -12.756978988647461
    8. '():
' → logprob: -12.881978988647461
    9. '	print' → logprob: -14.006978988647461
    10. '_print' → logprob: -14.006978988647461

Token 1480: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00022964231902733445
    2. 'print' → logprob: -8.625229835510254
    3. '```' → logprob: -10.500229835510254
    4. ':
' → logprob: -12.000229835510254
    5. ':' → logprob: -12.000229835510254
    6. ' print' → logprob: -12.250229835510254
    7. '	print' → logprob: -12.750229835510254
    8. '#print' → logprob: -14.875229835510254
    9. '    
' → logprob: -15.125229835510254
    10. '#' → logprob: -15.125229835510254

Token 1481: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0010549608850851655
    2. ' print' → logprob: -7.251054763793945
    3. '   ' → logprob: -8.001054763793945
    4. '	print' → logprob: -11.626054763793945
    5. '```' → logprob: -14.376054763793945
    6. '.print' → logprob: -16.501054763793945
    7. '#print' → logprob: -16.751054763793945
    8. '(print' → logprob: -17.501054763793945
    9. '  ' → logprob: -17.751054763793945
    10. '       ' → logprob: -17.876054763793945

Token 1482: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0004558175278361887
    2. 'x' → logprob: -7.750455856323242
    3. '(f' → logprob: -10.625455856323242
    4. '(' → logprob: -14.500455856323242
    5. 'f' → logprob: -15.375455856323242
    6. ' x' → logprob: -16.250455856323242
    7. '("{}' → logprob: -17.875455856323242
    8. '{x' → logprob: -18.500455856323242
    9. '('{}' → logprob: -19.750455856323242
    10. '	x' → logprob: -20.250455856323242

Token 1483: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006668062414973974
    2. ' ,' → logprob: -7.375666618347168
    3. ',y' → logprob: -10.125666618347168
    4. ' y' → logprob: -16.250667572021484
    5. ',end' → logprob: -16.500667572021484
    6. ')' → logprob: -17.250667572021484
    7. '   ' → logprob: -18.625667572021484
    8. ',
' → logprob: -19.000667572021484
    9. ',p' → logprob: -19.125667572021484
    10. 'y' → logprob: -19.375667572021484

Token 1484: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0019286326132714748
    2. ' y' → logprob: -6.251928806304932
    3. '	y' → logprob: -18.626928329467773
    4. ')' → logprob: -19.251928329467773
    5. '    ' → logprob: -19.876928329467773
    6. '   ' → logprob: -19.876928329467773
    7. 'x' → logprob: -19.876928329467773
    8. ' ' → logprob: -20.876928329467773
    9. ')y' → logprob: -21.001928329467773
    10. ''y' → logprob: -21.751928329467773

Token 1485: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. ')
' → logprob: -13.625001907348633
    3. ' )' → logprob: -14.875001907348633
    4. '())' → logprob: -16.750001907348633
    5. '()' → logprob: -17.125001907348633
    6. '))' → logprob: -17.875001907348633
    7. ')`' → logprob: -19.125001907348633
    8. '),' → logprob: -19.250001907348633
    9. ')#' → logprob: -19.250001907348633
    10. ')}' → logprob: -19.375001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1483
Tokens correctement prédits (1ère position, stricte): 292
Tokens correctement prédits (1ère position, avec adaptation): 322
Tokens correctement prédits (top 10): 830
Précision stricte (1ère position): 19.69%
Précision adaptée (1ère position): 21.71%
Précision (top 10): 55.97%
================================================================================
