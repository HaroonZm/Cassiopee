================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:10:37
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**9)
INF=10**18
MOD=10**9+7
input=lambda: sys.stdin.readline().rstrip()
YesNo=lambda b: bool([print('Yes')] if b else print('No'))
YESNO=lambda b: bool([print('YES')] if b else print('NO'))
int1=lambda x:int(x)-1

def main():
    N=int(input())
    a=list(map(int,input().split()))
    class BIT:
        def __init__(self,n):
            self.num=n
            self.dat=[0]*(self.num+1)
            self.depth=n.bit_length()
        def add(self,i,x):
            i+=1
            while i<=self.num:
                self.dat[i]+=x
                i+=i&-i
        def sum(self,i):
            i+=1
            s=0
            while i>0:
                s+=self.dat[i]
                i-=i&-i
            return s
        def lower_bound(self,x):
            sum_=0
            pos=0
            for i in range(self.depth,-1,-1):
                k=pos+(1<<i)
                if k<=self.num and sum_+self.dat[k]<x:
                    sum_+=self.dat[k]
                    pos+=1<<i
            return pos, sum_
    def nibutan(ok,ng):
        while abs(ok-ng) > 1:
            mid = (ok + ng) // 2
            if solve(mid):
                ok = mid
            else:
                ng = mid
        return ok
    def solve(mid):
        aa=[1 if x>=mid else -1 for x in a]
        b=BIT(N*2+1)
        c=0
        s=N
        b.add(s,1)
        for x in aa:
            s+=x
            c+=b.sum(s)
            b.add(s,1)
        return c>=-(-N*(N+1)//2//2)
    print(nibutan(1,10**9+1))

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3437388837337494
    2. '.' → logprob: -1.5937389135360718
    3. '<|end|>' → logprob: -2.9687387943267822
    4. '\' → logprob: -4.468739032745361
    5. 'import' → logprob: -5.093739032745361
    6. 'newline' → logprob: -5.093739032745361
    7. '<|end|>' → logprob: -5.968739032745361
    8. '' → logprob: -5.968739032745361
    9. '\r' → logprob: -6.093739032745361
    10. '
' → logprob: -6.343739032745361

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -5.1689596148207784e-05
    2. ' .' → logprob: -11.125051498413086
    3. '.import' → logprob: -11.750051498413086
    4. '.readline' → logprob: -12.625051498413086
    5. '[' → logprob: -12.875051498413086
    6. '.user' → logprob: -12.875051498413086
    7. '.`' → logprob: -13.250051498413086
    8. '.stdout' → logprob: -13.500051498413086
    9. '.exit' → logprob: -13.500051498413086
    10. '.next' → logprob: -13.875051498413086

Token 5: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trace' → logprob: -0.3824406564235687
    2. 't' → logprob: -2.5074405670166016
    3. '_' → logprob: -2.6324405670166016
    4. 'set' → logprob: -3.2574405670166016
    5. '_trace' → logprob: -3.3824405670166016
    6. 'x' → logprob: -3.7574405670166016
    7. 's' → logprob: -4.507440567016602
    8. 'default' → logprob: -5.007440567016602
    9. 'sys' → logprob: -5.132440567016602
    10. 'ex' → logprob: -5.507440567016602

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0014520210679620504
    2. 'ursive' → logprob: -6.7514519691467285
    3. 'ur' → logprob: -9.376452445983887
    4. 'urs' → logprob: -10.001452445983887
    5. '_' → logprob: -10.126452445983887
    6. 'limit' → logprob: -10.376452445983887
    7. '_limit' → logprob: -11.001452445983887
    8. 'urf' → logprob: -11.251452445983887
    9. 't' → logprob: -11.626452445983887
    10. 'ursor' → logprob: -11.876452445983887

Token 7: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.314270555973053
    2. '_limit' → logprob: -1.3142704963684082
    3. '_depth' → logprob: -7.189270496368408
    4. 'depth' → logprob: -8.939270973205566
    5. ' limit' → logprob: -9.939270973205566
    6. 'lim' → logprob: -10.314270973205566
    7. '_stack' → logprob: -12.189270973205566
    8. '_lim' → logprob: -12.314270973205566
    9. '(limit' → logprob: -12.314270973205566
    10. '-limit' → logprob: -12.939270973205566

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.5358694731257856e-05
    2. '(
' → logprob: -11.000035285949707
    3. ' (' → logprob: -11.500035285949707
    4. '(

' → logprob: -13.000035285949707
    5. '("("' → logprob: -13.250035285949707
    6. '('' → logprob: -13.750035285949707
    7. '((' → logprob: -14.125035285949707
    8. '(.' → logprob: -14.625035285949707
    9. '```' → logprob: -14.750035285949707
    10. '(()' → logprob: -15.375035285949707

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.10064796358346939
    2. '100' → logprob: -2.3506479263305664
    3. ' ' → logprob: -8.100647926330566
    4. '500' → logprob: -9.850647926330566
    5. '300' → logprob: -9.975647926330566
    6. '250' → logprob: -10.725647926330566
    7. '  ' → logprob: -12.350647926330566
    8. '   ' → logprob: -12.600647926330566
    9. '200' → logprob: -12.975647926330566
    10. '999' → logprob: -13.100647926330566

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007129970006644726
    2. '00' → logprob: -5.757130146026611
    3. '000' → logprob: -5.757130146026611
    4. '4' → logprob: -7.382130146026611
    5. '6' → logprob: -9.007129669189453
    6. '5' → logprob: -11.507129669189453
    7. '```' → logprob: -12.007129669189453
    8. ')' → logprob: -12.257129669189453
    9. '3' → logprob: -12.382129669189453
    10. '**' → logprob: -12.382129669189453

Token 11: '9' (ID: 24)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00714417127892375
    2. '9' → logprob: -5.632143974304199
    3. '6' → logprob: -5.757143974304199
    4. '8' → logprob: -7.882143974304199
    5. '```' → logprob: -15.7571439743042
    6. ' ' → logprob: -16.507144927978516
    7. '(' → logprob: -17.132144927978516
    8. '5' → logprob: -17.757144927978516
    9. '``' → logprob: -18.257144927978516
    10. '999' → logprob: -18.382144927978516

Token 12: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.547789674485102e-05
    2. '))' → logprob: -10.375035285949707
    3. ' )' → logprob: -12.500035285949707
    4. ')))' → logprob: -16.000036239624023
    5. '`)' → logprob: -16.000036239624023
    6. ')
' → logprob: -16.125036239624023
    7. ')`' → logprob: -16.375036239624023
    8. ' ' → logprob: -17.125036239624023
    9. '）' → logprob: -17.625036239624023
    10. '')' → logprob: -18.375036239624023

Token 13: 'INF' (ID: 64358)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.9691815376281738
    2. ')' → logprob: -1.5941815376281738
    3. '
' → logprob: -1.5941815376281738
    4. '#' → logprob: -2.594181537628174
    5. '\n' → logprob: -2.969181537628174
    6. '(' → logprob: -3.969181537628174
    7. 'def' → logprob: -4.094181537628174
    8. '```' → logprob: -4.469181537628174
    9. '' → logprob: -4.594181537628174
    10. '(
' → logprob: -4.594181537628174

Token 14: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05708255618810654
    2. '=' → logprob: -3.0570826530456543
    3. ')' → logprob: -5.182082653045654
    4. '_' → logprob: -6.682082653045654
    5. ' )' → logprob: -7.557082653045654
    6. '.' → logprob: -7.682082653045654
    7. ' ' → logprob: -8.807082176208496
    8. ' =)' → logprob: -8.932082176208496
    9. ',' → logprob: -9.057082176208496
    10. ' .' → logprob: -10.182082176208496

Token 15: '10' (ID: 702)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20774473249912262
    2. '10' → logprob: -1.7077447175979614
    3. 'float' → logprob: -5.707744598388672
    4. ' float' → logprob: -5.832744598388672
    5. '1' → logprob: -10.207744598388672
    6. 'int' → logprob: -11.457744598388672
    7. '100' → logprob: -12.082744598388672
    8. ' int' → logprob: -12.582744598388672
    9. '  ' → logprob: -13.707744598388672
    10. '    ' → logprob: -13.957744598388672

Token 16: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2776415348052979
    2. '**' → logprob: -1.2776415348052979
    3. '9' → logprob: -1.4026415348052979
    4. '6' → logprob: -2.027641534805298
    5. '7' → logprob: -3.152641534805298
    6. '8' → logprob: -3.902641534805298
    7. '5' → logprob: -7.027641296386719
    8. '00' → logprob: -8.152641296386719
    9. '10' → logprob: -8.277641296386719
    10. '1' → logprob: -8.777641296386719

Token 17: '18' (ID: 1157)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.29136812686920166
    2. '18' → logprob: -1.9163681268692017
    3. '15' → logprob: -2.666368007659912
    4. '10' → logprob: -3.666368007659912
    5. '12' → logprob: -4.666368007659912
    6. '16' → logprob: -7.791368007659912
    7. '14' → logprob: -8.04136848449707
    8. '11' → logprob: -9.04136848449707
    9. '7' → logprob: -9.54136848449707
    10. '13' → logprob: -9.54136848449707

Token 18: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.049837518483400345
    2. '
' → logprob: -3.924837589263916
    3. '' → logprob: -4.549837589263916
    4. '

' → logprob: -5.299837589263916
    5. '\n' → logprob: -5.674837589263916
    6. '\' → logprob: -5.924837589263916
    7. '+' → logprob: -6.174837589263916
    8. '```' → logprob: -6.424837589263916
    9. ' 
' → logprob: -6.799837589263916
    10. '+
' → logprob: -6.924837589263916

Token 19: 'MOD' (ID: 52135)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3477659821510315
    2. '
' → logprob: -1.4727659225463867
    3. 'dp' → logprob: -3.9727659225463867
    4. '
' → logprob: -4.097765922546387
    5. '' → logprob: -4.347765922546387
    6. 'n' → logprob: -5.222765922546387
    7. '```' → logprob: -6.472765922546387
    8. '\' → logprob: -6.472765922546387
    9. '

' → logprob: -6.722765922546387
    10. '\n' → logprob: -6.972765922546387

Token 20: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42892223596572876
    2. '=' → logprob: -1.053922176361084
    3. ' ' → logprob: -8.553922653198242
    4. ' =)' → logprob: -11.553922653198242
    5. '_' → logprob: -12.053922653198242
    6. ' =
' → logprob: -12.428922653198242
    7. '=

' → logprob: -13.553922653198242
    8. ')' → logprob: -13.553922653198242
    9. '<|end|>' → logprob: -13.678922653198242
    10. '_=' → logprob: -13.928922653198242

Token 21: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.006747343111783266
    2. ' ' → logprob: -5.006747245788574
    3. '100' → logprob: -10.381747245788574
    4. '1' → logprob: -14.631747245788574
    5. '998' → logprob: -14.756747245788574
    6. '(' → logprob: -15.506747245788574
    7. ' (' → logprob: -17.75674819946289
    8. 'int' → logprob: -19.13174819946289
    9. '2' → logprob: -19.25674819946289
    10. '(int' → logprob: -20.00674819946289

Token 22: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0009013348608277738
    2. '**' → logprob: -7.375901222229004
    3. '09' → logprob: -8.375901222229004
    4. ' ' → logprob: -11.000901222229004
    5. '7' → logprob: -11.125901222229004
    6. '```' → logprob: -12.250901222229004
    7. '0' → logprob: -13.125901222229004
    8. '4' → logprob: -13.375901222229004
    9. '+' → logprob: -13.500901222229004
    10. '6' → logprob: -14.250901222229004

Token 23: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.6240566083070007e-06
    2. '09' → logprob: -13.750001907348633
    3. '+' → logprob: -15.250001907348633
    4. '10' → logprob: -15.875001907348633
    5. '```' → logprob: -16.500001907348633
    6. ' ' → logprob: -16.875001907348633
    7. '18' → logprob: -17.125001907348633
    8. '19' → logprob: -18.500001907348633
    9. '12' → logprob: -18.750001907348633
    10. '15' → logprob: -19.500001907348633

Token 24: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.000561969296541065
    2. '7' → logprob: -7.5005621910095215
    3. ' +' → logprob: -12.000561714172363
    4. '＋' → logprob: -13.500561714172363
    5. '```' → logprob: -14.375561714172363
    6. '+
' → logprob: -14.625561714172363
    7. '+

' → logprob: -16.50056266784668
    8. '\' → logprob: -17.00056266784668
    9. ' ' → logprob: -17.37556266784668
    10. '+</' → logprob: -17.37556266784668

Token 25: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -5.512236498361744e-07
    2. '+' → logprob: -14.500000953674316
    3. ' ' → logprob: -17.625
    4. '9' → logprob: -18.125
    5. '07' → logprob: -18.25
    6. '```' → logprob: -18.375
    7. '17' → logprob: -19.625
    8. '79' → logprob: -20.0
    9. '   ' → logprob: -20.25
    10. '37' → logprob: -20.5

Token 26: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1674538552761078
    2. '

' → logprob: -2.5424537658691406
    3. 'def' → logprob: -2.6674537658691406
    4. '
' → logprob: -6.417453765869141
    5. '' → logprob: -6.542453765869141
    6. 'n' → logprob: -6.917453765869141
    7. 'import' → logprob: -7.042453765869141
    8. '```' → logprob: -7.417453765869141
    9. '#' → logprob: -8.91745376586914
    10. '\n' → logprob: -9.66745376586914

Token 27: 'input' (ID: 2586)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8973143100738525
    2. '

' → logprob: -1.2723143100738525
    3. 'def' → logprob: -1.2723143100738525
    4. '```' → logprob: -3.7723143100738525
    5. '' → logprob: -6.022314071655273
    6. '\' → logprob: -6.397314071655273
    7. '
' → logprob: -6.522314071655273
    8. '\n' → logprob: -7.397314071655273
    9. ' def' → logprob: -7.647314071655273
    10. '#' → logprob: -8.147314071655273

Token 28: '=lambda' (ID: 64865)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12024159729480743
    2. '(' → logprob: -2.495241641998291
    3. '.' → logprob: -4.620241641998291
    4. '=' → logprob: -4.995241641998291
    5. '().' → logprob: -5.495241641998291
    6. ' =' → logprob: -5.620241641998291
    7. '_data' → logprob: -5.870241641998291
    8. 'data' → logprob: -6.745241641998291
    9. '```' → logprob: -6.995241641998291
    10. ')' → logprob: -7.745241641998291

Token 29: ':' (ID: 25)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -1.0274087190628052
    2. ' sys' → logprob: -1.5274087190628052
    3. ' ' → logprob: -1.6524087190628052
    4. ':' → logprob: -1.9024087190628052
    5. 'input' → logprob: -3.4024085998535156
    6. '<|end|>' → logprob: -3.6524085998535156
    7. '()' → logprob: -5.152408599853516
    8. 'sys' → logprob: -5.402408599853516
    9. '():' → logprob: -6.402408599853516
    10. ' :' → logprob: -6.402408599853516

Token 30: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.2843710780143738
    2. ' sys' → logprob: -1.5343711376190186
    3. 'input' → logprob: -3.5343711376190186
    4. ' input' → logprob: -5.9093708992004395
    5. 'stdin' → logprob: -10.909371376037598
    6. '=sys' → logprob: -12.534371376037598
    7. 'raw' → logprob: -12.659371376037598
    8. 'str' → logprob: -13.659371376037598
    9. '	sys' → logprob: -14.159371376037598
    10. '(sys' → logprob: -14.659371376037598

Token 31: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00018506382184568793
    2. '.stdout' → logprob: -9.250185012817383
    3. '.' → logprob: -9.500185012817383
    4. '.readline' → logprob: -11.375185012817383
    5. '.std' → logprob: -14.125185012817383
    6. 'stdin' → logprob: -14.500185012817383
    7. '.argv' → logprob: -14.625185012817383
    8. '.stderr' → logprob: -14.750185012817383
    9. '.input' → logprob: -15.500185012817383
    10. ' stdin' → logprob: -16.250185012817383

Token 32: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.282920129597187e-05
    2. '.' → logprob: -12.000012397766113
    3. '.read' → logprob: -12.125012397766113
    4. 'read' → logprob: -14.125012397766113
    5. ' readline' → logprob: -15.250012397766113
    6. '.buffer' → logprob: -15.875012397766113
    7. '.readlines' → logprob: -16.75001335144043
    8. 'buffer' → logprob: -17.50001335144043
    9. '<|end|>' → logprob: -18.62501335144043
    10. '_read' → logprob: -18.75001335144043

Token 33: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.14273850619792938
    2. '()' → logprob: -2.0177385807037354
    3. '()\' → logprob: -10.392738342285156
    4. '()
' → logprob: -11.267738342285156
    5. '()<' → logprob: -12.267738342285156
    6. '()

' → logprob: -12.642738342285156
    7. '(' → logprob: -13.017738342285156
    8. '().__' → logprob: -13.267738342285156
    9. 'rstrip' → logprob: -14.142738342285156
    10. '())' → logprob: -14.267738342285156

Token 34: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.06197351589798927
    2. 'rstrip' → logprob: -2.8119735717773438
    3. ' strip' → logprob: -12.436973571777344
    4. 'rst' → logprob: -13.936973571777344
    5. '-strip' → logprob: -14.686973571777344
    6. 'split' → logprob: -15.686973571777344
    7. 'str' → logprob: -15.811973571777344
    8. 'r' → logprob: -16.311973571777344
    9. '_strip' → logprob: -16.561973571777344
    10. 'replace' → logprob: -16.811973571777344

Token 35: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2826167643070221
    2. '(' → logprob: -2.1576168537139893
    3. 'def' → logprob: -2.4076168537139893
    4. '(
' → logprob: -4.28261661529541
    5. '()

' → logprob: -5.03261661529541
    6. '
' → logprob: -5.15761661529541
    7. '()
' → logprob: -5.40761661529541
    8. ')' → logprob: -6.03261661529541
    9. '@' → logprob: -6.65761661529541
    10. '(

' → logprob: -6.78261661529541

Token 36: 'Yes' (ID: 13022)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05769781023263931
    2. 'n' → logprob: -2.9326977729797363
    3. 'N' → logprob: -6.432697772979736
    4. 'from' → logprob: -7.807697772979736
    5. 'class' → logprob: -8.057698249816895
    6. 'for' → logprob: -8.682698249816895
    7. 'a' → logprob: -9.432698249816895
    8. '(n' → logprob: -10.057698249816895
    9. 'd' → logprob: -10.182698249816895
    10. '#' → logprob: -10.307698249816895

Token 37: 'No' (ID: 3160)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6510411500930786
    2. '=' → logprob: -0.9010411500930786
    3. '()' → logprob: -3.526041030883789
    4. 'No' → logprob: -4.526041030883789
    5. '<|end|>' → logprob: -4.526041030883789
    6. ' ' → logprob: -5.026041030883789
    7. ',' → logprob: -5.651041030883789
    8. '=True' → logprob: -6.276041030883789
    9. '=False' → logprob: -6.401041030883789
    10. ':' → logprob: -6.776041030883789

Token 38: '=lambda' (ID: 64865)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4851909875869751
    2. '(' → logprob: -1.110190987586975
    3. '(None' → logprob: -4.7351908683776855
    4. '("")' → logprob: -4.9851908683776855
    5. '[:]' → logprob: -4.9851908683776855
    6. ' ' → logprob: -5.1101908683776855
    7. '[]' → logprob: -5.1101908683776855
    8. ' =' → logprob: -5.4851908683776855
    9. '=' → logprob: -6.3601908683776855
    10. 'def' → logprob: -6.8601908683776855

Token 39: ' b' (ID: 287)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.5366703271865845
    2. ' lambda' → logprob: -0.9116703271865845
    3. ':' → logprob: -5.786670207977295
    4. ' x' → logprob: -5.786670207977295
    5. 'print' → logprob: -5.911670207977295
    6. ' ' → logprob: -6.036670207977295
    7. 'x' → logprob: -6.786670207977295
    8. ' print' → logprob: -8.661670684814453
    9. ' a' → logprob: -8.786670684814453
    10. '(lambda' → logprob: -9.161670684814453

Token 40: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0030917972326278687
    2. ':"' → logprob: -6.253091812133789
    3. ':['' → logprob: -7.753091812133789
    4. ':["' → logprob: -8.128091812133789
    5. ':'' → logprob: -8.753091812133789
    6. ' :' → logprob: -9.128091812133789
    7. ':b' → logprob: -9.378091812133789
    8. ':[' → logprob: -10.128091812133789
    9. ':(' → logprob: -10.878091812133789
    10. ':
' → logprob: -12.628091812133789

Token 41: ' bool' (ID: 3792)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1846502274274826
    2. ' "' → logprob: -2.059650182723999
    3. ''' → logprob: -3.309650182723999
    4. 'print' → logprob: -6.434650421142578
    5. '("' → logprob: -6.934650421142578
    6. ' '' → logprob: -7.184650421142578
    7. ' ("' → logprob: -7.434650421142578
    8. ' print' → logprob: -8.059650421142578
    9. ' ' → logprob: -8.684650421142578
    10. '["' → logprob: -9.934650421142578

Token 42: '([' (ID: 5194)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.6765909194946289
    2. '('' → logprob: -1.176590919494629
    3. '(' → logprob: -2.176590919494629
    4. '(b' → logprob: -2.801590919494629
    5. 'To' → logprob: -6.551590919494629
    6. '(['' → logprob: -6.801590919494629
    7. '(["' → logprob: -6.926590919494629
    8. 'Yes' → logprob: -6.926590919494629
    9. '(True' → logprob: -7.426590919494629
    10. '"' → logprob: -8.051590919494629

Token 43: 'print' (ID: 1598)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.16287943720817566
    2. ''' → logprob: -1.912879467010498
    3. 'print' → logprob: -7.287879467010498
    4. '"No' → logprob: -7.662879467010498
    5. ' "' → logprob: -8.03787899017334
    6. 'b' → logprob: -9.41287899017334
    7. '"N' → logprob: -9.66287899017334
    8. ' '' → logprob: -9.66287899017334
    9. ''b' → logprob: -9.78787899017334
    10. '["' → logprob: -9.78787899017334

Token 44: '('' (ID: 706)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.00512014189735055
    2. '('' → logprob: -5.505120277404785
    3. '(' → logprob: -6.880120277404785
    4. '"' → logprob: -12.255120277404785
    5. ' ("' → logprob: -13.130120277404785
    6. '(("' → logprob: -13.255120277404785
    7. '(["' → logprob: -13.755120277404785
    8. '((' → logprob: -14.005120277404785
    9. '(-' → logprob: -14.255120277404785
    10. '(
' → logprob: -15.130120277404785

Token 45: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.24932609498500824
    2. '"' → logprob: -2.24932599067688
    3. ''' → logprob: -2.37432599067688
    4. 'YES' → logprob: -3.87432599067688
    5. '('' → logprob: -7.624326229095459
    6. 'No' → logprob: -8.1243257522583
    7. 'Y' → logprob: -9.4993257522583
    8. '("' → logprob: -9.9993257522583
    9. '"No' → logprob: -9.9993257522583
    10. 'Ye' → logprob: -10.2493257522583

Token 46: '')]' (ID: 94377)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.4372781813144684
    2. ''' → logprob: -1.062278151512146
    3. ')' → logprob: -4.9372782707214355
    4. 'if' → logprob: -7.3122782707214355
    5. '','' → logprob: -8.437277793884277
    6. '')]' → logprob: -8.562277793884277
    7. ' if' → logprob: -9.187277793884277
    8. ''),'' → logprob: -10.062277793884277
    9. ''or' → logprob: -10.437277793884277
    10. ''),' → logprob: -10.937277793884277

Token 47: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1658250242471695
    2. '(' → logprob: -2.165825128555298
    3. ' if' → logprob: -4.040824890136719
    4. '(if' → logprob: -5.040824890136719
    5. ')' → logprob: -5.290824890136719
    6. '(b' → logprob: -5.415824890136719
    7. '()' → logprob: -6.290824890136719
    8. '('' → logprob: -7.665824890136719
    9. '(print' → logprob: -7.790824890136719
    10. ',' → logprob: -8.165824890136719

Token 48: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.004078997299075127
    2. ' b' → logprob: -5.5040788650512695
    3. ' ' → logprob: -14.87907886505127
    4. 'not' → logprob: -16.504079818725586
    5. ')b' → logprob: -16.879079818725586
    6. ' not' → logprob: -17.004079818725586
    7. '(b' → logprob: -17.254079818725586
    8. '	b' → logprob: -17.879079818725586
    9. '  ' → logprob: -18.254079818725586
    10. ' ' → logprob: -18.379079818725586

Token 49: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5759716629981995
    2. ' else' → logprob: -0.8259716629981995
    3. ')' → logprob: -10.950971603393555
    4. ' ' → logprob: -11.575971603393555
    5. '	else' → logprob: -13.075971603393555
    6. '()' → logprob: -13.825971603393555
    7. '[' → logprob: -14.325971603393555
    8. '  ' → logprob: -15.200971603393555
    9. '_else' → logprob: -15.325971603393555
    10. '==' → logprob: -15.450971603393555

Token 50: ' print' (ID: 2123)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00920239370316267
    2. ' [' → logprob: -4.759202480316162
    3. '['' → logprob: -8.009202003479004
    4. 'print' → logprob: -8.384202003479004
    5. ' ' → logprob: -11.884202003479004
    6. ' print' → logprob: -12.134202003479004
    7. '(print' → logprob: -12.259202003479004
    8. ' ['' → logprob: -12.384202003479004
    9. ' ' → logprob: -14.009202003479004
    10. '  ' → logprob: -14.134202003479004

Token 51: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00020473242329899222
    2. '(' → logprob: -8.500205039978027
    3. ' ('' → logprob: -13.750205039978027
    4. '("' → logprob: -17.25020408630371
    5. '(('' → logprob: -17.25020408630371
    6. ' (' → logprob: -17.37520408630371
    7. ' ' → logprob: -17.75020408630371
    8. '(

' → logprob: -18.25020408630371
    9. '(
' → logprob: -18.62520408630371
    10. ')' → logprob: -18.87520408630371

Token 52: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.002245415700599551
    2. ''' → logprob: -6.1272454261779785
    3. ' No' → logprob: -9.75224494934082
    4. '"No' → logprob: -15.00224494934082
    5. 'NO' → logprob: -15.12724494934082
    6. '('' → logprob: -15.12724494934082
    7. ' ' → logprob: -15.25224494934082
    8. 'Yes' → logprob: -15.25224494934082
    9. 'no' → logprob: -16.00224494934082
    10. ' '' → logprob: -16.12724494934082

Token 53: ''))
' (ID: 15277)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5281274914741516
    2. '))' → logprob: -0.9031274914741516
    3. ''))' → logprob: -5.528127670288086
    4. '')' → logprob: -7.903127670288086
    5. ')))' → logprob: -8.528127670288086
    6. ''])' → logprob: -8.903127670288086
    7. ')])' → logprob: -9.028127670288086
    8. '])' → logprob: -9.528127670288086
    9. '']))' → logprob: -9.778127670288086
    10. ')]' → logprob: -11.153127670288086

Token 54: 'YES' (ID: 31958)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14967313408851624
    2. ')' → logprob: -2.7746732234954834
    3. '(' → logprob: -3.1496732234954834
    4. '#' → logprob: -4.649672985076904
    5. 'n' → logprob: -5.524672985076904
    6. '
' → logprob: -5.524672985076904
    7. '(n' → logprob: -5.774672985076904
    8. 'a' → logprob: -5.899672985076904
    9. '<|end|>' → logprob: -6.524672985076904
    10. '(
' → logprob: -6.524672985076904

Token 55: 'NO' (ID: 14695)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5084195137023926
    2. 'No' → logprob: -1.0084195137023926
    3. ' =' → logprob: -4.133419513702393
    4. 'NO' → logprob: -4.883419513702393
    5. '_NO' → logprob: -5.883419513702393
    6. '/' → logprob: -6.383419513702393
    7. 'N' → logprob: -6.883419513702393
    8. '=lambda' → logprob: -7.008419513702393
    9. 'OR' → logprob: -7.508419513702393
    10. '/no' → logprob: -7.883419513702393

Token 56: '=lambda' (ID: 64865)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9203172326087952
    2. '=' → logprob: -1.0453171730041504
    3. '=lambda' → logprob: -1.4203171730041504
    4. '(lambda' → logprob: -5.67031717300415
    5. ' =' → logprob: -5.92031717300415
    6. '=(' → logprob: -6.92031717300415
    7. ')' → logprob: -7.79531717300415
    8. '<|end|>' → logprob: -9.045317649841309
    9. 'lambda' → logprob: -9.295317649841309
    10. ')=' → logprob: -9.670317649841309

Token 57: ' b' (ID: 287)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.4974943697452545
    2. 'b' → logprob: -1.4974943399429321
    3. ' lambda' → logprob: -1.9974943399429321
    4. ' b' → logprob: -3.4974944591522217
    5. 'l' → logprob: -7.247494220733643
    6. 'Yes' → logprob: -7.872494220733643
    7. 'bool' → logprob: -8.2474946975708
    8. '(lambda' → logprob: -8.4974946975708
    9. ' Yes' → logprob: -8.7474946975708
    10. ' ' → logprob: -8.9974946975708

Token 58: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0014032063772901893
    2. ' :' → logprob: -6.751403331756592
    3. '=' → logprob: -9.501402854919434
    4. 'b' → logprob: -10.126402854919434
    5. ':[' → logprob: -10.376402854919434
    6. ':b' → logprob: -10.876402854919434
    7. ':
' → logprob: -11.251402854919434
    8. ':(' → logprob: -11.376402854919434
    9. '=lambda' → logprob: -11.876402854919434
    10. ' b' → logprob: -12.251402854919434

Token 59: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.925451397895813
    2. ''' → logprob: -1.425451397895813
    3. 'print' → logprob: -1.675451397895813
    4. ' bool' → logprob: -2.3004512786865234
    5. ' print' → logprob: -4.050451278686523
    6. ' '' → logprob: -4.050451278686523
    7. '"' → logprob: -4.300451278686523
    8. '['' → logprob: -4.675451278686523
    9. '('' → logprob: -5.050451278686523
    10. 'Yes' → logprob: -6.300451278686523

Token 60: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.014821809716522694
    2. '[' → logprob: -4.264822006225586
    3. '(print' → logprob: -7.764822006225586
    4. '(' → logprob: -9.389822006225586
    5. 'print' → logprob: -9.514822006225586
    6. '[b' → logprob: -10.264822006225586
    7. '([]' → logprob: -11.639822006225586
    8. '[list' → logprob: -12.014822006225586
    9. 'b' → logprob: -12.139822006225586
    10. '([
' → logprob: -12.264822006225586

Token 61: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.5776860184123507e-06
    2. '[' → logprob: -13.75000286102295
    3. '(print' → logprob: -14.12500286102295
    4. ' print' → logprob: -14.62500286102295
    5. 'printf' → logprob: -16.375001907348633
    6. '   ' → logprob: -16.625001907348633
    7. '#print' → logprob: -17.250001907348633
    8. '```' → logprob: -17.625001907348633
    9. 'sys' → logprob: -18.250001907348633
    10. '	print' → logprob: -18.375001907348633

Token 62: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00038360210601240396
    2. '("' → logprob: -8.125383377075195
    3. '(' → logprob: -9.375383377075195
    4. ' ('' → logprob: -13.875383377075195
    5. '(('' → logprob: -14.250383377075195
    6. ''' → logprob: -14.500383377075195
    7. '(['' → logprob: -15.625383377075195
    8. '(
' → logprob: -16.375383377075195
    9. '(i' → logprob: -16.875383377075195
    10. 'b' → logprob: -16.875383377075195

Token 63: 'YES' (ID: 31958)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0011792739387601614
    2. '"' → logprob: -6.876179218292236
    3. 'YES' → logprob: -9.126179695129395
    4. '('' → logprob: -10.626179695129395
    5. ' '' → logprob: -12.126179695129395
    6. ''S' → logprob: -13.001179695129395
    7. ')' → logprob: -13.876179695129395
    8. 'b' → logprob: -14.251179695129395
    9. '   ' → logprob: -14.376179695129395
    10. '
' → logprob: -15.001179695129395

Token 64: '')]' (ID: 94377)
  Prédit: '')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')]' → logprob: -0.0019625357817858458
    2. ')]' → logprob: -6.251962661743164
    3. '')' → logprob: -11.251962661743164
    4. '")]' → logprob: -11.501962661743164
    5. ''' → logprob: -12.001962661743164
    6. '']' → logprob: -13.126962661743164
    7. '']]' → logprob: -14.126962661743164
    8. ')' → logprob: -14.376962661743164
    9. ']' → logprob: -14.376962661743164
    10. '])]' → logprob: -14.376962661743164

Token 65: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.14891816675662994
    2. ')' → logprob: -2.0239181518554688
    3. 'if' → logprob: -5.773918151855469
    4. ' )' → logprob: -6.523918151855469
    5. '()' → logprob: -7.023918151855469
    6. ']' → logprob: -8.148918151855469
    7. ' b' → logprob: -8.773918151855469
    8. '(' → logprob: -9.023918151855469
    9. '(b' → logprob: -10.023918151855469
    10. '(if' → logprob: -10.523918151855469

Token 66: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.10020678490400314
    2. ' b' → logprob: -2.3502068519592285
    3. ')b' → logprob: -16.60020637512207
    4. ' ' → logprob: -17.47520637512207
    5. ' ' → logprob: -17.60020637512207
    6. '	b' → logprob: -18.47520637512207
    7. '>b' → logprob: -18.72520637512207
    8. '(b' → logprob: -18.85020637512207
    9. ' б' → logprob: -18.85020637512207
    10. 'True' → logprob: -19.35020637512207

Token 67: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.049470216035842896
    2. 'else' → logprob: -3.0494701862335205
    3. 'b' → logprob: -7.4244704246521
    4. ' b' → logprob: -8.174469947814941
    5. ' ' → logprob: -12.924469947814941
    6. ' ' → logprob: -14.549469947814941
    7. '	else' → logprob: -14.549469947814941
    8. '    ' → logprob: -16.299470901489258
    9. 'e' → logprob: -16.299470901489258
    10. '0' → logprob: -16.424470901489258

Token 68: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.313262403011322
    2. ' print' → logprob: -1.3132624626159668
    3. '[' → logprob: -15.063261985778809
    4. '(print' → logprob: -15.313261985778809
    5. ' ' → logprob: -16.063262939453125
    6. '  ' → logprob: -17.688262939453125
    7. '	print' → logprob: -17.688262939453125
    8. '.print' → logprob: -18.438262939453125
    9. '   ' → logprob: -18.938262939453125
    10. ' ' → logprob: -19.438262939453125

Token 69: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -5.5577775128767826e-06
    2. '(' → logprob: -12.125005722045898
    3. '("' → logprob: -17.6250057220459
    4. ' ('' → logprob: -18.1250057220459
    5. '(
' → logprob: -18.5000057220459
    6. ''' → logprob: -19.1250057220459
    7. ')' → logprob: -19.6250057220459
    8. '(('' → logprob: -19.6250057220459
    9. '(',' → logprob: -20.6250057220459
    10. '(

' → logprob: -20.8750057220459

Token 70: 'NO' (ID: 14695)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.3902033970225602e-05
    2. 'NO' → logprob: -11.750014305114746
    3. '('' → logprob: -12.250014305114746
    4. ''N' → logprob: -14.500014305114746
    5. ' '' → logprob: -15.500014305114746
    6. '''' → logprob: -16.25001335144043
    7. '   ' → logprob: -16.62501335144043
    8. ' ' → logprob: -16.87501335144043
    9. ''S' → logprob: -17.00001335144043
    10. '"' → logprob: -17.00001335144043

Token 71: ''))
' (ID: 15277)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.694735050201416
    2. ''])' → logprob: -1.444735050201416
    3. ')' → logprob: -1.694735050201416
    4. '')' → logprob: -3.194735050201416
    5. '])' → logprob: -4.069735050201416
    6. '))' → logprob: -4.444735050201416
    7. ''))' → logprob: -4.944735050201416
    8. '']))' → logprob: -5.694735050201416
    9. ')]' → logprob: -7.569735050201416
    10. ']))' → logprob: -8.569734573364258

Token 72: 'int' (ID: 491)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12572702765464783
    2. 'n' → logprob: -2.7507269382476807
    3. 'from' → logprob: -3.7507269382476807
    4. 'd' → logprob: -4.50072717666626
    5. '#' → logprob: -5.12572717666626
    6. 'a' → logprob: -5.50072717666626
    7. 'N' → logprob: -6.37572717666626
    8. ')' → logprob: -6.50072717666626
    9. 's' → logprob: -6.62572717666626
    10. 'D' → logprob: -7.37572717666626

Token 73: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.017666347324848175
    2. '()' → logprob: -4.517666339874268
    3. '<|end|>' → logprob: -5.517666339874268
    4. '32' → logprob: -7.142666339874268
    5. '(input' → logprob: -7.892666339874268
    6. 's' → logprob: -8.017666816711426
    7. 'input' → logprob: -8.642666816711426
    8. '('' → logprob: -9.517666816711426
    9. ',' → logprob: -9.642666816711426
    10. '<|end|>' → logprob: -9.767666816711426

Token 74: '=lambda' (ID: 64865)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25842443108558655
    2. '=input' → logprob: -2.5084245204925537
    3. '=lambda' → logprob: -2.5084245204925537
    4. ' =' → logprob: -4.008424282073975
    5. 'er' → logprob: -4.383424282073975
    6. '<|end|>' → logprob: -4.758424282073975
    7. '=int' → logprob: -4.883424282073975
    8. 'o' → logprob: -6.133424282073975
    9. 's' → logprob: -6.383424282073975
    10. '32' → logprob: -6.758424282073975

Token 75: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.06979547441005707
    2. ' x' → logprob: -2.9447953701019287
    3. 'int' → logprob: -5.319795608520508
    4. 'lambda' → logprob: -5.319795608520508
    5. 'a' → logprob: -6.444795608520508
    6. ':' → logprob: -6.819795608520508
    7. ':int' → logprob: -6.819795608520508
    8. 's' → logprob: -7.569795608520508
    9. 'n' → logprob: -9.194795608520508
    10. '_' → logprob: -9.194795608520508

Token 76: ':int' (ID: 30362)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04535304009914398
    2. ':int' → logprob: -3.5453529357910156
    3. ':x' → logprob: -4.170352935791016
    4. ' :' → logprob: -10.670352935791016
    5. ':(' → logprob: -13.170352935791016
    6. ':=' → logprob: -13.420352935791016
    7. ':void' → logprob: -13.545352935791016
    8. ':
' → logprob: -14.170352935791016
    9. ':i' → logprob: -14.545352935791016
    10. ':-' → logprob: -14.545352935791016

Token 77: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0011715330183506012
    2. '(' → logprob: -6.751171588897705
    3. 'x' → logprob: -14.126171112060547
    4. '((' → logprob: -15.376171112060547
    5. '(input' → logprob: -16.251171112060547
    6. '(
' → logprob: -16.626171112060547
    7. '(str' → logprob: -17.251171112060547
    8. ' (' → logprob: -17.251171112060547
    9. '()' → logprob: -17.751171112060547
    10. '	x' → logprob: -17.876171112060547

Token 78: ')-' (ID: 14080)
  Prédit: ')-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')-' → logprob: -0.008854585699737072
    2. ')' → logprob: -4.758854389190674
    3. '-' → logprob: -8.383854866027832
    4. ' )' → logprob: -12.883854866027832
    5. '[' → logprob: -13.133854866027832
    6. '.strip' → logprob: -13.258854866027832
    7. ' -' → logprob: -13.258854866027832
    8. ')+' → logprob: -13.758854866027832
    9. '0' → logprob: -14.883854866027832
    10. '())' → logprob: -14.883854866027832

Token 79: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.451116051815916e-05
    2. ' ' → logprob: -10.625024795532227
    3. '<|end|>' → logprob: -16.125024795532227
    4. '１' → logprob: -19.250024795532227
    5. '১' → logprob: -19.500024795532227
    6. '<|end|>' → logprob: -19.875024795532227
    7. '  ' → logprob: -21.000024795532227
    8. '१' → logprob: -21.062524795532227
    9. '```' → logprob: -21.125024795532227
    10. '0' → logprob: -21.187524795532227

Token 80: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 81: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006351415999233723
    2. 'n' → logprob: -5.256351470947266
    3. 'from' → logprob: -8.131351470947266
    4. 'd' → logprob: -8.256351470947266
    5. '#' → logprob: -8.506351470947266
    6. '\' → logprob: -9.881351470947266
    7. 'a' → logprob: -9.881351470947266
    8. '(n' → logprob: -10.006351470947266
    9. ')' → logprob: -10.256351470947266
    10. ' def' → logprob: -10.506351470947266

Token 82: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.47909417748451233
    2. ' dfs' → logprob: -0.9790941476821899
    3. ' solve' → logprob: -5.6040940284729
    4. ' factorial' → logprob: -7.7290940284729
    5. ' factor' → logprob: -8.479094505310059
    6. 'dfs' → logprob: -8.729094505310059
    7. ' bfs' → logprob: -9.104094505310059
    8. 'main' → logprob: -9.479094505310059
    9. ' pow' → logprob: -9.729094505310059
    10. ' ' → logprob: -9.729094505310059

Token 83: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -2.696889623621246e-06
    2. ' ():' → logprob: -13.62500286102295
    3. '()' → logprob: -13.87500286102295
    4. '():
' → logprob: -14.75000286102295
    5. '(' → logprob: -15.62500286102295
    6. ':' → logprob: -19.250001907348633
    7. '().' → logprob: -19.375001907348633
    8. '(":' → logprob: -19.500001907348633
    9. '()>' → logprob: -20.375001907348633
    10. '(:' → logprob: -21.125001907348633

Token 84: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040629658848047256
    2. 'n' → logprob: -3.5406296253204346
    3. '<|end|>' → logprob: -5.415629863739014
    4. ' n' → logprob: -5.540629863739014
    5. '<|end|>' → logprob: -7.290629863739014
    6. '	n' → logprob: -7.790629863739014
    7. '(n' → logprob: -7.790629863739014
    8. '    ' → logprob: -7.790629863739014
    9. ',n' → logprob: -9.165629386901855
    10. ',' → logprob: -9.665629386901855

Token 85: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08273975551128387
    2. 'N' (adapté à ' N') → logprob: -2.70773983001709
    3. ' n' → logprob: -4.45773983001709
    4. '   ' → logprob: -7.33273983001709
    5. ' N' → logprob: -7.95773983001709
    6. 'from' → logprob: -10.83273983001709
    7. 'h' → logprob: -11.08273983001709
    8. 'a' → logprob: -11.08273983001709
    9. '    ' → logprob: -11.33273983001709
    10. '	n' → logprob: -11.33273983001709

Token 86: '=int' (ID: 37431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0129976272583008
    2. ' =' → logprob: -1.0129976272583008
    3. ',' → logprob: -1.3879976272583008
    4. '=int' → logprob: -3.762997627258301
    5. '=input' → logprob: -7.762997627258301
    6. ',N' → logprob: -8.8879976272583
    7. ',int' → logprob: -9.2629976272583
    8. ' ,' → logprob: -9.8879976272583
    9. ',n' → logprob: -10.0129976272583
    10. ',m' → logprob: -10.8879976272583

Token 87: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.004733910784125328
    2. '(' → logprob: -5.379734039306641
    3. '()' → logprob: -9.50473403930664
    4. 'input' → logprob: -10.25473403930664
    5. '(sys' → logprob: -13.37973403930664
    6. '(
' → logprob: -14.00473403930664
    7. ' input' → logprob: -14.75473403930664
    8. '=input' → logprob: -14.87973403930664
    9. ' (' → logprob: -15.87973403930664
    10. '('' → logprob: -16.00473403930664

Token 88: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0019562290981411934
    2. '()' → logprob: -6.251956462860107
    3. ')' → logprob: -10.75195598602295
    4. '())
' → logprob: -12.37695598602295
    5. '()
' → logprob: -14.00195598602295
    6. '())

' → logprob: -15.12695598602295
    7. ' ())' → logprob: -15.12695598602295
    8. '(' → logprob: -15.62695598602295
    9. '();)' → logprob: -16.001956939697266
    10. '().' → logprob: -16.126956939697266

Token 89: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004952781833708286
    2. '<|end|>' → logprob: -5.754952907562256
    3. ')' → logprob: -7.379952907562256
    4. '    
' → logprob: -7.879952907562256
    5. '    ' → logprob: -8.879952430725098
    6. ' A' → logprob: -9.504952430725098
    7. 'a' → logprob: -9.629952430725098
    8. '[' → logprob: -9.754952430725098
    9. '<|end|>' → logprob: -9.754952430725098
    10. 'A' → logprob: -10.254952430725098

Token 90: ' a' (ID: 261)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.20309686660766602
    2. 'a' (adapté à ' a') → logprob: -2.453096866607666
    3. 'S' → logprob: -3.078096866607666
    4. 'dp' → logprob: -4.328096866607666
    5. 'arr' → logprob: -4.953096866607666
    6. 'H' → logprob: -5.453096866607666
    7. 'graph' → logprob: -5.703096866607666
    8. 'edges' → logprob: -6.078096866607666
    9. 'lst' → logprob: -6.203096866607666
    10. 's' → logprob: -6.328096866607666

Token 91: '=list' (ID: 93413)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1438416987657547
    2. ' =' → logprob: -2.0188417434692383
    3. '=[]' → logprob: -7.143841743469238
    4. 's' → logprob: -9.643841743469238
    5. ' ' → logprob: -9.643841743469238
    6. 'rray' → logprob: -9.893841743469238
    7. '=[' → logprob: -9.893841743469238
    8. ' =[' → logprob: -10.268841743469238
    9. 'rr' → logprob: -10.393841743469238
    10. '=list' → logprob: -10.643841743469238

Token 92: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0002338144404347986
    2. '(' → logprob: -8.37523365020752
    3. '(int' → logprob: -13.00023365020752
    4. '(range' → logprob: -15.12523365020752
    5. 'map' → logprob: -15.75023365020752
    6. '()' → logprob: -15.75023365020752
    7. '(m' → logprob: -16.250234603881836
    8. '(input' → logprob: -16.250234603881836
    9. '	map' → logprob: -17.125234603881836
    10. '(
' → logprob: -17.250234603881836

Token 93: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00033510822686366737
    2. '(' → logprob: -8.375334739685059
    3. ')' → logprob: -10.625334739685059
    4. ',int' → logprob: -10.750334739685059
    5. '[int' → logprob: -11.000334739685059
    6. '<int' → logprob: -11.375334739685059
    7. '=int' → logprob: -11.625334739685059
    8. '<|end|>' → logprob: -11.750334739685059
    9. 'int' → logprob: -12.000334739685059
    10. ']int' → logprob: -13.250334739685059

Token 94: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.1067226231098175
    2. '(input' → logprob: -2.481722593307495
    3. ',' → logprob: -4.106722831726074
    4. '(' → logprob: -6.981722831726074
    5. 'input' → logprob: -9.106722831726074
    6. ')' → logprob: -10.231722831726074
    7. ',(' → logprob: -11.106722831726074
    8. ' input' → logprob: -11.106722831726074
    9. ' ,' → logprob: -11.106722831726074
    10. '=input' → logprob: -11.606722831726074

Token 95: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.2994620242971e-06
    2. '()' → logprob: -12.125008583068848
    3. '(' → logprob: -13.875008583068848
    4. '.split' → logprob: -14.125008583068848
    5. 'split' → logprob: -15.125008583068848
    6. ')' → logprob: -15.375008583068848
    7. '.' → logprob: -15.625008583068848
    8. ' ().' → logprob: -16.12500762939453
    9. 's' → logprob: -16.37500762939453
    10. '()))' → logprob: -17.25000762939453

Token 96: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.576873758807778e-05
    2. 'strip' → logprob: -9.750075340270996
    3. 'rstrip' → logprob: -11.125075340270996
    4. ' split' → logprob: -13.250075340270996
    5. '(split' → logprob: -14.250075340270996
    6. 'spl' → logprob: -15.875075340270996
    7. 's' → logprob: -16.125076293945312
    8. ')' → logprob: -17.375076293945312
    9. '().' → logprob: -18.250076293945312
    10. '.split' → logprob: -18.500076293945312

Token 97: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.13041247427463531
    2. '))' → logprob: -2.1304125785827637
    3. '())' → logprob: -6.380412578582764
    4. '()' → logprob: -6.505412578582764
    5. ')' → logprob: -8.630412101745605
    6. '(' → logprob: -9.755412101745605
    7. '()))
' → logprob: -10.380412101745605
    8. '()));' → logprob: -11.255412101745605
    9. '()))

' → logprob: -13.630412101745605
    10. '(),' → logprob: -13.755412101745605

Token 98: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 99: ' class' (ID: 744)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.8532738089561462
    2. 'dp' → logprob: -1.478273868560791
    3. '   ' → logprob: -1.978273868560791
    4. ' a' → logprob: -2.603273868560791
    5. 'a' → logprob: -3.228273868560791
    6. 'd' → logprob: -3.853273868560791
    7. ' ans' → logprob: -4.353273868560791
    8. ')' → logprob: -5.103273868560791
    9. 'def' → logprob: -5.478273868560791
    10. ' d' → logprob: -5.603273868560791

Token 100: ' BIT' (ID: 52185)
  Prédit: ' Segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Segment' → logprob: -0.2073908895254135
    2. ' Counter' → logprob: -3.207390785217285
    3. ' Union' → logprob: -3.332390785217285
    4. 'Segment' → logprob: -3.457390785217285
    5. ' Node' → logprob: -3.582390785217285
    6. ' Seg' → logprob: -4.457390785217285
    7. ' Fen' → logprob: -5.082390785217285
    8. ' Tree' → logprob: -5.207390785217285
    9. ' Trie' → logprob: -5.582390785217285
    10. ' Factor' → logprob: -5.832390785217285

Token 101: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001029471677611582
    2. '():' → logprob: -10.000102996826172
    3. '):' → logprob: -10.750102996826172
    4. ':
' → logprob: -11.500102996826172
    5. '>:' → logprob: -11.750102996826172
    6. ' :' → logprob: -12.125102996826172
    7. '(object' → logprob: -12.125102996826172
    8. '<|end|>' → logprob: -13.625102996826172
    9. ':**' → logprob: -13.750102996826172
    10. '(' → logprob: -13.750102996826172

Token 102: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20896610617637634
    2. '   ' → logprob: -2.458966016769409
    3. '<|end|>' → logprob: -3.083966016769409
    4. '    ' → logprob: -3.333966016769409
    5. '    
' → logprob: -5.083966255187988
    6. '        
' → logprob: -5.458966255187988
    7. ' ' → logprob: -5.958966255187988
    8. '[' → logprob: -6.208966255187988
    9. '<|end|>' → logprob: -7.083966255187988
    10. ' 
' → logprob: -7.083966255187988

Token 103: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.22614054381847382
    2. 'def' (adapté à ' def') → logprob: -1.6011404991149902
    3. '   ' → logprob: -7.60114049911499
    4. '       ' → logprob: -8.851140975952148
    5. '	def' → logprob: -9.601140975952148
    6. '           ' → logprob: -12.726140975952148
    7. ' ' → logprob: -12.851140975952148
    8. '__' → logprob: -13.101140975952148
    9. ' __' → logprob: -13.101140975952148
    10. '    ' → logprob: -13.476140975952148

Token 104: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.42122429609298706
    2. ' __' → logprob: -1.2962243556976318
    3. 'init' → logprob: -2.796224355697632
    4. 'it' → logprob: -5.296224117279053
    5. 'nit' → logprob: -6.046224117279053
    6. 't' → logprob: -6.921224117279053
    7. ' init' → logprob: -8.546224594116211
    8. 'int' → logprob: -9.046224594116211
    9. '```' → logprob: -9.421224594116211
    10. 'def' → logprob: -10.046224594116211

Token 105: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'int' → logprob: -19.5
    3. ' init' → logprob: -19.5
    4. '_init' → logprob: -19.625
    5. 'ini' → logprob: -20.125
    6. 'innit' → logprob: -20.375
    7. '```' → logprob: -20.375
    8. '   ' → logprob: -20.75
    9. '	init' → logprob: -20.875
    10. '_' → logprob: -21.375

Token 106: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.349448025226593
    2. '(self' → logprob: -1.2244479656219482
    3. '(' → logprob: -7.474448204040527
    4. '__' → logprob: -7.974448204040527
    5. ' (' → logprob: -10.224448204040527
    6. '__((' → logprob: -11.599448204040527
    7. '_(' → logprob: -11.724448204040527
    8. 'self' → logprob: -11.974448204040527
    9. '<>(' → logprob: -12.099448204040527
    10. '__(
' → logprob: -12.349448204040527

Token 107: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.9623810658231378e-05
    2. ' self' → logprob: -10.875020027160645
    3. '(self' → logprob: -15.250020027160645
    4. '       ' → logprob: -15.500020027160645
    5. 's' → logprob: -15.875020027160645
    6. '   ' → logprob: -17.375019073486328
    7. ',self' → logprob: -17.375019073486328
    8. '	self' → logprob: -17.875019073486328
    9. 'n' → logprob: -18.000019073486328
    10. '           ' → logprob: -18.125019073486328

Token 108: ',n' (ID: 18103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02388598583638668
    2. ',n' → logprob: -3.77388596534729
    3. ' ,' → logprob: -7.523886203765869
    4. ',self' → logprob: -9.648885726928711
    5. ',size' → logprob: -10.898885726928711
    6. ',N' → logprob: -11.523885726928711
    7. ',num' → logprob: -12.898885726928711
    8. 'self' → logprob: -13.023885726928711
    9. ',k' → logprob: -14.773885726928711
    10. ',int' → logprob: -15.023885726928711

Token 109: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0004764287732541561
    2. '):
' → logprob: -8.000476837158203
    3. ' ):' → logprob: -9.250476837158203
    4. ':' → logprob: -11.000476837158203
    5. ')' → logprob: -11.375476837158203
    6. '   ' → logprob: -12.250476837158203
    7. '):
' → logprob: -12.500476837158203
    8. '       ' → logprob: -13.500476837158203
    9. '=' → logprob: -13.625476837158203
    10. '+' → logprob: -14.000476837158203

Token 110: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003120079403743148
    2. '	       ' → logprob: -6.378119945526123
    3. ' self' → logprob: -7.628119945526123
    4. '<|end|>' → logprob: -7.878119945526123
    5. 'self' → logprob: -8.628120422363281
    6. '<|end|>' → logprob: -9.503120422363281
    7. '               ' → logprob: -9.753120422363281
    8. '    	   ' → logprob: -9.753120422363281
    9. '       ' → logprob: -10.128120422363281
    10. '		   ' → logprob: -11.128120422363281

Token 111: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.18058347702026367
    2. 'self' (adapté à ' self') → logprob: -1.8055834770202637
    3. '           ' → logprob: -7.555583477020264
    4. '       ' → logprob: -8.805583953857422
    5. '	self' → logprob: -9.680583953857422
    6. ' ' → logprob: -10.055583953857422
    7. '        ' → logprob: -10.805583953857422
    8. '   ' → logprob: -11.055583953857422
    9. '	       ' → logprob: -11.930583953857422
    10. ' super' → logprob: -12.555583953857422

Token 112: '.num' (ID: 19403)
  Prédit: '.n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.1336793303489685
    2. '.size' → logprob: -2.3836793899536133
    3. '.tree' → logprob: -3.8836793899536133
    4. '.data' → logprob: -5.383679389953613
    5. ' .' → logprob: -6.508679389953613
    6. 'n' → logprob: -6.883679389953613
    7. 'size' → logprob: -6.883679389953613
    8. '.N' → logprob: -7.008679389953613
    9. '.bit' → logprob: -7.258679389953613
    10. '.' → logprob: -7.258679389953613

Token 113: '=n' (ID: 47985)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.12107661366462708
    2. '=n' → logprob: -2.4960765838623047
    3. '=[' → logprob: -4.621076583862305
    4. '=' → logprob: -4.746076583862305
    5. 'bers' → logprob: -5.371076583862305
    6. ' =' → logprob: -6.121076583862305
    7. '=s' → logprob: -6.496076583862305
    8. '=self' → logprob: -6.496076583862305
    9. '=int' → logprob: -6.996076583862305
    10. 'ber' → logprob: -7.121076583862305

Token 114: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0033793572802096605
    2. 'self' → logprob: -5.7533793449401855
    3. '       ' → logprob: -9.378379821777344
    4. ' self' → logprob: -10.128379821777344
    5. 's' → logprob: -11.253379821777344
    6. '<|end|>' → logprob: -11.253379821777344
    7. ',' → logprob: -11.753379821777344
    8. '
' → logprob: -11.753379821777344
    9. '	       ' → logprob: -12.378379821777344
    10. '   ' → logprob: -12.378379821777344

Token 115: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004575138445943594
    2. 'self' → logprob: -5.504575252532959
    3. '       ' → logprob: -8.7545747756958
    4. 's' → logprob: -9.2545747756958
    5. ' self' → logprob: -9.5045747756958
    6. '<|end|>' → logprob: -10.0045747756958
    7. 'f' → logprob: -10.7545747756958
    8. '0' → logprob: -11.1295747756958
    9. '=' → logprob: -11.3795747756958
    10. ',' → logprob: -11.3795747756958

Token 116: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.020708762109279633
    2. '           ' → logprob: -3.8957087993621826
    3. ' self' → logprob: -9.020709037780762
    4. '       ' → logprob: -10.770709037780762
    5. 'data' → logprob: -11.520709037780762
    6. '          ' → logprob: -12.645709037780762
    7. '=self' → logprob: -12.770709037780762
    8. 's' → logprob: -13.020709037780762
    9. '   ' → logprob: -13.020709037780762
    10. 'tree' → logprob: -13.770709037780762

Token 117: '.dat' (ID: 17439)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6389796137809753
    2. 'data' → logprob: -2.01397967338562
    3. 'bit' → logprob: -2.01397967338562
    4. '=data' → logprob: -2.38897967338562
    5. 'tree' → logprob: -2.63897967338562
    6. 's' → logprob: -4.513979434967041
    7. 'a' → logprob: -4.888979434967041
    8. ' =' → logprob: -5.138979434967041
    9. '=size' → logprob: -5.638979434967041
    10. '=array' → logprob: -6.513979434967041

Token 118: '=[' (ID: 13370)
  Prédit: '=['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.04862074553966522
    2. '=' → logprob: -3.0486207008361816
    3. '=[]' → logprob: -11.42362117767334
    4. 'a' → logprob: -11.67362117767334
    5. ' =' → logprob: -12.04862117767334
    6. '={' → logprob: -13.17362117767334
    7. '[' → logprob: -13.92362117767334
    8. '={}' → logprob: -14.04862117767334
    9. '=a' → logprob: -14.54862117767334
    10. 'A' → logprob: -14.54862117767334

Token 119: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.248469718324486e-05
    2. ' ' → logprob: -11.250022888183594
    3. 'INF' → logprob: -11.625022888183594
    4. '(' → logprob: -15.250022888183594
    5. '-' → logprob: -15.375022888183594
    6. '０' → logprob: -18.000022888183594
    7. '   ' → logprob: -18.125022888183594
    8. '۰' → logprob: -18.125022888183594
    9. '[' → logprob: -18.250022888183594
    10. ' INF' → logprob: -18.250022888183594

Token 120: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.0015208146069198847
    2. ']' → logprob: -6.87652063369751
    3. ']*' → logprob: -7.62652063369751
    4. ']+' → logprob: -14.626521110534668
    5. '*(' → logprob: -17.12652015686035
    6. ')*(' → logprob: -18.00152015686035
    7. '0' → logprob: -19.25152015686035
    8. 'for' → logprob: -19.37652015686035
    9. ' ]' → logprob: -19.37652015686035
    10. '](' → logprob: -19.50152015686035

Token 121: 'self' (ID: 1156)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01841283217072487
    2. 'self' → logprob: -4.018413066864014
    3. '(n' → logprob: -8.393412590026855
    4. '(self' → logprob: -10.268412590026855
    5. ' n' → logprob: -13.643412590026855
    6. ' self' → logprob: -15.143412590026855
    7. '[n' → logprob: -15.768412590026855
    8. '	n' → logprob: -16.268413543701172
    9. '[self' → logprob: -16.893413543701172
    10. '(' → logprob: -17.018413543701172

Token 122: '.num' (ID: 19403)
  Prédit: '.num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.num' → logprob: -0.06213248521089554
    2. 'num' → logprob: -2.8121325969696045
    3. '	num' → logprob: -9.437132835388184
    4. '<num' → logprob: -10.312132835388184
    5. '.n' → logprob: -11.187132835388184
    6. ',num' → logprob: -11.812132835388184
    7. ':num' → logprob: -12.312132835388184
    8. '[num' → logprob: -12.312132835388184
    9. '=num' → logprob: -12.437132835388184
    10. '$num' → logprob: -12.562132835388184

Token 123: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.2378600735682994e-05
    2. ' +' → logprob: -10.375032424926758
    3. '*' → logprob: -14.625032424926758
    4. '2' → logprob: -15.125032424926758
    5. '1' → logprob: -15.375032424926758
    6. '＋' → logprob: -17.125032424926758
    7. '()+' → logprob: -17.750032424926758
    8. '+
' → logprob: -18.625032424926758
    9. ')' → logprob: -19.000032424926758
    10. '+)' → logprob: -19.125032424926758

Token 124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.048608142882585526
    2. '2' → logprob: -3.0486080646514893
    3. '5' → logprob: -11.54860782623291
    4. '10' → logprob: -11.67360782623291
    5. ' ' → logprob: -13.29860782623291
    6. '
' → logprob: -14.79860782623291
    7. '１' → logprob: -15.54860782623291
    8. '3' → logprob: -16.298608779907227
    9. '  ' → logprob: -17.173608779907227
    10. '

' → logprob: -17.236108779907227

Token 125: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.909333023941144e-05
    2. ')
' → logprob: -10.250068664550781
    3. '<|end|>' → logprob: -10.500068664550781
    4. '       ' → logprob: -13.750068664550781
    5. '<|end|>' → logprob: -13.875068664550781
    6. ')

' → logprob: -14.000068664550781
    7. ')return' → logprob: -14.000068664550781
    8. ' )' → logprob: -14.000068664550781
    9. '```' → logprob: -15.250068664550781
    10. ')
' → logprob: -15.625068664550781

Token 126: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1551351398229599
    2. '
' → logprob: -2.905135154724121
    3. '<|end|>' → logprob: -3.030135154724121
    4. '        
' → logprob: -3.405135154724121
    5. '   ' → logprob: -6.030135154724121
    6. '    
' → logprob: -6.155135154724121
    7. '<|end|>' → logprob: -6.405135154724121
    8. 'def' → logprob: -8.405135154724121
    9. '		
' → logprob: -8.530135154724121
    10. '            
' → logprob: -8.655135154724121

Token 127: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.061343397945165634
    2. '       ' → logprob: -3.1863434314727783
    3. ' def' → logprob: -4.186343193054199
    4. '   ' → logprob: -6.311343193054199
    5. '
' → logprob: -7.561343193054199
    6. '<|end|>' → logprob: -7.936343193054199
    7. '        
' → logprob: -9.4363431930542
    8. '	def' → logprob: -9.9363431930542
    9. '<|end|>' → logprob: -10.3113431930542
    10. '    
' → logprob: -10.9363431930542

Token 128: '.depth' (ID: 89791)
  Prédit: '.size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.3483790457248688
    2. '.sum' → logprob: -2.473379135131836
    3. '.n' → logprob: -3.223379135131836
    4. '.bit' → logprob: -3.348379135131836
    5. '.sz' → logprob: -4.098379135131836
    6. '.num' → logprob: -4.223379135131836
    7. '.s' → logprob: -4.473379135131836
    8. '.tree' → logprob: -4.848379135131836
    9. '.max' → logprob: -4.973379135131836
    10. '.depth' → logprob: -5.098379135131836

Token 129: '=n' (ID: 47985)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03437817096710205
    2. ' =' → logprob: -3.4093780517578125
    3. '=int' → logprob: -7.6593780517578125
    4. '=len' → logprob: -9.159378051757812
    5. '=self' → logprob: -9.284378051757812
    6. '=[' → logprob: -10.784378051757812
    7. '=n' → logprob: -10.909378051757812
    8. '=(' → logprob: -12.409378051757812
    9. '=lambda' → logprob: -13.284378051757812
    10. '＝' → logprob: -13.284378051757812

Token 130: '.bit' (ID: 61866)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3941529393196106
    2. '<|end|>' → logprob: -1.2691528797149658
    3. '       ' → logprob: -4.144153118133545
    4. '           ' → logprob: -4.519153118133545
    5. '<|end|>' → logprob: -4.894153118133545
    6. ' 
' → logprob: -6.144153118133545
    7. '   ' → logprob: -6.519153118133545
    8. '        
' → logprob: -6.894153118133545
    9. '    
' → logprob: -7.019153118133545
    10. '	' → logprob: -7.019153118133545

Token 131: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -1.5048530030981055e-06
    2. 'length' → logprob: -14.125001907348633
    3. '```' → logprob: -15.750001907348633
    4. 'ength' → logprob: -16.000001907348633
    5. '_l' → logprob: -16.000001907348633
    6. '_LENGTH' → logprob: -16.125001907348633
    7. '\' → logprob: -16.625001907348633
    8. 'Length' → logprob: -17.250001907348633
    9. 'l' → logprob: -17.375001907348633
    10. 'L' → logprob: -17.500001907348633

Token 132: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0025322602596133947
    2. '()+' → logprob: -6.002532482147217
    3. '()
' → logprob: -11.002532005310059
    4. '+' → logprob: -11.502532005310059
    5. '()-' → logprob: -11.627532005310059
    6. '(' → logprob: -11.627532005310059
    7. '()<<' → logprob: -12.752532005310059
    8. '()`' → logprob: -13.127532005310059
    9. ' ()' → logprob: -13.502532005310059
    10. '()

' → logprob: -13.877532005310059

Token 133: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11106086522340775
    2. '       ' → logprob: -2.736060857772827
    3. '        
' → logprob: -3.611060857772827
    4. '<|end|>' → logprob: -5.111061096191406
    5. '    
' → logprob: -5.236061096191406
    6. '  
' → logprob: -8.111061096191406
    7. '<|end|>' → logprob: -8.361061096191406
    8. '		
' → logprob: -8.361061096191406
    9. ' 
' → logprob: -8.486061096191406
    10. '   ' → logprob: -8.486061096191406

Token 134: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.5231425762176514
    2. '       ' → logprob: -1.0231425762176514
    3. '   ' → logprob: -3.7731425762176514
    4. '        
' → logprob: -4.6481428146362305
    5. '    
' → logprob: -5.0231428146362305
    6. ' def' → logprob: -5.1481428146362305
    7. '
' → logprob: -6.1481428146362305
    8. '<|end|>' → logprob: -8.39814281463623
    9. ' 
' → logprob: -8.52314281463623
    10. '<|end|>' → logprob: -9.27314281463623

Token 135: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.2606154978275299
    2. 'sum' → logprob: -2.635615587234497
    3. '_add' → logprob: -3.010615587234497
    4. ' add' → logprob: -3.010615587234497
    5. 'update' → logprob: -3.510615587234497
    6. '_' → logprob: -4.635615348815918
    7. '_update' → logprob: -5.135615348815918
    8. '_sum' → logprob: -5.385615348815918
    9. 'low' → logprob: -6.260615348815918
    10. ' update' → logprob: -6.385615348815918

Token 136: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0025560460053384304
    2. '(' → logprob: -6.002555847167969
    3. ' (' → logprob: -10.127555847167969
    4. '(x' → logprob: -11.252555847167969
    5. '(idx' → logprob: -12.127555847167969
    6. '(index' → logprob: -12.252555847167969
    7. '(i' → logprob: -12.377555847167969
    8. '(k' → logprob: -12.752555847167969
    9. '(s' → logprob: -13.502555847167969
    10. '   ' → logprob: -13.877555847167969

Token 137: ',i' (ID: 25032)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.028100909665226936
    2. ',i' → logprob: -4.403100967407227
    3. ',x' → logprob: -5.278100967407227
    4. ' ,' → logprob: -5.778100967407227
    5. ',pos' → logprob: -5.778100967407227
    6. ',index' → logprob: -5.903100967407227
    7. ',k' → logprob: -7.278100967407227
    8. ',p' → logprob: -7.778100967407227
    9. ',j' → logprob: -9.278100967407227
    10. ',n' → logprob: -9.903100967407227

Token 138: ',x' (ID: 29748)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09174680709838867
    2. ',v' → logprob: -3.3417468070983887
    3. ',val' → logprob: -3.8417468070983887
    4. ',value' → logprob: -4.466746807098389
    5. ',k' → logprob: -5.466746807098389
    6. ',d' → logprob: -5.591746807098389
    7. ',x' → logprob: -5.966746807098389
    8. ' ,' → logprob: -5.966746807098389
    9. ',i' → logprob: -6.091746807098389
    10. ',self' → logprob: -6.716746807098389

Token 139: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005984609015285969
    2. '):
' → logprob: -5.130984783172607
    3. ':' → logprob: -10.38098430633545
    4. '):
' → logprob: -11.38098430633545
    5. ' ):' → logprob: -11.50598430633545
    6. ')' → logprob: -13.50598430633545
    7. '   ' → logprob: -14.50598430633545
    8. ',' → logprob: -15.38098430633545
    9. '       ' → logprob: -15.50598430633545
    10. '):

' → logprob: -15.75598430633545

Token 140: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5911716818809509
    2. '       ' → logprob: -1.2161717414855957
    3. '<|end|>' → logprob: -2.8411717414855957
    4. ' while' → logprob: -3.4661717414855957
    5. '	       ' → logprob: -3.7161717414855957
    6. '               ' → logprob: -4.841171741485596
    7. '        ' → logprob: -4.966171741485596
    8. '   ' → logprob: -4.966171741485596
    9. ' i' → logprob: -5.216171741485596
    10. '        
' → logprob: -6.841171741485596

Token 141: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.7568886876106262
    2. ' while' → logprob: -1.5068886280059814
    3. ' i' → logprob: -1.8818886280059814
    4. 'while' → logprob: -2.1318886280059814
    5. '           ' → logprob: -3.3818886280059814
    6. '               ' → logprob: -6.3818888664245605
    7. '   ' → logprob: -6.6318888664245605
    8. '	while' → logprob: -7.0068888664245605
    9. '	i' → logprob: -8.506888389587402
    10. '       ' → logprob: -8.756888389587402

Token 142: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.013491475954651833
    2. ' +=' → logprob: -4.388491630554199
    3. '|' → logprob: -7.513491630554199
    4. '+' → logprob: -8.8884916305542
    5. ']+=' → logprob: -8.8884916305542
    6. '=' → logprob: -9.2634916305542
    7. '=i' → logprob: -10.8884916305542
    8. '   ' → logprob: -11.3884916305542
    9. '+=(' → logprob: -11.7634916305542
    10. ' |=' → logprob: -12.1384916305542

Token 143: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '
' → logprob: -19.875
    4. '+' → logprob: -19.875
    5. '１' → logprob: -20.5
    6. '```' → logprob: -21.125
    7. 'i' → logprob: -21.5
    8. '   ' → logprob: -21.5
    9. '۱' → logprob: -21.75
    10. 'a' → logprob: -22.3125

Token 144: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01864430122077465
    2. '<|end|>' → logprob: -4.393644332885742
    3. '           ' → logprob: -5.518644332885742
    4. 'while' → logprob: -7.643644332885742
    5. '<|end|>' → logprob: -7.893644332885742
    6. '
' → logprob: -8.268644332885742
    7. ' while' → logprob: -8.643644332885742
    8. '  
' → logprob: -8.893644332885742
    9. '       ' → logprob: -8.893644332885742
    10. '            
' → logprob: -8.893644332885742

Token 145: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0032337980810552835
    2. 'while' → logprob: -6.378233909606934
    3. ' while' → logprob: -6.878233909606934
    4. '
' → logprob: -8.003233909606934
    5. '<|end|>' → logprob: -9.753233909606934
    6. '       ' → logprob: -10.628233909606934
    7. ';' → logprob: -11.253233909606934
    8. '               ' → logprob: -11.378233909606934
    9. '	       ' → logprob: -11.378233909606934
    10. '   ' → logprob: -11.628233909606934

Token 146: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -5.478889215737581e-05
    2. ' while' → logprob: -10.000054359436035
    3. '           ' → logprob: -11.625054359436035
    4. '	while' → logprob: -15.250054359436035
    5. 'While' → logprob: -15.750054359436035
    6. '```' → logprob: -18.37505531311035
    7. '   ' → logprob: -18.75005531311035
    8. '       ' → logprob: -19.25005531311035
    9. '
' → logprob: -19.75005531311035
    10. '            
' → logprob: -20.37505531311035

Token 147: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07889088988304138
    2. ' i' → logprob: -2.578890800476074
    3. '	i' → logprob: -14.953890800476074
    4. '(i' → logprob: -15.078890800476074
    5. '   ' → logprob: -15.828890800476074
    6. ' ' → logprob: -16.20389175415039
    7. 'self' → logprob: -16.45389175415039
    8. ',i' → logprob: -17.70389175415039
    9. ' ' → logprob: -18.07889175415039
    10. '.i' → logprob: -18.07889175415039

Token 148: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.004091458860784769
    2. ' <=' → logprob: -5.504091262817383
    3. '<' → logprob: -11.504091262817383
    4. '&' → logprob: -14.004091262817383
    5. ' <<=' → logprob: -14.379091262817383
    6. '&lt' → logprob: -14.379091262817383
    7. '≤' → logprob: -14.504091262817383
    8. '<<' → logprob: -15.504091262817383
    9. '<len' → logprob: -16.504091262817383
    10. '+=' → logprob: -16.629091262817383

Token 149: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.6240566083070007e-06
    2. ' self' → logprob: -13.500001907348633
    3. '(self' → logprob: -17.125001907348633
    4. '	self' → logprob: -17.750001907348633
    5. '=self' → logprob: -18.500001907348633
    6. '
' → logprob: -18.750001907348633
    7. '<|end|>' → logprob: -19.375001907348633
    8. '[self' → logprob: -19.625001907348633
    9. '   ' → logprob: -19.625001907348633
    10. '_self' → logprob: -19.750001907348633

Token 150: '.num' (ID: 19403)
  Prédit: '.num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.num' → logprob: -0.008618593215942383
    2. 'num' → logprob: -4.758618354797363
    3. '	num' → logprob: -13.133618354797363
    4. '<num' → logprob: -13.633618354797363
    5. '=num' → logprob: -15.633618354797363
    6. '$num' → logprob: -15.633618354797363
    7. ':num' → logprob: -15.883618354797363
    8. ',num' → logprob: -16.13361930847168
    9. '_num' → logprob: -16.25861930847168
    10. ' num' → logprob: -16.50861930847168

Token 151: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2522839307785034
    2. ':' → logprob: -1.5022839307785034
    3. '           ' → logprob: -8.877284049987793
    4. '):
' → logprob: -10.127284049987793
    5. ' and' → logprob: -10.502284049987793
    6. ' :
' → logprob: -10.502284049987793
    7. '               ' → logprob: -10.752284049987793
    8. ':i' → logprob: -11.002284049987793
    9. ':return' → logprob: -11.377284049987793
    10. '       ' → logprob: -11.627284049987793

Token 152: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0024403356947004795
    2. 'self' → logprob: -6.627440452575684
    3. '           ' → logprob: -7.377440452575684
    4. ' self' → logprob: -7.752440452575684
    5. '<|end|>' → logprob: -10.252440452575684
    6. '	           ' → logprob: -12.377440452575684
    7. '```' → logprob: -12.627440452575684
    8. '   ' → logprob: -12.627440452575684
    9. '	       ' → logprob: -13.252440452575684
    10. '              ' → logprob: -13.752440452575684

Token 153: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.37565144896507263
    2. '               ' → logprob: -1.750651478767395
    3. ' self' → logprob: -2.0006513595581055
    4. '           ' → logprob: -5.5006513595581055
    5. '	self' → logprob: -9.625651359558105
    6. '```' → logprob: -10.250651359558105
    7. '   ' → logprob: -11.000651359558105
    8. '[self' → logprob: -11.375651359558105
    9. ' ' → logprob: -12.125651359558105
    10. '       ' → logprob: -12.250651359558105

Token 154: '.dat' (ID: 17439)
  Prédit: '.dat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dat' → logprob: -9.078839502763003e-05
    2. '@dat' → logprob: -9.625090599060059
    3. 'dat' → logprob: -11.875090599060059
    4. '.datab' → logprob: -11.875090599060059
    5. '           ' → logprob: -12.625090599060059
    6. '.' → logprob: -13.125090599060059
    7. '       ' → logprob: -13.250090599060059
    8. 'self' → logprob: -14.375090599060059
    9. '_dat' → logprob: -14.500090599060059
    10. '
' → logprob: -15.125090599060059

Token 155: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -15.375000953674316
    3. '[self' → logprob: -15.750000953674316
    4. '[I' → logprob: -16.875
    5. 'i' → logprob: -17.125
    6. '[int' → logprob: -17.5
    7. '```' → logprob: -17.5
    8. '               ' → logprob: -17.75
    9. '[node' → logprob: -18.5
    10. '[u' → logprob: -18.625

Token 156: ']+=' (ID: 123635)
  Prédit: ']+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+=' → logprob: -0.20220044255256653
    2. '+=' → logprob: -1.7022004127502441
    3. ']' → logprob: -7.327200412750244
    4. '[' → logprob: -9.827200889587402
    5. ' +=' → logprob: -10.202200889587402
    6. '+=(' → logprob: -10.827200889587402
    7. '```' → logprob: -12.577200889587402
    8. ']=' → logprob: -12.577200889587402
    9. ']+' → logprob: -12.827200889587402
    10. '=' → logprob: -12.952200889587402

Token 157: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.512236498361744e-07
    2. ' x' → logprob: -14.625000953674316
    3. '(x' → logprob: -21.75
    4. '	x' → logprob: -22.125
    5. ')x' → logprob: -23.625
    6. '$x' → logprob: -24.875
    7. '{x' → logprob: -25.25
    8. ',x' → logprob: -25.5
    9. '"x' → logprob: -26.375
    10. 'int' → logprob: -26.375

Token 158: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0014992679934948683
    2. ',i' → logprob: -7.251499176025391
    3. 'i' → logprob: -7.876499176025391
    4. ' i' → logprob: -8.37649917602539
    5. '
' → logprob: -9.75149917602539
    6. '           ' → logprob: -10.12649917602539
    7. ',' → logprob: -10.37649917602539
    8. ';i' → logprob: -10.75149917602539
    9. '                
' → logprob: -11.37649917602539
    10. '```' → logprob: -12.62649917602539

Token 159: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004484000615775585
    2. 'i' → logprob: -6.254484176635742
    3. ' i' → logprob: -6.754484176635742
    4. '
' → logprob: -7.129484176635742
    5. ',i' → logprob: -8.004484176635742
    6. '           ' → logprob: -9.379484176635742
    7. '                
' → logprob: -10.004484176635742
    8. ',' → logprob: -10.004484176635742
    9. '```' → logprob: -10.129484176635742
    10. '                   ' → logprob: -11.504484176635742

Token 160: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.00026264708139933646
    2. ' i' → logprob: -8.250262260437012
    3. '               ' → logprob: -14.000262260437012
    4. '	i' → logprob: -15.500262260437012
    5. '                   ' → logprob: -15.750262260437012
    6. ',i' → logprob: -16.500263214111328
    7. '           ' → logprob: -16.625263214111328
    8. '   ' → logprob: -17.000263214111328
    9. '*i' → logprob: -18.375263214111328
    10. '```' → logprob: -18.750263214111328

Token 161: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.001347138429991901
    2. ' +=' → logprob: -7.126347064971924
    3. '&' → logprob: -7.876347064971924
    4. '+=(' → logprob: -9.126347541809082
    5. '<<' → logprob: -10.001347541809082
    6. '|' → logprob: -12.626347541809082
    7. ']+=' → logprob: -13.126347541809082
    8. '+="' → logprob: -13.876347541809082
    9. '```' → logprob: -14.001347541809082
    10. '*=' → logprob: -14.251347541809082

Token 162: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00033951509976759553
    2. ' i' → logprob: -8.00033950805664
    3. '(i' → logprob: -12.62533950805664
    4. ' ' → logprob: -15.37533950805664
    5. '	i' → logprob: -16.00033950805664
    6. '   ' → logprob: -16.50033950805664
    7. '  ' → logprob: -16.62533950805664
    8. '(' → logprob: -16.62533950805664
    9. ' (' → logprob: -16.62533950805664
    10. '{i' → logprob: -17.75033950805664

Token 163: '&' (ID: 5)
  Prédit: '&i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&i' → logprob: -0.005413046106696129
    2. '&' → logprob: -5.380413055419922
    3. ' &' → logprob: -7.505413055419922
    4. 'i' → logprob: -8.380413055419922
    5. ' i' → logprob: -12.130413055419922
    6. '(i' → logprob: -13.005413055419922
    7. '&amp' → logprob: -13.755413055419922
    8. '&I' → logprob: -14.130413055419922
    9. '&id' → logprob: -14.880413055419922
    10. '&r' → logprob: -15.005413055419922

Token 164: '-' (ID: 12)
  Prédit: '-i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-i' → logprob: -0.04792046546936035
    2. ' -' → logprob: -3.7979204654693604
    3. 'i' → logprob: -3.9229204654693604
    4. ' i' → logprob: -5.672920227050781
    5. '-' → logprob: -7.172920227050781
    6. '(-' → logprob: -7.922920227050781
    7. ' (-' → logprob: -11.797920227050781
    8. '(i' → logprob: -12.672920227050781
    9. '-s' → logprob: -12.922920227050781
    10. '_i' → logprob: -13.172920227050781

Token 165: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.696889623621246e-06
    2. ' i' → logprob: -12.87500286102295
    3. '	i' → logprob: -17.125001907348633
    4. '-i' → logprob: -17.750001907348633
    5. ''i' → logprob: -19.125001907348633
    6. '<|end|>' → logprob: -19.875001907348633
    7. '<|end|>' → logprob: -20.125001907348633
    8. 'I' → logprob: -20.125001907348633
    9. '_i' → logprob: -20.375001907348633
    10. '*i' → logprob: -20.625001907348633

Token 166: '
' (ID: 198)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8524706363677979
    2. '<|end|>' → logprob: -0.9774706363677979
    3. '
' → logprob: -2.102470636367798
    4. ' ' → logprob: -4.352470397949219
    5. 'i' → logprob: -4.477470397949219
    6. '       ' → logprob: -4.727470397949219
    7. '\n' → logprob: -4.852470397949219
    8. ' i' → logprob: -4.977470397949219
    9. '```' → logprob: -5.352470397949219
    10. '           ' → logprob: -5.602470397949219

Token 167: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004818376619368792
    2. '<|end|>' → logprob: -5.379818439483643
    3. '   ' → logprob: -9.879817962646484
    4. '<|end|>' → logprob: -10.254817962646484
    5. '```' → logprob: -10.754817962646484
    6. '	' → logprob: -11.254817962646484
    7. '        ' → logprob: -11.379817962646484
    8. '        
' → logprob: -11.504817962646484
    9. '           ' → logprob: -11.754817962646484
    10. '[' → logprob: -11.879817962646484

Token 168: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012080210261046886
    2. 'def' (adapté à ' def') → logprob: -4.512080192565918
    3. ' def' → logprob: -7.762080192565918
    4. '<|end|>' → logprob: -8.512080192565918
    5. '        ' → logprob: -9.012080192565918
    6. '	' → logprob: -9.387080192565918
    7. '   ' → logprob: -9.512080192565918
    8. '	def' → logprob: -10.512080192565918
    9. '    ' → logprob: -11.012080192565918
    10. '
' → logprob: -11.387080192565918

Token 169: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.14773109555244446
    2. ' sum' → logprob: -2.022731065750122
    3. 'query' → logprob: -5.772731304168701
    4. ' query' → logprob: -6.397731304168701
    5. '_sum' → logprob: -9.647730827331543
    6. 'get' → logprob: -9.772730827331543
    7. 's' → logprob: -10.147730827331543
    8. ' s' → logprob: -10.397730827331543
    9. ' get' → logprob: -11.522730827331543
    10. 'prod' → logprob: -11.772730827331543

Token 170: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.2113979209971149e-05
    2. '(' → logprob: -12.125012397766113
    3. 'self' → logprob: -12.750012397766113
    4. ' (' → logprob: -13.750012397766113
    5. '   ' → logprob: -14.500012397766113
    6. '(s' → logprob: -14.625012397766113
    7. '(Self' → logprob: -14.750012397766113
    8. 'def' → logprob: -14.875012397766113
    9. '(i' → logprob: -16.000011444091797
    10. '(
' → logprob: -16.125011444091797

Token 171: ',i' (ID: 25032)
  Prédit: ',i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',i' → logprob: -0.05730164423584938
    2. ',' → logprob: -2.9323017597198486
    3. ',self' → logprob: -6.6823015213012695
    4. ',int' → logprob: -7.4323015213012695
    5. ' ,' → logprob: -7.8073015213012695
    6. 'self' → logprob: -9.93230152130127
    7. '   ' → logprob: -11.43230152130127
    8. ',j' → logprob: -11.43230152130127
    9. ',
' → logprob: -11.55730152130127
    10. ',x' → logprob: -11.80730152130127

Token 172: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10635644942522049
    2. '):
' → logprob: -2.481356382369995
    3. ':' → logprob: -4.106356620788574
    4. ':
' → logprob: -8.106356620788574
    5. '   ' → logprob: -9.481356620788574
    6. ')' → logprob: -9.606356620788574
    7. ':int' → logprob: -9.606356620788574
    8. '       ' → logprob: -9.731356620788574
    9. ',i' → logprob: -9.856356620788574
    10. '):
' → logprob: -10.606356620788574

Token 173: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20958101749420166
    2. '       ' → logprob: -1.8345810174942017
    3. '   ' → logprob: -3.834580898284912
    4. '0' → logprob: -5.209580898284912
    5. 'i' → logprob: -7.334580898284912
    6. ' i' → logprob: -8.20958137512207
    7. 'int' → logprob: -8.20958137512207
    8. ':' → logprob: -8.45958137512207
    9. ' ' → logprob: -8.70958137512207
    10. '         ' → logprob: -8.70958137512207

Token 174: ' i' (ID: 575)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00217131688259542
    2. 'res' → logprob: -6.377171516418457
    3. ' s' → logprob: -8.502171516418457
    4. 'r' → logprob: -8.627171516418457
    5. '   ' → logprob: -9.877171516418457
    6. 'ret' → logprob: -11.127171516418457
    7. 'i' (adapté à ' i') → logprob: -11.877171516418457
    8. 'result' → logprob: -12.002171516418457
    9. ' res' → logprob: -12.377171516418457
    10. '       ' → logprob: -13.752171516418457

Token 175: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.03467483073472977
    2. '=' → logprob: -3.409674882888794
    3. '=int' → logprob: -7.159674644470215
    4. ' +=' → logprob: -9.534674644470215
    5. '-=' → logprob: -9.909674644470215
    6. '=i' → logprob: -10.409674644470215
    7. '0' → logprob: -10.409674644470215
    8. '+' → logprob: -10.659674644470215
    9. '>=' → logprob: -11.034674644470215
    10. ']+=' → logprob: -12.034674644470215

Token 176: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003613256849348545
    2. 'i' → logprob: -8.250361442565918
    3. '0' → logprob: -9.250361442565918
    4. ' ' → logprob: -12.750361442565918
    5. ' i' → logprob: -14.250361442565918
    6. '-' → logprob: -16.0003604888916
    7. '
' → logprob: -16.7503604888916
    8. '(i' → logprob: -16.8753604888916
    9. '<|end|>' → logprob: -16.8753604888916
    10. '+' → logprob: -17.5003604888916

Token 177: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16401508450508118
    2. '           ' → logprob: -2.164015054702759
    3. 'res' → logprob: -3.789015054702759
    4. ' s' → logprob: -4.664015293121338
    5. 'r' → logprob: -6.289015293121338
    6. '       ' → logprob: -6.414015293121338
    7. 'result' → logprob: -7.664015293121338
    8. 'total' → logprob: -8.91401481628418
    9. 'ans' → logprob: -9.03901481628418
    10. 'ret' → logprob: -10.78901481628418

Token 178: '           ' (ID: 352)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.021375872194767
    2. 'res' → logprob: -4.27137565612793
    3. '           ' → logprob: -5.02137565612793
    4. ' s' → logprob: -7.64637565612793
    5. 'r' → logprob: -9.77137565612793
    6. '       ' → logprob: -10.64637565612793
    7. 'result' → logprob: -11.02137565612793
    8. 'ret' → logprob: -12.39637565612793
    9. 'ans' → logprob: -12.52137565612793
    10. ' res' → logprob: -12.89637565612793

Token 179: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.014191241934895515
    2. 'res' → logprob: -4.264191150665283
    3. 'ret' → logprob: -11.139191627502441
    4. 'result' → logprob: -11.889191627502441
    5. 'r' → logprob: -12.264191627502441
    6. ' s' → logprob: -13.889191627502441
    7. 'sm' → logprob: -15.139191627502441
    8. 'ans' → logprob: -15.889191627502441
    9. 'S' → logprob: -16.264190673828125
    10. ' res' → logprob: -17.514190673828125

Token 180: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00038264848990365863
    2. ' =' → logprob: -7.875382423400879
    3. '=int' → logprob: -14.000382423400879
    4. '=s' → logprob: -15.500382423400879
    5. '=[]' → logprob: -15.500382423400879
    6. '=sum' → logprob: -15.625382423400879
    7. '+=' → logprob: -15.875382423400879
    8. '=self' → logprob: -15.875382423400879
    9. '=
' → logprob: -16.125383377075195
    10. '=

' → logprob: -16.250383377075195

Token 181: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. 'self' → logprob: -21.0
    4. '   ' → logprob: -22.625
    5. '۰' → logprob: -23.25
    6. '000' → logprob: -23.25
    7. '```' → logprob: -23.375
    8. '<|end|>' → logprob: -24.5
    9. '
' → logprob: -24.75
    10. '=' → logprob: -24.75

Token 182: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.738279402256012
    2. '           ' → logprob: -0.988279402256012
    3. '<|end|>' → logprob: -2.238279342651367
    4. 'while' → logprob: -3.738279342651367
    5. ' while' → logprob: -4.988279342651367
    6. '<|end|>' → logprob: -5.238279342651367
    7. '       ' → logprob: -5.863279342651367
    8. '	while' → logprob: -6.363279342651367
    9. '	       ' → logprob: -6.988279342651367
    10. '            
' → logprob: -8.113279342651367

Token 183: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.36854133009910583
    2. '<|end|>' → logprob: -1.2435413599014282
    3. '<|end|>' → logprob: -5.243541240692139
    4. '       ' → logprob: -5.493541240692139
    5. ' while' → logprob: -5.493541240692139
    6. 'while' → logprob: -5.743541240692139
    7. '	       ' → logprob: -6.368541240692139
    8. '
' → logprob: -7.618541240692139
    9. '	while' → logprob: -7.993541240692139
    10. '   ' → logprob: -8.743541717529297

Token 184: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0009159822366200387
    2. ' while' → logprob: -7.000916004180908
    3. 'While' → logprob: -12.75091552734375
    4. '           ' → logprob: -13.87591552734375
    5. '	while' → logprob: -14.50091552734375
    6. ' While' → logprob: -16.75091552734375
    7. 'i' → logprob: -17.00091552734375
    8. '       ' → logprob: -18.00091552734375
    9. '0' → logprob: -18.62591552734375
    10. ' ' → logprob: -18.87591552734375

Token 185: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2519320547580719
    2. ' i' → logprob: -1.5019320249557495
    3. '0' → logprob: -13.626932144165039
    4. '	i' → logprob: -14.126932144165039
    5. '(i' → logprob: -15.001932144165039
    6. '   ' → logprob: -15.251932144165039
    7. ' ' → logprob: -16.12693214416504
    8. ',i' → logprob: -16.62693214416504
    9. ')i' → logprob: -17.12693214416504
    10. '[i' → logprob: -17.25193214416504

Token 186: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -5.407366916188039e-05
    2. ' >' → logprob: -10.000054359436035
    3. '">' → logprob: -13.250054359436035
    4. '&gt' → logprob: -13.500054359436035
    5. '&' → logprob: -13.875054359436035
    6. ':' → logprob: -14.750054359436035
    7. '()>' → logprob: -14.750054359436035
    8. '```' → logprob: -14.750054359436035
    9. '<|end|>' → logprob: -14.875054359436035
    10. 'i' → logprob: -14.875054359436035

Token 187: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. '=' → logprob: -17.125011444091797
    4. '1' → logprob: -17.375011444091797
    5. '>' → logprob: -19.125011444091797
    6. 'i' → logprob: -19.250011444091797
    7. '           ' → logprob: -19.875011444091797
    8. '   ' → logprob: -20.750011444091797
    9. '       ' → logprob: -21.375011444091797
    10. '        ' → logprob: -21.500011444091797

Token 188: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.12954366207122803
    2. ':' → logprob: -2.2545437812805176
    3. '               ' → logprob: -4.129543781280518
    4. '):
' → logprob: -8.75454330444336
    5. '           ' → logprob: -9.37954330444336
    6. ' and' → logprob: -10.00454330444336
    7. ':s' → logprob: -10.00454330444336
    8. '<|end|>' → logprob: -10.12954330444336
    9. ',' → logprob: -10.25454330444336
    10. 's' → logprob: -11.00454330444336

Token 189: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003035266126971692
    2. 's' → logprob: -9.250303268432617
    3. ' s' → logprob: -9.375303268432617
    4. '```' → logprob: -9.750303268432617
    5. '           ' → logprob: -10.375303268432617
    6. '              ' → logprob: -11.625303268432617
    7. '<|end|>' → logprob: -12.000303268432617
    8. '                ' → logprob: -12.500303268432617
    9. '   ' → logprob: -13.000303268432617
    10. '       ' → logprob: -13.125303268432617

Token 190: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.006363854743540287
    2. '               ' → logprob: -5.256363868713379
    3. ' s' → logprob: -6.881363868713379
    4. '           ' → logprob: -9.256363868713379
    5. '                   ' → logprob: -13.131363868713379
    6. '```' → logprob: -13.131363868713379
    7. '   ' → logprob: -14.631363868713379
    8. '
' → logprob: -14.756363868713379
    9. '              ' → logprob: -14.881363868713379
    10. '`s' → logprob: -15.131363868713379

Token 191: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0032177609391510487
    2. ' +=' → logprob: -5.878217697143555
    3. '+' → logprob: -8.878217697143555
    4. ']+=' → logprob: -9.003217697143555
    5. '+=(' → logprob: -9.128217697143555
    6. '               ' → logprob: -11.003217697143555
    7. '```' → logprob: -11.878217697143555
    8. '<|end|>' → logprob: -12.128217697143555
    9. '           ' → logprob: -12.628217697143555
    10. '+="' → logprob: -13.003217697143555

Token 192: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.8889261304575484e-06
    2. ' self' → logprob: -12.500003814697266
    3. '(self' → logprob: -17.000003814697266
    4. '[self' → logprob: -17.125003814697266
    5. '	self' → logprob: -18.250003814697266
    6. '=self' → logprob: -18.250003814697266
    7. '*self' → logprob: -19.625003814697266
    8. '<|end|>' → logprob: -19.750003814697266
    9. '           ' → logprob: -19.875003814697266
    10. '_self' → logprob: -20.375003814697266

Token 193: '.dat' (ID: 17439)
  Prédit: '.dat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dat' → logprob: -7.064297824399546e-05
    2. 'dat' → logprob: -10.000070571899414
    3. '@dat' → logprob: -10.625070571899414
    4. '.' → logprob: -14.750070571899414
    5. '.datab' → logprob: -16.250070571899414
    6. '```' → logprob: -16.625070571899414
    7. 'self' → logprob: -17.250070571899414
    8. '/dat' → logprob: -17.625070571899414
    9. '   ' → logprob: -17.750070571899414

Token 194: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. 'i' → logprob: -15.625
    3. '[' → logprob: -16.625
    4. '(i' → logprob: -20.125
    5. '[
' → logprob: -20.125
    6. ' i' → logprob: -20.25
    7. '[I' → logprob: -20.25
    8. '{i' → logprob: -20.875
    9. '	i' → logprob: -21.125
    10. '[self' → logprob: -21.25

Token 195: ']
' (ID: 1592)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004131472669541836
    2. ')' → logprob: -6.129131317138672
    3. '           ' → logprob: -7.504131317138672
    4. '
' → logprob: -8.129131317138672
    5. ')
' → logprob: -8.504131317138672
    6. '<|end|>' → logprob: -8.629131317138672
    7. ',i' → logprob: -9.004131317138672
    8. '	           ' → logprob: -9.004131317138672
    9. ')i' → logprob: -9.254131317138672
    10. '<|end|>' → logprob: -9.379131317138672

Token 196: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -4.0126840758603066e-05
    2. '           ' → logprob: -10.750040054321289
    3. 'i' → logprob: -12.500040054321289
    4. '              ' → logprob: -12.750040054321289
    5. '       ' → logprob: -13.375040054321289
    6. '   ' → logprob: -13.500040054321289
    7. '                
' → logprob: -13.625040054321289
    8. '	           ' → logprob: -13.750040054321289
    9. ',i' → logprob: -13.875040054321289
    10. ',' → logprob: -14.000040054321289

Token 197: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.00735068554058671
    2. ' i' → logprob: -5.007350921630859
    3. '               ' → logprob: -7.382350921630859
    4. '           ' → logprob: -12.50735092163086
    5. '   ' → logprob: -13.13235092163086
    6. '                   ' → logprob: -13.13235092163086
    7. '```' → logprob: -13.25735092163086
    8. ',i' → logprob: -13.88235092163086
    9. '
' → logprob: -14.25735092163086
    10. ' ' → logprob: -14.38235092163086

Token 198: '-=' (ID: 77519)
  Prédit: '-='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.0009296870557591319
    2. '-' → logprob: -7.000929832458496
    3. ' -=' → logprob: -11.000929832458496
    4. '+=' → logprob: -14.875929832458496
    5. '&' → logprob: -14.875929832458496
    6. '>' → logprob: -15.625929832458496
    7. '```' → logprob: -15.625929832458496
    8. '   ' → logprob: -15.750929832458496
    9. '>>' → logprob: -16.25092887878418
    10. '=' → logprob: -16.50092887878418

Token 199: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0002614550176076591
    2. ' i' → logprob: -8.250261306762695
    3. '	i' → logprob: -15.875261306762695
    4. '(i' → logprob: -16.125261306762695
    5. ',i' → logprob: -18.750261306762695
    6. '```' → logprob: -19.375261306762695
    7. '{i' → logprob: -19.625261306762695
    8. '   ' → logprob: -19.875261306762695
    9. '
' → logprob: -20.500261306762695
    10. '\' → logprob: -20.625261306762695

Token 200: '&' (ID: 5)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10196948796510696
    2. '&i' → logprob: -2.3519694805145264
    3. ' i' → logprob: -6.8519697189331055
    4. '&' → logprob: -7.3519697189331055
    5. '	i' → logprob: -11.351969718933105
    6. '[i' → logprob: -11.976969718933105
    7. '(i' → logprob: -12.101969718933105
    8. ' &' → logprob: -12.226969718933105
    9. '=i' → logprob: -12.601969718933105
    10. '               ' → logprob: -12.601969718933105

Token 201: '-' (ID: 12)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0005887754959985614
    2. ' i' → logprob: -7.500588893890381
    3. '-i' → logprob: -10.250588417053223
    4. '-' → logprob: -15.125588417053223
    5. '	i' → logprob: -16.12558937072754
    6. ' -' → logprob: -17.75058937072754
    7. '(i' → logprob: -18.12558937072754
    8. ',i' → logprob: -18.25058937072754
    9. ':i' → logprob: -18.62558937072754
    10. '```' → logprob: -18.62558937072754

Token 202: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.512236498361744e-07
    2. ' i' → logprob: -14.625000953674316
    3. '	i' → logprob: -19.0
    4. 'I' → logprob: -20.0
    5. '_i' → logprob: -20.0
    6. '-i' → logprob: -20.125
    7. '```' → logprob: -20.75
    8. '(i' → logprob: -21.125
    9. '<|end|>' → logprob: -21.375
    10. '1' → logprob: -21.875

Token 203: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8188640475273132
    2. '           ' → logprob: -0.8188640475273132
    3. 'return' → logprob: -2.318864107131958
    4. ' return' → logprob: -4.443863868713379
    5. '               ' → logprob: -6.318863868713379
    6. '
' → logprob: -6.318863868713379
    7. '   ' → logprob: -6.318863868713379
    8. '	return' → logprob: -6.443863868713379
    9. '0' → logprob: -8.193863868713379
    10. 's' → logprob: -8.818863868713379

Token 204: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14726842939853668
    2. '       ' → logprob: -2.022268533706665
    3. 'return' → logprob: -5.897268295288086
    4. '
' → logprob: -7.397268295288086
    5. ' return' → logprob: -7.397268295288086
    6. '	return' → logprob: -8.772268295288086
    7. '               ' → logprob: -8.897268295288086
    8. '   ' → logprob: -9.272268295288086
    9. '		' → logprob: -9.272268295288086
    10. '	' → logprob: -10.272268295288086

Token 205: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16176511347293854
    2. 'return' (adapté à ' return') → logprob: -2.5367650985717773
    3. '           ' → logprob: -2.7867650985717773
    4. ' return' → logprob: -5.036765098571777
    5. '	return' → logprob: -6.911765098571777
    6. '   ' → logprob: -7.036765098571777
    7. '	' → logprob: -8.661765098571777
    8. '               ' → logprob: -10.661765098571777
    9. '		' → logprob: -11.036765098571777
    10. '	   ' → logprob: -11.536765098571777

Token 206: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.011047814972698689
    2. ' s' → logprob: -4.511047840118408
    3. '`s' → logprob: -20.13604736328125
    4. '(s' → logprob: -20.88604736328125
    5. '<s' → logprob: -21.26104736328125
    6. '```' → logprob: -21.26104736328125
    7. '
' → logprob: -21.38604736328125
    8. '	s' → logprob: -21.76104736328125
    9. ' ' → logprob: -21.88604736328125
    10. ' ' → logprob: -22.01104736328125

Token 207: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5730986595153809
    2. '       ' → logprob: -1.3230986595153809
    3. '<|end|>' → logprob: -1.8230986595153809
    4. '<|end|>' → logprob: -5.073098659515381
    5. '        
' → logprob: -6.823098659515381
    6. '   ' → logprob: -7.448098659515381
    7. 'def' → logprob: -8.823099136352539
    8. '    
' → logprob: -9.698099136352539
    9. '```' → logprob: -10.323099136352539
    10. '
' → logprob: -10.573099136352539

Token 208: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5404499173164368
    2. '
' → logprob: -1.415449857711792
    3. '<|end|>' → logprob: -1.790449857711792
    4. '<|end|>' → logprob: -5.540450096130371
    5. '        
' → logprob: -6.290450096130371
    6. 'def' → logprob: -6.915450096130371
    7. '   ' → logprob: -7.540450096130371
    8. '    
' → logprob: -9.040450096130371
    9. '#' → logprob: -9.915450096130371
    10. '```' → logprob: -10.165450096130371

Token 209: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0096278740093112
    2. '
' → logprob: -5.259627819061279
    3. 'def' (adapté à ' def') → logprob: -5.884627819061279
    4. '   ' → logprob: -6.884627819061279
    5. '        
' → logprob: -8.384628295898438
    6. ' def' → logprob: -9.759628295898438
    7. '```' → logprob: -9.884628295898438
    8. '    
' → logprob: -10.134628295898438
    9. '           ' → logprob: -10.134628295898438
    10. ')' → logprob: -10.884628295898438

Token 210: ' lower' (ID: 6931)
  Prédit: 'query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'query' → logprob: -0.21965987980365753
    2. 'get' → logprob: -1.9696599245071411
    3. 'range' → logprob: -3.0946598052978516
    4. 'lower' → logprob: -4.719659805297852
    5. 'prod' → logprob: -6.844659805297852
    6. 'sum' → logprob: -6.969659805297852
    7. ' query' → logprob: -8.094659805297852
    8. '__' → logprob: -8.219659805297852
    9. 'size' → logprob: -8.344659805297852
    10. 'update' → logprob: -9.344659805297852

Token 211: '_bound' (ID: 47558)
  Prédit: '_bound'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bound' → logprob: -0.0013361937599256635
    2. 'bound' → logprob: -6.626336097717285
    3. '(self' → logprob: -12.376336097717285
    4. '```' → logprob: -14.126336097717285
    5. '(i' → logprob: -14.251336097717285
    6. '_' → logprob: -14.376336097717285
    7. ' bound' → logprob: -14.501336097717285
    8. '-bound' → logprob: -14.501336097717285
    9. '_b' → logprob: -14.501336097717285
    10. '(bound' → logprob: -15.001336097717285

Token 212: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.4021237802808173e-05
    2. ' (' → logprob: -11.625014305114746
    3. '(' → logprob: -12.375014305114746
    4. '(s' → logprob: -14.375014305114746
    5. 'self' → logprob: -15.875014305114746
    6. '(sel' → logprob: -17.00001335144043
    7. '   ' → logprob: -17.25001335144043
    8. '       ' → logprob: -17.75001335144043
    9. '(this' → logprob: -17.87501335144043
    10. ' ' → logprob: -18.25001335144043

Token 213: ',x' (ID: 29748)
  Prédit: ',self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',self' → logprob: -0.15380291640758514
    2. '(self' → logprob: -2.4038028717041016
    3. ',' → logprob: -3.6538028717041016
    4. ' ,' → logprob: -4.528802871704102
    5. ',s' → logprob: -4.528802871704102
    6. 'self' → logprob: -5.653802871704102
    7. ',k' → logprob: -7.528802871704102
    8. ',t' → logprob: -8.278802871704102
    9. ',i' → logprob: -9.778802871704102
    10. ',(' → logprob: -9.903802871704102

Token 214: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5581133365631104
    2. ',self' → logprob: -1.3081133365631104
    3. ',' → logprob: -2.4331133365631104
    4. '):
' → logprob: -3.1831133365631104
    5. 'self' → logprob: -4.058113098144531
    6. '(self' → logprob: -4.683113098144531
    7. '       ' → logprob: -7.683113098144531
    8. ' ,' → logprob: -8.058113098144531
    9. ',s' → logprob: -8.308113098144531
    10. ',i' → logprob: -9.058113098144531

Token 215: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.030614834278821945
    2. '       ' → logprob: -3.5306148529052734
    3. ' i' → logprob: -7.530614852905273
    4. 'i' → logprob: -8.905614852905273
    5. '	       ' → logprob: -9.280614852905273
    6. '          ' → logprob: -10.655614852905273
    7. '   ' → logprob: -10.780614852905273
    8. ',' → logprob: -11.030614852905273
    9. '<|end|>' → logprob: -11.655614852905273
    10. '         ' → logprob: -12.155614852905273

Token 216: ' sum' (ID: 4215)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.03987414389848709
    2. 'idx' → logprob: -4.289874076843262
    3. 'i' → logprob: -4.414874076843262
    4. ' pos' → logprob: -5.539874076843262
    5. 'l' → logprob: -5.789874076843262
    6. '       ' → logprob: -5.914874076843262
    7. '   ' → logprob: -6.164874076843262
    8. 'k' → logprob: -7.664874076843262
    9. 'res' → logprob: -8.164874076843262
    10. 'def' → logprob: -8.664874076843262

Token 217: '_=' (ID: 115480)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00490485830232501
    2. '=i' → logprob: -5.504904747009277
    3. ' =' → logprob: -7.504904747009277
    4. '_=' → logprob: -9.629904747009277
    5. '=sum' → logprob: -10.254904747009277
    6. ',i' → logprob: -10.379904747009277
    7. '=s' → logprob: -10.629904747009277
    8. '=self' → logprob: -11.004904747009277
    9. '=int' → logprob: -11.129904747009277
    10. '=k' → logprob: -11.879904747009277

Token 218: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '０' → logprob: -18.75
    4. '
' → logprob: -19.75
    5. '۰' → logprob: -20.125
    6. '=' → logprob: -20.625
    7. '-' → logprob: -22.25
    8. '   ' → logprob: -22.875
    9. 'pos' → logprob: -23.0
    10. '```' → logprob: -23.25

Token 219: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24606925249099731
    2. 'i' → logprob: -2.2460691928863525
    3. 'pos' → logprob: -2.8710691928863525
    4. ' pos' → logprob: -3.6210691928863525
    5. ' i' → logprob: -4.371069431304932
    6. ',pos' → logprob: -5.496069431304932
    7. ',i' → logprob: -5.746069431304932
    8. ',' → logprob: -5.996069431304932
    9. '       ' → logprob: -6.371069431304932
    10. '   ' → logprob: -6.621069431304932

Token 220: '           ' (ID: 352)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12039823085069656
    2. '       ' → logprob: -2.9953982830047607
    3. 'pos' → logprob: -2.9953982830047607
    4. ' i' → logprob: -5.120398044586182
    5. '           ' → logprob: -5.495398044586182
    6. ' pos' → logprob: -5.995398044586182
    7. '   ' → logprob: -7.870398044586182
    8. 'idx' → logprob: -8.12039852142334
    9. 'k' → logprob: -9.74539852142334
    10. '```' → logprob: -10.37039852142334

Token 221: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.0007788925431668758
    2. 'i' → logprob: -7.250778675079346
    3. 'idx' → logprob: -9.750779151916504
    4. 'k' → logprob: -12.000779151916504
    5. ' pos' → logprob: -13.375779151916504
    6. 'id' → logprob: -13.875779151916504
    7. 'res' → logprob: -14.250779151916504
    8. 'ipos' → logprob: -15.125779151916504
    9. '```' → logprob: -15.625779151916504
    10. '	pos' → logprob: -15.875779151916504

Token 222: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0005076381494291127
    2. ' =' → logprob: -7.625507831573486
    3. '=-' → logprob: -10.875507354736328
    4. '   ' → logprob: -14.875507354736328
    5. '=int' → logprob: -16.875507354736328
    6. '=self' → logprob: -17.000507354736328
    7. ' ' → logprob: -17.000507354736328
    8. '           ' → logprob: -17.125507354736328
    9. '       ' → logprob: -17.750507354736328
    10. '＝' → logprob: -17.875507354736328

Token 223: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '000' → logprob: -18.000001907348633
    4. '00' → logprob: -18.750001907348633
    5. '۰' → logprob: -19.500001907348633
    6. '０' → logprob: -19.625001907348633
    7. '-' → logprob: -20.250001907348633
    8. '=' → logprob: -21.250001907348633
    9. '   ' → logprob: -21.500001907348633
    10. '012' → logprob: -21.750001907348633

Token 224: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11647187918424606
    2. ' for' → logprob: -2.491471767425537
    3. 'for' → logprob: -3.741471767425537
    4. '       ' → logprob: -5.866471767425537
    5. '   ' → logprob: -7.866471767425537
    6. 'i' → logprob: -9.991472244262695
    7. '
' → logprob: -10.116472244262695
    8. '		' → logprob: -11.116472244262695
    9. 'b' → logprob: -11.241472244262695
    10. '```' → logprob: -11.366472244262695

Token 225: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.049819931387901306
    2. 'for' → logprob: -3.4248199462890625
    3. ' for' → logprob: -4.1748199462890625
    4. '       ' → logprob: -7.9248199462890625
    5. '   ' → logprob: -8.674819946289062
    6. 'i' → logprob: -9.424819946289062
    7. '		' → logprob: -11.174819946289062
    8. '	for' → logprob: -11.924819946289062
    9. 'd' → logprob: -12.049819946289062
    10. ' i' → logprob: -12.424819946289062

Token 226: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0001721934968372807
    2. ' for' → logprob: -9.25017261505127
    3. 'i' → logprob: -10.12517261505127
    4. '   ' → logprob: -10.62517261505127
    5. '       ' → logprob: -11.62517261505127
    6. 'bit' → logprob: -13.37517261505127
    7. ' ' → logprob: -14.75017261505127
    8. 'k' → logprob: -15.62517261505127
    9. '	for' → logprob: -15.87517261505127
    10. '           ' → logprob: -15.87517261505127

Token 227: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08822955191135406
    2. 'd' → logprob: -3.0882296562194824
    3. 'k' → logprob: -3.9632296562194824
    4. ' i' → logprob: -3.9632296562194824
    5. ' d' → logprob: -7.338229656219482
    6. ' k' → logprob: -8.588229179382324
    7. 'j' → logprob: -11.213229179382324
    8. 'e' → logprob: -12.088229179382324
    9. 'shift' → logprob: -13.338229179382324
    10. 's' → logprob: -13.963229179382324

Token 228: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.013055521994829178
    2. '=' → logprob: -5.388055324554443
    3. ' =' → logprob: -5.888055324554443
    4. 'in' → logprob: -6.388055324554443
    5. ',' → logprob: -6.763055324554443
    6. '           ' → logprob: -7.763055324554443
    7. ' (' → logprob: -8.013055801391602
    8. '   ' → logprob: -8.138055801391602
    9. ' ' → logprob: -8.138055801391602
    10. '1' → logprob: -8.638055801391602

Token 229: ' range' (ID: 3352)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.6046047806739807
    2. 'range' → logprob: -0.8546047806739807
    3. ' reversed' → logprob: -3.604604721069336
    4. ' range' → logprob: -7.104604721069336
    5. '[' → logprob: -8.354604721069336
    6. '[::-' → logprob: -13.229604721069336
    7. 'reverse' → logprob: -14.229604721069336
    8. '(range' → logprob: -14.979604721069336
    9. ' [' → logprob: -15.229604721069336
    10. '[self' → logprob: -15.729604721069336

Token 230: '(self' (ID: 2402)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03554323688149452
    2. '(self' → logprob: -3.535543203353882
    3. ' self' → logprob: -5.160543441772461
    4. ' ' → logprob: -11.535543441772461
    5. '   ' → logprob: -11.785543441772461
    6. '[self' → logprob: -12.285543441772461
    7. '(' → logprob: -12.535543441772461
    8. '	self' → logprob: -12.910543441772461
    9. '20' → logprob: -13.035543441772461
    10. '
' → logprob: -13.410543441772461

Token 231: '.depth' (ID: 89791)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.6961767673492432
    2. '.depth' → logprob: -0.8211767673492432
    3. 'self' → logprob: -2.821176767349243
    4. '
' → logprob: -7.196176528930664
    5. '20' → logprob: -8.571176528930664
    6. '(depth' → logprob: -8.696176528930664
    7. '[self' → logprob: -9.196176528930664
    8. ' depth' → logprob: -9.571176528930664
    9. ' ' → logprob: -9.696176528930664
    10. '.bit' → logprob: -9.821176528930664

Token 232: ',-' (ID: 8202)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2119019478559494
    2. ' -' → logprob: -2.211901903152466
    3. ',' → logprob: -2.836901903152466
    4. ',-' → logprob: -3.836901903152466
    5. ' ,' → logprob: -6.711902141571045
    6. ',self' → logprob: -10.836901664733887
    7. ' ,-' → logprob: -10.836901664733887
    8. '           ' → logprob: -11.711901664733887
    9. ',len' → logprob: -11.836901664733887
    10. ' ' → logprob: -12.086901664733887

Token 233: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '-' → logprob: -14.875000953674316
    3. ' ' → logprob: -16.0
    4. ' -' → logprob: -17.375
    5. '
' → logprob: -17.75
    6. '2' → logprob: -18.125
    7. '１' → logprob: -19.25
    8. '

' → logprob: -19.875
    9. '```' → logprob: -20.625
    10. '   ' → logprob: -20.625

Token 234: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.06887096911668777
    2. ',' → logprob: -3.193871021270752
    3. '-' → logprob: -4.193871021270752
    4. '1' → logprob: -4.818871021270752
    5. ' -' → logprob: -6.693871021270752
    6. ' ,' → logprob: -7.568871021270752
    7. ' ,-' → logprob: -8.068870544433594
    8. '   ' → logprob: -8.443870544433594
    9. '  ' → logprob: -10.193870544433594
    10. ' ' → logprob: -10.568870544433594

Token 235: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '   ' → logprob: -17.5
    4. '
' → logprob: -17.875
    5. '-' → logprob: -20.0
    6. '１' → logprob: -20.25
    7. '  ' → logprob: -20.375
    8. '```' → logprob: -20.5
    9. '2' → logprob: -21.0
    10. ' -' → logprob: -22.0625

Token 236: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -1.0422941446304321
    2. '1' → logprob: -1.1672941446304321
    3. '):
' → logprob: -1.4172941446304321
    4. ',' → logprob: -3.4172940254211426
    5. ' ' → logprob: -4.292294025421143
    6. '-' → logprob: -4.542294025421143
    7. ',-' → logprob: -4.667294025421143
    8. '   ' → logprob: -4.667294025421143
    9. ' -' → logprob: -5.417294025421143
    10. '           ' → logprob: -5.542294025421143

Token 237: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.028962869197130203
    2. ' if' → logprob: -4.278963088989258
    3. '           ' → logprob: -5.028963088989258
    4. '   ' → logprob: -5.403963088989258
    5. '1' → logprob: -6.778963088989258
    6. '            ' → logprob: -7.153963088989258
    7. ' ' → logprob: -7.278963088989258
    8. ' x' → logprob: -9.028963088989258
    9. '32' → logprob: -9.028963088989258
    10. '    ' → logprob: -9.278963088989258

Token 238: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.6980590224266052
    2. 'k' (adapté à ' k') → logprob: -1.07305908203125
    3. ' if' → logprob: -3.19805908203125
    4. ' b' → logprob: -3.32305908203125
    5. 'b' → logprob: -4.07305908203125
    6. ' bit' → logprob: -4.07305908203125
    7. 'bit' → logprob: -4.82305908203125
    8. ' d' → logprob: -4.82305908203125
    9. ' nxt' → logprob: -5.19805908203125
    10. 'if' → logprob: -5.32305908203125

Token 239: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0242184828966856
    2. ' =' → logprob: -3.7742185592651367
    3. '=(' → logprob: -8.399218559265137
    4. ' ' → logprob: -8.399218559265137
    5. '=self' → logprob: -9.024218559265137
    6. '   ' → logprob: -9.024218559265137
    7. '1' → logprob: -9.149218559265137
    8. '=k' → logprob: -9.774218559265137
    9. '                   ' → logprob: -10.649218559265137
    10. 'pos' → logprob: -11.274218559265137

Token 240: 'pos' (ID: 1103)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.47411271929740906
    2. 'pos' → logprob: -0.9741127490997314
    3. '(' → logprob: -11.224112510681152
    4. '(pos' → logprob: -11.349112510681152
    5. ' pos' → logprob: -11.599112510681152
    6. ' ' → logprob: -13.849112510681152
    7. '[pos' → logprob: -15.599112510681152
    8. 'bit' → logprob: -16.59911346435547
    9. '	pos' → logprob: -16.72411346435547
    10. ',pos' → logprob: -16.84911346435547

Token 241: '+(' (ID: 31717)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6900133490562439
    2. ' +' → logprob: -1.1900134086608887
    3. '+(' → logprob: -1.6900134086608887
    4. '|' → logprob: -5.190013408660889
    5. '+k' → logprob: -6.190013408660889
    6. '+i' → logprob: -7.315013408660889
    7. '|(' → logprob: -8.19001293182373
    8. ' |' → logprob: -8.31501293182373
    9. '(' → logprob: -8.44001293182373
    10. '   ' → logprob: -8.94001293182373

Token 242: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.25
    3. ')' → logprob: -18.125
    4. ' ' → logprob: -19.25
    5. '   ' → logprob: -20.875
    6. '```' → logprob: -21.25
    7. '
' → logprob: -21.875
    8. '[' → logprob: -22.625
    9. '１' → logprob: -23.25
    10. '' → logprob: -23.5

Token 243: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.0003502434410620481
    2. ' <<' → logprob: -8.000349998474121
    3. '<' → logprob: -12.250349998474121
    4. '<<(' → logprob: -12.625349998474121
    5. ')<<' → logprob: -13.000349998474121
    6. '1' → logprob: -13.000349998474121
    7. '()<<' → logprob: -14.125349998474121
    8. '<<<' → logprob: -14.250349998474121
    9. '```' → logprob: -15.625349998474121
    10. ')' → logprob: -15.875349998474121

Token 244: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.842555426876061e-06
    2. ' i' → logprob: -12.250004768371582
    3. '	i' → logprob: -17.8750057220459
    4. ')i' → logprob: -18.6250057220459
    5. '<|end|>' → logprob: -18.6250057220459
    6. '```' → logprob: -19.5000057220459
    7. '(i' → logprob: -20.7500057220459
    8. '
' → logprob: -20.8750057220459
    9. ',i' → logprob: -21.5000057220459
    10. '*i' → logprob: -21.6250057220459

Token 245: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01604035124182701
    2. ')
' → logprob: -4.141040325164795
    3. ' )' → logprob: -13.141040802001953
    4. 'if' → logprob: -13.641040802001953
    5. ')#' → logprob: -14.266040802001953
    6. '<|end|>' → logprob: -14.641040802001953
    7. ')

' → logprob: -14.891040802001953
    8. ')
' → logprob: -15.516040802001953
    9. ' )
' → logprob: -15.516040802001953
    10. '):
' → logprob: -16.016040802001953

Token 246: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5612165331840515
    2. '<|end|>' → logprob: -1.0612165927886963
    3. ' if' → logprob: -3.4362165927886963
    4. '<|end|>' → logprob: -3.8112165927886963
    5. '                   ' → logprob: -4.936216354370117
    6. '           ' → logprob: -5.186216354370117
    7. '
' → logprob: -5.686216354370117
    8. 'if' → logprob: -6.061216354370117
    9. '```' → logprob: -6.436216354370117
    10. ':' → logprob: -6.561216354370117

Token 247: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.469908207654953
    2. 'if' (adapté à ' if') → logprob: -1.2199082374572754
    3. '               ' → logprob: -2.5949082374572754
    4. '<|end|>' → logprob: -6.219908237457275
    5. ' ' → logprob: -6.594908237457275
    6. '                   ' → logprob: -7.969908237457275
    7. '                ' → logprob: -8.719907760620117
    8. '@if' → logprob: -8.719907760620117
    9. '	if' → logprob: -9.094907760620117
    10. '           ' → logprob: -9.094907760620117

Token 248: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0010329303331673145
    2. ' k' → logprob: -6.876032829284668
    3. '   ' → logprob: -16.751033782958984
    4. ' ' → logprob: -16.751033782958984
    5. '	k' → logprob: -16.876033782958984
    6. '  ' → logprob: -18.126033782958984
    7. '(k' → logprob: -18.126033782958984
    8. 'self' → logprob: -18.501033782958984
    9. '                   ' → logprob: -18.751033782958984
    10. '               ' → logprob: -19.376033782958984

Token 249: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.004984809085726738
    2. ' <=' → logprob: -5.3799848556518555
    3. '<' → logprob: -8.004984855651855
    4. '<len' → logprob: -11.629984855651855
    5. ')<=' → logprob: -11.754984855651855
    6. 'self' → logprob: -12.254984855651855
    7. ']<=' → logprob: -12.629984855651855
    8. '```' → logprob: -13.754984855651855
    9. ' <' → logprob: -13.879984855651855
    10. '≤' → logprob: -14.254984855651855

Token 250: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.9027791495318525e-05
    2. ' self' → logprob: -10.875019073486328
    3. '	self' → logprob: -18.250019073486328
    4. '           ' → logprob: -18.625019073486328
    5. '   ' → logprob: -18.625019073486328
    6. '(self' → logprob: -19.125019073486328
    7. '<|end|>' → logprob: -19.625019073486328
    8. '_self' → logprob: -19.875019073486328
    9. ' ' → logprob: -20.750019073486328
    10. '=self' → logprob: -20.875019073486328

Token 251: '.num' (ID: 19403)
  Prédit: '.num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.num' → logprob: -0.00408053956925869
    2. 'num' → logprob: -5.504080772399902
    3. '	num' → logprob: -14.004080772399902
    4. '<num' → logprob: -14.129080772399902
    5. ' num' → logprob: -15.129080772399902
    6. ',num' → logprob: -16.504079818725586
    7. '_num' → logprob: -17.504079818725586
    8. '[num' → logprob: -17.504079818725586
    9. '$num' → logprob: -17.754079818725586
    10. ':num' → logprob: -17.879079818725586

Token 252: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.16023387014865875
    2. 'and' → logprob: -1.9102338552474976
    3. '               ' → logprob: -11.910233497619629
    4. '           ' → logprob: -13.410233497619629
    5. '	and' → logprob: -14.160233497619629
    6. '                   ' → logprob: -15.535233497619629
    7. '              ' → logprob: -15.660233497619629
    8. '                ' → logprob: -16.785234451293945
    9. ' ' → logprob: -16.910234451293945
    10. '          ' → logprob: -17.035234451293945

Token 253: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.16033074259757996
    2. 'self' → logprob: -1.9103307723999023
    3. ' sum' → logprob: -9.285330772399902
    4. ' self' → logprob: -11.410330772399902
    5. '(sum' → logprob: -13.410330772399902
    6. '   ' → logprob: -14.910330772399902
    7. '(self' → logprob: -15.160330772399902
    8. 's' → logprob: -15.410330772399902
    9. 'summ' → logprob: -15.785330772399902
    10. '
' → logprob: -16.910329818725586

Token 254: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.019714463502168655
    2. '+' → logprob: -4.01971435546875
    3. '+x' → logprob: -7.14471435546875
    4. '+k' → logprob: -7.89471435546875
    5. ' +' → logprob: -8.39471435546875
    6. '_<' → logprob: -9.14471435546875
    7. '_[' → logprob: -10.39471435546875
    8. '_
' → logprob: -12.26971435546875
    9. '+[' → logprob: -12.26971435546875
    10. '_x' → logprob: -12.39471435546875

Token 255: '+' (ID: 10)
  Prédit: '+x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+x' → logprob: -0.022666100412607193
    2. '+' → logprob: -4.397665977478027
    3. '+k' → logprob: -4.772665977478027
    4. '+s' → logprob: -6.772665977478027
    5. ' +' → logprob: -7.897665977478027
    6. '+self' → logprob: -9.647665977478027
    7. '+i' → logprob: -10.772665977478027
    8. '+c' → logprob: -11.272665977478027
    9. '<x' → logprob: -11.897665977478027
    10. '+=' → logprob: -12.397665977478027

Token 256: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.191489642835222e-05
    2. ' self' → logprob: -10.125041961669922
    3. '[self' → logprob: -14.375041961669922
    4. '(self' → logprob: -14.625041961669922
    5. '               ' → logprob: -15.500041961669922
    6. '           ' → logprob: -15.625041961669922
    7. '=self' → logprob: -16.000041961669922
    8. '	self' → logprob: -16.000041961669922
    9. 'bit' → logprob: -16.375041961669922
    10. '   ' → logprob: -17.750041961669922

Token 257: '.dat' (ID: 17439)
  Prédit: '.dat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dat' → logprob: -0.0004894073354080319
    2. 'dat' → logprob: -7.750489234924316
    3. '@dat' → logprob: -9.750489234924316
    4. '```' → logprob: -16.750490188598633
    5. ' dat' → logprob: -17.250490188598633
    6. '.datab' → logprob: -17.250490188598633
    7. '[' → logprob: -17.375490188598633
    8. '(dat' → logprob: -17.500490188598633
    9. 'Dat' → logprob: -17.500490188598633

Token 258: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: 0.0
    2. '[i' → logprob: -17.875
    3. 'k' → logprob: -18.0
    4. '[' → logprob: -18.5
    5. '[
' → logprob: -19.25
    6. '{k' → logprob: -19.875
    7. '(k' → logprob: -20.25
    8. '
' → logprob: -21.125
    9. ' [' → logprob: -21.375
    10. '```' → logprob: -22.0

Token 259: ']<' (ID: 80424)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.30754023790359497
    2. '<=' → logprob: -2.18254017829895
    3. ' <' → logprob: -2.30754017829895
    4. '<x' → logprob: -3.18254017829895
    5. ' <=' → logprob: -4.557540416717529
    6. ']<=' → logprob: -9.057539939880371
    7. '<len' → logprob: -9.182539939880371
    8. ')<=' → logprob: -10.557539939880371
    9. '<size' → logprob: -10.557539939880371
    10. '<num' → logprob: -10.557539939880371

Token 260: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.547789674485102e-05
    2. ' x' → logprob: -10.250035285949707
    3. '
' → logprob: -18.500036239624023
    4. '	x' → logprob: -19.375036239624023
    5. '```' → logprob: -21.000036239624023
    6. ')x' → logprob: -22.250036239624023
    7. '<x' → logprob: -22.250036239624023
    8. '   ' → logprob: -23.000036239624023
    9. '(x' → logprob: -23.000036239624023
    10. '"x' → logprob: -23.000036239624023

Token 261: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.033873092383146286
    2. ':' → logprob: -3.4088730812072754
    3. '               ' → logprob: -8.783873558044434
    4. '):
' → logprob: -10.158873558044434
    5. '                   ' → logprob: -10.908873558044434
    6. ' :
' → logprob: -12.033873558044434
    7. '           ' → logprob: -12.908873558044434
    8. ':

' → logprob: -12.908873558044434
    9. ':
' → logprob: -13.408873558044434
    10. ' and' → logprob: -13.658873558044434

Token 262: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.006687552202492952
    2. '               ' → logprob: -5.756687641143799
    3. ':' → logprob: -7.506687641143799
    4. '```' → logprob: -7.631687641143799
    5. ':
' → logprob: -7.756687641143799
    6. '                       ' → logprob: -7.756687641143799
    7. '                ' → logprob: -8.13168716430664
    8. 'pos' → logprob: -8.25668716430664
    9. ' sum' → logprob: -8.63168716430664
    10. 'sum' → logprob: -8.75668716430664

Token 263: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' (adapté à ' sum') → logprob: -0.2159537971019745
    2. 'pos' → logprob: -1.9659538269042969
    3. ' sum' → logprob: -2.965953826904297
    4. ' pos' → logprob: -6.215953826904297
    5. '                   ' → logprob: -7.590953826904297
    6. '                       ' → logprob: -8.715953826904297
    7. 'position' → logprob: -11.590953826904297
    8. '   ' → logprob: -11.715953826904297
    9. '       ' → logprob: -13.090953826904297
    10. ' ' → logprob: -13.340953826904297

Token 264: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.282920129597187e-05
    2. '_=' → logprob: -11.500012397766113
    3. '+=' → logprob: -13.500012397766113
    4. '_,' → logprob: -14.375012397766113
    5. '_
' → logprob: -14.750012397766113
    6. '__' → logprob: -15.875012397766113
    7. ']+=' → logprob: -16.75001335144043
    8. '_

' → logprob: -16.87501335144043
    9. '+' → logprob: -18.25001335144043
    10. '   ' → logprob: -18.50001335144043

Token 265: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0001773192489054054
    2. ']+=' → logprob: -9.250177383422852
    3. ' +=' → logprob: -10.125177383422852
    4. '+=(' → logprob: -11.250177383422852
    5. '+' → logprob: -11.375177383422852
    6. '_' → logprob: -11.625177383422852
    7. '+='' → logprob: -12.625177383422852
    8. '   ' → logprob: -13.625177383422852
    9. '=' → logprob: -14.250177383422852
    10. '+="' → logprob: -14.500177383422852

Token 266: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.610702363715973e-06
    2. ' self' → logprob: -11.625009536743164
    3. '[self' → logprob: -15.125009536743164
    4. '(self' → logprob: -16.625009536743164
    5. '	self' → logprob: -16.625009536743164
    6. 'sys' → logprob: -16.875009536743164
    7. 'dat' → logprob: -17.625009536743164
    8. '   ' → logprob: -17.750009536743164
    9. '                   ' → logprob: -18.125009536743164
    10. '           ' → logprob: -18.250009536743164

Token 267: '.dat' (ID: 17439)
  Prédit: '.dat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dat' → logprob: -0.00019221604452468455
    2. 'dat' → logprob: -9.250192642211914
    3. '@dat' → logprob: -9.250192642211914
    4. '[' → logprob: -17.500192642211914
    5. '.datab' → logprob: -17.625192642211914
    6. '(dat' → logprob: -18.875192642211914
    7. '/dat' → logprob: -19.000192642211914
    8. '```' → logprob: -19.250192642211914
    9. '_dat' → logprob: -19.500192642211914

Token 268: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -1.9361264946837764e-07
    2. 'k' → logprob: -16.625
    3. '{k' → logprob: -18.0
    4. '(k' → logprob: -19.25
    5. '[' → logprob: -19.25
    6. ',k' → logprob: -19.875
    7. '```' → logprob: -20.375
    8. ' k' → logprob: -20.375
    9. '+k' → logprob: -20.5
    10. ';k' → logprob: -21.375

Token 269: ']
' (ID: 1592)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2949448823928833
    2. '
' → logprob: -1.6699448823928833
    3. ',k' → logprob: -3.5449447631835938
    4. ';k' → logprob: -3.7949447631835938
    5. '               ' → logprob: -5.294944763183594
    6. 'k' → logprob: -5.669944763183594
    7. ',' → logprob: -5.669944763183594
    8. '           ' → logprob: -7.044944763183594
    9. '<|end|>' → logprob: -7.294944763183594
    10. ' k' → logprob: -7.794944763183594

Token 270: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -5.860340752406046e-05
    2. '               ' → logprob: -10.1250581741333
    3. '           ' → logprob: -11.3750581741333
    4. '                  ' → logprob: -12.7500581741333
    5. '```' → logprob: -13.6250581741333
    6. '   ' → logprob: -13.7500581741333
    7. 'pos' → logprob: -14.8750581741333
    8. '                       ' → logprob: -15.2500581741333
    9. '                 ' → logprob: -15.2500581741333
    10. '       ' → logprob: -15.2500581741333

Token 271: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -2.15310683415737e-05
    2. ' pos' → logprob: -10.750021934509277
    3. '                   ' → logprob: -18.25002098083496
    4. 'position' → logprob: -19.12502098083496
    5. '	pos' → logprob: -21.37502098083496
    6. 'posit' → logprob: -23.62502098083496
    7. '_pos' → logprob: -23.62502098083496
    8. 'pose' → logprob: -23.62502098083496
    9. '               ' → logprob: -23.75002098083496
    10. ',pos' → logprob: -23.87502098083496

Token 272: '+=' (ID: 18287)
  Prédit: '=k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=k' → logprob: -0.01817932352423668
    2. '=' → logprob: -4.018179416656494
    3. ' =' → logprob: -10.518178939819336
    4. '+=' → logprob: -13.268178939819336
    5. '+k' → logprob: -15.643178939819336
    6. '=
' → logprob: -16.268178939819336
    7. 'k' → logprob: -16.393178939819336
    8. '<|end|>' → logprob: -17.268178939819336
    9. '=s' → logprob: -17.518178939819336
    10. ',k' → logprob: -17.518178939819336

Token 273: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004082435742020607
    2. '(' → logprob: -5.504082202911377
    3. ' ' → logprob: -12.754082679748535
    4. 'k' → logprob: -14.379082679748535
    5. ' (' → logprob: -14.879082679748535
    6. '```' → logprob: -16.50408172607422
    7. '(k' → logprob: -16.62908172607422
    8. '<|end|>' → logprob: -17.00408172607422
    9. '
' → logprob: -17.75408172607422
    10. '[' → logprob: -18.50408172607422

Token 274: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.09891355782747269
    2. 'k' → logprob: -2.5989136695861816
    3. '<<(' → logprob: -4.098913669586182
    4. '+k' → logprob: -6.473913669586182
    5. ' k' → logprob: -7.598913669586182
    6. '(' → logprob: -7.598913669586182
    7. '(k' → logprob: -8.473913192749023
    8. ' <<' → logprob: -9.473913192749023
    9. ' (' → logprob: -9.848913192749023
    10. '+' → logprob: -9.973913192749023

Token 275: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.8889261304575484e-06
    2. ' i' → logprob: -12.500003814697266
    3. '	i' → logprob: -17.000003814697266
    4. '<|end|>' → logprob: -17.375003814697266
    5. '(i' → logprob: -17.625003814697266
    6. '*i' → logprob: -18.625003814697266
    7. '<|end|>' → logprob: -19.500003814697266
    8. ')i' → logprob: -19.625003814697266
    9. '{i' → logprob: -19.875003814697266
    10. '<i' → logprob: -20.500003814697266

Token 276: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 277: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 278: ' return' (ID: 622)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.9421024322509766
    2. '               ' → logprob: -1.5671024322509766
    3. '=' → logprob: -2.0671024322509766
    4. 'pos' → logprob: -2.6921024322509766
    5. '+' → logprob: -2.9421024322509766
    6. '+=' → logprob: -3.0671024322509766
    7. 'k' → logprob: -3.5671024322509766
    8. '           ' → logprob: -4.317102432250977
    9. '                  ' → logprob: -4.442102432250977
    10. '                ' → logprob: -4.817102432250977

Token 279: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.01416350994259119
    2. ' pos' → logprob: -4.264163494110107
    3. '[pos' → logprob: -18.514163970947266
    4. '(pos' → logprob: -18.764163970947266
    5. '0' → logprob: -19.639163970947266
    6. '	pos' → logprob: -19.764163970947266
    7. 'pose' → logprob: -20.639163970947266
    8. 'post' → logprob: -21.014163970947266
    9. '_pos' → logprob: -21.764163970947266
    10. 'position' → logprob: -21.764163970947266

Token 280: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 281: ' sum' (ID: 4215)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 282: '_
' (ID: 27437)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03550273925065994
    2. '+=' → logprob: -3.4105026721954346
    3. '<|end|>' → logprob: -7.160502910614014
    4. ' +=' → logprob: -7.910502910614014
    5. ' +' → logprob: -8.285502433776855
    6. '+
' → logprob: -9.160502433776855
    7. '   ' → logprob: -9.410502433776855
    8. '       ' → logprob: -9.785502433776855
    9. '++' → logprob: -10.035502433776855
    10. '           ' → logprob: -10.910502433776855

Token 283: '   ' (ID: 271)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.3661539852619171
    2. '+' → logprob: -2.2411539554595947
    3. '<|end|>' → logprob: -2.2411539554595947
    4. '1' → logprob: -3.4911539554595947
    5. '+=' → logprob: -4.491154193878174
    6. '0' → logprob: -4.616154193878174
    7. '(' → logprob: -5.241154193878174
    8. '   ' → logprob: -5.366154193878174
    9. ' <<=' → logprob: -5.366154193878174
    10. ' ' → logprob: -5.991154193878174

Token 284: ' def' (ID: 1056)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8679261803627014
    2. '<|end|>' → logprob: -1.6179261207580566
    3. '       ' → logprob: -2.3679261207580566
    4. '               ' → logprob: -2.4929261207580566
    5. '          ' → logprob: -2.6179261207580566
    6. '   ' → logprob: -3.9929261207580566
    7. '      ' → logprob: -3.9929261207580566
    8. '+' → logprob: -3.9929261207580566
    9. '                   ' → logprob: -4.742926120758057
    10. ' ' → logprob: -4.742926120758057

Token 285: ' nib' (ID: 50611)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.3903273642063141
    2. ' main' → logprob: -1.8903273344039917
    3. 'solve' → logprob: -2.3903274536132812
    4. ' binary' → logprob: -4.265327453613281
    5. ' count' → logprob: -5.015327453613281
    6. 'main' → logprob: -5.015327453613281
    7. '   ' → logprob: -5.515327453613281
    8. ' lower' → logprob: -5.640327453613281
    9. 'r' → logprob: -5.765327453613281
    10. ' is' → logprob: -6.015327453613281

Token 286: 'utan' (ID: 28528)
  Prédit: 'ble'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ble' → logprob: -0.0029107891023159027
    2. 'b' → logprob: -6.127910614013672
    3. 'bl' → logprob: -8.627910614013672
    4. '=' → logprob: -9.502910614013672
    5. 'bling' → logprob: -9.502910614013672
    6. 'n' → logprob: -10.252910614013672
    7. '```' → logprob: -10.502910614013672
    8. 'bles' → logprob: -10.752910614013672
    9. 'blers' → logprob: -10.752910614013672
    10. 'p' → logprob: -10.877910614013672

Token 287: '(ok' (ID: 128325)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.3940868377685547
    2. 'su' → logprob: -2.0190868377685547
    3. 'def' → logprob: -2.7690868377685547
    4. 'a' → logprob: -2.7690868377685547
    5. 'main' → logprob: -2.7690868377685547
    6. '()' → logprob: -3.1440868377685547
    7. 'es' → logprob: -3.3940868377685547
    8. 'o' → logprob: -3.5190868377685547
    9. '(' → logprob: -3.8940868377685547
    10. '(main' → logprob: -4.019086837768555

Token 288: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006949679926037788
    2. ',n' → logprob: -5.7569499015808105
    3. ',l' → logprob: -6.2569499015808105
    4. ' ,' → logprob: -6.6319499015808105
    5. ',val' → logprob: -9.006949424743652
    6. ',m' → logprob: -9.256949424743652
    7. ',left' → logprob: -9.881949424743652
    8. ',b' → logprob: -10.006949424743652
    9. ',ll' → logprob: -10.256949424743652
    10. ',pos' → logprob: -10.381949424743652

Token 289: 'ng' (ID: 892)
  Prédit: 'ng'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ng' → logprob: -3.810037742368877e-05
    2. ' ng' → logprob: -10.625038146972656
    3. 'no' → logprob: -11.625038146972656
    4. 'nok' → logprob: -13.250038146972656
    5. '   ' → logprob: -13.625038146972656
    6. 'not' → logprob: -15.000038146972656
    7. 'nog' → logprob: -15.000038146972656
    8. '_ng' → logprob: -15.125038146972656
    9. '
' → logprob: -15.250038146972656
    10. 'NG' → logprob: -15.500038146972656

Token 290: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006379967555403709
    2. '):
' → logprob: -5.381380081176758
    3. ',' → logprob: -6.381380081176758
    4. ')' → logprob: -11.006380081176758
    5. ':' → logprob: -11.006380081176758
    6. '):

' → logprob: -12.006380081176758
    7. ',x' → logprob: -12.256380081176758
    8. '):
' → logprob: -12.881380081176758
    9. '=' → logprob: -13.006380081176758
    10. '   ' → logprob: -13.256380081176758

Token 291: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44248583912849426
    2. '<|end|>' → logprob: -1.3174858093261719
    3. ':' → logprob: -2.567485809326172
    4. ',' → logprob: -5.317485809326172
    5. '<|end|>' → logprob: -5.317485809326172
    6. ':
' → logprob: -6.942485809326172
    7. '   ' → logprob: -7.942485809326172
    8. '        
' → logprob: -8.067485809326172
    9. '):
' → logprob: -8.567485809326172
    10. '):' → logprob: -8.692485809326172

Token 292: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -1.0166758298873901
    2. ' mid' → logprob: -1.1416758298873901
    3. 'mid' → logprob: -1.8916758298873901
    4. '   ' → logprob: -2.2666759490966797
    5. 'while' (adapté à ' while') → logprob: -3.1416759490966797
    6. 'm' → logprob: -5.01667594909668
    7. '       ' → logprob: -5.14167594909668
    8. ' if' → logprob: -5.64167594909668
    9. 'l' → logprob: -6.26667594909668
    10. ' l' → logprob: -7.14167594909668

Token 293: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.5239467024803162
    2. 'ok' → logprob: -1.523946762084961
    3. 'ng' → logprob: -1.773946762084961
    4. ' ng' → logprob: -4.398946762084961
    5. ' abs' → logprob: -4.898946762084961
    6. '(abs' → logprob: -8.398946762084961
    7. '(ok' → logprob: -8.648946762084961
    8. ' ok' → logprob: -9.023946762084961
    9. '   ' → logprob: -11.023946762084961
    10. ' ' → logprob: -11.148946762084961

Token 294: '(ok' (ID: 128325)
  Prédit: '(ok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ok' → logprob: -9.686778503237292e-05
    2. '(' → logprob: -9.250097274780273
    3. 'ok' → logprob: -14.875097274780273
    4. '(n' → logprob: -16.250097274780273
    5. '	ok' → logprob: -16.750097274780273
    6. '(nd' → logprob: -18.125097274780273
    7. ''ok' → logprob: -18.375097274780273
    8. '(
' → logprob: -18.500097274780273
    9. '.ok' → logprob: -18.500097274780273
    10. ' ok' → logprob: -18.500097274780273

Token 295: '-ng' (ID: 122498)
  Prédit: '-ng'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-ng' → logprob: -0.0009728021104820073
    2. ' -' → logprob: -7.000972747802734
    3. '-' → logprob: -10.375972747802734
    4. '-N' → logprob: -10.625972747802734
    5. '-ok' → logprob: -12.125972747802734
    6. 'ng' → logprob: -16.000972747802734
    7. '-n' → logprob: -16.250972747802734
    8. ' ' → logprob: -16.750972747802734
    9. '-neg' → logprob: -17.000972747802734
    10. '-lg' → logprob: -17.375972747802734

Token 296: ')' (ID: 8)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.20274603366851807
    2. ')>' → logprob: -1.702746033668518
    3. ')' → logprob: -7.2027459144592285
    4. '()>' → logprob: -7.9527459144592285
    5. ' >' → logprob: -8.702746391296387
    6. ']>' → logprob: -10.952746391296387
    7. '   ' → logprob: -11.327746391296387
    8. '">' → logprob: -11.577746391296387
    9. '1' → logprob: -11.702746391296387
    10. ' ' → logprob: -11.952746391296387

Token 297: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.00011808603449026123
    2. ' >' → logprob: -9.125118255615234
    3. '()>' → logprob: -12.250118255615234
    4. ')>' → logprob: -12.875118255615234
    5. '>a' → logprob: -15.125118255615234
    6. ']>' → logprob: -15.250118255615234
    7. '>b' → logprob: -15.250118255615234
    8. '">' → logprob: -15.375118255615234
    9. '＞' → logprob: -15.625118255615234
    10. '```' → logprob: -16.000118255615234

Token 298: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -18.500003814697266
    4. '１' → logprob: -19.000003814697266
    5. '>' → logprob: -20.687503814697266
    6. '۱' → logprob: -20.875003814697266
    7. '  ' → logprob: -21.312503814697266
    8. '0' → logprob: -21.562503814697266
    9. '```' → logprob: -21.562503814697266
    10. '100' → logprob: -21.687503814697266

Token 299: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.500000953674316
    3. '0' → logprob: -15.250000953674316
    4. '   ' → logprob: -16.75
    5. '2' → logprob: -18.5
    6. '
' → logprob: -18.625
    7. '10' → logprob: -18.875
    8. '100' → logprob: -19.5
    9. '```' → logprob: -19.5
    10. '１' → logprob: -19.75

Token 300: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.05119983106851578
    2. ':' → logprob: -3.0511999130249023
    3. '       ' → logprob: -6.301199913024902
    4. '):
' → logprob: -7.301199913024902
    5. ' :
' → logprob: -10.676199913024902
    6. '():
' → logprob: -11.301199913024902
    7. ' and' → logprob: -11.301199913024902
    8. ':
' → logprob: -11.551199913024902
    9. '   ' → logprob: -11.676199913024902
    10. ',' → logprob: -11.676199913024902

Token 301: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00830711331218481
    2. '<|end|>' → logprob: -4.883306980133057
    3. ',' → logprob: -8.008307456970215
    4. '<|end|>' → logprob: -9.133307456970215
    5. '        
' → logprob: -9.508307456970215
    6. ' mid' → logprob: -10.508307456970215
    7. '   ' → logprob: -10.758307456970215
    8. '	       ' → logprob: -10.883307456970215
    9. '	' → logprob: -11.133307456970215
    10. '```' → logprob: -11.133307456970215

Token 302: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' (adapté à ' mid') → logprob: -0.016135364770889282
    2. ' mid' → logprob: -4.516135215759277
    3. 'm' → logprob: -5.391135215759277
    4. '           ' → logprob: -7.641135215759277
    5. 'md' → logprob: -11.141135215759277
    6. 'med' → logprob: -11.266135215759277
    7. 'mi' → logprob: -12.641135215759277
    8. 'c' → logprob: -13.766135215759277
    9. '[mid' → logprob: -13.766135215759277
    10. '   ' → logprob: -13.891135215759277

Token 303: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6494032740592957
    2. ' =' → logprob: -0.8994032740592957
    3. '=(' → logprob: -2.6494033336639404
    4. '=int' → logprob: -9.39940357208252
    5. ' =(' → logprob: -10.39940357208252
    6. '=((' → logprob: -11.39940357208252
    7. '=len' → logprob: -13.02440357208252
    8. '＝' → logprob: -13.27440357208252
    9. '=end' → logprob: -13.64940357208252
    10. '=max' → logprob: -13.77440357208252

Token 304: ' (' (ID: 350)
  Prédit: '(ok'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ok' → logprob: -0.008621077984571457
    2. ' (' → logprob: -4.7586212158203125
    3. '(' → logprob: -12.633621215820312
    4. '(abs' → logprob: -13.633621215820312
    5. '   ' → logprob: -13.883621215820312
    6. '(ans' → logprob: -15.008621215820312
    7. '(ord' → logprob: -15.133621215820312
    8. ' ' → logprob: -15.133621215820312
    9. '  ' → logprob: -17.258621215820312
    10. '(opt' → logprob: -17.633621215820312

Token 305: 'ok' (ID: 525)
  Prédit: 'ok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ok' → logprob: -1.2471589798224159e-05
    2. ' ok' → logprob: -12.000012397766113
    3. '(ok' → logprob: -12.000012397766113
    4. '	ok' → logprob: -16.62501335144043
    5. '_ok' → logprob: -16.87501335144043
    6. ''ok' → logprob: -18.75001335144043
    7. 'ng' → logprob: -19.12501335144043
    8. 'oki' → logprob: -19.50001335144043
    9. '.ok' → logprob: -20.00001335144043
    10. ')' → logprob: -20.12501335144043

Token 306: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0019291093340143561
    2. ' +' → logprob: -6.25192928314209
    3. '+
' → logprob: -14.75192928314209
    4. '+n' → logprob: -16.626928329467773
    5. '＋' → logprob: -17.001928329467773
    6. ' +
' → logprob: -18.001928329467773
    7. '+xml' → logprob: -18.126928329467773
    8. '
' → logprob: -20.251928329467773
    9. '+k' → logprob: -20.376928329467773
    10. '   ' → logprob: -20.626928329467773

Token 307: ' ng' (ID: 1657)
  Prédit: 'ng'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ng' → logprob: -7.941850526549388e-06
    2. ' ng' → logprob: -11.750007629394531
    3. '_ng' → logprob: -19.12500762939453
    4. '
' → logprob: -19.75000762939453
    5. '-ng' → logprob: -21.12500762939453
    6. 'nd' → logprob: -21.37500762939453
    7. ' ' → logprob: -22.12500762939453
    8. '/ng' → logprob: -22.25000762939453
    9. 'n' → logprob: -22.62500762939453
    10. '.ng' → logprob: -22.75000762939453

Token 308: ')' (ID: 8)
  Prédit: ')//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.3965153098106384
    2. ')' → logprob: -1.1465153694152832
    3. ')>>' → logprob: -4.646515369415283
    4. ' )' → logprob: -12.896514892578125
    5. ')<<' → logprob: -15.521514892578125
    6. ')#' → logprob: -15.896514892578125
    7. '>>' → logprob: -17.021514892578125
    8. '//' → logprob: -17.646514892578125
    9. '）' → logprob: -17.771514892578125
    10. ')>' → logprob: -18.021514892578125

Token 309: ' //' (ID: 602)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.35027602314949036
    2. '//' → logprob: -1.225275993347168
    3. ' //' → logprob: -7.475275993347168
    4. ')' → logprob: -7.600275993347168
    5. ' >>' → logprob: -8.225275993347168
    6. ')//' → logprob: -8.475275993347168
    7. ')>>' → logprob: -9.600275993347168
    8. '   ' → logprob: -9.725275993347168
    9. '
' → logprob: -9.975275993347168
    10. '>' → logprob: -10.850275993347168

Token 310: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -17.250051498413086
    4. '２' → logprob: -18.875051498413086
    5. '۲' → logprob: -19.000051498413086
    6. '  ' → logprob: -20.000051498413086
    7. '२' → logprob: -20.750051498413086
    8. '২' → logprob: -20.750051498413086
    9. '```' → logprob: -20.750051498413086
    10. '    ' → logprob: -20.875051498413086

Token 311: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '２' → logprob: -21.000001907348633
    4. '   ' → logprob: -21.500001907348633
    5. '۲' → logprob: -21.875001907348633
    6. '२' → logprob: -23.375001907348633
    7. 'two' → logprob: -23.375001907348633
    8. '```' → logprob: -23.375001907348633
    9. '  ' → logprob: -23.625001907348633
    10. '২' → logprob: -23.750001907348633

Token 312: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007052679546177387
    2. '<|end|>' → logprob: -5.632052898406982
    3. '
' → logprob: -6.507052898406982
    4. ' if' → logprob: -6.757052898406982
    5. '<|end|>' → logprob: -8.382052421569824
    6. 'if' → logprob: -8.757052421569824
    7. '       ' → logprob: -8.882052421569824
    8. '		' → logprob: -9.882052421569824
    9. '            
' → logprob: -10.007052421569824
    10. '```' → logprob: -10.382052421569824

Token 313: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02853371948003769
    2. 'if' → logprob: -4.653533935546875
    3. '       ' → logprob: -4.778533935546875
    4. ' if' → logprob: -4.778533935546875
    5. '<|end|>' → logprob: -6.778533935546875
    6. 'def' → logprob: -8.903533935546875
    7. '<|end|>' → logprob: -8.903533935546875
    8. ',' → logprob: -9.403533935546875
    9. '   ' → logprob: -9.778533935546875
    10. '
' → logprob: -10.153533935546875

Token 314: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5410283803939819
    2. '           ' → logprob: -0.9160283803939819
    3. 'val' → logprob: -4.7910284996032715
    4. ' if' → logprob: -5.6660284996032715
    5. 'v' → logprob: -6.0410284996032715
    6. 'sum' → logprob: -7.0410284996032715
    7. 'cnt' → logprob: -7.1660284996032715
    8. 's' → logprob: -7.6660284996032715
    9. 'count' → logprob: -8.166028022766113
    10. 'total' → logprob: -8.166028022766113

Token 315: ' solve' (ID: 17722)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4906061291694641
    2. 'mid' → logprob: -1.8656060695648193
    3. 'bit' → logprob: -2.8656060695648193
    4. 'condition' → logprob: -2.9906060695648193
    5. 'n' → logprob: -3.2406060695648193
    6. 'some' → logprob: -3.3656060695648193
    7. 'main' → logprob: -4.490606307983398
    8. 'sum' → logprob: -4.990606307983398
    9. 'True' → logprob: -5.615606307983398
    10. 'BIT' → logprob: -5.615606307983398

Token 316: '(mid' (ID: 121498)
  Prédit: '(mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mid' → logprob: -3.9054008084349334e-05
    2. '(' → logprob: -10.750039100646973
    3. '(n' → logprob: -11.500039100646973
    4. '[mid' → logprob: -12.500039100646973
    5. '(m' → logprob: -13.500039100646973
    6. 'mid' → logprob: -13.625039100646973
    7. '(main' → logprob: -14.625039100646973
    8. ' (' → logprob: -14.875039100646973
    9. '(
' → logprob: -17.125038146972656
    10. '((' → logprob: -17.125038146972656

Token 317: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11508342623710632
    2. '):' → logprob: -2.8650834560394287
    3. '):
' → logprob: -3.9900834560394287
    4. ' )' → logprob: -4.36508321762085
    5. ')>' → logprob: -4.74008321762085
    6. ')>=' → logprob: -5.61508321762085
    7. ')<' → logprob: -5.61508321762085
    8. ')==' → logprob: -6.49008321762085
    9. ' ):' → logprob: -6.61508321762085
    10. ')<=' → logprob: -7.24008321762085

Token 318: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3901351988315582
    2. ':' → logprob: -1.6401351690292358
    3. ':
' → logprob: -2.6401352882385254
    4. '==' → logprob: -3.8901352882385254
    5. ' ==' → logprob: -3.8901352882385254
    6. '           ' → logprob: -5.515135288238525
    7. ' ok' → logprob: -5.640135288238525
    8. ' :' → logprob: -5.890135288238525
    9. '):
' → logprob: -6.265135288238525
    10. ')' → logprob: -7.265135288238525

Token 319: ' ok' (ID: 4763)
  Prédit: 'ok'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ok' (adapté à ' ok') → logprob: -0.008620958775281906
    2. ' ok' → logprob: -4.758620738983154
    3. '	ok' → logprob: -12.758621215820312
    4. 'ng' → logprob: -13.633621215820312
    5. '           ' → logprob: -13.883621215820312
    6. '               ' → logprob: -14.133621215820312
    7. 'okk' → logprob: -15.008621215820312
    8. ' ng' → logprob: -16.508621215820312
    9. '   ' → logprob: -17.008621215820312
    10. '_ok' → logprob: -17.133621215820312

Token 320: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868761360645294
    2. ' =' → logprob: -1.136876106262207
    3. ',' → logprob: -12.511876106262207
    4. ')' → logprob: -14.386876106262207
    5. ')=' → logprob: -14.636876106262207
    6. '=line' → logprob: -16.886877059936523
    7. '=os' → logprob: -17.011877059936523
    8. '=True' → logprob: -17.261877059936523
    9. '=end' → logprob: -17.261877059936523
    10. '=current' → logprob: -17.386877059936523

Token 321: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.0004306692280806601
    2. ' mid' → logprob: -7.750430583953857
    3. '[mid' → logprob: -20.375431060791016
    4. '(mid' → logprob: -20.875431060791016
    5. 'middle' → logprob: -21.250431060791016
    6. 'm' → logprob: -21.375431060791016
    7. '   ' → logprob: -22.250431060791016
    8. 'mi' → logprob: -22.500431060791016
    9. ' ' → logprob: -22.750431060791016
    10. '
' → logprob: -22.875431060791016

Token 322: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008446489810012281
    2. 'else' → logprob: -7.500844478607178
    3. ' else' → logprob: -8.375844955444336
    4. '       ' → logprob: -10.125844955444336
    5. '
' → logprob: -12.125844955444336
    6. '<|end|>' → logprob: -12.125844955444336
    7. '	       ' → logprob: -12.500844955444336
    8. '<|end|>' → logprob: -13.500844955444336
    9. '   ' → logprob: -13.750844955444336
    10. '		' → logprob: -13.875844955444336

Token 323: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0038748965598642826
    2. ' else' → logprob: -5.753874778747559
    3. 'else' → logprob: -7.503874778747559
    4. '
' → logprob: -9.128874778747559
    5. '       ' → logprob: -11.378874778747559
    6. '```' → logprob: -11.878874778747559
    7. ' 
' → logprob: -12.128874778747559
    8. '               ' → logprob: -12.753874778747559
    9. '   ' → logprob: -13.128874778747559
    10. '		' → logprob: -13.128874778747559

Token 324: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0836741253733635
    2. ' else' → logprob: -3.333674192428589
    3. '           ' → logprob: -3.458674192428589
    4. '       ' → logprob: -4.33367395401001
    5. '   ' → logprob: -11.333674430847168
    6. '	else' → logprob: -13.833674430847168
    7. '```' → logprob: -14.083674430847168
    8. '        ' → logprob: -14.208674430847168
    9. '               ' → logprob: -14.208674430847168
    10. '
' → logprob: -15.458674430847168

Token 325: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04234374687075615
    2. ' ng' → logprob: -3.917343854904175
    3. 'ng' → logprob: -3.917343854904175
    4. '       ' → logprob: -7.542343616485596
    5. '           ' → logprob: -7.917343616485596
    6. '   ' → logprob: -8.167344093322754
    7. ':' → logprob: -9.667344093322754
    8. ':
' → logprob: -9.667344093322754
    9. '                   ' → logprob: -10.042344093322754
    10. ',' → logprob: -10.042344093322754

Token 326: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4335212707519531
    2. 'ng' → logprob: -1.4335212707519531
    3. ' ng' → logprob: -2.183521270751953
    4. '       ' → logprob: -8.808521270751953
    5. '           ' → logprob: -8.808521270751953
    6. '   ' → logprob: -9.558521270751953
    7. '              ' → logprob: -9.808521270751953
    8. '_ng' → logprob: -9.808521270751953
    9. '.ng' → logprob: -10.183521270751953
    10. '                   ' → logprob: -10.933521270751953

Token 327: ' ng' (ID: 1657)
  Prédit: 'ng'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ng' (adapté à ' ng') → logprob: -0.006738223135471344
    2. ' ng' → logprob: -5.006738185882568
    3. '               ' → logprob: -10.881738662719727
    4. '_ng' → logprob: -13.256738662719727
    5. '           ' → logprob: -13.631738662719727
    6. '.ng' → logprob: -15.131738662719727
    7. '   ' → logprob: -15.506738662719727
    8. '                   ' → logprob: -16.006738662719727
    9. '/ng' → logprob: -16.131738662719727
    10. 'ngi' → logprob: -16.381738662719727

Token 328: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868711292743683
    2. '=' → logprob: -1.136871099472046
    3. '=end' → logprob: -16.261871337890625
    4. '＝' → logprob: -17.636871337890625
    5. '=int' → logprob: -18.011871337890625
    6. '=k' → logprob: -18.761871337890625
    7. '=os' → logprob: -18.761871337890625
    8. ' =
' → logprob: -19.261871337890625
    9. '=
' → logprob: -19.511871337890625
    10. ' ' → logprob: -20.011871337890625

Token 329: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.0015023599844425917
    2. ' mid' → logprob: -6.501502513885498
    3. 'ok' → logprob: -18.626502990722656
    4. '[mid' → logprob: -19.126502990722656
    5. '(mid' → logprob: -20.376502990722656
    6. 'm' → logprob: -20.501502990722656
    7. '_mid' → logprob: -21.626502990722656
    8. 'mi' → logprob: -22.126502990722656
    9. ' ' → logprob: -22.376502990722656
    10. 'middle' → logprob: -22.876502990722656

Token 330: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2156406193971634
    2. '       ' → logprob: -2.4656405448913574
    3. '   ' → logprob: -2.8406405448913574
    4. '
' → logprob: -4.215640544891357
    5. 'return' → logprob: -4.215640544891357
    6. '<|end|>' → logprob: -4.465640544891357
    7. ' return' → logprob: -5.590640544891357
    8. '<|end|>' → logprob: -5.840640544891357
    9. '	return' → logprob: -6.840640544891357
    10. ')' → logprob: -7.965640544891357

Token 331: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3355951309204102
    2. '           ' → logprob: -1.4605951309204102
    3. '   ' → logprob: -1.4605951309204102
    4. '<|end|>' → logprob: -1.5855951309204102
    5. ' return' → logprob: -3.08559513092041
    6. '	return' → logprob: -5.08559513092041
    7. '<|end|>' → logprob: -5.21059513092041
    8. 'return' → logprob: -6.08559513092041
    9. ' ' → logprob: -6.33559513092041
    10. '    ' → logprob: -7.08559513092041

Token 332: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2593652904033661
    2. '       ' → logprob: -1.7593653202056885
    3. 'return' (adapté à ' return') → logprob: -3.3843653202056885
    4. ' return' → logprob: -4.134365081787109
    5. '	return' → logprob: -5.884365081787109
    6. '<|end|>' → logprob: -6.259365081787109
    7. '           ' → logprob: -6.759365081787109
    8. ' ' → logprob: -8.38436508178711
    9. '<|end|>' → logprob: -9.63436508178711
    10. 'def' → logprob: -10.00936508178711

Token 333: ' ok' (ID: 4763)
  Prédit: 'ok'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ok' → logprob: -0.1602281779050827
    2. ' ok' → logprob: -1.9102281332015991
    3. '(ok' → logprob: -12.78522777557373
    4. '	ok' → logprob: -14.28522777557373
    5. ' ' → logprob: -15.66022777557373
    6. '_ok' → logprob: -16.410228729248047
    7. 'int' → logprob: -16.535228729248047
    8. ''ok' → logprob: -16.660228729248047
    9. 'Ok' → logprob: -17.285228729248047
    10. ' okay' → logprob: -17.535228729248047

Token 334: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 335: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 336: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 337: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.25521254539489746
    2. ' solve' → logprob: -1.5052125453948975
    3. ' main' → logprob: -7.505212783813477
    4. 'main' → logprob: -7.755212783813477
    5. 'is' → logprob: -8.380212783813477
    6. ' ' → logprob: -8.380212783813477
    7. 'b' → logprob: -8.880212783813477
    8. 'n' → logprob: -8.942712783813477
    9. 'sum' → logprob: -9.067712783813477
    10. 'dfs' → logprob: -9.255212783813477

Token 338: '(mid' (ID: 121498)
  Prédit: '(mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mid' → logprob: -0.02941185235977173
    2. '(x' → logprob: -4.654411792755127
    3. '(k' → logprob: -4.654411792755127
    4. '(m' → logprob: -5.529411792755127
    5. '(length' → logprob: -6.029411792755127
    6. '(l' → logprob: -7.279411792755127
    7. '(' → logprob: -7.279411792755127
    8. '(pos' → logprob: -7.654411792755127
    9. '(M' → logprob: -8.154412269592285
    10. '(n' → logprob: -8.279412269592285

Token 339: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000712670327629894
    2. '):
' → logprob: -7.500712871551514
    3. ' ):' → logprob: -9.125712394714355
    4. ',' → logprob: -10.250712394714355
    5. ':' → logprob: -12.125712394714355
    6. ')' → logprob: -12.375712394714355
    7. '   ' → logprob: -13.375712394714355
    8. '):
' → logprob: -14.375712394714355
    9. ')):' → logprob: -14.625712394714355
    10. ',i' → logprob: -15.000712394714355

Token 340: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017084097489714622
    2. '<|end|>' → logprob: -4.392084121704102
    3. '   ' → logprob: -6.142084121704102
    4. '...' → logprob: -7.142084121704102
    5. '<|end|>' → logprob: -7.392084121704102
    6. ':' → logprob: -8.267084121704102
    7. ')' → logprob: -8.517084121704102
    8. '#' → logprob: -8.767084121704102
    9. ',' → logprob: -9.517084121704102
    10. ':return' → logprob: -10.392084121704102

Token 341: ' aa' (ID: 40260)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3584797978401184
    2. '#' → logprob: -2.1084797382354736
    3. ' pass' → logprob: -2.3584797382354736
    4. 'pass' → logprob: -3.4834797382354736
    5. '   ' → logprob: -3.9834797382354736
    6. ' #' → logprob: -4.608479976654053
    7. '    ' → logprob: -5.233479976654053
    8. '        ' → logprob: -5.233479976654053
    9. 'return' → logprob: -5.733479976654053
    10. ' return' → logprob: -5.733479976654053

Token 342: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2414984256029129
    2. ' =' → logprob: -1.6164984703063965
    3. '=sum' → logprob: -4.9914984703063965
    4. '=len' → logprob: -5.6164984703063965
    5. '=[' → logprob: -5.9914984703063965
    6. '=a' → logprob: -7.4914984703063965
    7. '=[]' → logprob: -8.366497993469238
    8. '=cut' → logprob: -8.491497993469238
    9. '=[]
' → logprob: -8.491497993469238
    10. '=list' → logprob: -8.741497993469238

Token 343: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13049428164958954
    2. 'x' → logprob: -2.6304943561553955
    3. 'a' → logprob: -3.6304943561553955
    4. '(' → logprob: -4.255494117736816
    5. '(x' → logprob: -5.755494117736816
    6. 'ai' → logprob: -6.755494117736816
    7. '(a' → logprob: -6.755494117736816
    8. 'i' → logprob: -7.255494117736816
    9. ' x' → logprob: -7.380494117736816
    10. '(ai' → logprob: -7.380494117736816

Token 344: ' if' (ID: 538)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6230818629264832
    2. ']*' → logprob: -1.748081922531128
    3. ']+' → logprob: -2.373081922531128
    4. ':]' → logprob: -2.498081922531128
    5. ']*(' → logprob: -2.623081922531128
    6. ' for' → logprob: -4.748081684112549
    7. 'for' → logprob: -5.123081684112549
    8. ':' → logprob: -5.373081684112549
    9. ']+=' → logprob: -5.498081684112549
    10. '0' → logprob: -5.998081684112549

Token 345: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3209449052810669
    2. 'a' → logprob: -1.320944905281067
    3. ' x' → logprob: -5.570944786071777
    4. 'ai' → logprob: -6.070944786071777
    5. ' a' → logprob: -7.195944786071777
    6. 'i' → logprob: -7.695944786071777
    7. ' ai' → logprob: -8.695944786071777
    8. 'v' → logprob: -10.195944786071777
    9. 'aa' → logprob: -10.320944786071777
    10. 'val' → logprob: -10.695944786071777

Token 346: '>=' (ID: 20974)
  Prédit: '>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.02967551164329052
    2. '<=' → logprob: -3.7796754837036133
    3. ' >=' → logprob: -5.404675483703613
    4. '<' → logprob: -7.154675483703613
    5. '>' → logprob: -7.529675483703613
    6. '[' → logprob: -8.279675483703613
    7. ']>=' → logprob: -9.279675483703613
    8. '[mid' → logprob: -9.529675483703613
    9. ' <=' → logprob: -9.654675483703613
    10. '==' → logprob: -10.279675483703613

Token 347: 'mid' (ID: 23430)
  Prédit: 'mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.00015991552209015936
    2. 'a' → logprob: -9.375160217285156
    3. ' mid' → logprob: -9.750160217285156
    4. '   ' → logprob: -12.000160217285156
    5. '0' → logprob: -12.625160217285156
    6. '
' → logprob: -13.000160217285156
    7. ' ' → logprob: -13.875160217285156
    8. 'm' → logprob: -14.375160217285156
    9. '[mid' → logprob: -14.750160217285156
    10. '(mid' → logprob: -14.750160217285156

Token 348: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.6931845545768738
    2. 'else' → logprob: -0.6931845545768738
    3. '       ' → logprob: -11.693184852600098
    4. '   ' → logprob: -12.068184852600098
    5. '	else' → logprob: -12.193184852600098
    6. '        ' → logprob: -12.443184852600098
    7. ' ' → logprob: -12.693184852600098
    8. '    ' → logprob: -13.193184852600098
    9. '  ' → logprob: -13.443184852600098
    10. '           ' → logprob: -13.443184852600098

Token 349: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0012274926993995905
    2. ' ' → logprob: -7.251227378845215
    3. '-' → logprob: -7.626227378845215
    4. '1' → logprob: -11.501227378845215
    5. '   ' → logprob: -12.126227378845215
    6. ' -' → logprob: -12.126227378845215
    7. '           ' → logprob: -13.751227378845215
    8. '  ' → logprob: -14.063727378845215
    9. '```' → logprob: -14.251227378845215
    10. '       ' → logprob: -14.313727378845215

Token 350: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. '0' → logprob: -13.125003814697266
    3. ' ' → logprob: -13.500003814697266
    4. 'x' → logprob: -16.250003814697266
    5. '-' → logprob: -16.625003814697266
    6. '2' → logprob: -17.625003814697266
    7. '```' → logprob: -17.750003814697266
    8. '<|end|>' → logprob: -18.187503814697266
    9. '=' → logprob: -18.375003814697266
    10. ')' → logprob: -18.687503814697266

Token 351: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.048710569739341736
    2. 'for' → logprob: -3.048710584640503
    3. '	for' → logprob: -10.173710823059082
    4. '       ' → logprob: -10.423710823059082
    5. '   ' → logprob: -11.298710823059082
    6. ' ' → logprob: -11.423710823059082
    7. ')' → logprob: -11.673710823059082
    8. '           ' → logprob: -12.423710823059082
    9. ']' → logprob: -12.423710823059082
    10. '<|end|>' → logprob: -12.798710823059082

Token 352: ' x' (ID: 1215)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.01251177117228508
    2. ' a' → logprob: -4.387511730194092
    3. '	a' → logprob: -13.76251220703125
    4. '   ' → logprob: -15.26251220703125
    5. ' ' → logprob: -15.51251220703125
    6. 'x' → logprob: -16.76251220703125
    7. '_a' → logprob: -16.76251220703125
    8. '>a' → logprob: -16.88751220703125
    9. '[a' → logprob: -17.13751220703125
    10. '(a' → logprob: -17.13751220703125

Token 353: ' in' (ID: 306)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4452178180217743
    2. ' in' → logprob: -1.4452178478240967
    3. 'in' → logprob: -2.3202178478240967
    4. ' a' → logprob: -3.6952178478240967
    5. ',a' → logprob: -7.945217609405518
    6. ',' → logprob: -9.570218086242676
    7. '   ' → logprob: -11.070218086242676
    8. '(a' → logprob: -11.445218086242676
    9. ' ' → logprob: -11.757718086242676
    10. ']' → logprob: -11.882718086242676

Token 354: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0036061247810721397
    2. ' a' → logprob: -5.62860631942749
    3. '   ' → logprob: -12.628605842590332
    4. ' ' → logprob: -13.753605842590332
    5. '
' → logprob: -14.378605842590332
    6. '	a' → logprob: -15.128605842590332
    7. '  ' → logprob: -15.753605842590332
    8. ']' → logprob: -16.37860679626465
    9. '[a' → logprob: -16.44110679626465
    10. 'aa' → logprob: -16.56610679626465

Token 355: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -8.947715832618997e-05
    2. ' ]' → logprob: -9.500089645385742
    3. ']
' → logprob: -11.625089645385742
    4. ')]' → logprob: -12.625089645385742
    5. '()]' → logprob: -13.500089645385742
    6. ')' → logprob: -15.625089645385742
    7. '])' → logprob: -15.875089645385742
    8. ']

' → logprob: -16.000089645385742
    9. ':]' → logprob: -16.125089645385742
    10. '       ' → logprob: -16.250089645385742

Token 356: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07485171407461166
    2. '<|end|>' → logprob: -2.6998517513275146
    3. '   ' → logprob: -6.0748515129089355
    4. '
' → logprob: -7.3248515129089355
    5. 's' → logprob: -7.9498515129089355
    6. '        
' → logprob: -8.199851989746094
    7. 'sum' → logprob: -8.199851989746094
    8. 'prefix' → logprob: -8.699851989746094
    9. ')' → logprob: -9.074851989746094
    10. '<|end|>' → logprob: -9.449851989746094

Token 357: ' b' (ID: 287)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.12681081891059875
    2. ' bit' → logprob: -2.5018107891082764
    3. 'b' (adapté à ' b') → logprob: -3.8768107891082764
    4. '   ' → logprob: -4.5018110275268555
    5. '       ' → logprob: -6.2518110275268555
    6. 's' → logprob: -6.8768110275268555
    7. ' b' → logprob: -8.126811027526855
    8. 'cum' → logprob: -8.376811027526855
    9. 'from' → logprob: -8.501811027526855
    10. 'B' → logprob: -8.501811027526855

Token 358: '=' (ID: 28)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.07607408612966537
    2. '=' → logprob: -2.7010741233825684
    3. 'IT' → logprob: -5.326074123382568
    4. ' =' → logprob: -8.20107364654541
    5. '=sum' → logprob: -8.82607364654541
    6. '   ' → logprob: -8.95107364654541
    7. '_it' → logprob: -9.20107364654541
    8. 'i' → logprob: -9.32607364654541
    9. 'its' → logprob: -9.70107364654541
    10. '=i' → logprob: -9.95107364654541

Token 359: 'BIT' (ID: 41038)
  Prédit: 'BIT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BIT' → logprob: -4.8351892473874614e-05
    2. ' BIT' → logprob: -10.750048637390137
    3. '[' → logprob: -11.000048637390137
    4. 'IT' → logprob: -12.125048637390137
    5. '[B' → logprob: -13.750048637390137
    6. '_BIT' → logprob: -14.375048637390137
    7. 'it' → logprob: -14.500048637390137
    8. '0' → logprob: -14.500048637390137
    9. '	BIT' → logprob: -14.625048637390137
    10. 'B' → logprob: -15.000048637390137

Token 360: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.01824219338595867
    2. '(len' → logprob: -4.018242359161377
    3. 'len' → logprob: -10.143241882324219
    4. '(' → logprob: -10.143241882324219
    5. '(n' → logprob: -11.768241882324219
    6. '   ' → logprob: -12.518241882324219
    7. 'N' → logprob: -13.393241882324219
    8. ' (' → logprob: -15.018241882324219
    9. '       ' → logprob: -16.01824188232422
    10. ' len' → logprob: -16.64324188232422

Token 361: '*' (ID: 9)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.01834964007139206
    2. ')' → logprob: -4.018349647521973
    3. ')
' → logprob: -8.643349647521973
    4. '+' → logprob: -11.393349647521973
    5. '       ' → logprob: -11.768349647521973
    6. '   ' → logprob: -12.768349647521973
    7. ')

' → logprob: -14.393349647521973
    8. ' )
' → logprob: -14.893349647521973
    9. ')`
' → logprob: -15.018349647521973
    10. '())
' → logprob: -16.643348693847656

Token 362: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00012999906903132796
    2. '3' → logprob: -10.125129699707031
    3. ' ' → logprob: -10.625129699707031
    4. '4' → logprob: -11.250129699707031
    5. '   ' → logprob: -11.500129699707031
    6. '1' → logprob: -11.500129699707031
    7. '5' → logprob: -12.125129699707031
    8. '(' → logprob: -12.375129699707031
    9. 'N' → logprob: -12.500129699707031
    10. '           ' → logprob: -12.625129699707031

Token 363: '+' (ID: 10)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1478271484375
    2. ')' → logprob: -2.2728271484375
    3. '+' → logprob: -3.3978271484375
    4. '*' → logprob: -7.3978271484375
    5. ' +' → logprob: -9.0228271484375
    6. ')
' → logprob: -9.2728271484375
    7. '       ' → logprob: -9.7728271484375
    8. '   ' → logprob: -10.8978271484375
    9. '0' → logprob: -11.5228271484375
    10. ')

' → logprob: -11.5228271484375

Token 364: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14626368880271912
    2. '2' → logprob: -2.396263599395752
    3. '5' → logprob: -3.396263599395752
    4. '10' → logprob: -4.646263599395752
    5. '3' → logprob: -6.521263599395752
    6. '4' → logprob: -8.27126407623291
    7. ' ' → logprob: -9.02126407623291
    8. '
' → logprob: -11.14626407623291
    9. '7' → logprob: -11.14626407623291
    10. '6' → logprob: -11.52126407623291

Token 365: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.07891127467155457
    2. ')' → logprob: -2.578911304473877
    3. ')
' → logprob: -10.953910827636719
    4. ' )
' → logprob: -14.078910827636719
    5. '   ' → logprob: -14.203910827636719
    6. ')

' → logprob: -14.328910827636719
    7. '       ' → logprob: -14.703910827636719
    8. ')return' → logprob: -14.953910827636719
    9. ')`
' → logprob: -15.078910827636719
    10. '+' → logprob: -15.328910827636719

Token 366: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013036933727562428
    2. 's' → logprob: -5.513036727905273
    3. 'sum' → logprob: -6.138036727905273
    4. ' s' → logprob: -6.138036727905273
    5. 'b' → logprob: -6.263036727905273
    6. ' sum' → logprob: -7.138036727905273
    7. ' b' → logprob: -7.138036727905273
    8. '   ' → logprob: -8.138036727905273
    9. '<|end|>' → logprob: -8.888036727905273
    10. 'def' → logprob: -9.513036727905273

Token 367: ' c' (ID: 274)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3163248300552368
    2. '       ' → logprob: -2.0663247108459473
    3. 's' → logprob: -2.6913247108459473
    4. 'res' → logprob: -2.8163247108459473
    5. ' b' → logprob: -5.191324710845947
    6. ' res' → logprob: -5.691324710845947
    7. ' s' → logprob: -5.941324710845947
    8. 'sum' → logprob: -6.066324710845947
    9. 'ans' → logprob: -6.941324710845947
    10. 'cum' → logprob: -8.441325187683105

Token 368: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12875834107398987
    2. '=sum' → logprob: -3.253758430480957
    3. 'sum' → logprob: -4.128758430480957
    4. '=c' → logprob: -4.253758430480957
    5. 'ount' → logprob: -4.378758430480957
    6. 'um' → logprob: -4.503758430480957
    7. '=b' → logprob: -5.128758430480957
    8. '=s' → logprob: -5.253758430480957
    9. 'nt' → logprob: -5.628758430480957
    10. '=[' → logprob: -6.128758430480957

Token 369: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.43840306997299194
    2. '[' → logprob: -1.0634031295776367
    3. '1' → logprob: -5.688403129577637
    4. '{' → logprob: -5.813403129577637
    5. '[b' → logprob: -6.938403129577637
    6. '[N' → logprob: -6.938403129577637
    7. 'b' → logprob: -7.938403129577637
    8. 'BIT' → logprob: -8.438403129577637
    9. '[a' → logprob: -8.688403129577637
    10. '[int' → logprob: -9.313403129577637

Token 370: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006928254384547472
    2. '   ' → logprob: -6.131928443908691
    3. '<|end|>' → logprob: -6.506928443908691
    4. ' for' → logprob: -6.881928443908691
    5. '
' → logprob: -7.506928443908691
    6. ',' → logprob: -7.506928443908691
    7. 'sum' → logprob: -8.131928443908691
    8. 'for' → logprob: -9.006928443908691
    9. 's' → logprob: -9.131928443908691
    10. '+' → logprob: -9.381928443908691

Token 371: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010853028856217861
    2. '<|end|>' → logprob: -5.010852813720703
    3. ' for' → logprob: -5.885852813720703
    4. ',' → logprob: -8.010852813720703
    5. 'for' → logprob: -8.260852813720703
    6. '<|end|>' → logprob: -8.510852813720703
    7. '   ' → logprob: -8.885852813720703
    8. ')' → logprob: -9.510852813720703
    9. '+' → logprob: -9.635852813720703
    10. '           ' → logprob: -9.885852813720703

Token 372: ' s' (ID: 265)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.44290682673454285
    2. 'ans' → logprob: -1.1929068565368652
    3. ' res' → logprob: -4.067906856536865
    4. 's' (adapté à ' s') → logprob: -4.692906856536865
    5. 'max' → logprob: -5.067906856536865
    6. ' ans' → logprob: -5.067906856536865
    7. 'for' → logprob: -5.442906856536865
    8. '       ' → logprob: -5.567906856536865
    9. ' s' → logprob: -6.442906856536865
    10. ' for' → logprob: -6.567906856536865

Token 373: '=N' (ID: 143132)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02057190239429474
    2. ' =' → logprob: -3.8955719470977783
    3. '=s' → logprob: -11.5205717086792
    4. 'um' → logprob: -11.7705717086792
    5. '=
' → logprob: -12.5205717086792
    6. '+=' → logprob: -12.5205717086792
    7. '=sum' → logprob: -13.2705717086792
    8. 's' → logprob: -14.3955717086792
    9. '=[]' → logprob: -14.7705717086792
    10. '=c' → logprob: -14.7705717086792

Token 374: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25100094079971313
    2. '       ' → logprob: -2.0010008811950684
    3. '
' → logprob: -2.7510008811950684
    4. '   ' → logprob: -5.001000881195068
    5. ' +' → logprob: -5.626000881195068
    6. '0' → logprob: -5.876000881195068
    7. '=' → logprob: -6.126000881195068
    8. '           ' → logprob: -6.376000881195068
    9. '+c' → logprob: -6.876000881195068
    10. ' =' → logprob: -7.251000881195068

Token 375: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02987533248960972
    2. '<|end|>' → logprob: -4.1548752784729
    3. ' for' → logprob: -5.4048752784729
    4. '+' → logprob: -5.4048752784729
    5. 'for' → logprob: -6.1548752784729
    6. 's' → logprob: -7.1548752784729
    7. '<|end|>' → logprob: -7.7798752784729
    8. ' +' → logprob: -7.9048752784729
    9. '   ' → logprob: -8.529875755310059
    10. ' s' → logprob: -8.779875755310059

Token 376: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.7916346788406372
    2. 'for' → logprob: -1.2916346788406372
    3. '       ' → logprob: -2.1666345596313477
    4. 'c' → logprob: -3.2916345596313477
    5. 'ans' → logprob: -3.2916345596313477
    6. 'res' → logprob: -3.4166345596313477
    7. ' for' → logprob: -3.6666345596313477
    8. '   ' → logprob: -4.166634559631348
    9. 'count' → logprob: -6.166634559631348
    10. 'result' → logprob: -6.666634559631348

Token 377: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -1.3782830137643032e-05
    2. '.' → logprob: -11.37501335144043
    3. ' .' → logprob: -13.50001335144043
    4. '.sum' → logprob: -14.87501335144043
    5. 'add' → logprob: -15.25001335144043
    6. ').' → logprob: -16.75001335144043
    7. '].' → logprob: -17.50001335144043
    8. '​.' → logprob: -17.62501335144043
    9. '`.' → logprob: -17.62501335144043
    10. '```' → logprob: -17.87501335144043

Token 378: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00045605594641529024
    2. 's' → logprob: -7.750455856323242
    3. '(' → logprob: -10.625455856323242
    4. '(c' → logprob: -14.375455856323242
    5. 'c' → logprob: -16.375455856323242
    6. '0' → logprob: -16.625455856323242
    7. '(N' → logprob: -16.625455856323242
    8. '(b' → logprob: -17.000455856323242
    9. 'N' → logprob: -17.125455856323242
    10. ' s' → logprob: -17.625455856323242

Token 379: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22571316361427307
    2. ',c' → logprob: -1.6007131338119507
    3. ',s' → logprob: -9.100712776184082
    4. ' ,' → logprob: -9.725712776184082
    5. ',b' → logprob: -9.850712776184082
    6. ',
' → logprob: -9.975712776184082
    7. ',+' → logprob: -12.225712776184082
    8. ',k' → logprob: -12.725712776184082
    9. ',n' → logprob: -13.100712776184082
    10. '   ' → logprob: -13.100712776184082

Token 380: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.034592388459714e-06
    2. 'c' → logprob: -12.375005722045898
    3. '0' → logprob: -13.500005722045898
    4. ' ' → logprob: -15.750005722045898
    5. 's' → logprob: -16.3750057220459
    6. '   ' → logprob: -16.5000057220459
    7. ')' → logprob: -18.1250057220459
    8. '       ' → logprob: -18.5000057220459
    9. 'a' → logprob: -18.7500057220459
    10. 'b' → logprob: -18.8750057220459

Token 381: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2015615701675415
    2. ')' → logprob: -1.7015615701675415
    3. ')
' → logprob: -9.45156192779541
    4. ')s' → logprob: -10.32656192779541
    5. '       ' → logprob: -11.07656192779541
    6. ')

' → logprob: -12.32656192779541
    7. '   ' → logprob: -12.32656192779541
    8. '<|end|>' → logprob: -12.57656192779541
    9. '
' → logprob: -13.20156192779541
    10. ')c' → logprob: -13.82656192779541

Token 382: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.060897089540958405
    2. ' for' → logprob: -3.0608971118927
    3. 'for' → logprob: -4.560896873474121
    4. '
' → logprob: -7.185896873474121
    5. 's' → logprob: -7.935896873474121
    6. '   ' → logprob: -8.435896873474121
    7. '<|end|>' → logprob: -9.060896873474121
    8. '```' → logprob: -9.435896873474121
    9. '	for' → logprob: -9.560896873474121
    10. '           ' → logprob: -9.935896873474121

Token 383: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.09899993985891342
    2. '   ' → logprob: -2.8489999771118164
    3. '       ' → logprob: -3.7239999771118164
    4. ' for' → logprob: -4.723999977111816
    5. 'res' → logprob: -6.223999977111816
    6. 'ans' → logprob: -7.348999977111816
    7. 'r' → logprob: -8.348999977111816
    8. '	for' → logprob: -8.598999977111816
    9. '```' → logprob: -8.973999977111816
    10. 'result' → logprob: -9.723999977111816

Token 384: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03890274465084076
    2. 'i' → logprob: -3.663902759552002
    3. ' x' → logprob: -5.413902759552002
    4. 'v' → logprob: -5.788902759552002
    5. 'ai' → logprob: -5.788902759552002
    6. 'aa' → logprob: -6.913902759552002
    7. ' i' → logprob: -7.663902759552002
    8. 'e' → logprob: -9.288902282714844
    9. ' aa' → logprob: -9.288902282714844
    10. ' ai' → logprob: -9.538902282714844

Token 385: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07898683845996857
    2. 'in' → logprob: -2.578986883163452
    3. ' ' → logprob: -10.828987121582031
    4. 's' → logprob: -10.953987121582031
    5. '   ' → logprob: -10.953987121582031
    6. ',' → logprob: -11.328987121582031
    7. '  ' → logprob: -11.828987121582031
    8. '    ' → logprob: -12.578987121582031
    9. 'a' → logprob: -12.828987121582031
    10. 'd' → logprob: -13.328987121582031

Token 386: ' aa' (ID: 40260)
  Prédit: 'aa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aa' → logprob: -0.0006968271918594837
    2. 'a' → logprob: -7.750696659088135
    3. ' aa' → logprob: -8.250697135925293
    4. 'range' → logprob: -13.125697135925293
    5. '   ' → logprob: -13.250697135925293
    6. 'aaa' → logprob: -15.000697135925293
    7. ' ' → logprob: -15.375697135925293
    8. '[' → logprob: -15.625697135925293
    9. ' a' → logprob: -16.000696182250977
    10. '  ' → logprob: -16.250696182250977

Token 387: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03860503062605858
    2. ':
' → logprob: -3.288604974746704
    3. ' in' → logprob: -7.538605213165283
    4. 'in' → logprob: -11.788604736328125
    5. '       ' → logprob: -12.038604736328125
    6. ':
' → logprob: -12.538604736328125
    7. '):
' → logprob: -12.663604736328125
    8. ' :' → logprob: -12.788604736328125
    9. '=' → logprob: -13.038604736328125
    10. '):' → logprob: -13.163604736328125

Token 388: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09528513252735138
    2. 's' → logprob: -3.095285177230835
    3. ' s' → logprob: -3.095285177230835
    4. 'c' → logprob: -9.220285415649414
    5. '   ' → logprob: -9.470285415649414
    6. ' c' → logprob: -9.470285415649414
    7. '           ' → logprob: -9.470285415649414
    8. '```' → logprob: -11.470285415649414
    9. '<|end|>' → logprob: -12.345285415649414
    10. '      ' → logprob: -12.845285415649414

Token 389: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.042287878692150116
    2. ' s' → logprob: -3.417287826538086
    3. 'c' → logprob: -5.167287826538086
    4. '       ' → logprob: -6.042287826538086
    5. '           ' → logprob: -8.042287826538086
    6. ' c' → logprob: -9.417287826538086
    7. '   ' → logprob: -9.417287826538086
    8. 'if' → logprob: -10.542287826538086
    9. ' if' → logprob: -12.042287826538086
    10. '               ' → logprob: -12.417287826538086

Token 390: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.007639517541974783
    2. ' +=' → logprob: -4.882639408111572
    3. '+' → logprob: -10.63263988494873
    4. ']+=' → logprob: -12.38263988494873
    5. '+=(' → logprob: -12.75763988494873
    6. 's' → logprob: -14.13263988494873
    7. '+s' → logprob: -14.50763988494873
    8. '+='' → logprob: -15.25763988494873
    9. '   ' → logprob: -15.38263988494873
    10. '=' → logprob: -15.75763988494873

Token 391: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.8624639324116288e-06
    2. ' x' → logprob: -13.250001907348633
    3. '	x' → logprob: -21.500001907348633
    4. '   ' → logprob: -22.875001907348633
    5. '{x' → logprob: -24.500001907348633
    6. '1' → logprob: -24.750001907348633
    7. '$x' → logprob: -25.000001907348633
    8. '(x' → logprob: -25.250001907348633
    9. '
' → logprob: -25.750001907348633
    10. '"x' → logprob: -25.875001907348633

Token 392: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18262410163879395
    2. '           ' → logprob: -1.807624101638794
    3. '
' → logprob: -6.932623863220215
    4. '       ' → logprob: -7.182623863220215
    5. 'b' → logprob: -8.182623863220215
    6. '               ' → logprob: -8.682623863220215
    7. '            
' → logprob: -8.807623863220215
    8. ',' → logprob: -8.932623863220215
    9. '   ' → logprob: -9.307623863220215
    10. '  
' → logprob: -10.057623863220215

Token 393: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23020893335342407
    2. '           ' → logprob: -1.6052088737487793
    3. '```' → logprob: -6.105208873748779
    4. '       ' → logprob: -6.980208873748779
    5. '
' → logprob: -7.605208873748779
    6. ',' → logprob: -8.605209350585938
    7. 'b' → logprob: -8.730209350585938
    8. '   ' → logprob: -8.730209350585938
    9. '  
' → logprob: -8.855209350585938
    10. '            
' → logprob: -9.355209350585938

Token 394: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.00021998681768309325
    2. 'b' → logprob: -8.87522029876709
    3. 'cnt' → logprob: -10.62522029876709
    4. '           ' → logprob: -11.25022029876709
    5. '
' → logprob: -11.62522029876709
    6. 'if' → logprob: -12.12522029876709
    7. '       ' → logprob: -12.37522029876709
    8. 'res' → logprob: -12.50022029876709
    9. 'count' → logprob: -12.62522029876709
    10. 'val' → logprob: -12.75022029876709

Token 395: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.000365855434210971
    2. ' +=' → logprob: -8.3753662109375
    3. '=b' → logprob: -9.3753662109375
    4. '+=(' → logprob: -10.3753662109375
    5. '=' → logprob: -11.7503662109375
    6. '++' → logprob: -12.7503662109375
    7. ']+=' → logprob: -13.3753662109375
    8. ',b' → logprob: -13.5003662109375
    9. 'max' → logprob: -13.5003662109375
    10. 'b' → logprob: -13.8753662109375

Token 396: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -3.5954712075181305e-05
    2. ' b' → logprob: -10.375036239624023
    3. 'c' → logprob: -13.750036239624023
    4. '(b' → logprob: -14.000036239624023
    5. '
' → logprob: -14.125036239624023
    6. '1' → logprob: -15.000036239624023
    7. 's' → logprob: -15.000036239624023
    8. '   ' → logprob: -15.375036239624023
    9. 'max' → logprob: -15.500036239624023
    10. 'x' → logprob: -15.750036239624023

Token 397: '.sum' (ID: 35381)
  Prédit: '.sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sum' → logprob: -4.008129963040119e-06
    2. '.s' → logprob: -13.875003814697266
    3. 'sum' → logprob: -14.000003814697266
    4. '.dat' → logprob: -14.125003814697266
    5. ' .' → logprob: -14.500003814697266
    6. ').' → logprob: -15.125003814697266
    7. '.' → logprob: -16.000003814697266
    8. '	sum' → logprob: -16.125003814697266
    9. '>.' → logprob: -16.250003814697266
    10. '.num' → logprob: -16.375003814697266

Token 398: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -2.45848218582978e-06
    2. 's' → logprob: -13.12500286102295
    3. '(' → logprob: -15.12500286102295
    4. '[s' → logprob: -16.500001907348633
    5. '(
' → logprob: -18.875001907348633
    6. ' s' → logprob: -19.000001907348633
    7. ' (' → logprob: -19.000001907348633
    8. '(b' → logprob: -19.500001907348633
    9. '{s' → logprob: -19.500001907348633
    10. '((' → logprob: -19.875001907348633

Token 399: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.49656975269317627
    2. '-' → logprob: -0.9965697526931763
    3. ' -' → logprob: -4.746569633483887
    4. '(s' → logprob: -5.246569633483887
    5. '(' → logprob: -5.621569633483887
    6. ')
' → logprob: -5.871569633483887
    7. ')-' → logprob: -7.246569633483887
    8. ')s' → logprob: -8.246569633483887
    9. ' )' → logprob: -9.121569633483887
    10. '())' → logprob: -9.121569633483887

Token 400: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07634250819683075
    2. 'b' → logprob: -2.9513425827026367
    3. '       ' → logprob: -4.201342582702637
    4. ' b' → logprob: -5.201342582702637
    5. '```' → logprob: -7.576342582702637
    6. '   ' → logprob: -9.701342582702637
    7. '               ' → logprob: -10.076342582702637
    8. '(' → logprob: -10.326342582702637
    9. ',' → logprob: -11.076342582702637
    10. '+' → logprob: -11.076342582702637

Token 401: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.00011105302110081539
    2. ' b' → logprob: -9.125110626220703
    3. '   ' → logprob: -13.750110626220703
    4. '       ' → logprob: -14.500110626220703
    5. '           ' → logprob: -14.875110626220703
    6. '	b' → logprob: -16.750110626220703
    7. ' ' → logprob: -17.375110626220703
    8. '  ' → logprob: -17.875110626220703
    9. 'print' → logprob: -18.750110626220703
    10. '    ' → logprob: -19.125110626220703

Token 402: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -7.896309739408025e-07
    2. '.' → logprob: -14.500000953674316
    3. '.sum' → logprob: -16.0
    4. ' .' → logprob: -16.875
    5. ').' → logprob: -17.75
    6. '```' → logprob: -17.875
    7. '`.' → logprob: -18.0
    8. 'add' → logprob: -18.75
    9. '.append' → logprob: -19.0
    10. '].' → logprob: -19.125

Token 403: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.9361264946837764e-07
    2. 's' → logprob: -16.0
    3. '(' → logprob: -18.5
    4. ' (' → logprob: -20.75
    5. '(
' → logprob: -21.25
    6. '((' → logprob: -21.75
    7. '   ' → logprob: -22.75
    8. ' s' → logprob: -23.75
    9. '[s' → logprob: -24.0
    10. 'a' → logprob: -24.125

Token 404: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.0126840758603066e-05
    2. ' ,' → logprob: -10.250040054321289
    3. '1' → logprob: -12.750040054321289
    4. ',c' → logprob: -14.125040054321289
    5. ',
' → logprob: -14.750040054321289
    6. '(' → logprob: -14.875040054321289
    7. ')' → logprob: -16.25004005432129
    8. ',+' → logprob: -16.37504005432129
    9. '(),' → logprob: -16.62504005432129
    10. '，' → logprob: -18.00004005432129

Token 405: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '   ' → logprob: -19.75
    4. ')' → logprob: -20.875
    5. '１' → logprob: -22.375
    6. '  ' → logprob: -22.625
    7. '```' → logprob: -23.0
    8. '
' → logprob: -23.0
    9. '(' → logprob: -23.25
    10. '+' → logprob: -23.375

Token 406: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.576074481010437
    2. ')' → logprob: -0.826074481010437
    3. ')
' → logprob: -9.326074600219727
    4. '       ' → logprob: -10.576074600219727
    5. ')return' → logprob: -11.576074600219727
    6. ')

' → logprob: -11.701074600219727
    7. '   ' → logprob: -14.326074600219727
    8. '           ' → logprob: -14.576074600219727
    9. '())
' → logprob: -14.701074600219727
    10. '
' → logprob: -15.451074600219727

Token 407: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001257972209714353
    2. '   ' → logprob: -6.87625789642334
    3. ' return' → logprob: -9.25125789642334
    4. 'return' → logprob: -9.62625789642334
    5. '           ' → logprob: -10.00125789642334
    6. '
' → logprob: -11.37625789642334
    7. '	return' → logprob: -12.75125789642334
    8. ',' → logprob: -14.00125789642334
    9. '	' → logprob: -14.75125789642334
    10. '<|end|>' → logprob: -14.75125789642334

Token 408: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10725422948598862
    2. '   ' → logprob: -2.3572542667388916
    3. 'return' (adapté à ' return') → logprob: -4.9822540283203125
    4. ' return' → logprob: -8.857254028320312
    5. '           ' → logprob: -11.482254028320312
    6. 'print' → logprob: -11.857254028320312
    7. '	return' → logprob: -12.857254028320312
    8. 'if' → logprob: -14.857254028320312
    9. '     ' → logprob: -15.232254028320312
    10. '      ' → logprob: -15.232254028320312

Token 409: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00020234835392329842
    2. ' c' → logprob: -8.625202178955078
    3. '(c' → logprob: -11.375202178955078
    4. '   ' → logprob: -12.375202178955078
    5. 'True' → logprob: -12.875202178955078
    6. '[c' → logprob: -13.375202178955078
    7. 'bool' → logprob: -14.000202178955078
    8. '
' → logprob: -14.625202178955078
    9. '1' → logprob: -14.625202178955078
    10. '	c' → logprob: -15.375202178955078

Token 410: '>=' (ID: 20974)
  Prédit: '>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.25512441992759705
    2. ' >=' → logprob: -1.5051244497299194
    3. '>' → logprob: -6.380124568939209
    4. ' >' → logprob: -6.755124568939209
    5. '   ' → logprob: -8.25512409210205
    6. '>N' → logprob: -10.13012409210205
    7. ')>=' → logprob: -11.13012409210205
    8. ' ' → logprob: -12.75512409210205
    9. '       ' → logprob: -13.25512409210205
    10. '
' → logprob: -13.25512409210205

Token 411: '-' (ID: 12)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029781728982925415
    2. 'N' → logprob: -4.029781818389893
    3. '(N' → logprob: -5.404781818389893
    4. '1' → logprob: -5.779781818389893
    5. 'mid' → logprob: -6.279781818389893
    6. 'k' → logprob: -7.904781818389893
    7. '(' → logprob: -7.904781818389893
    8. 'MOD' → logprob: -8.154781341552734
    9. '(mid' → logprob: -8.654781341552734
    10. '((' → logprob: -8.904781341552734

Token 412: '(-' (ID: 8087)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7467382550239563
    2. '0' → logprob: -0.8717382550239563
    3. 'c' → logprob: -3.7467381954193115
    4. '(n' → logprob: -4.246738433837891
    5. 'n' → logprob: -4.621738433837891
    6. ' ' → logprob: -4.746738433837891
    7. '(' → logprob: -4.871738433837891
    8. '(N' → logprob: -4.871738433837891
    9. 'a' → logprob: -4.996738433837891
    10. 'INF' → logprob: -5.496738433837891

Token 413: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.045869048684835434
    2. '(N' → logprob: -3.1708691120147705
    3. 'c' → logprob: -6.170868873596191
    4. '((' → logprob: -8.295868873596191
    5. '(' → logprob: -8.670868873596191
    6. '(c' → logprob: -9.170868873596191
    7. ' N' → logprob: -9.170868873596191
    8. ' (' → logprob: -9.295868873596191
    9. '   ' → logprob: -11.045868873596191
    10. 's' → logprob: -11.795868873596191

Token 414: '*(' (ID: 14793)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.2909189760684967
    2. '(mid' → logprob: -2.040919065475464
    3. ' mid' → logprob: -3.040919065475464
    4. '*(' → logprob: -3.165919065475464
    5. '//' → logprob: -4.290918827056885
    6. '*' → logprob: -5.040918827056885
    7. ' //' → logprob: -5.790918827056885
    8. ' (' → logprob: -5.915918827056885
    9. ' *' → logprob: -6.165918827056885
    10. '(m' → logprob: -6.790918827056885

Token 415: 'N' (ID: 45)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.5239101648330688
    2. 'N' → logprob: -1.2739101648330688
    3. '(mid' → logprob: -2.6489100456237793
    4. '(N' → logprob: -2.8989100456237793
    5. 'MID' → logprob: -7.398910045623779
    6. '(M' → logprob: -7.523910045623779
    7. ' mid' → logprob: -8.273910522460938
    8. 'M' → logprob: -8.398910522460938
    9. ' (' → logprob: -8.648910522460938
    10. ' N' → logprob: -9.648910522460938

Token 416: '+' (ID: 10)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.8617873191833496
    2. '+' → logprob: -0.9867873191833496
    3. '1' → logprob: -1.6117873191833496
    4. '//' → logprob: -6.36178731918335
    5. ' ' → logprob: -7.11178731918335
    6. '3' → logprob: -7.23678731918335
    7. '
' → logprob: -7.61178731918335
    8. '   ' → logprob: -7.61178731918335
    9. '       ' → logprob: -8.111787796020508
    10. ' +' → logprob: -8.236787796020508

Token 417: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2826453447341919
    2. '1' → logprob: -1.407645344734192
    3. '4' → logprob: -6.657645225524902
    4. '3' → logprob: -9.657645225524902
    5. ' ' → logprob: -9.657645225524902
    6. '   ' → logprob: -10.657645225524902
    7. '
' → logprob: -10.657645225524902
    8. '```' → logprob: -10.907645225524902
    9. '  ' → logprob: -13.157645225524902
    10. '(' → logprob: -13.282645225524902

Token 418: ')//' (ID: 60375)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.07100353389978409
    2. ' //' → logprob: -2.9460034370422363
    3. '2' → logprob: -4.196003437042236
    4. ')//' → logprob: -7.571003437042236
    5. '```' → logprob: -9.321003913879395
    6. '4' → logprob: -9.446003913879395
    7. ' ' → logprob: -9.571003913879395
    8. ')' → logprob: -10.071003913879395
    9. '3' → logprob: -10.196003913879395
    10. '/' → logprob: -10.821003913879395

Token 419: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.895480277715251e-06
    2. ' ' → logprob: -11.750008583068848
    3. '1' → logprob: -14.500008583068848
    4. '   ' → logprob: -15.625008583068848
    5. '4' → logprob: -15.875008583068848
    6. '
' → logprob: -17.500009536743164
    7. '(' → logprob: -17.750009536743164
    8. '  ' → logprob: -18.000009536743164
    9. '    ' → logprob: -18.125009536743164
    10. '```' → logprob: -18.375009536743164

Token 420: '//' (ID: 393)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.8525394797325134
    2. '//' → logprob: -1.1025395393371582
    3. '(mid' → logprob: -2.102539539337158
    4. 'mid' → logprob: -2.352539539337158
    5. '2' → logprob: -5.227539539337158
    6. ' (' → logprob: -5.477539539337158
    7. ')' → logprob: -5.477539539337158
    8. ' ' → logprob: -5.977539539337158
    9. ' mid' → logprob: -6.227539539337158
    10. '(' → logprob: -6.477539539337158

Token 421: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.2723104848410003e-05
    2. ' ' → logprob: -10.750022888183594
    3. '3' → logprob: -14.875022888183594
    4. '   ' → logprob: -14.875022888183594
    5. '4' → logprob: -16.250022888183594
    6. 'mid' → logprob: -16.375022888183594
    7. '  ' → logprob: -16.500022888183594
    8. '10' → logprob: -16.625022888183594
    9. '
' → logprob: -16.875022888183594
    10. 'MOD' → logprob: -17.375022888183594

Token 422: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014046367723494768
    2. ')
' → logprob: -7.376404762268066
    3. ' )' → logprob: -7.501404762268066
    4. '+' → logprob: -9.126404762268066
    5. ')//' → logprob: -10.251404762268066
    6. '//' → logprob: -10.751404762268066
    7. '):
' → logprob: -10.876404762268066
    8. ')#' → logprob: -12.251404762268066
    9. '))' → logprob: -12.376404762268066
    10. '   ' → logprob: -12.501404762268066

Token 423: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 424: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07928058505058289
    2. '<|end|>' → logprob: -2.9542806148529053
    3. '
' → logprob: -4.329280376434326
    4. 'main' → logprob: -5.704280376434326
    5. 'if' → logprob: -5.829280376434326
    6. ')' → logprob: -5.954280376434326
    7. ' main' → logprob: -8.079280853271484
    8. '    
' → logprob: -8.204280853271484
    9. ' if' → logprob: -8.829280853271484
    10. 'print' (adapté à ' print') → logprob: -8.954280853271484

Token 425: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0022275717929005623
    2. 'n' → logprob: -6.252227783203125
    3. '(' → logprob: -8.252227783203125
    4. '()' → logprob: -10.627227783203125
    5. '((' → logprob: -12.502227783203125
    6. '(main' → logprob: -12.877227783203125
    7. '(int' → logprob: -13.877227783203125
    8. '(N' → logprob: -14.252227783203125
    9. '('' → logprob: -14.377227783203125
    10. '(
' → logprob: -14.502227783203125

Token 426: 'ib' (ID: 526)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.42762869596481323
    2. '()' → logprob: -1.302628755569458
    3. '(N' → logprob: -2.677628755569458
    4. '())
' → logprob: -6.177628517150879
    5. '(' → logprob: -6.302628517150879
    6. '(int' → logprob: -7.052628517150879
    7. '()+' → logprob: -7.302628517150879
    8. 'int' → logprob: -7.677628517150879
    9. '()
' → logprob: -8.302628517150879
    10. '()\' → logprob: -8.927628517150879

Token 427: 'utan' (ID: 28528)
  Prédit: 'utan'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utan' → logprob: -9.031157969729975e-05
    2. 'ut' → logprob: -10.000090599060059
    3. 'but' → logprob: -10.625090599060059
    4. 'utane' → logprob: -12.125090599060059
    5. '
' → logprob: -12.625090599060059
    6. 'utana' → logprob: -12.750090599060059
    7. 'utano' → logprob: -13.500090599060059
    8. 'utang' → logprob: -13.500090599060059
    9. 'utaan' → logprob: -14.375090599060059
    10. 'utany' → logprob: -14.375090599060059

Token 428: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1274217963218689
    2. '(max' → logprob: -2.3774218559265137
    3. '(N' → logprob: -3.8774218559265137
    4. '((' → logprob: -5.252421855926514
    5. '(a' → logprob: -7.627421855926514
    6. '(-' → logprob: -9.002421379089355
    7. '(MAX' → logprob: -9.502421379089355
    8. 'max' → logprob: -10.127421379089355
    9. '(min' → logprob: -10.377421379089355
    10. ')' → logprob: -10.377421379089355

Token 429: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17046120762825012
    2. 'min' → logprob: -2.6704611778259277
    3. 'max' → logprob: -3.2954611778259277
    4. '(' → logprob: -3.6704611778259277
    5. '1' → logprob: -4.670461177825928
    6. '-' → logprob: -5.295461177825928
    7. '(min' → logprob: -5.295461177825928
    8. 'INF' → logprob: -5.545461177825928
    9. '(max' → logprob: -7.420461177825928
    10. '(N' → logprob: -8.670461654663086

Token 430: ',' (ID: 11)
  Prédit: ',max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',max' → logprob: -0.2847800552845001
    2. ',' → logprob: -1.7847800254821777
    3. ',N' → logprob: -2.5347800254821777
    4. 'max' → logprob: -7.409780025482178
    5. ' ,' → logprob: -10.034780502319336
    6. ',n' → logprob: -11.159780502319336
    7. ',m' → logprob: -11.409780502319336
    8. ',a' → logprob: -11.659780502319336
    9. ',M' → logprob: -12.159780502319336
    10. ',int' → logprob: -12.284780502319336

Token 431: '10' (ID: 702)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.4925938546657562
    2. '10' → logprob: -1.4925938844680786
    3. 'max' → logprob: -1.8675938844680786
    4. 'MAX' → logprob: -5.742593765258789
    5. 'MOD' → logprob: -5.742593765258789
    6. 'int' → logprob: -7.242593765258789
    7. 'N' → logprob: -7.492593765258789
    8. '0' → logprob: -7.867593765258789
    9. '100' → logprob: -8.242593765258789
    10. ' ' → logprob: -8.242593765258789

Token 432: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.8859947919845581
    2. '10' → logprob: -0.8859947919845581
    3. '**' → logprob: -2.1359949111938477
    4. '6' → logprob: -3.5109949111938477
    5. '7' → logprob: -4.010994911193848
    6. '5' → logprob: -5.010994911193848
    7. '```' → logprob: -6.510994911193848
    8. '8' → logprob: -8.135994911193848
    9. '+' → logprob: -8.260994911193848
    10. '0' → logprob: -8.635994911193848

Token 433: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0022605215199291706
    2. '10' → logprob: -6.127260684967041
    3. '5' → logprob: -10.502260208129883
    4. '7' → logprob: -10.752260208129883
    5. '6' → logprob: -11.252260208129883
    6. '+' → logprob: -12.252260208129883
    7. '
' → logprob: -13.377260208129883
    8. '11' → logprob: -13.502260208129883
    9. '```' → logprob: -14.002260208129883
    10. '``' → logprob: -14.002260208129883

Token 434: '+' (ID: 10)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0037467486690729856
    2. ')' → logprob: -5.62874698638916
    3. '+' → logprob: -9.00374698638916
    4. ' ))' → logprob: -11.25374698638916
    5. '))
' → logprob: -12.37874698638916
    6. ')))' → logprob: -12.75374698638916
    7. ')+' → logprob: -13.87874698638916
    8. '()))' → logprob: -14.50374698638916
    9. '1' → logprob: -15.00374698638916
    10. ' )' → logprob: -15.12874698638916

Token 435: '1' (ID: 16)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.06531337648630142
    2. '10' → logprob: -3.3153133392333984
    3. '9' → logprob: -4.315313339233398
    4. '1' → logprob: -4.565313339233398
    5. '8' → logprob: -5.815313339233398
    6. '6' → logprob: -9.565313339233398
    7. '18' → logprob: -10.565313339233398
    8. '0' → logprob: -10.940313339233398
    9. '5' → logprob: -11.565313339233398
    10. '11' → logprob: -12.065313339233398

Token 436: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.12694060802459717
    2. ')' → logprob: -2.1269407272338867
    3. '))
' → logprob: -12.126940727233887
    4. ')))' → logprob: -12.626940727233887
    5. ')
' → logprob: -13.126940727233887
    6. ' ))' → logprob: -14.001940727233887
    7. ' )' → logprob: -14.251940727233887
    8. ')")' → logprob: -16.87693977355957
    9. '])' → logprob: -17.00193977355957
    10. '   ' → logprob: -17.00193977355957

Token 437: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 438: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.04859974980354309
    2. '__' → logprob: -3.0485997200012207
    3. '_name' → logprob: -11.548600196838379
    4. '_' → logprob: -13.673600196838379
    5. ' _' → logprob: -14.048600196838379
    6. 'name' → logprob: -15.298600196838379
    7. ' ' → logprob: -15.673600196838379
    8. '___' → logprob: -15.923600196838379
    9. ' ___' → logprob: -16.798599243164062
    10. '(__' → logprob: -16.798599243164062

Token 439: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.08195841312408447
    2. '==' → logprob: -3.206958293914795
    3. ' ==' → logprob: -3.331958293914795
    4. ' __' → logprob: -6.206958293914795
    5. '.__' → logprob: -8.831958770751953
    6. '=="' → logprob: -8.831958770751953
    7. 'name' → logprob: -9.456958770751953
    8. '__.__' → logprob: -10.331958770751953
    9. '```' → logprob: -11.331958770751953
    10. '__.' → logprob: -11.581958770751953

Token 440: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.8219583075260743e-05
    2. '==' → logprob: -10.500038146972656
    3. '__.__' → logprob: -11.625038146972656
    4. ' ==' → logprob: -14.250038146972656
    5. '__.' → logprob: -14.500038146972656
    6. '=="' → logprob: -15.625038146972656
    7. '__('' → logprob: -16.000038146972656
    8. '=='' → logprob: -16.750038146972656
    9. '_' → logprob: -17.000038146972656
    10. '__["' → logprob: -17.375038146972656

Token 441: ' ==' (ID: 951)
  Prédit: '=="'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=="' → logprob: -0.5442299246788025
    2. ' ==' → logprob: -1.5442299842834473
    3. '==' → logprob: -2.0442299842834473
    4. '=='' → logprob: -2.9192299842834473
    5. '__' → logprob: -3.7942299842834473
    6. '==
' → logprob: -9.794229507446289
    7. '_' → logprob: -10.544229507446289
    8. '==="' → logprob: -10.669229507446289
    9. '=' → logprob: -10.919229507446289
    10. ' =="' → logprob: -10.919229507446289

Token 442: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.10022899508476257
    2. ''' → logprob: -2.350229024887085
    3. '__' → logprob: -11.475229263305664
    4. ' "__' → logprob: -11.475229263305664
    5. ' '__' → logprob: -13.975229263305664
    6. '   ' → logprob: -15.725229263305664
    7. '"name' → logprob: -16.100229263305664
    8. ''name' → logprob: -16.600229263305664
    9. '"user' → logprob: -16.725229263305664
    10. '("__' → logprob: -16.725229263305664

Token 443: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -4.842555426876061e-06
    2. 'name' → logprob: -12.875004768371582
    3. '__' → logprob: -13.375004768371582
    4. '_main' → logprob: -14.875004768371582
    5. ' main' → logprob: -16.0000057220459
    6. ''' → logprob: -16.5000057220459
    7. 'm' → logprob: -17.2500057220459
    8. 'MAIN' → logprob: -17.6250057220459
    9. '__':
' → logprob: -17.7500057220459
    10. '(main' → logprob: -19.0000057220459

Token 444: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.005311547312885523
    2. '__' → logprob: -5.255311489105225
    3. '__":
' → logprob: -9.505311965942383
    4. '__:' → logprob: -13.255311965942383
    5. '_' → logprob: -14.505311965942383
    6. '():
' → logprob: -15.255311965942383
    7. '':' → logprob: -15.380311965942383
    8. '':
' → logprob: -15.630311965942383
    9. '__.' → logprob: -16.130311965942383
    10. '__('' → logprob: -16.755311965942383

Token 445: '   ' (ID: 271)
  Prédit: '	main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	main' → logprob: -0.173716738820076
    2. '   ' → logprob: -2.4237167835235596
    3. 'main' → logprob: -2.6737167835235596
    4. ' main' → logprob: -6.7987165451049805
    5. '(main' → logprob: -8.17371654510498
    6. '_main' → logprob: -9.04871654510498
    7. '	Main' → logprob: -9.42371654510498
    8. '<|end|>' → logprob: -9.42371654510498
    9. '    
' → logprob: -9.54871654510498
    10. '```' → logprob: -10.29871654510498

Token 446: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -5.300083648762666e-05
    2. '	main' → logprob: -10.000053405761719
    3. ' main' → logprob: -12.500053405761719
    4. '   ' → logprob: -12.500053405761719
    5. '_main' → logprob: -17.12505340576172
    6. '(main' → logprob: -18.25005340576172
    7. '.main' → logprob: -20.00005340576172
    8. ' ' → logprob: -21.25005340576172
    9. '  ' → logprob: -21.37505340576172
    10. '/main' → logprob: -21.87505340576172

Token 447: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 445
Tokens correctement prédits (1ère position, stricte): 204
Tokens correctement prédits (1ère position, avec adaptation): 229
Tokens correctement prédits (top 10): 382
Précision stricte (1ère position): 45.84%
Précision adaptée (1ère position): 51.46%
Précision (top 10): 85.84%
================================================================================
