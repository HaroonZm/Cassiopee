================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:40:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demande à l'utilisateur d'entrer une chaîne de caractères via le clavier.
# Cette chaîne doit contenir deux chiffres séparés par un espace.
ab = input()

# La méthode split() divise la chaîne 'ab' en une liste de sous-chaînes,
# en utilisant l'espace " " comme séparateur. Par exemple, si l'utilisateur saisit "3 5",
# ab.split(" ") retournera ["3", "5"].
a, b = ab.split(" ")

# La fonction int() convertit la chaîne 'a' en un entier.
# Par exemple, si a == "3", alors int(a) == 3.
A = int(a)

# De même, la fonction int() convertit la chaîne 'b' en un entier.
B = int(b)

# Ici, nous vérifions plusieurs conditions en même temps à l'aide du mot-clé 'or', 
# qui est l'opérateur logique OU en Python.
# "0" in a : Vérifie si le caractère '0' est présent dans la chaîne 'a'
# "0" in b : Vérifie si le caractère '0' est présent dans la chaîne 'b'
# A > 9 : Vérifie si la valeur entière contenue dans A est supérieure à 9
# B > 9 : Vérifie si la valeur entière contenue dans B est supérieure à 9
#
# Si au moins une de ces conditions est vraie, on entre dans le bloc if.
if "0" in a or "0" in b or A > 9 or B > 9:
    # Affiche -1 à l'écran pour indiquer une erreur ou des entrées invalides
    print(-1)
else:
    # Cette partie de code n'est exécutée que si toutes les conditions ci-dessus sont fausses,
    # c'est-à-dire si ni 'a' ni 'b' ne contiennent le chiffre '0', et si A et B sont tous les deux inférieurs ou égaux à 9.
    #
    # On affiche le produit de A et B, c'est-à-dire le résultat de leur multiplication.
    print(A * B)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ande' (ID: 4102)
  → Token d'amorce (pas de prédiction)

Token 3: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7861731648445129
    2. ':' → logprob: -1.5361731052398682
    3. 's' → logprob: -1.6611731052398682
    4. ' de' → logprob: -2.911173105239868
    5. ' ' → logprob: -3.161173105239868
    6. '=' → logprob: -4.786173343658447
    7. ' =' → logprob: -4.786173343658447
    8. ' :' → logprob: -4.911173343658447
    9. '.' → logprob: -5.286173343658447
    10. ' d' → logprob: -5.786173343658447

Token 4: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.02239242009818554
    2. ' l' → logprob: -3.897392511367798
    3. 'user' → logprob: -6.897392272949219
    4. ''' → logprob: -8.897392272949219
    5. ' user' → logprob: -9.022392272949219
    6. 'util' → logprob: -9.022392272949219
    7. '#' → logprob: -9.397392272949219
    8. 'la' → logprob: -9.522392272949219
    9. '`' → logprob: -10.522392272949219
    10. '_' → logprob: -10.647392272949219

Token 5: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.036522276699543
    2. ''' → logprob: -4.161522388458252
    3. 'u' → logprob: -4.661522388458252
    4. 'util' → logprob: -5.661522388458252
    5. '’utilisateur' → logprob: -5.661522388458252
    6. 'a' → logprob: -6.161522388458252
    7. ' utilisateur' → logprob: -6.786522388458252
    8. ''util' → logprob: -8.661521911621094
    9. ''user' → logprob: -9.161521911621094
    10. ''us' → logprob: -9.411521911621094

Token 6: ' d' (ID: 272)
  Prédit: 'nom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nom' → logprob: -0.17506203055381775
    2. 'name' → logprob: -2.6750619411468506
    3. 'n' → logprob: -3.4250619411468506
    4. 's' → logprob: -4.30006217956543
    5. ' nom' → logprob: -4.80006217956543
    6. 'user' → logprob: -4.92506217956543
    7. ' =' → logprob: -6.05006217956543
    8. 'prenom' → logprob: -6.05006217956543
    9. 'print' → logprob: -6.17506217956543
    10. 'input' → logprob: -6.17506217956543

Token 7: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.14649178087711334
    2. 'entr' → logprob: -3.146491765975952
    3. ''' → logprob: -3.521491765975952
    4. 'é' → logprob: -3.896491765975952
    5. 'entrée' → logprob: -4.271492004394531
    6. ''entrée' → logprob: -4.771492004394531
    7. ''ent' → logprob: -5.146492004394531
    8. '```' → logprob: -6.271492004394531
    9. 'ent' → logprob: -6.521492004394531
    10. '`' → logprob: -6.896492004394531

Token 8: 'entr' (ID: 12792)
  Prédit: 'entr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entr' → logprob: -0.281941682100296
    2. 'ent' → logprob: -2.1569416522979736
    3. 'entrée' → logprob: -2.1569416522979736
    4. 's' → logprob: -4.781941890716553
    5. 'entre' → logprob: -7.031941890716553
    6. 'input' → logprob: -7.156941890716553
    7. 'enter' → logprob: -7.156941890716553
    8. 'être' → logprob: -7.656941890716553
    9. 'e' → logprob: -7.781941890716553
    10. 'é' → logprob: -7.906941890716553

Token 9: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -9.007317567011341e-05
    2. 'éer' → logprob: -9.750089645385742
    3. 'rer' → logprob: -11.500089645385742
    4. 'erer' → logprob: -12.000089645385742
    5. 'érer' → logprob: -13.000089645385742
    6. 'trer' → logprob: -13.125089645385742
    7. 'é' → logprob: -13.125089645385742
    8. 'e' → logprob: -13.500089645385742
    9. ''er' → logprob: -13.625089645385742
    10. 'ér' → logprob: -13.750089645385742

Token 10: ' une' (ID: 2463)
  Prédit: ''un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''un' → logprob: -1.3000035285949707
    2. ' un' → logprob: -1.4250035285949707
    3. ''' → logprob: -2.0500035285949707
    4. 'une' → logprob: -2.3000035285949707
    5. ''une' → logprob: -2.4250035285949707
    6. ' une' → logprob: -2.5500035285949707
    7. 'un' → logprob: -2.8000035285949707
    8. '`' → logprob: -5.300003528594971
    9. '_' → logprob: -5.550003528594971
    10. '```' → logprob: -5.800003528594971

Token 11: ' chaîne' (ID: 89288)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.009649490006268024
    2. ' chaîne' → logprob: -5.009649276733398
    3. 'chaine' → logprob: -6.884649276733398
    4. ' phrase' → logprob: -7.509649276733398
    5. ' chaine' → logprob: -8.134649276733398
    6. 's' → logprob: -9.134649276733398
    7. 'phrase' → logprob: -9.259649276733398
    8. '  ' → logprob: -9.259649276733398
    9. '   ' → logprob: -9.509649276733398
    10. ' ' → logprob: -9.634649276733398

Token 12: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5981354713439941
    2. 'input' → logprob: -1.3481354713439941
    3. 'user' → logprob: -2.348135471343994
    4. 'i' → logprob: -3.348135471343994
    5. '_' → logprob: -4.223135471343994
    6. 'chaine' → logprob: -4.473135471343994
    7. 'e' → logprob: -4.723135471343994
    8. '`' → logprob: -5.723135471343994
    9. '```' → logprob: -5.848135471343994
    10. 'entrée' → logprob: -6.098135471343994

Token 13: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.004722395446151495
    2. ' caractères' → logprob: -5.504722595214844
    3. 'texte' → logprob: -8.254722595214844
    4. '#' → logprob: -8.629722595214844
    5. ' ' → logprob: -9.879722595214844
    6. 'c' → logprob: -10.004722595214844
    7. ' caract' → logprob: -10.254722595214844
    8. ' caracteres' → logprob: -11.004722595214844
    9. 's' → logprob: -11.254722595214844
    10. ' caractère' → logprob: -11.629722595214844

Token 14: ' via' (ID: 4493)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.5695990324020386
    2. 's' → logprob: -1.6945990324020386
    3. 'input' → logprob: -1.9445990324020386
    4. 'chaine' → logprob: -2.319599151611328
    5. '```' → logprob: -6.319599151611328
    6. 'entrée' → logprob: -6.819599151611328
    7. 'u' → logprob: -7.069599151611328
    8. 'a' → logprob: -7.444599151611328
    9. 'ch' → logprob: -7.569599151611328
    10. 'print' → logprob: -7.819599151611328

Token 15: ' le' (ID: 505)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5314540266990662
    2. ' input' → logprob: -0.9064540266990662
    3. '=input' → logprob: -5.406454086303711
    4. '`' → logprob: -6.906454086303711
    5. '```' → logprob: -7.781454086303711
    6. ' un' → logprob: -7.781454086303711
    7. '(input' → logprob: -7.906454086303711
    8. 'une' → logprob: -8.406454086303711
    9. ' ' → logprob: -8.406454086303711
    10. '<input' → logprob: -8.531454086303711

Token 16: ' clavier' (ID: 187878)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3772425055503845
    2. ' input' → logprob: -1.3772425651550293
    3. '=input' → logprob: -3.5022425651550293
    4. ' ' → logprob: -4.377242565155029
    5. 'n' → logprob: -4.752242565155029
    6. 's' → logprob: -6.252242565155029
    7. '`' → logprob: -6.627242565155029
    8. '(input' → logprob: -6.752242565155029
    9. 'i' → logprob: -7.002242565155029
    10. '```' → logprob: -7.002242565155029

Token 17: '.
' (ID: 558)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1491115093231201
    2. 'input' → logprob: -1.2741115093231201
    3. 'user' → logprob: -1.6491115093231201
    4. 'chaine' → logprob: -2.39911150932312
    5. 'u' → logprob: -3.39911150932312
    6. 'i' → logprob: -3.39911150932312
    7. 'c' → logprob: -4.024111747741699
    8. '```' → logprob: -5.274111747741699
    9. 'n' → logprob: -5.399111747741699
    10. 'a' → logprob: -5.774111747741699

Token 18: '#' (ID: 2)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.42203930020332336
    2. 'chaine' → logprob: -1.797039270401001
    3. 'input' → logprob: -2.797039270401001
    4. 'user' → logprob: -3.047039270401001
    5. 'entrée' → logprob: -3.672039270401001
    6. 'entr' → logprob: -4.42203950881958
    7. 'c' → logprob: -4.54703950881958
    8. 'u' → logprob: -5.79703950881958
    9. 'ent' → logprob: -5.92203950881958
    10. 'n' → logprob: -6.17203950881958

Token 19: ' Cette' (ID: 27383)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.515766441822052
    2. 'chaine' → logprob: -1.6407663822174072
    3. 'user' → logprob: -2.2657663822174072
    4. 'input' → logprob: -3.2657663822174072
    5. 'c' → logprob: -4.015766620635986
    6. 'u' → logprob: -4.140766620635986
    7. '#' → logprob: -5.265766620635986
    8. 'n' → logprob: -5.515766620635986
    9. 'str' → logprob: -6.015766620635986
    10. 'text' → logprob: -6.015766620635986

Token 20: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.9829438924789429
    2. '_' → logprob: -1.4829438924789429
    3. ' ' → logprob: -1.4829438924789429
    4. 's' → logprob: -2.9829440116882324
    5. 'chaine' → logprob: -3.1079440116882324
    6. ' chaine' → logprob: -3.6079440116882324
    7. ' entrée' → logprob: -4.732944011688232
    8. '#' → logprob: -4.982944011688232
    9. ' valeur' → logprob: -5.357944011688232
    10. ' #' → logprob: -5.607944011688232

Token 21: ' doit' (ID: 21822)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.32229673862457275
    2. ' ' → logprob: -1.9472967386245728
    3. 's' → logprob: -3.197296619415283
    4. '#' → logprob: -3.572296619415283
    5. ' #' → logprob: -4.072296619415283
    6. '_' → logprob: -4.572296619415283
    7. ' est' → logprob: -4.697296619415283
    8. ' d' → logprob: -5.197296619415283
    9. 'de' → logprob: -5.447296619415283
    10. ' s' → logprob: -5.697296619415283

Token 22: ' conten' (ID: 23523)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.14432400465011597
    2. ' être' → logprob: -2.1443240642547607
    3. ' respecter' → logprob: -5.894323825836182
    4. ' comport' → logprob: -6.144323825836182
    5. 'etre' → logprob: -6.519323825836182
    6. '#' → logprob: -6.519323825836182
    7. 'avoir' → logprob: -6.644323825836182
    8. ' conten' → logprob: -6.894323825836182
    9. 'respect' → logprob: -6.894323825836182
    10. 'contin' → logprob: -7.019323825836182

Token 23: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.6554597616195679
    2. 'r' → logprob: -1.4054597616195679
    3. 'er' → logprob: -1.6554597616195679
    4. 't' → logprob: -3.6554598808288574
    5. '#' → logprob: -4.530459880828857
    6. 'e' → logprob: -4.905459880828857
    7. '```' → logprob: -8.7804594039917
    8. 'd' → logprob: -9.5304594039917
    9. 'ur' → logprob: -10.1554594039917
    10. 'u' → logprob: -10.2804594039917

Token 24: ' deux' (ID: 10301)
  Prédit: ' au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.5413134098052979
    2. 'au' → logprob: -1.1663134098052979
    3. ' un' → logprob: -3.666313409805298
    4. ' des' → logprob: -4.291313171386719
    5. ''au' → logprob: -4.291313171386719
    6. ' uniquement' → logprob: -4.291313171386719
    7. 'une' → logprob: -5.041313171386719
    8. 's' → logprob: -5.291313171386719
    9. 'un' → logprob: -5.291313171386719
    10. ' une' → logprob: -5.416313171386719

Token 25: ' chiffres' (ID: 105565)
  Prédit: ' espaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.5798104405403137
    2. ' mots' → logprob: -0.9548104405403137
    3. 'm' → logprob: -3.829810380935669
    4. ' ' → logprob: -4.329810619354248
    5. '_' → logprob: -5.329810619354248
    6. 's' → logprob: -5.329810619354248
    7. ' espace' → logprob: -6.079810619354248
    8. 'esp' → logprob: -6.704810619354248
    9. 'mot' → logprob: -6.954810619354248
    10. 'es' → logprob: -7.079810619354248

Token 26: ' sépar' (ID: 97160)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6539435982704163
    2. 's' → logprob: -2.1539435386657715
    3. '#' → logprob: -2.6539435386657715
    4. 'c' → logprob: -2.9039435386657715
    5. ' ' → logprob: -3.0289435386657715
    6. 'i' → logprob: -3.1539435386657715
    7. 'x' → logprob: -3.5289435386657715
    8. 'ch' → logprob: -3.9039435386657715
    9. 'u' → logprob: -4.1539435386657715
    10. 'd' → logprob: -4.5289435386657715

Token 27: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.10024355351924896
    2. 'é' → logprob: -2.35024356842041
    3. 'ée' → logprob: -10.85024356842041
    4. '#' → logprob: -12.35024356842041
    5. 'es' → logprob: -12.35024356842041
    6. 'er' → logprob: -13.22524356842041
    7. 'ées' → logprob: -13.22524356842041
    8. '-' → logprob: -14.10024356842041
    9. 'ç' → logprob: -14.22524356842041
    10. 'ès' → logprob: -14.22524356842041

Token 28: ' par' (ID: 686)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.9910005331039429
    2. 'par' → logprob: -0.9910005331039429
    3. ' par' → logprob: -1.4910005331039429
    4. '_par' → logprob: -4.991000652313232
    5. 's' → logprob: -5.116000652313232
    6. 'e' → logprob: -5.241000652313232
    7. '_' → logprob: -5.491000652313232
    8. ' ' → logprob: -5.866000652313232
    9. ''' → logprob: -6.616000652313232
    10. ',' → logprob: -7.241000652313232

Token 29: ' un' (ID: 537)
  Prédit: ''un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''un' → logprob: -0.2936303913593292
    2. 'un' → logprob: -2.293630361557007
    3. ''' → logprob: -2.668630361557007
    4. ' un' → logprob: -3.293630361557007
    5. '_' → logprob: -4.293630599975586
    6. ''espace' → logprob: -5.168630599975586
    7. 'space' → logprob: -5.293630599975586
    8. '"' → logprob: -5.543630599975586
    9. 'a' → logprob: -5.793630599975586
    10. ''une' → logprob: -5.918630599975586

Token 30: ' espace' (ID: 66004)
  Prédit: ' espace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espace' → logprob: -0.8089805841445923
    2. 'es' → logprob: -1.1839805841445923
    3. 'space' → logprob: -2.6839804649353027
    4. '-' → logprob: -2.6839804649353027
    5. '+' → logprob: -3.4339804649353027
    6. 'esp' → logprob: -3.9339804649353027
    7. ''espace' → logprob: -4.308980464935303
    8. '-es' → logprob: -4.433980464935303
    9. '_' → logprob: -5.308980464935303
    10. 's' → logprob: -5.808980464935303

Token 31: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5012800693511963
    2. 'i' → logprob: -2.0012800693511963
    3. 'c' → logprob: -2.6262800693511963
    4. '#' → logprob: -2.8762800693511963
    5. 'x' → logprob: -2.8762800693511963
    6. 'd' → logprob: -3.7512800693511963
    7. 'e' → logprob: -4.126279830932617
    8. 'a' → logprob: -5.001279830932617
    9. 'ch' → logprob: -5.126279830932617
    10. 'v' → logprob: -5.376279830932617

Token 32: 'ab' (ID: 378)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.40916815400123596
    2. 'c' → logprob: -2.409168243408203
    3. 'x' → logprob: -2.659168243408203
    4. '#' → logprob: -2.909168243408203
    5. 'ch' → logprob: -3.034168243408203
    6. 'a' → logprob: -4.034168243408203
    7. 's' → logprob: -4.534168243408203
    8. 'chaine' → logprob: -4.534168243408203
    9. 'd' → logprob: -5.034168243408203
    10. 'nombre' → logprob: -5.284168243408203

Token 33: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.12056351453065872
    2. ' =' → logprob: -3.995563507080078
    3. 'input' → logprob: -4.245563507080078
    4. '=input' → logprob: -4.245563507080078
    5. 'c' → logprob: -4.370563507080078
    6. '=' → logprob: -4.620563507080078
    7. 'solute' → logprob: -4.995563507080078
    8. 'str' → logprob: -5.120563507080078
    9. 'r' → logprob: -5.120563507080078
    10. 'a' → logprob: -5.245563507080078

Token 34: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.10021745413541794
    2. 'input' → logprob: -2.350217342376709
    3. ' ' → logprob: -12.350217819213867
    4. '=input' → logprob: -13.100217819213867
    5. ' ' → logprob: -13.600217819213867
    6. ' ab' → logprob: -14.225217819213867
    7. '	input' → logprob: -14.600217819213867
    8. ' int' → logprob: -14.725217819213867
    9. '(input' → logprob: -14.850217819213867
    10. 'int' → logprob: -14.975217819213867

Token 35: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008586675859987736
    2. '("' → logprob: -5.133586883544922
    3. '()' → logprob: -6.758586883544922
    4. '('' → logprob: -6.758586883544922
    5. '("("' → logprob: -8.508586883544922
    6. '("")' → logprob: -9.133586883544922
    7. '("(' → logprob: -11.883586883544922
    8. '("""' → logprob: -12.133586883544922
    9. ' (' → logprob: -12.883586883544922
    10. '(`' → logprob: -13.133586883544922

Token 36: '#' (ID: 2)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7656212449073792
    2. '.split' → logprob: -0.7656212449073792
    3. ' ' → logprob: -3.1406211853027344
    4. ' .' → logprob: -4.515621185302734
    5. 'split' → logprob: -5.140621185302734
    6. 's' → logprob: -5.640621185302734
    7. '.strip' → logprob: -6.390621185302734
    8. '[' → logprob: -7.140621185302734
    9. 'a' → logprob: -7.140621185302734
    10. '.s' → logprob: -7.390621185302734

Token 37: ' La' (ID: 3038)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.4933388233184814
    2. 'a' → logprob: -1.4933388233184814
    3. ' parts' → logprob: -2.1183388233184814
    4. 'split' → logprob: -2.2433388233184814
    5. 'tokens' → logprob: -2.2433388233184814
    6. 'parts' → logprob: -2.4933388233184814
    7. ' ab' → logprob: -3.4933388233184814
    8. ' tokens' → logprob: -3.8683388233184814
    9. ' a' → logprob: -3.8683388233184814
    10. ' split' → logprob: -4.118338584899902

Token 38: ' méthode' (ID: 71490)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01568249799311161
    2. ' split' → logprob: -5.140682697296143
    3. 'split' → logprob: -5.640682697296143
    4. '.split' → logprob: -6.015682697296143
    5. 's' → logprob: -6.515682697296143
    6. 'spl' → logprob: -7.390682697296143
    7. ' =' → logprob: -8.515682220458984
    8. ' if' → logprob: -8.890682220458984
    9. ' a' → logprob: -8.890682220458984
    10. ' s' → logprob: -9.140682220458984

Token 39: ' split' (ID: 12648)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.12808485329151154
    2. ' split' → logprob: -2.128084897994995
    3. '.split' → logprob: -6.878084659576416
    4. 'strip' → logprob: -10.128085136413574
    5. 's' → logprob: -10.378085136413574
    6. 'spl' → logprob: -11.253085136413574
    7. ' ab' → logprob: -11.503085136413574
    8. ' .' → logprob: -11.628085136413574
    9. '_split' → logprob: -12.128085136413574
    10. '.' → logprob: -13.003085136413574

Token 40: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.001663516042754054
    2. '(' → logprob: -6.751663684844971
    3. '('' → logprob: -8.376663208007812
    4. ' ()' → logprob: -8.876663208007812
    5. '().' → logprob: -10.751663208007812
    6. '("' → logprob: -10.876663208007812
    7. 's' → logprob: -11.001663208007812
    8. '()

' → logprob: -11.751663208007812
    9. '()]' → logprob: -11.876663208007812
    10. 'split' → logprob: -12.501663208007812

Token 41: ' div' (ID: 4223)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2501571476459503
    2. '(' → logprob: -1.625157117843628
    3. '('' → logprob: -4.000157356262207
    4. ' ()' → logprob: -6.625157356262207
    5. '().' → logprob: -7.000157356262207
    6. 'ab' → logprob: -7.375157356262207
    7. '("' → logprob: -7.625157356262207
    8. '.' → logprob: -7.750157356262207
    9. ' (' → logprob: -7.750157356262207
    10. 'split' → logprob: -8.625157356262207

Token 42: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.030667319893836975
    2. 'ide' → logprob: -3.905667304992676
    3. '()' → logprob: -4.655667304992676
    4. 'ize' → logprob: -9.780667304992676
    5. '#' → logprob: -9.905667304992676
    6. ' ' → logprob: -10.030667304992676
    7. '```' → logprob: -10.030667304992676
    8. 'i' → logprob: -10.280667304992676
    9. '(' → logprob: -10.280667304992676
    10. 'erse' → logprob: -10.530667304992676

Token 43: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.22101445496082306
    2. '('' → logprob: -1.7210144996643066
    3. ''' → logprob: -4.471014499664307
    4. '(' → logprob: -5.221014499664307
    5. ' ()' → logprob: -7.346014499664307
    6. ' ' → logprob: -7.596014499664307
    7. '("' → logprob: -8.096014022827148
    8. ' la' → logprob: -8.096014022827148
    9. '<|end|>' → logprob: -8.846014022827148
    10. 'l' → logprob: -9.471014022827148

Token 44: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.025062203407287598
    2. 'chaine' → logprob: -4.025062084197998
    3. ' chaine' → logprob: -5.650062084197998
    4. 'cha' → logprob: -5.775062084197998
    5. ' ' → logprob: -9.525062561035156
    6. 'string' → logprob: -10.025062561035156
    7. ' chaînes' → logprob: -10.275062561035156
    8. 's' → logprob: -10.275062561035156
    9. ' string' → logprob: -10.400062561035156
    10. ' cha' → logprob: -10.650062561035156

Token 45: ' '' (ID: 461)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.15164054930210114
    2. '('' → logprob: -2.7766406536102295
    3. ''' → logprob: -3.9016406536102295
    4. ' ()' → logprob: -4.02664041519165
    5. ' ' → logprob: -4.15164041519165
    6. '(' → logprob: -4.77664041519165
    7. '[' → logprob: -5.52664041519165
    8. ' (' → logprob: -5.52664041519165
    9. '<|end|>' → logprob: -6.02664041519165
    10. '"' → logprob: -7.40164041519165

Token 46: 'ab' (ID: 378)
  Prédit: 'ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.17360854148864746
    2. ' ab' → logprob: -2.0486085414886475
    3. '()' → logprob: -3.5486085414886475
    4. '(ab' → logprob: -6.798608779907227
    5. ''ab' → logprob: -7.798608779907227
    6. 'la' → logprob: -10.173608779907227
    7. '('' → logprob: -10.423608779907227
    8. ''' → logprob: -10.923608779907227
    9. 'le' → logprob: -11.298608779907227
    10. ' ()' → logprob: -11.423608779907227

Token 47: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.04567265138030052
    2. ' '' → logprob: -3.420672655105591
    3. ' en' → logprob: -5.295672416687012
    4. ''ab' → logprob: -6.795672416687012
    5. ''en' → logprob: -6.920672416687012
    6. ' ab' → logprob: -6.920672416687012
    7. 'ab' → logprob: -7.545672416687012
    8. ')'' → logprob: -7.670672416687012
    9. ')' → logprob: -7.920672416687012
    10. '"' → logprob: -8.045672416687012

Token 48: ' en' (ID: 469)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9319071173667908
    2. ' par' → logprob: -1.6819071769714355
    3. ' en' → logprob: -1.6819071769714355
    4. '()' → logprob: -2.4319071769714355
    5. ' sur' → logprob: -3.3069071769714355
    6. ' )' → logprob: -3.6819071769714355
    7. ' .' → logprob: -4.1819071769714355
    8. '.' → logprob: -4.6819071769714355
    9. ' ab' → logprob: -4.8069071769714355
    10. ')' → logprob: -4.8069071769714355

Token 49: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.3299359679222107
    2. '['' → logprob: -1.9549360275268555
    3. 'une' → logprob: -2.5799360275268555
    4. ' ['' → logprob: -2.9549360275268555
    5. ''une' → logprob: -5.9549360275268555
    6. '["' → logprob: -6.3299360275268555
    7. ' deux' → logprob: -6.4549360275268555
    8. ' liste' → logprob: -6.7049360275268555
    9. ' ' → logprob: -6.8299360275268555
    10. ' a' → logprob: -7.7049360275268555

Token 50: ' liste' (ID: 31719)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.3808629810810089
    2. 'liste' → logprob: -2.1308629512786865
    3. ' liste' → logprob: -2.6308629512786865
    4. 's' → logprob: -2.8808629512786865
    5. ' tableau' → logprob: -4.130863189697266
    6. 'a' → logprob: -4.255863189697266
    7. ' espace' → logprob: -4.630863189697266
    8. 'e' → logprob: -4.755863189697266
    9. 'esp' → logprob: -5.630863189697266
    10. 'list' → logprob: -5.755863189697266

Token 51: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8445842266082764
    2. '()' → logprob: -1.3445842266082764
    3. '['' → logprob: -2.3445842266082764
    4. '(' → logprob: -2.7195842266082764
    5. ' des' → logprob: -3.8445842266082764
    6. '('' → logprob: -3.8445842266082764
    7. '[]' → logprob: -3.8445842266082764
    8. ' (' → logprob: -3.8445842266082764
    9. ''' → logprob: -4.5945844650268555
    10. ' ' → logprob: -4.9695844650268555

Token 52: ' sous' (ID: 14487)
  Prédit: ' chaînes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.12112266570329666
    2. ' deux' → logprob: -4.12112283706665
    3. ' mots' → logprob: -4.12112283706665
    4. ' tokens' → logprob: -4.24612283706665
    5. 'cha' → logprob: -4.37112283706665
    6. 'm' → logprob: -4.74612283706665
    7. 'de' → logprob: -4.74612283706665
    8. 'tokens' → logprob: -5.12112283706665
    9. ' strings' → logprob: -5.24612283706665
    10. 'str' → logprob: -5.62112283706665

Token 53: '-cha' (ID: 163177)
  Prédit: ' chaînes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.6965696811676025
    2. 'cha' → logprob: -0.9465696811676025
    3. '-cha' → logprob: -3.0715696811676025
    4. 'chain' → logprob: -3.1965696811676025
    5. '-' → logprob: -5.321569442749023
    6. 'chaine' → logprob: -5.321569442749023
    7. 'strings' → logprob: -6.071569442749023
    8. 'm' → logprob: -6.071569442749023
    9. 'élé' → logprob: -6.196569442749023
    10. 's' → logprob: -6.571569442749023

Token 54: 'înes' (ID: 171517)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3722870945930481
    2. 'nes' → logprob: -1.8722870349884033
    3. 'înes' → logprob: -1.8722870349884033
    4. 'î' → logprob: -6.872287273406982
    5. 'nés' → logprob: -6.872287273406982
    6. 'n' → logprob: -8.372286796569824
    7. 'nées' → logprob: -8.997286796569824
    8. 'ne' → logprob: -9.247286796569824
    9. 'ines' → logprob: -9.497286796569824
    10. '```' → logprob: -9.747286796569824

Token 55: ',
' (ID: 412)
  Prédit: ' ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ab' → logprob: -0.44923415780067444
    2. '[' → logprob: -1.949234127998352
    3. 'ab' → logprob: -2.4492342472076416
    4. '['' → logprob: -2.8242342472076416
    5. '()' → logprob: -3.6992342472076416
    6. 'a' → logprob: -4.5742340087890625
    7. ' a' → logprob: -5.6992340087890625
    8. ' ' → logprob: -5.8242340087890625
    9. '["' → logprob: -5.8242340087890625
    10. ' ,' → logprob: -5.8242340087890625

Token 56: '#' (ID: 2)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7245439291000366
    2. ' ab' → logprob: -2.224544048309326
    3. 'split' → logprob: -2.599544048309326
    4. '.split' → logprob: -3.474544048309326
    5. '"' → logprob: -3.724544048309326
    6. 's' → logprob: -3.849544048309326
    7. 'spl' → logprob: -3.974544048309326
    8. ' sépar' → logprob: -4.099544048309326
    9. ' split' → logprob: -4.224544048309326
    10. ' ' → logprob: -4.224544048309326

Token 57: ' en' (ID: 469)
  Prédit: ' ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ab' → logprob: -0.18113602697849274
    2. ' sépar' → logprob: -3.556136131286621
    3. 'ab' → logprob: -3.681136131286621
    4. ' based' → logprob: -3.806136131286621
    5. 's' → logprob: -4.931136131286621
    6. ' a' → logprob: -4.931136131286621
    7. 'a' → logprob: -5.056136131286621
    8. '['' → logprob: -5.056136131286621
    9. ' ' → logprob: -5.306136131286621
    10. 'split' → logprob: -5.431136131286621

Token 58: ' utilisant' (ID: 92474)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.3299955427646637
    2. ' utilisant' → logprob: -1.8299955129623413
    3. 's' → logprob: -3.079995632171631
    4. 'fonction' → logprob: -4.204995632171631
    5. ' fonction' → logprob: -4.329995632171631
    6. 'sé' → logprob: -4.704995632171631
    7. ' sépar' → logprob: -4.829995632171631
    8. ' prenant' → logprob: -4.829995632171631
    9. ' s' → logprob: -5.704995632171631
    10. ' utilis' → logprob: -5.829995632171631

Token 59: ' l' (ID: 305)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8381993770599365
    2. 'l' → logprob: -1.3381993770599365
    3. ' l' → logprob: -1.4631993770599365
    4. ''un' → logprob: -3.5881993770599365
    5. ' un' → logprob: -4.463199615478516
    6. '"' → logprob: -5.088199615478516
    7. 'un' → logprob: -5.213199615478516
    8. ' ' → logprob: -5.588199615478516
    9. ''espace' → logprob: -5.588199615478516
    10. ' '' → logprob: -5.963199615478516

Token 60: ''espace' (ID: 118124)
  Prédit: ''espace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''espace' → logprob: -0.4255262017250061
    2. ''' → logprob: -1.8005261421203613
    3. ''un' → logprob: -2.6755261421203613
    4. ''esp' → logprob: -2.8005261421203613
    5. ' '' → logprob: -4.800526142120361
    6. ' l' → logprob: -4.925526142120361
    7. 'es' → logprob: -5.050526142120361
    8. 'l' → logprob: -5.050526142120361
    9. 'a' → logprob: -5.300526142120361
    10. '’espace' → logprob: -5.550526142120361

Token 61: ' "' (ID: 392)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.11563131213188171
    2. '<|end|>' → logprob: -3.115631341934204
    3. ' ' → logprob: -3.865631341934204
    4. '.' → logprob: -4.615631103515625
    5. ')' → logprob: -4.990631103515625
    6. '"' → logprob: -5.240631103515625
    7. '`' → logprob: -5.615631103515625
    8. '  ' → logprob: -6.115631103515625
    9. ' )' → logprob: -6.240631103515625
    10. 's' → logprob: -6.240631103515625

Token 62: ' "' (ID: 392)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.27049940824508667
    2. '"' → logprob: -1.5204994678497314
    3. ')' → logprob: -4.770499229431152
    4. ' "' → logprob: -5.145499229431152
    5. 'comme' → logprob: -6.645499229431152
    6. ' '' → logprob: -6.770499229431152
    7. '')' → logprob: -7.520499229431152
    8. ' comme' → logprob: -8.020499229431152
    9. '")' → logprob: -8.645499229431152
    10. ''"' → logprob: -9.270499229431152

Token 63: ' comme' (ID: 7971)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1025468111038208
    2. '.' → logprob: -1.1025468111038208
    3. ' ab' → logprob: -1.8525468111038208
    4. 'ab' → logprob: -2.7275466918945312
    5. ').' → logprob: -2.9775466918945312
    6. ' comme' → logprob: -4.227546691894531
    7. 'comme' → logprob: -4.227546691894531
    8. ' as' → logprob: -5.227546691894531
    9. ' )' → logprob: -5.227546691894531
    10. '.ab' → logprob: -5.227546691894531

Token 64: ' sépar' (ID: 97160)
  Prédit: ' sépar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sépar' → logprob: -0.4014239013195038
    2. 'sé' → logprob: -1.4014239311218262
    3. 's' → logprob: -3.401423931121826
    4. 'dé' → logprob: -3.401423931121826
    5. 'se' → logprob: -5.526423931121826
    6. ' dé' → logprob: -5.651423931121826
    7. 'delimiter' → logprob: -5.651423931121826
    8. 'del' → logprob: -5.901423931121826
    9. 'car' → logprob: -7.151423931121826
    10. 'd' → logprob: -7.276423931121826

Token 65: 'ateur' (ID: 12477)
  Prédit: 'ateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ateur' → logprob: -0.00016873658751137555
    2. 'ate' → logprob: -8.875168800354004
    3. 'a' → logprob: -12.125168800354004
    4. '```' → logprob: -12.125168800354004
    5. '#' → logprob: -12.250168800354004
    6. 'ateurs' → logprob: -13.250168800354004
    7. 'acteur' → logprob: -13.500168800354004
    8. 'teur' → logprob: -13.500168800354004
    9. '   ' → logprob: -13.625168800354004
    10. 'atrice' → logprob: -13.750168800354004

Token 66: '.' (ID: 13)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.16431482136249542
    2. ' ab' → logprob: -2.6643147468566895
    3. '[' → logprob: -2.9143147468566895
    4. 'a' → logprob: -5.0393147468566895
    5. '['' → logprob: -5.5393147468566895
    6. ''ab' → logprob: -6.1643147468566895
    7. '.' → logprob: -6.2893147468566895
    8. ')' → logprob: -6.2893147468566895
    9. 's' → logprob: -6.6643147468566895
    10. 'b' → logprob: -6.9143147468566895

Token 67: ' Par' (ID: 3371)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.4140966832637787
    2. ' ab' → logprob: -1.539096713066101
    3. '[' → logprob: -2.9140965938568115
    4. 'a' → logprob: -2.9140965938568115
    5. '[a' → logprob: -5.789096832275391
    6. ' a' → logprob: -5.914096832275391
    7. 'b' → logprob: -6.039096832275391
    8. 'tokens' → logprob: -6.414096832275391
    9. '['' → logprob: -7.164096832275391
    10. ' =' → logprob: -7.539096832275391

Token 68: ' exemple' (ID: 26320)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.0115735530853271
    2. 'a' → logprob: -2.011573553085327
    3. ' conséquent' → logprob: -2.136573553085327
    4. ' ab' → logprob: -2.261573553085327
    5. ' défaut' → logprob: -2.386573553085327
    6. 'ce' → logprob: -3.761573553085327
    7. 'ab' → logprob: -4.136573791503906
    8. ' espace' → logprob: -4.136573791503906
    9. ' conséquence' → logprob: -4.261573791503906
    10. ' espaces' → logprob: -4.261573791503906

Token 69: ',' (ID: 11)
  Prédit: ' ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ab' → logprob: -0.03169873729348183
    2. 'ab' → logprob: -3.906698703765869
    3. '['' → logprob: -6.281698703765869
    4. ',' → logprob: -6.406698703765869
    5. '
' → logprob: -6.906698703765869
    6. '[' → logprob: -6.906698703765869
    7. ' ['' → logprob: -7.156698703765869
    8. '[
' → logprob: -7.656698703765869
    9. ':' → logprob: -7.781698703765869
    10. ' la' → logprob: -7.906698703765869

Token 70: ' si' (ID: 1784)
  Prédit: ' ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ab' → logprob: -0.31878939270973206
    2. ' ['' → logprob: -1.5687893629074097
    3. '['' → logprob: -4.193789482116699
    4. ' a' → logprob: -4.318789482116699
    5. 'ab' → logprob: -4.568789482116699
    6. ' ["' → logprob: -4.818789482116699
    7. ' tokens' → logprob: -5.693789482116699
    8. ' les' → logprob: -6.068789482116699
    9. ' la' → logprob: -6.193789482116699
    10. '["' → logprob: -6.693789482116699

Token 71: ' l' (ID: 305)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.25758156180381775
    2. ' ab' → logprob: -1.5075815916061401
    3. ''ab' → logprob: -5.88258171081543
    4. ''' → logprob: -7.63258171081543
    5. 'l' → logprob: -7.63258171081543
    6. ' on' → logprob: -7.75758171081543
    7. 'user' → logprob: -8.50758171081543
    8. ' l' → logprob: -8.63258171081543
    9. '"' → logprob: -8.63258171081543
    10. ' la' → logprob: -8.88258171081543

Token 72: ''utilisateur' (ID: 140803)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.20680874586105347
    2. ' ab' → logprob: -1.9568088054656982
    3. ''ab' → logprob: -4.081808567047119
    4. ' user' → logprob: -4.581808567047119
    5. ''' → logprob: -5.206808567047119
    6. 'user' → logprob: -5.581808567047119
    7. ''utilisateur' → logprob: -5.831808567047119
    8. 'a' → logprob: -6.456808567047119
    9. ' ' → logprob: -6.581808567047119
    10. ' utilisateur' → logprob: -7.456808567047119

Token 73: ' sais' (ID: 30010)
  Prédit: ' entre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entre' → logprob: -1.1013472080230713
    2. ' a' → logprob: -1.7263472080230713
    3. 's' → logprob: -1.8513472080230713
    4. 'a' → logprob: -2.9763472080230713
    5. ' sais' → logprob: -3.2263472080230713
    6. ' tape' → logprob: -3.2263472080230713
    7. 'ent' → logprob: -3.3513472080230713
    8. ' ' → logprob: -3.4763472080230713
    9. ' s' → logprob: -3.6013472080230713
    10. 'entre' → logprob: -3.8513472080230713

Token 74: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.0011050907196477056
    2. ' it' → logprob: -8.126105308532715
    3. 'i' → logprob: -8.751105308532715
    4. '#' → logprob: -9.126105308532715
    5. 'issait' → logprob: -9.251105308532715
    6. '
' → logprob: -9.626105308532715
    7. 't' → logprob: -9.751105308532715
    8. '```' → logprob: -9.876105308532715
    9. '   ' → logprob: -10.251105308532715
    10. '

' → logprob: -10.626105308532715

Token 75: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.24292120337486267
    2. ''' → logprob: -2.1179211139678955
    3. ' "' → logprob: -2.6179211139678955
    4. ' '' → logprob: -4.617921352386475
    5. ' ' → logprob: -5.367921352386475
    6. ''un' → logprob: -6.742921352386475
    7. '1' → logprob: -6.992921352386475
    8. '"a' → logprob: -7.367921352386475
    9. ''a' → logprob: -7.492921352386475
    10. '`' → logprob: -7.492921352386475

Token 76: '3' (ID: 18)
  Prédit: '12'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -0.36361974477767944
    2. '"' → logprob: -1.7386198043823242
    3. '3' → logprob: -2.988619804382324
    4. '10' → logprob: -3.238619804382324
    5. '23' → logprob: -4.613619804382324
    6. '5' → logprob: -4.863619804382324
    7. '1' → logprob: -5.238619804382324
    8. '7' → logprob: -5.738619804382324
    9. '2' → logprob: -5.738619804382324
    10. '4' → logprob: -5.738619804382324

Token 77: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0760142132639885
    2. '4' → logprob: -3.451014280319214
    3. '2' → logprob: -4.076014041900635
    4. '7' → logprob: -4.951014041900635
    5. '8' → logprob: -5.201014041900635
    6. '9' → logprob: -5.326014041900635
    7. '5' → logprob: -5.326014041900635
    8. '  ' → logprob: -7.451014041900635
    9. ' "' → logprob: -7.826014041900635
    10. '0' → logprob: -8.326014518737793

Token 78: '5' (ID: 20)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.374666690826416
    2. '5' → logprob: -1.749666690826416
    3. '7' → logprob: -1.999666690826416
    4. '2' → logprob: -6.749666690826416
    5. ' ' → logprob: -6.749666690826416
    6. '8' → logprob: -7.749666690826416
    7. '9' → logprob: -8.124666213989258
    8. '6' → logprob: -8.874666213989258
    9. '1' → logprob: -11.249666213989258
    10. '10' → logprob: -11.749666213989258

Token 79: '",
' (ID: 1150)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '",' → logprob: -0.2563641369342804
    2. '"' → logprob: -1.506364107131958
    3. ' ",' → logprob: -5.631364345550537
    4. ' "' → logprob: -7.631364345550537
    5. '3' → logprob: -9.506363868713379
    6. '">' → logprob: -10.131363868713379
    7. ',' → logprob: -10.506363868713379
    8. ' ' → logprob: -10.631363868713379
    9. '2' → logprob: -10.631363868713379
    10. '")' → logprob: -10.881363868713379

Token 80: '#' (ID: 2)
  Prédit: ' ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ab' → logprob: -0.37073373794555664
    2. 'ab' → logprob: -2.1207337379455566
    3. 'a' → logprob: -3.1207337379455566
    4. ' tokens' → logprob: -3.4957337379455566
    5. 'tokens' → logprob: -3.4957337379455566
    6. ' la' → logprob: -3.8707337379455566
    7. ' les' → logprob: -3.9957337379455566
    8. ' a' → logprob: -3.9957337379455566
    9. '#' → logprob: -4.995733737945557
    10. 'la' → logprob: -5.120733737945557

Token 81: ' ab' (ID: 692)
  Prédit: ' ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ab' → logprob: -0.5437126755714417
    2. ' la' → logprob: -2.043712615966797
    3. ' tokens' → logprob: -2.168712615966797
    4. 'ab' → logprob: -3.168712615966797
    5. ' les' → logprob: -3.668712615966797
    6. ' a' → logprob: -3.793712615966797
    7. 'tokens' → logprob: -4.043712615966797
    8. 'a' → logprob: -4.168712615966797
    9. ' ['' → logprob: -4.543712615966797
    10. ' on' → logprob: -5.043712615966797

Token 82: '.split' (ID: 10347)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2992249131202698
    2. '_split' → logprob: -2.049224853515625
    3. '.split' → logprob: -3.049224853515625
    4. '_' → logprob: -3.299224853515625
    5. '_list' → logprob: -4.424224853515625
    6. '=' → logprob: -4.424224853515625
    7. 'split' → logprob: -4.674224853515625
    8. '_s' → logprob: -5.549224853515625
    9. '.' → logprob: -5.674224853515625
    10. '_parts' → logprob: -7.049224853515625

Token 83: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.797182023525238
    2. '(' → logprob: -1.0471820831298828
    3. '()' → logprob: -2.047182083129883
    4. '("' → logprob: -2.672182083129883
    5. '("("' → logprob: -8.672182083129883
    6. ' (' → logprob: -10.922182083129883
    7. '("")' → logprob: -11.172182083129883
    8. '(
' → logprob: -11.297182083129883
    9. '"' → logprob: -11.672182083129883
    10. ' ()' → logprob: -11.922182083129883

Token 84: ' ")' (ID: 25221)
  Prédit: ' ")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ")' → logprob: -0.0225363839417696
    2. '")' → logprob: -4.272536277770996
    3. ')' → logprob: -5.772536277770996
    4. ' ' → logprob: -6.397536277770996
    5. '"' → logprob: -6.522536277770996
    6. ' )' → logprob: -6.897536277770996
    7. ' "' → logprob: -7.022536277770996
    8. ''' → logprob: -10.147536277770996
    9. ' ")[' → logprob: -10.522536277770996
    10. ' ")"' → logprob: -10.772536277770996

Token 85: ' retour' (ID: 30714)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1899328976869583
    2. ')' → logprob: -2.1899328231811523
    3. '<|end|>' → logprob: -3.4399328231811523
    4. '[]' → logprob: -5.189932823181152
    5. '#' → logprob: -5.564932823181152
    6. ' ' → logprob: -5.689932823181152
    7. '['' → logprob: -6.064932823181152
    8. ':' → logprob: -6.189932823181152
    9. '```' → logprob: -6.314932823181152
    10. ',' → logprob: -6.564932823181152

Token 86: 'nera' (ID: 99762)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.011294317431747913
    2. 'nera' → logprob: -4.511294364929199
    3. 'ner' → logprob: -8.6362943649292
    4. 'rne' → logprob: -10.5112943649292
    5. 'n' → logprob: -11.3862943649292
    6. 'nne' → logprob: -11.7612943649292
    7. 'e' → logprob: -12.0112943649292
    8. '­ne' → logprob: -12.0112943649292
    9. 'neur' → logprob: -12.7612943649292
    10. 'er' → logprob: -13.2612943649292

Token 87: ' ["' (ID: 9129)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.004221689887344837
    2. '["' → logprob: -5.7542219161987305
    3. '[' → logprob: -7.2542219161987305
    4. ' ['' → logprob: -8.00422191619873
    5. ' ["' → logprob: -14.00422191619873
    6. '['_' → logprob: -14.50422191619873
    7. '```' → logprob: -16.004220962524414
    8. ' [' → logprob: -16.129220962524414
    9. '[`' → logprob: -16.129220962524414
    10. ''' → logprob: -16.254220962524414

Token 88: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -5.2762428822461516e-05
    2. '"' → logprob: -10.375052452087402
    3. ''' → logprob: -10.750052452087402
    4. ' ' → logprob: -16.50005340576172
    5. '33' → logprob: -17.62505340576172
    6. '３' → logprob: -18.87505340576172
    7. '35' → logprob: -19.06255340576172
    8. '">' → logprob: -19.18755340576172
    9. '`' → logprob: -19.43755340576172
    10. '['' → logprob: -19.56255340576172

Token 89: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.0025729250628501177
    2. '","' → logprob: -6.502573013305664
    3. '"' → logprob: -7.377573013305664
    4. ' ",' → logprob: -8.377573013305664
    5. '3' → logprob: -8.877573013305664
    6. ',' → logprob: -9.627573013305664
    7. ' ' → logprob: -13.002573013305664
    8. '6' → logprob: -13.377573013305664
    9. '7' → logprob: -13.377573013305664
    10. ',",' → logprob: -14.127573013305664

Token 90: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.006014944985508919
    2. '5' → logprob: -5.256014823913574
    3. ' "' → logprob: -7.631014823913574
    4. ''' → logprob: -8.756014823913574
    5. ' ' → logprob: -9.506014823913574
    6. '3' → logprob: -10.006014823913574
    7. '7' → logprob: -12.131014823913574
    8. '4' → logprob: -12.381014823913574
    9. ' '' → logprob: -13.131014823913574
    10. '6' → logprob: -13.381014823913574

Token 91: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.3425219549390022e-05
    2. '3' → logprob: -11.50001335144043
    3. '"' → logprob: -13.00001335144043
    4. '","' → logprob: -14.25001335144043
    5. ' ' → logprob: -15.12501335144043
    6. '",' → logprob: -15.87501335144043
    7. '4' → logprob: -17.62501335144043
    8. '"]' → logprob: -18.00001335144043
    9. '2' → logprob: -18.25001335144043
    10. '")' → logprob: -18.25001335144043

Token 92: '"]' (ID: 2601)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.35092759132385254
    2. '"]' → logprob: -1.2259275913238525
    3. '']' → logprob: -6.100927352905273
    4. ')' → logprob: -9.225927352905273
    5. '"' → logprob: -9.975927352905273
    6. '[' → logprob: -10.850927352905273
    7. ']
' → logprob: -11.225927352905273
    8. '.' → logprob: -11.225927352905273
    9. ' ]' → logprob: -11.600927352905273
    10. '`]' → logprob: -11.600927352905273

Token 93: '.
' (ID: 558)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03349584713578224
    2. '[' → logprob: -3.5334959030151367
    3. '[a' → logprob: -6.033495903015137
    4. '[
' → logprob: -7.408495903015137
    5. '
' → logprob: -8.283495903015137
    6. ',' → logprob: -8.783495903015137
    7. ' a' → logprob: -8.908495903015137
    8. ' 
' → logprob: -10.033495903015137
    9. ',
' → logprob: -10.658495903015137
    10. 'x' → logprob: -10.783495903015137

Token 94: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0024490193463861942
    2. ' a' → logprob: -6.627449035644531
    3. '[' → logprob: -7.127449035644531
    4. '[a' → logprob: -8.502449035644531
    5. ' 
' → logprob: -10.752449035644531
    6. '#' → logprob: -11.377449035644531
    7. ',' → logprob: -11.627449035644531
    8. '['' → logprob: -11.627449035644531
    9. '[
' → logprob: -11.627449035644531
    10. '
' → logprob: -11.752449035644531

Token 95: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3524397909641266
    2. ' =' → logprob: -1.4774397611618042
    3. '=' → logprob: -4.102439880371094
    4. '_' → logprob: -4.102439880371094
    5. 's' → logprob: -4.227439880371094
    6. ' ,' → logprob: -4.352439880371094
    7. ' ' → logprob: -5.477439880371094
    8. 'b' → logprob: -6.602439880371094
    9. 'a' → logprob: -7.227439880371094
    10. ',b' → logprob: -7.727439880371094

Token 96: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.6699686050415039
    2. ' ' → logprob: -1.294968605041504
    3. 'b' → logprob: -1.544968605041504
    4. '<|end|>' → logprob: -7.294968605041504
    5. ' ' → logprob: -8.419968605041504
    6. ' 
' → logprob: -10.669968605041504
    7. 'space' → logprob: -10.794968605041504
    8. ' ,' → logprob: -11.419968605041504
    9. '_b' → logprob: -11.544968605041504
    10. ' "' → logprob: -11.544968605041504

Token 97: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02325328253209591
    2. '=' → logprob: -3.7732532024383545
    3. ' =
' → logprob: -12.773253440856934
    4. ' ' → logprob: -12.898253440856934
    5. ',' → logprob: -13.648253440856934
    6. ')' → logprob: -14.773253440856934
    7. 's' → logprob: -15.398253440856934
    8. ' ' → logprob: -15.523253440856934
    9. ' =[' → logprob: -16.398252487182617
    10. 'a' → logprob: -16.648252487182617

Token 98: ' ab' (ID: 692)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.6931484341621399
    2. ' ab' → logprob: -0.6931484341621399
    3. 'a' → logprob: -15.318148612976074
    4. '(ab' → logprob: -15.568148612976074
    5. ' ' → logprob: -15.818148612976074
    6. ' ' → logprob: -16.068147659301758
    7. '_ab' → logprob: -16.193147659301758
    8. 'abc' → logprob: -16.443147659301758
    9. 'b' → logprob: -16.568147659301758
    10. ''ab' → logprob: -16.943147659301758

Token 99: '.split' (ID: 10347)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6950365304946899
    2. '.split' → logprob: -0.6950365304946899
    3. ' .' → logprob: -6.3200364112854
    4. '.s' → logprob: -9.820036888122559
    5. '.strip' → logprob: -10.695036888122559
    6. '.sp' → logprob: -12.820036888122559
    7. '.
' → logprob: -13.195036888122559
    8. 'split' → logprob: -13.195036888122559
    9. '.Split' → logprob: -13.945036888122559
    10. ' split' → logprob: -14.820036888122559

Token 100: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.20924782752990723
    2. '("("' → logprob: -1.7092478275299072
    3. '(' → logprob: -5.334247589111328
    4. '('' → logprob: -5.834247589111328
    5. '"' → logprob: -10.584247589111328
    6. ' ("' → logprob: -12.209247589111328
    7. '("(' → logprob: -12.209247589111328
    8. ')("' → logprob: -12.459247589111328
    9. '("")' → logprob: -12.959247589111328
    10. '("="' → logprob: -13.084247589111328

Token 101: ' ")

' (ID: 154069)
  Prédit: ' ")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ")' → logprob: -0.0022921599447727203
    2. '")' → logprob: -6.377292156219482
    3. ')' → logprob: -8.62729263305664
    4. ' )' → logprob: -8.75229263305664
    5. ' "' → logprob: -8.75229263305664
    6. '"' → logprob: -9.62729263305664
    7. ' ' → logprob: -10.87729263305664
    8. ' ")"' → logprob: -12.50229263305664
    9. ' "')' → logprob: -13.12729263305664
    10. ' ")
' → logprob: -13.62729263305664

Token 102: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9833285808563232
    2. '#' → logprob: -1.1083285808563232
    3. '
' → logprob: -1.4833285808563232
    4. 'print' → logprob: -3.6083285808563232
    5. '<|end|>' → logprob: -4.358328819274902
    6. ')' → logprob: -4.608328819274902
    7. ' 
' → logprob: -4.983328819274902
    8. 'int' → logprob: -5.733328819274902
    9. ' ' → logprob: -6.483328819274902
    10. '  
' → logprob: -6.858328819274902

Token 103: ' La' (ID: 3038)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05154747888445854
    2. '#' → logprob: -3.1765475273132324
    3. 'print' → logprob: -5.301547527313232
    4. 'int' → logprob: -6.426547527313232
    5. 'result' → logprob: -6.551547527313232
    6. ' a' → logprob: -8.051547050476074
    7. 'try' → logprob: -10.676547050476074
    8. 'La' → logprob: -10.801547050476074
    9. '#a' → logprob: -11.051547050476074
    10. ' #' → logprob: -11.301547050476074

Token 104: ' fonction' (ID: 17610)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.25226500630378723
    2. '#' → logprob: -1.8772649765014648
    3. 'print' → logprob: -3.127264976501465
    4. 'int' → logprob: -4.877264976501465
    5. 's' → logprob: -5.252264976501465
    6. ' a' → logprob: -5.377264976501465
    7. ' somme' → logprob: -5.877264976501465
    8. 'result' → logprob: -6.127264976501465
    9. 'b' → logprob: -7.377264976501465
    10. ' #' → logprob: -7.502264976501465

Token 105: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.041414789855480194
    2. ' int' → logprob: -3.291414737701416
    3. 'print' → logprob: -5.791414737701416
    4. 'sum' → logprob: -9.666415214538574
    5. '(int' → logprob: -9.666415214538574
    6. ' print' → logprob: -9.916415214538574
    7. 'a' → logprob: -10.541415214538574
    8. 'min' → logprob: -10.916415214538574
    9. '=int' → logprob: -11.291415214538574
    10. ' ' → logprob: -11.416415214538574

Token 106: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20491334795951843
    2. '()' → logprob: -1.7049133777618408
    3. '(a' → logprob: -5.704913139343262
    4. 'a' → logprob: -9.579913139343262
    5. '(int' → logprob: -10.704913139343262
    6. '(
' → logprob: -11.079913139343262
    7. 's' → logprob: -11.954913139343262
    8. '('' → logprob: -11.954913139343262
    9. '(convert' → logprob: -11.954913139343262
    10. '(b' → logprob: -12.329913139343262

Token 107: ' convert' (ID: 8452)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0023775463923811913
    2. '(a' → logprob: -6.877377510070801
    3. 'convert' → logprob: -8.1273775100708
    4. ' convert' → logprob: -8.3773775100708
    5. ' converts' → logprob: -8.5023775100708
    6. '(convert' → logprob: -8.5023775100708
    7. '()' → logprob: -9.2523775100708
    8. '(
' → logprob: -9.3773775100708
    9. 'a' → logprob: -10.0023775100708
    10. 'Convert' → logprob: -10.2523775100708

Token 108: 'it' (ID: 278)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3684503436088562
    2. 'ère' → logprob: -2.118450403213501
    3. '(a' → logprob: -2.868450403213501
    4. 'er' → logprob: -3.243450403213501
    5. '()' → logprob: -3.493450403213501
    6. 'it' → logprob: -3.743450403213501
    7. 'ert' → logprob: -4.243450164794922
    8. 'e' → logprob: -5.618450164794922
    9. 'ifie' → logprob: -5.868450164794922
    10. 'ète' → logprob: -6.243450164794922

Token 109: ' la' (ID: 557)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.19579757750034332
    2. 'a' → logprob: -1.8207975625991821
    3. ' les' → logprob: -4.695797443389893
    4. ' b' → logprob: -5.445797443389893
    5. '(a' → logprob: -7.070797443389893
    6. 'b' → logprob: -7.320797443389893
    7. ' ' → logprob: -8.07079792022705
    8. 's' → logprob: -8.57079792022705
    9. '(' → logprob: -8.69579792022705
    10. 'les' → logprob: -9.19579792022705

Token 110: ' chaîne' (ID: 89288)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08703955262899399
    2. ' a' → logprob: -3.8370394706726074
    3. ' chaîne' → logprob: -4.212039470672607
    4. 's' → logprob: -4.337039470672607
    5. 'chaine' → logprob: -4.337039470672607
    6. 'cha' → logprob: -4.962039470672607
    7. ' ' → logprob: -5.587039470672607
    8. 'ab' → logprob: -6.087039470672607
    9. ' chaînes' → logprob: -6.462039470672607
    10. 'de' → logprob: -6.962039470672607

Token 111: ' '' (ID: 461)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5545356273651123
    2. '(' → logprob: -1.4295356273651123
    3. 'a' → logprob: -2.1795356273651123
    4. ' ' → logprob: -2.9295356273651123
    5. '(a' → logprob: -5.054535865783691
    6. ' des' → logprob: -5.804535865783691
    7. ' (' → logprob: -6.179535865783691
    8. 's' → logprob: -6.179535865783691
    9. ')' → logprob: -6.429535865783691
    10. ' de' → logprob: -6.929535865783691

Token 112: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.001502717612311244
    2. ' a' → logprob: -6.501502513885498
    3. 'b' → logprob: -15.376502990722656
    4. ''a' → logprob: -16.626502990722656
    5. '"a' → logprob: -18.126502990722656
    6. ' ' → logprob: -18.501502990722656
    7. '(a' → logprob: -18.751502990722656
    8. ')' → logprob: -19.251502990722656
    9. ' b' → logprob: -19.626502990722656
    10. '_a' → logprob: -19.751502990722656

Token 113: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04623129963874817
    2. '')' → logprob: -4.171231269836426
    3. ' en' → logprob: -4.421231269836426
    4. '")' → logprob: -4.671231269836426
    5. 'a' → logprob: -5.671231269836426
    6. '"' → logprob: -6.171231269836426
    7. ' )' → logprob: -6.546231269836426
    8. ' ")' → logprob: -7.921231269836426
    9. ' ' → logprob: -8.296231269836426
    10. ''' → logprob: -8.796231269836426

Token 114: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.483145534992218
    2. ' en' → logprob: -0.983145534992218
    3. ' )' → logprob: -5.358145713806152
    4. 'en' → logprob: -6.108145713806152
    5. 'a' → logprob: -7.608145713806152
    6. ' a' → logprob: -7.858145713806152
    7. ' ' → logprob: -7.983145713806152
    8. '(' → logprob: -8.108145713806152
    9. ',' → logprob: -8.858145713806152
    10. ' in' → logprob: -9.483145713806152

Token 115: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.04188235476613045
    2. ' entier' → logprob: -3.916882276535034
    3. 'un' → logprob: -4.291882514953613
    4. 'ent' → logprob: -5.041882514953613
    5. ' nombre' → logprob: -8.666882514953613
    6. ' ' → logprob: -8.791882514953613
    7. 'int' → logprob: -8.916882514953613
    8. ' integer' → logprob: -9.291882514953613
    9. 'a' → logprob: -9.291882514953613
    10. ' int' → logprob: -9.541882514953613

Token 116: ' entier' (ID: 80473)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.4290494918823242
    2. ' entier' → logprob: -1.4290494918823242
    3. 'nombre' → logprob: -2.679049491882324
    4. ' nombre' → logprob: -3.304049491882324
    5. 'int' → logprob: -5.804049491882324
    6. ' int' → logprob: -8.429049491882324
    7. ' ent' → logprob: -8.429049491882324
    8. ' ' → logprob: -8.804049491882324
    9. 'integer' → logprob: -9.304049491882324
    10. ' integer' → logprob: -9.304049491882324

Token 117: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1385737955570221
    2. 'a' → logprob: -2.1385738849639893
    3. ' )' → logprob: -5.88857364654541
    4. ',' → logprob: -6.01357364654541
    5. '(' → logprob: -6.01357364654541
    6. ' a' → logprob: -6.51357364654541
    7. ' ' → logprob: -6.76357364654541
    8. ')a' → logprob: -8.01357364654541
    9. '.' → logprob: -8.51357364654541
    10. '(a' → logprob: -8.76357364654541

Token 118: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.005987573880702257
    2. ' a' → logprob: -5.130987644195557
    3. 'c' → logprob: -11.005987167358398
    4. 'int' → logprob: -11.380987167358398
    5. 'A' → logprob: -11.880987167358398
    6. 'n' → logprob: -12.380987167358398
    7. ' 
' → logprob: -12.505987167358398
    8. ' =' → logprob: -13.130987167358398
    9. '=' → logprob: -13.255987167358398
    10. 'result' → logprob: -13.380987167358398

Token 119: ' Par' (ID: 3371)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05524410307407379
    2. ' a' → logprob: -2.930244207382202
    3. 'A' → logprob: -8.930244445800781
    4. 'result' → logprob: -9.805244445800781
    5. 'int' → logprob: -10.305244445800781
    6. ' A' → logprob: -10.430244445800781
    7. 'num' → logprob: -10.430244445800781
    8. ' result' → logprob: -11.305244445800781
    9. 'val' → logprob: -11.430244445800781
    10. 'x' → logprob: -11.805244445800781

Token 120: ' exemple' (ID: 26320)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6816608309745789
    2. 'a' → logprob: -1.9316608905792236
    3. ' b' → logprob: -1.9316608905792236
    4. 'b' → logprob: -2.6816608905792236
    5. ' c' → logprob: -3.5566608905792236
    6. 'c' → logprob: -3.5566608905792236
    7. ' ' → logprob: -3.6816608905792236
    8. ' la' → logprob: -4.1816606521606445
    9. ' exemple' → logprob: -4.8066606521606445
    10. 'int' → logprob: -5.5566606521606445

Token 121: ',' (ID: 11)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.044451646506786346
    2. 'a' → logprob: -3.1694517135620117
    3. ',' → logprob: -6.919451713562012
    4. ' ' → logprob: -8.919451713562012
    5. ' ,' → logprob: -8.919451713562012
    6. 's' → logprob: -9.794451713562012
    7. ' )' → logprob: -10.669451713562012
    8. ')' → logprob: -11.419451713562012
    9. ' ' → logprob: -11.544451713562012
    10. 'int' → logprob: -11.544451713562012

Token 122: ' si' (ID: 1784)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.18226157128810883
    2. 'a' → logprob: -1.80726158618927
    3. ' int' → logprob: -6.4322614669799805
    4. 'int' → logprob: -7.4322614669799805
    5. ' ' → logprob: -8.93226146697998
    6. ' c' → logprob: -10.18226146697998
    7. ' entier' → logprob: -10.55726146697998
    8. 'c' → logprob: -10.80726146697998
    9. '3' → logprob: -11.05726146697998
    10. 'ent' → logprob: -11.18226146697998

Token 123: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.1798766702413559
    2. 'a' → logprob: -1.804876685142517
    3. ' ' → logprob: -9.554876327514648
    4. ' b' → logprob: -10.304876327514648
    5. 'b' → logprob: -11.054876327514648
    6. ' ' → logprob: -12.679876327514648
    7. '_a' → logprob: -13.304876327514648
    8. 'l' → logprob: -14.304876327514648
    9. '  ' → logprob: -14.304876327514648
    10. 'space' → logprob: -14.429876327514648

Token 124: ' ==' (ID: 951)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22747574746608734
    2. '=' → logprob: -1.6024757623672485
    3. ' ==' → logprob: -6.852475643157959
    4. ' ' → logprob: -8.102476119995117
    5. 'a' → logprob: -8.227476119995117
    6. ' a' → logprob: -8.977476119995117
    7. '=int' → logprob: -9.102476119995117
    8. ')' → logprob: -9.352476119995117
    9. ' est' → logprob: -10.102476119995117
    10. 's' → logprob: -11.602476119995117

Token 125: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.08857765048742294
    2. ' "' → logprob: -2.9635777473449707
    3. ''' → logprob: -3.5885777473449707
    4. ' '' → logprob: -5.213577747344971
    5. ' ' → logprob: -10.338577270507812
    6. '3' → logprob: -11.713577270507812
    7. '"a' → logprob: -11.963577270507812
    8. ''a' → logprob: -13.088577270507812
    9. ' ' → logprob: -13.588577270507812
    10. 'a' → logprob: -13.713577270507812

Token 126: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.012350240722298622
    2. '"' → logprob: -4.637350082397461
    3. '4' → logprob: -6.387350082397461
    4. '7' → logprob: -7.887350082397461
    5. '2' → logprob: -8.637350082397461
    6. ' ' → logprob: -8.762350082397461
    7. ''' → logprob: -9.137350082397461
    8. '5' → logprob: -9.637350082397461
    9. ' "' → logprob: -12.012350082397461
    10. '8' → logprob: -12.137350082397461

Token 127: '",' (ID: 672)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.632360577583313
    2. '")' → logprob: -1.132360577583313
    3. ')' → logprob: -2.1323604583740234
    4. '",' → logprob: -3.7573604583740234
    5. ')"' → logprob: -6.507360458374023
    6. ' ")' → logprob: -7.007360458374023
    7. '")
' → logprob: -7.507360458374023
    8. '"
' → logprob: -8.382360458374023
    9. 'a' → logprob: -8.382360458374023
    10. ')
' → logprob: -8.632360458374023

Token 128: ' alors' (ID: 17971)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.20146410167217255
    2. 'a' → logprob: -1.701464056968689
    3. ' ' → logprob: -11.07646369934082
    4. '3' → logprob: -11.20146369934082
    5. ' 
' → logprob: -12.07646369934082
    6. ' ' → logprob: -12.45146369934082
    7. 'A' → logprob: -13.32646369934082
    8. 'n' → logprob: -13.32646369934082
    9. '_a' → logprob: -13.45146369934082
    10. 'x' → logprob: -13.57646369934082

Token 129: ' int' (ID: 677)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2025638222694397
    2. 'a' → logprob: -1.702563762664795
    3. ' int' → logprob: -7.452563762664795
    4. ' ' → logprob: -7.827563762664795
    5. 'int' → logprob: -9.327564239501953
    6. '3' → logprob: -10.327564239501953
    7. ' b' → logprob: -12.077564239501953
    8. ' c' → logprob: -12.077564239501953
    9. '`' → logprob: -12.327564239501953
    10. ' ' → logprob: -12.452564239501953

Token 130: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.008777177892625332
    2. '(' → logprob: -4.758777141571045
    3. 'a' → logprob: -8.758777618408203
    4. '("' → logprob: -12.758777618408203
    5. '('' → logprob: -13.883777618408203
    6. ' (' → logprob: -14.633777618408203
    7. '(
' → logprob: -14.883777618408203
    8. ' a' → logprob: -15.133777618408203
    9. '(ab' → logprob: -15.758777618408203
    10. '(b' → logprob: -16.008777618408203

Token 131: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.526570384972729e-05
    2. ' )' → logprob: -10.375055313110352
    3. ')+' → logprob: -12.000055313110352
    4. '")' → logprob: -12.375055313110352
    5. ')`' → logprob: -12.750055313110352
    6. ')")' → logprob: -13.250055313110352
    7. '())' → logprob: -13.375055313110352
    8. '()' → logprob: -13.625055313110352
    9. '))' → logprob: -13.875055313110352
    10. ')**' → logprob: -14.000055313110352

Token 132: ' ==' (ID: 951)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2953796088695526
    2. '+' → logprob: -2.170379638671875
    3. ' )' → logprob: -2.170379638671875
    4. ' +' → logprob: -4.420379638671875
    5. ' ' → logprob: -4.420379638671875
    6. '*' → logprob: -7.295379638671875
    7. '<|end|>' → logprob: -7.545379638671875
    8. ' *' → logprob: -7.670379638671875
    9. '(' → logprob: -7.920379638671875
    10. '()' → logprob: -8.045379638671875

Token 133: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.25193122029304504
    2. ' ' → logprob: -1.5019311904907227
    3. ' ' → logprob: -13.251931190490723
    4. '"' → logprob: -15.626931190490723
    5. '`' → logprob: -17.00193214416504
    6. ''' → logprob: -17.25193214416504
    7. ')' → logprob: -17.50193214416504
    8. ' 
' → logprob: -17.62693214416504
    9. '```' → logprob: -18.12693214416504
    10. ' "' → logprob: -18.25193214416504

Token 134: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '' → logprob: -20.125030517578125
    4. ' ' → logprob: -20.875030517578125
    5. '
' → logprob: -21.500030517578125
    6. ' 
' → logprob: -21.625030517578125
    7. '۳' → logprob: -21.750030517578125
    8. '３' → logprob: -22.000030517578125
    9. '```' → logprob: -22.000030517578125
    10. '`' → logprob: -22.375030517578125

Token 135: '.
' (ID: 558)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10367900133132935
    2. ')' → logprob: -3.1036789417266846
    3. '
' → logprob: -3.3536789417266846
    4. ' 
' → logprob: -5.478679180145264
    5. '\n' → logprob: -5.603679180145264
    6. '<|end|>' → logprob: -5.978679180145264
    7. ',' → logprob: -6.228679180145264
    8. '#' → logprob: -6.603679180145264
    9. ' a' → logprob: -7.103679180145264
    10. '  
' → logprob: -7.228679180145264

Token 136: 'A' (ID: 32)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.003100119298323989
    2. ' a' → logprob: -6.2530999183654785
    3. 'result' → logprob: -7.2530999183654785
    4. 'int' → logprob: -8.753100395202637
    5. 'A' → logprob: -9.128100395202637
    6. 'print' → logprob: -9.503100395202637
    7. 'c' → logprob: -10.253100395202637
    8. 'x' → logprob: -10.503100395202637
    9. 'sum' → logprob: -11.128100395202637
    10. '#' → logprob: -11.878100395202637

Token 137: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01509637851268053
    2. '=' → logprob: -4.265096187591553
    3. ',' → logprob: -7.890096187591553
    4. ' ' → logprob: -8.265096664428711
    5. 'a' → logprob: -8.765096664428711
    6. ')' → logprob: -9.515096664428711
    7. ' =
' → logprob: -10.515096664428711
    8. '=int' → logprob: -11.390096664428711
    9. 'b' → logprob: -12.140096664428711
    10. 'int' → logprob: -12.265096664428711

Token 138: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.02632933109998703
    2. 'int' → logprob: -3.651329278945923
    3. ' in' → logprob: -11.026329040527344
    4. ' ' → logprob: -12.026329040527344
    5. ' ' → logprob: -12.151329040527344
    6. 'in' → logprob: -15.276329040527344
    7. '[int' → logprob: -15.276329040527344
    8. '(int' → logprob: -15.401329040527344
    9. '=int' → logprob: -15.776329040527344
    10. ' 
' → logprob: -15.901329040527344

Token 139: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.16027569770812988
    2. '(' → logprob: -1.9102756977081299
    3. '(A' → logprob: -10.41027545928955
    4. '(ab' → logprob: -10.91027545928955
    5. '(
' → logprob: -13.03527545928955
    6. '('' → logprob: -14.41027545928955
    7. '(b' → logprob: -15.66027545928955
    8. 'a' → logprob: -16.660276412963867
    9. '(

' → logprob: -16.910276412963867
    10. '()' → logprob: -17.285276412963867

Token 140: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.796184723294573e-06
    2. ' )' → logprob: -12.250005722045898
    3. ')
' → logprob: -14.625005722045898
    4. ')

' → logprob: -16.3750057220459
    5. ')`' → logprob: -16.8750057220459
    6. '')' → logprob: -17.0000057220459
    7. ')#' → logprob: -17.1250057220459
    8. '[' → logprob: -17.1250057220459
    9. '")' → logprob: -17.7500057220459
    10. '#' → logprob: -18.2500057220459

Token 141: '#' (ID: 2)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.8421390652656555
    2. '<|end|>' → logprob: -1.2171390056610107
    3. ' ' → logprob: -2.0921390056610107
    4. ' 
' → logprob: -3.0921390056610107
    5. '  
' → logprob: -3.4671390056610107
    6. 'b' → logprob: -3.4671390056610107
    7. '
' → logprob: -4.21713924407959
    8. '#' → logprob: -4.71713924407959
    9. '+' → logprob: -5.21713924407959
    10. ' B' → logprob: -5.96713924407959

Token 142: ' De' (ID: 1516)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00023917861108202487
    2. ' B' → logprob: -8.375239372253418
    3. 'b' → logprob: -11.750239372253418
    4. ' ' → logprob: -15.000239372253418
    5. ' 
' → logprob: -16.0002384185791
    6. '#' → logprob: -16.3752384185791
    7. ' ' → logprob: -17.2502384185791
    8. '`' → logprob: -17.6252384185791
    9. '```' → logprob: -17.6252384185791
    10. '  ' → logprob: -18.3752384185791

Token 143: ' même' (ID: 9679)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.16437692940235138
    2. 'f' → logprob: -2.414376974105835
    3. 'b' → logprob: -2.914376974105835
    4. 'n' → logprob: -5.914376735687256
    5. ' B' → logprob: -6.539376735687256
    6. '#' → logprob: -6.914376735687256
    7. ' 
' → logprob: -7.414376735687256
    8. '  
' → logprob: -7.914376735687256
    9. 'l' → logprob: -8.289377212524414
    10. 'space' → logprob: -8.414377212524414

Token 144: ',' (ID: 11)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.32192936539649963
    2. 'b' → logprob: -1.5719293355941772
    3. ' ' → logprob: -3.446929454803467
    4. ' B' → logprob: -3.696929454803467
    5. ',' → logprob: -5.696929454803467
    6. ' ' → logprob: -6.196929454803467
    7. ' 
' → logprob: -6.571929454803467
    8. ' b' → logprob: -6.571929454803467
    9. '<|end|>' → logprob: -7.321929454803467
    10. '  
' → logprob: -7.696929454803467

Token 145: ' la' (ID: 557)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.25220826268196106
    2. ' B' → logprob: -1.5022082328796387
    3. ' ' → logprob: -8.627208709716797
    4. ' ' → logprob: -9.877208709716797
    5. 'b' → logprob: -10.627208709716797
    6. ' 
' → logprob: -11.127208709716797
    7. ' b' → logprob: -12.877208709716797
    8. ' `' → logprob: -13.377208709716797
    9. '`' → logprob: -13.627208709716797
    10. 's' → logprob: -14.627208709716797

Token 146: ' fonction' (ID: 17610)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.2869611382484436
    2. 'fonction' → logprob: -1.4119610786437988
    3. 'f' → logprob: -5.536961078643799
    4. 'function' → logprob: -7.161961078643799
    5. 'b' → logprob: -7.786961078643799
    6. ' fonction' → logprob: -8.661961555480957
    7. '#' → logprob: -8.661961555480957
    8. 'fon' → logprob: -9.161961555480957
    9. 'func' → logprob: -9.411961555480957
    10. 'F' → logprob: -9.911961555480957

Token 147: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.014242250472307205
    2. ' int' → logprob: -4.514242172241211
    3. 'b' → logprob: -5.889242172241211
    4. 'B' → logprob: -8.139242172241211
    5. 'i' → logprob: -9.264242172241211
    6. ' b' → logprob: -11.389242172241211
    7. 'in' → logprob: -11.639242172241211
    8. ' 
' → logprob: -12.514242172241211
    9. ' B' → logprob: -12.639242172241211
    10. ' ' → logprob: -13.264242172241211

Token 148: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13099132478237152
    2. '(b' → logprob: -2.130991220474243
    3. '()' → logprob: -5.630991458892822
    4. '(B' → logprob: -7.755991458892822
    5. 'b' → logprob: -10.380990982055664
    6. '(
' → logprob: -12.505990982055664
    7. '("("' → logprob: -12.880990982055664
    8. '('' → logprob: -13.880990982055664
    9. 'B' → logprob: -14.130990982055664
    10. '("")' → logprob: -15.005990982055664

Token 149: ' convert' (ID: 8452)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.3173440098762512
    2. '(' → logprob: -1.5673439502716064
    3. '()' → logprob: -2.8173439502716064
    4. '(
' → logprob: -6.4423441886901855
    5. ' B' → logprob: -6.8173441886901855
    6. '(B' → logprob: -8.067343711853027
    7. 'b' → logprob: -8.942343711853027
    8. '#' → logprob: -9.317343711853027
    9. ')' → logprob: -9.692343711853027
    10. ' (' → logprob: -10.067343711853027

Token 150: 'it' (ID: 278)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.330642968416214
    2. 'ert' → logprob: -2.0806429386138916
    3. '(' → logprob: -2.4556429386138916
    4. 'it' → logprob: -2.8306429386138916
    5. '(b' → logprob: -5.455643177032471
    6. '()' → logprob: -6.455643177032471
    7. '(t' → logprob: -6.705643177032471
    8. 'et' → logprob: -7.080643177032471
    9. 'iert' → logprob: -7.330643177032471
    10. '(it' → logprob: -7.580643177032471

Token 151: ' la' (ID: 557)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6752886772155762
    2. '(b' → logprob: -0.8002886772155762
    3. ' b' → logprob: -3.425288677215576
    4. 'b' → logprob: -4.800288677215576
    5. ' (' → logprob: -7.925288677215576
    6. '(
' → logprob: -8.550289154052734
    7. '()' → logprob: -9.175289154052734
    8. ' le' → logprob: -9.675289154052734
    9. '(B' → logprob: -10.050289154052734
    10. ' ' → logprob: -10.050289154052734

Token 152: ' chaîne' (ID: 89288)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00012451570364646614
    2. ' b' → logprob: -9.25012493133545
    3. '(b' → logprob: -10.87512493133545
    4. 'chaine' → logprob: -11.75012493133545
    5. '(' → logprob: -14.12512493133545
    6. ' chaîne' → logprob: -14.50012493133545
    7. 'string' → logprob: -15.87512493133545
    8. ' chaine' → logprob: -16.625123977661133
    9. 'chain' → logprob: -16.875123977661133
    10. ' (' → logprob: -17.500123977661133

Token 153: ' '' (ID: 461)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03180093318223953
    2. 'b' → logprob: -4.281800746917725
    3. '(b' → logprob: -4.406800746917725
    4. ''' → logprob: -6.031800746917725
    5. ' b' → logprob: -6.531800746917725
    6. '(
' → logprob: -7.281800746917725
    7. '"' → logprob: -8.031801223754883
    8. ' (' → logprob: -8.281801223754883
    9. 's' → logprob: -10.156801223754883
    10. '('' → logprob: -10.156801223754883

Token 154: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -6.704273118884885e-07
    2. ' b' → logprob: -15.000000953674316
    3. '(b' → logprob: -15.125000953674316
    4. '(' → logprob: -17.25
    5. ')b' → logprob: -19.5
    6. ''b' → logprob: -20.125
    7. '	b' → logprob: -20.5
    8. 'б' → logprob: -21.375
    9. '_b' → logprob: -21.625
    10. ')' → logprob: -21.75

Token 155: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39518895745277405
    2. ' en' → logprob: -1.1451889276504517
    3. ' )' → logprob: -4.895188808441162
    4. ' in' → logprob: -7.895188808441162
    5. ' b' → logprob: -8.64518928527832
    6. ')b' → logprob: -9.52018928527832
    7. '')' → logprob: -10.02018928527832
    8. 'b' → logprob: -10.52018928527832
    9. ''en' → logprob: -10.89518928527832
    10. ' a' → logprob: -11.02018928527832

Token 156: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.004063321277499199
    2. ' in' → logprob: -5.629063129425049
    3. ''en' → logprob: -8.754063606262207
    4. ' ' → logprob: -9.379063606262207
    5. ' a' → logprob: -9.379063606262207
    6. 'en' → logprob: -10.254063606262207
    7. ')' → logprob: -11.004063606262207
    8. ' into' → logprob: -11.129063606262207
    9. '<|end|>' → logprob: -11.254063606262207
    10. 'in' → logprob: -11.254063606262207

Token 157: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.47570371627807617
    2. ' int' → logprob: -1.2257037162780762
    3. 'int' → logprob: -2.975703716278076
    4. ' ' → logprob: -4.100703716278076
    5. 'un' → logprob: -5.475703716278076
    6. ' b' → logprob: -5.600703716278076
    7. 'n' → logprob: -6.225703716278076
    8. '<int' → logprob: -7.100703716278076
    9. 'b' → logprob: -7.225703716278076
    10. ' ' → logprob: -7.225703716278076

Token 158: ' entier' (ID: 80473)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.02069440297782421
    2. ' entier' → logprob: -3.8956944942474365
    3. 'int' → logprob: -9.145694732666016
    4. ' ent' → logprob: -11.020694732666016
    5. 'nombre' → logprob: -11.145694732666016
    6. ''ent' → logprob: -12.645694732666016
    7. '_ent' → logprob: -12.770694732666016
    8. 'enti' → logprob: -13.145694732666016
    9. 'entrée' → logprob: -13.395694732666016
    10. '(ent' → logprob: -13.645694732666016

Token 159: '.
' (ID: 558)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.026988161727786064
    2. '.' → logprob: -4.5269880294799805
    3. '(' → logprob: -4.9019880294799805
    4. '#' → logprob: -6.0269880294799805
    5. 'b' → logprob: -6.4019880294799805
    6. ')' → logprob: -6.5269880294799805
    7. '(B' → logprob: -7.2769880294799805
    8. '(
' → logprob: -7.4019880294799805
    9. '<|end|>' → logprob: -7.4019880294799805
    10. ',' → logprob: -7.9019880294799805

Token 160: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -2.141186450899113e-05
    2. '
' → logprob: -11.250020980834961
    3. '```' → logprob: -13.375020980834961
    4. ' B' → logprob: -13.500020980834961
    5. '<|end|>' → logprob: -13.625020980834961
    6. 'A' → logprob: -14.250020980834961
    7. '  
' → logprob: -14.250020980834961
    8. ' 
' → logprob: -14.375020980834961
    9. 'b' → logprob: -14.375020980834961
    10. '#' → logprob: -14.500020980834961

Token 161: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693104147911072
    2. '=' → logprob: -2.1269309520721436
    3. ' ' → logprob: -13.126931190490723
    4. '=int' → logprob: -14.626931190490723
    5. ')' → logprob: -14.876931190490723
    6. ' =
' → logprob: -16.126930236816406
    7. ',' → logprob: -17.251930236816406
    8. ' )' → logprob: -18.626930236816406
    9. '  ' → logprob: -18.751930236816406
    10. '＝' → logprob: -18.751930236816406

Token 162: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2519296407699585
    2. ' int' → logprob: -1.5019296407699585
    3. '(int' → logprob: -15.62692928314209
    4. ' ' → logprob: -15.87692928314209
    5. '=int' → logprob: -16.501930236816406
    6. '<int' → logprob: -17.001930236816406
    7. '[int' → logprob: -17.751930236816406
    8. ' ' → logprob: -17.751930236816406
    9. '	int' → logprob: -18.251930236816406
    10. ' 
' → logprob: -18.501930236816406

Token 163: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.16024595499038696
    2. '(' → logprob: -1.9102458953857422
    3. 'b' → logprob: -11.035245895385742
    4. '(
' → logprob: -12.910245895385742
    5. '(B' → logprob: -12.910245895385742
    6. '("("' → logprob: -14.785245895385742
    7. ' (' → logprob: -16.035245895385742
    8. ' b' → logprob: -16.535245895385742
    9. '('' → logprob: -17.410245895385742
    10. '()' → logprob: -17.785245895385742

Token 164: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2200749754119897e-06
    2. ')
' → logprob: -13.625001907348633
    3. ' )' → logprob: -14.375001907348633
    4. '()' → logprob: -16.125001907348633
    5. ')

' → logprob: -16.125001907348633
    6. '())' → logprob: -16.250001907348633
    7. ')#' → logprob: -17.750001907348633
    8. '))' → logprob: -18.375001907348633
    9. ')`' → logprob: -18.375001907348633
    10. '#' → logprob: -18.375001907348633

Token 165: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9340339303016663
    2. '
' → logprob: -0.9340339303016663
    3. 'print' → logprob: -1.8090338706970215
    4. 'result' → logprob: -4.0590338706970215
    5. ' 
' → logprob: -5.1840338706970215
    6. 'C' → logprob: -5.1840338706970215
    7. '+' → logprob: -5.4340338706970215
    8. '+
' → logprob: -5.5590338706970215
    9. 's' → logprob: -5.9340338706970215
    10. '

' → logprob: -6.0590338706970215

Token 166: ' Ici' (ID: 145754)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6953499913215637
    2. 'print' → logprob: -0.9453499913215637
    3. '#' → logprob: -2.820349931716919
    4. 's' → logprob: -3.570349931716919
    5. 'S' → logprob: -5.070350170135498
    6. 'C' → logprob: -5.195350170135498
    7. 'sum' → logprob: -5.820350170135498
    8. 'rés' → logprob: -5.820350170135498
    9. 'Som' → logprob: -6.695350170135498
    10. ' somme' → logprob: -7.070350170135498

Token 167: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7086670994758606
    2. '#' → logprob: -0.9586670994758606
    3. ' print' → logprob: -3.208667039871216
    4. ',' → logprob: -4.083667278289795
    5. '
' → logprob: -4.083667278289795
    6. 'A' → logprob: -5.083667278289795
    7. '<|end|>' → logprob: -5.208667278289795
    8. ' 
' → logprob: -5.333667278289795
    9. ' ' → logprob: -5.458667278289795
    10. ' #' → logprob: -5.458667278289795

Token 168: ' nous' (ID: 6176)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7561173439025879
    2. 'print' → logprob: -1.506117343902588
    3. 'C' → logprob: -2.131117343902588
    4. '#' → logprob: -2.506117343902588
    5. 's' → logprob: -3.506117343902588
    6. ' result' → logprob: -3.631117343902588
    7. ' C' → logprob: -4.256117343902588
    8. 'sum' → logprob: -5.006117343902588
    9. ' somme' → logprob: -5.006117343902588
    10. ' print' → logprob: -5.131117343902588

Token 169: ' vér' (ID: 42524)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.39393720030784607
    2. '#' → logprob: -2.143937110900879
    3. 'calcul' → logprob: -2.643937110900879
    4. ' calcul' → logprob: -2.893937110900879
    5. ' affich' → logprob: -3.518937110900879
    6. 'aff' → logprob: -3.768937110900879
    7. ' print' → logprob: -4.393937110900879
    8. 's' → logprob: -5.393937110900879
    9. ' effectu' → logprob: -6.768937110900879
    10. ' allons' → logprob: -6.893937110900879

Token 170: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0003063838230445981
    2. 'ifie' → logprob: -9.500306129455566
    3. '#' → logprob: -9.750306129455566
    4. 'ifiez' → logprob: -10.000306129455566
    5. 'ifi' → logprob: -10.125306129455566
    6. ' if' → logprob: -10.625306129455566
    7. 'ifier' → logprob: -11.000306129455566
    8. '```' → logprob: -11.625306129455566
    9. 'i' → logprob: -12.250306129455566
    10. 'ification' → logprob: -12.500306129455566

Token 171: 'ions' (ID: 756)
  Prédit: 'ions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ions' → logprob: -0.26483166217803955
    2. 'if' → logprob: -1.5148316621780396
    3. 'i' → logprob: -4.88983154296875
    4. '#' → logprob: -6.51483154296875
    5. 'ion' → logprob: -6.88983154296875
    6. 'ons' → logprob: -7.01483154296875
    7. '   ' → logprob: -8.51483154296875
    8. 'iqu' → logprob: -8.88983154296875
    9. '```' → logprob: -8.88983154296875
    10. ' if' → logprob: -9.26483154296875

Token 172: ' plusieurs' (ID: 20875)
  Prédit: ' si'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' si' → logprob: -0.14439551532268524
    2. ' if' → logprob: -2.269395589828491
    3. ' ' → logprob: -3.894395589828491
    4. 'si' → logprob: -4.894395351409912
    5. 'if' → logprob: -6.769395351409912
    6. ' que' → logprob: -7.269395351409912
    7. 's' → logprob: -7.894395351409912
    8. ' ' → logprob: -8.01939582824707
    9. ' l' → logprob: -9.01939582824707
    10. ' la' → logprob: -9.01939582824707

Token 173: ' conditions' (ID: 6409)
  Prédit: ' conditions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' conditions' → logprob: -0.14918045699596405
    2. 'conditions' → logprob: -2.5241804122924805
    3. ' if' → logprob: -3.6491804122924805
    4. ' ' → logprob: -4.5241804122924805
    5. ' cas' → logprob: -5.2741804122924805
    6. 'if' → logprob: -5.2741804122924805
    7. ' espaces' → logprob: -5.7741804122924805
    8. ' choses' → logprob: -6.7741804122924805
    9. ' lignes' → logprob: -7.1491804122924805
    10. 's' → logprob: -7.1491804122924805

Token 174: ' en' (ID: 469)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8888307809829712
    2. 'if' → logprob: -1.2638307809829712
    3. ' if' → logprob: -1.6388307809829712
    4. ':
' → logprob: -3.3888306617736816
    5. ',' → logprob: -4.013830661773682
    6. ' :
' → logprob: -4.013830661773682
    7. ' 
' → logprob: -4.388830661773682
    8. '
' → logprob: -4.763830661773682
    9. ' :' → logprob: -4.888830661773682
    10. ' ,' → logprob: -6.138830661773682

Token 175: ' même' (ID: 9679)
  Prédit: ' utilisant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisant' → logprob: -0.04223141819238663
    2. 'if' → logprob: -4.542231559753418
    3. ' même' → logprob: -4.917231559753418
    4. 'util' → logprob: -5.167231559753418
    5. ' if' → logprob: -5.667231559753418
    6. ' fonction' → logprob: -5.792231559753418
    7. '```' → logprob: -5.792231559753418
    8. 'fonction' → logprob: -6.042231559753418
    9. 'sembl' → logprob: -7.042231559753418
    10. ' using' → logprob: -7.542231559753418

Token 176: ' temps' (ID: 11160)
  Prédit: 'temps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temps' → logprob: -0.00651724124327302
    2. 'if' → logprob: -5.25651741027832
    3. ' temps' → logprob: -8.00651741027832
    4. 'temp' → logprob: -8.25651741027832
    5. 'ligne' → logprob: -8.25651741027832
    6. 'time' → logprob: -8.75651741027832
    7. '#' → logprob: -9.13151741027832
    8. 'fois' → logprob: -10.00651741027832
    9. 'tempo' → logprob: -11.00651741027832
    10. '```' → logprob: -11.00651741027832

Token 177: ' à' (ID: 1221)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8495583534240723
    2. 'if' → logprob: -1.0995583534240723
    3. ' if' → logprob: -1.9745583534240723
    4. ',' → logprob: -2.5995583534240723
    5. ' :' → logprob: -3.9745583534240723
    6. ':
' → logprob: -6.349558353424072
    7. ' ' → logprob: -6.349558353424072
    8. ' ,' → logprob: -6.599558353424072
    9. ' :
' → logprob: -7.599558353424072
    10. ' (' → logprob: -8.224557876586914

Token 178: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.056076690554618835
    2. 'l' → logprob: -2.931076765060425
    3. ' la' → logprob: -8.056077003479004
    4. 'la' → logprob: -8.681077003479004
    5. ' using' → logprob: -9.056077003479004
    6. '```' → logprob: -9.056077003479004
    7. 'if' → logprob: -9.431077003479004
    8. 'a' → logprob: -9.556077003479004
    9. ''aide' → logprob: -9.556077003479004
    10. 'part' → logprob: -9.931077003479004

Token 179: ''aide' (ID: 75684)
  Prédit: ''aide'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''aide' → logprob: -0.041506748646497726
    2. 'if' → logprob: -3.666506767272949
    3. 'a' → logprob: -4.541506767272949
    4. '’aide' → logprob: -5.791506767272949
    5. 'e' → logprob: -8.16650676727295
    6. ''a' → logprob: -8.54150676727295
    7. '```' → logprob: -9.29150676727295
    8. 'is' → logprob: -9.29150676727295
    9. ''' → logprob: -9.66650676727295
    10. 'help' → logprob: -9.79150676727295

Token 180: ' du' (ID: 1462)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.13923439383506775
    2. ' de' → logprob: -2.3892343044281006
    3. ' if' → logprob: -4.51423454284668
    4. ' des' → logprob: -4.51423454284668
    5. 'd' → logprob: -4.76423454284668
    6. 'if' → logprob: -6.38923454284668
    7. ' du' → logprob: -6.51423454284668
    8. ' of' → logprob: -7.13923454284668
    9. 'de' → logprob: -7.13923454284668
    10. ' ' → logprob: -7.38923454284668

Token 181: ' mot' (ID: 3598)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0058825756423175335
    2. ' if' → logprob: -5.505882740020752
    3. 'op' → logprob: -7.255882740020752
    4. 'and' → logprob: -7.630882740020752
    5. ' opér' → logprob: -8.130882263183594
    6. 'operator' → logprob: -9.130882263183594
    7. 'oper' → logprob: -10.130882263183594
    8. 'all' → logprob: -10.255882263183594
    9. 'et' → logprob: -11.130882263183594
    10. ' mot' → logprob: -11.380882263183594

Token 182: '-cl' (ID: 29640)
  Prédit: 'clé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clé' → logprob: -0.6413186192512512
    2. ' clé' → logprob: -0.8913186192512512
    3. ' cle' → logprob: -3.8913185596466064
    4. ' clés' → logprob: -4.3913187980651855
    5. '-cl' → logprob: -4.5163187980651855
    6. 'cle' → logprob: -5.0163187980651855
    7. 'cl' → logprob: -5.1413187980651855
    8. 'clave' → logprob: -5.6413187980651855
    9. ' clave' → logprob: -6.5163187980651855
    10. 'c' → logprob: -7.6413187980651855

Token 183: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.05779052525758743
    2. 'e' → logprob: -2.932790517807007
    3. 'if' → logprob: -7.057790756225586
    4. 'f' → logprob: -7.057790756225586
    5. 'éf' → logprob: -7.807790756225586
    6. 'ef' → logprob: -8.432790756225586
    7. 'és' → logprob: -8.807790756225586
    8. '```' → logprob: -9.432790756225586
    9. 'év' → logprob: -9.557790756225586
    10. 'è' → logprob: -9.932790756225586

Token 184: ' '' (ID: 461)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6330161690711975
    2. 'if' → logprob: -0.7580161690711975
    3. ' ' → logprob: -8.633016586303711
    4. '  ' → logprob: -9.758016586303711
    5. 'and' → logprob: -9.758016586303711
    6. ' `' → logprob: -11.008016586303711
    7. ' "' → logprob: -11.133016586303711
    8. '`' → logprob: -11.258016586303711
    9. ' and' → logprob: -11.258016586303711
    10. 'elif' → logprob: -11.633016586303711

Token 185: 'or' (ID: 267)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.007913108915090561
    2. ' if' → logprob: -5.382913112640381
    3. 'and' → logprob: -5.757913112640381
    4. 'elif' → logprob: -10.007912635803223
    5. ' and' → logprob: -10.257912635803223
    6. 'i' → logprob: -11.007912635803223
    7. 'not' → logprob: -11.507912635803223
    8. ' not' → logprob: -12.507912635803223
    9. 'a' → logprob: -12.632912635803223
    10. ' i' → logprob: -13.007912635803223

Token 186: '',' (ID: 787)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.666311502456665
    2. ' '' → logprob: -2.416311502456665
    3. ' if' → logprob: -2.541311502456665
    4. 'if' → logprob: -2.666311502456665
    5. '':' → logprob: -2.791311502456665
    6. ':' → logprob: -3.291311502456665
    7. ''
' → logprob: -3.916311502456665
    8. ' A' → logprob: -4.041311264038086
    9. ''.' → logprob: -4.166311264038086
    10. '':
' → logprob: -4.416311264038086

Token 187: ' 
' (ID: 793)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09356893599033356
    2. ' if' → logprob: -2.843569040298462
    3. '#' → logprob: -3.593569040298462
    4. 'A' → logprob: -6.843568801879883
    5. ' si' → logprob: -7.468568801879883
    6. ' A' → logprob: -7.718568801879883
    7. 'not' → logprob: -8.218568801879883
    8. 'si' → logprob: -8.468568801879883
    9. ' #' → logprob: -8.718568801879883
    10. '
' → logprob: -8.843568801879883

Token 188: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7199090123176575
    2. '#' → logprob: -1.0949089527130127
    3. ' if' → logprob: -2.9699089527130127
    4. 'A' → logprob: -2.9699089527130127
    5. ' A' → logprob: -4.344909191131592
    6. ' et' → logprob: -4.594909191131592
    7. 'not' → logprob: -4.594909191131592
    8. ' not' → logprob: -4.844909191131592
    9. 'et' → logprob: -5.344909191131592
    10. ' ' → logprob: -5.344909191131592

Token 189: ' qui' (ID: 2780)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11321688443422318
    2. ' if' → logprob: -2.3632168769836426
    3. 'A' → logprob: -5.863216876983643
    4. 'not' → logprob: -6.238216876983643
    5. ' A' → logprob: -6.363216876983643
    6. ' not' → logprob: -6.488216876983643
    7. ' si' → logprob: -6.613216876983643
    8. '#' → logprob: -6.613216876983643
    9. ' ' → logprob: -7.488216876983643
    10. 'et' → logprob: -7.988216876983643

Token 190: ' est' (ID: 893)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.0444071292877197
    2. ' if' → logprob: -2.0444071292877197
    3. ' permet' → logprob: -2.4194071292877197
    4. ' A' → logprob: -2.5444071292877197
    5. 'if' → logprob: -2.6694071292877197
    6. ' vér' → logprob: -3.2944071292877197
    7. ' ' → logprob: -3.6694071292877197
    8. ' est' → logprob: -3.6694071292877197
    9. ' (' → logprob: -3.7944071292877197
    10. ' '' → logprob: -4.294406890869141

Token 191: ' l' (ID: 305)
  Prédit: ' utilisé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' utilisé' → logprob: -0.030636224895715714
    2. ' une' → logprob: -4.905636310577393
    3. ' logique' → logprob: -5.155636310577393
    4. ' utilisée' → logprob: -5.280636310577393
    5. ' vrai' → logprob: -6.030636310577393
    6. ' un' → logprob: -6.030636310577393
    7. 'util' → logprob: -6.655636310577393
    8. ' True' → logprob: -6.655636310577393
    9. 's' → logprob: -6.905636310577393
    10. 'True' → logprob: -7.030636310577393

Token 192: ''op' (ID: 70747)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.4557772874832153
    2. 'a' → logprob: -1.7057772874832153
    3. ''' → logprob: -2.330777168273926
    4. ''utilisateur' → logprob: -2.455777168273926
    5. ' not' → logprob: -2.705777168273926
    6. ''é' → logprob: -3.580777168273926
    7. 'égal' → logprob: -3.580777168273926
    8. 'à' → logprob: -3.830777168273926
    9. ''ex' → logprob: -3.955777168273926
    10. 'not' → logprob: -4.080777168273926

Token 193: 'érateur' (ID: 108528)
  Prédit: 'érateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érateur' → logprob: -0.10131670534610748
    2. 'os' → logprob: -3.2263166904449463
    3. 'er' → logprob: -3.6013166904449463
    4. 'ér' → logprob: -4.101316928863525
    5. 'é' → logprob: -5.601316928863525
    6. 'or' → logprob: -6.476316928863525
    7. 'posé' → logprob: -6.476316928863525
    8. 'éré' → logprob: -6.476316928863525
    9. 'ération' → logprob: -7.726316928863525
    10. 'osite' → logprob: -7.726316928863525

Token 194: ' logique' (ID: 115350)
  Prédit: ' logique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' logique' → logprob: -0.01761551946401596
    2. 'log' → logprob: -4.76761531829834
    3. ' log' → logprob: -5.01761531829834
    4. ' logic' → logprob: -7.01761531829834
    5. ' or' → logprob: -7.64261531829834
    6. ' lógico' → logprob: -8.01761531829834
    7. ' logical' → logprob: -9.01761531829834
    8. ' лог' → logprob: -9.14261531829834
    9. '_log' → logprob: -9.26761531829834
    10. 'logical' → logprob: -9.26761531829834

Token 195: ' OU' (ID: 79497)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5901471376419067
    2. 'not' → logprob: -0.8401471376419067
    3. 'if' → logprob: -5.590147018432617
    4. 'and' → logprob: -5.965147018432617
    5. ' or' → logprob: -6.590147018432617
    6. 'or' → logprob: -6.840147018432617
    7. ' if' → logprob: -6.840147018432617
    8. '(not' → logprob: -7.215147018432617
    9. '```' → logprob: -7.715147018432617
    10. ' True' → logprob: -8.215147018432617

Token 196: ' en' (ID: 469)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0760856866836548
    2. 'if' → logprob: -1.2010856866836548
    3. ':' → logprob: -1.4510856866836548
    4. '.' → logprob: -2.7010855674743652
    5. ' :' → logprob: -3.5760855674743652
    6. 'not' → logprob: -4.826085567474365
    7. ' (' → logprob: -5.076085567474365
    8. ' not' → logprob: -5.451085567474365
    9. ',' → logprob: -5.701085567474365
    10. ':
' → logprob: -6.701085567474365

Token 197: ' Python' (ID: 26534)
  Prédit: 'python'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'python' → logprob: -0.05896267294883728
    2. 'Python' → logprob: -2.93396258354187
    3. ' Python' → logprob: -5.683962821960449
    4. ' python' → logprob: -7.933962821960449
    5. 'py' → logprob: -8.80896282196045
    6. 'if' → logprob: -9.68396282196045
    7. '```' → logprob: -10.55896282196045
    8. 'anglais' → logprob: -10.80896282196045
    9. 'ython' → logprob: -11.05896282196045
    10. '#' → logprob: -11.93396282196045

Token 198: '.
' (ID: 558)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.035967905074357986
    2. ' if' → logprob: -3.4109678268432617
    3. ':' → logprob: -6.285967826843262
    4. ':
' → logprob: -8.410967826843262
    5. ',' → logprob: -9.535967826843262
    6. '
' → logprob: -9.785967826843262
    7. '.' → logprob: -10.410967826843262
    8. ' :' → logprob: -11.285967826843262
    9. ' :
' → logprob: -11.660967826843262
    10. '(
' → logprob: -11.785967826843262

Token 199: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.735893965815194e-05
    2. ' if' → logprob: -11.125017166137695
    3. 'i' → logprob: -13.000017166137695
    4. '
' → logprob: -17.500017166137695
    5. '```' → logprob: -17.625017166137695
    6. 'while' → logprob: -17.875017166137695
    7. 'If' → logprob: -18.000017166137695
    8. ':' → logprob: -18.125017166137695
    9. '#' → logprob: -18.375017166137695
    10. ' ' → logprob: -18.500017166137695

Token 200: ' "' (ID: 392)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00023655613767914474
    2. ' if' → logprob: -8.375236511230469
    3. 'i' → logprob: -12.125236511230469
    4. '
' → logprob: -15.750236511230469
    5. ' 
' → logprob: -16.62523651123047
    6. 'If' → logprob: -16.62523651123047
    7. ' ' → logprob: -16.75023651123047
    8. ' i' → logprob: -16.87523651123047
    9. '#' → logprob: -17.25023651123047
    10. '```' → logprob: -17.62523651123047

Token 201: '0' (ID: 15)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.24369023740291595
    2. 'if' → logprob: -1.6186902523040771
    3. ' A' → logprob: -4.618690013885498
    4. ' if' → logprob: -5.618690013885498
    5. '(A' → logprob: -5.993690013885498
    6. 'not' → logprob: -7.368690013885498
    7. 'B' → logprob: -7.493690013885498
    8. ' (' → logprob: -7.743690013885498
    9. ' not' → logprob: -8.868690490722656
    10. 'a' → logprob: -9.243690490722656

Token 202: '"' (ID: 1)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7853003144264221
    2. ' ==' → logprob: -1.6603002548217773
    3. ' <' → logprob: -2.4103002548217773
    4. ' >' → logprob: -2.9103002548217773
    5. '"' → logprob: -3.0353002548217773
    6. 'A' → logprob: -3.1603002548217773
    7. ' not' → logprob: -3.4103002548217773
    8. ' <=' → logprob: -3.7853002548217773
    9. 'in' → logprob: -4.035300254821777
    10. '==' → logprob: -4.410300254821777

Token 203: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11165830492973328
    2. ' not' → logprob: -3.2366583347320557
    3. ' ==' → logprob: -3.3616583347320557
    4. 'not' → logprob: -4.861658096313477
    5. '==' → logprob: -4.986658096313477
    6. ' ' → logprob: -5.111658096313477
    7. 'in' → logprob: -5.111658096313477
    8. 'if' → logprob: -6.861658096313477
    9. ' <=' → logprob: -6.986658096313477
    10. ' !=' → logprob: -7.111658096313477

Token 204: ' a' (ID: 261)
  Prédit: ' ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ab' → logprob: -0.3084329664707184
    2. ' a' → logprob: -1.808432936668396
    3. 'ab' → logprob: -2.6834330558776855
    4. 'a' → logprob: -3.4334330558776855
    5. ' b' → logprob: -8.183432579040527
    6. ' ' → logprob: -8.683432579040527
    7. 'b' → logprob: -9.183432579040527
    8. '(ab' → logprob: -9.620932579040527
    9. ' (' → logprob: -9.995932579040527
    10. '(a' → logprob: -10.370932579040527

Token 205: ' :' (ID: 712)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.03194284811615944
    2. 'or' → logprob: -3.781942844390869
    3. ' ' → logprob: -5.031942844390869
    4. ')' → logprob: -6.531942844390869
    5. ' and' → logprob: -8.031943321228027
    6. ' )' → logprob: -8.531943321228027
    7. ',' → logprob: -10.656943321228027
    8. '  ' → logprob: -10.656943321228027
    9. ':' → logprob: -10.656943321228027
    10. 'and' → logprob: -11.156943321228027

Token 206: ' Vér' (ID: 159169)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -1.3965115547180176
    2. ' or' → logprob: -1.3965115547180176
    3. ' if' → logprob: -2.0215115547180176
    4. ' True' → logprob: -2.2715115547180176
    5. 'if' → logprob: -2.7715115547180176
    6. ' ' → logprob: -3.2715115547180176
    7. ' a' → logprob: -3.3965115547180176
    8. 'A' → logprob: -3.3965115547180176
    9. 'True' → logprob: -3.5215115547180176
    10. 'or' → logprob: -4.021511554718018

Token 207: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.0010991342132911086
    2. 'ifier' → logprob: -7.501099109649658
    3. 'if' → logprob: -8.126099586486816
    4. 'ifiez' → logprob: -8.501099586486816
    5. '#' → logprob: -11.126099586486816
    6. 'ifies' → logprob: -11.501099586486816
    7. 'i' → logprob: -12.751099586486816
    8. 'ifié' → logprob: -12.876099586486816
    9. 'rif' → logprob: -13.251099586486816
    10. 'ifi' → logprob: -13.376099586486816

Token 208: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.09051316976547241
    2. ' ' → logprob: -3.465513229370117
    3. 'if' → logprob: -4.215513229370117
    4. ' not' → logprob: -4.590513229370117
    5. ' que' → logprob: -4.590513229370117
    6. ' si' → logprob: -4.715513229370117
    7. ' a' → logprob: -4.965513229370117
    8. 'not' → logprob: -7.340513229370117
    9. 'a' → logprob: -7.465513229370117
    10. ' whether' → logprob: -7.590513229370117

Token 209: ' le' (ID: 505)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3205868899822235
    2. 'a' → logprob: -1.695586919784546
    3. ' a' → logprob: -3.195586919784546
    4. ' "' → logprob: -3.195586919784546
    5. '"a' → logprob: -4.945586681365967
    6. '0' → logprob: -6.945586681365967
    7. ' ' → logprob: -7.570586681365967
    8. ''' → logprob: -9.070587158203125
    9. ' '' → logprob: -9.695587158203125
    10. ''a' → logprob: -10.195587158203125

Token 210: ' caractère' (ID: 80509)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.09417062252759933
    2. 'a' → logprob: -2.594170570373535
    3. '"a' → logprob: -5.219170570373535
    4. ''' → logprob: -5.594170570373535
    5. ''a' → logprob: -5.719170570373535
    6. ' "' → logprob: -6.719170570373535
    7. '0' → logprob: -7.719170570373535
    8. ' a' → logprob: -7.844170570373535
    9. 'car' → logprob: -8.594170570373535
    10. 'string' → logprob: -8.969170570373535

Token 211: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2575828433036804
    2. ' "' → logprob: -1.6325829029083252
    3. ' '' → logprob: -4.257582664489746
    4. ''' → logprob: -4.382582664489746
    5. ' ' → logprob: -5.882582664489746
    6. '"a' → logprob: -7.257582664489746
    7. '0' → logprob: -7.382582664489746
    8. ' a' → logprob: -7.757582664489746
    9. 'a' → logprob: -8.132582664489746
    10. ''a' → logprob: -9.007582664489746

Token 212: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12289471924304962
    2. '"' → logprob: -2.247894763946533
    3. 'a' → logprob: -5.122894763946533
    4. ''' → logprob: -5.997894763946533
    5. ' "' → logprob: -7.247894763946533
    6. ' ' → logprob: -7.497894763946533
    7. '"a' → logprob: -9.122894287109375
    8. ' '' → logprob: -9.997894287109375
    9. '")' → logprob: -10.122894287109375
    10. ' a' → logprob: -10.247894287109375

Token 213: ''' (ID: 6)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.26327750086784363
    2. ' "' → logprob: -2.638277530670166
    3. '")' → logprob: -2.763277530670166
    4. ')' → logprob: -3.138277530670166
    5. ' or' → logprob: -3.638277530670166
    6. ' ")' → logprob: -4.513277530670166
    7. ''' → logprob: -4.513277530670166
    8. ' )' → logprob: -6.763277530670166
    9. '')' → logprob: -6.763277530670166
    10. ' '' → logprob: -7.138277530670166

Token 214: ' est' (ID: 893)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.18888454139232635
    2. ')' → logprob: -1.9388844966888428
    3. ' )' → logprob: -4.313884735107422
    4. ' ou' → logprob: -4.813884735107422
    5. '"' → logprob: -6.313884735107422
    6. 'or' → logprob: -6.438884735107422
    7. ' ' → logprob: -6.563884735107422
    8. ' "' → logprob: -6.938884735107422
    9. ' is' → logprob: -7.938884735107422
    10. ' est' → logprob: -9.063884735107422

Token 215: ' présent' (ID: 24129)
  Prédit: 'prés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prés' → logprob: -0.10125724226236343
    2. ' présent' → logprob: -2.72625732421875
    3. ' present' → logprob: -3.97625732421875
    4. 'present' → logprob: -4.47625732421875
    5. 'dans' → logprob: -8.47625732421875
    6. ' présente' → logprob: -8.47625732421875
    7. ' dans' → logprob: -8.97625732421875
    8. 'Prés' → logprob: -9.97625732421875
    9. 'pres' → logprob: -10.35125732421875
    10. ' presente' → logprob: -11.10125732421875

Token 216: ' dans' (ID: 2671)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.01542862132191658
    2. ' a' → logprob: -5.14042854309082
    3. ' in' → logprob: -5.76542854309082
    4. ')' → logprob: -6.14042854309082
    5. 'or' → logprob: -6.39042854309082
    6. 'a' → logprob: -7.14042854309082
    7. ' )' → logprob: -7.26542854309082
    8. ' ' → logprob: -8.26542854309082
    9. ' not' → logprob: -8.51542854309082
    10. 'in' → logprob: -8.89042854309082

Token 217: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.01418242696672678
    2. ' a' → logprob: -4.2641825675964355
    3. 'ab' → logprob: -11.139182090759277
    4. ' ab' → logprob: -12.764182090759277
    5. ' ' → logprob: -14.764182090759277
    6. ' the' → logprob: -15.264182090759277
    7. ')' → logprob: -16.139183044433594
    8. '```' → logprob: -16.139183044433594
    9. 'b' → logprob: -16.264183044433594
    10. ''a' → logprob: -16.389183044433594

Token 218: ' chaîne' (ID: 89288)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.009004752151668072
    2. ' a' → logprob: -4.759004592895508
    3. 'ab' → logprob: -8.259004592895508
    4. 'A' → logprob: -10.009004592895508
    5. ' ab' → logprob: -10.259004592895508
    6. 'b' → logprob: -10.884004592895508
    7. ' ' → logprob: -12.259004592895508
    8. 'string' → logprob: -12.384004592895508
    9. ' string' → logprob: -12.634004592895508
    10. ' A' → logprob: -13.134004592895508

Token 219: ' '' (ID: 461)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.4698905944824219
    2. 'a' → logprob: -1.0948905944824219
    3. ' a' → logprob: -3.469890594482422
    4. 'or' → logprob: -4.844890594482422
    5. ' ' → logprob: -7.969890594482422
    6. ' ou' → logprob: -8.219890594482422
    7. ')' → logprob: -8.594890594482422
    8. ' and' → logprob: -8.844890594482422
    9. 'ou' → logprob: -9.469890594482422
    10. 'A' → logprob: -9.594890594482422

Token 220: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004688692279160023
    2. ' a' → logprob: -5.379688739776611
    3. 'A' → logprob: -10.254688262939453
    4. '0' → logprob: -11.754688262939453
    5. 'ab' → logprob: -11.754688262939453
    6. '"' → logprob: -12.129688262939453
    7. '"a' → logprob: -12.879688262939453
    8. ' ' → logprob: -13.379688262939453
    9. ''a' → logprob: -13.504688262939453
    10. ')' → logprob: -13.504688262939453

Token 221: ''
' (ID: 2207)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010032771155238152
    2. ' or' → logprob: -5.010032653808594
    3. 'or' → logprob: -6.635032653808594
    4. ' )' → logprob: -6.760032653808594
    5. '")' → logprob: -7.385032653808594
    6. 'a' → logprob: -9.135032653808594
    7. ')
' → logprob: -10.010032653808594
    8. '')' → logprob: -10.260032653808594
    9. '"' → logprob: -12.135032653808594
    10. '#' → logprob: -12.885032653808594

Token 222: '#' (ID: 2)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.451831579208374
    2. 'or' → logprob: -1.076831579208374
    3. 'if' → logprob: -4.201831817626953
    4. ')' → logprob: -4.951831817626953
    5. ' if' → logprob: -8.076831817626953
    6. ' ' → logprob: -8.951831817626953
    7. ' and' → logprob: -9.201831817626953
    8. 'print' → logprob: -9.326831817626953
    9. 'and' → logprob: -9.826831817626953
    10. ' )' → logprob: -10.076831817626953

Token 223: ' "' (ID: 392)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.3359261155128479
    2. 'or' → logprob: -1.3359260559082031
    3. 'if' → logprob: -4.460926055908203
    4. ')' → logprob: -4.710926055908203
    5. ' if' → logprob: -7.085926055908203
    6. ' ' → logprob: -8.335926055908203
    7. ' )' → logprob: -8.835926055908203
    8. ',' → logprob: -9.210926055908203
    9. 'ou' → logprob: -9.335926055908203
    10. ' ou' → logprob: -9.585926055908203

Token 224: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4876038134098053
    2. '"' → logprob: -0.9876037836074829
    3. 'b' → logprob: -4.737603664398193
    4. ' "' → logprob: -6.487603664398193
    5. 'or' → logprob: -6.737603664398193
    6. ' or' → logprob: -7.737603664398193
    7. ' ' → logprob: -7.862603664398193
    8. ''' → logprob: -8.112604141235352
    9. '1' → logprob: -8.487604141235352
    10. 'a' → logprob: -8.987604141235352

Token 225: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.23042207956314087
    2. ' in' → logprob: -1.855422019958496
    3. ''' → logprob: -3.605422019958496
    4. 'in' → logprob: -4.480422019958496
    5. ' "' → logprob: -5.730422019958496
    6. '"in' → logprob: -5.980422019958496
    7. ')' → logprob: -6.605422019958496
    8. ' or' → logprob: -6.980422019958496
    9. '")' → logprob: -7.605422019958496
    10. 'a' → logprob: -7.730422019958496

Token 226: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.060826197266578674
    2. 'in' → logprob: -3.060826301574707
    3. ' not' → logprob: -4.685826301574707
    4. ' or' → logprob: -6.310826301574707
    5. 'not' → logprob: -7.310826301574707
    6. ' ' → logprob: -8.560826301574707
    7. ')' → logprob: -9.310826301574707
    8. 'or' → logprob: -9.560826301574707
    9. ' and' → logprob: -10.310826301574707
    10. 'n' → logprob: -10.935826301574707

Token 227: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6326123476028442
    2. ' b' → logprob: -0.7576123476028442
    3. ' ' → logprob: -11.382612228393555
    4. '	b' → logprob: -14.882612228393555
    5. '_b' → logprob: -15.445112228393555
    6. 's' → logprob: -15.445112228393555
    7. ' ' → logprob: -15.507612228393555
    8. 'B' → logprob: -15.945112228393555
    9. 'a' → logprob: -16.007612228393555
    10. '(b' → logprob: -16.382612228393555

Token 228: ' :' (ID: 712)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.4537663459777832
    2. ')' → logprob: -1.3287663459777832
    3. 'if' → logprob: -2.828766345977783
    4. 'or' → logprob: -3.328766345977783
    5. ' if' → logprob: -6.078766345977783
    6. ' )' → logprob: -6.703766345977783
    7. '):' → logprob: -6.953766345977783
    8. ':' → logprob: -8.078765869140625
    9. ' and' → logprob: -9.578765869140625
    10. ').' → logprob: -10.703765869140625

Token 229: ' Vér' (ID: 159169)
  Prédit: ' Vér'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Vér' → logprob: -0.17275148630142212
    2. ' b' → logprob: -2.9227514266967773
    3. ' V' → logprob: -3.6727514266967773
    4. 'V' → logprob: -3.6727514266967773
    5. 'b' → logprob: -3.6727514266967773
    6. ' (' → logprob: -4.172751426696777
    7. '(' → logprob: -6.422751426696777
    8. ' a' → logprob: -6.797751426696777
    9. '#' → logprob: -6.797751426696777
    10. ' if' → logprob: -7.047751426696777

Token 230: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.0037821431178599596
    2. 'if' → logprob: -6.878782272338867
    3. '#' → logprob: -7.253782272338867
    4. 'ér' → logprob: -7.378782272338867
    5. 'er' → logprob: -7.503782272338867
    6. 'ifié' → logprob: -8.753782272338867
    7. 'éf' → logprob: -9.003782272338867
    8. 'ifiez' → logprob: -9.128782272338867
    9. 'rif' → logprob: -9.878782272338867
    10. 'f' → logprob: -10.128782272338867

Token 231: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3613605797290802
    2. ' si' → logprob: -1.7363605499267578
    3. 'if' → logprob: -2.111360549926758
    4. 'si' → logprob: -5.111360549926758
    5. ' ' → logprob: -12.736360549926758
    6. 'Si' → logprob: -13.111360549926758
    7. ' ' → logprob: -13.236360549926758
    8. 'b' → logprob: -13.611360549926758
    9. ')' → logprob: -14.611360549926758
    10. 's' → logprob: -15.486360549926758

Token 232: ' le' (ID: 505)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4745416045188904
    2. '"' → logprob: -1.8495416641235352
    3. ' b' → logprob: -2.224541664123535
    4. '0' → logprob: -2.599541664123535
    5. ' la' → logprob: -4.474541664123535
    6. ' ' → logprob: -4.474541664123535
    7. 'la' → logprob: -5.474541664123535
    8. 'le' → logprob: -5.724541664123535
    9. ' "' → logprob: -5.974541664123535
    10. ' the' → logprob: -6.224541664123535

Token 233: ' caractère' (ID: 80509)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00036965898470953107
    2. 'b' → logprob: -9.000370025634766
    3. 'car' → logprob: -9.375370025634766
    4. ''' → logprob: -9.625370025634766
    5. '0' → logprob: -9.750370025634766
    6. ' "' → logprob: -11.625370025634766
    7. 'char' → logprob: -11.625370025634766
    8. 'character' → logprob: -11.875370025634766
    9. ' caractère' → logprob: -12.500370025634766
    10. ''b' → logprob: -13.250370025634766

Token 234: ' '' (ID: 461)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.28330913186073303
    2. 'b' → logprob: -1.5333091020584106
    3. '0' → logprob: -4.408308982849121
    4. '"' → logprob: -5.158308982849121
    5. ' '' → logprob: -5.408308982849121
    6. ' ' → logprob: -5.533308982849121
    7. ''b' → logprob: -6.408308982849121
    8. ' "' → logprob: -6.533308982849121
    9. ''' → logprob: -7.033308982849121
    10. ')' → logprob: -8.283308982849121

Token 235: '0' (ID: 15)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0008126051397994161
    2. '0' → logprob: -7.125812530517578
    3. '"' → logprob: -12.250812530517578
    4. ' b' → logprob: -13.000812530517578
    5. ''b' → logprob: -14.375812530517578
    6. ''' → logprob: -14.875812530517578
    7. 'a' → logprob: -16.125812530517578
    8. '""' → logprob: -17.125812530517578
    9. 'б' → logprob: -17.625812530517578
    10. '`' → logprob: -18.500812530517578

Token 236: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6925967931747437
    2. '")' → logprob: -1.3175967931747437
    3. '"' → logprob: -1.9425967931747437
    4. ''' → logprob: -2.942596912384033
    5. '')' → logprob: -3.567596912384033
    6. ' )' → logprob: -5.192596912384033
    7. ' ")' → logprob: -6.942596912384033
    8. ' "' → logprob: -7.817596912384033
    9. ' ')' → logprob: -8.817596435546875
    10. ' in' → logprob: -9.692596435546875

Token 237: ' est' (ID: 893)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.050477758049964905
    2. ' is' → logprob: -3.6754777431488037
    3. ' )' → logprob: -4.175477981567383
    4. ' in' → logprob: -5.550477981567383
    5. ' or' → logprob: -6.050477981567383
    6. 'in' → logprob: -7.425477981567383
    7. ' est' → logprob: -8.050477981567383
    8. 'or' → logprob: -8.425477981567383
    9. 'if' → logprob: -8.550477981567383
    10. ' ' → logprob: -8.800477981567383

Token 238: ' présent' (ID: 24129)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6372361779212952
    2. ' b' → logprob: -0.8872361779212952
    3. ' present' → logprob: -3.1372361183166504
    4. 'present' → logprob: -4.38723611831665
    5. 'prés' → logprob: -5.88723611831665
    6. ' présent' → logprob: -7.63723611831665
    7. ' in' → logprob: -8.637236595153809
    8. ' présente' → logprob: -9.637236595153809
    9. 'Prés' → logprob: -9.762236595153809
    10. ' presente' → logprob: -10.762236595153809

Token 239: ' dans' (ID: 2671)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.18267296254634857
    2. 'in' → logprob: -1.8076729774475098
    3. ' dans' → logprob: -6.93267297744751
    4. ' not' → logprob: -7.30767297744751
    5. ')' → logprob: -7.55767297744751
    6. 'not' → logprob: -8.807672500610352
    7. ' a' → logprob: -8.932672500610352
    8. 'dans' → logprob: -9.182672500610352
    9. 'a' → logprob: -9.432672500610352
    10. ' or' → logprob: -9.807672500610352

Token 240: ' la' (ID: 557)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.006851650308817625
    2. ' b' → logprob: -5.006851673126221
    3. 'a' → logprob: -9.381851196289062
    4. 'l' → logprob: -11.131851196289062
    5. ' la' → logprob: -11.506851196289062
    6. 'la' → logprob: -11.506851196289062
    7. '"' → logprob: -12.006851196289062
    8. ' a' → logprob: -13.006851196289062
    9. 'the' → logprob: -13.006851196289062
    10. ' the' → logprob: -13.381851196289062

Token 241: ' chaîne' (ID: 89288)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.05326029658317566
    2. ' b' → logprob: -3.553260326385498
    3. 'a' → logprob: -3.803260326385498
    4. ' a' → logprob: -7.178260326385498
    5. 'ab' → logprob: -9.55325984954834
    6. '"' → logprob: -9.92825984954834
    7. ' ' → logprob: -11.80325984954834
    8. 'c' → logprob: -11.80325984954834
    9. 'chaine' → logprob: -11.80325984954834
    10. ''b' → logprob: -12.42825984954834

Token 242: ' '' (ID: 461)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.36826109886169434
    2. ''b' → logprob: -1.3682610988616943
    3. ' b' → logprob: -3.6182610988616943
    4. ''' → logprob: -3.7432610988616943
    5. ' '' → logprob: -6.493261337280273
    6. ''a' → logprob: -7.243261337280273
    7. '"' → logprob: -8.243261337280273
    8. 'a' → logprob: -9.118261337280273
    9. ')' → logprob: -9.493261337280273
    10. ' or' → logprob: -9.618261337280273

Token 243: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00012439649435691535
    2. ' b' → logprob: -9.000123977661133
    3. 'ab' → logprob: -15.375123977661133
    4. ''b' → logprob: -15.375123977661133
    5. 'a' → logprob: -15.500123977661133
    6. ''' → logprob: -16.000123977661133
    7. 'B' → logprob: -16.500123977661133
    8. '"' → logprob: -16.750123977661133
    9. ')' → logprob: -17.250123977661133
    10. ' ' → logprob: -17.375123977661133

Token 244: ''
' (ID: 2207)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39756736159324646
    2. 'if' → logprob: -1.1475673913955688
    3. ')
' → logprob: -4.647567272186279
    4. '")' → logprob: -7.647567272186279
    5. ' if' → logprob: -8.772567749023438
    6. ')

' → logprob: -8.897567749023438
    7. '#' → logprob: -9.147567749023438
    8. 'or' → logprob: -9.897567749023438
    9. ' )' → logprob: -10.147567749023438
    10. ' or' → logprob: -10.897567749023438

Token 245: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -2.165027217415627e-05
    2. ' if' → logprob: -11.000021934509277
    3. '
' → logprob: -13.625021934509277
    4. '#' → logprob: -13.875021934509277
    5. 'i' → logprob: -14.375021934509277
    6. 'while' → logprob: -14.625021934509277
    7. 'for' → logprob: -15.125021934509277
    8. ')' → logprob: -15.250021934509277
    9. '```' → logprob: -15.375021934509277
    10. 'print' → logprob: -15.750021934509277

Token 246: ' A' (ID: 355)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0087516784551553e-05
    2. ' if' → logprob: -11.62501049041748
    3. 'while' → logprob: -14.50001049041748
    4. 'i' → logprob: -15.62501049041748
    5. '
' → logprob: -16.000009536743164
    6. '#' → logprob: -16.500009536743164
    7. 'If' → logprob: -16.875009536743164
    8. '```' → logprob: -16.875009536743164
    9. '0' → logprob: -17.250009536743164
    10. 'print' → logprob: -17.375009536743164

Token 247: ' >' (ID: 1424)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.13113510608673096
    2. '==' → logprob: -2.6311349868774414
    3. ' <=' → logprob: -3.7561349868774414
    4. ' <' → logprob: -4.256134986877441
    5. ' >' → logprob: -4.881134986877441
    6. '<=' → logprob: -6.506134986877441
    7. '>' → logprob: -6.756134986877441
    8. '<' → logprob: -6.881134986877441
    9. ' %' → logprob: -7.131134986877441
    10. '%' → logprob: -7.756134986877441

Token 248: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6664156317710876
    2. '100' → logprob: -0.9164156317710876
    3. ' ' → logprob: -3.4164156913757324
    4. '9' → logprob: -3.9164156913757324
    5. '20' → logprob: -4.291415691375732
    6. 'B' → logprob: -4.916415691375732
    7. '0' → logprob: -5.166415691375732
    8. '99' → logprob: -5.916415691375732
    9. '50' → logprob: -6.541415691375732
    10. '1' → logprob: -7.166415691375732

Token 249: '9' (ID: 24)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5673180818557739
    2. 'B' → logprob: -1.692318081855774
    3. '100' → logprob: -1.692318081855774
    4. '9' → logprob: -3.4423179626464844
    5. '20' → logprob: -4.317317962646484
    6. '99' → logprob: -5.067317962646484
    7. '0' → logprob: -5.192317962646484
    8. '50' → logprob: -5.942317962646484
    9. '999' → logprob: -6.317317962646484
    10. '5' → logprob: -7.567317962646484

Token 250: ' :' (ID: 712)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.014164102263748646
    2. 'or' → logprob: -4.264163970947266
    3. ' ' → logprob: -14.639163970947266
    4. '	or' → logprob: -16.639163970947266
    5. ' ' → logprob: -17.389163970947266
    6. '0' → logprob: -18.389163970947266
    7. '
' → logprob: -18.389163970947266
    8. ')' → logprob: -18.514163970947266
    9. ' and' → logprob: -18.639163970947266
    10. '   ' → logprob: -19.014163970947266

Token 251: ' Vér' (ID: 159169)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.0752551332116127
    2. 'A' → logprob: -2.7002551555633545
    3. ' B' → logprob: -5.950254917144775
    4. ' (' → logprob: -6.450254917144775
    5. 'B' → logprob: -7.450254917144775
    6. ' ' → logprob: -8.575255393981934
    7. '(' → logprob: -8.950255393981934
    8. ' or' → logprob: -8.950255393981934
    9. '"' → logprob: -11.200255393981934
    10. '  ' → logprob: -11.200255393981934

Token 252: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.37162742018699646
    2. 'ifiez' → logprob: -2.2466273307800293
    3. 'A' → logprob: -2.4966273307800293
    4. 'if' → logprob: -2.6216273307800293
    5. 'ify' → logprob: -4.371627330780029
    6. ' or' → logprob: -4.871627330780029
    7. 'f' → logprob: -4.996627330780029
    8. 'ifies' → logprob: -5.121627330780029
    9. ' A' → logprob: -5.746627330780029
    10. 'B' → logprob: -5.996627330780029

Token 253: ' si' (ID: 1784)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.00499110110104084
    2. ' A' → logprob: -5.629991054534912
    3. ' ' → logprob: -7.004991054534912
    4. 'or' → logprob: -8.25499153137207
    5. ' if' → logprob: -9.62999153137207
    6. 'A' → logprob: -10.12999153137207
    7. '<|end|>' → logprob: -10.25499153137207
    8. ' ou' → logprob: -10.62999153137207
    9. ' a' → logprob: -11.25499153137207
    10. ' that' → logprob: -11.50499153137207

Token 254: ' la' (ID: 557)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.10032065212726593
    2. 'A' → logprob: -2.35032057762146
    3. ' ' → logprob: -9.225320816040039
    4. ' B' → logprob: -12.475320816040039
    5. '9' → logprob: -12.600320816040039
    6. ' (' → logprob: -12.725320816040039
    7. ' the' → logprob: -13.475320816040039
    8. 'B' → logprob: -13.725320816040039
    9. '10' → logprob: -13.850320816040039
    10. '(A' → logprob: -13.850320816040039

Token 255: ' valeur' (ID: 41664)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.06399310380220413
    2. ' A' → logprob: -2.813993215560913
    3. ' ' → logprob: -7.313992977142334
    4. ' or' → logprob: -7.688992977142334
    5. 'B' → logprob: -8.188993453979492
    6. '10' → logprob: -8.563993453979492
    7. 'int' → logprob: -9.063993453979492
    8. '9' → logprob: -9.313993453979492
    9. '  ' → logprob: -9.813993453979492
    10. '>' → logprob: -10.563993453979492

Token 256: ' entière' (ID: 61583)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.213724747300148
    2. 'A' → logprob: -2.8387248516082764
    3. ' A' → logprob: -3.2137248516082764
    4. ' or' → logprob: -3.3387248516082764
    5. ' ' → logprob: -3.4637248516082764
    6. '>' → logprob: -3.7137248516082764
    7. ' >=' → logprob: -6.838724613189697
    8. '  ' → logprob: -7.838724613189697
    9. 'or' → logprob: -8.213725090026855
    10. '<|end|>' → logprob: -8.838725090026855

Token 257: ' conten' (ID: 23523)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.205282062292099
    2. '>' → logprob: -2.580281972885132
    3. ' A' → logprob: -2.830281972885132
    4. 'A' → logprob: -3.580281972885132
    5. ' or' → logprob: -4.080282211303711
    6. ' ' → logprob: -5.705282211303711
    7. ' ou' → logprob: -6.955282211303711
    8. ' >=' → logprob: -7.955282211303711
    9. '>A' → logprob: -8.455282211303711
    10. ')' → logprob: -8.580282211303711

Token 258: 'ue' (ID: 466)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0005333751323632896
    2. 'it' → logprob: -8.750533103942871
    3. 'ant' → logprob: -9.125533103942871
    4. 'u' → logprob: -9.375533103942871
    5. 'ue' → logprob: -9.375533103942871
    6. 'ut' → logprob: -10.250533103942871
    7. 'ent' → logprob: -10.625533103942871
    8. 'et' → logprob: -10.750533103942871
    9. 'e' → logprob: -12.375533103942871
    10. 'a' → logprob: -12.625533103942871

Token 259: ' dans' (ID: 2671)
  Prédit: ' dans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.9284677505493164
    2. 'A' → logprob: -1.0534677505493164
    3. 'dans' → logprob: -2.1784677505493164
    4. ' in' → logprob: -3.0534677505493164
    5. ' A' → logprob: -3.5534677505493164
    6. ' or' → logprob: -4.178467750549316
    7. ' ' → logprob: -4.678467750549316
    8. ')' → logprob: -4.803467750549316
    9. '>' → logprob: -4.928467750549316
    10. 'in' → logprob: -5.053467750549316

Token 260: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.03389429673552513
    2. ' A' → logprob: -3.4088943004608154
    3. 'a' → logprob: -8.408894538879395
    4. ' a' → logprob: -11.533894538879395
    5. 'B' → logprob: -12.033894538879395
    6. ' ' → logprob: -12.033894538879395
    7. 'b' → logprob: -14.283894538879395
    8. 'ab' → logprob: -14.408894538879395
    9. '  ' → logprob: -14.783894538879395
    10. ' B' → logprob: -14.908894538879395

Token 261: ' est' (ID: 893)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.7554646730422974
    2. ' >' → logprob: -0.7554646730422974
    3. '>' → logprob: -2.880464553833008
    4. 'or' → logprob: -5.880464553833008
    5. ' ' → logprob: -7.505464553833008
    6. ' >=' → logprob: -7.880464553833008
    7. ')' → logprob: -8.755464553833008
    8. '>=' → logprob: -9.380464553833008
    9. '<|end|>' → logprob: -9.880464553833008
    10. '">' → logprob: -10.130464553833008

Token 262: ' supérieure' (ID: 106336)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.581229031085968
    2. '>' → logprob: -0.831229031085968
    3. ' supérieur' → logprob: -6.456229209899902
    4. ' greater' → logprob: -7.081229209899902
    5. 'greater' → logprob: -7.206229209899902
    6. 'sup' → logprob: -7.456229209899902
    7. ' ' → logprob: -7.831229209899902
    8. '9' → logprob: -8.081229209899902
    9. ' sup' → logprob: -8.331229209899902
    10. ' supérieure' → logprob: -8.456229209899902

Token 263: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.05287729203701019
    2. 'à' → logprob: -3.802877187728882
    3. ' or' → logprob: -4.802877426147461
    4. '9' → logprob: -4.927877426147461
    5. ' a' → logprob: -5.802877426147461
    6. 'au' → logprob: -6.052877426147461
    7. ' ' → logprob: -6.802877426147461
    8. 'ou' → logprob: -6.927877426147461
    9. ' to' → logprob: -7.177877426147461
    10. '10' → logprob: -7.302877426147461

Token 264: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.001502598519437015
    2. ' ' → logprob: -6.501502513885498
    3. ' neuf' → logprob: -16.126502990722656
    4. '۹' → logprob: -17.126502990722656
    5. '```' → logprob: -17.251502990722656
    6. '10' → logprob: -17.251502990722656
    7. '９' → logprob: -17.501502990722656
    8. '99' → logprob: -17.564002990722656
    9. '  ' → logprob: -17.751502990722656
    10. '09' → logprob: -17.876502990722656

Token 265: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -8.506661833962426e-05
    2. ' ' → logprob: -9.37508487701416
    3. '  ' → logprob: -17.125085830688477
    4. '10' → logprob: -17.375085830688477
    5. '```' → logprob: -17.750085830688477
    6. '99' → logprob: -18.000085830688477
    7. '
' → logprob: -18.062585830688477
    8. '۹' → logprob: -18.500085830688477
    9. '999' → logprob: -18.625085830688477
    10. '   ' → logprob: -18.625085830688477

Token 266: '
' (ID: 198)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.37173306941986084
    2. 'if' → logprob: -1.7467330694198608
    3. ' or' → logprob: -1.9967330694198608
    4. ' if' → logprob: -8.246732711791992
    5. ' ' → logprob: -10.496732711791992
    6. '#' → logprob: -10.496732711791992
    7. '	or' → logprob: -12.496732711791992
    8. 'ou' → logprob: -12.746732711791992
    9. '   ' → logprob: -13.246732711791992
    10. ')' → logprob: -13.246732711791992

Token 267: '#' (ID: 2)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.11340837180614471
    2. ' or' → logprob: -2.238408327102661
    3. 'if' → logprob: -7.86340856552124
    4. 'A' → logprob: -9.363408088684082
    5. ' ' → logprob: -10.488408088684082
    6. 'ou' → logprob: -10.863408088684082
    7. 'B' → logprob: -11.613408088684082
    8. 'C' → logprob: -11.613408088684082
    9. '|' → logprob: -12.113408088684082
    10. '0' → logprob: -12.238408088684082

Token 268: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.04152161255478859
    2. 'if' → logprob: -3.7915215492248535
    3. 'A' → logprob: -4.7915215492248535
    4. ' B' → logprob: -5.2915215492248535
    5. '(' → logprob: -6.0415215492248535
    6. 'or' → logprob: -7.1665215492248535
    7. ' if' → logprob: -7.7915215492248535
    8. ' or' → logprob: -8.291522026062012
    9. ' (' → logprob: -8.291522026062012
    10. '(B' → logprob: -8.291522026062012

Token 269: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.3132629990577698
    2. '>' → logprob: -1.313262939453125
    3. ' ' → logprob: -14.438262939453125
    4. ' >
' → logprob: -15.563262939453125
    5. '>
' → logprob: -16.313262939453125
    6. '   ' → logprob: -16.563262939453125
    7. ')' → logprob: -16.813262939453125
    8. '  ' → logprob: -17.188262939453125
    9. '">' → logprob: -17.438262939453125
    10. '()>' → logprob: -17.563262939453125

Token 270: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0028052295092493296
    2. ' ' → logprob: -5.877805233001709
    3. '10' → logprob: -15.50280475616455
    4. '۹' → logprob: -16.877805709838867
    5. '<|end|>' → logprob: -18.127805709838867
    6. '  ' → logprob: -18.190305709838867
    7. '```' → logprob: -18.315305709838867
    8. '   ' → logprob: -18.377805709838867
    9. '99' → logprob: -18.440305709838867
    10. '９' → logprob: -18.440305709838867

Token 271: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '۹' → logprob: -18.0000057220459
    4. '99' → logprob: -18.1250057220459
    5. '```' → logprob: -18.1250057220459
    6. '10' → logprob: -18.5000057220459
    7. '09' → logprob: -18.7500057220459
    8. '९' → logprob: -18.8750057220459
    9. '９' → logprob: -19.1250057220459
    10. '999' → logprob: -19.1250057220459

Token 272: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12986081838607788
    2. ' :' → logprob: -2.7548608779907227
    3. ' or' → logprob: -2.8798608779907227
    4. ')' → logprob: -7.129860877990723
    5. 'or' → logprob: -7.254860877990723
    6. '):' → logprob: -8.004860877990723
    7. ' ' → logprob: -10.004860877990723
    8. ' ):' → logprob: -10.379860877990723
    9. ' )' → logprob: -10.629860877990723
    10. ':
' → logprob: -10.754860877990723

Token 273: ' Vér' (ID: 159169)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.02852119877934456
    2. 'B' → logprob: -3.6535212993621826
    3. '9' → logprob: -6.6535210609436035
    4. ' (' → logprob: -7.9035210609436035
    5. ' True' → logprob: -8.153521537780762
    6. ' ' → logprob: -9.028521537780762
    7. '(B' → logprob: -9.278521537780762
    8. 'True' → logprob: -10.028521537780762
    9. '10' → logprob: -12.903521537780762
    10. ' False' → logprob: -13.528521537780762

Token 274: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.0020057226065546274
    2. 'ér' → logprob: -7.002005577087402
    3. 'if' → logprob: -7.377005577087402
    4. 'f' → logprob: -8.752005577087402
    5. 'rif' → logprob: -8.752005577087402
    6. 'er' → logprob: -10.502005577087402
    7. 'ifiez' → logprob: -10.502005577087402
    8. 'ifi' → logprob: -10.752005577087402
    9. 'éf' → logprob: -10.877005577087402
    10. 'ifié' → logprob: -11.252005577087402

Token 275: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.18086545169353485
    2. 'if' → logprob: -1.8058654069900513
    3. ' B' → logprob: -7.180865287780762
    4. ' ' → logprob: -9.430865287780762
    5. ' si' → logprob: -9.430865287780762
    6. ' A' → logprob: -9.680865287780762
    7. ' (' → logprob: -10.055865287780762
    8. 'B' → logprob: -10.555865287780762
    9. '9' → logprob: -10.680865287780762
    10. ' True' → logprob: -11.805865287780762

Token 276: ' la' (ID: 557)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.31337395310401917
    2. 'B' → logprob: -1.3133739233016968
    3. '9' → logprob: -9.563373565673828
    4. ' ' → logprob: -10.188373565673828
    5. '(B' → logprob: -13.188373565673828
    6. '	B' → logprob: -14.438373565673828
    7. ' (' → logprob: -14.688373565673828
    8. '0' → logprob: -15.188373565673828
    9. '10' → logprob: -15.313373565673828
    10. '>B' → logprob: -15.438373565673828

Token 277: ' valeur' (ID: 41664)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.6286910772323608
    2. '9' → logprob: -1.6286910772323608
    3. 'value' → logprob: -1.6286910772323608
    4. 'A' → logprob: -3.7536911964416504
    5. 'val' → logprob: -4.25369119644165
    6. ' value' → logprob: -4.50369119644165
    7. '10' → logprob: -4.50369119644165
    8. ' ' → logprob: -5.50369119644165
    9. ' B' → logprob: -5.75369119644165
    10. '0' → logprob: -6.12869119644165

Token 278: ' entière' (ID: 61583)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.06249672919511795
    2. '>' → logprob: -2.8124966621398926
    3. ' ' → logprob: -8.06249713897705
    4. ')' → logprob: -10.06249713897705
    5. '   ' → logprob: -10.31249713897705
    6. '()>' → logprob: -10.56249713897705
    7. '()' → logprob: -10.93749713897705
    8. '(">' → logprob: -11.31249713897705
    9. '  ' → logprob: -11.43749713897705
    10. ' >
' → logprob: -11.43749713897705

Token 279: ' conten' (ID: 23523)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.6265182495117188
    2. 'conten' → logprob: -1.5015182495117188
    3. '>' → logprob: -2.1265182495117188
    4. ' ' → logprob: -3.2515182495117188
    5. 'contained' → logprob: -3.6265182495117188
    6. ' contained' → logprob: -3.8765182495117188
    7. ' contenu' → logprob: -4.376518249511719
    8. ')' → logprob: -4.876518249511719
    9. ' conten' → logprob: -5.751518249511719
    10. 'cont' → logprob: -6.001518249511719

Token 280: 'ue' (ID: 466)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.31629398465156555
    2. 'u' → logprob: -1.3162939548492432
    3. 'ued' → logprob: -6.941294193267822
    4. 'ue' → logprob: -7.066294193267822
    5. 'ted' → logprob: -7.816294193267822
    6. 'ed' → logprob: -8.691293716430664
    7. 'uted' → logprob: -8.816293716430664
    8. 'uated' → logprob: -9.566293716430664
    9. 'ut' → logprob: -10.066293716430664
    10. 'us' → logprob: -10.316293716430664

Token 281: ' dans' (ID: 2671)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5547212958335876
    2. 'in' → logprob: -1.0547213554382324
    3. 'dans' → logprob: -2.8047213554382324
    4. ' dans' → logprob: -4.304721355438232
    5. ' ' → logprob: -6.804721355438232
    6. '(B' → logprob: -6.929721355438232
    7. '  ' → logprob: -7.429721355438232
    8. ')' → logprob: -8.679720878601074
    9. '   ' → logprob: -8.929720878601074
    10. '(' → logprob: -9.179720878601074

Token 282: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.006749835796654224
    2. ' B' → logprob: -5.006749629974365
    3. 'b' → logprob: -10.881750106811523
    4. '9' → logprob: -11.131750106811523
    5. ' ' → logprob: -14.131750106811523
    6. ' b' → logprob: -15.381750106811523
    7. '10' → logprob: -16.756750106811523
    8. '	B' → logprob: -17.756750106811523
    9. '>B' → logprob: -18.631750106811523
    10. '   ' → logprob: -18.756750106811523

Token 283: ' est' (ID: 893)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5478218197822571
    2. ':' → logprob: -2.0478217601776123
    3. '):' → logprob: -2.0478217601776123
    4. '>' → logprob: -2.1728217601776123
    5. ')' → logprob: -3.5478217601776123
    6. ' :' → logprob: -4.672821998596191
    7. ' ==' → logprob: -5.797821998596191
    8. ')>' → logprob: -5.922821998596191
    9. ' ):' → logprob: -6.422821998596191
    10. '>:' → logprob: -6.672821998596191

Token 284: ' supérieure' (ID: 106336)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.018650617450475693
    2. ' ' → logprob: -4.018650531768799
    3. '>' → logprob: -7.768650531768799
    4. '10' → logprob: -9.643651008605957
    5. ' >' → logprob: -11.518651008605957
    6. '0' → logprob: -13.518651008605957
    7. '1' → logprob: -14.393651008605957
    8. '   ' → logprob: -14.768651008605957
    9. ' greater' → logprob: -15.018651008605957
    10. 'greater' → logprob: -15.643651008605957

Token 285: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.2886034846305847
    2. 'à' → logprob: -1.5386035442352295
    3. ' to' → logprob: -3.6636035442352295
    4. 'to' → logprob: -4.78860330581665
    5. '9' → logprob: -7.16360330581665
    6. 'a' → logprob: -7.91360330581665
    7. ' a' → logprob: -8.038603782653809
    8. '```' → logprob: -8.163603782653809
    9. ' ' → logprob: -9.288603782653809
    10. ''à' → logprob: -10.038603782653809

Token 286: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '۹' → logprob: -17.750059127807617
    4. '```' → logprob: -18.250059127807617
    5. '९' → logprob: -19.000059127807617
    6. '９' → logprob: -19.000059127807617
    7. '
' → logprob: -19.312559127807617
    8. '   ' → logprob: -19.625059127807617
    9. '<|end|>' → logprob: -19.750059127807617
    10. '৯' → logprob: -20.187559127807617

Token 287: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '```' → logprob: -18.875001907348633
    4. '99' → logprob: -19.250001907348633
    5. '۹' → logprob: -19.375001907348633
    6. '999' → logprob: -19.500001907348633
    7. '९' → logprob: -19.500001907348633
    8. '９' → logprob: -19.812501907348633
    9. '   ' → logprob: -20.062501907348633
    10. '  ' → logprob: -20.062501907348633

Token 288: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -8.895480277715251e-06
    2. ' if' → logprob: -11.875008583068848
    3. '
' → logprob: -14.500008583068848
    4. 'i' → logprob: -14.625008583068848
    5. 'while' → logprob: -15.500008583068848
    6. '```' → logprob: -15.625008583068848
    7. 'for' → logprob: -15.875008583068848
    8. '#' → logprob: -16.250009536743164
    9. ')' → logprob: -16.625009536743164
    10. 'print' → logprob: -17.000009536743164

Token 289: '#
' (ID: 11240)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -5.512236498361744e-07
    2. ' if' → logprob: -15.125000953674316
    3. 'while' → logprob: -16.25
    4. '
' → logprob: -17.25
    5. '#' → logprob: -18.125
    6. 'for' → logprob: -18.5
    7. 'i' → logprob: -18.75
    8. 'print' → logprob: -18.75
    9. '```' → logprob: -18.875
    10. 'If' → logprob: -19.375

Token 290: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.8624639324116288e-06
    2. ' if' → logprob: -13.500001907348633
    3. 'while' → logprob: -15.500001907348633
    4. '#' → logprob: -15.750001907348633
    5. '
' → logprob: -17.500001907348633
    6. 'i' → logprob: -17.625001907348633
    7. 'for' → logprob: -18.750001907348633
    8. 'If' → logprob: -18.750001907348633
    9. '#if' → logprob: -18.875001907348633
    10. '```' → logprob: -19.250001907348633

Token 291: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.3856492842023727e-06
    2. ' if' → logprob: -13.750000953674316
    3. '#' → logprob: -15.750000953674316
    4. '
' → logprob: -17.125001907348633
    5. 'while' → logprob: -17.375001907348633
    6. '```' → logprob: -18.625001907348633
    7. '#if' → logprob: -19.125001907348633
    8. 'If' → logprob: -19.500001907348633
    9. 'for' → logprob: -19.625001907348633
    10. 'i' → logprob: -19.875001907348633

Token 292: ' au' (ID: 2791)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.01671336032450199
    2. ' "' → logprob: -4.5167131423950195
    3. '0' → logprob: -5.7667131423950195
    4. '("' → logprob: -6.2667131423950195
    5. '(' → logprob: -8.14171314239502
    6. ' ' → logprob: -8.64171314239502
    7. '"A' → logprob: -10.01671314239502
    8. ' (' → logprob: -10.26671314239502
    9. ' ("' → logprob: -10.76671314239502
    10. '(
' → logprob: -11.39171314239502

Token 293: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.5087728500366211
    2. 'n' → logprob: -1.383772850036621
    3. 'une' → logprob: -2.883772850036621
    4. ' moins' → logprob: -3.258772850036621
    5. '
' → logprob: -3.758772850036621
    6. 'c' → logprob: -4.883772850036621
    7. 'ns' → logprob: -5.758772850036621
    8. 'mo' → logprob: -5.883772850036621
    9. 'ucune' → logprob: -6.008772850036621
    10. 'ny' → logprob: -6.508772850036621

Token 294: ' une' (ID: 2463)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.3874775171279907
    2. '"' → logprob: -1.3874775171279907
    3. '0' → logprob: -3.262477397918701
    4. '(' → logprob: -3.512477397918701
    5. '(
' → logprob: -6.637477397918701
    6. 'not' → logprob: -7.137477397918701
    7. ' "' → logprob: -7.512477397918701
    8. ' ("' → logprob: -7.887477397918701
    9. ' ' → logprob: -8.76247787475586
    10. '   ' → logprob: -9.76247787475586

Token 295: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17571333050727844
    2. ' (' → logprob: -2.550713300704956
    3. '("' → logprob: -3.425713300704956
    4. '(
' → logprob: -4.050713539123535
    5. 'not' → logprob: -4.175713539123535
    6. '0' → logprob: -5.050713539123535
    7. ' de' → logprob: -5.800713539123535
    8. 'if' → logprob: -6.300713539123535
    9. ' ("' → logprob: -6.675713539123535
    10. ' not' → logprob: -6.925713539123535

Token 296: ' ces' (ID: 10532)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3709438741207123
    2. '("' → logprob: -1.2459439039230347
    3. '0' → logprob: -4.370944023132324
    4. '(' → logprob: -5.495944023132324
    5. '["' → logprob: -5.870944023132324
    6. ' "' → logprob: -6.995944023132324
    7. ' ("' → logprob: -7.120944023132324
    8. '[' → logprob: -8.245944023132324
    9. ' ' → logprob: -8.620944023132324
    10. 'ces' → logprob: -9.120944023132324

Token 297: ' conditions' (ID: 6409)
  Prédit: 'conditions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conditions' → logprob: -0.011351251043379307
    2. 'condition' → logprob: -5.261351108551025
    3. ' conditions' → logprob: -5.261351108551025
    4. 'cond' → logprob: -7.011351108551025
    5. 'conds' → logprob: -12.636351585388184
    6. '4' → logprob: -13.761351585388184
    7. '   ' → logprob: -14.261351585388184
    8. ' condition' → logprob: -14.261351585388184
    9. ' ' → logprob: -14.511351585388184
    10. '条件' → logprob: -14.636351585388184

Token 298: ' est' (ID: 893)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00692399637773633
    2. ' est' → logprob: -5.506924152374268
    3. ':
' → logprob: -6.631924152374268
    4. 'est' → logprob: -7.131924152374268
    5. ' :' → logprob: -8.25692367553711
    6. ' is' → logprob: -8.25692367553711
    7. ' True' → logprob: -9.75692367553711
    8. 's' → logprob: -10.13192367553711
    9. ' true' → logprob: -11.13192367553711
    10. ' or' → logprob: -11.50692367553711

Token 299: ' vraie' (ID: 105841)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.4768441319465637
    2. 'v' → logprob: -0.9768441319465637
    3. ' True' → logprob: -6.101844310760498
    4. 'true' → logprob: -7.851844310760498
    5. ' vraie' → logprob: -9.47684383392334
    6. 'V' → logprob: -9.97684383392334
    7. '
' → logprob: -12.47684383392334
    8. '_true' → logprob: -13.10184383392334
    9. '```' → logprob: -13.35184383392334
    10. 'vé' → logprob: -13.35184383392334

Token 300: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023715801537036896
    2. ':
' → logprob: -4.273715972900391
    3. 'if' → logprob: -4.773715972900391
    4. ' or' → logprob: -7.773715972900391
    5. 'or' → logprob: -7.898715972900391
    6. ',' → logprob: -9.27371597290039
    7. ' :' → logprob: -9.52371597290039
    8. ' if' → logprob: -9.89871597290039
    9. 'print' → logprob: -11.14871597290039
    10. '):' → logprob: -11.27371597290039

Token 301: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.016367124393582344
    2. ' print' → logprob: -4.266366958618164
    3. 'if' → logprob: -6.766366958618164
    4. 'exit' → logprob: -7.016366958618164
    5. '   ' → logprob: -10.391366958618164
    6. '#' → logprob: -10.516366958618164
    7. ' if' → logprob: -10.641366958618164
    8. ' exit' → logprob: -10.641366958618164
    9. '
' → logprob: -11.641366958618164
    10. 'quit' → logprob: -11.766366958618164

Token 302: ' entre' (ID: 3853)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.019191285595297813
    2. ' print' → logprob: -4.019191265106201
    3. 'exit' → logprob: -7.644191265106201
    4. 'pr' → logprob: -8.14419174194336
    5. 'raise' → logprob: -9.51919174194336
    6. '   ' → logprob: -9.64419174194336
    7. 'continue' → logprob: -10.76919174194336
    8. ' exit' → logprob: -10.76919174194336
    9. ' ' → logprob: -11.26919174194336
    10. '#' → logprob: -11.39419174194336

Token 303: ' dans' (ID: 2671)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47344863414764404
    2. ' dans' → logprob: -1.848448634147644
    3. '   ' → logprob: -2.5984487533569336
    4. 'if' → logprob: -3.4734487533569336
    5. ' :' → logprob: -4.348448753356934
    6. ' ' → logprob: -4.348448753356934
    7. 'dans' → logprob: -4.473448753356934
    8. '  ' → logprob: -4.473448753356934
    9. 'print' → logprob: -4.848448753356934
    10. '    ' → logprob: -5.223448753356934

Token 304: ' le' (ID: 505)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1100442185997963
    2. ' la' → logprob: -3.735044240951538
    3. ' the' → logprob: -3.860044240951538
    4. ' if' → logprob: -3.860044240951538
    5. ':' → logprob: -4.735044002532959
    6. ' le' → logprob: -4.735044002532959
    7. ' True' → logprob: -4.860044002532959
    8. 'le' → logprob: -5.110044002532959
    9. ' l' → logprob: -6.110044002532959
    10. 'the' → logprob: -6.235044002532959

Token 305: ' bloc' (ID: 51218)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0037100540939718485
    2. ' if' → logprob: -5.7537102699279785
    3. '   ' → logprob: -8.12870979309082
    4. ':' → logprob: -9.00370979309082
    5. 'block' → logprob: -10.37870979309082
    6. '```' → logprob: -10.75370979309082
    7. 'print' → logprob: -11.00370979309082
    8. 'else' → logprob: -11.37870979309082
    9. 'bloc' → logprob: -11.62870979309082
    10. ':
' → logprob: -11.87870979309082

Token 306: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -5.466968650580384e-05
    2. ' if' → logprob: -10.000054359436035
    3. ':' → logprob: -11.625054359436035
    4. '```' → logprob: -15.875054359436035
    5. ':
' → logprob: -16.75005531311035
    6. '
' → logprob: -17.25005531311035
    7. 'If' → logprob: -17.50005531311035
    8. '   ' → logprob: -17.50005531311035
    9. 'ifs' → logprob: -17.50005531311035
    10. 'of' → logprob: -17.87505531311035

Token 307: '.
' (ID: 558)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -9.746380237629637e-05
    2. '```' → logprob: -9.750097274780273
    3. ' if' → logprob: -10.375097274780273
    4. ':' → logprob: -12.125097274780273
    5. ':
' → logprob: -13.500097274780273
    6. '``' → logprob: -14.125097274780273
    7. '
' → logprob: -15.750097274780273
    8. 'i' → logprob: -18.375097274780273
    9. 'for' → logprob: -18.375097274780273
    10. '#' → logprob: -18.375097274780273

Token 308: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -5.796184723294573e-06
    2. '```' → logprob: -12.125005722045898
    3. ' if' → logprob: -14.875005722045898
    4. '``' → logprob: -17.7500057220459
    5. 'i' → logprob: -18.1250057220459
    6. '
' → logprob: -19.2500057220459
    7. 'If' → logprob: -20.1250057220459
    8. 'for' → logprob: -20.2500057220459
    9. 'ifs' → logprob: -20.5000057220459
    10. 'while' → logprob: -20.5000057220459

Token 309: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.41660624742507935
    2. ' "' → logprob: -1.1666061878204346
    3. '("' → logprob: -3.9166061878204346
    4. ' ("' → logprob: -4.791606426239014
    5. '(' → logprob: -7.291606426239014
    6. ' ' → logprob: -8.541605949401855
    7. ' (' → logprob: -8.916605949401855
    8. '0' → logprob: -10.791605949401855
    9. '   ' → logprob: -10.791605949401855
    10. '"A' → logprob: -11.916605949401855

Token 310: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. '"' → logprob: -15.25
    3. ' ' → logprob: -17.625
    4. '۰' → logprob: -20.75
    5. ''' → logprob: -20.875
    6. '０' → logprob: -21.5
    7. '```' → logprob: -21.5
    8. '
' → logprob: -22.8125
    9. '   ' → logprob: -23.0
    10. '`' → logprob: -23.0

Token 311: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -2.558399319241289e-05
    2. '"in' → logprob: -10.875025749206543
    3. ' "' → logprob: -13.000025749206543
    4. 'in' → logprob: -13.250025749206543
    5. '0' → logprob: -13.625025749206543
    6. '")' → logprob: -14.750025749206543
    7. '"
' → logprob: -15.000025749206543
    8. ' in' → logprob: -15.500025749206543
    9. 'a' → logprob: -15.875025749206543
    10. '"`' → logprob: -16.625024795532227

Token 312: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01605513133108616
    2. 'in' → logprob: -4.141055107116699
    3. ' ' → logprob: -11.5160551071167
    4. ' not' → logprob: -11.8910551071167
    5. ' or' → logprob: -13.8910551071167
    6. 'not' → logprob: -14.1410551071167
    7. 'or' → logprob: -14.2660551071167
    8. ')' → logprob: -14.2660551071167
    9. 'a' → logprob: -15.5160551071167
    10. ' a' → logprob: -15.6410551071167

Token 313: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.009765299037098885
    2. ' a' → logprob: -4.634765148162842
    3. 'ab' → logprob: -11.759765625
    4. ' ab' → logprob: -14.384765625
    5. ' ' → logprob: -15.009765625
    6. '	a' → logprob: -15.134765625
    7. '"a' → logprob: -15.759765625
    8. '(a' → logprob: -16.384765625
    9. '_a' → logprob: -17.009765625
    10. '[a' → logprob: -17.134765625

Token 314: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.02324652671813965
    2. 'or' → logprob: -3.7732465267181396
    3. ' ' → logprob: -14.148246765136719
    4. '	or' → logprob: -16.64824676513672
    5. ' o' → logprob: -16.77324676513672
    6. ' "' → logprob: -17.39824676513672
    7. ')' → logprob: -17.64824676513672
    8. '"' → logprob: -18.89824676513672
    9. ' ' → logprob: -19.02324676513672
    10. '   ' → logprob: -19.02324676513672

Token 315: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1604100614786148
    2. ' "' → logprob: -1.9104100465774536
    3. ' ' → logprob: -8.660409927368164
    4. '0' → logprob: -12.035409927368164
    5. ''' → logprob: -13.660409927368164
    6. '   ' → logprob: -13.910409927368164
    7. ' ' → logprob: -13.910409927368164
    8. '  ' → logprob: -14.035409927368164
    9. ' '' → logprob: -14.160409927368164
    10. '    ' → logprob: -14.285409927368164

Token 316: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012475410767365247
    2. '"' → logprob: -9.00012493133545
    3. ' ' → logprob: -13.62512493133545
    4. 'b' → logprob: -17.875123977661133
    5. ' "' → logprob: -18.625123977661133
    6. ''' → logprob: -18.875123977661133
    7. 'a' → logprob: -19.625123977661133
    8. '  ' → logprob: -19.750123977661133
    9. '۰' → logprob: -19.750123977661133
    10. '"""' → logprob: -19.750123977661133

Token 317: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.009429506957530975
    2. ' in' → logprob: -4.884429454803467
    3. 'in' → logprob: -6.384429454803467
    4. '"in' → logprob: -9.009429931640625
    5. ' "' → logprob: -11.884429931640625
    6. '"""' → logprob: -13.509429931640625
    7. ' ' → logprob: -13.759429931640625
    8. ' ' → logprob: -14.634429931640625
    9. ' or' → logprob: -14.884429931640625
    10. '```' → logprob: -15.134429931640625

Token 318: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4741034209728241
    2. 'in' → logprob: -0.9741034507751465
    3. ' or' → logprob: -11.099102973937988
    4. ' ' → logprob: -12.099102973937988
    5. 'or' → logprob: -12.224102973937988
    6. 'b' → logprob: -15.099102973937988
    7. ' ' → logprob: -15.974102973937988
    8. ' not' → logprob: -16.099103927612305
    9. ' b' → logprob: -16.099103927612305
    10. 'not' → logprob: -16.849103927612305

Token 319: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2014133334159851
    2. ' b' → logprob: -1.7014133930206299
    3. ' ' → logprob: -17.076414108276367
    4. '	b' → logprob: -18.701414108276367
    5. 'B' → logprob: -20.451414108276367
    6. ' ' → logprob: -21.201414108276367
    7. '(b' → logprob: -21.576414108276367
    8. '_b' → logprob: -21.701414108276367
    9. '   ' → logprob: -21.826414108276367
    10. ' б' → logprob: -21.826414108276367

Token 320: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0007330321241170168
    2. 'or' → logprob: -7.250732898712158
    3. ' ' → logprob: -10.750733375549316
    4. '	or' → logprob: -14.000733375549316
    5. '   ' → logprob: -15.125733375549316
    6. ' ' → logprob: -15.750733375549316
    7. '  ' → logprob: -15.750733375549316
    8. ':' → logprob: -15.875733375549316
    9. '    ' → logprob: -16.125732421875
    10. ')' → logprob: -17.000732421875

Token 321: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.25193077325820923
    2. ' A' → logprob: -1.5019307136535645
    3. ' ' → logprob: -13.751931190490723
    4. '	A' → logprob: -15.501931190490723
    5. '
' → logprob: -16.376930236816406
    6. ' ' → logprob: -16.501930236816406
    7. '   ' → logprob: -16.751930236816406
    8. '(A' → logprob: -17.001930236816406
    9. ' (' → logprob: -17.376930236816406
    10. '  ' → logprob: -17.376930236816406

Token 322: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.4740811586380005
    2. '>' → logprob: -0.9740811586380005
    3. ' ' → logprob: -12.599081039428711
    4. ' >
' → logprob: -14.849081039428711
    5. '>
' → logprob: -15.724081039428711
    6. ')' → logprob: -16.47408103942871
    7. ' ' → logprob: -17.59908103942871
    8. '1' → logprob: -17.72408103942871
    9. '
' → logprob: -18.09908103942871
    10. '6' → logprob: -18.22408103942871

Token 323: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.006715370807796717
    2. ' ' → logprob: -5.006715297698975
    3. '   ' → logprob: -18.006715774536133
    4. '  ' → logprob: -18.381715774536133
    5. '10' → logprob: -18.506715774536133
    6. '۹' → logprob: -19.506715774536133
    7. '99' → logprob: -20.006715774536133
    8. '
' → logprob: -20.006715774536133
    9. '９' → logprob: -20.131715774536133
    10. '```' → logprob: -20.256715774536133

Token 324: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '99' → logprob: -19.125001907348633
    4. '۹' → logprob: -19.125001907348633
    5. '09' → logprob: -19.625001907348633
    6. '９' → logprob: -19.875001907348633
    7. '10' → logprob: -20.000001907348633
    8. '९' → logprob: -20.000001907348633
    9. '```' → logprob: -20.375001907348633
    10. '
' → logprob: -20.500001907348633

Token 325: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0019300628919154406
    2. 'or' → logprob: -6.251930236816406
    3. ' ' → logprob: -13.501930236816406
    4. '	or' → logprob: -17.501930236816406
    5. ' ' → logprob: -19.251930236816406
    6. '0' → logprob: -19.751930236816406
    7. ' b' → logprob: -20.251930236816406
    8. '```' → logprob: -20.751930236816406
    9. 'orm' → logprob: -21.251930236816406
    10. ' orm' → logprob: -21.251930236816406

Token 326: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.31326448917388916
    2. 'B' → logprob: -1.3132644891738892
    3. ' ' → logprob: -13.438264846801758
    4. 'b' → logprob: -13.938264846801758
    5. ' ' → logprob: -15.438264846801758
    6. ' b' → logprob: -16.438264846801758
    7. '	B' → logprob: -17.188264846801758
    8. ' (' → logprob: -18.188264846801758
    9. '(' → logprob: -18.313264846801758
    10. '   ' → logprob: -18.500764846801758

Token 327: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.25193095207214355
    2. '>' → logprob: -1.5019309520721436
    3. ' ' → logprob: -13.626931190490723
    4. ' >
' → logprob: -16.251930236816406
    5. ' ' → logprob: -16.251930236816406
    6. '">' → logprob: -16.501930236816406
    7. '<|end|>' → logprob: -16.626930236816406
    8. '>
' → logprob: -17.251930236816406
    9. '(">' → logprob: -17.251930236816406
    10. '10' → logprob: -17.376930236816406

Token 328: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.00360019039362669
    2. ' ' → logprob: -5.628600120544434
    3. '  ' → logprob: -17.75360107421875
    4. '<|end|>' → logprob: -17.87860107421875
    5. '۹' → logprob: -18.00360107421875
    6. '10' → logprob: -18.50360107421875
    7. '=' → logprob: -19.00360107421875
    8. '09' → logprob: -19.12860107421875
    9. '```' → logprob: -19.12860107421875
    10. '९' → logprob: -19.44110107421875

Token 329: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '۹' → logprob: -19.25
    4. '९' → logprob: -19.5
    5. '９' → logprob: -19.875
    6. '৯' → logprob: -20.875
    7. '```' → logprob: -21.0
    8. '  ' → logprob: -21.625
    9. '   ' → logprob: -21.75
    10. '99' → logprob: -21.875

Token 330: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10023471713066101
    2. ':
' → logprob: -2.3502347469329834
    3. ':
' → logprob: -10.850234985351562
    4. ' :' → logprob: -12.225234985351562
    5. ' :
' → logprob: -13.100234985351562
    6. ' or' → logprob: -14.350234985351562
    7. 'print' → logprob: -14.850234985351562
    8. ':

' → logprob: -14.850234985351562
    9. '):
' → logprob: -15.975234985351562
    10. '   ' → logprob: -16.225234985351562

Token 331: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04679318517446518
    2. 'print' → logprob: -3.421793222427368
    3. ' print' → logprob: -4.546792984008789
    4. '	print' → logprob: -6.296792984008789
    5. '    
' → logprob: -7.796792984008789
    6. ' ' → logprob: -9.796792984008789
    7. '
' → logprob: -10.046792984008789
    8. '   ' → logprob: -10.671792984008789
    9. '    ' → logprob: -11.046792984008789
    10. '	
' → logprob: -11.546792984008789

Token 332: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.15693196654319763
    2. ' print' → logprob: -2.1569318771362305
    3. '   ' → logprob: -3.5319318771362305
    4. '    
' → logprob: -8.65693187713623
    5. '    ' → logprob: -10.65693187713623
    6. 'pass' → logprob: -10.78193187713623
    7. ' ' → logprob: -10.78193187713623
    8. '
' → logprob: -10.78193187713623
    9. '	print' → logprob: -10.90693187713623
    10. ' pass' → logprob: -11.90693187713623

Token 333: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003645442193374038
    2. 'exit' → logprob: -8.750364303588867
    3. 'pass' → logprob: -9.000364303588867
    4. ' print' → logprob: -9.750364303588867
    5. 'raise' → logprob: -11.750364303588867
    6. '   ' → logprob: -12.125364303588867
    7. 'prin' → logprob: -12.500364303588867
    8. 'pr' → logprob: -12.625364303588867
    9. '#' → logprob: -13.875364303588867
    10. '    
' → logprob: -14.375364303588867

Token 334: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.15079855918884277
    2. 'icher' → logprob: -2.0257985591888428
    3. 'f' → logprob: -5.900798797607422
    4. 'fic' → logprob: -6.150798797607422
    5. 'ichage' → logprob: -6.525798797607422
    6. '   ' → logprob: -7.025798797607422
    7. 'ich' → logprob: -8.025798797607422
    8. 'ic' → logprob: -8.650798797607422
    9. '#' → logprob: -8.900798797607422
    10. 'fer' → logprob: -10.150798797607422

Token 335: ' -' (ID: 533)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0005650650127790868
    2. '"' → logprob: -8.125565528869629
    3. '(' → logprob: -8.375565528869629
    4. '('' → logprob: -11.125565528869629
    5. '"La' → logprob: -12.125565528869629
    6. '(
' → logprob: -12.750565528869629
    7. ' ("' → logprob: -13.250565528869629
    8. 'nt' → logprob: -13.375565528869629
    9. '("\' → logprob: -13.375565528869629
    10. 'n' → logprob: -13.875565528869629

Token 336: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012548735365271568
    2. '"' → logprob: -4.637548923492432
    3. '-' → logprob: -7.262548923492432
    4. 'er' → logprob: -7.637548923492432
    5. ' ' → logprob: -8.262548446655273
    6. ' "' → logprob: -8.262548446655273
    7. 'e' → logprob: -8.762548446655273
    8. ''' → logprob: -9.012548446655273
    9. '("' → logprob: -9.262548446655273
    10. '2' → logprob: -9.325048446655273

Token 337: ' à' (ID: 1221)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5783317685127258
    2. '   ' → logprob: -0.8283317685127258
    3. '
' → logprob: -6.07833194732666
    4. ' print' → logprob: -9.70333194732666
    5. '```' → logprob: -11.45333194732666
    6. '    
' → logprob: -11.57833194732666
    7. ')
' → logprob: -11.82833194732666
    8. '	print' → logprob: -13.20333194732666
    9. '
' → logprob: -13.32833194732666
    10. ')' → logprob: -13.45333194732666

Token 338: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6924746036529541
    2. 'la' → logprob: -0.8174746036529541
    3. ' la' → logprob: -2.942474603652954
    4. ' l' → logprob: -5.817474365234375
    5. '   ' → logprob: -7.442474365234375
    6. 'print' → logprob: -7.692474365234375
    7. 'a' → logprob: -8.692474365234375
    8. 'lac' → logprob: -8.692474365234375
    9. '1' → logprob: -9.067474365234375
    10. '_la' → logprob: -9.317474365234375

Token 339: ''écran' (ID: 147901)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3527705669403076
    2. 'print' → logprob: -1.3527705669403076
    3. ''écran' → logprob: -4.227770805358887
    4. 'é' → logprob: -4.477770805358887
    5. 'e' → logprob: -5.852770805358887
    6. 'im' → logprob: -6.102770805358887
    7. 'output' → logprob: -6.852770805358887
    8. 'console' → logprob: -6.852770805358887
    9. 'screen' → logprob: -7.477770805358887
    10. 'user' → logprob: -7.852770805358887

Token 340: ' pour' (ID: 1930)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2034735381603241
    2. '   ' → logprob: -1.7034735679626465
    3. '
' → logprob: -6.2034735679626465
    4. ' print' → logprob: -10.578473091125488
    5. '    
' → logprob: -11.953473091125488
    6. '```' → logprob: -12.953473091125488
    7. '
' → logprob: -14.578473091125488
    8. '	print' → logprob: -15.328473091125488
    9. '  
' → logprob: -15.703473091125488
    10. '  ' → logprob: -15.953473091125488

Token 341: ' ind' (ID: 1383)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.33320215344429016
    2. ' ind' → logprob: -1.3332021236419678
    3. ' signal' → logprob: -4.833202362060547
    4. 'signal' → logprob: -5.958202362060547
    5. 'print' → logprob: -6.083202362060547
    6. 'indi' → logprob: -6.333202362060547
    7. 'sign' → logprob: -6.458202362060547
    8. 'er' → logprob: -7.458202362060547
    9. ' indique' → logprob: -7.958202362060547
    10. '   ' → logprob: -8.208202362060547

Token 342: 'iquer' (ID: 63028)
  Prédit: 'iquer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iquer' → logprob: -0.0006459566066041589
    2. 'ique' → logprob: -7.875646114349365
    3. 'ication' → logprob: -9.000645637512207
    4. 'iqu' → logprob: -9.750645637512207
    5. 'iquant' → logprob: -10.625645637512207
    6. 'ex' → logprob: -11.375645637512207
    7. 'ic' → logprob: -11.500645637512207
    8. 'iqué' → logprob: -11.500645637512207
    9. 'er' → logprob: -11.750645637512207
    10. 'iq' → logprob: -11.875645637512207

Token 343: ' une' (ID: 2463)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.09175671637058258
    2. ' que' → logprob: -3.341756820678711
    3. ' -' → logprob: -3.841756820678711
    4. ' la' → logprob: -4.591756820678711
    5. ' une' → logprob: -5.091756820678711
    6. 'que' → logprob: -5.591756820678711
    7. 'une' → logprob: -5.716756820678711
    8. '-l' → logprob: -5.841756820678711
    9. 'l' → logprob: -6.716756820678711
    10. ' ' → logprob: -7.216756820678711

Token 344: ' erreur' (ID: 102885)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.4188147783279419
    2. ' erreur' → logprob: -1.293814778327942
    3. 'entrée' → logprob: -3.1688146591186523
    4. 'val' → logprob: -3.7938146591186523
    5. 'invalid' → logprob: -6.543814659118652
    6. 'Erreur' → logprob: -8.418814659118652
    7. ' valeur' → logprob: -8.418814659118652
    8. 'ré' → logprob: -8.543814659118652
    9. 's' → logprob: -8.668814659118652
    10. 'entr' → logprob: -8.668814659118652

Token 345: ' ou' (ID: 2031)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11315301060676575
    2. 'print' → logprob: -2.3631529808044434
    3. '
' → logprob: -4.363152980804443
    4. ' print' → logprob: -9.238153457641602
    5. '    
' → logprob: -10.988153457641602
    6. '```' → logprob: -12.488153457641602
    7. '  ' → logprob: -13.488153457641602
    8. '	print' → logprob: -13.738153457641602
    9. '
' → logprob: -13.863153457641602
    10. '  
' → logprob: -14.488153457641602

Token 346: ' des' (ID: 731)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.8323453068733215
    2. 'une' → logprob: -1.0823452472686768
    3. 'invalid' → logprob: -2.7073452472686768
    4. ' invalid' → logprob: -3.7073452472686768
    5. 'er' → logprob: -4.207345485687256
    6. ' signal' → logprob: -4.457345485687256
    7. ' inval' → logprob: -4.457345485687256
    8. ' continuer' → logprob: -4.582345485687256
    9. ' un' → logprob: -4.707345485687256
    10. 'contin' → logprob: -5.082345485687256

Token 347: ' entr' (ID: 7072)
  Prédit: ' valeurs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeurs' → logprob: -0.45562368631362915
    2. ' données' → logprob: -1.8306236267089844
    3. 'val' → logprob: -2.4556236267089844
    4. ' entr' → logprob: -3.2056236267089844
    5. ' inputs' → logprob: -3.9556236267089844
    6. ' val' → logprob: -4.205623626708984
    7. 'entrée' → logprob: -4.705623626708984
    8. 'entr' → logprob: -4.705623626708984
    9. ' résultats' → logprob: -4.955623626708984
    10. ' conditions' → logprob: -5.330623626708984

Token 348: 'ées' (ID: 5161)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.005923227872699499
    2. 'rée' → logprob: -5.630923271179199
    3. 'er' → logprob: -6.505923271179199
    4. 'ées' → logprob: -7.380923271179199
    5. 'or' → logprob: -9.6309232711792
    6. 'r' → logprob: -10.5059232711792
    7. 'é' → logprob: -10.5059232711792
    8. 'ee' → logprob: -10.6309232711792
    9. 'érée' → logprob: -11.6309232711792
    10. 'e' → logprob: -11.6309232711792

Token 349: ' invalid' (ID: 15796)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.17814229428768158
    2. '-' → logprob: -1.9281423091888428
    3. ' -' → logprob: -5.053142070770264
    4. ' print' → logprob: -5.428142070770264
    5. '(-' → logprob: -5.678142070770264
    6. '   ' → logprob: -5.803142070770264
    7. '
' → logprob: -8.178142547607422
    8. '(print' → logprob: -9.803142547607422
    9. '(' → logprob: -10.178142547607422
    10. '```' → logprob: -10.428142547607422

Token 350: 'es' (ID: 268)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.12115803360939026
    2. 'é' → logprob: -2.8711581230163574
    3. 'e' → logprob: -3.4961581230163574
    4. 'ie' → logprob: -3.9961581230163574
    5. 'ité' → logprob: -5.996158123016357
    6. 'er' → logprob: -6.246158123016357
    7. 'ee' → logprob: -6.496158123016357
    8. 'ite' → logprob: -7.121158123016357
    9. 'al' → logprob: -7.371158123016357
    10. 'ées' → logprob: -7.746158123016357

Token 351: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38753893971443176
    2. 'print' → logprob: -1.1375389099121094
    3. '
' → logprob: -7.512538909912109
    4. ' print' → logprob: -9.38753890991211
    5. '    
' → logprob: -11.51253890991211
    6. '```' → logprob: -11.51253890991211
    7. '	print' → logprob: -12.13753890991211
    8. ':
' → logprob: -12.51253890991211
    9. '-' → logprob: -13.01253890991211
    10. '  ' → logprob: -13.76253890991211

Token 352: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48313257098197937
    2. 'print' → logprob: -0.9831326007843018
    3. '
' → logprob: -4.733132362365723
    4. ' print' → logprob: -9.233132362365723
    5. '    
' → logprob: -9.483132362365723
    6. '```' → logprob: -10.983132362365723
    7. '
' → logprob: -12.233132362365723
    8. '	print' → logprob: -12.358132362365723
    9. '  ' → logprob: -12.608132362365723
    10. '  
' → logprob: -12.983132362365723

Token 353: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0008146316395141184
    2. '   ' → logprob: -7.500814437866211
    3. ' print' → logprob: -8.250814437866211
    4. '-' → logprob: -15.250814437866211
    5. '	print' → logprob: -15.750814437866211
    6. '```' → logprob: -16.50081443786621
    7. '    
' → logprob: -17.00081443786621
    8. ' ' → logprob: -17.37581443786621
    9. '
' → logprob: -17.75081443786621
    10. '  ' → logprob: -18.12581443786621

Token 354: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.0013336940901353955
    2. '(' → logprob: -6.626333713531494
    3. '("-' → logprob: -12.251333236694336
    4. '-' → logprob: -13.501333236694336
    5. '(
' → logprob: -13.751333236694336
    6. ' (-' → logprob: -15.126333236694336
    7. '("' → logprob: -15.876333236694336
    8. '('-' → logprob: -16.751333236694336
    9. '()' → logprob: -17.251333236694336
    10. '('' → logprob: -18.251333236694336

Token 355: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '   ' → logprob: -19.25
    4. '```' → logprob: -19.5
    5. '१' → logprob: -20.625
    6. '  ' → logprob: -20.8125
    7. '１' → logprob: -20.8125
    8. ')' → logprob: -20.9375
    9. '' → logprob: -21.125
    10. '۱' → logprob: -21.125

Token 356: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ')
' → logprob: -14.625000953674316
    3. ' )' → logprob: -16.875
    4. '))' → logprob: -18.0
    5. '')' → logprob: -18.375
    6. '")' → logprob: -18.625
    7. ')`' → logprob: -19.25
    8. '),' → logprob: -19.375
    9. ')")' → logprob: -19.625
    10. '`)' → logprob: -20.625

Token 357: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.00011534435179783031
    2. 'elif' → logprob: -9.125115394592285
    3. ' else' → logprob: -12.375115394592285
    4. '<|end|>' → logprob: -14.375115394592285
    5. '
' → logprob: -14.500115394592285
    6. '```' → logprob: -14.625115394592285
    7. ')' → logprob: -16.12511444091797
    8. '#else' → logprob: -16.25011444091797
    9. '}else' → logprob: -16.62511444091797
    10. 'elser' → logprob: -16.75011444091797

Token 358: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004118531011044979
    2. ':
' → logprob: -5.5041184425354
    3. ' :' → logprob: -10.504118919372559
    4. '   ' → logprob: -11.504118919372559
    5. ' :
' → logprob: -13.129118919372559
    6. ':
' → logprob: -15.129118919372559
    7. '):' → logprob: -16.379117965698242
    8. ':

' → logprob: -16.379117965698242
    9. ',' → logprob: -17.129117965698242
    10. '):
' → logprob: -17.254117965698242

Token 359: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008713730610907078
    2. 'print' → logprob: -4.758713722229004
    3. ' print' → logprob: -9.508713722229004
    4. '    
' → logprob: -10.758713722229004
    5. '   ' → logprob: -13.758713722229004
    6. '	print' → logprob: -14.633713722229004
    7. '    ' → logprob: -15.008713722229004
    8. '```' → logprob: -15.008713722229004
    9. '
' → logprob: -15.133713722229004
    10. '       ' → logprob: -15.258713722229004

Token 360: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0006444069440476596
    2. '   ' → logprob: -7.875644207000732
    3. ' print' → logprob: -8.37564468383789
    4. 'result' → logprob: -11.00064468383789
    5. 'sum' → logprob: -12.62564468383789
    6. '    
' → logprob: -12.62564468383789
    7. 'C' → logprob: -12.75064468383789
    8. 'prin' → logprob: -13.12564468383789
    9. 'pr' → logprob: -13.37564468383789
    10. '
' → logprob: -14.00064468383789

Token 361: ' Cette' (ID: 27383)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001142718712799251
    2. '   ' → logprob: -7.626142501831055
    3. 'result' → logprob: -8.001142501831055
    4. ' print' → logprob: -8.626142501831055
    5. 's' → logprob: -10.251142501831055
    6. 'C' → logprob: -10.251142501831055
    7. 'sum' → logprob: -10.876142501831055
    8. 'pr' → logprob: -11.126142501831055
    9. 'prin' → logprob: -11.376142501831055
    10. '    
' → logprob: -11.876142501831055

Token 362: ' partie' (ID: 22139)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.46524056792259216
    2. ' print' → logprob: -1.5902405977249146
    3. ':' → logprob: -1.8402405977249146
    4. '   ' → logprob: -4.965240478515625
    5. ':
' → logprob: -7.215240478515625
    6. 'result' → logprob: -7.965240478515625
    7. ' :' → logprob: -8.715240478515625
    8. ' result' → logprob: -8.840240478515625
    9. ' ' → logprob: -8.965240478515625
    10. '#' → logprob: -9.090240478515625

Token 363: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023168133571743965
    2. '   ' → logprob: -4.398168087005615
    3. ':
' → logprob: -4.648168087005615
    4. ' :' → logprob: -7.023168087005615
    5. 'print' → logprob: -9.648168563842773
    6. ' :
' → logprob: -10.398168563842773
    7. ' print' → logprob: -11.023168563842773
    8. '    ' → logprob: -11.523168563842773
    9. '    
' → logprob: -13.273168563842773
    10. ':

' → logprob: -13.523168563842773

Token 364: ' code' (ID: 3490)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.00540166487917304
    2. ' code' → logprob: -5.505401611328125
    3. 'print' → logprob: -7.380401611328125
    4. 'le' → logprob: -8.005401611328125
    5. 'la' → logprob: -9.130401611328125
    6. '#' → logprob: -9.505401611328125
    7. 'l' → logprob: -10.130401611328125
    8. 'c' → logprob: -10.130401611328125
    9. 'cod' → logprob: -10.630401611328125
    10. '代码' → logprob: -11.380401611328125

Token 365: ' n' (ID: 297)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07511337101459503
    2. '   ' → logprob: -2.700113296508789
    3. ':
' → logprob: -5.450113296508789
    4. ' :' → logprob: -7.700113296508789
    5. '    ' → logprob: -8.950113296508789
    6. 'print' → logprob: -9.200113296508789
    7. '    
' → logprob: -9.950113296508789
    8. '       ' → logprob: -9.950113296508789
    9. ' print' → logprob: -10.325113296508789
    10. ' :
' → logprob: -11.075113296508789

Token 366: ''est' (ID: 6616)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05099175497889519
    2. 'print' → logprob: -3.9259917736053467
    3. '#' → logprob: -4.300991535186768
    4. ''est' → logprob: -4.925991535186768
    5. ' print' → logprob: -5.800991535186768
    6. '```' → logprob: -6.925991535186768
    7. ''' → logprob: -7.300991535186768
    8. 'ous' → logprob: -7.425991535186768
    9. '    ' → logprob: -7.550991535186768
    10. 'e' → logprob: -7.675991535186768

Token 367: ' exécut' (ID: 165350)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.01926518604159355
    2. ' pas' → logprob: -4.769265174865723
    3. 'execut' → logprob: -5.269265174865723
    4. 'else' → logprob: -6.144265174865723
    5. 'ex' → logprob: -6.269265174865723
    6. '#' → logprob: -7.894265174865723
    7. ' exécut' → logprob: -7.894265174865723
    8. 'qu' → logprob: -9.144265174865723
    9. 'Pas' → logprob: -9.644265174865723
    10. '   ' → logprob: -10.394265174865723

Token 368: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.3511998653411865
    2. 'e' → logprob: -1.4761998653411865
    3. 'pas' → logprob: -3.3511998653411865
    4. 'é' → logprob: -3.9761998653411865
    5. ' pas' → logprob: -5.351200103759766
    6. 'er' → logprob: -6.226200103759766
    7. 'era' → logprob: -6.226200103759766
    8. '   ' → logprob: -6.476200103759766
    9. 'ed' → logprob: -6.726200103759766
    10. 'ra' → logprob: -6.976200103759766

Token 369: ' que' (ID: 661)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0027786085847765207
    2. 'if' → logprob: -7.25277853012085
    3. '    
' → logprob: -7.62777853012085
    4. ' if' → logprob: -7.62777853012085
    5. ':' → logprob: -7.75277853012085
    6. ' seulement' → logprob: -9.127779006958008
    7. ' uniquement' → logprob: -9.252779006958008
    8. '   ' → logprob: -9.502779006958008
    9. '	if' → logprob: -9.627779006958008
    10. ' only' → logprob: -10.002779006958008

Token 370: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34453773498535156
    2. ' si' → logprob: -1.8445377349853516
    3. 'si' → logprob: -2.2195377349853516
    4. 'if' → logprob: -3.8445377349853516
    5. ' if' → logprob: -6.469537734985352
    6. 'dans' → logprob: -7.219537734985352
    7. ' dans' → logprob: -8.219537734985352
    8. '  ' → logprob: -8.969537734985352
    9. '    
' → logprob: -8.969537734985352
    10. 'l' → logprob: -9.219537734985352

Token 371: ' toutes' (ID: 17502)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.12773889303207397
    2. ' A' → logprob: -2.3777389526367188
    3. 'not' → logprob: -4.502738952636719
    4. '"' → logprob: -5.377738952636719
    5. ' not' → logprob: -5.377738952636719
    6. ' ' → logprob: -6.377738952636719
    7. 'len' → logprob: -6.627738952636719
    8. ' (' → logprob: -7.377738952636719
    9. '(' → logprob: -7.377738952636719
    10. '0' → logprob: -7.502738952636719

Token 372: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.31504198908805847
    2. 'les' → logprob: -1.3150420188903809
    3. ' ' → logprob: -7.315042018890381
    4. '   ' → logprob: -7.315042018890381
    5. 'conditions' → logprob: -8.565041542053223
    6. ' conditions' → logprob: -8.940041542053223
    7. '    ' → logprob: -10.315041542053223
    8. ' ces' → logprob: -10.565041542053223
    9. '  ' → logprob: -10.815041542053223
    10. 'l' → logprob: -10.940041542053223

Token 373: ' conditions' (ID: 6409)
  Prédit: 'conditions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conditions' → logprob: -0.10066057741641998
    2. ' conditions' → logprob: -2.350660562515259
    3. 'cond' → logprob: -8.47566032409668
    4. 'condition' → logprob: -8.72566032409668
    5. '   ' → logprob: -10.10066032409668
    6. ' ' → logprob: -10.72566032409668
    7. '条件' → logprob: -12.35066032409668
    8. ' condiciones' → logprob: -13.10066032409668
    9. '_conditions' → logprob: -13.10066032409668
    10. '    ' → logprob: -13.22566032409668

Token 374: ' ci' (ID: 7405)
  Prédit: ' sont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sont' → logprob: -0.712577760219574
    2. 's' → logprob: -1.2125778198242188
    3. '   ' → logprob: -1.8375778198242188
    4. ' are' → logprob: -3.8375778198242188
    5. 'ont' → logprob: -4.837577819824219
    6. 'v' → logprob: -5.837577819824219
    7. ' suivantes' → logprob: -5.837577819824219
    8. '  ' → logprob: -6.087577819824219
    9. 'are' → logprob: -6.337577819824219
    10. ' ' → logprob: -6.462577819824219

Token 375: '-dessus' (ID: 74812)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1676291227340698
    2. 'nées' → logprob: -1.2926291227340698
    3. 'es' → logprob: -2.2926292419433594
    4. 'ont' → logprob: -2.4176292419433594
    5. '-ap' → logprob: -3.2926292419433594
    6. 'dev' → logprob: -3.4176292419433594
    7. 'nelles' → logprob: -3.7926292419433594
    8. '-dessus' → logprob: -4.042629241943359
    9. 'n' → logprob: -4.167629241943359
    10. '#' → logprob: -4.417629241943359

Token 376: ' sont' (ID: 5242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3511864244937897
    2. ' sont' → logprob: -1.7261863946914673
    3. '   ' → logprob: -2.226186513900757
    4. 'ont' → logprob: -4.851186275482178
    5. ' are' → logprob: -6.851186275482178
    6. ' ont' → logprob: -8.351186752319336
    7. ' ne' → logprob: -8.351186752319336
    8. 'ne' → logprob: -8.851186752319336
    9. 'éta' → logprob: -9.226186752319336
    10. '  ' → logprob: -9.351186752319336

Token 377: ' fa' (ID: 2229)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.8648494482040405
    2. 'False' → logprob: -1.8648494482040405
    3. 'rem' → logprob: -1.9898494482040405
    4. 'v' → logprob: -1.9898494482040405
    5. 'fa' → logprob: -2.23984956741333
    6. 'respect' → logprob: -3.98984956741333
    7. ' False' → logprob: -4.86484956741333
    8. 'false' → logprob: -5.23984956741333
    9. '   ' → logprob: -5.48984956741333
    10. 's' → logprob: -5.48984956741333

Token 378: 'usses' (ID: 93324)
  Prédit: 'ses'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ses' → logprob: -0.7122594714164734
    2. 's' → logprob: -1.5872595310211182
    3. 'res' → logprob: -1.9622595310211182
    4. 'tes' → logprob: -2.212259531021118
    5. 'nes' → logprob: -4.587259292602539
    6. 'lles' → logprob: -4.712259292602539
    7. 'n' → logprob: -5.212259292602539
    8. 'sses' → logprob: -5.337259292602539
    9. 'stes' → logprob: -5.462259292602539
    10. 'se' → logprob: -5.587259292602539

Token 379: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07176162302494049
    2. ':' → logprob: -2.6967616081237793
    3. '    
' → logprob: -6.946761608123779
    4. ':
' → logprob: -8.071762084960938
    5. 'print' → logprob: -8.946762084960938
    6. '    ' → logprob: -9.321762084960938
    7. '
' → logprob: -9.446762084960938
    8. '       ' → logprob: -9.946762084960938
    9. '   ' → logprob: -10.321762084960938
    10. ' print' → logprob: -10.446762084960938

Token 380: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001705246395431459
    2. '    ' → logprob: -9.500170707702637
    3. '    
' → logprob: -9.625170707702637
    4. '   ' → logprob: -10.750170707702637
    5. 'print' → logprob: -13.000170707702637
    6. '   ' → logprob: -13.375170707702637
    7. '       ' → logprob: -13.875170707702637
    8. '	   ' → logprob: -14.125170707702637
    9. '	' → logprob: -14.750170707702637
    10. '  ' → logprob: -14.875170707702637

Token 381: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01918601430952549
    2. 'print' → logprob: -4.269186019897461
    3. '    
' → logprob: -5.894186019897461
    4. ' print' → logprob: -6.144186019897461
    5. '    ' → logprob: -9.769186019897461
    6. '   ' → logprob: -11.019186019897461
    7. '	print' → logprob: -12.394186019897461
    8. '   
' → logprob: -12.519186019897461
    9. '    
' → logprob: -12.519186019897461
    10. '       ' → logprob: -12.519186019897461

Token 382: ' c' (ID: 274)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07813773304224014
    2. 'print' → logprob: -2.8281376361846924
    3. ' print' → logprob: -4.3281378746032715
    4. '    
' → logprob: -5.9531378746032715
    5. '    ' → logprob: -9.578137397766113
    6. 'result' → logprob: -9.828137397766113
    7. '   ' → logprob: -10.828137397766113
    8. 'sum' → logprob: -11.078137397766113
    9. 'C' → logprob: -11.453137397766113
    10. '
' → logprob: -11.453137397766113

Token 383: ''est' (ID: 6616)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01694720797240734
    2. '#' → logprob: -5.016947269439697
    3. 'ont' → logprob: -5.766947269439697
    4. 'print' → logprob: -6.141947269439697
    5. 'al' → logprob: -6.266947269439697
    6. '  ' → logprob: -7.141947269439697
    7. ' ' → logprob: -7.391947269439697
    8. 'on' → logprob: -7.516947269439697
    9. '    ' → logprob: -9.016946792602539
    10. ' print' → logprob: -9.391946792602539

Token 384: '-à' (ID: 56297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024295393377542496
    2. 'à' → logprob: -4.524295330047607
    3. '-à' → logprob: -4.649295330047607
    4. '#' → logprob: -6.649295330047607
    5. '    ' → logprob: -7.149295330047607
    6. ' à' → logprob: -7.774295330047607
    7. '  ' → logprob: -8.024295806884766
    8. '-' → logprob: -8.649295806884766
    9. 'À' → logprob: -9.274295806884766
    10. 'a' → logprob: -9.774295806884766

Token 385: '-dire' (ID: 76064)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.887350857257843
    2. 'à' → logprob: -1.0123507976531982
    3. 'a' → logprob: -3.0123507976531982
    4. '   ' → logprob: -3.1373507976531982
    5. '-à' → logprob: -3.1373507976531982
    6. 'd' → logprob: -3.2623507976531982
    7. 'l' → logprob: -4.137351036071777
    8. 'la' → logprob: -4.762351036071777
    9. '#' → logprob: -5.137351036071777
    10. '-dire' → logprob: -5.387351036071777

Token 386: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00020067949662916362
    2. '    
' → logprob: -9.250200271606445
    3. '    ' → logprob: -9.500200271606445
    4. 'print' → logprob: -10.875200271606445
    5. '   ' → logprob: -12.375200271606445
    6. ':' → logprob: -13.375200271606445
    7. '       ' → logprob: -13.750200271606445
    8. '  ' → logprob: -13.750200271606445
    9. ' print' → logprob: -14.500200271606445
    10. '   ' → logprob: -14.875200271606445

Token 387: ' ni' (ID: 2565)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.1177201122045517
    2. ' A' → logprob: -2.742720127105713
    3. 'print' → logprob: -3.242720127105713
    4. '   ' → logprob: -6.117720127105713
    5. '0' → logprob: -6.492720127105713
    6. ' print' → logprob: -6.617720127105713
    7. ' ' → logprob: -6.742720127105713
    8. ' (' → logprob: -7.867720127105713
    9. 'a' → logprob: -8.367719650268555
    10. '(A' → logprob: -8.742719650268555

Token 388: ' '' (ID: 461)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.33716052770614624
    2. '"' → logprob: -1.712160587310791
    3. '"A' → logprob: -3.087160587310791
    4. 'a' → logprob: -3.337160587310791
    5. ' A' → logprob: -4.587160587310791
    6. '0' → logprob: -5.087160587310791
    7. ' "' → logprob: -5.837160587310791
    8. '"a' → logprob: -6.462160587310791
    9. '("' → logprob: -6.962160587310791
    10. ' a' → logprob: -7.087160587310791

Token 389: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5450539588928223
    2. '"' → logprob: -0.9200539588928223
    3. '"a' → logprob: -4.670053958892822
    4. 'A' → logprob: -5.295053958892822
    5. ''' → logprob: -5.670053958892822
    6. '0' → logprob: -6.295053958892822
    7. '"A' → logprob: -6.420053958892822
    8. ''a' → logprob: -8.295053482055664
    9. ''A' → logprob: -9.795053482055664
    10. ' a' → logprob: -11.295053482055664

Token 390: ''' (ID: 6)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7797467112541199
    2. ' nor' → logprob: -0.9047467112541199
    3. '==' → logprob: -3.2797467708587646
    4. ' or' → logprob: -3.4047467708587646
    5. ' ni' → logprob: -4.2797465324401855
    6. ' and' → logprob: -4.5297465324401855
    7. '"' → logprob: -4.7797465324401855
    8. ' ' → logprob: -4.9047465324401855
    9. 'and' → logprob: -5.0297465324401855
    10. '   ' → logprob: -5.4047465324401855

Token 391: ' ni' (ID: 2565)
  Prédit: ' ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ni' → logprob: -0.6658443808555603
    2. 'ni' → logprob: -1.415844440460205
    3. ' nor' → logprob: -1.540844440460205
    4. 'nor' → logprob: -3.665844440460205
    5. '==' → logprob: -6.915844440460205
    6. '   ' → logprob: -7.040844440460205
    7. 'and' → logprob: -7.790844440460205
    8. ',' → logprob: -7.915844440460205
    9. ' ==' → logprob: -8.790843963623047
    10. 'print' → logprob: -8.915843963623047

Token 392: ' '' (ID: 461)
  Prédit: ''b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''b' → logprob: -0.004002176690846682
    2. 'b' → logprob: -6.004002094268799
    3. ' '' → logprob: -6.754002094268799
    4. ''' → logprob: -8.129002571105957
    5. ''n' → logprob: -10.504002571105957
    6. '   ' → logprob: -12.004002571105957
    7. ''s' → logprob: -12.254002571105957
    8. ''y' → logprob: -12.379002571105957
    9. ''en' → logprob: -13.004002571105957
    10. ''l' → logprob: -13.004002571105957

Token 393: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -8.061054359131958e-06
    2. ''b' → logprob: -11.750007629394531
    3. ' b' → logprob: -16.12500762939453
    4. ''' → logprob: -18.75000762939453
    5. '"' → logprob: -19.75000762939453
    6. '   ' → logprob: -20.50000762939453
    7. '	b' → logprob: -21.75000762939453
    8. ' ' → logprob: -22.37500762939453
    9. '  ' → logprob: -23.00000762939453
    10. ' '' → logprob: -23.12500762939453

Token 394: ''' (ID: 6)
  Prédit: 'cont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cont' → logprob: -1.4482673406600952
    2. '"' → logprob: -1.5732673406600952
    3. 'print' → logprob: -1.9482673406600952
    4. ''' → logprob: -2.4482674598693848
    5. ' in' → logprob: -2.6982674598693848
    6. 'in' → logprob: -3.0732674598693848
    7. ' ==' → logprob: -3.9482674598693848
    8. ')' → logprob: -4.073267459869385
    9. '==' → logprob: -4.323267459869385
    10. 'ni' → logprob: -4.448267459869385

Token 395: ' ne' (ID: 453)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -1.0312308073043823
    2. 'cont' → logprob: -1.5312308073043823
    3. ' ==' → logprob: -2.031230926513672
    4. 'print' → logprob: -2.656230926513672
    5. 'in' → logprob: -3.031230926513672
    6. 'contain' → logprob: -3.781230926513672
    7. '=="' → logprob: -3.781230926513672
    8. '=='' → logprob: -4.031230926513672
    9. 'contains' → logprob: -4.156230926513672
    10. ' in' → logprob: -4.281230926513672

Token 396: ' cont' (ID: 836)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4258112609386444
    2. 'contain' → logprob: -1.5508112907409668
    3. 'cont' → logprob: -2.675811290740967
    4. ' contain' → logprob: -3.550811290740967
    5. '0' → logprob: -4.050811290740967
    6. 'contains' → logprob: -4.300811290740967
    7. ' contient' → logprob: -6.050811290740967
    8. ' contains' → logprob: -6.425811290740967
    9. ' "' → logprob: -7.425811290740967
    10. ''' → logprob: -7.675811290740967

Token 397: 'iennent' (ID: 53290)
  Prédit: 'iennent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iennent' → logprob: -0.06362905353307724
    2. 'ient' → logprob: -2.938629150390625
    3. 'ien' → logprob: -5.563629150390625
    4. 'ain' → logprob: -6.438629150390625
    5. 'aient' → logprob: -7.438629150390625
    6. 'inent' → logprob: -7.688629150390625
    7. 'ains' → logprob: -7.688629150390625
    8. 'ont' → logprob: -7.938629150390625
    9. 'ent' → logprob: -8.563629150390625
    10. '"' → logprob: -8.938629150390625

Token 398: ' le' (ID: 505)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0027341435197740793
    2. 'le' → logprob: -6.752734184265137
    3. 'de' → logprob: -7.252734184265137
    4. ''' → logprob: -8.127734184265137
    5. '0' → logprob: -8.377734184265137
    6. ' "' → logprob: -8.377734184265137
    7. 'un' → logprob: -10.377734184265137
    8. ' de' → logprob: -10.627734184265137
    9. 'des' → logprob: -10.877734184265137
    10. ' ' → logprob: -12.252734184265137

Token 399: ' chiffre' (ID: 107420)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.03264009952545166
    2. 'ch' → logprob: -3.782639980316162
    3. '0' → logprob: -5.032639980316162
    4. '"' → logprob: -6.032639980316162
    5. ' caractère' → logprob: -8.15764045715332
    6. 'digit' → logprob: -10.53264045715332
    7. 'char' → logprob: -10.78264045715332
    8. '#' → logprob: -10.90764045715332
    9. 'c' → logprob: -11.15764045715332
    10. ' chiffre' → logprob: -11.40764045715332

Token 400: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.329466313123703
    2. ''' → logprob: -1.7044663429260254
    3. '1' → logprob: -2.9544663429260254
    4. '0' → logprob: -3.3294663429260254
    5. ' '' → logprob: -5.454466342926025
    6. ' "' → logprob: -5.704466342926025
    7. ' ' → logprob: -5.954466342926025
    8. '9' → logprob: -8.079465866088867
    9. '   ' → logprob: -8.454465866088867
    10. '2' → logprob: -10.329465866088867

Token 401: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002218295820057392
    2. ''' → logprob: -6.752218246459961
    3. '"' → logprob: -6.877218246459961
    4. '1' → logprob: -11.627218246459961
    5. '9' → logprob: -12.877218246459961
    6. ' ' → logprob: -13.127218246459961
    7. '"""' → logprob: -14.877218246459961
    8. '")' → logprob: -15.127218246459961
    9. ' '' → logprob: -15.502218246459961
    10. '')' → logprob: -15.564718246459961

Token 402: '',' (ID: 787)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008263851515948772
    2. ' and' → logprob: -5.008264064788818
    3. ',' → logprob: -7.383264064788818
    4. 'and' → logprob: -8.75826358795166
    5. ')' → logprob: -8.88326358795166
    6. '    ' → logprob: -9.25826358795166
    7. ' or' → logprob: -9.38326358795166
    8. ':' → logprob: -9.50826358795166
    9. ' et' → logprob: -9.50826358795166
    10. '  ' → logprob: -9.50826358795166

Token 403: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003948072553612292
    2. '    ' → logprob: -8.625394821166992
    3. 'print' → logprob: -8.875394821166992
    4. '    
' → logprob: -9.875394821166992
    5. '#' → logprob: -11.500394821166992
    6. '       ' → logprob: -12.250394821166992
    7. ' print' → logprob: -12.250394821166992
    8. '  ' → logprob: -13.625394821166992
    9. ' ' → logprob: -14.625394821166992
    10. '   ' → logprob: -14.750394821166992

Token 404: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00040576665196567774
    2. '#' → logprob: -8.750405311584473
    3. 'print' → logprob: -9.000405311584473
    4. '  ' → logprob: -10.000405311584473
    5. '    ' → logprob: -10.375405311584473
    6. '    
' → logprob: -10.500405311584473
    7. ' print' → logprob: -11.750405311584473
    8. ' ' → logprob: -12.125405311584473
    9. ' #' → logprob: -12.750405311584473
    10. ' que' → logprob: -14.125405311584473

Token 405: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.23712946474552155
    2. ' A' → logprob: -1.6121294498443604
    3. '   ' → logprob: -4.8621296882629395
    4. 'print' → logprob: -6.8621296882629395
    5. ' ' → logprob: -6.9871296882629395
    6. 'a' → logprob: -7.8621296882629395
    7. ' (' → logprob: -7.9871296882629395
    8. '0' → logprob: -8.112129211425781
    9. ' a' → logprob: -8.737129211425781
    10. '  ' → logprob: -8.862129211425781

Token 406: ' et' (ID: 859)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.27499064803123474
    2. ' <=' → logprob: -1.7749906778335571
    3. '+' → logprob: -3.1499905586242676
    4. '>=' → logprob: -4.399990558624268
    5. '<' → logprob: -5.024990558624268
    6. ' +' → logprob: -5.774990558624268
    7. ' >=' → logprob: -6.399990558624268
    8. 'and' → logprob: -6.399990558624268
    9. ' <' → logprob: -6.649990558624268
    10. ' and' → logprob: -7.524990558624268

Token 407: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.16022463142871857
    2. ' B' → logprob: -1.9102246761322021
    3. ' ' → logprob: -15.285224914550781
    4. '   ' → logprob: -15.535224914550781
    5. '  ' → logprob: -16.16022491455078
    6. '	B' → logprob: -18.03522491455078
    7. ' ' → logprob: -20.28522491455078
    8. 'b' → logprob: -20.53522491455078
    9. '    ' → logprob: -21.16022491455078
    10. '
' → logprob: -21.78522491455078

Token 408: ' sont' (ID: 5242)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.5242042541503906
    2. ' <=' → logprob: -1.0242042541503906
    3. '<' → logprob: -4.524204254150391
    4. ' are' → logprob: -4.524204254150391
    5. ' <' → logprob: -4.649204254150391
    6. '#' → logprob: -5.524204254150391
    7. '>=' → logprob: -5.524204254150391
    8. ' sont' → logprob: -5.899204254150391
    9. ' >=' → logprob: -6.524204254150391
    10. '<|end|>' → logprob: -6.649204254150391

Token 409: ' tous' (ID: 10688)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.8125739693641663
    2. ' inf' → logprob: -1.4375739097595215
    3. '<=' → logprob: -1.5625739097595215
    4. '<' → logprob: -2.8125739097595215
    5. ' compris' → logprob: -4.5625739097595215
    6. ' <=' → logprob: -4.6875739097595215
    7. 'all' → logprob: -4.9375739097595215
    8. ' all' → logprob: -4.9375739097595215
    9. 'infer' → logprob: -5.5625739097595215
    10. 't' → logprob: -6.5625739097595215

Token 410: ' les' (ID: 1341)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.043812233954668045
    2. 'les' → logprob: -3.5438122749328613
    3. '   ' → logprob: -4.543812274932861
    4. '#' → logprob: -6.543812274932861
    5. ' deux' → logprob: -7.418812274932861
    6. ' les' → logprob: -7.793812274932861
    7. '<' → logprob: -8.293811798095703
    8. '2' → logprob: -8.543811798095703
    9. '  ' → logprob: -9.168811798095703
    10. '<=' → logprob: -9.543811798095703

Token 411: ' deux' (ID: 10301)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.009766596369445324
    2. 'inf' → logprob: -4.759766578674316
    3. '2' → logprob: -7.634766578674316
    4. 'les' → logprob: -7.634766578674316
    5. ' deux' → logprob: -9.509766578674316
    6. '```' → logprob: -10.259766578674316
    7. '   ' → logprob: -11.259766578674316
    8. '<' → logprob: -11.259766578674316
    9. 'two' → logprob: -11.384766578674316
    10. 'moins' → logprob: -11.759766578674316

Token 412: ' inf' (ID: 5603)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.4175276458263397
    2. 'inf' → logprob: -1.667527675628662
    3. '<' → logprob: -2.292527675628662
    4. ' inf' → logprob: -3.417527675628662
    5. ' <=' → logprob: -4.167527675628662
    6. ' <' → logprob: -7.042527675628662
    7. '>=' → logprob: -7.042527675628662
    8. 'infer' → logprob: -7.667527675628662
    9. '1' → logprob: -8.292527198791504
    10. ' inférieur' → logprob: -8.417527198791504

Token 413: 'érieurs' (ID: 97672)
  Prédit: 'érieurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érieurs' → logprob: -0.08455941081047058
    2. 'érieur' → logprob: -2.584559440612793
    3. 'érieure' → logprob: -5.834559440612793
    4. 'érieures' → logprob: -6.709559440612793
    5. 'é' → logprob: -7.459559440612793
    6. '   ' → logprob: -8.334559440612793
    7. 'er' → logprob: -8.959559440612793
    8. 'éri' → logprob: -9.084559440612793
    9. 'érents' → logprob: -9.084559440612793
    10. 'or' → logprob: -9.334559440612793

Token 414: ' ou' (ID: 2031)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0513397455215454
    2. ' à' → logprob: -1.0513397455215454
    3. 'à' → logprob: -1.9263397455215454
    4. '=' → logprob: -2.176339626312256
    5. '10' → logprob: -3.801339626312256
    6. 'ou' → logprob: -5.176339626312256
    7. '9' → logprob: -5.676339626312256
    8. '  ' → logprob: -6.176339626312256
    9. ' ou' → logprob: -6.426339626312256
    10. '1' → logprob: -6.926339626312256

Token 415: ' ég' (ID: 33150)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5345876812934875
    2. 'égal' → logprob: -1.4095876216888428
    3. ' ég' → logprob: -2.1595876216888428
    4. 'à' → logprob: -3.9095876216888428
    5. ' égal' → logprob: -4.284587860107422
    6. '10' → logprob: -4.784587860107422
    7. 'equal' → logprob: -4.909587860107422
    8. 'ou' → logprob: -6.284587860107422
    9. 'ég' → logprob: -6.909587860107422
    10. 'egal' → logprob: -7.909587860107422

Token 416: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.17120783030986786
    2. 'al' → logprob: -1.9212077856063843
    3. 'als' → logprob: -4.796207904815674
    4. 'ale' → logprob: -6.296207904815674
    5. 'ales' → logprob: -7.921207904815674
    6. '9' → logprob: -9.296207427978516
    7. 'a' → logprob: -9.421207427978516
    8. '```' → logprob: -10.421207427978516
    9. 'à' → logprob: -10.546207427978516
    10. 'uels' → logprob: -10.671207427978516

Token 417: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.6543053388595581
    2. '   ' → logprob: -1.154305338859558
    3. 'à' → logprob: -2.0293054580688477
    4. '=' → logprob: -4.404305458068848
    5. ' to' → logprob: -4.529305458068848
    6. 'to' → logprob: -5.279305458068848
    7. '  ' → logprob: -6.654305458068848
    8. ' ' → logprob: -6.904305458068848
    9. '    ' → logprob: -7.404305458068848
    10. ' a' → logprob: -7.654305458068848

Token 418: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0010328111238777637
    2. ' ' → logprob: -6.876032829284668
    3. '99' → logprob: -17.62603187561035
    4. '   ' → logprob: -18.25103187561035
    5. '10' → logprob: -19.12603187561035
    6. '  ' → logprob: -19.25103187561035
    7. '09' → logprob: -19.56353187561035
    8. '
' → logprob: -19.62603187561035
    9. '	' → logprob: -19.62603187561035
    10. '  
' → logprob: -19.62603187561035

Token 419: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.5597102396423e-05
    2. ' ' → logprob: -10.250035285949707
    3. '99' → logprob: -16.125036239624023
    4. '999' → logprob: -18.500036239624023
    5. '
' → logprob: -18.687536239624023
    6. '９' → logprob: -18.937536239624023
    7. '09' → logprob: -19.125036239624023
    8. '۹' → logprob: -19.187536239624023
    9. '91' → logprob: -19.500036239624023
    10. '```' → logprob: -19.625036239624023

Token 420: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012071734294295311
    2. ':' → logprob: -4.76207160949707
    3. 'print' → logprob: -5.88707160949707
    4. ':
' → logprob: -7.88707160949707
    5. '    
' → logprob: -8.88707160949707
    6. ' print' → logprob: -9.38707160949707
    7. '+' → logprob: -11.13707160949707
    8. '    ' → logprob: -11.51207160949707
    9. '   ' → logprob: -11.51207160949707
    10. '	print' → logprob: -12.01207160949707

Token 421: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038329027593135834
    2. 'print' → logprob: -3.2883291244506836
    3. ' print' → logprob: -8.413329124450684
    4. '    
' → logprob: -10.288329124450684
    5. 'sum' → logprob: -11.413329124450684
    6. 'result' → logprob: -11.663329124450684
    7. '    ' → logprob: -12.913329124450684
    8. '	print' → logprob: -13.663329124450684
    9. '   ' → logprob: -13.788329124450684
    10. '```' → logprob: -13.913329124450684

Token 422: ' #
' (ID: 21888)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11750932782888412
    2. '   ' → logprob: -2.242509365081787
    3. ' print' → logprob: -5.867509365081787
    4. 'result' → logprob: -6.617509365081787
    5. 'sum' → logprob: -8.492508888244629
    6. '    
' → logprob: -8.742508888244629
    7. 's' → logprob: -10.242508888244629
    8. '    ' → logprob: -10.867508888244629
    9. 'c' → logprob: -11.242508888244629
    10. 'C' → logprob: -11.617508888244629

Token 423: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05720358341932297
    2. 'print' → logprob: -2.932203531265259
    3. ' print' → logprob: -6.682203769683838
    4. '    
' → logprob: -7.182203769683838
    5. 'result' → logprob: -8.93220329284668
    6. 'sum' → logprob: -9.80720329284668
    7. '    ' → logprob: -10.18220329284668
    8. '
' → logprob: -11.18220329284668
    9. 's' → logprob: -11.30720329284668
    10. 'c' → logprob: -11.30720329284668

Token 424: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0009350438485853374
    2. 'result' → logprob: -7.375935077667236
    3. '   ' → logprob: -8.750934600830078
    4. 's' → logprob: -9.500934600830078
    5. ' print' → logprob: -10.875934600830078
    6. 'sum' → logprob: -11.375934600830078
    7. 'C' → logprob: -11.750934600830078
    8. '#' (adapté à ' #') → logprob: -11.875934600830078
    9. 'prin' → logprob: -12.000934600830078
    10. 'pr' → logprob: -12.125934600830078

Token 425: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002105175284668803
    2. 'result' → logprob: -6.252105236053467
    3. 's' → logprob: -9.002104759216309
    4. 'sum' → logprob: -10.877104759216309
    5. '   ' → logprob: -11.752104759216309
    6. ' print' → logprob: -12.127104759216309
    7. 'C' → logprob: -12.377104759216309
    8. '#' → logprob: -12.502104759216309
    9. 'prin' → logprob: -13.127104759216309
    10. 'pr' → logprob: -13.252104759216309

Token 426: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.22961130738258362
    2. '   ' → logprob: -1.7296112775802612
    3. ' print' → logprob: -4.354611396789551
    4. 'pr' → logprob: -4.979611396789551
    5. ' ' → logprob: -5.979611396789551
    6. '    
' → logprob: -6.479611396789551
    7. 'c' → logprob: -6.604611396789551
    8. 'r' → logprob: -6.979611396789551
    9. '    ' → logprob: -7.729611396789551
    10. '  ' → logprob: -8.47961139678955

Token 427: ' le' (ID: 505)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.038225434720516205
    2. '(A' → logprob: -3.2882254123687744
    3. ' A' → logprob: -9.288225173950195
    4. 'int' → logprob: -10.038225173950195
    5. '(' → logprob: -10.288225173950195
    6. 'a' → logprob: -12.788225173950195
    7. '(int' → logprob: -13.038225173950195
    8. 'print' → logprob: -13.413225173950195
    9. '1' → logprob: -13.788225173950195
    10. ' ' → logprob: -14.413225173950195

Token 428: ' produit' (ID: 29429)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0008831187733449042
    2. ' A' → logprob: -7.750883102416992
    3. '(A' → logprob: -8.500883102416992
    4. 'int' → logprob: -9.000883102416992
    5. 'a' → logprob: -10.000883102416992
    6. '2' → logprob: -11.000883102416992
    7. '10' → logprob: -11.500883102416992
    8. '9' → logprob: -11.625883102416992
    9. ' ' → logprob: -12.500883102416992
    10. '(' → logprob: -12.500883102416992

Token 429: ' de' (ID: 334)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.13377590477466583
    2. 'A' → logprob: -2.1337759494781494
    3. '(' → logprob: -5.00877571105957
    4. '(
' → logprob: -9.88377571105957
    5. '   ' → logprob: -10.75877571105957
    6. ' A' → logprob: -10.88377571105957
    7. 'a' → logprob: -11.50877571105957
    8. ',' → logprob: -11.75877571105957
    9. ':' → logprob: -12.13377571105957
    10. '()' → logprob: -12.25877571105957

Token 430: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -3.7146746763028204e-05
    2. ' A' → logprob: -10.25003719329834
    3. '(A' → logprob: -13.25003719329834
    4. '(' → logprob: -19.000036239624023
    5. 'a' → logprob: -20.750036239624023
    6. ' ' → logprob: -21.125036239624023
    7. '	A' → logprob: -21.250036239624023
    8. '_A' → logprob: -22.000036239624023
    9. ' (' → logprob: -22.250036239624023
    10. ' ' → logprob: -22.875036239624023

Token 431: ' et' (ID: 859)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.07904500514268875
    2. ' *' → logprob: -2.579045057296753
    3. ',' → logprob: -8.829045295715332
    4. '*A' → logprob: -12.204045295715332
    5. ' ' → logprob: -13.954045295715332
    6. ' ' → logprob: -14.079045295715332
    7. ' ,' → logprob: -14.204045295715332
    8. '   ' → logprob: -14.704045295715332
    9. ')' → logprob: -15.079045295715332
    10. '*,' → logprob: -15.704045295715332

Token 432: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.1602245420217514
    2. ' B' → logprob: -1.9102245569229126
    3. ' ' → logprob: -14.660224914550781
    4. ' ' → logprob: -17.03522491455078
    5. '	B' → logprob: -19.28522491455078
    6. '  ' → logprob: -19.91022491455078
    7. '_B' → logprob: -20.41022491455078
    8. ' ' → logprob: -21.16022491455078
    9. '(B' → logprob: -21.16022491455078
    10. '```' → logprob: -21.28522491455078

Token 433: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.007332941051572561
    2. '   ' → logprob: -5.007332801818848
    3. ' print' → logprob: -7.507332801818848
    4. ')' → logprob: -10.257332801818848
    5. '*' → logprob: -10.632332801818848
    6. ')
' → logprob: -13.132332801818848
    7. ',' → logprob: -13.257332801818848
    8. '(print' → logprob: -13.507332801818848
    9. '    
' → logprob: -13.632332801818848
    10. 'A' → logprob: -14.132332801818848

Token 434: ' c' (ID: 274)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.061997272074222565
    2. ' A' → logprob: -2.811997175216675
    3. '   ' → logprob: -10.936997413635254
    4. 'print' → logprob: -12.061997413635254
    5. '"' → logprob: -13.686997413635254
    6. ' ' → logprob: -13.811997413635254
    7. 'end' → logprob: -13.811997413635254
    8. '"A' → logprob: -14.186997413635254
    9. '    
' → logprob: -14.686997413635254
    10. '(A' → logprob: -14.936997413635254

Token 435: ''est' (ID: 6616)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9234199523925781
    2. '   ' → logprob: -1.6734199523925781
    3. 'on' → logprob: -1.9234199523925781
    4. 'ont' → logprob: -2.423419952392578
    5. 'al' → logprob: -3.173419952392578
    6. '#' → logprob: -3.923419952392578
    7. 'a' → logprob: -4.048419952392578
    8. '    ' → logprob: -4.548419952392578
    9. 'ho' → logprob: -4.548419952392578
    10. 'om' → logprob: -4.548419952392578

Token 436: '-à' (ID: 56297)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.9750766754150391
    2. '   ' → logprob: -1.100076675415039
    3. ')' → logprob: -1.850076675415039
    4. '(' → logprob: -2.975076675415039
    5. '()' → logprob: -3.600076675415039
    6. ' )' → logprob: -4.350076675415039
    7. '"' → logprob: -4.725076675415039
    8. '(A' → logprob: -4.725076675415039
    9. '    ' → logprob: -5.225076675415039
    10. ' ' → logprob: -5.475076675415039

Token 437: '-dire' (ID: 76064)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.032935187220573425
    2. 'int' → logprob: -3.53293514251709
    3. ' A' → logprob: -7.15793514251709
    4. 'a' → logprob: -7.15793514251709
    5. 'l' → logprob: -7.78293514251709
    6. '-à' → logprob: -8.40793514251709
    7. 'la' → logprob: -8.53293514251709
    8. '   ' → logprob: -8.65793514251709
    9. 'à' → logprob: -8.78293514251709
    10. 'print' → logprob: -9.40793514251709

Token 438: ' le' (ID: 505)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0003633521846495569
    2. ' A' → logprob: -8.25036334991455
    3. '   ' → logprob: -9.25036334991455
    4. '(A' → logprob: -12.12536334991455
    5. 'print' → logprob: -14.87536334991455
    6. ' ' → logprob: -16.000364303588867
    7. '	A' → logprob: -16.875364303588867
    8. '  ' → logprob: -17.375364303588867
    9. 'a' → logprob: -18.125364303588867
    10. '(' → logprob: -18.125364303588867

Token 439: ' résultat' (ID: 62556)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -6.694766489090398e-05
    2. ' A' → logprob: -9.625066757202148
    3. 'print' → logprob: -15.125066757202148
    4. '(A' → logprob: -15.375066757202148
    5. ' ' → logprob: -16.12506675720215
    6. 'int' → logprob: -16.62506675720215
    7. 'a' → logprob: -16.87506675720215
    8. '"A' → logprob: -16.87506675720215
    9. 'result' → logprob: -17.00006675720215
    10. ''A' → logprob: -17.50006675720215

Token 440: ' de' (ID: 334)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.7031589150428772
    2. '(' → logprob: -1.5781588554382324
    3. 'A' → logprob: -1.5781588554382324
    4. '   ' → logprob: -2.5781588554382324
    5. ' A' → logprob: -4.828158855438232
    6. '()' → logprob: -6.203158855438232
    7. '(
' → logprob: -6.703158855438232
    8. ',' → logprob: -7.078158855438232
    9. ' de' → logprob: -7.078158855438232
    10. ' ' → logprob: -7.328158855438232

Token 441: ' leur' (ID: 9853)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.061975862830877304
    2. ' A' → logprob: -2.8119759559631348
    3. '(A' → logprob: -12.561975479125977
    4. ' ' → logprob: -13.061975479125977
    5. '   ' → logprob: -14.311975479125977
    6. ' (' → logprob: -14.936975479125977
    7. 'print' → logprob: -14.936975479125977
    8. ' ' → logprob: -15.436975479125977
    9. '(' → logprob: -15.686975479125977
    10. '	A' → logprob: -15.936975479125977

Token 442: ' multiplication' (ID: 86340)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.021526267752051353
    2. ' A' → logprob: -3.896526336669922
    3. 'multip' → logprob: -7.521526336669922
    4. ' multiplication' → logprob: -7.771526336669922
    5. '*' → logprob: -11.396526336669922
    6. '*A' → logprob: -12.896526336669922
    7. ' multip' → logprob: -13.271526336669922
    8. ' multiplic' → logprob: -13.396526336669922
    9. ' multiplied' → logprob: -14.146526336669922
    10. ' ' → logprob: -14.646526336669922

Token 443: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.38730183243751526
    2. '   ' → logprob: -1.1373018026351929
    3. ' print' → logprob: -8.762301445007324
    4. 'A' → logprob: -8.762301445007324
    5. '(A' → logprob: -9.887301445007324
    6. '(' → logprob: -10.887301445007324
    7. ')' → logprob: -11.137301445007324
    8. '(print' → logprob: -11.762301445007324
    9. ',' → logprob: -12.012301445007324
    10. '()' → logprob: -12.512301445007324

Token 444: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07889870554208755
    2. 'print' → logprob: -2.5788986682891846
    3. ' print' → logprob: -11.703898429870605
    4. '```' → logprob: -14.703898429870605
    5. '	print' → logprob: -15.953898429870605
    6. '    
' → logprob: -16.328899383544922
    7. '       ' → logprob: -16.953899383544922
    8. '   ' → logprob: -17.703899383544922
    9. '  ' → logprob: -18.578899383544922
    10. '    ' → logprob: -19.828899383544922

Token 445: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.01818939670920372
    2. '   ' → logprob: -4.018189430236816
    3. ' print' → logprob: -10.143189430236816
    4. '	print' → logprob: -16.3931884765625
    5. '       ' → logprob: -17.8931884765625
    6. '```' → logprob: -17.8931884765625
    7. '  ' → logprob: -19.2681884765625
    8. 'pr' → logprob: -19.6431884765625
    9. 'Print' → logprob: -19.6431884765625
    10. 'printf' → logprob: -19.7681884765625

Token 446: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.023246990516781807
    2. '(' → logprob: -3.773247003555298
    3. 'A' → logprob: -14.148246765136719
    4. '(
' → logprob: -14.398246765136719
    5. '((' → logprob: -15.398246765136719
    6. '(a' → logprob: -17.39824676513672
    7. '()' → logprob: -18.39824676513672
    8. '(B' → logprob: -18.39824676513672
    9. ' (' → logprob: -18.52324676513672
    10. '(int' → logprob: -18.64824676513672

Token 447: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.06196858361363411
    2. ' *' → logprob: -2.8119685649871826
    3. ')' → logprob: -14.186968803405762
    4. ' ' → logprob: -15.311968803405762
    5. '*b' → logprob: -17.061967849731445
    6. ' ' → logprob: -17.436967849731445
    7. '*A' → logprob: -17.436967849731445
    8. ',' → logprob: -17.686967849731445
    9. '**' → logprob: -18.311967849731445
    10. '*)' → logprob: -19.061967849731445

Token 448: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00020354038861114532
    2. ' B' → logprob: -8.500203132629395
    3. ')' → logprob: -19.87520408630371
    4. ' ' → logprob: -21.25020408630371
    5. '   ' → logprob: -23.25020408630371
    6. '	B' → logprob: -23.75020408630371
    7. '  ' → logprob: -24.25020408630371
    8. 'b' → logprob: -24.75020408630371
    9. '`' → logprob: -25.50020408630371
    10. ' ' → logprob: -25.87520408630371

Token 449: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -14.75
    3. ')
' → logprob: -18.75
    4. '))' → logprob: -18.875
    5. ')`' → logprob: -19.875
    6. ')#' → logprob: -21.375
    7. ')}' → logprob: -21.75
    8. '),' → logprob: -22.0
    9. '())' → logprob: -22.25
    10. '）' → logprob: -22.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 447
Tokens correctement prédits (1ère position, stricte): 114
Tokens correctement prédits (1ère position, avec adaptation): 116
Tokens correctement prédits (top 10): 284
Précision stricte (1ère position): 25.50%
Précision adaptée (1ère position): 25.95%
Précision (top 10): 63.53%
================================================================================
