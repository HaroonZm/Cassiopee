================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:35:41
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math

n = int(input())
i = 1
found = False

while i < 46298:
    if math.floor(i * 1.08) == n:
        print(i)
        found = True
        break
    i = i + 1

if not found:
    print(":(")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'n' (ID: 77)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -8.470901229884475e-05
    2. 'import' → logprob: -10.62508487701416
    3. '```' → logprob: -11.00008487701416
    4. '\' → logprob: -11.25008487701416
    5. '.
' → logprob: -12.62508487701416
    6. 'def' → logprob: -12.75008487701416
    7. '.pi' → logprob: -12.87508487701416
    8. '\n' → logprob: -13.00008487701416
    9. '<|end|>' → logprob: -13.12508487701416
    10. '.e' → logprob: -13.25008487701416

Token 4: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.48363226652145386
    2. ' ' → logprob: -1.7336323261260986
    3. '=' → logprob: -2.8586323261260986
    4. '_' → logprob: -2.9836323261260986
    5. ')' → logprob: -3.7336323261260986
    6. 'u' → logprob: -3.8586323261260986
    7. ' =' → logprob: -4.6086320877075195
    8. 'a' → logprob: -4.7336320877075195
    9. '[' → logprob: -4.7336320877075195
    10. ',' → logprob: -4.9836320877075195

Token 5: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.011919194832444191
    2. '1' → logprob: -5.511919021606445
    3. ' int' → logprob: -5.636919021606445
    4. '10' → logprob: -6.011919021606445
    5. '5' → logprob: -7.261919021606445
    6. '0' → logprob: -7.261919021606445
    7. 'int' → logprob: -8.136919021606445
    8. ' math' → logprob: -10.511919021606445
    9. 'math' → logprob: -11.136919021606445
    10. '20' → logprob: -11.136919021606445

Token 6: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00010092071170220152
    2. '('' → logprob: -10.625101089477539
    3. '()' → logprob: -10.750101089477539
    4. ' (' → logprob: -11.125101089477539
    5. '(
' → logprob: -11.750101089477539
    6. '```' → logprob: -11.875101089477539
    7. '(input' → logprob: -12.000101089477539
    8. '("("' → logprob: -12.500101089477539
    9. '(n' → logprob: -12.875101089477539
    10. ')' → logprob: -13.125101089477539

Token 7: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47790950536727905
    2. ')' → logprob: -1.1029095649719238
    3. '()' → logprob: -3.102909564971924
    4. '())' → logprob: -5.977909564971924
    5. '(
' → logprob: -8.602909088134766
    6. '))' → logprob: -9.102909088134766
    7. '('' → logprob: -9.852909088134766
    8. '(

' → logprob: -10.227909088134766
    9. '")' → logprob: -10.352909088134766
    10. '`)' → logprob: -10.602909088134766

Token 8: 'i' (ID: 72)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2749347686767578
    2. 'result' → logprob: -1.3999347686767578
    3. 'factor' → logprob: -1.6499347686767578
    4. ''' → logprob: -2.399934768676758
    5. 'f' → logprob: -3.024934768676758
    6. 'if' → logprob: -3.774934768676758
    7. ')' → logprob: -3.899934768676758
    8. 'x' → logprob: -4.274934768676758
    9. 'for' → logprob: -4.524934768676758
    10. '`' → logprob: -4.524934768676758

Token 9: ' =' (ID: 314)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5555855631828308
    2. 'n' → logprob: -0.9305855631828308
    3. '+' → logprob: -4.3055853843688965
    4. ' =' → logprob: -5.6805853843688965
    5. 'nt' → logprob: -5.8055853843688965
    6. '=' → logprob: -6.0555853843688965
    7. ' +=' → logprob: -6.1805853843688965
    8. 's' → logprob: -6.5555853843688965
    9. 't' → logprob: -6.8055853843688965
    10. ' ' → logprob: -7.0555853843688965

Token 10: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.022800583392381668
    2. '0' → logprob: -4.022800445556641
    3. '1' → logprob: -5.397800445556641
    4. ' n' → logprob: -9.64780044555664
    5. '2' → logprob: -11.02280044555664
    6. ' math' → logprob: -11.02280044555664
    7. 'n' → logprob: -11.27280044555664
    8. 'math' → logprob: -14.14780044555664
    9. ' i' → logprob: -14.52280044555664
    10. ' ' → logprob: -14.52280044555664

Token 11: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2973846197128296
    2. '0' → logprob: -1.6723846197128296
    3. '2' → logprob: -2.672384738922119
    4. ' ' → logprob: -8.172384262084961
    5. 'math' → logprob: -10.047384262084961
    6. 'n' → logprob: -10.797384262084961
    7. ' math' → logprob: -13.422384262084961
    8. '3' → logprob: -13.422384262084961
    9. '```' → logprob: -13.797384262084961
    10. '10' → logprob: -14.047384262084961

Token 12: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5422602891921997
    2. ' while' → logprob: -1.2922602891921997
    3. 'while' → logprob: -2.04226016998291
    4. ',' → logprob: -5.41726016998291
    5. '*' → logprob: -6.29226016998291
    6. '0' → logprob: -6.41726016998291
    7. '=' → logprob: -7.41726016998291
    8. ' ' → logprob: -7.41726016998291
    9. ':' → logprob: -7.54226016998291
    10. '**' → logprob: -7.54226016998291

Token 13: 'found' (ID: 26334)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.4856432378292084
    2. ' while' → logprob: -1.1106432676315308
    3. '+' → logprob: -4.11064338684082
    4. '**' → logprob: -4.11064338684082
    5. '```' → logprob: -4.11064338684082
    6. '*' → logprob: -6.36064338684082
    7. '``' → logprob: -7.61064338684082
    8. ',' → logprob: -7.73564338684082
    9. 'While' → logprob: -8.11064338684082
    10. '<|end|>' → logprob: -8.36064338684082

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5087637305259705
    2. '=' → logprob: -1.5087637901306152
    3. '_' → logprob: -2.2587637901306152
    4. ' ' → logprob: -2.6337637901306152
    5. ',' → logprob: -7.508763790130615
    6. '_space' → logprob: -8.383763313293457
    7. ')' → logprob: -9.133763313293457
    8. 'space' → logprob: -9.383763313293457
    9. '  ' → logprob: -10.008763313293457
    10. ' +=' → logprob: -10.008763313293457

Token 15: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.20191903412342072
    2. 'False' → logprob: -1.7019190788269043
    3. ' True' → logprob: -7.701919078826904
    4. 'True' → logprob: -10.451918601989746
    5. '0' → logprob: -11.326918601989746
    6. ' ' → logprob: -11.826918601989746
    7. ' None' → logprob: -12.826918601989746
    8. '=False' → logprob: -13.451918601989746
    9. '(False' → logprob: -14.951918601989746
    10. 'None' → logprob: -15.076918601989746

Token 16: '

' (ID: 279)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.6969550848007202
    2. 'while' → logprob: -0.8219550848007202
    3. ':' → logprob: -3.4469552040100098
    4. '```' → logprob: -4.19695520401001
    5. '\' → logprob: -5.82195520401001
    6. ',' → logprob: -6.19695520401001
    7. ' ' → logprob: -6.57195520401001
    8. '
' → logprob: -6.57195520401001
    9. ' 
' → logprob: -6.69695520401001
    10. '**' → logprob: -6.82195520401001

Token 17: 'while' (ID: 7032)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.9027894139289856
    2. ':' → logprob: -1.2777893543243408
    3. 'while' → logprob: -1.4027893543243408
    4. '```' → logprob: -3.652789354324341
    5. ' ' → logprob: -3.777789354324341
    6. '
' → logprob: -5.52778959274292
    7. ' 
' → logprob: -5.77778959274292
    8. ',' → logprob: -6.15278959274292
    9. '**' → logprob: -6.27778959274292
    10. '\' → logprob: -6.52778959274292

Token 18: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22883734107017517
    2. ' i' → logprob: -1.6038373708724976
    3. ' n' → logprob: -5.978837490081787
    4. 'i' → logprob: -7.728837490081787
    5. ' not' → logprob: -8.728837013244629
    6. '  ' → logprob: -8.853837013244629
    7. 'n' → logprob: -9.728837013244629
    8. ' ' → logprob: -10.353837013244629
    9. ' space' → logprob: -11.353837013244629
    10. ' found' → logprob: -11.728837013244629

Token 19: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.007201578002423048
    2. '<=' → logprob: -5.257201671600342
    3. ' <' → logprob: -6.257201671600342
    4. '<' → logprob: -10.257201194763184
    5. ' ' → logprob: -11.882201194763184
    6. ' ≤' → logprob: -13.507201194763184
    7. ' \<' → logprob: -13.757201194763184
    8. ' <<=' → logprob: -14.132201194763184
    9. ' **' → logprob: -14.507201194763184
    10. ' *' → logprob: -14.507201194763184

Token 20: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.44387301802635193
    2. ' n' → logprob: -1.3188730478286743
    3. 'n' → logprob: -2.6938729286193848
    4. ' =' → logprob: -4.193872928619385
    5. '=n' → logprob: -5.443872928619385
    6. ' ' → logprob: -6.068872928619385
    7. '(n' → logprob: -8.068873405456543
    8. '2' → logprob: -8.693873405456543
    9. ' math' → logprob: -8.693873405456543
    10. '+' → logprob: -8.818873405456543

Token 21: '462' (ID: 38302)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3979600965976715
    2. '=' → logprob: -1.1479600667953491
    3. '=n' → logprob: -5.022960186004639
    4. '100' → logprob: -6.772960186004639
    5. ' n' → logprob: -7.022960186004639
    6. '2' → logprob: -7.022960186004639
    7. 'math' → logprob: -7.897960186004639
    8. '10' → logprob: -8.27295970916748
    9. ' =' → logprob: -8.89795970916748
    10. '1' → logprob: -9.27295970916748

Token 22: '98' (ID: 5080)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5800334215164185
    2. '4' → logprob: -1.2050334215164185
    3. '5' → logprob: -2.705033302307129
    4. '**' → logprob: -3.705033302307129
    5. '0' → logprob: -4.830033302307129
    6. '50' → logprob: -5.205033302307129
    7. '53' → logprob: -5.330033302307129
    8. '54' → logprob: -5.455033302307129
    9. '```' → logprob: -6.080033302307129
    10. '49' → logprob: -6.205033302307129

Token 23: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005955664673820138
    2. ':
' → logprob: -7.625595569610596
    3. ' :' → logprob: -9.750595092773438
    4. ' and' → logprob: -10.375595092773438
    5. '**' → logprob: -11.500595092773438
    6. '+' → logprob: -13.125595092773438
    7. '+:' → logprob: -13.750595092773438
    8. ':**' → logprob: -13.750595092773438
    9. ' :
' → logprob: -14.375595092773438
    10. 'and' → logprob: -14.500595092773438

Token 24: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.054763562977313995
    2. ' :' → logprob: -3.5547635555267334
    3. ':
' → logprob: -4.6797637939453125
    4. ' ' → logprob: -5.3047637939453125
    5. ' :
' → logprob: -5.4297637939453125
    6. '   ' → logprob: -5.6797637939453125
    7. ' and' → logprob: -6.4297637939453125
    8. '```' → logprob: -8.429763793945312
    9. ' if' → logprob: -8.554763793945312
    10. '    ' → logprob: -8.679763793945312

Token 25: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3460945785045624
    2. ' ' → logprob: -2.5960946083068848
    3. ' if' → logprob: -2.7210946083068848
    4. '    ' → logprob: -3.0960946083068848
    5. ' math' → logprob: -3.0960946083068848
    6. ' i' → logprob: -4.471094608306885
    7. 'if' (adapté à ' if') → logprob: -4.471094608306885
    8. 'math' → logprob: -4.971094608306885
    9. ':' → logprob: -5.221094608306885
    10. 'n' → logprob: -5.596094608306885

Token 26: ' math' (ID: 13324)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.17186518013477325
    2. ' math' → logprob: -2.046865224838257
    3. ' i' → logprob: -4.296864986419678
    4. 'n' → logprob: -4.671864986419678
    5. ' (' → logprob: -6.296864986419678
    6. 'math' → logprob: -6.296864986419678
    7. ' ' → logprob: -6.421864986419678
    8. ' ' → logprob: -9.171865463256836
    9. 'i' → logprob: -9.671865463256836
    10. ' not' → logprob: -10.171865463256836

Token 27: '.floor' (ID: 23934)
  Prédit: '.sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.03142199292778969
    2. '.factor' → logprob: -4.031422138214111
    3. '.' → logprob: -4.656422138214111
    4. '.pow' → logprob: -6.406422138214111
    5. '.s' → logprob: -7.406422138214111
    6. ' .' → logprob: -7.531422138214111
    7. '.is' → logprob: -7.656422138214111
    8. '.ceil' → logprob: -8.656421661376953
    9. '.isnan' → logprob: -9.406421661376953
    10. '.floor' → logprob: -10.281421661376953

Token 28: '(i' (ID: 3649)
  Prédit: '(math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(math' → logprob: -0.15917326509952545
    2. '(' → logprob: -2.1591732501983643
    3. '(i' → logprob: -4.159173488616943
    4. '(n' → logprob: -4.409173488616943
    5. '(s' → logprob: -6.159173488616943
    6. '((' → logprob: -6.659173488616943
    7. 'math' → logprob: -7.909173488616943
    8. '(pow' → logprob: -9.659173011779785
    9. ' (' → logprob: -10.159173011779785
    10. ' math' → logprob: -10.159173011779785

Token 29: ' *' (ID: 425)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.06667118519544601
    2. '/' → logprob: -3.566671133041382
    3. ' **' → logprob: -3.691671133041382
    4. '*' → logprob: -4.941671371459961
    5. ' /' → logprob: -6.566671371459961
    6. ' *' → logprob: -7.316671371459961
    7. '/math' → logprob: -7.566671371459961
    8. '/s' → logprob: -7.816671371459961
    9. '*i' → logprob: -8.066671371459961
    10. '/i' → logprob: -8.441671371459961

Token 30: ' ' (ID: 220)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.7348037958145142
    2. '0' → logprob: -1.2348037958145142
    3. ' math' → logprob: -2.1098036766052246
    4. '(math' → logprob: -3.4848036766052246
    5. 'i' → logprob: -3.8598036766052246
    6. '1' → logprob: -3.9848036766052246
    7. '3' → logprob: -4.859803676605225
    8. '(' → logprob: -4.984803676605225
    9. ' ' → logprob: -5.359803676605225
    10. '2' → logprob: -5.484803676605225

Token 31: '1' (ID: 16)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.9335728883743286
    2. '0' → logprob: -1.0585728883743286
    3. '1' → logprob: -2.683572769165039
    4. '(' → logprob: -2.683572769165039
    5. 'i' → logprob: -2.933572769165039
    6. '(math' → logprob: -3.183572769165039
    7. '(i' → logprob: -3.933572769165039
    8. '(n' → logprob: -5.683572769165039
    9. ' math' → logprob: -6.683572769165039
    10. '3' → logprob: -6.683572769165039

Token 32: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0013980952790006995
    2. '1' → logprob: -7.001398086547852
    3. ' .' → logprob: -8.626398086547852
    4. '0' → logprob: -9.751398086547852
    5. '/' → logprob: -10.126398086547852
    6. '2' → logprob: -10.376398086547852
    7. '23' → logprob: -10.376398086547852
    8. '5' → logprob: -11.501398086547852
    9. '8' → logprob: -11.688898086547852
    10. '15' → logprob: -12.001398086547852

Token 33: '08' (ID: 3062)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0010908045805990696
    2. '618' → logprob: -7.751091003417969
    3. '2' → logprob: -8.251091003417969
    4. '1' → logprob: -9.501091003417969
    5. '05' → logprob: -9.751091003417969
    6. '79' → logprob: -10.751091003417969
    7. '414' → logprob: -11.126091003417969
    8. '25' → logprob: -11.126091003417969
    9. '6' → logprob: -11.126091003417969
    10. '```' → logprob: -11.501091003417969

Token 34: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0036519800778478384
    2. ')==' → logprob: -6.253652095794678
    3. ' )' → logprob: -6.503652095794678
    4. ')>' → logprob: -9.00365161895752
    5. ')<' → logprob: -10.50365161895752
    6. ')>=' → logprob: -11.12865161895752
    7. ')<=' → logprob: -11.37865161895752
    8. '==' → logprob: -11.37865161895752
    9. '')' → logprob: -11.87865161895752
    10. '`)' → logprob: -12.25365161895752

Token 35: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5233022570610046
    2. ' ==' → logprob: -0.8983022570610046
    3. ')' → logprob: -9.52330207824707
    4. '=' → logprob: -10.14830207824707
    5. '>=' → logprob: -10.77330207824707
    6. ')==' → logprob: -11.02330207824707
    7. ' >=' → logprob: -11.89830207824707
    8. ' ' → logprob: -12.14830207824707
    9. '>' → logprob: -12.39830207824707
    10. '()==' → logprob: -12.64830207824707

Token 36: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3133012652397156
    2. 'n' → logprob: -1.3133013248443604
    3. '	n' → logprob: -10.813301086425781
    4. ' ' → logprob: -11.313301086425781
    5. ' ' → logprob: -12.938301086425781
    6. '<|end|>' → logprob: -13.688301086425781
    7. '    ' → logprob: -14.188301086425781
    8. '   ' → logprob: -14.813301086425781
    9. '```' → logprob: -15.438301086425781
    10. '_n' → logprob: -15.563301086425781

Token 37: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.519893501419574e-05
    2. ' :' → logprob: -9.87509536743164
    3. ':
' → logprob: -10.25009536743164
    4. ' and' → logprob: -11.87509536743164
    5. '):' → logprob: -14.62509536743164
    6. ':**' → logprob: -15.37509536743164
    7. ':return' → logprob: -15.62509536743164
    8. 'and' → logprob: -15.62509536743164
    9. '<|end|>' → logprob: -16.25009536743164
    10. ':

' → logprob: -17.00009536743164

Token 38: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08833203464746475
    2. ':' → logprob: -2.963331937789917
    3. '   ' → logprob: -4.463332176208496
    4. '<|end|>' → logprob: -5.088332176208496
    5. ' ' → logprob: -5.213332176208496
    6. '    ' → logprob: -5.463332176208496
    7. ':
' → logprob: -6.338332176208496
    8. ' :' → logprob: -7.213332176208496
    9. '
' → logprob: -7.963332176208496
    10. ' found' → logprob: -8.088332176208496

Token 39: ' print' (ID: 2123)
  Prédit: ' found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' found' → logprob: -0.48885297775268555
    2. 'found' → logprob: -2.3638529777526855
    3. ' print' → logprob: -2.3638529777526855
    4. 'print' (adapté à ' print') → logprob: -2.4888529777526855
    5. '   ' → logprob: -2.7388529777526855
    6. '       ' → logprob: -2.9888529777526855
    7. '	found' → logprob: -8.113853454589844
    8. '    ' → logprob: -8.738853454589844
    9. '```' → logprob: -10.863853454589844
    10. '	print' → logprob: -11.113853454589844

Token 40: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0002670575922820717
    2. '(' → logprob: -8.250267028808594
    3. '("' → logprob: -13.000267028808594
    4. '("("' → logprob: -13.125267028808594
    5. 'i' → logprob: -14.750267028808594
    6. ' (' → logprob: -14.750267028808594
    7. '('' → logprob: -15.000267028808594
    8. '(int' → logprob: -15.375267028808594
    9. '(f' → logprob: -16.000267028808594
    10. '()' → logprob: -17.250267028808594

Token 41: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.38709819316864014
    2. ')' → logprob: -1.1370981931686401
    3. ')
' → logprob: -8.51209831237793
    4. '       ' → logprob: -11.88709831237793
    5. ' )
' → logprob: -12.13709831237793
    6. '   ' → logprob: -12.51209831237793
    7. ')`
' → logprob: -12.63709831237793
    8. ')

' → logprob: -13.38709831237793
    9. ' )' → logprob: -13.38709831237793
    10. ',' → logprob: -13.88709831237793

Token 42: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07988376915454865
    2. '   ' → logprob: -2.8298838138580322
    3. '<|end|>' → logprob: -5.329883575439453
    4. '    
' → logprob: -5.704883575439453
    5. '
' → logprob: -5.829883575439453
    6. '    ' → logprob: -6.329883575439453
    7. '        
' → logprob: -6.454883575439453
    8. '     ' → logprob: -7.454883575439453
    9. '```' → logprob: -7.829883575439453
    10. '           ' → logprob: -7.954883575439453

Token 43: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' (adapté à ' found') → logprob: -0.0013492840807884932
    2. ' found' → logprob: -6.626349449157715
    3. 'break' → logprob: -11.376349449157715
    4. '       ' → logprob: -12.251349449157715
    5. '
' → logprob: -13.251349449157715
    6. '   ' → logprob: -13.251349449157715
    7. '	found' → logprob: -13.376349449157715
    8. 'Found' → logprob: -13.751349449157715
    9. '```' → logprob: -15.376349449157715
    10. '        
' → logprob: -15.626349449157715

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07908277958631516
    2. '=' → logprob: -2.579082727432251
    3. '=True' → logprob: -8.579082489013672
    4. ' ' → logprob: -12.454082489013672
    5. '=False' → logprob: -14.079082489013672
    6. '=true' → logprob: -16.204082489013672
    7. '<|end|>' → logprob: -16.829082489013672
    8. '   ' → logprob: -17.079082489013672
    9. 's' → logprob: -17.204082489013672
    10. ')' → logprob: -17.454082489013672

Token 45: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.12692810595035553
    2. ' True' → logprob: -2.1269280910491943
    3. '=True' → logprob: -17.626928329467773
    4. '(True' → logprob: -18.751928329467773
    5. 'Tr' → logprob: -20.001928329467773
    6. ' Tru' → logprob: -20.501928329467773
    7. 'T' → logprob: -21.001928329467773
    8. ' ' → logprob: -21.251928329467773
    9. 'true' → logprob: -22.126928329467773
    10. '.True' → logprob: -22.376928329467773

Token 46: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00017112065688706934
    2. '   ' → logprob: -9.500170707702637
    3. '
' → logprob: -10.625170707702637
    4. '<|end|>' → logprob: -10.625170707702637
    5. '        
' → logprob: -11.750170707702637
    6. '	' → logprob: -11.750170707702637
    7. '```' → logprob: -12.000170707702637
    8. '  
' → logprob: -12.250170707702637
    9. '    
' → logprob: -12.625170707702637
    10. '\n' → logprob: -13.000170707702637

Token 47: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002986392646562308
    2. '   ' → logprob: -8.250298500061035
    3. '```' → logprob: -11.500298500061035
    4. '	' → logprob: -12.000298500061035
    5. '<|end|>' → logprob: -12.250298500061035
    6. '      ' → logprob: -12.875298500061035
    7. '        
' → logprob: -13.000298500061035
    8. ' ' → logprob: -13.125298500061035
    9. '     ' → logprob: -13.375298500061035
    10. '    
' → logprob: -13.625298500061035

Token 48: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.001117711653932929
    2. ' break' → logprob: -7.251117706298828
    3. '   ' → logprob: -8.251117706298828
    4. '       ' → logprob: -9.501117706298828
    5. '	break' → logprob: -10.501117706298828
    6. '```' → logprob: -10.751117706298828
    7. 'b' → logprob: -10.876117706298828
    8. 'br' → logprob: -12.751117706298828
    9. '    
' → logprob: -14.626117706298828
    10. 'bre' → logprob: -15.376117706298828

Token 49: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008623883477412164
    2. '
' → logprob: -7.7508625984191895
    3. '    
' → logprob: -7.8758625984191895
    4. 'i' → logprob: -10.375862121582031
    5. '  
' → logprob: -11.250862121582031
    6. ' i' → logprob: -13.625862121582031
    7. ' 
' → logprob: -13.625862121582031
    8. '<|end|>' → logprob: -14.000862121582031
    9. '   
' → logprob: -14.125862121582031
    10. ' ' → logprob: -14.125862121582031

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022079506888985634
    2. 'i' → logprob: -6.1272077560424805
    3. ' i' → logprob: -11.12720775604248
    4. '```' → logprob: -12.62720775604248
    5. '    
' → logprob: -13.12720775604248
    6. '++' → logprob: -13.62720775604248
    7. '	i' → logprob: -14.50220775604248
    8. '
' → logprob: -15.25220775604248
    9. '+' → logprob: -15.37720775604248
    10. '  
' → logprob: -16.127208709716797

Token 51: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.3942347466945648
    2. '   ' → logprob: -1.1442347764968872
    3. ' i' → logprob: -5.019234657287598
    4. ' ' → logprob: -8.144234657287598
    5. '    
' → logprob: -9.144234657287598
    6. '+' → logprob: -9.644234657287598
    7. '  
' → logprob: -9.769234657287598
    8. '	i' → logprob: -9.894234657287598
    9. '  ' → logprob: -10.019234657287598
    10. '++' → logprob: -10.019234657287598

Token 52: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.32055288553237915
    2. '+' → logprob: -1.3205528259277344
    3. ' +=' → logprob: -4.945552825927734
    4. '++' → logprob: -9.070552825927734
    5. '=' → logprob: -11.070552825927734
    6. ' +' → logprob: -11.945552825927734
    7. '```' → logprob: -12.945552825927734
    8. '<|end|>' → logprob: -12.945552825927734
    9. '+++' → logprob: -13.195552825927734
    10. '+='' → logprob: -13.945552825927734

Token 53: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4742465317249298
    2. ' i' → logprob: -0.9742465019226074
    3. '1' → logprob: -9.474246978759766
    4. '+' → logprob: -9.724246978759766
    5. ' ' → logprob: -10.724246978759766
    6. '	i' → logprob: -11.974246978759766
    7. '2' → logprob: -12.724246978759766
    8. '+i' → logprob: -14.349246978759766
    9. ' +' → logprob: -14.974246978759766
    10. '0' → logprob: -15.974246978759766

Token 54: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001335359294898808
    2. ' +' → logprob: -6.626335144042969
    3. '1' → logprob: -12.626335144042969
    4. ' ' → logprob: -12.876335144042969
    5. '+i' → logprob: -13.126335144042969
    6. '+
' → logprob: -14.876335144042969
    7. '+=' → logprob: -14.876335144042969
    8. '2' → logprob: -15.126335144042969
    9. '++' → logprob: -15.251335144042969
    10. ' plus' → logprob: -15.751335144042969

Token 55: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.583550642360933e-05
    2. ' ' → logprob: -10.250036239624023
    3. '<|end|>' → logprob: -15.625036239624023
    4. '  ' → logprob: -16.500036239624023
    5. '   ' → logprob: -16.875036239624023
    6. '```' → logprob: -17.125036239624023
    7. '<|end|>' → logprob: -18.500036239624023
    8. '.' → logprob: -18.937536239624023
    9. '１' → logprob: -19.187536239624023
    10. '१' → logprob: -19.562536239624023

Token 56: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. '```' → logprob: -16.500003814697266
    4. '１' → logprob: -17.437503814697266
    5. '१' → logprob: -17.875003814697266
    6. '  ' → logprob: -18.062503814697266
    7. '   ' → logprob: -18.125003814697266
    8. '১' → logprob: -18.250003814697266
    9. '' → logprob: -18.312503814697266
    10. '۱' → logprob: -19.187503814697266

Token 57: '

' (ID: 279)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0006526283104903996
    2. '```' → logprob: -7.75065279006958
    3. '
' → logprob: -8.625652313232422
    4. '``' → logprob: -10.750652313232422
    5. 'else' → logprob: -11.750652313232422
    6. ' if' → logprob: -12.125652313232422
    7. 'print' → logprob: -13.375652313232422
    8. '0' → logprob: -13.375652313232422
    9. '

' → logprob: -13.750652313232422
    10. ' 
' → logprob: -14.250652313232422

Token 58: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00016432604752480984
    2. '```' → logprob: -8.875164031982422
    3. '0' → logprob: -11.875164031982422
    4. 'print' → logprob: -12.250164031982422
    5. '``' → logprob: -12.375164031982422
    6. 'else' → logprob: -12.500164031982422
    7. 'i' → logprob: -13.000164031982422
    8. ' if' → logprob: -14.000164031982422
    9. 'If' → logprob: -14.750164031982422
    10. '1' → logprob: -15.250164031982422

Token 59: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.008633834309875965
    2. 'not' → logprob: -4.758633613586426
    3. ' found' → logprob: -11.008633613586426
    4. 'found' → logprob: -13.008633613586426
    5. ' ' → logprob: -15.008633613586426
    6. '	not' → logprob: -16.008634567260742
    7. ' ' → logprob: -16.133634567260742
    8. '(not' → logprob: -17.008634567260742
    9. ' no' → logprob: -18.383634567260742
    10. '   ' → logprob: -19.508634567260742

Token 60: ' found' (ID: 2491)
  Prédit: ' found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' found' → logprob: -0.2519320547580719
    2. 'found' → logprob: -1.5019320249557495
    3. ' ' → logprob: -13.001932144165039
    4. '	found' → logprob: -14.501932144165039
    5. ' ' → logprob: -16.37693214416504
    6. '(found' → logprob: -16.62693214416504
    7. 'Found' → logprob: -17.62693214416504
    8. '_found' → logprob: -18.25193214416504
    9. ' Found' → logprob: -18.75193214416504
    10. '  ' → logprob: -19.75193214416504

Token 61: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03804344683885574
    2. ':
' → logprob: -3.28804349899292
    3. ':

' → logprob: -13.788043022155762
    4. ':
' → logprob: -14.038043022155762
    5. ' :
' → logprob: -16.413043975830078
    6. ' :' → logprob: -16.913043975830078
    7. '():
' → logprob: -17.038043975830078
    8. '):
' → logprob: -17.663043975830078
    9. 'print' → logprob: -18.288043975830078
    10. '   ' → logprob: -18.288043975830078

Token 62: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12182704359292984
    2. 'print' → logprob: -2.7468271255493164
    3. ' print' → logprob: -2.9968271255493164
    4. '    ' → logprob: -8.246827125549316
    5. '```' → logprob: -8.246827125549316
    6. '	print' → logprob: -10.121827125549316
    7. '``' → logprob: -11.246827125549316
    8. '    
' → logprob: -11.496827125549316
    9. '.print' → logprob: -12.371827125549316
    10. '\' → logprob: -12.371827125549316

Token 63: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0003217574267182499
    2. ' print' → logprob: -8.125321388244629
    3. '   ' → logprob: -10.750321388244629
    4. '```' → logprob: -13.125321388244629
    5. '	print' → logprob: -13.750321388244629
    6. 'Print' → logprob: -15.125321388244629
    7. 'println' → logprob: -15.625321388244629
    8. '-' → logprob: -15.750321388244629
    9. '0' → logprob: -16.125322341918945
    10. '``' → logprob: -16.375322341918945

Token 64: '(":' (ID: 40387)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.039410099387168884
    2. '("' → logprob: -3.53941011428833
    3. '0' → logprob: -5.16441011428833
    4. '(":' → logprob: -6.16441011428833
    5. '("(' → logprob: -7.03941011428833
    6. '('' → logprob: -7.91441011428833
    7. '(-' → logprob: -8.039409637451172
    8. '(:' → logprob: -9.664409637451172
    9. '("("' → logprob: -10.289409637451172
    10. '('(' → logprob: -11.039409637451172

Token 65: '("' (ID: 568)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9071123600006104
    2. ':(' → logprob: -0.9071123600006104
    3. ' :(' → logprob: -2.7821123600006104
    4. '-' → logprob: -3.4071123600006104
    5. '(":' → logprob: -3.9071123600006104
    6. ':N' → logprob: -4.282112121582031
    7. '(:' → logprob: -4.282112121582031
    8. '":' → logprob: -4.657112121582031
    9. ':D' → logprob: -5.407112121582031
    10. ':)' → logprob: -6.032112121582031

Token 66: ')' (ID: 8)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 64
Tokens correctement prédits (1ère position, stricte): 19
Tokens correctement prédits (1ère position, avec adaptation): 23
Tokens correctement prédits (top 10): 52
Précision stricte (1ère position): 29.69%
Précision adaptée (1ère position): 35.94%
Précision (top 10): 81.25%
================================================================================
