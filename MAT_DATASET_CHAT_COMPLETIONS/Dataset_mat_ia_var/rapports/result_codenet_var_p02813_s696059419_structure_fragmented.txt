================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:32:12
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math

def read_int():
    return int(input())

def read_int_list():
    return [int(x) for x in input().split()]

def compute_factorial(val):
    return math.factorial(val)

def count_lower_elements(lst, index, N):
    count = 0
    for j in range(index+1, N):
        if lst[index] > lst[j]:
            count += 1
    return count

def increment_for_index(lst, index, N):
    count = count_lower_elements(lst, index, N)
    fac = compute_factorial(N-1-index)
    return count * fac

def compute_score(lst, N):
    total = 0
    for i in range(N-1):
        inc = increment_for_index(lst, i, N)
        total += inc
    return total

def print_result(diff):
    print(diff)

def main():
    N = read_int()
    p = read_int_list()
    q = read_int_list()
    P = compute_score(p, N)
    Q = compute_score(q, N)
    diff = abs(P-Q)
    print_result(diff)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0005667338264174759
    2. '\' → logprob: -9.000566482543945
    3. 'import' → logprob: -9.125566482543945
    4. '\n' → logprob: -9.125566482543945
    5. '```' → logprob: -9.375566482543945
    6. '<|end|>' → logprob: -10.875566482543945
    7. 'def' → logprob: -11.375566482543945
    8. '#' → logprob: -11.500566482543945
    9. '*' → logprob: -11.625566482543945
    10. 'a' → logprob: -11.750566482543945

Token 4: ' read' (ID: 1729)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.044894974678754807
    2. ' math' → logprob: -3.5448949337005615
    3. ' factorial' → logprob: -5.419895172119141
    4. '_' → logprob: -6.044895172119141
    5. ' calculate' → logprob: -6.044895172119141
    6. ' sqrt' → logprob: -6.294895172119141
    7. ' ' → logprob: -6.919895172119141
    8. ' space' → logprob: -7.544895172119141
    9. ' f' → logprob: -7.794895172119141
    10. '_math' → logprob: -8.66989517211914

Token 5: '_int' (ID: 12285)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5268174409866333
    2. '_' → logprob: -0.9018174409866333
    3. '_line' → logprob: -7.151817321777344
    4. '_:' → logprob: -7.276817321777344
    5. ' (' → logprob: -7.401817321777344
    6. '```' → logprob: -8.401817321777344
    7. '():' → logprob: -8.901817321777344
    8. '_input' → logprob: -9.151817321777344
    9. '_space' → logprob: -9.151817321777344
    10. '_data' → logprob: -9.276817321777344

Token 6: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.036585483700037
    2. '():' → logprob: -3.411585569381714
    3. '_' → logprob: -7.536585330963135
    4. 's' → logprob: -7.536585330963135
    5. '):' → logprob: -7.786585330963135
    6. ':' → logprob: -8.036585807800293
    7. '```' → logprob: -8.661585807800293
    8. '(s' → logprob: -9.036585807800293
    9. '("("' → logprob: -9.036585807800293
    10. '(a' → logprob: -9.786585807800293

Token 7: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.19624832272529602
    2. '(' → logprob: -2.6962482929229736
    3. '```' → logprob: -3.3212482929229736
    4. '   ' → logprob: -3.5712482929229736
    5. ':' → logprob: -3.9462482929229736
    6. '()' → logprob: -4.821248531341553
    7. '):' → logprob: -5.071248531341553
    8. ' ():' → logprob: -5.946248531341553
    9. ' return' → logprob: -6.071248531341553
    10. ':return' → logprob: -6.196248531341553

Token 8: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.486285924911499
    2. 'return' (adapté à ' return') → logprob: -1.236285924911499
    3. '   ' → logprob: -2.611285924911499
    4. 'int' → logprob: -3.986285924911499
    5. ' int' → logprob: -6.361286163330078
    6. '    ' → logprob: -8.361286163330078
    7. ' ' → logprob: -8.611286163330078
    8. 'n' → logprob: -9.111286163330078
    9. 'x' → logprob: -9.361286163330078
    10. 'r' → logprob: -9.861286163330078

Token 9: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.000282431225059554
    2. 'int' → logprob: -8.250282287597656
    3. '(int' → logprob: -11.375282287597656
    4. ' ' → logprob: -11.625282287597656
    5. ' ' → logprob: -15.375282287597656
    6. ' math' → logprob: -16.125282287597656
    7. '   ' → logprob: -16.250282287597656
    8. ' map' → logprob: -16.250282287597656
    9. '  ' → logprob: -16.250282287597656
    10. '<int' → logprob: -16.375282287597656

Token 10: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013070936314761639
    2. '(input' → logprob: -4.388071060180664
    3. '()' → logprob: -8.388071060180664
    4. '('' → logprob: -10.013071060180664
    5. '("("' → logprob: -10.263071060180664
    6. '```' → logprob: -10.388071060180664
    7. '(open' → logprob: -10.513071060180664
    8. '(math' → logprob: -10.763071060180664
    9. '(read' → logprob: -11.013071060180664
    10. 'input' → logprob: -11.013071060180664

Token 11: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.008503829129040241
    2. '()' → logprob: -5.0085039138793945
    3. '()))' → logprob: -6.5085039138793945
    4. ')' → logprob: -8.258503913879395
    5. ' ())' → logprob: -10.883503913879395
    6. '(' → logprob: -11.633503913879395
    7. '))' → logprob: -12.258503913879395
    8. '();)' → logprob: -14.133503913879395
    9. '()),' → logprob: -14.508503913879395
    10. '())))' → logprob: -14.633503913879395

Token 12: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00199251645244658
    2. 'n' → logprob: -6.751992702484131
    3. 'x' → logprob: -7.876992702484131
    4. '\n' → logprob: -9.626992225646973
    5. 'number' → logprob: -9.626992225646973
    6. 'a' → logprob: -9.751992225646973
    7. 's' → logprob: -9.876992225646973
    8. 'num' → logprob: -10.251992225646973
    9. '```' → logprob: -10.251992225646973
    10. '\' → logprob: -10.626992225646973

Token 13: ' read' (ID: 1729)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5802629590034485
    2. ' ' → logprob: -1.9552628993988037
    3. ' calculate' → logprob: -2.4552628993988037
    4. ' read' → logprob: -3.0802628993988037
    5. ' math' → logprob: -3.3302628993988037
    6. ' square' → logprob: -3.3302628993988037
    7. ' add' → logprob: -3.7052628993988037
    8. ' space' → logprob: -3.8302628993988037
    9. ' factorial' → logprob: -4.205263137817383
    10. ' sqrt' → logprob: -4.830263137817383

Token 14: '_int' (ID: 12285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00288261822424829
    2. '_string' → logprob: -6.877882480621338
    3. '_int' → logprob: -7.377882480621338
    4. '_line' → logprob: -7.377882480621338
    5. '_str' → logprob: -8.502882957458496
    6. '_token' → logprob: -9.252882957458496
    7. '_float' → logprob: -9.377882957458496
    8. '_text' → logprob: -10.377882957458496
    9. '(' → logprob: -10.377882957458496
    10. '_char' → logprob: -10.752882957458496

Token 15: '_list' (ID: 4162)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.25821083784103394
    2. '()' → logprob: -1.5082108974456787
    3. '_s' → logprob: -5.6332106590271
    4. '_' → logprob: -6.6332106590271
    5. '(' → logprob: -8.258211135864258
    6. '_array' → logprob: -8.258211135864258
    7. '_list' → logprob: -8.383211135864258
    8. '[]' → logprob: -8.633211135864258
    9. '_parent' → logprob: -9.383211135864258
    10. '_plural' → logprob: -9.758211135864258

Token 16: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.018289009109139442
    2. '()' → logprob: -4.018289089202881
    3. '():
' → logprob: -10.393288612365723
    4. '()">' → logprob: -10.518288612365723
    5. '(' → logprob: -11.143288612365723
    6. '()*' → logprob: -11.143288612365723
    7. '()>' → logprob: -11.393288612365723
    8. ' ()' → logprob: -12.143288612365723
    9. ' ():' → logprob: -12.143288612365723
    10. '()[' → logprob: -12.518288612365723

Token 17: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.21538960933685303
    2. '   ' → logprob: -1.840389609336853
    3. ' return' → logprob: -4.715389728546143
    4. 'return' → logprob: -4.715389728546143
    5. '(' → logprob: -4.840389728546143
    6. '[]' → logprob: -5.465389728546143
    7. ' ()' → logprob: -6.215389728546143
    8. '()
' → logprob: -6.840389728546143
    9. '()[' → logprob: -7.090389728546143
    10. '():' → logprob: -8.340389251708984

Token 18: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5840145349502563
    2. ' return' → logprob: -0.8340145349502563
    3. '   ' → logprob: -5.084014415740967
    4. ' list' → logprob: -6.959014415740967
    5. 'list' → logprob: -7.084014415740967
    6. 'map' → logprob: -10.584014892578125
    7. ' map' → logprob: -10.959014892578125
    8. ' ' → logprob: -11.459014892578125
    9. '	return' → logprob: -13.459014892578125
    10. '  ' → logprob: -13.959014892578125

Token 19: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.5850205421447754
    2. ' list' → logprob: -0.8350205421447754
    3. '[list' → logprob: -4.835020542144775
    4. '[' → logprob: -6.960020542144775
    5. ' [' → logprob: -9.085020065307617
    6. '(list' → logprob: -10.710020065307617
    7. '[int' → logprob: -12.585020065307617
    8. '	list' → logprob: -13.460020065307617
    9. '[input' → logprob: -14.085020065307617
    10. ' ' → logprob: -14.210020065307617

Token 20: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -5.860340752406046e-05
    2. ' int' → logprob: -9.7500581741333
    3. 'map' → logprob: -16.500059127807617
    4. '   ' → logprob: -16.875059127807617
    5. '(int' → logprob: -17.125059127807617
    6. ' ' → logprob: -17.250059127807617
    7. '  ' → logprob: -17.250059127807617
    8. ']int' → logprob: -17.250059127807617
    9. '<int' → logprob: -17.750059127807617
    10. '	int' → logprob: -17.875059127807617

Token 21: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.03873325139284134
    2. '(i' → logprob: -3.2887332439422607
    3. '(' → logprob: -7.66373348236084
    4. '(s' → logprob: -9.16373348236084
    5. '(token' → logprob: -9.28873348236084
    6. '(item' → logprob: -12.03873348236084
    7. '(input' → logprob: -12.16373348236084
    8. ']' → logprob: -12.78873348236084
    9. '(e' → logprob: -13.28873348236084
    10. '(v' → logprob: -13.78873348236084

Token 22: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00037037418223917484
    2. 'for' → logprob: -8.375370025634766
    3. '())' → logprob: -9.875370025634766
    4. '()' → logprob: -10.125370025634766
    5. ' for' → logprob: -10.750370025634766
    6. ' )' → logprob: -10.750370025634766
    7. '(x' → logprob: -13.000370025634766
    8. '   ' → logprob: -13.750370025634766
    9. '(' → logprob: -15.500370025634766
    10. 'input' → logprob: -15.500370025634766

Token 23: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.180935800075531
    2. ' for' → logprob: -1.8059358596801758
    3. ')' → logprob: -6.805935859680176
    4. '(x' → logprob: -10.055935859680176
    5. 'x' → logprob: -11.555935859680176
    6. ' ' → logprob: -12.305935859680176
    7. ' in' → logprob: -12.430935859680176
    8. 'in' → logprob: -12.555935859680176
    9. ']' → logprob: -12.555935859680176
    10. 'input' → logprob: -12.805935859680176

Token 24: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.8985939621925354
    2. ' input' → logprob: -0.8985939621925354
    3. 'input' → logprob: -1.7735939025878906
    4. 'x' → logprob: -4.273593902587891
    5. ' ' → logprob: -6.648593902587891
    6. '<|end|>' → logprob: -8.14859390258789
    7. '<|end|>' → logprob: -8.27359390258789
    8. ' in' → logprob: -10.02359390258789
    9. '  ' → logprob: -10.27359390258789
    10. '_' → logprob: -10.64859390258789

Token 25: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07287474721670151
    2. 'in' → logprob: -2.6978747844696045
    3. 'input' → logprob: -6.072874546051025
    4. ' ' → logprob: -8.072875022888184
    5. '(' → logprob: -10.197875022888184
    6. ')' → logprob: -10.322875022888184
    7. ' input' → logprob: -10.322875022888184
    8. 'import' → logprob: -10.447875022888184
    9. 'n' → logprob: -10.572875022888184
    10. '  ' → logprob: -10.697875022888184

Token 26: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2519334554672241
    2. ' input' → logprob: -1.5019334554672241
    3. '(input' → logprob: -12.626933097839355
    4. '=input' → logprob: -14.876933097839355
    5. ' ' → logprob: -15.001933097839355
    6. '<input' → logprob: -15.876933097839355
    7. '.input' → logprob: -16.376934051513672
    8. '	input' → logprob: -16.876934051513672
    9. '[input' → logprob: -17.251934051513672
    10. ')' → logprob: -17.251934051513672

Token 27: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0322568453848362
    2. '()' → logprob: -3.532256841659546
    3. '()]' → logprob: -6.157257080078125
    4. '())' → logprob: -7.907257080078125
    5. '(' → logprob: -11.157257080078125
    6. '()].' → logprob: -14.282257080078125
    7. ' ()' → logprob: -14.657257080078125
    8. '()`' → logprob: -15.532257080078125
    9. ' ().' → logprob: -15.657257080078125
    10. '()
' → logprob: -15.782257080078125

Token 28: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.001506528351455927
    2. 'strip' → logprob: -6.501506328582764
    3. 'rstrip' → logprob: -12.626506805419922
    4. ' split' → logprob: -14.126506805419922
    5. 'spl' → logprob: -16.001506805419922
    6. '(split' → logprob: -16.126506805419922
    7. ' strip' → logprob: -19.501506805419922
    8. 's' → logprob: -20.251506805419922
    9. '.split' → logprob: -20.376506805419922
    10. '_split' → logprob: -21.001506805419922

Token 29: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.32366177439689636
    2. '())' → logprob: -1.3236618041992188
    3. '()' → logprob: -4.573661804199219
    4. ')]' → logprob: -10.948661804199219
    5. '(' → logprob: -12.823661804199219
    6. ']' → logprob: -13.573661804199219
    7. '()))' → logprob: -14.073661804199219
    8. ' ()' → logprob: -14.073661804199219
    9. '()`' → logprob: -14.073661804199219
    10. '()]
' → logprob: -14.698661804199219

Token 30: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3881869614124298
    2. ')]' → logprob: -1.1381869316101074
    3. '()]' → logprob: -7.013186931610107
    4. '])' → logprob: -8.013187408447266
    5. ')' → logprob: -10.263187408447266
    6. '])]' → logprob: -10.638187408447266
    7. ' ]' → logprob: -11.513187408447266
    8. '`]' → logprob: -12.388187408447266
    9. ']
' → logprob: -12.513187408447266
    10. ')])' → logprob: -12.888187408447266

Token 31: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.32077980041503906
    2. 'd' → logprob: -1.445779800415039
    3. 'n' → logprob: -4.070779800415039
    4. '

' → logprob: -4.320779800415039
    5. '\' → logprob: -5.695779800415039
    6. '
' → logprob: -5.945779800415039
    7. '' → logprob: -7.070779800415039
    8. '\n' → logprob: -8.195779800415039
    9. 'a' → logprob: -8.320779800415039
    10. '#' → logprob: -8.570779800415039

Token 32: ' compute' (ID: 23864)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -1.1169685125350952
    2. ' read' → logprob: -1.6169685125350952
    3. ' math' → logprob: -2.1169686317443848
    4. ' write' → logprob: -2.3669686317443848
    5. ' factorial' → logprob: -2.4919686317443848
    6. ' compute' → logprob: -3.2419686317443848
    7. ' solve' → logprob: -3.3669686317443848
    8. ' main' → logprob: -4.116968631744385
    9. ' max' → logprob: -4.241968631744385
    10. ' is' → logprob: -4.741968631744385

Token 33: '_factor' (ID: 43757)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2588820457458496
    2. '_factor' → logprob: -2.0088820457458496
    3. '_area' → logprob: -2.8838820457458496
    4. '_sum' → logprob: -3.8838820457458496
    5. '_s' → logprob: -5.88388204574585
    6. '(' → logprob: -6.00888204574585
    7. '_max' → logprob: -6.25888204574585
    8. '_square' → logprob: -6.25888204574585
    9. '_distance' → logprob: -6.63388204574585
    10. '_div' → logprob: -7.38388204574585

Token 34: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.1394774615764618
    2. '_' → logprob: -2.139477491378784
    3. '_or' → logprob: -4.889477252960205
    4. '```' → logprob: -6.014477252960205
    5. 'ialize' → logprob: -6.389477252960205
    6. 'or' → logprob: -7.889477252960205
    7. '_size' → logprob: -9.139477729797363
    8. 'orial' → logprob: -10.139477729797363
    9. '_factor' → logprob: -10.639477729797363
    10. '_to' → logprob: -10.889477729797363

Token 35: '(val' (ID: 17391)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00455437321215868
    2. '(n' → logprob: -5.504554271697998
    3. '_' → logprob: -8.504554748535156
    4. ' (' → logprob: -9.754554748535156
    5. '(_' → logprob: -9.754554748535156
    6. '_factor' → logprob: -9.879554748535156
    7. '("("' → logprob: -10.879554748535156
    8. '(x' → logprob: -11.004554748535156
    9. '```' → logprob: -11.379554748535156
    10. '(num' → logprob: -12.004554748535156

Token 36: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09886658191680908
    2. '):' → logprob: -2.4738664627075195
    3. '(' → logprob: -4.9738664627075195
    4. 'u' → logprob: -7.0988664627075195
    5. 'or' → logprob: -7.3488664627075195
    6. ' ' → logprob: -8.59886646270752
    7. ' )' → logprob: -8.59886646270752
    8. ')}' → logprob: -9.22386646270752
    9. 'uator' → logprob: -9.47386646270752
    10. ')(' → logprob: -9.47386646270752

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002619774080812931
    2. ':' → logprob: -6.002619743347168
    3. '(' → logprob: -9.627619743347168
    4. ':
' → logprob: -10.877619743347168
    5. '():' → logprob: -11.127619743347168
    6. '):' → logprob: -11.752619743347168
    7. '    
' → logprob: -12.002619743347168
    8. ' return' → logprob: -12.002619743347168
    9. 'return' → logprob: -12.377619743347168
    10. ' factorial' → logprob: -13.002619743347168

Token 38: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01388762891292572
    2. ' return' → logprob: -4.888887405395508
    3. ' if' → logprob: -5.138887405395508
    4. 'return' (adapté à ' return') → logprob: -8.388887405395508
    5. ' factorial' → logprob: -9.888887405395508
    6. 'if' → logprob: -10.013887405395508
    7. ' result' → logprob: -10.763887405395508
    8. ' math' → logprob: -11.138887405395508
    9. '```' → logprob: -11.388887405395508
    10. '    
' → logprob: -11.763887405395508

Token 39: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.20170189440250397
    2. 'math' → logprob: -1.7017018795013428
    3. '1' → logprob: -8.451702117919922
    4. ' ' → logprob: -9.701702117919922
    5. '(math' → logprob: -11.576702117919922
    6. ' factorial' → logprob: -13.201702117919922
    7. ' ' → logprob: -14.326702117919922
    8. '   ' → logprob: -14.826702117919922
    9. '.math' → logprob: -14.826702117919922
    10. ' val' → logprob: -15.326702117919922

Token 40: '.factor' (ID: 196244)
  Prédit: '.factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.factor' → logprob: -0.10038339346647263
    2. '.' → logprob: -2.3503832817077637
    3. '.sqrt' → logprob: -9.475383758544922
    4. '.fac' → logprob: -10.225383758544922
    5. '.fact' → logprob: -11.100383758544922
    6. '.f' → logprob: -11.350383758544922
    7. ' factorial' → logprob: -11.725383758544922
    8. '.pow' → logprob: -12.350383758544922
    9. ' .' → logprob: -12.350383758544922
    10. '.floor' → logprob: -12.600383758544922

Token 41: 'ial' (ID: 563)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.387371301651001
    2. 'ial' → logprob: -1.137371301651001
    3. 'cial' → logprob: -7.887371063232422
    4. '_' → logprob: -10.137371063232422
    5. 'o' → logprob: -10.762371063232422
    6. 'orial' → logprob: -12.137371063232422
    7. 'a' → logprob: -12.262371063232422
    8. '**' → logprob: -12.387371063232422
    9. 'ional' → logprob: -12.387371063232422
    10. 'nal' → logprob: -12.387371063232422

Token 42: '(val' (ID: 17391)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1002364382147789
    2. '(val' → logprob: -2.350236415863037
    3. '(value' → logprob: -10.850236892700195
    4. ' (' → logprob: -12.725236892700195
    5. '(
' → logprob: -13.350236892700195
    6. '(valor' → logprob: -13.975236892700195
    7. '((' → logprob: -14.100236892700195
    8. '("("' → logprob: -14.100236892700195
    9. '('' → logprob: -14.225236892700195
    10. '(

' → logprob: -14.350236892700195

Token 43: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. '))' → logprob: -16.0
    3. ' )' → logprob: -16.0
    4. '())' → logprob: -16.25
    5. '()' → logprob: -17.375
    6. ')`' → logprob: -17.625
    7. ')
' → logprob: -17.75
    8. '(' → logprob: -17.75
    9. ')))' → logprob: -18.25
    10. ')return' → logprob: -19.0

Token 44: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13546602427959442
    2. '

' → logprob: -2.5104660987854004
    3. '
' → logprob: -3.3854660987854004
    4. '<|end|>' → logprob: -5.5104660987854
    5. '\' → logprob: -6.1354660987854
    6. '\n' → logprob: -6.5104660987854
    7. '```' → logprob: -6.6354660987854
    8. '#' → logprob: -7.0104660987854
    9. '(' → logprob: -7.5104660987854
    10. 'n' → logprob: -8.510465621948242

Token 45: ' count' (ID: 3605)
  Prédit: ' compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.012469394132494926
    2. ' main' → logprob: -4.512469291687012
    3. ' calculate' → logprob: -7.262469291687012
    4. '_' → logprob: -9.012469291687012
    5. ' fibonacci' → logprob: -9.012469291687012
    6. ' ' → logprob: -9.137469291687012
    7. '_compute' → logprob: -9.637469291687012
    8. 'compute' → logprob: -9.637469291687012
    9. ' is' → logprob: -10.012469291687012
    10. ' add' → logprob: -10.012469291687012

Token 46: '_lower' (ID: 72335)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2649775743484497
    2. '_occ' → logprob: -1.2649775743484497
    3. '_div' → logprob: -2.26497745513916
    4. '_v' → logprob: -2.38997745513916
    5. '_digits' → logprob: -2.63997745513916
    6. '_factor' → logprob: -2.63997745513916
    7. '_f' → logprob: -3.76497745513916
    8. '_unique' → logprob: -4.76497745513916
    9. '_words' → logprob: -4.88997745513916
    10. '_s' → logprob: -4.88997745513916

Token 47: '_elements' (ID: 53344)
  Prédit: '_case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_case' → logprob: -0.7213783264160156
    2. 'case' → logprob: -0.8463783264160156
    3. '_' → logprob: -2.7213783264160156
    4. '_letters' → logprob: -4.596378326416016
    5. '_chars' → logprob: -5.596378326416016
    6. '_cases' → logprob: -6.221378326416016
    7. '_s' → logprob: -6.721378326416016
    8. 's' → logprob: -7.471378326416016
    9. '(' → logprob: -7.971378326416016
    10. '_lower' → logprob: -8.471378326416016

Token 48: '(lst' (ID: 95688)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004625937435775995
    2. '(val' → logprob: -7.1296257972717285
    3. ' (' → logprob: -7.3796257972717285
    4. '_' → logprob: -7.5046257972717285
    5. '(_' → logprob: -7.5046257972717285
    6. '(x' → logprob: -7.6296257972717285
    7. '_in' → logprob: -8.004626274108887
    8. '_at' → logprob: -9.129626274108887
    9. '(value' → logprob: -9.379626274108887
    10. '_between' → logprob: -9.379626274108887

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8063023686408997
    2. '(' → logprob: -0.9313023686408997
    3. ')' → logprob: -2.056302309036255
    4. '_' → logprob: -3.681302309036255
    5. '_,' → logprob: -6.681302547454834
    6. ',)' → logprob: -7.306302547454834
    7. '(lst' → logprob: -7.681302547454834
    8. '_)' → logprob: -7.681302547454834
    9. ',_' → logprob: -7.806302547454834
    10. ' ,' → logprob: -8.056302070617676

Token 50: ' index' (ID: 3472)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.18444105982780457
    2. ' x' → logprob: -1.934441089630127
    3. 'val' → logprob: -4.809441089630127
    4. ' value' → logprob: -4.934441089630127
    5. 'x' → logprob: -5.809441089630127
    6. ' target' → logprob: -6.309441089630127
    7. ' element' → logprob: -6.934441089630127
    8. ' elem' → logprob: -6.934441089630127
    9. 'value' → logprob: -7.684441089630127
    10. ' n' → logprob: -8.059440612792969

Token 51: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10568377375602722
    2. ')' → logprob: -2.3556838035583496
    3. ',' → logprob: -5.35568380355835
    4. ' ):' → logprob: -7.60568380355835
    5. '   ' → logprob: -9.355683326721191
    6. ' )' → logprob: -9.980683326721191
    7. '[' → logprob: -10.605683326721191
    8. ' ,' → logprob: -11.230683326721191
    9. '):
' → logprob: -11.230683326721191
    10. ' ' → logprob: -11.480683326721191

Token 52: ' N' (ID: 478)
  Prédit: ' lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lst' → logprob: -0.3480059802532196
    2. 'lst' → logprob: -2.223006010055542
    3. ' val' → logprob: -2.348006010055542
    4. ' value' → logprob: -2.848006010055542
    5. 'val' → logprob: -4.348005771636963
    6. 'value' → logprob: -4.473005771636963
    7. ')' → logprob: -5.848005771636963
    8. ' )' → logprob: -6.098005771636963
    9. ' ' → logprob: -7.223005771636963
    10. ' x' → logprob: -7.723005771636963

Token 53: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00014191943046171218
    2. '):
' → logprob: -10.000142097473145
    3. ' ):' → logprob: -10.375142097473145
    4. ')' → logprob: -10.500142097473145
    5. ',' → logprob: -10.750142097473145
    6. '   ' → logprob: -11.750142097473145
    7. ':' → logprob: -12.500142097473145
    8. '=' → logprob: -14.000142097473145
    9. ' ' → logprob: -14.000142097473145
    10. '  ' → logprob: -14.875142097473145

Token 54: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020099401473999023
    2. ':' → logprob: -4.770099639892578
    3. '_' → logprob: -4.770099639892578
    4. '(
' → logprob: -7.270099639892578
    5. '   ' → logprob: -7.645099639892578
    6. ' (' → logprob: -7.895099639892578
    7. '(lst' → logprob: -8.020099639892578
    8. '=' → logprob: -8.770099639892578
    9. '(:' → logprob: -9.020099639892578
    10. ' :' → logprob: -9.270099639892578

Token 55: ' count' (ID: 3605)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.047221302986145
    2. '   ' → logprob: -1.297221302986145
    3. ' sum' → logprob: -1.672221302986145
    4. ':' → logprob: -3.1722211837768555
    5. ' =' → logprob: -3.5472211837768555
    6. 'count' (adapté à ' count') → logprob: -3.9222211837768555
    7. '(' → logprob: -4.2972211837768555
    8. ' ' → logprob: -4.6722211837768555
    9. ' count' → logprob: -4.6722211837768555
    10. '0' → logprob: -4.6722211837768555

Token 56: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18017388880252838
    2. '=' → logprob: -1.8051738739013672
    3. '_' → logprob: -7.930173873901367
    4. ' ' → logprob: -9.930173873901367
    5. '(' → logprob: -11.930173873901367
    6. ')' → logprob: -12.305173873901367
    7. '   ' → logprob: -12.805173873901367
    8. '_=' → logprob: -13.055173873901367
    9. ',' → logprob: -13.430173873901367
    10. '  ' → logprob: -14.180173873901367

Token 57: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08690011501312256
    2. ' ' → logprob: -2.586900234222412
    3. ' sum' → logprob: -4.961900234222412
    4. 'sum' → logprob: -7.336900234222412
    5. ' len' → logprob: -8.961899757385254
    6. ' lst' → logprob: -9.711899757385254
    7. ' index' → logprob: -10.086899757385254
    8. '[' → logprob: -10.961899757385254
    9. ' [' → logprob: -10.961899757385254
    10. '   ' → logprob: -11.086899757385254

Token 58: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00040242893737740815
    2. 'sum' → logprob: -7.875402450561523
    3. ' ' → logprob: -11.500402450561523
    4. 'len' → logprob: -11.625402450561523
    5. ' sum' → logprob: -13.875402450561523
    6. '   ' → logprob: -14.125402450561523
    7. '1' → logprob: -14.500402450561523
    8. '[' → logprob: -14.750402450561523
    9. '```' → logprob: -15.750402450561523
    10. 'lst' → logprob: -16.375402450561523

Token 59: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7442107200622559
    2. '
' → logprob: -1.8692107200622559
    3. '   ' → logprob: -1.8692107200622559
    4. '<|end|>' → logprob: -2.119210720062256
    5. 'for' → logprob: -2.994210720062256
    6. ' ' → logprob: -4.369210720062256
    7. '	for' → logprob: -4.494210720062256
    8. '    ' → logprob: -5.494210720062256
    9. '' → logprob: -5.619210720062256
    10. '  ' → logprob: -6.119210720062256

Token 61: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6373810768127441
    2. 'for' (adapté à ' for') → logprob: -0.7623810768127441
    3. '   ' → logprob: -5.512381076812744
    4. '	for' → logprob: -7.637381076812744
    5. '
' → logprob: -8.387380599975586
    6. '    ' → logprob: -12.137380599975586
    7. '    
' → logprob: -12.512380599975586
    8. 'range' → logprob: -12.887380599975586
    9. '  ' → logprob: -13.012380599975586
    10. ' ' → logprob: -13.262380599975586

Token 62: ' j' (ID: 441)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.018811145797371864
    2. 'i' → logprob: -4.018811225891113
    3. ' j' → logprob: -7.893811225891113
    4. ' ' → logprob: -8.518811225891113
    5. 'j' → logprob: -9.643811225891113
    6. '	i' → logprob: -11.768811225891113
    7. ' idx' → logprob: -12.143811225891113
    8. '   ' → logprob: -13.143811225891113
    9. '  ' → logprob: -13.643811225891113
    10. '```' → logprob: -13.643811225891113

Token 63: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.013439380563795567
    2. 'in' → logprob: -4.388439178466797
    3. ' ' → logprob: -7.138439178466797
    4. '  ' → logprob: -10.763439178466797
    5. '    ' → logprob: -10.763439178466797
    6. '	in' → logprob: -11.013439178466797
    7. '   ' → logprob: -11.263439178466797
    8. 'range' → logprob: -11.513439178466797
    9. '<|end|>' → logprob: -11.513439178466797
    10. ',' → logprob: -11.638439178466797

Token 64: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.11287810653448105
    2. 'range' → logprob: -2.2378780841827393
    3. ' ' → logprob: -11.23787784576416
    4. '	range' → logprob: -11.23787784576416
    5. ' xrange' → logprob: -11.48787784576416
    6. '(range' → logprob: -12.92537784576416
    7. '   ' → logprob: -13.05037784576416
    8. ')' → logprob: -13.23787784576416
    9. '```' → logprob: -13.36287784576416
    10. '  ' → logprob: -13.42537784576416

Token 65: '(index' (ID: 13517)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.6357108950614929
    2. '(index' → logprob: -0.8857108950614929
    3. '(' → logprob: -2.8857109546661377
    4. '(i' → logprob: -7.010710716247559
    5. ' (' → logprob: -7.510710716247559
    6. '(j' → logprob: -7.885710716247559
    7. 'N' → logprob: -9.385710716247559
    8. '(len' → logprob: -9.510710716247559
    9. 'index' → logprob: -10.510710716247559
    10. '(I' → logprob: -10.510710716247559

Token 66: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.576121985912323
    2. ' +' → logprob: -0.826121985912323
    3. '   ' → logprob: -9.951122283935547
    4. '1' → logprob: -10.576122283935547
    5. ' ' → logprob: -10.576122283935547
    6. '):
' → logprob: -10.701122283935547
    7. ')' → logprob: -11.076122283935547
    8. ',' → logprob: -11.201122283935547
    9. '):' → logprob: -11.451122283935547
    10. ' ,' → logprob: -12.201122283935547

Token 67: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004908377304673195
    2. ' ' → logprob: -7.625490665435791
    3. ',' → logprob: -14.25049114227295
    4. '   ' → logprob: -14.37549114227295
    5. '```' → logprob: -14.62549114227295
    6. ' ,' → logprob: -15.25049114227295
    7. ')' → logprob: -15.37549114227295
    8. '0' → logprob: -15.50049114227295
    9. '  ' → logprob: -16.250490188598633
    10. '    ' → logprob: -16.937990188598633

Token 68: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014208302600309253
    2. ' ,' → logprob: -6.751420974731445
    3. ',N' → logprob: -8.876420974731445
    4. ',n' → logprob: -9.876420974731445
    5. ',len' → logprob: -9.876420974731445
    6. '‌,' → logprob: -13.001420974731445
    7. ',length' → logprob: -13.501420974731445
    8. '(),' → logprob: -14.501420974731445
    9. '   ' → logprob: -14.501420974731445
    10. ',num' → logprob: -14.876420974731445

Token 69: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.009766122326254845
    2. ' N' → logprob: -4.634766101837158
    3. '   ' → logprob: -11.759766578674316
    4. 'n' → logprob: -13.884766578674316
    5. 'len' → logprob: -13.884766578674316
    6. '	N' → logprob: -15.634766578674316
    7. ' ' → logprob: -15.884766578674316
    8. ' len' → logprob: -16.884765625
    9. '    ' → logprob: -17.509765625
    10. '<N' → logprob: -17.759765625

Token 70: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0025052670389413834
    2. '):
' → logprob: -6.002505302429199
    3. ':' → logprob: -11.0025053024292
    4. ' ):' → logprob: -11.8775053024292
    5. '   ' → logprob: -12.7525053024292
    6. '):
' → logprob: -13.3775053024292
    7. ')' → logprob: -14.3775053024292
    8. '():' → logprob: -15.0025053024292
    9. '):

' → logprob: -15.7525053024292
    10. '}:' → logprob: -16.127504348754883

Token 71: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026591358706355095
    2. ':' → logprob: -3.7765913009643555
    3. '):' → logprob: -7.1515913009643555
    4. '<|end|>' → logprob: -7.1515913009643555
    5. ' if' → logprob: -7.7765913009643555
    6. '   ' → logprob: -8.151591300964355
    7. 'if' → logprob: -8.151591300964355
    8. ' ' → logprob: -8.526591300964355
    9. ' :' → logprob: -8.776591300964355
    10. ':
' → logprob: -9.276591300964355

Token 72: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5137391090393066
    2. '       ' → logprob: -1.0137391090393066
    3. 'if' (adapté à ' if') → logprob: -3.2637391090393066
    4. '   ' → logprob: -8.638738632202148
    5. '           ' → logprob: -9.013738632202148
    6. '
' → logprob: -9.013738632202148
    7. ' ' → logprob: -9.138738632202148
    8. '```' → logprob: -10.638738632202148
    9. '	if' → logprob: -11.013738632202148
    10. '    ' → logprob: -11.263738632202148

Token 73: ' lst' (ID: 33384)
  Prédit: ' lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lst' → logprob: -0.018154270946979523
    2. 'lst' → logprob: -4.018154144287109
    3. '(lst' → logprob: -12.76815414428711
    4. ' ls' → logprob: -14.64315414428711
    5. '    ' → logprob: -15.14315414428711
    6. '_lst' → logprob: -15.39315414428711
    7. '   ' → logprob: -15.76815414428711
    8. '.lst' → logprob: -16.51815414428711
    9. ' ' → logprob: -16.64315414428711
    10. 'list' → logprob: -16.89315414428711

Token 74: '[index' (ID: 11815)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0007181499968282878
    2. '[index' → logprob: -7.250718116760254
    3. '[' → logprob: -12.125718116760254
    4. '[i' → logprob: -13.500718116760254
    5. '```' → logprob: -15.125718116760254
    6. '[idx' → logprob: -15.750718116760254
    7. '[count' → logprob: -15.750718116760254
    8. 'j' → logprob: -15.875718116760254
    9. '[js' → logprob: -16.25071907043457
    10. ' [' → logprob: -16.37571907043457

Token 75: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10882651805877686
    2. '>' → logprob: -2.4838266372680664
    3. ']>' → logprob: -3.9838266372680664
    4. ' >' → logprob: -7.608826637268066
    5. ' ]' → logprob: -7.858826637268066
    6. '']' → logprob: -9.858826637268066
    7. ')' → logprob: -10.233826637268066
    8. '[' → logprob: -10.358826637268066
    9. ')>' → logprob: -11.233826637268066
    10. '   ' → logprob: -11.483826637268066

Token 76: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.1269814521074295
    2. ' >' → logprob: -2.126981496810913
    3. ' ' → logprob: -11.001981735229492
    4. '()>' → logprob: -11.876981735229492
    5. '   ' → logprob: -12.001981735229492
    6. '">' → logprob: -12.376981735229492
    7. '```' → logprob: -13.376981735229492
    8. '<|end|>' → logprob: -13.376981735229492
    9. '[' → logprob: -13.501981735229492
    10. ')' → logprob: -13.751981735229492

Token 77: ' lst' (ID: 33384)
  Prédit: ' lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lst' → logprob: -0.3868809938430786
    2. 'lst' → logprob: -1.1368809938430786
    3. '(lst' → logprob: -12.261880874633789
    4. '_lst' → logprob: -12.511880874633789
    5. '.lst' → logprob: -14.386880874633789
    6. 'list' → logprob: -14.761880874633789
    7. ' ' → logprob: -15.761880874633789
    8. 'Lst' → logprob: -16.01188087463379
    9. '<|end|>' → logprob: -16.38688087463379
    10. 'l' → logprob: -17.01188087463379

Token 78: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.0
    3. '```' → logprob: -17.5
    4. 'j' → logprob: -18.875
    5. '[
' → logprob: -19.0
    6. '[i' → logprob: -19.125
    7. ' [' → logprob: -19.625
    8. '][' → logprob: -19.75
    9. '[js' → logprob: -19.75
    10. '[index' → logprob: -20.625

Token 79: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010896162129938602
    2. '):
' → logprob: -7.751089572906494
    3. ':' → logprob: -8.001090049743652
    4. ')' → logprob: -8.751090049743652
    5. ']:' → logprob: -9.001090049743652
    6. ']):' → logprob: -11.126090049743652
    7. '<|end|>' → logprob: -11.876090049743652
    8. ' ):' → logprob: -12.376090049743652
    9. '   ' → logprob: -12.626090049743652
    10. ''):' → logprob: -12.876090049743652

Token 80: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008443537168204784
    2. ':' → logprob: -5.008443355560303
    3. '               ' → logprob: -7.633443355560303
    4. ':
' → logprob: -7.633443355560303
    5. '       ' → logprob: -8.258443832397461
    6. 'count' → logprob: -8.633443832397461
    7. '<|end|>' → logprob: -9.258443832397461
    8. ' :' → logprob: -10.008443832397461
    9. '<|end|>' → logprob: -10.758443832397461
    10. ' count' → logprob: -10.883443832397461

Token 81: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.5802578926086426
    2. '1' → logprob: -0.9552578926086426
    3. ' count' → logprob: -3.0802578926086426
    4. ' ' → logprob: -4.955257892608643
    5. '               ' → logprob: -6.705257892608643
    6. '           ' → logprob: -7.455257892608643
    7. ' 
' → logprob: -7.580257892608643
    8. '            ' → logprob: -9.205257415771484
    9. '                ' → logprob: -10.955257415771484
    10. '                   ' → logprob: -11.330257415771484

Token 82: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.04301357641816139
    2. '+=' → logprob: -3.168013572692871
    3. '+' → logprob: -11.543013572692871
    4. ' ' → logprob: -13.793013572692871
    5. '<|end|>' → logprob: -13.793013572692871
    6. '=' → logprob: -14.543013572692871
    7. ']+=' → logprob: -14.543013572692871
    8. ' +' → logprob: -14.793013572692871
    9. '    ' → logprob: -15.168013572692871
    10. ')' → logprob: -15.543013572692871

Token 83: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01603425107896328
    2. ' ' → logprob: -4.141034126281738
    3. '<|end|>' → logprob: -17.891035079956055
    4. ' ' → logprob: -18.016035079956055
    5. '   ' → logprob: -18.016035079956055
    6. '```' → logprob: -19.016035079956055
    7. '  ' → logprob: -19.578535079956055
    8. '１' → logprob: -19.766035079956055
    9. '۱' → logprob: -19.891035079956055
    10. '    ' → logprob: -20.516035079956055

Token 84: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '   ' → logprob: -19.5
    4. '<|end|>' → logprob: -20.375
    5. '```' → logprob: -20.375
    6. '１' → logprob: -21.75
    7. '۱' → logprob: -22.0
    8. '  ' → logprob: -22.0625
    9. '१' → logprob: -22.5
    10. ')' → logprob: -22.75

Token 85: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04692012816667557
    2. '
' → logprob: -3.29692006111145
    3. '<|end|>' → logprob: -5.046920299530029
    4. 'return' → logprob: -6.796920299530029
    5. '	return' → logprob: -7.296920299530029
    6. '<|end|>' → logprob: -8.671919822692871
    7. ' return' → logprob: -8.796919822692871
    8. '    
' → logprob: -9.046919822692871
    9. '       ' → logprob: -9.796919822692871
    10. ':return' → logprob: -10.546919822692871

Token 86: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003448792558629066
    2. 'return' → logprob: -8.750345230102539
    3. '	return' → logprob: -9.750345230102539
    4. '<|end|>' → logprob: -9.750345230102539
    5. '
' → logprob: -10.375345230102539
    6. '       ' → logprob: -11.000345230102539
    7. ' return' → logprob: -11.375345230102539
    8. '<|end|>' → logprob: -12.750345230102539
    9. '    
' → logprob: -12.875345230102539
    10. ':return' → logprob: -13.125345230102539

Token 87: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31783759593963623
    2. 'return' (adapté à ' return') → logprob: -1.3178375959396362
    3. ' return' → logprob: -5.442837715148926
    4. '
' → logprob: -9.442837715148926
    5. '	return' → logprob: -9.692837715148926
    6. '       ' → logprob: -10.567837715148926
    7. ':return' → logprob: -11.067837715148926
    8. '```' → logprob: -11.192837715148926
    9. 'def' → logprob: -11.192837715148926
    10. '<|end|>' → logprob: -11.442837715148926

Token 88: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.10020710527896881
    2. ' count' → logprob: -2.3502070903778076
    3. '	count' → logprob: -15.600207328796387
    4. '(count' → logprob: -16.22520637512207
    5. '[count' → logprob: -16.72520637512207
    6. '<count' → logprob: -17.47520637512207
    7. ' ' → logprob: -17.72520637512207
    8. '$count' → logprob: -18.10020637512207
    9. '   ' → logprob: -18.72520637512207
    10. ' ' → logprob: -19.35020637512207

Token 89: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4128287136554718
    2. '<|end|>' → logprob: -1.1628286838531494
    3. '
' → logprob: -4.0378289222717285
    4. '

' → logprob: -5.0378289222717285
    5. '<|end|>' → logprob: -7.5378289222717285
    6. '```' → logprob: -7.9128289222717285
    7. ' def' → logprob: -8.16282844543457
    8. '\n' → logprob: -9.41282844543457
    9. 'newline' → logprob: -10.41282844543457
    10. '\' → logprob: -10.53782844543457

Token 90: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0006167700630612671
    2. '
' → logprob: -8.250617027282715
    3. '<|end|>' → logprob: -8.500617027282715
    4. '```' → logprob: -9.000617027282715
    5. '

' → logprob: -11.000617027282715
    6. '<|end|>' → logprob: -13.125617027282715
    7. '  
' → logprob: -13.125617027282715
    8. 'import' → logprob: -13.625617027282715
    9. ' def' → logprob: -13.750617027282715
    10. '\' → logprob: -13.875617027282715

Token 91: ' increment' (ID: 24032)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.7271588444709778
    2. ' compute' → logprob: -1.477158784866333
    3. ' calculate' → logprob: -2.477158784866333
    4. ' get' → logprob: -3.227158784866333
    5. ' find' → logprob: -3.227158784866333
    6. ' count' → logprob: -3.477158784866333
    7. 'compute' → logprob: -3.852158784866333
    8. 'calculate' → logprob: -4.477159023284912
    9. 'count' → logprob: -4.602159023284912
    10. ' rank' → logprob: -4.977159023284912

Token 92: '_for' (ID: 11903)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.1535980701446533
    2. '_index' → logprob: -1.4035980701446533
    3. '_counter' → logprob: -1.5285980701446533
    4. '_count' → logprob: -3.0285980701446533
    5. '_' → logprob: -3.0285980701446533
    6. '_factor' → logprob: -3.7785980701446533
    7. '_per' → logprob: -3.7785980701446533
    8. '_indices' → logprob: -4.153597831726074
    9. '_string' → logprob: -5.153597831726074
    10. '_sequence' → logprob: -5.153597831726074

Token 93: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -1.0850571393966675
    2. '_lower' → logprob: -2.085057258605957
    3. '_factor' → logprob: -2.585057258605957
    4. '_duplicates' → logprob: -2.835057258605957
    5. '_duplicate' → logprob: -3.585057258605957
    6. '_elements' → logprob: -3.710057258605957
    7. '_list' → logprob: -3.835057258605957
    8. '_element' → logprob: -3.960057258605957
    9. '_' → logprob: -3.960057258605957
    10. '_unique' → logprob: -4.210057258605957

Token 94: '(lst' (ID: 95688)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6220756769180298
    2. '(index' → logprob: -0.9970756769180298
    3. '(lst' → logprob: -2.4970755577087402
    4. '(idx' → logprob: -5.24707555770874
    5. ' (' → logprob: -5.74707555770874
    6. '(i' → logprob: -6.87207555770874
    7. '(count' → logprob: -7.74707555770874
    8. '(value' → logprob: -7.87207555770874
    9. '(indices' → logprob: -8.247076034545898
    10. '(val' → logprob: -8.497076034545898

Token 95: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014829591382294893
    2. ',index' → logprob: -6.876482963562012
    3. ' ,' → logprob: -7.751482963562012
    4. '):' → logprob: -12.376482963562012
    5. ',i' → logprob: -12.376482963562012
    6. ',n' → logprob: -13.751482963562012
    7. ',N' → logprob: -13.751482963562012
    8. '   ' → logprob: -13.876482963562012
    9. 'index' → logprob: -13.876482963562012
    10. '```' → logprob: -14.251482963562012

Token 96: ' index' (ID: 3472)
  Prédit: ' index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.38696569204330444
    2. 'index' → logprob: -1.3869657516479492
    3. ' N' → logprob: -3.136965751647949
    4. 'N' → logprob: -4.511965751647949
    5. ' idx' → logprob: -5.011965751647949
    6. ' i' → logprob: -5.886965751647949
    7. 'idx' → logprob: -6.511965751647949
    8. 'i' → logprob: -7.011965751647949
    9. ' current' → logprob: -7.136965751647949
    10. ' val' → logprob: -7.386965751647949

Token 97: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02998778410255909
    2. '):' → logprob: -3.7799878120422363
    3. ' ,' → logprob: -5.154987812042236
    4. ',N' → logprob: -8.154987335205078
    5. '   ' → logprob: -8.529987335205078
    6. ' ):' → logprob: -8.779987335205078
    7. ')' → logprob: -8.904987335205078
    8. '):
' → logprob: -9.904987335205078
    9. ',n' → logprob: -10.029987335205078
    10. ',l' → logprob: -10.529987335205078

Token 98: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.31607335805892944
    2. ' N' → logprob: -1.3160734176635742
    3. ')' → logprob: -8.066073417663574
    4. 'value' → logprob: -8.191073417663574
    5. 'val' → logprob: -8.316073417663574
    6. 'n' → logprob: -8.441073417663574
    7. ' val' → logprob: -8.441073417663574
    8. ' ' → logprob: -8.566073417663574
    9. ' value' → logprob: -8.566073417663574
    10. 'count' → logprob: -8.941073417663574

Token 99: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00014072739577386528
    2. ',' → logprob: -9.750141143798828
    3. ')' → logprob: -9.875141143798828
    4. ':' → logprob: -11.000141143798828
    5. ' ):' → logprob: -11.625141143798828
    6. '   ' → logprob: -13.000141143798828
    7. '):
' → logprob: -13.000141143798828
    8. ' :' → logprob: -16.125141143798828
    9. ']:' → logprob: -16.250141143798828
    10. '():' → logprob: -16.375141143798828

Token 100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022521954961121082
    2. 'count' → logprob: -6.377252101898193
    3. ' count' → logprob: -7.627252101898193
    4. 'increment' → logprob: -10.627252578735352
    5. '```' → logprob: -12.502252578735352
    6. 'counter' → logprob: -12.752252578735352
    7. ':
' → logprob: -13.002252578735352
    8. 'for' → logprob: -13.127252578735352
    9. ':' → logprob: -13.127252578735352
    10. '    
' → logprob: -13.127252578735352

Token 101: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.16342929005622864
    2. '   ' → logprob: -2.0384292602539062
    3. ' count' → logprob: -5.038429260253906
    4. 'return' → logprob: -5.538429260253906
    5. 'cnt' → logprob: -5.538429260253906
    6. 'increment' → logprob: -6.288429260253906
    7. 'result' → logprob: -6.663429260253906
    8. 'for' → logprob: -7.288429260253906
    9. 'val' → logprob: -7.913429260253906
    10. 'total' → logprob: -7.913429260253906

Token 102: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018156733363866806
    2. '=' → logprob: -4.0181565284729
    3. ' ' → logprob: -12.893157005310059
    4. ' +=' → logprob: -13.143157005310059
    5. 'def' → logprob: -14.768157005310059
    6. '   ' → logprob: -14.893157005310059
    7. ',' → logprob: -15.393157005310059
    8. ' ' → logprob: -15.518157005310059
    9. '+=' → logprob: -15.768157005310059
    10. '```' → logprob: -16.018156051635742

Token 103: ' count' (ID: 3605)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10922183096408844
    2. ' ' → logprob: -2.359221935272217
    3. ' count' → logprob: -5.359221935272217
    4. 'count' → logprob: -5.609221935272217
    5. '   ' → logprob: -8.859221458435059
    6. ' sum' → logprob: -9.109221458435059
    7. 'sum' → logprob: -9.234221458435059
    8. ' lst' → logprob: -9.859221458435059
    9. ' len' → logprob: -9.984221458435059
    10. '1' → logprob: -10.234221458435059

Token 104: '_lower' (ID: 72335)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6424163579940796
    2. '+' → logprob: -0.7674163579940796
    3. ' ' → logprob: -5.267416477203369
    4. '<|end|>' → logprob: -6.017416477203369
    5. '0' → logprob: -7.892416477203369
    6. 'def' → logprob: -8.017416000366211
    7. '_' → logprob: -8.517416000366211
    8. 'for' → logprob: -8.642416000366211
    9. '   ' → logprob: -9.017416000366211
    10. '  ' → logprob: -9.142416000366211

Token 105: '_elements' (ID: 53344)
  Prédit: '_elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -3.5597102396423e-05
    2. 'elements' → logprob: -11.125035285949707
    3. '_' → logprob: -11.250035285949707
    4. '_items' → logprob: -13.875035285949707
    5. '_ELEMENTS' → logprob: -14.000035285949707
    6. 'ed' → logprob: -14.000035285949707
    7. 's' → logprob: -14.375035285949707
    8. ' _' → logprob: -14.375035285949707
    9. '_tokens' → logprob: -14.500035285949707
    10. '_element' → logprob: -14.625035285949707

Token 106: '(lst' (ID: 95688)
  Prédit: '(lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -4.7994282795116305e-05
    2. '(' → logprob: -10.00004768371582
    3. ' (' → logprob: -13.62504768371582
    4. '(ls' → logprob: -13.87504768371582
    5. '(list' → logprob: -16.75004768371582
    6. '(lista' → logprob: -16.87504768371582
    7. ' lst' → logprob: -17.00004768371582
    8. '(lhs' → logprob: -17.12504768371582
    9. '(l' → logprob: -17.37504768371582
    10. ' ' → logprob: -17.62504768371582

Token 107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00041518008220009506
    2. ' ,' → logprob: -8.375414848327637
    3. ',l' → logprob: -8.750414848327637
    4. '(lst' → logprob: -11.000414848327637
    5. ')' → logprob: -12.875414848327637
    6. ',index' → logprob: -13.125414848327637
    7. ',val' → logprob: -13.875414848327637
    8. ',list' → logprob: -13.875414848327637
    9. 'lst' → logprob: -14.000414848327637
    10. '   ' → logprob: -14.375414848327637

Token 108: ' index' (ID: 3472)
  Prédit: ' index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.1269339919090271
    2. 'index' → logprob: -2.126934051513672
    3. ' lst' → logprob: -12.876934051513672
    4. 'lst' → logprob: -13.126934051513672
    5. ')' → logprob: -14.876934051513672
    6. '   ' → logprob: -15.501934051513672
    7. '	index' → logprob: -15.751934051513672
    8. '```' → logprob: -16.001934051513672
    9. ' ' → logprob: -16.251934051513672
    10. ',index' → logprob: -16.251934051513672

Token 109: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016182278341148049
    2. ' ,' → logprob: -8.875162124633789
    3. ',N' → logprob: -11.625162124633789
    4. ')' → logprob: -12.250162124633789
    5. '+' → logprob: -12.500162124633789
    6. '   ' → logprob: -13.125162124633789
    7. '),' → logprob: -14.625162124633789
    8. '```' → logprob: -15.125162124633789
    9. ' +' → logprob: -15.250162124633789
    10. '+,' → logprob: -15.500162124633789

Token 110: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.5759637355804443
    2. 'N' → logprob: -0.8259637355804443
    3. ')' → logprob: -10.700963973999023
    4. '   ' → logprob: -14.075963973999023
    5. ' ' → logprob: -15.200963973999023
    6. '	N' → logprob: -15.450963973999023
    7. '```' → logprob: -16.200963973999023
    8. 'n' → logprob: -16.325963973999023
    9. '    ' → logprob: -16.325963973999023
    10. ',' → logprob: -16.575963973999023

Token 111: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004118173383176327
    2. ')
' → logprob: -5.504117965698242
    3. '   ' → logprob: -10.504117965698242
    4. ')
' → logprob: -12.629117965698242
    5. ' )' → logprob: -12.754117965698242
    6. ')

' → logprob: -13.129117965698242
    7. ')+' → logprob: -13.379117965698242
    8. ' ' → logprob: -13.629117965698242
    9. ')return' → logprob: -14.129117965698242
    10. ' )
' → logprob: -16.004117965698242

Token 112: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0039634667336940765
    2. 'return' → logprob: -6.378963470458984
    3. ' return' → logprob: -6.878963470458984
    4. '
' → logprob: -7.003963470458984
    5. '    
' → logprob: -9.003963470458984
    6. '+' → logprob: -9.503963470458984
    7. ' +' → logprob: -10.628963470458984
    8. '<|end|>' → logprob: -11.003963470458984
    9. '	return' → logprob: -11.503963470458984
    10. '  ' → logprob: -11.628963470458984

Token 113: ' fac' (ID: 3513)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8395956158638
    2. '   ' → logprob: -1.0895955562591553
    3. 'return' → logprob: -1.4645955562591553
    4. 'count' → logprob: -9.214595794677734
    5. ' count' → logprob: -9.339595794677734
    6. '
' → logprob: -9.464595794677734
    7. ' if' → logprob: -9.714595794677734
    8. '	return' → logprob: -9.964595794677734
    9. ' val' → logprob: -10.214595794677734
    10. 'def' → logprob: -10.839595794677734

Token 114: ' =' (ID: 314)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0024104926269501448
    2. 'tor' → logprob: -6.252410411834717
    3. 'count' → logprob: -8.877410888671875
    4. '   ' → logprob: -9.502410888671875
    5. '=' → logprob: -10.377410888671875
    6. '_count' → logprob: -10.377410888671875
    7. '(count' → logprob: -10.502410888671875
    8. 'val' → logprob: -10.627410888671875
    9. '_val' → logprob: -10.752410888671875
    10. 'tal' → logprob: -11.127410888671875

Token 115: ' compute' (ID: 23864)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.808190107345581
    2. 'math' → logprob: -1.308190107345581
    3. 'compute' → logprob: -1.558190107345581
    4. ' compute' → logprob: -2.683190107345581
    5. '   ' → logprob: -5.55819034576416
    6. '(math' → logprob: -7.55819034576416
    7. ' factorial' → logprob: -7.68319034576416
    8. 'factor' → logprob: -9.30819034576416
    9. 'len' → logprob: -9.30819034576416
    10. ' len' → logprob: -10.05819034576416

Token 116: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -1.1472419600977446e-06
    2. '_fact' → logprob: -14.500000953674316
    3. '_fac' → logprob: -14.875000953674316
    4. '_' → logprob: -15.875000953674316
    5. '_f' → logprob: -16.750001907348633
    6. 'factor' → logprob: -17.125001907348633
    7. ' factorial' → logprob: -18.125001907348633
    8. '_factory' → logprob: -18.750001907348633
    9. '(f' → logprob: -19.000001907348633
    10. '```' → logprob: -19.000001907348633

Token 117: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.05698031187057495
    2. 'orial' → logprob: -3.1819803714752197
    3. 'al' → logprob: -5.181980133056641
    4. 't' → logprob: -5.431980133056641
    5. 'atorial' → logprob: -6.681980133056641
    6. 'cial' → logprob: -7.181980133056641
    7. 'tal' → logprob: -7.556980133056641
    8. 'val' → logprob: -7.931980133056641
    9. 'tor' → logprob: -8.55698013305664
    10. 'rial' → logprob: -8.55698013305664

Token 118: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.5931678414344788
    2. '(len' → logprob: -0.8431678414344788
    3. '(' → logprob: -4.093167781829834
    4. '((' → logprob: -8.343168258666992
    5. '(n' → logprob: -9.218168258666992
    6. '(count' → logprob: -11.093168258666992
    7. '(length' → logprob: -11.218168258666992
    8. 'len' → logprob: -12.093168258666992
    9. '("("' → logprob: -12.218168258666992
    10. '('' → logprob: -12.593168258666992

Token 119: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.35069796442985535
    2. ' -' → logprob: -1.2256979942321777
    3. ')' → logprob: -6.600697994232178
    4. '-index' → logprob: -7.350697994232178
    5. '   ' → logprob: -8.85069751739502
    6. '-i' → logprob: -11.22569751739502
    7. ' )' → logprob: -11.35069751739502
    8. '(index' → logprob: -11.35069751739502
    9. 'index' → logprob: -11.60069751739502
    10. ' ' → logprob: -11.72569751739502

Token 120: '1' (ID: 16)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.11568823456764221
    2. '1' → logprob: -2.2406883239746094
    3. '(index' → logprob: -6.365688323974609
    4. ' index' → logprob: -6.865688323974609
    5. '   ' → logprob: -9.74068832397461
    6. '[index' → logprob: -11.61568832397461
    7. ' ' → logprob: -11.86568832397461
    8. '(' → logprob: -12.49068832397461
    9. '```' → logprob: -12.61568832397461
    10. ':index' → logprob: -12.86568832397461

Token 121: '-index' (ID: 45533)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.28960591554641724
    2. '-' → logprob: -1.4146058559417725
    3. '-index' → logprob: -4.789606094360352
    4. ')' → logprob: -9.539606094360352
    5. '   ' → logprob: -12.164606094360352
    6. '-input' → logprob: -12.289606094360352
    7. ' ' → logprob: -12.914606094360352
    8. '  ' → logprob: -13.289606094360352
    9. ' index' → logprob: -13.289606094360352
    10. '-update' → logprob: -13.539606094360352

Token 122: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011415231710998341
    2. ')
' → logprob: -9.125114440917969
    3. '   ' → logprob: -12.500114440917969
    4. ')

' → logprob: -14.625114440917969
    5. ')
' → logprob: -14.625114440917969
    6. ' )' → logprob: -14.875114440917969
    7. '))' → logprob: -16.12511444091797
    8. ')return' → logprob: -17.00011444091797
    9. ' ' → logprob: -18.00011444091797
    10. ')...' → logprob: -18.62511444091797

Token 123: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004779230337589979
    2. '
' → logprob: -5.50477933883667
    3. '    
' → logprob: -8.129778861999512
    4. 'return' → logprob: -8.629778861999512
    5. ' return' → logprob: -9.004778861999512
    6. '	return' → logprob: -9.379778861999512
    7. ' 
' → logprob: -12.254778861999512
    8. ')' → logprob: -12.754778861999512
    9. '
' → logprob: -12.879778861999512
    10. '  
' → logprob: -13.629778861999512

Token 124: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03495989739894867
    2. 'return' (adapté à ' return') → logprob: -3.7849597930908203
    3. ' return' → logprob: -4.78495979309082
    4. '
' → logprob: -5.78495979309082
    5. '    
' → logprob: -8.90995979309082
    6. '	return' → logprob: -9.65995979309082
    7. ' 
' → logprob: -12.78495979309082
    8. ' *' → logprob: -13.03495979309082
    9. '*' → logprob: -13.15995979309082
    10. '       ' → logprob: -13.28495979309082

Token 125: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.25203683972358704
    2. ' count' → logprob: -1.5020368099212646
    3. 'fac' → logprob: -9.752037048339844
    4. '   ' → logprob: -10.502037048339844
    5. ' fac' → logprob: -10.877037048339844
    6. '	count' → logprob: -13.502037048339844
    7. '(count' → logprob: -13.627037048339844
    8. '[count' → logprob: -15.127037048339844
    9. ' ' → logprob: -16.377037048339844
    10. ' ' → logprob: -17.127037048339844

Token 126: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.002809748286381364
    2. '*' → logprob: -5.877809524536133
    3. ' ' → logprob: -12.502809524536133
    4. ' ' → logprob: -14.252809524536133
    5. '   ' → logprob: -15.752809524536133
    6. ' +' → logprob: -15.877809524536133
    7. '+' → logprob: -16.127809524536133
    8. '  ' → logprob: -16.252809524536133
    9. '	' → logprob: -17.752809524536133
    10. '`' → logprob: -17.877809524536133

Token 127: ' fac' (ID: 3513)
  Prédit: ' fac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fac' → logprob: -0.3868783116340637
    2. 'fac' → logprob: -1.136878252029419
    3. ' ' → logprob: -13.13687801361084
    4. '_fac' → logprob: -13.38687801361084
    5. ' ' → logprob: -13.76187801361084
    6. ' faci' → logprob: -14.01187801361084
    7. ' fas' → logprob: -15.13687801361084
    8. 'fact' → logprob: -15.38687801361084
    9. '.fac' → logprob: -15.51187801361084
    10. 'f' → logprob: -15.63687801361084

Token 128: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.27706119418144226
    2. '
' → logprob: -1.9020612239837646
    3. '

' → logprob: -2.4020612239837646
    4. '<|end|>' → logprob: -6.2770609855651855
    5. ' def' → logprob: -9.902061462402344
    6. '```' → logprob: -10.027061462402344
    7. '\n' → logprob: -10.152061462402344
    8. '
' → logprob: -10.402061462402344
    9. '+' → logprob: -10.527061462402344
    10. '<|end|>' → logprob: -10.902061462402344

Token 129: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008245994336903095
    2. '
' → logprob: -5.133245944976807
    3. '

' → logprob: -6.383245944976807
    4. '<|end|>' → logprob: -7.508245944976807
    5. '+' → logprob: -11.133246421813965
    6. '```' → logprob: -11.383246421813965
    7. ' def' → logprob: -11.383246421813965
    8. '\' → logprob: -11.758246421813965
    9. '\n' → logprob: -12.133246421813965
    10. '<|end|>' → logprob: -12.508246421813965

Token 130: ' compute' (ID: 23864)
  Prédit: ' compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.38723093271255493
    2. ' calculate' → logprob: -1.6372308731079102
    3. ' main' → logprob: -2.88723087310791
    4. 'compute' → logprob: -3.76223087310791
    5. ' sum' → logprob: -4.51223087310791
    6. 'calculate' → logprob: -4.63723087310791
    7. ' get' → logprob: -4.76223087310791
    8. ' count' → logprob: -5.76223087310791
    9. ' permutation' → logprob: -5.76223087310791
    10. ' find' → logprob: -5.88723087310791

Token 131: '_score' (ID: 22555)
  Prédit: '_per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.6634206771850586
    2. '_' → logprob: -1.0384206771850586
    3. '_factor' → logprob: -2.4134206771850586
    4. '_total' → logprob: -3.9134206771850586
    5. '_rank' → logprob: -4.913420677185059
    6. '_index' → logprob: -5.538420677185059
    7. '_code' → logprob: -6.163420677185059
    8. '_sequence' → logprob: -6.413420677185059
    9. '_le' → logprob: -6.788420677185059
    10. '_unique' → logprob: -6.788420677185059

Token 132: '(lst' (ID: 95688)
  Prédit: '(lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.0002491807099431753
    2. '(' → logprob: -8.375248908996582
    3. '(ls' → logprob: -12.250248908996582
    4. '(l' → logprob: -12.250248908996582
    5. ' (' → logprob: -12.500248908996582
    6. '(lista' → logprob: -13.000248908996582
    7. '(nums' → logprob: -14.125248908996582
    8. '(list' → logprob: -14.375248908996582
    9. '(arr' → logprob: -15.250248908996582
    10. '(L' → logprob: -15.250248908996582

Token 133: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009175215847790241
    2. ',' → logprob: -4.7591753005981445
    3. '):
' → logprob: -7.7591753005981445
    4. ')' → logprob: -9.634175300598145
    5. ' ):' → logprob: -10.759175300598145
    6. '   ' → logprob: -11.009175300598145
    7. ',n' → logprob: -11.759175300598145
    8. '):
' → logprob: -11.884175300598145
    9. ',N' → logprob: -12.259175300598145
    10. ',l' → logprob: -13.009175300598145

Token 134: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.029803946614265442
    2. ' N' → logprob: -3.529803991317749
    3. ')' → logprob: -11.029804229736328
    4. '   ' → logprob: -11.779804229736328
    5. 'index' → logprob: -11.779804229736328
    6. 'n' → logprob: -11.904804229736328
    7. ' ' → logprob: -12.404804229736328
    8. '):
' → logprob: -13.279804229736328
    9. '	N' → logprob: -13.779804229736328
    10. ' )' → logprob: -14.029804229736328

Token 135: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00020854694594163448
    2. '):
' → logprob: -8.500208854675293
    3. ')' → logprob: -12.625208854675293
    4. ' ):' → logprob: -14.500208854675293
    5. '):
' → logprob: -14.500208854675293
    6. ':' → logprob: -15.000208854675293
    7. '   ' → logprob: -15.000208854675293
    8. ',' → logprob: -16.625207901000977
    9. '):

' → logprob: -18.250207901000977
    10. ' ' → logprob: -18.875207901000977

Token 136: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5805214643478394
    2. 'score' → logprob: -0.8305214643478394
    3. ' score' → logprob: -5.955521583557129
    4. 'total' → logprob: -6.455521583557129
    5. 'result' → logprob: -8.080521583557129
    6. ' total' → logprob: -10.580521583557129
    7. 'sum' → logprob: -10.955521583557129
    8. '	score' → logprob: -11.330521583557129
    9. 'res' → logprob: -11.455521583557129
    10. '```' → logprob: -11.705521583557129

Token 137: ' total' (ID: 3609)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.012951972894370556
    2. 'total' (adapté à ' total') → logprob: -4.762951850891113
    3. 'result' → logprob: -6.387951850891113
    4. ' score' → logprob: -6.512951850891113
    5. '   ' → logprob: -7.262951850891113
    6. 'res' → logprob: -8.387951850891113
    7. 'sum' → logprob: -9.512951850891113
    8. '
' → logprob: -10.012951850891113
    9. 'ans' → logprob: -10.262951850891113
    10. ' total' → logprob: -10.387951850891113

Token 138: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43737825751304626
    2. '_score' → logprob: -1.6873782873153687
    3. '_' → logprob: -1.9373782873153687
    4. '=' → logprob: -3.687378168106079
    5. ' _' → logprob: -9.6873779296875
    6. '_scores' → logprob: -10.3123779296875
    7. 'score' → logprob: -11.4373779296875
    8. '_sum' → logprob: -11.6873779296875
    9. 'Score' → logprob: -11.9373779296875
    10. '_=' → logprob: -11.9373779296875

Token 139: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04859872907400131
    2. ' ' → logprob: -3.0485987663269043
    3. '1' → logprob: -12.173598289489746
    4. '   ' → logprob: -13.048598289489746
    5. 'sum' → logprob: -13.173598289489746
    6. 's' → logprob: -15.173598289489746
    7. 'int' → logprob: -15.173598289489746
    8. ' sum' → logprob: -15.173598289489746
    9. 'math' → logprob: -15.173598289489746
    10. ' math' → logprob: -15.298598289489746

Token 140: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.951771421066951e-05
    2. 'sum' → logprob: -11.125029563903809
    3. ' ' → logprob: -11.250029563903809
    4. '1' → logprob: -13.625029563903809
    5. '   ' → logprob: -15.250029563903809
    6. '```' → logprob: -16.375028610229492
    7. 'math' → logprob: -16.500028610229492
    8. 'len' → logprob: -16.875028610229492
    9. 'int' → logprob: -17.125028610229492
    10. '
' → logprob: -17.437528610229492

Token 141: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0158291757106781
    2. '   ' → logprob: -4.515829086303711
    3. '<|end|>' → logprob: -6.015829086303711
    4. ' for' → logprob: -6.765829086303711
    5. '    
' → logprob: -8.015829086303711
    6. 'for' → logprob: -8.265829086303711
    7. '  
' → logprob: -9.015829086303711
    8. '\n' → logprob: -9.140829086303711
    9. '
' → logprob: -9.640829086303711
    10. '<|end|>' → logprob: -10.015829086303711

Token 142: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.704218864440918
    2. '<|end|>' → logprob: -1.454218864440918
    3. '   ' → logprob: -1.579218864440918
    4. ' for' → logprob: -2.954218864440918
    5. 'for' → logprob: -5.454218864440918
    6. '    
' → logprob: -5.829218864440918
    7. '  
' → logprob: -6.454218864440918
    8. ' ' → logprob: -6.454218864440918
    9. '<|end|>' → logprob: -6.954218864440918
    10. '	for' → logprob: -7.329218864440918

Token 143: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -2.0339031834737398e-05
    2. '   ' → logprob: -11.500020027160645
    3. ' for' → logprob: -11.500020027160645
    4. '	for' → logprob: -17.25002098083496
    5. '
' → logprob: -18.00002098083496
    6. '```' → logprob: -19.25002098083496
    7. '    
' → logprob: -20.00002098083496
    8. ' ' → logprob: -21.62502098083496
    9. '  ' → logprob: -22.12502098083496
    10. '       ' → logprob: -22.12502098083496

Token 144: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.034175436943769455
    2. 'i' → logprob: -3.409175395965576
    3. ' index' → logprob: -8.284175872802734
    4. 'index' → logprob: -8.284175872802734
    5. ' ' → logprob: -11.659175872802734
    6. ' idx' → logprob: -11.909175872802734
    7. '	i' → logprob: -13.034175872802734
    8. '   ' → logprob: -13.534175872802734
    9. '```' → logprob: -13.784175872802734
    10. 'idx' → logprob: -13.784175872802734

Token 145: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002565195318311453
    2. 'in' → logprob: -6.002565383911133
    3. ' ' → logprob: -9.377565383911133
    4. 'n' → logprob: -12.877565383911133
    5. ',' → logprob: -14.002565383911133
    6. ' i' → logprob: -14.752565383911133
    7. 's' → logprob: -15.752565383911133
    8. '  ' → logprob: -15.752565383911133
    9. '	in' → logprob: -15.877565383911133
    10. '```' → logprob: -15.877565383911133

Token 146: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07889275997877121
    2. ' range' → logprob: -2.578892707824707
    3. '   ' → logprob: -13.703892707824707
    4. '	range' → logprob: -14.203892707824707
    5. '(range' → logprob: -14.328892707824707
    6. ' ' → logprob: -15.203892707824707
    7. '```' → logprob: -15.953892707824707
    8. '  ' → logprob: -16.078893661499023
    9. ')' → logprob: -17.953893661499023
    10. '
' → logprob: -18.078893661499023

Token 147: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0036677715834230185
    2. '(' → logprob: -5.628667831420898
    3. ' (' → logprob: -9.753667831420898
    4. 'N' → logprob: -12.503667831420898
    5. '(len' → logprob: -12.878667831420898
    6. '(n' → logprob: -13.878667831420898
    7. '(
' → logprob: -13.878667831420898
    8. '   ' → logprob: -13.878667831420898
    9. ' N' → logprob: -15.378667831420898
    10. ' ' → logprob: -16.3786678314209

Token 148: '-' (ID: 12)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000735177774913609
    2. '):
' → logprob: -7.250735282897949
    3. ':' → logprob: -11.25073528289795
    4. ' ):' → logprob: -12.25073528289795
    5. '   ' → logprob: -12.75073528289795
    6. ')' → logprob: -12.87573528289795
    7. ',' → logprob: -14.87573528289795
    8. '+' → logprob: -14.87573528289795
    9. '}:' → logprob: -14.87573528289795
    10. '):
' → logprob: -15.25073528289795

Token 149: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023750975378789008
    2. ' ' → logprob: -9.000237464904785
    3. '0' → logprob: -10.000237464904785
    4. ')' → logprob: -10.375237464904785
    5. 'len' → logprob: -10.625237464904785
    6. '```' → logprob: -12.625237464904785
    7. 'int' → logprob: -13.125237464904785
    8. '   ' → logprob: -13.625237464904785
    9. 'length' → logprob: -13.625237464904785
    10. 'i' → logprob: -14.000237464904785

Token 150: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06662511825561523
    2. '):
' → logprob: -3.0666251182556152
    3. ',' → logprob: -4.066625118255615
    4. ' ):' → logprob: -8.316625595092773
    5. ')' → logprob: -8.566625595092773
    6. '):
' → logprob: -9.191625595092773
    7. ':' → logprob: -9.566625595092773
    8. '   ' → logprob: -10.191625595092773
    9. '):

' → logprob: -10.441625595092773
    10. ' ,' → logprob: -11.066625595092773

Token 151: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004628296010196209
    2. ' total' → logprob: -6.3796281814575195
    3. '   ' → logprob: -6.6296281814575195
    4. '
' → logprob: -7.2546281814575195
    5. 'total' → logprob: -7.5046281814575195
    6. '(total' → logprob: -9.00462818145752
    7. '<|end|>' → logprob: -9.75462818145752
    8. ',' → logprob: -10.25462818145752
    9. ',total' → logprob: -10.50462818145752
    10. '    
' → logprob: -10.75462818145752

Token 152: ' inc' (ID: 4570)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.17180532217025757
    2. 'total' → logprob: -1.9218053817749023
    3. '       ' → logprob: -4.671805381774902
    4. '   ' → logprob: -6.171805381774902
    5. '	total' → logprob: -10.546805381774902
    6. '           ' → logprob: -10.921805381774902
    7. '
' → logprob: -11.296805381774902
    8. ',total' → logprob: -12.046805381774902
    9. '(total' → logprob: -12.921805381774902
    10. ' ' → logprob: -13.921805381774902

Token 153: ' =' (ID: 314)
  Prédit: 'rement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rement' → logprob: -0.08758477866649628
    2. ' =' → logprob: -2.9625847339630127
    3. '_for' → logprob: -4.337584972381592
    4. '=' → logprob: -4.962584972381592
    5. 'r' → logprob: -5.212584972381592
    6. 're' → logprob: -6.212584972381592
    7. 'ent' → logprob: -6.337584972381592
    8. 'ment' → logprob: -7.462584972381592
    9. 'ement' → logprob: -7.587584972381592
    10. '_' → logprob: -7.712584972381592

Token 154: ' increment' (ID: 24032)
  Prédit: 'increment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'increment' → logprob: -0.011047814972698689
    2. ' increment' → logprob: -4.511047840118408
    3. ' incremental' → logprob: -17.26104736328125
    4. 'increments' → logprob: -19.88604736328125
    5. '.increment' → logprob: -20.38604736328125
    6. '_increment' → logprob: -21.13604736328125
    7. 'Increment' → logprob: -22.01104736328125
    8. ' increments' → logprob: -22.26104736328125
    9. '   ' → logprob: -22.88604736328125
    10. 'int' → logprob: -23.38604736328125

Token 155: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -1.5332478142227046e-05
    2. 'for' → logprob: -11.125015258789062
    3. 'For' → logprob: -15.375015258789062
    4. '_' → logprob: -16.625015258789062
    5. ' for' → logprob: -17.250015258789062
    6. '```' → logprob: -17.625015258789062
    7. '[' → logprob: -17.875015258789062
    8. '_FOR' → logprob: -17.875015258789062
    9. '   ' → logprob: -18.000015258789062
    10. '(' → logprob: -18.625015258789062

Token 156: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0053075160831213
    2. 'index' → logprob: -5.255307674407959
    3. 'lst' → logprob: -10.2553071975708
    4. '_' → logprob: -11.1303071975708
    5. '_score' → logprob: -12.2553071975708
    6. '```' → logprob: -12.5053071975708
    7. '_list' → logprob: -13.0053071975708
    8. 'i' → logprob: -13.1303071975708
    9. '_idx' → logprob: -13.1303071975708
    10. '_i' → logprob: -13.3803071975708

Token 157: '(lst' (ID: 95688)
  Prédit: '(lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.00023369524569716305
    2. '(' → logprob: -8.37523365020752
    3. '(ls' → logprob: -13.75023365020752
    4. ' (' → logprob: -14.50023365020752
    5. '(
' → logprob: -14.50023365020752
    6. 'lst' → logprob: -14.62523365020752
    7. '(lista' → logprob: -15.87523365020752
    8. '(list' → logprob: -16.625234603881836
    9. '(

' → logprob: -16.625234603881836
    10. '(l' → logprob: -17.000234603881836

Token 158: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001705771079286933
    2. ',l' → logprob: -6.501705646514893
    3. '(lst' → logprob: -9.25170612335205
    4. ' ,' → logprob: -9.62670612335205
    5. 'lst' → logprob: -11.37670612335205
    6. ')' → logprob: -12.00170612335205
    7. ',i' → logprob: -12.12670612335205
    8. '   ' → logprob: -12.25170612335205
    9. ',
' → logprob: -12.50170612335205
    10. ' lst' → logprob: -12.62670612335205

Token 159: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0006273718317970634
    2. ' i' → logprob: -7.375627517700195
    3. '   ' → logprob: -15.375627517700195
    4. ')i' → logprob: -15.875627517700195
    5. ')' → logprob: -16.000627517700195
    6. '	i' → logprob: -16.125627517700195
    7. 'lst' → logprob: -16.250627517700195
    8. '[i' → logprob: -17.000627517700195
    9. ' ' → logprob: -17.250627517700195
    10. ',i' → logprob: -17.875627517700195

Token 160: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001217813478433527
    2. ',N' → logprob: -9.5001220703125
    3. ' ,' → logprob: -10.0001220703125
    4. '   ' → logprob: -15.2501220703125
    5. ')' → logprob: -15.2501220703125
    6. '),' → logprob: -15.5001220703125
    7. '‌,' → logprob: -15.7501220703125
    8. '```' → logprob: -15.7501220703125
    9. ',n' → logprob: -15.8751220703125
    10. '`,' → logprob: -16.7501220703125

Token 161: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.04859009385108948
    2. ' N' → logprob: -3.0485901832580566
    3. '   ' → logprob: -13.173589706420898
    4. ')' → logprob: -14.548589706420898
    5. ' ' → logprob: -16.0485897064209
    6. '	N' → logprob: -16.4235897064209
    7. '    ' → logprob: -17.0485897064209
    8. '  ' → logprob: -18.5485897064209
    9. ',N' → logprob: -18.7985897064209
    10. '```' → logprob: -19.1735897064209

Token 162: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.387258380651474
    2. ')
' → logprob: -1.1372584104537964
    3. '       ' → logprob: -8.387258529663086
    4. ')
' → logprob: -8.762258529663086
    5. ')

' → logprob: -13.137258529663086
    6. '   ' → logprob: -15.012258529663086
    7. ' )
' → logprob: -16.137258529663086
    8. '),' → logprob: -16.387258529663086
    9. ' )' → logprob: -16.387258529663086
    10. ')`
' → logprob: -16.512258529663086

Token 163: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008033146150410175
    2. '
' → logprob: -7.875803470611572
    3. '   ' → logprob: -8.000802993774414
    4. ' total' → logprob: -9.875802993774414
    5. 'total' → logprob: -10.625802993774414
    6. '```' → logprob: -12.625802993774414
    7. '<|end|>' → logprob: -13.000802993774414
    8. ' ' → logprob: -13.375802993774414
    9. '        
' → logprob: -14.250802993774414
    10. '           ' → logprob: -14.375802993774414

Token 164: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.3129832148551941
    2. 'total' (adapté à ' total') → logprob: -1.8129832744598389
    3. '       ' → logprob: -2.312983274459839
    4. '
' → logprob: -5.06298303604126
    5. '   ' → logprob: -9.312983512878418
    6. '	total' → logprob: -9.312983512878418
    7. '           ' → logprob: -10.812983512878418
    8. '(total' → logprob: -11.187983512878418
    9. '_total' → logprob: -11.187983512878418
    10. ' ' → logprob: -11.562983512878418

Token 165: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.06197687238454819
    2. '+=' → logprob: -2.811976909637451
    3. '=' → logprob: -12.936976432800293
    4. '```' → logprob: -13.186976432800293
    5. '+' → logprob: -13.311976432800293
    6. '   ' → logprob: -13.436976432800293
    7. ']+=' → logprob: -14.436976432800293
    8. '    ' → logprob: -14.561976432800293
    9. ' =' → logprob: -15.686976432800293
    10. '	' → logprob: -16.31197738647461

Token 166: ' inc' (ID: 4570)
  Prédit: ' inc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inc' → logprob: -0.01814994215965271
    2. 'inc' → logprob: -4.0181498527526855
    3. ' incr' → logprob: -17.768150329589844
    4. '.inc' → logprob: -18.268150329589844
    5. '_inc' → logprob: -18.768150329589844
    6. ' increment' → logprob: -18.893150329589844
    7. 'increment' → logprob: -19.018150329589844
    8. 'incip' → logprob: -20.643150329589844
    9. 'int' → logprob: -20.768150329589844
    10. ' ' → logprob: -21.018150329589844

Token 167: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12766513228416443
    2. '   ' → logprob: -2.1276650428771973
    3. '    
' → logprob: -8.377665519714355
    4. '
' → logprob: -8.752665519714355
    5. ' return' → logprob: -8.752665519714355
    6. 'return' → logprob: -9.002665519714355
    7. '<|end|>' → logprob: -11.377665519714355
    8. '  
' → logprob: -11.502665519714355
    9. '	return' → logprob: -11.627665519714355
    10. '\n' → logprob: -11.627665519714355

Token 168: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014238021336495876
    2. '
' → logprob: -4.389237880706787
    3. 'return' → logprob: -6.889237880706787
    4. ' return' → logprob: -7.764237880706787
    5. '    
' → logprob: -8.389238357543945
    6. '	return' → logprob: -10.639238357543945
    7. '
' → logprob: -11.514238357543945
    8. '```' → logprob: -11.889238357543945
    9. '  
' → logprob: -12.764238357543945
    10. ' 
' → logprob: -12.764238357543945

Token 169: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4903935492038727
    2. '   ' → logprob: -1.6153935194015503
    3. 'return' (adapté à ' return') → logprob: -1.9903935194015503
    4. '
' → logprob: -2.99039363861084
    5. '    
' → logprob: -6.99039363861084
    6. '	return' → logprob: -7.61539363861084
    7. '+' → logprob: -8.61539363861084
    8. '+
' → logprob: -9.99039363861084
    9. ' 
' → logprob: -10.11539363861084
    10. ' ' → logprob: -10.24039363861084

Token 170: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.16022585332393646
    2. 'total' → logprob: -1.9102258682250977
    3. '0' → logprob: -13.660225868225098
    4. '(total' → logprob: -15.535225868225098
    5. ' ' → logprob: -15.785225868225098
    6. '	total' → logprob: -17.41022491455078
    7. ' ' → logprob: -17.91022491455078
    8. ' tot' → logprob: -18.03522491455078
    9. '_total' → logprob: -18.03522491455078
    10. 't' → logprob: -18.16022491455078

Token 171: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 172: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05199381709098816
    2. '<|end|>' → logprob: -3.3019938468933105
    3. '
' → logprob: -4.9269938468933105
    4. '#' → logprob: -5.1769938468933105
    5. '```' → logprob: -7.8019938468933105
    6. '\' → logprob: -8.551993370056152
    7. 'print' → logprob: -9.801993370056152
    8. 'n' → logprob: -10.301993370056152
    9. '<|end|>' → logprob: -10.301993370056152
    10. '

' → logprob: -10.551993370056152

Token 173: ' print' (ID: 2123)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.1813197135925293
    2. ' main' → logprob: -1.8063197135925293
    3. 'compute' → logprob: -7.181319713592529
    4. 'read' → logprob: -8.556320190429688
    5. 'calculate' → logprob: -8.681320190429688
    6. 'solve' → logprob: -8.681320190429688
    7. ' compute' → logprob: -9.806320190429688
    8. 'score' → logprob: -10.181320190429688
    9. ' solve' → logprob: -10.306320190429688
    10. 'process' → logprob: -10.556320190429688

Token 174: '_result' (ID: 11623)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.42907795310020447
    2. '_score' → logprob: -1.4290779829025269
    3. '_' → logprob: -2.4290778636932373
    4. '("_' → logprob: -4.554078102111816
    5. '_rank' → logprob: -5.929078102111816
    6. '_scores' → logprob: -6.304078102111816
    7. '_(' → logprob: -6.804078102111816
    8. '('_' → logprob: -6.804078102111816
    9. '(_' → logprob: -7.179078102111816
    10. '_result' → logprob: -7.429078102111816

Token 175: '(diff' (ID: 84195)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.03829864040017128
    2. '(lst' → logprob: -3.2882986068725586
    3. '(' → logprob: -9.163298606872559
    4. ' ():' → logprob: -9.788298606872559
    5. '()' → logprob: -10.288298606872559
    6. '():
' → logprob: -10.413298606872559
    7. '(l' → logprob: -11.288298606872559
    8. '(ls' → logprob: -11.538298606872559
    9. '(list' → logprob: -13.663298606872559
    10. '(ll' → logprob: -13.663298606872559

Token 176: '):
' (ID: 1883)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.6512407064437866
    2. '):' → logprob: -0.7762407064437866
    3. ')' → logprob: -4.526240825653076
    4. '_' → logprob: -6.776240825653076
    5. ')_' → logprob: -7.151240825653076
    6. '):
' → logprob: -7.151240825653076
    7. '**' → logprob: -7.401240825653076
    8. 'ering' → logprob: -8.026240348815918
    9. 'rence' → logprob: -8.026240348815918
    10. '(' → logprob: -8.276240348815918

Token 177: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.6318095326423645
    2. ':' → logprob: -0.8818095326423645
    3. '   ' → logprob: -3.2568094730377197
    4. '():
' → logprob: -4.506809711456299
    5. ':
' → logprob: -5.631809711456299
    6. '):' → logprob: -7.756809711456299
    7. '(diff' → logprob: -8.25680923461914
    8. '(' → logprob: -8.38180923461914
    9. '(":' → logprob: -9.50680923461914
    10. '()' → logprob: -10.38180923461914

Token 178: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.5376619100570679
    2. '   ' → logprob: -1.0376619100570679
    3. 'print' (adapté à ' print') → logprob: -2.7876620292663574
    4. '```' → logprob: -10.2876615524292
    5. 'def' → logprob: -12.1626615524292
    6. ' def' → logprob: -14.6626615524292
    7. '    ' → logprob: -15.0376615524292
    8. '	print' → logprob: -15.4126615524292
    9. ' if' → logprob: -16.537662506103516
    10. '
' → logprob: -16.662662506103516

Token 179: '(diff' (ID: 84195)
  Prédit: '(diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(diff' → logprob: -0.0032399820629507303
    2. '(' → logprob: -5.87824010848999
    3. '(f' → logprob: -8.628239631652832
    4. '(abs' → logprob: -8.753239631652832
    5. 'diff' → logprob: -9.378239631652832
    6. '()' → logprob: -11.753239631652832
    7. '("' → logprob: -14.003239631652832
    8. '(int' → logprob: -14.003239631652832
    9. '("")' → logprob: -14.253239631652832
    10. '('' → logprob: -14.378239631652832

Token 180: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ')`' → logprob: -15.125000953674316
    3. ' )' → logprob: -16.25
    4. '))' → logprob: -16.875
    5. ')
' → logprob: -17.125
    6. '(' → logprob: -17.375
    7. '')' → logprob: -17.375
    8. '   ' → logprob: -17.5
    9. '")' → logprob: -17.875
    10. '`)' → logprob: -17.875

Token 181: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04320037364959717
    2. '
' → logprob: -3.1682004928588867
    3. '<|end|>' → logprob: -9.418200492858887
    4. '

' → logprob: -9.668200492858887
    5. 'lst' → logprob: -11.168200492858887
    6. '```' → logprob: -11.293200492858887
    7. '  
' → logprob: -12.168200492858887
    8. 'if' → logprob: -12.293200492858887
    9. '
' → logprob: -12.668200492858887
    10. '\' → logprob: -12.793200492858887

Token 182: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.6106870174407959
    2. 'main' → logprob: -1.235687017440796
    3. 'def' → logprob: -2.485687017440796
    4. 'if' → logprob: -2.860687017440796
    5. ' def' → logprob: -4.360687255859375
    6. '__' → logprob: -4.610687255859375
    7. ' __' → logprob: -6.110687255859375
    8. ' if' → logprob: -7.735687255859375
    9. 'read' → logprob: -9.110687255859375
    10. 'calculate' → logprob: -9.235687255859375

Token 183: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -2.2127087504486553e-05
    2. '():
' → logprob: -10.875021934509277
    3. ' ():' → logprob: -13.000021934509277
    4. '()' → logprob: -14.250021934509277
    5. '(' → logprob: -16.125022888183594
    6. '():
' → logprob: -17.125022888183594
    7. '_' → logprob: -18.250022888183594
    8. '():

' → logprob: -18.625022888183594
    9. ':' → logprob: -19.750022888183594
    10. '(:' → logprob: -19.750022888183594

Token 184: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011480755638331175
    2. 'n' → logprob: -8.126148223876953
    3. ' N' → logprob: -8.251148223876953
    4. 'N' → logprob: -9.001148223876953
    5. 'lst' → logprob: -9.126148223876953
    6. '```' → logprob: -9.376148223876953
    7. '()' → logprob: -9.626148223876953
    8. '    
' → logprob: -9.876148223876953
    9. ' ' → logprob: -10.501148223876953
    10. ' lst' → logprob: -10.751148223876953

Token 185: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.3405683636665344
    2. ' N' → logprob: -1.3405683040618896
    3. 'n' → logprob: -3.8405683040618896
    4. '   ' → logprob: -5.465568542480469
    5. ' n' → logprob: -6.715568542480469
    6. '```' → logprob: -11.840568542480469
    7. ' ' → logprob: -12.965568542480469
    8. 't' → logprob: -13.840568542480469
    9. '	N' → logprob: -13.840568542480469
    10. '    
' → logprob: -14.340568542480469

Token 186: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07891787588596344
    2. '=' → logprob: -2.578917980194092
    3. ',' → logprob: -10.828917503356934
    4. '=int' → logprob: -12.078917503356934
    5. ')' → logprob: -14.078917503356934
    6. ' ' → logprob: -14.578917503356934
    7. '   ' → logprob: -15.078917503356934
    8. '=input' → logprob: -15.078917503356934
    9. ' =
' → logprob: -15.203917503356934
    10. ' ,' → logprob: -16.45391845703125

Token 187: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.5760225057601929
    2. 'read' → logprob: -0.8260225057601929
    3. ' int' → logprob: -9.826022148132324
    4. 'int' → logprob: -10.451022148132324
    5. '	read' → logprob: -16.20102310180664
    6. ' ' → logprob: -17.95102310180664
    7. '(read' → logprob: -18.20102310180664
    8. '   ' → logprob: -18.82602310180664
    9. '  ' → logprob: -18.95102310180664
    10. '.read' → logprob: -19.45102310180664

Token 188: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.002691578818485141
    2. '_' → logprob: -6.002691745758057
    3. '_in' → logprob: -9.752691268920898
    4. 'int' → logprob: -10.252691268920898
    5. ' _' → logprob: -10.502691268920898
    6. '_integer' → logprob: -10.877691268920898
    7. '_line' → logprob: -11.002691268920898
    8. '(' → logprob: -11.752691268920898
    9. '_val' → logprob: -11.752691268920898
    10. '```' → logprob: -11.877691268920898

Token 189: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.1928003813372925e-05
    2. '()
' → logprob: -9.875051498413086
    3. '()

' → logprob: -15.625051498413086
    4. '()\' → logprob: -16.125051498413086
    5. ' ()' → logprob: -16.250051498413086
    6. '()
' → logprob: -17.500051498413086
    7. '()`' → logprob: -17.625051498413086
    8. '())' → logprob: -17.625051498413086
    9. '()<' → logprob: -18.500051498413086
    10. '()"' → logprob: -19.250051498413086

Token 190: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06653378158807755
    2. 'lst' → logprob: -2.8165338039398193
    3. ' lst' → logprob: -6.19153356552124
    4. '    
' → logprob: -6.94153356552124
    5. '<|end|>' → logprob: -7.06653356552124
    6. '
' → logprob: -8.316534042358398
    7. '[' → logprob: -9.691534042358398
    8. '  ' → logprob: -9.691534042358398
    9. '_lst' → logprob: -9.816534042358398
    10. '(lst' → logprob: -9.941534042358398

Token 191: ' p' (ID: 275)
  Prédit: ' lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lst' → logprob: -0.5259623527526855
    2. 'lst' → logprob: -0.9009623527526855
    3. '   ' → logprob: -6.2759623527526855
    4. 'arr' → logprob: -7.1509623527526855
    5. ' arr' → logprob: -9.650962829589844
    6. '_lst' → logprob: -10.775962829589844
    7. 'list' → logprob: -11.400962829589844
    8. 'A' → logprob: -11.400962829589844
    9. ' A' → logprob: -11.525962829589844
    10. '(lst' → logprob: -11.900962829589844

Token 192: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.062077928334474564
    2. '=' → logprob: -3.1870779991149902
    3. 'lst' → logprob: -4.56207799911499
    4. '_lst' → logprob: -4.93707799911499
    5. '_list' → logprob: -7.31207799911499
    6. 'r' → logprob: -7.93707799911499
    7. 'list' → logprob: -9.187077522277832
    8. 'l' → logprob: -10.187077522277832
    9. 'Lst' → logprob: -10.812077522277832
    10. '=[]' → logprob: -11.062077522277832

Token 193: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.5759406089782715
    2. ' read' → logprob: -0.8259406089782715
    3. '(read' → logprob: -14.20094108581543
    4. '	read' → logprob: -15.07594108581543
    5. '[]' → logprob: -16.82594108581543
    6. '_read' → logprob: -17.20094108581543
    7. '[' → logprob: -17.45094108581543
    8. '.read' → logprob: -17.57594108581543
    9. 'list' → logprob: -17.70094108581543
    10. '   ' → logprob: -18.57594108581543

Token 194: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -6.630610641877865e-06
    2. 'int' → logprob: -13.125006675720215
    3. '_in' → logprob: -13.375006675720215
    4. '_list' → logprob: -14.125006675720215
    5. '_' → logprob: -14.250006675720215
    6. '_uint' → logprob: -15.000006675720215
    7. '_float' → logprob: -15.250006675720215
    8. '_line' → logprob: -15.375006675720215
    9. '```' → logprob: -15.750006675720215
    10. ' _' → logprob: -16.3750057220459

Token 195: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.4855663721391466e-05
    2. '_' → logprob: -11.625015258789062
    3. '()' → logprob: -12.500015258789062
    4. 'list' → logprob: -13.500015258789062
    5. '_array' → logprob: -15.000015258789062
    6. '_lst' → logprob: -15.125015258789062
    7. ' _' → logprob: -16.375015258789062
    8. '_lista' → logprob: -17.375015258789062
    9. '_line' → logprob: -17.500015258789062
    10. 'List' → logprob: -18.125015258789062

Token 196: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -6.034592388459714e-06
    2. '()
' → logprob: -12.250005722045898
    3. ' ()' → logprob: -14.500005722045898
    4. '()

' → logprob: -15.125005722045898
    5. '(' → logprob: -15.375005722045898
    6. '()]' → logprob: -17.3750057220459
    7. '()`' → logprob: -17.3750057220459
    8. '())' → logprob: -17.5000057220459
    9. '()<' → logprob: -17.6250057220459
    10. '();' → logprob: -17.8750057220459

Token 197: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.027495456859469414
    2. '   ' → logprob: -3.9024953842163086
    3. '<|end|>' → logprob: -5.152495384216309
    4. '    
' → logprob: -7.402495384216309
    5. 'diff' → logprob: -8.277495384216309
    6. '  
' → logprob: -9.527495384216309
    7. '
' → logprob: -9.777495384216309
    8. '<|end|>' → logprob: -10.277495384216309
    9. '```' → logprob: -10.652495384216309
    10. ' 
' → logprob: -10.777495384216309

Token 198: ' q' (ID: 2335)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.948864758014679
    2. 'score' → logprob: -1.0738646984100342
    3. 'q' (adapté à ' q') → logprob: -2.073864698410034
    4. 'sorted' → logprob: -3.448864698410034
    5. 'total' → logprob: -3.948864698410034
    6. 'result' → logprob: -4.073864936828613
    7. 'rank' → logprob: -4.073864936828613
    8. 'res' → logprob: -4.823864936828613
    9. 's' → logprob: -4.948864936828613
    10. 'inv' → logprob: -4.948864936828613

Token 199: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006729110609740019
    2. '=' → logprob: -5.0067291259765625
    3. '_' → logprob: -11.631729125976562
    4. ' ' → logprob: -13.506729125976562
    5. '[' → logprob: -14.381729125976562
    6. '  ' → logprob: -14.506729125976562
    7. ',' → logprob: -14.881729125976562
    8. '.' → logprob: -15.006729125976562
    9. ')' → logprob: -15.256729125976562
    10. '   ' → logprob: -15.631729125976562

Token 200: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.2014186978340149
    2. 'read' → logprob: -1.7014186382293701
    3. '   ' → logprob: -13.45141887664795
    4. '	read' → logprob: -13.70141887664795
    5. ' p' → logprob: -13.95141887664795
    6. '(read' → logprob: -14.32641887664795
    7. 'p' → logprob: -14.57641887664795
    8. ' ' → logprob: -14.82641887664795
    9. '[' → logprob: -15.82641887664795
    10. '.read' → logprob: -15.95141887664795

Token 201: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -2.5776860184123507e-06
    2. '_list' → logprob: -13.50000286102295
    3. 'int' → logprob: -13.75000286102295
    4. '_' → logprob: -18.875001907348633
    5. 'Int' → logprob: -20.125001907348633
    6. '```' → logprob: -20.125001907348633
    7. '_INT' → logprob: -20.250001907348633
    8. '_float' → logprob: -20.500001907348633
    9. ' _' → logprob: -20.750001907348633
    10. '__' → logprob: -21.125001907348633

Token 202: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.002482434967532754
    2. '()' → logprob: -6.0024824142456055
    3. 'List' → logprob: -12.877482414245605
    4. 'list' → logprob: -13.002482414245605
    5. '()
' → logprob: -13.752482414245605
    6. '_' → logprob: -14.502482414245605
    7. '_lst' → logprob: -17.002483367919922
    8. '(' → logprob: -17.127483367919922
    9. '_LIST' → logprob: -17.127483367919922
    10. '_lists' → logprob: -17.877483367919922

Token 203: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.7954958821064793e-05
    2. '()
' → logprob: -11.000018119812012
    3. '()

' → logprob: -15.000018119812012
    4. '()]' → logprob: -15.375018119812012
    5. ' ()' → logprob: -15.375018119812012
    6. '())' → logprob: -15.750018119812012
    7. '(' → logprob: -16.625017166137695
    8. '()`' → logprob: -17.000017166137695
    9. '()<' → logprob: -17.250017166137695
    10. ')' → logprob: -17.250017166137695

Token 204: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02639133110642433
    2. '
' → logprob: -3.7763912677764893
    3. 'diff' → logprob: -6.276391506195068
    4. '    
' → logprob: -7.651391506195068
    5. '```' → logprob: -8.02639102935791
    6. ' diff' → logprob: -8.77639102935791
    7. '<|end|>' → logprob: -10.15139102935791
    8. 'def' → logprob: -10.65139102935791
    9. '    ' → logprob: -10.77639102935791
    10. '	diff' → logprob: -10.77639102935791

Token 205: ' P' (ID: 398)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.22193482518196106
    2. 'pos' → logprob: -1.9719347953796387
    3. 'score' → logprob: -3.3469347953796387
    4. 'val' → logprob: -4.721934795379639
    5. 'rank' → logprob: -5.221934795379639
    6. '   ' → logprob: -5.221934795379639
    7. 'res' → logprob: -6.721934795379639
    8. 'fac' → logprob: -7.096934795379639
    9. 'p' → logprob: -7.471934795379639
    10. 'factor' → logprob: -7.596934795379639

Token 206: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1961448192596436
    2. '_rank' → logprob: -1.3211448192596436
    3. '_pos' → logprob: -1.4461448192596436
    4. '_index' → logprob: -2.3211448192596436
    5. '_score' → logprob: -3.0711448192596436
    6. '_' → logprob: -4.321145057678223
    7. '=' → logprob: -4.571145057678223
    8. '_diff' → logprob: -4.571145057678223
    9. '_idx' → logprob: -4.696145057678223
    10. '_val' → logprob: -6.446145057678223

Token 207: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.049274712800979614
    2. ' compute' → logprob: -3.1742746829986572
    3. '[p' → logprob: -5.799274921417236
    4. '[' → logprob: -6.424274921417236
    5. ' [' → logprob: -7.049274921417236
    6. ' p' → logprob: -7.924274921417236
    7. 'p' → logprob: -8.299274444580078
    8. '[]' → logprob: -9.424274444580078
    9. '.compute' → logprob: -11.799274444580078
    10. '[]
' → logprob: -11.799274444580078

Token 208: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.6933771967887878
    2. '_factor' → logprob: -0.6933771967887878
    3. 'factor' → logprob: -9.068377494812012
    4. 'score' → logprob: -9.318377494812012
    5. '_' → logprob: -11.443377494812012
    6. '_sum' → logprob: -13.318377494812012
    7. '_fact' → logprob: -13.318377494812012
    8. 'f' → logprob: -13.818377494812012
    9. ' factorial' → logprob: -13.818377494812012
    10. '_scores' → logprob: -14.318377494812012

Token 209: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -2.935296834039036e-06
    2. '(' → logprob: -13.37500286102295
    3. ' (' → logprob: -13.62500286102295
    4. '(P' → logprob: -16.000003814697266
    5. '(q' → logprob: -18.000003814697266
    6. '(list' → logprob: -18.625003814697266
    7. '((' → logprob: -18.625003814697266
    8. '(lst' → logprob: -19.375003814697266
    9. 'p' → logprob: -19.875003814697266
    10. '(
' → logprob: -20.000003814697266

Token 210: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.992775888647884e-05
    2. ',N' → logprob: -9.875069618225098
    3. ')' → logprob: -11.500069618225098
    4. ' ,' → logprob: -11.875069618225098
    5. ',p' → logprob: -14.750069618225098
    6. '   ' → logprob: -15.250069618225098
    7. 'p' → logprob: -15.750069618225098
    8. ',P' → logprob: -16.000070571899414
    9. ',
' → logprob: -16.125070571899414
    10. ' ' → logprob: -16.125070571899414

Token 211: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0004306692280806601
    2. ' N' → logprob: -7.750430583953857
    3. '	N' → logprob: -20.250431060791016
    4. '   ' → logprob: -20.250431060791016
    5. ')' → logprob: -21.250431060791016
    6. 'len' → logprob: -23.000431060791016
    7. ' ' → logprob: -23.250431060791016
    8. '(N' → logprob: -24.125431060791016
    9. ',N' → logprob: -24.250431060791016
    10. '_N' → logprob: -24.250431060791016

Token 212: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020614290609955788
    2. ')
' → logprob: -3.8956143856048584
    3. '   ' → logprob: -10.145614624023438
    4. ')
' → logprob: -10.520614624023438
    5. ' )' → logprob: -12.895614624023438
    6. ')

' → logprob: -12.895614624023438
    7. ' )
' → logprob: -13.895614624023438
    8. '<|end|>' → logprob: -17.020614624023438
    9. '),' → logprob: -17.270614624023438
    10. ' ' → logprob: -17.645614624023438

Token 213: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1159711703658104
    2. 'Q' → logprob: -2.615971088409424
    3. '
' → logprob: -3.740971088409424
    4. ' Q' → logprob: -4.740971088409424
    5. 'diff' → logprob: -6.740971088409424
    6. 'q' → logprob: -7.365971088409424
    7. ' ' → logprob: -8.365971565246582
    8. '    
' → logprob: -8.365971565246582
    9. '	Q' → logprob: -8.615971565246582
    10. '+' → logprob: -8.740971565246582

Token 214: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' (adapté à ' Q') → logprob: -0.00016659092216286808
    2. ' Q' → logprob: -8.750166893005371
    3. '   ' → logprob: -11.750166893005371
    4. '	Q' → logprob: -15.375166893005371
    5. 'q' → logprob: -19.375165939331055
    6. '```' → logprob: -19.750165939331055
    7. ' ' → logprob: -19.875165939331055
    8. '<Q' → logprob: -20.000165939331055
    9. '  ' → logprob: -20.500165939331055
    10. '    
' → logprob: -20.500165939331055

Token 215: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01814994215965271
    2. '=' → logprob: -4.0181498527526855
    3. ' ' → logprob: -17.268150329589844
    4. '  ' → logprob: -19.393150329589844
    5. ' =
' → logprob: -19.518150329589844
    6. '_' → logprob: -19.643150329589844
    7. '＝' → logprob: -20.143150329589844
    8. ' =)' → logprob: -20.143150329589844
    9. ' ' → logprob: -20.393150329589844
    10. '   ' → logprob: -21.268150329589844

Token 216: ' compute' (ID: 23864)
  Prédit: ' compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.3868711292743683
    2. 'compute' → logprob: -1.136871099472046
    3. 'computer' → logprob: -17.261871337890625
    4. '.compute' → logprob: -17.261871337890625
    5. ' computer' → logprob: -18.386871337890625
    6. '   ' → logprob: -18.761871337890625
    7. '_compute' → logprob: -18.886871337890625
    8. ' ' → logprob: -19.011871337890625
    9. 'com' → logprob: -19.136871337890625
    10. ' ' → logprob: -19.636871337890625

Token 217: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -3.128163257315464e-07
    2. 'score' → logprob: -15.375
    3. '_factor' → logprob: -17.375
    4. '_' → logprob: -18.75
    5. '(_' → logprob: -19.125
    6. ' _' → logprob: -19.375
    7. '_SCORE' → logprob: -19.625
    8. '_code' → logprob: -19.75
    9. '_scores' → logprob: -20.0
    10. 'Score' → logprob: -20.5

Token 218: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.0001801801408873871
    2. '(' → logprob: -8.6251802444458
    3. ' (' → logprob: -15.0001802444458
    4. '(
' → logprob: -15.8751802444458
    5. '(Q' → logprob: -17.500179290771484
    6. '(query' → logprob: -18.375179290771484
    7. 'q' → logprob: -18.500179290771484
    8. '(s' → logprob: -18.750179290771484
    9. '(

' → logprob: -19.750179290771484
    10. '?q' → logprob: -19.875179290771484

Token 219: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.664371848164592e-05
    2. ' ,' → logprob: -11.125016212463379
    3. ',N' → logprob: -13.625016212463379
    4. ',
' → logprob: -15.625016212463379
    5. ')' → logprob: -15.750016212463379
    6. ',p' → logprob: -15.750016212463379
    7. ',q' → logprob: -16.500017166137695
    8. '‌,' → logprob: -16.875017166137695
    9. ',n' → logprob: -17.125017166137695
    10. '(' → logprob: -17.125017166137695

Token 220: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.018150178715586662
    2. ' N' → logprob: -4.018150329589844
    3. 'Q' → logprob: -15.643150329589844
    4. '   ' → logprob: -17.768150329589844
    5. ')' → logprob: -18.143150329589844
    6. 'q' → logprob: -18.518150329589844
    7. '	N' → logprob: -18.893150329589844
    8. ' ' → logprob: -19.018150329589844
    9. '(N' → logprob: -19.768150329589844
    10. '<N' → logprob: -20.143150329589844

Token 221: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017342230305075645
    2. ')
' → logprob: -4.1423420906066895
    3. '   ' → logprob: -6.6423420906066895
    4. ')
' → logprob: -13.142342567443848
    5. ' )' → logprob: -14.642342567443848
    6. ')

' → logprob: -15.392342567443848
    7. '<|end|>' → logprob: -15.642342567443848
    8. '),' → logprob: -16.64234161376953
    9. '
' → logprob: -16.76734161376953
    10. ' )
' → logprob: -17.51734161376953

Token 222: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1262412816286087
    2. '
' → logprob: -2.2512412071228027
    3. 'diff' → logprob: -4.751241207122803
    4. '	diff' → logprob: -6.001241207122803
    5. ' diff' → logprob: -6.626241207122803
    6. '```' → logprob: -7.251241207122803
    7. '    
' → logprob: -9.626241683959961
    8. '(diff' → logprob: -10.251241683959961
    9. '
' → logprob: -10.751241683959961
    10. '``' → logprob: -11.126241683959961

Token 223: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' (adapté à ' diff') → logprob: -0.4397543668746948
    2. 'print' → logprob: -1.4397543668746948
    3. '   ' → logprob: -2.8147544860839844
    4. ' print' → logprob: -3.5647544860839844
    5. ' diff' → logprob: -3.5647544860839844
    6. '
' → logprob: -6.314754486083984
    7. '```' → logprob: -8.564754486083984
    8. '	diff' → logprob: -8.939754486083984
    9. 'result' → logprob: -9.189754486083984
    10. 'difference' → logprob: -11.314754486083984

Token 224: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023246990516781807
    2. '=' → logprob: -3.773247003555298
    3. '_' → logprob: -13.898246765136719
    4. ' ' → logprob: -15.023246765136719
    5. '   ' → logprob: -15.898246765136719
    6. ')' → logprob: -17.64824676513672
    7. ',' → logprob: -17.64824676513672
    8. '  ' → logprob: -17.77324676513672
    9. ' =
' → logprob: -18.27324676513672
    10. ' ' → logprob: -18.39824676513672

Token 225: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -7.896309739408025e-07
    2. ' abs' → logprob: -14.375000953674316
    3. '   ' → logprob: -15.875000953674316
    4. '(abs' → logprob: -18.5
    5. 'math' → logprob: -20.5
    6. 'P' → logprob: -20.875
    7. '
' → logprob: -22.25
    8. 'absolute' → logprob: -22.875
    9. 'int' → logprob: -23.0
    10. '  ' → logprob: -24.0

Token 226: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -3.173704271830502e-06
    2. 'P' → logprob: -12.75000286102295
    3. '(Q' → logprob: -15.62500286102295
    4. '(' → logprob: -17.000003814697266
    5. '(p' → logprob: -19.125003814697266
    6. '(C' → logprob: -20.625003814697266
    7. '(N' → logprob: -20.625003814697266
    8. '((' → logprob: -20.750003814697266
    9. '(
' → logprob: -20.875003814697266
    10. '(A' → logprob: -20.875003814697266

Token 227: '-Q' (ID: 50456)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10039126873016357
    2. '-' → logprob: -2.350391387939453
    3. '-Q' → logprob: -8.600391387939453
    4. ' ' → logprob: -14.975391387939453
    5. ' Q' → logprob: -16.975391387939453
    6. ' -
' → logprob: -17.100391387939453
    7. ' ' → logprob: -17.100391387939453
    8. 'Q' → logprob: -17.225391387939453
    9. '-
' → logprob: -17.475391387939453
    10. '   ' → logprob: -18.350391387939453

Token 228: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006720347795635462
    2. ')
' → logprob: -5.006720542907715
    3. ')
' → logprob: -12.381720542907715
    4. '   ' → logprob: -14.881720542907715
    5. '))' → logprob: -15.506720542907715
    6. ' )' → logprob: -16.1317195892334
    7. ')

' → logprob: -16.2567195892334
    8. '),' → logprob: -17.3817195892334
    9. ')`' → logprob: -18.0067195892334
    10. ')return' → logprob: -18.3817195892334

Token 229: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20738732814788818
    2. '
' → logprob: -1.7073873281478882
    3. 'print' → logprob: -5.207387447357178
    4. '    
' → logprob: -8.20738697052002
    5. ' print' → logprob: -9.70738697052002
    6. '```' → logprob: -9.95738697052002
    7. '
' → logprob: -10.33238697052002
    8. '  
' → logprob: -10.83238697052002
    9. '	print' → logprob: -10.83238697052002
    10. '(print' → logprob: -11.08238697052002

Token 230: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.047419339418411255
    2. '   ' → logprob: -3.547419309616089
    3. ' print' → logprob: -4.047419548034668
    4. '
' → logprob: -10.297419548034668
    5. '	print' → logprob: -11.672419548034668
    6. '```' → logprob: -13.172419548034668
    7. '(print' → logprob: -13.922419548034668
    8. '.print' → logprob: -14.922419548034668
    9. '  ' → logprob: -15.047419548034668
    10. ' ' → logprob: -15.672419548034668

Token 231: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -1.3856492842023727e-06
    2. '(diff' → logprob: -14.125000953674316
    3. 'result' → logprob: -15.750000953674316
    4. '(' → logprob: -16.125001907348633
    5. '(_' → logprob: -16.125001907348633
    6. '_results' → logprob: -16.250001907348633
    7. '_' → logprob: -16.375001907348633
    8. '_diff' → logprob: -17.375001907348633
    9. '_RESULT' → logprob: -17.625001907348633
    10. '_Result' → logprob: -17.750001907348633

Token 232: '(diff' (ID: 84195)
  Prédit: '(diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(diff' → logprob: -2.1008713702030946e-06
    2. '(' → logprob: -13.125001907348633
    3. ' (' → logprob: -17.000001907348633
    4. '(d' → logprob: -19.250001907348633
    5. 'diff' → logprob: -19.250001907348633
    6. '(di' → logprob: -19.375001907348633
    7. '(def' → logprob: -20.250001907348633
    8. '(dist' → logprob: -20.750001907348633
    9. '(div' → logprob: -20.750001907348633
    10. '	diff' → logprob: -21.000001907348633

Token 233: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ')
' → logprob: -14.000001907348633
    3. '())' → logprob: -14.750001907348633
    4. '()' → logprob: -15.875001907348633
    5. ' )' → logprob: -16.875001907348633
    6. '))' → logprob: -18.750001907348633
    7. ')`' → logprob: -19.000001907348633
    8. '}' → logprob: -19.500001907348633
    9. '`)' → logprob: -19.500001907348633
    10. '   ' → logprob: -19.500001907348633

Token 234: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.005303488578647375
    2. '
' → logprob: -5.255303382873535
    3. ' if' → logprob: -10.130303382873535
    4. 'main' → logprob: -11.505303382873535
    5. '

' → logprob: -12.130303382873535
    6. '```' → logprob: -12.505303382873535
    7. '\n' → logprob: -12.630303382873535
    8. '  
' → logprob: -12.880303382873535
    9. '<|end|>' → logprob: -13.005303382873535
    10. '    
' → logprob: -13.755303382873535

Token 235: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 233
Tokens correctement prédits (1ère position, stricte): 115
Tokens correctement prédits (1ère position, avec adaptation): 123
Tokens correctement prédits (top 10): 201
Précision stricte (1ère position): 49.36%
Précision adaptée (1ère position): 52.79%
Précision (top 10): 86.27%
================================================================================
