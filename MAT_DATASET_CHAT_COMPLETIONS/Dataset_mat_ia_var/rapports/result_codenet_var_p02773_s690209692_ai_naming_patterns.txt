================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:26:29
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
input_count = int(input())
input_strings = [input() for _ in range(input_count)]

import collections
string_counter = collections.Counter(input_strings)
sorted_strings = sorted(string_counter)

maximum_count = max(string_counter.values())
most_frequent_strings = []
for string, count in string_counter.items():
    if count == maximum_count:
        most_frequent_strings.append(string)

most_frequent_strings_sorted = sorted(most_frequent_strings)
print('\n'.join(most_frequent_strings_sorted))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'input' (ID: 2586)
  → Token d'amorce (pas de prédiction)

Token 1: '_count' (ID: 7536)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18495553731918335
    2. '0' → logprob: -1.8099555969238281
    3. '1' → logprob: -5.684955596923828
    4. '4' → logprob: -7.684955596923828
    5. 'input' → logprob: -8.559955596923828
    6. '"' → logprob: -8.684955596923828
    7. ' len' → logprob: -8.684955596923828
    8. ' )' → logprob: -9.059955596923828
    9. '32' → logprob: -9.434955596923828
    10. ' input' → logprob: -9.434955596923828

Token 4: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004273315134923905
    2. '```' → logprob: -9.50042724609375
    3. ''' → logprob: -9.87542724609375
    4. ' (' → logprob: -10.00042724609375
    5. '()' → logprob: -10.00042724609375
    6. '(input' → logprob: -10.50042724609375
    7. '32' → logprob: -10.62542724609375
    8. '('' → logprob: -10.62542724609375
    9. ' ' → logprob: -10.75042724609375
    10. '`' → logprob: -10.87542724609375

Token 5: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10250791907310486
    2. ')' → logprob: -2.4775078296661377
    3. '()' → logprob: -4.727508068084717
    4. '())' → logprob: -5.602508068084717
    5. '('' → logprob: -8.227507591247559
    6. '(
' → logprob: -8.727507591247559
    7. '))' → logprob: -9.227507591247559
    8. '(""))' → logprob: -9.477507591247559
    9. '(()' → logprob: -9.727507591247559
    10. '```' → logprob: -9.977507591247559

Token 6: 'input' (ID: 2586)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.2670502662658691
    2. '+' → logprob: -1.5170502662658691
    3. 'for' → logprob: -2.142050266265869
    4. '\n' → logprob: -2.267050266265869
    5. '*' → logprob: -2.517050266265869
    6. ')' → logprob: -2.767050266265869
    7. 'i' → logprob: -4.267050266265869
    8. ' if' → logprob: -4.392050266265869
    9. '```' → logprob: -4.517050266265869
    10. '\' → logprob: -4.517050266265869

Token 7: '_strings' (ID: 87251)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2054617702960968
    2. '(' → logprob: -1.9554617404937744
    3. '_' → logprob: -3.4554617404937744
    4. '_count' → logprob: -5.2054619789123535
    5. '```' → logprob: -6.8304619789123535
    6. '_counts' → logprob: -6.9554619789123535
    7. '_data' → logprob: -7.0804619789123535
    8. '_parent' → logprob: -7.3304619789123535
    9. '('' → logprob: -7.3304619789123535
    10. '().' → logprob: -7.7054619789123535

Token 8: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.645006000995636
    2. '.' → logprob: -1.1450059413909912
    3. '_' → logprob: -2.770005941390991
    4. '=' → logprob: -3.895005941390991
    5. ' =' → logprob: -4.02000617980957
    6. '()' → logprob: -4.02000617980957
    7. '[]' → logprob: -4.52000617980957
    8. '.append' → logprob: -4.64500617980957
    9. '```' → logprob: -5.77000617980957
    10. ')' → logprob: -6.27000617980957

Token 9: ' [' (ID: 723)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.09604217112064362
    2. '[]' → logprob: -2.4710421562194824
    3. '[' → logprob: -5.096042156219482
    4. ' [' → logprob: -7.346042156219482
    5. '[input' → logprob: -8.97104263305664
    6. ' ' → logprob: -9.09604263305664
    7. 'input' → logprob: -10.72104263305664
    8. '['' → logprob: -11.47104263305664
    9. ' ['' → logprob: -11.97104263305664
    10. 'list' → logprob: -12.34604263305664

Token 10: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0019385118503123522
    2. ' input' → logprob: -6.251938343048096
    3. '   ' → logprob: -12.626938819885254
    4. ')' → logprob: -12.751938819885254
    5. 'str' → logprob: -13.876938819885254
    6. '(input' → logprob: -14.001938819885254
    7. ']' → logprob: -14.126938819885254
    8. 'int' → logprob: -15.126938819885254
    9. '<input' → logprob: -15.376938819885254
    10. ' ' → logprob: -16.251937866210938

Token 11: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5602573156356812
    2. '()]' → logprob: -1.0602573156356812
    3. '(' → logprob: -2.6852574348449707
    4. '())' → logprob: -4.810257434844971
    5. '('' → logprob: -5.310257434844971
    6. '().' → logprob: -7.935257434844971
    7. '()[' → logprob: -8.560256958007812
    8. '("("' → logprob: -9.310256958007812
    9. ']' → logprob: -9.685256958007812
    10. '("' → logprob: -9.935256958007812

Token 12: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.43605005741119385
    2. '()' → logprob: -1.9360500574111938
    3. '()]' → logprob: -2.3110499382019043
    4. '())' → logprob: -2.9360499382019043
    5. ')]' → logprob: -3.1860499382019043
    6. ']' → logprob: -4.436049938201904
    7. 'for' → logprob: -6.311049938201904
    8. '[' → logprob: -7.311049938201904
    9. ' for' → logprob: -7.686049938201904
    10. '()[' → logprob: -8.811050415039062

Token 13: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.22845540940761566
    2. ' _' → logprob: -1.8534554243087769
    3. ' range' → logprob: -3.2284553050994873
    4. ' ' → logprob: -5.478455543518066
    5. '_range' → logprob: -5.853455543518066
    6. ' i' → logprob: -7.853455543518066
    7. 'range' → logprob: -7.978455543518066
    8. ' ' → logprob: -9.853455543518066
    9. ' in' → logprob: -10.103455543518066
    10. ' xrange' → logprob: -11.603455543518066

Token 14: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0008606038754805923
    2. 'in' → logprob: -7.375860691070557
    3. ' ' → logprob: -9.125860214233398
    4. 'range' → logprob: -9.500860214233398
    5. ' range' → logprob: -10.375860214233398
    6. '_' → logprob: -11.875860214233398
    7. '<|end|>' → logprob: -12.500860214233398
    8. 's' → logprob: -13.500860214233398
    9. ' _' → logprob: -13.500860214233398
    10. '  ' → logprob: -13.875860214233398

Token 15: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04858975484967232
    2. ' range' → logprob: -3.0485897064208984
    3. '	range' → logprob: -13.548589706420898
    4. '_range' → logprob: -14.048589706420898
    5. '(range' → logprob: -15.798589706420898
    6. '_' → logprob: -16.7985897064209
    7. 'rang' → logprob: -17.0485897064209
    8. '.range' → logprob: -17.9235897064209
    9. 'Range' → logprob: -18.5485897064209
    10. '```' → logprob: -19.0485897064209

Token 16: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.03829037398099899
    2. '(' → logprob: -3.28829026222229
    3. '(len' → logprob: -8.663290023803711
    4. 'input' → logprob: -9.663290023803711
    5. ' (' → logprob: -12.038290023803711
    6. '(in' → logprob: -13.038290023803711
    7. '(n' → logprob: -14.163290023803711
    8. ' input' → logprob: -14.163290023803711
    9. '(output' → logprob: -14.788290023803711
    10. '(count' → logprob: -14.913290023803711

Token 17: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.2113979209971149e-05
    2. ')]' → logprob: -11.875012397766113
    3. '_counts' → logprob: -13.500012397766113
    4. '()' → logprob: -13.750012397766113
    5. 'count' → logprob: -14.125012397766113
    6. '_' → logprob: -14.250012397766113
    7. ')])' → logprob: -15.250012397766113
    8. '(' → logprob: -15.375012397766113
    9. '(count' → logprob: -15.750012397766113
    10. '_COUNT' → logprob: -15.750012397766113

Token 18: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0001720742875477299
    2. ']' → logprob: -8.750171661376953
    3. ')' → logprob: -11.375171661376953
    4. '')]' → logprob: -13.875171661376953
    5. '])]' → logprob: -15.375171661376953
    6. ')]
' → logprob: -15.500171661376953
    7. ')])' → logprob: -16.125171661376953
    8. ' )' → logprob: -16.125171661376953
    9. '])' → logprob: -16.250171661376953
    10. '")]' → logprob: -16.375171661376953

Token 19: 'import' (ID: 561)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3373168408870697
    2. 'result' → logprob: -1.587316870689392
    3. 'output' → logprob: -3.4623167514801025
    4. 'results' → logprob: -4.462316989898682
    5. 'print' → logprob: -4.587316989898682
    6. 'max' → logprob: -5.212316989898682
    7. 'sorted' → logprob: -5.962316989898682
    8. 's' → logprob: -5.962316989898682
    9. 'count' → logprob: -6.087316989898682
    10. 'counts' → logprob: -6.087316989898682

Token 20: ' collections' (ID: 22690)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.000251326389843598
    2. ' os' → logprob: -9.000251770019531
    3. 'sys' → logprob: -9.625251770019531
    4. ' re' → logprob: -10.500251770019531
    5. ' collections' → logprob: -11.000251770019531
    6. ' random' → logprob: -11.750251770019531
    7. ' math' → logprob: -12.125251770019531
    8. ' itertools' → logprob: -13.750251770019531
    9. ' string' → logprob: -14.500251770019531
    10. ' csv' → logprob: -14.875251770019531

Token 21: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03969245031476021
    2. '
' → logprob: -4.664692401885986
    3. '_counter' → logprob: -5.039692401885986
    4. '.Counter' → logprob: -5.289692401885986
    5. 'Counter' → logprob: -5.414692401885986
    6. 'result' → logprob: -5.914692401885986
    7. '_
' → logprob: -6.039692401885986
    8. 'counter' → logprob: -6.289692401885986
    9. '_' → logprob: -6.789692401885986
    10. '' → logprob: -7.039692401885986

Token 22: 'string' (ID: 1655)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0915545225143433
    2. 'result' → logprob: -1.7165545225143433
    3. 'counter' → logprob: -1.8415545225143433
    4. '_counter' → logprob: -1.9665545225143433
    5. 'counts' → logprob: -2.716554641723633
    6. 'frequency' → logprob: -4.091554641723633
    7. 'Counter' → logprob: -4.216554641723633
    8. '.Counter' → logprob: -4.216554641723633
    9. 'count' → logprob: -4.341554641723633
    10. 'output' → logprob: -4.466554641723633

Token 23: '_counter' (ID: 35419)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.22929221391677856
    2. '_counts' → logprob: -2.229292154312134
    3. '_counter' → logprob: -2.604292154312134
    4. '_s' → logprob: -3.854292154312134
    5. '_count' → logprob: -6.729292392730713
    6. '_' → logprob: -7.729292392730713
    7. ' s' → logprob: -8.729291915893555
    8. '_to' → logprob: -8.854291915893555
    9. '_freq' → logprob: -9.479291915893555
    10. '_c' → logprob: -9.604291915893555

Token 24: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2915540933609009
    2. '.' → logprob: -1.6665540933609009
    3. ' =' → logprob: -2.7915539741516113
    4. '(' → logprob: -6.291553974151611
    5. '.=' → logprob: -8.04155445098877
    6. ')' → logprob: -8.54155445098877
    7. '[' → logprob: -9.04155445098877
    8. ' ' → logprob: -10.04155445098877
    9. '.Counter' → logprob: -10.91655445098877
    10. '```' → logprob: -11.04155445098877

Token 25: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.3868733048439026
    2. 'collections' → logprob: -1.1368732452392578
    3. 'counter' → logprob: -14.386873245239258
    4. '.collections' → logprob: -14.636873245239258
    5. 'Collections' → logprob: -14.886873245239258
    6. 'collection' → logprob: -15.136873245239258
    7. 'Counter' → logprob: -15.636873245239258
    8. ' collection' → logprob: -15.636873245239258
    9. ' counter' → logprob: -15.761873245239258
    10. '(collection' → logprob: -15.886873245239258

Token 26: '.Counter' (ID: 175403)
  Prédit: '.Counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Counter' → logprob: -0.00020520923135336488
    2. '.' → logprob: -8.500205039978027
    3. '.Count' → logprob: -14.250205039978027
    4. '.counter' → logprob: -14.875205039978027
    5. '.C' → logprob: -15.250205039978027
    6. ' .' → logprob: -15.500205039978027
    7. 'Counter' → logprob: -16.000205993652344
    8. '.Order' → logprob: -17.375205993652344
    9. ' Counter' → logprob: -17.875205993652344
    10. '.Com' → logprob: -18.125205993652344

Token 27: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0659385472536087
    2. '(' → logprob: -2.8159384727478027
    3. '(string' → logprob: -6.065938472747803
    4. '(strings' → logprob: -6.440938472747803
    5. '(
' → logprob: -10.690938949584961
    6. '()' → logprob: -11.565938949584961
    7. ' (' → logprob: -12.565938949584961
    8. '(user' → logprob: -13.315938949584961
    9. 'input' → logprob: -13.440938949584961
    10. '(str' → logprob: -13.565938949584961

Token 28: '_strings' (ID: 87251)
  Prédit: '_strings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strings' → logprob: -2.339278580620885e-06
    2. 'strings' → logprob: -14.500001907348633
    3. '(strings' → logprob: -14.500001907348633
    4. 's' → logprob: -14.750001907348633
    5. '_s' → logprob: -15.500001907348633
    6. ')' → logprob: -16.000001907348633
    7. '(' → logprob: -16.125001907348633
    8. '_' → logprob: -16.250001907348633
    9. '```' → logprob: -16.250001907348633
    10. 'Strings' → logprob: -16.375001907348633

Token 29: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.7697225252486533e-06
    2. ' )' → logprob: -13.125003814697266
    3. ')
' → logprob: -14.500003814697266
    4. '[' → logprob: -14.750003814697266
    5. '))' → logprob: -14.875003814697266
    6. ']' → logprob: -15.750003814697266
    7. ').' → logprob: -16.500003814697266
    8. ')`' → logprob: -16.625003814697266
    9. '')' → logprob: -16.875003814697266
    10. '")' → logprob: -17.250003814697266

Token 30: 'sorted' (ID: 64288)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.29746970534324646
    2. 'print' → logprob: -2.2974696159362793
    3. 'result' → logprob: -2.5474696159362793
    4. 'most' → logprob: -2.7974696159362793
    5. 'output' → logprob: -5.047469615936279
    6. 'max' → logprob: -5.672469615936279
    7. 'unique' → logprob: -6.547469615936279
    8. '
' → logprob: -6.797469615936279
    9. 'answer' → logprob: -7.047469615936279
    10. 'sorted' → logprob: -7.172469615936279

Token 31: '_strings' (ID: 87251)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03887464851140976
    2. '(string' → logprob: -3.288874626159668
    3. '(sorted' → logprob: -8.038874626159668
    4. '(strings' → logprob: -8.288874626159668
    5. 'string' → logprob: -8.913874626159668
    6. '(
' → logprob: -9.913874626159668
    7. '_string' → logprob: -10.663874626159668
    8. '(s' → logprob: -10.913874626159668
    9. '_strings' → logprob: -11.413874626159668
    10. ' (' → logprob: -13.163874626159668

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1077008992433548
    2. '=' → logprob: -2.732700824737549
    3. '(' → logprob: -3.357700824737549
    4. '_sorted' → logprob: -7.357700824737549
    5. '(sorted' → logprob: -7.857700824737549
    6. '_items' → logprob: -8.482701301574707
    7. '_' → logprob: -8.607701301574707
    8. '.' → logprob: -8.857701301574707
    9. ')' → logprob: -9.107701301574707
    10. 's' → logprob: -9.232701301574707

Token 33: ' sorted' (ID: 20099)
  Prédit: 'string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'string' → logprob: -0.40710142254829407
    2. ' string' → logprob: -1.1571013927459717
    3. ' sorted' → logprob: -4.657101631164551
    4. 'sorted' → logprob: -4.657101631164551
    5. '[string' → logprob: -7.032101631164551
    6. ' [' → logprob: -9.90710163116455
    7. '[' → logprob: -10.15710163116455
    8. '(string' → logprob: -10.40710163116455
    9. '(sorted' → logprob: -11.15710163116455
    10. '[]' → logprob: -12.78210163116455

Token 34: '(string' (ID: 8003)
  Prédit: '(string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(string' → logprob: -0.0004320996522437781
    2. '(' → logprob: -7.750432014465332
    3. 'string' → logprob: -14.625432014465332
    4. '((' → logprob: -14.625432014465332
    5. '(strings' → logprob: -15.125432014465332
    6. '(
' → logprob: -15.875432014465332
    7. '(sorted' → logprob: -16.87543296813965
    8. '(str' → logprob: -18.00043296813965
    9. ' (' → logprob: -18.12543296813965
    10. ',string' → logprob: -18.37543296813965

Token 35: '_counter' (ID: 35419)
  Prédit: '_counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counter' → logprob: -0.005902369040995836
    2. '_strings' → logprob: -5.255902290344238
    3. 's' → logprob: -7.880902290344238
    4. '._' → logprob: -9.255902290344238
    5. 'counter' → logprob: -9.630902290344238
    6. '_string' → logprob: -10.755902290344238
    7. '_' → logprob: -10.880902290344238
    8. '.Counter' → logprob: -11.005902290344238
    9. '.counter' → logprob: -11.505902290344238
    10. 'strings' → logprob: -11.630902290344238

Token 36: ')

' (ID: 1029)
  Prédit: '.items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.005589345004409552
    2. ',' → logprob: -5.630589485168457
    3. '.keys' → logprob: -7.380589485168457
    4. 'items' → logprob: -7.505589485168457
    5. ')' → logprob: -8.380589485168457
    6. '.values' → logprob: -8.505589485168457
    7. '.' → logprob: -8.630589485168457
    8. '.elements' → logprob: -8.755589485168457
    9. '.iteritems' → logprob: -11.755589485168457
    10. ' items' → logprob: -12.255589485168457

Token 37: 'maximum' (ID: 78601)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012333757244050503
    2. '(sorted' → logprob: -5.887333869934082
    3. 'sorted' → logprob: -6.137333869934082
    4. ' for' → logprob: -6.387333869934082
    5. '(
' → logprob: -6.637333869934082
    6. 'print' → logprob: -7.137333869934082
    7. 'output' → logprob: -7.262333869934082
    8. '_sorted' → logprob: -7.387333869934082
    9. '(' → logprob: -7.637333869934082
    10. '[' → logprob: -7.887333869934082

Token 38: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.6562323570251465
    2. '_' → logprob: -0.7812323570251465
    3. '_length' → logprob: -4.7812323570251465
    4. '_value' → logprob: -5.1562323570251465
    5. '_counts' → logprob: -5.2812323570251465
    6. '_space' → logprob: -6.5312323570251465
    7. '_occ' → logprob: -7.7812323570251465
    8. '_frequency' → logprob: -8.281232833862305
    9. '_oc' → logprob: -8.531232833862305
    10. '_freq' → logprob: -8.531232833862305

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17202860116958618
    2. '=' → logprob: -1.9220285415649414
    3. '_' → logprob: -4.922028541564941
    4. ')' → logprob: -5.797028541564941
    5. '[' → logprob: -7.922028541564941
    6. 's' → logprob: -8.172028541564941
    7. ' ' → logprob: -8.297028541564941
    8. '(' → logprob: -9.547028541564941
    9. '_space' → logprob: -9.922028541564941
    10. '_max' → logprob: -10.047028541564941

Token 40: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.21592652797698975
    2. 'max' → logprob: -1.7159265279769897
    3. ' string' → logprob: -4.465926647186279
    4. 'string' → logprob: -5.840926647186279
    5. '0' → logprob: -12.840926170349121
    6. ' maximum' → logprob: -13.340926170349121
    7. '(max' → logprob: -13.590926170349121
    8. '[max' → logprob: -14.465926170349121
    9. '=max' → logprob: -14.715926170349121
    10. ' ' → logprob: -14.715926170349121

Token 41: '(string' (ID: 8003)
  Prédit: '(string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(string' → logprob: -0.0011746286181733012
    2. '(' → logprob: -6.751174449920654
    3. 'string' → logprob: -12.751174926757812
    4. '(
' → logprob: -14.751174926757812
    5. ' string' → logprob: -14.751174926757812
    6. ' (' → logprob: -14.876174926757812
    7. '(s' → logprob: -15.876174926757812
    8. '(strings' → logprob: -16.626174926757812
    9. '(object' → logprob: -17.251174926757812
    10. '<string' → logprob: -17.751174926757812

Token 42: '_counter' (ID: 35419)
  Prédit: '_counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counter' → logprob: -0.0008450066088698804
    2. '_strings' → logprob: -7.750844955444336
    3. '_count' → logprob: -8.500844955444336
    4. 'Counter' → logprob: -9.500844955444336
    5. 'counter' → logprob: -9.750844955444336
    6. 'strings' → logprob: -10.625844955444336
    7. '_string' → logprob: -11.250844955444336
    8. '_counts' → logprob: -11.250844955444336
    9. 's' → logprob: -11.500844955444336
    10. 'string' → logprob: -12.125844955444336

Token 43: '.values' (ID: 20422)
  Prédit: '.values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.values' → logprob: -7.822646693966817e-06
    2. '.' → logprob: -12.500007629394531
    3. 'values' → logprob: -12.875007629394531
    4. '.value' → logprob: -13.875007629394531
    5. ').' → logprob: -15.250007629394531
    6. ')' → logprob: -16.00000762939453
    7. '.Values' → logprob: -16.50000762939453
    8. ' values' → logprob: -16.50000762939453
    9. ' .' → logprob: -16.87500762939453
    10. '().' → logprob: -18.50000762939453

Token 44: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.018759779632091522
    2. ')' → logprob: -4.268759727478027
    3. '()' → logprob: -5.393759727478027
    4. ' )' → logprob: -10.768759727478027
    5. ' ())' → logprob: -11.143759727478027
    6. '(' → logprob: -13.143759727478027
    7. '(),' → logprob: -13.268759727478027
    8. '()))' → logprob: -14.143759727478027
    9. '())
' → logprob: -15.268759727478027
    10. '))' → logprob: -15.643759727478027

Token 45: 'most' (ID: 5309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001093427068553865
    2. '
' → logprob: -7.87609338760376
    3. ' for' → logprob: -8.501093864440918
    4. 'result' → logprob: -8.626093864440918
    5. 'print' → logprob: -8.751093864440918
    6. '```' → logprob: -9.001093864440918
    7. 'results' → logprob: -11.376093864440918
    8. 'output' → logprob: -11.626093864440918
    9. 'max' → logprob: -11.751093864440918
    10. '``' → logprob: -12.376093864440918

Token 46: '_f' (ID: 1337)
  Prédit: '_common'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_common' → logprob: -0.17833620309829712
    2. '_f' → logprob: -1.9283361434936523
    3. '_' → logprob: -4.053336143493652
    4. '_strings' → logprob: -8.303336143493652
    5. '_freq' → logprob: -9.678336143493652
    6. '_comm' → logprob: -9.678336143493652
    7. '_used' → logprob: -10.053336143493652
    8. '_pop' → logprob: -10.678336143493652
    9. '_count' → logprob: -11.178336143493652
    10. '_com' → logprob: -11.303336143493652

Token 47: 'requent' (ID: 191346)
  Prédit: 'requent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'requent' → logprob: -0.0023725584615021944
    2. 'req' → logprob: -6.377372741699219
    3. 'requency' → logprob: -8.377372741699219
    4. 'requently' → logprob: -8.502372741699219
    5. 'or' → logprob: -9.127372741699219
    6. 'requ' → logprob: -9.502372741699219
    7. 'request' → logprob: -10.627372741699219
    8. 'irst' → logprob: -11.377372741699219
    9. 'requencies' → logprob: -12.627372741699219
    10. 'common' → logprob: -12.752372741699219

Token 48: '_strings' (ID: 87251)
  Prédit: '_strings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strings' → logprob: -0.056633997708559036
    2. '_' → logprob: -3.181633949279785
    3. '_string' → logprob: -4.556633949279785
    4. '_s' → logprob: -6.931633949279785
    5. '_tokens' → logprob: -7.306633949279785
    6. ' =' → logprob: -7.681633949279785
    7. '_items' → logprob: -7.806633949279785
    8. '_words' → logprob: -8.431633949279785
    9. '_values' → logprob: -10.556633949279785
    10. '_str' → logprob: -10.556633949279785

Token 49: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00760698551312089
    2. '=' → logprob: -4.8826069831848145
    3. ' =[' → logprob: -14.757607460021973
    4. '[' → logprob: -16.007606506347656
    5. '=[]' → logprob: -16.132606506347656
    6. '.' → logprob: -16.382606506347656
    7. 's' → logprob: -17.007606506347656
    8. '[:]' → logprob: -17.257606506347656
    9. ' ' → logprob: -17.382606506347656
    10. ')' → logprob: -17.757606506347656

Token 50: ' []
' (ID: 8911)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.42372384667396545
    2. '[key' → logprob: -2.1737239360809326
    3. '[string' → logprob: -2.1737239360809326
    4. '[' → logprob: -2.5487239360809326
    5. '[s' → logprob: -4.4237236976623535
    6. '[token' → logprob: -4.6737236976623535
    7. '[k' → logprob: -4.9237236976623535
    8. '[str' → logprob: -5.2987236976623535
    9. '[item' → logprob: -6.9237236976623535
    10. '[t' → logprob: -7.4237236976623535

Token 51: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0791204497218132
    2. ' for' → logprob: -2.579120397567749
    3. '
' → logprob: -8.954120635986328
    4. '[' → logprob: -9.454120635986328
    5. ' 
' → logprob: -11.329120635986328
    6. ' =' → logprob: -12.454120635986328
    7. '  
' → logprob: -13.704120635986328
    8. '<|end|>' → logprob: -13.829120635986328
    9. '[
' → logprob: -14.204120635986328
    10. '=' → logprob: -14.329120635986328

Token 52: ' string' (ID: 1621)
  Prédit: ' string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' string' → logprob: -0.42452555894851685
    2. 'string' → logprob: -1.674525499343872
    3. ' s' → logprob: -2.049525499343872
    4. 's' → logprob: -4.174525737762451
    5. ' key' → logprob: -4.299525737762451
    6. 'key' → logprob: -7.799525737762451
    7. ' word' → logprob: -8.299525260925293
    8. ' ' → logprob: -10.674525260925293
    9. 'word' → logprob: -10.924525260925293
    10. ' item' → logprob: -11.299525260925293

Token 53: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020037829875946045
    2. 'in' → logprob: -4.520037651062012
    3. ',' → logprob: -4.895037651062012
    4. ' ,' → logprob: -7.395037651062012
    5. ',count' → logprob: -7.770037651062012
    6. 's' → logprob: -8.270037651062012
    7. '_in' → logprob: -9.645037651062012
    8. ' ' → logprob: -10.270037651062012
    9. ',in' → logprob: -10.520037651062012
    10. '	in' → logprob: -11.395037651062012

Token 54: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.16022665798664093
    2. ' count' → logprob: -1.9102267026901245
    3. '	count' → logprob: -14.035226821899414
    4. 'cnt' → logprob: -14.535226821899414
    5. '_count' → logprob: -14.910226821899414
    6. ' ' → logprob: -15.535226821899414
    7. 'frequency' → logprob: -15.535226821899414
    8. ' frequency' → logprob: -16.160226821899414
    9. 'freq' → logprob: -16.910226821899414
    10. ' in' → logprob: -17.285226821899414

Token 55: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005935432855039835
    2. 'in' → logprob: -5.1309356689453125
    3. ' ' → logprob: -12.880935668945312
    4. ',' → logprob: -13.005935668945312
    5. '	in' → logprob: -13.880935668945312
    6. 's' → logprob: -14.630935668945312
    7. '_in' → logprob: -14.880935668945312
    8. '<|end|>' → logprob: -16.755935668945312
    9. '```' → logprob: -17.130935668945312
    10. ' ' → logprob: -17.130935668945312

Token 56: ' string' (ID: 1621)
  Prédit: 'string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'string' → logprob: -0.5759412050247192
    2. ' string' → logprob: -0.8259412050247192
    3. 'sorted' → logprob: -14.70094108581543
    4. '[string' → logprob: -14.95094108581543
    5. ' sorted' → logprob: -15.32594108581543
    6. '(string' → logprob: -15.45094108581543
    7. ' ' → logprob: -15.82594108581543
    8. '	string' → logprob: -16.20094108581543
    9. '```' → logprob: -16.57594108581543
    10. '_string' → logprob: -16.57594108581543

Token 57: '_counter' (ID: 35419)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5199509263038635
    2. 's' → logprob: -1.5199508666992188
    3. '.items' → logprob: -2.2699508666992188
    4. '_items' → logprob: -3.3949508666992188
    5. 'in' → logprob: -3.6449508666992188
    6. '_counter' → logprob: -4.519950866699219
    7. '_strings' → logprob: -5.644950866699219
    8. '.iteritems' → logprob: -6.144950866699219
    9. 'items' → logprob: -6.644950866699219
    10. ' ' → logprob: -6.644950866699219

Token 58: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.0017153972294181585
    2. '.' → logprob: -6.501715183258057
    3. 'items' → logprob: -8.626715660095215
    4. '.iteritems' → logprob: -10.501715660095215
    5. '.Items' → logprob: -12.751715660095215
    6. '_items' → logprob: -13.626715660095215
    7. ' .' → logprob: -14.376715660095215
    8. '.m' → logprob: -14.501715660095215
    9. '	items' → logprob: -15.001715660095215
    10. '.values' → logprob: -15.251715660095215

Token 59: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.6174390316009521
    2. ':' → logprob: -0.9924390316009521
    3. '(' → logprob: -2.492439031600952
    4. '):' → logprob: -6.367439270019531
    5. '<|end|>' → logprob: -6.492439270019531
    6. '()' → logprob: -6.867439270019531
    7. '():
' → logprob: -6.992439270019531
    8. ' :' → logprob: -7.617439270019531
    9. '<|end|>' → logprob: -7.617439270019531
    10. ':**' → logprob: -8.617439270019531

Token 60: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01690584048628807
    2. '<|end|>' → logprob: -4.891905784606934
    3. ' if' → logprob: -5.516905784606934
    4. ' ' → logprob: -6.516905784606934
    5. ':' → logprob: -6.891905784606934
    6. '    ' → logprob: -7.016905784606934
    7. '```' → logprob: -7.516905784606934
    8. '<|end|>' → logprob: -7.891905784606934
    9. '    
' → logprob: -8.016905784606934
    10. '  ' → logprob: -8.391905784606934

Token 61: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3634205162525177
    2. ' if' → logprob: -1.2384204864501953
    3. '    ' → logprob: -4.863420486450195
    4. 'if' (adapté à ' if') → logprob: -5.488420486450195
    5. '<|end|>' → logprob: -6.488420486450195
    6. '       ' → logprob: -7.738420486450195
    7. ' ' → logprob: -7.863420486450195
    8. ' ' → logprob: -8.363420486450195
    9. '   ' → logprob: -9.363420486450195
    10. '```' → logprob: -9.488420486450195

Token 62: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.0024758970830589533
    2. 'count' → logprob: -6.002475738525391
    3. '	count' → logprob: -16.50247573852539
    4. '(count' → logprob: -16.87747573852539
    5. '[count' → logprob: -18.87747573852539
    6. ' ' → logprob: -19.37747573852539
    7. ' counts' → logprob: -20.37747573852539
    8. '$count' → logprob: -20.75247573852539
    9. '=count' → logprob: -20.75247573852539
    10. '<count' → logprob: -21.00247573852539

Token 63: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.061970602720975876
    2. ' ==' → logprob: -2.8119707107543945
    3. '=' → logprob: -12.936970710754395
    4. '===' → logprob: -15.686970710754395
    5. ')==' → logprob: -16.436969757080078
    6. '==
' → logprob: -16.436969757080078
    7. '>=' → logprob: -16.686969757080078
    8. '()==' → logprob: -17.186969757080078
    9. ']==' → logprob: -17.186969757080078
    10. ' ' → logprob: -17.936969757080078

Token 64: ' maximum' (ID: 10562)
  Prédit: ' maximum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximum' → logprob: -0.0007099286303855479
    2. 'maximum' → logprob: -7.2507100105285645
    3. 'max' → logprob: -18.125709533691406
    4. '.maximum' → logprob: -18.875709533691406
    5. ' max' → logprob: -19.125709533691406
    6. ' ' → logprob: -19.500709533691406
    7. ' most' → logprob: -19.750709533691406
    8. ' maksimum' → logprob: -20.875709533691406
    9. 'Maximum' → logprob: -21.500709533691406
    10. ' maximal' → logprob: -21.500709533691406

Token 65: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -4.320199877838604e-07
    2. '_max' → logprob: -16.0
    3. '_' → logprob: -16.5
    4. 'count' → logprob: -16.625
    5. '_cont' → logprob: -18.375
    6. ')' → logprob: -18.375
    7. '_counts' → logprob: -18.5
    8. '_c' → logprob: -18.625
    9. ' _' → logprob: -18.875
    10. '_counter' → logprob: -19.0

Token 66: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002486476907506585
    2. ':
' → logprob: -6.002486705780029
    3. '):' → logprob: -12.377486228942871
    4. '):
' → logprob: -13.127486228942871
    5. '   ' → logprob: -13.752486228942871
    6. '       ' → logprob: -14.127486228942871
    7. ')' → logprob: -14.627486228942871
    8. ',' → logprob: -15.002486228942871
    9. ':

' → logprob: -15.002486228942871
    10. '<|end|>' → logprob: -15.002486228942871

Token 67: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09028501808643341
    2. ' most' → logprob: -2.465285062789917
    3. '   ' → logprob: -6.715284824371338
    4. 'most' → logprob: -10.090285301208496
    5. '        
' → logprob: -10.965285301208496
    6. '```' → logprob: -11.215285301208496
    7. 'Most' → logprob: -11.340285301208496
    8. '     ' → logprob: -11.715285301208496
    9. '
' → logprob: -11.715285301208496
    10. ' Most' → logprob: -11.965285301208496

Token 68: ' most' (ID: 1645)
  Prédit: ' most'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' most' → logprob: -0.0933893620967865
    2. '   ' → logprob: -2.5933892726898193
    3. '       ' → logprob: -4.718389511108398
    4. 'most' (adapté à ' most') → logprob: -5.218389511108398
    5. '           ' → logprob: -10.843389511108398
    6. '```' → logprob: -10.968389511108398
    7. '    ' → logprob: -12.218389511108398
    8. ' ' → logprob: -13.593389511108398
    9. '     ' → logprob: -13.718389511108398
    10. '
' → logprob: -14.093389511108398

Token 69: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -4.842555426876061e-06
    2. '_' → logprob: -13.500004768371582
    3. '_frequency' → logprob: -13.875004768371582
    4. '_m' → logprob: -13.875004768371582
    5. '_freq' → logprob: -15.125004768371582
    6. '._' → logprob: -15.375004768371582
    7. ' _' → logprob: -15.875004768371582
    8. '.' → logprob: -15.875004768371582
    9. '.append' → logprob: -16.0000057220459
    10. 'requent' → logprob: -16.0000057220459

Token 70: 'requent' (ID: 191346)
  Prédit: 'requent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'requent' → logprob: -8.77627644513268e-06
    2. 're' → logprob: -12.500008583068848
    3. 'requ' → logprob: -13.500008583068848
    4. 'quent' → logprob: -13.625008583068848
    5. 'requently' → logprob: -13.875008583068848
    6. 'req' → logprob: -13.875008583068848
    7. 'request' → logprob: -15.125008583068848
    8. 'reu' → logprob: -15.625008583068848
    9. 'requency' → logprob: -16.250009536743164
    10. 'fre' → logprob: -17.625009536743164

Token 71: '_strings' (ID: 87251)
  Prédit: '_strings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strings' → logprob: -2.935296834039036e-06
    2. '_s' → logprob: -14.12500286102295
    3. '_string' → logprob: -14.25000286102295
    4. '_str' → logprob: -14.75000286102295
    5. '_' → logprob: -14.75000286102295
    6. 'strings' → logprob: -14.87500286102295
    7. 'Strings' → logprob: -15.87500286102295
    8. '```' → logprob: -16.125003814697266
    9. ')_' → logprob: -17.125003814697266
    10. ' _' → logprob: -17.375003814697266

Token 72: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.1270429790019989
    2. '.' → logprob: -2.1270430088043213
    3. '.app' → logprob: -10.252042770385742
    4. ' .' → logprob: -10.877042770385742
    5. '.add' → logprob: -10.877042770385742
    6. '.ap' → logprob: -11.002042770385742
    7. '.extend' → logprob: -11.627042770385742
    8. '.push' → logprob: -12.002042770385742
    9. '.Append' → logprob: -12.627042770385742
    10. '.p' → logprob: -13.377042770385742

Token 73: '(string' (ID: 8003)
  Prédit: '(string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(string' → logprob: -0.00026181264547631145
    2. '(' → logprob: -8.250262260437012
    3. '(strings' → logprob: -15.875262260437012
    4. '(str' → logprob: -16.000261306762695
    5. '(object' → logprob: -16.250261306762695
    6. ' (' → logprob: -16.625261306762695
    7. '(s' → logprob: -16.750261306762695
    8. 'string' → logprob: -17.000261306762695
    9. '(
' → logprob: -18.000261306762695
    10. '(String' → logprob: -19.500261306762695

Token 74: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001049242913722992
    2. '<|end|>' → logprob: -7.626049041748047
    3. ')
' → logprob: -8.001049041748047
    4. '
' → logprob: -9.501049041748047
    5. '```' → logprob: -9.751049041748047
    6. 'print' → logprob: -10.876049041748047
    7. ')

' → logprob: -11.376049041748047
    8. '<|end|>' → logprob: -11.376049041748047
    9. 'newline' → logprob: -11.626049041748047
    10. ']' → logprob: -11.751049041748047

Token 75: 'most' (ID: 5309)
  Prédit: 'most'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'most' → logprob: -0.4870619475841522
    2. 'for' → logprob: -0.9870619773864746
    3. 'print' → logprob: -4.362061977386475
    4. '```' → logprob: -9.237061500549316
    5. ' for' → logprob: -11.112061500549316
    6. ' most' → logprob: -11.237061500549316
    7. '
' → logprob: -11.237061500549316
    8. 'if' → logprob: -13.362061500549316
    9. 'sorted' → logprob: -13.487061500549316
    10. '    
' → logprob: -13.487061500549316

Token 76: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.002611094154417515
    2. '_' → logprob: -6.25261116027832
    3. '_frequency' → logprob: -7.50261116027832
    4. '_freq' → logprob: -9.00261116027832
    5. '_final' → logprob: -13.50261116027832
    6. '_m' → logprob: -13.50261116027832
    7. ' _' → logprob: -14.25261116027832
    8. 'fre' → logprob: -15.25261116027832
    9. '_possible' → logprob: -15.25261116027832
    10. '```' → logprob: -15.37761116027832

Token 77: 'requent' (ID: 191346)
  Prédit: 'requent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'requent' → logprob: -5.347765181795694e-05
    2. 'requ' → logprob: -10.750053405761719
    3. 're' → logprob: -10.875053405761719
    4. 'req' → logprob: -12.375053405761719
    5. 'quent' → logprob: -12.500053405761719
    6. 'request' → logprob: -13.375053405761719
    7. 'requently' → logprob: -13.500053405761719
    8. 'reu' → logprob: -13.875053405761719
    9. 'requency' → logprob: -14.750053405761719
    10. 'fre' → logprob: -14.875053405761719

Token 78: '_strings' (ID: 87251)
  Prédit: '_strings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strings' → logprob: -0.0006061719032004476
    2. '_' → logprob: -7.500606060028076
    3. '_s' → logprob: -11.125606536865234
    4. '_string' → logprob: -11.250606536865234
    5. 'Strings' → logprob: -11.625606536865234
    6. '_str' → logprob: -11.625606536865234
    7. 'strings' → logprob: -12.125606536865234
    8. '```' → logprob: -15.000606536865234
    9. 's' → logprob: -15.125606536865234
    10. '_sorted' → logprob: -15.250606536865234

Token 79: '_sorted' (ID: 104993)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 80: ' =' (ID: 314)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.48482462763786316
    2. '.' → logprob: -1.1098246574401855
    3. '()' → logprob: -2.9848246574401855
    4. ')' → logprob: -6.2348246574401855
    5. '(' → logprob: -7.7348246574401855
    6. '<|end|>' → logprob: -7.9848246574401855
    7. '().' → logprob: -8.234824180603027
    8. '=' → logprob: -8.484824180603027
    9. '.sorted' → logprob: -8.984824180603027
    10. '[:]' → logprob: -8.984824180603027

Token 81: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.12696895003318787
    2. ' sorted' → logprob: -2.1269688606262207
    3. '(sorted' → logprob: -10.126969337463379
    4. '.sorted' → logprob: -14.751969337463379
    5. 'sort' → logprob: -15.376969337463379
    6. 's' → logprob: -15.751969337463379
    7. '_sorted' → logprob: -16.751968383789062
    8. 'Sorted' → logprob: -17.751968383789062
    9. ' ' → logprob: -17.876968383789062
    10. ' ' → logprob: -17.876968383789062

Token 82: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.47426390647888184
    2. '(' → logprob: -0.9742639064788818
    3. '((' → logprob: -9.349264144897461
    4. '(parent' → logprob: -11.224264144897461
    5. '('' → logprob: -11.599264144897461
    6. '(open' → logprob: -11.599264144897461
    7. '(paren' → logprob: -11.599264144897461
    8. '(strings' → logprob: -12.099264144897461
    9. ' (' → logprob: -12.474264144897461
    10. '(ms' → logprob: -12.599264144897461

Token 83: 'ost' (ID: 564)
  Prédit: 'ost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -2.816093228830141e-06
    2. 'most' → logprob: -12.87500286102295
    3. ' ost' → logprob: -16.500001907348633
    4. '```' → logprob: -17.250001907348633
    5. 'o' → logprob: -18.375001907348633
    6. 'ост' → logprob: -18.625001907348633
    7. 'osti' → logprob: -19.125001907348633
    8. 'os' → logprob: -19.750001907348633
    9. '_' → logprob: -19.750001907348633
    10. ' most' → logprob: -20.000001907348633

Token 84: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -2.2961512513575144e-05
    2. '_frequency' → logprob: -11.625022888183594
    3. '_freq' → logprob: -11.875022888183594
    4. 'fre' → logprob: -12.875022888183594
    5. 'f' → logprob: -13.250022888183594
    6. '_' → logprob: -13.500022888183594
    7. '_m' → logprob: -14.875022888183594
    8. '```' → logprob: -15.625022888183594
    9. 'freq' → logprob: -16.000022888183594
    10. 'requent' → logprob: -16.125022888183594

Token 85: 'requent' (ID: 191346)
  Prédit: 'requent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'requent' → logprob: -1.5690089639974758e-05
    2. 'requ' → logprob: -12.000015258789062
    3. 'quent' → logprob: -12.750015258789062
    4. 'req' → logprob: -13.375015258789062
    5. 'requency' → logprob: -13.625015258789062
    6. 'requently' → logprob: -13.750015258789062
    7. 'request' → logprob: -13.875015258789062
    8. 're' → logprob: -13.875015258789062
    9. 'ost' → logprob: -15.375015258789062
    10. 'reu' → logprob: -15.750015258789062

Token 86: '_strings' (ID: 87251)
  Prédit: '_strings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strings' → logprob: -1.735893965815194e-05
    2. 'strings' → logprob: -11.000017166137695
    3. 'Strings' → logprob: -15.125017166137695
    4. '_' → logprob: -16.250017166137695
    5. '_string' → logprob: -16.250017166137695
    6. '(strings' → logprob: -16.250017166137695
    7. '_s' → logprob: -17.500017166137695
    8. '_m' → logprob: -17.500017166137695
    9. 'most' → logprob: -17.875017166137695
    10. '_str' → logprob: -18.000017166137695

Token 87: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003365350130479783
    2. '()' → logprob: -8.250336647033691
    3. '())' → logprob: -9.875336647033691
    4. ' )' → logprob: -10.875336647033691
    5. ',' → logprob: -13.375336647033691
    6. '(' → logprob: -13.500336647033691
    7. ')
' → logprob: -14.500336647033691
    8. ']' → logprob: -14.875336647033691
    9. '))' → logprob: -14.875336647033691
    10. '(),' → logprob: -15.875336647033691

Token 88: 'print' (ID: 1598)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10024300962686539
    2. 'print' → logprob: -2.350243091583252
    3. ' for' → logprob: -11.350242614746094
    4. '```' → logprob: -11.725242614746094
    5. '[' → logprob: -12.350242614746094
    6. 'if' → logprob: -12.475242614746094
    7. 'most' → logprob: -12.725242614746094
    8. '
' → logprob: -13.600242614746094
    9. '#' → logprob: -14.225242614746094
    10. '[
' → logprob: -14.350242614746094

Token 89: '('\' (ID: 24345)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.015011600218713284
    2. '('' → logprob: -4.515011787414551
    3. '(m' → logprob: -6.015011787414551
    4. '("("' → logprob: -6.515011787414551
    5. '((' → logprob: -11.26501178741455
    6. '(*' → logprob: -12.39001178741455
    7. '(
' → logprob: -13.14001178741455
    8. '(list' → logprob: -13.39001178741455
    9. ''' → logprob: -13.51501178741455
    10. '("' → logprob: -13.64001178741455

Token 90: 'n' (ID: 77)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.022027717903256416
    2. ''\' → logprob: -3.8970277309417725
    3. ''' → logprob: -7.397027492523193
    4. 'n' → logprob: -7.522027492523193
    5. ''.' → logprob: -8.522027969360352
    6. '
' → logprob: -9.772027969360352
    7. '\
' → logprob: -10.772027969360352
    8. '"\' → logprob: -11.147027969360352
    9. '',' → logprob: -11.647027969360352
    10. '\\' → logprob: -11.772027969360352

Token 91: ''.' (ID: 6120)
  Prédit: ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.0008656067657284439
    2. '.join' → logprob: -7.625865459442139
    3. '".' → logprob: -8.750865936279297
    4. '.' → logprob: -9.250865936279297
    5. '''.' → logprob: -9.500865936279297
    6. 'print' → logprob: -11.250865936279297
    7. ').' → logprob: -11.375865936279297
    8. '').' → logprob: -11.625865936279297
    9. ''' → logprob: -11.750865936279297
    10. '.print' → logprob: -13.250865936279297

Token 92: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.3663626305060461e-05
    2. 'j' → logprob: -12.12501335144043
    3. 'jo' → logprob: -12.37501335144043
    4. 'print' → logprob: -12.87501335144043
    5. ' join' → logprob: -13.87501335144043
    6. '.join' → logprob: -15.50001335144043
    7. '```' → logprob: -15.62501335144043
    8. 'js' → logprob: -17.12501335144043
    9. '.' → logprob: -17.37501335144043
    10. ').' → logprob: -17.50001335144043

Token 93: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0040931240655481815
    2. '(' → logprob: -5.504093170166016
    3. ')' → logprob: -12.004093170166016
    4. ' (' → logprob: -12.629093170166016
    5. '('' → logprob: -13.504093170166016
    6. 'most' → logprob: -13.504093170166016
    7. ' most' → logprob: -13.754093170166016
    8. ')m' → logprob: -14.129093170166016
    9. ')(' → logprob: -15.504093170166016
    10. 'Most' → logprob: -15.504093170166016

Token 94: 'ost' (ID: 564)
  Prédit: 'ost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: 0.0
    2. ' ost' → logprob: -16.75
    3. 'most' → logprob: -17.5
    4. 'ост' → logprob: -18.875
    5. 'o' → logprob: -19.0
    6. '```' → logprob: -20.0
    7. 'ostr' → logprob: -20.25
    8. 'os' → logprob: -20.375
    9. '[' → logprob: -20.875
    10. 'osti' → logprob: -21.5

Token 95: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -3.023293538717553e-05
    2. '_freq' → logprob: -11.625030517578125
    3. '_m' → logprob: -11.750030517578125
    4. '_frequency' → logprob: -12.000030517578125
    5. '_' → logprob: -12.750030517578125
    6. 'f' → logprob: -13.500030517578125
    7. 'requent' → logprob: -13.500030517578125
    8. 'fre' → logprob: -14.875030517578125
    9. '<|end|>' → logprob: -15.625030517578125
    10. ' Frequent' → logprob: -16.000030517578125

Token 96: 'requent' (ID: 191346)
  Prédit: 'requent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'requent' → logprob: -0.0025653145276010036
    2. 'quent' → logprob: -6.002565383911133
    3. 'ost' → logprob: -9.752565383911133
    4. 're' → logprob: -12.002565383911133
    5. 'fre' → logprob: -12.252565383911133
    6. 'most' → logprob: -12.252565383911133
    7. 'uent' → logprob: -12.502565383911133
    8. 'req' → logprob: -13.002565383911133
    9. 'requ' → logprob: -13.002565383911133
    10. 'requently' → logprob: -13.627565383911133

Token 97: '_strings' (ID: 87251)
  Prédit: '_strings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strings' → logprob: -1.9027791495318525e-05
    2. 'strings' → logprob: -11.750019073486328
    3. '_' → logprob: -12.125019073486328
    4. 'Strings' → logprob: -13.125019073486328
    5. '_string' → logprob: -13.750019073486328
    6. '_s' → logprob: -13.875019073486328
    7. '_str' → logprob: -14.625019073486328
    8. 's' → logprob: -15.375019073486328
    9. '_st' → logprob: -16.250019073486328
    10. '```' → logprob: -16.500019073486328

Token 98: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.000377049611415714
    2. '_' → logprob: -9.00037670135498
    3. '))' → logprob: -9.37537670135498
    4. '_s' → logprob: -9.50037670135498
    5. '_)' → logprob: -10.00037670135498
    6. ')' → logprob: -10.75037670135498
    7. ')_' → logprob: -11.50037670135498
    8. '_m' → logprob: -11.87537670135498
    9. '_strings' → logprob: -11.87537670135498
    10. '_scaled' → logprob: -14.37537670135498

Token 99: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20141451060771942
    2. '))' → logprob: -1.7014144659042358
    3. ')))' → logprob: -14.201414108276367
    4. ')`' → logprob: -15.576414108276367
    5. '])' → logprob: -16.076414108276367
    6. ' )' → logprob: -16.451414108276367
    7. '')' → logprob: -17.076414108276367
    8. '})' → logprob: -17.201414108276367
    9. ')}' → logprob: -17.451414108276367
    10. ')
' → logprob: -17.701414108276367


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 97
Tokens correctement prédits (1ère position, stricte): 54
Tokens correctement prédits (1ère position, avec adaptation): 54
Tokens correctement prédits (top 10): 83
Précision stricte (1ère position): 55.67%
Précision adaptée (1ère position): 55.67%
Précision (top 10): 85.57%
================================================================================
