================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:56:38
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
a = input().split()
for i in range(len(a)):
    a[i] = int(a[i])
for i in range(len(a)):
    for j in range(i + 1, len(a)):
        if a[i] > a[j]:
            tmp = a[i]
            a[i] = a[j]
            a[j] = tmp
print(a[0] + a[1])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'a' (ID: 64)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0010312614031136036
    2. ''' → logprob: -8.251030921936035
    3. '(
' → logprob: -8.376030921936035
    4. '('' → logprob: -8.501030921936035
    5. '"' → logprob: -8.876030921936035
    6. '`' → logprob: -9.251030921936035
    7. ' (' → logprob: -10.876030921936035
    8. '```' → logprob: -11.001030921936035
    9. '(

' → logprob: -11.251030921936035
    10. '(`' → logprob: -11.751030921936035

Token 4: 'split' (ID: 13627)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0771660804748535
    2. '+' → logprob: -1.4521660804748535
    3. '(' → logprob: -1.7021660804748535
    4. '\n' → logprob: -2.9521660804748535
    5. '()' → logprob: -3.2021660804748535
    6. ')' → logprob: -3.3271660804748535
    7. '\' → logprob: -3.5771660804748535
    8. '```' → logprob: -3.8271660804748535
    9. ' ' → logprob: -4.2021660804748535
    10. '*' → logprob: -4.5771660804748535

Token 5: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009190816199406981
    2. '()' → logprob: -7.125918865203857
    3. '('' → logprob: -10.375919342041016
    4. '(
' → logprob: -10.750919342041016
    5. '("("' → logprob: -10.875919342041016
    6. '"' → logprob: -11.250919342041016
    7. '(

' → logprob: -11.500919342041016
    8. '`' → logprob: -12.625919342041016
    9. '(`' → logprob: -12.625919342041016
    10. ' (' → logprob: -12.875919342041016

Token 6: 'for' (ID: 1938)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.060095373541116714
    2. 'a' → logprob: -3.6850953102111816
    3. '.' → logprob: -4.435095310211182
    4. '[a' → logprob: -5.060095310211182
    5. 'print' → logprob: -5.685095310211182
    6. '\[' → logprob: -6.185095310211182
    7. '```' → logprob: -6.435095310211182
    8. '=' → logprob: -6.435095310211182
    9. '`' → logprob: -7.060095310211182
    10. 'for' → logprob: -7.060095310211182

Token 7: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11497005075216293
    2. ' i' → logprob: -3.1149699687957764
    3. ' a' → logprob: -3.8649699687957764
    4. '  ' → logprob: -3.9899699687957764
    5. '_' → logprob: -4.2399702072143555
    6. 'i' → logprob: -5.4899702072143555
    7. ' _' → logprob: -6.2399702072143555
    8. 'a' → logprob: -6.8649702072143555
    9. ' item' → logprob: -7.4899702072143555
    10. ''' → logprob: -7.7399702072143555

Token 8: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.29262709617614746
    2. ' in' → logprob: -1.4176270961761475
    3. ' ' → logprob: -4.792627334594727
    4. '_' → logprob: -7.042627334594727
    5. '  ' → logprob: -7.542627334594727
    6. ')' → logprob: -8.167627334594727
    7. '[' → logprob: -8.292627334594727
    8. '<|end|>' → logprob: -8.417627334594727
    9. '(' → logprob: -8.542627334594727
    10. 'n' → logprob: -9.167627334594727

Token 9: ' range' (ID: 3352)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1416814774274826
    2. 'range' → logprob: -2.391681432723999
    3. ' range' → logprob: -3.516681432723999
    4. ' a' → logprob: -4.516681671142578
    5. ' ' → logprob: -14.016681671142578
    6. '(range' → logprob: -14.516681671142578
    7. '(a' → logprob: -14.891681671142578
    8. '	range' → logprob: -14.891681671142578
    9. '  ' → logprob: -15.016681671142578
    10. '```' → logprob: -15.391681671142578

Token 10: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.4741266369819641
    2. '(' → logprob: -0.9741266369819641
    3. '(

' → logprob: -11.224126815795898
    4. '(length' → logprob: -11.349126815795898
    5. '(
' → logprob: -11.849126815795898
    6. '(a' → logprob: -11.974126815795898
    7. '(int' → logprob: -12.724126815795898
    8. '((' → logprob: -12.849126815795898
    9. '(n' → logprob: -13.849126815795898
    10. '()' → logprob: -14.099126815795898

Token 11: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0019311357755213976
    2. '(' → logprob: -6.251931190490723
    3. 'a' → logprob: -13.001931190490723
    4. '(
' → logprob: -16.251930236816406
    5. '(s' → logprob: -17.126930236816406
    6. '(i' → logprob: -17.626930236816406
    7. '(

' → logprob: -18.001930236816406
    8. '(ai' → logprob: -18.001930236816406
    9. ' (' → logprob: -18.251930236816406
    10. '(b' → logprob: -18.501930236816406

Token 12: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.14737367630004883
    2. '))' → logprob: -2.147373676300049
    3. '):' → logprob: -4.147373676300049
    4. ')' → logprob: -5.772373676300049
    5. '[' → logprob: -7.522373676300049
    6. '[a' → logprob: -7.897373676300049
    7. ')):
' → logprob: -8.64737319946289
    8. '[i' → logprob: -9.52237319946289
    9. ' ' → logprob: -10.14737319946289
    10. ' ))' → logprob: -10.39737319946289

Token 13: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016802575439214706
    2. 'a' → logprob: -4.891802787780762
    3. '```' → logprob: -5.891802787780762
    4. ' a' → logprob: -6.141802787780762
    5. '    ' → logprob: -6.891802787780762
    6. ' if' → logprob: -7.141802787780762
    7. 'print' → logprob: -7.641802787780762
    8. ' ' → logprob: -8.016802787780762
    9. '    
' → logprob: -8.141802787780762
    10. '[' → logprob: -8.391802787780762

Token 14: ' a' (ID: 261)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7360837459564209
    2. 'a' (adapté à ' a') → logprob: -1.361083745956421
    3. '   ' → logprob: -1.611083745956421
    4. ' a' → logprob: -3.736083745956421
    5. 'if' → logprob: -3.736083745956421
    6. ' print' → logprob: -4.736083984375
    7. ' if' → logprob: -5.486083984375
    8. 'for' → logprob: -5.861083984375
    9. '    ' → logprob: -7.111083984375
    10. ' for' → logprob: -7.736083984375

Token 15: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6365321278572083
    2. '[' → logprob: -0.7615321278572083
    3. '[a' → logprob: -5.761532306671143
    4. '```' → logprob: -8.136531829833984
    5. '\[' → logprob: -8.386531829833984
    6. '[int' → logprob: -10.136531829833984
    7. '[I' → logprob: -10.136531829833984
    8. '[...]' → logprob: -10.136531829833984
    9. '[:]' → logprob: -10.636531829833984
    10. '[input' → logprob: -11.011531829833984

Token 16: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5180896520614624
    2. ']' → logprob: -1.0180896520614624
    3. '].' → logprob: -4.268089771270752
    4. '.append' → logprob: -5.018089771270752
    5. '[' → logprob: -5.143089771270752
    6. ']=' → logprob: -5.518089771270752
    7. ').' → logprob: -5.768089771270752
    8. ']+=' → logprob: -6.018089771270752
    9. ')=' → logprob: -6.268089771270752
    10. '])' → logprob: -6.643089771270752

Token 17: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011317897588014603
    2. ' =' → logprob: -4.761317729949951
    3. '+=' → logprob: -6.886317729949951
    4. '+' → logprob: -7.261317729949951
    5. '[' → logprob: -8.01131820678711
    6. '<|end|>' → logprob: -8.63631820678711
    7. ')' → logprob: -9.01131820678711
    8. ' +=' → logprob: -9.26131820678711
    9. '+='' → logprob: -9.38631820678711
    10. '.' → logprob: -10.51131820678711

Token 18: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.006783455144613981
    2. ' int' → logprob: -5.006783485412598
    3. 'a' → logprob: -9.756783485412598
    4. 'float' → logprob: -11.756783485412598
    5. ' a' → logprob: -13.631783485412598
    6. 'str' → logprob: -15.131783485412598
    7. '(int' → logprob: -15.381783485412598
    8. 'input' → logprob: -15.631783485412598
    9. ' float' → logprob: -16.25678253173828
    10. 'list' → logprob: -16.50678253173828

Token 19: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.004078878089785576
    2. '(' → logprob: -5.5040788650512695
    3. '(
' → logprob: -16.129079818725586
    4. '(i' → logprob: -16.629079818725586
    5. ' (' → logprob: -17.004079818725586
    6. '(A' → logprob: -17.004079818725586
    7. '('' → logprob: -17.379079818725586
    8. 'a' → logprob: -17.504079818725586
    9. '(

' → logprob: -17.504079818725586
    10. '(x' → logprob: -18.254079818725586

Token 20: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.000530871853698045
    2. '[' → logprob: -7.62553071975708
    3. ')' → logprob: -10.625531196594238
    4. ' [' → logprob: -11.375531196594238
    5. '[a' → logprob: -12.375531196594238
    6. ')[' → logprob: -14.000531196594238
    7. '[I' → logprob: -14.375531196594238
    8. ')i' → logprob: -15.125531196594238
    9. '[
' → logprob: -15.375531196594238
    10. ' ' → logprob: -15.625531196594238

Token 21: '])
' (ID: 5169)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.2030743956565857
    2. ')' → logprob: -1.7030744552612305
    3. '])' → logprob: -6.4530744552612305
    4. ')))' → logprob: -10.57807445526123
    5. ')]' → logprob: -11.32807445526123
    6. ']))' → logprob: -11.45307445526123
    7. ' ))' → logprob: -11.70307445526123
    8. ')])' → logprob: -11.82807445526123
    9. ']' → logprob: -12.45307445526123
    10. ' )' → logprob: -12.57807445526123

Token 22: 'for' (ID: 1938)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 23: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.9034299850463867
    2. ' ' → logprob: -1.2784299850463867
    3. ' range' → logprob: -2.0284299850463867
    4. 'i' → logprob: -2.1534299850463867
    5. ' a' → logprob: -3.2784299850463867
    6. 'range' → logprob: -4.528429985046387
    7. '_' → logprob: -4.653429985046387
    8. '  ' → logprob: -5.403429985046387
    9. ' _' → logprob: -6.528429985046387
    10. ' in' → logprob: -6.778429985046387

Token 24: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.43175122141838074
    2. 'in' → logprob: -1.0567512512207031
    3. '(' → logprob: -6.681751251220703
    4. ' ' → logprob: -6.681751251220703
    5. '  ' → logprob: -8.556751251220703
    6. 'range' → logprob: -9.556751251220703
    7. '	in' → logprob: -10.056751251220703
    8. '(in' → logprob: -10.431751251220703
    9. '+' → logprob: -10.431751251220703
    10. ')' → logprob: -10.681751251220703

Token 25: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4742736518383026
    2. 'range' → logprob: -0.974273681640625
    3. 'a' → logprob: -8.974273681640625
    4. ' a' → logprob: -9.599273681640625
    5. ' ' → logprob: -13.974273681640625
    6. '  ' → logprob: -15.099273681640625
    7. '(range' → logprob: -15.224273681640625
    8. '	range' → logprob: -15.224273681640625
    9. '   ' → logprob: -15.724273681640625
    10. 'Range' → logprob: -16.349273681640625

Token 26: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.47412991523742676
    2. '(' → logprob: -0.9741299152374268
    3. ' (' → logprob: -10.099129676818848
    4. '(
' → logprob: -12.974129676818848
    5. '(a' → logprob: -13.099129676818848
    6. '(l' → logprob: -13.474129676818848
    7. '()' → logprob: -13.599129676818848
    8. '(

' → logprob: -13.849129676818848
    9. '((' → logprob: -13.974129676818848
    10. '(length' → logprob: -14.474129676818848

Token 27: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0028135518077760935
    2. '(' → logprob: -5.877813339233398
    3. '(s' → logprob: -11.752813339233398
    4. ' (' → logprob: -15.252813339233398
    5. 'a' → logprob: -15.752813339233398
    6. ')' → logprob: -16.3778133392334
    7. '(A' → logprob: -16.5028133392334
    8. '(
' → logprob: -17.1278133392334
    9. '(x' → logprob: -17.2528133392334
    10. '(b' → logprob: -17.3778133392334

Token 28: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.011763336136937141
    2. '):' → logprob: -5.386763572692871
    3. '))' → logprob: -5.511763572692871
    4. ')):
' → logprob: -6.511763572692871
    5. ')' → logprob: -7.011763572692871
    6. '-' → logprob: -7.511763572692871
    7. ' ' → logprob: -9.886763572692871
    8. ')):
' → logprob: -10.886763572692871
    9. '[' → logprob: -11.011763572692871
    10. ' ))' → logprob: -11.261763572692871

Token 29: '   ' (ID: 271)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.8446526527404785
    2. '   ' → logprob: -1.0946526527404785
    3. ' ' → logprob: -2.0946526527404785
    4. ':' → logprob: -3.4696526527404785
    5. ' for' → logprob: -4.0946526527404785
    6. 'print' → logprob: -4.3446526527404785
    7. ' print' → logprob: -4.4696526527404785
    8. ' if' → logprob: -4.5946526527404785
    9. ' a' → logprob: -4.7196526527404785
    10. '    
' → logprob: -5.5946526527404785

Token 30: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8301199078559875
    2. 'for' (adapté à ' for') → logprob: -1.7051198482513428
    3. ' if' → logprob: -1.9551198482513428
    4. ' a' → logprob: -2.2051198482513428
    5. 'print' → logprob: -3.0801198482513428
    6. 'if' → logprob: -3.0801198482513428
    7. 'a' → logprob: -3.9551198482513428
    8. ' print' → logprob: -4.080120086669922
    9. '   ' → logprob: -6.455120086669922
    10. '    ' → logprob: -8.330120086669922

Token 31: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.5097988843917847
    2. ' ' → logprob: -1.6347988843917847
    3. ' range' → logprob: -1.6347988843917847
    4. 'range' → logprob: -5.134799003601074
    5. 'j' → logprob: -6.384799003601074
    6. '<|end|>' → logprob: -7.634799003601074
    7. ' a' → logprob: -8.259799003601074
    8. ' len' → logprob: -9.009799003601074
    9. '  ' → logprob: -9.384799003601074
    10. ' (' → logprob: -9.384799003601074

Token 32: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023467563092708588
    2. 'in' → logprob: -3.773467540740967
    3. 'range' → logprob: -9.023468017578125
    4. '+' → logprob: -10.398468017578125
    5. ' ' → logprob: -10.398468017578125
    6. ' range' → logprob: -11.398468017578125
    7. ')' → logprob: -12.148468017578125
    8. '	in' → logprob: -12.398468017578125
    9. ' i' → logprob: -12.773468017578125
    10. '```' → logprob: -13.148468017578125

Token 33: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.16022513806819916
    2. 'range' → logprob: -1.9102251529693604
    3. '	range' → logprob: -15.035224914550781
    4. '(range' → logprob: -15.285224914550781
    5. ' ' → logprob: -15.785224914550781
    6. '  ' → logprob: -16.78522491455078
    7. '   ' → logprob: -16.91022491455078
    8. 'a' → logprob: -17.03522491455078
    9. ' a' → logprob: -17.03522491455078
    10. 'i' → logprob: -17.28522491455078

Token 34: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.6952434778213501
    2. '(len' → logprob: -0.6952434778213501
    3. '(' → logprob: -6.1952433586120605
    4. '(range' → logprob: -10.195243835449219
    5. ' (' → logprob: -11.320243835449219
    6. '(j' → logprob: -12.445243835449219
    7. '(length' → logprob: -15.070243835449219
    8. '(a' → logprob: -15.320243835449219
    9. '((' → logprob: -15.320243835449219
    10. '(l' → logprob: -15.945243835449219

Token 35: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0008054602658376098
    2. ' +' → logprob: -7.125805377960205
    3. ',' → logprob: -14.750805854797363
    4. '+,' → logprob: -15.125805854797363
    5. '+)' → logprob: -15.500805854797363
    6. '1' → logprob: -16.250804901123047
    7. ')+' → logprob: -18.000804901123047
    8. '+
' → logprob: -18.000804901123047
    9. ')' → logprob: -18.250804901123047
    10. ',+' → logprob: -18.375804901123047

Token 36: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.662937372922897e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -15.125096321105957
    4. '0' → logprob: -15.875096321105957
    5. '```' → logprob: -17.500097274780273
    6. '<|end|>' → logprob: -18.000097274780273
    7. '  ' → logprob: -19.125097274780273
    8. '2' → logprob: -19.500097274780273
    9. '+' → logprob: -19.812597274780273
    10. '`' → logprob: -19.937597274780273

Token 37: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.2020991056924686e-05
    2. ' ' → logprob: -10.375032424926758
    3. '0' → logprob: -14.750032424926758
    4. '   ' → logprob: -16.375032424926758
    5. 'a' → logprob: -16.500032424926758
    6. '2' → logprob: -17.375032424926758
    7. 'len' → logprob: -17.625032424926758
    8. '```' → logprob: -17.750032424926758
    9. '  ' → logprob: -17.875032424926758
    10. '`' → logprob: -18.250032424926758

Token 38: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11637617647647858
    2. ',len' → logprob: -2.2413761615753174
    3. ' ,' → logprob: -6.2413763999938965
    4. 'len' → logprob: -6.8663763999938965
    5. '<len' → logprob: -8.241375923156738
    6. ' len' → logprob: -8.866375923156738
    7. ')' → logprob: -9.366375923156738
    8. '(len' → logprob: -11.116375923156738
    9. ' ' → logprob: -11.491375923156738
    10. ',length' → logprob: -11.866375923156738

Token 39: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.02325153350830078
    2. ' len' → logprob: -3.773251533508301
    3. '   ' → logprob: -12.5232515335083
    4. '(len' → logprob: -13.6482515335083
    5. '<len' → logprob: -15.0232515335083
    6. '	len' → logprob: -15.1482515335083
    7. ' ' → logprob: -15.5232515335083
    8. '  ' → logprob: -16.023250579833984
    9. '    ' → logprob: -16.023250579833984
    10. ',len' → logprob: -16.023250579833984

Token 40: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.9266199160483666e-05
    2. '(' → logprob: -10.875019073486328
    3. 'a' → logprob: -15.250019073486328
    4. '(
' → logprob: -17.250019073486328
    5. '(A' → logprob: -18.000019073486328
    6. '(s' → logprob: -18.875019073486328
    7. ' (' → logprob: -19.250019073486328
    8. '(i' → logprob: -19.750019073486328
    9. '(ai' → logprob: -20.000019073486328
    10. ')' → logprob: -20.375019073486328

Token 41: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.0520348958671093
    2. '))' → logprob: -3.802034854888916
    3. '):' → logprob: -3.802034854888916
    4. ')' → logprob: -5.302034854888916
    5. ')):
' → logprob: -7.052034854888916
    6. ')):
' → logprob: -10.302035331726074
    7. 'a' → logprob: -10.427035331726074
    8. ')a' → logprob: -10.552035331726074
    9. ' ' → logprob: -10.677035331726074
    10. ' ))' → logprob: -10.677035331726074

Token 42: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28502219915390015
    2. ':' → logprob: -1.660022258758545
    3. ' if' → logprob: -3.785022258758545
    4. ' ' → logprob: -4.785022258758545
    5. '   ' → logprob: -4.785022258758545
    6. ' :' → logprob: -5.160022258758545
    7. '    ' → logprob: -5.785022258758545
    8. '):' → logprob: -5.785022258758545
    9. 'if' → logprob: -5.910022258758545
    10. ')' → logprob: -7.160022258758545

Token 43: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3992849886417389
    2. 'if' (adapté à ' if') → logprob: -1.1492849588394165
    3. '           ' → logprob: -4.399284839630127
    4. '       ' → logprob: -10.649285316467285
    5. ' ' → logprob: -11.649285316467285
    6. '```' → logprob: -12.399285316467285
    7. 'print' → logprob: -12.524285316467285
    8. '            ' → logprob: -12.774285316467285
    9. '   ' → logprob: -12.899285316467285
    10. '               ' → logprob: -13.649285316467285

Token 44: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.0031184181571006775
    2. 'a' → logprob: -5.878118515014648
    3. ' ' → logprob: -8.128118515014648
    4. '	a' → logprob: -11.503118515014648
    5. ' ' → logprob: -12.253118515014648
    6. '    ' → logprob: -13.628118515014648
    7. '(a' → logprob: -14.628118515014648
    8. ' а' → logprob: -15.378118515014648
    9. ' (' → logprob: -15.628118515014648
    10. '"' → logprob: -16.00311851501465

Token 45: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.008053489029407501
    2. '[' → logprob: -5.008053302764893
    3. '[j' → logprob: -6.633053302764893
    4. '[a' → logprob: -11.13305377960205
    5. '[I' → logprob: -13.38305377960205
    6. ' [' → logprob: -13.38305377960205
    7. '```' → logprob: -14.00805377960205
    8. 'i' → logprob: -14.38305377960205
    9. '>' → logprob: -14.63305377960205
    10. ' ' → logprob: -15.25805377960205

Token 46: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.11285052448511124
    2. ' >' → logprob: -2.2378504276275635
    3. '<' → logprob: -11.362850189208984
    4. ' ' → logprob: -11.862850189208984
    5. ' <' → logprob: -12.362850189208984
    6. '[' → logprob: -13.237850189208984
    7. '==' → logprob: -14.112850189208984
    8. '>a' → logprob: -14.612850189208984
    9. '">' → logprob: -14.737850189208984
    10. '%' → logprob: -15.487850189208984

Token 47: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.2258322536945343
    2. ' >' → logprob: -1.600832223892212
    3. '<' → logprob: -8.225831985473633
    4. ' <' → logprob: -9.225831985473633
    5. ' ' → logprob: -10.100831985473633
    6. '==' → logprob: -12.475831985473633
    7. '[' → logprob: -13.350831985473633
    8. '%' → logprob: -13.850831985473633
    9. '   ' → logprob: -14.350831985473633
    10. '>a' → logprob: -14.350831985473633

Token 48: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.31326842308044434
    2. ' a' → logprob: -1.3132684230804443
    3. '	a' → logprob: -12.438268661499023
    4. ' ' → logprob: -13.563268661499023
    5. '>a' → logprob: -14.813268661499023
    6. '   ' → logprob: -15.063268661499023
    7. ' ' → logprob: -15.563268661499023
    8. '_a' → logprob: -16.188268661499023
    9. '    ' → logprob: -16.688268661499023
    10. '(a' → logprob: -17.250768661499023

Token 49: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.531315314830863e-06
    2. '[i' → logprob: -12.875003814697266
    3. '[' → logprob: -14.750003814697266
    4. '][' → logprob: -16.250003814697266
    5. '```' → logprob: -16.250003814697266
    6. ']' → logprob: -17.000003814697266
    7. 'j' → logprob: -17.125003814697266
    8. '[a' → logprob: -17.250003814697266
    9. '[
' → logprob: -17.375003814697266
    10. ' [' → logprob: -17.375003814697266

Token 50: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002701089484617114
    2. ':' → logprob: -6.752701282501221
    3. ' ):' → logprob: -7.377701282501221
    4. '):
' → logprob: -7.377701282501221
    5. ')' → logprob: -9.377700805664062
    6. '       ' → logprob: -9.877700805664062
    7. ']:' → logprob: -10.002700805664062
    8. '           ' → logprob: -10.127700805664062
    9. '   ' → logprob: -11.377700805664062
    10. '):
' → logprob: -11.627700805664062

Token 51: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06825698912143707
    2. ' a' → logprob: -3.1932570934295654
    3. 'a' → logprob: -4.568256855010986
    4. ' ' → logprob: -4.693256855010986
    5. '            ' → logprob: -6.318256855010986
    6. ',' → logprob: -6.943256855010986
    7. '               ' → logprob: -7.193256855010986
    8. '            
' → logprob: -7.443256855010986
    9. ' =' → logprob: -8.443257331848145
    10. '          ' → logprob: -8.693257331848145

Token 52: ' tmp' (ID: 8919)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.01638530008494854
    2. 'a' → logprob: -4.141385078430176
    3. '           ' → logprob: -8.391385078430176
    4. '               ' → logprob: -9.141385078430176
    5. ' 
' → logprob: -11.766385078430176
    6. ' ' → logprob: -12.891385078430176
    7. '            
' → logprob: -13.266385078430176
    8. '            ' → logprob: -13.266385078430176
    9. '                
' → logprob: -14.141385078430176
    10. '	a' → logprob: -14.766385078430176

Token 53: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.049619052559137344
    2. '=' → logprob: -3.04961895942688
    3. ',' → logprob: -7.174619197845459
    4. ' ' → logprob: -8.5496187210083
    5. '<|end|>' → logprob: -9.9246187210083
    6. ' ,' → logprob: -11.7996187210083
    7. '<|end|>' → logprob: -13.0496187210083
    8. ' =
' → logprob: -13.1746187210083
    9. ' ' → logprob: -13.5496187210083
    10. ' ==' → logprob: -13.6746187210083

Token 54: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0380416102707386
    2. ' a' → logprob: -3.288041591644287
    3. '	a' → logprob: -16.288042068481445
    4. '           ' → logprob: -17.663042068481445
    5. '_a' → logprob: -18.288042068481445
    6. ' ' → logprob: -18.288042068481445
    7. '   ' → logprob: -18.538042068481445
    8. '    ' → logprob: -19.163042068481445
    9. '>a' → logprob: -19.163042068481445
    10. ')a' → logprob: -20.288042068481445

Token 55: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.14283937215805054
    2. '[j' → logprob: -2.0178394317626953
    3. '[' → logprob: -8.767839431762695
    4. '[a' → logprob: -12.892839431762695
    5. 'i' → logprob: -13.017839431762695
    6. '```' → logprob: -13.892839431762695
    7. '[tmp' → logprob: -14.517839431762695
    8. ' [' → logprob: -14.642839431762695
    9. 'j' → logprob: -15.142839431762695
    10. '[I' → logprob: -15.142839431762695

Token 56: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.5766163468360901
    2. ']' → logprob: -0.8266163468360901
    3. ']
' → logprob: -8.076616287231445
    4. '           ' → logprob: -8.701616287231445
    5. '<|end|>' → logprob: -9.201616287231445
    6. '<|end|>' → logprob: -10.201616287231445
    7. 'a' → logprob: -11.201616287231445
    8. '
' → logprob: -11.326616287231445
    9. ' ]' → logprob: -12.076616287231445
    10. ']

' → logprob: -12.076616287231445

Token 57: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05566184222698212
    2. '<|end|>' → logprob: -3.805661916732788
    3. '
' → logprob: -4.055661678314209
    4. 'a' → logprob: -5.305661678314209
    5. '            
' → logprob: -5.430661678314209
    6. '       ' → logprob: -7.055661678314209
    7. ' 
' → logprob: -7.055661678314209
    8. '            ' → logprob: -7.680661678314209
    9. '               ' → logprob: -7.680661678314209
    10. '\n' → logprob: -7.805661678314209

Token 58: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.3629518449306488
    2. ' a' → logprob: -1.4879518747329712
    3. '           ' → logprob: -2.6129517555236816
    4. ' ' → logprob: -6.112951755523682
    5. ' 
' → logprob: -6.362951755523682
    6. '            ' → logprob: -8.11295223236084
    7. '<|end|>' → logprob: -8.61295223236084
    8. ' ' → logprob: -8.98795223236084
    9. '            
' → logprob: -9.11295223236084
    10. ' =' → logprob: -9.23795223236084

Token 59: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0009876732947304845
    2. '[j' → logprob: -7.000987529754639
    3. '[' → logprob: -9.500988006591797
    4. '[I' → logprob: -15.000988006591797
    5. 'i' → logprob: -15.250988006591797
    6. '<|end|>' → logprob: -15.375988006591797
    7. '[a' → logprob: -16.000988006591797
    8. '[user' → logprob: -16.375988006591797
    9. '```' → logprob: -16.500988006591797
    10. '[int' → logprob: -17.125988006591797

Token 60: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005437234882265329
    2. '=' → logprob: -5.38043737411499
    3. ']=' → logprob: -7.50543737411499
    4. ' =' → logprob: -8.505436897277832
    5. ' ]' → logprob: -10.005436897277832
    6. '>' → logprob: -12.380436897277832
    7. '],' → logprob: -12.630436897277832
    8. ',' → logprob: -12.880436897277832
    9. '<|end|>' → logprob: -13.380436897277832
    10. ' ' → logprob: -13.380436897277832

Token 61: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048590321093797684
    2. ' =' → logprob: -3.0485904216766357
    3. ',' → logprob: -12.923590660095215
    4. '=a' → logprob: -15.673590660095215
    5. '=
' → logprob: -16.2985897064209
    6. '=

' → logprob: -16.4235897064209
    7. '＝' → logprob: -16.9235897064209
    8. ' ' → logprob: -17.1735897064209
    9. ']' → logprob: -17.4235897064209
    10. ' =
' → logprob: -17.6735897064209

Token 62: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0036004253197461367
    2. ' a' → logprob: -5.628600597381592
    3. '           ' → logprob: -15.003600120544434
    4. '   ' → logprob: -16.62860107421875
    5. '	a' → logprob: -17.25360107421875
    6. ' ' → logprob: -17.62860107421875
    7. '       ' → logprob: -18.62860107421875
    8. '>a' → logprob: -19.25360107421875
    9. '    ' → logprob: -19.37860107421875
    10. '_a' → logprob: -19.50360107421875

Token 63: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.0683535037969705e-05
    2. 'j' → logprob: -12.12501049041748
    3. '[' → logprob: -12.25001049041748
    4. ' [' → logprob: -15.12501049041748
    5. '[i' → logprob: -17.000011444091797
    6. '```' → logprob: -17.000011444091797
    7. '	j' → logprob: -17.125011444091797
    8. '[a' → logprob: -17.125011444091797
    9. ' j' → logprob: -17.375011444091797
    10. '   ' → logprob: -17.500011444091797

Token 64: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.32200857996940613
    2. '<|end|>' → logprob: -1.3220086097717285
    3. '           ' → logprob: -5.3220086097717285
    4. '<|end|>' → logprob: -6.0720086097717285
    5. ']
' → logprob: -7.6970086097717285
    6. '       ' → logprob: -8.57200813293457
    7. '
' → logprob: -8.82200813293457
    8. 'tmp' → logprob: -8.82200813293457
    9. '}' → logprob: -9.44700813293457
    10. '```' → logprob: -9.57200813293457

Token 65: '           ' (ID: 352)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.23372934758663177
    2. '           ' → logprob: -1.733729362487793
    3. ' a' → logprob: -3.483729362487793
    4. 'tmp' → logprob: -7.108729362487793
    5. ' tmp' → logprob: -8.983729362487793
    6. '            
' → logprob: -9.983729362487793
    7. '            ' → logprob: -11.108729362487793
    8. '```' → logprob: -11.108729362487793
    9. '   ' → logprob: -11.358729362487793
    10. '       ' → logprob: -11.608729362487793

Token 66: ' a' (ID: 261)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.005234594456851482
    2. ' tmp' → logprob: -5.255234718322754
    3. '	tmp' → logprob: -15.505234718322754
    4. '           ' → logprob: -15.630234718322754
    5. '(tmp' → logprob: -16.130233764648438
    6. '$tmp' → logprob: -16.255233764648438
    7. '/tmp' → logprob: -17.005233764648438
    8. '[tmp' → logprob: -17.130233764648438
    9. '_tmp' → logprob: -18.005233764648438
    10. 'temp' → logprob: -18.380233764648438

Token 67: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.23778583109378815
    2. '[i' → logprob: -1.987785816192627
    3. '<|end|>' → logprob: -3.487785816192627
    4. 'tmp' → logprob: -3.737785816192627
    5. '[tmp' → logprob: -4.737785816192627
    6. '[' → logprob: -4.862785816192627
    7. ']' → logprob: -6.987785816192627
    8. '[]' → logprob: -7.362785816192627
    9. 'j' → logprob: -7.612785816192627
    10. '<|end|>' → logprob: -7.862785816192627

Token 68: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.38025587797164917
    2. ' =' → logprob: -1.630255937576294
    3. '=' → logprob: -2.130255937576294
    4. '<|end|>' → logprob: -7.005255699157715
    5. ']=' → logprob: -7.505255699157715
    6. 'tmp' → logprob: -10.380255699157715
    7. ')' → logprob: -10.380255699157715
    8. '           ' → logprob: -10.380255699157715
    9. '<|end|>' → logprob: -10.630255699157715
    10. '']' → logprob: -11.380255699157715

Token 69: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011068690568208694
    2. ' =' → logprob: -4.511068820953369
    3. '<|end|>' → logprob: -11.386068344116211
    4. '=
' → logprob: -11.886068344116211
    5. '=temp' → logprob: -14.261068344116211
    6. 'tmp' → logprob: -14.761068344116211
    7. ' ' → logprob: -15.511068344116211
    8. '=

' → logprob: -15.511068344116211
    9. '=None' → logprob: -15.636068344116211
    10. '=True' → logprob: -15.761068344116211

Token 70: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.06196802109479904
    2. ' tmp' → logprob: -2.8119680881500244
    3. '/tmp' → logprob: -15.686967849731445
    4. '	tmp' → logprob: -15.936967849731445
    5. '(tmp' → logprob: -16.061967849731445
    6. '$tmp' → logprob: -16.436967849731445
    7. '[tmp' → logprob: -17.061967849731445
    8. '_tmp' → logprob: -18.811967849731445
    9. '.tmp' → logprob: -19.561967849731445
    10. 'temp' → logprob: -19.811967849731445

Token 71: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.007338860537856817
    2. '<|end|>' → logprob: -5.257339000701904
    3. 'for' → logprob: -6.382339000701904
    4. '
' → logprob: -9.132338523864746
    5. '#' → logprob: -9.507338523864746
    6. ' print' → logprob: -9.757338523864746
    7. '```' → logprob: -10.007338523864746
    8. ')' → logprob: -10.507338523864746
    9. '#print' → logprob: -10.757338523864746
    10. '\n' → logprob: -10.757338523864746

Token 72: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0011124740121886134
    2. 'for' → logprob: -7.001112461090088
    3. '<|end|>' → logprob: -9.001112937927246
    4. ' print' → logprob: -10.626112937927246
    5. ')' → logprob: -11.251112937927246
    6. '#' → logprob: -11.501112937927246
    7. '
' → logprob: -11.751112937927246
    8. '#print' → logprob: -12.001112937927246
    9. '```' → logprob: -12.126112937927246
    10. ' for' → logprob: -12.626112937927246

Token 73: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25301679968833923
    2. '(a' → logprob: -1.5030168294906616
    3. '(len' → logprob: -7.628016948699951
    4. '(sum' → logprob: -8.628016471862793
    5. '('' → logprob: -8.753016471862793
    6. '(*' → logprob: -9.503016471862793
    7. '()' → logprob: -9.753016471862793
    8. '("' → logprob: -9.878016471862793
    9. '(sorted' → logprob: -9.878016471862793
    10. '("("' → logprob: -11.378016471862793

Token 74: '[' (ID: 58)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. '))' → logprob: -15.250000953674316
    3. ' )' → logprob: -16.375
    4. ')`' → logprob: -16.375
    5. '[' → logprob: -16.5
    6. '])' → logprob: -16.875
    7. ']' → logprob: -17.375
    8. '[])' → logprob: -18.0
    9. '）' → logprob: -18.125
    10. ')]' → logprob: -18.75

Token 75: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2521874010562897
    2. '-' → logprob: -1.5021873712539673
    3. ' ' → logprob: -8.502187728881836
    4. ' -' → logprob: -10.627187728881836
    5. 'len' → logprob: -11.502187728881836
    6. ')' → logprob: -12.252187728881836
    7. '])' → logprob: -12.377187728881836
    8. '-l' → logprob: -12.752187728881836
    9. '1' → logprob: -12.752187728881836
    10. ']' → logprob: -13.127187728881836

Token 76: ']' (ID: 60)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.049755629152059555
    2. ')' → logprob: -3.049755573272705
    3. ']' → logprob: -6.799755573272705
    4. ' ])' → logprob: -10.424756050109863
    5. ')]' → logprob: -11.799756050109863
    6. ')])' → logprob: -12.174756050109863
    7. ' )' → logprob: -12.549756050109863
    8. '))' → logprob: -13.049756050109863
    9. '})' → logprob: -13.799756050109863
    10. ']))' → logprob: -13.924756050109863

Token 77: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0564331205387134e-05
    2. ' )' → logprob: -11.50001049041748
    3. '))' → logprob: -16.125011444091797
    4. ']' → logprob: -16.500011444091797
    5. '}' → logprob: -16.750011444091797
    6. ')
' → logprob: -17.125011444091797
    7. '+' → logprob: -17.250011444091797
    8. ')#' → logprob: -17.500011444091797
    9. '）' → logprob: -18.000011444091797
    10. '])' → logprob: -18.125011444091797

Token 78: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.38689130544662476
    2. ' a' → logprob: -1.1368913650512695
    3. ' ' → logprob: -11.01189136505127
    4. ''' → logprob: -14.26189136505127
    5. '1' → logprob: -14.38689136505127
    6. '"' → logprob: -14.38689136505127
    7. ' ' → logprob: -14.76189136505127
    8. '  ' → logprob: -14.76189136505127
    9. '	a' → logprob: -15.01189136505127
    10. '    ' → logprob: -15.63689136505127

Token 79: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0019492254359647632
    2. '[-' → logprob: -6.251949310302734
    3. '1' → logprob: -11.126949310302734
    4. '[i' → logprob: -12.751949310302734
    5. '[len' → logprob: -13.751949310302734
    6. '```' → logprob: -14.376949310302734
    7. '-' → logprob: -15.126949310302734
    8. '[j' → logprob: -15.376949310302734
    9. ' [' → logprob: -15.626949310302734
    10. '[
' → logprob: -15.751949310302734

Token 80: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0021926139015704393
    2. '-' → logprob: -6.127192497253418
    3. 'len' → logprob: -12.627192497253418
    4. '0' → logprob: -13.377192497253418
    5. ' -' → logprob: -14.002192497253418
    6. ' ' → logprob: -14.002192497253418
    7. '```' → logprob: -15.627192497253418
    8. '2' → logprob: -15.752192497253418
    9. '])' → logprob: -16.252193450927734
    10. ']' → logprob: -16.314693450927734

Token 81: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9266199160483666e-05
    2. '])' → logprob: -12.125019073486328
    3. ']' → logprob: -12.375019073486328
    4. '}' → logprob: -12.375019073486328
    5. ' )' → logprob: -13.125019073486328
    6. '))' → logprob: -13.625019073486328
    7. '})' → logprob: -14.125019073486328
    8. '）' → logprob: -14.750019073486328
    9. '+' → logprob: -15.000019073486328
    10. ')}' → logprob: -15.500019073486328


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 79
Tokens correctement prédits (1ère position, stricte): 38
Tokens correctement prédits (1ère position, avec adaptation): 39
Tokens correctement prédits (top 10): 69
Précision stricte (1ère position): 48.10%
Précision adaptée (1ère position): 49.37%
Précision (top 10): 87.34%
================================================================================
