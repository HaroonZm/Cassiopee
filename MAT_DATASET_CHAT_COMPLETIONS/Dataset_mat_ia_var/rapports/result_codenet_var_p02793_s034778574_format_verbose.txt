================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:29:21
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from math import gcd

def calculate_modular_sum_of_lcms():
    number_count = int(input())

    list_of_numbers = list(map(int, input().split()))

    modulo_value = 10**9 + 7

    total_sum = 0

    least_common_multiple = 1

    for current_number in list_of_numbers:
        least_common_multiple = least_common_multiple * current_number // gcd(least_common_multiple, current_number)

    least_common_multiple = least_common_multiple % modulo_value

    for current_number in list_of_numbers:
        modular_inverse = pow(current_number, modulo_value - 2, modulo_value)
        total_sum += least_common_multiple * modular_inverse

    result = total_sum % modulo_value

    print(result)

if __name__ == "__main__":

    calculate_modular_sum_of_lcms()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' gcd' (ID: 106918)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.5038918256759644
    2. ' sqrt' → logprob: -1.0038918256759644
    3. ' pi' → logprob: -4.628891944885254
    4. 'pow' → logprob: -5.003891944885254
    5. 'pi' → logprob: -5.378891944885254
    6. 'sin' → logprob: -5.503891944885254
    7. ' sin' → logprob: -6.878891944885254
    8. 's' → logprob: -7.253891944885254
    9. ' ceil' → logprob: -7.628891944885254
    10. 'ceil' → logprob: -7.878891944885254

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0012622561771422625
    2. '\(' → logprob: -7.001262187957764
    3. ' (' → logprob: -9.126262664794922
    4. '(
' → logprob: -9.126262664794922
    5. ',' → logprob: -9.626262664794922
    6. '```' → logprob: -11.001262664794922
    7. 'a' → logprob: -11.376262664794922
    8. '\' → logprob: -11.876262664794922
    9. '.' → logprob: -12.001262664794922
    10. '\n' → logprob: -12.251262664794922

Token 5: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007711919490247965
    2. '(
' → logprob: -5.007711887359619
    3. '\(' → logprob: -7.382711887359619
    4. '\n' → logprob: -9.507712364196777
    5. 'def' → logprob: -9.757712364196777
    6. '```' → logprob: -9.882712364196777
    7. ',' → logprob: -10.507712364196777
    8. 'a' → logprob: -10.632712364196777
    9. '
' → logprob: -10.632712364196777
    10. '\' → logprob: -10.757712364196777

Token 6: ' calculate' (ID: 17950)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06505929678678513
    2. ' gcd' → logprob: -2.815059185028076
    3. ' calculate' → logprob: -7.315059185028076
    4. ' factor' → logprob: -7.565059185028076
    5. ' factorial' → logprob: -7.690059185028076
    6. ' f' → logprob: -8.190059661865234
    7. ' find' → logprob: -8.690059661865234
    8. ' def' → logprob: -8.815059661865234
    9. 'g' → logprob: -9.065059661865234
    10. ' g' → logprob: -9.440059661865234

Token 7: '_mod' (ID: 15325)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.8345401287078857
    2. '(' → logprob: -1.3345401287078857
    3. '_div' → logprob: -1.9595401287078857
    4. '_area' → logprob: -2.5845401287078857
    5. '_' → logprob: -3.2095401287078857
    6. '_sum' → logprob: -4.209540367126465
    7. '_g' → logprob: -4.459540367126465
    8. '_product' → logprob: -5.584540367126465
    9. '_l' → logprob: -5.959540367126465
    10. '_f' → logprob: -6.334540367126465

Token 8: 'ular' (ID: 1492)
  Prédit: 'ulus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulus' → logprob: -0.2860491871833801
    2. 'ulo' → logprob: -2.6610491275787354
    3. 'ular' → logprob: -2.9110491275787354
    4. '_' → logprob: -3.2860491275787354
    5. '_factor' → logprob: -3.9110491275787354
    6. ' ' → logprob: -4.4110493659973145
    7. 'ule' → logprob: -4.7860493659973145
    8. '_inverse' → logprob: -4.7860493659973145
    9. '_exp' → logprob: -5.0360493659973145
    10. 'ulu' → logprob: -5.4110493659973145

Token 9: '_sum' (ID: 29859)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.29733017086982727
    2. ' _' → logprob: -2.297330141067505
    3. ' ' → logprob: -2.797330141067505
    4. '_factor' → logprob: -3.422330141067505
    5. '_div' → logprob: -4.172330379486084
    6. '_difference' → logprob: -4.672330379486084
    7. '_space' → logprob: -4.797330379486084
    8. '_inverse' → logprob: -4.922330379486084
    9. '_sum' → logprob: -5.547330379486084
    10. '_add' → logprob: -5.547330379486084

Token 10: '_of' (ID: 8023)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0020318960305303335
    2. '```' → logprob: -6.6270318031311035
    3. '_' → logprob: -8.377032279968262
    4. ' (' → logprob: -9.252032279968262
    5. '("("' → logprob: -10.252032279968262
    6. '(
' → logprob: -10.252032279968262
    7. '<|end|>' → logprob: -10.502032279968262
    8. '(_' → logprob: -10.627032279968262
    9. '(x' → logprob: -10.752032279968262
    10. '(a' → logprob: -10.877032279968262

Token 11: '_l' (ID: 1478)
  Prédit: '_div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_div' → logprob: -0.7703158855438232
    2. '_s' → logprob: -2.1453158855438232
    3. 's' → logprob: -2.5203158855438232
    4. '_c' → logprob: -2.8953158855438232
    5. 'div' → logprob: -2.8953158855438232
    6. '_three' → logprob: -2.8953158855438232
    7. '_two' → logprob: -3.5203158855438232
    8. 'a' → logprob: -4.020316123962402
    9. '_sub' → logprob: -4.020316123962402
    10. '_pairs' → logprob: -4.145316123962402

Token 12: 'cms' (ID: 60849)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.5267199873924255
    2. 'i' → logprob: -1.5267200469970703
    3. '```' → logprob: -2.6517200469970703
    4. 'ists' → logprob: -3.1517200469970703
    5. 'ength' → logprob: -3.6517200469970703
    6. 'ines' → logprob: -4.77672004699707
    7. 'is' → logprob: -5.02672004699707
    8. 'ine' → logprob: -5.65172004699707
    9. 'inear' → logprob: -5.65172004699707
    10. 'isting' → logprob: -5.77672004699707

Token 13: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003642238210886717
    2. '_' → logprob: -6.0036420822143555
    3. '(_' → logprob: -8.253642082214355
    4. '```' → logprob: -8.753642082214355
    5. '(a' → logprob: -9.003642082214355
    6. '(_:' → logprob: -9.378642082214355
    7. '():' → logprob: -9.628642082214355
    8. ' (' → logprob: -9.753642082214355
    9. '(x' → logprob: -9.878642082214355
    10. '("("' → logprob: -10.253642082214355

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06307239830493927
    2. '(' → logprob: -3.688072443008423
    3. '\' → logprob: -4.563072204589844
    4. '```' → logprob: -4.688072204589844
    5. '    
' → logprob: -5.188072204589844
    6. '(n' → logprob: -5.938072204589844
    7. '    ' → logprob: -6.188072204589844
    8. ' ' → logprob: -6.688072204589844
    9. '\n' → logprob: -6.938072204589844
    10. ' 
' → logprob: -7.438072204589844

Token 15: ' number' (ID: 2086)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3734833300113678
    2. ' n' → logprob: -1.7484833002090454
    3. ' ' → logprob: -2.248483419418335
    4. '   ' → logprob: -4.623483180999756
    5. 'result' → logprob: -4.873483180999756
    6. ' 
' → logprob: -5.623483180999756
    7. ' result' → logprob: -5.748483180999756
    8. '    ' → logprob: -6.123483180999756
    9. '(n' → logprob: -6.873483180999756
    10. ' \' → logprob: -7.373483180999756

Token 16: '_count' (ID: 7536)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0011560549028217793
    2. '_s' → logprob: -7.001155853271484
    3. ' s' → logprob: -9.126155853271484
    4. '_' → logprob: -9.751155853271484
    5. ' =' → logprob: -9.751155853271484
    6. '_of' → logprob: -11.376155853271484
    7. '=' → logprob: -12.501155853271484
    8. ')' → logprob: -14.251155853271484
    9. '1' → logprob: -14.501155853271484
    10. '_to' → logprob: -14.626155853271484

Token 17: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01857292465865612
    2. '=' → logprob: -4.018572807312012
    3. '_' → logprob: -8.893572807312012
    4. ' ' → logprob: -8.893572807312012
    5. '  ' → logprob: -9.768572807312012
    6. 's' → logprob: -9.768572807312012
    7. '   ' → logprob: -10.768572807312012
    8. ')' → logprob: -11.893572807312012
    9. '_space' → logprob: -13.893572807312012
    10. ' +=' → logprob: -14.018572807312012

Token 18: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3919840455055237
    2. ' ' → logprob: -1.516983985900879
    3. 'int' → logprob: -2.516983985900879
    4. '0' → logprob: -4.016983985900879
    5. '5' → logprob: -6.016983985900879
    6. '10' → logprob: -6.516983985900879
    7. ' map' → logprob: -6.891983985900879
    8. '3' → logprob: -7.891983985900879
    9. '4' → logprob: -8.266983985900879
    10. '1' → logprob: -8.641983985900879

Token 19: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28449711203575134
    2. '(input' → logprob: -1.4094971418380737
    3. 'input' → logprob: -6.159497261047363
    4. '('' → logprob: -7.409497261047363
    5. '()' → logprob: -8.409497261047363
    6. ')' → logprob: -8.909497261047363
    7. ' (' → logprob: -9.409497261047363
    8. '(
' → logprob: -9.659497261047363
    9. '("' → logprob: -10.784497261047363
    10. ' )' → logprob: -11.159497261047363

Token 20: '())

' (ID: 27654)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.14230816066265106
    2. '(' → logprob: -2.142308235168457
    3. '())' → logprob: -4.392308235168457
    4. ')' → logprob: -6.767308235168457
    5. '(()' → logprob: -7.142308235168457
    6. '('' → logprob: -8.142308235168457
    7. '("("' → logprob: -8.642308235168457
    8. '(""))' → logprob: -9.392308235168457
    9. '("")' → logprob: -9.517308235168457
    10. '()))' → logprob: -9.892308235168457

Token 21: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03572385013103485
    2. 'result' → logprob: -4.160723686218262
    3. '    
' → logprob: -4.910723686218262
    4. '
' → logprob: -6.035723686218262
    5. 'n' → logprob: -6.410723686218262
    6. 'total' → logprob: -6.410723686218262
    7. 'sum' → logprob: -6.785723686218262
    8. '```' → logprob: -6.910723686218262
    9. ' result' → logprob: -7.035723686218262
    10. 's' → logprob: -7.410723686218262

Token 22: ' list' (ID: 1562)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.8786463737487793
    2. 'result' → logprob: -1.0036463737487793
    3. ' numbers' → logprob: -2.7536463737487793
    4. 'numbers' → logprob: -3.0036463737487793
    5. '   ' → logprob: -3.2536463737487793
    6. ' total' → logprob: -3.5036463737487793
    7. 'total' → logprob: -3.7536463737487793
    8. 'sum' → logprob: -6.003646373748779
    9. 'results' → logprob: -6.253646373748779
    10. ' sum' → logprob: -6.253646373748779

Token 23: '_of' (ID: 8023)
  Prédit: '_numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -0.28644421696662903
    2. '_' → logprob: -1.7864441871643066
    3. '_of' → logprob: -2.7864441871643066
    4. '_nums' → logprob: -4.536444187164307
    5. 's' → logprob: -5.536444187164307
    6. '_values' → logprob: -5.661444187164307
    7. '_num' → logprob: -7.911444187164307
    8. '_a' → logprob: -8.036444664001465
    9. '(' → logprob: -8.661444664001465
    10. '_items' → logprob: -8.911444664001465

Token 24: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -0.01664946787059307
    2. '_' → logprob: -5.14164924621582
    3. 's' → logprob: -5.76664924621582
    4. '_nums' → logprob: -5.76664924621582
    5. '_values' → logprob: -6.39164924621582
    6. 'numbers' → logprob: -6.76664924621582
    7. ' numbers' → logprob: -7.51664924621582
    8. '_in' → logprob: -7.89164924621582
    9. ' ' → logprob: -8.64164924621582
    10. '_number' → logprob: -9.01664924621582

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005281546153128147
    2. '=' → logprob: -5.255281448364258
    3. '_' → logprob: -10.755281448364258
    4. ' ' → logprob: -10.880281448364258
    5. '=[]' → logprob: -13.255281448364258
    6. '  ' → logprob: -13.505281448364258
    7. ')' → logprob: -13.880281448364258
    8. '[' → logprob: -14.380281448364258
    9. '[:]' → logprob: -14.380281448364258
    10. ' =[' → logprob: -14.505281448364258

Token 26: ' list' (ID: 1562)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -1.0460302829742432
    2. ' list' → logprob: -1.1710302829742432
    3. '[list' → logprob: -1.6710302829742432
    4. '[' → logprob: -2.296030282974243
    5. ' []' → logprob: -3.421030282974243
    6. 'list' → logprob: -4.546030044555664
    7. '[]' → logprob: -5.546030044555664
    8. '[input' → logprob: -6.421030044555664
    9. '[int' → logprob: -7.421030044555664
    10. '[List' → logprob: -9.546030044555664

Token 27: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.037505753338336945
    2. '(range' → logprob: -4.162505626678467
    3. '(int' → logprob: -5.162505626678467
    4. '()' → logprob: -5.162505626678467
    5. '(input' → logprob: -5.287505626678467
    6. '(map' → logprob: -5.662505626678467
    7. '<|end|>' → logprob: -8.162506103515625
    8. '(eval' → logprob: -9.412506103515625
    9. '(user' → logprob: -9.537506103515625
    10. '([' → logprob: -9.537506103515625

Token 28: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0019594402983784676
    2. '(' → logprob: -6.376959323883057
    3. '(lambda' → logprob: -8.376959800720215
    4. 'int' → logprob: -10.751959800720215
    5. '<int' → logprob: -13.626959800720215
    6. ' int' → logprob: -13.876959800720215
    7. '=int' → logprob: -14.251959800720215
    8. '(
' → logprob: -14.626959800720215
    9. '(input' → logprob: -14.626959800720215
    10. ' (' → logprob: -14.626959800720215

Token 29: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.14449435472488403
    2. ',input' → logprob: -2.1444942951202393
    3. ',' → logprob: -4.394494533538818
    4. 'input' → logprob: -5.894494533538818
    5. '(' → logprob: -6.144494533538818
    6. '=input' → logprob: -9.89449405670166
    7. ' input' → logprob: -10.14449405670166
    8. ' ,' → logprob: -10.39449405670166
    9. ' (' → logprob: -11.26949405670166
    10. ')' → logprob: -11.51949405670166

Token 30: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1269473135471344
    2. ' input' → logprob: -2.1269474029541016
    3. '(input' → logprob: -12.001947402954102
    4. ' ' → logprob: -12.376947402954102
    5. '   ' → logprob: -12.626947402954102
    6. '	input' → logprob: -13.251947402954102
    7. ',input' → logprob: -13.251947402954102
    8. '=input' → logprob: -15.001947402954102
    9. '<input' → logprob: -15.126947402954102
    10. 'lambda' → logprob: -15.251947402954102

Token 31: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.93579563125968e-05
    2. '()' → logprob: -9.375089645385742
    3. ')' → logprob: -13.625089645385742
    4. '()))' → logprob: -13.750089645385742
    5. '(' → logprob: -14.125089645385742
    6. ' ().' → logprob: -14.875089645385742
    7. '))' → logprob: -15.625089645385742
    8. '())' → logprob: -16.000089645385742
    9. '()));' → logprob: -16.125089645385742
    10. '())))' → logprob: -16.375089645385742

Token 32: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.005300281569361687
    2. 'strip' → logprob: -5.255300045013428
    3. 'rstrip' → logprob: -9.630300521850586
    4. ' split' → logprob: -14.380300521850586
    5. '(split' → logprob: -15.755300521850586
    6. ')' → logprob: -16.505300521850586
    7. 'read' → logprob: -16.755300521850586
    8. 'spl' → logprob: -16.880300521850586
    9. ' ' → logprob: -18.130300521850586
    10. ' strip' → logprob: -18.255300521850586

Token 33: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.156127467751503
    2. '())' → logprob: -2.531127452850342
    3. '))' → logprob: -3.906127452850342
    4. '()' → logprob: -4.156127452850342
    5. '())))' → logprob: -4.156127452850342
    6. '(' → logprob: -4.781127452850342
    7. ')))' → logprob: -5.781127452850342
    8. ')' → logprob: -6.906127452850342
    9. '('' → logprob: -7.531127452850342
    10. '()))
' → logprob: -8.6561279296875

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09803970903158188
    2. '
' → logprob: -2.9730396270751953
    3. '    
' → logprob: -3.4730396270751953
    4. '```' → logprob: -5.098039627075195
    5. ')' → logprob: -6.348039627075195
    6. 'mod' → logprob: -7.598039627075195
    7. '``' → logprob: -7.973039627075195
    8. '\' → logprob: -7.973039627075195
    9. '   
' → logprob: -8.098039627075195
    10. ')
' → logprob: -8.223039627075195

Token 35: ' modulo' (ID: 112372)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -1.1458576917648315
    2. 'result' → logprob: -1.5208576917648315
    3. ' l' → logprob: -1.6458576917648315
    4. 'mod' → logprob: -2.145857810974121
    5. 'l' → logprob: -2.520857810974121
    6. ' mod' → logprob: -4.145857810974121
    7. '   ' → logprob: -4.520857810974121
    8. 'total' → logprob: -4.520857810974121
    9. 'n' → logprob: -4.770857810974121
    10. ' n' → logprob: -4.895857810974121

Token 36: '_value' (ID: 6734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014231556095182896
    2. '=' → logprob: -4.2642316818237305
    3. '_' → logprob: -10.01423168182373
    4. ' ' → logprob: -11.26423168182373
    5. ',' → logprob: -13.26423168182373
    6. ')' → logprob: -13.38923168182373
    7. ' =)' → logprob: -13.51423168182373
    8. ' _' → logprob: -13.88923168182373
    9. ' )' → logprob: -14.26423168182373
    10. '   ' → logprob: -14.63923168182373

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0007104054093360901
    2. '=' → logprob: -7.250710487365723
    3. ' ' → logprob: -15.375710487365723
    4. ' =
' → logprob: -16.000709533691406
    5. ' =)' → logprob: -16.000709533691406
    6. ',' → logprob: -18.625709533691406
    7. ' ='' → logprob: -19.000709533691406
    8. ' ' → logprob: -19.125709533691406
    9. '   ' → logprob: -19.250709533691406
    10. ')' → logprob: -19.250709533691406

Token 38: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.19934411346912384
    2. '100' → logprob: -1.8243441581726074
    3. ' ' → logprob: -3.9493441581726074
    4. '1' → logprob: -9.07434368133545
    5. '998' → logprob: -11.32434368133545
    6. '999' → logprob: -11.82434368133545
    7. '(' → logprob: -12.94934368133545
    8. ' (' → logprob: -14.07434368133545
    9. '```' → logprob: -14.07434368133545
    10. '   ' → logprob: -14.19934368133545

Token 39: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.22589178383350372
    2. '100' → logprob: -1.6008918285369873
    3. '998' → logprob: -8.225892066955566
    4. '1' → logprob: -9.350892066955566
    5. '(' → logprob: -9.725892066955566
    6. '999' → logprob: -10.600892066955566
    7. ' ' → logprob: -11.225892066955566
    8. '2' → logprob: -11.475892066955566
    9. '123' → logprob: -12.600892066955566
    10. '200' → logprob: -12.725892066955566

Token 40: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.019695300608873367
    2. '**' → logprob: -4.019695281982422
    3. '09' → logprob: -6.644695281982422
    4. '```' → logprob: -8.519695281982422
    5. '009' → logprob: -10.144695281982422
    6. '000' → logprob: -14.019695281982422
    7. ' ' → logprob: -14.394695281982422
    8. '_' → logprob: -14.394695281982422
    9. '00' → logprob: -14.519695281982422
    10. '​' → logprob: -14.519695281982422

Token 41: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.79811754100956e-05
    2. '09' → logprob: -10.250038146972656
    3. '18' → logprob: -13.875038146972656
    4. '10' → logprob: -14.625038146972656
    5. '```' → logprob: -14.875038146972656
    6. '+' → logprob: -15.250038146972656
    7. ' ' → logprob: -16.125038146972656
    8. '12' → logprob: -16.125038146972656
    9. '15' → logprob: -16.687538146972656
    10. '009' → logprob: -16.812538146972656

Token 42: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0006376196397468448
    2. ' +' → logprob: -7.375637531280518
    3. '7' → logprob: -11.750638008117676
    4. '+
' → logprob: -13.250638008117676
    5. '9' → logprob: -15.500638008117676
    6. '+

' → logprob: -15.625638008117676
    7. '```' → logprob: -15.875638008117676
    8. ' ' → logprob: -16.00063705444336
    9. '+</' → logprob: -16.00063705444336
    10. ' +
' → logprob: -16.00063705444336

Token 43: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.375001907348633
    3. '+' → logprob: -16.000001907348633
    4. '```' → logprob: -17.000001907348633
    5. '9' → logprob: -17.125001907348633
    6. '07' → logprob: -17.875001907348633
    7. '   ' → logprob: -18.375001907348633
    8. '  ' → logprob: -19.750001907348633
    9. ' ' → logprob: -19.875001907348633
    10. '``' → logprob: -20.062501907348633

Token 44: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '```' → logprob: -18.125
    3. '+' → logprob: -19.0
    4. ' ' → logprob: -19.125
    5. '07' → logprob: -19.5
    6. '   ' → logprob: -20.625
    7. '۷' → logprob: -21.125
    8. '７' → logprob: -21.25
    9. '9' → logprob: -21.375
    10. '

' → logprob: -21.375

Token 45: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06550052016973495
    2. '   ' → logprob: -3.065500497817993
    3. '    
' → logprob: -4.440500736236572
    4. '   
' → logprob: -6.815500736236572
    5. ' 
' → logprob: -6.940500736236572
    6. '  
' → logprob: -7.065500736236572
    7. '<|end|>' → logprob: -7.315500736236572
    8. '
' → logprob: -7.690500736236572
    9. '\n' → logprob: -8.190500259399414
    10. ')' → logprob: -9.315500259399414

Token 46: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12325520068407059
    2. '   ' → logprob: -2.4982552528381348
    3. '    
' → logprob: -3.4982552528381348
    4. ' 
' → logprob: -6.998255252838135
    5. '  
' → logprob: -6.998255252838135
    6. '   
' → logprob: -7.123255252838135
    7. 'result' → logprob: -8.373254776000977
    8. 'n' → logprob: -8.748254776000977
    9. '<|end|>' → logprob: -9.373254776000977
    10. '```' → logprob: -9.498254776000977

Token 47: ' total' (ID: 3609)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.15130868554115295
    2. 'total' (adapté à ' total') → logprob: -2.27630877494812
    3. 'sum' → logprob: -3.90130877494812
    4. ' result' → logprob: -4.776308536529541
    5. 's' → logprob: -5.901308536529541
    6. 'answer' → logprob: -6.526308536529541
    7. ' total' → logprob: -6.651308536529541
    8. 'mod' → logprob: -6.901308536529541
    9. 'l' → logprob: -7.026308536529541
    10. 'res' → logprob: -7.151308536529541

Token 48: '_sum' (ID: 29859)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2904444932937622
    2. '_sum' → logprob: -1.4154444932937622
    3. ' =' → logprob: -5.040444374084473
    4. '_mod' → logprob: -6.915444374084473
    5. '_s' → logprob: -7.040444374084473
    6. ' _' → logprob: -7.915444374084473
    7. '=' → logprob: -8.415444374084473
    8. ' ' → logprob: -9.415444374084473
    9. '_=' → logprob: -9.415444374084473
    10. ' +=' → logprob: -9.915444374084473

Token 49: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00726383225992322
    2. '=' → logprob: -5.507263660430908
    3. ' +=' → logprob: -5.757263660430908
    4. ' ' → logprob: -11.757264137268066
    5. '+=' → logprob: -12.632264137268066
    6. '_' → logprob: -13.382264137268066
    7. '  ' → logprob: -13.507264137268066
    8. ' =)' → logprob: -13.882264137268066
    9. ' =
' → logprob: -14.132264137268066
    10. ' |=' → logprob: -14.132264137268066

Token 50: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3868720829486847
    2. '0' → logprob: -1.1368720531463623
    3. ' ' → logprob: -14.511872291564941
    4. '   ' → logprob: -15.511872291564941
    5. '1' → logprob: -16.074371337890625
    6. ' sum' → logprob: -16.511871337890625
    7. '  ' → logprob: -16.574371337890625
    8. ' (' → logprob: -17.011871337890625
    9. '```' → logprob: -17.511871337890625
    10. '(' → logprob: -17.636871337890625

Token 51: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.87500286102295
    3. 'sum' → logprob: -15.75000286102295
    4. '   ' → logprob: -16.250003814697266
    5. '(' → logprob: -17.000003814697266
    6. '```' → logprob: -17.875003814697266
    7. '1' → logprob: -18.875003814697266
    8. 'pow' → logprob: -19.250003814697266
    9. '۰' → logprob: -19.937503814697266
    10. '  ' → logprob: -20.062503814697266

Token 52: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2240072339773178
    2. '   ' → logprob: -1.974007248878479
    3. '    
' → logprob: -3.7240071296691895
    4. ' for' → logprob: -4.0990071296691895
    5. '<|end|>' → logprob: -4.8490071296691895
    6. 'for' → logprob: -5.5990071296691895
    7. ' 
' → logprob: -5.7240071296691895
    8. '  
' → logprob: -6.3490071296691895
    9. '   
' → logprob: -6.5990071296691895
    10. '<|end|>' → logprob: -7.5990071296691895

Token 53: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012274926993995905
    2. ' for' → logprob: -7.501227378845215
    3. 'for' → logprob: -8.001227378845215
    4. '    
' → logprob: -8.251227378845215
    5. '
' → logprob: -10.751227378845215
    6. '  ' → logprob: -11.001227378845215
    7. ' ' → logprob: -11.376227378845215
    8. '    ' → logprob: -11.501227378845215
    9. '   
' → logprob: -12.376227378845215
    10. '<|end|>' → logprob: -12.376227378845215

Token 54: ' least' (ID: 5153)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.010508516803383827
    2. 'n' → logprob: -5.0105085372924805
    3. ' for' → logprob: -6.0105085372924805
    4. '   ' → logprob: -6.6355085372924805
    5. ' ' → logprob: -11.63550853729248
    6. ' n' → logprob: -11.76050853729248
    7. 'i' → logprob: -14.01050853729248
    8. 'from' → logprob: -14.01050853729248
    9. '```' → logprob: -14.01050853729248
    10. '  ' → logprob: -14.63550853729248

Token 55: '_common' (ID: 49800)
  Prédit: '_common'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_common' → logprob: -0.003252692986279726
    2. 'common' → logprob: -7.1282525062561035
    3. ' common' → logprob: -7.3782525062561035
    4. '_cm' → logprob: -7.6282525062561035
    5. '_c' → logprob: -8.378252983093262
    6. ' =' → logprob: -8.503252983093262
    7. '_l' → logprob: -8.628252983093262
    8. 'ic' → logprob: -9.003252983093262
    9. '_com' → logprob: -9.753252983093262
    10. '_con' → logprob: -9.753252983093262

Token 56: '_multiple' (ID: 111487)
  Prédit: '_multiple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_multiple' → logprob: -0.049642082303762436
    2. '_m' → logprob: -3.0496420860290527
    3. '_multiplier' → logprob: -7.299642086029053
    4. '_mult' → logprob: -8.674641609191895
    5. '_factor' → logprob: -10.049641609191895
    6. '_' → logprob: -10.174641609191895
    7. '_mul' → logprob: -10.174641609191895
    8. 'multiple' → logprob: -10.549641609191895
    9. '_multi' → logprob: -11.049641609191895
    10. '_div' → logprob: -11.299641609191895

Token 57: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5546610951423645
    2. '=' → logprob: -0.9296610951423645
    3. 's' → logprob: -3.5546610355377197
    4. '_' → logprob: -6.429661273956299
    5. '(' → logprob: -8.17966079711914
    6. '```' → logprob: -9.55466079711914
    7. '_values' → logprob: -9.92966079711914
    8. ')' → logprob: -10.05466079711914
    9. '   ' → logprob: -10.30466079711914
    10. ' ' → logprob: -10.30466079711914

Token 58: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0332244373857975
    2. 'list' → logprob: -3.90822434425354
    3. ' ' → logprob: -4.783224582672119
    4. ' list' → logprob: -5.533224582672119
    5. '   ' → logprob: -8.783224105834961
    6. '0' → logprob: -10.158224105834961
    7. '  ' → logprob: -10.970724105834961
    8. 'number' → logprob: -11.470724105834961
    9. '[list' → logprob: -11.720724105834961
    10. 'l' → logprob: -11.908224105834961

Token 59: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16057810187339783
    2. 'list' → logprob: -1.9105781316757202
    3. 'number' → logprob: -9.285577774047852
    4. '0' → logprob: -9.785577774047852
    5. ' ' → logprob: -9.785577774047852
    6. ' list' → logprob: -10.410577774047852
    7. 'l' → logprob: -10.535577774047852
    8. 'g' → logprob: -11.035577774047852
    9. '   ' → logprob: -11.035577774047852
    10. '[list' → logprob: -11.410577774047852

Token 60: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5115590691566467
    2. ' for' → logprob: -2.011559009552002
    3. '
' → logprob: -2.136559009552002
    4. '<|end|>' → logprob: -2.761559009552002
    5. 'for' → logprob: -3.011559009552002
    6. '\n' → logprob: -4.761559009552002
    7. '    
' → logprob: -5.011559009552002
    8. '\' → logprob: -5.136559009552002
    9. ')' → logprob: -5.511559009552002
    10. '' → logprob: -6.136559009552002

Token 62: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.003977123647928238
    2. ' for' → logprob: -5.878977298736572
    3. '   ' → logprob: -6.753977298736572
    4. '	for' → logprob: -13.253976821899414
    5. '```' → logprob: -13.628976821899414
    6. ' ' → logprob: -14.503976821899414
    7. 'from' → logprob: -14.878976821899414
    8. ')' → logprob: -15.003976821899414
    9. 'i' → logprob: -15.628976821899414
    10. '  ' → logprob: -15.878976821899414

Token 63: ' current' (ID: 2208)
  Prédit: ' num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.40304625034332275
    2. ' number' → logprob: -1.5280462503433228
    3. 'num' → logprob: -2.903046131134033
    4. ' i' → logprob: -3.028046131134033
    5. 'number' → logprob: -4.903046131134033
    6. ' ' → logprob: -7.028046131134033
    7. ' index' → logprob: -7.278046131134033
    8. 'i' → logprob: -7.528046131134033
    9. 'n' → logprob: -7.903046131134033
    10. ' n' → logprob: -8.153046607971191

Token 64: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.09199517965316772
    2. '_num' → logprob: -2.7169952392578125
    3. '_' → logprob: -4.0919952392578125
    4. ' in' → logprob: -5.7169952392578125
    5. ' _' → logprob: -7.5919952392578125
    6. '_value' → logprob: -7.5919952392578125
    7. 'num' → logprob: -8.091995239257812
    8. 'number' → logprob: -8.466995239257812
    9. ' number' → logprob: -9.841995239257812
    10. ' ' → logprob: -9.841995239257812

Token 65: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016095725819468498
    2. 'in' → logprob: -4.1410956382751465
    3. ' ' → logprob: -10.016096115112305
    4. ',' → logprob: -12.016096115112305
    5. ' ,' → logprob: -12.266096115112305
    6. 's' → logprob: -13.641096115112305
    7. '	in' → logprob: -13.641096115112305
    8. '  ' → logprob: -14.266096115112305
    9. '   ' → logprob: -14.266096115112305
    10. '_in' → logprob: -14.766096115112305

Token 66: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.008618712425231934
    2. 'list' → logprob: -4.7586188316345215
    3. ' ' → logprob: -13.008618354797363
    4. ' range' → logprob: -13.883618354797363
    5. '	list' → logprob: -14.508618354797363
    6. '   ' → logprob: -15.508618354797363
    7. '_list' → logprob: -16.50861930847168
    8. '    ' → logprob: -17.13361930847168
    9. '```' → logprob: -17.38361930847168
    10. 'List' → logprob: -17.63361930847168

Token 67: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -9.491498531133402e-06
    2. 'of' → logprob: -11.750009536743164
    3. '   ' → logprob: -14.125009536743164
    4. '_' → logprob: -16.125009536743164
    5. ':' → logprob: -16.250009536743164
    6. ')' → logprob: -16.625009536743164
    7. '       ' → logprob: -16.875009536743164
    8. '```' → logprob: -16.875009536743164
    9. 'Of' → logprob: -17.125009536743164
    10. ' of' → logprob: -17.125009536743164

Token 68: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -0.0026505710557103157
    2. 'numbers' → logprob: -6.127650737762451
    3. 'umbers' → logprob: -7.752650737762451
    4. 's' → logprob: -11.127650260925293
    5. '_' → logprob: -11.502650260925293
    6. '```' → logprob: -12.877650260925293
    7. '_number' → logprob: -13.002650260925293
    8. 'list' → logprob: -13.377650260925293
    9. 'umber' → logprob: -14.377650260925293
    10. 'of' → logprob: -14.752650260925293

Token 69: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00019543453527148813
    2. ' :' → logprob: -9.625195503234863
    3. ':
' → logprob: -10.000195503234863
    4. '):' → logprob: -10.250195503234863
    5. ',' → logprob: -10.750195503234863
    6. '<|end|>' → logprob: -11.625195503234863
    7. '=' → logprob: -12.125195503234863
    8. ':**' → logprob: -12.375195503234863
    9. '<|end|>' → logprob: -13.125195503234863
    10. '   ' → logprob: -13.250195503234863

Token 70: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07944366335868835
    2. '       ' → logprob: -3.4544436931610107
    3. '<|end|>' → logprob: -4.204443454742432
    4. '    ' → logprob: -4.829443454742432
    5. ' :' → logprob: -5.204443454742432
    6. '   ' → logprob: -5.454443454742432
    7. ' ' → logprob: -5.829443454742432
    8. ':
' → logprob: -5.954443454742432
    9. ',' → logprob: -6.329443454742432
    10. '):' → logprob: -6.454443454742432

Token 71: ' least' (ID: 5153)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.052462346851825714
    2. '        ' → logprob: -4.677462577819824
    3. '       ' → logprob: -5.177462577819824
    4. '    ' → logprob: -5.552462577819824
    5. ' gcd' → logprob: -5.802462577819824
    6. '```' → logprob: -5.802462577819824
    7. ' 
' → logprob: -5.927462577819824
    8. ' ' → logprob: -6.177462577819824
    9. 'g' → logprob: -6.177462577819824
    10. '_' → logprob: -6.177462577819824

Token 72: '_common' (ID: 49800)
  Prédit: '_common'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_common' → logprob: -0.0003222342347726226
    2. '_' → logprob: -8.500322341918945
    3. '_con' → logprob: -11.000322341918945
    4. '<|end|>' → logprob: -11.000322341918945
    5. '_cont' → logprob: -11.250322341918945
    6. '_current' → logprob: -11.500322341918945
    7. '_continue' → logprob: -11.625322341918945
    8. ' _' → logprob: -11.625322341918945
    9. '_possible' → logprob: -12.250322341918945
    10. '_case' → logprob: -12.375322341918945

Token 73: '_multiple' (ID: 111487)
  Prédit: '_multiple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_multiple' → logprob: -0.0008319015032611787
    2. 'multiple' → logprob: -7.2508320808410645
    3. '_' → logprob: -9.875831604003906
    4. '_multiplier' → logprob: -10.250831604003906
    5. '_mult' → logprob: -11.500831604003906
    6. '_common' → logprob: -12.125831604003906
    7. '```' → logprob: -12.500831604003906
    8. '_m' → logprob: -12.500831604003906
    9. 'ultiple' → logprob: -13.000831604003906
    10. '_multi' → logprob: -13.375831604003906

Token 74: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020038535818457603
    2. '=' → logprob: -4.770038604736328
    3. ' *=' → logprob: -4.770038604736328
    4. ' ' → logprob: -5.895038604736328
    5. ' *' → logprob: -10.645038604736328
    6. '_' → logprob: -11.145038604736328
    7. '*=' → logprob: -11.395038604736328
    8. ' |=' → logprob: -11.645038604736328
    9. '  ' → logprob: -11.645038604736328
    10. '*' → logprob: -11.895038604736328

Token 75: ' least' (ID: 5153)
  Prédit: ' least'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' least' → logprob: -0.41375213861465454
    2. 'least' → logprob: -1.5387520790100098
    3. ' (' → logprob: -2.6637520790100098
    4. '(' → logprob: -2.9137520790100098
    5. '(l' → logprob: -9.538752555847168
    6. 'l' → logprob: -10.038752555847168
    7. ' l' → logprob: -10.163752555847168
    8. '  ' → logprob: -11.038752555847168
    9. '(int' → logprob: -11.163752555847168
    10. ' ' → logprob: -11.163752555847168

Token 76: '_common' (ID: 49800)
  Prédit: '_common'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_common' → logprob: -9.078839502763003e-05
    2. 'est' → logprob: -10.000090599060059
    3. 'common' → logprob: -11.625090599060059
    4. 'ast' → logprob: -11.625090599060059
    5. 'cm' → logprob: -11.875090599060059
    6. 'Common' → logprob: -12.250090599060059
    7. '_comm' → logprob: -13.000090599060059
    8. '_' → logprob: -13.125090599060059
    9. '*' → logprob: -13.250090599060059
    10. '```' → logprob: -13.750090599060059

Token 77: '_multiple' (ID: 111487)
  Prédit: '_multiple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_multiple' → logprob: -0.009649490006268024
    2. '_common' → logprob: -4.884649276733398
    3. 'multiple' → logprob: -6.759649276733398
    4. '_' → logprob: -8.259649276733398
    5. '_mult' → logprob: -8.884649276733398
    6. '_m' → logprob: -9.884649276733398
    7. '_multiplier' → logprob: -10.009649276733398
    8. '_possible' → logprob: -10.134649276733398
    9. '_mul' → logprob: -10.259649276733398
    10. '_div' → logprob: -10.259649276733398

Token 78: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5763435959815979
    2. '*' → logprob: -0.8263435959815979
    3. '*l' → logprob: -8.951343536376953
    4. ' ' → logprob: -9.326343536376953
    5. ' ' → logprob: -9.451343536376953
    6. ' //' → logprob: -10.451343536376953
    7. '**' → logprob: -10.576343536376953
    8. '  ' → logprob: -11.076343536376953
    9. 'import' → logprob: -11.951343536376953
    10. '*object' → logprob: -12.576343536376953

Token 79: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.07500997930765152
    2. '(current' → logprob: -2.950010061264038
    3. ' current' → logprob: -3.950010061264038
    4. ' (' → logprob: -7.325009822845459
    5. '[current' → logprob: -12.700010299682617
    6. '$current' → logprob: -12.950010299682617
    7. '(' → logprob: -13.075010299682617
    8. '```' → logprob: -13.325010299682617
    9. '=current' → logprob: -13.825010299682617
    10. ' ' → logprob: -13.950010299682617

Token 80: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.0006459566066041589
    2. '_' → logprob: -7.375646114349365
    3. '```' → logprob: -11.750645637512207
    4. '_token' → logprob: -12.000645637512207
    5. 'number' → logprob: -13.250645637512207
    6. '_num' → logprob: -14.250645637512207
    7. '_code' → logprob: -14.250645637512207
    8. 'Number' → logprob: -15.375645637512207
    9. '_NUMBER' → logprob: -15.500645637512207
    10. '_numbers' → logprob: -15.500645637512207

Token 81: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.0037368990015238523
    2. '//' → logprob: -5.628736972808838
    3. ' ' → logprob: -9.75373649597168
    4. ' /' → logprob: -11.12873649597168
    5. '   ' → logprob: -11.50373649597168
    6. ' ' → logprob: -11.62873649597168
    7. ')' → logprob: -11.87873649597168
    8. ')//' → logprob: -12.25373649597168
    9. '://' → logprob: -12.37873649597168
    10. '       ' → logprob: -12.62873649597168

Token 82: ' gcd' (ID: 106918)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.6240566083070007e-06
    2. ' gcd' → logprob: -13.375001907348633
    3. '(g' → logprob: -18.000001907348633
    4. 'math' → logprob: -20.000001907348633
    5. '_g' → logprob: -20.625001907348633
    6. '#g' → logprob: -20.875001907348633
    7. '   ' → logprob: -21.000001907348633
    8. '[g' → logprob: -21.000001907348633
    9. ''g' → logprob: -21.000001907348633
    10. ' ' → logprob: -21.375001907348633

Token 83: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00013595925702247769
    2. '(g' → logprob: -9.375136375427246
    3. '(current' → logprob: -10.750136375427246
    4. '(previous' → logprob: -11.500136375427246
    5. ' (' → logprob: -11.875136375427246
    6. '(
' → logprob: -13.125136375427246
    7. '('' → logprob: -13.750136375427246
    8. '(user' → logprob: -14.000136375427246
    9. '(last' → logprob: -14.000136375427246
    10. '(

' → logprob: -14.000136375427246

Token 84: 'least' (ID: 96926)
  Prédit: 'least'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.1430404633283615
    2. '(' → logprob: -2.018040418624878
    3. ' least' → logprob: -8.143040657043457
    4. 'current' → logprob: -10.893040657043457
    5. ')' → logprob: -11.518040657043457
    6. '(current' → logprob: -11.643040657043457
    7. ' (' → logprob: -11.643040657043457
    8. 'le' → logprob: -12.143040657043457
    9. 'lest' → logprob: -12.768040657043457
    10. 'most' → logprob: -12.893040657043457

Token 85: '_common' (ID: 49800)
  Prédit: '_common'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_common' → logprob: -0.016117654740810394
    2. 'common' → logprob: -4.141117572784424
    3. '<|end|>' → logprob: -10.141118049621582
    4. ' common' → logprob: -10.641118049621582
    5. '_current' → logprob: -12.391118049621582
    6. 'Common' → logprob: -12.516118049621582
    7. '_com' → logprob: -13.391118049621582
    8. '(common' → logprob: -13.516118049621582
    9. '	common' → logprob: -13.641118049621582
    10. ' ' → logprob: -14.016118049621582

Token 86: '_multiple' (ID: 111487)
  Prédit: '_number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.48800739645957947
    2. '_multiple' → logprob: -2.1130073070526123
    3. 'common' → logprob: -2.4880073070526123
    4. 'current' → logprob: -2.7380073070526123
    5. '_common' → logprob: -2.7380073070526123
    6. 'multiple' → logprob: -3.8630073070526123
    7. '_list' → logprob: -4.363007545471191
    8. '_numbers' → logprob: -4.988007545471191
    9. 'number' → logprob: -5.738007545471191
    10. '_current' → logprob: -5.988007545471191

Token 87: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0076295845210552216
    2. ',current' → logprob: -4.88262939453125
    3. ' ,' → logprob: -11.13262939453125
    4. ',
' → logprob: -13.00762939453125
    5. ',

' → logprob: -13.63262939453125
    6. ',c' → logprob: -14.50762939453125
    7. ',new' → logprob: -14.88262939453125
    8. ',)' → logprob: -15.00762939453125
    9. ',user' → logprob: -15.25762939453125
    10. ',g' → logprob: -15.25762939453125

Token 88: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.04858805239200592
    2. 'current' → logprob: -3.0485880374908447
    3. '	current' → logprob: -15.548587799072266
    4. ' ' → logprob: -15.923587799072266
    5. '(current' → logprob: -16.423587799072266
    6. '[current' → logprob: -16.548587799072266
    7. ' ' → logprob: -16.673587799072266
    8. ',current' → logprob: -16.673587799072266
    9. '$current' → logprob: -16.798587799072266
    10. '_current' → logprob: -16.923587799072266

Token 89: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.0006370236515067518
    2. '_' → logprob: -7.375637054443359
    3. 'number' → logprob: -11.62563705444336
    4. ' _' → logprob: -15.12563705444336
    5. '_n' → logprob: -15.50063705444336
    6. '_num' → logprob: -15.75063705444336
    7. '__' → logprob: -16.00063705444336
    8. '_list' → logprob: -16.37563705444336
    9. '```' → logprob: -16.37563705444336
    10. '_
' → logprob: -16.50063705444336

Token 90: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.723352049040841e-06
    2. ')
' → logprob: -12.875004768371582
    3. ' )' → logprob: -13.875004768371582
    4. '   ' → logprob: -14.125004768371582
    5. ')`' → logprob: -15.375004768371582
    6. '))' → logprob: -16.375003814697266
    7. '       ' → logprob: -17.375003814697266
    8. ')

' → logprob: -17.625003814697266
    9. '```' → logprob: -17.625003814697266
    10. '}' → logprob: -17.625003814697266

Token 91: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030533676967024803
    2. '<|end|>' → logprob: -4.280533790588379
    3. ' ' → logprob: -5.280533790588379
    4. '
' → logprob: -5.530533790588379
    5. ' 
' → logprob: -6.280533790588379
    6. '    
' → logprob: -6.905533790588379
    7. '%' → logprob: -7.280533790588379
    8. ')' → logprob: -7.530533790588379
    9. '\n' → logprob: -7.655533790588379
    10. '  
' → logprob: -7.780533790588379

Token 92: ' least' (ID: 5153)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2481941133737564
    2. ' ' → logprob: -1.8731940984725952
    3. '(' → logprob: -3.7481942176818848
    4. ')' → logprob: -4.998194217681885
    5. ' for' → logprob: -4.998194217681885
    6. '<|end|>' → logprob: -4.998194217681885
    7. ':' → logprob: -5.123194217681885
    8. 'for' → logprob: -5.748194217681885
    9. '  ' → logprob: -5.998194217681885
    10. '    ' → logprob: -6.373194217681885

Token 93: '_common' (ID: 49800)
  Prédit: '_common'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_common' → logprob: -0.1432906687259674
    2. '_' → logprob: -2.0182907581329346
    3. '<|end|>' → logprob: -8.143290519714355
    4. 'common' → logprob: -9.768290519714355
    5. ' _' → logprob: -9.893290519714355
    6. '```' → logprob: -10.143290519714355
    7. '_con' → logprob: -10.893290519714355
    8. '‌' → logprob: -10.893290519714355
    9. '_
' → logprob: -11.143290519714355
    10. 'Common' → logprob: -11.143290519714355

Token 94: '_multiple' (ID: 111487)
  Prédit: '_multiple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_multiple' → logprob: -0.0024753010366111994
    2. '_common' → logprob: -6.627475261688232
    3. '_m' → logprob: -7.877475261688232
    4. '_' → logprob: -8.50247573852539
    5. '_multiplier' → logprob: -9.00247573852539
    6. 'multiple' → logprob: -9.62747573852539
    7. '_possible' → logprob: -9.62747573852539
    8. '_of' → logprob: -9.75247573852539
    9. '_mult' → logprob: -10.25247573852539
    10. 'imum' → logprob: -10.87747573852539

Token 95: ' =' (ID: 314)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.330550879240036
    2. ' %' → logprob: -1.4555509090423584
    3. '<|end|>' → logprob: -3.0805509090423584
    4. ' ' → logprob: -6.455550670623779
    5. ' %=' → logprob: -8.455551147460938
    6. '<|end|>' → logprob: -8.580551147460938
    7. ')' → logprob: -9.705551147460938
    8. '
' → logprob: -9.830551147460938
    9. '```' → logprob: -9.830551147460938
    10. '%=' → logprob: -11.580551147460938

Token 96: ' least' (ID: 5153)
  Prédit: ' least'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' least' → logprob: -0.01815076172351837
    2. 'least' → logprob: -4.018150806427002
    3. 'Least' → logprob: -15.518150329589844
    4. ' ' → logprob: -15.643150329589844
    5. 'le' → logprob: -16.143150329589844
    6. ' ' → logprob: -16.643150329589844
    7. '```' → logprob: -16.768150329589844
    8. ' l' → logprob: -17.518150329589844
    9. '%' → logprob: -17.643150329589844
    10. 'lest' → logprob: -17.768150329589844

Token 97: '_common' (ID: 49800)
  Prédit: '_common'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_common' → logprob: -0.0002465582510922104
    2. 'common' → logprob: -8.62524700164795
    3. 'Common' → logprob: -11.00024700164795
    4. '_' → logprob: -11.25024700164795
    5. '```' → logprob: -11.50024700164795
    6. '_current' → logprob: -12.00024700164795
    7. ' _' → logprob: -13.00024700164795
    8. ' ' → logprob: -13.25024700164795
    9. '_com' → logprob: -13.50024700164795
    10. ' common' → logprob: -13.75024700164795

Token 98: '_multiple' (ID: 111487)
  Prédit: '_multiple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_multiple' → logprob: -0.03990403562784195
    2. 'ultiple' → logprob: -4.1649041175842285
    3. 'multiple' → logprob: -4.2899041175842285
    4. '_common' → logprob: -4.7899041175842285
    5. 'common' → logprob: -7.0399041175842285
    6. 'ultip' → logprob: -8.03990364074707
    7. 'mod' → logprob: -9.66490364074707
    8. 'iple' → logprob: -9.78990364074707
    9. 'multip' → logprob: -9.91490364074707
    10. 'om' → logprob: -10.78990364074707

Token 99: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.006728634238243103
    2. ' %' → logprob: -5.006728649139404
    3. ' ' → logprob: -11.881728172302246
    4. ' ' → logprob: -13.006728172302246
    5. '%i' → logprob: -14.131728172302246
    6. '%\' → logprob: -14.131728172302246
    7. '```' → logprob: -14.756728172302246
    8. '%n' → logprob: -14.881728172302246
    9. '<|end|>' → logprob: -15.006728172302246
    10. 'mod' → logprob: -15.381728172302246

Token 100: ' modulo' (ID: 112372)
  Prédit: ' modulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' modulo' → logprob: -0.02340073138475418
    2. 'mod' → logprob: -3.7734007835388184
    3. '(mod' → logprob: -9.14840030670166
    4. ' ' → logprob: -10.64840030670166
    5. ' ' → logprob: -10.77340030670166
    6. 'module' → logprob: -13.64840030670166
    7. ' modu' → logprob: -14.39840030670166
    8. '	mod' → logprob: -14.39840030670166
    9. '100' → logprob: -14.89840030670166
    10. ' mod' → logprob: -15.27340030670166

Token 101: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0007373234839178622
    2. 'o' → logprob: -8.000737190246582
    3. '_val' → logprob: -9.000737190246582
    4. 'value' → logprob: -9.000737190246582
    5. 'u' → logprob: -9.625737190246582
    6. '_' → logprob: -10.000737190246582
    7. '```' → logprob: -11.500737190246582
    8. 'to' → logprob: -12.500737190246582
    9. 'val' → logprob: -12.625737190246582
    10. '\' → logprob: -12.625737190246582

Token 102: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5044025182723999
    2. 'for' → logprob: -1.1294025182724
    3. '<|end|>' → logprob: -3.1294026374816895
    4. '
' → logprob: -4.0044026374816895
    5. ' for' → logprob: -5.0044026374816895
    6. '\n' → logprob: -6.1294026374816895
    7. '    
' → logprob: -7.3794026374816895
    8. '```' → logprob: -8.004402160644531
    9. ')' → logprob: -8.504402160644531
    10. '<|end|>' → logprob: -9.004402160644531

Token 104: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0017816872568801045
    2. '   ' → logprob: -7.126781463623047
    3. 'print' → logprob: -7.376781463623047
    4. ' for' → logprob: -8.001781463623047
    5. 'return' → logprob: -11.876781463623047
    6. 'total' → logprob: -12.001781463623047
    7. '<|end|>' → logprob: -14.126781463623047
    8. '	for' → logprob: -14.251781463623047
    9. '    
' → logprob: -15.251781463623047
    10. 'sum' → logprob: -15.501781463623047

Token 105: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.19228562712669373
    2. ' number' → logprob: -1.9422856569290161
    3. ' i' → logprob: -4.567285537719727
    4. 'current' → logprob: -4.567285537719727
    5. ' num' → logprob: -5.067285537719727
    6. 'number' → logprob: -5.942285537719727
    7. 'num' → logprob: -7.192285537719727
    8. ' ' → logprob: -7.942285537719727
    9. 'i' → logprob: -8.067285537719727
    10. ' index' → logprob: -9.317285537719727

Token 106: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -6.933173426659778e-05
    2. '_' → logprob: -10.000069618225098
    3. '_num' → logprob: -11.250069618225098
    4. 'number' → logprob: -12.625069618225098
    5. '_list' → logprob: -12.875069618225098
    6. '_value' → logprob: -14.000069618225098
    7. '_in' → logprob: -14.625069618225098
    8. ' _' → logprob: -14.750069618225098
    9. '```' → logprob: -14.750069618225098
    10. '_index' → logprob: -15.125069618225098

Token 107: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01824125461280346
    2. 'in' → logprob: -4.0182414054870605
    3. ' ' → logprob: -9.643240928649902
    4. '  ' → logprob: -11.393240928649902
    5. '_' → logprob: -13.018240928649902
    6. '	in' → logprob: -13.018240928649902
    7. 's' → logprob: -13.393240928649902
    8. 'In' → logprob: -13.393240928649902
    9. ' ' → logprob: -13.518240928649902
    10. '<|end|>' → logprob: -13.643240928649902

Token 108: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.006715967319905758
    2. ' list' → logprob: -5.006715774536133
    3. '   ' → logprob: -14.756715774536133
    4. 'range' → logprob: -15.631715774536133
    5. '	list' → logprob: -16.881715774536133
    6. ' ' → logprob: -17.506715774536133
    7. 'List' → logprob: -18.006715774536133
    8. '```' → logprob: -18.006715774536133
    9. 'user' → logprob: -18.256715774536133
    10. ' range' → logprob: -18.631715774536133

Token 109: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -4.320199877838604e-07
    2. 'of' → logprob: -14.875
    3. 'Of' → logprob: -19.125
    4. '_for' → logprob: -19.5
    5. ' of' → logprob: -19.75
    6. '_to' → logprob: -19.875
    7. '_OF' → logprob: -20.25
    8. '```' → logprob: -20.25
    9. ')' → logprob: -20.375
    10. ')_' → logprob: -20.625

Token 110: '_numbers' (ID: 76842)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0005488642491400242
    2. 'numbers' → logprob: -7.625548839569092
    3. '_numbers' → logprob: -10.00054931640625
    4. 'number' → logprob: -11.62554931640625
    5. ' list' → logprob: -12.50054931640625
    6. '_list' → logprob: -12.87554931640625
    7. 'user' → logprob: -16.50054931640625
    8. '```' → logprob: -17.00054931640625
    9. '_number' → logprob: -17.25054931640625
    10. '(list' → logprob: -18.12554931640625

Token 111: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.353008499601856e-05
    2. ':
' → logprob: -9.375093460083008
    3. '<|end|>' → logprob: -13.125093460083008
    4. '):' → logprob: -13.625093460083008
    5. ',' → logprob: -13.625093460083008
    6. '   ' → logprob: -14.000093460083008
    7. '       ' → logprob: -14.375093460083008
    8. ' :' → logprob: -14.375093460083008
    9. '<|end|>' → logprob: -14.750093460083008
    10. '.' → logprob: -15.000093460083008

Token 112: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15619640052318573
    2. ':' → logprob: -2.031196355819702
    3. '<|end|>' → logprob: -5.031196594238281
    4. ':
' → logprob: -5.281196594238281
    5. '   ' → logprob: -7.656196594238281
    6. '<|end|>' → logprob: -8.031196594238281
    7. '```' → logprob: -8.531196594238281
    8. ' ' → logprob: -9.406196594238281
    9. ',' → logprob: -9.531196594238281
    10. '
' → logprob: -9.656196594238281

Token 113: ' modular' (ID: 61198)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.490072101354599
    2. 'total' → logprob: -1.4900721311569214
    3. '       ' → logprob: -1.8650721311569214
    4. '           ' → logprob: -6.115072250366211
    5. ' current' → logprob: -6.365072250366211
    6. 'current' → logprob: -6.615072250366211
    7. '   ' → logprob: -7.240072250366211
    8. ' remainder' → logprob: -7.490072250366211
    9. 'inverse' → logprob: -9.490072250366211
    10. 're' → logprob: -9.615072250366211

Token 114: '_inverse' (ID: 188797)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.18643637001514435
    2. '_value' → logprob: -2.311436414718628
    3. '_inverse' → logprob: -3.436436414718628
    4. '_total' → logprob: -4.686436176300049
    5. '_term' → logprob: -5.061436176300049
    6. '_con' → logprob: -5.436436176300049
    7. '_' → logprob: -5.561436176300049
    8. '_product' → logprob: -5.686436176300049
    9. '_current' → logprob: -6.186436176300049
    10. '_add' → logprob: -6.561436176300049

Token 115: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47115305066108704
    2. '_' → logprob: -1.5961530208587646
    3. '(' → logprob: -1.9711530208587646
    4. '=' → logprob: -3.7211530208587646
    5. '(current' → logprob: -5.721153259277344
    6. '_value' → logprob: -6.346153259277344
    7. '_current' → logprob: -6.596153259277344
    8. ' (' → logprob: -6.971153259277344
    9. '_=' → logprob: -7.221153259277344
    10. '<|end|>' → logprob: -8.346153259277344

Token 116: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.2522352933883667
    2. ' pow' → logprob: -1.5022352933883667
    3. '(pow' → logprob: -8.127235412597656
    4. '   ' → logprob: -12.002235412597656
    5. '1' → logprob: -13.752235412597656
    6. '```' → logprob: -14.502235412597656
    7. 'p' → logprob: -14.877235412597656
    8. '_pow' → logprob: -15.127235412597656
    9. ' ' → logprob: -15.252235412597656
    10. '(' → logprob: -15.252235412597656

Token 117: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.1269538253545761
    2. '(' → logprob: -2.1269538402557373
    3. '(
' → logprob: -11.501954078674316
    4. 'current' → logprob: -11.876954078674316
    5. '(cur' → logprob: -12.501954078674316
    6. '(curr' → logprob: -13.251954078674316
    7. '(number' → logprob: -14.751954078674316
    8. '(base' → logprob: -14.876954078674316
    9. ' (' → logprob: -15.001954078674316
    10. '(mod' → logprob: -15.001954078674316

Token 118: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -8.780830830801278e-05
    2. 'number' → logprob: -9.75008773803711
    3. '_' → logprob: -11.62508773803711
    4. 'umber' → logprob: -12.00008773803711
    5. 'Number' → logprob: -12.62508773803711
    6. '```' → logprob: -12.75008773803711
    7. '_value' → logprob: -13.62508773803711
    8. ')' → logprob: -14.12508773803711
    9. ')_' → logprob: -14.25008773803711
    10. ' ' → logprob: -14.25008773803711

Token 119: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006380964769050479
    2. ' ,' → logprob: -7.625638008117676
    3. ',
' → logprob: -10.125638008117676
    4. ',module' → logprob: -10.500638008117676
    5. ',m' → logprob: -11.250638008117676
    6. '   ' → logprob: -11.250638008117676
    7. ',-' → logprob: -11.375638008117676
    8. '`,' → logprob: -11.875638008117676
    9. '       ' → logprob: -12.125638008117676
    10. 'mod' → logprob: -12.375638008117676

Token 120: ' modulo' (ID: 112372)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0007373234839178622
    2. '-mod' → logprob: -8.125737190246582
    3. ' mod' → logprob: -8.250737190246582
    4. '-' → logprob: -9.000737190246582
    5. '	mod' → logprob: -10.625737190246582
    6. ' modulo' → logprob: -11.375737190246582
    7. '(mod' → logprob: -11.625737190246582
    8. ' -' → logprob: -12.875737190246582
    9. '.mod' → logprob: -13.000737190246582
    10. '   ' → logprob: -13.125737190246582

Token 121: '_value' (ID: 6734)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.000915039679966867
    2. 'mod' → logprob: -8.125914573669434
    3. ' -' → logprob: -8.375914573669434
    4. '-mod' → logprob: -8.625914573669434
    5. '<|end|>' → logprob: -9.875914573669434
    6. '-m' → logprob: -10.375914573669434
    7. '(mod' → logprob: -10.500914573669434
    8. '_mod' → logprob: -10.750914573669434
    9. '_value' → logprob: -11.750914573669434
    10. '```' → logprob: -11.875914573669434

Token 122: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.005234594456851482
    2. ' -' → logprob: -5.255234718322754
    3. '```' → logprob: -15.130234718322754
    4. ' ' → logprob: -15.505234718322754
    5. '−' → logprob: -16.255233764648438
    6. 's' → logprob: -17.005233764648438
    7. '<|end|>' → logprob: -17.130233764648438
    8. '–' → logprob: -17.630233764648438
    9. ''s' → logprob: -17.755233764648438
    10. '  ' → logprob: -17.755233764648438

Token 123: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -15.000000953674316
    3. '۲' → logprob: -16.25
    4. '```' → logprob: -17.125
    5. '-' → logprob: -17.375
    6. '２' → logprob: -18.0
    7. '₂' → logprob: -18.25
    8. '٢' → logprob: -18.875
    9. '<|end|>' → logprob: -19.125
    10. '२' → logprob: -19.25

Token 124: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. '```' → logprob: -15.375
    3. ' ' → logprob: -16.4375
    4. '-' → logprob: -16.8125
    5. '
' → logprob: -17.1875
    6. '

' → logprob: -17.5
    7. '۲' → logprob: -17.625
    8. '２' → logprob: -18.75
    9. '٢' → logprob: -18.875
    10. '२' → logprob: -18.875

Token 125: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004469519946724176
    2. ')' → logprob: -5.504469394683838
    3. ' ,' → logprob: -8.379469871520996
    4. '   ' → logprob: -9.129469871520996
    5. '       ' → logprob: -10.504469871520996
    6. '<|end|>' → logprob: -11.629469871520996
    7. ' ' → logprob: -12.629469871520996
    8. ',
' → logprob: -13.004469871520996
    9. ' )' → logprob: -13.379469871520996
    10. '  ' → logprob: -13.379469871520996

Token 126: ' modulo' (ID: 112372)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.038071442395448685
    2. ' modulo' → logprob: -3.288071393966675
    3. '   ' → logprob: -10.913071632385254
    4. ' mod' → logprob: -12.788071632385254
    5. '```' → logprob: -12.788071632385254
    6. '	mod' → logprob: -13.163071632385254
    7. '(mod' → logprob: -13.538071632385254
    8. 'module' → logprob: -14.038071632385254
    9. '       ' → logprob: -14.913071632385254
    10. '           ' → logprob: -15.038071632385254

Token 127: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -4.56102097814437e-05
    2. 'value' → logprob: -10.000045776367188
    3. '_VALUE' → logprob: -17.125045776367188
    4. 'alue' → logprob: -17.250045776367188
    5. ')' → logprob: -17.500045776367188
    6. '```' → logprob: -18.000045776367188
    7. 'Value' → logprob: -19.125045776367188
    8. '_values' → logprob: -19.375045776367188
    9. '_Value' → logprob: -19.625045776367188
    10. '_' → logprob: -19.625045776367188

Token 128: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00492478534579277
    2. ')
' → logprob: -5.379924774169922
    3. '       ' → logprob: -8.129924774169922
    4. '   ' → logprob: -12.254924774169922
    5. ' )' → logprob: -13.129924774169922
    6. ')

' → logprob: -13.254924774169922
    7. ')
' → logprob: -14.504924774169922
    8. ' ' → logprob: -15.254924774169922
    9. ' )
' → logprob: -16.629924774169922
    10. ' ' → logprob: -16.754924774169922

Token 129: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006699500139802694
    2. ' total' → logprob: -5.631699562072754
    3. '   ' → logprob: -7.256699562072754
    4. 'total' → logprob: -7.756699562072754
    5. '        
' → logprob: -7.756699562072754
    6. '<|end|>' → logprob: -7.756699562072754
    7. ',' → logprob: -7.881699562072754
    8. '
' → logprob: -8.631699562072754
    9. '```' → logprob: -9.506699562072754
    10. ' current' → logprob: -9.506699562072754

Token 130: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.1065828949213028
    2. ' total' → logprob: -2.6065828800201416
    3. '       ' → logprob: -3.7315828800201416
    4. 'current' → logprob: -6.356583118438721
    5. 'partial' → logprob: -7.106583118438721
    6. ' current' → logprob: -8.731582641601562
    7. 'con' → logprob: -9.106582641601562
    8. 'mod' → logprob: -9.231582641601562
    9. 'term' → logprob: -9.231582641601562
    10. ' partial' → logprob: -9.481582641601562

Token 131: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0019418458687141538
    2. '_' → logprob: -6.376941680908203
    3. '+=' → logprob: -8.876941680908203
    4. ' +=' → logprob: -9.876941680908203
    5. '+' → logprob: -10.876941680908203
    6. ' _' → logprob: -12.126941680908203
    7. '_s' → logprob: -12.501941680908203
    8. 'sum' → logprob: -12.626941680908203
    9. '_add' → logprob: -13.126941680908203
    10. '```' → logprob: -13.251941680908203

Token 132: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6952179670333862
    2. '+=' → logprob: -0.6952179670333862
    3. '=' → logprob: -6.820218086242676
    4. '+' → logprob: -7.070218086242676
    5. ' =' → logprob: -9.945218086242676
    6. '+=(' → logprob: -10.070218086242676
    7. '+='' → logprob: -10.820218086242676
    8. '+="' → logprob: -12.320218086242676
    9. '<|end|>' → logprob: -12.320218086242676
    10. ']+=' → logprob: -12.570218086242676

Token 133: ' least' (ID: 5153)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08746834844350815
    2. ' (' → logprob: -2.712468385696411
    3. 'least' → logprob: -4.337468147277832
    4. ' least' → logprob: -5.462468147277832
    5. '((' → logprob: -10.462468147277832
    6. '   ' → logprob: -11.212468147277832
    7. '(mod' → logprob: -12.212468147277832
    8. 'le' → logprob: -12.712468147277832
    9. '(le' → logprob: -12.712468147277832
    10. ' ' → logprob: -12.962468147277832

Token 134: '_common' (ID: 49800)
  Prédit: '_common'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_common' → logprob: -0.00019042797794099897
    2. 'common' → logprob: -8.750190734863281
    3. 'Common' → logprob: -11.375190734863281
    4. '_current' → logprob: -11.500190734863281
    5. '_mod' → logprob: -13.125190734863281
    6. 'mod' → logprob: -13.250190734863281
    7. '-common' → logprob: -13.875190734863281
    8. '_code' → logprob: -14.125190734863281
    9. '_com' → logprob: -14.625190734863281
    10. '_' → logprob: -14.875190734863281

Token 135: '_multiple' (ID: 111487)
  Prédit: '_multiple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_multiple' → logprob: -0.03644285351037979
    2. '_m' → logprob: -4.161442756652832
    3. '_' → logprob: -4.411442756652832
    4. '_l' → logprob: -6.036442756652832
    5. '_possible' → logprob: -6.911442756652832
    6. '_common' → logprob: -7.161442756652832
    7. '_mult' → logprob: -7.411442756652832
    8. '_mod' → logprob: -7.536442756652832
    9. ' _' → logprob: -7.661442756652832
    10. '_multiplier' → logprob: -8.036442756652832

Token 136: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0866328701376915
    2. '*' → logprob: -2.5866329669952393
    3. ' //' → logprob: -5.96163272857666
    4. '<|end|>' → logprob: -6.33663272857666
    5. '//' → logprob: -6.58663272857666
    6. '   ' → logprob: -7.46163272857666
    7. '`' → logprob: -7.83663272857666
    8. ' ' → logprob: -8.21163272857666
    9. ')' → logprob: -9.08663272857666
    10. '"' → logprob: -9.08663272857666

Token 137: ' modular' (ID: 61198)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.011086373589932919
    2. ' modular' → logprob: -4.511086463928223
    3. ' mod' → logprob: -10.511086463928223
    4. '(mod' → logprob: -12.136086463928223
    5. '   ' → logprob: -12.761086463928223
    6. '	mod' → logprob: -13.511086463928223
    7. '_mod' → logprob: -14.261086463928223
    8. 'pow' → logprob: -14.886086463928223
    9. '```' → logprob: -15.136086463928223
    10. ' ' → logprob: -16.011085510253906

Token 138: '_inverse' (ID: 188797)
  Prédit: '_inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inverse' → logprob: -5.300083648762666e-05
    2. 'inverse' → logprob: -10.000053405761719
    3. '_inv' → logprob: -13.625053405761719
    4. 'ize' → logprob: -13.750053405761719
    5. 'Inverse' → logprob: -14.250053405761719
    6. '_in' → logprob: -14.500053405761719
    7. 'ar' → logprob: -14.750053405761719
    8. '_reverse' → logprob: -14.875053405761719
    9. ' inverse' → logprob: -15.000053405761719
    10. '_' → logprob: -15.125053405761719

Token 139: '

' (ID: 279)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.18232154846191406
    2. '%' → logprob: -2.057321548461914
    3. '   ' → logprob: -3.682321548461914
    4. '
' → logprob: -4.557321548461914
    5. ')' → logprob: -7.182321548461914
    6. '<|end|>' → logprob: -7.557321548461914
    7. '       ' → logprob: -7.932321548461914
    8. ' 
' → logprob: -8.182321548461914
    9. '%n' → logprob: -8.182321548461914
    10. ' ' → logprob: -8.307321548461914

Token 140: '   ' (ID: 271)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.17011673748493195
    2. '%' → logprob: -1.9201167821884155
    3. '   ' → logprob: -5.420116901397705
    4. ' ' → logprob: -6.670116901397705
    5. ')' → logprob: -6.795116901397705
    6. '<|end|>' → logprob: -6.795116901397705
    7. ' %
' → logprob: -7.170116901397705
    8. '%
' → logprob: -8.545116424560547
    9. '%n' → logprob: -8.920116424560547
    10. '       ' → logprob: -9.170116424560547

Token 141: ' result' (ID: 1534)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.08319476246833801
    2. '%' → logprob: -2.8331947326660156
    3. '   ' → logprob: -4.708194732666016
    4. ' total' → logprob: -5.083194732666016
    5. ' ' → logprob: -5.833194732666016
    6. 'total' → logprob: -6.583194732666016
    7. ')' → logprob: -7.208194732666016
    8. '(total' → logprob: -8.458194732666016
    9. '<|end|>' → logprob: -9.333194732666016
    10. '  ' → logprob: -9.833194732666016

Token 142: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18887636065483093
    2. '=' → logprob: -1.8138763904571533
    3. '<|end|>' → logprob: -5.813876152038574
    4. ' ' → logprob: -6.313876152038574
    5. ' +=' → logprob: -6.563876152038574
    6. '   ' → logprob: -6.813876152038574
    7. '_' → logprob: -7.188876152038574
    8. ')' → logprob: -7.813876152038574
    9. '<|end|>' → logprob: -8.438876152038574
    10. '  ' → logprob: -9.563876152038574

Token 143: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.04858827963471413
    2. 'total' → logprob: -3.048588275909424
    3. '   ' → logprob: -14.673588752746582
    4. '(total' → logprob: -15.048588752746582
    5. '	total' → logprob: -16.423587799072266
    6. ' tot' → logprob: -17.798587799072266
    7. ' ' → logprob: -18.173587799072266
    8. ' tota' → logprob: -18.923587799072266
    9. ' ' → logprob: -19.298587799072266
    10. '$total' → logprob: -19.423587799072266

Token 144: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -2.1008713702030946e-06
    2. 'sum' → logprob: -13.875001907348633
    3. '\' → logprob: -15.500001907348633
    4. ' _' → logprob: -15.750001907348633
    5. '_' → logprob: -16.000001907348633
    6. '```' → logprob: -16.250001907348633
    7. '_total' → logprob: -16.625001907348633
    8. '_code' → logprob: -16.875001907348633
    9. '_result' → logprob: -17.000001907348633
    10. '_mod' → logprob: -17.250001907348633

Token 145: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.16023387014865875
    2. '%' → logprob: -1.9102338552474976
    3. ' ' → logprob: -11.785233497619629
    4. '<|end|>' → logprob: -13.910233497619629
    5. ' %=' → logprob: -14.910233497619629
    6. ' ' → logprob: -15.285233497619629
    7. '	' → logprob: -15.910233497619629
    8. ' 
' → logprob: -16.285234451293945
    9. '```' → logprob: -16.660234451293945
    10. ' %#' → logprob: -16.785234451293945

Token 146: ' modulo' (ID: 112372)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.06201182305812836
    2. ' modulo' → logprob: -2.81201171875
    3. '(mod' → logprob: -10.18701171875
    4. 'module' → logprob: -12.06201171875
    5. 'mo' → logprob: -15.56201171875
    6. '```' → logprob: -15.56201171875
    7. 'Modulo' → logprob: -15.68701171875
    8. ' ' → logprob: -16.31201171875
    9. '	mod' → logprob: -16.56201171875
    10. 'moder' → logprob: -17.18701171875

Token 147: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -4.68022444692906e-05
    2. 'value' → logprob: -10.500046730041504
    3. '_val' → logprob: -11.875046730041504
    4. 'o' → logprob: -12.125046730041504
    5. '_' → logprob: -12.500046730041504
    6. '_mod' → logprob: -13.500046730041504
    7. '```' → logprob: -14.875046730041504
    8. 'val' → logprob: -15.000046730041504
    9. 'mod' → logprob: -15.000046730041504
    10. '_values' → logprob: -15.750046730041504

Token 148: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030084725469350815
    2. 'return' → logprob: -3.9050846099853516
    3. 'print' → logprob: -5.405084609985352
    4. '    
' → logprob: -6.405084609985352
    5. '<|end|>' → logprob: -6.405084609985352
    6. '
' → logprob: -7.155084609985352
    7. ' return' → logprob: -8.155084609985352
    8. ')' → logprob: -8.280084609985352
    9. '	return' → logprob: -8.655084609985352
    10. '```' → logprob: -9.530084609985352

Token 149: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00035798799945041537
    2. '<|end|>' → logprob: -8.875357627868652
    3. 'print' → logprob: -9.250357627868652
    4. 'return' → logprob: -10.250357627868652
    5. '    
' → logprob: -10.500357627868652
    6. '
' → logprob: -10.625357627868652
    7. ' return' → logprob: -10.750357627868652
    8. '```' → logprob: -11.625357627868652
    9. '	return' → logprob: -13.750357627868652
    10. ' print' → logprob: -14.000357627868652

Token 150: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.03029211424291134
    2. 'return' → logprob: -3.53029203414917
    3. '   ' → logprob: -7.53029203414917
    4. ' return' → logprob: -13.030292510986328
    5. ' print' → logprob: -13.405292510986328
    6. '```' → logprob: -13.655292510986328
    7. '    
' → logprob: -18.280292510986328
    8. '
' → logprob: -18.655292510986328
    9. '	print' → logprob: -19.280292510986328
    10. '	return' → logprob: -19.530292510986328

Token 151: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.31347134709358215
    2. '(' → logprob: -1.3134713172912598
    3. '()' → logprob: -9.063471794128418
    4. '(res' → logprob: -10.688471794128418
    5. 'result' → logprob: -10.938471794128418
    6. '(results' → logprob: -11.313471794128418
    7. '("("' → logprob: -11.688471794128418
    8. ' (' → logprob: -11.813471794128418
    9. '(resultado' → logprob: -12.188471794128418
    10. '(
' → logprob: -12.438471794128418

Token 152: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ')
' → logprob: -14.750000953674316
    3. ' )' → logprob: -15.125000953674316
    4. '()' → logprob: -17.0
    5. '())' → logprob: -17.375
    6. ')`' → logprob: -18.0
    7. '```' → logprob: -18.5
    8. '')' → logprob: -18.5
    9. ')}' → logprob: -18.625
    10. '))' → logprob: -18.625

Token 153: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 154: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.5794650912284851
    2. '__' → logprob: -0.8294650912284851
    3. '_' → logprob: -6.454464912414551
    4. ' ' → logprob: -6.579464912414551
    5. '_name' → logprob: -7.829464912414551
    6. ' ' → logprob: -10.07946491241455
    7. '___' → logprob: -10.32946491241455
    8. 'name' → logprob: -10.32946491241455
    9. ' _' → logprob: -11.20446491241455
    10. '​' → logprob: -12.07946491241455

Token 155: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.04452439397573471
    2. ' ==' → logprob: -3.4195244312286377
    3. ' __' → logprob: -5.169524192810059
    4. '==' → logprob: -5.419524192810059
    5. '_' → logprob: -8.919524192810059
    6. '.__' → logprob: -8.919524192810059
    7. '__.__' → logprob: -9.794524192810059
    8. '<|end|>' → logprob: -10.044524192810059
    9. '```' → logprob: -10.294524192810059
    10. '_name' → logprob: -10.544524192810059

Token 156: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00034774013329297304
    2. '__.__' → logprob: -8.000348091125488
    3. '==' → logprob: -12.250348091125488
    4. '___' → logprob: -12.875348091125488
    5. '__.' → logprob: -13.000348091125488
    6. '____' → logprob: -13.875348091125488
    7. '_' → logprob: -14.000348091125488
    8. '__["' → logprob: -14.875348091125488
    9. '__*/' → logprob: -16.250347137451172
    10. '__('' → logprob: -16.375347137451172

Token 157: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.028314609080553055
    2. '==' → logprob: -4.278314590454102
    3. ' ==' → logprob: -4.278314590454102
    4. '__.__' → logprob: -9.403314590454102
    5. '=="' → logprob: -9.653314590454102
    6. '_' → logprob: -11.653314590454102
    7. '.__' → logprob: -12.028314590454102
    8. '__":
' → logprob: -12.278314590454102
    9. '___' → logprob: -12.403314590454102
    10. '=='' → logprob: -12.778314590454102

Token 158: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.05003120377659798
    2. ''' → logprob: -3.0500311851501465
    3. ' "__' → logprob: -6.5500311851501465
    4. ' '__' → logprob: -11.925031661987305
    5. '__' → logprob: -12.550031661987305
    6. '"user' → logprob: -13.675031661987305
    7. ' "' → logprob: -13.800031661987305
    8. '"name' → logprob: -16.925031661987305
    9. '"I' → logprob: -17.050031661987305
    10. '"The' → logprob: -17.175031661987305

Token 159: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -7.52919222577475e-05
    2. 'name' → logprob: -9.500075340270996
    3. ' main' → logprob: -15.500075340270996
    4. '__' → logprob: -16.37507438659668
    5. '_main' → logprob: -17.12507438659668
    6. 'ma' → logprob: -17.62507438659668
    7. '```' → logprob: -18.62507438659668
    8. '	main' → logprob: -19.37507438659668
    9. '"' → logprob: -19.50007438659668
    10. 'm' → logprob: -20.12507438659668

Token 160: '__' (ID: 771)
  Prédit: '__":
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.006737865507602692
    2. '__' → logprob: -5.00673770904541
    3. '__':
' → logprob: -10.75673770904541
    4. '__:' → logprob: -13.75673770904541
    5. '__.' → logprob: -16.256738662719727
    6. '__["' → logprob: -16.631738662719727
    7. '_' → logprob: -18.256738662719727
    8. '__
' → logprob: -18.881738662719727
    9. '__.__' → logprob: -19.131738662719727
    10. '":' → logprob: -19.506738662719727

Token 161: '":

' (ID: 107064)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.45034176111221313
    2. '__:' → logprob: -1.4503417015075684
    3. '__":
' → logprob: -2.5753417015075684
    4. ':' → logprob: -3.2003417015075684
    5. '():' → logprob: -4.700341701507568
    6. '__':
' → logprob: -6.575341701507568
    7. '():
' → logprob: -7.825341701507568
    8. '_' → logprob: -8.825342178344727
    9. '":' → logprob: -10.575342178344727
    10. '_:' → logprob: -11.200342178344727

Token 162: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004253150429576635
    2. 'calculate' → logprob: -5.754253387451172
    3. ' calculate' → logprob: -6.879253387451172
    4. '   ' → logprob: -10.629253387451172
    5. '	c' → logprob: -11.004253387451172
    6. '    
' → logprob: -13.379253387451172
    7. 'Calculate' → logprob: -13.754253387451172
    8. '.calculate' → logprob: -14.379253387451172
    9. 'alculate' → logprob: -14.879253387451172
    10. '   ' → logprob: -14.879253387451172

Token 163: ' calculate' (ID: 17950)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculate' (adapté à ' calculate') → logprob: -0.0011424804106354713
    2. '   ' → logprob: -7.001142501831055
    3. ' calculate' → logprob: -8.376142501831055
    4. '.calculate' → logprob: -15.001142501831055
    5. '    
' → logprob: -16.251142501831055
    6. 'alculate' → logprob: -16.876142501831055
    7. '  ' → logprob: -16.876142501831055
    8. 'compute' → logprob: -16.876142501831055
    9. ' ' → logprob: -17.001142501831055
    10. 'Calculate' → logprob: -17.626142501831055

Token 164: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.00015991552209015936
    2. '_' → logprob: -8.750160217285156
    3. '_modal' → logprob: -14.750160217285156
    4. '_cal' → logprob: -14.875160217285156
    5. '_m' → logprob: -15.375160217285156
    6. '_Mod' → logprob: -16.250160217285156
    7. ' _' → logprob: -17.000160217285156
    8. '_modified' → logprob: -17.500160217285156
    9. '_module' → logprob: -17.625160217285156
    10. ')_' → logprob: -17.750160217285156

Token 165: 'ular' (ID: 1492)
  Prédit: 'ular'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ular' → logprob: -5.512236498361744e-07
    2. 'cular' → logprob: -15.625000953674316
    3. 'ural' → logprob: -16.625
    4. 'ul' → logprob: -16.875
    5. '_' → logprob: -17.375
    6. 'od' → logprob: -17.5
    7. 'ar' → logprob: -17.875
    8. 'ULAR' → logprob: -18.0
    9. 'ulare' → logprob: -18.25
    10. 'ularity' → logprob: -18.5

Token 166: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -2.4153549020411447e-05
    2. '_' → logprob: -11.00002384185791
    3. '_s' → logprob: -12.50002384185791
    4. '_mod' → logprob: -13.00002384185791
    5. ' _' → logprob: -14.50002384185791
    6. 'sum' → logprob: -15.50002384185791
    7. '_suffix' → logprob: -16.750024795532227
    8. '_sub' → logprob: -16.875024795532227
    9. '_value' → logprob: -17.000024795532227
    10. '_soft' → logprob: -17.125024795532227

Token 167: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.004172071814537048
    2. '_' → logprob: -5.629171848297119
    3. '()' → logprob: -7.504171848297119
    4. 'of' → logprob: -11.879172325134277
    5. '_sum' → logprob: -12.504172325134277
    6. '_for' → logprob: -13.254172325134277
    7. '__' → logprob: -13.254172325134277
    8. '(' → logprob: -13.629172325134277
    9. '_OF' → logprob: -14.004172325134277
    10. '_value' → logprob: -14.254172325134277

Token 168: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.3162807822227478
    2. 'lc' → logprob: -1.3162808418273926
    3. 'l' → logprob: -5.816280841827393
    4. '```' → logprob: -11.066280364990234
    5. '(' → logprob: -11.691280364990234
    6. '[' → logprob: -13.566280364990234
    7. '1' → logprob: -13.566280364990234
    8. '`' → logprob: -13.691280364990234
    9. '-l' → logprob: -14.066280364990234
    10. 'cms' → logprob: -14.191280364990234

Token 169: 'cms' (ID: 60849)
  Prédit: 'cms'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cms' → logprob: -9.610702363715973e-06
    2. 'cm' → logprob: -11.625009536743164
    3. 'c' → logprob: -14.750009536743164
    4. ' cms' → logprob: -16.250009536743164
    5. '.cms' → logprob: -16.750009536743164
    6. 'cs' → logprob: -17.625009536743164
    7. 'Cms' → logprob: -18.125009536743164
    8. '   ' → logprob: -18.375009536743164
    9. 'CMS' → logprob: -18.375009536743164
    10. 'cmd' → logprob: -18.875009536743164

Token 170: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00041863700607791543
    2. '(' → logprob: -8.250418663024902
    3. ' ()' → logprob: -10.125418663024902
    4. '()
' → logprob: -10.250418663024902
    5. '()`' → logprob: -11.250418663024902
    6. '()?' → logprob: -11.375418663024902
    7. '()

' → logprob: -11.500418663024902
    8. '())' → logprob: -11.750418663024902
    9. '_' → logprob: -12.125418663024902
    10. '()]' → logprob: -12.500418663024902


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 168
Tokens correctement prédits (1ère position, stricte): 89
Tokens correctement prédits (1ère position, avec adaptation): 94
Tokens correctement prédits (top 10): 137
Précision stricte (1ère position): 52.98%
Précision adaptée (1ère position): 55.95%
Précision (top 10): 81.55%
================================================================================
