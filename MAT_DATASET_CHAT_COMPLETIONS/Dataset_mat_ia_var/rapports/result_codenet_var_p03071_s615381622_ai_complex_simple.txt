================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:03
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import add, mul

# Récupère les deux entiers en parsant et reconstituant la liste par compréhension
a, b = reduce(lambda x, y: x + y, ([int(i)],) for i in input().split())

# Calcule les trois options via un générateur alimentant une map avec eval
options = list(map(lambda x: eval(x, {}, {'a': a, 'b': b}), ['2*a-1', '2*b-1', 'a+b']))

# Utilise une double reduce et un lambda tordu pour obtenir le maximum
res = reduce(lambda x, y: (x + y + abs(x - y)) // 2, options)

print(res)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.3605758845806122
    2. 'partial' → logprob: -1.3605759143829346
    3. 'reduce' → logprob: -3.6105759143829346
    4. ' wraps' → logprob: -4.1105756759643555
    5. 'l' → logprob: -6.7355756759643555
    6. ' partial' → logprob: -7.6105756759643555
    7. 'cached' → logprob: -7.9855756759643555
    8. 'cmp' → logprob: -8.235575675964355
    9. 'cache' → logprob: -8.610575675964355
    10. '```' → logprob: -8.985575675964355

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01990683376789093
    2. '(lambda' → logprob: -4.644906997680664
    3. '.' → logprob: -5.394906997680664
    4. ',' → logprob: -5.894906997680664
    5. '\' → logprob: -7.144906997680664
    6. ' (' → logprob: -7.519906997680664
    7. '```' → logprob: -8.019906997680664
    8. 'def' → logprob: -8.644906997680664
    9. 'lambda' → logprob: -8.769906997680664
    10. '`' → logprob: -8.894906997680664

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04244441166520119
    2. 'def' → logprob: -3.6674444675445557
    3. '\' → logprob: -4.542444229125977
    4. ',' → logprob: -6.417444229125977
    5. '(
' → logprob: -7.292444229125977
    6. '```' → logprob: -7.542444229125977
    7. '(lambda' → logprob: -7.667444229125977
    8. '\(' → logprob: -7.792444229125977
    9. ' ' → logprob: -8.792444229125977
    10. '\n' → logprob: -8.792444229125977

Token 6: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.3283744156360626
    2. ' math' → logprob: -1.7033743858337402
    3. 'operator' → logprob: -3.2033743858337402
    4. ' itertools' → logprob: -3.2033743858337402
    5. ' collections' → logprob: -4.95337438583374
    6. 'math' → logprob: -4.95337438583374
    7. ' os' → logprob: -6.70337438583374
    8. 'collections' → logprob: -7.57837438583374
    9. ' typing' → logprob: -8.078374862670898
    10. ' ' → logprob: -8.578374862670898

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.020179908722639084
    2. 'import' → logprob: -4.020179748535156
    3. '.' → logprob: -6.770179748535156
    4. ' ' → logprob: -7.270179748535156
    5. ' .' → logprob: -9.145179748535156
    6. '.import' → logprob: -9.770179748535156
    7. '	import' → logprob: -11.520179748535156
    8. '_import' → logprob: -13.145179748535156
    9. '-import' → logprob: -13.395179748535156
    10. '<|end|>' → logprob: -13.520179748535156

Token 8: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.33986663818359375
    2. ' import' → logprob: -1.9648666381835938
    3. 'add' → logprob: -2.7148666381835938
    4. ' mul' → logprob: -2.8398666381835938
    5. ' ' → logprob: -4.714866638183594
    6. 'import' → logprob: -4.964866638183594
    7. 'mul' → logprob: -5.089866638183594
    8. ' item' → logprob: -7.839866638183594
    9. '```' → logprob: -8.964866638183594
    10. ' icon' → logprob: -9.339866638183594

Token 9: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5353819131851196
    2. '\n' → logprob: -1.5353819131851196
    3. '\' → logprob: -2.41038179397583
    4. '(
' → logprob: -2.78538179397583
    5. ',' → logprob: -4.91038179397583
    6. 'newline' → logprob: -5.16038179397583
    7. 'def' → logprob: -5.28538179397583
    8. '
' → logprob: -5.78538179397583
    9. 'result' → logprob: -5.91038179397583
    10. '#' → logprob: -6.03538179397583

Token 10: ' mul' (ID: 9975)
  Prédit: 'mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.4560811221599579
    2. ' mul' → logprob: -1.0810811519622803
    3. 'sub' → logprob: -3.9560811519622803
    4. ' sub' → logprob: -5.081080913543701
    5. 'i' → logprob: -7.831080913543701
    6. ' i' → logprob: -7.956080913543701
    7. '```' → logprob: -7.956080913543701
    8. 'getitem' → logprob: -8.58108139038086
    9. 'item' → logprob: -9.45608139038086
    10. ' ' → logprob: -9.58108139038086

Token 11: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06471172720193863
    2. ',' → logprob: -3.814711809158325
    3. '(
' → logprob: -3.939711809158325
    4. '#' → logprob: -5.064711570739746
    5. '\' → logprob: -5.189711570739746
    6. 'def' → logprob: -5.564711570739746
    7. '\n' → logprob: -6.189711570739746
    8. '```' → logprob: -7.439711570739746
    9. '(

' → logprob: -7.564711570739746
    10. '`' → logprob: -8.064711570739746

Token 12: '#' (ID: 2)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.989589512348175
    2. ',' → logprob: -1.1145894527435303
    3. '#' → logprob: -1.8645894527435303
    4. 'def' → logprob: -3.2395894527435303
    5. '\' → logprob: -3.6145894527435303
    6. '(
' → logprob: -3.7395894527435303
    7. '`' → logprob: -4.864589691162109
    8. 'a' → logprob: -4.989589691162109
    9. ',
' → logprob: -5.364589691162109
    10. 'print' → logprob: -5.489589691162109

Token 13: ' R' (ID: 460)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4505843222141266
    2. 'def' → logprob: -3.0755844116210938
    3. ' def' → logprob: -3.4505844116210938
    4. ' The' → logprob: -3.7005844116210938
    5. 'sum' → logprob: -3.9505844116210938
    6. 'd' → logprob: -4.075584411621094
    7. ' A' → logprob: -4.513084411621094
    8. ' Define' → logprob: -4.763084411621094
    9. 'Sum' → logprob: -4.825584411621094
    10. ' sum' → logprob: -4.825584411621094

Token 14: 'éc' (ID: 5675)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.39941534399986267
    2. 'educ' → logprob: -1.524415373802185
    3. 'e' → logprob: -2.5244152545928955
    4. 'educt' → logprob: -4.524415493011475
    5. 'ead' → logprob: -4.649415493011475
    6. 'edu' → logprob: -5.399415493011475
    7. 'ange' → logprob: -5.649415493011475
    8. 'eg' → logprob: -8.149415016174316
    9. '#' → logprob: -8.149415016174316
    10. 'eddi' → logprob: -8.274415016174316

Token 15: 'up' (ID: 817)
  Prédit: 'up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.2946760654449463
    2. 'u' → logprob: -1.6696760654449463
    3. 'ur' → logprob: -3.2946760654449463
    4. 'urs' → logprob: -4.544675827026367
    5. 'ursion' → logprob: -5.169675827026367
    6. 'urrence' → logprob: -5.669675827026367
    7. 'ursive' → logprob: -5.919675827026367
    8. 'urrent' → logprob: -6.044675827026367
    9. 'upr' → logprob: -7.044675827026367
    10. 'é' → logprob: -7.294675827026367

Token 16: 'ère' (ID: 4346)
  Prédit: 'érer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érer' → logprob: -0.06823849678039551
    2. 'ération' → logprob: -2.8182384967803955
    3. 'é' → logprob: -5.818238258361816
    4. 'ér' → logprob: -6.193238258361816
    5. 'è' → logprob: -8.068238258361816
    6. 'éer' → logprob: -8.443238258361816
    7. 'ère' → logprob: -8.693238258361816
    8. '#' → logprob: -8.818238258361816
    9. 'èr' → logprob: -8.818238258361816
    10. 'ére' → logprob: -10.318238258361816

Token 17: ' les' (ID: 1341)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2420763522386551
    2. ' ' → logprob: -1.6170763969421387
    3. ' _' → logprob: -5.617076396942139
    4. '_le' → logprob: -6.117076396942139
    5. ' les' → logprob: -6.242076396942139
    6. 's' → logprob: -6.242076396942139
    7. ' le' → logprob: -6.742076396942139
    8. ' l' → logprob: -6.867076396942139
    9. ' la' → logprob: -6.992076396942139
    10. ' (' → logprob: -7.367076396942139

Token 18: ' deux' (ID: 10301)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8283861875534058
    2. 'élé' → logprob: -1.3283861875534058
    3. 'd' → logprob: -2.3283863067626953
    4. 'val' → logprob: -2.7033863067626953
    5. ' nombres' → logprob: -3.8283863067626953
    6. 's' → logprob: -4.203386306762695
    7. 'nombre' → logprob: -4.703386306762695
    8. 'elements' → logprob: -4.703386306762695
    9. 'prem' → logprob: -4.703386306762695
    10. 'tokens' → logprob: -4.828386306762695

Token 19: ' ent' (ID: 1121)
  Prédit: ' opér'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' opér' → logprob: -1.517514944076538
    2. ' éléments' → logprob: -1.892514944076538
    3. ' premiers' → logprob: -1.892514944076538
    4. 'prem' → logprob: -2.017514944076538
    5. 'élé' → logprob: -2.642514944076538
    6. ' nombres' → logprob: -2.767514944076538
    7. ' derniers' → logprob: -3.392514944076538
    8. 'arguments' → logprob: -3.392514944076538
    9. ' arguments' → logprob: -4.142515182495117
    10. ' premières' → logprob: -4.267515182495117

Token 20: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0037416485138237476
    2. 'i' → logprob: -5.62874174118042
    3. 'ers' → logprob: -9.253741264343262
    4. 'ières' → logprob: -10.503741264343262
    5. 'ier' → logprob: -11.628741264343262
    6. 'ié' → logprob: -12.378741264343262
    7. '```' → logprob: -13.503741264343262
    8. 'ri' → logprob: -14.253741264343262
    9. 'ités' → logprob: -14.378741264343262
    10. 'riers' → logprob: -14.503741264343262

Token 21: ' en' (ID: 469)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08070863783359528
    2. ' a' → logprob: -2.9557087421417236
    3. 'x' → logprob: -4.2057085037231445
    4. 'n' → logprob: -4.8307085037231445
    5. ' x' → logprob: -7.2057085037231445
    6. ',' → logprob: -7.8307085037231445
    7. 'def' → logprob: -8.455708503723145
    8. 's' → logprob: -8.455708503723145
    9. ' n' → logprob: -8.955708503723145
    10. 'num' → logprob: -9.080708503723145

Token 22: ' pars' (ID: 60569)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -0.9483832716941833
    2. ' input' → logprob: -1.4483833312988281
    3. ' entrée' → logprob: -1.5733833312988281
    4. 'input' → logprob: -2.823383331298828
    5. '_' → logprob: -3.448383331298828
    6. 'entr' → logprob: -3.448383331298828
    7. ' ' → logprob: -4.448383331298828
    8. 's' → logprob: -5.198383331298828
    9. ' a' → logprob: -5.448383331298828
    10. 'a' → logprob: -5.698383331298828

Token 23: 'ant' (ID: 493)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.4742816984653473
    2. 's' → logprob: -1.599281668663025
    3. 'e' → logprob: -2.5992817878723145
    4. 'ant' → logprob: -3.7242817878723145
    5. 'sage' → logprob: -3.8492817878723145
    6. 'sing' → logprob: -4.0992817878723145
    7. 'se' → logprob: -4.0992817878723145
    8. 'ing' → logprob: -4.8492817878723145
    9. 'çant' → logprob: -5.7242817878723145
    10. 'é' → logprob: -6.5992817878723145

Token 24: ' et' (ID: 859)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.895365834236145
    2. 'input' → logprob: -1.270365834236145
    3. ' input' → logprob: -2.6453657150268555
    4. ' la' → logprob: -2.6453657150268555
    5. 'int' → logprob: -2.7703657150268555
    6. '(input' → logprob: -3.1453657150268555
    7. 'l' → logprob: -3.8953657150268555
    8. ' les' → logprob: -5.1453657150268555
    9. ' ' → logprob: -5.1453657150268555
    10. '_' → logprob: -5.5203657150268555

Token 25: ' re' (ID: 322)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.3293711543083191
    2. ' en' → logprob: -2.454371213912964
    3. 'spl' → logprob: -2.954371213912964
    4. ' split' → logprob: -3.704371213912964
    5. ' convert' → logprob: -3.829371213912964
    6. 'split' → logprob: -4.454370975494385
    7. ' splitting' → logprob: -4.454370975494385
    8. ' ' → logprob: -4.829370975494385
    9. 'convert' → logprob: -5.454370975494385
    10. 'les' → logprob: -5.454370975494385

Token 26: 'const' (ID: 1671)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.779069185256958
    2. 'turn' → logprob: -1.779069185256958
    3. 'nd' → logprob: -2.154069185256958
    4. 'convert' → logprob: -2.154069185256958
    5. 'st' → logprob: -2.904069185256958
    6. 'mov' → logprob: -3.154069185256958
    7. 'ad' → logprob: -3.404069185256958
    8. 'const' → logprob: -3.404069185256958
    9. 'cup' → logprob: -3.779069185256958
    10. 'c' → logprob: -3.904069185256958

Token 27: 'itu' (ID: 7642)
  Prédit: 'ru'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.1204494833946228
    2. 'tu' → logprob: -2.9954495429992676
    3. 'ruit' → logprob: -3.4954495429992676
    4. 'itu' → logprob: -4.120449542999268
    5. 't' → logprob: -5.245449542999268
    6. 'r' → logprob: -5.620449542999268
    7. 'tru' → logprob: -5.745449542999268
    8. 'tit' → logprob: -6.995449542999268
    9. 'it' → logprob: -7.120449542999268
    10. '=' → logprob: -7.870449542999268

Token 28: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.006012579891830683
    2. 'ct' → logprob: -6.006012439727783
    3. '#' → logprob: -6.631012439727783
    4. 'an' → logprob: -6.756012439727783
    5. 'er' → logprob: -7.881012439727783
    6. 'a' → logprob: -8.131012916564941
    7. ' ant' → logprob: -8.881012916564941
    8. 'ing' → logprob: -10.381012916564941
    9. 'é' → logprob: -10.506012916564941
    10. 'ect' → logprob: -10.631012916564941

Token 29: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.10178668051958084
    2. 'l' → logprob: -3.4767866134643555
    3. 'la' → logprob: -3.6017866134643555
    4. ' l' → logprob: -4.4767866134643555
    5. ' une' → logprob: -5.4767866134643555
    6. ' les' → logprob: -5.4767866134643555
    7. ' ' → logprob: -5.6017866134643555
    8. 'le' → logprob: -5.7267866134643555
    9. ' le' → logprob: -5.7267866134643555
    10. 'les' → logprob: -5.8517866134643555

Token 30: ' liste' (ID: 31719)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9795297384262085
    2. ' chaîne' → logprob: -1.2295297384262085
    3. ' liste' → logprob: -1.9795297384262085
    4. 'chaine' → logprob: -3.104529857635498
    5. ' ligne' → logprob: -3.479529857635498
    6. 'liste' → logprob: -3.854529857635498
    7. ' chaine' → logprob: -3.854529857635498
    8. 's' → logprob: -3.979529857635498
    9. ' phrase' → logprob: -4.104529857635498
    10. 'ligne' → logprob: -4.479529857635498

Token 31: ' par' (ID: 686)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.8162293434143066
    2. 'def' → logprob: -1.8162293434143066
    3. 'tokens' → logprob: -1.8162293434143066
    4. 's' → logprob: -2.3162293434143066
    5. '[' → logprob: -2.8162293434143066
    6. ',' → logprob: -3.0662293434143066
    7. ' tokens' → logprob: -3.1912293434143066
    8. ' `' → logprob: -3.3162293434143066
    9. 'numbers' → logprob: -3.5662293434143066
    10. 'result' → logprob: -4.316229343414307

Token 32: ' compréhension' (ID: 142333)
  Prédit: 'concat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'concat' → logprob: -0.8109641075134277
    2. 'conc' → logprob: -0.9359641075134277
    3. ' concat' → logprob: -3.1859641075134277
    4. ' concaten' → logprob: -3.3109641075134277
    5. 'addition' → logprob: -4.060964107513428
    6. 'ent' → logprob: -4.935964107513428
    7. 's' → logprob: -5.185964107513428
    8. 'con' → logprob: -5.435964107513428
    9. '```' → logprob: -5.560964107513428
    10. 'cours' → logprob: -5.935964107513428

Token 33: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6741556525230408
    2. '[' → logprob: -2.4241557121276855
    3. 'x' → logprob: -2.4241557121276855
    4. 'result' → logprob: -2.4241557121276855
    5. 'a' → logprob: -2.7991557121276855
    6. 'numbers' → logprob: -2.9241557121276855
    7. '[n' → logprob: -3.2991557121276855
    8. 'lst' → logprob: -4.1741557121276855
    9. 'nums' → logprob: -4.5491557121276855
    10. 'res' → logprob: -5.2991557121276855

Token 34: 'a' (ID: 64)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -1.1824284791946411
    2. 'result' → logprob: -1.3074284791946411
    3. 'n' → logprob: -2.0574283599853516
    4. 'x' → logprob: -2.5574283599853516
    5. 'nums' → logprob: -2.8074283599853516
    6. 'a' → logprob: -3.0574283599853516
    7. 'lst' → logprob: -4.057428359985352
    8. 'num' → logprob: -4.432428359985352
    9. 'res' → logprob: -4.807428359985352
    10. 's' → logprob: -4.932428359985352

Token 35: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02274242229759693
    2. ',b' → logprob: -4.52274227142334
    3. ' =' → logprob: -4.64774227142334
    4. ' ,' → logprob: -6.77274227142334
    5. '=' → logprob: -7.77274227142334
    6. 's' → logprob: -8.52274227142334
    7. 'rray' → logprob: -9.27274227142334
    8. 'b' → logprob: -10.14774227142334
    9. 'r' → logprob: -10.52274227142334
    10. ',a' → logprob: -10.89774227142334

Token 36: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.2520671486854553
    2. 'b' → logprob: -1.5020670890808105
    3. ' ' → logprob: -9.377067565917969
    4. ' *' → logprob: -10.877067565917969
    5. '*b' → logprob: -10.877067565917969
    6. '  ' → logprob: -12.377067565917969
    7. '*' → logprob: -12.752067565917969
    8. ' =' → logprob: -13.252067565917969
    9. '_b' → logprob: -14.127067565917969
    10. '=' → logprob: -14.252067565917969

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061969030648469925
    2. '=' → logprob: -2.811969041824341
    3. ',' → logprob: -14.186968803405762
    4. '=int' → logprob: -15.811968803405762
    5. '=[' → logprob: -15.811968803405762
    6. ' ' → logprob: -15.936968803405762
    7. ' =[' → logprob: -16.061969757080078
    8. ' ' → logprob: -16.811969757080078
    9. ' =
' → logprob: -17.186969757080078
    10. '＝' → logprob: -17.311969757080078

Token 38: ' reduce' (ID: 10389)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.6273165941238403
    2. ' [' → logprob: -1.2523165941238403
    3. ' map' → logprob: -2.252316474914551
    4. ' int' → logprob: -3.627316474914551
    5. '[' → logprob: -3.627316474914551
    6. 'map' → logprob: -5.627316474914551
    7. 'int' → logprob: -5.752316474914551
    8. '(int' → logprob: -5.752316474914551
    9. '[a' → logprob: -5.877316474914551
    10. '[i' → logprob: -5.877316474914551

Token 39: '(lambda' (ID: 43341)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06408669054508209
    2. '(lambda' → logprob: -3.064086675643921
    3. '(add' → logprob: -4.1890869140625
    4. '(
' → logprob: -9.3140869140625
    5. '(operator' → logprob: -9.6890869140625
    6. '(m' → logprob: -9.8140869140625
    7. '(

' → logprob: -12.8140869140625
    8. ' (' → logprob: -12.9390869140625
    9. '(list' → logprob: -13.8140869140625
    10. '((' → logprob: -13.9390869140625

Token 40: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.305464506149292
    2. ' acc' → logprob: -1.555464506149292
    3. 'x' → logprob: -3.805464506149292
    4. ' lambda' → logprob: -4.055464744567871
    5. ' add' → logprob: -5.555464744567871
    6. 'acc' → logprob: -6.180464744567871
    7. 'lambda' → logprob: -6.305464744567871
    8. ' a' → logprob: -6.555464744567871
    9. ' lst' → logprob: -7.555464744567871
    10. ' i' → logprob: -7.805464744567871

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004153076093643904
    2. ' ,' → logprob: -6.004153251647949
    3. ',x' → logprob: -7.254153251647949
    4. ' x' → logprob: -8.62915325164795
    5. ':' → logprob: -9.25415325164795
    6. ',y' → logprob: -9.37915325164795
    7. ' :' → logprob: -9.50415325164795
    8. '1' → logprob: -10.00415325164795
    9. 'a' → logprob: -10.00415325164795
    10. 'x' → logprob: -10.00415325164795

Token 42: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.38716697692871094
    2. ' y' → logprob: -1.137166976928711
    3. 'x' → logprob: -9.887166976928711
    4. ' ' → logprob: -9.887166976928711
    5. 'acc' → logprob: -10.387166976928711
    6. '  ' → logprob: -10.637166976928711
    7. 'lambda' → logprob: -10.762166976928711
    8. '   ' → logprob: -11.512166976928711
    9. '	y' → logprob: -11.512166976928711
    10. ',y' → logprob: -11.574666976928711

Token 43: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4910562038421631
    2. ',' → logprob: -1.616056203842163
    3. ' :' → logprob: -1.741056203842163
    4. ' ,' → logprob: -4.741056442260742
    5. ' +' → logprob: -5.866056442260742
    6. '[' → logprob: -7.741056442260742
    7. ':add' → logprob: -7.866056442260742
    8. '+' → logprob: -8.116056442260742
    9. 'add' → logprob: -8.616056442260742
    10. ',:' → logprob: -8.991056442260742

Token 44: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.28334084153175354
    2. 'x' → logprob: -1.6583408117294312
    3. ' add' → logprob: -3.5333409309387207
    4. ' [' → logprob: -5.158340930938721
    5. ' (' → logprob: -5.408340930938721
    6. '[' → logprob: -5.658340930938721
    7. '[x' → logprob: -5.908340930938721
    8. 'add' → logprob: -6.033340930938721
    9. ' int' → logprob: -6.158340930938721
    10. '(x' → logprob: -6.158340930938721

Token 45: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6099370718002319
    2. ' +' → logprob: -0.8599370718002319
    3. '*' → logprob: -3.7349371910095215
    4. ' *' → logprob: -5.4849371910095215
    5. '+y' → logprob: -5.9849371910095215
    6. ',' → logprob: -6.7349371910095215
    7. '[' → logprob: -7.6099371910095215
    8. '+[' → logprob: -8.234936714172363
    9. ' ' → logprob: -8.734936714172363
    10. 'add' → logprob: -9.109936714172363

Token 46: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.4710248112678528
    2. 'y' → logprob: -2.096024751663208
    3. ' [' → logprob: -2.346024751663208
    4. '[' → logprob: -2.596024751663208
    5. '[y' → logprob: -2.721024751663208
    6. '[int' → logprob: -4.346024990081787
    7. '(y' → logprob: -7.346024990081787
    8. 'int' → logprob: -7.721024990081787
    9. ' ' → logprob: -7.721024990081787
    10. ' int' → logprob: -7.971024990081787

Token 47: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1622403860092163
    2. ' +' → logprob: -2.787240505218506
    3. ')' → logprob: -3.412240505218506
    4. '+' → logprob: -4.662240505218506
    5. ' ,' → logprob: -4.787240505218506
    6. '[' → logprob: -4.787240505218506
    7. ' *' → logprob: -5.037240505218506
    8. '*' → logprob: -5.162240505218506
    9. ' if' → logprob: -5.412240505218506
    10. '),' → logprob: -5.787240505218506

Token 48: ' ([' (ID: 31338)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.8881045579910278
    2. ' [' → logprob: -1.1381045579910278
    3. '[i' → logprob: -2.3881044387817383
    4. '[' → logprob: -3.2631044387817383
    5. ' map' → logprob: -3.2631044387817383
    6. '[str' → logprob: -3.6381044387817383
    7. '[input' → logprob: -3.6381044387817383
    8. '[x' → logprob: -4.763104438781738
    9. '[list' → logprob: -4.763104438781738
    10. '[a' → logprob: -5.013104438781738

Token 49: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.11867841333150864
    2. 'map' → logprob: -2.743678331375122
    3. 'i' → logprob: -4.368678569793701
    4. 'list' → logprob: -4.618678569793701
    5. ' int' → logprob: -4.868678569793701
    6. ' map' → logprob: -5.368678569793701
    7. '1' → logprob: -6.118678569793701
    8. '(int' → logprob: -6.368678569793701
    9. 'x' → logprob: -6.868678569793701
    10. '[int' → logprob: -6.868678569793701

Token 50: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.6512925624847412
    2. '(x' → logprob: -1.4012925624847412
    3. '(c' → logprob: -2.151292562484741
    4. '(s' → logprob: -2.776292562484741
    5. '(char' → logprob: -4.15129280090332
    6. '(ch' → logprob: -4.40129280090332
    7. '](' → logprob: -4.77629280090332
    8. '(n' → logprob: -5.02629280090332
    9. '(' → logprob: -5.77629280090332
    10. ']' → logprob: -7.02629280090332

Token 51: ')],' (ID: 60559)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007716293912380934
    2. ')]' → logprob: -5.882716178894043
    3. '(d' → logprob: -6.382716178894043
    4. '(x' → logprob: -7.132716178894043
    5. '(c' → logprob: -7.382716178894043
    6. '(ch' → logprob: -7.382716178894043
    7. '(char' → logprob: -8.257716178894043
    8. '(s' → logprob: -8.257716178894043
    9. '(i' → logprob: -9.632716178894043
    10. '),' → logprob: -9.757716178894043

Token 52: ')' (ID: 8)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.18146149814128876
    2. '[int' → logprob: -1.8064614534378052
    3. ' ' → logprob: -7.306461334228516
    4. '[' → logprob: -7.431461334228516
    5. ' [])' → logprob: -9.431461334228516
    6. ' []' → logprob: -9.806461334228516
    7. ' int' → logprob: -9.931461334228516
    8. ' ' → logprob: -9.931461334228516
    9. '[b' → logprob: -10.181461334228516
    10. '[i' → logprob: -10.431461334228516

Token 53: ' for' (ID: 395)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -1.0313172340393066
    2. '[' → logprob: -1.9063172340393066
    3. '[int' → logprob: -2.4063172340393066
    4. ' int' → logprob: -2.5313172340393066
    5. 'int' → logprob: -3.0313172340393066
    6. ' (' → logprob: -3.0313172340393066
    7. '([' → logprob: -3.0313172340393066
    8. ' ([' → logprob: -3.5313172340393066
    9. ')' → logprob: -3.6563172340393066
    10. ' for' → logprob: -3.9063172340393066

Token 54: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.9169867038726807
    2. 'range' → logprob: -1.1669867038726807
    3. ' i' → logprob: -2.0419867038726807
    4. 'i' → logprob: -2.6669867038726807
    5. '_' → logprob: -3.9169867038726807
    6. 'a' → logprob: -4.541986465454102
    7. ' a' → logprob: -4.666986465454102
    8. ' _' → logprob: -4.916986465454102
    9. '[' → logprob: -5.291986465454102
    10. '[i' → logprob: -5.791986465454102

Token 55: ' in' (ID: 306)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6676552295684814
    2. ' range' → logprob: -1.0426552295684814
    3. 'range' → logprob: -2.9176552295684814
    4. 'input' → logprob: -3.0426552295684814
    5. ' '' → logprob: -4.042654991149902
    6. ''' → logprob: -5.167654991149902
    7. ' "' → logprob: -6.042654991149902
    8. ' ' → logprob: -6.542654991149902
    9. ' in' → logprob: -6.917654991149902
    10. '"' → logprob: -6.917654991149902

Token 56: ' input' (ID: 3422)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -1.3735350370407104
    2. 'range' → logprob: -1.3735350370407104
    3. 'input' → logprob: -1.8735350370407104
    4. ' input' → logprob: -1.8735350370407104
    5. ''' → logprob: -2.12353515625
    6. ' '' → logprob: -3.49853515625
    7. '"' → logprob: -4.24853515625
    8. 'str' → logprob: -5.37353515625
    9. ' str' → logprob: -5.62353515625
    10. ' "' → logprob: -6.12353515625

Token 57: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.36181044578552246
    2. '())' → logprob: -1.6118104457855225
    3. '("' → logprob: -2.6118104457855225
    4. '('' → logprob: -3.8618104457855225
    5. '().' → logprob: -5.361810684204102
    6. '()))' → logprob: -6.111810684204102
    7. '(' → logprob: -6.486810684204102
    8. '()),' → logprob: -8.611810684204102
    9. '()[' → logprob: -8.611810684204102
    10. '())))' → logprob: -8.611810684204102

Token 58: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.018679052591323853
    2. 'strip' → logprob: -4.018679141998291
    3. 'replace' → logprob: -7.643679141998291
    4. ' split' → logprob: -10.143678665161133
    5. 'rstrip' → logprob: -11.643678665161133
    6. ' strip' → logprob: -14.018678665161133
    7. 'read' → logprob: -14.643678665161133
    8. ' ' → logprob: -15.518678665161133
    9. ')' → logprob: -15.518678665161133
    10. '(split' → logprob: -16.643678665161133

Token 59: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.019296880811452866
    2. '()))' → logprob: -4.394296646118164
    3. '()' → logprob: -5.144296646118164
    4. '('' → logprob: -7.769296646118164
    5. '(' → logprob: -8.019296646118164
    6. ')' → logprob: -9.519296646118164
    7. '())))' → logprob: -10.644296646118164
    8. ' ())' → logprob: -11.144296646118164
    9. '()),' → logprob: -11.269296646118164
    10. '())
' → logprob: -11.269296646118164

Token 60: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6888902187347412
    2. ',' → logprob: -1.0638902187347412
    3. '<|end|>' → logprob: -2.938890218734741
    4. ' ' → logprob: -3.063890218734741
    5. '[' → logprob: -3.938890218734741
    6. '(' → logprob: -4.06389045715332
    7. ':' → logprob: -6.18889045715332
    8. ' ,' → logprob: -6.43889045715332
    9. 'a' → logprob: -6.68889045715332
    10. ' )' → logprob: -6.81389045715332

Token 61: ' Cal' (ID: 4453)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6919271945953369
    2. ',' → logprob: -1.566927194595337
    3. '<|end|>' → logprob: -2.566927194595337
    4. ')' → logprob: -2.691927194595337
    5. '=' → logprob: -3.316927194595337
    6. 'a' → logprob: -3.441927194595337
    7. '*' → logprob: -4.191926956176758
    8. ' a' → logprob: -4.191926956176758
    9. ' =' → logprob: -4.566926956176758
    10. ' ,' → logprob: -4.816926956176758

Token 62: 'cule' (ID: 45017)
  Prédit: 'cule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cule' → logprob: -0.25205445289611816
    2. 'cul' → logprob: -1.6270544528961182
    3. 'c' → logprob: -3.877054452896118
    4. 'culate' → logprob: -5.877054214477539
    5. '#' → logprob: -7.252054214477539
    6. 'cules' → logprob: -7.377054214477539
    7. '```' → logprob: -8.689554214477539
    8. 'culation' → logprob: -9.377054214477539
    9. '``' → logprob: -9.627054214477539
    10. 'cula' → logprob: -9.689554214477539

Token 63: ' les' (ID: 1341)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.39222437143325806
    2. 'a' → logprob: -1.1422243118286133
    3. ' la' → logprob: -6.642224311828613
    4. 'mul' → logprob: -7.017224311828613
    5. ' le' → logprob: -7.392224311828613
    6. ' c' → logprob: -7.642224311828613
    7. ' ' → logprob: -7.642224311828613
    8. 'c' → logprob: -8.392224311828613
    9. '(a' → logprob: -8.392224311828613
    10. ' mul' → logprob: -8.392224311828613

Token 64: ' trois' (ID: 25564)
  Prédit: ' produit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' produit' → logprob: -0.485512375831604
    2. ' produits' → logprob: -1.235512375831604
    3. 'produ' → logprob: -3.4855122566223145
    4. ' a' → logprob: -4.1105122566223145
    5. ' product' → logprob: -4.4855122566223145
    6. ' products' → logprob: -5.1105122566223145
    7. ' ' → logprob: -5.2355122566223145
    8. 'product' → logprob: -5.7355122566223145
    9. 'a' → logprob: -6.4855122566223145
    10. ' sum' → logprob: -6.4855122566223145

Token 65: ' options' (ID: 3880)
  Prédit: ' produits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' produits' → logprob: -0.35894617438316345
    2. ' multip' → logprob: -2.6089460849761963
    3. ' products' → logprob: -3.4839460849761963
    4. 'multip' → logprob: -3.4839460849761963
    5. 'produ' → logprob: -3.6089460849761963
    6. ' opérations' → logprob: -3.7339460849761963
    7. ' produit' → logprob: -3.9839460849761963
    8. ' valeurs' → logprob: -4.358946323394775
    9. ' nombres' → logprob: -4.733946323394775
    10. ' puiss' → logprob: -4.983946323394775

Token 66: ' via' (ID: 4493)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.427871972322464
    2. ' =' → logprob: -2.1778719425201416
    3. 'a' → logprob: -2.9278719425201416
    4. ',' → logprob: -3.3028719425201416
    5. ' :' → logprob: -3.4278719425201416
    6. '[' → logprob: -3.5528719425201416
    7. '=' → logprob: -4.052872180938721
    8. '(' → logprob: -4.552872180938721
    9. ' ' → logprob: -4.802872180938721
    10. ' a' → logprob: -4.802872180938721

Token 67: ' un' (ID: 537)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9349642395973206
    2. ' [' → logprob: -1.6849641799926758
    3. 'mul' → logprob: -2.184964179992676
    4. ' mul' → logprob: -2.809964179992676
    5. ' [
' → logprob: -3.309964179992676
    6. '[
' → logprob: -3.559964179992676
    7. ' la' → logprob: -3.934964179992676
    8. ' add' → logprob: -4.059964179992676
    9. 'multip' → logprob: -4.184964179992676
    10. 'a' → logprob: -4.309964179992676

Token 68: ' génér' (ID: 18939)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.2756015062332153
    2. 'lambda' → logprob: -2.025601387023926
    3. '[' → logprob: -2.150601387023926
    4. 'e' → logprob: -2.400601387023926
    5. ' lambda' → logprob: -2.400601387023926
    6. '[
' → logprob: -2.775601387023926
    7. 'es' → logprob: -3.150601387023926
    8. ' [
' → logprob: -3.775601387023926
    9. ' tuple' → logprob: -4.025601387023926
    10. 'tuple' → logprob: -4.775601387023926

Token 69: 'ateur' (ID: 12477)
  Prédit: 'ator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ator' → logprob: -0.10221964120864868
    2. 'er' → logprob: -2.602219581604004
    3. 'érateur' → logprob: -4.727219581604004
    4. 'ate' → logprob: -5.602219581604004
    5. 'tor' → logprob: -5.852219581604004
    6. 'r' → logprob: -5.977219581604004
    7. 'ateur' → logprob: -6.102219581604004
    8. 'rate' → logprob: -7.227219581604004
    9. '(' → logprob: -8.102219581604004
    10. 'ERATOR' → logprob: -8.102219581604004

Token 70: ' aliment' (ID: 15293)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1929059773683548
    2. '(
' → logprob: -2.692905902862549
    3. ' (' → logprob: -3.567905902862549
    4. ':' → logprob: -3.567905902862549
    5. ',' → logprob: -4.442905902862549
    6. '(a' → logprob: -5.442905902862549
    7. ' (
' → logprob: -5.442905902862549
    8. '(i' → logprob: -5.567905902862549
    9. 'sum' → logprob: -5.692905902862549
    10. '(x' → logprob: -5.817905902862549

Token 71: 'ant' (ID: 493)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.09917592257261276
    2. 'ant' → logprob: -2.9741759300231934
    3. 'er' → logprob: -4.224175930023193
    4. 'ée' → logprob: -4.599175930023193
    5. 'ateur' → logprob: -5.349175930023193
    6. 'eur' → logprob: -5.974175930023193
    7. 'ator' → logprob: -6.099175930023193
    8. 'ent' → logprob: -6.099175930023193
    9. 'ate' → logprob: -6.224175930023193
    10. 'e' → logprob: -6.349175930023193

Token 72: ' une' (ID: 2463)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6762065887451172
    2. '(' → logprob: -2.426206588745117
    3. 'mul' → logprob: -2.426206588745117
    4. '[' → logprob: -3.301206588745117
    5. ' a' → logprob: -3.426206588745117
    6. '(i' → logprob: -3.551206588745117
    7. ' mul' → logprob: -3.801206588745117
    8. '(a' → logprob: -4.051206588745117
    9. '(m' → logprob: -4.176206588745117
    10. ' [' → logprob: -4.301206588745117

Token 73: ' map' (ID: 4014)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -1.096617341041565
    2. 'sum' → logprob: -1.221617341041565
    3. ' tuple' → logprob: -1.846617341041565
    4. ')' → logprob: -3.2216172218322754
    5. ' sum' → logprob: -3.2216172218322754
    6. 'range' → logprob: -3.4716172218322754
    7. ' (' → logprob: -3.9716172218322754
    8. '(' → logprob: -4.471617221832275
    9. 'generator' → logprob: -4.596617221832275
    10. ' generator' → logprob: -4.971617221832275

Token 74: ' avec' (ID: 3937)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4778990149497986
    2. '(lambda' → logprob: -1.3528990745544434
    3. '(m' → logprob: -3.1028990745544434
    4. 'mul' → logprob: -3.9778990745544434
    5. '(int' → logprob: -4.102899074554443
    6. ' (' → logprob: -4.477899074554443
    7. '(map' → logprob: -4.727899074554443
    8. '(
' → logprob: -5.602899074554443
    9. '(str' → logprob: -5.852899074554443
    10. '(add' → logprob: -5.977899074554443

Token 75: ' eval' (ID: 29383)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -1.0277174711227417
    2. 'mul' → logprob: -1.4027174711227417
    3. '(lambda' → logprob: -1.4027174711227417
    4. ' lambda' → logprob: -2.5277175903320312
    5. 'map' → logprob: -4.277717590332031
    6. ' mul' → logprob: -4.277717590332031
    7. 'add' → logprob: -4.527717590332031
    8. '[' → logprob: -5.027717590332031
    9. ' (' → logprob: -5.652717590332031
    10. '(' → logprob: -5.777717590332031

Token 76: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05269206315279007
    2. ' (' → logprob: -4.05269193649292
    3. '('' → logprob: -4.42769193649292
    4. '(
' → logprob: -4.42769193649292
    5. '[' → logprob: -5.67769193649292
    6. '(lambda' → logprob: -6.30269193649292
    7. ',' → logprob: -7.42769193649292
    8. ' (
' → logprob: -7.92769193649292
    9. '[
' → logprob: -8.052692413330078
    10. '([' → logprob: -8.052692413330078

Token 77: 'options' (ID: 5805)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10883743315935135
    2. ' (' → logprob: -3.483837366104126
    3. '(
' → logprob: -3.608837366104126
    4. '('' → logprob: -4.233837604522705
    5. 'map' → logprob: -4.983837604522705
    6. '[' → logprob: -5.608837604522705
    7. ' (
' → logprob: -6.233837604522705
    8. '(lambda' → logprob: -6.483837604522705
    9. 'eval' → logprob: -6.608837604522705
    10. '   ' → logprob: -6.608837604522705

Token 78: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08319662511348724
    2. '=' → logprob: -2.5831966400146484
    3. '(' → logprob: -5.458196640014648
    4. ' ' → logprob: -11.708196640014648
    5. '_' → logprob: -12.333196640014648
    6. ' (' → logprob: -12.458196640014648
    7. ' =(' → logprob: -12.458196640014648
    8. 's' → logprob: -12.833196640014648
    9. ')' → logprob: -12.958196640014648
    10. ',' → logprob: -13.833196640014648

Token 79: ' list' (ID: 1562)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0931665301322937
    2. '(map' → logprob: -2.8431665897369385
    3. ' map' → logprob: -3.8431665897369385
    4. '(' → logprob: -5.093166351318359
    5. 'list' → logprob: -6.718166351318359
    6. '(lambda' → logprob: -7.968166351318359
    7. ' (' → logprob: -7.968166351318359
    8. '(eval' → logprob: -8.21816635131836
    9. '(list' → logprob: -8.59316635131836
    10. '((' → logprob: -9.21816635131836

Token 80: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0023276021238416433
    2. '(' → logprob: -6.2523274421691895
    3. '(eval' → logprob: -7.8773274421691895
    4. '((' → logprob: -11.877327919006348
    5. '(
' → logprob: -12.627327919006348
    6. '(range' → logprob: -13.127327919006348
    7. 'map' → logprob: -13.502327919006348
    8. '(filter' → logprob: -13.502327919006348
    9. '(e' → logprob: -13.877327919006348
    10. '(lambda' → logprob: -14.002327919006348

Token 81: '(lambda' (ID: 43341)
  Prédit: '(eval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(eval' → logprob: -0.09043792635202408
    2. '(lambda' → logprob: -2.840437889099121
    3. '(' → logprob: -3.590437889099121
    4. '(str' → logprob: -8.715437889099121
    5. '(int' → logprob: -8.715437889099121
    6. '(
' → logprob: -9.340437889099121
    7. '(e' → logprob: -10.215437889099121
    8. 'eval' → logprob: -11.590437889099121
    9. ' (' → logprob: -12.715437889099121
    10. '   ' → logprob: -13.090437889099121

Token 82: ' x' (ID: 1215)
  Prédit: 'eval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eval' → logprob: -0.6513194441795349
    2. ' eval' → logprob: -1.4013195037841797
    3. 'expr' → logprob: -2.1513195037841797
    4. ' x' → logprob: -3.2763195037841797
    5. 'x' → logprob: -3.4013195037841797
    6. ' expr' → logprob: -4.15131950378418
    7. 'lambda' → logprob: -5.02631950378418
    8. ' op' → logprob: -5.77631950378418
    9. ' option' → logprob: -6.02631950378418
    10. 'e' → logprob: -6.15131950378418

Token 83: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0021384824067354202
    2. ' :' → logprob: -6.377138614654541
    3. 'eval' → logprob: -8.127138137817383
    4. '=' → logprob: -10.752138137817383
    5. '   ' → logprob: -10.752138137817383
    6. 'x' → logprob: -11.002138137817383
    7. ' ' → logprob: -11.127138137817383
    8. ':e' → logprob: -11.752138137817383
    9. 'lambda' → logprob: -12.127138137817383
    10. ' eval' → logprob: -12.127138137817383

Token 84: ' eval' (ID: 29383)
  Prédit: 'eval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eval' → logprob: -0.22643648087978363
    2. ' eval' → logprob: -1.6014364957809448
    3. 'int' → logprob: -8.351436614990234
    4. '(eval' → logprob: -8.601436614990234
    5. ' ' → logprob: -8.851436614990234
    6. 'x' → logprob: -9.226436614990234
    7. ' int' → logprob: -9.351436614990234
    8. '   ' → logprob: -9.351436614990234
    9. ' x' → logprob: -9.726436614990234
    10. ' str' → logprob: -10.476436614990234

Token 85: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.5393826365470886
    2. '(f' → logprob: -1.0393826961517334
    3. '(' → logprob: -3.0393826961517334
    4. '(a' → logprob: -4.789382457733154
    5. '('' → logprob: -5.789382457733154
    6. '(str' → logprob: -7.164382457733154
    7. '("' → logprob: -7.164382457733154
    8. 'x' → logprob: -7.164382457733154
    9. '("("' → logprob: -7.539382457733154
    10. '('(' → logprob: -8.414382934570312

Token 86: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05977439507842064
    2. ' ,' → logprob: -4.309774398803711
    3. '(a' → logprob: -4.434774398803711
    4. '('' → logprob: -4.809774398803711
    5. ',a' → logprob: -5.059774398803711
    6. '(f' → logprob: -5.309774398803711
    7. 'a' → logprob: -6.309774398803711
    8. ',f' → logprob: -6.434774398803711
    9. '   ' → logprob: -6.559774398803711
    10. '),' → logprob: -6.934774398803711

Token 87: ' {},' (ID: 32178)
  Prédit: '{''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{'' → logprob: -0.9894818067550659
    2. '{"' → logprob: -1.114481806755066
    3. ' {'' → logprob: -1.614481806755066
    4. ' {"' → logprob: -3.2394819259643555
    5. '{},' → logprob: -3.6144819259643555
    6. ' {},' → logprob: -4.1144819259643555
    7. 'globals' → logprob: -4.6144819259643555
    8. ' globals' → logprob: -5.4894819259643555
    9. '{' → logprob: -6.1144819259643555
    10. 'None' → logprob: -7.3644819259643555

Token 88: ' {'' (ID: 11881)
  Prédit: '{''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{'' → logprob: -0.19384650886058807
    2. '{"' → logprob: -1.8188464641571045
    3. ' {'' → logprob: -4.818846702575684
    4. 'dict' → logprob: -5.693846702575684
    5. '{' → logprob: -6.943846702575684
    6. ' {"' → logprob: -7.943846702575684
    7. '{
' → logprob: -8.318846702575684
    8. ' dict' → logprob: -8.568846702575684
    9. ' ' → logprob: -8.693846702575684
    10. 'locals' → logprob: -8.693846702575684

Token 89: 'a' (ID: 64)
  Prédit: ''a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''a' → logprob: -0.6361240148544312
    2. 'a' → logprob: -0.7611240148544312
    3. ''' → logprob: -5.761124134063721
    4. '{'' → logprob: -9.136123657226562
    5. ''m' → logprob: -10.261123657226562
    6. ' '' → logprob: -10.261123657226562
    7. '"a' → logprob: -10.261123657226562
    8. ''+' → logprob: -10.511123657226562
    9. ' a' → logprob: -10.511123657226562
    10. '**' → logprob: -10.886123657226562

Token 90: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.002671376569196582
    2. 'a' → logprob: -6.002671241760254
    3. ''a' → logprob: -9.877671241760254
    4. '=a' → logprob: -10.127671241760254
    5. ':' → logprob: -10.502671241760254
    6. ',' → logprob: -10.627671241760254
    7. ':a' → logprob: -10.877671241760254
    8. ''' → logprob: -11.752671241760254
    9. ',a' → logprob: -12.002671241760254
    10. ' a' → logprob: -12.377671241760254

Token 91: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004627241287380457
    2. ' a' → logprob: -5.379627227783203
    3. ' ' → logprob: -12.379627227783203
    4. '  ' → logprob: -14.254627227783203
    5. '	a' → logprob: -15.004627227783203
    6. '   ' → logprob: -15.379627227783203
    7. '>a' → logprob: -15.379627227783203
    8. ')a' → logprob: -15.629627227783203
    9. '<|end|>' → logprob: -15.754627227783203
    10. '    ' → logprob: -16.004627227783203

Token 92: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006359712220728397
    2. ' ,' → logprob: -6.006359577178955
    3. ',b' → logprob: -6.131359577178955
    4. ','' → logprob: -7.131359577178955
    5. ''b' → logprob: -7.381359577178955
    6. ' '' → logprob: -9.756360054016113
    7. '',' → logprob: -9.756360054016113
    8. ',
' → logprob: -10.381360054016113
    9. ''' → logprob: -10.756360054016113
    10. ' ,'' → logprob: -10.756360054016113

Token 93: ' '' (ID: 461)
  Prédit: ''b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''b' → logprob: -0.24860435724258423
    2. ' '' → logprob: -1.7486042976379395
    3. ''' → logprob: -3.1236042976379395
    4. 'b' → logprob: -7.2486042976379395
    5. ' b' → logprob: -7.6236042976379395
    6. ''a' → logprob: -8.248604774475098
    7. ' ' → logprob: -8.873604774475098
    8. ''t' → logprob: -9.498604774475098
    9. ''f' → logprob: -9.498604774475098
    10. ''m' → logprob: -10.123604774475098

Token 94: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.006730645429342985
    2. ' b' → logprob: -5.006730556488037
    3. ' ' → logprob: -11.631731033325195
    4. ''b' → logprob: -13.131731033325195
    5. '  ' → logprob: -13.756731033325195
    6. '<|end|>' → logprob: -14.381731033325195
    7. 'a' → logprob: -14.756731033325195
    8. ''' → logprob: -14.881731033325195
    9. '   ' → logprob: -15.131731033325195
    10. ')b' → logprob: -15.756731033325195

Token 95: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.0003243798855692148
    2. ',' → logprob: -8.875324249267578
    3. '',' → logprob: -9.375324249267578
    4. ''' → logprob: -10.000324249267578
    5. ' ':' → logprob: -10.625324249267578
    6. ':' → logprob: -11.500324249267578
    7. ''}' → logprob: -12.625324249267578
    8. 'a' → logprob: -12.875324249267578
    9. '':'' → logprob: -13.000324249267578
    10. ''a' → logprob: -13.375324249267578

Token 96: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.026304826140403748
    2. ' b' → logprob: -3.6513047218322754
    3. ' ' → logprob: -12.776305198669434
    4. '   ' → logprob: -14.526305198669434
    5. '  ' → logprob: -15.401305198669434
    6. '	b' → logprob: -15.526305198669434
    7. '(b' → logprob: -16.151304244995117
    8. ')b' → logprob: -16.276304244995117
    9. '    ' → logprob: -16.526304244995117
    10. ' ' → logprob: -16.651304244995117

Token 97: '}),' (ID: 81345)
  Prédit: '}),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}),' → logprob: -0.001760148094035685
    2. '}' → logprob: -6.626760005950928
    3. ',' → logprob: -8.626760482788086
    4. ' }),' → logprob: -8.876760482788086
    5. '}),
' → logprob: -9.376760482788086
    6. ')),' → logprob: -11.751760482788086
    7. '},' → logprob: -11.876760482788086
    8. '   ' → logprob: -12.126760482788086
    9. '})' → logprob: -13.001760482788086
    10. '),' → logprob: -13.126760482788086

Token 98: ' ['' (ID: 5140)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.12732596695423126
    2. '["' → logprob: -2.877326011657715
    3. '('' → logprob: -3.127326011657715
    4. ' ['' → logprob: -5.127326011657715
    5. '[
' → logprob: -5.377326011657715
    6. '[' → logprob: -6.252326011657715
    7. '["+' → logprob: -6.502326011657715
    8. '('+' → logprob: -6.627326011657715
    9. ' ('' → logprob: -6.752326011657715
    10. '("' → logprob: -6.877326011657715

Token 99: '2' (ID: 17)
  Prédit: ''a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''a' → logprob: -0.1088956892490387
    2. 'a' → logprob: -2.483895778656006
    3. '"a' → logprob: -4.233895778656006
    4. '"' → logprob: -6.483895778656006
    5. ''ab' → logprob: -6.733895778656006
    6. ''b' → logprob: -7.233895778656006
    7. ''' → logprob: -7.983895778656006
    8. ''(' → logprob: -8.108895301818848
    9. '['' → logprob: -8.233895301818848
    10. '   ' → logprob: -8.983895301818848

Token 100: '*a' (ID: 78448)
  Prédit: '*a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*a' → logprob: -0.015720989555120468
    2. ' *' → logprob: -4.890720844268799
    3. '*b' → logprob: -5.390720844268799
    4. '*' → logprob: -6.140720844268799
    5. 'a' → logprob: -7.390720844268799
    6. ''*' → logprob: -8.265721321105957
    7. '*(' → logprob: -8.515721321105957
    8. '**' → logprob: -9.390721321105957
    9. '"*' → logprob: -10.390721321105957
    10. '*c' → logprob: -10.890721321105957

Token 101: '-' (ID: 12)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.3271675109863281
    2. '+' → logprob: -1.5771675109863281
    3. '-' → logprob: -3.577167510986328
    4. '+b' → logprob: -3.952167510986328
    5. ' +' → logprob: -4.452167510986328
    6. '+',' → logprob: -5.327167510986328
    7. '*b' → logprob: -6.327167510986328
    8. '*' → logprob: -6.452167510986328
    9. '-b' → logprob: -6.577167510986328
    10. '','' → logprob: -6.827167510986328

Token 102: '1' (ID: 16)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.05968456715345383
    2. '1' → logprob: -3.0596845149993896
    3. '3' → logprob: -5.059684753417969
    4. ' b' → logprob: -5.684684753417969
    5. '2' → logprob: -7.934684753417969
    6. '5' → logprob: -8.059684753417969
    7. ' ' → logprob: -8.809684753417969
    8. '7' → logprob: -8.934684753417969
    9. 'a' → logprob: -8.934684753417969
    10. '4' → logprob: -10.434684753417969

Token 103: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.0016531638102605939
    2. '','' → logprob: -6.87665319442749
    3. '+' → logprob: -8.626652717590332
    4. '*' → logprob: -8.751652717590332
    5. ' ',' → logprob: -9.501652717590332
    6. '-' → logprob: -9.626652717590332
    7. ''' → logprob: -10.001652717590332
    8. '*b' → logprob: -10.751652717590332
    9. '',
' → logprob: -11.001652717590332
    10. ')',' → logprob: -11.126652717590332

Token 104: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3408219516277313
    2. ' '' → logprob: -1.3408219814300537
    3. ''a' → logprob: -4.340821743011475
    4. ''b' → logprob: -4.340821743011475
    5. ' ' → logprob: -8.840822219848633
    6. ''s' → logprob: -9.340822219848633
    7. ''ab' → logprob: -9.465822219848633
    8. '   ' → logprob: -9.465822219848633
    9. ''ac' → logprob: -9.590822219848633
    10. ''t' → logprob: -9.715822219848633

Token 105: '2' (ID: 17)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5940492153167725
    2. ''b' → logprob: -1.4690492153167725
    3. ''a' → logprob: -1.5940492153167725
    4. '2' → logprob: -4.969049453735352
    5. ' '' → logprob: -5.719049453735352
    6. '3' → logprob: -6.094049453735352
    7. ''(' → logprob: -7.219049453735352
    8. 'a' → logprob: -8.344049453735352
    9. ''m' → logprob: -8.469049453735352
    10. ''ab' → logprob: -8.844049453735352

Token 106: '*b' (ID: 72162)
  Prédit: '*b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*b' → logprob: -0.0020604499150067568
    2. '*a' → logprob: -6.252060413360596
    3. '*' → logprob: -9.752060890197754
    4. '**' → logprob: -10.002060890197754
    5. '*(' → logprob: -11.377060890197754
    6. 'b' → logprob: -12.502060890197754
    7. '+b' → logprob: -13.002060890197754
    8. ''*' → logprob: -13.252060890197754
    9. '*m' → logprob: -13.377060890197754
    10. '*c' → logprob: -14.252060890197754

Token 107: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1133044958114624
    2. '+' → logprob: -2.238304615020752
    3. ''+' → logprob: -8.863304138183594
    4. '',' → logprob: -9.613304138183594
    5. '*' → logprob: -9.863304138183594
    6. ' -' → logprob: -9.988304138183594
    7. ''-' → logprob: -10.613304138183594
    8. ',' → logprob: -10.613304138183594
    9. '']' → logprob: -10.863304138183594
    10. ' +' → logprob: -10.863304138183594

Token 108: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000573763158172369
    2. ' ' → logprob: -8.375574111938477
    3. '2' → logprob: -8.875574111938477
    4. 'a' → logprob: -9.938074111938477
    5. '-' → logprob: -10.188074111938477
    6. '3' → logprob: -10.563074111938477
    7. '+' → logprob: -10.750574111938477
    8. 'b' → logprob: -11.125574111938477
    9. '(' → logprob: -12.375574111938477
    10. ''' → logprob: -12.438074111938477

Token 109: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.0003643058007583022
    2. ',' → logprob: -9.125364303588867
    3. ''])' → logprob: -9.500364303588867
    4. '','' → logprob: -9.625364303588867
    5. '']' → logprob: -10.375364303588867
    6. ''' → logprob: -10.500364303588867
    7. ')',' → logprob: -11.375364303588867
    8. ']',' → logprob: -11.500364303588867
    9. ' ',' → logprob: -11.750364303588867
    10. '",' → logprob: -12.250364303588867

Token 110: ' '' (ID: 461)
  Prédit: ''a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''a' → logprob: -0.5321395993232727
    2. ' '' → logprob: -1.032139539718628
    3. ''' → logprob: -3.282139539718628
    4. ' '(' → logprob: -5.157139778137207
    5. ''(' → logprob: -5.282139778137207
    6. ''b' → logprob: -5.907139778137207
    7. ''m' → logprob: -6.532139778137207
    8. ''ab' → logprob: -6.782139778137207
    9. ''x' → logprob: -8.032139778137207
    10. ' ' → logprob: -8.407139778137207

Token 111: 'a' (ID: 64)
  Prédit: ''a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''a' → logprob: -0.012662561610341072
    2. ''' → logprob: -4.887662410736084
    3. ''(' → logprob: -5.512662410736084
    4. ''ab' → logprob: -8.012662887573242
    5. ''m' → logprob: -8.637662887573242
    6. ''b' → logprob: -9.012662887573242
    7. '2' → logprob: -9.387662887573242
    8. 'a' → logprob: -10.262662887573242
    9. ''x' → logprob: -10.262662887573242
    10. ''s' → logprob: -10.512662887573242

Token 112: '+b' (ID: 76609)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8537135720252991
    2. '+b' → logprob: -0.9787135720252991
    3. '*b' → logprob: -1.9787135124206543
    4. '*' → logprob: -3.3537135124206543
    5. ' +' → logprob: -4.228713512420654
    6. '-b' → logprob: -5.478713512420654
    7. '-' → logprob: -5.603713512420654
    8. ' *' → logprob: -7.728713512420654
    9. 'b' → logprob: -7.728713512420654
    10. '*a' → logprob: -7.978713512420654

Token 113: '']' (ID: 1089)
  Prédit: '']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']))' → logprob: -0.015163770876824856
    2. '']' → logprob: -5.140163898468018
    3. '}))' → logprob: -5.640163898468018
    4. '+' → logprob: -5.890163898468018
    5. ']))' → logprob: -6.515163898468018
    6. '"]))' → logprob: -8.01516342163086
    7. '-' → logprob: -8.14016342163086
    8. '']))
' → logprob: -8.51516342163086
    9. ''])' → logprob: -9.39016342163086
    10. '}' → logprob: -9.51516342163086

Token 114: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00043794067460112274
    2. ')))' → logprob: -8.00043773651123
    3. ')' → logprob: -9.25043773651123
    4. '))
' → logprob: -12.12543773651123
    5. ' ))' → logprob: -15.37543773651123
    6. ']))' → logprob: -15.87543773651123
    7. '))))' → logprob: -16.250438690185547
    8. '));' → logprob: -16.375438690185547
    9. '),' → logprob: -16.500438690185547
    10. '))

' → logprob: -16.750438690185547

Token 115: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.3822154111694545e-05
    2. '))' → logprob: -10.125043869018555
    3. '])' → logprob: -13.875043869018555
    4. ' )' → logprob: -14.125043869018555
    5. ')))' → logprob: -14.250043869018555
    6. ']' → logprob: -14.500043869018555
    7. ')
' → logprob: -14.750043869018555
    8. '#' → logprob: -15.750043869018555
    9. ')`' → logprob: -16.625043869018555
    10. '`)' → logprob: -16.875043869018555

Token 116: ' Util' (ID: 13564)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1994775377388578e-05
    2. '))' → logprob: -12.500012397766113
    3. ' )' → logprob: -12.875012397766113
    4. ']' → logprob: -13.250012397766113
    5. '#' → logprob: -13.750012397766113
    6. '])' → logprob: -13.875012397766113
    7. ')
' → logprob: -15.000012397766113
    8. '<|end|>' → logprob: -15.250012397766113
    9. ')#' → logprob: -15.500012397766113
    10. ')))' → logprob: -15.500012397766113

Token 117: 'ise' (ID: 1096)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008540578186511993
    2. 's' → logprob: -5.258540630340576
    3. '())' → logprob: -7.008540630340576
    4. 'z' → logprob: -8.008540153503418
    5. '(' → logprob: -8.258540153503418
    6. 'isez' → logprob: -8.258540153503418
    7. 'isateur' → logprob: -8.508540153503418
    8. 'ize' → logprob: -8.633540153503418
    9. '()' → logprob: -8.758540153503418
    10. '#' → logprob: -8.883540153503418

Token 118: ' une' (ID: 2463)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005487450980581343
    2. ')a' → logprob: -9.125548362731934
    3. '<|end|>' → logprob: -9.250548362731934
    4. 'a' → logprob: -9.500548362731934
    5. '(' → logprob: -9.750548362731934
    6. ' )' → logprob: -10.500548362731934
    7. ')
' → logprob: -10.625548362731934
    8. '[' → logprob: -10.750548362731934
    9. ']' → logprob: -10.875548362731934
    10. '#' → logprob: -11.250548362731934

Token 119: ' double' (ID: 3503)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.04718784987926483
    2. ')' → logprob: -3.1721878051757812
    3. ' max' → logprob: -6.797187805175781
    4. 'key' → logprob: -6.922187805175781
    5. 'min' → logprob: -7.172187805175781
    6. 'filter' → logprob: -8.172187805175781
    7. ',' → logprob: -8.172187805175781
    8. '#' → logprob: -9.172187805175781
    9. ')
' → logprob: -9.297187805175781
    10. ' key' → logprob: -9.547187805175781

Token 120: ' reduce' (ID: 10389)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6887403130531311
    2. ')' → logprob: -1.0637402534484863
    3. 'map' → logprob: -2.9387402534484863
    4. 'zip' → logprob: -3.5637402534484863
    5. 'parent' → logprob: -3.5637402534484863
    6. ' for' → logprob: -3.6887402534484863
    7. 'filter' → logprob: -5.688740253448486
    8. '`)' → logprob: -6.188740253448486
    9. 'reduce' → logprob: -6.188740253448486
    10. ' )' → logprob: -6.688740253448486

Token 121: ' et' (ID: 859)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.7003837823867798
    2. ')' → logprob: -1.2003837823867798
    3. '(re' → logprob: -1.8253837823867798
    4. '(' → logprob: -3.4503836631774902
    5. ',' → logprob: -5.57538366317749
    6. 'reduce' → logprob: -5.82538366317749
    7. '(options' → logprob: -7.82538366317749
    8. '(
' → logprob: -7.82538366317749
    9. 'lambda' → logprob: -8.075384140014648
    10. '.reduce' → logprob: -8.325384140014648

Token 122: ' un' (ID: 537)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5911657214164734
    2. ')' → logprob: -1.8411657810211182
    3. 'lambda' → logprob: -2.091165781021118
    4. ' max' → logprob: -2.341165781021118
    5. ' lambda' → logprob: -3.841165781021118
    6. 'reduce' → logprob: -3.841165781021118
    7. 'min' → logprob: -4.716165542602539
    8. 'map' → logprob: -5.591165542602539
    9. 'mul' → logprob: -5.716165542602539
    10. ' reduce' → logprob: -6.841165542602539

Token 123: ' lambda' (ID: 27871)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.20570585131645203
    2. 'min' → logprob: -2.7057058811187744
    3. 'lambda' → logprob: -2.7057058811187744
    4. ' max' → logprob: -3.8307058811187744
    5. 'key' → logprob: -4.580705642700195
    6. 'reduce' → logprob: -5.205705642700195
    7. ')' → logprob: -5.955705642700195
    8. 'zip' → logprob: -5.955705642700195
    9. 'filter' → logprob: -6.330705642700195
    10. ' key' → logprob: -6.580705642700195

Token 124: ' t' (ID: 260)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7148020267486572
    2. ')' → logprob: -1.2148020267486572
    3. '(lambda' → logprob: -1.5898020267486572
    4. '(max' → logprob: -6.464801788330078
    5. 'lambda' → logprob: -6.589801788330078
    6. '(
' → logprob: -6.714801788330078
    7. '(' → logprob: -7.214801788330078
    8. 'options' → logprob: -7.214801788330078
    9. ',
' → logprob: -7.214801788330078
    10. ')
' → logprob: -7.464801788330078

Token 125: 'ordu' (ID: 92108)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -1.2399187088012695
    2. '(lambda' → logprob: -1.2399187088012695
    3. ' lambda' → logprob: -1.3649187088012695
    4. ')' → logprob: -3.1149187088012695
    5. 'ambda' → logprob: -3.2399187088012695
    6. '=lambda' → logprob: -3.2399187088012695
    7. ',' → logprob: -3.3649187088012695
    8. ':' → logprob: -6.4899187088012695
    9. '):' → logprob: -6.7399187088012695
    10. 'o' → logprob: -6.8649187088012695

Token 126: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12146361917257309
    2. ',' → logprob: -2.2464635372161865
    3. ')
' → logprob: -5.621463775634766
    4. '(' → logprob: -6.371463775634766
    5. '(lambda' → logprob: -7.246463775634766
    6. '))' → logprob: -7.371463775634766
    7. '(options' → logprob: -7.746463775634766
    8. 'options' → logprob: -8.121463775634766
    9. '(
' → logprob: -8.621463775634766
    10. '(a' → logprob: -9.121463775634766

Token 127: ' obtenir' (ID: 54423)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2836468815803528
    2. ' max' → logprob: -1.783646821975708
    3. ')' → logprob: -3.158646821975708
    4. 'min' → logprob: -4.158647060394287
    5. 'lambda' → logprob: -5.033647060394287
    6. ' lambda' → logprob: -5.658647060394287
    7. ',' → logprob: -6.033647060394287
    8. 'a' → logprob: -6.533647060394287
    9. ' trouver' → logprob: -6.783647060394287
    10. ' key' → logprob: -6.783647060394287

Token 128: ' le' (ID: 505)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.11050084978342056
    2. ' max' → logprob: -2.6105008125305176
    3. 'lambda' → logprob: -4.110500812530518
    4. 'reduce' → logprob: -5.610500812530518
    5. 'min' → logprob: -5.735500812530518
    6. '(lambda' → logprob: -5.860500812530518
    7. '(max' → logprob: -6.235500812530518
    8. ' lambda' → logprob: -6.485500812530518
    9. ')' → logprob: -7.610500812530518
    10. ' min' → logprob: -8.485501289367676

Token 129: ' maximum' (ID: 10562)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3023785948753357
    2. 'maximum' → logprob: -1.9273786544799805
    3. ' maximum' → logprob: -3.1773786544799805
    4. ' max' → logprob: -3.1773786544799805
    5. ')' → logprob: -5.1773786544799805
    6. 'a' → logprob: -5.4273786544799805
    7. 'minimum' → logprob: -5.5523786544799805
    8. 'result' → logprob: -5.9273786544799805
    9. 'min' → logprob: -6.3023786544799805
    10. ' résultat' → logprob: -6.3023786544799805

Token 130: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03481714054942131
    2. ')
' → logprob: -4.284817218780518
    3. '))' → logprob: -5.034817218780518
    4. ',' → logprob: -5.784817218780518
    5. '(' → logprob: -6.034817218780518
    6. 'options' → logprob: -6.284817218780518
    7. 'a' → logprob: -6.909817218780518
    8. '))
' → logprob: -7.034817218780518
    9. '(
' → logprob: -7.159817218780518
    10. '(options' → logprob: -7.159817218780518

Token 131: 'res' (ID: 430)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4496566951274872
    2. 'result' → logprob: -1.4496567249298096
    3. ',' → logprob: -3.0746567249298096
    4. ')
' → logprob: -3.1996567249298096
    5. 'max' → logprob: -3.4496567249298096
    6. ',
' → logprob: -6.4496564865112305
    7. '))' → logprob: -6.6996564865112305
    8. 'options' → logprob: -7.0746564865112305
    9. 'res' → logprob: -7.1996564865112305
    10. '(max' → logprob: -7.3246564865112305

Token 132: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18156291544437408
    2. '=' → logprob: -1.806562900543213
    3. 'ult' → logprob: -6.431562900543213
    4. ')' → logprob: -8.681563377380371
    5. ',' → logprob: -11.056563377380371
    6. 'ultat' → logprob: -12.806563377380371
    7. 'ults' → logprob: -12.931563377380371
    8. ')=' → logprob: -13.056563377380371
    9. 'ULT' → logprob: -13.056563377380371
    10. 'ault' → logprob: -13.181563377380371

Token 133: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.05497436597943306
    2. ' reduce' → logprob: -2.929974317550659
    3. 'max' → logprob: -9.679974555969238
    4. ' max' → logprob: -10.679974555969238
    5. ' ' → logprob: -12.929974555969238
    6. '   ' → logprob: -13.929974555969238
    7. '  ' → logprob: -13.929974555969238
    8. ' functools' → logprob: -14.304974555969238
    9. 'redu' → logprob: -14.429974555969238
    10. '.reduce' → logprob: -15.304974555969238

Token 134: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.1318136304616928
    2. '(max' → logprob: -2.1318135261535645
    3. '(' → logprob: -5.3818135261535645
    4. 'max' → logprob: -9.256814002990723
    5. '(m' → logprob: -9.256814002990723
    6. '```' → logprob: -10.756814002990723
    7. 'lambda' → logprob: -10.881814002990723
    8. '(int' → logprob: -11.006814002990723
    9. '(
' → logprob: -11.756814002990723
    10. '(re' → logprob: -12.381814002990723

Token 135: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1488451361656189
    2. ' x' → logprob: -2.3988451957702637
    3. 'lambda' → logprob: -3.2738451957702637
    4. ' lambda' → logprob: -5.398845195770264
    5. 'a' → logprob: -5.648845195770264
    6. 'max' → logprob: -7.148845195770264
    7. ' a' → logprob: -7.648845195770264
    8. 'acc' → logprob: -9.773844718933105
    9. ' max' → logprob: -9.898844718933105
    10. '(lambda' → logprob: -9.898844718933105

Token 136: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.004696090007201e-05
    2. ' ,' → logprob: -10.000069618225098
    3. ',x' → logprob: -11.000069618225098
    4. ',y' → logprob: -12.875069618225098
    5. ',res' → logprob: -12.875069618225098
    6. 'lambda' → logprob: -14.500069618225098
    7. ',max' → logprob: -14.625069618225098
    8. ',m' → logprob: -15.000069618225098
    9. ',b' → logprob: -15.125069618225098
    10. ',
' → logprob: -15.125069618225098

Token 137: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.010346067138016224
    2. ' y' → logprob: -4.760345935821533
    3. 'lambda' → logprob: -6.385345935821533
    4. ' lambda' → logprob: -10.260346412658691
    5. '   ' → logprob: -13.385346412658691
    6. ' ' → logprob: -13.885346412658691
    7. '  ' → logprob: -14.010346412658691
    8. '    ' → logprob: -14.135346412658691
    9. 'f' → logprob: -14.135346412658691
    10. '(lambda' → logprob: -14.135346412658691

Token 138: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023650718852877617
    2. ',' → logprob: -3.773650646209717
    3. ' :' → logprob: -7.898650646209717
    4. ':max' → logprob: -11.148651123046875
    5. '=' → logprob: -11.898651123046875
    6. 'max' → logprob: -12.523651123046875
    7. 'lambda' → logprob: -12.773651123046875
    8. ' ,' → logprob: -12.898651123046875
    9. '=lambda' → logprob: -13.648651123046875
    10. ',max' → logprob: -14.273651123046875

Token 139: ' (' (ID: 350)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5955030918121338
    2. 'x' → logprob: -0.8455030918121338
    3. 'lambda' → logprob: -4.720502853393555
    4. ' x' → logprob: -5.095502853393555
    5. ' max' → logprob: -5.595502853393555
    6. ' lambda' → logprob: -8.845502853393555
    7. '(max' → logprob: -8.970502853393555
    8. 'a' → logprob: -8.970502853393555
    9. '(x' → logprob: -9.470502853393555
    10. '(lambda' → logprob: -9.595502853393555

Token 140: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03091149777173996
    2. 'max' → logprob: -4.030911445617676
    3. ' x' → logprob: -4.530911445617676
    4. '(x' → logprob: -7.280911445617676
    5. 'lambda' → logprob: -7.780911445617676
    6. 'y' → logprob: -7.905911445617676
    7. 'a' → logprob: -8.780911445617676
    8. ' max' → logprob: -9.030911445617676
    9. '(max' → logprob: -9.905911445617676
    10. '(lambda' → logprob: -10.780911445617676

Token 141: ' +' (ID: 659)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.029123010113835335
    2. 'if' → logprob: -3.904123067855835
    3. ',' → logprob: -4.779122829437256
    4. '[' → logprob: -10.404123306274414
    5. '>' → logprob: -10.529123306274414
    6. ',y' → logprob: -10.904123306274414
    7. ' ,' → logprob: -11.029123306274414
    8. ')' → logprob: -11.404123306274414
    9. ' >' → logprob: -11.779123306274414
    10. '+' → logprob: -11.779123306274414

Token 142: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.02174605429172516
    2. ' y' → logprob: -4.2717461585998535
    3. '[y' → logprob: -6.0217461585998535
    4. '[' → logprob: -6.2717461585998535
    5. '(y' → logprob: -6.3967461585998535
    6. '(' → logprob: -7.5217461585998535
    7. 'max' → logprob: -8.021745681762695
    8. '1' → logprob: -8.271745681762695
    9. ' [' → logprob: -9.271745681762695
    10. '[max' → logprob: -9.646745681762695

Token 143: ' +' (ID: 659)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.261972039937973
    2. ')' → logprob: -2.136971950531006
    3. 'if' → logprob: -2.886971950531006
    4. ',' → logprob: -2.886971950531006
    5. '),' → logprob: -7.636971950531006
    6. ' ,' → logprob: -8.636972427368164
    7. ' ' → logprob: -9.636972427368164
    8. ' )' → logprob: -9.761972427368164
    9. '>' → logprob: -10.386972427368164
    10. '   ' → logprob: -10.636972427368164

Token 144: ' abs' (ID: 8443)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.48365360498428345
    2. 'abs' → logprob: -1.4836535453796387
    3. ' ' → logprob: -3.1086535453796387
    4. ' abs' → logprob: -3.4836535453796387
    5. '2' → logprob: -4.108653545379639
    6. 'max' → logprob: -4.358653545379639
    7. ' max' → logprob: -4.483653545379639
    8. ' (' → logprob: -4.733653545379639
    9. ' x' → logprob: -4.858653545379639
    10. 'x' → logprob: -5.358653545379639

Token 145: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -3.297462171758525e-05
    2. 'x' → logprob: -10.625033378601074
    3. '(' → logprob: -11.750033378601074
    4. '(y' → logprob: -15.000033378601074
    5. ' x' → logprob: -15.750033378601074
    6. '((' → logprob: -16.375032424926758
    7. '(
' → logprob: -16.500032424926758
    8. ' (' → logprob: -17.250032424926758
    9. '	x' → logprob: -18.125032424926758
    10. ')x' → logprob: -19.500032424926758

Token 146: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3135759234428406
    2. '-' → logprob: -1.3135759830474854
    3. '-y' → logprob: -8.313575744628906
    4. 'y' → logprob: -10.313575744628906
    5. ' ' → logprob: -10.438575744628906
    6. ',' → logprob: -12.938575744628906
    7. ' y' → logprob: -13.438575744628906
    8. '  ' → logprob: -13.688575744628906
    9. '   ' → logprob: -14.938575744628906
    10. ' ' → logprob: -15.813575744628906

Token 147: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3868729770183563
    2. ' y' → logprob: -1.1368730068206787
    3. ' ' → logprob: -13.636873245239258
    4. ' ' → logprob: -15.386873245239258
    5. '	y' → logprob: -15.886873245239258
    6. 'x' → logprob: -16.011873245239258
    7. '2' → logprob: -17.386873245239258
    8. '  ' → logprob: -17.386873245239258
    9. '   ' → logprob: -17.386873245239258
    10. ',' → logprob: -17.386873245239258

Token 148: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01819407381117344
    2. ')//' → logprob: -4.018194198608398
    3. ' )' → logprob: -10.268194198608398
    4. ')>>' → logprob: -12.143194198608398
    5. '))' → logprob: -13.393194198608398
    6. ')/' → logprob: -14.268194198608398
    7. '//' → logprob: -14.268194198608398
    8. '   ' → logprob: -14.893194198608398
    9. ')#' → logprob: -15.143194198608398
    10. ')
' → logprob: -15.393194198608398

Token 149: ' //' (ID: 602)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17397642135620117
    2. ')' → logprob: -1.9239764213562012
    3. ' //' → logprob: -4.798976421356201
    4. '//' → logprob: -5.423976421356201
    5. ')//' → logprob: -7.673976421356201
    6. ' ,' → logprob: -8.42397689819336
    7. '>>' → logprob: -9.29897689819336
    8. ')/' → logprob: -9.92397689819336
    9. ' )' → logprob: -10.17397689819336
    10. ' ' → logprob: -10.67397689819336

Token 150: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.007609586231410503
    2. ' ' → logprob: -4.8826093673706055
    3. '   ' → logprob: -13.132609367370605
    4. '  ' → logprob: -14.382609367370605
    5. ' ' → logprob: -15.632609367370605
    6. '    ' → logprob: -15.882609367370605
    7. '```' → logprob: -16.257610321044922
    8. ',' → logprob: -16.820110321044922
    9. ''' → logprob: -16.945110321044922
    10. '	' → logprob: -17.132610321044922

Token 151: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002967320033349097
    2. ' ' → logprob: -8.125296592712402
    3. '   ' → logprob: -15.250296592712402
    4. '1' → logprob: -15.875296592712402
    5. '  ' → logprob: -16.37529754638672
    6. '```' → logprob: -16.50029754638672
    7. '    ' → logprob: -17.75029754638672
    8. '
' → logprob: -17.87529754638672
    9. '۲' → logprob: -17.87529754638672
    10. '3' → logprob: -18.00029754638672

Token 152: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00030709904967807233
    2. ' ,' → logprob: -8.250307083129883
    3. ')' → logprob: -11.125307083129883
    4. ',
' → logprob: -11.875307083129883
    5. '),' → logprob: -12.125307083129883
    6. ',res' → logprob: -12.125307083129883
    7. 'res' → logprob: -12.750307083129883
    8. ',y' → logprob: -12.875307083129883
    9. '   ' → logprob: -13.250307083129883
    10. ',x' → logprob: -13.375307083129883

Token 153: ' options' (ID: 3880)
  Prédit: 'options'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'options' → logprob: -0.04859213903546333
    2. ' options' → logprob: -3.0485920906066895
    3. '	options' → logprob: -12.923592567443848
    4. '(options' → logprob: -14.548592567443848
    5. 'option' → logprob: -14.673592567443848
    6. ' ' → logprob: -15.048592567443848
    7. '   ' → logprob: -15.048592567443848
    8. ')' → logprob: -15.173592567443848
    9. '$options' → logprob: -15.298592567443848
    10. '.options' → logprob: -16.04859161376953

Token 154: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.73183855926618e-05
    2. '))' → logprob: -9.625077247619629
    3. ' )' → logprob: -11.875077247619629
    4. ')
' → logprob: -12.750077247619629
    5. ')))' → logprob: -14.000077247619629
    6. ')`' → logprob: -15.750077247619629
    7. ')#' → logprob: -15.750077247619629
    8. ')

' → logprob: -16.125078201293945
    9. ')
' → logprob: -17.750078201293945
    10. ')**' → logprob: -17.875078201293945

Token 155: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006899170693941414
    2. 'print' → logprob: -7.37568998336792
    3. ')
' → logprob: -10.125689506530762
    4. '#' → logprob: -11.750689506530762
    5. '))' → logprob: -12.250689506530762
    6. ')

' → logprob: -13.250689506530762
    7. ' )' → logprob: -13.375689506530762
    8. ')#' → logprob: -13.500689506530762
    9. ']' → logprob: -14.000689506530762
    10. ')`' → logprob: -14.375689506530762

Token 156: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.07894619554281235
    2. '(' → logprob: -2.578946113586426
    3. '(print' → logprob: -10.703946113586426
    4. '('' → logprob: -10.828946113586426
    5. 'res' → logprob: -12.328946113586426
    6. '()' → logprob: -13.203946113586426
    7. ' (' → logprob: -13.453946113586426
    8. '(max' → logprob: -13.578946113586426
    9. '((' → logprob: -13.703946113586426
    10. '(result' → logprob: -14.453946113586426

Token 157: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009188431431539357
    2. '))' → logprob: -7.000918865203857
    3. ')))' → logprob: -12.5009183883667
    4. ' )' → logprob: -13.5009183883667
    5. '`)' → logprob: -14.3759183883667
    6. ')
' → logprob: -14.5009183883667
    7. ')`' → logprob: -15.1259183883667
    8. '')' → logprob: -15.3759183883667
    9. '#' → logprob: -15.5009183883667
    10. '())' → logprob: -15.7509183883667


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 155
Tokens correctement prédits (1ère position, stricte): 47
Tokens correctement prédits (1ère position, avec adaptation): 47
Tokens correctement prédits (top 10): 101
Précision stricte (1ère position): 30.32%
Précision adaptée (1ère position): 30.32%
Précision (top 10): 65.16%
================================================================================
