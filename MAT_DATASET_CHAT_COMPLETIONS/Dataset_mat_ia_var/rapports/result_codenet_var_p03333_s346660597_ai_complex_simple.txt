================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:15
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import itemgetter
from itertools import count, chain, cycle, starmap, takewhile

N = int(input())
indices = list(range(N))
LRs = list(starmap(lambda l, r, i: (l, r, i), 
                   (map(int, input().split()) + (i,) for i in indices)))
Ls = sorted(LRs, key=itemgetter(0))
Rs = sorted(LRs, key=itemgetter(1))

def traverse(direction):
    done = set()
    pos = 0
    score = 0
    iL, iR = N-1, 0

    cycle_getters = [
        lambda: ( # negative direction
            ((pos, Rs[j][1], Rs[j][2]) for j in range(iR, N) if Rs[j][2] not in done),
            lambda j: N if j == N else next(x[1] for x in Rs[j:])
        ),
        lambda: ( # positive direction
            ((pos, Ls[j][0], Ls[j][2]) for j in range(iL, -1, -1) if Ls[j][2] not in done),
            lambda j: -1 if j < 0 else next(x[1] for x in Ls[:j+1][::-1])
        )
    ]

    pointers = [lambda: (iR, N, 1), lambda: (iL, -1, -1)]
    seqidx = 0 if direction == 'neg' else 1

    for k in count():
        # Move in current direction
        total, step, step_sign = pointers[seqidx%2]()
        seq = (Rs if seqidx%2 == 0 else Ls)
        getter = [itemgetter(1), itemgetter(0)][seqidx % 2]
        # Skip done
        while 0 <= total < N and seq[total][2] in done:
            total += step_sign
        if total < 0 or total >= N:
            break
        xNext = getter(seq[total])
        if (seqidx % 2 == 0 and pos < xNext) or (seqidx % 2 == 1 and pos > xNext):
            break
        score += abs(pos - xNext)
        pos = xNext
        done.add(seq[total][2])
        if seqidx %2 == 0:
            iR = total + 1
        else:
            iL = total - 1
        seqidx += 1
    return score + abs(pos)

ans = max(traverse('neg'), traverse('pos'))
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.612085223197937
    2. 'wrap' → logprob: -0.862085223197937
    3. 'reduce' → logprob: -3.4870853424072266
    4. 'l' → logprob: -6.112085342407227
    5. ' wraps' → logprob: -6.487085342407227
    6. 'cached' → logprob: -7.612085342407227
    7. 'cache' → logprob: -8.112085342407227
    8. 'cmp' → logprob: -9.237085342407227
    9. '```' → logprob: -9.237085342407227
    10. ' partial' → logprob: -9.612085342407227

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010317044332623482
    2. '(lambda' → logprob: -4.760316848754883
    3. ' (' → logprob: -7.385316848754883
    4. ',' → logprob: -7.885316848754883
    5. 'def' → logprob: -8.135316848754883
    6. '.' → logprob: -8.635316848754883
    7. '```' → logprob: -10.135316848754883
    8. '(
' → logprob: -10.385316848754883
    9. 'lambda' → logprob: -10.635316848754883
    10. ' ' → logprob: -10.760316848754883

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014403714798390865
    2. '(
' → logprob: -5.139403820037842
    3. '(lambda' → logprob: -5.389403820037842
    4. 'def' → logprob: -6.639403820037842
    5. ',' → logprob: -7.139403820037842
    6. '\' → logprob: -8.139403343200684
    7. ' ' → logprob: -8.264403343200684
    8. ' (' → logprob: -8.389403343200684
    9. '
' → logprob: -9.139403343200684
    10. '' → logprob: -9.139403343200684

Token 6: ' operator' (ID: 11019)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.9289020299911499
    2. ' operator' → logprob: -1.42890202999115
    3. ' itertools' → logprob: -1.55390202999115
    4. ' collections' → logprob: -1.92890202999115
    5. ' os' → logprob: -4.9289021492004395
    6. 'operator' → logprob: -7.4289021492004395
    7. ' sys' → logprob: -8.553901672363281
    8. ' typing' → logprob: -8.553901672363281
    9. 'collections' → logprob: -8.928901672363281
    10. 'math' → logprob: -9.053901672363281

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.04439019411802292
    2. 'import' → logprob: -3.6693902015686035
    3. '.' → logprob: -4.1693902015686035
    4. ' ' → logprob: -6.1693902015686035
    5. ' .' → logprob: -8.419389724731445
    6. '.import' → logprob: -9.169389724731445
    7. '	import' → logprob: -11.419389724731445
    8. '_import' → logprob: -11.544389724731445
    9. '<|end|>' → logprob: -11.794389724731445
    10. ' Import' → logprob: -13.169389724731445

Token 8: ' item' (ID: 2169)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.31903505325317383
    2. ' import' → logprob: -1.9440350532531738
    3. 'add' → logprob: -2.444035053253174
    4. ' ' → logprob: -4.069035053253174
    5. ' mul' → logprob: -4.194035053253174
    6. 'import' → logprob: -4.819035053253174
    7. 'mul' → logprob: -6.194035053253174
    8. ' item' → logprob: -8.694034576416016
    9. 'item' → logprob: -9.569034576416016
    10. ' ad' → logprob: -9.819034576416016

Token 9: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.008991529233753681
    2. 'get' → logprob: -4.758991718292236
    3. 'getitem' → logprob: -8.008991241455078
    4. 'gett' → logprob: -10.258991241455078
    5. 'item' → logprob: -12.258991241455078
    6. 'g' → logprob: -12.883991241455078
    7. 'ge' → logprob: -14.133991241455078
    8. 'gt' → logprob: -15.758991241455078
    9. 'attr' → logprob: -15.758991241455078
    10. 'got' → logprob: -15.758991241455078

Token 10: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6076061725616455
    2. ',' → logprob: -1.7326061725616455
    3. '\n' → logprob: -1.9826061725616455
    4. '\' → logprob: -2.8576061725616455
    5. '(
' → logprob: -2.9826061725616455
    6. ',
' → logprob: -5.107605934143066
    7. '.' → logprob: -5.232605934143066
    8. '()' → logprob: -5.732605934143066
    9. '
' → logprob: -5.857605934143066
    10. 'newline' → logprob: -6.232605934143066

Token 11: 'from' (ID: 2845)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0324721336364746
    2. '(' → logprob: -1.5324721336364746
    3. '\' → logprob: -2.2824721336364746
    4. '\n' → logprob: -2.7824721336364746
    5. 'def' → logprob: -2.7824721336364746
    6. '(
' → logprob: -2.9074721336364746
    7. ',
' → logprob: -3.5324721336364746
    8. '.' → logprob: -4.157472133636475
    9. '
' → logprob: -4.157472133636475
    10. '`' → logprob: -4.157472133636475

Token 12: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.09373306483030319
    2. ' collections' → logprob: -2.593733072280884
    3. ' math' → logprob: -4.343732833862305
    4. 'collections' → logprob: -7.343732833862305
    5. ' os' → logprob: -7.593732833862305
    6. ' operator' → logprob: -8.968732833862305
    7. 'math' → logprob: -8.968732833862305
    8. ' heap' → logprob: -9.093732833862305
    9. ' typing' → logprob: -9.343732833862305
    10. ' datetime' → logprob: -10.593732833862305

Token 13: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0626659244298935
    2. 'import' → logprob: -2.8126659393310547
    3. '.' → logprob: -7.937665939331055
    4. ' .' → logprob: -8.937665939331055
    5. ' ' → logprob: -9.187665939331055
    6. '.import' → logprob: -9.437665939331055
    7. ' itertools' → logprob: -11.687665939331055
    8. '	import' → logprob: -11.687665939331055
    9. '_import' → logprob: -12.937665939331055
    10. '.groupby' → logprob: -13.312665939331055

Token 14: ' count' (ID: 3605)
  Prédit: ' group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' group' → logprob: -0.554575502872467
    2. 'group' → logprob: -0.929575502872467
    3. 'is' → logprob: -5.179575443267822
    4. 'acc' → logprob: -5.304575443267822
    5. 'chain' → logprob: -5.429575443267822
    6. ' chain' → logprob: -5.554575443267822
    7. ' is' → logprob: -5.804575443267822
    8. 'com' → logprob: -6.179575443267822
    9. 'count' → logprob: -6.179575443267822
    10. ' accumulate' → logprob: -6.679575443267822

Token 15: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.026544230058789253
    2. ',' → logprob: -4.651544094085693
    3. '\n' → logprob: -5.026544094085693
    4. '(
' → logprob: -5.276544094085693
    5. '\' → logprob: -6.401544094085693
    6. '()' → logprob: -7.276544094085693
    7. 'def' → logprob: -7.526544094085693
    8. '
' → logprob: -8.026544570922852
    9. '```' → logprob: -8.651544570922852
    10. ')' → logprob: -8.901544570922852

Token 16: ' chain' (ID: 13464)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.4204699993133545
    2. ' group' → logprob: -1.9204699993133545
    3. 'take' → logprob: -2.1704699993133545
    4. 'group' → logprob: -2.4204699993133545
    5. 'is' → logprob: -2.4204699993133545
    6. 'cycle' → logprob: -2.5454699993133545
    7. ' cycle' → logprob: -2.7954699993133545
    8. ' take' → logprob: -3.2954699993133545
    9. 'acc' → logprob: -3.4204699993133545
    10. 'chain' → logprob: -3.6704699993133545

Token 17: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.24749435484409332
    2. ',' → logprob: -2.2474944591522217
    3. '(
' → logprob: -2.4974944591522217
    4. '\n' → logprob: -5.122494220733643
    5. '\' → logprob: -5.372494220733643
    6. ',
' → logprob: -5.372494220733643
    7. '()' → logprob: -5.497494220733643
    8. 'def' → logprob: -5.872494220733643
    9. '```' → logprob: -6.122494220733643
    10. '(

' → logprob: -6.372494220733643

Token 18: ' cycle' (ID: 15839)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.5738490223884583
    2. 'is' → logprob: -1.8238489627838135
    3. 'repeat' → logprob: -3.0738489627838135
    4. ' group' → logprob: -3.1988489627838135
    5. 'group' → logprob: -3.5738489627838135
    6. 'cycle' → logprob: -3.8238489627838135
    7. ' cycle' → logprob: -4.073849201202393
    8. 'filter' → logprob: -4.073849201202393
    9. ' st' → logprob: -4.073849201202393
    10. 'take' → logprob: -4.448849201202393

Token 19: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5295935273170471
    2. ',' → logprob: -1.5295934677124023
    3. '\' → logprob: -3.0295934677124023
    4. '(
' → logprob: -3.4045934677124023
    5. '\n' → logprob: -3.7795934677124023
    6. '.' → logprob: -4.029593467712402
    7. '[' → logprob: -4.529593467712402
    8. 'def' → logprob: -4.654593467712402
    9. ',
' → logprob: -4.904593467712402
    10. '```' → logprob: -5.404593467712402

Token 20: ' st' (ID: 420)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.0076621770858765
    2. 'is' → logprob: -1.2576621770858765
    3. 'repeat' → logprob: -1.7576621770858765
    4. 'drop' → logprob: -3.507662296295166
    5. 'filter' → logprob: -3.757662296295166
    6. ' repeat' → logprob: -3.757662296295166
    7. 'group' → logprob: -4.132662296295166
    8. ' group' → logprob: -4.132662296295166
    9. 'acc' → logprob: -4.257662296295166
    10. ' drop' → logprob: -4.257662296295166

Token 21: 'arm' (ID: 2218)
  Prédit: 'arm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arm' → logprob: -0.14362786710262299
    2. 'ar' → logprob: -2.018627882003784
    3. 'r' → logprob: -8.143628120422363
    4. 'art' → logprob: -8.268628120422363
    5. 'arp' → logprob: -8.768628120422363
    6. 'arb' → logprob: -9.893628120422363
    7. 'arst' → logprob: -10.768628120422363
    8. 'arn' → logprob: -10.893628120422363
    9. 'a' → logprob: -10.893628120422363
    10. 'arl' → logprob: -11.268628120422363

Token 22: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -1.8624639324116288e-06
    2. 'atch' → logprob: -14.375001907348633
    3. 'ep' → logprob: -14.750001907348633
    4. 'apse' → logprob: -15.625001907348633
    5. 'apping' → logprob: -16.125001907348633
    6. 'ethod' → logprob: -16.375001907348633
    7. '```' → logprob: -16.375001907348633
    8. 'apper' → logprob: -16.500001907348633
    9. 'up' → logprob: -16.750001907348633
    10. 'a' → logprob: -16.875001907348633

Token 23: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39743417501449585
    2. ',
' → logprob: -2.0224342346191406
    3. 'def' → logprob: -3.2724342346191406
    4. '(' → logprob: -3.3974342346191406
    5. ',

' → logprob: -3.7724342346191406
    6. '#' → logprob: -4.022434234619141
    7. '
' → logprob: -4.397434234619141
    8. '(
' → logprob: -4.522434234619141
    9. 'import' → logprob: -4.647434234619141
    10. '.' → logprob: -5.397434234619141

Token 24: ' take' (ID: 2304)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -1.7125539779663086
    2. 'group' → logprob: -1.7125539779663086
    3. 'acc' → logprob: -1.7125539779663086
    4. 'compress' → logprob: -2.4625539779663086
    5. 'tee' → logprob: -2.5875539779663086
    6. 'take' → logprob: -2.9625539779663086
    7. 'filter' → logprob: -3.0875539779663086
    8. ' is' → logprob: -3.3375539779663086
    9. ' group' → logprob: -3.4625539779663086
    10. 'com' → logprob: -3.4625539779663086

Token 25: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.002071633003652096
    2. 'import' → logprob: -7.377071857452393
    3. 'n' → logprob: -7.877071857452393
    4. 'from' → logprob: -8.502071380615234
    5. 'While' → logprob: -8.502071380615234
    6. 'exact' → logprob: -9.127071380615234
    7. '```' → logprob: -9.627071380615234
    8. 't' → logprob: -9.877071380615234
    9. 'hile' → logprob: -9.877071380615234
    10. 'it' → logprob: -10.002071380615234

Token 26: '

' (ID: 279)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19990475475788116
    2. '(' → logprob: -2.699904680252075
    3. ',
' → logprob: -3.324904680252075
    4. '(
' → logprob: -3.949904680252075
    5. '#' → logprob: -4.574904918670654
    6. '\' → logprob: -4.574904918670654
    7. '.' → logprob: -5.074904918670654
    8. 'import' → logprob: -5.074904918670654
    9. '
' → logprob: -5.199904918670654
    10. 'def' → logprob: -5.949904918670654

Token 27: 'N' (ID: 45)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.42405155301094055
    2. 'd' → logprob: -1.6740515232086182
    3. 'def' → logprob: -2.924051523208618
    4. '#' → logprob: -3.549051523208618
    5. '(
' → logprob: -4.049051761627197
    6. ',' → logprob: -4.049051761627197
    7. '.' → logprob: -4.424051761627197
    8. '_' → logprob: -5.549051761627197
    9. '=' → logprob: -5.799051761627197
    10. ':' → logprob: -6.049051761627197

Token 28: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6016578674316406
    2. '_' → logprob: -0.9766578674316406
    3. ' =' → logprob: -2.9766578674316406
    4. ',' → logprob: -4.351657867431641
    5. 'a' → logprob: -6.351657867431641
    6. '.' → logprob: -6.351657867431641
    7. 'E' → logprob: -6.601657867431641
    8. ')' → logprob: -6.976657867431641
    9. 'um' → logprob: -7.101657867431641
    10. ' ' → logprob: -7.601657867431641

Token 29: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.021212955936789513
    2. '10' → logprob: -4.396213054656982
    3. '100' → logprob: -4.896213054656982
    4. '1' → logprob: -8.146212577819824
    5. '20' → logprob: -8.521212577819824
    6. '5' → logprob: -8.896212577819824
    7. '0' → logprob: -9.146212577819824
    8. '50' → logprob: -9.271212577819824
    9. ' int' → logprob: -9.396212577819824
    10. ' count' → logprob: -9.646212577819824

Token 30: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007480737753212452
    2. '('' → logprob: -5.132480621337891
    3. '(input' → logprob: -6.632480621337891
    4. ''' → logprob: -9.75748062133789
    5. '("("' → logprob: -10.13248062133789
    6. '("' → logprob: -10.50748062133789
    7. '(
' → logprob: -11.38248062133789
    8. '()' → logprob: -11.38248062133789
    9. '```' → logprob: -11.50748062133789
    10. '(open' → logprob: -11.88248062133789

Token 31: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5923080444335938
    2. '()' → logprob: -0.9673080444335938
    3. '())' → logprob: -2.9673080444335938
    4. ')' → logprob: -5.092308044433594
    5. '('' → logprob: -5.092308044433594
    6. '(()' → logprob: -6.342308044433594
    7. '("("' → logprob: -8.217308044433594
    8. '(
' → logprob: -8.342308044433594
    9. '(`' → logprob: -8.967308044433594
    10. '(

' → logprob: -9.342308044433594

Token 32: 'indices' (ID: 30992)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.483492910861969
    2. 'lst' → logprob: -1.9834928512573242
    3. 'numbers' → logprob: -3.108492851257324
    4. 'arr' → logprob: -3.483492851257324
    5. 'a' → logprob: -3.733492851257324
    6. 'nums' → logprob: -3.858492851257324
    7. 'items' → logprob: -3.858492851257324
    8. 'matrix' → logprob: -4.108492851257324
    9. 'elements' → logprob: -4.108492851257324
    10. 'result' → logprob: -4.233492851257324

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5594598054885864
    2. '=' → logprob: -1.1844598054885864
    3. '[' → logprob: -2.684459686279297
    4. '(' → logprob: -3.309459686279297
    5. '_' → logprob: -4.684459686279297
    6. ')' → logprob: -6.559459686279297
    7. '[:]' → logprob: -6.559459686279297
    8. '[]' → logprob: -6.684459686279297
    9. '.' → logprob: -7.059459686279297
    10. '=[' → logprob: -7.184459686279297

Token 34: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.3934415876865387
    2. 'list' → logprob: -1.2684415578842163
    3. ' [' → logprob: -4.393441677093506
    4. ' chain' → logprob: -4.768441677093506
    5. 'chain' → logprob: -4.893441677093506
    6. '[' → logprob: -5.643441677093506
    7. '[]' → logprob: -5.893441677093506
    8. 'range' → logprob: -6.018441677093506
    9. ' []' → logprob: -6.518441677093506
    10. '(list' → logprob: -6.643441677093506

Token 35: '(range' (ID: 50017)
  Prédit: '(chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(chain' → logprob: -0.370601624250412
    2. '(' → logprob: -1.4956016540527344
    3. '(range' → logprob: -2.6206016540527344
    4. '(item' → logprob: -5.495601654052734
    5. '(st' → logprob: -5.995601654052734
    6. '(indices' → logprob: -6.370601654052734
    7. '(t' → logprob: -6.745601654052734
    8. '(map' → logprob: -6.995601654052734
    9. '(filter' → logprob: -7.370601654052734
    10. '<|end|>' → logprob: -8.120601654052734

Token 36: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.011132710613310337
    2. '(' → logprob: -4.511132717132568
    3. '(n' → logprob: -9.51113224029541
    4. '(len' → logprob: -12.38613224029541
    5. '(
' → logprob: -13.51113224029541
    6. '(-' → logprob: -13.76113224029541
    7. ')' → logprob: -13.88613224029541
    8. ' (' → logprob: -14.13613224029541
    9. '((' → logprob: -14.13613224029541
    10. '(M' → logprob: -14.88613224029541

Token 37: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0002986392646562308
    2. ')' → logprob: -8.500298500061035
    3. '))
' → logprob: -10.500298500061035
    4. ')))' → logprob: -10.500298500061035
    5. ' ))' → logprob: -10.500298500061035
    6. ',' → logprob: -12.125298500061035
    7. '),' → logprob: -12.875298500061035
    8. '+' → logprob: -14.000298500061035
    9. '))

' → logprob: -14.000298500061035
    10. '));' → logprob: -14.375298500061035

Token 38: 'LR' (ID: 29067)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11599293351173401
    2. '[' → logprob: -3.615993022918701
    3. '
' → logprob: -3.865993022918701
    4. ')
' → logprob: -4.240993022918701
    5. '.' → logprob: -4.615993022918701
    6. '[
' → logprob: -4.990993022918701
    7. ' ' → logprob: -5.490993022918701
    8. '' → logprob: -5.490993022918701
    9. 'for' → logprob: -6.240993022918701
    10. '_' → logprob: -6.240993022918701

Token 39: 's' (ID: 82)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6793442368507385
    2. '=' → logprob: -0.8043442368507385
    3. '_' → logprob: -4.304344177246094
    4. '_pairs' → logprob: -4.554344177246094
    5. 'S' → logprob: -4.679344177246094
    6. 's' → logprob: -5.304344177246094
    7. 'C' → logprob: -6.429344177246094
    8. '=[]' → logprob: -7.179344177246094
    9. ')' → logprob: -7.554344177246094
    10. '_ranges' → logprob: -7.679344177246094

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06212352216243744
    2. '=' → logprob: -2.8121235370635986
    3. '<|end|>' → logprob: -9.81212329864502
    4. ',' → logprob: -10.93712329864502
    5. ')' → logprob: -10.93712329864502
    6. '[' → logprob: -11.06212329864502
    7. 's' → logprob: -11.06212329864502
    8. '.' → logprob: -11.93712329864502
    9. '<|end|>' → logprob: -12.43712329864502
    10. '[:]' → logprob: -12.68712329864502

Token 41: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6620771884918213
    2. ' [' → logprob: -1.4120771884918213
    3. '[list' → logprob: -1.5370771884918213
    4. '[int' → logprob: -4.287076950073242
    5. '[]' → logprob: -5.412076950073242
    6. 'list' → logprob: -6.037076950073242
    7. '[List' → logprob: -7.537076950073242
    8. ' []' → logprob: -7.537076950073242
    9. '[array' → logprob: -7.662076950073242
    10. ' list' → logprob: -7.662076950073242

Token 42: '(st' (ID: 4065)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.12597258388996124
    2. '(chain' → logprob: -2.5009725093841553
    3. '(' → logprob: -3.5009725093841553
    4. '(st' → logprob: -5.375972747802734
    5. '(filter' → logprob: -8.000972747802734
    6. '(range' → logprob: -8.250972747802734
    7. '(zip' → logprob: -8.375972747802734
    8. '(input' → logprob: -8.500972747802734
    9. '(t' → logprob: -9.125972747802734
    10. '(int' → logprob: -9.250972747802734

Token 43: 'arm' (ID: 2218)
  Prédit: 'arm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arm' → logprob: -0.00013607845176011324
    2. 'map' → logprob: -9.375136375427246
    3. 'ar' → logprob: -10.000136375427246
    4. 'arp' → logprob: -13.250136375427246
    5. 'erm' → logprob: -14.000136375427246
    6. 'r' → logprob: -14.375136375427246
    7. 'art' → logprob: -14.750136375427246
    8. 'am' → logprob: -14.875136375427246
    9. 'pm' → logprob: -14.875136375427246
    10. 'ram' → logprob: -15.875136375427246

Token 44: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -6.869017852295656e-06
    2. 'map' → logprob: -12.000006675720215
    3. 'app' → logprob: -15.125006675720215
    4. 'a' → logprob: -16.62500762939453
    5. 'ап' → logprob: -16.62500762939453
    6. 'apper' → logprob: -16.87500762939453
    7. 'apping' → logprob: -17.25000762939453
    8. 'apse' → logprob: -17.37500762939453
    9. '```' → logprob: -17.37500762939453
    10. 'at' → logprob: -17.62500762939453

Token 45: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.10591831058263779
    2. '(' → logprob: -3.2309184074401855
    3. '(tuple' → logprob: -3.6059184074401855
    4. '(range' → logprob: -3.8559184074401855
    5. '(item' → logprob: -5.1059184074401855
    6. '(int' → logprob: -5.7309184074401855
    7. '((' → logprob: -6.2309184074401855
    8. '(
' → logprob: -7.8559184074401855
    9. ')' → logprob: -8.355917930603027
    10. '(t' → logprob: -9.355917930603027

Token 46: ' l' (ID: 305)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.6159430146217346
    2. ' lambda' → logprob: -0.9909430146217346
    3. 'a' → logprob: -3.36594295501709
    4. ' a' → logprob: -4.11594295501709
    5. 'x' → logprob: -5.11594295501709
    6. ' x' → logprob: -5.24094295501709
    7. 'l' → logprob: -5.61594295501709
    8. 's' → logprob: -5.74094295501709
    9. '_,' → logprob: -5.86594295501709
    10. ' i' → logprob: -6.11594295501709

Token 47: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20173034071922302
    2. ',r' → logprob: -1.7017303705215454
    3. 'r' → logprob: -9.076730728149414
    4. ' ,' → logprob: -9.701730728149414
    5. ',i' → logprob: -10.201730728149414
    6. ',R' → logprob: -10.701730728149414
    7. ',
' → logprob: -10.951730728149414
    8. '_,' → logprob: -11.576730728149414
    9. ',l' → logprob: -11.826730728149414
    10. ' r' → logprob: -12.451730728149414

Token 48: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.004102977458387613
    2. ' r' → logprob: -5.504103183746338
    3. ' ' → logprob: -12.12910270690918
    4. 'l' → logprob: -12.25410270690918
    5. '```' → logprob: -12.62910270690918
    6. '   ' → logprob: -13.50410270690918
    7. '	r' → logprob: -13.75410270690918
    8. 'L' → logprob: -14.12910270690918
    9. 'u' → logprob: -14.50410270690918
    10. '

' → logprob: -14.56660270690918

Token 49: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0808122307062149
    2. ',' → logprob: -2.7058122158050537
    3. ' :' → logprob: -4.705812454223633
    4. ',l' → logprob: -7.830812454223633
    5. ' ,' → logprob: -8.080812454223633
    6. ',:' → logprob: -8.205812454223633
    7. ':l' → logprob: -8.205812454223633
    8. ':,' → logprob: -9.705812454223633
    9. ':(' → logprob: -9.955812454223633
    10. ':list' → logprob: -9.955812454223633

Token 50: ' i' (ID: 575)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6786194443702698
    2. ' r' → logprob: -1.928619384765625
    3. 'r' → logprob: -2.053619384765625
    4. '   ' → logprob: -3.303619384765625
    5. ' i' → logprob: -3.928619384765625
    6. ' indices' → logprob: -4.053619384765625
    7. ' ' → logprob: -4.303619384765625
    8. ' :' → logprob: -4.428619384765625
    9. ' l' → logprob: -4.678619384765625
    10. 'indices' → logprob: -4.803619384765625

Token 51: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012086842907592654
    2. ' :' → logprob: -6.876208782196045
    3. ',' → logprob: -9.126208305358887
    4. ':l' → logprob: -11.251208305358887
    5. ':index' → logprob: -11.751208305358887
    6. 's' → logprob: -12.376208305358887
    7. 'n' → logprob: -12.626208305358887
    8. ':
' → logprob: -12.751208305358887
    9. ':n' → logprob: -12.751208305358887
    10. ',:' → logprob: -12.876208305358887

Token 52: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.2580097019672394
    2. '(l' → logprob: -1.883009672164917
    3. '(i' → logprob: -3.008009672164917
    4. '(r' → logprob: -4.383009910583496
    5. '(lambda' → logprob: -5.258009910583496
    6. '(' → logprob: -5.758009910583496
    7. '   ' → logprob: -6.008009910583496
    8. ' ' → logprob: -7.133009910583496
    9. '  ' → logprob: -8.258009910583496
    10. '(L' → logprob: -8.758009910583496

Token 53: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.05343739688396454
    2. '(l' → logprob: -3.8034374713897705
    3. ' l' → logprob: -3.9284374713897705
    4. 'indices' → logprob: -6.178437232971191
    5. 'i' → logprob: -6.303437232971191
    6. ' (' → logprob: -6.428437232971191
    7. '(i' → logprob: -6.803437232971191
    8. '   ' → logprob: -7.553437232971191
    9. ' ' → logprob: -8.053437232971191
    10. '	l' → logprob: -8.178437232971191

Token 54: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012588762678205967
    2. '-' → logprob: -4.762588977813721
    3. ' -' → logprob: -6.262588977813721
    4. ',r' → logprob: -6.637588977813721
    5. ',i' → logprob: -8.012588500976562
    6. ' ,' → logprob: -8.762588500976562
    7. '+' → logprob: -9.762588500976562
    8. ' ' → logprob: -10.512588500976562
    9. ' +' → logprob: -10.512588500976562
    10. 'r' → logprob: -10.950088500976562

Token 55: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.02639167383313179
    2. ' r' → logprob: -3.6513917446136475
    3. ' ' → logprob: -10.526391983032227
    4. '   ' → logprob: -10.901391983032227
    5. 'i' → logprob: -11.901391983032227
    6. '  ' → logprob: -12.026391983032227
    7. ')' → logprob: -12.463891983032227
    8. ',' → logprob: -12.713891983032227
    9. '(r' → logprob: -13.026391983032227
    10. '	r' → logprob: -13.088891983032227

Token 56: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008862070390023291
    2. '+' → logprob: -8.375885963439941
    3. '-' → logprob: -8.750885963439941
    4. ')' → logprob: -9.250885963439941
    5. ' ,' → logprob: -9.375885963439941
    6. ',i' → logprob: -9.500885963439941
    7. '),' → logprob: -9.625885963439941
    8. ' +' → logprob: -9.625885963439941
    9. ' -' → logprob: -10.750885963439941
    10. '))' → logprob: -11.250885963439941

Token 57: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04976221174001694
    2. ' i' → logprob: -3.04976224899292
    3. 'indices' → logprob: -7.29976224899292
    4. ' indices' → logprob: -8.674761772155762
    5. ')' → logprob: -9.299761772155762
    6. ' ' → logprob: -9.799761772155762
    7. '   ' → logprob: -9.924761772155762
    8. '  ' → logprob: -10.674761772155762
    9. ')i' → logprob: -10.799761772155762
    10. '	i' → logprob: -10.924761772155762

Token 58: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7317804098129272
    2. '),' → logprob: -0.7317804098129272
    3. '+' → logprob: -3.481780529022217
    4. ' +' → logprob: -6.106780529022217
    5. ')' → logprob: -6.231780529022217
    6. '-' → logprob: -6.856780529022217
    7. '),(' → logprob: -7.731780529022217
    8. ' ' → logprob: -8.606780052185059
    9. ' ,' → logprob: -8.981780052185059
    10. ')(' → logprob: -8.981780052185059

Token 59: ' 
' (ID: 793)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.5266422629356384
    2. 'chain' → logprob: -1.7766423225402832
    3. 'map' → logprob: -2.901642322540283
    4. 'zip' → logprob: -3.151642322540283
    5. 'take' → logprob: -3.401642322540283
    6. ')' → logprob: -3.526642322540283
    7. ' enumerate' → logprob: -4.776642322540283
    8. 'indices' → logprob: -4.776642322540283
    9. '[(' → logprob: -5.026642322540283
    10. '[' → logprob: -5.151642322540283

Token 60: '                  ' (ID: 8854)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.19083517789840698
    2. 'zip' → logprob: -2.1908352375030518
    3. 'chain' → logprob: -4.065834999084473
    4. ' enumerate' → logprob: -4.440834999084473
    5. 'take' → logprob: -4.690834999084473
    6. ' zip' → logprob: -4.690834999084473
    7. 'st' → logprob: -5.815834999084473
    8. ')' → logprob: -6.315834999084473
    9. '   ' → logprob: -6.565834999084473
    10. 'map' → logprob: -6.690834999084473

Token 61: ' (' (ID: 350)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.24326634407043457
    2. 'zip' → logprob: -1.9932663440704346
    3. ' enumerate' → logprob: -3.6182663440704346
    4. ' zip' → logprob: -3.7432663440704346
    5. '[(' → logprob: -4.4932661056518555
    6. 'chain' → logprob: -5.6182661056518555
    7. 'take' → logprob: -5.7432661056518555
    8. 'st' → logprob: -6.1182661056518555
    9. 'filter' → logprob: -6.4932661056518555
    10. 'map' → logprob: -6.7432661056518555

Token 62: 'map' (ID: 3726)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -1.1361050605773926
    2. 'enumer' → logprob: -1.1361050605773926
    3. '(zip' → logprob: -2.2611050605773926
    4. 'map' → logprob: -2.8861050605773926
    5. ' zip' → logprob: -3.6361050605773926
    6. '(st' → logprob: -3.6361050605773926
    7. '((' → logprob: -3.7611050605773926
    8. ' (' → logprob: -3.8861050605773926
    9. ' enumerate' → logprob: -4.261105060577393
    10. 'st' → logprob: -4.386105060577393

Token 63: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0026162052527070045
    2. '(lambda' → logprob: -6.1276164054870605
    3. '(' → logprob: -7.8776164054870605
    4. '(tuple' → logprob: -10.627615928649902
    5. '(str' → logprob: -11.502615928649902
    6. 'int' → logprob: -12.002615928649902
    7. '<int' → logprob: -13.127615928649902
    8. ' int' → logprob: -13.627615928649902
    9. 'lambda' → logprob: -13.877615928649902
    10. '(list' → logprob: -13.877615928649902

Token 64: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.8157059550285339
    2. '(input' → logprob: -1.0657060146331787
    3. ',' → logprob: -1.5657060146331787
    4. 'input' → logprob: -6.0657057762146
    5. '(' → logprob: -6.6907057762146
    6. ' input' → logprob: -9.065706253051758
    7. ')' → logprob: -9.190706253051758
    8. '(line' → logprob: -9.315706253051758
    9. ',(' → logprob: -9.690706253051758
    10. ',line' → logprob: -9.690706253051758

Token 65: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.014484546147286892
    2. ' input' → logprob: -4.264484405517578
    3. '(input' → logprob: -8.264484405517578
    4. ')' → logprob: -10.389484405517578
    5. ',input' → logprob: -11.139484405517578
    6. ' ' → logprob: -12.389484405517578
    7. '<input' → logprob: -12.514484405517578
    8. '=input' → logprob: -12.889484405517578
    9. '	input' → logprob: -13.264484405517578
    10. '[input' → logprob: -13.639484405517578

Token 66: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.1279553291387856e-05
    2. '()' → logprob: -11.500011444091797
    3. ')' → logprob: -15.125011444091797
    4. '.split' → logprob: -15.250011444091797
    5. ' ().' → logprob: -15.500011444091797
    6. '(' → logprob: -16.000011444091797
    7. 'split' → logprob: -16.125011444091797
    8. '()
' → logprob: -16.875011444091797
    9. '   ' → logprob: -17.500011444091797
    10. '())' → logprob: -17.750011444091797

Token 67: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0025018174201250076
    2. 'strip' → logprob: -6.002501964569092
    3. 'rstrip' → logprob: -11.002501487731934
    4. ' split' → logprob: -11.752501487731934
    5. 'read' → logprob: -14.752501487731934
    6. '(split' → logprob: -14.752501487731934
    7. ' ' → logprob: -15.377501487731934
    8. '().' → logprob: -15.502501487731934
    9. 'spl' → logprob: -15.877501487731934
    10. '.split' → logprob: -16.37750244140625

Token 68: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.03040093183517456
    2. '()))' → logprob: -3.6554009914398193
    3. '()' → logprob: -5.90540075302124
    4. '())))' → logprob: -6.65540075302124
    5. '()),' → logprob: -10.530401229858398
    6. '())
' → logprob: -10.905401229858398
    7. ')' → logprob: -11.780401229858398
    8. '()))
' → logprob: -11.905401229858398
    9. '())))
' → logprob: -12.030401229858398
    10. ' ())' → logprob: -12.905401229858398

Token 69: ' +' (ID: 659)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.4186261892318726
    2. ')' → logprob: -1.5436261892318726
    3. ',' → logprob: -1.9186261892318726
    4. '())' → logprob: -2.043626308441162
    5. '(),' → logprob: -2.168626308441162
    6. '()))' → logprob: -3.293626308441162
    7. 'enumer' → logprob: -3.543626308441162
    8. '),' → logprob: -4.043626308441162
    9. '())))' → logprob: -4.293626308441162
    10. ')))' → logprob: -4.418626308441162

Token 70: ' (' (ID: 350)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.8203810453414917
    2. ' [' → logprob: -1.0703810453414917
    3. '[' → logprob: -1.5703810453414917
    4. '[index' → logprob: -4.945381164550781
    5. '[ind' → logprob: -8.070381164550781
    6. '[idx' → logprob: -8.320381164550781
    7. ' ' → logprob: -9.070381164550781
    8. '(i' → logprob: -9.195381164550781
    9. ' (' → logprob: -9.320381164550781
    10. '[count' → logprob: -9.320381164550781

Token 71: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.06241979822516441
    2. '(' → logprob: -3.687419891357422
    3. '(indices' → logprob: -4.312419891357422
    4. '(index' → logprob: -4.937419891357422
    5. '[i' → logprob: -5.062419891357422
    6. '(idx' → logprob: -5.562419891357422
    7. ' (' → logprob: -6.187419891357422
    8. '(n' → logprob: -7.062419891357422
    9. '[' → logprob: -7.187419891357422
    10. '[index' → logprob: -8.437419891357422

Token 72: ',)' (ID: 83132)
  Prédit: ',)'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',)' → logprob: -0.0004481885116547346
    2. ',' → logprob: -7.750448226928711
    3. ' for' → logprob: -11.750448226928711
    4. ',)
' → logprob: -12.125448226928711
    5. ')' → logprob: -13.500448226928711
    6. 'for' → logprob: -14.125448226928711
    7. ',),' → logprob: -14.250448226928711
    8. ' ,' → logprob: -14.250448226928711
    9. ',))
' → logprob: -14.750448226928711
    10. '  ' → logprob: -15.750448226928711

Token 73: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.02385793998837471
    2. 'for' → logprob: -4.648858070373535
    3. ')' → logprob: -5.023858070373535
    4. ',)' → logprob: -5.148858070373535
    5. ' ' → logprob: -7.148858070373535
    6. '   ' → logprob: -7.523858070373535
    7. '  ' → logprob: -8.398858070373535
    8. ' )' → logprob: -10.398858070373535
    9. '     ' → logprob: -11.898858070373535
    10. '    ' → logprob: -11.898858070373535

Token 74: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.22961443662643433
    2. ' i' → logprob: -1.604614496231079
    3. 'indices' → logprob: -6.3546142578125
    4. ' range' → logprob: -6.8546142578125
    5. 'range' → logprob: -7.4796142578125
    6. ' indices' → logprob: -7.6046142578125
    7. ' in' → logprob: -9.3546142578125
    8. 'enumer' → logprob: -9.4796142578125
    9. ' ' → logprob: -10.4796142578125
    10. 'idx' → logprob: -10.4796142578125

Token 75: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0011793931480497122
    2. 'in' → logprob: -6.751179218292236
    3. ' ' → logprob: -12.751179695129395
    4. '<|end|>' → logprob: -13.126179695129395
    5. 'range' → logprob: -13.376179695129395
    6. ',' → logprob: -13.501179695129395
    7. ' range' → logprob: -14.001179695129395
    8. '  ' → logprob: -15.876179695129395
    9. ')' → logprob: -16.501178741455078
    10. 'indices' → logprob: -16.626178741455078

Token 76: ' indices' (ID: 30378)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.09067191928625107
    2. ' indices' → logprob: -3.090672016143799
    3. ' range' → logprob: -3.840672016143799
    4. 'range' → logprob: -3.965672016143799
    5. 'count' → logprob: -7.715672016143799
    6. '(indices' → logprob: -9.09067153930664
    7. ' ' → logprob: -9.09067153930664
    8. ' count' → logprob: -10.59067153930664
    9. '   ' → logprob: -11.21567153930664
    10. '"indices' → logprob: -11.59067153930664

Token 77: ')))
' (ID: 12562)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3882082402706146
    2. ')))' → logprob: -1.138208270072937
    3. ')' → logprob: -6.763208389282227
    4. '))))' → logprob: -9.263208389282227
    5. '))
' → logprob: -10.263208389282227
    6. ')))
' → logprob: -10.888208389282227
    7. ' ))' → logprob: -11.388208389282227
    8. ')));' → logprob: -11.638208389282227
    9. ' ' → logprob: -13.388208389282227
    10. '),' → logprob: -13.513208389282227

Token 78: 'Ls' (ID: 125232)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015771914273500443
    2. ')
' → logprob: -5.140771865844727
    3. '
' → logprob: -5.265771865844727
    4. ',
' → logprob: -7.390771865844727
    5. '\n' → logprob: -7.515771865844727
    6. '' → logprob: -7.765771865844727
    7. '.sort' → logprob: -7.765771865844727
    8. '```' → logprob: -8.265771865844727
    9. '  
' → logprob: -8.390771865844727
    10. '.' → logprob: -8.515771865844727

Token 79: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4397951364517212
    2. '=' → logprob: -1.3147951364517212
    3. ',' → logprob: -2.4397950172424316
    4. '<|end|>' → logprob: -10.31479549407959
    5. 's' → logprob: -11.18979549407959
    6. '.' → logprob: -11.18979549407959
    7. ' ,' → logprob: -11.56479549407959
    8. ')' → logprob: -11.56479549407959
    9. '=[]' → logprob: -12.31479549407959
    10. ' ' → logprob: -12.56479549407959

Token 80: ' sorted' (ID: 20099)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.6312626600265503
    2. 'list' → logprob: -1.3812626600265503
    3. ' [' → logprob: -2.38126277923584
    4. '[item' → logprob: -2.75626277923584
    5. '[' → logprob: -3.75626277923584
    6. '[list' → logprob: -4.38126277923584
    7. '[i' → logprob: -4.88126277923584
    8. 'sorted' → logprob: -5.25626277923584
    9. 'map' → logprob: -5.75626277923584
    10. ' sorted' → logprob: -6.00626277923584

Token 81: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.468108206987381
    2. '([' → logprob: -1.2181081771850586
    3. '(' → logprob: -4.093108177185059
    4. '((' → logprob: -4.218108177185059
    5. '(map' → logprob: -4.593108177185059
    6. '(item' → logprob: -4.593108177185059
    7. '({' → logprob: -4.968108177185059
    8. '(i' → logprob: -5.093108177185059
    9. '(set' → logprob: -5.468108177185059
    10. '(chain' → logprob: -5.968108177185059

Token 82: 'Rs' (ID: 46194)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5847964286804199
    2. 'R' → logprob: -1.70979642868042
    3. 'Rs' → logprob: -2.08479642868042
    4. ',' → logprob: -2.58479642868042
    5. ')' → logprob: -4.20979642868042
    6. ' for' → logprob: -4.33479642868042
    7. '[i' → logprob: -4.95979642868042
    8. '[' → logprob: -5.33479642868042
    9. '(key' → logprob: -5.83479642868042
    10. 'S' → logprob: -5.83479642868042

Token 83: ',' (ID: 11)
  Prédit: ',key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',key' → logprob: -0.356067031621933
    2. ',' → logprob: -1.2310670614242554
    3. 'key' → logprob: -4.981067180633545
    4. ')' → logprob: -7.356067180633545
    5. '[key' → logprob: -10.606066703796387
    6. ' key' → logprob: -10.981066703796387
    7. ' ,' → logprob: -11.731066703796387
    8. '(key' → logprob: -12.231066703796387
    9. ',
' → logprob: -12.356066703796387
    10. '_key' → logprob: -12.606066703796387

Token 84: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.005255933851003647
    2. ' key' → logprob: -5.380255699157715
    3. 'item' → logprob: -7.880255699157715
    4. '0' → logprob: -9.130255699157715
    5. ',key' → logprob: -9.755255699157715
    6. 'lambda' → logprob: -10.005255699157715
    7. '1' → logprob: -10.630255699157715
    8. '   ' → logprob: -12.380255699157715
    9. '	key' → logprob: -12.380255699157715
    10. 'operator' → logprob: -13.130255699157715

Token 85: '=item' (ID: 76091)
  Prédit: '=item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=item' → logprob: -0.03627984970808029
    2. '=' → logprob: -3.5362799167633057
    3. '=lambda' → logprob: -5.036279678344727
    4. 'item' → logprob: -11.786279678344727
    5. '=i' → logprob: -15.161279678344727
    6. '=id' → logprob: -15.536279678344727
    7. '=
' → logprob: -15.536279678344727
    8. '=}' → logprob: -15.661279678344727
    9. '=

' → logprob: -15.661279678344727
    10. '=value' → logprob: -15.786279678344727

Token 86: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -8.351697033504024e-05
    2. 'get' → logprob: -9.625083923339844
    3. '_get' → logprob: -12.625083923339844
    4. 'Getter' → logprob: -13.000083923339844
    5. '@Getter' → logprob: -13.500083923339844
    6. '=get' → logprob: -13.500083923339844
    7. ' getter' → logprob: -13.750083923339844
    8. 'operator' → logprob: -13.875083923339844
    9. 'getitem' → logprob: -14.125083923339844
    10. '|get' → logprob: -14.125083923339844

Token 87: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1428578644990921
    2. '0' → logprob: -2.017857789993286
    3. ' (' → logprob: -9.767857551574707
    4. '```' → logprob: -10.267857551574707
    5. '`' → logprob: -10.392857551574707
    6. '(
' → logprob: -10.892857551574707
    7. '1' → logprob: -11.267857551574707
    8. ' ' → logprob: -11.642857551574707
    9. ')(' → logprob: -12.642857551574707
    10. '('' → logprob: -12.642857551574707

Token 88: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001010538311675191
    2. '1' → logprob: -7.501010417938232
    3. ' ' → logprob: -7.751010417938232
    4. '   ' → logprob: -12.00101089477539
    5. '
' → logprob: -12.87601089477539
    6. '2' → logprob: -12.93851089477539
    7. '[' → logprob: -13.00101089477539
    8. ')' → logprob: -13.06351089477539
    9. '`' → logprob: -13.25101089477539
    10. '  ' → logprob: -13.25101089477539

Token 89: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.02162741869688034
    2. ')' → logprob: -3.896627426147461
    3. '),' → logprob: -7.521627426147461
    4. ' ))' → logprob: -8.396627426147461
    5. ',' → logprob: -8.771627426147461
    6. ')))' → logprob: -9.896627426147461
    7. '))
' → logprob: -10.021627426147461
    8. '))[' → logprob: -10.771627426147461
    9. ' )' → logprob: -11.146627426147461
    10. '1' → logprob: -11.521627426147461

Token 90: 'Rs' (ID: 46194)
  Prédit: 'Rs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rs' → logprob: -0.01570984162390232
    2. 'R' → logprob: -4.26570987701416
    3. ',' → logprob: -7.01570987701416
    4. ')' → logprob: -8.14070987701416
    5. ' Rs' → logprob: -9.01570987701416
    6. 's' → logprob: -9.89070987701416
    7. '.' → logprob: -10.51570987701416
    8. 'RS' → logprob: -10.64070987701416
    9. '```' → logprob: -10.89070987701416
    10. ',
' → logprob: -11.51570987701416

Token 91: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42907997965812683
    2. '=' → logprob: -1.0540800094604492
    3. 'sorted' → logprob: -8.55408000946045
    4. ',' → logprob: -9.05408000946045
    5. ')' → logprob: -11.05408000946045
    6. '_sorted' → logprob: -11.17908000946045
    7. 's' → logprob: -11.92908000946045
    8. '.' → logprob: -11.92908000946045
    9. ' ' → logprob: -12.30408000946045
    10. ' sorted' → logprob: -12.67908000946045

Token 92: ' sorted' (ID: 20099)
  Prédit: ' sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -0.16029632091522217
    2. 'sorted' → logprob: -1.9102963209152222
    3. '(sorted' → logprob: -10.535296440124512
    4. '=' → logprob: -11.660296440124512
    5. ' ' → logprob: -11.660296440124512
    6. 's' → logprob: -12.285296440124512
    7. 'orted' → logprob: -12.285296440124512
    8. '[' → logprob: -12.660296440124512
    9. '.sorted' → logprob: -12.660296440124512
    10. '  ' → logprob: -13.035296440124512

Token 93: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.00018327576981391758
    2. '(' → logprob: -8.75018310546875
    3. 'LR' → logprob: -11.25018310546875
    4. '(
' → logprob: -12.75018310546875
    5. '(R' → logprob: -12.87518310546875
    6. '((' → logprob: -13.37518310546875
    7. '(l' → logprob: -13.75018310546875
    8. ' (' → logprob: -14.62518310546875
    9. '(

' → logprob: -14.87518310546875
    10. ' ' → logprob: -15.12518310546875

Token 94: 'Rs' (ID: 46194)
  Prédit: 'Rs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rs' → logprob: -0.0005837726057507098
    2. 'R' → logprob: -7.625583648681641
    3. 'RS' → logprob: -10.25058364868164
    4. 's' → logprob: -10.25058364868164
    5. 'rs' → logprob: -10.75058364868164
    6. ' Rs' → logprob: -13.50058364868164
    7. '(R' → logprob: -14.50058364868164
    8. ')' → logprob: -14.87558364868164
    9. 'SR' → logprob: -14.87558364868164
    10. 'r' → logprob: -15.37558364868164

Token 95: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011574854142963886
    2. ',key' → logprob: -7.251157283782959
    3. ' ,' → logprob: -7.751157283782959
    4. 'key' → logprob: -11.876157760620117
    5. ',item' → logprob: -12.251157760620117
    6. ' key' → logprob: -13.001157760620117
    7. '(key' → logprob: -14.001157760620117
    8. '(' → logprob: -14.251157760620117
    9. '),' → logprob: -14.251157760620117
    10. ',
' → logprob: -15.376157760620117

Token 96: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.5231468677520752
    2. ' key' → logprob: -0.8981468677520752
    3. ' ' → logprob: -11.648146629333496
    4. '  ' → logprob: -12.523146629333496
    5. ',key' → logprob: -12.523146629333496
    6. '(key' → logprob: -13.648146629333496
    7. '1' → logprob: -13.898146629333496
    8. '	key' → logprob: -13.898146629333496
    9. '   ' → logprob: -13.898146629333496
    10. 'lambda' → logprob: -14.148146629333496

Token 97: '=item' (ID: 76091)
  Prédit: '=item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=item' → logprob: -0.002030230825766921
    2. 'item' → logprob: -6.377030372619629
    3. '(item' → logprob: -8.752030372619629
    4. ')item' → logprob: -9.877030372619629
    5. '(' → logprob: -10.002030372619629
    6. 'getitem' → logprob: -10.377030372619629
    7. ':item' → logprob: -11.127030372619629
    8. ' item' → logprob: -11.877030372619629
    9. '=lambda' → logprob: -12.002030372619629
    10. '=' → logprob: -12.377030372619629

Token 98: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.023833725601434708
    2. '(' → logprob: -3.773833751678467
    3. '0' → logprob: -8.398833274841309
    4. 'getitem' → logprob: -8.523833274841309
    5. 'get' → logprob: -9.898833274841309
    6. '1' → logprob: -10.148833274841309
    7. '```' → logprob: -10.898833274841309
    8. 'item' → logprob: -11.023833274841309
    9. ' ' → logprob: -11.398833274841309
    10. '(-' → logprob: -11.898833274841309

Token 99: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16167576611042023
    2. '1' → logprob: -1.9116758108139038
    3. '2' → logprob: -6.661675930023193
    4. '```' → logprob: -9.911675453186035
    5. '(
' → logprob: -10.036675453186035
    6. '
' → logprob: -10.286675453186035
    7. ')' → logprob: -11.536675453186035
    8. '`' → logprob: -11.911675453186035
    9. '   ' → logprob: -12.161675453186035
    10. '[' → logprob: -13.036675453186035

Token 100: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -12.750004768371582
    3. ')' → logprob: -14.750004768371582
    4. '0' → logprob: -14.875004768371582
    5. '   ' → logprob: -15.750004768371582
    6. '```' → logprob: -15.875004768371582
    7. '[' → logprob: -16.062503814697266
    8. 'r' → logprob: -16.125003814697266
    9. '
' → logprob: -16.250003814697266
    10. '  ' → logprob: -17.750003814697266

Token 101: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018164927139878273
    2. '))' → logprob: -4.018165111541748
    3. ' )' → logprob: -11.76816463470459
    4. ')))' → logprob: -12.51816463470459
    5. '1' → logprob: -14.01816463470459
    6. ')
' → logprob: -14.89316463470459
    7. '0' → logprob: -15.01816463470459
    8. '),' → logprob: -15.14316463470459
    9. ')`' → logprob: -15.14316463470459
    10. ')>' → logprob: -15.64316463470459

Token 102: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5620048642158508
    2. '[' → logprob: -2.187004804611206
    3. '(' → logprob: -2.437004804611206
    4. ',' → logprob: -2.812004804611206
    5. '#' → logprob: -3.062004804611206
    6. 'for' → logprob: -3.812004804611206
    7. ':' → logprob: -4.437005043029785
    8. '(
' → logprob: -4.562005043029785
    9. ',
' → logprob: -4.812005043029785
    10. '[]' → logprob: -4.937005043029785

Token 103: ' traverse' (ID: 66957)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.8738628625869751
    2. ' merge' → logprob: -1.498862862586975
    3. ' count' → logprob: -2.2488627433776855
    4. ' cover' → logprob: -2.6238627433776855
    5. ' overlap' → logprob: -3.4988627433776855
    6. ' max' → logprob: -3.6238627433776855
    7. ' solve' → logprob: -3.9988627433776855
    8. ' overlapping' → logprob: -4.3738627433776855
    9. ' coverage' → logprob: -4.4988627433776855
    10. ' main' → logprob: -4.6238627433776855

Token 104: '(direction' (ID: 97422)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.3190104365348816
    2. '(' → logprob: -1.5690104961395264
    3. '(L' → logprob: -2.9440104961395264
    4. '(N' → logprob: -5.944010257720947
    5. '()' → logprob: -6.194010257720947
    6. '(node' → logprob: -6.569010257720947
    7. '(s' → logprob: -7.194010257720947
    8. '(:' → logprob: -7.194010257720947
    9. '(start' → logprob: -7.194010257720947
    10. '(l' → logprob: -7.819010257720947

Token 105: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10072416812181473
    2. '):' → logprob: -2.350724220275879
    3. '=' → logprob: -8.475724220275879
    4. ')' → logprob: -8.975724220275879
    5. ' ):' → logprob: -10.225724220275879
    6. ' ,' → logprob: -10.225724220275879
    7. '):
' → logprob: -10.350724220275879
    8. ',n' → logprob: -11.600724220275879
    9. ',d' → logprob: -11.725724220275879
    10. '   ' → logprob: -11.975724220275879

Token 106: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.035685889422893524
    2. ' for' → logprob: -4.410686016082764
    3. '    ' → logprob: -4.910686016082764
    4. ':' → logprob: -6.160686016082764
    5. ' ' → logprob: -6.160686016082764
    6. '    
' → logprob: -6.660686016082764
    7. ' return' → logprob: -6.785686016082764
    8. ' :' → logprob: -7.410686016082764
    9. '(' → logprob: -7.535686016082764
    10. ' i' → logprob: -7.660686016082764

Token 107: ' done' (ID: 4167)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.66780686378479
    2. ' stack' → logprob: -2.04280686378479
    3. ' res' → logprob: -2.54280686378479
    4. ' pos' → logprob: -2.54280686378479
    5. ' for' → logprob: -2.66780686378479
    6. ' current' → logprob: -2.91780686378479
    7. 'pos' → logprob: -3.04280686378479
    8. ' i' → logprob: -3.04280686378479
    9. ' prev' → logprob: -3.29280686378479
    10. ' result' → logprob: -3.54280686378479

Token 108: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21326784789562225
    2. '=' → logprob: -1.7132678031921387
    3. ',' → logprob: -5.338267803192139
    4. '_' → logprob: -5.838267803192139
    5. '   ' → logprob: -7.213267803192139
    6. ' ' → logprob: -7.588267803192139
    7. ')' → logprob: -7.588267803192139
    8. 's' → logprob: -7.838267803192139
    9. '_indices' → logprob: -8.213268280029297
    10. '=set' → logprob: -8.213268280029297

Token 109: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.10549703240394592
    2. ' set' → logprob: -2.855497121810913
    3. '[]' → logprob: -3.480497121810913
    4. '{' → logprob: -5.105496883392334
    5. '[' → logprob: -6.230496883392334
    6. ' []' → logprob: -6.605496883392334
    7. 'False' → logprob: -7.230496883392334
    8. '{}' → logprob: -7.480496883392334
    9. '0' → logprob: -8.230497360229492
    10. '[]
' → logprob: -8.355497360229492

Token 110: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0017540723783895373
    2. '()
' → logprob: -6.376754283905029
    3. '()\' → logprob: -11.001753807067871
    4. '(' → logprob: -11.251753807067871
    5. '()

' → logprob: -12.126753807067871
    6. '()
' → logprob: -12.126753807067871
    7. '(),' → logprob: -12.751753807067871
    8. '(indices' → logprob: -13.001753807067871
    9. ' ()' → logprob: -13.626753807067871
    10. '()`' → logprob: -13.876753807067871

Token 111: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12325593829154968
    2. '
' → logprob: -2.623255968093872
    3. '    
' → logprob: -4.248255729675293
    4. ')' → logprob: -4.998255729675293
    5. ' for' → logprob: -5.248255729675293
    6. '<|end|>' → logprob: -5.498255729675293
    7. '    ' → logprob: -5.748255729675293
    8. ' ' → logprob: -5.998255729675293
    9. 'for' → logprob: -6.748255729675293
    10. ',' → logprob: -6.748255729675293

Token 112: ' pos' (ID: 1253)
  Prédit: ' stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.9014520049095154
    2. ' current' → logprob: -1.7764520645141602
    3. ' pos' → logprob: -1.9014520645141602
    4. 'pos' (adapté à ' pos') → logprob: -2.52645206451416
    5. '   ' → logprob: -3.77645206451416
    6. 'current' → logprob: -3.77645206451416
    7. ' path' → logprob: -3.90145206451416
    8. 'stack' → logprob: -3.90145206451416
    9. ' queue' → logprob: -4.40145206451416
    10. ' for' → logprob: -4.40145206451416

Token 113: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5782204866409302
    2. '=' → logprob: -0.8282204866409302
    3. ',' → logprob: -6.203220367431641
    4. ' ' → logprob: -9.07822036743164
    5. ')' → logprob: -10.45322036743164
    6. '   ' → logprob: -10.57822036743164
    7. ' ,' → logprob: -10.95322036743164
    8. ' =
' → logprob: -11.20322036743164
    9. '  ' → logprob: -11.82822036743164
    10. '<|end|>' → logprob: -11.95322036743164

Token 114: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2022974193096161
    2. '-' → logprob: -1.9522974491119385
    3. 'None' → logprob: -3.8272974491119385
    4. ' ' → logprob: -5.077297210693359
    5. 'count' → logprob: -5.827297210693359
    6. 'N' → logprob: -6.327297210693359
    7. 'cycle' → logprob: -6.452297210693359
    8. 'Ls' → logprob: -6.827297210693359
    9. 'direction' → logprob: -6.952297210693359
    10. '[]' → logprob: -7.452297210693359

Token 115: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07166575640439987
    2. '-' → logprob: -2.9466657638549805
    3. 'count' → logprob: -5.5716657638549805
    4. 'None' → logprob: -5.6966657638549805
    5. 'cycle' → logprob: -6.0716657638549805
    6. 'direction' → logprob: -6.4466657638549805
    7. 'N' → logprob: -6.5716657638549805
    8. '(' → logprob: -7.1966657638549805
    9. '1' → logprob: -7.8216657638549805
    10. ' ' → logprob: -7.8216657638549805

Token 116: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19366776943206787
    2. '<|end|>' → logprob: -1.9436677694320679
    3. ' 
' → logprob: -4.318667888641357
    4. ' ' → logprob: -5.068667888641357
    5. '<|end|>' → logprob: -5.443667888641357
    6. '    
' → logprob: -6.193667888641357
    7. '' → logprob: -6.568667888641357
    8. '  
' → logprob: -6.693667888641357
    9. '   ' → logprob: -6.943667888641357
    10. '\n' → logprob: -7.443667888641357

Token 117: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20728102326393127
    2. '<|end|>' → logprob: -2.0822811126708984
    3. '    ' → logprob: -3.8322811126708984
    4. ' ' → logprob: -4.582281112670898
    5. '    
' → logprob: -4.832281112670898
    6. '
' → logprob: -5.207281112670898
    7. ',' → logprob: -5.832281112670898
    8. ' while' → logprob: -5.957281112670898
    9. ' 
' → logprob: -6.082281112670898
    10. '<|end|>' → logprob: -6.207281112670898

Token 118: ' score' (ID: 8429)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5136700868606567
    2. 'for' → logprob: -2.138669967651367
    3. 'step' → logprob: -2.263669967651367
    4. '   ' → logprob: -2.638669967651367
    5. 'i' → logprob: -3.388669967651367
    6. ' while' → logprob: -4.388669967651367
    7. 'if' → logprob: -4.388669967651367
    8. 'direction' → logprob: -4.513669967651367
    9. 'idx' → logprob: -5.013669967651367
    10. 'd' → logprob: -5.138669967651367

Token 119: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05581292137503624
    2. '=' → logprob: -2.9308128356933594
    3. ',' → logprob: -7.055812835693359
    4. ' ' → logprob: -10.80581283569336
    5. ')' → logprob: -11.43081283569336
    6. ' +=' → logprob: -11.55581283569336
    7. '  ' → logprob: -11.80581283569336
    8. '   ' → logprob: -11.93081283569336
    9. ' ,' → logprob: -12.30581283569336
    10. 's' → logprob: -12.93081283569336

Token 120: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08898820728063583
    2. ' ' → logprob: -2.4639883041381836
    3. '   ' → logprob: -11.838988304138184
    4. '-' → logprob: -11.963988304138184
    5. '1' → logprob: -12.526488304138184
    6. ' ' → logprob: -12.526488304138184
    7. 'len' → logprob: -12.588988304138184
    8. ' -' → logprob: -12.651488304138184
    9. ' None' → logprob: -13.151488304138184
    10. 'None' → logprob: -13.213988304138184

Token 121: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012701898231171072
    2. ' ' → logprob: -9.250126838684082
    3. '[]' → logprob: -11.375126838684082
    4. '-' → logprob: -11.875126838684082
    5. 'N' → logprob: -12.875126838684082
    6. '[' → logprob: -13.000126838684082
    7. '{}' → logprob: -13.000126838684082
    8. '1' → logprob: -13.875126838684082
    9. '{' → logprob: -14.250126838684082
    10. '[]
' → logprob: -14.500126838684082

Token 122: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.33540210127830505
    2. '<|end|>' → logprob: -1.7104021310806274
    3. '   ' → logprob: -2.585402011871338
    4. ' ' → logprob: -4.960402011871338
    5. '    
' → logprob: -5.085402011871338
    6. ' 
' → logprob: -5.710402011871338
    7. '<|end|>' → logprob: -6.210402011871338
    8. '  
' → logprob: -6.335402011871338
    9. '\n' → logprob: -6.710402011871338
    10. ')' → logprob: -6.835402011871338

Token 123: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40640467405319214
    2. ' ' → logprob: -2.156404733657837
    3. '
' → logprob: -2.406404733657837
    4. '<|end|>' → logprob: -3.156404733657837
    5. ' 
' → logprob: -4.031404495239258
    6. '    
' → logprob: -4.406404495239258
    7. '    ' → logprob: -4.531404495239258
    8. '\n' → logprob: -4.656404495239258
    9. ')' → logprob: -4.906404495239258
    10. '  
' → logprob: -5.156404495239258

Token 124: ' i' (ID: 575)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -1.1854251623153687
    2. ' for' → logprob: -1.4354251623153687
    3. 'while' → logprob: -1.9354251623153687
    4. 'for' → logprob: -1.9354251623153687
    5. '   ' → logprob: -2.435425281524658
    6. ' i' → logprob: -3.810425281524658
    7. ' if' → logprob: -4.310425281524658
    8. ' step' → logprob: -4.560425281524658
    9. 'i' (adapté à ' i') → logprob: -4.810425281524658
    10. ' direction' → logprob: -5.185425281524658

Token 125: 'L' (ID: 43)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5500698685646057
    2. 'nd' → logprob: -1.175069808959961
    3. ' =' → logprob: -2.300069808959961
    4. 'n' → logprob: -5.550069808959961
    5. 'f' → logprob: -5.800069808959961
    6. 'ndice' → logprob: -5.800069808959961
    7. 't' → logprob: -6.550069808959961
    8. 'dx' → logprob: -7.550069808959961
    9. 'nde' → logprob: -7.925069808959961
    10. 'nds' → logprob: -8.050069808959961

Token 126: ',' (ID: 11)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.6615484952926636
    2. '=' → logprob: -1.6615484952926636
    3. ' =' → logprob: -2.036548614501953
    4. 'dx' → logprob: -2.286548614501953
    5. 'n' → logprob: -4.161548614501953
    6. 'nds' → logprob: -4.661548614501953
    7. ',' → logprob: -4.786548614501953
    8. 'ter' → logprob: -4.786548614501953
    9. 'f' → logprob: -5.036548614501953
    10. 'd' → logprob: -5.911548614501953

Token 127: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.26570257544517517
    2. 'i' → logprob: -1.5157026052474976
    3. ' =' → logprob: -5.015702724456787
    4. '0' → logprob: -5.765702724456787
    5. ' ' → logprob: -6.515702724456787
    6. '=' → logprob: -7.140702724456787
    7. '   ' → logprob: -7.640702724456787
    8. '1' → logprob: -8.015702247619629
    9. '  ' → logprob: -8.640702247619629
    10. 'pos' → logprob: -8.765702247619629

Token 128: 'R' (ID: 49)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8197891116142273
    2. ' =' → logprob: -0.8197891116142273
    3. 'dx' → logprob: -3.319789171218872
    4. 'nd' → logprob: -3.694789171218872
    5. ',' → logprob: -3.944789171218872
    6. 't' → logprob: -4.694788932800293
    7. 'n' → logprob: -5.069788932800293
    8. 's' → logprob: -5.319788932800293
    9. 'f' → logprob: -5.694788932800293
    10. '<|end|>' → logprob: -6.069788932800293

Token 129: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25284630060195923
    2. '=' → logprob: -1.5028462409973145
    3. ',' → logprob: -7.0028462409973145
    4. ' ' → logprob: -13.127846717834473
    5. '<|end|>' → logprob: -13.252846717834473
    6. ' ,' → logprob: -13.877846717834473
    7. '0' → logprob: -14.127846717834473
    8. ' =
' → logprob: -15.002846717834473
    9. ')' → logprob: -15.127846717834473
    10. '  ' → logprob: -15.502846717834473

Token 130: ' N' (ID: 478)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014549166895449162
    2. ' ' → logprob: -4.264549255371094
    3. '[' → logprob: -9.014549255371094
    4. ' iter' → logprob: -9.639549255371094
    5. ' [' → logprob: -10.014549255371094
    6. '   ' → logprob: -10.389549255371094
    7. '(' → logprob: -10.764549255371094
    8. ' (' → logprob: -10.889549255371094
    9. 'iter' → logprob: -10.889549255371094
    10. ' direction' → logprob: -11.264549255371094

Token 131: '-' (ID: 12)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08206570148468018
    2. '-' → logprob: -2.9570655822753906
    3. ' -' → logprob: -4.332065582275391
    4. ' ,' → logprob: -5.582065582275391
    5. ' ' → logprob: -5.957065582275391
    6. ',
' → logprob: -6.082065582275391
    7. '
' → logprob: -6.082065582275391
    8. '<|end|>' → logprob: -6.832065582275391
    9. '0' → logprob: -7.582065582275391
    10. '+' → logprob: -8.20706558227539

Token 132: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002783783129416406
    2. ' ' → logprob: -8.25027847290039
    3. '2' → logprob: -11.75027847290039
    4. ',' → logprob: -12.93777847290039
    5. '
' → logprob: -13.18777847290039
    6. '```' → logprob: -13.81277847290039
    7. '...' → logprob: -14.43777847290039
    8. '-' → logprob: -14.62527847290039
    9. '   ' → logprob: -14.68777847290039
    10. '0' → logprob: -15.12527847290039

Token 133: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004116153810173273
    2. ',
' → logprob: -6.129116058349609
    3. ' ,' → logprob: -7.504116058349609
    4. ',i' → logprob: -7.629116058349609
    5. '+' → logprob: -7.754116058349609
    6. ',N' → logprob: -9.62911605834961
    7. ',None' → logprob: -9.75411605834961
    8. ' +' → logprob: -10.37911605834961
    9. '-' → logprob: -10.37911605834961
    10. '
' → logprob: -10.50411605834961

Token 134: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3975667357444763
    2. 'N' → logprob: -1.272566795349121
    3. ' ' → logprob: -3.647566795349121
    4. '-' → logprob: -4.647566795349121
    5. ' N' → logprob: -4.647566795349121
    6. '-N' → logprob: -6.772566795349121
    7. ' -' → logprob: -7.022566795349121
    8. 'len' → logprob: -7.772566795349121
    9. '1' → logprob: -9.397566795349121
    10. '   ' → logprob: -10.647566795349121

Token 135: '0' (ID: 15)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.4341292679309845
    2. '0' → logprob: -1.059129238128662
    3. 'len' → logprob: -5.934129238128662
    4. '-' → logprob: -6.559129238128662
    5. ' ' → logprob: -7.434129238128662
    6. ' N' → logprob: -8.05912971496582
    7. '-N' → logprob: -8.55912971496582
    8. '1' → logprob: -9.05912971496582
    9. ' -' → logprob: -10.62162971496582
    10. '
' → logprob: -11.30912971496582

Token 136: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 137: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12808462977409363
    2. '
' → logprob: -2.753084659576416
    3. ' while' → logprob: -3.753084659576416
    4. '<|end|>' → logprob: -4.253084659576416
    5. '    
' → logprob: -5.503084659576416
    6. ')' → logprob: -5.628084659576416
    7. 'while' → logprob: -5.628084659576416
    8. ',' → logprob: -6.003084659576416
    9. '	while' → logprob: -7.253084659576416
    10. '```' → logprob: -7.378084659576416

Token 138: ' cycle' (ID: 15839)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.7405903339385986
    2. 'while' → logprob: -0.7405903339385986
    3. '   ' → logprob: -3.1155903339385986
    4. 'for' → logprob: -6.9905900955200195
    5. ' for' → logprob: -7.1155900955200195
    6. ' step' → logprob: -9.24059009552002
    7. 'step' → logprob: -10.11559009552002
    8. ' direction' → logprob: -10.61559009552002
    9. '    ' → logprob: -10.86559009552002
    10. 'direction' → logprob: -11.24059009552002

Token 139: '_get' (ID: 6533)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1577599197626114
    2. 's' → logprob: -3.15775990486145
    3. '()' → logprob: -3.78275990486145
    4. '(
' → logprob: -4.157760143280029
    5. '(direction' → logprob: -4.407760143280029
    6. '_positions' → logprob: -4.907760143280029
    7. '(L' → logprob: -5.157760143280029
    8. '_iter' → logprob: -5.657760143280029
    9. '_indices' → logprob: -5.907760143280029
    10. '_pos' → logprob: -5.907760143280029

Token 140: 'ters' (ID: 2540)
  Prédit: 'ter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ter' → logprob: -0.01887407712638378
    2. ' =' → logprob: -4.393874168395996
    3. '=' → logprob: -5.643874168395996
    4. 'item' → logprob: -6.143874168395996
    5. 'er' → logprob: -8.143874168395996
    6. 'index' → logprob: -9.268874168395996
    7. 'r' → logprob: -9.643874168395996
    8. '=item' → logprob: -10.643874168395996
    9. 'next' → logprob: -10.768874168395996
    10. 'pos' → logprob: -10.768874168395996

Token 141: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0126649159938097
    2. '=' → logprob: -4.387664794921875
    3. '   ' → logprob: -9.262664794921875
    4. ',' → logprob: -10.262664794921875
    5. ')' → logprob: -11.887664794921875
    6. ' ' → logprob: -12.762664794921875
    7. 's' → logprob: -12.887664794921875
    8. '=[]' → logprob: -13.137664794921875
    9. '  ' → logprob: -13.262664794921875
    10. '=[' → logprob: -13.387664794921875

Token 142: ' [
' (ID: 4240)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5387041568756104
    2. 'cycle' → logprob: -1.2887041568756104
    3. '(c' → logprob: -3.1637041568756104
    4. 'chain' → logprob: -4.163703918457031
    5. '(chain' → logprob: -4.163703918457031
    6. '   ' → logprob: -4.413703918457031
    7. ' [' → logprob: -4.663703918457031
    8. ' cycle' → logprob: -4.663703918457031
    9. '[L' → logprob: -5.038703918457031
    10. '[(' → logprob: -5.288703918457031

Token 143: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9486662745475769
    2. 'item' → logprob: -1.4486663341522217
    3. 'lambda' → logprob: -2.4486663341522217
    4. '(lambda' → logprob: -2.5736663341522217
    5. ' item' → logprob: -2.6986663341522217
    6. ' (' → logprob: -2.9486663341522217
    7. '(item' → logprob: -3.4486663341522217
    8. ' lambda' → logprob: -3.4486663341522217
    9. '       ' → logprob: -4.948666095733643
    10. '(L' → logprob: -5.448666095733643

Token 144: ' lambda' (ID: 27871)
  Prédit: 'item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -0.7122311592102051
    2. '(lambda' → logprob: -1.212231159210205
    3. 'lambda' (adapté à ' lambda') → logprob: -2.212231159210205
    4. '(item' → logprob: -2.712231159210205
    5. '(L' → logprob: -4.087231159210205
    6. 'partial' → logprob: -4.962231159210205
    7. '(' → logprob: -5.712231159210205
    8. '   ' → logprob: -6.712231159210205
    9. '(part' → logprob: -6.837231159210205
    10. ' (' → logprob: -7.087231159210205

Token 145: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4030662477016449
    2. ' :' → logprob: -2.2780661582946777
    3. ' idx' → logprob: -2.7780661582946777
    4. ' pos' → logprob: -3.2780661582946777
    5. ' i' → logprob: -3.5280661582946777
    6. ' x' → logprob: -3.6530661582946777
    7. ' lst' → logprob: -4.153066158294678
    8. ' L' → logprob: -4.653066158294678
    9. 'L' → logprob: -5.403066158294678
    10. ' l' → logprob: -5.903066158294678

Token 146: ' (' (ID: 350)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.43351826071739197
    2. 'Ls' → logprob: -1.1835182905197144
    3. 'Rs' → logprob: -5.183518409729004
    4. 'L' → logprob: -5.308518409729004
    5. ' done' → logprob: -5.433518409729004
    6. ' Rs' → logprob: -5.558518409729004
    7. 'pos' → logprob: -5.683518409729004
    8. 'done' → logprob: -5.808518409729004
    9. ' pos' → logprob: -5.933518409729004
    10. ' i' → logprob: -6.183518409729004

Token 147: ' #' (ID: 1069)
  Prédit: 'Ls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Ls' → logprob: -0.11659622192382812
    2. 'Rs' → logprob: -3.241596221923828
    3. 'pos' → logprob: -3.866596221923828
    4. 'LR' → logprob: -4.366596221923828
    5. 'L' → logprob: -4.866596221923828
    6. '(L' → logprob: -5.616596221923828
    7. 'done' → logprob: -5.866596221923828
    8. 'i' → logprob: -5.991596221923828
    9. ' L' → logprob: -6.116596221923828
    10. '(' → logprob: -6.366596221923828

Token 148: ' negative' (ID: 12626)
  Prédit: 'Ls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Ls' → logprob: -0.2794192135334015
    2. 'pos' → logprob: -2.654419183731079
    3. 'L' → logprob: -3.154419183731079
    4. 'Rs' → logprob: -4.154419422149658
    5. 'LR' → logprob: -4.279419422149658
    6. 'next' → logprob: -4.279419422149658
    7. 'done' → logprob: -4.529419422149658
    8. 'i' → logprob: -4.529419422149658
    9. '(L' → logprob: -5.404419422149658
    10. '   ' → logprob: -5.529419422149658

Token 149: ' direction' (ID: 9262)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.3343374729156494
    2. ' pos' → logprob: -2.2093374729156494
    3. ')' → logprob: -3.3343374729156494
    4. 'i' → logprob: -3.9593374729156494
    5. ',' → logprob: -4.08433723449707
    6. 'Ls' → logprob: -4.08433723449707
    7. '1' → logprob: -4.45933723449707
    8. '-' → logprob: -4.45933723449707
    9. 'score' → logprob: -4.45933723449707
    10. '   ' → logprob: -4.95933723449707

Token 150: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6273040771484375
    2. ',' → logprob: -1.7523040771484375
    3. 'pos' → logprob: -2.3773040771484375
    4. 'Ls' → logprob: -3.2523040771484375
    5. ' pos' → logprob: -3.5023040771484375
    6. '   ' → logprob: -3.8773040771484375
    7. ')' → logprob: -4.0023040771484375
    8. 'L' → logprob: -4.5023040771484375
    9. ' for' → logprob: -4.6273040771484375
    10. 'i' → logprob: -4.7523040771484375

Token 151: '           ' (ID: 352)
  Prédit: 'Rs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Rs' → logprob: -0.5234854817390442
    2. 'pos' → logprob: -2.0234854221343994
    3. '   ' → logprob: -2.5234854221343994
    4. 'Ls' → logprob: -3.0234854221343994
    5. 'x' → logprob: -3.5234854221343994
    6. 'LR' → logprob: -4.5234856605529785
    7. 'r' → logprob: -4.7734856605529785
    8. 'L' → logprob: -4.7734856605529785
    9. 'i' → logprob: -4.7734856605529785
    10. ' Rs' → logprob: -5.1484856605529785

Token 152: ' ((' (ID: 3536)
  Prédit: 'Rs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Rs' → logprob: -0.4845384359359741
    2. 'Ls' → logprob: -1.9845384359359741
    3. 'pos' → logprob: -2.1095385551452637
    4. 'x' → logprob: -3.7345385551452637
    5. 'i' → logprob: -4.609538555145264
    6. '(L' → logprob: -4.609538555145264
    7. 'next' → logprob: -4.734538555145264
    8. '   ' → logprob: -5.109538555145264
    9. '(R' → logprob: -5.234538555145264
    10. '(x' → logprob: -5.359538555145264

Token 153: 'pos' (ID: 1103)
  Prédit: 'Ls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ls' → logprob: -1.237877607345581
    2. 'Rs' → logprob: -1.737877607345581
    3. 'pos' → logprob: -1.987877607345581
    4. 'l' → logprob: -2.237877607345581
    5. 'x' → logprob: -2.487877607345581
    6. 'p' → logprob: -3.487877607345581
    7. 'r' → logprob: -3.612877607345581
    8. 'i' → logprob: -3.862877607345581
    9. 'L' → logprob: -4.23787784576416
    10. '-' → logprob: -4.36287784576416

Token 154: ',' (ID: 11)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -1.0546985864639282
    2. ',' → logprob: -1.1796985864639282
    3. '-' → logprob: -1.3046985864639282
    4. ' if' → logprob: -3.9296984672546387
    5. '+' → logprob: -4.679698467254639
    6. 'if' → logprob: -4.804698467254639
    7. ' +' → logprob: -5.054698467254639
    8. 'for' → logprob: -5.429698467254639
    9. ' ,' → logprob: -5.679698467254639
    10. ',)' → logprob: -5.679698467254639

Token 155: ' Rs' (ID: 26175)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.569946050643921
    2. ' i' → logprob: -2.069946050643921
    3. 'pos' → logprob: -2.569946050643921
    4. 'l' → logprob: -3.069946050643921
    5. 'r' → logprob: -3.194946050643921
    6. ' pos' → logprob: -3.194946050643921
    7. ' done' → logprob: -3.444946050643921
    8. '0' → logprob: -3.569946050643921
    9. ' l' → logprob: -3.569946050643921
    10. ' L' → logprob: -3.694946050643921

Token 156: '[j' (ID: 7895)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0007612687186338007
    2. '[' → logprob: -7.750761032104492
    3. '[j' → logprob: -8.875761032104492
    4. '[-' → logprob: -9.875761032104492
    5. ')[' → logprob: -10.750761032104492
    6. '[index' → logprob: -11.750761032104492
    7. 'i' → logprob: -11.875761032104492
    8. '[len' → logprob: -11.875761032104492
    9. ' [' → logprob: -12.000761032104492
    10. '[min' → logprob: -12.125761032104492

Token 157: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.03525339812040329
    2. '])' → logprob: -4.160253524780273
    3. ']))' → logprob: -5.035253524780273
    4. ']),' → logprob: -5.285253524780273
    5. '[' → logprob: -5.785253524780273
    6. '-' → logprob: -7.035253524780273
    7. ')[' → logprob: -7.410253524780273
    8. ']' → logprob: -7.535253524780273
    9. '])[' → logprob: -7.785253524780273
    10. '][-' → logprob: -8.410253524780273

Token 158: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.044142939150333405
    2. '2' → logprob: -3.169142961502075
    3. '0' → logprob: -7.044142723083496
    4. '
' → logprob: -8.919142723083496
    5. '```' → logprob: -10.669142723083496
    6. '
' → logprob: -11.544142723083496
    7. ' ' → logprob: -11.544142723083496
    8. '

' → logprob: -11.731642723083496
    9. '   ' → logprob: -11.856642723083496
    10. '-' → logprob: -11.856642723083496

Token 159: '],' (ID: 2155)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.14002035558223724
    2. ')' → logprob: -3.2650203704833984
    3. '],' → logprob: -4.140020370483398
    4. ']),' → logprob: -4.265020370483398
    5. '-' → logprob: -4.390020370483398
    6. ']' → logprob: -4.640020370483398
    7. '),' → logprob: -4.640020370483398
    8. '))' → logprob: -4.765020370483398
    9. '   ' → logprob: -5.390020370483398
    10. ' -' → logprob: -5.515020370483398

Token 160: ' Rs' (ID: 26175)
  Prédit: 'Rs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rs' → logprob: -0.27538493275642395
    2. ' Rs' → logprob: -1.7753849029541016
    3. ' j' → logprob: -3.9003849029541016
    4. 'j' → logprob: -4.025384902954102
    5. '-' → logprob: -5.525384902954102
    6. 'done' → logprob: -5.525384902954102
    7. ' done' → logprob: -5.650384902954102
    8. ' ' → logprob: -5.775384902954102
    9. 'i' → logprob: -6.025384902954102
    10. ' -' → logprob: -6.025384902954102

Token 161: '[j' (ID: 7895)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.557159960269928
    2. '[' → logprob: -0.932159960269928
    3. '[j' → logprob: -4.557159900665283
    4. ']))' → logprob: -4.682159900665283
    5. ']),' → logprob: -5.557159900665283
    6. ']' → logprob: -5.807159900665283
    7. ')[' → logprob: -6.932159900665283
    8. '],' → logprob: -7.307159900665283
    9. ']))
' → logprob: -7.307159900665283
    10. '])' → logprob: -7.432159900665283

Token 162: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0042513697408139706
    2. ']))' → logprob: -6.754251480102539
    3. '0' → logprob: -7.129251480102539
    4. '])' → logprob: -7.379251480102539
    5. ']),' → logprob: -7.629251480102539
    6. '[' → logprob: -8.004251480102539
    7. ']' → logprob: -8.379251480102539
    8. '-' → logprob: -8.754251480102539
    9. '1' → logprob: -8.754251480102539
    10. '],' → logprob: -10.129251480102539

Token 163: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002356264041736722
    2. '
' → logprob: -7.127356052398682
    3. '-' → logprob: -7.189856052398682
    4. '0' → logprob: -8.93985652923584
    5. '1' → logprob: -9.06485652923584
    6. '```' → logprob: -9.31485652923584
    7. '

' → logprob: -10.18985652923584
    8. 'i' → logprob: -10.43985652923584
    9. ']' → logprob: -10.50235652923584
    10. '[' → logprob: -10.56485652923584

Token 164: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07930105924606323
    2. '))' → logprob: -3.454301118850708
    3. '])' → logprob: -3.579301118850708
    4. '),' → logprob: -4.704300880432129
    5. '           ' → logprob: -5.704300880432129
    6. '       ' → logprob: -6.704300880432129
    7. '   ' → logprob: -7.204300880432129
    8. ' )' → logprob: -7.454300880432129
    9. '          ' → logprob: -8.204300880432129
    10. '         ' → logprob: -8.454300880432129

Token 165: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006955957971513271
    2. 'for' → logprob: -6.006956100463867
    3. ',' → logprob: -7.256956100463867
    4. ' for' → logprob: -7.381956100463867
    5. ' )' → logprob: -7.506956100463867
    6. '   ' → logprob: -7.506956100463867
    7. '),' → logprob: -7.631956100463867
    8. '           ' → logprob: -7.756956100463867
    9. '       ' → logprob: -8.256956100463867
    10. '    ' → logprob: -8.881956100463867

Token 166: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.04305616766214371
    2. ' j' → logprob: -3.1680562496185303
    3. '	j' → logprob: -11.16805648803711
    4. '
' → logprob: -11.66805648803711
    5. '   ' → logprob: -12.04305648803711
    6. ')' → logprob: -12.04305648803711
    7. ' ' → logprob: -12.04305648803711
    8. ' ' → logprob: -12.79305648803711
    9. '```' → logprob: -12.91805648803711
    10. '

' → logprob: -12.91805648803711

Token 167: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.42954060435295105
    2. ' in' → logprob: -1.0545406341552734
    3. ')' → logprob: -7.179540634155273
    4. ' ' → logprob: -10.804540634155273
    5. '	in' → logprob: -11.554540634155273
    6. 'range' → logprob: -12.054540634155273
    7. '),' → logprob: -12.554540634155273
    8. '   ' → logprob: -12.679540634155273
    9. ' i' → logprob: -12.804540634155273
    10. '<|end|>' → logprob: -12.867040634155273

Token 168: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.31608814001083374
    2. ' range' → logprob: -1.3160881996154785
    3. 're' → logprob: -6.9410881996154785
    4. 'count' → logprob: -6.9410881996154785
    5. ' reversed' → logprob: -7.5660881996154785
    6. 'chain' → logprob: -9.44108772277832
    7. '   ' → logprob: -9.56608772277832
    8. ' ' → logprob: -10.06608772277832
    9. '	range' → logprob: -10.06608772277832
    10. ' count' → logprob: -10.06608772277832

Token 169: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00036691725836135447
    2. 'i' → logprob: -8.625367164611816
    3. '(' → logprob: -9.125367164611816
    4. ' i' → logprob: -9.875367164611816
    5. '   ' → logprob: -11.000367164611816
    6. ' (' → logprob: -12.250367164611816
    7. '	i' → logprob: -13.500367164611816
    8. '(
' → logprob: -14.125367164611816
    9. '(j' → logprob: -14.625367164611816
    10. ' ' → logprob: -14.875367164611816

Token 170: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.002585051115602255
    2. 'L' → logprob: -6.002584934234619
    3. ' R' → logprob: -10.377585411071777
    4. ')' → logprob: -11.752585411071777
    5. 'Rs' → logprob: -11.752585411071777
    6. ',' → logprob: -11.877585411071777
    7. '
' → logprob: -12.002585411071777
    8. '_R' → logprob: -12.252585411071777
    9. '```' → logprob: -12.565085411071777
    10. '-' → logprob: -12.690085411071777

Token 171: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08746932446956635
    2. '-' → logprob: -2.9624693393707275
    3. ' -' → logprob: -3.8374693393707275
    4. '+' → logprob: -5.337469100952148
    5. ' ,' → logprob: -6.087469100952148
    6. ',i' → logprob: -6.962469100952148
    7. ',-' → logprob: -7.087469100952148
    8. ' +' → logprob: -7.212469100952148
    9. '   ' → logprob: -8.962469100952148
    10. ',j' → logprob: -9.462469100952148

Token 172: ' N' (ID: 478)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.009678889065980911
    2. 'i' → logprob: -5.259678840637207
    3. ' -' → logprob: -5.759678840637207
    4. 'N' → logprob: -8.134678840637207
    5. '-i' → logprob: -8.384678840637207
    6. '0' → logprob: -8.634678840637207
    7. '   ' → logprob: -9.009678840637207
    8. ' i' → logprob: -9.134678840637207
    9. ' ' → logprob: -9.384678840637207
    10. 'len' → logprob: -9.634678840637207

Token 173: ')' (ID: 8)
  Prédit: ')),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')),' → logprob: -0.4511471688747406
    2. ')' → logprob: -1.201147198677063
    3. ')),
' → logprob: -3.7011470794677734
    4. '))' → logprob: -4.201147079467773
    5. ',' → logprob: -5.326147079467773
    6. '),' → logprob: -5.451147079467773
    7. ' if' → logprob: -5.576147079467773
    8. 'if' → logprob: -6.201147079467773
    9. ')
' → logprob: -6.701147079467773
    10. '   ' → logprob: -6.826147079467773

Token 174: ' if' (ID: 538)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.8596956133842468
    2. '),
' → logprob: -0.9846956133842468
    3. ' if' → logprob: -2.3596956729888916
    4. ')' → logprob: -3.4846956729888916
    5. 'if' → logprob: -3.9846956729888916
    6. ',' → logprob: -4.1096954345703125
    7. '           ' → logprob: -4.4846954345703125
    8. '       ' → logprob: -5.1096954345703125
    9. '   ' → logprob: -5.3596954345703125
    10. ')
' → logprob: -5.6096954345703125

Token 175: ' Rs' (ID: 26175)
  Prédit: ' Rs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Rs' → logprob: -0.5895001292228699
    2. 'Rs' → logprob: -0.8395001292228699
    3. ' not' → logprob: -4.7144999504089355
    4. '   ' → logprob: -6.8394999504089355
    5. ' pos' → logprob: -7.0894999504089355
    6. 'not' → logprob: -7.2144999504089355
    7. 'pos' → logprob: -7.5894999504089355
    8. ' done' → logprob: -8.214500427246094
    9. 'done' → logprob: -8.714500427246094
    10. ' (' → logprob: -8.839500427246094

Token 176: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.843177233240567e-05
    2. '[' → logprob: -11.375018119812012
    3. ')[' → logprob: -13.250018119812012
    4. 'j' → logprob: -13.500018119812012
    5. ' [' → logprob: -13.875018119812012
    6. '][' → logprob: -14.000018119812012
    7. '[
' → logprob: -14.625018119812012
    8. '   ' → logprob: -15.125018119812012
    9. '[i' → logprob: -15.125018119812012
    10. '           ' → logprob: -15.375018119812012

Token 177: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.26164835691452026
    2. '[' → logprob: -1.511648416519165
    3. ')[' → logprob: -4.761648178100586
    4. ']' → logprob: -8.136648178100586
    5. ' ][' → logprob: -9.011648178100586
    6. '>[' → logprob: -9.261648178100586
    7. ' [' → logprob: -9.761648178100586
    8. '   ' → logprob: -9.824148178100586
    9. '```' → logprob: -9.886648178100586
    10. '[j' → logprob: -9.949148178100586

Token 178: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0022433928679674864
    2. '0' → logprob: -6.502243518829346
    3. '[' → logprob: -8.627243041992188
    4. '2' → logprob: -8.752243041992188
    5. ' ' → logprob: -9.127243041992188
    6. '
' → logprob: -9.377243041992188
    7. '][' → logprob: -9.502243041992188
    8. ']' → logprob: -10.377243041992188
    9. ')' → logprob: -10.439743041992188
    10. '```' → logprob: -11.314743041992188

Token 179: ']' (ID: 60)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.4996218681335449
    2. '!=' → logprob: -2.374621868133545
    3. 'not' → logprob: -2.749621868133545
    4. ' !=' → logprob: -2.749621868133545
    5. ']' → logprob: -3.124621868133545
    6. ' in' → logprob: -3.249621868133545
    7. ')' → logprob: -3.249621868133545
    8. 'in' → logprob: -3.624621868133545
    9. '==' → logprob: -4.749621868133545
    10. ' ==' → logprob: -5.124621868133545

Token 180: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.10377302765846252
    2. 'not' → logprob: -2.7287731170654297
    3. ' in' → logprob: -4.97877311706543
    4. '!=' → logprob: -4.97877311706543
    5. ' and' → logprob: -5.10377311706543
    6. 'and' → logprob: -5.47877311706543
    7. ' !=' → logprob: -5.85377311706543
    8. 'in' → logprob: -5.97877311706543
    9. ')' → logprob: -6.35377311706543
    10. '>' → logprob: -7.85377311706543

Token 181: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.23312872648239136
    2. 'in' → logprob: -1.6081287860870361
    3. 'done' → logprob: -5.108128547668457
    4. ' done' → logprob: -6.483128547668457
    5. ')' → logprob: -9.608128547668457
    6. ' ' → logprob: -12.108128547668457
    7. '
' → logprob: -12.358128547668457
    8. '   ' → logprob: -12.483128547668457
    9. ',' → logprob: -12.483128547668457
    10. '	done' → logprob: -12.858128547668457

Token 182: ' done' (ID: 4167)
  Prédit: 'done'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'done' → logprob: -0.054929111152887344
    2. ' done' → logprob: -2.92992901802063
    3. '	done' → logprob: -11.05492877960205
    4. '
' → logprob: -11.17992877960205
    5. '   ' → logprob: -11.92992877960205
    6. ' ' → logprob: -13.05492877960205
    7. '(done' → logprob: -13.67992877960205
    8. ')' → logprob: -13.80492877960205
    9. '.done' → logprob: -13.80492877960205
    10. '
' → logprob: -13.92992877960205

Token 183: '),
' (ID: 2313)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.8789926767349243
    2. '),
' → logprob: -1.3789926767349243
    3. ')' → logprob: -1.5039926767349243
    4. ')),' → logprob: -3.3789925575256348
    5. ' and' → logprob: -3.6289925575256348
    6. 'and' → logprob: -4.378992557525635
    7. '))' → logprob: -4.628992557525635
    8. ')),
' → logprob: -4.878992557525635
    9. '           ' → logprob: -5.503992557525635
    10. ')
' → logprob: -5.503992557525635

Token 184: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0882548838853836
    2. 'lambda' → logprob: -2.963254928588867
    3. '           ' → logprob: -3.838254928588867
    4. ' lambda' → logprob: -4.713254928588867
    5. ',
' → logprob: -6.713254928588867
    6. ',' → logprob: -8.213254928588867
    7. '   ' → logprob: -8.963254928588867
    8. '),
' → logprob: -8.963254928588867
    9. '               ' → logprob: -9.463254928588867
    10. '(lambda' → logprob: -9.588254928588867

Token 185: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' (adapté à ' lambda') → logprob: -0.5357071757316589
    2. '(lambda' → logprob: -1.6607072353363037
    3. ' lambda' → logprob: -2.7857072353363037
    4. '           ' → logprob: -4.035706996917725
    5. 'cycle' → logprob: -4.160706996917725
    6. '(i' → logprob: -4.160706996917725
    7. 'i' → logprob: -4.535706996917725
    8. '   ' → logprob: -4.660706996917725
    9. 'None' → logprob: -4.785706996917725
    10. 'pos' → logprob: -5.035706996917725

Token 186: ' j' (ID: 441)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0097471475601196
    2. ' x' → logprob: -1.3847471475601196
    3. ' j' → logprob: -1.5097471475601196
    4. ' idx' → logprob: -3.38474702835083
    5. ' v' → logprob: -4.13474702835083
    6. 'j' → logprob: -4.38474702835083
    7. ' pos' → logprob: -4.63474702835083
    8. ' y' → logprob: -4.63474702835083
    9. ' k' → logprob: -4.63474702835083
    10. ' d' → logprob: -5.00974702835083

Token 187: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012149984249845147
    2. ' :' → logprob: -7.126214981079102
    3. ',' → logprob: -8.376214981079102
    4. ' j' → logprob: -9.626214981079102
    5. '_:' → logprob: -10.251214981079102
    6. ',j' → logprob: -11.001214981079102
    7. '=' → logprob: -11.126214981079102
    8. ':j' → logprob: -11.626214981079102
    9. 'j' → logprob: -12.001214981079102
    10. '   ' → logprob: -12.001214981079102

Token 188: ' N' (ID: 478)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.11755839735269547
    2. ' j' → logprob: -2.242558479309082
    3. 'Rs' → logprob: -6.242558479309082
    4. 'pos' → logprob: -6.992558479309082
    5. 'i' → logprob: -7.617558479309082
    6. ' Rs' → logprob: -7.992558479309082
    7. ' i' → logprob: -8.617558479309082
    8. 'max' → logprob: -8.742558479309082
    9. '(j' → logprob: -9.117558479309082
    10. ' pos' → logprob: -9.117558479309082

Token 189: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0296781063079834
    2. ' if' → logprob: -1.5296781063079834
    3. '-' → logprob: -2.0296781063079834
    4. '),
' → logprob: -2.4046781063079834
    5. '),' → logprob: -2.7796781063079834
    6. ')' → logprob: -3.1546781063079834
    7. ' -' → logprob: -3.9046781063079834
    8. 'j' → logprob: -4.2796783447265625
    9. '   ' → logprob: -4.6546783447265625
    10. ',' → logprob: -4.7796783447265625

Token 190: ' j' (ID: 441)
  Prédit: 'Rs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rs' → logprob: -0.28976207971572876
    2. ' Rs' → logprob: -1.539762020111084
    3. 'j' → logprob: -3.914762020111084
    4. ' j' → logprob: -4.289762020111084
    5. 'pos' → logprob: -6.789762020111084
    6. 'not' → logprob: -7.789762020111084
    7. ' not' → logprob: -7.914762020111084
    8. ' pos' → logprob: -8.164762496948242
    9. '(R' → logprob: -9.039762496948242
    10. '(j' → logprob: -9.164762496948242

Token 191: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -1.236280083656311
    2. '>' → logprob: -1.611280083656311
    3. '>=' → logprob: -1.986280083656311
    4. '<=' → logprob: -2.6112799644470215
    5. '<' → logprob: -2.8612799644470215
    6. ' <' → logprob: -3.1112799644470215
    7. ' >' → logprob: -3.1112799644470215
    8. ' ==' → logprob: -3.2362799644470215
    9. ' >=' → logprob: -3.3612799644470215
    10. '+' → logprob: -3.8612799644470215

Token 192: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.13365952670574188
    2. 'i' → logprob: -3.258659601211548
    3. 'len' → logprob: -3.508659601211548
    4. 'pos' → logprob: -3.883659601211548
    5. '-' → logprob: -4.258659362792969
    6. '0' → logprob: -4.758659362792969
    7. ' N' → logprob: -5.258659362792969
    8. '   ' → logprob: -6.383659362792969
    9. ' ' → logprob: -7.133659362792969
    10. ' i' → logprob: -7.258659362792969

Token 193: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.38735222816467285
    2. 'else' → logprob: -1.1373522281646729
    3. '-' → logprob: -8.887351989746094
    4. '           ' → logprob: -8.887351989746094
    5. '               ' → logprob: -10.262351989746094
    6. '          ' → logprob: -10.387351989746094
    7. ' ' → logprob: -10.762351989746094
    8. '   ' → logprob: -11.012351989746094
    9. '       ' → logprob: -11.012351989746094
    10. '  ' → logprob: -11.387351989746094

Token 194: ' next' (ID: 2613)
  Prédit: 'Rs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Rs' → logprob: -0.18702542781829834
    2. 'j' → logprob: -2.562025547027588
    3. ' Rs' → logprob: -3.187025547027588
    4. ' j' → logprob: -3.312025547027588
    5. 'pos' → logprob: -4.812025547027588
    6. ' pos' → logprob: -6.187025547027588
    7. '0' → logprob: -7.562025547027588
    8. 'len' → logprob: -7.812025547027588
    9. ' ' → logprob: -7.812025547027588
    10. 'done' → logprob: -7.937025547027588

Token 195: '(x' (ID: 4061)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.41493865847587585
    2. '(chain' → logprob: -2.5399386882781982
    3. '(j' → logprob: -2.9149386882781982
    4. '(indices' → logprob: -3.0399386882781982
    5. '(i' → logprob: -3.4149386882781982
    6. '(iter' → logprob: -3.5399386882781982
    7. '(R' → logprob: -3.7899386882781982
    8. ')' → logprob: -4.289938449859619
    9. '(' → logprob: -4.414938449859619
    10. '(lambda' → logprob: -4.664938449859619

Token 196: '[' (ID: 58)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8578333258628845
    2. ' for' → logprob: -1.6078333854675293
    3. '(x' → logprob: -2.4828333854675293
    4. '(j' → logprob: -2.4828333854675293
    5. ')' → logprob: -2.7328333854675293
    6. '(' → logprob: -3.2328333854675293
    7. '(lambda' → logprob: -3.3578333854675293
    8. '(i' → logprob: -3.4828333854675293
    9. '((' → logprob: -4.857833385467529
    10. '(iter' → logprob: -5.732833385467529

Token 197: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8380625247955322
    2. '1' → logprob: -1.2130625247955322
    3. '2' → logprob: -1.3380625247955322
    4. 'j' → logprob: -5.713062286376953
    5. '(' → logprob: -6.463062286376953
    6. 'x' → logprob: -6.713062286376953
    7. '
' → logprob: -7.713062286376953
    8. 'i' → logprob: -8.213062286376953
    9. '3' → logprob: -8.588062286376953
    10. '[' → logprob: -8.963062286376953

Token 198: ']' (ID: 60)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.43137723207473755
    2. ' for' → logprob: -1.0563771724700928
    3. ']' → logprob: -6.431377410888672
    4. '	for' → logprob: -8.306377410888672
    5. ')' → logprob: -8.681377410888672
    6. ' ' → logprob: -8.806377410888672
    7. '[' → logprob: -8.931377410888672
    8. '   ' → logprob: -9.181377410888672
    9. '  ' → logprob: -9.806377410888672
    10. '()' → logprob: -10.681377410888672

Token 199: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25262972712516785
    2. ' for' → logprob: -1.5026297569274902
    3. ')' → logprob: -8.252629280090332
    4. ' ' → logprob: -9.002629280090332
    5. '	for' → logprob: -9.377629280090332
    6. '  ' → logprob: -10.127629280090332
    7. '   ' → logprob: -10.252629280090332
    8. '[' → logprob: -10.377629280090332
    9. '(x' → logprob: -11.127629280090332
    10. '()' → logprob: -11.127629280090332

Token 200: ' x' (ID: 1215)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.3863983154296875
    2. 'Rs' → logprob: -1.5113983154296875
    3. 'chain' → logprob: -2.0113983154296875
    4. 'x' → logprob: -2.5113983154296875
    5. ' range' → logprob: -2.6363983154296875
    6. 'filter' → logprob: -2.7613983154296875
    7. ' chain' → logprob: -2.8863983154296875
    8. ' Rs' → logprob: -3.0113983154296875
    9. 'enumer' → logprob: -4.6363983154296875
    10. ' filter' → logprob: -4.8863983154296875

Token 201: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007875853218138218
    2. 'in' → logprob: -4.882875919342041
    3. ',' → logprob: -9.882875442504883
    4. ' ' → logprob: -10.882875442504883
    5. 'it' → logprob: -10.882875442504883
    6. 'enumer' → logprob: -10.882875442504883
    7. ' for' → logprob: -11.257875442504883
    8. 'x' → logprob: -11.382875442504883
    9. ' Rs' → logprob: -11.507875442504883
    10. ' if' → logprob: -11.507875442504883

Token 202: ' Rs' (ID: 26175)
  Prédit: 'Rs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rs' → logprob: -0.23279036581516266
    2. ' Rs' → logprob: -1.8577903509140015
    3. ' chain' → logprob: -4.357790470123291
    4. 'chain' → logprob: -4.357790470123291
    5. 'Ls' → logprob: -5.357790470123291
    6. 'LR' → logprob: -5.607790470123291
    7. 'cycle' → logprob: -5.732790470123291
    8. 'take' → logprob: -5.857790470123291
    9. 'it' → logprob: -6.607790470123291
    10. ' cycle' → logprob: -6.607790470123291

Token 203: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.18352629244327545
    2. 'range' → logprob: -3.0585262775421143
    3. '   ' → logprob: -3.3085262775421143
    4. ' if' → logprob: -3.4335262775421143
    5. '[' → logprob: -4.058526515960693
    6. '[i' → logprob: -4.308526515960693
    7. '[it' → logprob: -5.058526515960693
    8. 'if' → logprob: -5.183526515960693
    9. 'it' → logprob: -5.933526515960693
    10. 'cycle' → logprob: -6.183526515960693

Token 204: ':])
' (ID: 109592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.281230092048645
    2. '])' → logprob: -1.281230092048645
    3. '][' → logprob: -1.406230092048645
    4. ':' → logprob: -2.9062299728393555
    5. '],' → logprob: -3.6562299728393555
    6. ']),' → logprob: -3.6562299728393555
    7. ' if' → logprob: -3.9062299728393555
    8. '[' → logprob: -4.4062299728393555
    9. ':]' → logprob: -4.5312299728393555
    10. ']))' → logprob: -4.5312299728393555

Token 205: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5599804520606995
    2. ')' → logprob: -1.3099803924560547
    3. '),
' → logprob: -2.4349803924560547
    4. '),' → logprob: -3.4349803924560547
    5. ')
' → logprob: -3.9349803924560547
    6. '           ' → logprob: -5.309980392456055
    7. ')),' → logprob: -5.559980392456055
    8. '))' → logprob: -5.809980392456055
    9. '   ' → logprob: -5.809980392456055
    10. ')),
' → logprob: -5.809980392456055

Token 206: ' ),
' (ID: 4954)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.39707741141319275
    2. ')' → logprob: -1.6470774412155151
    3. '),
' (adapté à ' ),
') → logprob: -2.2720773220062256
    4. '   ' → logprob: -4.397077560424805
    5. '       ' → logprob: -4.522077560424805
    6. ')),' → logprob: -5.647077560424805
    7. '))' → logprob: -6.647077560424805
    8. ')
' → logprob: -6.772077560424805
    9. '),

' → logprob: -6.897077560424805
    10. ')))' → logprob: -8.022077560424805

Token 207: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016616640612483025
    2. '   ' → logprob: -4.8916168212890625
    3. ']' → logprob: -5.7666168212890625
    4. ',' → logprob: -6.0166168212890625
    5. ',
' → logprob: -6.7666168212890625
    6. 'lambda' → logprob: -7.5166168212890625
    7. '0' → logprob: -7.8916168212890625
    8. '           ' → logprob: -8.391616821289062
    9. '1' → logprob: -8.641616821289062
    10. ')' → logprob: -8.766616821289062

Token 208: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.6164461374282837
    2. 'lambda' (adapté à ' lambda') → logprob: -1.1164461374282837
    3. '       ' → logprob: -2.616446018218994
    4. '   ' → logprob: -2.866446018218994
    5. '    ' → logprob: -6.366446018218994
    6. '(lambda' → logprob: -8.241446495056152
    7. '     ' → logprob: -8.741446495056152
    8. '      ' → logprob: -8.991446495056152
    9. ' ' → logprob: -8.991446495056152
    10. '        ' → logprob: -8.991446495056152

Token 209: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004627002868801355
    2. ' :' → logprob: -5.379627227783203
    3. ' ' → logprob: -12.754627227783203
    4. '():' → logprob: -14.004627227783203
    5. '   ' → logprob: -14.504627227783203
    6. ':
' → logprob: -14.504627227783203
    7. '  ' → logprob: -15.004627227783203
    8. ' lambda' → logprob: -15.129627227783203
    9. ':(' → logprob: -15.379627227783203
    10. ' ():' → logprob: -15.754627227783203

Token 210: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14574100077152252
    2. ' (' → logprob: -2.0207409858703613
    3. '((' → logprob: -6.020740985870361
    4. '(
' → logprob: -8.27074146270752
    5. ' ' → logprob: -8.64574146270752
    6. ' ((' → logprob: -9.02074146270752
    7. '(((' → logprob: -10.52074146270752
    8. '#' → logprob: -11.27074146270752
    9. '   ' → logprob: -11.64574146270752
    10. '(lambda' → logprob: -11.89574146270752

Token 211: ' #' (ID: 1069)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5788442492485046
    2. '((' → logprob: -1.3288443088531494
    3. ' (' → logprob: -1.9538443088531494
    4. ' ((' → logprob: -4.32884407043457
    5. '(
' → logprob: -4.82884407043457
    6. '(pos' → logprob: -5.20384407043457
    7. '   ' → logprob: -5.82884407043457
    8. '(lambda' → logprob: -7.20384407043457
    9. ' ' → logprob: -7.45384407043457
    10. '#' → logprob: -7.70384407043457

Token 212: ' positive' (ID: 8841)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.26161423325538635
    2. '((' → logprob: -2.6366143226623535
    3. '(pos' → logprob: -2.6366143226623535
    4. '(
' → logprob: -3.3866143226623535
    5. ' (' → logprob: -3.6366143226623535
    6. 'pos' → logprob: -4.8866143226623535
    7. '#' → logprob: -5.1366143226623535
    8. '   ' → logprob: -5.3866143226623535
    9. 'positive' → logprob: -5.6366143226623535
    10. ' ((' → logprob: -7.1366143226623535

Token 213: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.47457271814346313
    2. ' direction' → logprob: -0.9745727181434631
    3. '(direction' → logprob: -8.724573135375977
    4. ' (' → logprob: -9.224573135375977
    5. ')' → logprob: -9.349573135375977
    6. '(
' → logprob: -9.974573135375977
    7. ' ' → logprob: -10.599573135375977
    8. 'dir' → logprob: -10.849573135375977
    9. 'lambda' → logprob: -11.724573135375977
    10. '   ' → logprob: -11.724573135375977

Token 214: '
' (ID: 198)
  Prédit: '(
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(
' → logprob: -0.6133328676223755
    2. '           ' → logprob: -0.9883328676223755
    3. '
' → logprob: -2.613332748413086
    4. ' (
' → logprob: -4.863332748413086
    5. '((' → logprob: -5.863332748413086
    6. ' ((' → logprob: -7.613332748413086
    7. '(' → logprob: -7.988332748413086
    8. '       ' → logprob: -7.988332748413086
    9. '          ' → logprob: -8.363332748413086
    10. ' (' → logprob: -8.488332748413086

Token 215: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5945088267326355
    2. '((' → logprob: -0.9695088267326355
    3. '(
' → logprob: -2.9695088863372803
    4. ' ((' → logprob: -4.469508647918701
    5. '          ' → logprob: -6.219508647918701
    6. ' (' → logprob: -6.969508647918701
    7. '(' → logprob: -7.344508647918701
    8. ' (
' → logprob: -7.719508647918701
    9. '            ' → logprob: -7.844508647918701
    10. '(lambda' → logprob: -8.09450912475586

Token 216: ' ((' (ID: 3536)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' (adapté à ' ((') → logprob: -0.05305909365415573
    2. '(pos' → logprob: -3.6780591011047363
    3. '(
' → logprob: -4.053059101104736
    4. '           ' → logprob: -5.553059101104736
    5. ' ((' → logprob: -6.178059101104736
    6. ' (' → logprob: -6.303059101104736
    7. '   ' → logprob: -8.053058624267578
    8. '(iter' → logprob: -8.428058624267578
    9. '(' → logprob: -8.678058624267578
    10. '         ' → logprob: -9.303058624267578

Token 217: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.23182892799377441
    2. '(pos' → logprob: -1.7318289279937744
    3. '(L' → logprob: -4.231828689575195
    4. 'Ls' → logprob: -4.731828689575195
    5. '(x' → logprob: -6.356828689575195
    6. '(ls' → logprob: -7.231828689575195
    7. ' pos' → logprob: -7.231828689575195
    8. '(l' → logprob: -7.731828689575195
    9. '(i' → logprob: -8.106828689575195
    10. '(' → logprob: -8.106828689575195

Token 218: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000504062045365572
    2. '+' → logprob: -8.000504493713379
    3. ' ,' → logprob: -9.625504493713379
    4. ',x' → logprob: -10.250504493713379
    5. ' +' → logprob: -11.500504493713379
    6. '+,' → logprob: -11.750504493713379
    7. ',i' → logprob: -11.875504493713379
    8. 'for' → logprob: -12.000504493713379
    9. ',j' → logprob: -12.375504493713379
    10. '           ' → logprob: -12.500504493713379

Token 219: ' L' (ID: 451)
  Prédit: 'Ls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ls' → logprob: -0.06520058959722519
    2. ' L' → logprob: -2.8152005672454834
    3. 'L' → logprob: -5.9402008056640625
    4. '   ' → logprob: -8.940200805664062
    5. 'i' → logprob: -9.440200805664062
    6. ' i' → logprob: -9.690200805664062
    7. ')' → logprob: -9.940200805664062
    8. ',' → logprob: -10.440200805664062
    9. '    ' → logprob: -10.690200805664062
    10. ' ' → logprob: -10.815200805664062

Token 220: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0032448475249111652
    2. ',' → logprob: -6.753244876861572
    3. 'Ls' → logprob: -7.378244876861572
    4. '+' → logprob: -7.753244876861572
    5. ')' → logprob: -8.378244400024414
    6. 'i' → logprob: -8.503244400024414
    7. 'Ss' → logprob: -8.753244400024414
    8. '+s' → logprob: -9.753244400024414
    9. 'Rs' → logprob: -10.003244400024414
    10. 'S' → logprob: -10.253244400024414

Token 221: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.09334124624729156
    2. '[i' → logprob: -2.71834135055542
    3. 'j' → logprob: -3.84334135055542
    4. '[k' → logprob: -7.09334135055542
    5. 'i' → logprob: -7.96834135055542
    6. '   ' → logprob: -9.468340873718262
    7. '[' → logprob: -9.593340873718262
    8. 'k' → logprob: -9.843340873718262
    9. ',' → logprob: -9.968340873718262
    10. '[N' → logprob: -10.093340873718262

Token 222: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0003290288441348821
    2. '[' → logprob: -8.37532901763916
    3. ' ][' → logprob: -10.25032901763916
    4. ')[' → logprob: -10.62532901763916
    5. ']' → logprob: -11.12532901763916
    6. '0' → logprob: -12.12532901763916
    7. ')][' → logprob: -12.50032901763916
    8. '   ' → logprob: -12.87532901763916
    9. '
' → logprob: -13.37532901763916
    10. '-' → logprob: -13.62532901763916

Token 223: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0020383221562951803
    2. '1' → logprob: -6.252038478851318
    3. '
' → logprob: -10.12703800201416
    4. '   ' → logprob: -10.37703800201416
    5. ' ' → logprob: -11.75203800201416
    6. '[' → logprob: -12.62703800201416
    7. '][' → logprob: -12.68953800201416
    8. 'i' → logprob: -12.75203800201416
    9. 'j' → logprob: -12.81453800201416
    10. ']' → logprob: -13.31453800201416

Token 224: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.10752254724502563
    2. '])' → logprob: -2.482522487640381
    3. ')' → logprob: -4.732522487640381
    4. ']' → logprob: -5.107522487640381
    5. '),' → logprob: -6.107522487640381
    6. ',' → logprob: -8.232522964477539
    7. '           ' → logprob: -8.232522964477539
    8. '       ' → logprob: -8.732522964477539
    9. '   ' → logprob: -9.357522964477539
    10. '-' → logprob: -9.357522964477539

Token 225: ' L' (ID: 451)
  Prédit: 'Ls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ls' → logprob: -0.02063812129199505
    2. ' L' → logprob: -3.8956382274627686
    3. 'L' → logprob: -10.145638465881348
    4. '   ' → logprob: -10.895638465881348
    5. '    ' → logprob: -12.145638465881348
    6. ' ' → logprob: -12.145638465881348
    7. '  ' → logprob: -12.145638465881348
    8. 'ls' → logprob: -12.270638465881348
    9. '       ' → logprob: -12.895638465881348
    10. '     ' → logprob: -13.145638465881348

Token 226: 's' (ID: 82)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00019901065388694406
    2. ' j' → logprob: -9.000199317932129
    3. ')' → logprob: -10.500199317932129
    4. '[j' → logprob: -11.125199317932129
    5. '   ' → logprob: -11.250199317932129
    6. 'ambda' → logprob: -12.375199317932129
    7. ']' → logprob: -12.875199317932129
    8. 's' → logprob: -13.250199317932129
    9. '	j' → logprob: -13.500199317932129
    10. '+' → logprob: -13.500199317932129

Token 227: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.5768046975135803
    2. 'j' → logprob: -1.0768046379089355
    3. ')' → logprob: -3.3268046379089355
    4. '+' → logprob: -3.9518046379089355
    5. '),' → logprob: -4.8268046379089355
    6. '][' → logprob: -5.3268046379089355
    7. ')]' → logprob: -5.7018046379089355
    8. ')])' → logprob: -5.7018046379089355
    9. '
' → logprob: -6.2018046379089355
    10. '   ' → logprob: -6.2018046379089355

Token 228: '][' (ID: 2696)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5604944825172424
    2. '][' → logprob: -1.5604944229125977
    3. '])' → logprob: -3.0604944229125977
    4. ']' → logprob: -3.5604944229125977
    5. ']))' → logprob: -3.8104944229125977
    6. '],' → logprob: -3.9354944229125977
    7. '       ' → logprob: -4.185494422912598
    8. '   ' → logprob: -4.310494422912598
    9. '[' → logprob: -4.435494422912598
    10. ')' → logprob: -4.435494422912598

Token 229: '2' (ID: 17)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.7106641530990601
    2. '0' → logprob: -1.46066415309906
    3. '2' → logprob: -1.71066415309906
    4. 'i' → logprob: -2.5856642723083496
    5. '1' → logprob: -4.71066427230835
    6. '
' → logprob: -5.71066427230835
    7. '   ' → logprob: -5.96066427230835
    8. '])' → logprob: -7.08566427230835
    9. '```' → logprob: -7.21066427230835
    10. ')' → logprob: -7.33566427230835

Token 230: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01874503679573536
    2. '])' → logprob: -4.018744945526123
    3. ' )' → logprob: -8.768745422363281
    4. '))' → logprob: -9.018745422363281
    5. ']' → logprob: -9.518745422363281
    6. '   ' → logprob: -9.643745422363281
    7. ')
' → logprob: -9.893745422363281
    8. ',' → logprob: -11.643745422363281
    9. '       ' → logprob: -11.643745422363281
    10. ' ' → logprob: -11.768745422363281

Token 231: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.13238604366779327
    2. 'for' → logprob: -2.1323859691619873
    3. '           ' → logprob: -5.632386207580566
    4. '            ' → logprob: -7.132386207580566
    5. ')' → logprob: -7.757386207580566
    6. '          ' → logprob: -8.882386207580566
    7. ' ' → logprob: -9.257386207580566
    8. '        ' → logprob: -9.382386207580566
    9. '              ' → logprob: -9.882386207580566
    10. '	for' → logprob: -10.007386207580566

Token 232: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.25211068987846375
    2. ' j' → logprob: -1.5021107196807861
    3. 'i' → logprob: -9.752110481262207
    4. '   ' → logprob: -9.877110481262207
    5. ' ' → logprob: -11.002110481262207
    6. ' i' → logprob: -11.002110481262207
    7. '```' → logprob: -12.002110481262207
    8. '    ' → logprob: -12.127110481262207
    9. '  ' → logprob: -12.377110481262207
    10. ')' → logprob: -12.502110481262207

Token 233: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07673858851194382
    2. 'j' → logprob: -3.2017385959625244
    3. ' j' → logprob: -3.5767385959625244
    4. 'in' → logprob: -5.326738357543945
    5. ')' → logprob: -9.076738357543945
    6. '           ' → logprob: -9.701738357543945
    7. '=j' → logprob: -10.451738357543945
    8. 'In' → logprob: -10.951738357543945
    9. ',j' → logprob: -10.951738357543945
    10. '   ' → logprob: -11.076738357543945

Token 234: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.016154957935214043
    2. ' range' → logprob: -4.141154766082764
    3. 'count' → logprob: -9.891155242919922
    4. 'chain' → logprob: -10.641155242919922
    5. 're' → logprob: -11.141155242919922
    6. '   ' → logprob: -11.766155242919922
    7. 'i' → logprob: -11.891155242919922
    8. 'reverse' → logprob: -13.016155242919922
    9. ' ' → logprob: -13.516155242919922
    10. '
' → logprob: -13.641155242919922

Token 235: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.012455145828425884
    2. 'i' → logprob: -4.637454986572266
    3. '(' → logprob: -6.262454986572266
    4. '(N' → logprob: -7.762454986572266
    5. '   ' → logprob: -8.887454986572266
    6. '0' → logprob: -9.262454986572266
    7. '(j' → logprob: -10.387454986572266
    8. 'N' → logprob: -11.012454986572266
    9. ')' → logprob: -11.387454986572266
    10. ' (' → logprob: -11.512454986572266

Token 236: 'L' (ID: 43)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.02760702185332775
    2. 'L' → logprob: -3.652606964111328
    3. ',' → logprob: -7.027606964111328
    4. ')' → logprob: -8.777606964111328
    5. '+' → logprob: -10.402606964111328
    6. 'N' → logprob: -10.902606964111328
    7. '[' → logprob: -11.090106964111328
    8. ' ,' → logprob: -11.277606964111328
    9. ',R' → logprob: -11.777606964111328
    10. 'pos' → logprob: -11.840106964111328

Token 237: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00584051851183176
    2. '+' → logprob: -6.005840301513672
    3. '-' → logprob: -6.505840301513672
    4. ' ,' → logprob: -7.505840301513672
    5. ',-' → logprob: -7.755840301513672
    6. ' -' → logprob: -8.380840301513672
    7. '   ' → logprob: -9.005840301513672
    8. ' +' → logprob: -9.130840301513672
    9. '       ' → logprob: -9.380840301513672
    10. ',None' → logprob: -9.755840301513672

Token 238: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0005439769593067467
    2. ' -' → logprob: -7.62554407119751
    3. 'N' → logprob: -10.875543594360352
    4. '   ' → logprob: -11.750543594360352
    5. '-i' → logprob: -12.000543594360352
    6. ' ' → logprob: -12.375543594360352
    7. '-L' → logprob: -12.500543594360352
    8. '-N' → logprob: -12.625543594360352
    9. '0' → logprob: -12.750543594360352
    10. 'None' → logprob: -13.500543594360352

Token 239: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.036524842376821e-05
    2. '   ' → logprob: -10.625040054321289
    3. ' ' → logprob: -11.875040054321289
    4. '
' → logprob: -12.750040054321289
    5. '2' → logprob: -13.625040054321289
    6. '```' → logprob: -13.625040054321289
    7. ',' → logprob: -14.500040054321289
    8. '

' → logprob: -15.062540054321289
    9. '     ' → logprob: -15.125040054321289
    10. '       ' → logprob: -15.187540054321289

Token 240: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006374279037117958
    2. '-' → logprob: -5.381374359130859
    3. ',-' → logprob: -6.506374359130859
    4. ' ,' → logprob: -9.25637435913086
    5. ' -' → logprob: -9.88137435913086
    6. '1' → logprob: -10.38137435913086
    7. ')' → logprob: -11.00637435913086
    8. '   ' → logprob: -11.63137435913086
    9. '```' → logprob: -11.63137435913086
    10. ',
' → logprob: -11.75637435913086

Token 241: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0052858153358101845
    2. ' -' → logprob: -5.255285739898682
    3. ' ' → logprob: -11.50528621673584
    4. ',' → logprob: -11.50528621673584
    5. '   ' → logprob: -11.88028621673584
    6. ')' → logprob: -12.38028621673584
    7. '-step' → logprob: -12.50528621673584
    8. '```' → logprob: -12.88028621673584
    9. '           ' → logprob: -13.13028621673584
    10. '  ' → logprob: -13.25528621673584

Token 242: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -12.875004768371582
    3. '-' → logprob: -13.875004768371582
    4. '   ' → logprob: -14.750004768371582
    5. '```' → logprob: -16.125003814697266
    6. '                   ' → logprob: -16.375003814697266
    7. '
' → logprob: -16.500003814697266
    8. ')' → logprob: -16.625003814697266
    9. ',' → logprob: -17.375003814697266
    10. '2' → logprob: -18.000003814697266

Token 243: ')' (ID: 8)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.7351990938186646
    2. ')' → logprob: -1.1101990938186646
    3. '),
' → logprob: -1.7351990938186646
    4. ')),' → logprob: -5.235198974609375
    5. '):
' → logprob: -5.860198974609375
    6. ')
' → logprob: -5.985198974609375
    7. '))' → logprob: -6.110198974609375
    8. '       ' → logprob: -7.735198974609375
    9. ')),
' → logprob: -8.235198974609375
    10. '),

' → logprob: -8.235198974609375

Token 244: ' if' (ID: 538)
  Prédit: '),
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),
' → logprob: -0.0775689110159874
    2. '       ' → logprob: -3.202569007873535
    3. '),' → logprob: -3.452569007873535
    4. '           ' → logprob: -6.952569007873535
    5. ')' → logprob: -7.827569007873535
    6. '   ' → logprob: -7.827569007873535
    7. '),
' → logprob: -8.702569007873535
    8. '               ' → logprob: -9.202569007873535
    9. '),

' → logprob: -9.202569007873535
    10. ' ),
' → logprob: -9.577569007873535

Token 245: ' L' (ID: 451)
  Prédit: 'Ls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ls' → logprob: -0.3584493100643158
    2. ' L' → logprob: -1.2334493398666382
    3. ' not' → logprob: -4.983449459075928
    4. 'not' → logprob: -6.108449459075928
    5. '   ' → logprob: -8.48344898223877
    6. 'L' → logprob: -9.10844898223877
    7. 'direction' → logprob: -9.35844898223877
    8. ' direction' → logprob: -9.60844898223877
    9. ' ' → logprob: -9.60844898223877
    10. 'done' → logprob: -10.48344898223877

Token 246: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01851652003824711
    2. '[j' → logprob: -4.393516540527344
    3. '[s' → logprob: -5.268516540527344
    4. '[' → logprob: -8.018516540527344
    5. '[
' → logprob: -8.893516540527344
    6. '<|end|>' → logprob: -9.893516540527344
    7. '```' → logprob: -10.018516540527344
    8. ')' → logprob: -10.018516540527344
    9. '_s' → logprob: -10.768516540527344
    10. ' s' → logprob: -10.893516540527344

Token 247: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.1080467781284824e-05
    2. '[' → logprob: -11.125041007995605
    3. ' [' → logprob: -11.375041007995605
    4. '[
' → logprob: -11.875041007995605
    5. ')[' → logprob: -13.500041007995605
    6. 'j' → logprob: -13.500041007995605
    7. '
' → logprob: -13.750041007995605
    8. '[i' → logprob: -14.000041007995605
    9. '   ' → logprob: -14.250041007995605
    10. ')' → logprob: -14.250041007995605

Token 248: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.033925753086805344
    2. ')[' → logprob: -3.533925771713257
    3. '[' → logprob: -5.658925533294678
    4. ')][' → logprob: -7.908925533294678
    5. ')' → logprob: -9.908926010131836
    6. ' ][' → logprob: -10.283926010131836
    7. '   ' → logprob: -10.408926010131836
    8. ']' → logprob: -10.658926010131836
    9. ']][' → logprob: -11.033926010131836
    10. '])[' → logprob: -11.033926010131836

Token 249: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0009592238930054009
    2. '[' → logprob: -8.000959396362305
    3. ' ' → logprob: -8.375959396362305
    4. '
' → logprob: -8.375959396362305
    5. '   ' → logprob: -10.500959396362305
    6. '][' → logprob: -11.000959396362305
    7. ')' → logprob: -11.188459396362305
    8. '1' → logprob: -11.250959396362305
    9. '0' → logprob: -11.438459396362305
    10. '```' → logprob: -11.750959396362305

Token 250: ']' (ID: 60)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6472794413566589
    2. 'not' → logprob: -0.8972794413566589
    3. ']' → logprob: -2.8972795009613037
    4. ')' → logprob: -4.397279262542725
    5. '<|end|>' → logprob: -7.647279262542725
    6. '][' → logprob: -8.397279739379883
    7. '[' → logprob: -9.022279739379883
    8. ' ' → logprob: -9.022279739379883
    9. '	not' → logprob: -9.647279739379883
    10. ' ]' → logprob: -9.647279739379883

Token 251: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.06206134334206581
    2. 'not' → logprob: -2.812061309814453
    3. ')' → logprob: -9.687061309814453
    4. ' in' → logprob: -12.062061309814453
    5. ' ' → logprob: -12.187061309814453
    6. '[' → logprob: -12.312061309814453
    7. ']' → logprob: -12.437061309814453
    8. '	not' → logprob: -12.687061309814453
    9. ' <' → logprob: -13.062061309814453
    10. '<|end|>' → logprob: -13.312061309814453

Token 252: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20179611444473267
    2. 'in' → logprob: -1.701796054840088
    3. 'done' → logprob: -8.201796531677246
    4. ' done' → logprob: -10.076796531677246
    5. ' ' → logprob: -11.076796531677246
    6. '
' → logprob: -11.451796531677246
    7. ')' → logprob: -11.576796531677246
    8. '```' → logprob: -12.076796531677246
    9. '   ' → logprob: -12.201796531677246
    10. 'import' → logprob: -12.951796531677246

Token 253: ' done' (ID: 4167)
  Prédit: 'done'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'done' → logprob: -0.05489864572882652
    2. ' done' → logprob: -2.929898738861084
    3. '   ' → logprob: -12.554898262023926
    4. ' ' → logprob: -12.929898262023926
    5. '	done' → logprob: -13.054898262023926
    6. 'Done' → logprob: -13.179898262023926
    7. '```' → logprob: -13.804898262023926
    8. '.done' → logprob: -14.054898262023926
    9. '
' → logprob: -14.429898262023926
    10. '  ' → logprob: -14.429898262023926

Token 254: '),
' (ID: 2313)
  Prédit: '),
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),
' → logprob: -0.010273858904838562
    2. '),' → logprob: -4.8852739334106445
    3. '       ' → logprob: -6.0102739334106445
    4. '   ' → logprob: -9.260273933410645
    5. '),
' → logprob: -10.135273933410645
    6. '           ' → logprob: -10.510273933410645
    7. ')' → logprob: -11.010273933410645
    8. ' ),
' → logprob: -11.385273933410645
    9. '),

' → logprob: -12.510273933410645
    10. '      ' → logprob: -12.635273933410645

Token 255: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7894238829612732
    2. '           ' → logprob: -0.9144238829612732
    3. ')' → logprob: -2.414423942565918
    4. ')
' → logprob: -4.039423942565918
    5. ' lambda' → logprob: -4.414423942565918
    6. '               ' → logprob: -5.539423942565918
    7. 'lambda' → logprob: -5.664423942565918
    8. '0' → logprob: -6.164423942565918
    9. '   ' → logprob: -6.414423942565918
    10. '```' → logprob: -6.789423942565918

Token 256: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' (adapté à ' lambda') → logprob: -0.5761528015136719
    2. ' lambda' → logprob: -0.8261528015136719
    3. '(lambda' → logprob: -9.576152801513672
    4. '           ' → logprob: -10.451152801513672
    5. '            ' → logprob: -10.701152801513672
    6. '0' → logprob: -11.326152801513672
    7. '    ' → logprob: -11.451152801513672
    8. 'None' → logprob: -11.701152801513672
    9. ' ' → logprob: -11.826152801513672
    10. '=lambda' → logprob: -11.951152801513672

Token 257: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.01727837696671486
    2. 'j' → logprob: -4.14227819442749
    3. ' x' → logprob: -7.01727819442749
    4. ' k' → logprob: -9.017278671264648
    5. 'x' → logprob: -9.267278671264648
    6. ' ' → logprob: -10.767278671264648
    7. ' (' → logprob: -10.892278671264648
    8. '(j' → logprob: -11.142278671264648
    9. 'k' → logprob: -11.267278671264648
    10. ' i' → logprob: -11.392278671264648

Token 258: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000746736885048449
    2. ' :' → logprob: -7.500746726989746
    3. ':j' → logprob: -8.750746726989746
    4. ':
' → logprob: -11.500746726989746
    5. 'j' → logprob: -12.000746726989746
    6. ',' → logprob: -12.500746726989746
    7. ' j' → logprob: -12.500746726989746
    8. ',j' → logprob: -12.625746726989746
    9. '=' → logprob: -13.375746726989746
    10. '+:' → logprob: -13.625746726989746

Token 259: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08460573852062225
    2. '-j' → logprob: -3.2096056938171387
    3. '-L' → logprob: -4.334605693817139
    4. ' -' → logprob: -4.459605693817139
    5. '0' → logprob: -4.584605693817139
    6. '-i' → logprob: -6.584605693817139
    7. '   ' → logprob: -6.959605693817139
    8. '-N' → logprob: -7.459605693817139
    9. '-M' → logprob: -7.709605693817139
    10. ' ' → logprob: -8.084606170654297

Token 260: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.301394023466855e-05
    2. ' ' → logprob: -10.375062942504883
    3. '-' → logprob: -11.375062942504883
    4. 'j' → logprob: -12.250062942504883
    5. '
' → logprob: -12.500062942504883
    6. '   ' → logprob: -12.625062942504883
    7. '(' → logprob: -12.875062942504883
    8. '  ' → logprob: -14.187562942504883
    9. '(-' → logprob: -14.250062942504883
    10. '

' → logprob: -14.562562942504883

Token 261: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5064417123794556
    2. '       ' → logprob: -1.1314417123794556
    3. ' if' → logprob: -3.256441593170166
    4. ' )' → logprob: -3.506441593170166
    5. '),' → logprob: -6.506441593170166
    6. '   ' → logprob: -7.006441593170166
    7. ')
' → logprob: -7.506441593170166
    8. '<|end|>' → logprob: -7.506441593170166
    9. '))' → logprob: -7.631441593170166
    10. '
' → logprob: -7.631441593170166

Token 262: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.06196959316730499
    2. ' j' → logprob: -2.811969518661499
    3. '	j' → logprob: -14.311969757080078
    4. '           ' → logprob: -14.936969757080078
    5. '   ' → logprob: -15.186969757080078
    6. ' ' → logprob: -15.186969757080078
    7. '  ' → logprob: -16.811969757080078
    8. '    ' → logprob: -16.811969757080078
    9. '$j' → logprob: -16.811969757080078
    10. '       ' → logprob: -17.686969757080078

Token 263: ' <' (ID: 464)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5763989090919495
    2. ' ==' → logprob: -0.8263989090919495
    3. '==-' → logprob: -7.826398849487305
    4. '==
' → logprob: -11.076398849487305
    5. ' ' → logprob: -12.326398849487305
    6. 'j' → logprob: -12.451398849487305
    7. ')' → logprob: -12.451398849487305
    8. ']==' → logprob: -12.576398849487305
    9. '=' → logprob: -12.576398849487305
    10. '+' → logprob: -12.701398849487305

Token 264: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001531885820440948
    2. ' ' → logprob: -6.501532077789307
    3. '   ' → logprob: -11.501531600952148
    4. '
' → logprob: -12.626531600952148
    5. '       ' → logprob: -13.126531600952148
    6. '1' → logprob: -13.126531600952148
    7. '-' → logprob: -13.251531600952148
    8. '  ' → logprob: -13.376531600952148
    9. '    ' → logprob: -13.501531600952148
    10. '```' → logprob: -13.751531600952148

Token 265: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0012188091641291976
    2. ' ' → logprob: -6.751218795776367
    3. '1' → logprob: -11.126218795776367
    4. '=' → logprob: -11.126218795776367
    5. '   ' → logprob: -12.001218795776367
    6. '
' → logprob: -13.001218795776367
    7. '  ' → logprob: -13.251218795776367
    8. '-' → logprob: -13.501218795776367
    9. 'j' → logprob: -13.626218795776367
    10. '```' → logprob: -13.751218795776367

Token 266: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.008711130358278751
    2. 'else' → logprob: -4.883711338043213
    3. ')' → logprob: -7.133711338043213
    4. '       ' → logprob: -8.883710861206055
    5. ' )' → logprob: -10.383710861206055
    6. '            ' → logprob: -10.633710861206055
    7. '           ' → logprob: -10.758710861206055
    8. '        ' → logprob: -10.758710861206055
    9. ' ' → logprob: -11.008710861206055
    10. '	else' → logprob: -11.883710861206055

Token 267: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.034858014434576035
    2. ' next' → logprob: -3.409857988357544
    3. 'Ls' → logprob: -6.909858226776123
    4. '   ' → logprob: -9.284857749938965
    5. 'min' → logprob: -10.909857749938965
    6. '  ' → logprob: -11.034857749938965
    7. '    ' → logprob: -11.034857749938965
    8. 'prev' → logprob: -11.159857749938965
    9. ' ' → logprob: -11.534857749938965
    10. '	next' → logprob: -11.784857749938965

Token 268: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00011594036914175376
    2. 'x' → logprob: -9.875116348266602
    3. '(' → logprob: -10.000116348266602
    4. '((' → logprob: -11.625116348266602
    5. '(
' → logprob: -12.375116348266602
    6. '(-' → logprob: -13.375116348266602
    7. '(chain' → logprob: -13.750116348266602
    8. '(i' → logprob: -14.125116348266602
    9. '(lambda' → logprob: -14.750116348266602
    10. '   ' → logprob: -14.750116348266602

Token 269: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00024870390188880265
    2. ' [' → logprob: -9.750248908996582
    3. ')[' → logprob: -9.875248908996582
    4. 'for' → logprob: -10.125248908996582
    5. '(' → logprob: -10.875248908996582
    6. '
' → logprob: -11.375248908996582
    7. ' for' → logprob: -11.375248908996582
    8. ' ' → logprob: -11.750248908996582
    9. '[j' → logprob: -12.250248908996582
    10. '   ' → logprob: -12.375248908996582

Token 270: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.022743474692106247
    2. '0' → logprob: -4.1477437019348145
    3. '1' → logprob: -6.0227437019348145
    4. '(' → logprob: -6.2727437019348145
    5. '[j' → logprob: -7.8977437019348145
    6. 'pos' → logprob: -8.022743225097656
    7. 'for' → logprob: -8.022743225097656
    8. ')' → logprob: -8.272743225097656
    9. '
' → logprob: -8.897743225097656
    10. '[i' → logprob: -9.147743225097656

Token 271: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5763833522796631
    2. 'for' → logprob: -0.8263833522796631
    3. '[' → logprob: -8.076383590698242
    4. ')' → logprob: -9.576383590698242
    5. '	for' → logprob: -10.576383590698242
    6. '   ' → logprob: -11.701383590698242
    7. ' ' → logprob: -11.826383590698242
    8. '
' → logprob: -12.076383590698242
    9. '           ' → logprob: -13.076383590698242
    10. ')[' → logprob: -13.326383590698242

Token 272: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12794722616672516
    2. 'for' → logprob: -2.1279473304748535
    3. '[' → logprob: -7.0029473304748535
    4. '	for' → logprob: -9.502946853637695
    5. ' ' → logprob: -11.252946853637695
    6. ')' → logprob: -12.127946853637695
    7. '   ' → logprob: -12.377946853637695
    8. '
' → logprob: -12.627946853637695
    9. ')[' → logprob: -13.002946853637695
    10. '  ' → logprob: -13.627946853637695

Token 273: ' x' (ID: 1215)
  Prédit: 'Ls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ls' → logprob: -0.07074710726737976
    2. ' L' → logprob: -2.695747137069702
    3. ' chain' → logprob: -8.695747375488281
    4. 'L' → logprob: -8.945747375488281
    5. ' ls' → logprob: -9.195747375488281
    6. ' range' → logprob: -9.195747375488281
    7. ' x' → logprob: -9.820747375488281
    8. 'ls' → logprob: -9.820747375488281
    9. 'x' → logprob: -10.320747375488281
    10. ' ' → logprob: -10.945747375488281

Token 274: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3904440701007843
    2. 'in' → logprob: -1.140444040298462
    3. 'Ls' → logprob: -5.765444278717041
    4. 'j' → logprob: -9.640443801879883
    5. ')' → logprob: -9.890443801879883
    6. ' j' → logprob: -10.015443801879883
    7. ' ' → logprob: -10.515443801879883
    8. '(j' → logprob: -10.765443801879883
    9. '(ls' → logprob: -10.765443801879883
    10. '(' → logprob: -10.890443801879883

Token 275: ' L' (ID: 451)
  Prédit: 'Ls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ls' → logprob: -0.004957054741680622
    2. 'chain' → logprob: -6.12995719909668
    3. 're' → logprob: -6.50495719909668
    4. 'range' → logprob: -7.37995719909668
    5. ' L' → logprob: -9.12995719909668
    6. ' chain' → logprob: -9.25495719909668
    7. 'L' → logprob: -9.50495719909668
    8. '   ' → logprob: -9.75495719909668
    9. ' reversed' → logprob: -10.00495719909668
    10. ' range' → logprob: -10.12995719909668

Token 276: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07923400402069092
    2. '[j' → logprob: -2.7042341232299805
    3. '[' → logprob: -5.3292341232299805
    4. 'j' → logprob: -6.0792341232299805
    5. ')' → logprob: -7.0792341232299805
    6. ']' → logprob: -7.8292341232299805
    7. '```' → logprob: -8.70423412322998
    8. '[
' → logprob: -8.95423412322998
    9. 'Ls' → logprob: -8.95423412322998
    10. '(j' → logprob: -9.07923412322998

Token 277: '[:' (ID: 7808)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00020342117932159454
    2. '(j' → logprob: -10.000203132629395
    3. '[:' → logprob: -10.000203132629395
    4. 'range' → logprob: -10.375203132629395
    5. '[' → logprob: -10.750203132629395
    6. '   ' → logprob: -11.000203132629395
    7. 'j' → logprob: -11.125203132629395
    8. '```' → logprob: -12.375203132629395
    9. '[x' → logprob: -13.000203132629395
    10. 'if' → logprob: -13.000203132629395

Token 278: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -7.898723561083898e-05
    2. ' j' → logprob: -10.750079154968262
    3. '   ' → logprob: -10.875079154968262
    4. 'max' → logprob: -11.625079154968262
    5. '(j' → logprob: -12.125079154968262
    6. '(' → logprob: -12.500079154968262
    7. ':j' → logprob: -12.625079154968262
    8. '```' → logprob: -12.875079154968262
    9. 'i' → logprob: -13.125079154968262
    10. '[j' → logprob: -13.125079154968262

Token 279: '+' (ID: 10)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.2347487062215805
    2. ']))' → logprob: -1.7347487211227417
    3. '+' → logprob: -4.609748840332031
    4. '])
' → logprob: -4.609748840332031
    5. ']' → logprob: -5.734748840332031
    6. '       ' → logprob: -6.359748840332031
    7. '[' → logprob: -6.484748840332031
    8. '])))' → logprob: -6.609748840332031
    9. '][' → logprob: -7.234748840332031
    10. '   ' → logprob: -7.359748840332031

Token 280: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003074566484428942
    2. '])' → logprob: -8.875307083129883
    3. ' ' → logprob: -9.250307083129883
    4. ']))' → logprob: -11.125307083129883
    5. ']))
' → logprob: -11.750307083129883
    6. '])
' → logprob: -11.750307083129883
    7. '0' → logprob: -11.750307083129883
    8. ']' → logprob: -11.875307083129883
    9. '   ' → logprob: -12.812807083129883
    10. '```' → logprob: -12.937807083129883

Token 281: '][' (ID: 2696)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.12449303269386292
    2. '])
' → logprob: -2.24949312210083
    3. ']))' → logprob: -5.49949312210083
    4. ']' → logprob: -5.62449312210083
    5. ')' → logprob: -6.37449312210083
    6. '])
' → logprob: -7.87449312210083
    7. ')])' → logprob: -7.99949312210083
    8. '       ' → logprob: -8.124492645263672
    9. '))' → logprob: -8.499492645263672
    10. '   ' → logprob: -8.874492645263672

Token 282: '::-' (ID: 96612)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5852476954460144
    2. '])' → logprob: -1.3352477550506592
    3. '1' → logprob: -2.335247755050659
    4. '][' → logprob: -3.210247755050659
    5. '0' → logprob: -3.835247755050659
    6. '::-' → logprob: -5.33524751663208
    7. ':' → logprob: -6.08524751663208
    8. '(' → logprob: -6.33524751663208
    9. '][-' → logprob: -6.46024751663208
    10. ']))' → logprob: -6.46024751663208

Token 283: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.005973111838102341
    2. '1' → logprob: -5.3809733390808105
    3. '::-' → logprob: -8.005972862243652
    4. '])' → logprob: -8.255972862243652
    5. 'j' → logprob: -8.380972862243652
    6. '0' → logprob: -8.630972862243652
    7. 'x' → logprob: -9.630972862243652
    8. '+' → logprob: -9.755972862243652
    9. ':-' → logprob: -10.005972862243652
    10. ':' → logprob: -10.130972862243652

Token 284: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.09318388998508453
    2. '])
' → logprob: -2.593183994293213
    3. ']))' → logprob: -4.968183994293213
    4. ']' → logprob: -5.343183994293213
    5. '       ' → logprob: -7.093183994293213
    6. '])
' → logprob: -7.843183994293213
    7. ' ])' → logprob: -7.843183994293213
    8. ')' → logprob: -8.843183517456055
    9. '))' → logprob: -8.968183517456055
    10. ')])' → logprob: -9.343183517456055

Token 285: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.42571377754211426
    2. '       ' → logprob: -1.1757137775421143
    3. ')
' → logprob: -3.4257137775421143
    4. '   ' → logprob: -5.800713539123535
    5. '))' → logprob: -7.050713539123535
    6. '),
' → logprob: -7.175713539123535
    7. '),' → logprob: -7.925713539123535
    8. ')}' → logprob: -8.175713539123535
    9. ')))' → logprob: -9.800713539123535
    10. '           ' → logprob: -9.800713539123535

Token 286: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21720106899738312
    2. '   ' → logprob: -1.9672011137008667
    3. '       ' → logprob: -3.467200994491577
    4. '),' → logprob: -4.467201232910156
    5. ')
' (adapté à ' )
') → logprob: -5.092201232910156
    6. '),
' → logprob: -6.217201232910156
    7. ')]' → logprob: -6.467201232910156
    8. ')}' → logprob: -6.842201232910156
    9. ')])' → logprob: -7.717201232910156
    10. '}' → logprob: -7.842201232910156

Token 287: '   ' (ID: 271)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.26094797253608704
    2. '   ' → logprob: -1.5109479427337646
    3. '       ' → logprob: -6.010948181152344
    4. '<|end|>' → logprob: -6.635948181152344
    5. ',' → logprob: -6.760948181152344
    6. ',
' → logprob: -6.885948181152344
    7. '][' → logprob: -7.260948181152344
    8. ']
' → logprob: -7.385948181152344
    9. ')' → logprob: -8.260948181152344
    10. ' ]' → logprob: -8.760948181152344

Token 288: ' ]

' (ID: 32229)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.050023723393678665
    2. '   ' → logprob: -3.8000237941741943
    3. '][' → logprob: -4.050023555755615
    4. '[' → logprob: -5.425023555755615
    5. ')' → logprob: -5.925023555755615
    6. ']
' → logprob: -7.175023555755615
    7. ')][' → logprob: -8.050024032592773
    8. ')]' → logprob: -8.425024032592773
    9. '])' → logprob: -8.550024032592773
    10. ')[' → logprob: -9.175024032592773

Token 289: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10303293168544769
    2. ')' → logprob: -2.7280328273773193
    3. ':' → logprob: -4.603033065795898
    4. '[
' → logprob: -4.978033065795898
    5. '<|end|>' → logprob: -5.228033065795898
    6. ']' → logprob: -5.853033065795898
    7. '   ' → logprob: -6.853033065795898
    8. '(direction' → logprob: -6.978033065795898
    9. ')[' → logprob: -7.353033065795898
    10. '(' → logprob: -7.478033065795898

Token 290: ' pointers' (ID: 58762)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6200180053710938
    2. ':' → logprob: -2.1200180053710938
    3. ')' → logprob: -2.2450180053710938
    4. '(' → logprob: -2.6200180053710938
    5. ' ' → logprob: -2.7450180053710938
    6. '   ' → logprob: -2.8700180053710938
    7. ']' → logprob: -4.620018005371094
    8. '    ' → logprob: -5.620018005371094
    9. '[
' → logprob: -5.620018005371094
    10. '(
' → logprob: -5.745018005371094

Token 291: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11370175331830978
    2. ' =' → logprob: -2.238701820373535
    3. ',' → logprob: -7.488701820373535
    4. '<|end|>' → logprob: -8.613701820373535
    5. '=[]' → logprob: -10.238701820373535
    6. '<|end|>' → logprob: -10.738701820373535
    7. '=[' → logprob: -11.113701820373535
    8. '=
' → logprob: -11.113701820373535
    9. '   ' → logprob: -11.863701820373535
    10. '[' → logprob: -12.238701820373535

Token 292: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4050140976905823
    2. ' [' → logprob: -1.1550140380859375
    3. '[count' → logprob: -4.9050140380859375
    4. '[i' → logprob: -5.2800140380859375
    5. '   ' → logprob: -6.7800140380859375
    6. 'cycle' → logprob: -7.0300140380859375
    7. '[
' → logprob: -7.2800140380859375
    8. ' cycle' → logprob: -7.7800140380859375
    9. '[list' → logprob: -8.030014038085938
    10. '[c' → logprob: -8.155014038085938

Token 293: 'lambda' (ID: 35280)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2539239525794983
    2. '0' → logprob: -1.6289238929748535
    3. 'N' → logprob: -4.6289238929748535
    4. 'cycle' → logprob: -5.0039238929748535
    5. '(i' → logprob: -5.6289238929748535
    6. '[i' → logprob: -6.6289238929748535
    7. '[N' → logprob: -6.7539238929748535
    8. 'pos' → logprob: -6.8789238929748535
    9. '[' → logprob: -6.8789238929748535
    10. '(' → logprob: -7.0039238929748535

Token 294: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14460526406764984
    2. ' j' → logprob: -2.8946051597595215
    3. ' i' → logprob: -3.7696051597595215
    4. 'j' → logprob: -4.2696051597595215
    5. 'i' → logprob: -4.6446051597595215
    6. ' pos' → logprob: -5.1446051597595215
    7. ' idx' → logprob: -5.6446051597595215
    8. 'pos' → logprob: -5.7696051597595215
    9. ' direction' → logprob: -5.7696051597595215
    10. ' :' → logprob: -5.8946051597595215

Token 295: ' (' (ID: 350)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.786515474319458
    2. 'i' → logprob: -1.161515474319458
    3. '0' → logprob: -3.036515474319458
    4. 'pos' → logprob: -3.161515474319458
    5. 'next' → logprob: -3.286515474319458
    6. '(i' → logprob: -3.411515474319458
    7. '(' → logprob: -3.786515474319458
    8. ' cycle' → logprob: -4.286515235900879
    9. ' i' → logprob: -4.286515235900879
    10. ' next' → logprob: -5.161515235900879

Token 296: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.2288514375686646
    2. 'pos' → logprob: -1.3538514375686646
    3. '0' → logprob: -1.7288514375686646
    4. 'cycle' → logprob: -2.228851318359375
    5. '(i' → logprob: -2.603851318359375
    6. '(' → logprob: -3.353851318359375
    7. 'done' → logprob: -3.978851318359375
    8. 'next' → logprob: -4.728851318359375
    9. '((' → logprob: -5.853851318359375
    10. '(pos' → logprob: -6.103851318359375

Token 297: 'R' (ID: 49)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.03383138030767441
    2. 'R' → logprob: -3.4088313579559326
    3. ')' → logprob: -10.596331596374512
    4. ',' → logprob: -10.658831596374512
    5. ' L' → logprob: -10.783831596374512
    6. 'N' → logprob: -11.033831596374512
    7. '_L' → logprob: -11.721331596374512
    8. '0' → logprob: -12.283831596374512
    9. 'I' → logprob: -12.346331596374512
    10. '
' → logprob: -12.408831596374512

Token 298: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5895559787750244
    2. ' +' → logprob: -1.5895559787750244
    3. '+' → logprob: -1.9645559787750244
    4. '),' → logprob: -2.7145559787750244
    5. ',),' → logprob: -4.339555740356445
    6. ',
' → logprob: -5.339555740356445
    7. ')' → logprob: -5.714555740356445
    8. ',),
' → logprob: -5.964555740356445
    9. ' ,' → logprob: -6.339555740356445
    10. ',)' → logprob: -6.339555740356445

Token 299: ' N' (ID: 478)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.22663313150405884
    2. 'N' → logprob: -2.351633071899414
    3. 'lambda' → logprob: -3.351633071899414
    4. ' i' → logprob: -3.476633071899414
    5. ')' → logprob: -4.351633071899414
    6. ' lambda' → logprob: -5.226633071899414
    7. ' N' → logprob: -5.226633071899414
    8. '0' → logprob: -5.601633071899414
    9. 'None' → logprob: -5.851633071899414
    10. 'len' → logprob: -6.101633071899414

Token 300: ',' (ID: 11)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.1337364912033081
    2. ')' → logprob: -2.6337366104125977
    3. ',' → logprob: -3.5087366104125977
    4. '),
' → logprob: -4.133736610412598
    5. ')]' → logprob: -6.133736610412598
    6. '),(' → logprob: -6.633736610412598
    7. ')],' → logprob: -6.883736610412598
    8. ' ),' → logprob: -7.508736610412598
    9. '-' → logprob: -7.508736610412598
    10. ',
' → logprob: -8.258736610412598

Token 301: ' ' (ID: 220)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.22372333705425262
    2. 'lambda' → logprob: -2.0987234115600586
    3. ')' → logprob: -3.8487234115600586
    4. '0' → logprob: -3.9737234115600586
    5. ')]' → logprob: -5.098723411560059
    6. 'None' → logprob: -5.223723411560059
    7. '   ' → logprob: -5.723723411560059
    8. ' i' → logprob: -5.723723411560059
    9. ' ' → logprob: -6.348723411560059
    10. '  ' → logprob: -6.473723411560059

Token 302: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1430233120918274
    2. 'lambda' → logprob: -2.6430232524871826
    3. ')' → logprob: -4.268023490905762
    4. '0' → logprob: -4.643023490905762
    5. 'pos' → logprob: -5.268023490905762
    6. 'Rs' → logprob: -5.393023490905762
    7. 'N' → logprob: -5.643023490905762
    8. ')]' → logprob: -5.893023490905762
    9. 'None' → logprob: -5.893023490905762
    10. 'True' → logprob: -6.018023490905762

Token 303: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.27699050307273865
    2. ')' → logprob: -2.0269904136657715
    3. ')]' → logprob: -2.4019904136657715
    4. '),
' → logprob: -4.0269904136657715
    5. ',' → logprob: -7.1519904136657715
    6. '   ' → logprob: -8.27699089050293
    7. ')
' → logprob: -8.65199089050293
    8. '))' → logprob: -8.77699089050293
    9. ')],' → logprob: -9.15199089050293
    10. '),(' → logprob: -9.40199089050293

Token 304: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.11390005797147751
    2. 'lambda' → logprob: -2.2388999462127686
    3. '   ' → logprob: -7.738900184631348
    4. ',' → logprob: -8.613900184631348
    5. '    ' → logprob: -8.738900184631348
    6. '(lambda' → logprob: -9.363900184631348
    7. '       ' → logprob: -9.988900184631348
    8. ' ' → logprob: -10.363900184631348
    9. ' 
' → logprob: -11.363900184631348
    10. ']' → logprob: -11.488900184631348

Token 305: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00019221604452468455
    2. ' :' → logprob: -8.625192642211914
    3. '=lambda' → logprob: -12.375192642211914
    4. ':
' → logprob: -12.875192642211914
    5. 'lambda' → logprob: -13.125192642211914
    6. '():' → logprob: -13.750192642211914
    7. ' lambda' → logprob: -14.375192642211914
    8. ')' → logprob: -15.125192642211914
    9. '=' → logprob: -15.250192642211914
    10. ' ' → logprob: -15.250192642211914

Token 306: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.21648025512695312
    2. '(lambda' → logprob: -1.9664802551269531
    3. ' (' → logprob: -2.966480255126953
    4. 'lambda' → logprob: -6.591480255126953
    5. '(' → logprob: -6.591480255126953
    6. ' lambda' → logprob: -8.341480255126953
    7. '   ' → logprob: -8.966480255126953
    8. '(l' → logprob: -10.591480255126953
    9. ' ' → logprob: -10.716480255126953
    10. '  ' → logprob: -10.966480255126953

Token 307: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0075323255732655525
    2. 'lambda' → logprob: -5.007532119750977
    3. ' i' → logprob: -7.632532119750977
    4. '   ' → logprob: -8.882532119750977
    5. '0' → logprob: -9.382532119750977
    6. ' lambda' → logprob: -9.882532119750977
    7. ')' → logprob: -10.882532119750977
    8. '(lambda' → logprob: -11.382532119750977
    9. ' ' → logprob: -12.632532119750977
    10. '  ' → logprob: -12.632532119750977

Token 308: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -2.3557529857498594e-05
    2. 'R' → logprob: -10.75002384185791
    3. ' L' → logprob: -14.50002384185791
    4. ')' → logprob: -15.31252384185791
    5. '```' → logprob: -15.50002384185791
    6. '_L' → logprob: -16.187522888183594
    7. 'LR' → logprob: -16.375022888183594
    8. '`' → logprob: -16.500022888183594
    9. ',' → logprob: -16.750022888183594
    10. '(L' → logprob: -17.125022888183594

Token 309: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001470345538109541
    2. ')' → logprob: -7.126470565795898
    3. ' ,' → logprob: -8.376470565795898
    4. ',
' → logprob: -9.001470565795898
    5. '(),' → logprob: -9.751470565795898
    6. '   ' → logprob: -10.126470565795898
    7. '+' → logprob: -10.376470565795898
    8. ' ' → logprob: -10.626470565795898
    9. ' lambda' → logprob: -11.001470565795898
    10. ' +' → logprob: -11.126470565795898

Token 310: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.05053137242794037
    2. ' -' → logprob: -3.0505313873291016
    3. '0' → logprob: -6.425531387329102
    4. ' ' → logprob: -9.175531387329102
    5. '   ' → logprob: -9.675531387329102
    6. '-N' → logprob: -10.050531387329102
    7. '-M' → logprob: -10.675531387329102
    8. 'N' → logprob: -11.175531387329102
    9. '(-' → logprob: -11.550531387329102
    10. ',' → logprob: -11.800531387329102

Token 311: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.133198283147067e-05
    2. ' ' → logprob: -10.125051498413086
    3. '<|end|>' → logprob: -12.875051498413086
    4. ',' → logprob: -13.125051498413086
    5. '```' → logprob: -13.125051498413086
    6. '   ' → logprob: -14.250051498413086
    7. '<|end|>' → logprob: -14.625051498413086
    8. '2' → logprob: -14.812551498413086
    9. '
' → logprob: -15.062551498413086
    10. '     ' → logprob: -15.562551498413086

Token 312: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001105762057704851
    2. ' ,' → logprob: -9.625110626220703
    3. ')' → logprob: -11.125110626220703
    4. ')]' → logprob: -11.500110626220703
    5. ',
' → logprob: -12.000110626220703
    6. '   ' → logprob: -13.000110626220703
    7. '<|end|>' → logprob: -13.000110626220703
    8. '1' → logprob: -13.750110626220703
    9. '```' → logprob: -13.875110626220703
    10. ' ' → logprob: -14.125110626220703

Token 313: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0012460665311664343
    2. ' -' → logprob: -6.751245975494385
    3. '   ' → logprob: -9.876246452331543
    4. '  ' → logprob: -11.251246452331543
    5. '       ' → logprob: -12.626246452331543
    6. ' ' → logprob: -13.251246452331543
    7. '1' → logprob: -13.751246452331543
    8. '
' → logprob: -14.126246452331543
    9. '           ' → logprob: -14.251246452331543
    10. '	' → logprob: -14.501246452331543

Token 314: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001589618914294988
    2. ')]' → logprob: -9.25015926361084
    3. ')' → logprob: -9.87515926361084
    4. ' ' → logprob: -11.87515926361084
    5. ')]
' → logprob: -13.62515926361084
    6. '```' → logprob: -14.62515926361084
    7. '))' → logprob: -15.25015926361084
    8. '
' → logprob: -15.31265926361084
    9. ')],' → logprob: -15.31265926361084
    10. '   ' → logprob: -15.31265926361084

Token 315: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.31371450424194336
    2. ')' → logprob: -1.3137145042419434
    3. '   ' → logprob: -8.938714981079102
    4. ')]
' → logprob: -9.563714981079102
    5. ')}' → logprob: -10.063714981079102
    6. ' )' → logprob: -10.188714981079102
    7. ')
' → logprob: -10.313714981079102
    8. ']' → logprob: -10.438714981079102
    9. ')])' → logprob: -10.438714981079102
    10. '))' → logprob: -10.938714981079102

Token 316: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7724987864494324
    2. '<|end|>' → logprob: -0.7724987864494324
    3. '   ' → logprob: -3.397498846054077
    4. '[' → logprob: -3.647498846054077
    5. ',' → logprob: -5.522498607635498
    6. '<|end|>' → logprob: -5.647498607635498
    7. ']' → logprob: -6.397498607635498
    8. ' ' → logprob: -6.772498607635498
    9. ':' → logprob: -7.147498607635498
    10. '#' → logprob: -7.272498607635498

Token 317: ' seq' (ID: 26775)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1005558967590332
    2. '   ' → logprob: -1.1005558967590332
    3. ')' → logprob: -1.7255558967590332
    4. '[' → logprob: -3.100555896759033
    5. '<|end|>' → logprob: -3.100555896759033
    6. '    ' → logprob: -4.350555896759033
    7. ',' → logprob: -4.475555896759033
    8. ']' → logprob: -4.725555896759033
    9. '  ' → logprob: -5.600555896759033
    10. ' 
' → logprob: -5.725555896759033

Token 318: 'idx' (ID: 13196)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.841393768787384
    2. ' =' → logprob: -0.966393768787384
    3. 's' → logprob: -2.3413937091827393
    4. '=' → logprob: -2.9663937091827393
    5. '   ' → logprob: -4.466393947601318
    6. 'ences' → logprob: -4.591393947601318
    7. 'ence' → logprob: -4.591393947601318
    8. ',' → logprob: -6.091393947601318
    9. '_' → logprob: -6.716393947601318
    10. 'uer' → logprob: -6.716393947601318

Token 319: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.13071021437644958
    2. ' =' → logprob: -2.5057101249694824
    3. '=' → logprob: -4.005710124969482
    4. ']' → logprob: -4.130710124969482
    5. ',' → logprob: -5.755710124969482
    6. '[' → logprob: -6.005710124969482
    7. ')' → logprob: -8.25571060180664
    8. ' ,' → logprob: -8.63071060180664
    9. ' ' → logprob: -9.38071060180664
    10. ' ]' → logprob: -9.50571060180664

Token 320: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4156656861305237
    2. ' ' → logprob: -1.290665626525879
    3. ' direction' → logprob: -3.415665626525879
    4. 'direction' → logprob: -4.040665626525879
    5. '1' → logprob: -5.165665626525879
    6. ' cycle' → logprob: -5.665665626525879
    7. 'cycle' → logprob: -6.665665626525879
    8. ' next' → logprob: -7.415665626525879
    9. '(direction' → logprob: -7.665665626525879
    10. ' (' → logprob: -7.665665626525879

Token 321: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0705188438296318
    2. 'direction' → logprob: -3.695518732070923
    3. '1' → logprob: -4.195518970489502
    4. ' ' → logprob: -4.570518970489502
    5. 'next' → logprob: -5.320518970489502
    6. 'cycle' → logprob: -5.570518970489502
    7. 'count' → logprob: -6.070518970489502
    8. '(direction' → logprob: -6.820518970489502
    9. '(' → logprob: -7.320518970489502
    10. ' direction' → logprob: -7.445518970489502

Token 322: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 323: ' direction' (ID: 9262)
  Prédit: ' direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' direction' → logprob: -0.09919600188732147
    2. 'direction' → logprob: -2.474195957183838
    3. ' not' → logprob: -4.724195957183838
    4. 'not' → logprob: -6.724195957183838
    5. '(direction' → logprob: -10.099196434020996
    6. ' ' → logprob: -10.224196434020996
    7. '   ' → logprob: -10.599196434020996
    8. '  ' → logprob: -11.849196434020996
    9. ' ' → logprob: -12.599196434020996
    10. '    ' → logprob: -12.724196434020996

Token 324: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07413893193006516
    2. '==' → logprob: -2.699138879776001
    3. ' else' → logprob: -5.82413911819458
    4. ' ' → logprob: -7.07413911819458
    5. '<|end|>' → logprob: -8.199138641357422
    6. 'else' → logprob: -9.824138641357422
    7. '<|end|>' → logprob: -11.324138641357422
    8. ' is' → logprob: -11.449138641357422
    9. '==-' → logprob: -12.324138641357422
    10. '=' → logprob: -12.574138641357422

Token 325: ' '' (ID: 461)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3309468626976013
    2. ''' → logprob: -1.455946922302246
    3. '"' → logprob: -3.580946922302246
    4. ''-' → logprob: -5.080946922302246
    5. ' -' → logprob: -5.330946922302246
    6. '1' → logprob: -6.080946922302246
    7. '0' → logprob: -6.205946922302246
    8. ' '' → logprob: -6.455946922302246
    9. ' ' → logprob: -6.955946922302246
    10. 'False' → logprob: -7.580946922302246

Token 326: 'neg' (ID: 18775)
  Prédit: 'neg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neg' → logprob: -0.4103412330150604
    2. 'negative' → logprob: -1.9103412628173828
    3. '-' → logprob: -2.285341262817383
    4. ''' → logprob: -3.535341262817383
    5. 'pos' → logprob: -4.035341262817383
    6. 'left' → logprob: -4.285341262817383
    7. 'positive' → logprob: -4.785341262817383
    8. 'n' → logprob: -4.785341262817383
    9. '-'' → logprob: -6.160341262817383
    10. 'p' → logprob: -6.785341262817383

Token 327: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2521185576915741
    2. 'ative' → logprob: -1.5021185874938965
    3. 'a' → logprob: -9.252118110656738
    4. '')' → logprob: -10.377118110656738
    5. ' '' → logprob: -10.627118110656738
    6. ')'' → logprob: -11.877118110656738
    7. ''
' → logprob: -12.002118110656738
    8. 'e' → logprob: -12.752118110656738
    9. 'ective' → logprob: -12.877118110656738
    10. '"' → logprob: -12.877118110656738

Token 328: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.018163522705435753
    2. 'else' → logprob: -4.018163681030273
    3. '	else' → logprob: -11.268163681030273
    4. ' ' → logprob: -15.018163681030273
    5. '_else' → logprob: -16.268163681030273
    6. '   ' → logprob: -16.268163681030273
    7. '<|end|>' → logprob: -16.268163681030273
    8. ' ' → logprob: -16.518163681030273
    9. '    ' → logprob: -17.143163681030273
    10. '<|end|>' → logprob: -17.893163681030273

Token 329: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03804895281791687
    2. ' ' → logprob: -3.2880489826202393
    3. '0' → logprob: -12.03804874420166
    4. '   ' → logprob: -13.78804874420166
    5. '  ' → logprob: -15.78804874420166
    6. ' '' → logprob: -15.91304874420166
    7. ' ' → logprob: -16.475549697875977
    8. ''' → logprob: -16.663049697875977
    9. ''s' → logprob: -17.225549697875977
    10. '    ' → logprob: -17.475549697875977

Token 330: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -16.625003814697266
    4. '0' → logprob: -17.375003814697266
    5. '  ' → logprob: -19.500003814697266
    6. '`' → logprob: -21.875003814697266
    7. ''' → logprob: -22.250003814697266
    8. '    ' → logprob: -22.250003814697266
    9. '１' → logprob: -22.250003814697266
    10. '```' → logprob: -22.437503814697266

Token 331: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 332: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45571187138557434
    2. '<|end|>' → logprob: -1.830711841583252
    3. ')' → logprob: -2.330711841583252
    4. ' while' → logprob: -3.330711841583252
    5. 'while' → logprob: -3.580711841583252
    6. ' ' → logprob: -4.705711841583252
    7. '<|end|>' → logprob: -5.080711841583252
    8. '    
' → logprob: -5.830711841583252
    9. '    ' → logprob: -5.830711841583252
    10. '  ' → logprob: -5.830711841583252

Token 333: ' for' (ID: 395)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2294531613588333
    2. 'i' → logprob: -2.2294530868530273
    3. ' while' → logprob: -2.6044530868530273
    4. ' i' → logprob: -4.729453086853027
    5. '   ' → logprob: -4.979453086853027
    6. 'pos' → logprob: -5.854453086853027
    7. 'done' → logprob: -6.604453086853027
    8. 'def' → logprob: -7.729453086853027
    9. 'idx' → logprob: -7.729453086853027
    10. 'p' → logprob: -7.854453086853027

Token 334: ' k' (ID: 372)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -1.0948466062545776
    2. ' j' → logprob: -1.5948466062545776
    3. ' pos' → logprob: -1.9698466062545776
    4. '_' → logprob: -2.594846725463867
    5. ' i' → logprob: -2.719846725463867
    6. 'pos' → logprob: -3.344846725463867
    7. 'j' → logprob: -3.969846725463867
    8. ' step' → logprob: -4.344846725463867
    9. ' idx' → logprob: -4.469846725463867
    10. ' seq' → logprob: -4.719846725463867

Token 335: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14357365667819977
    2. 'in' → logprob: -2.143573760986328
    3. ',' → logprob: -4.143573760986328
    4. ' ,' → logprob: -8.268573760986328
    5. ' ' → logprob: -8.393573760986328
    6. ')' → logprob: -9.893573760986328
    7. 'n' → logprob: -10.768573760986328
    8. '  ' → logprob: -10.768573760986328
    9. ' )' → logprob: -12.143573760986328
    10. '_in' → logprob: -12.268573760986328

Token 336: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.9704259634017944
    2. ' count' → logprob: -1.0954259634017944
    3. ' cycle' → logprob: -1.8454259634017944
    4. 'cycle' → logprob: -2.595426082611084
    5. ' chain' → logprob: -3.970426082611084
    6. ' range' → logprob: -4.095426082611084
    7. 'chain' → logprob: -4.470426082611084
    8. 'range' → logprob: -5.595426082611084
    9. ' take' → logprob: -6.720426082611084
    10. 'take' → logprob: -6.970426082611084

Token 337: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.03478318452835083
    2. '(' → logprob: -3.409783124923706
    3. '()' → logprob: -7.409783363342285
    4. '():
' → logprob: -7.909783363342285
    5. '(seq' → logprob: -9.784783363342285
    6. ' ():' → logprob: -9.784783363342285
    7. '(:' → logprob: -11.534783363342285
    8. '(start' → logprob: -11.784783363342285
    9. '()(' → logprob: -12.034783363342285
    10. '((' → logprob: -12.159783363342285

Token 338: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00396904768422246
    2. ' if' → logprob: -6.878969192504883
    3. '   ' → logprob: -8.128969192504883
    4. ',' → logprob: -8.128969192504883
    5. '        
' → logprob: -8.128969192504883
    6. ' token' → logprob: -8.253969192504883
    7. ' for' → logprob: -8.503969192504883
    8. 'token' → logprob: -8.753969192504883
    9. '```' → logprob: -8.753969192504883
    10. '    ' → logprob: -8.878969192504883

Token 339: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7469823360443115
    2. 'getter' → logprob: -1.9969823360443115
    3. 'if' → logprob: -2.4969823360443115
    4. '           ' → logprob: -2.8719823360443115
    5. 'get' → logprob: -3.2469823360443115
    6. 'start' → logprob: -3.4969823360443115
    7. 'pos' → logprob: -3.6219823360443115
    8. ' if' → logprob: -3.9969823360443115
    9. 'cur' → logprob: -4.246982574462891
    10. 'p' → logprob: -4.371982574462891

Token 340: ' Move' (ID: 25485)
  Prédit: 'getter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.33021214604377747
    2. 'if' → logprob: -2.830212116241455
    3. 'pos' → logprob: -3.080212116241455
    4. 'get' → logprob: -3.705212116241455
    5. 'while' → logprob: -3.830212116241455
    6. 'p' → logprob: -4.330212116241455
    7. 'seq' → logprob: -4.580212116241455
    8. 'curr' → logprob: -4.580212116241455
    9. 'cycle' → logprob: -4.705212116241455
    10. 'start' → logprob: -4.705212116241455

Token 341: ' in' (ID: 306)
  Prédit: ' pointers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pointers' → logprob: -1.1318869590759277
    2. 'pos' → logprob: -1.5068869590759277
    3. 'tokens' → logprob: -2.2568869590759277
    4. ' pos' → logprob: -2.6318869590759277
    5. ' ' → logprob: -3.5068869590759277
    6. ' tokens' → logprob: -3.7568869590759277
    7. '    ' → logprob: -3.8818869590759277
    8. ',' → logprob: -4.006886959075928
    9. ' if' → logprob: -4.131886959075928
    10. ')' → logprob: -4.381886959075928

Token 342: ' current' (ID: 2208)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direction' → logprob: -1.1285027265548706
    2. 'cycle' → logprob: -1.3785027265548706
    3. ' direction' → logprob: -1.8785027265548706
    4. ' cycle' → logprob: -2.50350284576416
    5. 'p' → logprob: -3.25350284576416
    6. ' pointers' → logprob: -3.37850284576416
    7. 'dire' → logprob: -4.37850284576416
    8. 'range' → logprob: -4.37850284576416
    9. ' directions' → logprob: -4.50350284576416
    10. ' the' → logprob: -4.50350284576416

Token 343: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.5275659561157227
    2. ' direction' → logprob: -0.9025659561157227
    3. '_direction' → logprob: -7.027565956115723
    4. '_get' → logprob: -7.652565956115723
    5. 'sequence' → logprob: -7.652565956115723
    6. '   ' → logprob: -7.902565956115723
    7. 'position' → logprob: -8.027565956115723
    8. ' ' → logprob: -8.152565956115723
    9. ' sequence' → logprob: -8.277565956115723
    10. ')' → logprob: -8.902565956115723

Token 344: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03543590381741524
    2. ',' → logprob: -4.410435676574707
    3. '        
' → logprob: -5.535435676574707
    4. ' if' → logprob: -5.535435676574707
    5. '
' → logprob: -6.035435676574707
    6. '<|end|>' → logprob: -6.035435676574707
    7. ':' → logprob: -6.410435676574707
    8. 'tokens' → logprob: -6.535435676574707
    9. ')' → logprob: -6.910435676574707
    10. '        ' → logprob: -7.160435676574707

Token 345: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008716804906725883
    2. ',' → logprob: -5.883716583251953
    3. '        
' → logprob: -5.883716583251953
    4. ' if' → logprob: -7.258716583251953
    5. '<|end|>' → logprob: -7.758716583251953
    6. 'tokens' → logprob: -8.258716583251953
    7. 'token' → logprob: -8.633716583251953
    8. '   ' → logprob: -8.883716583251953
    9. ':' → logprob: -8.883716583251953
    10. '           ' → logprob: -9.008716583251953

Token 346: ' total' (ID: 3609)
  Prédit: 'getter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.46694234013557434
    2. 'if' → logprob: -1.841942310333252
    3. 'seq' → logprob: -3.466942310333252
    4. 'points' → logprob: -3.466942310333252
    5. 'start' → logprob: -3.716942310333252
    6. 'p' → logprob: -3.716942310333252
    7. 'pos' → logprob: -3.841942310333252
    8. 'get' → logprob: -4.591942310333252
    9. 'while' → logprob: -4.841942310333252
    10. 'cycle' → logprob: -4.966942310333252

Token 347: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.22561514377594
    2. ' +=' → logprob: -1.47561514377594
    3. '_score' → logprob: -1.72561514377594
    4. '_pos' → logprob: -2.7256150245666504
    5. ' =' → logprob: -2.8506150245666504
    6. '_distance' → logprob: -3.3506150245666504
    7. '_tokens' → logprob: -3.4756150245666504
    8. '+=' → logprob: -3.8506150245666504
    9. '_move' → logprob: -3.9756150245666504
    10. ',' → logprob: -4.22561502456665

Token 348: ' step' (ID: 5983)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -1.6292848587036133
    2. ' step' → logprob: -2.5042848587036133
    3. ' break' → logprob: -2.6292848587036133
    4. ' for' → logprob: -2.6292848587036133
    5. ' pos' → logprob: -2.6292848587036133
    6. ' done' → logprob: -3.1292848587036133
    7. 'pos' → logprob: -3.3792848587036133
    8. ' new' → logprob: -3.3792848587036133
    9. 'next' → logprob: -3.3792848587036133
    10. ' move' → logprob: -3.6292848587036133

Token 349: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5263121724128723
    2. '=' → logprob: -0.9013121724128723
    3. ',' → logprob: -6.651312351226807
    4. ' +=' → logprob: -6.901312351226807
    5. '+=' → logprob: -7.901312351226807
    6. 's' → logprob: -8.651311874389648
    7. '_' → logprob: -9.276311874389648
    8. '   ' → logprob: -9.526311874389648
    9. ' ' → logprob: -9.901311874389648
    10. ')' → logprob: -11.026311874389648

Token 350: ' step' (ID: 5983)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.5973970293998718
    2. 'pos' → logprob: -1.8473970890045166
    3. 'index' → logprob: -2.7223970890045166
    4. 'cur' → logprob: -3.4723970890045166
    5. 'pointer' → logprob: -3.8473970890045166
    6. 'start' → logprob: -3.9723970890045166
    7. 'limit' → logprob: -3.9723970890045166
    8. 'end' → logprob: -3.9723970890045166
    9. 'p' → logprob: -4.0973968505859375
    10. 'current' → logprob: -4.2223968505859375

Token 351: '_sign' (ID: 24730)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6347737908363342
    2. '=' → logprob: -0.7597737908363342
    3. 's' → logprob: -7.3847737312316895
    4. ')' → logprob: -7.6347737312316895
    5. ',' → logprob: -8.759774208068848
    6. '_idx' → logprob: -8.759774208068848
    7. 'idx' → logprob: -9.384774208068848
    8. ')=' → logprob: -9.884774208068848
    9. '   ' → logprob: -10.009774208068848
    10. '_size' → logprob: -10.384774208068848

Token 352: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6326825022697449
    2. '=' → logprob: -0.7576825022697449
    3. ')' → logprob: -9.882682800292969
    4. ',' → logprob: -11.132682800292969
    5. ')=' → logprob: -12.007682800292969
    6. '   ' → logprob: -12.632682800292969
    7. ' ' → logprob: -12.757682800292969
    8. '=k' → logprob: -13.757682800292969
    9. ']' → logprob: -14.257682800292969
    10. 'k' → logprob: -14.382682800292969

Token 353: ' pointers' (ID: 58762)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.02291383221745491
    2. ' pointers' → logprob: -4.772913932800293
    3. 'cycle' → logprob: -4.897913932800293
    4. 'next' → logprob: -6.897913932800293
    5. '(p' → logprob: -7.272913932800293
    6. '0' → logprob: -7.522913932800293
    7. '   ' → logprob: -7.647913932800293
    8. '{
' → logprob: -7.647913932800293
    9. '(' → logprob: -7.647913932800293
    10. '
' → logprob: -7.897913932800293

Token 354: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09149990230798721
    2. '()[' → logprob: -2.4664998054504395
    3. '()' → logprob: -6.2164998054504395
    4. '(seq' → logprob: -8.466500282287598
    5. 'seq' → logprob: -9.091500282287598
    6. ')[' → logprob: -9.341500282287598
    7. '```' → logprob: -9.966500282287598
    8. '   ' → logprob: -10.841500282287598
    9. '][' → logprob: -10.841500282287598
    10. '()][' → logprob: -11.341500282287598

Token 355: 'seq' (ID: 27794)
  Prédit: 'seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -3.3213025744771585e-05
    2. ' seq' → logprob: -10.500033378601074
    3. '(seq' → logprob: -12.250033378601074
    4. '   ' → logprob: -14.750033378601074
    5. 'sequence' → logprob: -16.125032424926758
    6. ' ' → logprob: -16.250032424926758
    7. ']' → logprob: -16.375032424926758
    8. '0' → logprob: -17.250032424926758
    9. '```' → logprob: -17.750032424926758
    10. '.seq' → logprob: -18.000032424926758

Token 356: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -2.1008713702030946e-06
    2. 'index' → logprob: -14.500001907348633
    3. ' idx' → logprob: -14.875001907348633
    4. 'seq' → logprob: -14.875001907348633
    5. 'id' → logprob: -15.500001907348633
    6. ']' → logprob: -15.625001907348633
    7. 'indx' → logprob: -15.875001907348633
    8. '_idx' → logprob: -15.875001907348633
    9. 'i' → logprob: -16.875001907348633
    10. '   ' → logprob: -17.000001907348633

Token 357: '%' (ID: 4)
  Prédit: ']()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']()' → logprob: -0.0011506980517879128
    2. ']()
' → logprob: -7.001150608062744
    3. ']' → logprob: -8.376151084899902
    4. '()]' → logprob: -11.876151084899902
    5. '](' → logprob: -13.876151084899902
    6. ' ]' → logprob: -14.251151084899902
    7. ']
' → logprob: -15.876151084899902
    8. '   ' → logprob: -16.376150131225586
    9. ' ' → logprob: -16.626150131225586
    10. '()' → logprob: -17.501150131225586

Token 358: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004914346616715193
    2. ' ' → logprob: -6.504914283752441
    3. 'k' → logprob: -7.379914283752441
    4. ']' → logprob: -7.629914283752441
    5. '1' → logprob: -8.129914283752441
    6. '])' → logprob: -8.379914283752441
    7. '3' → logprob: -8.629914283752441
    8. ')' → logprob: -8.754914283752441
    9. ')]' → logprob: -8.754914283752441
    10. 'cycle' → logprob: -8.879914283752441

Token 359: ']()
' (ID: 95523)
  Prédit: ']()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']()' → logprob: -0.0006220113136805594
    2. ']' → logprob: -7.625621795654297
    3. ']()
' → logprob: -9.125621795654297
    4. '()]' → logprob: -10.750621795654297
    5. ' ]' → logprob: -13.125621795654297
    6. '](' → logprob: -14.000621795654297
    7. '   ' → logprob: -15.250621795654297
    8. ')]' → logprob: -15.750621795654297
    9. ' ' → logprob: -16.000621795654297
    10. '][]' → logprob: -16.875621795654297

Token 360: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 361: ' seq' (ID: 26775)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0280394554138184
    2. ' i' → logprob: -1.2780394554138184
    3. 'i' → logprob: -1.6530394554138184
    4. ' if' → logprob: -2.9030394554138184
    5. 'if' → logprob: -3.2780394554138184
    6. 'j' → logprob: -4.153039455413818
    7. 'pos' → logprob: -4.278039455413818
    8. ' j' → logprob: -4.403039455413818
    9. ',' → logprob: -5.028039455413818
    10. ' pos' → logprob: -5.653039455413818

Token 362: ' =' (ID: 314)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -7.219262624857947e-05
    2. '[idx' → logprob: -11.000072479248047
    3. '=' → logprob: -11.250072479248047
    4. '_idx' → logprob: -11.375072479248047
    5. '       ' → logprob: -12.125072479248047
    6. ' =' → logprob: -12.125072479248047
    7. '   ' → logprob: -12.500072479248047
    8. '	idx' → logprob: -12.875072479248047
    9. '[' → logprob: -13.125072479248047
    10. 'id' → logprob: -13.375072479248047

Token 363: ' (' (ID: 350)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.022971853613853455
    2. 'chain' → logprob: -4.2729716300964355
    3. ' cycle' → logprob: -5.2729716300964355
    4. 'next' → logprob: -5.8979716300964355
    5. '(chain' → logprob: -8.647972106933594
    6. ' chain' → logprob: -8.897972106933594
    7. 'iter' → logprob: -9.022972106933594
    8. '(next' → logprob: -9.022972106933594
    9. '(c' → logprob: -9.772972106933594
    10. 'list' → logprob: -10.022972106933594

Token 364: 'Rs' (ID: 46194)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.460552841424942
    2. 'pos' → logprob: -1.5855528116226196
    3. '(x' → logprob: -3.335552930831909
    4. 'cycle' → logprob: -3.585552930831909
    5. 'chain' → logprob: -3.960552930831909
    6. 'p' → logprob: -3.960552930831909
    7. 'j' → logprob: -4.08555269241333
    8. 'item' → logprob: -5.08555269241333
    9. '(pos' → logprob: -5.21055269241333
    10. 'next' → logprob: -5.58555269241333

Token 365: ' if' (ID: 538)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.26133817434310913
    2. '[' → logprob: -2.136338233947754
    3. ')' → logprob: -3.386338233947754
    4. ',' → logprob: -3.511338233947754
    5. 'j' → logprob: -3.886338233947754
    6. '[k' → logprob: -5.011338233947754
    7. ')[' → logprob: -5.511338233947754
    8. '[p' → logprob: -5.636338233947754
    9. '       ' → logprob: -6.261338233947754
    10. ',j' → logprob: -6.386338233947754

Token 366: ' seq' (ID: 26775)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.008753073401749134
    2. ' seq' → logprob: -4.758753299713135
    3. ' ' → logprob: -10.758752822875977
    4. 'pos' → logprob: -10.883752822875977
    5. '   ' → logprob: -11.008752822875977
    6. '(seq' → logprob: -11.008752822875977
    7. '       ' → logprob: -11.633752822875977
    8. 'idx' → logprob: -11.758752822875977
    9. '  ' → logprob: -11.758752822875977
    10. '           ' → logprob: -12.133752822875977

Token 367: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0010158988879993558
    2. 'seq' → logprob: -7.126015663146973
    3. '[idx' → logprob: -9.126015663146973
    4. '[' → logprob: -10.001015663146973
    5. '       ' → logprob: -10.501015663146973
    6. '           ' → logprob: -11.501015663146973
    7. ' idx' → logprob: -11.876015663146973
    8. '```' → logprob: -13.001015663146973
    9. '
' → logprob: -13.126015663146973
    10. '   ' → logprob: -13.126015663146973

Token 368: '%' (ID: 4)
  Prédit: '%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.000945172505453229
    2. ' %' → logprob: -7.000945091247559
    3. '[' → logprob: -11.000945091247559
    4. '           ' → logprob: -11.875945091247559
    5. '       ' → logprob: -12.875945091247559
    6. '
' → logprob: -13.000945091247559
    7. '```' → logprob: -13.875945091247559
    8. ')%' → logprob: -14.000945091247559
    9. ')' → logprob: -14.250945091247559
    10. '()%' → logprob: -15.125945091247559

Token 369: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00022117885237094015
    2. ' ' → logprob: -8.625221252441406
    3. '0' → logprob: -11.000221252441406
    4. '```' → logprob: -11.875221252441406
    5. '   ' → logprob: -12.500221252441406
    6. 'cycle' → logprob: -12.875221252441406
    7. '1' → logprob: -13.187721252441406
    8. 'chain' → logprob: -13.500221252441406
    9. '  ' → logprob: -14.000221252441406
    10. ')' → logprob: -14.250221252441406

Token 370: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.09654409438371658
    2. ' ==' → logprob: -2.471544027328491
    3. ' else' → logprob: -5.22154426574707
    4. 'else' → logprob: -6.22154426574707
    5. '0' → logprob: -9.59654426574707
    6. ')' → logprob: -10.09654426574707
    7. ']==' → logprob: -11.47154426574707
    8. '=' → logprob: -11.59654426574707
    9. '           ' → logprob: -11.59654426574707
    10. ' ' → logprob: -11.84654426574707

Token 371: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010604646377032623
    2. ' ' → logprob: -9.250105857849121
    3. '1' → logprob: -11.625105857849121
    4. '   ' → logprob: -14.125105857849121
    5. ')' → logprob: -16.625106811523438
    6. '```' → logprob: -16.750106811523438
    7. '  ' → logprob: -17.687606811523438
    8. '=' → logprob: -17.750106811523438
    9. '`' → logprob: -18.125106811523438
    10. '       ' → logprob: -18.187606811523438

Token 372: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.625015258789062
    3. '1' → logprob: -12.500015258789062
    4. '   ' → logprob: -14.125015258789062
    5. '```' → logprob: -15.250015258789062
    6. '       ' → logprob: -15.625015258789062
    7. '     ' → logprob: -15.625015258789062
    8. '=' → logprob: -15.937515258789062
    9. '    ' → logprob: -16.437515258789062
    10. '[' → logprob: -16.437515258789062

Token 373: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.09067496657371521
    2. 'else' → logprob: -2.965674877166748
    3. ')[' → logprob: -3.465674877166748
    4. ')' → logprob: -6.590674877166748
    5. '[j' → logprob: -6.715674877166748
    6. ' )[' → logprob: -7.340674877166748
    7. '[' → logprob: -8.465675354003906
    8. '][' → logprob: -9.465675354003906
    9. '   ' → logprob: -9.965675354003906
    10. '           ' → logprob: -10.215675354003906

Token 374: ' L' (ID: 451)
  Prédit: 'Ls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ls' → logprob: -1.4378848391061183e-05
    2. ' L' → logprob: -12.000014305114746
    3. '   ' → logprob: -12.500014305114746
    4. 'L' → logprob: -12.625014305114746
    5. '       ' → logprob: -15.750014305114746
    6. '(L' → logprob: -15.750014305114746
    7. 'ls' → logprob: -15.875014305114746
    8. ' ' → logprob: -16.000015258789062
    9. '           ' → logprob: -16.125015258789062
    10. ')' → logprob: -16.500015258789062

Token 375: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00042662365012802184
    2. ')' → logprob: -7.875426769256592
    3. 'S' → logprob: -10.375426292419434
    4. '[' → logprob: -13.000426292419434
    5. ')[' → logprob: -13.125426292419434
    6. ')s' → logprob: -13.125426292419434
    7. ')
' → logprob: -13.500426292419434
    8. '[s' → logprob: -13.500426292419434
    9. ' s' → logprob: -13.875426292419434
    10. '   ' → logprob: -14.000426292419434

Token 376: ')
' (ID: 446)
  Prédit: ')['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')[' → logprob: -0.10339277237653732
    2. ')' → logprob: -2.3533928394317627
    3. ' )[' → logprob: -6.353392601013184
    4. ')
' → logprob: -6.978392601013184
    5. ' )' → logprob: -8.853392601013184
    6. '       ' → logprob: -9.103392601013184
    7. '   ' → logprob: -9.853392601013184
    8. '           ' → logprob: -10.228392601013184
    9. '[' → logprob: -10.353392601013184
    10. ' ' → logprob: -10.603392601013184

Token 377: '       ' (ID: 309)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.27291339635849
    2. '
' → logprob: -2.0229134559631348
    3. '       ' → logprob: -3.1479134559631348
    4. '<|end|>' → logprob: -3.3979134559631348
    5. '[next' → logprob: -4.647913455963135
    6. '[
' → logprob: -5.772913455963135
    7. '        
' → logprob: -5.772913455963135
    8. ')' → logprob: -6.022913455963135
    9. ',' → logprob: -6.022913455963135
    10. '<|end|>' → logprob: -6.772913455963135

Token 378: ' getter' (ID: 68306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1020127683877945
    2. ' if' → logprob: -3.352012872695923
    3. ' j' → logprob: -4.852012634277344
    4. ')' → logprob: -5.102012634277344
    5. 'j' → logprob: -5.102012634277344
    6. '<|end|>' → logprob: -5.102012634277344
    7. ' for' → logprob: -5.352012634277344
    8. ',' → logprob: -5.477012634277344
    9. '
' → logprob: -5.852012634277344
    10. '        
' → logprob: -5.977012634277344

Token 379: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6372384428977966
    2. '=' → logprob: -0.7622384428977966
    3. ',' → logprob: -5.637238502502441
    4. ')' → logprob: -8.012238502502441
    5. ')=' → logprob: -8.637238502502441
    6. '=lambda' → logprob: -8.887238502502441
    7. 's' → logprob: -9.262238502502441
    8. '()' → logprob: -9.262238502502441
    9. ' ' → logprob: -9.887238502502441
    10. '   ' → logprob: -10.012238502502441

Token 380: ' [' (ID: 723)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.06206493452191353
    2. ' cycle' → logprob: -2.8120648860931396
    3. 'lambda' → logprob: -10.687065124511719
    4. 'chain' → logprob: -10.937065124511719
    5. 'cy' → logprob: -11.437065124511719
    6. 'cycler' → logprob: -11.812065124511719
    7. 'cycl' → logprob: -11.812065124511719
    8. '   ' → logprob: -12.187065124511719
    9. ' lambda' → logprob: -12.187065124511719
    10. ' ' → logprob: -12.687065124511719

Token 381: 'item' (ID: 2057)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.09866516292095184
    2. 'lambda' → logprob: -2.848665237426758
    3. '0' → logprob: -4.223665237426758
    4. 'x' → logprob: -5.598665237426758
    5. ']' → logprob: -5.598665237426758
    6. ' cycle' → logprob: -5.848665237426758
    7. 'item' → logprob: -6.473665237426758
    8. '           ' → logprob: -6.723665237426758
    9. 'chain' → logprob: -6.848665237426758
    10. '   ' → logprob: -6.848665237426758

Token 382: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -5.776898251497187e-05
    2. ' for' → logprob: -10.8750581741333
    3. 'for' → logprob: -11.5000581741333
    4. '[' → logprob: -11.5000581741333
    5. 'get' → logprob: -12.3750581741333
    6. '0' → logprob: -12.8750581741333
    7. ' ' → logprob: -13.1250581741333
    8. '           ' → logprob: -14.0000581741333
    9. 'getitem' → logprob: -14.0000581741333
    10. 'selector' → logprob: -14.5000581741333

Token 383: '(' (ID: 7)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5511807203292847
    2. '0' → logprob: -1.3011807203292847
    3. '1' → logprob: -2.051180839538574
    4. '(' → logprob: -4.551180839538574
    5. '3' → logprob: -6.176180839538574
    6. 'seq' → logprob: -6.176180839538574
    7. '(seq' → logprob: -6.801180839538574
    8. 'k' → logprob: -6.926180839538574
    9. '   ' → logprob: -7.051180839538574
    10. '```' → logprob: -7.176180839538574

Token 384: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.47303691506385803
    2. '0' → logprob: -1.0980368852615356
    3. '1' → logprob: -3.348037004470825
    4. 'seq' → logprob: -5.723036766052246
    5. 'k' → logprob: -7.223036766052246
    6. 'j' → logprob: -7.473036766052246
    7. '3' → logprob: -7.723036766052246
    8. '   ' → logprob: -7.785536766052246
    9. '(' → logprob: -7.848036766052246
    10. ' ' → logprob: -7.910536766052246

Token 385: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.18613408505916595
    2. ')]' → logprob: -1.9361340999603271
    3. ')' → logprob: -4.436133861541748
    4. ')][' → logprob: -5.311133861541748
    5. ',' → logprob: -6.061133861541748
    6. ')]
' → logprob: -6.186133861541748
    7. ')])' → logprob: -6.686133861541748
    8. '),
' → logprob: -6.936133861541748
    9. ')
' → logprob: -7.936133861541748
    10. ' ),' → logprob: -8.311134338378906

Token 386: ' item' (ID: 2169)
  Prédit: 'item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -0.005205174908041954
    2. 'lambda' → logprob: -6.130205154418945
    3. '0' → logprob: -6.630205154418945
    4. ' item' → logprob: -7.630205154418945
    5. '   ' → logprob: -8.005205154418945
    6. 'getitem' → logprob: -8.255205154418945
    7. '3' → logprob: -9.255205154418945
    8. '1' → logprob: -9.255205154418945
    9. 'operator' → logprob: -9.630205154418945
    10. '2' → logprob: -9.755205154418945

Token 387: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.001583066419698298
    2. '(' → logprob: -6.751583099365234
    3. 'getitem' → logprob: -9.001583099365234
    4. '0' → logprob: -9.751583099365234
    5. ')]' → logprob: -9.876583099365234
    6. '[' → logprob: -10.001583099365234
    7. 'get' → logprob: -10.126583099365234
    8. ')' → logprob: -10.501583099365234
    9. '])' → logprob: -11.376583099365234
    10. ']' → logprob: -11.876583099365234

Token 388: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00026455431361682713
    2. '0' → logprob: -8.500264167785645
    3. '
' → logprob: -10.500264167785645
    4. '2' → logprob: -11.500264167785645
    5. '(
' → logprob: -11.625264167785645
    6. ' (' → logprob: -12.375264167785645
    7. '(seq' → logprob: -13.250264167785645
    8. '```' → logprob: -13.500264167785645
    9. '[' → logprob: -13.625264167785645
    10. '((' → logprob: -13.625264167785645

Token 389: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04329890012741089
    2. '2' → logprob: -3.1682989597320557
    3. '1' → logprob: -8.793298721313477
    4. ' ' → logprob: -9.605798721313477
    5. '-' → logprob: -10.793298721313477
    6. '   ' → logprob: -11.043298721313477
    7. '
' → logprob: -12.168298721313477
    8. '```' → logprob: -12.168298721313477
    9. '[' → logprob: -12.668298721313477
    10. '3' → logprob: -12.730798721313477

Token 390: ')][' (ID: 112886)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.3193446099758148
    2. ')][' → logprob: -1.3193446397781372
    3. ')]
' → logprob: -5.944344520568848
    4. ')' → logprob: -6.069344520568848
    5. '),' → logprob: -8.319344520568848
    6. ',' → logprob: -8.444344520568848
    7. ')])' → logprob: -9.069344520568848
    8. ' )' → logprob: -9.194344520568848
    9. ']' → logprob: -9.319344520568848
    10. ' ' → logprob: -9.819344520568848

Token 391: 'seq' (ID: 27794)
  Prédit: 'seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.25021302700042725
    2. 'step' → logprob: -1.6252130270004272
    3. ' seq' → logprob: -4.875213146209717
    4. '(seq' → logprob: -5.375213146209717
    5. '(' → logprob: -6.125213146209717
    6. '0' → logprob: -6.125213146209717
    7. ' step' → logprob: -6.250213146209717
    8. '1' → logprob: -6.500213146209717
    9. '(step' → logprob: -7.000213146209717
    10. 'total' → logprob: -7.625213146209717

Token 392: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0022538607008755207
    2. 'seq' → logprob: -6.502254009246826
    3. '[' → logprob: -7.627254009246826
    4. '[idx' → logprob: -8.752253532409668
    5. 'index' → logprob: -9.877253532409668
    6. '_idx' → logprob: -10.877253532409668
    7. ' idx' → logprob: -11.627253532409668
    8. '
' → logprob: -12.627253532409668
    9. ']' → logprob: -12.627253532409668
    10. '   ' → logprob: -12.752253532409668

Token 393: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.2078317105770111
    2. ']' → logprob: -2.207831621170044
    3. ']()' → logprob: -2.707831621170044
    4. ']%' → logprob: -5.582831859588623
    5. '()]' → logprob: -6.207831859588623
    6. ']()
' → logprob: -6.457831859588623
    7. '](' → logprob: -6.457831859588623
    8. ' %' → logprob: -7.082831859588623
    9. ' ]' → logprob: -7.707831859588623
    10. '()%' → logprob: -8.332831382751465

Token 394: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006807420286349952
    2. ' ' → logprob: -7.375680923461914
    3. '1' → logprob: -11.188180923461914
    4. '3' → logprob: -11.563180923461914
    5. '   ' → logprob: -11.688180923461914
    6. '```' → logprob: -12.438180923461914
    7. 'len' → logprob: -12.563180923461914
    8. ')' → logprob: -12.625680923461914
    9. '  ' → logprob: -13.188180923461914
    10. ']' → logprob: -14.500680923461914

Token 395: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002671768015716225
    2. ' ' → logprob: -8.375267028808594
    3. '1' → logprob: -11.187767028808594
    4. '   ' → logprob: -12.312767028808594
    5. '3' → logprob: -12.500267028808594
    6. 'len' → logprob: -12.687767028808594
    7. '```' → logprob: -12.875267028808594
    8. ')' → logprob: -14.125267028808594
    9. '  ' → logprob: -14.187767028808594
    10. '`' → logprob: -14.562767028808594

Token 396: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04845302179455757
    2. ']()' → logprob: -3.4234530925750732
    3. '](' → logprob: -5.048452854156494
    4. ']
' → logprob: -5.423452854156494
    5. ']()
' → logprob: -6.173452854156494
    6. '])' → logprob: -6.923452854156494
    7. ' ]' → logprob: -8.423453330993652
    8. ')]' → logprob: -8.673453330993652
    9. ']

' → logprob: -8.798453330993652
    10. '()]' → logprob: -9.548453330993652

Token 397: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 398: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16463804244995117
    2. '<|end|>' → logprob: -3.289638042449951
    3. ' ' → logprob: -3.789638042449951
    4. '        
' → logprob: -4.414638042449951
    5. ' if' → logprob: -4.539638042449951
    6. ' next' → logprob: -4.664638042449951
    7. ',' → logprob: -4.664638042449951
    8. ' 
' → logprob: -4.914638042449951
    9. ')' → logprob: -5.289638042449951
    10. 'next' → logprob: -5.664638042449951

Token 399: ' Skip' (ID: 47626)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3961433172225952
    2. ' for' → logprob: -1.6461433172225952
    3. 'while' → logprob: -1.6461433172225952
    4. ' while' → logprob: -2.0211434364318848
    5. 'if' → logprob: -3.0211434364318848
    6. '       ' → logprob: -3.5211434364318848
    7. ' if' → logprob: -3.6461434364318848
    8. 'j' → logprob: -3.6461434364318848
    9. '   ' → logprob: -4.146143436431885
    10. 'i' → logprob: -4.396143436431885

Token 400: ' done' (ID: 4167)
  Prédit: ' ahead'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ahead' → logprob: -1.7505043745040894
    2. ' to' → logprob: -1.8755043745040894
    3. 'over' → logprob: -2.125504493713379
    4. ' over' → logprob: -2.250504493713379
    5. ' if' → logprob: -2.875504493713379
    6. 'while' → logprob: -2.875504493713379
    7. 'if' → logprob: -3.000504493713379
    8. 'to' → logprob: -3.875504493713379
    9. 'indices' → logprob: -4.000504493713379
    10. 'empty' → logprob: -4.125504493713379

Token 401: '
' (ID: 198)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -1.1498932838439941
    2. '<|end|>' → logprob: -1.5248932838439941
    3. ' intervals' → logprob: -1.7748932838439941
    4. 'indices' → logprob: -2.149893283843994
    5. 'items' → logprob: -3.149893283843994
    6. 'points' → logprob: -3.399893283843994
    7. 'tokens' → logprob: -3.649893283843994
    8. 'if' → logprob: -4.899893283843994
    9. ' if' → logprob: -5.024893283843994
    10. 'and' → logprob: -5.024893283843994

Token 402: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1835383176803589
    2. ' while' → logprob: -2.4335384368896484
    3. 'while' → logprob: -3.1835384368896484
    4. ' for' → logprob: -4.683538436889648
    5. ' and' → logprob: -5.058538436889648
    6. ',' → logprob: -5.558538436889648
    7. '        
' → logprob: -5.933538436889648
    8. '<|end|>' → logprob: -6.183538436889648
    9. '
' → logprob: -6.433538436889648
    10. 'tokens' → logprob: -6.558538436889648

Token 403: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.3109962046146393
    2. ' while' → logprob: -1.435996174812317
    3. '       ' → logprob: -4.935996055603027
    4. 'for' → logprob: -5.060996055603027
    5. 'j' → logprob: -5.435996055603027
    6. ' for' → logprob: -5.560996055603027
    7. 'next' → logprob: -6.310996055603027
    8. '<|end|>' → logprob: -7.560996055603027
    9. 'indices' → logprob: -7.560996055603027
    10. ' next' → logprob: -7.810996055603027

Token 404: ' ' (ID: 220)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.3873905539512634
    2. 'total' → logprob: -2.512390613555908
    3. 'step' → logprob: -2.637390613555908
    4. ' seq' → logprob: -3.387390613555908
    5. '(seq' → logprob: -3.387390613555908
    6. 'True' → logprob: -3.762390613555908
    7. ' total' → logprob: -4.387390613555908
    8. 'done' → logprob: -4.512390613555908
    9. '(step' → logprob: -4.637390613555908
    10. ' step' → logprob: -5.137390613555908

Token 405: '0' (ID: 15)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.4188980758190155
    2. 'total' → logprob: -2.168898105621338
    3. 'step' → logprob: -2.293898105621338
    4. '(seq' → logprob: -3.168898105621338
    5. ' seq' → logprob: -4.043898105621338
    6. 'done' → logprob: -4.418898105621338
    7. '(step' → logprob: -4.418898105621338
    8. ' total' → logprob: -4.918898105621338
    9. 'True' → logprob: -4.918898105621338
    10. '(total' → logprob: -5.168898105621338

Token 406: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.5687804222106934
    2. ' <=' → logprob: -1.0687804222106934
    3. ' not' → logprob: -2.8187804222106934
    4. '<' → logprob: -4.943780422210693
    5. ' in' → logprob: -4.943780422210693
    6. 'not' → logprob: -5.068780422210693
    7. ' <' → logprob: -5.068780422210693
    8. 'in' → logprob: -6.068780422210693
    9. '[' → logprob: -7.818780422210693
    10. '<len' → logprob: -7.943780422210693

Token 407: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.09102635830640793
    2. 'step' → logprob: -2.5910263061523438
    3. ' total' → logprob: -5.091026306152344
    4. 'p' → logprob: -5.341026306152344
    5. 'i' → logprob: -8.091026306152344
    6. ' step' → logprob: -8.216026306152344
    7. '(total' → logprob: -9.091026306152344
    8. 'pointer' → logprob: -9.966026306152344
    9. '   ' → logprob: -10.091026306152344
    10. '(step' → logprob: -10.091026306152344

Token 408: ' <' (ID: 464)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.8374139070510864
    2. '<' → logprob: -1.0874139070510864
    3. ' and' → logprob: -1.7124139070510864
    4. ' <' → logprob: -3.087413787841797
    5. '<len' → logprob: -5.962413787841797
    6. '<n' → logprob: -7.462413787841797
    7. '[' → logprob: -8.712413787841797
    8. '<|end|>' → logprob: -8.712413787841797
    9. '<size' → logprob: -9.087413787841797
    10. '<p' → logprob: -9.212413787841797

Token 409: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.05544847995042801
    2. 'len' → logprob: -3.055448532104492
    3. '(len' → logprob: -5.805448532104492
    4. '(N' → logprob: -5.930448532104492
    5. '(' → logprob: -7.180448532104492
    6. ' N' → logprob: -8.555448532104492
    7. ' (' → logprob: -9.430448532104492
    8. ' len' → logprob: -10.430448532104492
    9. 'step' → logprob: -11.055448532104492
    10. ' ' → logprob: -11.180448532104492

Token 410: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.012534607201814651
    2. 'and' → logprob: -4.3875346183776855
    3. '	and' → logprob: -11.637534141540527
    4. ' ' → logprob: -12.512534141540527
    5. '   ' → logprob: -12.512534141540527
    6. '       ' → logprob: -13.262534141540527
    7. ':
' → logprob: -13.512534141540527
    8. '      ' → logprob: -13.762534141540527
    9. '    ' → logprob: -14.387534141540527
    10. '<|end|>' → logprob: -14.512534141540527

Token 411: ' seq' (ID: 26775)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.03922867774963379
    2. 'Rs' → logprob: -3.414228677749634
    3. ' seq' → logprob: -6.039228439331055
    4. 'Ls' → logprob: -7.539228439331055
    5. '(seq' → logprob: -7.664228439331055
    6. 'sequence' → logprob: -7.789228439331055
    7. ' Rs' → logprob: -7.789228439331055
    8. '   ' → logprob: -8.039228439331055
    9. 'RS' → logprob: -8.164228439331055
    10. 'LR' → logprob: -8.414228439331055

Token 412: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.117345684382599e-05
    2. 'total' → logprob: -11.375020980834961
    3. '```' → logprob: -13.500020980834961
    4. ')[' → logprob: -13.625020980834961
    5. '       ' → logprob: -13.875020980834961
    6. '           ' → logprob: -13.875020980834961
    7. ' [' → logprob: -14.000020980834961
    8. '[next' → logprob: -14.250020980834961
    9. '][' → logprob: -14.375020980834961
    10. '   ' → logprob: -14.750020980834961

Token 413: 'total' (ID: 9577)
  Prédit: 'total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0027878843247890472
    2. '[' → logprob: -6.127788066864014
    3. 'seq' → logprob: -7.752788066864014
    4. ' total' → logprob: -9.377787590026855
    5. '(total' → logprob: -10.752787590026855
    6. '   ' → logprob: -11.002787590026855
    7. 'getter' → logprob: -12.002787590026855
    8. '][' → logprob: -12.252787590026855
    9. '```' → logprob: -12.252787590026855
    10. 'otal' → logprob: -12.377787590026855

Token 414: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07096477597951889
    2. '][' → logprob: -2.695964813232422
    3. ')[' → logprob: -7.195964813232422
    4. '2' → logprob: -9.695964813232422
    5. ' [' → logprob: -10.070964813232422
    6. '
' → logprob: -10.195964813232422
    7. '   ' → logprob: -10.570964813232422
    8. ']' → logprob: -10.695964813232422
    9. '```' → logprob: -11.883464813232422
    10. '[
' → logprob: -11.945964813232422

Token 415: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00023154958034865558
    2. '
' → logprob: -8.875231742858887
    3. ' ' → logprob: -10.250231742858887
    4. 'seq' → logprob: -10.250231742858887
    5. '

' → logprob: -12.375231742858887
    6. '   ' → logprob: -12.500231742858887
    7. '```' → logprob: -13.187731742858887
    8. '1' → logprob: -13.250231742858887
    9. '-' → logprob: -13.375231742858887
    10. '
' → logprob: -14.312731742858887

Token 416: ']' (ID: 60)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16030962765216827
    2. 'in' → logprob: -1.9103096723556519
    3. 'not' → logprob: -10.285309791564941
    4. ' ' → logprob: -10.910309791564941
    5. ')' → logprob: -11.160309791564941
    6. ']' → logprob: -11.535309791564941
    7. ' not' → logprob: -12.035309791564941
    8. 'In' → logprob: -14.410309791564941
    9. '	in' → logprob: -14.535309791564941
    10. '    ' → logprob: -14.910309791564941

Token 417: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5763741135597229
    2. 'in' → logprob: -0.8263741135597229
    3. 'not' → logprob: -7.951374053955078
    4. ' not' → logprob: -9.576374053955078
    5. ')' → logprob: -12.201374053955078
    6. '	in' → logprob: -13.451374053955078
    7. ' ' → logprob: -13.576374053955078
    8. '
' → logprob: -13.701374053955078
    9. 'In' → logprob: -14.326374053955078
    10. 'n' → logprob: -14.451374053955078

Token 418: ' done' (ID: 4167)
  Prédit: 'done'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'done' → logprob: -0.005235887598246336
    2. ' done' → logprob: -5.25523567199707
    3. '	done' → logprob: -13.25523567199707
    4. '
' → logprob: -15.75523567199707
    5. 'Done' → logprob: -16.50523567199707
    6. '   ' → logprob: -17.13023567199707
    7. '.done' → logprob: -17.38023567199707
    8. '```' → logprob: -17.63023567199707
    9. '(done' → logprob: -17.75523567199707
    10. '_done' → logprob: -18.63023567199707

Token 419: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4965626001358032
    2. ':' → logprob: -0.9965626001358032
    3. '       ' → logprob: -4.621562480926514
    4. ' and' → logprob: -5.246562480926514
    5. '):
' → logprob: -5.246562480926514
    6. '   ' → logprob: -6.996562480926514
    7. ',' → logprob: -8.121562957763672
    8. ' :
' → logprob: -8.371562957763672
    9. '           ' → logprob: -8.996562957763672
    10. '):' → logprob: -9.621562957763672

Token 420: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1490386426448822
    2. ' total' → logprob: -2.274038553237915
    3. 'total' → logprob: -3.899038553237915
    4. '   ' → logprob: -5.774038791656494
    5. ',' → logprob: -5.899038791656494
    6. '       ' → logprob: -6.024038791656494
    7. '            
' → logprob: -6.274038791656494
    8. '
' → logprob: -7.399038791656494
    9. ':
' → logprob: -7.524038791656494
    10. ',
' → logprob: -7.649038791656494

Token 421: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.07421530783176422
    2. ' total' → logprob: -2.6992154121398926
    3. '           ' → logprob: -5.824215412139893
    4. 'if' → logprob: -7.449215412139893
    5. ' if' → logprob: -7.449215412139893
    6. '       ' → logprob: -10.074214935302734
    7. '	total' → logprob: -10.074214935302734
    8. ',total' → logprob: -10.449214935302734
    9. '   ' → logprob: -10.699214935302734
    10. '
' → logprob: -12.949214935302734

Token 422: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1271706223487854
    2. ' +=' → logprob: -2.1271705627441406
    3. ',' → logprob: -8.50217056274414
    4. '=' → logprob: -10.75217056274414
    5. ']+=' → logprob: -11.37717056274414
    6. '    ' → logprob: -13.62717056274414
    7. ' ,' → logprob: -13.62717056274414
    8. ' ' → logprob: -14.00217056274414
    9. '```' → logprob: -14.12717056274414
    10. '+' → logprob: -14.50217056274414

Token 423: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.0005557744298130274
    2. ' step' → logprob: -7.500555992126465
    3. '   ' → logprob: -13.625555992126465
    4. '	step' → logprob: -13.875555992126465
    5. '1' → logprob: -14.875555992126465
    6. ' ' → logprob: -16.37555503845215
    7. '(step' → logprob: -16.37555503845215
    8. '           ' → logprob: -16.50055503845215
    9. '  ' → logprob: -17.50055503845215
    10. 'steps' → logprob: -17.62555503845215

Token 424: '_sign' (ID: 24730)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 425: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 426: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 427: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.382515549659729
    2. '<|end|>' → logprob: -1.507515549659729
    3. ' if' → logprob: -3.5075154304504395
    4. ',' → logprob: -4.1325154304504395
    5. ')' → logprob: -4.1325154304504395
    6. '   ' → logprob: -5.2575154304504395
    7. ' ' → logprob: -5.6325154304504395
    8. ' total' → logprob: -5.7575154304504395
    9. 'total' → logprob: -6.0075154304504395
    10. '<|end|>' → logprob: -6.1325154304504395

Token 428: ' total' (ID: 3609)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6736077666282654
    2. 'not' → logprob: -1.2986078262329102
    3. 'total' → logprob: -1.6736078262329102
    4. ' total' → logprob: -3.54860782623291
    5. ' ' → logprob: -7.42360782623291
    6. '0' → logprob: -8.79860782623291
    7. '   ' → logprob: -9.67360782623291
    8. '(total' → logprob: -10.42360782623291
    9. '(' → logprob: -11.79860782623291
    10. ' (' → logprob: -12.04860782623291

Token 429: ' <' (ID: 464)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.07456596940755844
    2. '>=' → logprob: -2.949565887451172
    3. ' ==' → logprob: -4.199565887451172
    4. '==' → logprob: -6.199565887451172
    5. ' <' → logprob: -6.949565887451172
    6. ' >' → logprob: -7.199565887451172
    7. '<|end|>' → logprob: -7.949565887451172
    8. '>' → logprob: -8.699565887451172
    9. '<' → logprob: -9.699565887451172
    10. '[' → logprob: -9.949565887451172

Token 430: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.47431331872940063
    2. ' ' → logprob: -0.9743133187294006
    3. ' N' → logprob: -8.974313735961914
    4. 'N' → logprob: -9.474313735961914
    5. '```' → logprob: -11.724313735961914
    6. '  ' → logprob: -12.474313735961914
    7. ')' → logprob: -12.786813735961914
    8. '   ' → logprob: -13.161813735961914
    9. '<|end|>' → logprob: -13.224313735961914
    10. ' or' → logprob: -13.286813735961914

Token 431: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000760553521104157
    2. ' ' → logprob: -7.250760555267334
    3. 'N' → logprob: -10.000760078430176
    4. ' N' → logprob: -12.750760078430176
    5. '   ' → logprob: -15.250760078430176
    6. 'step' → logprob: -15.375760078430176
    7. '  ' → logprob: -15.500760078430176
    8. '
' → logprob: -15.625760078430176
    9. '```' → logprob: -15.688260078430176
    10. ')' → logprob: -16.000761032104492

Token 432: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.011182458139955997
    2. ':' → logprob: -5.0111823081970215
    3. 'or' → logprob: -5.8861823081970215
    4. '       ' → logprob: -7.0111823081970215
    5. ':
' → logprob: -7.6361823081970215
    6. '           ' → logprob: -9.26118278503418
    7. '   ' → logprob: -9.38618278503418
    8. '	or' → logprob: -10.26118278503418
    9. ')' → logprob: -10.63618278503418
    10. ' ' → logprob: -11.38618278503418

Token 433: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.1002265140414238
    2. ' total' → logprob: -2.350226402282715
    3. '(total' → logprob: -12.100226402282715
    4. '   ' → logprob: -12.475226402282715
    5. ' ' → logprob: -12.600226402282715
    6. 'N' → logprob: -13.475226402282715
    7. ' (' → logprob: -13.975226402282715
    8. 'not' → logprob: -13.975226402282715
    9. '  ' → logprob: -14.225226402282715
    10. '       ' → logprob: -14.600226402282715

Token 434: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.6336274147033691
    2. ' >=' → logprob: -0.7586274147033691
    3. '==' → logprob: -7.633627414703369
    4. ' ==' → logprob: -8.383626937866211
    5. '>' → logprob: -8.633626937866211
    6. ')' → logprob: -10.258626937866211
    7. ')>=' → logprob: -10.633626937866211
    8. ']>=' → logprob: -10.758626937866211
    9. ' >' → logprob: -11.008626937866211
    10. '[' → logprob: -11.508626937866211

Token 435: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0017036291537806392
    2. ' N' → logprob: -6.37670373916626
    3. '   ' → logprob: -14.376703262329102
    4. ' ' → logprob: -15.001703262329102
    5. '	N' → logprob: -16.0017032623291
    6. 'len' → logprob: -16.2517032623291
    7. '
' → logprob: -16.5017032623291
    8. '```' → logprob: -17.0017032623291
    9. '  ' → logprob: -17.3767032623291
    10. ' ' → logprob: -18.0017032623291

Token 436: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13499951362609863
    2. ':
' → logprob: -2.1349995136260986
    3. ' or' → logprob: -5.0099992752075195
    4. '       ' → logprob: -7.0099992752075195
    5. '           ' → logprob: -8.13499927520752
    6. ':return' → logprob: -9.38499927520752
    7. '   ' → logprob: -9.88499927520752
    8. '):
' → logprob: -11.50999927520752
    9. ':
' → logprob: -12.38499927520752
    10. ' :' → logprob: -12.50999927520752

Token 437: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005763826426118612
    2. 'break' → logprob: -5.505764007568359
    3. '       ' → logprob: -7.130764007568359
    4. ' break' → logprob: -7.255764007568359
    5. '   ' → logprob: -10.13076400756836
    6. '
' → logprob: -10.50576400756836
    7. 'return' → logprob: -10.63076400756836
    8. '               ' → logprob: -10.75576400756836
    9. '	break' → logprob: -11.00576400756836
    10. '		' → logprob: -11.00576400756836

Token 438: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3175922930240631
    2. 'break' (adapté à ' break') → logprob: -1.8175922632217407
    3. ' break' → logprob: -2.8175923824310303
    4. '           ' → logprob: -3.0675923824310303
    5. 'return' → logprob: -6.567592144012451
    6. ' return' → logprob: -7.317592144012451
    7. '   ' → logprob: -7.442592144012451
    8. '	break' → logprob: -7.442592144012451
    9. '
' → logprob: -9.81759262084961
    10. '               ' → logprob: -10.56759262084961

Token 439: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 440: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1370605081319809
    2. '<|end|>' → logprob: -2.7620604038238525
    3. '   ' → logprob: -3.3870604038238525
    4. ',' → logprob: -5.762060642242432
    5. ')' → logprob: -5.887060642242432
    6. '    ' → logprob: -6.137060642242432
    7. ' ' → logprob: -6.137060642242432
    8. '        
' → logprob: -6.137060642242432
    9. ':' → logprob: -6.262060642242432
    10. ' 
' → logprob: -6.887060642242432

Token 441: ' x' (ID: 1215)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.417568564414978
    2. 'token' → logprob: -2.4175686836242676
    3. 'point' → logprob: -3.4175686836242676
    4. '   ' → logprob: -3.4175686836242676
    5. ' pos' → logprob: -3.6675686836242676
    6. 'cur' → logprob: -3.6675686836242676
    7. 'item' → logprob: -3.7925686836242676
    8. 'current' → logprob: -3.7925686836242676
    9. 'done' → logprob: -3.9175686836242676
    10. '       ' → logprob: -4.167568683624268

Token 442: 'Next' (ID: 7695)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.052430443465709686
    2. ' =' → logprob: -3.9274303913116455
    3. '=' → logprob: -4.552430629730225
    4. '_pos' → logprob: -4.677430629730225
    5. 'pos' → logprob: -5.052430629730225
    6. '[' → logprob: -6.677430629730225
    7. '_' → logprob: -7.177430629730225
    8. '_,' → logprob: -7.927430629730225
    9. ' ,' → logprob: -8.052430152893066
    10. '_val' → logprob: -8.052430152893066

Token 443: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09433302283287048
    2. ' =' → logprob: -2.8443329334259033
    3. '=' → logprob: -3.8443329334259033
    4. '_pos' → logprob: -5.344333171844482
    5. 'pos' → logprob: -5.969333171844482
    6. ' ,' → logprob: -6.844333171844482
    7. 's' → logprob: -7.719333171844482
    8. '_' → logprob: -8.219332695007324
    9. '_,' → logprob: -8.219332695007324
    10. ',pos' → logprob: -8.719332695007324

Token 444: ' getter' (ID: 68306)
  Prédit: 'getter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.19785425066947937
    2. 'seq' → logprob: -1.8228542804718018
    3. 'Rs' → logprob: -5.822854042053223
    4. 'next' → logprob: -5.947854042053223
    5. 'cycle' → logprob: -5.947854042053223
    6. '[' → logprob: -6.197854042053223
    7. ' getter' → logprob: -6.447854042053223
    8. '(seq' → logprob: -6.697854042053223
    9. 'pos' → logprob: -6.947854042053223
    10. ' seq' → logprob: -7.072854042053223

Token 445: '(seq' (ID: 78669)
  Prédit: '(seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.0012073767138645053
    2. '(' → logprob: -7.25120735168457
    3. '(se' → logprob: -8.50120735168457
    4. '((' → logprob: -8.87620735168457
    5. ')(' → logprob: -9.87620735168457
    6. ' (' → logprob: -10.12620735168457
    7. '(sequence' → logprob: -11.00120735168457
    8. '(total' → logprob: -11.50120735168457
    9. ')' → logprob: -11.87620735168457
    10. '(R' → logprob: -12.25120735168457

Token 446: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005245577194727957
    2. 'total' → logprob: -8.625524520874023
    3. ')' → logprob: -9.250524520874023
    4. ')[' → logprob: -9.500524520874023
    5. '(total' → logprob: -10.250524520874023
    6. '   ' → logprob: -10.625524520874023
    7. ',total' → logprob: -10.625524520874023
    8. '[(' → logprob: -10.875524520874023
    9. ',' → logprob: -10.875524520874023
    10. '[
' → logprob: -11.125524520874023

Token 447: 'total' (ID: 9577)
  Prédit: 'total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.007836581207811832
    2. '[' → logprob: -4.882836818695068
    3. ' total' → logprob: -9.38283634185791
    4. '   ' → logprob: -10.25783634185791
    5. ')' → logprob: -10.50783634185791
    6. '(total' → logprob: -10.63283634185791
    7. ',total' → logprob: -11.13283634185791
    8. ',' → logprob: -11.13283634185791
    9. '
' → logprob: -12.25783634185791
    10. ' ' → logprob: -12.63283634185791

Token 448: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.012975986115634441
    2. '])
' → logprob: -4.637976169586182
    3. '])+' → logprob: -6.262976169586182
    4. '])[' → logprob: -6.887976169586182
    5. '])
' → logprob: -9.137975692749023
    6. ')' → logprob: -9.137975692749023
    7. ']' → logprob: -11.262975692749023
    8. ' ])' → logprob: -11.262975692749023
    9. '])-' → logprob: -11.512975692749023
    10. ' ' → logprob: -11.762975692749023

Token 449: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 450: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.46327275037765503
    2. '       ' → logprob: -1.5882728099822998
    3. 'pos' → logprob: -2.8382728099823
    4. ' pos' → logprob: -3.7132728099823
    5. 'if' (adapté à ' if') → logprob: -3.9632728099823
    6. ' step' → logprob: -4.713272571563721
    7. '        ' → logprob: -5.088272571563721
    8. 'score' → logprob: -5.088272571563721
    9. ' total' → logprob: -5.338272571563721
    10. '<|end|>' → logprob: -5.463272571563721

Token 451: ' (' (ID: 350)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.43903738260269165
    2. 'x' → logprob: -1.3140373229980469
    3. 'seq' → logprob: -3.689037322998047
    4. 'pos' → logprob: -3.939037322998047
    5. ' direction' → logprob: -4.564037322998047
    6. 'step' → logprob: -4.564037322998047
    7. 'score' → logprob: -4.939037322998047
    8. '(direction' → logprob: -5.814037322998047
    9. 'abs' → logprob: -6.064037322998047
    10. ' x' → logprob: -6.064037322998047

Token 452: 'seq' (ID: 27794)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.18723146617412567
    2. 'x' → logprob: -2.3122315406799316
    3. 'seq' → logprob: -3.4372315406799316
    4. 'pos' → logprob: -3.8122315406799316
    5. 'score' → logprob: -4.812231540679932
    6. ' direction' → logprob: -5.562231540679932
    7. 'step' → logprob: -6.437231540679932
    8. '(direction' → logprob: -6.937231540679932
    9. 'sequence' → logprob: -7.812231540679932
    10. '(x' → logprob: -8.437231063842773

Token 453: 'idx' (ID: 13196)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0016713724471628666
    2. 'idx' → logprob: -6.876671314239502
    3. 'total' → logprob: -8.87667179107666
    4. '[next' → logprob: -9.12667179107666
    5. '[idx' → logprob: -9.37667179107666
    6. ')' → logprob: -9.37667179107666
    7. '   ' → logprob: -10.25167179107666
    8. 'seq' → logprob: -10.25167179107666
    9. '       ' → logprob: -10.75167179107666
    10. ')[' → logprob: -10.87667179107666

Token 454: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.09763454645872116
    2. ' %' → logprob: -2.4726345539093018
    3. '+' → logprob: -5.097634315490723
    4. ' +' → logprob: -6.222634315490723
    5. '[' → logprob: -8.597634315490723
    6. ')' → logprob: -8.722634315490723
    7. '   ' → logprob: -9.722634315490723
    8. '       ' → logprob: -10.097634315490723
    9. ' ==' → logprob: -10.972634315490723
    10. ' ' → logprob: -10.972634315490723

Token 455: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0013296448159962893
    2. ' ' → logprob: -6.62632942199707
    3. ')' → logprob: -13.37632942199707
    4. '   ' → logprob: -14.50132942199707
    5. '           ' → logprob: -15.37632942199707
    6. '  ' → logprob: -15.37632942199707
    7. '```' → logprob: -15.37632942199707
    8. '     ' → logprob: -16.00132942199707
    9. '         ' → logprob: -16.37632942199707
    10. '       ' → logprob: -16.37632942199707

Token 456: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00019245444855187088
    2. ' ' → logprob: -8.625192642211914
    3. ')' → logprob: -12.125192642211914
    4. '```' → logprob: -12.875192642211914
    5. '   ' → logprob: -13.937692642211914
    6. '4' → logprob: -14.000192642211914
    7. '3' → logprob: -14.562692642211914
    8. '  ' → logprob: -15.250192642211914
    9. '6' → logprob: -15.312692642211914
    10. '
' → logprob: -15.375192642211914

Token 457: ' ==' (ID: 951)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20890042185783386
    2. ' ==' → logprob: -2.5839004516601562
    3. '==' → logprob: -2.8339004516601562
    4. ')==' → logprob: -2.9589004516601562
    5. ' )' → logprob: -7.083900451660156
    6. '+' → logprob: -7.208900451660156
    7. ' !=' → logprob: -8.208900451660156
    8. ')+' → logprob: -8.833900451660156
    9. ' +' → logprob: -9.083900451660156
    10. ')!=' → logprob: -9.208900451660156

Token 458: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016637979075312614
    2. ' ' → logprob: -4.266637802124023
    3. '1' → logprob: -6.016637802124023
    4. '   ' → logprob: -11.391637802124023
    5. ')' → logprob: -11.516637802124023
    6. '```' → logprob: -13.266637802124023
    7. '       ' → logprob: -13.766637802124023
    8. '  ' → logprob: -13.766637802124023
    9. ' ' → logprob: -13.891637802124023
    10. '           ' → logprob: -13.954137802124023

Token 459: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03831355646252632
    2. '1' → logprob: -3.538313627243042
    3. ' ' → logprob: -4.788313388824463
    4. ')' → logprob: -9.788313865661621
    5. '   ' → logprob: -9.913313865661621
    6. '=' → logprob: -10.913313865661621
    7. '```' → logprob: -10.975813865661621
    8. '       ' → logprob: -11.725813865661621
    9. '           ' → logprob: -11.725813865661621
    10. '==' → logprob: -12.225813865661621

Token 460: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7368748188018799
    2. ')' → logprob: -1.3618748188018799
    3. '==' → logprob: -2.48687481880188
    4. 'and' → logprob: -2.48687481880188
    5. ' ==' → logprob: -2.86187481880188
    6. '):' → logprob: -4.361874580383301
    7. ')==' → logprob: -4.486874580383301
    8. '):
' → logprob: -4.861874580383301
    9. ' or' → logprob: -5.486874580383301
    10. ',' → logprob: -6.236874580383301

Token 461: ' pos' (ID: 1253)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0528964027762413
    2. 'pos' → logprob: -3.552896499633789
    3. '(x' → logprob: -4.677896499633789
    4. ' x' → logprob: -4.927896499633789
    5. 'direction' → logprob: -5.927896499633789
    6. 'step' → logprob: -7.052896499633789
    7. 'score' → logprob: -7.552896499633789
    8. '(pos' → logprob: -8.052896499633789
    9. ' pos' → logprob: -8.302896499633789
    10. '(' → logprob: -8.302896499633789

Token 462: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.36512088775634766
    2. '>' → logprob: -1.4901208877563477
    3. ' >=' → logprob: -3.2401208877563477
    4. ' <=' → logprob: -4.115120887756348
    5. '>=' → logprob: -4.365120887756348
    6. ' <' → logprob: -5.365120887756348
    7. '<=' → logprob: -5.365120887756348
    8. '<' → logprob: -6.990120887756348
    9. ' -' → logprob: -7.490120887756348
    10. ')' → logprob: -7.740120887756348

Token 463: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.39096567034721375
    2. ' x' → logprob: -1.1409657001495361
    3. '=' → logprob: -5.640965461730957
    4. 'Rs' → logprob: -8.515965461730957
    5. ' Rs' → logprob: -9.140965461730957
    6. ')' → logprob: -9.765965461730957
    7. '=x' → logprob: -9.765965461730957
    8. '0' → logprob: -10.640965461730957
    9. ')x' → logprob: -10.640965461730957
    10. ' ' → logprob: -11.515965461730957

Token 464: 'Next' (ID: 7695)
  Prédit: 'Next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Next' → logprob: -7.107425062713446e-06
    2. '_next' → logprob: -12.500006675720215
    3. ' Next' → logprob: -13.250006675720215
    4. '[' → logprob: -15.000006675720215
    5. 'next' → logprob: -15.375006675720215
    6. ')' → logprob: -15.500006675720215
    7. '.Next' → logprob: -15.625006675720215
    8. ' next' → logprob: -15.750006675720215
    9. '```' → logprob: -16.00000762939453
    10. '   ' → logprob: -16.25000762939453

Token 465: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05294354632496834
    2. ' )' → logprob: -3.052943468093872
    3. ' and' → logprob: -5.927943706512451
    4. 'and' → logprob: -7.552943706512451
    5. '):' → logprob: -7.677943706512451
    6. '):
' → logprob: -8.052943229675293
    7. '==' → logprob: -9.552943229675293
    8. ' or' → logprob: -9.802943229675293
    9. '   ' → logprob: -10.302943229675293
    10. ' ):
' → logprob: -10.427943229675293

Token 466: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18990588188171387
    2. ' or' → logprob: -2.564905881881714
    3. ':
' → logprob: -3.314905881881714
    4. ' and' → logprob: -3.689905881881714
    5. '       ' → logprob: -3.939905881881714
    6. '           ' → logprob: -4.564906120300293
    7. ')' → logprob: -7.189906120300293
    8. ':return' → logprob: -7.189906120300293
    9. '==' → logprob: -7.314906120300293
    10. '   ' → logprob: -7.439906120300293

Token 467: ' (' (ID: 350)
  Prédit: '(seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.042058851569890976
    2. 'seq' → logprob: -4.167058944702148
    3. ' (' → logprob: -4.292058944702148
    4. '(pos' → logprob: -5.292058944702148
    5. 'not' → logprob: -5.917058944702148
    6. '(not' → logprob: -6.792058944702148
    7. ' seq' → logprob: -7.167058944702148
    8. ' not' → logprob: -7.167058944702148
    9. '(se' → logprob: -7.792058944702148
    10. 'pos' → logprob: -8.042058944702148

Token 468: 'seq' (ID: 27794)
  Prédit: 'seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.007199324667453766
    2. ' seq' → logprob: -5.007199287414551
    3. 'pos' → logprob: -8.00719928741455
    4. '(seq' → logprob: -10.00719928741455
    5. '   ' → logprob: -10.50719928741455
    6. ' ' → logprob: -11.38219928741455
    7. '       ' → logprob: -11.63219928741455
    8. '  ' → logprob: -11.75719928741455
    9. ' pos' → logprob: -11.88219928741455
    10. '
' → logprob: -11.88219928741455

Token 469: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.006877580191940069
    2. '%' → logprob: -5.131877422332764
    3. '[idx' → logprob: -7.381877422332764
    4. '_idx' → logprob: -8.631877899169922
    5. ' idx' → logprob: -9.256877899169922
    6. '	idx' → logprob: -11.256877899169922
    7. ' %' → logprob: -11.506877899169922
    8. '   ' → logprob: -12.131877899169922
    9. '(idx' → logprob: -12.506877899169922
    10. ')' → logprob: -12.756877899169922

Token 470: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.04313940927386284
    2. '%' → logprob: -3.1681394577026367
    3. ' ' → logprob: -9.418139457702637
    4. '+' → logprob: -10.668139457702637
    5. ' +' → logprob: -10.918139457702637
    6. ' ==' → logprob: -11.918139457702637
    7. '```' → logprob: -12.793139457702637
    8. '==' → logprob: -12.793139457702637
    9. ')' → logprob: -13.293139457702637
    10. ' ' → logprob: -13.543139457702637

Token 471: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002583862515166402
    2. ' ' → logprob: -6.002583980560303
    3. '1' → logprob: -10.377583503723145
    4. '```' → logprob: -10.752583503723145
    5. '0' → logprob: -11.877583503723145
    6. '%' → logprob: -11.940083503723145
    7. '   ' → logprob: -12.565083503723145
    8. ')' → logprob: -12.627583503723145
    9. '
' → logprob: -12.940083503723145
    10. '[' → logprob: -13.502583503723145

Token 472: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02097916789352894
    2. ' ' → logprob: -4.270979404449463
    3. '1' → logprob: -5.020979404449463
    4. '0' → logprob: -9.145978927612305
    5. '
' → logprob: -10.958478927612305
    6. '```' → logprob: -11.020978927612305
    7. '   ' → logprob: -11.395978927612305
    8. '	' → logprob: -12.270978927612305
    9. '  ' → logprob: -12.708478927612305
    10. '`' → logprob: -13.208478927612305

Token 473: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.14473512768745422
    2. '==' → logprob: -2.019735097885132
    3. ' !=' → logprob: -7.144735336303711
    4. ' ' → logprob: -7.894735336303711
    5. ' and' → logprob: -8.394735336303711
    6. ' %' → logprob: -8.769735336303711
    7. '%' → logprob: -9.144735336303711
    8. '!=' → logprob: -9.269735336303711
    9. 'and' → logprob: -9.519735336303711
    10. ' else' → logprob: -10.394735336303711

Token 474: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007824686472304165
    2. ' ' → logprob: -7.250782489776611
    3. '0' → logprob: -10.125782012939453
    4. '   ' → logprob: -11.625782012939453
    5. '```' → logprob: -12.313282012939453
    6. '
' → logprob: -12.375782012939453
    7. '  ' → logprob: -13.563282012939453
    8. '=' → logprob: -13.688282012939453
    9. '`' → logprob: -14.188282012939453
    10. '     ' → logprob: -14.250782012939453

Token 475: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.292095299111679e-05
    2. ' ' → logprob: -9.625082969665527
    3. '0' → logprob: -11.625082969665527
    4. '
' → logprob: -12.875082969665527
    5. '   ' → logprob: -13.500082969665527
    6. '```' → logprob: -13.750082969665527
    7. '`' → logprob: -15.000082969665527
    8. '  ' → logprob: -15.375082969665527
    9. '``' → logprob: -15.562582969665527
    10. ')' → logprob: -15.562582969665527

Token 476: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.01615988276898861
    2. 'and' → logprob: -4.141160011291504
    3. ')' → logprob: -10.016160011291504
    4. '):
' → logprob: -10.266160011291504
    5. '==' → logprob: -11.516160011291504
    6. ' or' → logprob: -11.641160011291504
    7. '):' → logprob: -12.141160011291504
    8. ' ' → logprob: -12.266160011291504
    9. ' ==' → logprob: -12.766160011291504
    10. '   ' → logprob: -13.266160011291504

Token 477: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.006032838951796293
    2. ' pos' → logprob: -5.131032943725586
    3. '   ' → logprob: -9.881032943725586
    4. 'x' → logprob: -10.381032943725586
    5. ' ' → logprob: -11.881032943725586
    6. '  ' → logprob: -12.506032943725586
    7. '           ' → logprob: -13.381032943725586
    8. '	pos' → logprob: -13.506032943725586
    9. '       ' → logprob: -13.631032943725586
    10. '    ' → logprob: -13.756032943725586

Token 478: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.011763336136937141
    2. '>' → logprob: -4.511763572692871
    3. ' >=' → logprob: -7.886763572692871
    4. ' ' → logprob: -9.136763572692871
    5. ' !=' → logprob: -9.636763572692871
    6. ' <=' → logprob: -9.636763572692871
    7. ' <' → logprob: -9.761763572692871
    8. ' ==' → logprob: -11.011763572692871
    9. ' >
' → logprob: -11.886763572692871
    10. ')' → logprob: -12.386763572692871

Token 479: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.17975309491157532
    2. ' x' → logprob: -1.804753065109253
    3. '```' → logprob: -12.929753303527832
    4. ')x' → logprob: -13.804753303527832
    5. '(x' → logprob: -14.179753303527832
    6. '	x' → logprob: -14.304753303527832
    7. ' ' → logprob: -14.304753303527832
    8. ')' → logprob: -14.679753303527832
    9. '   ' → logprob: -14.679753303527832
    10. '
' → logprob: -14.679753303527832

Token 480: 'Next' (ID: 7695)
  Prédit: 'Next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Next' → logprob: -0.00020818933262489736
    2. 'ext' → logprob: -8.500207901000977
    3. 'N' → logprob: -13.250207901000977
    4. 'xt' → logprob: -14.125207901000977
    5. ' Next' → logprob: -14.750207901000977
    6. '```' → logprob: -15.000207901000977
    7. '[' → logprob: -15.250207901000977
    8. '_next' → logprob: -15.250207901000977
    9. 'Ne' → logprob: -15.500207901000977
    10. '.Next' → logprob: -15.625207901000977

Token 481: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.22697359323501587
    2. '):
' → logprob: -1.601973533630371
    3. ')' → logprob: -6.851973533630371
    4. ' ):' → logprob: -8.601973533630371
    5. ' ):
' → logprob: -9.351973533630371
    6. ':' → logprob: -9.351973533630371
    7. '       ' → logprob: -9.851973533630371
    8. '):
' → logprob: -10.226973533630371
    9. '):

' → logprob: -11.101973533630371
    10. '           ' → logprob: -11.476973533630371

Token 482: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05349581688642502
    2. ':
' → logprob: -3.8034958839416504
    3. '       ' → logprob: -4.17849588394165
    4. '           ' → logprob: -4.55349588394165
    5. ',' → logprob: -6.67849588394165
    6. '):' → logprob: -6.92849588394165
    7. '<|end|>' → logprob: -7.55349588394165
    8. '):
' → logprob: -8.303495407104492
    9. ')' → logprob: -8.428495407104492
    10. ' :' → logprob: -8.928495407104492

Token 483: ' break' (ID: 2338)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.12191009521484375
    2. ' pos' → logprob: -2.4969100952148438
    3. '           ' → logprob: -3.7469100952148438
    4. 'score' → logprob: -5.371910095214844
    5. '               ' → logprob: -6.746910095214844
    6. '   ' → logprob: -7.496910095214844
    7. '```' → logprob: -7.746910095214844
    8. ' score' → logprob: -7.746910095214844
    9. 'break' (adapté à ' break') → logprob: -7.996910095214844
    10. '
' → logprob: -8.496910095214844

Token 484: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.963097095489502
    2. ')' → logprob: -1.088097095489502
    3. ':' → logprob: -1.588097095489502
    4. '<|end|>' → logprob: -4.088097095489502
    5. '```' → logprob: -4.338097095489502
    6. '   ' → logprob: -4.838097095489502
    7. ':
' → logprob: -4.963097095489502
    8. ')
' → logprob: -5.338097095489502
    9. ',' → logprob: -5.463097095489502
    10. '.' → logprob: -5.713097095489502

Token 485: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.088768482208252
    2. ')' → logprob: -1.338768482208252
    3. '<|end|>' → logprob: -1.588768482208252
    4. ':' → logprob: -2.463768482208252
    5. '   ' → logprob: -3.713768482208252
    6. '_' → logprob: -3.838768482208252
    7. ',' → logprob: -3.963768482208252
    8. '    ' → logprob: -4.338768482208252
    9. ' ' → logprob: -4.963768482208252
    10. '.' → logprob: -5.463768482208252

Token 486: ' score' (ID: 8429)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5708635449409485
    2. 'pos' → logprob: -1.9458634853363037
    3. '   ' → logprob: -2.4458634853363037
    4. ')' → logprob: -2.9458634853363037
    5. ':' → logprob: -3.8208634853363037
    6. '<|end|>' → logprob: -3.8208634853363037
    7. '    ' → logprob: -4.070863723754883
    8. 'score' (adapté à ' score') → logprob: -4.195863723754883
    9. ' pos' → logprob: -4.695863723754883
    10. '.' → logprob: -4.945863723754883

Token 487: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.08965517580509186
    2. '+=' → logprob: -2.4646551609039307
    3. ' -=' → logprob: -8.339654922485352
    4. ' =' → logprob: -8.964654922485352
    5. ',' → logprob: -9.089654922485352
    6. '=' → logprob: -9.214654922485352
    7. '+' → logprob: -9.589654922485352
    8. ' ' → logprob: -11.214654922485352
    9. ' ,' → logprob: -11.464654922485352
    10. '+=(' → logprob: -11.589654922485352

Token 488: ' abs' (ID: 8443)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.157593235373497
    2. 'abs' → logprob: -2.282593250274658
    3. ' x' → logprob: -4.407593250274658
    4. '1' → logprob: -4.532593250274658
    5. '(x' → logprob: -4.532593250274658
    6. ' abs' → logprob: -6.032593250274658
    7. 'seq' → logprob: -6.032593250274658
    8. '(' → logprob: -6.532593250274658
    9. 'pos' → logprob: -6.657593250274658
    10. '(abs' → logprob: -6.782593250274658

Token 489: '(pos' (ID: 24566)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.3489997684955597
    2. '(pos' → logprob: -1.2239997386932373
    3. '(' → logprob: -7.723999977111816
    4. '(score' → logprob: -9.348999977111816
    5. 'x' → logprob: -11.348999977111816
    6. 'pos' → logprob: -11.973999977111816
    7. '(position' → logprob: -13.348999977111816
    8. '((' → logprob: -13.473999977111816
    9. '(seq' → logprob: -13.723999977111816
    10. '(
' → logprob: -13.848999977111816

Token 490: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.523175835609436
    2. ' -' → logprob: -0.898175835609436
    3. '-x' → logprob: -10.273176193237305
    4. ' ' → logprob: -12.398176193237305
    5. '-
' → logprob: -12.523176193237305
    6. 'x' → logprob: -13.148176193237305
    7. ' ' → logprob: -13.398176193237305
    8. ')' → logprob: -13.648176193237305
    9. ' -
' → logprob: -13.648176193237305
    10. '   ' → logprob: -13.898176193237305

Token 491: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0067156096920371056
    2. ' x' → logprob: -5.006715774536133
    3. ')x' → logprob: -16.131715774536133
    4. '(x' → logprob: -16.756715774536133
    5. 'score' → logprob: -17.756715774536133
    6. 'next' → logprob: -17.881715774536133
    7. '```' → logprob: -18.006715774536133
    8. ')' → logprob: -18.131715774536133
    9. '	x' → logprob: -18.381715774536133
    10. '   ' → logprob: -18.506715774536133

Token 492: 'Next' (ID: 7695)
  Prédit: 'Next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Next' → logprob: -0.0008296403102576733
    2. 'ext' → logprob: -7.125829696655273
    3. '_next' → logprob: -11.875829696655273
    4. '.Next' → logprob: -12.250829696655273
    5. ' Next' → logprob: -12.625829696655273
    6. '[' → logprob: -12.625829696655273
    7. ')' → logprob: -13.375829696655273
    8. 'x' → logprob: -14.000829696655273
    9. '```' → logprob: -14.000829696655273
    10. 'Ext' → logprob: -14.125829696655273

Token 493: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3870803117752075
    2. ')' → logprob: -1.1370803117752075
    3. ')
' → logprob: -8.887080192565918
    4. ' )
' → logprob: -10.137080192565918
    5. '   ' → logprob: -11.762080192565918
    6. '       ' → logprob: -11.887080192565918
    7. ')

' → logprob: -12.262080192565918
    8. ' )' → logprob: -12.262080192565918
    9. '),' → logprob: -13.887080192565918
    10. ')+' → logprob: -14.012080192565918

Token 494: '       ' (ID: 309)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8480532169342041
    2. 'pos' → logprob: -1.473053216934204
    3. '\n' → logprob: -1.848053216934204
    4. '       ' → logprob: -2.973053216934204
    5. '   ' → logprob: -3.098053216934204
    6. '    
' → logprob: -4.098052978515625
    7. '
' → logprob: -4.723052978515625
    8. '[' → logprob: -4.973052978515625
    9. '        
' → logprob: -5.098052978515625
    10. ' 
' → logprob: -5.098052978515625

Token 495: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.004309053532779217
    2. ' pos' → logprob: -5.504309177398682
    3. '       ' → logprob: -8.629308700561523
    4. '
' → logprob: -10.754308700561523
    5. '   ' → logprob: -11.004308700561523
    6. 'done' → logprob: -12.504308700561523
    7. '           ' → logprob: -13.129308700561523
    8. '	pos' → logprob: -13.254308700561523
    9. '```' → logprob: -13.629308700561523
    10. '        
' → logprob: -14.004308700561523

Token 496: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269284337759018
    2. ' =' → logprob: -2.1269283294677734
    3. ' +=' → logprob: -16.251928329467773
    4. '.=' → logprob: -16.876928329467773
    5. '＝' → logprob: -16.876928329467773
    6. '+=' → logprob: -16.876928329467773
    7. '=
' → logprob: -17.376928329467773
    8. ' ' → logprob: -17.501928329467773
    9. ',' → logprob: -17.751928329467773
    10. '=

' → logprob: -17.876928329467773

Token 497: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00861456897109747
    2. ' x' → logprob: -4.758614540100098
    3. 'next' → logprob: -17.633615493774414
    4. '(x' → logprob: -18.008615493774414
    5. ' ' → logprob: -18.508615493774414
    6. 'score' → logprob: -18.508615493774414
    7. '	x' → logprob: -18.883615493774414
    8. '```' → logprob: -19.133615493774414
    9. '$x' → logprob: -19.258615493774414
    10. '   ' → logprob: -19.508615493774414

Token 498: 'Next' (ID: 7695)
  Prédit: 'Next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Next' → logprob: -0.0012399908155202866
    2. 'ext' → logprob: -7.001239776611328
    3. 't' → logprob: -8.251239776611328
    4. '[' → logprob: -10.376239776611328
    5. '```' → logprob: -11.751239776611328
    6. '_next' → logprob: -12.001239776611328
    7. 'xt' → logprob: -12.376239776611328
    8. '.Next' → logprob: -12.501239776611328
    9. ' Next' → logprob: -12.876239776611328
    10. 'et' → logprob: -13.001239776611328

Token 499: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014072886668145657
    2. '<|end|>' → logprob: -5.389072895050049
    3. '   ' → logprob: -5.889072895050049
    4. ')' → logprob: -6.264072895050049
    5. 'seq' → logprob: -7.139072895050049
    6. 'if' → logprob: -7.264072895050049
    7. ',' → logprob: -7.639072895050049
    8. 'score' → logprob: -7.889072895050049
    9. '        
' → logprob: -8.01407241821289
    10. 'return' → logprob: -8.26407241821289

Token 500: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7170774340629578
    2. 'done' → logprob: -0.9670774340629578
    3. '   ' → logprob: -3.2170774936676025
    4. 'if' → logprob: -3.3420774936676025
    5. ' done' → logprob: -3.9670774936676025
    6. ' if' → logprob: -4.717077255249023
    7. ')' → logprob: -5.217077255249023
    8. '```' → logprob: -5.592077255249023
    9. '<|end|>' → logprob: -5.717077255249023
    10. 'yield' → logprob: -5.717077255249023

Token 501: ' done' (ID: 4167)
  Prédit: 'done'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'done' (adapté à ' done') → logprob: -0.005811482667922974
    2. 'if' → logprob: -5.88081169128418
    3. 'idx' → logprob: -6.88081169128418
    4. 'i' → logprob: -7.38081169128418
    5. '       ' → logprob: -8.50581169128418
    6. 'cur' → logprob: -8.50581169128418
    7. '   ' → logprob: -8.75581169128418
    8. 'for' → logprob: -9.25581169128418
    9. 'curr' → logprob: -9.38081169128418
    10. 'direction' → logprob: -9.50581169128418

Token 502: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0003001888981088996
    2. '.' → logprob: -8.125300407409668
    3. 'add' → logprob: -12.625300407409668
    4. '.update' → logprob: -15.500300407409668
    5. ' .' → logprob: -15.875300407409668
    6. ' add' → logprob: -16.50029945373535
    7. '```' → logprob: -16.50029945373535
    8. '].' → logprob: -17.00029945373535
    9. '.setdefault' → logprob: -17.00029945373535
    10. ')add' → logprob: -17.25029945373535

Token 503: '(seq' (ID: 78669)
  Prédit: '(seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -4.60414821645827e-06
    2. '((' → logprob: -13.125004768371582
    3. 'seq' → logprob: -13.750004768371582
    4. '(se' → logprob: -13.875004768371582
    5. '(' → logprob: -14.625004768371582
    6. '(rs' → logprob: -18.000003814697266
    7. '(sequence' → logprob: -19.000003814697266
    8. '(sec' → logprob: -19.000003814697266
    9. '(R' → logprob: -19.625003814697266
    10. '(tuple' → logprob: -19.750003814697266

Token 504: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.896309739408025e-07
    2. 'total' → logprob: -14.375000953674316
    3. '```' → logprob: -15.875000953674316
    4. '[
' → logprob: -17.125
    5. 'seq' → logprob: -17.5
    6. '
' → logprob: -18.125
    7. '`' → logprob: -18.375
    8. '[pos' → logprob: -18.375
    9. ')[' → logprob: -18.375
    10. '   ' → logprob: -18.875

Token 505: 'total' (ID: 9577)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.029753267765045166
    2. 'total' → logprob: -3.5297532081604004
    3. '```' → logprob: -14.529753684997559
    4. '[
' → logprob: -14.654753684997559
    5. ' ' → logprob: -14.654753684997559
    6. '`' → logprob: -15.029753684997559
    7. ' total' → logprob: -15.154753684997559
    8. 'seq' → logprob: -15.404753684997559
    9. '   ' → logprob: -16.154752731323242
    10. ')' → logprob: -16.404752731323242

Token 506: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00015860427811276168
    2. '[' → logprob: -8.875158309936523
    3. ']' → logprob: -11.250158309936523
    4. ' ][' → logprob: -12.625158309936523
    5. '   ' → logprob: -14.250158309936523
    6. ''][' → logprob: -14.750158309936523
    7. '"][' → logprob: -15.000158309936523
    8. ']
' → logprob: -15.500158309936523
    9. '])' → logprob: -16.000158309936523
    10. '```' → logprob: -16.250158309936523

Token 507: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.292907877039397e-06
    2. ' ' → logprob: -13.25000286102295
    3. '   ' → logprob: -14.12500286102295
    4. '
' → logprob: -14.87500286102295
    5. '```' → logprob: -15.75000286102295
    6. '۲' → logprob: -17.000003814697266
    7. '  ' → logprob: -17.312503814697266
    8. '    ' → logprob: -17.750003814697266
    9. '２' → logprob: -17.875003814697266
    10. '[' → logprob: -18.062503814697266

Token 508: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10372831672430038
    2. ')
' → logprob: -2.3537282943725586
    3. '])' → logprob: -5.728728294372559
    4. '])
' → logprob: -8.603728294372559
    5. ']' → logprob: -10.228728294372559
    6. ')
' → logprob: -10.978728294372559
    7. ')]' → logprob: -11.853728294372559
    8. ')])' → logprob: -12.603728294372559
    9. ')

' → logprob: -12.728728294372559
    10. '))' → logprob: -12.978728294372559

Token 509: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6813928484916687
    2. 'seq' → logprob: -1.0563929080963135
    3. '<|end|>' → logprob: -2.1813929080963135
    4. '   ' → logprob: -4.556392669677734
    5. '```' → logprob: -5.181392669677734
    6. '[' → logprob: -5.806392669677734
    7. '<|end|>' → logprob: -6.181392669677734
    8. ')' → logprob: -6.431392669677734
    9. ',' → logprob: -6.556392669677734
    10. 'tokens' → logprob: -6.806392669677734

Token 510: ' if' (ID: 538)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.576688826084137
    2. 'if' (adapté à ' if') → logprob: -1.2016887664794922
    3. '       ' → logprob: -2.076688766479492
    4. ' if' → logprob: -4.701688766479492
    5. ' seq' → logprob: -7.701688766479492
    6. '```' → logprob: -7.826688766479492
    7. '(seq' → logprob: -8.076688766479492
    8. '
' → logprob: -8.076688766479492
    9. '   ' → logprob: -8.326688766479492
    10. '[' → logprob: -8.451688766479492

Token 511: ' seq' (ID: 26775)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.07008226215839386
    2. ' seq' → logprob: -3.320082187652588
    3. 'step' → logprob: -3.945082187652588
    4. 'score' → logprob: -5.820082187652588
    5. '(seq' → logprob: -6.195082187652588
    6. 'pos' → logprob: -6.320082187652588
    7. 'direction' → logprob: -6.320082187652588
    8. ' step' → logprob: -7.070082187652588
    9. 'total' → logprob: -7.820082187652588
    10. ' direction' → logprob: -8.070082664489746

Token 512: 'idx' (ID: 13196)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6404809951782227
    2. 'idx' → logprob: -0.7654809951782227
    3. 'total' → logprob: -6.265480995178223
    4. 'index' → logprob: -6.890480995178223
    5. '_idx' → logprob: -6.890480995178223
    6. '[idx' → logprob: -6.890480995178223
    7. ')' → logprob: -7.515480995178223
    8. 'indices' → logprob: -8.140480995178223
    9. '   ' → logprob: -8.265480995178223
    10. '#' → logprob: -8.765480995178223

Token 513: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.28186866641044617
    2. ' %' → logprob: -1.4068686962127686
    3. ' ==' → logprob: -7.7818684577941895
    4. '<|end|>' → logprob: -9.781868934631348
    5. '==' → logprob: -10.281868934631348
    6. ' ' → logprob: -10.281868934631348
    7. '<|end|>' → logprob: -10.406868934631348
    8. ' ' → logprob: -10.531868934631348
    9. '   ' → logprob: -11.031868934631348
    10. '()%' → logprob: -11.406868934631348

Token 514: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00011534435179783031
    2. ' ' → logprob: -9.125115394592285
    3. '```' → logprob: -12.625115394592285
    4. '
' → logprob: -14.937615394592285
    5. '   ' → logprob: -15.000115394592285
    6. '<|end|>' → logprob: -15.250115394592285
    7. '`' → logprob: -15.562615394592285
    8. '[' → logprob: -15.562615394592285
    9. '...' → logprob: -15.625115394592285
    10. ')' → logprob: -16.31261444091797

Token 515: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.38769733905792236
    2. ' ==' → logprob: -1.1376973390579224
    3. '!=' → logprob: -8.012697219848633
    4. ' !=' → logprob: -8.137697219848633
    5. '+' → logprob: -9.762697219848633
    6. '=' → logprob: -10.387697219848633
    7. '==
' → logprob: -10.387697219848633
    8. '+=' → logprob: -11.012697219848633
    9. '0' → logprob: -11.512697219848633
    10. ')==' → logprob: -11.637697219848633

Token 516: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08378704637289047
    2. ' ' → logprob: -2.583786964416504
    3. '1' → logprob: -5.333786964416504
    4. '=' → logprob: -10.208786964416504
    5. '```' → logprob: -11.708786964416504
    6. '==' → logprob: -12.083786964416504
    7. '2' → logprob: -12.708786964416504
    8. ' =' → logprob: -13.833786964416504
    9. '   ' → logprob: -13.896286964416504
    10. '
' → logprob: -14.208786964416504

Token 517: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.013001865707337856
    2. '1' → logprob: -4.388001918792725
    3. ' ' → logprob: -7.638001918792725
    4. '```' → logprob: -12.013001441955566
    5. '   ' → logprob: -12.763001441955566
    6. '`' → logprob: -15.825501441955566
    7. '``' → logprob: -15.950501441955566
    8. '=' → logprob: -15.950501441955566
    9. '  ' → logprob: -16.013002395629883
    10. '==' → logprob: -16.075502395629883

Token 518: ':
' (ID: 734)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1433974802494049
    2. '==' → logprob: -2.018397569656372
    3. ':' → logprob: -7.893397331237793
    4. ' <' → logprob: -9.393397331237793
    5. ' +=' → logprob: -10.018397331237793
    6. ' !=' → logprob: -10.018397331237793
    7. ' >=' → logprob: -10.268397331237793
    8. '>' → logprob: -10.768397331237793
    9. ' >' → logprob: -10.768397331237793
    10. ':
' → logprob: -11.143397331237793

Token 519: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06902986764907837
    2. 'i' → logprob: -3.8190298080444336
    3. ' i' → logprob: -3.8190298080444336
    4. '   ' → logprob: -4.194029808044434
    5. '       ' → logprob: -4.944029808044434
    6. ' and' → logprob: -8.569029808044434
    7. ':
' → logprob: -9.194029808044434
    8. ' ' → logprob: -9.319029808044434
    9. ':' → logprob: -10.194029808044434
    10. '  ' → logprob: -10.194029808044434

Token 520: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.005115157458931208
    2. ' i' → logprob: -5.380115032196045
    3. '   ' → logprob: -7.755115032196045
    4. '           ' → logprob: -10.005115509033203
    5. 'total' → logprob: -11.380115509033203
    6. '       ' → logprob: -12.630115509033203
    7. ' total' → logprob: -13.380115509033203
    8. '  ' → logprob: -13.755115509033203
    9. ' ' → logprob: -14.130115509033203
    10. 'if' → logprob: -14.630115509033203

Token 521: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -6.229872087715194e-05
    2. '
' → logprob: -10.250061988830566
    3. 'r' → logprob: -12.500061988830566
    4. ' R' → logprob: -12.625061988830566
    5. '```' → logprob: -12.875061988830566
    6. 'n' → logprob: -13.125061988830566
    7. 'L' → logprob: -13.312561988830566
    8. '

' → logprob: -13.812561988830566
    9. '`' → logprob: -13.937561988830566
    10. 'total' → logprob: -14.000061988830566

Token 522: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5231046080589294
    2. ' +=' → logprob: -1.1481046676635742
    3. ' -=' → logprob: -2.898104667663574
    4. '-=' → logprob: -3.523104667663574
    5. '=' → logprob: -5.398104667663574
    6. ' =' → logprob: -7.148104667663574
    7. '-' → logprob: -9.398104667663574
    8. '+' → logprob: -10.023104667663574
    9. '   ' → logprob: -12.648104667663574
    10. ' ' → logprob: -13.648104667663574

Token 523: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.043894268572330475
    2. ' total' → logprob: -3.1688942909240723
    3. 'i' → logprob: -7.168894290924072
    4. ' i' → logprob: -9.293893814086914
    5. '   ' → logprob: -11.793893814086914
    6. 'step' → logprob: -12.043893814086914
    7. 'max' → logprob: -12.918893814086914
    8. ' ' → logprob: -13.043893814086914
    9. 'seq' → logprob: -13.043893814086914
    10. '(total' → logprob: -13.418893814086914

Token 524: ' +' (ID: 659)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.32026252150535583
    2. '+' → logprob: -1.4452625513076782
    3. ' -' → logprob: -4.070262432098389
    4. '+=' → logprob: -4.320262432098389
    5. ' +' → logprob: -5.195262432098389
    6. '-=' → logprob: -6.945262432098389
    7. ' -=' → logprob: -7.445262432098389
    8. ' +=' → logprob: -7.445262432098389
    9. '           ' → logprob: -9.445262908935547
    10. '   ' → logprob: -9.945262908935547

Token 525: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.025189142674207687
    2. 'step' → logprob: -4.02518892288208
    3. ' ' → logprob: -5.27518892288208
    4. ' step' → logprob: -6.27518892288208
    5. '   ' → logprob: -11.400189399719238
    6. '  ' → logprob: -13.775189399719238
    7. '       ' → logprob: -14.150189399719238
    8. '    ' → logprob: -15.025189399719238
    9. '	step' → logprob: -15.025189399719238
    10. '(step' → logprob: -15.400189399719238

Token 526: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005338232032954693
    2. 'step' → logprob: -5.255338191986084
    3. ' ' → logprob: -9.255338668823242
    4. ' step' → logprob: -11.755338668823242
    5. '   ' → logprob: -14.880338668823242
    6. 'steps' → logprob: -16.255338668823242
    7. '+' → logprob: -16.255338668823242
    8. 'sign' → logprob: -16.567838668823242
    9. '  ' → logprob: -16.567838668823242
    10. 'Step' → logprob: -16.942838668823242

Token 527: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014662880450487137
    2. '
' → logprob: -4.889662742614746
    3. '<|end|>' → logprob: -5.264662742614746
    4. 'else' → logprob: -6.889662742614746
    5. '<|end|>' → logprob: -7.514662742614746
    6. ' else' → logprob: -8.389662742614746
    7. '        
' → logprob: -11.014662742614746
    8. 'elif' → logprob: -11.764662742614746
    9. ' 
' → logprob: -11.889662742614746
    10. '}else' → logprob: -12.139662742614746

Token 528: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 529: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.19704554975032806
    2. '       ' → logprob: -1.9470455646514893
    3. ' else' → logprob: -3.3220455646514893
    4. '   ' → logprob: -10.19704532623291
    5. '	else' → logprob: -10.57204532623291
    6. '```' → logprob: -12.94704532623291
    7. 'elif' → logprob: -13.57204532623291
    8. '}else' → logprob: -13.82204532623291
    9. ':
' → logprob: -14.19704532623291
    10. '{
' → logprob: -14.44704532623291

Token 530: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.9276638031005859
    2. '           ' → logprob: -1.177663803100586
    3. ':' → logprob: -1.302663803100586
    4. ' i' → logprob: -3.927663803100586
    5. '   ' → logprob: -6.177663803100586
    6. ' :
' → logprob: -7.302663803100586
    7. 'i' → logprob: -7.677663803100586
    8. '          ' → logprob: -7.802663803100586
    9. '
' → logprob: -7.927663803100586
    10. '```' → logprob: -7.927663803100586

Token 531: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3925086259841919
    2. 'i' → logprob: -1.142508625984192
    3. ' i' → logprob: -5.767508506774902
    4. '   ' → logprob: -6.017508506774902
    5. '          ' → logprob: -11.267508506774902
    6. '       ' → logprob: -11.517508506774902
    7. '	i' → logprob: -11.517508506774902
    8. '               ' → logprob: -12.142508506774902
    9. '```' → logprob: -12.267508506774902
    10. '		' → logprob: -12.642508506774902

Token 532: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.018650038167834282
    2. ' i' → logprob: -4.018650054931641
    3. '   ' → logprob: -7.643650054931641
    4. '           ' → logprob: -11.89365005493164
    5. '  ' → logprob: -12.01865005493164
    6. '       ' → logprob: -13.01865005493164
    7. '	i' → logprob: -13.01865005493164
    8. ' ' → logprob: -13.14365005493164
    9. '    ' → logprob: -14.26865005493164
    10. '     ' → logprob: -15.14365005493164

Token 533: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0012838063994422555
    2. 'R' → logprob: -6.876283645629883
    3. ' =' → logprob: -8.376283645629883
    4. '=' → logprob: -11.626283645629883
    5. '   ' → logprob: -12.376283645629883
    6. ' L' → logprob: -12.876283645629883
    7. '  ' → logprob: -13.751283645629883
    8. ' ' → logprob: -14.126283645629883
    9. '
' → logprob: -14.501283645629883
    10. '    ' → logprob: -15.001283645629883

Token 534: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759658217430115
    2. '=' → logprob: -0.8259658217430115
    3. ' -=' → logprob: -10.825965881347656
    4. '-=' → logprob: -12.075965881347656
    5. ' +=' → logprob: -15.075965881347656
    6. '   ' → logprob: -15.450965881347656
    7. '+=' → logprob: -15.825965881347656
    8. ' ' → logprob: -16.325965881347656
    9. '    ' → logprob: -16.700965881347656
    10. '-' → logprob: -17.075965881347656

Token 535: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.2519303858280182
    2. ' total' → logprob: -1.5019303560256958
    3. '	total' → logprob: -15.001930236816406
    4. '   ' → logprob: -15.126930236816406
    5. ' ' → logprob: -15.376930236816406
    6. 't' → logprob: -15.751930236816406
    7. '(total' → logprob: -16.001930236816406
    8. 'otal' → logprob: -16.876930236816406
    9. 'tot' → logprob: -17.251930236816406
    10. '  ' → logprob: -17.251930236816406

Token 536: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06535950303077698
    2. '-' → logprob: -3.315359592437744
    3. ' +' → logprob: -3.940359592437744
    4. '+' → logprob: -5.065359592437744
    5. ' ' → logprob: -6.815359592437744
    6. '-step' → logprob: -9.940359115600586
    7. ' step' → logprob: -10.065359115600586
    8. 'step' → logprob: -13.315359115600586
    9. ' ' → logprob: -13.565359115600586
    10. '        ' → logprob: -13.940359115600586

Token 537: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.375001907348633
    3. '```' → logprob: -16.125001907348633
    4. '   ' → logprob: -17.125001907348633
    5. '<|end|>' → logprob: -17.625001907348633
    6. '۱' → logprob: -18.875001907348633
    7. '           ' → logprob: -19.125001907348633
    8. '' → logprob: -19.375001907348633
    9. '       ' → logprob: -19.750001907348633
    10. '	' → logprob: -19.875001907348633

Token 538: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.500001907348633
    3. '<|end|>' → logprob: -16.750001907348633
    4. '   ' → logprob: -16.875001907348633
    5. '```' → logprob: -18.000001907348633
    6. '
' → logprob: -18.250001907348633
    7. '           ' → logprob: -19.625001907348633
    8. '       ' → logprob: -20.250001907348633
    9. '  ' → logprob: -20.500001907348633
    10. '۱' → logprob: -20.625001907348633

Token 539: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07682734727859497
    2. '<|end|>' → logprob: -3.20182728767395
    3. '
' → logprob: -4.326827526092529
    4. 'seq' → logprob: -4.451827526092529
    5. '        
' → logprob: -5.451827526092529
    6. '		
' → logprob: -7.076827526092529
    7. '<|end|>' → logprob: -7.326827526092529
    8. '	' → logprob: -7.576827526092529
    9. '   ' → logprob: -7.826827526092529
    10. '    
' → logprob: -8.826827049255371

Token 540: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0192413330078125
    2. 'seq' → logprob: -4.3942413330078125
    3. '
' → logprob: -5.6442413330078125
    4. '<|end|>' → logprob: -6.0192413330078125
    5. '        
' → logprob: -8.019241333007812
    6. '```' → logprob: -9.644241333007812
    7. '<|end|>' → logprob: -9.769241333007812
    8. '[' → logprob: -9.894241333007812
    9. '	' → logprob: -10.269241333007812
    10. ' seq' → logprob: -10.519241333007812

Token 541: ' seq' (ID: 26775)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3144408166408539
    2. 'seq' (adapté à ' seq') → logprob: -1.3144408464431763
    3. ' seq' → logprob: -7.314440727233887
    4. 'if' → logprob: -8.439440727233887
    5. '   ' → logprob: -8.439440727233887
    6. '        
' → logprob: -10.689440727233887
    7. '```' → logprob: -11.314440727233887
    8. '
' → logprob: -11.564440727233887
    9. ' if' → logprob: -11.939440727233887
    10. '_seq' → logprob: -11.939440727233887

Token 542: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -3.47626737493556e-05
    2. '_idx' → logprob: -11.00003433227539
    3. '       ' → logprob: -12.75003433227539
    4. '[idx' → logprob: -12.75003433227539
    5. '=' → logprob: -12.87503433227539
    6. '```' → logprob: -12.87503433227539
    7. '   ' → logprob: -13.25003433227539
    8. '[' → logprob: -13.37503433227539
    9. 'index' → logprob: -14.25003433227539
    10. '	idx' → logprob: -14.62503433227539

Token 543: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.018438229337334633
    2. ' +=' → logprob: -4.018438339233398
    3. '+' → logprob: -8.268438339233398
    4. '=' → logprob: -10.518438339233398
    5. '+="' → logprob: -13.518438339233398
    6. '+='' → logprob: -13.518438339233398
    7. ']+=' → logprob: -14.393438339233398
    8. ' ' → logprob: -15.143438339233398
    9. '   ' → logprob: -15.143438339233398
    10. '+=(' → logprob: -15.268438339233398

Token 544: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013263145228847861
    2. ' ' → logprob: -6.626326084136963
    3. '2' → logprob: -15.876326560974121
    4. '```' → logprob: -16.001325607299805
    5. '   ' → logprob: -16.126325607299805
    6. ' ' → logprob: -18.376325607299805
    7. '
' → logprob: -18.501325607299805
    8. '    ' → logprob: -19.376325607299805
    9. '  ' → logprob: -19.501325607299805
    10. '0' → logprob: -19.688825607299805

Token 545: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -13.25000286102295
    3. '2' → logprob: -13.75000286102295
    4. '   ' → logprob: -17.125003814697266
    5. '```' → logprob: -18.625003814697266
    6. '
' → logprob: -20.000003814697266
    7. '`' → logprob: -20.625003814697266
    8. '3' → logprob: -20.750003814697266
    9. '  ' → logprob: -21.125003814697266
    10. '       ' → logprob: -21.125003814697266

Token 546: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6445859670639038
    2. 'print' → logprob: -1.1445859670639038
    3. 'return' → logprob: -2.5195860862731934
    4. '<|end|>' → logprob: -3.2695860862731934
    5. ')' → logprob: -3.7695860862731934
    6. '#' → logprob: -5.894586086273193
    7. '    
' → logprob: -6.144586086273193
    8. '
' → logprob: -6.394586086273193
    9. 'while' → logprob: -7.269586086273193
    10. '       ' → logprob: -7.269586086273193

Token 547: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4899771511554718
    2. 'print' → logprob: -1.2399771213531494
    3. 'return' → logprob: -2.4899771213531494
    4. '<|end|>' → logprob: -5.1149773597717285
    5. '    
' → logprob: -6.1149773597717285
    6. 'result' → logprob: -6.6149773597717285
    7. ')' → logprob: -6.7399773597717285
    8. '
' → logprob: -7.1149773597717285
    9. 'while' → logprob: -7.3649773597717285
    10. 'next' → logprob: -7.9899773597717285

Token 548: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02811666764318943
    2. 'return' (adapté à ' return') → logprob: -3.6531167030334473
    3. ' return' → logprob: -7.653116703033447
    4. '<|end|>' → logprob: -7.903116703033447
    5. '
' → logprob: -8.153116226196289
    6. 'print' → logprob: -8.653116226196289
    7. '    
' → logprob: -8.778116226196289
    8. ')' → logprob: -9.028116226196289
    9. '	return' → logprob: -9.778116226196289
    10. ':return' → logprob: -10.778116226196289

Token 549: ' score' (ID: 8429)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.00026419671485200524
    2. ' score' → logprob: -8.250264167785645
    3. '(score' → logprob: -12.750264167785645
    4. '   ' → logprob: -16.87526512145996
    5. '	score' → logprob: -17.62526512145996
    6. 'code' → logprob: -18.75026512145996
    7. 'pos' → logprob: -19.50026512145996
    8. ' ' → logprob: -19.50026512145996
    9. 'max' → logprob: -19.50026512145996
    10. '_score' → logprob: -19.62526512145996

Token 550: ' +' (ID: 659)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0067750499583780766
    2. 'result' → logprob: -5.13177490234375
    3. 'direction' → logprob: -7.50677490234375
    4. 'score' → logprob: -9.25677490234375
    5. 'if' → logprob: -9.75677490234375
    6. 'for' → logprob: -10.63177490234375
    7. '
' → logprob: -10.88177490234375
    8. ')' → logprob: -11.00677490234375
    9. 'next' → logprob: -11.13177490234375
    10. '#' → logprob: -11.88177490234375

Token 551: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.3200037181377411
    2. ' abs' → logprob: -1.3200037479400635
    3. 'pos' → logprob: -5.445003509521484
    4. ' pos' → logprob: -7.570003509521484
    5. '(abs' → logprob: -7.570003509521484
    6. '1' → logprob: -7.695003509521484
    7. ' N' → logprob: -8.445003509521484
    8. 'N' → logprob: -8.820003509521484
    9. '0' → logprob: -9.195003509521484
    10. ' (' → logprob: -9.445003509521484

Token 552: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.008647779934108257
    2. '(' → logprob: -4.758647918701172
    3. '(
' → logprob: -11.383647918701172
    4. 'pos' → logprob: -11.633647918701172
    5. '(position' → logprob: -11.758647918701172
    6. '((' → logprob: -12.883647918701172
    7. '(Pos' → logprob: -14.133647918701172
    8. '(

' → logprob: -14.883647918701172
    9. '(end' → logprob: -15.008647918701172
    10. '(x' → logprob: -15.383647918701172

Token 553: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1251552850008011
    2. '-' → logprob: -2.250155210494995
    3. '(' → logprob: -5.500155448913574
    4. ' -' → logprob: -5.500155448913574
    5. '<|end|>' → logprob: -6.125155448913574
    6. '(N' → logprob: -7.625155448913574
    7. '()' → logprob: -7.625155448913574
    8. '0' → logprob: -8.375155448913574
    9. '())' → logprob: -8.500155448913574
    10. '(-' → logprob: -9.000155448913574

Token 554: 'ans' (ID: 616)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004464773926883936
    2. 'direction' → logprob: -6.129464626312256
    3. 'result' → logprob: -6.254464626312256
    4. ')' → logprob: -9.879465103149414
    5. 'score' → logprob: -10.004465103149414
    6. 'if' → logprob: -10.004465103149414
    7. 'for' → logprob: -10.254465103149414
    8. '#' → logprob: -10.629465103149414
    9. '```' → logprob: -10.629465103149414
    10. 'p' → logprob: -10.879465103149414

Token 555: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11511987447738647
    2. ' =' → logprob: -2.2401199340820312
    3. '(' → logprob: -6.615119934082031
    4. 's' → logprob: -8.240119934082031
    5. ')' → logprob: -8.615119934082031
    6. '_' → logprob: -8.740119934082031
    7. '()' → logprob: -9.740119934082031
    8. ',' → logprob: -9.990119934082031
    9. '("="' → logprob: -10.365119934082031
    10. '[' → logprob: -10.865119934082031

Token 556: ' max' (ID: 2999)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5265358090400696
    2. 'max' → logprob: -1.0265357494354248
    3. 'tr' → logprob: -3.651535749435425
    4. 'reduce' → logprob: -4.026535987854004
    5. 'score' → logprob: -6.026535987854004
    6. '0' → logprob: -6.151535987854004
    7. 'abs' → logprob: -7.276535987854004
    8. 'float' → logprob: -7.401535987854004
    9. ' min' → logprob: -7.776535987854004
    10. ' max' → logprob: -8.151535987854004

Token 557: '(tr' (ID: 14363)
  Prédit: '(tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tr' → logprob: -0.019827833399176598
    2. '(ans' → logprob: -4.519827842712402
    3. '(' → logprob: -4.894827842712402
    4. '(lambda' → logprob: -7.269827842712402
    5. '(
' → logprob: -8.894827842712402
    6. '(score' → logprob: -9.269827842712402
    7. '((' → logprob: -9.644827842712402
    8. '(range' → logprob: -9.769827842712402
    9. '([' → logprob: -9.769827842712402
    10. '(abs' → logprob: -10.019827842712402

Token 558: 'averse' (ID: 51829)
  Prédit: 'averse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'averse' → logprob: -2.2127087504486553e-05
    2. 'aver' → logprob: -11.250021934509277
    3. 'avel' → logprob: -12.625021934509277
    4. 'avers' → logprob: -12.625021934509277
    5. 'ave' → logprob: -13.250021934509277
    6. 'av' → logprob: -15.500021934509277
    7. 'a' → logprob: -15.875021934509277
    8. 'average' → logprob: -15.875021934509277
    9. 'ans' → logprob: -16.250022888183594
    10. 'AVER' → logprob: -17.250022888183594

Token 559: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00017362393555231392
    2. '("' → logprob: -9.125173568725586
    3. '(' → logprob: -9.750173568725586
    4. ''' → logprob: -12.375173568725586
    5. ')' → logprob: -14.250173568725586
    6. '(('' → logprob: -14.375173568725586
    7. ' ('' → logprob: -15.375173568725586
    8. '(
' → logprob: -15.875173568725586
    9. ''s' → logprob: -16.000173568725586
    10. '(',' → logprob: -16.375173568725586

Token 560: 'neg' (ID: 18775)
  Prédit: 'neg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neg' → logprob: -0.04859452322125435
    2. 'pos' → logprob: -3.0485944747924805
    3. ' neg' → logprob: -13.54859447479248
    4. 'posit' → logprob: -13.67359447479248
    5. '')' → logprob: -13.92359447479248
    6. ''' → logprob: -14.79859447479248
    7. 'negative' → logprob: -14.92359447479248
    8. 'nega' → logprob: -15.04859447479248
    9. '_neg' → logprob: -15.04859447479248
    10. 'Neg' → logprob: -15.17359447479248

Token 561: ''),' (ID: 10047)
  Prédit: ''),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''),' → logprob: -0.0015003408771008253
    2. '')' → logprob: -6.626500129699707
    3. ''),
' → logprob: -9.251500129699707
    4. ''' → logprob: -10.126500129699707
    5. '),' → logprob: -11.501500129699707
    6. ''),'' → logprob: -11.751500129699707
    7. '')
' → logprob: -12.376500129699707
    8. '('' → logprob: -12.626500129699707
    9. '''' → logprob: -12.626500129699707
    10. ')'),' → logprob: -13.126500129699707

Token 562: ' traverse' (ID: 66957)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.0019299437990412116
    2. ' traverse' → logprob: -6.251929759979248
    3. '   ' → logprob: -14.126930236816406
    4. ' ' → logprob: -15.751930236816406
    5. '	tr' → logprob: -16.251930236816406
    6. ' tr' → logprob: -16.626930236816406
    7. '  ' → logprob: -16.626930236816406
    8. 'Traverse' → logprob: -16.626930236816406
    9. '(tr' → logprob: -18.126930236816406
    10. ' ' → logprob: -18.376930236816406

Token 563: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00012511172099038959
    2. '(' → logprob: -9.00012493133545
    3. '(
' → logprob: -13.75012493133545
    4. ' ('' → logprob: -15.12512493133545
    5. ''' → logprob: -15.37512493133545
    6. ')' → logprob: -16.625125885009766
    7. '(

' → logprob: -17.000125885009766
    8. '(('' → logprob: -17.125125885009766
    9. ''s' → logprob: -18.500125885009766
    10. ' (' → logprob: -18.625125885009766

Token 564: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.3132686913013458
    2. ''' → logprob: -1.3132686614990234
    3. 'posit' → logprob: -12.563268661499023
    4. ''post' → logprob: -13.438268661499023
    5. '"' → logprob: -14.813268661499023
    6. '_pos' → logprob: -15.563268661499023
    7. ''p' → logprob: -15.563268661499023
    8. 'positive' → logprob: -15.813268661499023
    9. 'apos' → logprob: -15.813268661499023
    10. '	pos' → logprob: -15.938268661499023

Token 565: ''))
' (ID: 15277)
  Prédit: ''))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''))' → logprob: -0.0016618473455309868
    2. '')' → logprob: -6.751661777496338
    3. ')' → logprob: -8.126662254333496
    4. '))' → logprob: -8.751662254333496
    5. ''))
' → logprob: -10.751662254333496
    6. ''' → logprob: -12.251662254333496
    7. '')))' → logprob: -12.251662254333496
    8. ''));' → logprob: -12.876662254333496
    9. '('' → logprob: -13.001662254333496
    10. ''),' → logprob: -15.001662254333496

Token 566: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0004936986370012164
    2. '```' → logprob: -7.87549352645874
    3. '
' → logprob: -9.875494003295898
    4. '``' → logprob: -10.625494003295898
    5. ' print' → logprob: -11.125494003295898
    6. '<|end|>' → logprob: -11.375494003295898
    7. ')
' → logprob: -12.125494003295898
    8. ')' → logprob: -12.875494003295898
    9. '\' → logprob: -13.750494003295898
    10. '(print' → logprob: -14.500494003295898

Token 567: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -4.127333340875339e-06
    2. 'ans' → logprob: -12.625003814697266
    3. '(' → logprob: -14.125003814697266
    4. '(
' → logprob: -16.625003814697266
    5. '()' → logprob: -17.375003814697266
    6. '(answer' → logprob: -17.500003814697266
    7. '(abs' → logprob: -18.000003814697266
    8. ' (' → logprob: -18.875003814697266
    9. '	ans' → logprob: -19.000003814697266
    10. '((' → logprob: -20.500003814697266

Token 568: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003047186473850161
    2. '())' → logprob: -8.37530517578125
    3. '()' → logprob: -9.62530517578125
    4. '))' → logprob: -13.12530517578125
    5. '`)' → logprob: -13.12530517578125
    6. ')
' → logprob: -13.50030517578125
    7. '(' → logprob: -14.00030517578125
    8. ' )' → logprob: -14.50030517578125
    9. '#' → logprob: -14.75030517578125
    10. ')`' → logprob: -14.75030517578125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 566
Tokens correctement prédits (1ère position, stricte): 228
Tokens correctement prédits (1ère position, avec adaptation): 238
Tokens correctement prédits (top 10): 464
Précision stricte (1ère position): 40.28%
Précision adaptée (1ère position): 42.05%
Précision (top 10): 81.98%
================================================================================
