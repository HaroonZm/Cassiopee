================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:49:44
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys  # Le module sys permet d'interagir directement avec certaines variables et fonctions propres à l'interpréteur Python

sys.setrecursionlimit(10 ** 7)  # Cette ligne augmente la limite de récursion de l'interpréteur Python. 
# Par défaut, Python arrête un programme lorsqu'il dépasse environ 1000 appels récursifs pour éviter les débordements de pile (stack overflow).
# Ici, on élève cette limite à 10 millions (10^7), ce qui permet des appels récursifs très profonds. 
# C'est utile pour certains algorithmes nécessitant beaucoup de récursion, comme ceux traitant de grands arbres ou graphes.

# from collections import deque  # Cette ligne est commentée et donc inutilisée. deque est une structure de données "double-ended queue" très utile pour ajouter/retirer des éléments aux deux extrémités de façon efficace.
from collections import deque  # Ici, on importe explicitement deque pour une utilisation ultérieure. Mais dans ce code, deque n'est finalement pas utilisé.

# import bisect  # Le module bisect permet des opérations efficaces d'insertion/positionnement dans des listes triées, mais ici il est commenté.
# import numpy as np  # Numpy est un module utilisé pour le calcul scientifique sur des tableaux, mais il est commenté donc non utilisé ici.
# from collections import deque  # Commenté, doublon avec la ligne plus haut.
# map(int, sys.stdin.read().split())  # Cette ligne seule ne fait rien, elle illustre peut-être une manière commune de lire des entiers depuis l'entrée standard.

import itertools  # Le module itertools contient divers outils pour manipuler des itérateurs (permutations, produits cartésiens, etc.), mais il n'est pas utilisé dans ce script.
import heapq  # heapq donne accès à la structure de données "tas binaire" (heap) pour créer des files de priorité efficaces, mais ici aussi il n'est pas utilisé.

def input():
    """
    Fonction personnalisée remplaçant la fonction input() standard de Python.
    Elle lit une ligne depuis l'entrée standard (typiquement l'utilisateur ou un fichier),
    supprime le caractère de fin de ligne (retour chariot), puis renvoie la ligne.
    Ceci est particulièrement utile pour éviter d'avoir des retours à la ligne superflus qui viennent souvent de sys.stdin.readline().
    """
    return sys.stdin.readline().rstrip()  # readline() lit une ligne, rstrip() supprime les espaces en fin de chaîne (notamment '\n').

def main():
    """
    Fonction principale du programme. Elle exécute la logique principale, souvent appelée point d'entrée du script.
    """

    N = int(input())  # Lecture d'un entier N qui représente généralement le nombre d'éléments ou la taille d'une séquence.
    # On utilise la fonction input() définie précédemment pour obtenir la ligne de l'entrée, puis int() pour convertir la chaîne en entier.

    H = list(map(int, input().split()))  
    # Lecture d'une seconde ligne de l'entrée, censée contenir N nombres entiers séparés par des espaces.
    # On appelle input() pour la lire, .split() pour séparer la ligne sur les espaces, 
    # map(int, ...) pour convertir chaque élément (qui est à ce stade une chaîne) en entier, 
    # et enfin list() pour obtenir une liste d'entiers.
    
    off = 0  # Initialisation d'une variable appelée 'off' à 0. 
    # Cette variable agit ici comme une sorte de drapeau ou d'état, elle sera utilisée pour ajuster certains calculs dans la boucle suivante.
    
    flag = 1  # Initialisation d'une seconde variable appelée 'flag' à 1.
    # Cependant, cette variable n'est jamais utilisée dans la suite du code et peut donc être supprimée sans changer le comportement du programme.

    for i in range(N-1, 0, -1):
        # Boucle for qui démarre à l'indice N-1 (dernier indice valide de la liste H) et décrémente jusqu'à 1 (puisque la borne inférieure 0 n'est pas incluse).
        # À chaque itération, i représente l'indice courant dans la liste H. On traite donc la liste du dernier élément vers le premier.
        
        if H[i] - off >= H[i-1]:
            # Teste si la hauteur du bloc actuel (H[i]) diminuée de la valeur de off (correction éventuelle) est supérieure ou égale à la hauteur du bloc précédent (H[i-1]).
            # Si oui, on peut "descendre" un bloc sans problème ou sans nécessiter de modification. On réinitialise alors off à 0.
            off = 0  # On remet la modification/correction à 0 pour la prochaine itération.
            continue  # continue fait passer à la prochaine itération de la boucle, évitant d'exécuter le reste du code dans cette boucle.

        elif H[i] - off + 1 == H[i-1]:
            # Ici, on vérifie si, en augmentant d'une unité la hauteur actuelle (avec la correction 'off'),
            # on pourrait égaler la hauteur du bloc précédent. Cela signifie qu'on est autorisé à abaisser une fois la hauteur du bloc précédent de 1.
            off = 1  # On indique qu'une modification/correction a été faite pour la prochaine itération.

        else:
            # Si aucune des deux conditions précédentes n'est remplie, alors la séquence ne respecte pas la contrainte exigée.
            # Dans le contexte de ce problème, ça signifie que la transformation des hauteurs n'est pas possible.
            print("No")  # On affiche 'No' pour indiquer l'impossibilité.
            exit()      # On arrête le programme immédiatement.

    # Si la boucle n'a jamais rencontré le cas d'échec, c'est que la transformation est réalisable.
    print("Yes")  # On affiche 'Yes' pour indiquer le succès.

if __name__ == "__main__":  # Cette condition spéciale permet de vérifier si le script est exécuté directement (pas importé comme module).
    main()  # Si c'est le cas, on exécute la fonction principale main().
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' ' (ID: 220)
  → Token d'amorce (pas de prédiction)

Token 3: ' #' (ID: 1069)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.015895461663603783
    2. '\n' → logprob: -5.140895366668701
    3. '<|end|>' → logprob: -5.390895366668701
    4. '\' → logprob: -5.640895366668701
    5. '.readline' → logprob: -8.14089584350586
    6. '[' → logprob: -8.39089584350586
    7. '<|end|>' → logprob: -8.51589584350586
    8. 'import' → logprob: -8.51589584350586
    9. '```' → logprob: -8.64089584350586
    10. '' → logprob: -8.89089584350586

Token 4: ' Le' (ID: 2018)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.02292315661907196
    2. ' .' → logprob: -4.647922992706299
    3. '<|end|>' → logprob: -5.147922992706299
    4. ' ' → logprob: -6.147922992706299
    5. '<|end|>' → logprob: -6.647922992706299
    6. 'import' → logprob: -6.772922992706299
    7. '.import' → logprob: -7.272922992706299
    8. ',' → logprob: -7.772922992706299
    9. '.system' → logprob: -8.272923469543457
    10. '.e' → logprob: -8.647923469543457

Token 5: ' module' (ID: 8827)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.17599070072174072
    2. 'e' → logprob: -3.550990581512451
    3. 'n' → logprob: -4.050990581512451
    4. 'ss' → logprob: -4.050990581512451
    5. 'vel' → logprob: -4.300990581512451
    6. 'v' → logprob: -4.425990581512451
    7. 'a' → logprob: -4.800990581512451
    8. 'ng' → logprob: -4.925990581512451
    9. '#' → logprob: -5.050990581512451
    10. 'x' → logprob: -5.175990581512451

Token 6: ' sys' (ID: 12228)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.42064806818962097
    2. '.' → logprob: -2.1706480979919434
    3. '_' → logprob: -2.5456480979919434
    4. ' sys' → logprob: -3.2956480979919434
    5. 'space' → logprob: -3.5456480979919434
    6. ' space' → logprob: -3.9206480979919434
    7. ',' → logprob: -4.170648097991943
    8. '  ' → logprob: -4.795648097991943
    9. ' ' → logprob: -5.045648097991943
    10. 'r' → logprob: -5.295648097991943

Token 7: ' permet' (ID: 11798)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0009774327045306563
    2. 'import' → logprob: -7.750977516174316
    3. '.import' → logprob: -8.000977516174316
    4. '.readline' → logprob: -10.375977516174316
    5. ' ' → logprob: -10.625977516174316
    6. '<|end|>' → logprob: -10.875977516174316
    7. ',' → logprob: -11.250977516174316
    8. ' .' → logprob: -11.250977516174316
    9. '.
' → logprob: -11.500977516174316
    10. '.\' → logprob: -11.750977516174316

Token 8: ' d' (ID: 272)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3372606933116913
    2. ' ' → logprob: -1.5872607231140137
    3. ' de' → logprob: -2.7122607231140137
    4. '  ' → logprob: -5.212260723114014
    5. ' .' → logprob: -5.962260723114014
    6. 'space' → logprob: -6.212260723114014
    7. ' d' → logprob: -6.337260723114014
    8. '_' → logprob: -7.462260723114014
    9. ',' → logprob: -7.712260723114014
    10. 'import' → logprob: -7.837260723114014

Token 9: ''inter' (ID: 55731)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4040363132953644
    2. ''import' → logprob: -1.404036283493042
    3. ''utiliser' → logprob: -3.529036283493042
    4. 'import' → logprob: -4.154036521911621
    5. ''' → logprob: -4.904036521911621
    6. ''inter' → logprob: -5.029036521911621
    7. ''acc' → logprob: -5.904036521911621
    8. '-import' → logprob: -6.154036521911621
    9. '_import' → logprob: -6.279036521911621
    10. '-' → logprob: -6.404036521911621

Token 10: 'agir' (ID: 105832)
  Prédit: 'agir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'agir' → logprob: -0.3869018256664276
    2. 'rom' → logprob: -1.26190185546875
    3. 'preter' → logprob: -4.38690185546875
    4. 'pr' → logprob: -4.88690185546875
    5. 'rag' → logprob: -5.26190185546875
    6. 'cepter' → logprob: -5.51190185546875
    7. 'rup' → logprob: -6.51190185546875
    8. 'r' → logprob: -7.26190185546875
    9. 'import' → logprob: -7.26190185546875
    10. '_' → logprob: -7.51190185546875

Token 11: ' directement' (ID: 52317)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5992054343223572
    2. ' with' → logprob: -1.474205493927002
    3. ' avec' → logprob: -2.224205493927002
    4. '.' → logprob: -2.724205493927002
    5. 'with' → logprob: -3.849205493927002
    6. 'import' → logprob: -4.974205493927002
    7. ' .' → logprob: -5.099205493927002
    8. 'avec' → logprob: -5.599205493927002
    9. ' import' → logprob: -5.849205493927002
    10. '_' → logprob: -6.224205493927002

Token 12: ' avec' (ID: 3937)
  Prédit: ' avec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' avec' → logprob: -0.7301275730133057
    2. ' ' → logprob: -1.4801275730133057
    3. 'avec' → logprob: -1.8551275730133057
    4. ' with' → logprob: -2.6051275730133057
    5. 'with' → logprob: -3.6051275730133057
    6. '.' → logprob: -3.8551275730133057
    7. 'import' → logprob: -5.355127334594727
    8. ',' → logprob: -5.480127334594727
    9. '  ' → logprob: -7.105127334594727
    10. ' import' → logprob: -7.230127334594727

Token 13: ' certaines' (ID: 46662)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.472103476524353
    2. 'l' → logprob: -1.097103476524353
    3. 'le' → logprob: -3.8471035957336426
    4. ' le' → logprob: -4.347103595733643
    5. ' ' → logprob: -5.222103595733643
    6. ' Python' → logprob: -7.847103595733643
    7. 'les' → logprob: -7.972103595733643
    8. ' sys' → logprob: -8.222103118896484
    9. ' ' → logprob: -8.222103118896484
    10. 'la' → logprob: -8.222103118896484

Token 14: ' variables' (ID: 13955)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7979221343994141
    2. '_' → logprob: -1.297922134399414
    3. ' ' → logprob: -1.422922134399414
    4. 'import' → logprob: -5.297922134399414
    5. ' espaces' → logprob: -5.297922134399414
    6. '<|end|>' → logprob: -5.547922134399414
    7. ' .' → logprob: -5.672922134399414
    8. ' import' → logprob: -5.797922134399414
    9. '\' → logprob: -6.297922134399414
    10. '  ' → logprob: -6.422922134399414

Token 15: ' et' (ID: 859)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.11525500565767288
    2. ',' → logprob: -2.490255117416382
    3. 'import' → logprob: -3.865255117416382
    4. ' ' → logprob: -5.990254878997803
    5. ' import' → logprob: -7.865254878997803
    6. '_' → logprob: -7.990254878997803
    7. ' .' → logprob: -8.115255355834961
    8. '<|end|>' → logprob: -8.115255355834961
    9. '\' → logprob: -8.365255355834961
    10. '.import' → logprob: -8.490255355834961

Token 16: ' fonctions' (ID: 87283)
  Prédit: ' fonctions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fonctions' → logprob: -0.5837087035179138
    2. 'fon' → logprob: -1.8337087631225586
    3. ' des' → logprob: -2.4587087631225586
    4. 'des' → logprob: -2.5837087631225586
    5. 'fonction' → logprob: -2.9587087631225586
    6. 'les' → logprob: -3.7087087631225586
    7. ' les' → logprob: -4.708708763122559
    8. 'functions' → logprob: -4.833708763122559
    9. ' functions' → logprob: -5.083708763122559
    10. 'arguments' → logprob: -5.208708763122559

Token 17: ' propres' (ID: 73747)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00938475038856268
    2. 'import' → logprob: -5.259384632110596
    3. ',' → logprob: -6.009384632110596
    4. ' .' → logprob: -8.134385108947754
    5. ' ' → logprob: -8.259385108947754
    6. '\' → logprob: -8.384385108947754
    7. '<|end|>' → logprob: -8.384385108947754
    8. '.import' → logprob: -8.884385108947754
    9. ' import' → logprob: -9.259385108947754
    10. '\n' → logprob: -9.759385108947754

Token 18: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.10182297229766846
    2. 'à' → logprob: -3.101822853088379
    3. ' au' → logprob: -3.226822853088379
    4. ' ' → logprob: -4.601822853088379
    5. 'au' → logprob: -6.351822853088379
    6. ' aux' → logprob: -8.851822853088379
    7. ' a' → logprob: -9.476822853088379
    8. '  ' → logprob: -9.726822853088379
    9. ' to' → logprob: -10.726822853088379
    10. 'import' → logprob: -11.226822853088379

Token 19: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.657492995262146
    2. 'Python' → logprob: -1.032492995262146
    3. ' l' → logprob: -2.5324931144714355
    4. ' Python' → logprob: -3.4074931144714355
    5. 'python' → logprob: -4.6574931144714355
    6. 'le' → logprob: -6.2824931144714355
    7. ' python' → logprob: -6.9074931144714355
    8. '```' → logprob: -8.157492637634277
    9. ' ' → logprob: -9.407492637634277
    10. '	l' → logprob: -10.157492637634277

Token 20: ''inter' (ID: 55731)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.9157581329345703
    2. ''environnement' → logprob: -1.2907581329345703
    3. ''inter' → logprob: -1.4157581329345703
    4. ''application' → logprob: -3.0407581329345703
    5. ''import' → logprob: -4.91575813293457
    6. ''à' → logprob: -5.41575813293457
    7. ''a' → logprob: -5.66575813293457
    8. ''environ' → logprob: -5.66575813293457
    9. ''utilisateur' → logprob: -5.91575813293457
    10. ''univers' → logprob: -6.04075813293457

Token 21: 'pré' (ID: 192449)
  Prédit: 'pré'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pré' → logprob: -0.9488213062286377
    2. 'preter' → logprob: -1.1988213062286377
    3. 'pr' → logprob: -1.5738213062286377
    4. 'p' → logprob: -2.6988213062286377
    5. 'pret' → logprob: -4.448821067810059
    6. 'pre' → logprob: -5.073821067810059
    7. 'prete' → logprob: -5.198821067810059
    8. 'face' → logprob: -5.323821067810059
    9. '```' → logprob: -6.573821067810059
    10. '>' → logprob: -6.698821067810059

Token 22: 'teur' (ID: 45262)
  Prédit: 'teur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'teur' → logprob: -0.013369031250476837
    2. 'te' → logprob: -5.138369083404541
    3. 'ter' → logprob: -5.263369083404541
    4. 'teurs' → logprob: -6.388369083404541
    5. 't' → logprob: -8.638368606567383
    6. '```' → logprob: -9.763368606567383
    7. '`' → logprob: -9.888368606567383
    8. '#' → logprob: -9.888368606567383
    9. 'taire' → logprob: -10.513368606567383
    10. '>' → logprob: -10.638368606567383

Token 23: ' Python' (ID: 26534)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.10791590809822083
    2. '' → logprob: -3.6079158782958984
    3. '
' → logprob: -3.9829158782958984
    4. 'import' → logprob: -4.107915878295898
    5. ',' → logprob: -4.232915878295898
    6. ' ' → logprob: -4.857915878295898
    7. '\n' → logprob: -4.982915878295898
    8. '\' → logprob: -5.482915878295898
    9. '

' → logprob: -5.982915878295898
    10. '#' → logprob: -6.857915878295898

Token 24: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6931293606758118
    2. '
' → logprob: -1.693129301071167
    3. '\n' → logprob: -1.943129301071167
    4. '' → logprob: -2.943129301071167
    5. 'import' → logprob: -3.443129301071167
    6. ',' → logprob: -3.443129301071167
    7. '<|end|>' → logprob: -4.068129539489746
    8. ' ' → logprob: -4.443129539489746
    9. '

' → logprob: -4.568129539489746
    10. '\' → logprob: -4.943129539489746

Token 25: 'sys' (ID: 17324)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3242316246032715
    2. '\n' → logprob: -1.8242316246032715
    3. '

' → logprob: -3.1992316246032715
    4. '' → logprob: -3.3242316246032715
    5. '.' → logprob: -4.1992316246032715
    6. 'import' → logprob: -4.8242316246032715
    7. '\' → logprob: -5.6992316246032715
    8. ' ' → logprob: -5.9492316246032715
    9. '#' → logprob: -6.0742316246032715
    10. '```' → logprob: -6.3242316246032715

Token 26: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -5.0020742492051795e-05
    2. ' .' → logprob: -10.750049591064453
    3. '."""' → logprob: -12.500049591064453
    4. '.readline' → logprob: -12.875049591064453
    5. '.import' → logprob: -13.250049591064453
    6. '.​' → logprob: -13.375049591064453
    7. '.argv' → logprob: -13.500049591064453
    8. '.")' → logprob: -13.625049591064453
    9. '.)' → logprob: -13.625049591064453
    10. '.exit' → logprob: -13.625049591064453

Token 27: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trace' → logprob: -0.2682427763938904
    2. 'attr' → logprob: -2.768242835998535
    3. 'default' → logprob: -3.393242835998535
    4. 'v' → logprob: -3.643242835998535
    5. 'ex' → logprob: -3.893242835998535
    6. '_trace' → logprob: -4.143242835998535
    7. 'set' → logprob: -4.268242835998535
    8. 'uptools' → logprob: -4.768242835998535
    9. 'sys' → logprob: -4.893242835998535
    10. 'argv' → logprob: -5.268242835998535

Token 28: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0003374886582605541
    2. 'urs' → logprob: -8.500337600708008
    3. 'ursive' → logprob: -9.250337600708008
    4. 'ursor' → logprob: -11.250337600708008
    5. 'ur' → logprob: -11.625337600708008
    6. 'limit' → logprob: -12.000337600708008
    7. 'urse' → logprob: -12.625337600708008
    8. 'ursively' → logprob: -13.375337600708008
    9. 'usion' → logprob: -14.000337600708008
    10. 'urf' → logprob: -14.500337600708008

Token 29: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.001176893594674766
    2. '_limit' → logprob: -6.751176834106445
    3. 'lim' → logprob: -12.501176834106445
    4. ' limit' → logprob: -12.876176834106445
    5. '-limit' → logprob: -16.126176834106445
    6. 'depth' → logprob: -16.376176834106445
    7. 'Limit' → logprob: -17.001176834106445
    8. 'l' → logprob: -17.126176834106445
    9. 'al' → logprob: -17.626176834106445
    10. '(limit' → logprob: -17.751176834106445

Token 30: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.935296834039036e-06
    2. ' (' → logprob: -13.25000286102295
    3. '()' → logprob: -14.25000286102295
    4. '(

' → logprob: -15.50000286102295
    5. '(
' → logprob: -15.87500286102295
    6. '('' → logprob: -16.250003814697266
    7. '(int' → logprob: -17.500003814697266
    8. '((' → logprob: -17.750003814697266
    9. '("("' → logprob: -17.750003814697266
    10. '("' → logprob: -18.375003814697266

Token 31: '10' (ID: 702)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0913231149315834
    2. '10' → logprob: -2.466323137283325
    3. ' ' → logprob: -6.466322898864746
    4. '500' → logprob: -7.466322898864746
    5. '300' → logprob: -8.591322898864746
    6. '1' → logprob: -10.716322898864746
    7. '200' → logprob: -11.341322898864746
    8. '400' → logprob: -11.466322898864746
    9. '999' → logprob: -11.841322898864746
    10. '250' → logprob: -12.216322898864746

Token 32: ' **' (ID: 6240)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.030230116099119186
    2. '00' → logprob: -3.5302300453186035
    3. '000' → logprob: -7.7802300453186035
    4. ')' → logprob: -10.780230522155762
    5. '6' → logprob: -11.405230522155762
    6. '4' → logprob: -11.655230522155762
    7. '3' → logprob: -11.655230522155762
    8. '2' → logprob: -11.655230522155762
    9. '5' → logprob: -12.905230522155762
    10. '**' → logprob: -15.655230522155762

Token 33: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.25302088260650635
    2. '6' → logprob: -1.5030208826065063
    3. '9' → logprob: -7.003020763397217
    4. '8' → logprob: -8.628021240234375
    5. '4' → logprob: -13.378021240234375
    6. '5' → logprob: -13.628021240234375
    7. '**' → logprob: -16.003021240234375
    8. '```' → logprob: -16.503021240234375
    9. '}' → logprob: -17.378021240234375
    10. ' ' → logprob: -17.378021240234375

Token 34: '7' (ID: 22)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.32143571972846985
    2. '7' → logprob: -1.3214356899261475
    3. '9' → logprob: -4.821435928344727
    4. '8' → logprob: -9.446435928344727
    5. '5' → logprob: -12.696435928344727
    6. '4' → logprob: -12.696435928344727
    7. '```' → logprob: -15.696435928344727
    8. '**' → logprob: -16.071435928344727
    9. '3' → logprob: -16.821435928344727
    10. ' ' → logprob: -16.946435928344727

Token 35: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.988221684878226e-06
    2. ' )' → logprob: -12.000006675720215
    3. '))' → logprob: -14.250006675720215
    4. ')
' → logprob: -16.12500762939453
    5. ')))' → logprob: -18.00000762939453
    6. ' ' → logprob: -18.37500762939453
    7. ')

' → logprob: -18.62500762939453
    8. '),' → logprob: -19.12500762939453
    9. '(' → logprob: -19.25000762939453
    10. '0' → logprob: -19.37500762939453

Token 36: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1778133511543274
    2. '

' → logprob: -2.5528132915496826
    3. '\n' → logprob: -3.3028132915496826
    4. '' → logprob: -3.5528132915496826
    5. '
' → logprob: -5.302813529968262
    6. ' 

' → logprob: -5.552813529968262
    7. ' 
' → logprob: -5.677813529968262
    8. ')' → logprob: -6.677813529968262
    9. '#' → logprob: -7.052813529968262
    10. '\' → logprob: -7.052813529968262

Token 37: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2714300751686096
    2. '

' → logprob: -1.5214300155639648
    3. '' → logprob: -5.521430015563965
    4. '\n' → logprob: -5.521430015563965
    5. '
' → logprob: -5.771430015563965
    6. '#' → logprob: -5.896430015563965
    7. ' 

' → logprob: -6.396430015563965
    8. '


' → logprob: -7.271430015563965
    9. ' 
' → logprob: -7.396430015563965
    10. ' ' → logprob: -7.521430015563965

Token 38: ' Cette' (ID: 27383)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15293309092521667
    2. '  ' → logprob: -2.902933120727539
    3. ' ' → logprob: -3.527933120727539
    4. ' Le' → logprob: -5.152933120727539
    5. ' augmenter' → logprob: -5.402933120727539
    6. ' Aug' → logprob: -5.465433120727539
    7. ' max' → logprob: -5.777933120727539
    8. ' Un' → logprob: -6.340433120727539
    9. ' continuer' → logprob: -6.402933120727539
    10. ''' → logprob: -6.652933120727539

Token 39: ' ligne' (ID: 19583)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.011175386607646942
    2. ' )' → logprob: -5.886175155639648
    3. ')' → logprob: -6.511175155639648
    4. '.' → logprob: -7.011175155639648
    5. '  ' → logprob: -7.011175155639648
    6. '<|end|>' → logprob: -7.261175155639648
    7. '(' → logprob: -7.511175155639648
    8. 'space' → logprob: -7.761175155639648
    9. '\' → logprob: -8.136175155639648
    10. ',' → logprob: -8.261175155639648

Token 40: ' augmente' (ID: 150199)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6834110021591187
    2. '<|end|>' → logprob: -1.0584110021591187
    3. '\' → logprob: -3.433411121368408
    4. ' est' → logprob: -4.308411121368408
    5. '  ' → logprob: -4.683411121368408
    6. ' a' → logprob: -4.808411121368408
    7. '<|end|>' → logprob: -5.058411121368408
    8. '\n' → logprob: -5.058411121368408
    9. '  
' → logprob: -5.183411121368408
    10. ' 
' → logprob: -5.308411121368408

Token 41: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6707756519317627
    2. '_' → logprob: -0.7957756519317627
    3. 'l' → logprob: -4.545775413513184
    4. ' l' → logprob: -4.670775413513184
    5. '  ' → logprob: -5.295775413513184
    6. '_l' → logprob: -5.545775413513184
    7. '_le' → logprob: -6.045775413513184
    8. ' ' → logprob: -7.045775413513184
    9. ' la' → logprob: -7.170775413513184
    10. 'le' → logprob: -7.170775413513184

Token 42: ' limite' (ID: 48939)
  Prédit: 'lim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lim' → logprob: -0.06246805936098099
    2. ' limite' → logprob: -2.8124680519104004
    3. '_lim' → logprob: -8.312468528747559
    4. ' profondeur' → logprob: -9.562468528747559
    5. ' lim' → logprob: -10.312468528747559
    6. ' limites' → logprob: -10.312468528747559
    7. ' ' → logprob: -10.562468528747559
    8. 'limit' → logprob: -11.312468528747559
    9. 'rec' → logprob: -11.562468528747559
    10. ' limitation' → logprob: -11.937468528747559

Token 43: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.15937016904354095
    2. ' de' → logprob: -2.909370183944702
    3. ' des' → logprob: -3.409370183944702
    4. '_des' → logprob: -3.534370183944702
    5. '_de' → logprob: -4.284369945526123
    6. ' ' → logprob: -5.784369945526123
    7. ')' → logprob: -6.034369945526123
    8. '\' → logprob: -6.284369945526123
    9. ',' → logprob: -6.534369945526123
    10. ' _' → logprob: -7.034369945526123

Token 44: ' réc' (ID: 36254)
  Prédit: ' réc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' réc' → logprob: -0.34401464462280273
    2. 'rec' → logprob: -1.9690146446228027
    3. 'r' → logprob: -2.3440146446228027
    4. '_rec' → logprob: -4.094014644622803
    5. ' recursion' → logprob: -4.219014644622803
    6. '_' → logprob: -5.219014644622803
    7. ' la' → logprob: -5.469014644622803
    8. ' profondeur' → logprob: -5.719014644622803
    9. '_r' → logprob: -5.969014644622803
    10. ' _' → logprob: -6.719014644622803

Token 45: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.10093799233436584
    2. 'urs' → logprob: -2.350938081741333
    3. 'ur' → logprob: -8.600937843322754
    4. 'urrence' → logprob: -8.725937843322754
    5. 'ursive' → logprob: -8.975937843322754
    6. '\' → logprob: -10.225937843322754
    7. '##' → logprob: -10.600937843322754
    8. 'u' → logprob: -10.600937843322754
    9. 'usion' → logprob: -10.975937843322754
    10. '**' → logprob: -10.975937843322754

Token 46: ' de' (ID: 334)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7544306516647339
    2. '\n' → logprob: -1.6294306516647339
    3. '<|end|>' → logprob: -1.6294306516647339
    4. '' → logprob: -3.7544307708740234
    5. ')' → logprob: -3.7544307708740234
    6. '\' → logprob: -4.004430770874023
    7. 'newline' → logprob: -4.004430770874023
    8. '
' → logprob: -4.754430770874023
    9. '#' → logprob: -5.004430770874023
    10. '<|end|>' → logprob: -5.129430770874023

Token 47: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.6956418752670288
    2. ' Python' → logprob: -0.8206418752670288
    3. '100' → logprob: -4.195641994476318
    4. ' ' → logprob: -4.320641994476318
    5. 'Python' → logprob: -4.445641994476318
    6. 'l' → logprob: -4.820641994476318
    7. ' python' → logprob: -5.570641994476318
    8. 'python' → logprob: -5.820641994476318
    9. '10' → logprob: -5.945641994476318
    10. ' la' → logprob: -7.320641994476318

Token 48: ''inter' (ID: 55731)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.644370436668396
    2. ''inter' → logprob: -1.269370436668396
    3. ''' → logprob: -1.894370436668396
    4. 'e' → logprob: -3.6443705558776855
    5. 'es' → logprob: -5.3943705558776855
    6. ''ex' → logprob: -5.8943705558776855
    7. ''environnement' → logprob: -6.5193705558776855
    8. '')' → logprob: -6.7693705558776855
    9. ''a' → logprob: -7.0193705558776855
    10. ''utilisateur' → logprob: -7.1443705558776855

Token 49: 'pré' (ID: 192449)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.0718134641647339
    2. 'pr' → logprob: -1.0718134641647339
    3. 'pré' → logprob: -1.1968134641647339
    4. 'pre' → logprob: -5.821813583374023
    5. 'preter' → logprob: -6.321813583374023
    6. 'prt' → logprob: -6.571813583374023
    7. '#' → logprob: -7.071813583374023
    8. 'prete' → logprob: -7.196813583374023
    9. 'près' → logprob: -7.821813583374023
    10. '```' → logprob: -8.134313583374023

Token 50: 'teur' (ID: 45262)
  Prédit: 'teur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'teur' → logprob: -0.013780169188976288
    2. '#' → logprob: -5.888780117034912
    3. 't' → logprob: -5.888780117034912
    4. 'te' → logprob: -6.013780117034912
    5. 'teurs' → logprob: -6.138780117034912
    6. 'ter' → logprob: -7.013780117034912
    7. '-' → logprob: -7.763780117034912
    8. '```' → logprob: -8.76378059387207
    9. '1' → logprob: -8.88878059387207
    10. 'taire' → logprob: -9.13878059387207

Token 51: ' Python' (ID: 26534)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1627342700958252
    2. '\n' → logprob: -1.1627342700958252
    3. '' → logprob: -2.162734270095825
    4. '\' → logprob: -2.537734270095825
    5. ' ' → logprob: -3.162734270095825
    6. ')' → logprob: -3.787734270095825
    7. '.' → logprob: -3.912734270095825
    8. '#' → logprob: -3.912734270095825
    9. '
' → logprob: -4.037734031677246
    10. '(' → logprob: -4.412734031677246

Token 52: '.' (ID: 13)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13367027044296265
    2. '

' → logprob: -2.7586703300476074
    3. '' → logprob: -4.008670330047607
    4. '\n' → logprob: -4.383670330047607
    5. '#' → logprob: -4.758670330047607
    6. ' ' → logprob: -5.008670330047607
    7. '
' → logprob: -5.258670330047607
    8. '<|end|>' → logprob: -5.758670330047607
    9. 'def' → logprob: -6.883670330047607
    10. '\' → logprob: -7.008670330047607

Token 53: ' 
' (ID: 793)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06575830280780792
    2. '

' → logprob: -2.940758228302002
    3. '' → logprob: -5.565758228302002
    4. '
' → logprob: -5.940758228302002
    5. '\n' → logprob: -6.440758228302002
    6. ' 
' → logprob: -7.565758228302002
    7. '#' → logprob: -7.940758228302002
    8. '<|end|>' → logprob: -7.940758228302002
    9. ' ' → logprob: -8.06575870513916
    10. '


' → logprob: -8.56575870513916

Token 54: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2574922740459442
    2. '

' → logprob: -2.1324923038482666
    3. '\n' → logprob: -3.5074923038482666
    4. '#' → logprob: -3.8824923038482666
    5. 'def' → logprob: -3.8824923038482666
    6. '' → logprob: -4.6324920654296875
    7. '
' → logprob: -4.7574920654296875
    8. ' ' → logprob: -5.0074920654296875
    9. ' 

' → logprob: -6.1324920654296875
    10. ' 
' → logprob: -6.1324920654296875

Token 55: ' Par' (ID: 3371)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6985582709312439
    2. 'def' → logprob: -0.8235582709312439
    3. 'import' → logprob: -3.8235583305358887
    4. 'sys' → logprob: -4.323558330535889
    5. ' ' → logprob: -5.073558330535889
    6. ' #' → logprob: -5.198558330535889
    7. 'class' → logprob: -6.073558330535889
    8. ' def' → logprob: -6.198558330535889
    9. '\n' → logprob: -6.698558330535889
    10. ' sys' → logprob: -6.823558330535889

Token 56: ' défaut' (ID: 79375)
  Prédit: 'fois'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fois' → logprob: -1.2424051761627197
    2. 'ce' → logprob: -1.6174051761627197
    3. ' conséquent' → logprob: -2.3674051761627197
    4. ' défaut' → logprob: -2.4924051761627197
    5. 'contre' → logprob: -2.7424051761627197
    6. 'ailleurs' → logprob: -2.9924051761627197
    7. 'ex' → logprob: -3.3674051761627197
    8. 'dé' → logprob: -3.7424051761627197
    9. ' exemple' → logprob: -3.8674051761627197
    10. ' ' → logprob: -3.9924051761627197

Token 57: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05770017206668854
    2. ' ,' → logprob: -3.1827001571655273
    3. 'sys' → logprob: -5.682700157165527
    4. ' elle' → logprob: -5.807700157165527
    5. ' à' → logprob: -5.932700157165527
    6. ' sys' → logprob: -6.557700157165527
    7. '100' → logprob: -7.307700157165527
    8. ' ' → logprob: -7.432700157165527
    9. ' (' → logprob: -7.557700157165527
    10. '.' → logprob: -7.682700157165527

Token 58: ' Python' (ID: 26534)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -1.4790843725204468
    2. ' la' → logprob: -1.6040843725204468
    3. ' Python' → logprob: -1.6040843725204468
    4. 'sys' → logprob: -1.7290843725204468
    5. 'la' → logprob: -3.1040844917297363
    6. ' c' → logprob: -3.1040844917297363
    7. 'Python' → logprob: -3.4790844917297363
    8. 'c' → logprob: -3.7290844917297363
    9. ' ' → logprob: -4.104084491729736
    10. ' elle' → logprob: -4.354084491729736

Token 59: ' arr' (ID: 1724)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.8891050815582275
    2. ' n' → logprob: -1.3891050815582275
    3. ' limite' → logprob: -2.1391050815582275
    4. ' ' → logprob: -2.6391050815582275
    5. ''s' → logprob: -2.8891050815582275
    6. 'a' → logprob: -3.1391050815582275
    7. 'limit' → logprob: -4.639104843139648
    8. ' impose' → logprob: -5.014104843139648
    9. ' limit' → logprob: -5.139104843139648
    10. ' has' → logprob: -5.264104843139648

Token 60: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.011639161966741085
    2. 'êt' → logprob: -4.63663911819458
    3. 'ê' → logprob: -6.76163911819458
    4. 'ive' → logprob: -8.011639595031738
    5. 'êter' → logprob: -8.386639595031738
    6. '^' → logprob: -9.511639595031738
    7. '\' → logprob: -10.511639595031738
    8. 'êtes' → logprob: -10.886639595031738
    9. 'êts' → logprob: -11.261639595031738
    10. 'ète' → logprob: -11.511639595031738

Token 61: ' un' (ID: 537)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.36452019214630127
    2. ' l' → logprob: -1.3645201921463013
    3. 'la' → logprob: -3.9895200729370117
    4. ' the' → logprob: -4.614520072937012
    5. 'l' → logprob: -4.989520072937012
    6. ' les' → logprob: -5.364520072937012
    7. ' ' → logprob: -6.114520072937012
    8. ' à' → logprob: -6.489520072937012
    9. ' ' → logprob: -6.864520072937012
    10. ' recursion' → logprob: -7.114520072937012

Token 62: ' programme' (ID: 18190)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.03310254588723183
    2. 'a' → logprob: -4.158102512359619
    3. ' programme' → logprob: -4.408102512359619
    4. ' appel' → logprob: -6.783102512359619
    5. ' e' → logprob: -7.658102512359619
    6. 'programme' → logprob: -7.658102512359619
    7. ' code' → logprob: -7.783102512359619
    8. 'appel' → logprob: -8.158102989196777
    9. ' processus' → logprob: -8.283102989196777
    10. ' a' → logprob: -8.408102989196777

Token 63: ' lorsqu' (ID: 57416)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6725296974182129
    2. ' lorsqu' → logprob: -1.672529697418213
    3. ' au' → logprob: -1.797529697418213
    4. ' quand' → logprob: -3.547529697418213
    5. ' après' → logprob: -3.797529697418213
    6. ' lorsque' → logprob: -3.797529697418213
    7. ' when' → logprob: -4.297529697418213
    8. ' à' → logprob: -4.422529697418213
    9. ' lors' → logprob: -4.672529697418213
    10. ' pour' → logprob: -5.172529697418213

Token 64: ''il' (ID: 14683)
  Prédit: ''il'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''il' → logprob: -0.8742401003837585
    2. ' il' → logprob: -1.2492401599884033
    3. ''une' → logprob: -2.7492401599884033
    4. ' la' → logprob: -2.8742401599884033
    5. 'la' → logprob: -3.2492401599884033
    6. 'il' → logprob: -3.2492401599884033
    7. ' une' → logprob: -3.8742401599884033
    8. 'une' → logprob: -4.124239921569824
    9. 'le' → logprob: -4.249239921569824
    10. 'e' → logprob: -4.749239921569824

Token 65: ' dépasse' (ID: 165701)
  Prédit: ' dépasse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dépasse' → logprob: -0.6680129766464233
    2. ' atteint' → logprob: -0.7930129766464233
    3. ' appelle' → logprob: -5.168013095855713
    4. ' détect' → logprob: -5.293013095855713
    5. ' a' → logprob: -5.543013095855713
    6. 're' → logprob: -6.168013095855713
    7. 'a' → logprob: -6.543013095855713
    8. ' n' → logprob: -6.543013095855713
    9. 'stack' → logprob: -6.793013095855713
    10. ' y' → logprob: -6.793013095855713

Token 66: ' environ' (ID: 18585)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5329551696777344
    2. '100' → logprob: -1.1579551696777344
    3. ' ' → logprob: -2.5329551696777344
    4. ' le' → logprob: -4.907955169677734
    5. 'la' → logprob: -5.032955169677734
    6. ' une' → logprob: -5.657955169677734
    7. 'le' → logprob: -6.907955169677734
    8. '102' → logprob: -8.532955169677734
    9. '300' → logprob: -8.782955169677734
    10. ' sa' → logprob: -8.907955169677734

Token 67: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.14321598410606384
    2. ' ' → logprob: -2.0182158946990967
    3. '1' → logprob: -8.018216133117676
    4. '10' → logprob: -9.518216133117676
    5. ' ' → logprob: -9.518216133117676
    6. '300' → logprob: -11.518216133117676
    7. ' recursion' → logprob: -11.768216133117676
    8. ' mille' → logprob: -12.268216133117676
    9. 'rec' → logprob: -12.393216133117676
    10. ' une' → logprob: -12.518216133117676

Token 68: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.03084919974207878
    2. '10' → logprob: -3.9058492183685303
    3. ' ' → logprob: -4.780848979949951
    4. '1' → logprob: -6.405848979949951
    5. '  ' → logprob: -9.78084945678711
    6. '300' → logprob: -10.03084945678711
    7. '9' → logprob: -10.28084945678711
    8. '[' → logprob: -11.15584945678711
    9. '{' → logprob: -11.65584945678711
    10. '3' → logprob: -11.65584945678711

Token 69: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3306015716807451e-05
    2. '00' → logprob: -11.25001335144043
    3. '000' → logprob: -15.50001335144043
    4. ' ' → logprob: -17.12501335144043
    5. '```' → logprob: -18.56251335144043
    6. '٠' → logprob: -19.31251335144043
    7. '۰' → logprob: -19.81251335144043
    8. '``' → logprob: -19.93751335144043
    9. 'o' → logprob: -20.31251335144043
    10. 's' → logprob: -20.68751335144043

Token 70: ' appels' (ID: 133870)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 71: ' réc' (ID: 36254)
  Prédit: ' réc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' réc' → logprob: -0.5863414406776428
    2. ' de' → logprob: -0.9613414406776428
    3. '  ' → logprob: -4.336341381072998
    4. 's' → logprob: -5.336341381072998
    5. 'rec' → logprob: -5.461341381072998
    6. ' d' → logprob: -5.586341381072998
    7. '.' → logprob: -5.711341381072998
    8. ' emp' → logprob: -5.711341381072998
    9. ' ' → logprob: -5.836341381072998
    10. 'de' → logprob: -6.211341381072998

Token 72: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.46780940890312195
    2. 'ursion' → logprob: -1.2178094387054443
    3. 'ur' → logprob: -3.3428094387054443
    4. 'ursive' → logprob: -3.4678094387054443
    5. 'urse' → logprob: -6.217809200286865
    6. 'c' → logprob: -6.342809200286865
    7. '_' → logprob: -6.592809200286865
    8. 'u' → logprob: -6.717809200286865
    9. '   ' → logprob: -7.467809200286865
    10. 'urrent' → logprob: -7.717809200286865

Token 73: 'ifs' (ID: 14119)
  Prédit: 'ifs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifs' → logprob: -0.33890408277511597
    2. 'ions' → logprob: -1.7139041423797607
    3. 'ion' → logprob: -2.9639041423797607
    4. 'if' → logprob: -3.4639041423797607
    5. 's' → logprob: -4.713903903961182
    6. 'ents' → logprob: -5.213903903961182
    7. 'ent' → logprob: -5.463903903961182
    8. 'is' → logprob: -6.213903903961182
    9. 'i' → logprob: -6.463903903961182
    10. 'ive' → logprob: -7.588903903961182

Token 74: ' pour' (ID: 1930)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1417125165462494
    2. '

' → logprob: -2.5167124271392822
    3. '\n' → logprob: -3.6417124271392822
    4. '
' → logprob: -5.391712665557861
    5. '' → logprob: -5.766712665557861
    6. ' 

' → logprob: -6.141712665557861
    7. '<|end|>' → logprob: -6.141712665557861
    8. '\' → logprob: -6.266712665557861
    9. '```' → logprob: -6.391712665557861
    10. ' 
' → logprob: -6.391712665557861

Token 75: ' éviter' (ID: 64013)
  Prédit: 'év'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'év' → logprob: -0.6150491833686829
    2. ' éviter' → logprob: -0.8650491833686829
    3. 'pré' → logprob: -3.865049123764038
    4. ' prévenir' → logprob: -4.615049362182617
    5. 'ev' → logprob: -6.115049362182617
    6. ' empêcher' → logprob: -6.740049362182617
    7. '’éviter' → logprob: -7.240049362182617
    8. 'emp' → logprob: -7.490049362182617
    9. 'pro' → logprob: -8.115049362182617
    10. 'prevent' → logprob: -8.240049362182617

Token 76: ' les' (ID: 1341)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.041170231997966766
    2. ' un' → logprob: -3.666170120239258
    3. 'une' → logprob: -5.416170120239258
    4. ' la' → logprob: -5.541170120239258
    5. ' l' → logprob: -6.041170120239258
    6. ' stack' → logprob: -6.666170120239258
    7. ' ' → logprob: -7.916170120239258
    8. 's' → logprob: -7.916170120239258
    9. ' les' → logprob: -8.041170120239258
    10. '   ' → logprob: -8.166170120239258

Token 77: ' déb' (ID: 37874)
  Prédit: ' plant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plant' → logprob: -1.1658053398132324
    2. ' crash' → logprob: -1.2908053398132324
    3. ' erreurs' → logprob: -1.7908053398132324
    4. ' dépasse' → logprob: -2.2908053398132324
    5. ' stack' → logprob: -2.9158053398132324
    6. ' crashes' → logprob: -3.0408053398132324
    7. ' déb' → logprob: -4.290805339813232
    8. 'd' → logprob: -4.540805339813232
    9. ' bugs' → logprob: -4.790805339813232
    10. 'plant' → logprob: -6.165805339813232

Token 78: 'ord' (ID: 604)
  Prédit: 'ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.02400703728199005
    2. 'or' → logprob: -4.5240068435668945
    3. 'ords' → logprob: -5.0240068435668945
    4. 'bord' → logprob: -5.8990068435668945
    5. 'ors' → logprob: -6.8990068435668945
    6. 'orde' → logprob: -6.8990068435668945
    7. 'o' → logprob: -7.1490068435668945
    8. 'orb' → logprob: -9.774006843566895
    9. 'orda' → logprob: -10.024006843566895
    10. 'ordre' → logprob: -10.399006843566895

Token 79: 'ements' (ID: 4507)
  Prédit: 'ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.034030731767416
    2. ' ord' → logprob: -4.784030914306641
    3. 't' → logprob: -5.659030914306641
    4. 'ement' → logprob: -6.034030914306641
    5. 'it' → logprob: -6.159030914306641
    6. 'or' → logprob: -6.159030914306641
    7. 'Or' → logprob: -6.534030914306641
    8. 'ements' → logprob: -6.534030914306641
    9. 'ords' → logprob: -6.534030914306641
    10. '\' → logprob: -6.784030914306641

Token 80: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 81: ' pile' (ID: 39732)
  Prédit: 'pile'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pile' → logprob: -0.18224367499351501
    2. ' pile' → logprob: -1.9322437047958374
    3. 'p' → logprob: -4.807243824005127
    4. 'la' → logprob: -5.432243824005127
    5. 'stack' → logprob: -6.182243824005127
    6. ' la' → logprob: -6.557243824005127
    7. 'mé' → logprob: -6.932243824005127
    8. ' stack' → logprob: -7.307243824005127
    9. 'rec' → logprob: -7.432243824005127
    10. ' réc' → logprob: -7.432243824005127

Token 82: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1601003110408783
    2. '\n' → logprob: -2.785100221633911
    3. '' → logprob: -3.910100221633911
    4. '<|end|>' → logprob: -3.910100221633911
    5. ')' → logprob: -4.78510046005249
    6. '#' → logprob: -5.28510046005249
    7. '

' → logprob: -5.28510046005249
    8. '\' → logprob: -5.41010046005249
    9. '.' → logprob: -5.53510046005249
    10. '
' → logprob: -5.53510046005249

Token 83: 'stack' (ID: 15145)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7381382584571838
    2. ').' → logprob: -1.113138198852539
    3. ' )' → logprob: -2.113138198852539
    4. ' ).' → logprob: -2.863138198852539
    5. '),' → logprob: -4.863138198852539
    6. ' ),' → logprob: -5.988138198852539
    7. ',' → logprob: -6.863138198852539
    8. ' ' → logprob: -6.988138198852539
    9. ' ,' → logprob: -7.988138198852539
    10. ' ' → logprob: -8.238138198852539

Token 84: ' overflow' (ID: 28614)
  Prédit: ' overflow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' overflow' → logprob: -0.3717419505119324
    2. 'overflow' → logprob: -1.3717420101165771
    3. ' ' → logprob: -3.871742010116577
    4. ')' → logprob: -4.496741771697998
    5. '_' → logprob: -4.621741771697998
    6. ' )' → logprob: -6.246741771697998
    7. 'Overflow' → logprob: -6.496741771697998
    8. ').' → logprob: -6.496741771697998
    9. ' memory' → logprob: -6.621741771697998
    10. '_over' → logprob: -6.871741771697998

Token 85: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00047952806926332414
    2. ')
' → logprob: -8.000479698181152
    3. ' )' → logprob: -9.625479698181152
    4. '
' → logprob: -10.500479698181152
    5. ')

' → logprob: -11.250479698181152
    6. ').' → logprob: -11.375479698181152
    7. ')
' → logprob: -12.125479698181152
    8. '' → logprob: -12.500479698181152
    9. '#' → logprob: -12.625479698181152
    10. ')#' → logprob: -13.500479698181152

Token 86: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.31383034586906433
    2. '

' → logprob: -1.4388303756713867
    3. '' → logprob: -4.188830375671387
    4. '#' → logprob: -5.188830375671387
    5. '
' → logprob: -5.438830375671387
    6. '\n' → logprob: -6.438830375671387
    7. ' 

' → logprob: -6.813830375671387
    8. '


' → logprob: -6.938830375671387
    9. ' 
' → logprob: -7.063830375671387
    10. ' ' → logprob: -7.563830375671387

Token 87: ' Ici' (ID: 145754)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.46917232871055603
    2. '#' → logprob: -1.3441723585128784
    3. '

' → logprob: -2.969172239303589
    4. '
' → logprob: -3.844172239303589
    5. 'class' → logprob: -4.219172477722168
    6. ' ' → logprob: -4.719172477722168
    7. '\' → logprob: -5.344172477722168
    8. '\n' → logprob: -5.844172477722168
    9. 'import' → logprob: -5.969172477722168
    10. ' 

' → logprob: -6.094172477722168

Token 88: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17927250266075134
    2. ',' → logprob: -2.554272413253784
    3. '#' → logprob: -2.804272413253784
    4. '

' → logprob: -5.554272651672363
    5. '
' → logprob: -5.929272651672363
    6. ' sys' → logprob: -6.054272651672363
    7. ' ,' → logprob: -6.179272651672363
    8. 'sys' → logprob: -6.304272651672363
    9. ' ' → logprob: -6.554272651672363
    10. '  ' → logprob: -6.679272651672363

Token 89: ' on' (ID: 402)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2582111954689026
    2. ' on' → logprob: -1.7582111358642578
    3. ' sys' → logprob: -4.508211135864258
    4. '#' → logprob: -4.758211135864258
    5. ' ' → logprob: -5.258211135864258
    6. ' cette' → logprob: -5.508211135864258
    7. ' ceci' → logprob: -5.883211135864258
    8. 'on' → logprob: -6.008211135864258
    9. 'c' → logprob: -6.008211135864258
    10. 'cela' → logprob: -6.383211135864258

Token 90: ' él' (ID: 13045)
  Prédit: ' augmente'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' augmente' → logprob: -0.3607577085494995
    2. 'aug' → logprob: -2.235757827758789
    3. 'a' → logprob: -2.985757827758789
    4. 've' → logprob: -3.985757827758789
    5. ' ' → logprob: -3.985757827758789
    6. ' a' → logprob: -4.360757827758789
    7. ' veut' → logprob: -4.860757827758789
    8. 'l' → logprob: -5.235757827758789
    9. ' permet' → logprob: -5.235757827758789
    10. ' souhaite' → logprob: -5.360757827758789

Token 91: 'ève' (ID: 41151)
  Prédit: 'ève'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ève' → logprob: -0.025206226855516434
    2. 'eve' → logprob: -4.150206089019775
    3. 'e' → logprob: -5.775206089019775
    4. 've' → logprob: -6.150206089019775
    5. 'è' → logprob: -6.900206089019775
    6. '\' → logprob: -7.525206089019775
    7. '`' → logprob: -7.775206089019775
    8. 'v' → logprob: -8.025206565856934
    9. 'vede' → logprob: -9.025206565856934
    10. 'ev' → logprob: -9.150206565856934

Token 92: ' cette' (ID: 7696)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0003986144147347659
    2. '  ' → logprob: -8.250398635864258
    3. ' à' → logprob: -9.750398635864258
    4. '  ' → logprob: -11.000398635864258
    5. ' la' → logprob: -11.500398635864258
    6. ' l' → logprob: -11.750398635864258
    7. 'l' → logprob: -11.875398635864258
    8. '.' → logprob: -12.250398635864258
    9. ' ' → logprob: -12.625398635864258
    10. ' ```' → logprob: -12.750398635864258

Token 93: ' limite' (ID: 48939)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02168143540620804
    2. ' limite' → logprob: -4.521681308746338
    3. '  ' → logprob: -5.646681308746338
    4. ' ' → logprob: -5.771681308746338
    5. '  ' → logprob: -7.021681308746338
    6. '_' → logprob: -7.271681308746338
    7. ' _' → logprob: -7.271681308746338
    8. ' l' → logprob: -8.271681785583496
    9. ' limites' → logprob: -8.396681785583496
    10. 'l' → logprob: -8.521681785583496

Token 94: ' à' (ID: 1221)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6217190027236938
    2. ' ' → logprob: -0.8717190027236938
    3. ',' → logprob: -4.371718883514404
    4. '<|end|>' → logprob: -4.496718883514404
    5. ' afin' → logprob: -5.621718883514404
    6. ' à' → logprob: -5.621718883514404
    7. '  ' → logprob: -5.996718883514404
    8. ')' → logprob: -6.246718883514404
    9. '\' → logprob: -6.621718883514404
    10. ' .' → logprob: -6.621718883514404

Token 95: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.018419034779071808
    2. '10' → logprob: -4.64341926574707
    3. '100' → logprob: -4.76841926574707
    4. '1' → logprob: -9.51841926574707
    5. ' un' → logprob: -11.01841926574707
    6. ' une' → logprob: -11.26841926574707
    7. '  ' → logprob: -12.39341926574707
    8. ' ' → logprob: -12.51841926574707
    9. '7' → logprob: -12.64341926574707
    10. ' )' → logprob: -12.76841926574707

Token 96: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.2842780649662018
    2. '100' → logprob: -1.4092780351638794
    3. ' ' → logprob: -5.78427791595459
    4. '1' → logprob: -10.03427791595459
    5. '  ' → logprob: -13.90927791595459
    6. '```' → logprob: -14.03427791595459
    7. 'int' → logprob: -14.78427791595459
    8. ' ten' → logprob: -15.40927791595459
    9. '(' → logprob: -15.78427791595459
    10. '`' → logprob: -15.90927791595459

Token 97: ' millions' (ID: 15568)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.48651406168937683
    2. ' **' → logprob: -1.1115140914916992
    3. '7' → logprob: -3.361514091491699
    4. '000' → logprob: -3.861514091491699
    5. '*' → logprob: -8.6115140914917
    6. '0' → logprob: -9.6115140914917
    7. '6' → logprob: -9.9865140914917
    8. '07' → logprob: -10.2365140914917
    9. ' ' → logprob: -10.4865140914917
    10. '```' → logprob: -10.6115140914917

Token 98: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.036739595234394073
    2. '

' → logprob: -3.6617395877838135
    3. '' → logprob: -5.411739826202393
    4. '<|end|>' → logprob: -6.036739826202393
    5. '
' → logprob: -7.036739826202393
    6. '\n' → logprob: -7.411739826202393
    7. ' 
' → logprob: -7.411739826202393
    8. '<|end|>' → logprob: -8.536739349365234
    9. '```' → logprob: -8.661739349365234
    10. 'newline' → logprob: -8.786739349365234

Token 99: '10' (ID: 702)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03318072855472565
    2. ' )' → logprob: -3.7831807136535645
    3. ').' → logprob: -4.6581807136535645
    4. ' ).' → logprob: -8.408181190490723
    5. '),' → logprob: -9.658181190490723
    6. '0' → logprob: -11.158181190490723
    7. '.' → logprob: -11.283181190490723
    8. ' ' → logprob: -11.283181190490723
    9. ' pour' → logprob: -11.283181190490723
    10. ')
' → logprob: -11.658181190490723

Token 100: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.4994089901447296
    2. ' **' → logprob: -1.2494089603424072
    3. '7' → logprob: -2.2494089603424072
    4. ' )' → logprob: -8.124408721923828
    5. ')' → logprob: -8.249408721923828
    6. ' **)' → logprob: -9.124408721923828
    7. '6' → logprob: -9.749408721923828
    8. '*' → logprob: -9.999408721923828
    9. ' ' → logprob: -10.124408721923828
    10. ' *' → logprob: -10.124408721923828

Token 101: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -2.3795937522663735e-05
    2. ' ' → logprob: -10.75002384185791
    3. ')' → logprob: -14.12502384185791
    4. '```' → logprob: -14.12502384185791
    5. '6' → logprob: -14.75002384185791
    6. '07' → logprob: -15.25002384185791
    7. '^' → logprob: -17.000022888183594
    8. '+' → logprob: -17.375022888183594
    9. ' )' → logprob: -17.500022888183594
    10. '  
' → logprob: -18.250022888183594

Token 102: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005624461336992681
    2. ' )' → logprob: -7.50056266784668
    3. ')
' → logprob: -12.50056266784668
    4. ').' → logprob: -13.25056266784668
    5. '))' → logprob: -13.37556266784668
    6. '0' → logprob: -14.37556266784668
    7. ')
' → logprob: -14.75056266784668
    8. ')

' → logprob: -15.37556266784668
    9. ')#' → logprob: -15.62556266784668
    10. '**' → logprob: -15.75056266784668

Token 103: ' ce' (ID: 2357)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7265154123306274
    2. ' 
' → logprob: -0.9765154123306274
    3. ' ' → logprob: -2.476515293121338
    4. '  
' → logprob: -3.976515293121338
    5. '' → logprob: -4.601515293121338
    6. '
' → logprob: -5.226515293121338
    7. ' 

' → logprob: -5.601515293121338
    8. ' )' → logprob: -5.726515293121338
    9. '\' → logprob: -6.226515293121338
    10. ')
' → logprob: -6.476515293121338

Token 104: ' qui' (ID: 2780)
  Prédit: ' qui'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' qui' → logprob: -0.1326008141040802
    2. ' ' → logprob: -2.632600784301758
    3. ''' → logprob: -4.382600784301758
    4. ' ' → logprob: -4.507600784301758
    5. ' '' → logprob: -4.757600784301758
    6. 'qui' → logprob: -5.257600784301758
    7. 'ci' → logprob: -6.132600784301758
    8. ' 
' → logprob: -6.507600784301758
    9. ' )' → logprob: -6.757600784301758
    10. 'es' → logprob: -7.257600784301758

Token 105: ' permet' (ID: 11798)
  Prédit: ' permet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permet' → logprob: -0.13523291051387787
    2. ' peut' → logprob: -2.885232925415039
    3. ' est' → logprob: -3.885232925415039
    4. ' permettra' → logprob: -4.260232925415039
    5. ' ' → logprob: -4.635232925415039
    6. ' signifie' → logprob: -5.135232925415039
    7. ' n' → logprob: -5.635232925415039
    8. ' ' → logprob: -5.885232925415039
    9. 'n' → logprob: -6.385232925415039
    10. ' facilite' → logprob: -6.385232925415039

Token 106: ' des' (ID: 731)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.4301711320877075
    2. 'd' → logprob: -1.9301711320877075
    3. ' de' → logprob: -2.430171012878418
    4. ' une' → logprob: -3.180171012878418
    5. 'de' → logprob: -3.305171012878418
    6. ' à' → logprob: -4.680171012878418
    7. '	d' → logprob: -5.055171012878418
    8. ' aux' → logprob: -6.180171012878418
    9. '	' → logprob: -6.305171012878418
    10. 'à' → logprob: -6.430171012878418

Token 107: ' appels' (ID: 133870)
  Prédit: ' appels'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' appels' → logprob: -0.11942365020513535
    2. ' ' → logprob: -2.2444236278533936
    3. ' réc' → logprob: -5.869423866271973
    4. 'appel' → logprob: -7.119423866271973
    5. ' appel' → logprob: -7.369423866271973
    6. ' espaces' → logprob: -7.494423866271973
    7. ' app' → logprob: -8.494423866271973
    8. 'app' → logprob: -8.869423866271973
    9. ' rec' → logprob: -8.869423866271973
    10. 'rec' → logprob: -8.994423866271973

Token 108: ' réc' (ID: 36254)
  Prédit: ' réc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' réc' → logprob: -0.35972630977630615
    2. ' rec' → logprob: -1.8597263097763062
    3. 'rec' → logprob: -2.7347264289855957
    4. ' recursion' → logprob: -3.7347264289855957
    5. ' recursive' → logprob: -4.109726428985596
    6. 'r' → logprob: -4.859726428985596
    7. 's' → logprob: -4.859726428985596
    8. ' recurse' → logprob: -4.984726428985596
    9. ' de' → logprob: -5.609726428985596
    10. '(rec' → logprob: -5.984726428985596

Token 109: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.001061867456883192
    2. 'ursion' → logprob: -7.376061916351318
    3. 'ursive' → logprob: -8.00106143951416
    4. 'ur' → logprob: -9.37606143951416
    5. 'урс' → logprob: -11.87606143951416
    6. 'u' → logprob: -13.50106143951416
    7. 'ursor' → logprob: -13.62606143951416
    8. 'ursively' → logprob: -14.00106143951416
    9. 'ursus' → logprob: -14.25106143951416
    10. 'usr' → logprob: -14.50106143951416

Token 110: 'ifs' (ID: 14119)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3675838112831116
    2. 'i' → logprob: -1.4925837516784668
    3. 'ions' → logprob: -3.367583751678467
    4. 'ifs' → logprob: -3.492583751678467
    5. 'a' → logprob: -5.492583751678467
    6. 'e' → logprob: -5.867583751678467
    7. 'ion' → logprob: -6.367583751678467
    8. '##' → logprob: -6.367583751678467
    9. 'is' → logprob: -6.492583751678467
    10. 'urs' → logprob: -7.117583751678467

Token 111: ' très' (ID: 9412)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5918480157852173
    2. ' très' → logprob: -0.9668480157852173
    3. ' beaucoup' → logprob: -3.3418478965759277
    4. ' plus' → logprob: -3.8418478965759277
    5. ' bien' → logprob: -5.966847896575928
    6. 's' → logprob: -5.966847896575928
    7. ' extrêmement' → logprob: -6.841847896575928
    8. ' profond' → logprob: -7.841847896575928
    9. ' davantage' → logprob: -8.216848373413086
    10. ' supplémentaires' → logprob: -8.216848373413086

Token 112: ' prof' (ID: 1915)
  Prédit: ' prof'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prof' → logprob: -0.34530335664749146
    2. 'prof' → logprob: -1.5953032970428467
    3. ' profond' → logprob: -2.4703032970428467
    4. ' profondeur' → logprob: -6.595303535461426
    5. ' profonde' → logprob: -7.470303535461426
    6. 'pro' → logprob: -7.595303535461426
    7. ' profondément' → logprob: -7.845303535461426
    8. ' ' → logprob: -7.845303535461426
    9. ' nombreux' → logprob: -7.970303535461426
    10. ' approfond' → logprob: -8.845303535461426

Token 113: 'onds' (ID: 20754)
  Prédit: 'onds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onds' → logprob: -0.33192136883735657
    2. 'onde' → logprob: -1.8319213390350342
    3. 'ondes' → logprob: -2.581921339035034
    4. 'on' → logprob: -3.831921339035034
    5. 'ond' → logprob: -3.956921339035034
    6. 'o' → logprob: -5.581921577453613
    7. 'ons' → logprob: -8.206921577453613
    8. 'onts' → logprob: -8.456921577453613
    9. '
' → logprob: -8.831921577453613
    10. 'onders' → logprob: -9.331921577453613

Token 114: '.' (ID: 13)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15522271394729614
    2. '' → logprob: -3.0302226543426514
    3. ' 
' → logprob: -3.4052226543426514
    4. '.' → logprob: -4.2802228927612305
    5. '\n' → logprob: -4.2802228927612305
    6. '<|end|>' → logprob: -5.0302228927612305
    7. '  
' → logprob: -5.2802228927612305
    8. '#' → logprob: -5.4052228927612305
    9. '

' → logprob: -5.5302228927612305
    10. ' ' → logprob: -5.6552228927612305

Token 115: ' 
' (ID: 793)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04407769814133644
    2. '' → logprob: -4.5440778732299805
    3. ' 
' → logprob: -4.7940778732299805
    4. '

' → logprob: -4.9190778732299805
    5. ' ' → logprob: -5.5440778732299805
    6. ')' → logprob: -5.6690778732299805
    7. '#' → logprob: -5.9190778732299805
    8. '<|end|>' → logprob: -6.1690778732299805
    9. '  
' → logprob: -6.9190778732299805
    10. '\n' → logprob: -7.1690778732299805

Token 116: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09581147879362106
    2. '' → logprob: -3.970811367034912
    3. '

' → logprob: -4.095811367034912
    4. ' ' → logprob: -4.220811367034912
    5. '#' → logprob: -4.345811367034912
    6. ' 
' → logprob: -4.970811367034912
    7. '\n' → logprob: -5.220811367034912
    8. 'def' → logprob: -5.720811367034912
    9. ')' → logprob: -5.845811367034912
    10. '
' → logprob: -6.345811367034912

Token 117: ' C' (ID: 363)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.19156095385551453
    2. '#' → logprob: -2.191560983657837
    3. '
' → logprob: -3.566560983657837
    4. ' 

' → logprob: -4.691560745239258
    5. ' 
' → logprob: -4.816560745239258
    6. ' ' → logprob: -5.066560745239258
    7. '

' → logprob: -5.316560745239258
    8. ' def' → logprob: -6.441560745239258
    9. '  
' → logprob: -7.066560745239258
    10. ' 
 
' → logprob: -7.691560745239258

Token 118: ''est' (ID: 6616)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.1948869377374649
    2. '#' → logprob: -2.9448869228363037
    3. 'ette' → logprob: -3.5698869228363037
    4. 'ela' → logprob: -4.194887161254883
    5. 'om' → logprob: -4.194887161254883
    6. 'omme' → logprob: -4.194887161254883
    7. 'es' → logprob: -4.944887161254883
    8. ''est' → logprob: -5.194887161254883
    9. 'omp' → logprob: -5.194887161254883
    10. 'ar' → logprob: -5.694887161254883

Token 119: ' utile' (ID: 68237)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.005171020515263081
    2. ' utile' → logprob: -5.880170822143555
    3. ' souvent' → logprob: -7.005170822143555
    4. '  ' → logprob: -8.630170822143555
    5. ' une' → logprob: -8.880170822143555
    6. ' ' → logprob: -9.005170822143555
    7. ' très' → logprob: -9.255170822143555
    8. ' nécessaire' → logprob: -9.255170822143555
    9. ' utiles' → logprob: -9.630170822143555
    10. ' un' → logprob: -9.630170822143555

Token 120: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.021233737468719482
    2. ' dans' → logprob: -4.646233558654785
    3. ' pour' → logprob: -5.021233558654785
    4. ' notamment' → logprob: -6.271233558654785
    5. ' surtout' → logprob: -6.521233558654785
    6. ' lors' → logprob: -7.771233558654785
    7. ' lorsque' → logprob: -8.021233558654785
    8. ' lorsqu' → logprob: -8.146233558654785
    9. ',' → logprob: -9.521233558654785
    10. 'dans' → logprob: -9.771233558654785

Token 121: ' certains' (ID: 30681)
  Prédit: ' résoudre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' résoudre' → logprob: -1.1574060916900635
    2. ' traiter' → logprob: -1.2824060916900635
    3. ' des' → logprob: -1.6574060916900635
    4. ' les' → logprob: -1.9074060916900635
    5. ' gérer' → logprob: -3.6574060916900635
    6. ' ' → logprob: -3.9074060916900635
    7. ' pouvoir' → logprob: -5.907405853271484
    8. ' l' → logprob: -5.907405853271484
    9. 'les' → logprob: -6.032405853271484
    10. 'r' → logprob: -6.532405853271484

Token 122: ' alg' (ID: 4485)
  Prédit: ' alg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' alg' → logprob: -0.66983962059021
    2. 'alg' → logprob: -1.04483962059021
    3. ' problèmes' → logprob: -2.29483962059021
    4. ' types' → logprob: -3.79483962059021
    5. 'pro' → logprob: -5.294839859008789
    6. ' cas' → logprob: -5.544839859008789
    7. 'types' → logprob: -6.669839859008789
    8. ' programmes' → logprob: -7.419839859008789
    9. 'algorithm' → logprob: -7.669839859008789
    10. ' algorit' → logprob: -8.294839859008789

Token 123: 'orith' (ID: 9996)
  Prédit: 'orith'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orith' → logprob: -0.1345071792602539
    2. 'orithms' → logprob: -2.384507179260254
    3. 'o' → logprob: -4.009507179260254
    4. 'or' → logprob: -5.009507179260254
    5. '```' → logprob: -6.134507179260254
    6. 'orithm' → logprob: -6.384507179260254
    7. 'os' → logprob: -6.384507179260254
    8. '#' → logprob: -7.134507179260254
    9. '**' → logprob: -7.509507179260254
    10. 'orit' → logprob: -7.759507179260254

Token 124: 'mes' (ID: 4613)
  Prédit: 'mes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mes' → logprob: -0.006774465087801218
    2. 'th' → logprob: -5.756774425506592
    3. 't' → logprob: -5.881774425506592
    4. 'me' → logprob: -7.881774425506592
    5. 's' → logprob: -8.00677490234375
    6. 'f' → logprob: -10.75677490234375
    7. 'm' → logprob: -11.00677490234375
    8. '```' → logprob: -11.63177490234375
    9. 'ms' → logprob: -12.00677490234375
    10. 'èmes' → logprob: -12.00677490234375

Token 125: ' nécess' (ID: 25223)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4727685749530792
    2. ' ' → logprob: -1.8477685451507568
    3. ' de' → logprob: -3.097768545150757
    4. '  ' → logprob: -3.222768545150757
    5. '.' → logprob: -3.722768545150757
    6. 's' → logprob: -4.222768783569336
    7. ' qui' → logprob: -4.222768783569336
    8. ' ,' → logprob: -4.472768783569336
    9. '_' → logprob: -4.972768783569336
    10. ' (' → logprob: -5.097768783569336

Token 126: 'itant' (ID: 61641)
  Prédit: 'itant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itant' → logprob: -0.20679034292697906
    2. 'i' → logprob: -2.2067904472351074
    3. 'a' → logprob: -2.8317904472351074
    4. 's' → logprob: -5.581790447235107
    5. 'it' → logprob: -6.081790447235107
    6. 'ite' → logprob: -6.581790447235107
    7. 'itent' → logprob: -6.581790447235107
    8. 'ant' → logprob: -6.581790447235107
    9. '#' → logprob: -6.831790447235107
    10. 'e' → logprob: -6.956790447235107

Token 127: ' beaucoup' (ID: 19539)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.8172488212585449
    2. ' une' → logprob: -1.567248821258545
    3. ' de' → logprob: -2.317248821258545
    4. ' d' → logprob: -2.442248821258545
    5. ' beaucoup' → logprob: -2.942248821258545
    6. 'des' → logprob: -3.442248821258545
    7. 's' → logprob: -3.692248821258545
    8. 'd' → logprob: -3.942248821258545
    9. ' ' → logprob: -4.567248821258545
    10. 'de' → logprob: -4.567248821258545

Token 128: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.5882933139801025
    2. ' de' → logprob: -0.8382933139801025
    3. 'd' → logprob: -4.963293075561523
    4. 'de' → logprob: -5.588293075561523
    5. ' plus' → logprob: -7.338293075561523
    6. ' ' → logprob: -7.588293075561523
    7. ' recursion' → logprob: -8.838293075561523
    8. 's' → logprob: -8.963293075561523
    9. ' espaces' → logprob: -10.838293075561523
    10. '_de' → logprob: -11.338293075561523

Token 129: ' réc' (ID: 36254)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.07283008098602295
    2. ' réc' → logprob: -2.6978302001953125
    3. 'rec' → logprob: -6.8228302001953125
    4. ' profondeur' → logprob: -6.9478302001953125
    5. 're' → logprob: -8.322830200195312
    6. 'd' → logprob: -9.072830200195312
    7. 'ré' → logprob: -9.197830200195312
    8. 'pro' → logprob: -9.697830200195312
    9. 'recursive' → logprob: -9.947830200195312
    10. 'ress' → logprob: -10.197830200195312

Token 130: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.6375117301940918
    2. 'urs' → logprob: -0.7625117301940918
    3. 'ur' → logprob: -6.012511730194092
    4. 'ursive' → logprob: -6.512511730194092
    5. '_' → logprob: -7.887511730194092
    6. 'u' → logprob: -9.38751220703125
    7. 'usions' → logprob: -9.88751220703125
    8. 'usr' → logprob: -10.01251220703125
    9. 'урс' → logprob: -10.01251220703125
    10. 'usion' → logprob: -10.13751220703125

Token 131: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.30715370178222656
    2. '.' → logprob: -2.5571537017822266
    3. '' → logprob: -2.9321537017822266
    4. '\n' → logprob: -3.3071537017822266
    5. ' 
' → logprob: -3.6821537017822266
    6. '\' → logprob: -3.9321537017822266
    7. ')' → logprob: -3.9321537017822266
    8. '  
' → logprob: -5.057153701782227
    9. '

' → logprob: -5.682153701782227
    10. 'newline' → logprob: -5.807153701782227

Token 132: ' comme' (ID: 7971)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.45002368092536926
    2. ' but' → logprob: -2.700023651123047
    3. ' mais' → logprob: -2.825023651123047
    4. '\' → logprob: -3.075023651123047
    5. ' especially' → logprob: -3.075023651123047
    6. ')' → logprob: -3.325023651123047
    7. '\n' → logprob: -3.450023651123047
    8. ' notamment' → logprob: -4.075023651123047
    9. ' 
' → logprob: -4.325023651123047
    10. 'n' → logprob: -5.200023651123047

Token 133: ' ceux' (ID: 26863)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.8084022402763367
    2. 'l' → logprob: -1.4334022998809814
    3. 'le' → logprob: -1.9334022998809814
    4. 'la' → logprob: -2.1834022998809814
    5. ' les' → logprob: -3.9334022998809814
    6. ' le' → logprob: -4.558402061462402
    7. ' la' → logprob: -4.683402061462402
    8. ' l' → logprob: -5.183402061462402
    9. ' ceux' → logprob: -5.808402061462402
    10. 'des' → logprob: -6.058402061462402

Token 134: ' trait' (ID: 15458)
  Prédit: ' qui'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' qui' → logprob: -0.8061842322349548
    2. ' des' → logprob: -1.5561842918395996
    3. ' utilisant' → logprob: -2.4311842918395996
    4. ' de' → logprob: -2.5561842918395996
    5. ' ' → logprob: -2.9311842918395996
    6. ' liés' → logprob: -3.4311842918395996
    7. ' en' → logprob: -4.6811842918396
    8. ' d' → logprob: -4.6811842918396
    9. ' du' → logprob: -5.0561842918396
    10. ' travaill' → logprob: -5.1811842918396

Token 135: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.011055129580199718
    2. 'ent' → logprob: -4.761054992675781
    3. 'ement' → logprob: -7.511054992675781
    4. 'e' → logprob: -7.636054992675781
    5. 'er' → logprob: -8.011054992675781
    6. '```' → logprob: -8.261054992675781
    7. '#' → logprob: -8.636054992675781
    8. 'an' → logprob: -9.386054992675781
    9. ' ant' → logprob: -9.573554992675781
    10. 'a' → logprob: -9.573554992675781

Token 136: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.19117899239063263
    2. ' les' → logprob: -1.8161790370941162
    3. 'les' → logprob: -5.316178798675537
    4. ' ' → logprob: -6.066178798675537
    5. 's' → logprob: -6.566178798675537
    6. 'des' → logprob: -6.691178798675537
    7. ' l' → logprob: -8.566179275512695
    8. ' de' → logprob: -8.566179275512695
    9. ' la' → logprob: -8.566179275512695
    10. ' d' → logprob: -8.816179275512695

Token 137: ' grands' (ID: 43085)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.7104712724685669
    2. ' les' → logprob: -1.710471272468567
    3. 'les' → logprob: -1.960471272468567
    4. ' l' → logprob: -3.9604711532592773
    5. 'des' → logprob: -3.9604711532592773
    6. ' arbres' → logprob: -3.9604711532592773
    7. 'gr' → logprob: -4.085471153259277
    8. 'l' → logprob: -4.085471153259277
    9. ' grands' → logprob: -4.210471153259277
    10. ' la' → logprob: -4.335471153259277

Token 138: ' arbres' (ID: 127011)
  Prédit: ' arbres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arbres' → logprob: -0.10691064596176147
    2. ' graph' → logprob: -3.6069107055664062
    3. ' espaces' → logprob: -3.7319107055664062
    4. ' ' → logprob: -4.106910705566406
    5. 's' → logprob: -4.981910705566406
    6. ' tableaux' → logprob: -5.731910705566406
    7. ' arbre' → logprob: -5.731910705566406
    8. 'arb' → logprob: -5.856910705566406
    9. 'graph' → logprob: -5.981910705566406
    10. ' graphs' → logprob: -6.106910705566406

Token 139: ' ou' (ID: 2031)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7843285799026489
    2. '
' → logprob: -1.159328579902649
    3. ')' → logprob: -2.6593284606933594
    4. ',' → logprob: -3.4093284606933594
    5. '\' → logprob: -3.6593284606933594
    6. '\n' → logprob: -3.9093284606933594
    7. '' → logprob: -4.034328460693359
    8. '.
' → logprob: -4.409328460693359
    9. ' 
' → logprob: -4.909328460693359
    10. ',
' → logprob: -5.159328460693359

Token 140: ' graph' (ID: 7465)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.33055782318115234
    2. ' de' → logprob: -1.8305578231811523
    3. 'des' → logprob: -3.3305578231811523
    4. 'de' → logprob: -3.3305578231811523
    5. ' d' → logprob: -4.080557823181152
    6. 'd' → logprob: -5.205557823181152
    7. ' la' → logprob: -5.455557823181152
    8. 'la' → logprob: -5.830557823181152
    9. ' pour' → logprob: -5.955557823181152
    10. ' certains' → logprob: -6.080557823181152

Token 141: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.0022764618042856455
    2. 's' → logprob: -6.127276420593262
    3. 'e' → logprob: -9.377276420593262
    4. '```' → logprob: -13.002276420593262
    5. 'iques' → logprob: -13.377276420593262
    6. '#' → logprob: -14.002276420593262
    7. ' es' → logprob: -14.502276420593262
    8. 'raph' → logprob: -15.502276420593262
    9. 'esp' → logprob: -16.002277374267578
    10. '}' → logprob: -16.127277374267578

Token 142: '.

' (ID: 364)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20930972695350647
    2. '.' → logprob: -2.8343098163604736
    3. '' → logprob: -2.9593098163604736
    4. ' 
' → logprob: -3.7093098163604736
    5. ')' → logprob: -4.2093095779418945
    6. '\n' → logprob: -4.3343095779418945
    7. '<|end|>' → logprob: -4.8343095779418945
    8. '  
' → logprob: -5.9593095779418945
    9. '
' → logprob: -6.0843095779418945
    10. '```' → logprob: -6.0843095779418945

Token 143: '#' (ID: 2)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7990639209747314
    2. 'def' → logprob: -0.7990639209747314
    3. '#' → logprob: -2.6740639209747314
    4. '\' → logprob: -4.424063682556152
    5. '
' → logprob: -4.799063682556152
    6. 'de' → logprob: -5.549063682556152
    7. 'n' → logprob: -6.549063682556152
    8. ' 
' → logprob: -7.049063682556152
    9. '' → logprob: -7.174063682556152
    10. '(' → logprob: -7.299063682556152

Token 144: ' from' (ID: 591)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08845937997102737
    2. 'd' → logprob: -3.0884594917297363
    3. ' ' → logprob: -3.5884594917297363
    4. ' def' → logprob: -5.713459491729736
    5. ' 
' → logprob: -6.338459491729736
    6. '#' → logprob: -6.588459491729736
    7. 'de' → logprob: -6.963459491729736
    8. 'n' → logprob: -6.963459491729736
    9. 'import' → logprob: -7.213459491729736
    10. '\' → logprob: -7.463459491729736

Token 145: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.017076244577765465
    2. 'collections' → logprob: -4.517076015472412
    3. ' math' → logprob: -5.267076015472412
    4. ' typing' → logprob: -7.267076015472412
    5. ' functools' → logprob: -9.51707649230957
    6. 'math' → logprob: -10.26707649230957
    7. ' sys' → logprob: -11.14207649230957
    8. ' itertools' → logprob: -11.26707649230957
    9. ' queue' → logprob: -12.39207649230957
    10. ' heap' → logprob: -12.64207649230957

Token 146: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.02632422000169754
    2. 'import' → logprob: -3.6513242721557617
    3. '_import' → logprob: -11.401324272155762
    4. '.' → logprob: -12.276324272155762
    5. '	import' → logprob: -13.401324272155762
    6. ' ' → logprob: -13.526324272155762
    7. ' defaultdict' → logprob: -13.526324272155762
    8. '_' → logprob: -13.776324272155762
    9. ' collections' → logprob: -14.026324272155762
    10. 'collections' → logprob: -14.901324272155762

Token 147: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.2327425628900528
    2. 'deque' → logprob: -1.7327425479888916
    3. ' defaultdict' → logprob: -3.4827425479888916
    4. 'default' → logprob: -9.357742309570312
    5. 'de' → logprob: -11.232742309570312
    6. ' sys' → logprob: -12.357742309570312
    7. ' default' → logprob: -12.607742309570312
    8. ' collections' → logprob: -12.607742309570312
    9. 'collections' → logprob: -12.732742309570312
    10. 'import' → logprob: -13.232742309570312

Token 148: ' ' (ID: 220)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8111841082572937
    2. '
' → logprob: -1.1861841678619385
    3. ' ' → logprob: -2.1861841678619385
    4. ' 
' → logprob: -3.3111841678619385
    5. '<|end|>' → logprob: -3.9361841678619385
    6. 'deque' → logprob: -4.186183929443359
    7. ' 

' → logprob: -4.311183929443359
    8. '  
' → logprob: -4.686183929443359
    9. '

' → logprob: -4.811183929443359
    10. ',' → logprob: -4.936183929443359

Token 149: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1857919991016388
    2. '<|end|>' → logprob: -2.4357919692993164
    3. 'import' → logprob: -2.8107919692993164
    4. '#' → logprob: -5.560791969299316
    5. '.' → logprob: -5.560791969299316
    6. '<|end|>' → logprob: -5.810791969299316
    7. 'd' → logprob: -6.185791969299316
    8. ' 
' → logprob: -6.185791969299316
    9. '
' → logprob: -6.435791969299316
    10. ',' → logprob: -6.935791969299316

Token 150: ' Cette' (ID: 27383)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.004368409514427185
    2. 'd' → logprob: -6.504368305206299
    3. '<|end|>' → logprob: -7.254368305206299
    4. 'import' → logprob: -7.629368305206299
    5. ' de' → logprob: -7.754368305206299
    6. 'de' → logprob: -8.629368782043457
    7. ' import' → logprob: -8.629368782043457
    8. 'deque' → logprob: -8.879368782043457
    9. ' d' → logprob: -9.379368782043457
    10. ' 
' → logprob: -9.754368782043457

Token 151: ' ligne' (ID: 19583)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -1.2545034885406494
    2. ' collections' → logprob: -1.6295034885406494
    3. ' ' → logprob: -2.2545034885406494
    4. ' part' → logprob: -2.6295034885406494
    5. ' ligne' → logprob: -2.7545034885406494
    6. ' lines' → logprob: -2.8795034885406494
    7. ' file' → logprob: -3.1295034885406494
    8. ' code' → logprob: -3.2545034885406494
    9. ' module' → logprob: -3.6295034885406494
    10. ' import' → logprob: -4.12950325012207

Token 152: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.30144989490509033
    2. '<|end|>' → logprob: -1.6764498949050903
    3. 'import' → logprob: -3.551449775695801
    4. ' is' → logprob: -4.301449775695801
    5. '<|end|>' → logprob: -4.926449775695801
    6. ' de' → logprob: -5.801449775695801
    7. ' import' → logprob: -5.926449775695801
    8. ',' → logprob: -6.051449775695801
    9. ' 
' → logprob: -6.426449775695801
    10. 's' → logprob: -6.551449775695801

Token 153: ' comment' (ID: 5375)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -1.487180471420288
    2. 'comment' → logprob: -1.487180471420288
    3. ' comment' → logprob: -1.862180471420288
    4. ' un' → logprob: -2.487180471420288
    5. '<|end|>' → logprob: -2.737180471420288
    6. ' souvent' → logprob: -3.612180471420288
    7. ' uncomment' → logprob: -3.612180471420288
    8. 'Comment' → logprob: -3.737180471420288
    9. ' ' → logprob: -4.112180709838867
    10. ' supprim' → logprob: -4.362180709838867

Token 154: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.1714300960302353
    2. 'é' → logprob: -1.9214301109313965
    3. '#' → logprob: -4.5464301109313965
    4. 'ed' → logprob: -8.421429634094238
    5. 'ées' → logprob: -9.296429634094238
    6. 'ee' → logprob: -10.171429634094238
    7. 'è' → logprob: -10.171429634094238
    8. 'e' → logprob: -10.796429634094238
    9. 'er' → logprob: -11.171429634094238
    10. 'és' → logprob: -11.171429634094238

Token 155: ' et' (ID: 859)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2477673888206482
    2. ' ' → logprob: -2.622767448425293
    3. '<|end|>' → logprob: -3.122767448425293
    4. ' 
' → logprob: -3.372767448425293
    5. '' → logprob: -4.122767448425293
    6. '  
' → logprob: -4.747767448425293
    7. '\n' → logprob: -4.872767448425293
    8. '#' → logprob: -4.872767448425293
    9. 'import' → logprob: -5.247767448425293
    10. 'd' → logprob: -5.372767448425293

Token 156: ' donc' (ID: 14206)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0342683792114258
    2. ' n' → logprob: -1.1592683792114258
    3. '<|end|>' → logprob: -1.6592683792114258
    4. ' ne' → logprob: -4.034268379211426
    5. '#' → logprob: -4.034268379211426
    6. 'ne' → logprob: -4.284268379211426
    7. 'import' → logprob: -4.534268379211426
    8. ' peut' → logprob: -5.159268379211426
    9. ' not' → logprob: -5.534268379211426
    10. 'n't' → logprob: -5.596768379211426

Token 157: ' inutil' (ID: 154055)
  Prédit: ' inutile'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inutile' → logprob: -0.912926197052002
    2. ' inutil' → logprob: -1.412926197052002
    3. ' not' → logprob: -2.537926197052002
    4. ' inactive' → logprob: -2.537926197052002
    5. ' pas' → logprob: -3.287926197052002
    6. ' non' → logprob: -4.162926197052002
    7. ' supprim' → logprob: -4.287926197052002
    8. ' une' → logprob: -4.537926197052002
    9. ' import' → logprob: -4.662926197052002
    10. ' active' → logprob: -4.787926197052002

Token 158: 'isée' (ID: 59331)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.1974804699420929
    2. 'isée' → logprob: -2.4474804401397705
    3. 'import' → logprob: -3.1974804401397705
    4. 'é' → logprob: -3.6974804401397705
    5. 'ized' → logprob: -4.94748067855835
    6. 'isé' → logprob: -5.32248067855835
    7. 'ité' → logprob: -5.69748067855835
    8. '#' → logprob: -6.07248067855835
    9. 'ed' → logprob: -6.32248067855835
    10. 'isées' → logprob: -6.32248067855835

Token 159: '.' (ID: 13)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05743401497602463
    2. '

' → logprob: -3.68243408203125
    3. '' → logprob: -4.30743408203125
    4. '#' → logprob: -5.93243408203125
    5. 'import' → logprob: -5.93243408203125
    6. '<|end|>' → logprob: -5.93243408203125
    7. ' ' → logprob: -6.18243408203125
    8. ' 
' → logprob: -6.55743408203125
    9. 'n' → logprob: -6.68243408203125
    10. '
' → logprob: -7.30743408203125

Token 160: ' deque' (ID: 90347)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14460381865501404
    2. '

' → logprob: -3.519603729248047
    3. '' → logprob: -3.644603729248047
    4. '\n' → logprob: -3.894603729248047
    5. '#' → logprob: -4.269603729248047
    6. ' ' → logprob: -4.769603729248047
    7. 'n' → logprob: -5.019603729248047
    8. '\' → logprob: -5.019603729248047
    9. 'import' → logprob: -5.144603729248047
    10. ' 
' → logprob: -5.394603729248047

Token 161: ' est' (ID: 893)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 162: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.3254397511482239
    2. ' un' → logprob: -1.700439691543579
    3. ' souvent' → logprob: -2.700439691543579
    4. 'un' → logprob: -5.075439929962158
    5. 'une' → logprob: -5.200439929962158
    6. ' utilisée' → logprob: -5.575439929962158
    7. '<|end|>' → logprob: -6.825439929962158
    8. ' a' → logprob: -6.825439929962158
    9. ' ' → logprob: -6.950439929962158
    10. ' parfois' → logprob: -7.200439929962158

Token 163: ' structure' (ID: 8866)
  Prédit: 'structure'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'structure' → logprob: -0.8727366924285889
    2. ' structure' → logprob: -0.9977366924285889
    3. ' data' → logprob: -2.747736692428589
    4. 'list' → logprob: -3.372736692428589
    5. 'data' → logprob: -3.497736692428589
    6. ' liste' → logprob: -3.872736692428589
    7. 'liste' → logprob: -4.247736930847168
    8. ' file' → logprob: -4.497736930847168
    9. 'queue' → logprob: -4.497736930847168
    10. 'file' → logprob: -4.872736930847168

Token 164: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 165: ' données' (ID: 30580)
  Prédit: ' données'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' données' → logprob: -0.1122119277715683
    2. 'd' → logprob: -2.4872119426727295
    3. 'data' → logprob: -3.9872119426727295
    4. ' data' → logprob: -6.23721170425415
    5. 'collections' → logprob: -6.73721170425415
    6. 'don' → logprob: -7.73721170425415
    7. ' donnée' → logprob: -8.112212181091309
    8. '```' → logprob: -8.237212181091309
    9. 'datas' → logprob: -8.862212181091309
    10. 'files' → logprob: -10.362212181091309

Token 166: ' "' (ID: 392)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 167: 'double' (ID: 9489)
  Prédit: ' double'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' double' → logprob: -0.1043914183974266
    2. 'double' → logprob: -2.97939133644104
    3. '"' → logprob: -3.22939133644104
    4. ' ' → logprob: -6.354391574859619
    5. ' "' → logprob: -6.854391574859619
    6. ' file' → logprob: -6.854391574859619
    7. ' optim' → logprob: -7.229391574859619
    8. ' utile' → logprob: -7.604391574859619
    9. ' d' → logprob: -7.729391574859619
    10. ' à' → logprob: -7.979391574859619

Token 168: '-ended' (ID: 155972)
  Prédit: '-ended'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-ended' → logprob: -0.019474821165204048
    2. '-' → logprob: -4.394474983215332
    3. ' ended' → logprob: -5.144474983215332
    4. 'ended' → logprob: -7.394474983215332
    5. 't' → logprob: -8.144474983215332
    6. ' file' → logprob: -10.019474983215332
    7. ' ' → logprob: -10.519474983215332
    8. '_' → logprob: -10.894474983215332
    9. ' -' → logprob: -10.894474983215332
    10. '-​' → logprob: -11.269474983215332

Token 169: ' queue' (ID: 13661)
  Prédit: ' queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.03777119517326355
    2. 'queue' → logprob: -3.412771224975586
    3. '"' → logprob: -5.912771224975586
    4. '_queue' → logprob: -7.537771224975586
    5. ' ' → logprob: -8.287771224975586
    6. ' file' → logprob: -9.162771224975586
    7. '-' → logprob: -9.162771224975586
    8. ' ' → logprob: -9.412771224975586
    9. '	queue' → logprob: -9.412771224975586
    10. 'que' → logprob: -10.287771224975586

Token 170: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0017694240668788552
    2. ' "' → logprob: -7.251769542694092
    3. 'import' → logprob: -8.251769065856934
    4. ')"' → logprob: -9.126769065856934
    5. '."' → logprob: -9.126769065856934
    6. '#"' → logprob: -9.126769065856934
    7. '#' → logprob: -9.251769065856934
    8. '"""' → logprob: -9.751769065856934
    9. '"
' → logprob: -10.001769065856934
    10. ',' → logprob: -10.376769065856934

Token 171: ' très' (ID: 9412)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 172: ' utile' (ID: 68237)
  Prédit: ' utile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utile' → logprob: -0.6810259819030762
    2. ' useful' → logprob: -1.1810259819030762
    3. 'utile' → logprob: -2.556025981903076
    4. ' útil' → logprob: -3.556025981903076
    5. ' utiles' → logprob: -3.931025981903076
    6. 'util' → logprob: -4.931025981903076
    7. 'pr' → logprob: -5.056025981903076
    8. 'use' → logprob: -5.306025981903076
    9. 'import' → logprob: -5.931025981903076
    10. ' souvent' → logprob: -5.931025981903076

Token 173: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 174: ' ajouter' (ID: 78457)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.0046725273132324
    2. 'b' → logprob: -1.7546725273132324
    3. 'la' → logprob: -2.0046725273132324
    4. ' l' → logprob: -2.2546725273132324
    5. ' bfs' → logprob: -3.0046725273132324
    6. 'l' → logprob: -3.1296725273132324
    7. ' les' → logprob: -3.7546725273132324
    8. ' queue' → logprob: -4.004672527313232
    9. 'queue' → logprob: -4.129672527313232
    10. 'collections' → logprob: -5.129672527313232

Token 175: '/' (ID: 14)
  Prédit: ' et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.13362249732017517
    2. ' ou' → logprob: -2.508622407913208
    3. 'et' → logprob: -4.258622646331787
    4. ' ' → logprob: -4.383622646331787
    5. '<|end|>' → logprob: -5.758622646331787
    6. ',' → logprob: -6.008622646331787
    7. ' des' → logprob: -6.008622646331787
    8. ' and' → logprob: -6.258622646331787
    9. 's' → logprob: -6.258622646331787
    10. ' or' → logprob: -6.883622646331787

Token 176: 'ret' (ID: 3431)
  Prédit: ' retirer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' retirer' → logprob: -0.8437989354133606
    2. 'pop' → logprob: -1.5937988758087158
    3. ' remove' → logprob: -2.093798875808716
    4. ' supprimer' → logprob: -2.718798875808716
    5. ' enlever' → logprob: -2.843798875808716
    6. 'remove' → logprob: -2.968798875808716
    7. ' p' → logprob: -3.343798875808716
    8. ' pop' → logprob: -4.593799114227295
    9. 'p' → logprob: -4.968799114227295
    10. 'sup' → logprob: -5.218799114227295

Token 177: 'irer' (ID: 85189)
  Prédit: 'irer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irer' → logprob: -0.6808382868766785
    2. 'rait' → logprob: -1.5558383464813232
    3. 'ra' → logprob: -2.1808383464813232
    4. 'urn' → logprob: -2.8058383464813232
    5. 'a' → logprob: -4.305838108062744
    6. 'r' → logprob: -4.430838108062744
    7. 'rier' → logprob: -5.055838108062744
    8. 'u' → logprob: -5.180838108062744
    9. 'ype' → logprob: -5.430838108062744
    10. 'our' → logprob: -5.430838108062744

Token 178: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.034018512815237045
    2. ' ' → logprob: -3.9090185165405273
    3. 'des' → logprob: -5.409018516540527
    4. ' les' → logprob: -5.784018516540527
    5. ' elements' → logprob: -6.284018516540527
    6. ' items' → logprob: -7.534018516540527
    7. 's' → logprob: -7.659018516540527
    8. '<|end|>' → logprob: -7.909018516540527
    9. ' éléments' → logprob: -8.034018516540527
    10. 'élé' → logprob: -8.409018516540527

Token 179: ' éléments' (ID: 57375)
  Prédit: ' file'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' file' → logprob: -1.2685781717300415
    2. ' files' → logprob: -1.2685781717300415
    3. 'élé' → logprob: -1.5185781717300415
    4. ' collections' → logprob: -2.893578052520752
    5. ' éléments' → logprob: -3.143578052520752
    6. 'collections' → logprob: -3.268578052520752
    7. ' elements' → logprob: -3.768578052520752
    8. ' ' → logprob: -4.893578052520752
    9. ' listes' → logprob: -5.268578052520752
    10. 'b' → logprob: -5.393578052520752

Token 180: ' aux' (ID: 5850)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7692275643348694
    2. ',' → logprob: -1.6442275047302246
    3. 'from' → logprob: -2.5192275047302246
    4. '<|end|>' → logprob: -2.6442275047302246
    5. 's' → logprob: -2.7692275047302246
    6. '.' → logprob: -3.6442275047302246
    7. ' from' → logprob: -4.019227504730225
    8. '#' → logprob: -4.269227504730225
    9. 'import' → logprob: -4.894227504730225
    10. ' de' → logprob: -4.894227504730225

Token 181: ' deux' (ID: 10301)
  Prédit: 'both'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'both' → logprob: -0.49457496404647827
    2. ' both' → logprob: -1.369575023651123
    3. ' deux' → logprob: -2.494575023651123
    4. 'b' → logprob: -3.494575023651123
    5. 'de' → logprob: -4.494575023651123
    6. 'extr' → logprob: -5.744575023651123
    7. 'deque' → logprob: -6.369575023651123
    8. 'collections' → logprob: -6.994575023651123
    9. 'dé' → logprob: -6.994575023651123
    10. 'bot' → logprob: -7.369575023651123

Token 182: ' extr' (ID: 15674)
  Prédit: 'extr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'extr' → logprob: -0.6952597498893738
    2. ' extr' → logprob: -1.9452598094940186
    3. 'c' → logprob: -2.0702598094940186
    4. 'b' → logprob: -2.3202598094940186
    5. ' côtés' → logprob: -2.4452598094940186
    6. 'ext' → logprob: -4.4452595710754395
    7. ' bouts' → logprob: -5.3202595710754395
    8. 'ends' → logprob: -5.4452595710754395
    9. 'faces' → logprob: -5.4452595710754395
    10. 'positions' → logprob: -5.4452595710754395

Token 183: 'é' (ID: 377)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rem' → logprob: -0.6766341328620911
    2. 'emes' → logprob: -1.8016340732574463
    3. 'êmes' → logprob: -2.0516340732574463
    4. 're' → logprob: -3.3016340732574463
    5. 'èmes' → logprob: -3.3016340732574463
    6. 'r' → logprob: -3.4266340732574463
    7. '```' → logprob: -3.8016340732574463
    8. 'é' → logprob: -4.051634311676025
    9. 'em' → logprob: -4.176634311676025
    10. 'ém' → logprob: -5.176634311676025

Token 184: 'mit' (ID: 2765)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.08022455871105194
    2. 'mits' → logprob: -3.2052245140075684
    3. 'mit' → logprob: -4.330224514007568
    4. 'mites' → logprob: -4.830224514007568
    5. 'mes' → logprob: -5.455224514007568
    6. 'ments' → logprob: -5.955224514007568
    7. 'ms' → logprob: -6.455224514007568
    8. '```' → logprob: -6.455224514007568
    9. 'min' → logprob: -7.330224514007568
    10. 'mé' → logprob: -7.455224514007568

Token 185: 'és' (ID: 1756)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.6514414548873901
    2. 'és' → logprob: -0.7764414548873901
    3. 'ies' → logprob: -4.15144157409668
    4. 's' → logprob: -6.15144157409668
    5. 'i' → logprob: -7.90144157409668
    6. 'é' → logprob: -8.90144157409668
    7. 'y' → logprob: -9.27644157409668
    8. 'ès' → logprob: -9.65144157409668
    9. 'ées' → logprob: -10.40144157409668
    10. 'e' → logprob: -10.77644157409668

Token 186: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 187: ' façon' (ID: 33381)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.1133967712521553
    2. 'la' → logprob: -2.4883968830108643
    3. ' collections' → logprob: -4.863396644592285
    4. ' file' → logprob: -5.738396644592285
    5. ' lists' → logprob: -6.488396644592285
    6. ' l' → logprob: -6.488396644592285
    7. 'collections' → logprob: -6.613396644592285
    8. ' une' → logprob: -6.863396644592285
    9. 'l' → logprob: -6.863396644592285
    10. ' code' → logprob: -6.863396644592285

Token 188: ' efficace' (ID: 54338)
  Prédit: ' efficace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' efficace' → logprob: -0.6816717386245728
    2. ' rapide' → logprob: -1.3066717386245728
    3. ' effic' → logprob: -2.556671619415283
    4. 'efficient' → logprob: -3.306671619415283
    5. ' rapides' → logprob: -3.306671619415283
    6. ' efficaces' → logprob: -3.556671619415283
    7. 'rap' → logprob: -3.556671619415283
    8. ' efficient' → logprob: -5.306671619415283
    9. 'eff' → logprob: -5.431671619415283
    10. 'rapid' → logprob: -6.431671619415283

Token 189: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.29126542806625366
    2. '<|end|>' → logprob: -2.7912654876708984
    3. '' → logprob: -2.9162654876708984
    4. ' ' → logprob: -3.2912654876708984
    5. '

' → logprob: -3.7912654876708984
    6. '#' → logprob: -3.9162654876708984
    7. 'import' → logprob: -4.041265487670898
    8. '.' → logprob: -4.416265487670898
    9. ' 
' → logprob: -5.041265487670898
    10. '\n' → logprob: -5.541265487670898

Token 190: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23251016438007355
    2. '' → logprob: -2.6075100898742676
    3. '

' → logprob: -2.6075100898742676
    4. '\n' → logprob: -4.232510089874268
    5. '#' → logprob: -4.357510089874268
    6. ' ' → logprob: -5.107510089874268
    7. 'n' → logprob: -5.482510089874268
    8. ' 
' → logprob: -5.607510089874268
    9. 'import' → logprob: -5.732510089874268
    10. '<|end|>' → logprob: -5.982510089874268

Token 191: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.01620316505432129
    2. ' ' → logprob: -4.891202926635742
    3. ' math' → logprob: -5.516202926635742
    4. 'collections' → logprob: -5.766202926635742
    5. '_' → logprob: -7.016202926635742
    6. ' typing' → logprob: -8.766202926635742
    7. ' sys' → logprob: -9.016202926635742
    8. ' functools' → logprob: -9.266202926635742
    9. ' itertools' → logprob: -9.516202926635742
    10. ' heap' → logprob: -10.641202926635742

Token 192: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.14329707622528076
    2. ' import' → logprob: -2.0182971954345703
    3. 'port' → logprob: -7.51829719543457
    4. '	import' → logprob: -10.39329719543457
    5. '_import' → logprob: -10.39329719543457
    6. 'ort' → logprob: -11.89329719543457
    7. '```' → logprob: -13.39329719543457
    8. 'from' → logprob: -13.64329719543457
    9. ' ' → logprob: -13.64329719543457
    10. 't' → logprob: -14.01829719543457

Token 193: ' deque' (ID: 90347)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.4054379463195801
    2. ' deque' → logprob: -1.65543794631958
    3. 'deque' → logprob: -2.15543794631958
    4. 'default' → logprob: -3.65543794631958
    5. 'collections' → logprob: -8.155437469482422
    6. ' sys' → logprob: -9.280437469482422
    7. ' default' → logprob: -9.405437469482422
    8. 'sys' → logprob: -9.530437469482422
    9. ' collections' → logprob: -10.155437469482422
    10. 'de' → logprob: -12.030437469482422

Token 194: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 195: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 196: ' Ici' (ID: 145754)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.11046082526445389
    2. ' deque' → logprob: -2.3604607582092285
    3. 'Deque' → logprob: -5.7354607582092285
    4. ' collections' → logprob: -6.3604607582092285
    5. 'collections' → logprob: -6.6104607582092285
    6. 'import' → logprob: -6.8604607582092285
    7. 'from' → logprob: -7.4854607582092285
    8. ' import' → logprob: -7.8604607582092285
    9. 'def' → logprob: -7.9854607582092285
    10. ' defaultdict' → logprob: -8.360461235046387

Token 197: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.015927141532301903
    2. '<|end|>' → logprob: -4.515927314758301
    3. ' import' → logprob: -6.515927314758301
    4. 'import' → logprob: -6.640927314758301
    5. '  ' → logprob: -7.640927314758301
    6. ' de' → logprob: -7.765927314758301
    7. '<|end|>' → logprob: -8.3909273147583
    8. ' is' → logprob: -8.3909273147583
    9. ',' → logprob: -8.7659273147583
    10. '.' → logprob: -9.3909273147583

Token 198: ' on' (ID: 402)
  Prédit: ' deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.20370790362358093
    2. 'deque' → logprob: -1.7037079334259033
    3. ' ' → logprob: -6.453707695007324
    4. ' on' → logprob: -7.453707695007324
    5. 'Deque' → logprob: -10.078707695007324
    6. ' collections' → logprob: -10.453707695007324
    7. ' ' → logprob: -10.828707695007324
    8. ' queue' → logprob: -11.328707695007324
    9. ' dequeue' → logprob: -11.828707695007324
    10. ' une' → logprob: -12.578707695007324

Token 199: ' importe' (ID: 80493)
  Prédit: ' utilise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilise' → logprob: -0.10977358371019363
    2. ' va' → logprob: -3.609773635864258
    3. ' utilis' → logprob: -3.734773635864258
    4. 'util' → logprob: -4.359773635864258
    5. ' importe' → logprob: -4.859773635864258
    6. ' ' → logprob: -4.984773635864258
    7. ' util' → logprob: -5.359773635864258
    8. ' a' → logprob: -5.859773635864258
    9. ' peut' → logprob: -6.359773635864258
    10. ' import' → logprob: -6.359773635864258

Token 200: ' explicit' (ID: 23141)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.008309594355523586
    2. ' deque' → logprob: -5.633309364318848
    3. 'deque' → logprob: -6.133309364318848
    4. ' de' → logprob: -7.383309364318848
    5. '<|end|>' → logprob: -7.883309364318848
    6. ' defaultdict' → logprob: -8.008309364318848
    7. ' collections' → logprob: -8.008309364318848
    8. '  ' → logprob: -8.383309364318848
    9. ' ' → logprob: -8.633309364318848
    10. ' a' → logprob: -9.383309364318848

Token 201: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.01695435680449009
    2. 'ly' → logprob: -4.64195442199707
    3. 'ely' → logprob: -5.01695442199707
    4. 'it' → logprob: -8.64195442199707
    5. 'ment' → logprob: -9.14195442199707
    6. 'ément' → logprob: -10.14195442199707
    7. 'element' → logprob: -10.14195442199707
    8. 'edly' → logprob: -10.14195442199707
    9. ' deque' → logprob: -10.89195442199707
    10. 'import' → logprob: -11.14195442199707

Token 202: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.577619731426239
    2. ' deque' → logprob: -0.827619731426239
    3. ' ' → logprob: -7.702619552612305
    4. 'Deque' → logprob: -8.077619552612305
    5. ' la' → logprob: -8.327619552612305
    6. ' une' → logprob: -8.952619552612305
    7. '<|end|>' → logprob: -9.077619552612305
    8. 'de' → logprob: -9.327619552612305
    9. '(de' → logprob: -9.702619552612305
    10. ' collections' → logprob: -9.952619552612305

Token 203: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 204: ' une' (ID: 2463)
  Prédit: ' utiliser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utiliser' → logprob: -0.09765671193599701
    2. ' pouvoir' → logprob: -2.972656726837158
    3. ' gérer' → logprob: -4.597656726837158
    4. ' l' → logprob: -5.097656726837158
    5. ' manip' → logprob: -5.222656726837158
    6. ' une' → logprob: -5.222656726837158
    7. ' faciliter' → logprob: -5.972656726837158
    8. 'util' → logprob: -5.972656726837158
    9. ' créer' → logprob: -6.722656726837158
    10. ' impl' → logprob: -6.972656726837158

Token 205: ' utilisation' (ID: 80058)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.4974149167537689
    2. ' utilisation' → logprob: -1.3724149465560913
    3. ' file' → logprob: -2.8724148273468018
    4. 'file' → logprob: -3.1224148273468018
    5. ' structure' → logprob: -4.122415065765381
    6. 'structure' → logprob: -4.372415065765381
    7. ' utilization' → logprob: -6.122415065765381
    8. ' utilis' → logprob: -6.622415065765381
    9. 'usage' → logprob: -7.247415065765381
    10. ' future' → logprob: -7.747415065765381

Token 206: ' ult' (ID: 11619)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.0175169706344604
    2. ' ' → logprob: -2.01751708984375
    3. ' possible' → logprob: -2.01751708984375
    4. ' de' → logprob: -3.01751708984375
    5. ' dans' → logprob: -3.39251708984375
    6. '.' → logprob: -3.39251708984375
    7. ' optimale' → logprob: -3.39251708984375
    8. ' ult' → logprob: -3.76751708984375
    9. ' .' → logprob: -3.76751708984375
    10. ' en' → logprob: -4.01751708984375

Token 207: 'érieure' (ID: 45836)
  Prédit: 'érieure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érieure' → logprob: -0.007862132042646408
    2. 'é' → logprob: -5.507862091064453
    3. 'érieur' → logprob: -6.382862091064453
    4. 'ime' → logprob: -6.632862091064453
    5. 'e' → logprob: -8.507862091064453
    6. 'érie' → logprob: -8.507862091064453
    7. 'im' → logprob: -9.632862091064453
    8. 'éri' → logprob: -10.382862091064453
    9. 'er' → logprob: -10.507862091064453
    10. 'érée' → logprob: -10.507862091064453

Token 208: '.' (ID: 13)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7169188261032104
    2. '<|end|>' → logprob: -0.7169188261032104
    3. '<|end|>' → logprob: -5.0919189453125
    4. ' 
' → logprob: -5.3419189453125
    5. ' ' → logprob: -5.5919189453125
    6. '.' → logprob: -5.8419189453125
    7. '\n' → logprob: -6.4669189453125
    8. '' → logprob: -6.5919189453125
    9. '

' → logprob: -7.0919189453125
    10. '
' → logprob: -7.3419189453125

Token 209: ' Mais' (ID: 13880)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.2896876633167267
    2. '
' → logprob: -1.4146876335144043
    3. '
' → logprob: -6.164687633514404
    4. '


' → logprob: -6.164687633514404
    5. '<|end|>' → logprob: -6.664687633514404
    6. ' 

' → logprob: -6.914687633514404
    7. '' → logprob: -7.164687633514404
    8. '

' → logprob: -7.664687633514404
    9. '

' → logprob: -8.789688110351562
    10. '



' → logprob: -9.289688110351562

Token 210: ' dans' (ID: 2671)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.003633923130109906
    2. '<|end|>' → logprob: -7.128633975982666
    3. ' a' → logprob: -7.628633975982666
    4. ' ' → logprob: -7.753633975982666
    5. '  ' → logprob: -8.003633499145508
    6. ' ,' → logprob: -8.378633499145508
    7. ' de' → logprob: -8.628633499145508
    8. '_' → logprob: -9.378633499145508
    9. ' ‌' → logprob: -9.628633499145508
    10. ',' → logprob: -9.753633499145508

Token 211: ' ce' (ID: 2357)
  Prédit: ' ce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ce' → logprob: -0.8025877475738525
    2. ' la' → logprob: -1.9275877475738525
    3. ' le' → logprob: -2.0525877475738525
    4. ' l' → logprob: -2.5525877475738525
    5. ' cette' → logprob: -2.6775877475738525
    6. 'l' → logprob: -2.8025877475738525
    7. 'le' → logprob: -3.6775877475738525
    8. 'la' → logprob: -4.302587509155273
    9. ' this' → logprob: -4.927587509155273
    10. ' cet' → logprob: -5.177587509155273

Token 212: ' code' (ID: 3490)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.6514321565628052
    2. ' cas' → logprob: -1.5264321565628052
    3. 'cas' → logprob: -1.7764321565628052
    4. ' code' → logprob: -2.7764320373535156
    5. 'f' → logprob: -5.276432037353516
    6. 'comment' → logprob: -5.526432037353516
    7. '#' → logprob: -6.026432037353516
    8. 'programme' → logprob: -6.151432037353516
    9. 'prem' → logprob: -6.401432037353516
    10. 'script' → logprob: -6.651432037353516

Token 213: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5531994700431824
    2. ' ' → logprob: -1.1781995296478271
    3. ' ,' → logprob: -2.178199529647827
    4. '<|end|>' → logprob: -5.928199291229248
    5. '  ' → logprob: -8.553199768066406
    6. '<|end|>' → logprob: -9.178199768066406
    7. '.' → logprob: -9.303199768066406
    8. ' )' → logprob: -9.553199768066406
    9. ',
' → logprob: -9.865699768066406
    10. ')' → logprob: -9.990699768066406

Token 214: ' deque' (ID: 90347)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0023092885967344046
    2. '<|end|>' → logprob: -7.752309322357178
    3. ' a' → logprob: -8.62730884552002
    4. 'deque' → logprob: -8.75230884552002
    5. '  ' → logprob: -9.00230884552002
    6. ' not' → logprob: -9.00230884552002
    7. ' de' → logprob: -9.12730884552002
    8. ' the' → logprob: -9.25230884552002
    9. ' on' → logprob: -9.25230884552002
    10. ' it' → logprob: -9.37730884552002

Token 215: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.13943806290626526
    2. ' ' → logprob: -3.0144381523132324
    3. 'n' → logprob: -3.3894381523132324
    4. ')' → logprob: -3.6394381523132324
    5. '<|end|>' → logprob: -4.764438152313232
    6. ' )' → logprob: -4.889438152313232
    7. ' est' → logprob: -6.389438152313232
    8. ' is' → logprob: -7.389438152313232
    9. ' semble' → logprob: -7.389438152313232
    10. ' sera' → logprob: -7.764438152313232

Token 216: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.2743113040924072
    2. ''' → logprob: -1.5243113040924072
    3. ''a' → logprob: -4.524311065673828
    4. ''ap' → logprob: -6.274311065673828
    5. 'e' → logprob: -6.899311065673828
    6. 'a' → logprob: -7.024311065673828
    7. ''app' → logprob: -7.024311065673828
    8. ''s' → logprob: -7.399311065673828
    9. ''appar' → logprob: -7.399311065673828
    10. ''util' → logprob: -7.524311065673828

Token 217: ' finalement' (ID: 77979)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.12552990019321442
    2. 'pas' → logprob: -2.6255300045013428
    3. ' finalement' → logprob: -3.1255300045013428
    4. ' jamais' → logprob: -8.125530242919922
    5. 'import' → logprob: -8.625530242919922
    6. 'util' → logprob: -8.625530242919922
    7. '_pas' → logprob: -8.625530242919922
    8. ' probablement' → logprob: -8.750530242919922
    9. ' utilisé' → logprob: -8.875530242919922
    10. ' utilisée' → logprob: -9.625530242919922

Token 218: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.06565002351999283
    2. 'pas' → logprob: -2.81564998626709
    3. ' jamais' → logprob: -5.94064998626709
    4. ' ' → logprob: -8.06564998626709
    5. ' not' → logprob: -8.56564998626709
    6. 'import' → logprob: -8.56564998626709
    7. '_pas' → logprob: -9.44064998626709
    8. ' used' → logprob: -9.69064998626709
    9. ' finalement' → logprob: -10.19064998626709
    10. ' utilisé' → logprob: -10.19064998626709

Token 219: ' utilisé' (ID: 53138)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.02767961658537388
    2. ' utilisé' → logprob: -3.652679681777954
    3. ' utilisée' → logprob: -7.527679443359375
    4. 'used' → logprob: -7.777679443359375
    5. ' utilis' → logprob: -9.152679443359375
    6. ' used' → logprob: -9.527679443359375
    7. 'import' → logprob: -10.277679443359375
    8. ' utilisées' → logprob: -10.277679443359375
    9. 'utile' → logprob: -10.402679443359375
    10. ''util' → logprob: -10.402679443359375

Token 220: '.

' (ID: 364)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06816913932561874
    2. '<|end|>' → logprob: -3.318169116973877
    3. '
' → logprob: -4.568169116973877
    4. '#' → logprob: -5.193169116973877
    5. ',' → logprob: -5.568169116973877
    6. '\n' → logprob: -6.068169116973877
    7. ' ' → logprob: -6.193169116973877
    8. 'import' → logprob: -6.193169116973877
    9. '\' → logprob: -7.193169116973877
    10. '<|end|>' → logprob: -7.443169116973877

Token 221: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8645253777503967
    2. '\n' → logprob: -1.364525318145752
    3. '
' → logprob: -1.989525318145752
    4. 'def' → logprob: -3.114525318145752
    5. '<|end|>' → logprob: -3.489525318145752
    6. 'd' → logprob: -3.614525318145752
    7. 'n' → logprob: -3.989525318145752
    8. '\' → logprob: -4.114525318145752
    9. ' ' → logprob: -4.489525318145752
    10. '' → logprob: -4.614525318145752

Token 222: ' import' (ID: 1588)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.048668384552002
    2. 'n' → logprob: -1.298668384552002
    3. 'def' → logprob: -2.173668384552002
    4. 'd' → logprob: -2.298668384552002
    5. ' ' → logprob: -2.548668384552002
    6. '\n' → logprob: -3.673668384552002
    7. '
' → logprob: -4.048668384552002
    8. '<|end|>' → logprob: -4.923668384552002
    9. '\' → logprob: -5.173668384552002
    10. 'import' → logprob: -5.173668384552002

Token 223: ' bis' (ID: 7204)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.14731401205062866
    2. ' os' → logprob: -2.2723140716552734
    3. ' threading' → logprob: -3.8973140716552734
    4. ' heap' → logprob: -5.397314071655273
    5. ' itertools' → logprob: -6.272314071655273
    6. ' random' → logprob: -6.522314071655273
    7. ' sys' → logprob: -6.522314071655273
    8. ' re' → logprob: -6.647314071655273
    9. 'math' → logprob: -7.022314071655273
    10. ' bis' → logprob: -7.397314071655273

Token 224: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.00038825106457807124
    2. 'ec' → logprob: -8.500388145446777
    3. ' ' → logprob: -10.375388145446777
    4. 't' → logprob: -10.500388145446777
    5. 'ects' → logprob: -10.875388145446777
    6. 'ected' → logprob: -11.000388145446777
    7. 'ector' → logprob: -11.250388145446777
    8. '.' → logprob: -11.375388145446777
    9. 'ection' → logprob: -11.375388145446777
    10. 'ectl' → logprob: -11.875388145446777

Token 225: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 226: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 227: ' Le' (ID: 2018)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 228: ' module' (ID: 8827)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6321735978126526
    2. ' bis' → logprob: -0.8821735978126526
    3. ' code' → logprob: -3.632173538208008
    4. 'bis' → logprob: -4.382173538208008
    5. ' ' → logprob: -5.757173538208008
    6. ' #' → logprob: -6.257173538208008
    7. ' b' → logprob: -6.632173538208008
    8. ' module' → logprob: -6.632173538208008
    9. ' space' → logprob: -6.632173538208008
    10. ' import' → logprob: -7.007173538208008

Token 229: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.3455103933811188
    2. '<|end|>' → logprob: -1.8455103635787964
    3. ' ' → logprob: -2.095510482788086
    4. 'bis' → logprob: -4.720510482788086
    5. '<|end|>' → logprob: -7.470510482788086
    6. ' is' → logprob: -7.720510482788086
    7. ' ' → logprob: -8.095510482788086
    8. 'b' → logprob: -8.720510482788086
    9. ' sys' → logprob: -8.720510482788086
    10. ' #' → logprob: -9.470510482788086

Token 230: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -1.3782830137643032e-05
    2. 'sect' → logprob: -11.75001335144043
    3. 'e' → logprob: -13.37501335144043
    4. 'ec' → logprob: -13.50001335144043
    5. 'ectl' → logprob: -14.37501335144043
    6. '```' → logprob: -14.87501335144043
    7. 'ecta' → logprob: -15.12501335144043
    8. 'est' → logprob: -15.12501335144043
    9. 'ected' → logprob: -15.50001335144043
    10. '#' → logprob: -15.50001335144043

Token 231: ' permet' (ID: 11798)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 232: ' des' (ID: 731)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.06102337688207626
    2. '<|end|>' → logprob: -3.686023473739624
    3. ' ' → logprob: -4.061023235321045
    4. ' de' → logprob: -4.686023235321045
    5. 'd' → logprob: -5.561023235321045
    6. 'import' → logprob: -5.811023235321045
    7. ' import' → logprob: -8.686023712158203
    8. ' des' → logprob: -9.186023712158203
    9. ' ' → logprob: -9.311023712158203
    10. '<|end|>' → logprob: -9.686023712158203

Token 233: ' opérations' (ID: 102793)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 234: ' efficaces' (ID: 140931)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 235: ' d' (ID: 272)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 236: ''in' (ID: 17942)
  Prédit: ' insertion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' insertion' → logprob: -0.5494472980499268
    2. ' ins' → logprob: -1.0494472980499268
    3. ' insert' → logprob: -4.049447059631348
    4. 'ins' → logprob: -4.174447059631348
    5. 'sertion' → logprob: -5.174447059631348
    6. 'import' → logprob: -5.299447059631348
    7. ' recherche' → logprob: -5.549447059631348
    8. 'in' → logprob: -5.674447059631348
    9. 'insert' → logprob: -5.799447059631348
    10. ' import' → logprob: -6.174447059631348

Token 237: 'sertion' (ID: 21747)
  Prédit: 'sertion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sertion' → logprob: -0.0005280109471641481
    2. 'sert' → logprob: -8.250528335571289
    3. 's' → logprob: -8.625528335571289
    4. '```' → logprob: -10.000528335571289
    5. ' sert' → logprob: -11.500528335571289
    6. '
' → logprob: -12.125528335571289
    7. '

' → logprob: -12.250528335571289
    8. 'ser' → logprob: -12.625528335571289
    9. '' → logprob: -13.000528335571289
    10. '``' → logprob: -13.000528335571289

Token 238: '/' (ID: 14)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 239: 'position' (ID: 4504)
  Prédit: ' recherche'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' recherche' → logprob: -0.19731704890727997
    2. 'bis' → logprob: -2.822317123413086
    3. 'search' → logprob: -3.697317123413086
    4. 're' → logprob: -4.322317123413086
    5. ' tri' → logprob: -4.447317123413086
    6. 'import' → logprob: -4.447317123413086
    7. ' bis' → logprob: -4.697317123413086
    8. 'de' → logprob: -5.322317123413086
    9. 'b' → logprob: -5.447317123413086
    10. 'tri' → logprob: -5.572317123413086

Token 240: 'nement' (ID: 15738)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 241: ' dans' (ID: 2671)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 242: ' des' (ID: 731)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.6912913918495178
    2. 'la' → logprob: -1.941291332244873
    3. ' des' → logprob: -2.066291332244873
    4. ' une' → logprob: -2.816291332244873
    5. 'list' → logprob: -2.816291332244873
    6. 'des' → logprob: -3.191291332244873
    7. 'sorted' → logprob: -3.691291332244873
    8. ' la' → logprob: -4.441291332244873
    9. 'les' → logprob: -4.816291332244873
    10. 'liste' → logprob: -5.066291332244873

Token 243: ' listes' (ID: 179198)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.0923964977264404
    2. 'lists' → logprob: -1.5923964977264404
    3. 'sorted' → logprob: -1.7173964977264404
    4. ' listes' → logprob: -2.0923964977264404
    5. ' lists' → logprob: -2.4673964977264404
    6. ' sorted' → logprob: -3.2173964977264404
    7. 'liste' → logprob: -4.0923967361450195
    8. 'la' → logprob: -5.7173967361450195
    9. 'a' → logprob: -6.4673967361450195
    10. 'une' → logprob: -6.5923967361450195

Token 244: ' tri' (ID: 12665)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 245: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -1.4387859106063843
    2. 'sorted' → logprob: -1.4387859106063843
    3. '_sorted' → logprob: -1.6887859106063843
    4. 'st' → logprob: -3.063786029815674
    5. ' sorted' → logprob: -3.188786029815674
    6. 'orted' → logprob: -3.438786029815674
    7. 'sted' → logprob: -3.813786029815674
    8. 'ght' → logprob: -4.313786029815674
    9. 's' → logprob: -4.438786029815674
    10. 'é' → logprob: -4.563786029815674

Token 246: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 247: ' mais' (ID: 2899)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 248: ' ici' (ID: 27994)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 249: ' il' (ID: 1793)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 250: ' est' (ID: 893)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.09073691815137863
    2. 'n' → logprob: -3.2157368659973145
    3. ' est' → logprob: -3.8407368659973145
    4. '#' → logprob: -3.9657368659973145
    5. 'est' → logprob: -6.2157368659973145
    6. ' #' → logprob: -6.9657368659973145
    7. ' reste' → logprob: -7.2157368659973145
    8. ' is' → logprob: -7.7157368659973145
    9. ' ' → logprob: -7.7157368659973145
    10. '<|end|>' → logprob: -7.9657368659973145

Token 251: ' comment' (ID: 5375)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1026109829545021
    2. ' not' → logprob: -3.3526110649108887
    3. ' #' → logprob: -3.7276110649108887
    4. 'import' → logprob: -4.602611064910889
    5. '<|end|>' → logprob: -4.852611064910889
    6. 'comment' → logprob: -5.477611064910889
    7. 'unused' → logprob: -5.977611064910889
    8. ' rest' → logprob: -6.227611064910889
    9. ' unused' → logprob: -6.352611064910889
    10. ' commented' → logprob: -6.602611064910889

Token 252: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.0034155857283622026
    2. 'ée' → logprob: -5.878415584564209
    3. '#' → logprob: -7.878415584564209
    4. 'ed' → logprob: -9.378416061401367
    5. 'aire' → logprob: -10.253416061401367
    6. 'ées' → logprob: -10.503416061401367
    7. 'és' → logprob: -11.128416061401367
    8. 'è' → logprob: -11.253416061401367
    9. 'éd' → logprob: -11.878416061401367
    10. '�' → logprob: -12.253416061401367

Token 253: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 254: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 255: ' import' (ID: 1588)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 256: ' numpy' (ID: 19529)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.3629266321659088
    2. ' heap' → logprob: -1.2379266023635864
    3. 'math' → logprob: -5.112926483154297
    4. ' itertools' → logprob: -5.487926483154297
    5. 'heap' → logprob: -5.862926483154297
    6. ' threading' → logprob: -7.737926483154297
    7. ' random' → logprob: -8.362926483154297
    8. ' os' → logprob: -8.362926483154297
    9. ' functools' → logprob: -8.612926483154297
    10. ' sys' → logprob: -9.237926483154297

Token 257: ' as' (ID: 472)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 258: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.0006280870293267071
    2. 'np' → logprob: -7.3756279945373535
    3. ' ' → logprob: -14.125628471374512
    4. ' numpy' → logprob: -15.375628471374512
    5. ' NP' → logprob: -15.875628471374512
    6. '=np' → logprob: -15.875628471374512
    7. ' ' → logprob: -16.000627517700195
    8. '_np' → logprob: -16.750627517700195
    9. ' pd' → logprob: -17.750627517700195
    10. ' ndarray' → logprob: -18.125627517700195

Token 259: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 260: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 261: ' N' (ID: 478)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 262: 'umpy' (ID: 31352)
  Prédit: 'umpy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umpy' → logprob: -0.008057624101638794
    2. 'p' → logprob: -5.133057594299316
    3. 'um' → logprob: -7.008057594299316
    4. 'ump' → logprob: -7.758057594299316
    5. 'numpy' → logprob: -8.258057594299316
    6. 'import' → logprob: -8.758057594299316
    7. '#' → logprob: -9.133057594299316
    8. ' numpy' → logprob: -9.758057594299316
    9. ' import' → logprob: -10.383057594299316
    10. ' ' → logprob: -10.383057594299316

Token 263: ' est' (ID: 893)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 264: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -1.1262047290802002
    2. ' une' → logprob: -1.6262047290802002
    3. 'import' → logprob: -1.6262047290802002
    4. ' souvent' → logprob: -2.6262047290802
    5. ' utilisé' → logprob: -3.3762047290802
    6. 'une' → logprob: -3.3762047290802
    7. ' rarement' → logprob: -4.001204490661621
    8. 'comment' → logprob: -4.251204490661621
    9. '#' → logprob: -4.376204490661621
    10. 'un' → logprob: -4.501204490661621

Token 265: ' module' (ID: 8827)
  Prédit: 'module'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'module' → logprob: -0.183164581656456
    2. 'bibli' → logprob: -2.558164596557617
    3. 'outil' → logprob: -2.683164596557617
    4. 'library' → logprob: -4.683164596557617
    5. ' module' → logprob: -5.058164596557617
    6. 'lib' → logprob: -6.183164596557617
    7. 'package' → logprob: -6.433164596557617
    8. 'import' → logprob: -6.683164596557617
    9. 'pu' → logprob: -8.433164596557617
    10. 'b' → logprob: -8.933164596557617

Token 266: ' utilisé' (ID: 53138)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 267: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 268: ' le' (ID: 505)
  Prédit: ' manip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' manip' → logprob: -1.3096469640731812
    2. ' l' → logprob: -1.6846469640731812
    3. ' les' → logprob: -2.0596470832824707
    4. ' le' → logprob: -2.3096470832824707
    5. 'l' → logprob: -2.6846470832824707
    6. ' la' → logprob: -2.8096470832824707
    7. ' des' → logprob: -3.0596470832824707
    8. 'le' → logprob: -3.6846470832824707
    9. 'la' → logprob: -3.8096470832824707
    10. 'les' → logprob: -3.8096470832824707

Token 269: ' calcul' (ID: 7559)
  Prédit: ' calcul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -1.018328309059143
    2. 'calcul' → logprob: -1.018328309059143
    3. ' traitement' → logprob: -1.393328309059143
    4. 'trait' → logprob: -3.7683281898498535
    5. 'cal' → logprob: -5.3933281898498535
    6. ' data' → logprob: -7.8933281898498535
    7. 'data' → logprob: -8.643328666687012
    8. 'calc' → logprob: -8.643328666687012
    9. 'man' → logprob: -9.393328666687012
    10. ' trait' → logprob: -9.393328666687012

Token 270: ' scientifique' (ID: 110918)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 271: ' sur' (ID: 1512)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 272: ' des' (ID: 731)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.07383736968040466
    2. ' les' → logprob: -3.6988372802734375
    3. 'arrays' → logprob: -3.8238372802734375
    4. 'des' → logprob: -4.3238372802734375
    5. ' des' → logprob: -6.3238372802734375
    6. 'table' → logprob: -6.5738372802734375
    7. ' arrays' → logprob: -6.6988372802734375
    8. 'gr' → logprob: -6.6988372802734375
    9. 'de' → logprob: -6.8238372802734375
    10. 'list' → logprob: -7.0738372802734375

Token 273: ' tableaux' (ID: 176599)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.6455883979797363
    2. 'grand' → logprob: -1.3955883979797363
    3. 'arrays' → logprob: -1.8955883979797363
    4. 'table' → logprob: -3.0205883979797363
    5. ' grandes' → logprob: -4.645588397979736
    6. 'mat' → logprob: -4.770588397979736
    7. ' grands' → logprob: -5.770588397979736
    8. 'array' → logprob: -6.270588397979736
    9. 'list' → logprob: -6.270588397979736
    10. ' grand' → logprob: -6.770588397979736

Token 274: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 275: ' mais' (ID: 2899)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 276: ' il' (ID: 1793)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1498688459396362
    2. ' ici' → logprob: -1.5248688459396362
    3. ' #' → logprob: -1.8998688459396362
    4. ' here' → logprob: -2.524868965148926
    5. ' n' → logprob: -3.524868965148926
    6. 'import' → logprob: -3.524868965148926
    7. '<|end|>' → logprob: -3.524868965148926
    8. ' est' → logprob: -3.774868965148926
    9. ' il' → logprob: -4.024868965148926
    10. ' ' → logprob: -4.274868965148926

Token 277: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.31748539209365845
    2. 'est' → logprob: -2.1924853324890137
    3. ' n' → logprob: -2.6924853324890137
    4. '#' → logprob: -2.8174853324890137
    5. ' is' → logprob: -4.317485332489014
    6. 'n' → logprob: -4.317485332489014
    7. ' reste' → logprob: -6.442485332489014
    8. '<|end|>' → logprob: -6.442485332489014
    9. ' #' → logprob: -6.817485332489014
    10. ''est' → logprob: -7.317485332489014

Token 278: ' comment' (ID: 5375)
  Prédit: 'comment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comment' → logprob: -0.16039331257343292
    2. ' comment' → logprob: -2.785393238067627
    3. ' inutil' → logprob: -3.535393238067627
    4. 'import' → logprob: -4.160393238067627
    5. 'unused' → logprob: -4.785393238067627
    6. ' également' → logprob: -4.910393238067627
    7. ' inutile' → logprob: -5.410393238067627
    8. ' ici' → logprob: -5.785393238067627
    9. ' aussi' → logprob: -5.910393238067627
    10. ' commented' → logprob: -6.285393238067627

Token 279: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.003953848034143448
    2. 'ed' → logprob: -5.62895393371582
    3. '#' → logprob: -8.50395393371582
    4. 'ée' → logprob: -9.00395393371582
    5. 'aire' → logprob: -11.50395393371582
    6. 'ié' → logprob: -11.75395393371582
    7. 'è' → logprob: -13.12895393371582
    8. 'e' → logprob: -13.25395393371582
    9. 'ré' → logprob: -14.12895393371582
    10. 'éd' → logprob: -14.25395393371582

Token 280: ' donc' (ID: 14206)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 281: ' non' (ID: 2893)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 282: ' utilisé' (ID: 53138)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.047621116042137146
    2. ' utilisé' → logprob: -3.172621011734009
    3. 'import' → logprob: -5.672621250152588
    4. 'used' → logprob: -7.547621250152588
    5. '<|end|>' → logprob: -9.04762077331543
    6. ' used' → logprob: -9.29762077331543
    7. ' utilisés' → logprob: -9.79762077331543
    8. ' utilisée' → logprob: -9.79762077331543
    9. '-util' → logprob: -9.79762077331543
    10. ' utilisées' → logprob: -9.92262077331543

Token 283: ' ici' (ID: 27994)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 284: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 285: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 286: ' from' (ID: 591)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1704099476337433
    2. 'import' → logprob: -2.420409917831421
    3. '#' → logprob: -4.17041015625
    4. 'class' → logprob: -4.29541015625
    5. 'from' → logprob: -4.29541015625
    6. '
' → logprob: -4.79541015625
    7. '<|end|>' → logprob: -4.92041015625
    8. 'n' → logprob: -5.79541015625
    9. '\n' → logprob: -6.17041015625
    10. '<|end|>' → logprob: -7.17041015625

Token 287: ' collections' (ID: 22690)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.8265833854675293
    2. ' collections' → logprob: -1.0765833854675293
    3. ' heap' → logprob: -1.9515833854675293
    4. ' typing' → logprob: -2.7015833854675293
    5. 'collections' → logprob: -5.076583385467529
    6. ' itertools' → logprob: -5.951583385467529
    7. ' functools' → logprob: -6.701583385467529
    8. ' sys' → logprob: -7.201583385467529
    9. 'heap' → logprob: -7.326583385467529
    10. 'math' → logprob: -7.951583385467529

Token 288: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3890899121761322
    2. ' import' → logprob: -1.1390899419784546
    3. '_import' → logprob: -6.639090061187744
    4. 'collections' → logprob: -7.764090061187744
    5. ' collections' → logprob: -8.764089584350586
    6. ' sys' → logprob: -9.889089584350586
    7. ' math' → logprob: -9.889089584350586
    8. '_' → logprob: -10.139089584350586
    9. ' itertools' → logprob: -10.514089584350586
    10. ' functools' → logprob: -10.639089584350586

Token 289: ' deque' (ID: 90347)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.01761469803750515
    2. 'default' → logprob: -4.892614841461182
    3. ' Counter' → logprob: -5.142614841461182
    4. 'Counter' → logprob: -5.642614841461182
    5. 'named' → logprob: -8.517614364624023
    6. ' named' → logprob: -8.642614364624023
    7. ' deque' → logprob: -9.642614364624023
    8. 'deque' → logprob: -10.392614364624023
    9. 'abc' → logprob: -10.517614364624023
    10. 'import' → logprob: -10.642614364624023

Token 290: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 291: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 292: ' Comment' (ID: 15406)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.40578314661979675
    2. '<|end|>' → logprob: -1.1557831764221191
    3. ' 
' → logprob: -5.155783176422119
    4. '<|end|>' → logprob: -5.530783176422119
    5. '#' → logprob: -5.780783176422119
    6. 'import' → logprob: -6.405783176422119
    7. ' #' → logprob: -7.155783176422119
    8. ' 

' → logprob: -7.280783176422119
    9. 'def' → logprob: -7.780783176422119
    10. 'n' → logprob: -7.905783176422119

Token 293: 'é' (ID: 377)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.45858579874038696
    2. 'é' → logprob: -1.2085857391357422
    3. 'ed' → logprob: -2.958585739135742
    4. 'ée' → logprob: -4.208585739135742
    5. '<|end|>' → logprob: -7.458585739135742
    6. 'aire' → logprob: -7.583585739135742
    7. '#index' → logprob: -8.083585739135742
    8. '#import' → logprob: -8.458585739135742
    9. 'e' → logprob: -8.458585739135742
    10. 'import' → logprob: -9.208585739135742

Token 294: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 295: ' doubl' (ID: 127992)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 296: 'on' (ID: 263)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.4934844970703125
    2. 'ée' → logprob: -1.1184844970703125
    3. 'e' → logprob: -2.9934844970703125
    4. 'ed' → logprob: -4.7434844970703125
    5. 'ee' → logprob: -6.9934844970703125
    6. 'import' → logprob: -7.1184844970703125
    7. 'onnée' → logprob: -7.4934844970703125
    8. 'on' → logprob: -7.7434844970703125
    9. '#' → logprob: -7.8684844970703125
    10. 'onné' → logprob: -8.618484497070312

Token 297: ' avec' (ID: 3937)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2675178349018097
    2. '<|end|>' → logprob: -1.7675178050994873
    3. '

' → logprob: -3.6425178050994873
    4. '\n' → logprob: -4.517518043518066
    5. 'def' → logprob: -4.767518043518066
    6. '#' → logprob: -5.017518043518066
    7. '' → logprob: -5.767518043518066
    8. ' ' → logprob: -6.267518043518066
    9. 'import' → logprob: -6.642518043518066
    10. '<|end|>' → logprob: -6.892518043518066

Token 298: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.9056726098060608
    2. 'la' → logprob: -0.9056726098060608
    3. 'l' → logprob: -2.280672550201416
    4. 'celle' → logprob: -3.780672550201416
    5. ' celle' → logprob: -3.905672550201416
    6. '<|end|>' → logprob: -4.405672550201416
    7. 'import' → logprob: -4.530672550201416
    8. ' l' → logprob: -4.530672550201416
    9. 'the' → logprob: -5.280672550201416
    10. 'une' → logprob: -6.155672550201416

Token 299: ' ligne' (ID: 19583)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.0298068523406982
    2. 'ligne' → logprob: -1.5298068523406982
    3. 'prem' → logprob: -1.5298068523406982
    4. ' ligne' → logprob: -2.4048068523406982
    5. 'previous' → logprob: -3.4048068523406982
    6. ' précédente' → logprob: -3.6548068523406982
    7. 'from' → logprob: -4.154807090759277
    8. 'line' → logprob: -4.654807090759277
    9. ' première' → logprob: -4.779807090759277
    10. 'dé' → logprob: -5.279807090759277

Token 300: ' plus' (ID: 2932)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2613737881183624
    2. '<|end|>' → logprob: -1.88637375831604
    3. '

' → logprob: -2.88637375831604
    4. '\n' → logprob: -4.886373996734619
    5. '<|end|>' → logprob: -5.511373996734619
    6. 'def' → logprob: -5.761373996734619
    7. 'import' → logprob: -6.136373996734619
    8. '' → logprob: -6.636373996734619
    9. '\' → logprob: -7.386373996734619
    10. ' ' → logprob: -7.511373996734619

Token 301: ' haut' (ID: 28223)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 302: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 303: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 304: ' map' (ID: 4014)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4442233443260193
    2. '
' → logprob: -2.194223403930664
    3. '<|end|>' → logprob: -2.694223403930664
    4. '#' → logprob: -3.069223403930664
    5. '\n' → logprob: -3.319223403930664
    6. '\' → logprob: -3.944223403930664
    7. 'd' → logprob: -4.069223403930664
    8. '

' → logprob: -4.194223403930664
    9. 'import' → logprob: -4.569223403930664
    10. '' → logprob: -5.194223403930664

Token 305: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0020077454391866922
    2. '<|end|>' → logprob: -7.877007961273193
    3. '(
' → logprob: -8.127007484436035
    4. ' (' → logprob: -8.252007484436035
    5. '[' → logprob: -8.627007484436035
    6. '(lambda' → logprob: -8.877007484436035
    7. 'a' → logprob: -9.127007484436035
    8. ')' → logprob: -9.502007484436035
    9. ',' → logprob: -9.627007484436035
    10. '.' → logprob: -9.752007484436035

Token 306: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006654503755271435
    2. '(' → logprob: -6.131654739379883
    3. '<|end|>' → logprob: -6.256654739379883
    4. ')(' → logprob: -6.506654739379883
    5. ',' → logprob: -8.131654739379883
    6. '(sys' → logprob: -8.881654739379883
    7. '<|end|>' → logprob: -9.381654739379883
    8. ')(
' → logprob: -9.506654739379883
    9. '[' → logprob: -9.631654739379883
    10. ' )' → logprob: -9.881654739379883

Token 307: ' sys' (ID: 12228)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8757171630859375
    2. 'sys' → logprob: -1.5007171630859375
    3. 'input' → logprob: -1.6257171630859375
    4. ' sys' → logprob: -2.8757171630859375
    5. '<|end|>' → logprob: -3.7507171630859375
    6. 'range' → logprob: -3.8757171630859375
    7. ' input' → logprob: -3.8757171630859375
    8. '(sys' → logprob: -4.5007171630859375
    9. '[' → logprob: -4.7507171630859375
    10. ' )' → logprob: -5.5007171630859375

Token 308: '.stdin' (ID: 93480)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07263942062854767
    2. '(' → logprob: -3.3226394653320312
    3. '.readline' → logprob: -4.572639465332031
    4. '(sys' → logprob: -4.697639465332031
    5. '().' → logprob: -4.947639465332031
    6. '())' → logprob: -6.072639465332031
    7. '.' → logprob: -6.947639465332031
    8. '.stdin' → logprob: -7.447639465332031
    9. '(stdin' → logprob: -7.572639465332031
    10. '(argv' → logprob: -7.697639465332031

Token 309: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.01508287526667118
    2. ')' → logprob: -4.765082836151123
    3. '.read' → logprob: -5.640082836151123
    4. '.readlines' → logprob: -5.890082836151123
    5. '.' → logprob: -9.640083312988281
    6. '().' → logprob: -10.515083312988281
    7. '())' → logprob: -11.015083312988281
    8. '.write' → logprob: -12.015083312988281
    9. '.)' → logprob: -12.640083312988281
    10. '.stdin' → logprob: -13.015083312988281

Token 310: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.012769903987646103
    2. '())' → logprob: -4.38776969909668
    3. '()' → logprob: -9.13776969909668
    4. ')' → logprob: -9.51276969909668
    5. '()))' → logprob: -9.63776969909668
    6. 'line' → logprob: -12.13776969909668
    7. '(' → logprob: -13.01276969909668
    8. '))' → logprob: -13.01276969909668
    9. 'lines' → logprob: -14.38776969909668
    10. '()).' → logprob: -14.51276969909668

Token 311: 'split' (ID: 13627)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.1156034991145134
    2. 'split' → logprob: -2.240603446960449
    3. ')' → logprob: -5.990603446960449
    4. '())' → logprob: -9.11560344696045
    5. 'strip' → logprob: -9.61560344696045
    6. 'rstrip' → logprob: -9.99060344696045
    7. 'decode' → logprob: -10.49060344696045
    8. '()' → logprob: -11.61560344696045
    9. ' readline' → logprob: -12.49060344696045
    10. 'write' → logprob: -13.24060344696045

Token 312: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.026940245181322098
    2. ')' → logprob: -4.27694034576416
    3. '()' → logprob: -4.52694034576416
    4. '()))' → logprob: -6.65194034576416
    5. '))' → logprob: -8.02694034576416
    6. '(' → logprob: -8.52694034576416
    7. ' ())' → logprob: -10.65194034576416
    8. '()]' → logprob: -11.40194034576416
    9. '())
' → logprob: -11.77694034576416
    10. '())))' → logprob: -12.65194034576416

Token 313: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 314: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 315: ' Cette' (ID: 27383)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.551273226737976
    2. '<|end|>' → logprob: -1.676273226737976
    3. 'def' → logprob: -2.0512733459472656
    4. '
' → logprob: -2.1762733459472656
    5. 'import' → logprob: -2.4262733459472656
    6. 'n' → logprob: -2.8012733459472656
    7. 'data' → logprob: -3.0512733459472656
    8. 'input' → logprob: -3.3012733459472656
    9. '\' → logprob: -3.3012733459472656
    10. '#' → logprob: -3.5512733459472656

Token 316: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.6485149264335632
    2. ' line' → logprob: -1.648514986038208
    3. '#' → logprob: -2.398514986038208
    4. '()' → logprob: -2.648514986038208
    5. 'ligne' → logprob: -2.898514986038208
    6. ')' → logprob: -4.148514747619629
    7. ' #' → logprob: -4.523514747619629
    8. 'line' → logprob: -5.023514747619629
    9. ' code' → logprob: -5.523514747619629
    10. ' )' → logprob: -5.648514747619629

Token 317: ' seule' (ID: 41983)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 318: ' ne' (ID: 453)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 319: ' fait' (ID: 7473)
  Prédit: ' fait'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fait' → logprob: -0.6082644462585449
    2. 'fait' → logprob: -1.358264446258545
    3. '#' → logprob: -2.858264446258545
    4. 'f' → logprob: -3.733264446258545
    5. ' suffit' → logprob: -3.858264446258545
    6. 'est' → logprob: -4.108264446258545
    7. 's' → logprob: -4.483264446258545
    8. 'sert' → logprob: -4.858264446258545
    9. 'do' → logprob: -4.983264446258545
    10. 'pas' → logprob: -5.233264446258545

Token 320: ' rien' (ID: 23082)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.018017886206507683
    2. ' rien' → logprob: -4.143017768859863
    3. 'pas' → logprob: -6.268017768859863
    4. 'ri' → logprob: -10.268017768859863
    5. ' pas' → logprob: -11.643017768859863
    6. 'quoi' → logprob: -12.018017768859863
    7. '_r' → logprob: -12.268017768859863
    8. 'sens' → logprob: -12.268017768859863
    9. 'strict' → logprob: -12.643017768859863
    10. 'ra' → logprob: -13.018017768859863

Token 321: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 322: ' elle' (ID: 11451)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 323: ' ill' (ID: 6486)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.06920374929904938
    2. '<|end|>' → logprob: -3.1942038536071777
    3. ' n' → logprob: -5.069203853607178
    4. ' #' → logprob: -5.569203853607178
    5. ' is' → logprob: -5.819203853607178
    6. '.' → logprob: -6.444203853607178
    7. ' pass' → logprob: -6.569203853607178
    8. ' continue' → logprob: -6.819203853607178
    9. 'pass' → logprob: -6.944203853607178
    10. '<|end|>' → logprob: -7.069203853607178

Token 324: 'ustre' (ID: 115206)
  Prédit: 'ustre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ustre' → logprob: -0.07953889667987823
    2. 'é' → logprob: -3.0795388221740723
    3. 'uminate' → logprob: -5.204538822174072
    4. 'umine' → logprob: -5.204538822174072
    5. 'e' → logprob: -5.829538822174072
    6. 'ustr' → logprob: -6.079538822174072
    7. 'ex' → logprob: -6.454538822174072
    8. 'u' → logprob: -6.454538822174072
    9. 'ust' → logprob: -6.704538822174072
    10. 'um' → logprob: -6.829538822174072

Token 325: ' peut' (ID: 9216)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 326: '-être' (ID: 33599)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.7011187076568604
    2. ' pas' → logprob: -0.9511187076568604
    3. 'e' → logprob: -3.2011187076568604
    4. ' rien' → logprob: -4.076118469238281
    5. 'import' → logprob: -4.451118469238281
    6. 'a' → logprob: -4.701118469238281
    7. 'u' → logprob: -5.701118469238281
    8. 'place' → logprob: -5.701118469238281
    9. '#' → logprob: -6.076118469238281
    10. 'def' → logprob: -6.451118469238281

Token 327: ' une' (ID: 2463)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 328: ' manière' (ID: 35013)
  Prédit: 'tech'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tech' → logprob: -1.0688742399215698
    2. 'possible' → logprob: -1.4438742399215698
    3. 'man' → logprob: -2.1938743591308594
    4. 'mé' → logprob: -2.4438743591308594
    5. 'usage' → logprob: -2.6938743591308594
    6. 'concept' → logprob: -3.3188743591308594
    7. '#' → logprob: -3.6938743591308594
    8. 'pattern' → logprob: -4.443874359130859
    9. 'm' → logprob: -4.568874359130859
    10. 'poss' → logprob: -4.693874359130859

Token 329: ' commune' (ID: 54652)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 330: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 331: ' lire' (ID: 46082)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.11114747822284698
    2. ' lire' → logprob: -2.986147403717041
    3. 'r' → logprob: -4.111147403717041
    4. 'parser' → logprob: -4.361147403717041
    5. 'read' → logprob: -5.736147403717041
    6. 'charger' → logprob: -6.486147403717041
    7. 'pré' → logprob: -6.486147403717041
    8. 'lit' → logprob: -6.611147403717041
    9. 'transform' → logprob: -6.611147403717041
    10. 'cons' → logprob: -6.611147403717041

Token 332: ' des' (ID: 731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 333: ' ent' (ID: 1121)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.570734441280365
    2. ' données' → logprob: -0.945734441280365
    3. 'ent' → logprob: -3.8207345008850098
    4. 'l' → logprob: -4.94573450088501
    5. 'don' → logprob: -5.32073450088501
    6. 'input' → logprob: -6.07073450088501
    7. 'data' → logprob: -6.07073450088501
    8. 'entrée' → logprob: -6.44573450088501
    9. 'n' → logprob: -6.94573450088501
    10. 'inputs' → logprob: -7.07073450088501

Token 334: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.23249146342277527
    2. 'ières' → logprob: -2.8574914932250977
    3. 'rée' → logprob: -3.2324914932250977
    4. 'ires' → logprob: -3.2324914932250977
    5. 'r' → logprob: -3.3574914932250977
    6. 'rees' → logprob: -3.6074914932250977
    7. 'rès' → logprob: -5.857491493225098
    8. 't' → logprob: -6.482491493225098
    9. 'ées' → logprob: -7.232491493225098
    10. 'êtes' → logprob: -7.232491493225098

Token 335: ' depuis' (ID: 16277)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 336: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.10610786825418472
    2. 'sys' → logprob: -3.6061079502105713
    3. 'input' → logprob: -3.8561079502105713
    4. ' l' → logprob: -3.9811079502105713
    5. 'stdin' → logprob: -4.106107711791992
    6. 'standard' → logprob: -5.606107711791992
    7. ' stdin' → logprob: -5.606107711791992
    8. '<|end|>' → logprob: -6.106107711791992
    9. ' standard' → logprob: -6.231107711791992
    10. ' sys' → logprob: -6.481107711791992

Token 337: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.36026233434677124
    2. 'stdin' → logprob: -2.485262393951416
    3. 'input' → logprob: -2.610262393951416
    4. 'entrée' → logprob: -2.860262393951416
    5. 'a' → logprob: -3.360262393951416
    6. 'e' → logprob: -3.860262393951416
    7. 'es' → logprob: -4.735262393951416
    8. ' stdin' → logprob: -5.360262393951416
    9. 'sys' → logprob: -5.485262393951416
    10. '(stdin' → logprob: -5.860262393951416

Token 338: ' standard' (ID: 7024)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 339: '.

' (ID: 364)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 340: 'import' (ID: 561)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 341: ' itertools' (ID: 103178)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.94577556848526
    2. ' os' → logprob: -1.4457755088806152
    3. ' collections' → logprob: -1.6957755088806152
    4. ' sys' → logprob: -1.6957755088806152
    5. ' itertools' → logprob: -5.070775508880615
    6. ' io' → logprob: -7.570775508880615
    7. 'collections' → logprob: -7.695775508880615
    8. ' random' → logprob: -7.695775508880615
    9. ' ' → logprob: -8.070775985717773
    10. ' ' → logprob: -8.570775985717773

Token 342: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 343: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 344: ' Le' (ID: 2018)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 345: ' module' (ID: 8827)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.01775863952934742
    2. ' module' → logprob: -4.892758846282959
    3. ' code' → logprob: -5.517758846282959
    4. 'it' → logprob: -5.892758846282959
    5. ' import' → logprob: -7.517758846282959
    6. ' sys' → logprob: -7.767758846282959
    7. ' ' → logprob: -8.0177583694458
    8. ' system' → logprob: -8.1427583694458
    9. ' next' → logprob: -8.1427583694458
    10. 'import' → logprob: -8.3927583694458

Token 346: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.4049660265445709
    2. '<|end|>' → logprob: -1.1549659967422485
    3. 'it' → logprob: -4.904965877532959
    4. 'import' → logprob: -5.654965877532959
    5. '<|end|>' → logprob: -6.404965877532959
    6. 'ertools' → logprob: -6.529965877532959
    7. ' import' → logprob: -7.029965877532959
    8. ' is' → logprob: -7.279965877532959
    9. ' ' → logprob: -7.779965877532959
    10. 'collections' → logprob: -7.779965877532959

Token 347: ' contient' (ID: 89067)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 348: ' divers' (ID: 10474)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.11918951570987701
    2. 'des' → logprob: -2.244189500808716
    3. ' diverses' → logprob: -6.494189739227295
    4. 'a' → logprob: -6.869189739227295
    5. '<|end|>' → logprob: -7.369189739227295
    6. ' de' → logprob: -7.619189739227295
    7. ' plusieurs' → logprob: -7.619189739227295
    8. 's' → logprob: -7.869189739227295
    9. 'un' → logprob: -8.119189262390137
    10. ' un' → logprob: -8.619189262390137

Token 349: ' outils' (ID: 63365)
  Prédit: ' outils'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' outils' → logprob: -0.628695547580719
    2. 'out' → logprob: -1.0036954879760742
    3. 'tools' → logprob: -2.503695487976074
    4. 'outil' → logprob: -5.378695487976074
    5. ' tools' → logprob: -5.503695487976074
    6. 'it' → logprob: -5.503695487976074
    7. ' out' → logprob: -5.753695487976074
    8. 'ertools' → logprob: -7.253695487976074
    9. 's' → logprob: -8.628695487976074
    10. 'utils' → logprob: -8.753695487976074

Token 350: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 351: ' manip' (ID: 20526)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.1911810338497162
    2. ' créer' → logprob: -2.691180944442749
    3. ' l' → logprob: -3.566180944442749
    4. ' travailler' → logprob: -3.941180944442749
    5. 'iterator' → logprob: -4.816181182861328
    6. ' les' → logprob: -5.066181182861328
    7. ' des' → logprob: -5.191181182861328
    8. 'la' → logprob: -5.191181182861328
    9. ' la' → logprob: -5.316181182861328
    10. 'les' → logprob: -5.441181182861328

Token 352: 'uler' (ID: 11802)
  Prédit: 'uler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uler' → logprob: -0.008741740137338638
    2. 'ulations' → logprob: -5.133741855621338
    3. 'ulation' → logprob: -6.508741855621338
    4. 'er' → logprob: -7.133741855621338
    5. '```' → logprob: -8.63374137878418
    6. 'ulator' → logprob: -9.25874137878418
    7. 'import' → logprob: -9.38374137878418
    8. 'érer' → logprob: -10.38374137878418
    9. 'iter' → logprob: -11.38374137878418
    10. ' ' → logprob: -11.38374137878418

Token 353: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.009743336588144302
    2. ' les' → logprob: -5.8847432136535645
    3. ' iter' → logprob: -6.1347432136535645
    4. 'it' → logprob: -6.5097432136535645
    5. 'des' → logprob: -6.8847432136535645
    6. 'iter' → logprob: -6.8847432136535645
    7. ' it' → logprob: -7.8847432136535645
    8. '<|end|>' → logprob: -8.134743690490723
    9. 'les' → logprob: -8.509743690490723
    10. 's' → logprob: -9.384743690490723

Token 354: ' it' (ID: 480)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.35206329822540283
    2. 'iter' → logprob: -1.2270632982254028
    3. ' it' → logprob: -6.477063179016113
    4. 'itera' → logprob: -7.102063179016113
    5. ' iter' → logprob: -8.227063179016113
    6. 'collections' → logprob: -8.227063179016113
    7. 'iters' → logprob: -8.977063179016113
    8. 'iterator' → logprob: -9.602063179016113
    9. 'itin' → logprob: -9.852063179016113
    10. 'It' → logprob: -9.852063179016113

Token 355: 'ér' (ID: 2156)
  Prédit: 'ér'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ér' → logprob: -0.2232724279165268
    2. 'er' → logprob: -1.848272442817688
    3. 'ertools' → logprob: -3.2232723236083984
    4. 'érations' → logprob: -6.098272323608398
    5. 'tools' → logprob: -8.973272323608398
    6. '{' → logprob: -9.348272323608398
    7. '�r' → logprob: -9.473272323608398
    8. 'err' → logprob: -10.848272323608398
    9. '
' → logprob: -10.848272323608398
    10. '%C' → logprob: -11.098272323608398

Token 356: 'ateurs' (ID: 19727)
  Prédit: 'tools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tools' → logprob: -1.1191450357437134
    2. 'ertools' → logprob: -1.3691450357437134
    3. 'ables' → logprob: -1.6191450357437134
    4. 'r' → logprob: -1.6191450357437134
    5. 'er' → logprob: -4.494144916534424
    6. 'ools' → logprob: -4.869144916534424
    7. 'bles' → logprob: -6.494144916534424
    8. 'ateurs' → logprob: -7.369144916534424
    9. 'tables' → logprob: -7.619144916534424
    10. 'ar' → logprob: -7.994144916534424

Token 357: ' (' (ID: 350)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.60019850730896
    2. '<|end|>' → logprob: -0.97519850730896
    3. 'import' → logprob: -3.47519850730896
    4. '\n' → logprob: -4.350198745727539
    5. '
' → logprob: -4.975198745727539
    6. '<|end|>' → logprob: -5.350198745727539
    7. '\' → logprob: -5.600198745727539
    8. ',' → logprob: -5.725198745727539
    9. '#' → logprob: -5.850198745727539
    10. 'newline' → logprob: -6.475198745727539

Token 358: 'per' (ID: 543)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.047670841217041
    2. ')' → logprob: -1.297670841217041
    3. ' en' → logprob: -1.547670841217041
    4. 'import' → logprob: -2.422670841217041
    5. ' )' → logprob: -3.422670841217041
    6. ' ,' → logprob: -4.422670841217041
    7. ' et' → logprob: -5.047670841217041
    8. 'en' → logprob: -5.547670841217041
    9. ' it' → logprob: -5.672670841217041
    10. 's' → logprob: -6.172670841217041

Token 359: 'mut' (ID: 10522)
  Prédit: 'tools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tools' → logprob: -0.007973306812345982
    2. 'r' → logprob: -5.8829731941223145
    3. 'ertools' → logprob: -5.8829731941223145
    4. 'ools' → logprob: -7.0079731941223145
    5. 'ables' → logprob: -7.8829731941223145
    6. 'ations' → logprob: -8.132973670959473
    7. 'tool' → logprob: -8.257973670959473
    8. 'm' → logprob: -9.132973670959473
    9. 'Tools' → logprob: -10.007973670959473
    10. '```' → logprob: -10.007973670959473

Token 360: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.3069145977497101
    2. 'ools' → logprob: -1.8069145679473877
    3. 'tools' → logprob: -2.5569145679473877
    4. 'ertools' → logprob: -3.9319145679473877
    5. 'ool' → logprob: -6.431914806365967
    6. 's' → logprob: -7.556914806365967
    7. 't' → logprob: -8.056914329528809
    8. 'tool' → logprob: -8.431914329528809
    9. 'utations' → logprob: -9.431914329528809
    10. 'import' → logprob: -10.556914329528809

Token 361: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006160548073239625
    2. 's' → logprob: -8.750616073608398
    3. 'import' → logprob: -8.750616073608398
    4. ')' → logprob: -9.000616073608398
    5. ' ,' → logprob: -9.750616073608398
    6. ',
' → logprob: -10.500616073608398
    7. ',s' → logprob: -10.500616073608398
    8. ',)' → logprob: -11.125616073608398
    9. ',it' → logprob: -12.250616073608398
    10. ',...' → logprob: -12.500616073608398

Token 362: ' produits' (ID: 23489)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.5819543600082397
    2. ' combinations' → logprob: -0.8319543600082397
    3. 'comb' → logprob: -6.081954479217529
    4. ' combin' → logprob: -6.206954479217529
    5. ' comb' → logprob: -6.706954479217529
    6. ' chain' → logprob: -8.831954002380371
    7. 'chain' → logprob: -9.581954002380371
    8. ' cycles' → logprob: -10.331954002380371
    9. ' ' → logprob: -10.456954002380371
    10. ' product' → logprob: -10.581954002380371

Token 363: ' cart' (ID: 8149)
  Prédit: 'cart'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cart' → logprob: -0.09141634404659271
    2. ',' → logprob: -2.716416358947754
    3. '_cart' → logprob: -4.091416358947754
    4. ' cart' → logprob: -5.591416358947754
    5. '(cart' → logprob: -8.341416358947754
    6. ' cartes' → logprob: -8.716416358947754
    7. 'Cartesian' → logprob: -9.091416358947754
    8. ' Cartesian' → logprob: -9.216416358947754
    9. '.cart' → logprob: -10.216416358947754
    10. ' ,' → logprob: -10.466416358947754

Token 364: 'és' (ID: 1756)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.2445654571056366
    2. 'és' → logprob: -1.869565486907959
    3. 'esian' → logprob: -2.869565486907959
    4. 'esion' → logprob: -5.744565486907959
    5. 'esi' → logprob: -6.619565486907959
    6. 'é' → logprob: -7.244565486907959
    7. 'esia' → logprob: -8.1195650100708
    8. 'ési' → logprob: -9.1195650100708
    9. ' itertools' → logprob: -9.2445650100708
    10. 'ésie' → logprob: -10.1195650100708

Token 365: 'iens' (ID: 64394)
  Prédit: 'és'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.515533447265625
    2. 'ien' → logprob: -1.515533447265625
    3. 'iens' → logprob: -1.765533447265625
    4. 'es' → logprob: -5.515533447265625
    5. 'ian' → logprob: -6.390533447265625
    6. 'esi' → logprob: -6.765533447265625
    7. 'ési' → logprob: -7.015533447265625
    8. 'esian' → logprob: -7.515533447265625
    9. 'ién' → logprob: -7.515533447265625
    10. '_product' → logprob: -7.640533447265625

Token 366: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02674597129225731
    2. ')' → logprob: -3.6517460346221924
    3. 'import' → logprob: -8.276745796203613
    4. '...)' → logprob: -9.401745796203613
    5. ',)' → logprob: -10.651745796203613
    6. ' ,' → logprob: -11.026745796203613
    7. ',...' → logprob: -11.651745796203613
    8. ').' → logprob: -11.776745796203613
    9. 'et' → logprob: -11.901745796203613
    10. ' )' → logprob: -12.151745796203613

Token 367: ' etc' (ID: 5178)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.11027432233095169
    2. 'comb' → logprob: -2.735274314880371
    3. ' combinations' → logprob: -3.610274314880371
    4. ' comb' → logprob: -4.985274314880371
    5. 'chain' → logprob: -6.235274314880371
    6. ' combin' → logprob: -6.485274314880371
    7. 'group' → logprob: -7.610274314880371
    8. ' ' → logprob: -8.235274314880371
    9. 'cycles' → logprob: -8.610274314880371
    10. ' chain' → logprob: -8.610274314880371

Token 368: '.),' (ID: 36196)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008515591034665704
    2. ',' → logprob: -7.375851631164551
    3. 'import' → logprob: -8.87585163116455
    4. ' )' → logprob: -9.75085163116455
    5. '`)' → logprob: -11.50085163116455
    6. ').' → logprob: -12.62585163116455
    7. ')
' → logprob: -13.12585163116455
    8. '.' → logprob: -13.12585163116455
    9. '...)' → logprob: -13.87585163116455
    10. '#' → logprob: -13.87585163116455

Token 369: ' mais' (ID: 2899)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07378676533699036
    2. ' itertools' → logprob: -3.948786735534668
    3. ' 
' → logprob: -4.198786735534668
    4. 'import' → logprob: -4.573786735534668
    5. '<|end|>' → logprob: -4.823786735534668
    6. ' sys' → logprob: -5.573786735534668
    7. ' as' → logprob: -6.323786735534668
    8. ' import' → logprob: -7.073786735534668
    9. '#' → logprob: -7.323786735534668
    10. ' os' → logprob: -7.323786735534668

Token 370: ' il' (ID: 1793)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07736823707818985
    2. '#' → logprob: -3.4523682594299316
    3. '<|end|>' → logprob: -3.8273682594299316
    4. ' #' → logprob: -5.202368259429932
    5. ' ' → logprob: -5.202368259429932
    6. ' not' → logprob: -6.452368259429932
    7. ' rien' → logprob: -6.577368259429932
    8. ' no' → logprob: -6.952368259429932
    9. ' a' → logprob: -7.202368259429932
    10. ' nothing' → logprob: -7.577368259429932

Token 371: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0626215860247612
    2. 'n' → logprob: -2.937621593475342
    3. ' est' → logprob: -5.562621593475342
    4. 'est' → logprob: -6.062621593475342
    5. '#' → logprob: -6.812621593475342
    6. ''est' → logprob: -9.187621116638184
    7. ' semble' → logprob: -9.437621116638184
    8. ' #' → logprob: -9.937621116638184
    9. ' is' → logprob: -10.312621116638184
    10. 'n't' → logprob: -10.437621116638184

Token 372: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.09182284027338028
    2. 'n' → logprob: -3.216822862625122
    3. ''' → logprob: -3.841822862625122
    4. 'est' → logprob: -4.341822624206543
    5. 'e' → logprob: -4.966822624206543
    6. '#' → logprob: -6.091822624206543
    7. ' n' → logprob: -6.591822624206543
    8. ''a' → logprob: -7.841822624206543
    9. '’est' → logprob: -7.966822624206543
    10. ' est' → logprob: -8.091822624206543

Token 373: ' pas' (ID: 2173)
  Prédit: ' utilisé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisé' → logprob: -1.033715844154358
    2. ' pas' → logprob: -1.283715844154358
    3. 'pas' → logprob: -1.658715844154358
    4. 'import' → logprob: -2.7837157249450684
    5. 'util' → logprob: -3.4087157249450684
    6. ' not' → logprob: -3.9087157249450684
    7. 'unused' → logprob: -4.408715724945068
    8. 'not' → logprob: -5.158715724945068
    9. ' unused' → logprob: -5.158715724945068
    10. ' import' → logprob: -5.158715724945068

Token 374: ' utilisé' (ID: 53138)
  Prédit: ' utilisé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisé' → logprob: -0.37867608666419983
    2. 'util' → logprob: -1.2536760568618774
    3. ' used' → logprob: -4.753675937652588
    4. 'used' → logprob: -5.003675937652588
    5. ' utilisés' → logprob: -5.753675937652588
    6. 'explicit' → logprob: -5.878675937652588
    7. ' utilisées' → logprob: -6.253675937652588
    8. ' utilisée' → logprob: -6.503675937652588
    9. ' utilized' → logprob: -6.628675937652588
    10. 'import' → logprob: -7.003675937652588

Token 375: ' dans' (ID: 2671)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 376: ' ce' (ID: 2357)
  Prédit: 'ce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ce' → logprob: -0.9097574353218079
    2. 'le' → logprob: -1.284757375717163
    3. ' ce' → logprob: -1.409757375717163
    4. 'cet' → logprob: -2.909757375717163
    5. 'this' → logprob: -4.534757614135742
    6. 'c' → logprob: -5.534757614135742
    7. ' le' → logprob: -5.659757614135742
    8. 'la' → logprob: -6.284757614135742
    9. 'l' → logprob: -7.784757614135742
    10. ' this' → logprob: -7.784757614135742

Token 377: ' script' (ID: 11713)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.10097560286521912
    2. ' code' → logprob: -2.350975513458252
    3. '#' → logprob: -7.600975513458252
    4. '_code' → logprob: -9.22597599029541
    5. '```' → logprob: -9.72597599029541
    6. 'suite' → logprob: -10.35097599029541
    7. 'script' → logprob: -10.85097599029541
    8. 'prés' → logprob: -11.72597599029541
    9. 's' → logprob: -12.47597599029541
    10. 'scode' → logprob: -12.72597599029541

Token 378: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 379: 'import' (ID: 561)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3031693696975708
    2. 'n' → logprob: -2.0531692504882812
    3. '\n' → logprob: -3.0531692504882812
    4. 'import' → logprob: -3.5531692504882812
    5. '#' → logprob: -4.553169250488281
    6. 'data' → logprob: -4.803169250488281
    7. '<|end|>' → logprob: -4.803169250488281
    8. 'a' → logprob: -4.928169250488281
    9. 'print' → logprob: -5.428169250488281
    10. '<|end|>' → logprob: -5.928169250488281

Token 380: ' heap' (ID: 37237)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.07639893889427185
    2. 'os' → logprob: -2.8263988494873047
    3. 'collections' → logprob: -5.076398849487305
    4. ' math' → logprob: -5.326398849487305
    5. 'heap' → logprob: -6.951398849487305
    6. 'sys' → logprob: -7.201398849487305
    7. 'thread' → logprob: -7.326398849487305
    8. 'time' → logprob: -8.076398849487305
    9. 'random' → logprob: -9.201398849487305
    10. 're' → logprob: -9.201398849487305

Token 381: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.9361264946837764e-07
    2. 'queue' → logprob: -16.625
    3. 'dict' → logprob: -18.875
    4. 'n' → logprob: -19.125
    5. 'u' → logprob: -20.0
    6. 'que' → logprob: -20.125
    7. '<|end|>' → logprob: -20.125
    8. ' queue' → logprob: -20.5
    9. 't' → logprob: -20.5
    10. 'lib' → logprob: -20.625

Token 382: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 383: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 384: ' heap' (ID: 37237)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.028628256171941757
    2. ' heap' → logprob: -4.528628349304199
    3. '<|end|>' → logprob: -4.653628349304199
    4. 'heap' → logprob: -5.528628349304199
    5. ' 
' → logprob: -6.403628349304199
    6. '  
' → logprob: -7.278628349304199
    7. ' #' → logprob: -7.903628349304199
    8. ' ' → logprob: -8.1536283493042
    9. '  ' → logprob: -8.4036283493042
    10. '#' → logprob: -8.7786283493042

Token 385: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -9.014684110297821e-06
    2. '.' → logprob: -11.750008583068848
    3. '#' → logprob: -15.250008583068848
    4. ',' → logprob: -15.375008583068848
    5. '[' → logprob: -15.500008583068848
    6. '<|end|>' → logprob: -15.750008583068848
    7. ' ' → logprob: -16.750009536743164
    8. ' queue' → logprob: -17.000009536743164
    9. 'queue' → logprob: -17.125009536743164
    10. ')' → logprob: -17.750009536743164

Token 386: ' donne' (ID: 30004)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6016318798065186
    2. '<|end|>' → logprob: -0.8516318798065186
    3. ' #' → logprob: -4.351632118225098
    4. ' as' → logprob: -5.601632118225098
    5. 'import' → logprob: -5.851632118225098
    6. '<|end|>' → logprob: -5.976632118225098
    7. '#' → logprob: -6.726632118225098
    8. ' import' → logprob: -7.226632118225098
    9. '.' → logprob: -8.101632118225098
    10. '  ' → logprob: -8.226632118225098

Token 387: ' accès' (ID: 65948)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.1762961596250534
    2. ' accès' → logprob: -2.1762962341308594
    3. ' une' → logprob: -3.6762962341308594
    4. 'des' → logprob: -4.926296234130859
    5. ' un' → logprob: -5.051296234130859
    6. ' la' → logprob: -6.176296234130859
    7. ' ' → logprob: -6.301296234130859
    8. ' l' → logprob: -6.801296234130859
    9. ' access' → logprob: -6.801296234130859
    10. ' les' → logprob: -7.051296234130859

Token 388: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 389: ' la' (ID: 557)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.7949349880218506
    2. '<|end|>' → logprob: -1.2949349880218506
    3. 'heap' → logprob: -2.1699349880218506
    4. ' ' → logprob: -2.5449349880218506
    5. ' he' → logprob: -3.4199349880218506
    6. ' functions' → logprob: -3.7949349880218506
    7. ' heap' → logprob: -3.9199349880218506
    8. 'functions' → logprob: -6.54493522644043
    9. 'q' → logprob: -7.54493522644043
    10. ' heaps' → logprob: -7.66993522644043

Token 390: ' structure' (ID: 8866)
  Prédit: 'file'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'file' → logprob: -1.0722711086273193
    2. 'heap' → logprob: -1.3222711086273193
    3. 'priority' → logprob: -1.9472711086273193
    4. 'he' → logprob: -2.8222711086273193
    5. 'q' → logprob: -3.1972711086273193
    6. 'fonction' → logprob: -3.5722711086273193
    7. 'structure' → logprob: -3.6972711086273193
    8. 'implementation' → logprob: -3.8222711086273193
    9. 'structures' → logprob: -3.9472711086273193
    10. ' file' → logprob: -4.072271347045898

Token 391: ' de' (ID: 334)
  Prédit: ' heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.8270242810249329
    2. 'q' → logprob: -1.327024221420288
    3. 'heap' → logprob: -1.952024221420288
    4. ' de' → logprob: -3.452024221420288
    5. ' queue' → logprob: -3.452024221420288
    6. '.heap' → logprob: -3.702024221420288
    7. '<|end|>' → logprob: -3.952024221420288
    8. ' des' → logprob: -5.202024459838867
    9. 'queue' → logprob: -5.327024459838867
    10. 'que' → logprob: -5.327024459838867

Token 392: ' données' (ID: 30580)
  Prédit: 'tas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tas' → logprob: -0.050546105951070786
    2. ' données' → logprob: -3.675546169281006
    3. 'd' → logprob: -4.800546169281006
    4. 'don' → logprob: -4.925546169281006
    5. '```' → logprob: -6.050546169281006
    6. 'data' → logprob: -6.300546169281006
    7. 'la' → logprob: -6.550546169281006
    8. 'heap' → logprob: -6.675546169281006
    9. 'he' → logprob: -7.800546169281006
    10. ' tas' → logprob: -8.175545692443848

Token 393: ' "' (ID: 392)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.45536941289901733
    2. '<|end|>' → logprob: -2.330369472503662
    3. ' he' → logprob: -2.830369472503662
    4. ' heap' → logprob: -2.955369472503662
    5. '.heap' → logprob: -3.205369472503662
    6. 'heap' → logprob: -3.205369472503662
    7. 'he' → logprob: -3.955369472503662
    8. '(heap' → logprob: -4.330369472503662
    9. '.Priority' → logprob: -4.580369472503662
    10. '  ' → logprob: -5.205369472503662

Token 394: 'tas' (ID: 34419)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.014523676596581936
    2. 'priority' → logprob: -5.014523506164551
    3. 'he' → logprob: -5.139523506164551
    4. ' heap' → logprob: -6.889523506164551
    5. 'tas' → logprob: -8.01452350616455
    6. '```' → logprob: -8.76452350616455
    7. 'min' → logprob: -9.13952350616455
    8. ' priority' → logprob: -9.38952350616455
    9. '.heap' → logprob: -10.13952350616455
    10. 'la' → logprob: -10.51452350616455

Token 395: ' b' (ID: 287)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.003094531362876296
    2. ' "' → logprob: -6.753094673156738
    3. ' (' → logprob: -7.253094673156738
    4. 'q' → logprob: -7.628094673156738
    5. '(heap' → logprob: -8.128094673156738
    6. 't' → logprob: -9.503094673156738
    7. 'heap' → logprob: -9.503094673156738
    8. '")' → logprob: -9.628094673156738
    9. ' ("' → logprob: -10.003094673156738
    10. '",' → logprob: -10.878094673156738

Token 396: 'inaire' (ID: 41465)
  Prédit: 'inaire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inaire' → logprob: -0.7761416435241699
    2. 'in' → logprob: -0.9011416435241699
    3. 'inary' → logprob: -2.02614164352417
    4. 'inar' → logprob: -7.02614164352417
    5. 'heap' → logprob: -7.65114164352417
    6. 'ina' → logprob: -8.901142120361328
    7. 'ase' → logprob: -9.526142120361328
    8. '```' → logprob: -10.026142120361328
    9. 'iné' → logprob: -10.776142120361328
    10. 'o' → logprob: -10.776142120361328

Token 397: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.009950514882802963
    2. '")' → logprob: -4.884950637817383
    3. ' "' → logprob: -6.509950637817383
    4. ')' → logprob: -7.634950637817383
    5. ' ("' → logprob: -9.759950637817383
    6. 'heap' → logprob: -9.884950637817383
    7. 'q' → logprob: -9.884950637817383
    8. ')"' → logprob: -10.009950637817383
    9. ' ")' → logprob: -10.134950637817383
    10. ' (' → logprob: -10.509950637817383

Token 398: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 399: 'heap' (ID: 38535)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.019553620368242264
    2. ',' → logprob: -4.6445536613464355
    3. '),' → logprob: -5.6445536613464355
    4. '")' → logprob: -6.2695536613464355
    5. '"' → logprob: -6.5195536613464355
    6. ').' → logprob: -7.0195536613464355
    7. 'heap' → logprob: -7.5195536613464355
    8. 'priority' → logprob: -8.144553184509277
    9. ' priority' → logprob: -8.519553184509277
    10. ' )' → logprob: -8.769553184509277

Token 400: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008959780680015683
    2. ' )' → logprob: -7.125895977020264
    3. 'q' → logprob: -10.500896453857422
    4. '")' → logprob: -10.625896453857422
    5. ',' → logprob: -11.000896453857422
    6. 'import' → logprob: -11.500896453857422
    7. '')' → logprob: -13.000896453857422
    8. '#' → logprob: -13.500896453857422
    9. 's' → logprob: -13.500896453857422
    10. '`)' → logprob: -13.500896453857422

Token 401: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 402: ' créer' (ID: 40938)
  Prédit: ' manip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' manip' → logprob: -1.2561882734298706
    2. ' des' → logprob: -1.6311882734298706
    3. ' gérer' → logprob: -1.6311882734298706
    4. ' la' → logprob: -2.50618839263916
    5. 'priority' → logprob: -3.00618839263916
    6. 'la' → logprob: -3.13118839263916
    7. ' les' → logprob: -3.25618839263916
    8. 'man' → logprob: -3.38118839263916
    9. 'he' → logprob: -3.63118839263916
    10. 'q' → logprob: -4.50618839263916

Token 403: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.2609611749649048
    2. ' une' → logprob: -2.7609610557556152
    3. '<|end|>' → logprob: -2.7609610557556152
    4. 'des' → logprob: -3.8859610557556152
    5. ',' → logprob: -3.8859610557556152
    6. 'priority' → logprob: -4.135961055755615
    7. ' ' → logprob: -4.760961055755615
    8. ' priority' → logprob: -5.135961055755615
    9. 's' → logprob: -5.135961055755615
    10. ' un' → logprob: -5.385961055755615

Token 404: ' files' (ID: 6291)
  Prédit: 'file'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'file' → logprob: -0.9723049402236938
    2. ' file' → logprob: -1.0973049402236938
    3. ' files' → logprob: -1.8473049402236938
    4. 'priority' → logprob: -2.5973048210144043
    5. 'files' → logprob: -3.0973048210144043
    6. 'prior' → logprob: -5.722304821014404
    7. 'queues' → logprob: -5.847304821014404
    8. ' priority' → logprob: -5.972304821014404
    9. 'fil' → logprob: -6.847304821014404
    10. 'queue' → logprob: -8.097305297851562

Token 405: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.991035521030426
    2. ' de' → logprob: -1.6160354614257812
    3. '_' → logprob: -1.7410354614257812
    4. ' ' → logprob: -2.7410354614257812
    5. '<|end|>' → logprob: -3.1160354614257812
    6. ',' → logprob: -3.2410354614257812
    7. '_priority' → logprob: -3.2410354614257812
    8. 'd' → logprob: -3.6160354614257812
    9. ')' → logprob: -4.116035461425781
    10. '.' → logprob: -5.491035461425781

Token 406: ' priorité' (ID: 150252)
  Prédit: 'prior'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prior' → logprob: -0.002754353219643235
    2. 'priority' → logprob: -6.252754211425781
    3. ' priorité' → logprob: -7.502754211425781
    4. ' prior' → logprob: -8.502754211425781
    5. 'pri' → logprob: -10.252754211425781
    6. 'prio' → logprob: -10.502754211425781
    7. '```' → logprob: -13.002754211425781
    8. 'Prior' → logprob: -13.127754211425781
    9. '_prior' → logprob: -13.752754211425781
    10. ' priority' → logprob: -13.877754211425781

Token 407: ' efficaces' (ID: 140931)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 408: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 409: ' mais' (ID: 2899)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.46290117502212524
    2. ' heap' → logprob: -1.3379011154174805
    3. 'import' → logprob: -3.2129011154174805
    4. 'deque' → logprob: -3.4629011154174805
    5. ' ' → logprob: -4.9629011154174805
    6. 'collections' → logprob: -5.5879011154174805
    7. 'he' → logprob: -5.7129011154174805
    8. '  ' → logprob: -5.8379011154174805
    9. ' which' → logprob: -5.9629011154174805
    10. '<|end|>' → logprob: -6.0879011154174805

Token 410: ' ici' (ID: 27994)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1284763813018799
    2. '#' → logprob: -1.3784763813018799
    3. ' il' → logprob: -2.00347638130188
    4. ' #' → logprob: -2.12847638130188
    5. ' ' → logprob: -2.25347638130188
    6. ' n' → logprob: -4.378476142883301
    7. 'import' → logprob: -5.003476142883301
    8. ' ici' → logprob: -5.003476142883301
    9. ' elle' → logprob: -5.003476142883301
    10. ' not' → logprob: -5.753476142883301

Token 411: ' aussi' (ID: 9894)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.035185039043426514
    2. ' est' → logprob: -3.9101850986480713
    3. ' #' → logprob: -5.535184860229492
    4. '#' → logprob: -5.785184860229492
    5. ' ' → logprob: -5.785184860229492
    6. ' ' → logprob: -6.660184860229492
    7. ',' → logprob: -6.785184860229492
    8. ' not' → logprob: -7.035184860229492
    9. 'n' → logprob: -7.410184860229492
    10. 'import' → logprob: -9.035184860229492

Token 412: ' il' (ID: 1793)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 413: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.04538095369935036
    2. ' est' → logprob: -3.7953810691833496
    3. '#' → logprob: -4.54538106918335
    4. 'n' → logprob: -5.04538106918335
    5. ' #' → logprob: -5.92038106918335
    6. '.' → logprob: -7.42038106918335
    7. 'est' → logprob: -7.67038106918335
    8. ' is' → logprob: -8.170380592346191
    9. '.n' → logprob: -8.420380592346191
    10. ' ' → logprob: -8.920380592346191

Token 414: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.018290765583515167
    2. ''' → logprob: -4.768290996551514
    3. 'n' → logprob: -5.518290996551514
    4. '#' → logprob: -5.643290996551514
    5. ' n' → logprob: -7.018290996551514
    6. 'est' → logprob: -7.893290996551514
    7. ''#' → logprob: -8.518290519714355
    8. ''n' → logprob: -8.768290519714355
    9. '’est' → logprob: -9.143290519714355
    10. ' est' → logprob: -9.893290519714355

Token 415: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.6620166301727295
    2. 'import' → logprob: -1.0370166301727295
    3. 'comment' → logprob: -2.5370166301727295
    4. ' pas' → logprob: -4.162016868591309
    5. 'util' → logprob: -4.412016868591309
    6. 'unused' → logprob: -4.662016868591309
    7. ' inutil' → logprob: -5.162016868591309
    8. 'inut' → logprob: -6.037016868591309
    9. ' comment' → logprob: -6.287016868591309
    10. ' utilisé' → logprob: -7.037016868591309

Token 416: ' utilisé' (ID: 53138)
  Prédit: ' utilisé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisé' → logprob: -0.2510163187980652
    2. 'util' → logprob: -1.62601637840271
    3. ' used' → logprob: -4.501016139984131
    4. 'import' → logprob: -4.751016139984131
    5. 'used' → logprob: -6.376016139984131
    6. ' utilisée' → logprob: -7.001016139984131
    7. ' utilized' → logprob: -7.126016139984131
    8. ' utilisés' → logprob: -7.501016139984131
    9. ' utilis' → logprob: -7.626016139984131
    10. ' utilisées' → logprob: -7.751016139984131

Token 417: '.

' (ID: 364)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 418: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20154665410518646
    2. '<|end|>' → logprob: -1.8265466690063477
    3. '\n' → logprob: -5.451546669006348
    4. '#' → logprob: -5.576546669006348
    5. '<|end|>' → logprob: -5.576546669006348
    6. 'import' → logprob: -5.951546669006348
    7. '
' → logprob: -6.076546669006348
    8. 'class' → logprob: -6.201546669006348
    9. '\' → logprob: -7.951546669006348
    10. 'n' → logprob: -8.076546669006348

Token 419: ' input' (ID: 3422)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.042058736085891724
    2. ' factorial' → logprob: -4.292058944702148
    3. ' dfs' → logprob: -4.417058944702148
    4. ' solve' → logprob: -4.667058944702148
    5. ' factor' → logprob: -6.167058944702148
    6. ' solution' → logprob: -6.667058944702148
    7. ' bfs' → logprob: -7.417058944702148
    8. 'main' → logprob: -7.792058944702148
    9. ' binary' → logprob: -8.542058944702148
    10. 'solve' → logprob: -8.667058944702148

Token 420: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0357559397816658
    2. '()' → logprob: -3.4107558727264404
    3. '(' → logprob: -6.2857561111450195
    4. '():
' → logprob: -9.03575611114502
    5. '().' → logprob: -9.66075611114502
    6. ' ():' → logprob: -10.28575611114502
    7. ' ()' → logprob: -11.66075611114502
    8. '(prompt' → logprob: -12.28575611114502
    9. '_' → logprob: -12.91075611114502
    10. '("")' → logprob: -13.16075611114502

Token 421: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.17253141105175018
    2. 'return' → logprob: -1.9225313663482666
    3. '   ' → logprob: -4.422531604766846
    4. '	return' → logprob: -8.797531127929688
    5. ' ' → logprob: -9.797531127929688
    6. '    ' → logprob: -11.672531127929688
    7. ' ' → logprob: -12.172531127929688
    8. '    
' → logprob: -13.547531127929688
    9. '  ' → logprob: -13.547531127929688
    10. ' sys' → logprob: -13.797531127929688

Token 422: ' """
' (ID: 7037)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.004713495261967182
    2. ' return' → logprob: -5.504713535308838
    3. 'sys' → logprob: -7.379713535308838
    4. ' sys' → logprob: -11.50471305847168
    5. '	return' → logprob: -14.62971305847168
    6. '   ' → logprob: -15.87971305847168
    7. ' ' → logprob: -16.62971305847168
    8. 'input' → logprob: -17.00471305847168
    9. '"""' → logprob: -17.12971305847168
    10. 'pass' → logprob: -17.25471305847168

Token 423: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.09868493676185608
    2. 'return' → logprob: -2.5986850261688232
    3. '   ' → logprob: -4.098684787750244
    4. '"""' → logprob: -6.223684787750244
    5. ' ' → logprob: -8.098685264587402
    6. ' try' → logprob: -8.723685264587402
    7. ' """' → logprob: -9.223685264587402
    8. ' ' → logprob: -9.223685264587402
    9. 'try' → logprob: -9.723685264587402
    10. '    ' → logprob: -9.973685264587402

Token 424: ' Fonction' (ID: 189149)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.07060781866312027
    2. ' return' → logprob: -2.695607900619507
    3. '   ' → logprob: -8.195608139038086
    4. '"""' → logprob: -8.570608139038086
    5. 'try' → logprob: -9.195608139038086
    6. 'pass' → logprob: -9.820608139038086
    7. 'Return' → logprob: -10.945608139038086
    8. ' pass' → logprob: -11.945608139038086
    9. ' ' → logprob: -12.445608139038086
    10. '#' → logprob: -12.695608139038086

Token 425: ' personnalis' (ID: 77405)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3498729169368744
    2. '():' → logprob: -1.4748729467391968
    3. ' =' → logprob: -3.8498728275299072
    4. '   ' → logprob: -4.599873065948486
    5. '(prompt' → logprob: -5.099873065948486
    6. '():
' → logprob: -5.599873065948486
    7. ' ()' → logprob: -5.974873065948486
    8. ':' → logprob: -5.974873065948486
    9. '_' → logprob: -5.974873065948486
    10. 'def' → logprob: -6.099873065948486

Token 426: 'ée' (ID: 2894)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.27772098779678345
    2. '   ' → logprob: -2.1527209281921387
    3. 'ée' → logprob: -2.9027209281921387
    4. 'isée' → logprob: -3.9027209281921387
    5. '()' → logprob: -4.027720928192139
    6. '_input' → logprob: -5.277720928192139
    7. 'input' → logprob: -5.402720928192139
    8. ' input' → logprob: -5.527720928192139
    9. 'née' → logprob: -5.652720928192139
    10. ' ' → logprob: -5.777720928192139

Token 427: ' rem' (ID: 1662)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3756977915763855
    2. '():' → logprob: -2.1256978511810303
    3. 'return' → logprob: -2.2506978511810303
    4. '   ' → logprob: -3.0006978511810303
    5. '=' → logprob: -4.875697612762451
    6. 'def' → logprob: -5.125697612762451
    7. ' return' → logprob: -5.250697612762451
    8. '().' → logprob: -5.500697612762451
    9. 'import' → logprob: -5.625697612762451
    10. ' =' → logprob: -5.625697612762451

Token 428: 'pla' (ID: 24939)
  Prédit: 'place'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'place' → logprob: -0.0016644697170704603
    2. 'plac' → logprob: -7.251664638519287
    3. 'p' → logprob: -8.126664161682129
    4. 'pl' → logprob: -8.251664161682129
    5. 'pla' → logprob: -8.626664161682129
    6. 'plit' → logprob: -9.126664161682129
    7. 'placer' → logprob: -9.876664161682129
    8. 'placement' → logprob: -10.376664161682129
    9. 'placed' → logprob: -11.626664161682129
    10. 'places' → logprob: -12.626664161682129

Token 429: 'çant' (ID: 78714)
  Prédit: 'çant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'çant' → logprob: -0.06483753770589828
    2. 'a' → logprob: -3.3148374557495117
    3. 'ace' → logprob: -4.314837455749512
    4. 'ac' → logprob: -5.064837455749512
    5. 'acement' → logprob: -5.564837455749512
    6. 'acing' → logprob: -7.189837455749512
    7. 'acent' → logprob: -7.689837455749512
    8. 'ç' → logprob: -7.814837455749512
    9. 'acer' → logprob: -7.814837455749512
    10. '```' → logprob: -8.189837455749512

Token 430: ' la' (ID: 557)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.3572971224784851
    2. 'la' → logprob: -2.23229718208313
    3. ' sys' → logprob: -2.73229718208313
    4. 'input' → logprob: -3.35729718208313
    5. ' la' → logprob: -3.73229718208313
    6. 'built' → logprob: -3.85729718208313
    7. '()' → logprob: -3.98229718208313
    8. '=sys' → logprob: -4.857296943664551
    9. ' ' → logprob: -5.982296943664551
    10. ' le' → logprob: -6.107296943664551

Token 431: ' fonction' (ID: 17610)
  Prédit: 'built'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'built' → logprob: -0.5451173186302185
    2. 'sys' → logprob: -1.9201173782348633
    3. 'input' → logprob: -2.0451173782348633
    4. ' built' → logprob: -2.0451173782348633
    5. 'raw' → logprob: -5.545117378234863
    6. 'builtin' → logprob: -5.670117378234863
    7. ' sys' → logprob: -6.670117378234863
    8. '__' → logprob: -7.295117378234863
    9. 'prompt' → logprob: -7.295117378234863
    10. 'return' → logprob: -7.545117378234863

Token 432: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.09961734712123871
    2. 'built' → logprob: -3.2246172428131104
    3. ' input' → logprob: -3.4746172428131104
    4. ' built' → logprob: -3.9746172428131104
    5. 'builtin' → logprob: -6.0996174812316895
    6. ' builtin' → logprob: -6.0996174812316895
    7. '=input' → logprob: -8.349617004394531
    8. '()' → logprob: -8.599617004394531
    9. '(input' → logprob: -8.724617004394531
    10. 'print' → logprob: -9.599617004394531

Token 433: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005653114058077335
    2. '():' → logprob: -5.755652904510498
    3. '():
' → logprob: -7.130652904510498
    4. '().' → logprob: -7.255652904510498
    5. '()
' → logprob: -8.380653381347656
    6. '(' → logprob: -8.755653381347656
    7. '(prompt' → logprob: -8.880653381347656
    8. '.' → logprob: -9.130653381347656
    9. '()`' → logprob: -9.755653381347656
    10. ' ' → logprob: -10.005653381347656

Token 434: ' standard' (ID: 7024)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5893598794937134
    2. '():' → logprob: -1.2143598794937134
    3. '():
' → logprob: -2.464359760284424
    4. ' pour' → logprob: -4.214359760284424
    5. '()
' → logprob: -4.714359760284424
    6. '   ' → logprob: -4.964359760284424
    7. ' ' → logprob: -5.214359760284424
    8. ' par' → logprob: -5.214359760284424
    9. '().' → logprob: -5.464359760284424
    10. '.' → logprob: -5.839359760284424

Token 435: ' de' (ID: 334)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' par' → logprob: -1.0902568101882935
    2. '   ' → logprob: -1.2152568101882935
    3. '()' → logprob: -2.340256690979004
    4. '():' → logprob: -2.340256690979004
    5. ' ' → logprob: -2.840256690979004
    6. ' pour' → logprob: -3.465256690979004
    7. '.' → logprob: -3.590256690979004
    8. '():
' → logprob: -4.590256690979004
    9. 'par' → logprob: -4.840256690979004
    10. '()
' → logprob: -4.840256690979004

Token 436: ' Python' (ID: 26534)
  Prédit: 'Python'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Python' → logprob: -0.06154071167111397
    2. 'built' → logprob: -3.3115406036376953
    3. 'python' → logprob: -4.436540603637695
    4. 'str' → logprob: -5.186540603637695
    5. 'sys' → logprob: -5.436540603637695
    6. 'la' → logprob: -7.186540603637695
    7. ' Python' → logprob: -8.061540603637695
    8. 'base' → logprob: -8.686540603637695
    9. 'builtin' → logprob: -9.561540603637695
    10. 'print' → logprob: -9.936540603637695

Token 437: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5779820084571838
    2. '():' → logprob: -1.077981948852539
    3. ':' → logprob: -3.327981948852539
    4. '()' → logprob: -3.577981948852539
    5. ' ' → logprob: -4.577981948852539
    6. ' :' → logprob: -5.327981948852539
    7. '():
' → logprob: -5.577981948852539
    8. '.' → logprob: -5.577981948852539
    9. 'return' → logprob: -6.202981948852539
    10. ',' → logprob: -6.577981948852539

Token 438: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010075616650283337
    2. '    
' → logprob: -5.385075569152832
    3. ' return' → logprob: -5.510075569152832
    4. '    ' → logprob: -7.885075569152832
    5. 'return' → logprob: -7.885075569152832
    6. '       ' → logprob: -8.510075569152832
    7. ' 
' → logprob: -9.510075569152832
    8. ' ' → logprob: -9.635075569152832
    9. '  
' → logprob: -9.760075569152832
    10. '   
' → logprob: -10.260075569152832

Token 439: ' Elle' (ID: 21300)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032965872436761856
    2. ' return' → logprob: -3.782965898513794
    3. ' try' → logprob: -5.532965660095215
    4. 'return' → logprob: -5.657965660095215
    5. 'try' → logprob: -6.532965660095215
    6. '    
' → logprob: -8.407965660095215
    7. ' ' → logprob: -8.532965660095215
    8. '    ' → logprob: -9.157965660095215
    9. ' global' → logprob: -10.282965660095215
    10. '       ' → logprob: -10.407965660095215

Token 440: ' lit' (ID: 11980)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2964540421962738
    2. ' return' → logprob: -1.7964540719985962
    3. 'ren' → logprob: -3.2964539527893066
    4. 'strip' → logprob: -4.546453952789307
    5. ' retourne' → logprob: -4.796453952789307
    6. 'ret' → logprob: -5.046453952789307
    7. 's' → logprob: -5.796453952789307
    8. ' récup' → logprob: -6.046453952789307
    9. 'est' → logprob: -6.171453952789307
    10. ' permet' → logprob: -6.296453952789307

Token 441: ' une' (ID: 2463)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.3309008777141571
    2. 'sys' → logprob: -1.4559009075164795
    3. ' ' → logprob: -3.8309009075164795
    4. '()' → logprob: -4.4559006690979
    5. '   ' → logprob: -4.9559006690979
    6. '=sys' → logprob: -5.5809006690979
    7. '	sys' → logprob: -7.3309006690979
    8. '_' → logprob: -7.3309006690979
    9. '.' → logprob: -7.8309006690979
    10. '().' → logprob: -7.8309006690979

Token 442: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.3504621386528015
    2. ' ligne' → logprob: -1.2254621982574463
    3. 'line' → logprob: -6.600461959838867
    4. 'l' → logprob: -7.725461959838867
    5. ' line' → logprob: -9.850461959838867
    6. 'chaine' → logprob: -10.100461959838867
    7. ' chaîne' → logprob: -10.725461959838867
    8. 'sys' → logprob: -11.100461959838867
    9. ' ' → logprob: -11.850461959838867
    10. ' sys' → logprob: -11.850461959838867

Token 443: ' depuis' (ID: 16277)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.25704699754714966
    2. '().' → logprob: -2.132046937942505
    3. '   ' → logprob: -3.132046937942505
    4. 'rstrip' → logprob: -4.007047176361084
    5. '.rstrip' → logprob: -4.132047176361084
    6. '.strip' → logprob: -4.757047176361084
    7. ' ' → logprob: -5.632047176361084
    8. 'strip' → logprob: -5.757047176361084
    9. 'de' → logprob: -6.257047176361084
    10. ',' → logprob: -6.382047176361084

Token 444: ' l' (ID: 305)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.030242836102843285
    2. ' sys' → logprob: -3.530242919921875
    3. 'stdin' → logprob: -7.905242919921875
    4. ' la' → logprob: -10.030242919921875
    5. 'la' → logprob: -10.280242919921875
    6. '=sys' → logprob: -11.155242919921875
    7. 'l' → logprob: -11.405242919921875
    8. 'le' → logprob: -11.655242919921875
    9. '	sys' → logprob: -12.655242919921875
    10. ' stdin' → logprob: -12.780242919921875

Token 445: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.5159623026847839
    2. 'sys' → logprob: -1.2659623622894287
    3. 'stdin' → logprob: -2.2659623622894287
    4. 'entrée' → logprob: -5.26596212387085
    5. '=sys' → logprob: -5.51596212387085
    6. 'e' → logprob: -6.14096212387085
    7. ' sys' → logprob: -6.51596212387085
    8. 'input' → logprob: -6.76596212387085
    9. 'a' → logprob: -7.51596212387085
    10. '(stdin' → logprob: -7.64096212387085

Token 446: ' standard' (ID: 7024)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05492222681641579
    2. '_' → logprob: -4.304922103881836
    3. 'standard' → logprob: -4.554922103881836
    4. ' standard' → logprob: -5.304922103881836
    5. '().' → logprob: -5.429922103881836
    6. ')' → logprob: -5.554922103881836
    7. '(stdin' → logprob: -5.679922103881836
    8. 'sys' → logprob: -6.554922103881836
    9. 'stdin' → logprob: -6.804922103881836
    10. '()
' → logprob: -6.929922103881836

Token 447: ' (' (ID: 350)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.5021029114723206
    2. '   ' → logprob: -1.6271028518676758
    3. ',' → logprob: -2.627102851867676
    4. '()' → logprob: -2.752102851867676
    5. 'sys' → logprob: -3.252102851867676
    6. '.' → logprob: -4.752102851867676
    7. '.rstrip' → logprob: -5.752102851867676
    8. '=sys' → logprob: -5.877102851867676
    9. '.readline' → logprob: -6.377102851867676
    10. 'return' → logprob: -6.377102851867676

Token 448: 'ty' (ID: 1206)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.39733144640922546
    2. ')' → logprob: -1.1473314762115479
    3. ' sys' → logprob: -5.397331237792969
    4. '   ' → logprob: -5.522331237792969
    5. '=sys' → logprob: -7.647331237792969
    6. 'return' → logprob: -8.022331237792969
    7. 'stdin' → logprob: -8.147331237792969
    8. 'import' → logprob: -8.522331237792969
    9. ').' → logprob: -8.772331237792969
    10. ' )' → logprob: -9.522331237792969

Token 449: 'pi' (ID: 3455)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.0482272170484066
    2. 'pes' → logprob: -3.923227310180664
    3. 'pé' → logprob: -4.048227310180664
    4. 'p' → logprob: -4.673227310180664
    5. 'ped' → logprob: -8.423227310180664
    6. 'page' → logprob: -8.798227310180664
    7. 'pi' → logprob: -10.173227310180664
    8. 'py' → logprob: -10.923227310180664
    9. 'ping' → logprob: -11.173227310180664
    10. '   ' → logprob: -11.298227310180664

Token 450: 'quement' (ID: 42437)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.10067685693502426
    2. 'e' → logprob: -2.7256767749786377
    3. 'quement' → logprob: -3.6006767749786377
    4. 'qu' → logprob: -7.225677013397217
    5. 'q' → logprob: -7.475677013397217
    6. '```' → logprob: -8.225676536560059
    7. 'n' → logprob: -8.350676536560059
    8. 'c' → logprob: -9.225676536560059
    9. 'ne' → logprob: -9.225676536560059
    10. 'qe' → logprob: -9.225676536560059

Token 451: ' l' (ID: 305)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.04761793091893196
    2. ' sys' → logprob: -3.4226179122924805
    3. 'stdin' → logprob: -5.1726179122924805
    4. ' stdin' → logprob: -5.5476179122924805
    5. 'le' → logprob: -6.7976179122924805
    6. 'la' → logprob: -7.0476179122924805
    7. ' la' → logprob: -7.7976179122924805
    8. '=sys' → logprob: -7.7976179122924805
    9. ' une' → logprob: -8.79761791229248
    10. 'une' → logprob: -8.92261791229248

Token 452: ''utilisateur' (ID: 140803)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.13625246286392212
    2. 'que' → logprob: -2.5112524032592773
    3. 'stdin' → logprob: -3.6362524032592773
    4. 'a' → logprob: -5.511252403259277
    5. 'ée' → logprob: -5.886252403259277
    6. 'sys' → logprob: -6.136252403259277
    7. 'ne' → logprob: -6.386252403259277
    8. '`' → logprob: -6.886252403259277
    9. ' stdin' → logprob: -7.011252403259277
    10. 'n' → logprob: -7.136252403259277

Token 453: ' ou' (ID: 2031)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18571707606315613
    2. '),' → logprob: -1.8107171058654785
    3. ' )' → logprob: -6.3107171058654785
    4. ',' → logprob: -6.4357171058654785
    5. '   ' → logprob: -7.3107171058654785
    6. ').' → logprob: -7.9357171058654785
    7. ' ),' → logprob: -8.18571662902832
    8. '
' → logprob: -8.93571662902832
    9. ' via' → logprob: -8.93571662902832
    10. ' en' → logprob: -8.93571662902832

Token 454: ' un' (ID: 537)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.4409872591495514
    2. ' sys' → logprob: -1.065987229347229
    3. ' la' → logprob: -5.8159871101379395
    4. 'le' → logprob: -6.1909871101379395
    5. 'stdin' → logprob: -6.3159871101379395
    6. ' le' → logprob: -6.8159871101379395
    7. '=sys' → logprob: -7.4409871101379395
    8. 'la' → logprob: -7.5659871101379395
    9. 'f' → logprob: -7.6909871101379395
    10. ' stdin' → logprob: -7.6909871101379395

Token 455: ' fichier' (ID: 69637)
  Prédit: ' fichier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fichier' → logprob: -0.6627362966537476
    2. 'f' → logprob: -0.9127362966537476
    3. 'sys' → logprob: -2.912736415863037
    4. 'file' → logprob: -4.412736415863037
    5. ' file' → logprob: -5.287736415863037
    6. ' sys' → logprob: -5.412736415863037
    7. 'stdin' → logprob: -5.662736415863037
    8. '\n' → logprob: -6.662736415863037
    9. ' f' → logprob: -7.412736415863037
    10. 'input' → logprob: -8.412735939025879

Token 456: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01466476172208786
    2. '   ' → logprob: -5.014664649963379
    3. ' )' → logprob: -6.139664649963379
    4. ',' → logprob: -7.014664649963379
    5. ')\' → logprob: -7.014664649963379
    6. ').' → logprob: -7.389664649963379
    7. '()' → logprob: -7.639664649963379
    8. '())' → logprob: -7.639664649963379
    9. '),' → logprob: -7.764664649963379
    10. '")' → logprob: -8.139664649963379

Token 457: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009300300851464272
    2. 'return' → logprob: -5.509300231933594
    3. ' return' → logprob: -6.009300231933594
    4. '    ' → logprob: -6.384300231933594
    5. 'rstrip' → logprob: -7.759300231933594
    6. '    
' → logprob: -8.384300231933594
    7. ')' → logprob: -10.009300231933594
    8. ' et' → logprob: -10.009300231933594
    9. '.rstrip' → logprob: -10.134300231933594
    10. ' puis' → logprob: -10.509300231933594

Token 458: ' sup' (ID: 1982)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0029799600597471
    2. ' return' → logprob: -6.627979755401611
    3. 'return' → logprob: -7.002979755401611
    4. '    ' → logprob: -7.377979755401611
    5. '    
' → logprob: -9.87798023223877
    6. '  ' → logprob: -11.50298023223877
    7. '       ' → logprob: -12.12798023223877
    8. ')' → logprob: -12.25298023223877
    9. ' et' → logprob: -12.62798023223877
    10. '"""' → logprob: -12.87798023223877

Token 459: 'prime' (ID: 46441)
  Prédit: 'prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.019373338669538498
    2. 'prim' → logprob: -4.269373416900635
    3. 'pr' → logprob: -5.644373416900635
    4. 'primer' → logprob: -7.019373416900635
    5. 'press' → logprob: -8.019372940063477
    6. 'prima' → logprob: -8.019372940063477
    7. 'pres' → logprob: -10.644372940063477
    8. 'ress' → logprob: -10.894372940063477
    9. 'print' → logprob: -11.269372940063477
    10. 'prem' → logprob: -11.644372940063477

Token 460: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.8236717581748962
    2. 'le' → logprob: -1.948671817779541
    3. ' les' → logprob: -2.198671817779541
    4. '()' → logprob: -2.198671817779541
    5. ' l' → logprob: -2.698671817779541
    6. ' la' → logprob: -3.573671817779541
    7. 'l' → logprob: -4.198671817779541
    8. '\' → logprob: -4.198671817779541
    9. ' trailing' → logprob: -4.198671817779541
    10. ' ' → logprob: -4.448671817779541

Token 461: ' caractère' (ID: 80509)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6995863318443298
    2. ' trailing' → logprob: -0.8245863318443298
    3. ' \' → logprob: -3.8245863914489746
    4. ''\' → logprob: -4.574586391448975
    5. '' → logprob: -4.949586391448975
    6. '"\' → logprob: -5.824586391448975
    7. ' ' → logprob: -5.824586391448975
    8. ' '\' → logprob: -6.074586391448975
    9. 'rstrip' → logprob: -6.199586391448975
    10. ' ' → logprob: -6.324586391448975

Token 462: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.21042408049106598
    2. '\n' → logprob: -2.0854241847991943
    3. 'final' → logprob: -4.335423946380615
    4. ' \' → logprob: -4.460423946380615
    5. ' '\' → logprob: -4.710423946380615
    6. 'de' → logprob: -5.210423946380615
    7. ' ' → logprob: -5.460423946380615
    8. ' newline' → logprob: -5.710423946380615
    9. ' trailing' → logprob: -5.835423946380615
    10. ' final' → logprob: -5.835423946380615

Token 463: ' fin' (ID: 2131)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.03953421115875244
    2. 'fin' → logprob: -5.039534091949463
    3. ' fin' → logprob: -5.414534091949463
    4. 'rstrip' → logprob: -5.414534091949463
    5. ' retour' → logprob: -5.664534091949463
    6. ''\' → logprob: -5.664534091949463
    7. 'ret' → logprob: -6.039534091949463
    8. ' newline' → logprob: -6.039534091949463
    9. ' ' → logprob: -6.414534091949463
    10. 'newline' → logprob: -6.539534091949463

Token 464: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1301347315311432
    2. 'de' → logprob: -3.2551348209381104
    3. '\n' → logprob: -3.5051348209381104
    4. ''\' → logprob: -3.7551348209381104
    5. '\' → logprob: -5.005134582519531
    6. '='\' → logprob: -5.130134582519531
    7. '"\' → logprob: -5.505134582519531
    8. 'e' → logprob: -5.630134582519531
    9. '('\' → logprob: -5.880134582519531
    10. 'line' → logprob: -6.880134582519531

Token 465: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.019168125465512276
    2. ' ligne' → logprob: -4.769167900085449
    3. 'l' → logprob: -5.144167900085449
    4. 'line' → logprob: -5.394167900085449
    5. '\n' → logprob: -9.51916790008545
    6. 'lia' → logprob: -11.01916790008545
    7. ' line' → logprob: -11.89416790008545
    8. 'chaine' → logprob: -12.39416790008545
    9. 'lin' → logprob: -12.89416790008545
    10. 'linha' → logprob: -13.01916790008545

Token 466: ' (' (ID: 350)
  Prédit: '('\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('\' → logprob: -1.0655461549758911
    2. 'rstrip' → logprob: -1.6905461549758911
    3. '   ' → logprob: -1.8155461549758911
    4. ''\' → logprob: -2.3155460357666016
    5. '()' → logprob: -2.8155460357666016
    6. '\n' → logprob: -3.1905460357666016
    7. '.rstrip' → logprob: -3.1905460357666016
    8. '().' → logprob: -4.440546035766602
    9. '='\' → logprob: -4.690546035766602
    10. ',' → logprob: -4.690546035766602

Token 467: 'ret' (ID: 3431)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5832367539405823
    2. ''\' → logprob: -0.9582367539405823
    3. ')' → logprob: -3.2082366943359375
    4. '"\' → logprob: -4.4582366943359375
    5. ')\' → logprob: -6.4582366943359375
    6. ' '\' → logprob: -6.5832366943359375
    7. '('\' → logprob: -7.4582366943359375
    8. '`\' → logprob: -7.7082366943359375
    9. 'rstrip' → logprob: -7.8332366943359375
    10. '\r' → logprob: -7.9582366943359375

Token 468: 'our' (ID: 401)
  Prédit: 'our'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.016161996871232986
    2. 'urn' → logprob: -4.266161918640137
    3. 'u' → logprob: -7.391161918640137
    4. '\n' → logprob: -7.766161918640137
    5. 'ur' → logprob: -8.391161918640137
    6. '
' → logprob: -8.516161918640137
    7. '"\' → logprob: -9.641161918640137
    8. '\r' → logprob: -9.641161918640137
    9. 'ours' → logprob: -9.766161918640137
    10. 'urne' → logprob: -10.266161918640137

Token 469: ' ch' (ID: 549)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.132572203874588
    2. '\r' → logprob: -3.1325721740722656
    3. ' à' → logprob: -3.5075721740722656
    4. '\u' → logprob: -4.132572174072266
    5. ''\' → logprob: -5.132572174072266
    6. '='\' → logprob: -5.507572174072266
    7. '"\' → logprob: -5.757572174072266
    8. '\' → logprob: -5.882572174072266
    9. 'car' → logprob: -6.007572174072266
    10. '\x' → logprob: -6.132572174072266

Token 470: 'ariot' (ID: 150423)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.43395477533340454
    2. 'aine' → logprob: -1.1839547157287598
    3. 'ariot' → logprob: -4.18395471572876
    4. 'a' → logprob: -4.43395471572876
    5. '\' → logprob: -5.43395471572876
    6. '
' → logprob: -5.68395471572876
    7. ''\' → logprob: -6.05895471572876
    8. '"\' → logprob: -6.30895471572876
    9. '\n' → logprob: -6.68395471572876
    10. '```' → logprob: -6.80895471572876

Token 471: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012719894759356976
    2. '\n' → logprob: -5.137720108032227
    3. '),' → logprob: -5.762720108032227
    4. '"\' → logprob: -7.137720108032227
    5. '")' → logprob: -7.637720108032227
    6. ')\' → logprob: -7.762720108032227
    7. ''\' → logprob: -7.887720108032227
    8. '')' → logprob: -8.012720108032227
    9. ')
' → logprob: -8.012720108032227
    10. ').' → logprob: -8.262720108032227

Token 472: ' puis' (ID: 18766)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05890534818172455
    2. ' et' → logprob: -3.5589053630828857
    3. ' and' → logprob: -4.933905124664307
    4. '    ' → logprob: -4.933905124664307
    5. ' return' → logprob: -5.058905124664307
    6. 'return' → logprob: -5.808905124664307
    7. ')' → logprob: -6.683905124664307
    8. 'et' → logprob: -6.933905124664307
    9. ' puis' → logprob: -7.183905124664307
    10. '  ' → logprob: -7.808905124664307

Token 473: ' ren' (ID: 5427)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.517649233341217
    2. ' return' → logprob: -1.1426491737365723
    3. ' retourne' → logprob: -2.8926491737365723
    4. ' la' → logprob: -4.392649173736572
    5. 'ren' → logprob: -5.142649173736572
    6. ' ren' → logprob: -5.517649173736572
    7. 'la' → logprob: -6.267649173736572
    8. 'ret' → logprob: -6.392649173736572
    9. 'rstrip' → logprob: -6.767649173736572
    10. 'r' → logprob: -7.392649173736572

Token 474: 'voie' (ID: 70072)
  Prédit: 'voie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'voie' → logprob: -0.0007504248642362654
    2. 'v' → logprob: -7.250750541687012
    3. 'voit' → logprob: -11.250750541687012
    4. 'voi' → logprob: -11.375750541687012
    5. 'vo' → logprob: -11.375750541687012
    6. 'voy' → logprob: -12.500750541687012
    7. '```' → logprob: -15.000750541687012
    8. '\' → logprob: -15.750750541687012
    9. 'voire' → logprob: -16.625749588012695
    10. 'ver' → logprob: -17.000749588012695

Token 475: ' la' (ID: 557)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -1.2537192106246948
    2. ' la' → logprob: -1.5037192106246948
    3. ' ' → logprob: -1.7537192106246948
    4. '_' → logprob: -2.6287193298339844
    5. '""' → logprob: -3.0037193298339844
    6. ' sys' → logprob: -3.0037193298339844
    7. ' ''' → logprob: -3.3787193298339844
    8. 'la' → logprob: -3.7537193298339844
    9. ' l' → logprob: -4.253719329833984
    10. 'sys' → logprob: -4.628719329833984

Token 476: ' ligne' (ID: 19583)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.4829411506652832
    2. 'string' → logprob: -1.2329411506652832
    3. ' chaîne' → logprob: -3.357941150665283
    4. ' string' → logprob: -3.357941150665283
    5. 'str' → logprob: -4.857941150665283
    6. ' chaine' → logprob: -4.982941150665283
    7. 'ligne' → logprob: -5.982941150665283
    8. ' line' → logprob: -6.482941150665283
    9. ' ligne' → logprob: -6.982941150665283
    10. 'line' → logprob: -7.107941150665283

Token 477: '.
' (ID: 558)
  Prédit: '.rstrip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.rstrip' → logprob: -0.14792554080486298
    2. '.strip' → logprob: -2.397925615310669
    3. 'rstrip' → logprob: -3.397925615310669
    4. '.' → logprob: -4.89792537689209
    5. '[:-' → logprob: -6.27292537689209
    6. ' .' → logprob: -6.89792537689209
    7. 'strip' → logprob: -7.64792537689209
    8. '   ' → logprob: -7.64792537689209
    9. ' ' → logprob: -8.02292537689209
    10. 'str' → logprob: -8.77292537689209

Token 478: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09165827929973602
    2. ')' → logprob: -2.716658353805542
    3. '\n' → logprob: -4.966658115386963
    4. ' return' → logprob: -5.466658115386963
    5. '"""' → logprob: -5.966658115386963
    6. '):' → logprob: -6.216658115386963
    7. 'return' → logprob: -6.716658115386963
    8. '  
' → logprob: -6.716658115386963
    9. ':return' → logprob: -7.091658115386963
    10. '    
' → logprob: -7.091658115386963

Token 479: ' Ceci' (ID: 144699)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -1.0571974515914917
    2. 'return' → logprob: -1.3071974515914917
    3. ')' → logprob: -1.8071974515914917
    4. '   ' → logprob: -2.1821975708007812
    5. '""' → logprob: -3.0571975708007812
    6. ' return' → logprob: -3.5571975708007812
    7. '\n' → logprob: -4.682197570800781
    8. ':return' → logprob: -4.807197570800781
    9. '):' → logprob: -5.932197570800781
    10. '()' → logprob: -6.432197570800781

Token 480: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -1.0176736116409302
    2. ' return' → logprob: -1.1426736116409302
    3. '   ' → logprob: -1.6426736116409302
    4. ' permet' → logprob: -2.8926734924316406
    5. 'return' → logprob: -4.017673492431641
    6. ' ' → logprob: -4.392673492431641
    7. ' retourne' → logprob: -5.267673492431641
    8. ' ' → logprob: -5.392673492431641
    9. '"""' → logprob: -5.517673492431641
    10. ' la' → logprob: -5.642673492431641

Token 481: ' particulièrement' (ID: 56858)
  Prédit: ' utile'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utile' → logprob: -0.07195942848920822
    2. ' useful' → logprob: -4.196959495544434
    3. 'utile' → logprob: -4.321959495544434
    4. ' une' → logprob: -4.571959495544434
    5. ' souvent' → logprob: -4.571959495544434
    6. ' très' → logprob: -4.946959495544434
    7. ' particulièrement' → logprob: -5.696959495544434
    8. ' pratique' → logprob: -6.196959495544434
    9. ' utilisé' → logprob: -6.446959495544434
    10. 'util' → logprob: -6.696959495544434

Token 482: ' utile' (ID: 68237)
  Prédit: ' utile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utile' → logprob: -0.05511414259672165
    2. ' useful' → logprob: -3.6801140308380127
    3. 'utile' → logprob: -3.8051140308380127
    4. 'pr' → logprob: -6.055114269256592
    5. ' util' → logprob: -6.930114269256592
    6. ' utiles' → logprob: -7.055114269256592
    7. ' útil' → logprob: -7.305114269256592
    8. 'util' → logprob: -7.305114269256592
    9. ' ut' → logprob: -8.680113792419434
    10. 's' → logprob: -8.930113792419434

Token 483: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.019510269165039
    2. ' pour' → logprob: -1.269510269165039
    3. ' ' → logprob: -1.519510269165039
    4. ' for' → logprob: -2.894510269165039
    5. ' en' → logprob: -3.269510269165039
    6. ' par' → logprob: -4.394510269165039
    7. '  ' → logprob: -5.644510269165039
    8. ' afin' → logprob: -5.644510269165039
    9. ',' → logprob: -5.769510269165039
    10. '.' → logprob: -5.894510269165039

Token 484: ' éviter' (ID: 64013)
  Prédit: ' accél'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' accél' → logprob: -0.8408132791519165
    2. ' les' → logprob: -1.9658132791519165
    3. 'les' → logprob: -2.090813159942627
    4. ' optimiser' → logprob: -2.590813159942627
    5. ' des' → logprob: -3.090813159942627
    6. ' éviter' → logprob: -3.465813159942627
    7. 'optim' → logprob: -3.590813159942627
    8. ' gagner' → logprob: -3.840813159942627
    9. ' améliorer' → logprob: -4.590813159942627
    10. 'speed' → logprob: -4.840813159942627

Token 485: ' d' (ID: 272)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.08625402301549911
    2. ' l' → logprob: -2.586254119873047
    3. ' la' → logprob: -5.461254119873047
    4. 'les' → logprob: -6.711254119873047
    5. ' toute' → logprob: -7.461254119873047
    6. ' le' → logprob: -7.711254119873047
    7. 'l' → logprob: -8.211254119873047
    8. ' des' → logprob: -8.211254119873047
    9. 'le' → logprob: -9.461254119873047
    10. ' trailing' → logprob: -9.711254119873047

Token 486: ''avoir' (ID: 55863)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.11264337599277496
    2. ''avoir' → logprob: -3.7376434803009033
    3. 'es' → logprob: -3.8626434803009033
    4. ''év' → logprob: -4.487643241882324
    5. ''att' → logprob: -5.612643241882324
    6. ''obtenir' → logprob: -5.612643241882324
    7. 'eux' → logprob: -5.612643241882324
    8. 'elag' → logprob: -5.737643241882324
    9. 'el' → logprob: -5.737643241882324
    10. 'u' → logprob: -5.987643241882324

Token 487: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.653600811958313
    2. ' à' → logprob: -2.0286006927490234
    3. ' les' → logprob: -2.5286006927490234
    4. '\n' → logprob: -3.1536006927490234
    5. ' to' → logprob: -3.4036006927490234
    6. '\' → logprob: -3.4036006927490234
    7. ' une' → logprob: -3.4036006927490234
    8. 's' → logprob: -3.7786006927490234
    9. ' ' → logprob: -4.028600692749023
    10. 'des' → logprob: -4.028600692749023

Token 488: ' ret' (ID: 2881)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6196302175521851
    2. 's' → logprob: -1.619630217552185
    3. '\' → logprob: -2.3696303367614746
    4. ' problèmes' → logprob: -3.4946303367614746
    5. ' \' → logprob: -3.6196303367614746
    6. ' trailing' → logprob: -3.8696303367614746
    7. ' '\' → logprob: -4.244630336761475
    8. 'pro' → logprob: -4.369630336761475
    9. ' erreurs' → logprob: -4.744630336761475
    10. ''\' → logprob: -4.994630336761475

Token 489: 'ours' (ID: 2327)
  Prédit: 'urn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urn' → logprob: -0.11400217562913895
    2. 'our' → logprob: -2.614002227783203
    3. '\n' → logprob: -3.614002227783203
    4. '\r' → logprob: -6.614002227783203
    5. '\x' → logprob: -6.739002227783203
    6. 'rn' → logprob: -7.239002227783203
    7. '
' → logprob: -7.364002227783203
    8. 'ours' → logprob: -7.614002227783203
    9. 'u' → logprob: -7.739002227783203
    10. 'ail' → logprob: -7.864002227783203

Token 490: ' à' (ID: 1221)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.4782198965549469
    2. ' ' → logprob: -2.853219985961914
    3. ''\' → logprob: -2.853219985961914
    4. '\r' → logprob: -3.103219985961914
    5. 'rstrip' → logprob: -3.103219985961914
    6. ' de' → logprob: -3.478219985961914
    7. 'n' → logprob: -3.728219985961914
    8. '"\' → logprob: -4.228219985961914
    9. '\s' → logprob: -4.478219985961914
    10. 'de' → logprob: -4.728219985961914

Token 491: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.05745202302932739
    2. 'l' → logprob: -2.9324519634246826
    3. 'ligne' → logprob: -6.682452201843262
    4. 'a' → logprob: -8.307452201843262
    5. '\n' → logprob: -8.932452201843262
    6. '\' → logprob: -8.932452201843262
    7. '
' → logprob: -8.932452201843262
    8. 'lac' → logprob: -9.307452201843262
    9. 'laf' → logprob: -9.432452201843262
    10. 'lais' → logprob: -10.057452201843262

Token 492: ' ligne' (ID: 19583)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.3806726634502411
    2. 'l' → logprob: -1.3806726932525635
    3. 'ligne' → logprob: -2.8806726932525635
    4. 'line' → logprob: -5.380672454833984
    5. '\n' → logprob: -5.880672454833984
    6. '```' → logprob: -7.880672454833984
    7. '
' → logprob: -8.380672454833984
    8. 'a' → logprob: -8.505672454833984
    9. 'lin' → logprob: -9.005672454833984
    10. 'lé' → logprob: -9.255672454833984

Token 493: ' super' (ID: 2539)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3586767315864563
    2. ' à' → logprob: -2.4836766719818115
    3. 'rstrip' → logprob: -2.7336766719818115
    4. '\r' → logprob: -2.9836766719818115
    5. ' en' → logprob: -3.2336766719818115
    6. 'final' → logprob: -4.733676910400391
    7. '   ' → logprob: -4.733676910400391
    8. 's' → logprob: -5.233676910400391
    9. ''\' → logprob: -5.733676910400391
    10. 'à' → logprob: -5.733676910400391

Token 494: 'fl' (ID: 1836)
  Prédit: 'fl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fl' → logprob: -0.036608245223760605
    2. 'flu' → logprob: -3.4116082191467285
    3. 'f' → logprob: -6.2866082191467285
    4. '\n' → logprob: -7.6616082191467285
    5. 'flush' → logprob: -9.036608695983887
    6. 'ieurs' → logprob: -9.661608695983887
    7. 'e' → logprob: -10.036608695983887
    8. 's' → logprob: -10.036608695983887
    9. 'fin' → logprob: -10.286608695983887
    10. '.rstrip' → logprob: -10.411608695983887

Token 495: 'us' (ID: 385)
  Prédit: 'ieux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ieux' → logprob: -0.7610511183738708
    2. 'fl' → logprob: -2.3860511779785156
    3. '\n' → logprob: -2.5110511779785156
    4. 'os' → logprob: -2.8860511779785156
    5. 's' → logprob: -3.3860511779785156
    6. 'ieu' → logprob: -3.3860511779785156
    7. 'ts' → logprob: -3.5110511779785156
    8. 'eux' → logprob: -3.5110511779785156
    9. 'u' → logprob: -4.386051177978516
    10. 'ieurs' → logprob: -4.511051177978516

Token 496: ' qui' (ID: 2780)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2828083038330078
    2. '\n' → logprob: -1.2828083038330078
    3. '"""' → logprob: -1.6578083038330078
    4. '   ' → logprob: -2.407808303833008
    5. '.' → logprob: -2.407808303833008
    6. '()' → logprob: -4.157808303833008
    7. '"' → logprob: -4.407808303833008
    8. '")' → logprob: -4.907808303833008
    9. ' en' → logprob: -5.032808303833008
    10. '"""
' → logprob: -5.157808303833008

Token 497: ' viennent' (ID: 94846)
  Prédit: ' peuvent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' peuvent' → logprob: -1.2603245973587036
    2. ' pourraient' → logprob: -1.6353245973587036
    3. 's' → logprob: -2.135324478149414
    4. ' gên' → logprob: -2.260324478149414
    5. 'pos' → logprob: -2.760324478149414
    6. '
' → logprob: -2.760324478149414
    7. '```' → logprob: -3.885324478149414
    8. ' ralent' → logprob: -4.135324478149414
    9. 'pert' → logprob: -4.385324478149414
    10. 'tra' → logprob: -4.885324478149414

Token 498: ' souvent' (ID: 28137)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.6221948266029358
    2. ' à' → logprob: -2.372194766998291
    3. ' avec' → logprob: -2.747194766998291
    4. ' lors' → logprob: -2.747194766998291
    5. ' de' → logprob: -3.497194766998291
    6. 's' → logprob: -3.747194766998291
    7. 'des' → logprob: -3.747194766998291
    8. ' dans' → logprob: -4.372194766998291
    9. 'dans' → logprob: -4.497194766998291
    10. 'from' → logprob: -4.497194766998291

Token 499: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.9243509769439697
    2. ' avec' → logprob: -1.2993509769439697
    3. ' with' → logprob: -2.4243509769439697
    4. ' à' → logprob: -2.9243509769439697
    5. 'with' → logprob: -3.5493509769439697
    6. ' lors' → logprob: -3.5493509769439697
    7. ')' → logprob: -3.6743509769439697
    8. 's' → logprob: -4.049350738525391
    9. ' après' → logprob: -4.299350738525391
    10. ' ' → logprob: -4.424350738525391

Token 500: ' sys' (ID: 12228)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6875388026237488
    2. 'sys' → logprob: -1.5625388622283936
    3. 'input' → logprob: -1.9375388622283936
    4. 'la' → logprob: -2.3125388622283936
    5. ' l' → logprob: -3.9375388622283936
    6. 'stdin' → logprob: -4.9375386238098145
    7. ' sys' → logprob: -5.0625386238098145
    8. ' la' → logprob: -5.4375386238098145
    9. ' input' → logprob: -5.4375386238098145
    10. ' stdin' → logprob: -7.8125386238098145

Token 501: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.06285379081964493
    2. '().' → logprob: -3.4378538131713867
    3. '.stdout' → logprob: -4.187853813171387
    4. 'stdin' → logprob: -5.437853813171387
    5. '.readline' → logprob: -5.687853813171387
    6. '()' → logprob: -5.812853813171387
    7. ' stdin' → logprob: -7.187853813171387
    8. '()
' → logprob: -7.562853813171387
    9. '(stdin' → logprob: -7.812853813171387
    10. 'stdout' → logprob: -7.937853813171387

Token 502: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.006944118067622185
    2. '.rstrip' → logprob: -5.381944179534912
    3. '.' → logprob: -6.256944179534912
    4. 'rstrip' → logprob: -8.506943702697754
    5. ')' → logprob: -9.256943702697754
    6. '().' → logprob: -9.881943702697754
    7. ').' → logprob: -10.881943702697754
    8. '.read' → logprob: -11.256943702697754
    9. '.strip' → logprob: -11.506943702697754
    10. '.readlines' → logprob: -11.881943702697754

Token 503: '().
' (ID: 58434)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05187418684363365
    2. '().' → logprob: -3.0518741607666016
    3. ')' → logprob: -6.176874160766602
    4. '())' → logprob: -7.301874160766602
    5. '()
' → logprob: -8.426874160766602
    6. '()`' → logprob: -9.551874160766602
    7. '()\' → logprob: -9.676874160766602
    8. ').' → logprob: -10.551874160766602
    9. '.rstrip' → logprob: -10.551874160766602
    10. 'rstrip' → logprob: -10.801874160766602

Token 504: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31722113490104675
    2. '"""' → logprob: -1.4422211647033691
    3. ')' → logprob: -4.067221164703369
    4. '"""
' → logprob: -4.567221164703369
    5. '""' → logprob: -5.317221164703369
    6. '")' → logprob: -6.817221164703369
    7. '"' → logprob: -7.192221164703369
    8. '):' → logprob: -8.192220687866211
    9. '\n' → logprob: -8.817220687866211
    10. 'return' → logprob: -8.817220687866211

Token 505: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4890364408493042
    2. '"""' → logprob: -0.9890364408493042
    3. ')' → logprob: -4.864036560058594
    4. '"""
' (adapté à ' """
') → logprob: -5.489036560058594
    5. '""' → logprob: -5.989036560058594
    6. '"' → logprob: -9.364036560058594
    7. '):' → logprob: -9.489036560058594
    8. '```' → logprob: -9.614036560058594
    9. ' """' → logprob: -9.739036560058594
    10. '")' → logprob: -9.864036560058594

Token 506: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013103639706969261
    2. 'return' → logprob: -4.513103485107422
    3. ' return' → logprob: -6.388103485107422
    4. 'try' → logprob: -8.138103485107422
    5. '	return' → logprob: -10.263103485107422
    6. ' try' → logprob: -11.388103485107422
    7. '    ' → logprob: -11.513103485107422
    8. '   ' → logprob: -11.763103485107422
    9. '       ' → logprob: -12.763103485107422
    10. 'import' → logprob: -13.013103485107422

Token 507: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -1.0683535037969705e-05
    2. ' return' → logprob: -11.50001049041748
    3. '   ' → logprob: -14.87501049041748
    4. 'try' → logprob: -16.250011444091797
    5. '	return' → logprob: -17.125011444091797
    6. 'ret' → logprob: -18.375011444091797
    7. 'import' → logprob: -18.500011444091797
    8. 'res' → logprob: -19.250011444091797
    9. 'line' → logprob: -19.375011444091797
    10. ' ' → logprob: -19.500011444091797

Token 508: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -9.615255839889869e-05
    2. ' sys' → logprob: -9.250096321105957
    3. '(sys' → logprob: -17.50009536743164
    4. '	sys' → logprob: -17.62509536743164
    5. '=sys' → logprob: -18.00009536743164
    6. 'input' → logprob: -18.50009536743164
    7. 'stdin' → logprob: -19.50009536743164
    8. '_sys' → logprob: -21.25009536743164
    9. '   ' → logprob: -21.50009536743164
    10. ' ' → logprob: -21.50009536743164

Token 509: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00030293059535324574
    2. '.stdout' → logprob: -8.250303268432617
    3. '.' → logprob: -10.500303268432617
    4. '.readline' → logprob: -11.250303268432617
    5. '.argv' → logprob: -14.875303268432617
    6. '.stderr' → logprob: -15.000303268432617
    7. '.std' → logprob: -15.000303268432617
    8. 'stdin' → logprob: -16.500303268432617
    9. '._' → logprob: -17.250303268432617
    10. '(stdin' → logprob: -17.500303268432617

Token 510: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -3.128163257315464e-07
    2. '.' → logprob: -15.375
    3. '.read' → logprob: -17.25
    4. '.buffer' → logprob: -18.5
    5. '.readlines' → logprob: -19.0
    6. ' readline' → logprob: -19.375
    7. '().' → logprob: -20.5
    8. '.rstrip' → logprob: -21.125
    9. 'read' → logprob: -21.5
    10. 'buffer' → logprob: -23.125

Token 511: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0009115827269852161
    2. '()' → logprob: -7.000911712646484
    3. '(' → logprob: -16.250911712646484
    4. '.rstrip' → logprob: -17.375911712646484
    5. ' ().' → logprob: -17.500911712646484
    6. '[:-' → logprob: -18.500911712646484
    7. 'rstrip' → logprob: -19.750911712646484
    8. '().__' → logprob: -20.000911712646484
    9. '()`' → logprob: -20.125911712646484
    10. '("").' → logprob: -20.125911712646484

Token 512: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.04858816787600517
    2. 'strip' → logprob: -3.048588275909424
    3. '.rstrip' → logprob: -14.673587799072266
    4. ' strip' → logprob: -16.173587799072266
    5. 'replace' → logprob: -16.423587799072266
    6. 'rst' → logprob: -16.673587799072266
    7. 'r' → logprob: -16.798587799072266
    8. '_strip' → logprob: -17.673587799072266
    9. '(strip' → logprob: -17.798587799072266
    10. 'decode' → logprob: -18.423587799072266

Token 513: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008242443203926086
    2. '\n' → logprob: -6.008242607116699
    3. '()\' → logprob: -6.133242607116699
    4. '()
' → logprob: -6.383242607116699
    5. '(' → logprob: -6.508242607116699
    6. '('\' → logprob: -8.5082426071167
    7. '("\' → logprob: -9.2582426071167
    8. '(
' → logprob: -10.0082426071167
    9. '"\' → logprob: -11.3832426071167
    10. ''\' → logprob: -11.6332426071167

Token 514: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 515: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 516: ' readline' (ID: 179561)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 517: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0002755174064077437
    2. '(' → logprob: -8.375275611877441
    3. '()\' → logprob: -10.750275611877441
    4. '()
' → logprob: -11.500275611877441
    5. '<|end|>' → logprob: -12.000275611877441
    6. ' ()' → logprob: -13.000275611877441
    7. '()

' → logprob: -13.750275611877441
    8. '()<' → logprob: -14.625275611877441
    9. '```' → logprob: -14.875275611877441
    10. ')' → logprob: -14.875275611877441

Token 518: ' lit' (ID: 11980)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01982385665178299
    2. '(' → logprob: -4.019824028015137
    3. '()\' → logprob: -7.269824028015137
    4. '<|end|>' → logprob: -7.769824028015137
    5. '('\' → logprob: -8.519824028015137
    6. '()
' → logprob: -8.769824028015137
    7. '\n' → logprob: -9.769824028015137
    8. '(
' → logprob: -10.769824028015137
    9. ' ()' → logprob: -10.894824028015137
    10. '("\' → logprob: -11.394824028015137

Token 519: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.012860181741416454
    2. '('\' → logprob: -4.637860298156738
    3. '<|end|>' → logprob: -6.387860298156738
    4. '()\' → logprob: -7.012860298156738
    5. '(' → logprob: -8.387860298156738
    6. '()
' → logprob: -9.512860298156738
    7. '("\' → logprob: -9.637860298156738
    8. '\n' → logprob: -9.762860298156738
    9. 'newline' → logprob: -11.012860298156738
    10. '\' → logprob: -11.137860298156738

Token 520: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.9797239899635315
    2. ' ligne' → logprob: -1.7297239303588867
    3. '<|end|>' → logprob: -1.8547239303588867
    4. 'line' → logprob: -1.9797239303588867
    5. ' line' → logprob: -2.1047239303588867
    6. '\n' → logprob: -4.229723930358887
    7. 'newline' → logprob: -4.479723930358887
    8. ' newline' → logprob: -6.354723930358887
    9. 'car' → logprob: -8.104723930358887
    10. '\' → logprob: -8.229723930358887

Token 521: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00606187479570508
    2. '()\' → logprob: -5.506062030792236
    3. '\n' → logprob: -7.256062030792236
    4. '()
' → logprob: -7.256062030792236
    5. '('\' → logprob: -8.131061553955078
    6. '(' → logprob: -8.881061553955078
    7. '<|end|>' → logprob: -10.256061553955078
    8. '().' → logprob: -11.131061553955078
    9. '("\' → logprob: -11.131061553955078
    10. '\' → logprob: -11.256061553955078

Token 522: ' r' (ID: 428)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 523: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.00048024329589679837
    2. 'rstrip' → logprob: -7.8754801750183105
    3. 'trip' → logprob: -9.250480651855469
    4. '_strip' → logprob: -13.625480651855469
    5. 'eturn' → logprob: -14.125480651855469
    6. 'stip' → logprob: -14.500480651855469
    7. 'str' → logprob: -14.750480651855469
    8. 'Strip' → logprob: -15.125480651855469
    9. '.strip' → logprob: -15.375480651855469
    10. '-strip' → logprob: -15.750480651855469

Token 524: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02994694374501705
    2. '('\' → logprob: -3.52994704246521
    3. '("\' → logprob: -9.404947280883789
    4. '()\' → logprob: -9.779947280883789
    5. '()
' → logprob: -10.279947280883789
    6. '().' → logprob: -11.529947280883789
    7. '(' → logprob: -12.279947280883789
    8. '())' → logprob: -13.029947280883789
    9. '('' → logprob: -13.904947280883789
    10. '()`' → logprob: -14.404947280883789

Token 525: ' sup' (ID: 1982)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07572492957115173
    2. '('\' → logprob: -2.8257248401641846
    3. '(' → logprob: -6.200725078582764
    4. '().' → logprob: -6.325725078582764
    5. ' removes' → logprob: -6.450725078582764
    6. 'sup' → logprob: -6.575725078582764
    7. ' supprim' → logprob: -6.950725078582764
    8. '("\' → logprob: -7.325725078582764
    9. 'remove' → logprob: -7.325725078582764
    10. '()
' → logprob: -7.450725078582764

Token 526: 'prime' (ID: 46441)
  Prédit: 'ove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ove' → logprob: -0.6545526385307312
    2. 'oves' → logprob: -0.9045526385307312
    3. 'et' → logprob: -2.779552698135376
    4. 'ov' → logprob: -4.904552459716797
    5. '()' → logprob: -6.154552459716797
    6. 'oved' → logprob: -6.279552459716797
    7. 'ouve' → logprob: -7.029552459716797
    8. 'e' → logprob: -8.779552459716797
    9. 'ont' → logprob: -8.904552459716797
    10. 'ets' → logprob: -8.904552459716797

Token 527: ' les' (ID: 1341)
  Prédit: '('\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.12130365520715714
    2. '()' → logprob: -2.3713035583496094
    3. ''\' → logprob: -4.121303558349609
    4. '("\' → logprob: -5.746303558349609
    5. '()\' → logprob: -7.371303558349609
    6. '\n' → logprob: -7.871303558349609
    7. '"\' → logprob: -8.74630355834961
    8. '()
' → logprob: -9.12130355834961
    9. 'the' → logprob: -9.87130355834961
    10. '\' → logprob: -10.12130355834961

Token 528: ' espaces' (ID: 98361)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.017410412430763245
    2. 'car' → logprob: -5.3924102783203125
    3. ''\' → logprob: -5.5174102783203125
    4. ' \' → logprob: -5.6424102783203125
    5. '\r' → logprob: -6.5174102783203125
    6. '\s' → logprob: -6.7674102783203125
    7. ' caractères' → logprob: -6.8924102783203125
    8. 's' → logprob: -8.392410278320312
    9. '\u' → logprob: -8.392410278320312
    10. '"\' → logprob: -8.517410278320312

Token 529: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.019032573327422142
    2. '()\' → logprob: -4.6440324783325195
    3. '('\' → logprob: -5.2690324783325195
    4. '().' → logprob: -6.0190324783325195
    5. '()
' → logprob: -7.6440324783325195
    6. '("\' → logprob: -8.51903247833252
    7. '<|end|>' → logprob: -8.64403247833252
    8. '())' → logprob: -8.89403247833252
    9. '\n' → logprob: -9.14403247833252
    10. '\' → logprob: -9.26903247833252

Token 530: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.007766577880829573
    2. 'queue' → logprob: -5.2577667236328125
    3. '```' → logprob: -6.8827667236328125
    4. '\n' → logprob: -8.132766723632812
    5. 'ex' → logprob: -8.757766723632812
    6. '  
' → logprob: -9.257766723632812
    7. 'end' → logprob: -9.507766723632812
    8. '  ' → logprob: -9.507766723632812
    9. 'dro' → logprob: -9.632766723632812
    10. ' fin' → logprob: -9.632766723632812

Token 531: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.10178335011005402
    2. ' de' → logprob: -2.726783275604248
    3. '\n' → logprob: -4.226783275604248
    4. '\r' → logprob: -5.101783275604248
    5. '\' → logprob: -5.226783275604248
    6. '\u' → logprob: -7.226783275604248
    7. '('\' → logprob: -7.226783275604248
    8. '"\' → logprob: -7.601783275604248
    9. ''\' → logprob: -7.726783275604248
    10. '```' → logprob: -7.851783275604248

Token 532: ' chaîne' (ID: 89288)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.0002889874158427119
    2. 'chaine' → logprob: -8.750288963317871
    3. 'line' → logprob: -9.250288963317871
    4. ' ligne' → logprob: -11.250288963317871
    5. 'l' → logprob: -11.250288963317871
    6. 'cha' → logprob: -12.125288963317871
    7. 'string' → logprob: -13.125288963317871
    8. 'texte' → logprob: -15.125288963317871
    9. 'linha' → logprob: -15.250288963317871
    10. 'la' → logprob: -16.000289916992188

Token 533: ' (' (ID: 350)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06533526629209518
    2. '\n' → logprob: -3.315335273742676
    3. '<|end|>' → logprob: -4.440335273742676
    4. ')' → logprob: -5.315335273742676
    5. '()
' → logprob: -5.815335273742676
    6. '()\' → logprob: -5.940335273742676
    7. '('\' → logprob: -6.440335273742676
    8. '(' → logprob: -7.690335273742676
    9. '```' → logprob: -7.815335273742676
    10. '#' → logprob: -8.190335273742676

Token 534: 'not' (ID: 2878)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03719637915492058
    2. '\n' → logprob: -4.037196159362793
    3. ')\' → logprob: -4.787196159362793
    4. '"\' → logprob: -5.662196159362793
    5. '()' → logprob: -5.912196159362793
    6. ''\' → logprob: -6.037196159362793
    7. '())' → logprob: -7.412196159362793
    8. '('\' → logprob: -7.787196159362793
    9. '()\' → logprob: -8.662196159362793
    10. '\r' → logprob: -8.662196159362793

Token 535: 'amment' (ID: 23443)
  Prédit: 'ail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ail' → logprob: -0.7665431499481201
    2. '\n' → logprob: -1.5165431499481201
    3. ''\' → logprob: -2.26654314994812
    4. '"\' → logprob: -3.51654314994812
    5. '('\' → logprob: -3.64154314994812
    6. 'def' → logprob: -3.89154314994812
    7. '="\' → logprob: -4.391543388366699
    8. ''' → logprob: -4.766543388366699
    9. '='\' → logprob: -4.891543388366699
    10. 'e' → logprob: -4.891543388366699

Token 536: ' '\' (ID: 10855)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3549416959285736
    2. 'le' → logprob: -1.854941725730896
    3. ''\' → logprob: -2.4799416065216064
    4. '"\' → logprob: -3.4799416065216064
    5. ' le' → logprob: -3.9799416065216064
    6. '\r' → logprob: -5.6049418449401855
    7. '\' → logprob: -6.6049418449401855
    8. '('\' → logprob: -6.8549418449401855
    9. ' '\' → logprob: -7.3549418449401855
    10. '\u' → logprob: -7.3549418449401855

Token 537: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.014163628220558167
    2. '\n' → logprob: -4.264163494110107
    3. 'r' → logprob: -16.389163970947266
    4. '\r' → logprob: -18.139163970947266
    5. '\' → logprob: -19.764163970947266
    6. 'newline' → logprob: -19.889163970947266
    7. ' n' → logprob: -20.639163970947266
    8. 'x' → logprob: -21.264163970947266
    9. '	n' → logprob: -21.264163970947266
    10. '\
' → logprob: -21.264163970947266

Token 538: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.00419296370819211
    2. ')' → logprob: -5.50419282913208
    3. '")' → logprob: -9.629193305969238
    4. ''' → logprob: -10.629193305969238
    5. '()' → logprob: -11.129193305969238
    6. '')
' → logprob: -12.129193305969238
    7. '').' → logprob: -13.754193305969238
    8. '')"' → logprob: -14.379193305969238
    9. ''))' → logprob: -14.504193305969238
    10. '`)' → logprob: -15.004193305969238

Token 539: '.

' (ID: 364)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 540: 'def' (ID: 1314)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5607206225395203
    2. 'def' → logprob: -1.435720682144165
    3. '<|end|>' → logprob: -2.435720682144165
    4. '#' → logprob: -3.435720682144165
    5. '<|end|>' → logprob: -3.560720682144165
    6. '
' → logprob: -4.435720443725586
    7. '\' → logprob: -5.060720443725586
    8. 'class' → logprob: -5.560720443725586
    9. 'import' → logprob: -5.560720443725586
    10. '

' → logprob: -5.935720443725586

Token 541: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.014250358566641808
    2. ' solve' → logprob: -4.8892502784729
    3. 'main' → logprob: -5.7642502784729
    4. ' dfs' → logprob: -6.6392502784729
    5. ' parse' → logprob: -7.8892502784729
    6. ' solution' → logprob: -8.139250755310059
    7. 'solve' → logprob: -8.264250755310059
    8. ' factorial' → logprob: -8.389250755310059
    9. ' resolve' → logprob: -8.889250755310059
    10. ' bfs' → logprob: -8.889250755310059

Token 542: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -6.869017852295656e-06
    2. '()' → logprob: -12.500006675720215
    3. ' ():' → logprob: -13.125006675720215
    4. '(' → logprob: -14.125006675720215
    5. '():
' → logprob: -14.750006675720215
    6. ':' → logprob: -17.62500762939453
    7. '()>' → logprob: -18.25000762939453
    8. '():
' → logprob: -18.75000762939453
    9. '().' → logprob: -19.37500762939453
    10. '()">' → logprob: -19.37500762939453

Token 543: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010181600227952003
    2. ':' → logprob: -7.876018047332764
    3. '    
' → logprob: -8.001018524169922
    4. '(' → logprob: -9.501018524169922
    5. '    ' → logprob: -9.501018524169922
    6. 'n' → logprob: -9.751018524169922
    7. '()' → logprob: -11.126018524169922
    8. '(n' → logprob: -11.501018524169922
    9. 'input' → logprob: -11.626018524169922
    10. 'a' → logprob: -12.001018524169922

Token 544: ' """
' (ID: 7037)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2311968058347702
    2. ' n' → logprob: -1.8561967611312866
    3. ' pass' → logprob: -3.606196880340576
    4. '   ' → logprob: -4.231196880340576
    5. 'pass' → logprob: -5.731196880340576
    6. 't' → logprob: -6.356196880340576
    7. ' #' → logprob: -7.231196880340576
    8. '#' → logprob: -7.606196880340576
    9. 'N' → logprob: -7.606196880340576
    10. '	n' → logprob: -8.106196403503418

Token 545: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3076906204223633
    2. '   ' → logprob: -1.6826906204223633
    3. ' n' → logprob: -3.4326906204223633
    4. 't' → logprob: -3.6826906204223633
    5. 'N' → logprob: -4.432690620422363
    6. '#' → logprob: -6.182690620422363
    7. 'T' → logprob: -6.307690620422363
    8. ' t' → logprob: -6.807690620422363
    9. 'import' → logprob: -7.182690620422363
    10. 's' → logprob: -7.432690620422363

Token 546: ' Fonction' (ID: 189149)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9197975397109985
    2. 'pass' → logprob: -0.9197975397109985
    3. ' pass' → logprob: -2.544797420501709
    4. '   ' → logprob: -2.669797420501709
    5. 'n' → logprob: -4.169797420501709
    6. ' #' → logprob: -4.294797420501709
    7. ' n' → logprob: -5.669797420501709
    8. 'Pass' → logprob: -5.919797420501709
    9. ' ' → logprob: -6.169797420501709
    10. 'def' → logprob: -6.294797420501709

Token 547: ' principale' (ID: 68926)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.09957224130630493
    2. '():
' → logprob: -3.47457218170166
    3. ' principale' → logprob: -3.59957218170166
    4. 'def' → logprob: -4.47457218170166
    5. 'main' → logprob: -5.22457218170166
    6. '()' → logprob: -5.22457218170166
    7. ':' → logprob: -5.34957218170166
    8. ' main' → logprob: -5.72457218170166
    9. '   ' → logprob: -6.22457218170166
    10. 'princip' → logprob: -6.84957218170166

Token 548: ' du' (ID: 1462)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.004256596323102713
    2. ':' → logprob: -5.504256725311279
    3. '()' → logprob: -9.129256248474121
    4. '():
' → logprob: -10.379256248474121
    5. '   ' → logprob: -10.629256248474121
    6. 'def' → logprob: -11.879256248474121
    7. ' ():' → logprob: -12.379256248474121
    8. ' :' → logprob: -13.254256248474121
    9. '):' → logprob: -14.004256248474121
    10. '(' → logprob: -14.879256248474121

Token 549: ' programme' (ID: 18190)
  Prédit: 'script'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'script' → logprob: -0.8616853952407837
    2. 'programme' → logprob: -0.8616853952407837
    3. 'program' → logprob: -1.9866853952407837
    4. 'code' → logprob: -4.236685276031494
    5. ' script' → logprob: -6.111685276031494
    6. ' programme' → logprob: -7.361685276031494
    7. 'programma' → logprob: -9.236685752868652
    8. 'sys' → logprob: -9.236685752868652
    9. '__' → logprob: -9.361685752868652
    10. 'programm' → logprob: -9.361685752868652

Token 550: '.' (ID: 13)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.14771166443824768
    2. ':' → logprob: -2.522711753845215
    3. '   ' → logprob: -2.897711753845215
    4. '):' → logprob: -7.397711753845215
    5. '()' → logprob: -7.522711753845215
    6. '():
' → logprob: -7.647711753845215
    7. 'def' → logprob: -9.147711753845215
    8. ' :' → logprob: -9.272711753845215
    9. ':
' → logprob: -10.272711753845215
    10. '.' → logprob: -10.772711753845215

Token 551: ' Elle' (ID: 21300)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018000080017372966
    2. '    
' → logprob: -6.751800060272217
    3. '    ' → logprob: -7.751800060272217
    4. ':' → logprob: -9.876799583435059
    5. '#' → logprob: -10.251799583435059
    6. '<|end|>' → logprob: -10.501799583435059
    7. '
' → logprob: -10.626799583435059
    8. ' 
' → logprob: -11.876799583435059
    9. ')' → logprob: -12.001799583435059
    10. '    
    
' → logprob: -12.251799583435059

Token 552: ' ex' (ID: 513)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4739799499511719
    2. '   ' → logprob: -1.2239799499511719
    3. '():' → logprob: -3.973979949951172
    4. ' est' → logprob: -4.098979949951172
    5. '()' → logprob: -4.473979949951172
    6. 'def' → logprob: -5.223979949951172
    7. ' continue' → logprob: -5.473979949951172
    8. ' commence' → logprob: -5.723979949951172
    9. 'contin' → logprob: -6.098979949951172
    10. ' :' → logprob: -6.098979949951172

Token 553: 'éc' (ID: 5675)
  Prédit: 'éc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éc' → logprob: -0.24781391024589539
    2. 'ecute' → logprob: -1.6228139400482178
    3. 'ec' → logprob: -4.622813701629639
    4. 'é' → logprob: -5.122813701629639
    5. 'p' → logprob: -6.372813701629639
    6. '#' → logprob: -6.747813701629639
    7. 'écut' → logprob: -7.372813701629639
    8. 'e' → logprob: -7.497813701629639
    9. '_' → logprob: -8.747814178466797
    10. '"""
' → logprob: -8.747814178466797

Token 554: 'ute' (ID: 1331)
  Prédit: 'cute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cute' → logprob: -0.6763231158256531
    2. 'ute' → logprob: -0.8013231158256531
    3. 'ecute' → logprob: -3.176323175430298
    4. 'c' → logprob: -7.676322937011719
    5. 'ec' → logprob: -8.426322937011719
    6. 'e' → logprob: -8.676322937011719
    7. '#' → logprob: -10.301322937011719
    8. 'éc' → logprob: -10.551322937011719
    9. 'cue' → logprob: -10.676322937011719
    10. '\' → logprob: -11.426322937011719

Token 555: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.28032386302948
    2. 'le' → logprob: -1.53032386302948
    3. ' le' → logprob: -1.65532386302948
    4. ' la' → logprob: -1.78032386302948
    5. 'la' → logprob: -3.0303239822387695
    6. '():' → logprob: -3.1553239822387695
    7. 'l' → logprob: -4.1553239822387695
    8. 'pass' → logprob: -4.5303239822387695
    9. '_' → logprob: -5.0303239822387695
    10. '   ' → logprob: -5.7803239822387695

Token 556: ' logique' (ID: 115350)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.22229120135307312
    2. 'import' → logprob: -2.7222912311553955
    3. '#' → logprob: -2.8472912311553955
    4. 'code' → logprob: -4.222290992736816
    5. 'solution' → logprob: -4.222290992736816
    6. 'suite' → logprob: -4.222290992736816
    7. 'logic' → logprob: -4.472290992736816
    8. 'rest' → logprob: -5.347290992736816
    9. ' pass' → logprob: -5.847290992736816
    10. 'log' → logprob: -6.222290992736816

Token 557: ' principale' (ID: 68926)
  Prédit: ' du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.8573342561721802
    2. ' de' → logprob: -1.3573342561721802
    3. '   ' → logprob: -1.8573342561721802
    4. ' principale' → logprob: -2.2323341369628906
    5. 'de' → logprob: -4.482334136962891
    6. ':' → logprob: -4.732334136962891
    7. 'princip' → logprob: -5.232334136962891
    8. ' principal' → logprob: -5.357334136962891
    9. 'def' → logprob: -5.357334136962891
    10. '    ' → logprob: -6.232334136962891

Token 558: ',' (ID: 11)
  Prédit: ' du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.615261971950531
    2. '   ' → logprob: -1.8652620315551758
    3. '.' → logprob: -2.490262031555176
    4. ':' → logprob: -2.615262031555176
    5. 'du' → logprob: -2.740262031555176
    6. ' de' → logprob: -3.115262031555176
    7. 'de' → logprob: -3.615262031555176
    8. ',' → logprob: -5.365262031555176
    9. '():' → logprob: -6.115262031555176
    10. 'def' → logprob: -6.115262031555176

Token 559: ' souvent' (ID: 28137)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12027320265769958
    2. 'pass' → logprob: -3.1202731132507324
    3. ' pass' → logprob: -3.3702731132507324
    4. 'import' → logprob: -4.495273113250732
    5. ' souvent' → logprob: -5.120273113250732
    6. ' en' → logprob: -6.495273113250732
    7. '    ' → logprob: -6.745273113250732
    8. '...' → logprob: -6.870273113250732
    9. ' notamment' → logprob: -7.245273113250732
    10. '#' → logprob: -7.495273113250732

Token 560: ' appelée' (ID: 179130)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1332039833068848
    2. ' liée' → logprob: -1.3832039833068848
    3. 'le' → logprob: -2.7582039833068848
    4. ' la' → logprob: -2.8832039833068848
    5. 'celle' → logprob: -3.0082039833068848
    6. 'la' → logprob: -3.8832039833068848
    7. ' le' → logprob: -4.008203983306885
    8. '   ' → logprob: -4.008203983306885
    9. 'à' → logprob: -4.258203983306885
    10. 'pass' → logprob: -4.508203983306885

Token 561: ' point' (ID: 2438)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3321409225463867
    2. 'par' → logprob: -1.3321409225463867
    3. '.' → logprob: -5.707140922546387
    4. 'de' → logprob: -6.332140922546387
    5. 'def' → logprob: -6.332140922546387
    6. 'dans' → logprob: -6.457140922546387
    7. 'main' → logprob: -6.707140922546387
    8. '():' → logprob: -6.707140922546387
    9. '   ' → logprob: -6.707140922546387
    10. '()
' → logprob: -7.082140922546387

Token 562: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.00597761943936348
    2. 'd' → logprob: -6.005977630615234
    3. ' ' → logprob: -7.005977630615234
    4. ' de' → logprob: -7.130977630615234
    5. '   ' → logprob: -8.005977630615234
    6. 'entrée' → logprob: -8.380977630615234
    7. ' entry' → logprob: -8.380977630615234
    8. '()' → logprob: -8.880977630615234
    9. '_' → logprob: -8.880977630615234
    10. '  ' → logprob: -9.005977630615234

Token 563: ''entrée' (ID: 115820)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -0.002632138319313526
    2. ''entrée' → logprob: -6.127632141113281
    3. 'entr' → logprob: -7.752632141113281
    4. '’entrée' → logprob: -11.377632141113281
    5. 'entry' → logprob: -12.502632141113281
    6. 'entrant' → logprob: -14.627632141113281
    7. ' entrée' → logprob: -15.002632141113281
    8. 'entrada' → logprob: -15.127632141113281
    9. '_' → logprob: -15.252632141113281
    10. 'ent' → logprob: -15.502632141113281

Token 564: ' du' (ID: 1462)
  Prédit: ' du'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.4016939699649811
    2. ' de' → logprob: -1.7766939401626587
    3. '()' → logprob: -2.9016940593719482
    4. '   ' → logprob: -3.5266940593719482
    5. 'de' → logprob: -3.9016940593719482
    6. 'du' → logprob: -4.401693820953369
    7. '():' → logprob: -4.651693820953369
    8. ':' → logprob: -4.776693820953369
    9. ' ' → logprob: -5.026693820953369
    10. ')' → logprob: -5.151693820953369

Token 565: ' script' (ID: 11713)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.03208126872777939
    2. ' programme' → logprob: -4.032081127166748
    3. 'program' → logprob: -4.407081127166748
    4. 'code' → logprob: -7.032081127166748
    5. 'script' → logprob: -7.657081127166748
    6. ' script' → logprob: -8.657081604003906
    7. ' code' → logprob: -9.657081604003906
    8. ' program' → logprob: -10.657081604003906
    9. 'programma' → logprob: -11.282081604003906
    10. 'programm' → logprob: -12.032081604003906

Token 566: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4068635106086731
    2. '.' → logprob: -2.0318634510040283
    3. ':' → logprob: -2.0318634510040283
    4. '():' → logprob: -3.4068634510040283
    5. '):' → logprob: -3.9068634510040283
    6. ')' → logprob: -5.406863689422607
    7. '()' → logprob: -5.906863689422607
    8. ' :' → logprob: -5.906863689422607
    9. ',' → logprob: -6.156863689422607
    10. 'def' → logprob: -6.406863689422607

Token 567: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005427849246188998
    2. '    
' → logprob: -8.125542640686035
    3. ':' → logprob: -8.750542640686035
    4. '    ' → logprob: -10.500542640686035
    5. '():' → logprob: -11.500542640686035
    6. ')' → logprob: -11.750542640686035
    7. '(' → logprob: -11.750542640686035
    8. '
' → logprob: -12.250542640686035
    9. '()' → logprob: -12.250542640686035
    10. '):' → logprob: -12.750542640686035

Token 568: ' """

' (ID: 28800)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011708177626132965
    2. '    
' → logprob: -7.501170635223389
    3. '    ' → logprob: -7.626170635223389
    4. '
' → logprob: -10.126171112060547
    5. ')' → logprob: -11.001171112060547
    6. 'input' → logprob: -11.126171112060547
    7. '#' → logprob: -11.626171112060547
    8. 'import' → logprob: -11.876171112060547
    9. ':' → logprob: -12.126171112060547
    10. 'def' → logprob: -12.376171112060547

Token 569: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4508837163448334
    2. '   ' → logprob: -1.0758837461471558
    3. 'pass' → logprob: -4.325883865356445
    4. '#' → logprob: -6.450883865356445
    5. '    ' → logprob: -6.700883865356445
    6. 'N' → logprob: -6.950883865356445
    7. ' n' → logprob: -6.950883865356445
    8. '    
' → logprob: -7.200883865356445
    9. 'a' → logprob: -7.200883865356445
    10. 'data' → logprob: -7.700883865356445

Token 570: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02558569237589836
    2. 'N' (adapté à ' N') → logprob: -4.025585651397705
    3. 't' → logprob: -5.525585651397705
    4. '#' → logprob: -6.025585651397705
    5. 'T' → logprob: -7.275585651397705
    6. '   ' → logprob: -8.775586128234863
    7. 'pass' → logprob: -9.900586128234863
    8. 'Q' → logprob: -11.150586128234863
    9. 's' → logprob: -11.400586128234863
    10. ' n' → logprob: -11.525586128234863

Token 571: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6638253927230835
    2. '=' → logprob: -0.7888253927230835
    3. ',' → logprob: -3.538825511932373
    4. '=int' → logprob: -6.413825511932373
    5. ' ,' → logprob: -10.538825035095215
    6. ' ' → logprob: -10.913825035095215
    7. '=input' → logprob: -12.413825035095215
    8. '.' → logprob: -12.788825035095215
    9. '   ' → logprob: -13.538825035095215
    10. ' ' → logprob: -13.788825035095215

Token 572: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0007205340662039816
    2. ' int' → logprob: -7.250720500946045
    3. 'input' → logprob: -11.500720977783203
    4. '10' → logprob: -15.125720977783203
    5. ' ' → logprob: -16.500720977783203
    6. '	int' → logprob: -16.750720977783203
    7. 'map' → logprob: -17.375720977783203
    8. '   ' → logprob: -17.750720977783203
    9. ' input' → logprob: -18.000720977783203
    10. '  ' → logprob: -18.125720977783203

Token 573: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.004887773655354977
    2. '(' → logprob: -5.379887580871582
    3. 'input' → logprob: -8.254887580871582
    4. ' (' → logprob: -12.504887580871582
    5. '(
' → logprob: -13.254887580871582
    6. ' input' → logprob: -14.504887580871582
    7. '()' → logprob: -14.504887580871582
    8. ')' → logprob: -15.254887580871582
    9. '=input' → logprob: -15.379887580871582
    10. '('' → logprob: -16.0048885345459

Token 574: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00020544764993246645
    2. '()' → logprob: -8.500205039978027
    3. '())
' → logprob: -13.750205039978027
    4. ' ())' → logprob: -14.750205039978027
    5. '().' → logprob: -15.625205039978027
    6. ')' → logprob: -16.000205993652344
    7. '(' → logprob: -16.375205993652344
    8. '()))' → logprob: -17.000205993652344
    9. '();)' → logprob: -17.125205993652344
    10. '()
' → logprob: -17.875205993652344

Token 575: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 576: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0234509706497192
    2. '   ' → logprob: -1.5234509706497192
    3. 'A' → logprob: -2.3984508514404297
    4. 'numbers' → logprob: -2.8984508514404297
    5. 'arr' → logprob: -3.0234508514404297
    6. 'for' → logprob: -3.5234508514404297
    7. 'data' → logprob: -3.7734508514404297
    8. 'lst' → logprob: -4.14845085144043
    9. 's' → logprob: -4.39845085144043
    10. 'tokens' → logprob: -4.39845085144043

Token 577: ' Lecture' (ID: 106534)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.3922331631183624
    2. '<|end|>' → logprob: -2.01723313331604
    3. 'for' → logprob: -2.89223313331604
    4. ' ' → logprob: -3.64223313331604
    5. 'n' → logprob: -3.89223313331604
    6. 'arr' → logprob: -4.392233371734619
    7. '#' → logprob: -4.517233371734619
    8. '[]' → logprob: -4.517233371734619
    9. ')' → logprob: -5.142233371734619
    10. 'A' → logprob: -5.142233371734619

Token 578: ' d' (ID: 272)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0001793457195162773
    2. '(' → logprob: -9.000179290771484
    3. ' ()' → logprob: -10.875179290771484
    4. '())' → logprob: -11.250179290771484
    5. '('' → logprob: -11.750179290771484
    6. ')' → logprob: -12.375179290771484
    7. '()
' → logprob: -12.375179290771484
    8. '()\' → logprob: -13.250179290771484
    9. ' )' → logprob: -14.000179290771484
    10. '(N' → logprob: -14.125179290771484

Token 579: ''un' (ID: 9788)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -6.420598219847307e-05
    2. '(' → logprob: -11.0000638961792
    3. ')' → logprob: -11.0000638961792
    4. 'a' → logprob: -11.5000638961792
    5. '())' → logprob: -11.6250638961792
    6. ' ()' → logprob: -12.0000638961792
    7. '()
' → logprob: -13.5000638961792
    8. '(N' → logprob: -14.0000638961792
    9. '("")' → logprob: -14.6250638961792
    10. 'e' → logprob: -15.3750638961792

Token 580: ' entier' (ID: 80473)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.8109094500541687
    2. ')' → logprob: -1.6859095096588135
    3. 'ent' → logprob: -2.4359095096588135
    4. 'es' → logprob: -2.5609095096588135
    5. ' )' → logprob: -3.3109095096588135
    6. ' ' → logprob: -3.4359095096588135
    7. 'n' → logprob: -3.5609095096588135
    8. ' nombre' → logprob: -3.5609095096588135
    9. 'entrée' → logprob: -4.060909271240234
    10. 'e' → logprob: -4.435909271240234

Token 581: ' N' (ID: 478)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 582: ' qui' (ID: 2780)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4840489625930786
    2. '<|end|>' → logprob: -1.2340489625930786
    3. ')' → logprob: -2.484048843383789
    4. '<|end|>' → logprob: -5.484048843383789
    5. '    
' → logprob: -6.109048843383789
    6. '    ' → logprob: -7.359048843383789
    7. ' ' → logprob: -7.984048843383789
    8. '#' → logprob: -8.359048843383789
    9. '  ' → logprob: -8.484048843383789
    10. '
' → logprob: -8.609048843383789

Token 583: ' représente' (ID: 88912)
  Prédit: ' représente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' représente' → logprob: -0.4833376705646515
    2. 're' → logprob: -2.108337640762329
    3. 'repr' → logprob: -2.108337640762329
    4. ' repr' → logprob: -2.983337640762329
    5. 'rep' → logprob: -3.608337640762329
    6. 'cor' → logprob: -4.608337879180908
    7. ' repres' → logprob: -4.858337879180908
    8. 'represent' → logprob: -4.983337879180908
    9. '_re' → logprob: -4.983337879180908
    10. ' correspond' → logprob: -5.483337879180908

Token 584: ' généralement' (ID: 67075)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.3779246509075165
    2. 'le' → logprob: -1.5029246807098389
    3. ' la' → logprob: -3.127924680709839
    4. 'la' → logprob: -3.502924680709839
    5. 'the' → logprob: -5.25292444229126
    6. 'nombre' → logprob: -5.62792444229126
    7. '<|end|>' → logprob: -5.87792444229126
    8. 'l' → logprob: -6.00292444229126
    9. ' the' → logprob: -6.50292444229126
    10. ' ' → logprob: -6.50292444229126

Token 585: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.0430239699780941
    2. ' le' → logprob: -3.5430240631103516
    3. 'la' → logprob: -4.418024063110352
    4. 'nombre' → logprob: -7.418024063110352
    5. ' la' → logprob: -8.793024063110352
    6. 'l' → logprob: -9.168024063110352
    7. 'the' → logprob: -9.293024063110352
    8. 'un' → logprob: -9.793024063110352
    9. 'une' → logprob: -10.168024063110352
    10. 't' → logprob: -10.793024063110352

Token 586: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.002486476907506585
    2. ' nombre' → logprob: -6.002486705780029
    3. 'n' → logprob: -12.252486228942871
    4. 'nb' → logprob: -12.502486228942871
    5. 'Nombre' → logprob: -14.127486228942871
    6. 'tail' → logprob: -14.502486228942871
    7. 'nom' → logprob: -15.252486228942871
    8. '_nombre' → logprob: -15.252486228942871
    9. 'nbr' → logprob: -16.002487182617188
    10. ' nombres' → logprob: -16.002487182617188

Token 587: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7323862314224243
    2. '<|end|>' → logprob: -1.6073862314224243
    3. ' des' → logprob: -2.3573861122131348
    4. ' of' → logprob: -3.1073861122131348
    5. ')' → logprob: -3.2323861122131348
    6. ' de' → logprob: -3.3573861122131348
    7. 'de' → logprob: -3.6073861122131348
    8. '    ' → logprob: -3.9823861122131348
    9. 'des' → logprob: -4.232386112213135
    10. ' )' → logprob: -4.482386112213135

Token 588: ''' (ID: 6)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.4889737367630005
    2. ' éléments' → logprob: -0.9889737367630005
    3. ' elements' → logprob: -4.988973617553711
    4. ' ' → logprob: -6.488973617553711
    5. 'elements' → logprob: -6.738973617553711
    6. '_' → logprob: -6.863973617553711
    7. ' lignes' → logprob: -7.613973617553711
    8. 'él' → logprob: -7.738973617553711
    9. 'ombres' → logprob: -8.363973617553711
    10. 'é' → logprob: -8.363973617553711

Token 589: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.028843702748417854
    2. 'elements' → logprob: -3.903843641281128
    3. ' éléments' → logprob: -6.653843879699707
    4. 's' → logprob: -6.653843879699707
    5. 'items' → logprob: -6.903843879699707
    6. 'l' → logprob: -6.903843879699707
    7. 'obj' → logprob: -7.028843879699707
    8. ' elements' → logprob: -7.778843879699707
    9. 'cases' → logprob: -7.903843879699707
    10. 'é' → logprob: -8.278843879699707

Token 590: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -1.3306015716807451e-05
    2. 'ment' → logprob: -11.50001335144043
    3. 'm' → logprob: -13.50001335144043
    4. 'MENTS' → logprob: -14.12501335144043
    5. 'ements' → logprob: -14.87501335144043
    6. '```' → logprob: -15.75001335144043
    7. 'nts' → logprob: -16.00001335144043
    8. 'phants' → logprob: -16.00001335144043
    9. 'me' → logprob: -16.75001335144043
    10. 'éments' → logprob: -16.75001335144043

Token 591: ' ou' (ID: 2031)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14925265312194824
    2. ')' → logprob: -2.5242526531219482
    3. '<|end|>' → logprob: -3.1492526531219482
    4. '    
' → logprob: -5.149252891540527
    5. '    ' → logprob: -5.274252891540527
    6. ' ' → logprob: -6.649252891540527
    7. '[' → logprob: -7.649252891540527
    8. '<|end|>' → logprob: -7.649252891540527
    9. '[]' → logprob: -7.774252891540527
    10. '  ' → logprob: -7.774252891540527

Token 592: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.5046324133872986
    2. 'd' → logprob: -2.3796324729919434
    3. 'de' → logprob: -2.6296324729919434
    4. 'le' → logprob: -2.7546324729919434
    5. 'cases' → logprob: -2.7546324729919434
    6. ' la' → logprob: -3.6296324729919434
    7. 'l' → logprob: -3.7546324729919434
    8. 'N' → logprob: -3.8796324729919434
    9. ' d' → logprob: -5.129632472991943
    10. 'une' → logprob: -5.754632472991943

Token 593: ' taille' (ID: 41644)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -1.2882715463638306
    2. 'tail' → logprob: -2.038271427154541
    3. 'suite' → logprob: -2.038271427154541
    4. '#' → logprob: -2.538271427154541
    5. 'prem' → logprob: -2.663271427154541
    6. 't' → logprob: -2.663271427154541
    7. 'number' → logprob: -3.038271427154541
    8. 'quant' → logprob: -4.163271427154541
    9. 'size' → logprob: -4.288271427154541
    10. 'su' → logprob: -4.913271427154541

Token 594: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25884193181991577
    2. ')' → logprob: -1.8838419914245605
    3. ' de' → logprob: -3.7588419914245605
    4. '    ' → logprob: -4.6338419914245605
    5. 'de' → logprob: -4.6338419914245605
    6. ' ' → logprob: -4.8838419914245605
    7. ' )' → logprob: -5.1338419914245605
    8. '_' → logprob: -5.3838419914245605
    9. '=' → logprob: -6.0088419914245605
    10. '  ' → logprob: -6.5088419914245605

Token 595: ''une' (ID: 13337)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.2667618989944458
    2. 'es' → logprob: -2.7667617797851562
    3. ' la' → logprob: -2.7667617797851562
    4. 'u' → logprob: -3.1417617797851562
    5. 'a' → logprob: -3.3917617797851562
    6. 'la' → logprob: -4.141761779785156
    7. ' e' → logprob: -5.016761779785156
    8. ''une' → logprob: -6.266761779785156
    9. 'une' → logprob: -6.766761779785156
    10. 'l' → logprob: -6.766761779785156

Token 596: ' sé' (ID: 7462)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.46484267711639404
    2. 'sequence' → logprob: -2.3398427963256836
    3. 'array' → logprob: -2.4648427963256836
    4. 'list' → logprob: -3.0898427963256836
    5. ' sequence' → logprob: -3.5898427963256836
    6. ' array' → logprob: -3.7148427963256836
    7. ' liste' → logprob: -4.214842796325684
    8. 'range' → logprob: -4.464842796325684
    9. 'lst' → logprob: -5.089842796325684
    10. ' ' → logprob: -5.089842796325684

Token 597: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.0021736971102654934
    2. 'rie' → logprob: -6.252173900604248
    3. 'q' → logprob: -8.75217342376709
    4. 'QUENCE' → logprob: -10.25217342376709
    5. 'que' → logprob: -11.00217342376709
    6. 'qu' → logprob: -11.62717342376709
    7. 'ance' → logprob: -11.75217342376709
    8. 'r' → logprob: -12.37717342376709
    9. '#' → logprob: -13.00217342376709
    10. '-' → logprob: -13.37717342376709

Token 598: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 599: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09060648828744888
    2. 'arr' → logprob: -3.215606451034546
    3. 'data' → logprob: -4.715606689453125
    4. 'a' → logprob: -4.715606689453125
    5. 'for' → logprob: -4.715606689453125
    6. '    
' → logprob: -5.465606689453125
    7. 'array' → logprob: -5.965606689453125
    8. 'numbers' → logprob: -6.465606689453125
    9. '    ' → logprob: -6.590606689453125
    10. 'items' → logprob: -6.715606689453125

Token 600: ' #' (ID: 1069)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.5284417271614075
    2. 'A' → logprob: -1.5284416675567627
    3. 'a' → logprob: -2.4034416675567627
    4. 'numbers' → logprob: -3.5284416675567627
    5. 'data' → logprob: -3.9034416675567627
    6. '   ' → logprob: -4.153441905975342
    7. 'sequence' → logprob: -4.278441905975342
    8. 'lst' → logprob: -4.903441905975342
    9. 'seq' → logprob: -5.778441905975342
    10. 's' → logprob: -5.903441905975342

Token 601: ' On' (ID: 2160)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.15177473425865173
    2. 'A' → logprob: -3.0267746448516846
    3. 'numbers' → logprob: -3.6517746448516846
    4. 'a' → logprob: -3.7767746448516846
    5. 'lst' → logprob: -4.276774883270264
    6. 'data' → logprob: -4.401774883270264
    7. 'sequence' → logprob: -4.901774883270264
    8. 'values' → logprob: -6.151774883270264
    9. 'elements' → logprob: -6.276774883270264
    10. 'dp' → logprob: -6.651774883270264

Token 602: ' utilise' (ID: 70283)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3127734661102295
    2. ' =' → logprob: -2.5627734661102295
    3. 'for' → logprob: -2.6877734661102295
    4. 's' → logprob: -3.9377734661102295
    5. ' for' → logprob: -4.562773704528809
    6. 'arr' → logprob: -4.687773704528809
    7. 'lst' → logprob: -4.812773704528809
    8. '   ' → logprob: -4.937773704528809
    9. ' A' → logprob: -4.937773704528809
    10. '=' → logprob: -4.937773704528809

Token 603: ' la' (ID: 557)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.11295722424983978
    2. '[]' → logprob: -2.737957239151001
    3. ' range' → logprob: -4.237957000732422
    4. '[' → logprob: -4.612957000732422
    5. 'map' → logprob: -5.362957000732422
    6. 'for' → logprob: -5.362957000732422
    7. 'deque' → logprob: -5.737957000732422
    8. 'a' → logprob: -6.862957000732422
    9. '   ' → logprob: -6.862957000732422
    10. 'list' → logprob: -6.862957000732422

Token 604: ' fonction' (ID: 17610)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07643085718154907
    2. 'lst' → logprob: -3.8264307975769043
    3. ' for' → logprob: -4.326430797576904
    4. 'range' → logprob: -5.076430797576904
    5. 'liste' → logprob: -5.451430797576904
    6. 'data' → logprob: -5.576430797576904
    7. 'arr' → logprob: -5.576430797576904
    8. 'nums' → logprob: -5.701430797576904
    9. 'deque' → logprob: -6.076430797576904
    10. '_' → logprob: -6.201430797576904

Token 605: ' input' (ID: 3422)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6038251519203186
    2. 'for' → logprob: -1.4788250923156738
    3. ' range' → logprob: -2.478825092315674
    4. 'map' → logprob: -2.728825092315674
    5. ' for' → logprob: -3.228825092315674
    6. ' map' → logprob: -4.353825092315674
    7. '[]' → logprob: -5.853825092315674
    8. 'deque' → logprob: -5.853825092315674
    9. 'arr' → logprob: -5.978825092315674
    10. 'input' → logprob: -5.978825092315674

Token 606: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002778012305498123
    2. '(' → logprob: -6.377778053283691
    3. '()
' → logprob: -7.252778053283691
    4. '(
' → logprob: -9.377778053283691
    5. '_' → logprob: -9.627778053283691
    6. 's' → logprob: -10.252778053283691
    7. '()

' → logprob: -10.627778053283691
    8. '().' → logprob: -10.752778053283691
    9. '_list' → logprob: -10.752778053283691
    10. '(),' → logprob: -11.127778053283691

Token 607: ' défin' (ID: 57890)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0052708727307617664
    2. '   ' → logprob: -5.505270957946777
    3. '()
' → logprob: -7.630270957946777
    4. 'for' → logprob: -8.005270957946777
    5. '(' → logprob: -9.255270957946777
    6. ',' → logprob: -9.880270957946777
    7. '().' → logprob: -10.005270957946777
    8. ' for' → logprob: -10.380270957946777
    9. ')' → logprob: -10.755270957946777
    10. '.' → logprob: -11.005270957946777

Token 608: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.3661682903766632
    2. '()' → logprob: -1.3661682605743408
    3. '   ' → logprob: -4.11616849899292
    4. ')' → logprob: -4.61616849899292
    5. 'ue' → logprob: -4.99116849899292
    6. '()
' → logprob: -5.11616849899292
    7. 'is' → logprob: -5.24116849899292
    8. 'it' → logprob: -6.49116849899292
    9. '())' → logprob: -6.74116849899292
    10. '(
' → logprob: -7.61616849899292

Token 609: ' précéd' (ID: 55435)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0072676134295761585
    2. '   ' → logprob: -5.757267475128174
    3. '()
' → logprob: -6.507267475128174
    4. ' ici' → logprob: -7.132267475128174
    5. 'pour' → logprob: -7.382267475128174
    6. ' pour' → logprob: -8.507267951965332
    7. '(' → logprob: -9.132267951965332
    8. 'au' → logprob: -9.132267951965332
    9. '(
' → logprob: -9.507267951965332
    10. '().' → logprob: -9.632267951965332

Token 610: 'emment' (ID: 58019)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6566893458366394
    2. '   ' → logprob: -0.9066893458366394
    3. ')' → logprob: -3.656689405441284
    4. '_' → logprob: -5.156689167022705
    5. '(' → logprob: -5.281689167022705
    6. ' ' → logprob: -5.406689167022705
    7. 'def' → logprob: -5.531689167022705
    8. '__' → logprob: -5.656689167022705
    9. 'ation' → logprob: -6.281689167022705
    10. 'es' → logprob: -6.406689167022705

Token 611: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11587626487016678
    2. '    
' → logprob: -2.4908761978149414
    3. '
' → logprob: -4.365876197814941
    4. ',' → logprob: -5.740876197814941
    5. 'data' → logprob: -5.990876197814941
    6. '   
' → logprob: -6.115876197814941
    7. '  
' → logprob: -7.115876197814941
    8. ' 
' → logprob: -7.115876197814941
    9. '.' → logprob: -7.240876197814941
    10. ')' → logprob: -7.365876197814941

Token 612: ' obtenir' (ID: 54423)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3730267584323883
    2. ' range' → logprob: -2.3730268478393555
    3. 'range' → logprob: -2.7480268478393555
    4. 'for' → logprob: -3.9980268478393555
    5. ' sys' → logprob: -4.1230268478393555
    6. '[' → logprob: -4.1230268478393555
    7. ' map' → logprob: -4.3730268478393555
    8. '[]' → logprob: -4.6230268478393555
    9. 's' → logprob: -4.8730268478393555
    10. ' for' → logprob: -4.8730268478393555

Token 613: ' la' (ID: 557)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.7204264402389526
    2. ' N' → logprob: -1.4704264402389526
    3. ' un' → logprob: -1.9704264402389526
    4. ' la' → logprob: -2.720426559448242
    5. ' ' → logprob: -4.095426559448242
    6. '()' → logprob: -4.220426559448242
    7. 'une' → logprob: -4.595426559448242
    8. '_' → logprob: -5.345426559448242
    9. 'N' → logprob: -5.470426559448242
    10. '[]' → logprob: -5.595426559448242

Token 614: ' ligne' (ID: 19583)
  Prédit: ' liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.3932701647281647
    2. 'liste' → logprob: -1.2682701349258423
    3. 'list' → logprob: -5.018270015716553
    4. ' sequence' → logprob: -5.143270015716553
    5. ' list' → logprob: -5.393270015716553
    6. 's' → logprob: -5.768270015716553
    7. 'chaine' → logprob: -5.893270015716553
    8. 'suite' → logprob: -5.893270015716553
    9. ' data' → logprob: -6.268270015716553
    10. ' prochaine' → logprob: -6.393270015716553

Token 615: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09358891099691391
    2. 'for' → logprob: -3.3435888290405273
    3. '    
' → logprob: -3.7185888290405273
    4. '()' → logprob: -4.843588829040527
    5. '    ' → logprob: -5.218588829040527
    6. 's' → logprob: -5.843588829040527
    7. ' for' → logprob: -5.968588829040527
    8. ' suivante' → logprob: -6.093588829040527
    9. '.' → logprob: -6.593588829040527
    10. '#' → logprob: -6.843588829040527

Token 616: ' l' (ID: 305)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.03116169013082981
    2. ' code' → logprob: -3.6561617851257324
    3. 'codes' → logprob: -5.781161785125732
    4. 'entrée' → logprob: -6.656161785125732
    5. 'cod' → logprob: -9.406161308288574
    6. 'input' → logprob: -9.531161308288574
    7. 'texte' → logprob: -9.781161308288574
    8. 'c' → logprob: -9.781161308288574
    9. ' codes' → logprob: -10.156161308288574
    10. 'd' → logprob: -10.656161308288574

Token 617: ''entrée' (ID: 115820)
  Prédit: 'iste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.1641560047864914
    2. 'a' → logprob: -2.289155960083008
    3. 'e' → logprob: -4.664155960083008
    4. 'ist' → logprob: -4.789155960083008
    5. 'igne' → logprob: -4.789155960083008
    6. 'og' → logprob: -4.914155960083008
    7. 'ecture' → logprob: -5.539155960083008
    8. ''entrée' → logprob: -6.414155960083008
    9. 'code' → logprob: -6.789155960083008
    10. '#' → logprob: -6.914155960083008

Token 618: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7422242760658264
    2. '   ' → logprob: -1.3672242164611816
    3. 'for' → logprob: -2.7422242164611816
    4. '    
' → logprob: -3.2422242164611816
    5. 'tokens' → logprob: -3.3672242164611816
    6. 's' → logprob: -3.8672242164611816
    7. ')' → logprob: -3.8672242164611816
    8. '.' → logprob: -4.117224216461182
    9. ' suivante' → logprob: -4.492224216461182
    10. 'de' → logprob: -4.867224216461182

Token 619: ' puis' (ID: 18766)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1168719157576561
    2. ' data' → logprob: -3.3668718338012695
    3. 'data' → logprob: -3.8668718338012695
    4. '    ' → logprob: -3.9918718338012695
    5. ' items' → logprob: -4.9918718338012695
    6. '    
' → logprob: -5.3668718338012695
    7. ' lst' → logprob: -5.6168718338012695
    8. 'tokens' → logprob: -6.3668718338012695
    9. 's' → logprob: -6.4918718338012695
    10. 'arr' → logprob: -6.4918718338012695

Token 620: ' int' (ID: 677)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.7817069292068481
    2. 'data' → logprob: -2.1567068099975586
    3. ' data' → logprob: -2.2817068099975586
    4. 'arr' → logprob: -2.5317068099975586
    5. ' lst' → logprob: -2.5317068099975586
    6. 'l' → logprob: -3.1567068099975586
    7. 'for' → logprob: -3.4067068099975586
    8. ' arr' → logprob: -4.156706809997559
    9. ' for' → logprob: -4.781706809997559
    10. 'A' → logprob: -4.781706809997559

Token 621: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006519018206745386
    2. '()' → logprob: -5.131518840789795
    3. '(
' → logprob: -7.756518840789795
    4. ')' → logprob: -10.381519317626953
    5. '('' → logprob: -10.506519317626953
    6. '(...)' → logprob: -11.256519317626953
    7. '(input' → logprob: -11.256519317626953
    8. '(

' → logprob: -11.256519317626953
    9. '("("' → logprob: -11.631519317626953
    10. 's' → logprob: -11.881519317626953

Token 622: ' pour' (ID: 1930)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004224897362291813
    2. '(
' → logprob: -5.87922477722168
    3. '()' → logprob: -7.25422477722168
    4. ')' → logprob: -8.37922477722168
    5. ',' → logprob: -9.12922477722168
    6. ''' → logprob: -9.50422477722168
    7. '('' → logprob: -9.62922477722168
    8. '   ' → logprob: -10.00422477722168
    9. '=' → logprob: -10.50422477722168
    10. 'for' → logprob: -10.75422477722168

Token 623: ' convertir' (ID: 79223)
  Prédit: ' convertir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convertir' → logprob: -0.2568272054195404
    2. 'convert' → logprob: -1.6318272352218628
    3. 'transform' → logprob: -3.8818271160125732
    4. ' convert' → logprob: -5.756827354431152
    5. ' transformer' → logprob: -6.631827354431152
    6. 'l' → logprob: -6.631827354431152
    7. ' lire' → logprob: -6.881827354431152
    8. 'parse' → logprob: -7.131827354431152
    9. 'int' → logprob: -7.381827354431152
    10. 'la' → logprob: -7.506827354431152

Token 624: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.36242711544036865
    2. '(' → logprob: -1.2374271154403687
    3. '(input' → logprob: -4.987427234649658
    4. '(
' → logprob: -5.487427234649658
    5. '('' → logprob: -7.237427234649658
    6. ')' → logprob: -7.612427234649658
    7. 'input' → logprob: -7.987427234649658
    8. '(N' → logprob: -8.4874267578125
    9. '()
' → logprob: -9.1124267578125
    10. '   ' → logprob: -9.1124267578125

Token 625: ' chaîne' (ID: 89288)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -1.5532864332199097
    2. ')' → logprob: -2.053286552429199
    3. 'input' → logprob: -2.303286552429199
    4. '()' → logprob: -2.428286552429199
    5. 'élé' → logprob: -2.803286552429199
    6. 'chaine' → logprob: -2.803286552429199
    7. '.' → logprob: -3.178286552429199
    8. ' input' → logprob: -3.178286552429199
    9. 'line' → logprob: -3.553286552429199
    10. '_' → logprob: -3.553286552429199

Token 626: ' en' (ID: 469)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2447805106639862
    2. '()' → logprob: -1.7447805404663086
    3. ')' → logprob: -4.119780540466309
    4. '(
' → logprob: -4.619780540466309
    5. '   ' → logprob: -5.244780540466309
    6. '(N' → logprob: -5.619780540466309
    7. 's' → logprob: -6.619780540466309
    8. '.' → logprob: -7.119780540466309
    9. ',' → logprob: -7.244780540466309
    10. '#' → logprob: -7.619780540466309

Token 627: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6939700841903687
    2. 'un' → logprob: -1.3189700841903687
    3. 'ent' → logprob: -2.068970203399658
    4. 'nombre' → logprob: -3.193970203399658
    5. 'N' → logprob: -3.318970203399658
    6. ' un' → logprob: -3.818970203399658
    7. 'integer' → logprob: -5.693970203399658
    8. ' nombre' → logprob: -7.068970203399658
    9. ' entier' → logprob: -7.193970203399658
    10. 'l' → logprob: -7.568970203399658

Token 628: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5697218775749207
    2. ')' → logprob: -1.1947219371795654
    3. '    
' → logprob: -3.8197219371795654
    4. '<|end|>' → logprob: -3.8197219371795654
    5. '
' → logprob: -4.069721698760986
    6. '.' → logprob: -4.569721698760986
    7. ' ' → logprob: -4.694721698760986
    8. '[' → logprob: -4.819721698760986
    9. '  
' → logprob: -4.819721698760986
    10. ',' → logprob: -5.444721698760986

Token 629: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9882875084877014
    2. 'arr' → logprob: -1.4882874488830566
    3. 'data' → logprob: -1.8632874488830566
    4. 'A' → logprob: -2.2382874488830566
    5. 'numbers' → logprob: -3.4882874488830566
    6. 'lst' → logprob: -3.6132874488830566
    7. 'for' → logprob: -3.9882874488830566
    8. 's' → logprob: -4.113287448883057
    9. '   ' → logprob: -4.613287448883057
    10. 'l' → logprob: -4.988287448883057

Token 630: ' H' (ID: 487)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5685936212539673
    2. 'arr' → logprob: -1.1935936212539673
    3. 'a' → logprob: -3.0685935020446777
    4. 'numbers' → logprob: -3.5685935020446777
    5. 'lst' → logprob: -3.8185935020446777
    6. 'data' → logprob: -4.193593502044678
    7. 'S' → logprob: -5.318593502044678
    8. 'values' → logprob: -5.693593502044678
    9. 'sequence' → logprob: -5.818593502044678
    10. 'elements' → logprob: -6.943593502044678

Token 631: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.284022718667984
    2. ' =' → logprob: -1.4090226888656616
    3. 's' → logprob: -6.159022808074951
    4. '_' → logprob: -8.159022331237793
    5. '=[]' → logprob: -8.659022331237793
    6. ',' → logprob: -9.659022331237793
    7. '[]' → logprob: -9.909022331237793
    8. '   ' → logprob: -10.534022331237793
    9. '_list' → logprob: -10.534022331237793
    10. ' ' → logprob: -10.659022331237793

Token 632: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.1013960912823677
    2. '[list' → logprob: -2.351396083831787
    3. ' list' → logprob: -7.351396083831787
    4. '[]' → logprob: -8.351396560668945
    5. '[' → logprob: -8.601396560668945
    6. '[int' → logprob: -9.101396560668945
    7. ' [' → logprob: -11.601396560668945
    8. '[l' → logprob: -12.726396560668945
    9. '[List' → logprob: -13.976396560668945
    10. '[input' → logprob: -14.351396560668945

Token 633: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.011126813478767872
    2. '(' → logprob: -4.51112699508667
    3. '()' → logprob: -9.761126518249512
    4. '(int' → logprob: -11.136126518249512
    5. 'map' → logprob: -12.511126518249512
    6. '(
' → logprob: -14.136126518249512
    7. '(range' → logprob: -14.511126518249512
    8. '(m' → logprob: -14.761126518249512
    9. '(input' → logprob: -15.136126518249512
    10. ' map' → logprob: -15.261126518249512

Token 634: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0018007232574746013
    2. '(' → logprob: -6.376800537109375
    3. 'int' → logprob: -9.376800537109375
    4. '(
' → logprob: -12.126800537109375
    5. '(input' → logprob: -12.876800537109375
    6. '<int' → logprob: -13.501800537109375
    7. '[int' → logprob: -13.876800537109375
    8. '(lambda' → logprob: -14.001800537109375
    9. ',int' → logprob: -14.126800537109375
    10. ']int' → logprob: -14.251800537109375

Token 635: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.08486049622297287
    2. '(' → logprob: -3.0848605632781982
    3. ',input' → logprob: -3.4598605632781982
    4. ',' → logprob: -6.084860324859619
    5. '(
' → logprob: -6.959860324859619
    6. 'input' → logprob: -7.459860324859619
    7. '(),' → logprob: -8.334860801696777
    8. ' input' → logprob: -9.959860801696777
    9. ' (' → logprob: -10.584860801696777
    10. '(

' → logprob: -11.084860801696777

Token 636: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02055380307137966
    2. ' input' → logprob: -3.8955538272857666
    3. '(input' → logprob: -11.520553588867188
    4. 'sys' → logprob: -14.520553588867188
    5. ' ' → logprob: -14.770553588867188
    6. ',input' → logprob: -15.145553588867188
    7. '	input' → logprob: -15.270553588867188
    8. '=input' → logprob: -15.895553588867188
    9. '[input' → logprob: -16.020553588867188
    10. '   ' → logprob: -16.395553588867188

Token 637: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.226628895296017e-06
    2. '()' → logprob: -11.875007629394531
    3. ' ().' → logprob: -16.75000762939453
    4. '()))' → logprob: -18.00000762939453
    5. '()
' → logprob: -18.25000762939453
    6. '())' → logprob: -18.50000762939453
    7. '(' → logprob: -18.62500762939453
    8. ')' → logprob: -18.62500762939453
    9. '())))' → logprob: -19.00000762939453
    10. '().'' → logprob: -19.37500762939453

Token 638: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.3856492842023727e-06
    2. 'strip' → logprob: -13.750000953674316
    3. ' split' → logprob: -15.875000953674316
    4. 'rstrip' → logprob: -16.875001907348633
    5. '(split' → logprob: -18.125001907348633
    6. 'spl' → logprob: -18.625001907348633
    7. '.split' → logprob: -18.875001907348633
    8. '().' → logprob: -20.250001907348633
    9. 's' → logprob: -20.750001907348633
    10. ')' → logprob: -21.250001907348633

Token 639: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.02753918245434761
    2. '()' → logprob: -4.027539253234863
    3. '())' → logprob: -5.027539253234863
    4. '())))' → logprob: -5.902539253234863
    5. '))' → logprob: -10.402539253234863
    6. '(' → logprob: -11.402539253234863
    7. '()));' → logprob: -12.527539253234863
    8. '()))
' → logprob: -12.527539253234863
    9. ')))' → logprob: -12.652539253234863
    10. '()]' → logprob: -13.652539253234863

Token 640: '  
' (ID: 4066)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7049618363380432
    2. '   ' → logprob: -1.2049617767333984
    3. '<|end|>' → logprob: -1.7049617767333984
    4. '(' → logprob: -4.329961776733398
    5. ')' → logprob: -5.204961776733398
    6. '#' → logprob: -6.079961776733398
    7. '[]' → logprob: -6.829961776733398
    8. '[' → logprob: -7.579961776733398
    9. '<|end|>' → logprob: -7.954961776733398
    10. '    
' → logprob: -8.204961776733398

Token 641: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 642: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 643: ' Lecture' (ID: 106534)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4256976544857025
    2. '<|end|>' → logprob: -1.175697684288025
    3. '
' → logprob: -4.4256978034973145
    4. '   ' → logprob: -5.0506978034973145
    5. '<|end|>' → logprob: -5.6756978034973145
    6. '[' → logprob: -6.3006978034973145
    7. 'H' → logprob: -6.3006978034973145
    8. 'if' → logprob: -6.6756978034973145
    9. '```' → logprob: -6.8006978034973145
    10. ' ' → logprob: -6.9256978034973145

Token 644: ' d' (ID: 272)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10854838788509369
    2. '(' → logprob: -2.358548402786255
    3. ')' → logprob: -5.983548164367676
    4. '<|end|>' → logprob: -6.233548164367676
    5. '(H' → logprob: -6.733548164367676
    6. '())' → logprob: -6.983548164367676
    7. '   ' → logprob: -7.358548164367676
    8. '#' → logprob: -8.233548164367676
    9. '(N' → logprob: -8.358548164367676
    10. '('' → logprob: -9.358548164367676

Token 645: ''une' (ID: 13337)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00459851510822773
    2. 'a' → logprob: -6.504598617553711
    3. '(' → logprob: -6.754598617553711
    4. 'une' → logprob: -7.129598617553711
    5. ''une' → logprob: -8.129598617553711
    6. 'e' → logprob: -8.879598617553711
    7. '())' → logprob: -9.254598617553711
    8. ' ()' → logprob: -9.379598617553711
    9. ')' → logprob: -9.504598617553711
    10. '(H' → logprob: -10.004598617553711

Token 646: ' seconde' (ID: 66204)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.9569022059440613
    2. 'ligne' → logprob: -1.081902265548706
    3. 'sequence' → logprob: -2.456902265548706
    4. 'suite' → logprob: -2.581902265548706
    5. ')' → logprob: -3.581902265548706
    6. ' liste' → logprob: -4.081902027130127
    7. 'sé' → logprob: -4.081902027130127
    8. ' ligne' → logprob: -4.581902027130127
    9. 'list' → logprob: -5.206902027130127
    10. 's' → logprob: -5.206902027130127

Token 647: ' ligne' (ID: 19583)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4635264277458191
    2. 'ligne' → logprob: -1.2135264873504639
    3. ' ligne' → logprob: -2.963526487350464
    4. '(' → logprob: -4.838526248931885
    5. ')' → logprob: -4.963526248931885
    6. 'line' → logprob: -5.963526248931885
    7. '())' → logprob: -6.588526248931885
    8. 'token' → logprob: -7.213526248931885
    9. 'l' → logprob: -7.463526248931885
    10. '#' → logprob: -8.213526725769043

Token 648: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5579904913902283
    2. '<|end|>' → logprob: -1.432990550994873
    3. '()' → logprob: -2.307990550994873
    4. '())' → logprob: -2.932990550994873
    5. '().' → logprob: -4.432990550994873
    6. '   ' → logprob: -4.682990550994873
    7. ' )' → logprob: -5.432990550994873
    8. '(' → logprob: -5.807990550994873
    9. '<|end|>' → logprob: -6.182990550994873
    10. '.split' → logprob: -6.807990550994873

Token 649: ' l' (ID: 305)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.1436503678560257
    2. ' code' → logprob: -2.2686502933502197
    3. 'ent' → logprob: -5.393650531768799
    4. 'int' → logprob: -5.518650531768799
    5. 'entrée' → logprob: -5.518650531768799
    6. 'tokens' → logprob: -5.643650531768799
    7. 'ints' → logprob: -5.768650531768799
    8. 'codes' → logprob: -6.143650531768799
    9. 'H' → logprob: -6.393650531768799
    10. 'input' → logprob: -6.768650531768799

Token 650: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.2478284239768982
    2. 'entrée' → logprob: -1.622828483581543
    3. 'code' → logprob: -4.122828483581543
    4. ''ent' → logprob: -6.122828483581543
    5. 'input' → logprob: -6.997828483581543
    6. '_code' → logprob: -7.872828483581543
    7. 'texte' → logprob: -8.122828483581543
    8. '’entrée' → logprob: -8.372828483581543
    9. '#' → logprob: -8.622828483581543
    10. 'n' → logprob: -8.872828483581543

Token 651: ',' (ID: 11)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5207852721214294
    2. '()' → logprob: -1.2707853317260742
    3. ')' → logprob: -2.270785331726074
    4. '().' → logprob: -4.020785331726074
    5. '<|end|>' → logprob: -6.520785331726074
    6. '(' → logprob: -7.270785331726074
    7. ' ())' → logprob: -7.645785331726074
    8. '.' → logprob: -7.770785331726074
    9. '   ' → logprob: -8.145785331726074
    10. ' )' → logprob: -9.020785331726074

Token 652: ' cens' (ID: 55288)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 653: 'ée' (ID: 2894)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6636474132537842
    2. 'é' → logprob: -1.6636474132537842
    3. 'it' → logprob: -3.663647413253784
    4. 'ant' → logprob: -3.788647413253784
    5. 'e' → logprob: -3.913647413253784
    6. 'es' → logprob: -4.038647651672363
    7. 'ent' → logprob: -4.288647651672363
    8. 'u' → logprob: -4.413647651672363
    9. 'ans' → logprob: -4.413647651672363
    10. ''est' → logprob: -4.413647651672363

Token 654: ' conten' (ID: 23523)
  Prédit: 'conten'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conten' → logprob: -0.938556969165802
    2. 'con' → logprob: -1.0635569095611572
    3. 'cont' → logprob: -1.9385569095611572
    4. ' conten' → logprob: -2.4385569095611572
    5. 'être' → logprob: -3.8135569095611572
    6. '<|end|>' → logprob: -6.063557147979736
    7. 'don' → logprob: -6.563557147979736
    8. ' fournir' → logprob: -6.813557147979736
    9. 'contain' → logprob: -7.063557147979736
    10. ' représ' → logprob: -7.688557147979736

Token 655: 'ir' (ID: 380)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.02678300067782402
    2. 't' → logprob: -3.776782989501953
    3. 'ir' → logprob: -6.651782989501953
    4. 'ant' → logprob: -6.651782989501953
    5. 'ent' → logprob: -8.026782989501953
    6. 'tre' → logprob: -8.401782989501953
    7. 'tant' → logprob: -8.901782989501953
    8. 'rer' → logprob: -9.776782989501953
    9. 'r' → logprob: -10.151782989501953
    10. 'tir' → logprob: -10.526782989501953

Token 656: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.04567025974392891
    2. '<|end|>' → logprob: -3.1706702709198
    3. ' N' → logprob: -6.295670032501221
    4. '(N' → logprob: -8.295670509338379
    5. ' des' → logprob: -8.670670509338379
    6. 'des' → logprob: -8.795670509338379
    7. 's' → logprob: -9.670670509338379
    8. 'n' → logprob: -10.170670509338379
    9. ')' → logprob: -10.295670509338379
    10. '[N' → logprob: -11.170670509338379

Token 657: ' nombres' (ID: 76205)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 658: ' ent' (ID: 1121)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3612160086631775
    2. '<|end|>' → logprob: -1.2362160682678223
    3. ' )' → logprob: -5.111216068267822
    4. '<|end|>' → logprob: -6.486216068267822
    5. '   ' → logprob: -6.736216068267822
    6. ',' → logprob: -6.861216068267822
    7. ' ' → logprob: -7.486216068267822
    8. '.' → logprob: -8.236215591430664
    9. '[' → logprob: -8.361215591430664
    10. 's' → logprob: -8.861215591430664

Token 659: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0002549024939071387
    2. 'ières' → logprob: -8.75025463104248
    3. 'ier' → logprob: -9.75025463104248
    4. 'ieres' → logprob: -10.50025463104248
    5. 'ière' → logprob: -12.62525463104248
    6. 'ires' → logprob: -13.25025463104248
    7. 'ers' → logprob: -13.62525463104248
    8. 'er' → logprob: -14.00025463104248
    9. 'érés' → logprob: -14.37525463104248
    10. ')' → logprob: -14.75025463104248

Token 660: ' sépar' (ID: 97160)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02025105059146881
    2. '())' → logprob: -4.395251274108887
    3. '()' → logprob: -5.645251274108887
    4. '<|end|>' → logprob: -5.645251274108887
    5. ' )' → logprob: -8.020251274108887
    6. '   ' → logprob: -8.770251274108887
    7. '<|end|>' → logprob: -10.270251274108887
    8. '(' → logprob: -10.270251274108887
    9. '.' → logprob: -10.895251274108887
    10. ' ())' → logprob: -11.020251274108887

Token 661: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.04357248917222023
    2. 'é' → logprob: -3.668572425842285
    3. 'par' → logprob: -5.293572425842285
    4. ' par' → logprob: -6.043572425842285
    5. 'es' → logprob: -6.168572425842285
    6. ''' → logprob: -6.293572425842285
    7. ')' → logprob: -6.918572425842285
    8. 'ées' → logprob: -7.418572425842285
    9. 'space' → logprob: -7.418572425842285
    10. 'ée' → logprob: -7.543572425842285

Token 662: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.5514115691184998
    2. ' par' → logprob: -1.3014116287231445
    3. '('' → logprob: -2.0514116287231445
    4. '()' → logprob: -4.5514116287231445
    5. ''' → logprob: -5.9264116287231445
    6. '(' → logprob: -5.9264116287231445
    7. 'by' → logprob: -6.1764116287231445
    8. '<|end|>' → logprob: -6.6764116287231445
    9. ')' → logprob: -7.0514116287231445
    10. '("' → logprob: -7.6764116287231445

Token 663: ' des' (ID: 731)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.20210635662078857
    2. ' des' → logprob: -2.077106475830078
    3. 'esp' → logprob: -3.327106475830078
    4. ' espaces' → logprob: -4.702106475830078
    5. 'es' → logprob: -5.327106475830078
    6. ''esp' → logprob: -6.077106475830078
    7. ''' → logprob: -6.577106475830078
    8. 'spaces' → logprob: -6.577106475830078
    9. 'un' → logprob: -6.952106475830078
    10. ''espace' → logprob: -7.077106475830078

Token 664: ' espaces' (ID: 98361)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -0.021833308041095734
    2. 'es' → logprob: -4.521833419799805
    3. ' espaces' → logprob: -4.646833419799805
    4. ''esp' → logprob: -7.521833419799805
    5. 'spaces' → logprob: -7.646833419799805
    6. ''espace' → logprob: -9.521833419799805
    7. ' espace' → logprob: -11.396833419799805
    8. 'space' → logprob: -11.771833419799805
    9. ''' → logprob: -12.146833419799805
    10. '’esp' → logprob: -12.271833419799805

Token 665: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006376294419169426
    2. '   ' → logprob: -5.256376266479492
    3. '()' → logprob: -7.506376266479492
    4. '<|end|>' → logprob: -8.631376266479492
    5. '.' → logprob: -8.756376266479492
    6. '())' → logprob: -9.256376266479492
    7. ' )' → logprob: -9.881376266479492
    8. ').' → logprob: -10.881376266479492
    9. ',' → logprob: -11.006376266479492
    10. '[' → logprob: -11.381376266479492

Token 666: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 667: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 668: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41081929206848145
    2. '#' → logprob: -1.1608192920684814
    3. '
' → logprob: -4.785819053649902
    4. 'if' → logprob: -5.285819053649902
    5. '<|end|>' → logprob: -5.660819053649902
    6. 'assert' → logprob: -5.910819053649902
    7. '    
' → logprob: -6.035819053649902
    8. '```' → logprob: -8.035819053649902
    9. 'for' → logprob: -8.160819053649902
    10. '  ' → logprob: -8.660819053649902

Token 669: ' appelle' (ID: 111796)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3739576041698456
    2. '   ' → logprob: -2.498957633972168
    3. 'continue' → logprob: -2.498957633972168
    4. ' continue' → logprob: -3.123957633972168
    5. 'v' → logprob: -3.623957633972168
    6. 'assert' → logprob: -3.998957633972168
    7. 'H' → logprob: -4.748957633972168
    8. ' #' → logprob: -5.123957633972168
    9. 's' → logprob: -5.248957633972168
    10. 'contin' → logprob: -5.373957633972168

Token 670: ' input' (ID: 3422)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.011694169603288174
    2. 'int' → logprob: -4.761693954467773
    3. 'list' → logprob: -6.136693954467773
    4. ' map' → logprob: -7.261693954467773
    5. '(map' → logprob: -9.636693954467773
    6. 'input' → logprob: -10.261693954467773
    7. '   ' → logprob: -10.386693954467773
    8. 'sys' → logprob: -10.511693954467773
    9. 'la' → logprob: -11.136693954467773
    10. '```' → logprob: -11.261693954467773

Token 671: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07021095603704453
    2. '().' → logprob: -2.6952109336853027
    3. '())' → logprob: -8.945211410522461
    4. '()
' → logprob: -9.695211410522461
    5. '(),' → logprob: -10.570211410522461
    6. '()[' → logprob: -10.945211410522461
    7. '()

' → logprob: -11.945211410522461
    8. '()),' → logprob: -12.070211410522461
    9. '()]' → logprob: -12.320211410522461
    10. ' ()' → logprob: -12.320211410522461

Token 672: ' pour' (ID: 1930)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10129956901073456
    2. '().' → logprob: -2.351299524307251
    3. '())' → logprob: -7.10129976272583
    4. '()
' → logprob: -9.351299285888672
    5. '(),' → logprob: -9.601299285888672
    6. ')' → logprob: -9.976299285888672
    7. '   ' → logprob: -11.101299285888672
    8. '()[' → logprob: -11.726299285888672
    9. '()),' → logprob: -12.101299285888672
    10. '()

' → logprob: -12.226299285888672

Token 673: ' la' (ID: 557)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5981034636497498
    2. 'ob' → logprob: -1.2231035232543945
    3. ' obtenir' → logprob: -3.0981035232543945
    4. 'l' → logprob: -3.2231035232543945
    5. ' lire' → logprob: -3.3481035232543945
    6. 'split' → logprob: -4.9731035232543945
    7. ' récupérer' → logprob: -5.2231035232543945
    8. 'contin' → logprob: -5.4731035232543945
    9. 'les' → logprob: -5.5981035232543945
    10. 'avoir' → logprob: -5.8481035232543945

Token 674: ' lire' (ID: 46082)
  Prédit: 'lecture'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lecture' → logprob: -0.8462733626365662
    2. 'split' → logprob: -1.221273422241211
    3. 'r' → logprob: -2.221273422241211
    4. 'sé' → logprob: -3.096273422241211
    5. 'suite' → logprob: -3.471273422241211
    6. 'spl' → logprob: -3.721273422241211
    7. 's' → logprob: -4.096273422241211
    8. ' lecture' → logprob: -4.596273422241211
    9. 'conversion' → logprob: -5.596273422241211
    10. 'chaine' → logprob: -5.971273422241211

Token 675: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9583567380905151
    2. '()' → logprob: -0.9583567380905151
    3. '().' → logprob: -1.8333567380905151
    4. '   ' → logprob: -3.5833568572998047
    5. '())' → logprob: -3.5833568572998047
    6. '.' → logprob: -4.583356857299805
    7. ',' → logprob: -5.458356857299805
    8. '<|end|>' → logprob: -7.208356857299805
    9. '(),' → logprob: -7.458356857299805
    10. '(' → logprob: -8.333356857299805

Token 676: ' .' (ID: 887)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 677: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0016647082520648837
    2. 'rstrip' → logprob: -6.876664638519287
    3. 'strip' → logprob: -7.376664638519287
    4. ' split' → logprob: -12.126665115356445
    5. 'spl' → logprob: -15.126665115356445
    6. '(split' → logprob: -15.751665115356445
    7. 'plit' → logprob: -16.126665115356445
    8. '.split' → logprob: -17.251665115356445
    9. '_split' → logprob: -17.376665115356445
    10. 'replace' → logprob: -18.251665115356445

Token 678: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00021402664424385875
    2. '())' → logprob: -8.750213623046875
    3. '()]' → logprob: -11.000213623046875
    4. '(' → logprob: -11.125213623046875
    5. ' ()' → logprob: -11.625213623046875
    6. '(),' → logprob: -12.125213623046875
    7. '('' → logprob: -12.375213623046875
    8. '()?>' → logprob: -14.375213623046875
    9. '()"' → logprob: -14.375213623046875
    10. '()>' → logprob: -14.375213623046875

Token 679: ' pour' (ID: 1930)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0008383385138586164
    2. '())' → logprob: -7.250838279724121
    3. ')' → logprob: -10.000838279724121
    4. '(' → logprob: -10.375838279724121
    5. ' ()' → logprob: -11.375838279724121
    6. '()]' → logprob: -11.875838279724121
    7. '(),' → logprob: -12.125838279724121
    8. '()),' → logprob: -12.125838279724121
    9. '());' → logprob: -13.000838279724121
    10. '().' → logprob: -13.375838279724121

Token 680: ' sé' (ID: 7462)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.6239780783653259
    2. 'split' → logprob: -1.9989781379699707
    3. 'sé' → logprob: -2.1239781379699707
    4. ' décou' → logprob: -2.4989781379699707
    5. ' sé' → logprob: -2.9989781379699707
    6. '<|end|>' → logprob: -3.8739781379699707
    7. 'partition' → logprob: -4.873978137969971
    8. 'fragment' → logprob: -5.248978137969971
    9. ' créer' → logprob: -5.248978137969971
    10. 'token' → logprob: -5.373978137969971

Token 681: 'parer' (ID: 48041)
  Prédit: 'parer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parer' → logprob: -0.0010668702889233828
    2. 'par' → logprob: -6.8760666847229
    3. 'p' → logprob: -11.001067161560059
    4. 'paration' → logprob: -12.126067161560059
    5. 'pare' → logprob: -12.126067161560059
    6. 'parator' → logprob: -12.626067161560059
    7. 'para' → logprob: -13.251067161560059
    8. 'Par' → logprob: -15.126067161560059
    9. '   ' → logprob: -15.876067161560059
    10. '|' → logprob: -16.001066207885742

Token 682: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0018862803699448705
    2. '('' → logprob: -6.376886367797852
    3. '())' → logprob: -8.876886367797852
    4. '(' → logprob: -10.501886367797852
    5. ')' → logprob: -11.876886367797852
    6. '("' → logprob: -13.001886367797852
    7. '()
' → logprob: -13.501886367797852
    8. '()]' → logprob: -14.001886367797852
    9. '<|end|>' → logprob: -14.126886367797852
    10. ' ()' → logprob: -14.251886367797852

Token 683: ' ligne' (ID: 19583)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.2151412963867188
    2. 'chaine' → logprob: -1.7151412963867188
    3. 'chain' → logprob: -2.4651412963867188
    4. ' chaînes' → logprob: -2.4651412963867188
    5. 'car' → logprob: -2.7151412963867188
    6. '"' → logprob: -2.7151412963867188
    7. 'élé' → logprob: -3.0901412963867188
    8. '<|end|>' → logprob: -3.5901412963867188
    9. 'tokens' → logprob: -3.8401412963867188
    10. 'esp' → logprob: -3.9651412963867188

Token 684: ' sur' (ID: 1512)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0004925066023133695
    2. '('' → logprob: -7.875492572784424
    3. '(' → logprob: -10.375492095947266
    4. ')' → logprob: -11.000492095947266
    5. '())' → logprob: -11.125492095947266
    6. '(),' → logprob: -11.375492095947266
    7. '()
' → logprob: -11.625492095947266
    8. 'par' → logprob: -11.875492095947266
    9. ' ()' → logprob: -12.500492095947266
    10. ''' → logprob: -12.500492095947266

Token 685: ' les' (ID: 1341)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.061401139944791794
    2. ' ' → logprob: -4.6864013671875
    3. ' les' → logprob: -4.9364013671875
    4. ''esp' → logprob: -5.0614013671875
    5. ' espaces' → logprob: -5.0614013671875
    6. ' '' → logprob: -5.1864013671875
    7. ' des' → logprob: -5.3114013671875
    8. ''espace' → logprob: -5.4364013671875
    9. ' l' → logprob: -5.5614013671875
    10. '('' → logprob: -6.3114013671875

Token 686: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.09747105091810226
    2. 'esp' → logprob: -3.097470998764038
    3. ''esp' → logprob: -3.972470998764038
    4. ''' → logprob: -4.722471237182617
    5. ''espace' → logprob: -4.847471237182617
    6. 'es' → logprob: -5.222471237182617
    7. 'spaces' → logprob: -5.972471237182617
    8. ' espace' → logprob: -6.097471237182617
    9. '"' → logprob: -7.347471237182617
    10. ' espacios' → logprob: -8.222471237182617

Token 687: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10668405890464783
    2. ')' → logprob: -2.3566839694976807
    3. '())' → logprob: -5.10668420791626
    4. '(),' → logprob: -8.356683731079102
    5. ' )' → logprob: -9.981683731079102
    6. '(' → logprob: -10.231683731079102
    7. '<|end|>' → logprob: -10.481683731079102
    8. ',' → logprob: -10.731683731079102
    9. '()
' → logprob: -12.106683731079102
    10. '),' → logprob: -12.231683731079102

Token 688: ' 
' (ID: 793)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13286344707012177
    2. '<|end|>' → logprob: -2.3828635215759277
    3. '    ' → logprob: -4.507863521575928
    4. '   ' → logprob: -4.757863521575928
    5. ' ' → logprob: -5.632863521575928
    6. ' )' → logprob: -6.257863521575928
    7. '()' → logprob: -6.757863521575928
    8. '.' → logprob: -7.507863521575928
    9. '),' → logprob: -7.507863521575928
    10. ' and' → logprob: -7.632863521575928

Token 689: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.039926376193761826
    2. '   ' → logprob: -3.664926290512085
    3. '()' → logprob: -4.914926528930664
    4. '<|end|>' → logprob: -5.539926528930664
    5. '    ' → logprob: -7.914926528930664
    6. '())' → logprob: -7.914926528930664
    7. '),' → logprob: -8.289926528930664
    8. ',' → logprob: -8.664926528930664
    9. '[' → logprob: -8.789926528930664
    10. '#' → logprob: -8.914926528930664

Token 690: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6091512441635132
    2. '<|end|>' → logprob: -0.8591512441635132
    3. '()' → logprob: -3.8591513633728027
    4. '   ' → logprob: -5.109151363372803
    5. '<|end|>' → logprob: -6.234151363372803
    6. ' ' → logprob: -7.109151363372803
    7. '    ' → logprob: -7.484151363372803
    8. '  ' → logprob: -7.609151363372803
    9. '())' → logprob: -7.859151363372803
    10. '0' → logprob: -8.234150886535645

Token 691: ' map' (ID: 4014)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.778535783290863
    2. 'map' → logprob: -0.778535783290863
    3. ')' → logprob: -2.653535842895508
    4. ' map' → logprob: -5.528535842895508
    5. '   ' → logprob: -5.778535842895508
    6. 'list' → logprob: -7.153535842895508
    7. 'ints' → logprob: -7.153535842895508
    8. '#' → logprob: -8.028535842895508
    9. '           ' → logprob: -8.153535842895508
    10. '    ' → logprob: -8.153535842895508

Token 692: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.001972053898498416
    2. '(' → logprob: -6.876972198486328
    3. ')' → logprob: -7.751972198486328
    4. '(lambda' → logprob: -8.251972198486328
    5. 'int' → logprob: -8.876972198486328
    6. '<int' → logprob: -10.126972198486328
    7. '=int' → logprob: -10.376972198486328
    8. '[int' → logprob: -11.251972198486328
    9. ',int' → logprob: -11.876972198486328
    10. '(str' → logprob: -12.751972198486328

Token 693: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07289958000183105
    2. ')' → logprob: -2.697899580001831
    3. '),' → logprob: -6.32289981842041
    4. ' ,' → logprob: -7.44789981842041
    5. ',map' → logprob: -8.69789981842041
    6. ',)' → logprob: -9.44789981842041
    7. ',H' → logprob: -9.69789981842041
    8. ',
' → logprob: -10.07289981842041
    9. '(),' → logprob: -10.19789981842041
    10. '))' → logprob: -10.44789981842041

Token 694: ' ...)' (ID: 100545)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.10766417533159256
    2. ')' → logprob: -2.357664108276367
    3. ' H' → logprob: -5.482664108276367
    4. '))' → logprob: -7.232664108276367
    5. 'input' → logprob: -7.607664108276367
    6. 'map' → logprob: -7.607664108276367
    7. 'split' → logprob: -8.107664108276367
    8. ' )' → logprob: -8.232664108276367
    9. '),' → logprob: -8.357664108276367
    10. '...)' → logprob: -8.357664108276367

Token 695: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0032070616725832224
    2. '<|end|>' → logprob: -5.878207206726074
    3. ' )' → logprob: -8.628207206726074
    4. '(' → logprob: -9.378207206726074
    5. '<|end|>' → logprob: -9.878207206726074
    6. '())' → logprob: -11.003207206726074
    7. '()' → logprob: -11.628207206726074
    8. '(H' → logprob: -12.003207206726074
    9. ',' → logprob: -12.003207206726074
    10. '))' → logprob: -12.128207206726074

Token 696: ' convertir' (ID: 79223)
  Prédit: 'convert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'convert' → logprob: -0.12445072829723358
    2. ' convertir' → logprob: -2.24945068359375
    3. 'transform' → logprob: -4.62445068359375
    4. 'con' → logprob: -7.37445068359375
    5. ' convert' → logprob: -7.74945068359375
    6. 'converter' → logprob: -7.74945068359375
    7. 'tr' → logprob: -8.99945068359375
    8. ' transformer' → logprob: -10.24945068359375
    9. 'conv' → logprob: -10.49945068359375
    10. ')' → logprob: -11.74945068359375

Token 697: ' chaque' (ID: 21194)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14547781646251678
    2. '<|end|>' → logprob: -2.020477771759033
    3. '(' → logprob: -6.895477771759033
    4. 'each' → logprob: -8.270478248596191
    5. '()' → logprob: -8.395478248596191
    6. '(int' → logprob: -8.395478248596191
    7. ' each' → logprob: -8.770478248596191
    8. ' chaque' → logprob: -9.020478248596191
    9. '(H' → logprob: -9.270478248596191
    10. ',' → logprob: -9.395478248596191

Token 698: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.6706811189651489
    2. '<|end|>' → logprob: -1.420681118965149
    3. ')' → logprob: -2.1706809997558594
    4. 'token' → logprob: -2.2956809997558594
    5. 'element' → logprob: -4.295680999755859
    6. '(token' → logprob: -5.295680999755859
    7. ' token' → logprob: -5.670680999755859
    8. ' élément' → logprob: -5.795680999755859
    9. ' )' → logprob: -7.170680999755859
    10. '<|end|>' → logprob: -7.295680999755859

Token 699: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44631171226501465
    2. 'en' → logprob: -1.4463117122650146
    3. ' en' → logprob: -2.4463117122650146
    4. '<|end|>' → logprob: -3.5713117122650146
    5. ',' → logprob: -5.946311950683594
    6. '(' → logprob: -6.196311950683594
    7. '(en' → logprob: -6.196311950683594
    8. '),' → logprob: -7.196311950683594
    9. ' )' → logprob: -7.696311950683594
    10. '()' → logprob: -8.321311950683594

Token 700: 'qui' (ID: 22771)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0391668863594532
    2. '<|end|>' → logprob: -3.2891669273376465
    3. ' )' → logprob: -8.289166450500488
    4. '<|end|>' → logprob: -8.539166450500488
    5. '))' → logprob: -9.039166450500488
    6. ')))' → logprob: -9.414166450500488
    7. ')}}' → logprob: -10.039166450500488
    8. '),' → logprob: -10.164166450500488
    9. ' ' → logprob: -10.164166450500488
    10. '...)' → logprob: -10.414166450500488

Token 701: ' est' (ID: 893)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16811175644397736
    2. 's' → logprob: -3.168111801147461
    3. 'est' → logprob: -3.168111801147461
    4. ' est' → logprob: -3.793111801147461
    5. '<|end|>' → logprob: -4.293111801147461
    6. ' )' → logprob: -4.793111801147461
    7. 'n' → logprob: -4.793111801147461
    8. ' était' → logprob: -5.418111801147461
    9. 'ét' → logprob: -6.293111801147461
    10. ' ' → logprob: -6.918111801147461

Token 702: ' à' (ID: 1221)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.36701440811157227
    2. 'en' → logprob: -1.8670144081115723
    3. ' une' → logprob: -2.4920144081115723
    4. ' en' → logprob: -3.3670144081115723
    5. 'string' → logprob: -4.367014408111572
    6. 'bien' → logprob: -5.367014408111572
    7. 's' → logprob: -5.992014408111572
    8. ')' → logprob: -6.492014408111572
    9. 'au' → logprob: -6.742014408111572
    10. 'un' → logprob: -6.742014408111572

Token 703: ' ce' (ID: 2357)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.03945228084921837
    2. 'string' → logprob: -4.414452075958252
    3. 'int' → logprob: -4.664452075958252
    4. 'chaine' → logprob: -4.914452075958252
    5. 'la' → logprob: -5.664452075958252
    6. 'l' → logprob: -5.789452075958252
    7. 'une' → logprob: -6.289452075958252
    8. ' str' → logprob: -7.164452075958252
    9. ' une' → logprob: -8.16445255279541
    10. '```' → logprob: -9.66445255279541

Token 704: ' stade' (ID: 113944)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.4689190089702606
    2. ')' → logprob: -2.093919038772583
    3. 'space' → logprob: -2.968919038772583
    4. ' )' → logprob: -2.968919038772583
    5. 's' → logprob: -3.343919038772583
    6. ' point' → logprob: -3.968919038772583
    7. 'n' → logprob: -4.093918800354004
    8. ' ' → logprob: -4.718918800354004
    9. '```' → logprob: -4.718918800354004
    10. '_' → logprob: -4.968918800354004

Token 705: ' une' (ID: 2463)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.6890301704406738
    2. ' en' → logprob: -1.0640301704406738
    3. ')' → logprob: -1.9390301704406738
    4. 'string' → logprob: -5.814030170440674
    5. ' )' → logprob: -6.689030170440674
    6. 'de' → logprob: -7.189030170440674
    7. 'chaine' → logprob: -7.439030170440674
    8. 's' → logprob: -8.064029693603516
    9. ' est' → logprob: -8.189029693603516
    10. ' de' → logprob: -8.189029693603516

Token 706: ' chaîne' (ID: 89288)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 707: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03385027125477791
    2. 'en' → logprob: -3.5338501930236816
    3. '))' → logprob: -5.908850193023682
    4. ' en' → logprob: -7.158850193023682
    5. '   ' → logprob: -8.65885066986084
    6. '())' → logprob: -8.90885066986084
    7. ')))' → logprob: -9.90885066986084
    8. '),' → logprob: -9.90885066986084
    9. ' )' → logprob: -10.03385066986084
    10. '()' → logprob: -10.78385066986084

Token 708: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.056099578738212585
    2. 'en' → logprob: -3.3060996532440186
    3. ' en' → logprob: -4.6810994148254395
    4. ',' → logprob: -5.0560994148254395
    5. '),' → logprob: -6.9310994148254395
    6. '))' → logprob: -7.3060994148254395
    7. ')))' → logprob: -8.431099891662598
    8. ')}}' → logprob: -9.306099891662598
    9. ' )' → logprob: -9.806099891662598
    10. '(en' → logprob: -10.556099891662598

Token 709: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.01743805594742298
    2. 'ent' → logprob: -4.642437934875488
    3. ' int' → logprob: -4.892437934875488
    4. ' ent' → logprob: -10.142437934875488
    5. ' entier' → logprob: -10.267437934875488
    6. 'inte' → logprob: -10.642437934875488
    7. '<int' → logprob: -10.892437934875488
    8. 'ints' → logprob: -12.142437934875488
    9. '(int' → logprob: -12.267437934875488
    10. 'integer' → logprob: -12.642437934875488

Token 710: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03907712548971176
    2. '))' → logprob: -3.289077043533325
    3. ')))' → logprob: -7.414077281951904
    4. '())' → logprob: -8.039076805114746
    5. ').' → logprob: -10.664076805114746
    6. ' )' → logprob: -10.914076805114746
    7. '),' → logprob: -11.414076805114746
    8. ')
' → logprob: -11.539076805114746
    9. '()))' → logprob: -11.664076805114746
    10. '()' → logprob: -11.789076805114746

Token 711: ' 
' (ID: 793)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06357066333293915
    2. '   ' → logprob: -3.188570737838745
    3. ' )' → logprob: -4.438570499420166
    4. '#' → logprob: -6.063570499420166
    5. '    ' → logprob: -6.438570499420166
    6. ' ' → logprob: -6.938570499420166
    7. ' H' → logprob: -7.563570499420166
    8. 'H' → logprob: -8.063570976257324
    9. ' N' → logprob: -8.063570976257324
    10. '  ' → logprob: -8.063570976257324

Token 712: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021887190639972687
    2. '   ' → logprob: -3.8968873023986816
    3. ' )' → logprob: -7.771887302398682
    4. '#' → logprob: -8.146886825561523
    5. '<|end|>' → logprob: -8.771886825561523
    6. '    ' → logprob: -9.396886825561523
    7. '()' → logprob: -9.771886825561523
    8. ' ' → logprob: -9.896886825561523
    9. '[' → logprob: -10.146886825561523
    10. ')
' → logprob: -10.521886825561523

Token 713: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.034306302666664124
    2. '))' → logprob: -3.534306287765503
    3. '#' (adapté à ' #') → logprob: -5.784306526184082
    4. '   ' → logprob: -7.034306526184082
    5. ')))' → logprob: -8.409306526184082
    6. ')
' → logprob: -9.409306526184082
    7. ')#' → logprob: -9.409306526184082
    8. ' )' → logprob: -9.534306526184082
    9. '()' → logprob: -10.909306526184082
    10. 'reverse' → logprob: -11.159306526184082

Token 714: ' et' (ID: 859)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21762722730636597
    2. '#' → logprob: -1.8426272869110107
    3. ')#' → logprob: -4.592627048492432
    4. 'H' → logprob: -5.092627048492432
    5. '   ' → logprob: -5.092627048492432
    6. ' H' → logprob: -5.342627048492432
    7. ')
' → logprob: -6.217627048492432
    8. '       ' → logprob: -6.467627048492432
    9. ' #' → logprob: -6.842627048492432
    10. ' )' → logprob: -7.592627048492432

Token 715: ' enfin' (ID: 50642)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.055914271622896194
    2. ' list' → logprob: -2.9309141635894775
    3. ')' → logprob: -7.055914402008057
    4. 'liste' → logprob: -9.680913925170898
    5. ' la' → logprob: -10.555913925170898
    6. 'la' → logprob: -11.055913925170898
    7. 'tolist' → logprob: -11.180913925170898
    8. ' )' → logprob: -11.305913925170898
    9. '=list' → logprob: -11.305913925170898
    10. ' liste' → logprob: -12.055913925170898

Token 716: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.010842417366802692
    2. ' list' → logprob: -4.635842323303223
    3. ')' → logprob: -6.885842323303223
    4. '=list' → logprob: -11.635842323303223
    5. '[]' → logprob: -11.635842323303223
    6. '```' → logprob: -11.760842323303223
    7. 'tolist' → logprob: -12.135842323303223
    8. ']' → logprob: -12.135842323303223
    9. ' la' → logprob: -12.635842323303223
    10. 'liste' → logprob: -12.635842323303223

Token 717: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3983093500137329
    2. '(' → logprob: -1.398309350013733
    3. ')' → logprob: -2.7733092308044434
    4. '(...)' → logprob: -5.148309230804443
    5. '())' → logprob: -5.398309230804443
    6. '(map' → logprob: -5.523309230804443
    7. '<|end|>' → logprob: -5.773309230804443
    8. '```' → logprob: -7.898309230804443
    9. '(H' → logprob: -8.523309707641602
    10. '<|end|>' → logprob: -8.773309707641602

Token 718: ' pour' (ID: 1930)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02736740931868553
    2. '<|end|>' → logprob: -4.65236759185791
    3. ')' → logprob: -4.77736759185791
    4. '()' → logprob: -4.90236759185791
    5. '(
' → logprob: -7.15236759185791
    6. '#' → logprob: -8.77736759185791
    7. '<|end|>' → logprob: -9.27736759185791
    8. '(...)' → logprob: -9.27736759185791
    9. '```' → logprob: -9.40236759185791
    10. '([...' → logprob: -9.52736759185791

Token 719: ' obtenir' (ID: 54423)
  Prédit: ' créer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' créer' → logprob: -0.7216029167175293
    2. 'cr' → logprob: -1.9716029167175293
    3. ' transformer' → logprob: -2.2216029167175293
    4. 'transform' → logprob: -2.3466029167175293
    5. ' convertir' → logprob: -2.4716029167175293
    6. ' les' → logprob: -3.4716029167175293
    7. 'les' → logprob: -4.471602916717529
    8. ' stock' → logprob: -4.971602916717529
    9. 'con' → logprob: -5.096602916717529
    10. 'convert' → logprob: -5.471602916717529

Token 720: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.4072132110595703
    2. 'la' → logprob: -1.5322132110595703
    3. ' la' → logprob: -3.2822132110595703
    4. ' une' → logprob: -3.5322132110595703
    5. '()' → logprob: -4.53221321105957
    6. '[]' → logprob: -4.65721321105957
    7. 'un' → logprob: -5.53221321105957
    8. '```' → logprob: -5.53221321105957
    9. ' un' → logprob: -5.65721321105957
    10. '<|end|>' → logprob: -5.78221321105957

Token 721: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -1.12799870967865
    2. ' liste' → logprob: -1.25299870967865
    3. 'list' → logprob: -1.75299870967865
    4. ' list' → logprob: -2.7529988288879395
    5. '```' → logprob: -3.5029988288879395
    6. 's' → logprob: -4.0029988288879395
    7. 'ent' → logprob: -4.1279988288879395
    8. '[]' → logprob: -4.2529988288879395
    9. ' complete' → logprob: -5.0029988288879395
    10. 'python' → logprob: -5.0029988288879395

Token 722: ' d' (ID: 272)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 723: ''ent' (ID: 53422)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.24139131605625153
    2. 'int' → logprob: -2.36639142036438
    3. ''ent' → logprob: -3.49139142036438
    4. 'inte' → logprob: -3.99139142036438
    5. '<int' → logprob: -4.241391181945801
    6. ' integers' → logprob: -4.241391181945801
    7. ' ent' → logprob: -4.491391181945801
    8. 'ints' → logprob: -4.491391181945801
    9. 'H' → logprob: -5.116391181945801
    10. '[int' → logprob: -5.991391181945801

Token 724: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0014674883568659425
    2. 'i' → logprob: -6.876467704772949
    3. 't' → logprob: -8.25146770477295
    4. 'ières' → logprob: -9.37646770477295
    5. 'ti' → logprob: -11.00146770477295
    6. 'ier' → logprob: -11.12646770477295
    7. 'ires' → logprob: -11.50146770477295
    8. 'I' → logprob: -11.62646770477295
    9. '```' → logprob: -11.62646770477295
    10. 'tiers' → logprob: -12.37646770477295

Token 725: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11841932684183121
    2. '(' → logprob: -2.4934194087982178
    3. '(H' → logprob: -4.243419170379639
    4. '()' → logprob: -4.493419170379639
    5. '())' → logprob: -5.993419170379639
    6. '   ' → logprob: -7.493419170379639
    7. '(
' → logprob: -8.743419647216797
    8. '.' → logprob: -9.243419647216797
    9. ').' → logprob: -9.743419647216797
    10. '[' → logprob: -10.493419647216797

Token 726: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24064938724040985
    2. '
' → logprob: -1.8656493425369263
    3. '<|end|>' → logprob: -3.365649461746216
    4. ')' → logprob: -4.865649223327637
    5. '    
' → logprob: -5.240649223327637
    6. '[' → logprob: -5.490649223327637
    7. ' ' → logprob: -6.365649223327637
    8. '#' → logprob: -6.865649223327637
    9. ',' → logprob: -7.365649223327637
    10. '.' → logprob: -7.615649223327637

Token 727: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017880428582429886
    2. 'dp' → logprob: -4.642880439758301
    3. '    
' → logprob: -5.892880439758301
    4. 'if' → logprob: -7.017880439758301
    5. '
' → logprob: -7.267880439758301
    6. '#' → logprob: -7.392880439758301
    7. ')' → logprob: -7.517880439758301
    8. 'stack' → logprob: -7.767880439758301
    9. 'for' → logprob: -8.1428804397583
    10. 'max' → logprob: -8.2678804397583

Token 728: ' off' (ID: 1277)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.09373056888580322
    2. 'stack' → logprob: -2.8437304496765137
    3. '#' → logprob: -4.343730449676514
    4. 'L' → logprob: -5.593730449676514
    5. 'answer' → logprob: -6.218730449676514
    6. 'ans' → logprob: -6.718730449676514
    7. 'st' → logprob: -7.093730449676514
    8. 'print' → logprob: -7.218730449676514
    9. 'DP' → logprob: -7.468730449676514
    10. 'from' → logprob: -7.593730449676514

Token 729: ' =' (ID: 314)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -1.022620439529419
    2. '=' → logprob: -1.147620439529419
    3. 'er' → logprob: -2.647620439529419
    4. '=[]' → logprob: -2.897620439529419
    5. '_stack' → logprob: -2.897620439529419
    6. 'sets' → logprob: -3.022620439529419
    7. 'set' → logprob: -3.772620439529419
    8. 'ers' → logprob: -4.52262020111084
    9. 'ensive' → logprob: -4.89762020111084
    10. '=[]
' → logprob: -5.02262020111084

Token 730: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5964261889457703
    2. '0' → logprob: -1.221426248550415
    3. '[N' → logprob: -2.346426248550415
    4. '[]' → logprob: -3.471426248550415
    5. '[-' → logprob: -4.346426010131836
    6. '1' → logprob: -5.221426010131836
    7. 'H' → logprob: -6.596426010131836
    8. 'N' → logprob: -6.846426010131836
    9. '{}' → logprob: -6.971426010131836
    10. '-' → logprob: -6.971426010131836

Token 731: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4288097321987152
    2. '0' → logprob: -1.1788097620010376
    3. '[N' → logprob: -3.678809642791748
    4. '[-' → logprob: -4.928809642791748
    5. '1' → logprob: -5.678809642791748
    6. 'H' → logprob: -6.428809642791748
    7. '[len' → logprob: -7.303809642791748
    8. '-' → logprob: -7.678809642791748
    9. '[]' → logprob: -7.678809642791748
    10. '[int' → logprob: -7.678809642791748

Token 732: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8598675727844238
    2. '   ' → logprob: -1.3598675727844238
    3. 'while' → logprob: -1.7348675727844238
    4. 'for' → logprob: -2.484867572784424
    5. '    
' → logprob: -4.234867572784424
    6. ' while' → logprob: -4.359867572784424
    7. ',' → logprob: -5.359867572784424
    8. 'if' → logprob: -5.734867572784424
    9. ' for' → logprob: -5.859867572784424
    10. '  ' → logprob: -5.859867572784424

Token 733: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17504040896892548
    2. '<|end|>' → logprob: -2.1750404834747314
    3. '#' → logprob: -4.425040245056152
    4. 'for' → logprob: -5.175040245056152
    5. ' ' → logprob: -5.425040245056152
    6. ',' → logprob: -5.675040245056152
    7. '    
' → logprob: -5.800040245056152
    8. ')' → logprob: -6.050040245056152
    9. '<|end|>' → logprob: -6.425040245056152
    10. 'if' → logprob: -6.675040245056152

Token 734: ' Initial' (ID: 9209)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.477124810218811
    2. 'stack' → logprob: -1.852124810218811
    3. 'max' → logprob: -2.1021246910095215
    4. 'while' → logprob: -2.2271246910095215
    5. 'i' → logprob: -2.6021246910095215
    6. 'best' → logprob: -2.7271246910095215
    7. 'for' → logprob: -3.1021246910095215
    8. 'current' → logprob: -3.6021246910095215
    9. 'ans' → logprob: -3.7271246910095215
    10. 'cur' → logprob: -3.9771246910095215

Token 735: 'isation' (ID: 6993)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.503965139389038
    2. ' ' → logprob: -1.503965139389038
    3. 'x' → logprob: -1.878965139389038
    4. 'ffset' → logprob: -1.878965139389038
    5. 'f' → logprob: -2.878965139389038
    6. '   ' → logprob: -3.003965139389038
    7. '  ' → logprob: -3.128965139389038
    8. '    
' → logprob: -4.003965377807617
    9. ')' → logprob: -4.253965377807617
    10. '    ' → logprob: -4.378965377807617

Token 736: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5829175710678101
    2. '<|end|>' → logprob: -1.08291757106781
    3. 'for' → logprob: -3.5829176902770996
    4. '<|end|>' → logprob: -3.9579176902770996
    5. '    ' → logprob: -4.3329176902771
    6. '#' → logprob: -4.7079176902771
    7. ')' → logprob: -5.3329176902771
    8. ',' → logprob: -5.5829176902771
    9. '
' → logprob: -5.5829176902771
    10. '    
' → logprob: -5.9579176902771

Token 737: ''une' (ID: 13337)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8042629957199097
    2. ' a' → logprob: -2.429263114929199
    3. 'a' → logprob: -2.554263114929199
    4. ' off' → logprob: -2.679263114929199
    5. '<|end|>' → logprob: -2.929263114929199
    6. ' the' → logprob: -3.179263114929199
    7. 'f' → logprob: -3.179263114929199
    8. ')' → logprob: -3.679263114929199
    9. '  ' → logprob: -4.054263114929199
    10. '   ' → logprob: -4.304263114929199

Token 738: ' variable' (ID: 11076)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -1.1915712356567383
    2. 'variable' → logprob: -1.8165712356567383
    3. ' variable' → logprob: -1.9415712356567383
    4. 'deque' → logprob: -2.3165712356567383
    5. 'counter' → logprob: -2.8165712356567383
    6. ' stack' → logprob: -3.0665712356567383
    7. 'offset' → logprob: -3.3165712356567383
    8. '=' → logprob: -4.316571235656738
    9. ')' → logprob: -4.691571235656738
    10. 'int' → logprob: -4.691571235656738

Token 739: ' appelée' (ID: 179130)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 740: ' '' (ID: 461)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.5378104448318481
    2. 'off' → logprob: -1.2878104448318481
    3. 'count' → logprob: -2.9128103256225586
    4. 'max' → logprob: -4.162810325622559
    5. 'counter' → logprob: -4.412810325622559
    6. 'ans' → logprob: -4.787810325622559
    7. ' offset' → logprob: -5.162810325622559
    8. 'answer' → logprob: -5.537810325622559
    9. 'current' → logprob: -5.662810325622559
    10. 'dp' → logprob: -5.662810325622559

Token 741: 'off' (ID: 2864)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.32446202635765076
    2. 'off' → logprob: -1.4494620561599731
    3. 'count' → logprob: -3.8244619369506836
    4. 'H' → logprob: -6.199461936950684
    5. 'current' → logprob: -6.199461936950684
    6. 'counter' → logprob: -6.199461936950684
    7. 'max' → logprob: -6.324461936950684
    8. 'con' → logprob: -6.699461936950684
    9. 'best' → logprob: -6.699461936950684
    10. 'ans' → logprob: -6.824461936950684

Token 742: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9002392888069153
    2. ' =' → logprob: -1.1502392292022705
    3. '=' → logprob: -1.5252392292022705
    4. '_' → logprob: -4.02523946762085
    5. '_off' → logprob: -4.52523946762085
    6. '_offset' → logprob: -5.27523946762085
    7. ' )' → logprob: -5.77523946762085
    8. ' +=' → logprob: -5.77523946762085
    9. ' ' → logprob: -5.77523946762085
    10. '<|end|>' → logprob: -6.02523946762085

Token 743: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47284525632858276
    2. '
' → logprob: -1.8478453159332275
    3. '<|end|>' → logprob: -1.8478453159332275
    4. '    
' → logprob: -3.2228453159332275
    5. '<|end|>' → logprob: -5.222845077514648
    6. '    ' → logprob: -5.472845077514648
    7. ',' → logprob: -5.972845077514648
    8. ' =' → logprob: -6.597845077514648
    9. '#' → logprob: -6.722845077514648
    10. ')' → logprob: -6.972845077514648

Token 744: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007511029951274395
    2. ' ' → logprob: -5.007511138916016
    3. '-' → logprob: -7.882511138916016
    4. '1' → logprob: -8.507511138916016
    5. ' -' → logprob: -8.757511138916016
    6. 'int' → logprob: -11.382511138916016
    7. 'N' → logprob: -11.757511138916016
    8. '   ' → logprob: -11.757511138916016
    9. ' N' → logprob: -12.132511138916016
    10. '  ' → logprob: -12.632511138916016

Token 745: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.3319124011322856e-05
    2. '-' → logprob: -11.875022888183594
    3. '1' → logprob: -11.875022888183594
    4. ' ' → logprob: -12.000022888183594
    5. '=' → logprob: -12.875022888183594
    6. '+' → logprob: -16.125022888183594
    7. 'off' → logprob: -16.625022888183594
    8. '.' → logprob: -16.875022888183594
    9. 'int' → logprob: -17.500022888183594
    10. 'zero' → logprob: -17.625022888183594

Token 746: '.' (ID: 13)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43077927827835083
    2. '   ' → logprob: -1.930779218673706
    3. '<|end|>' → logprob: -3.055779218673706
    4. '    
' → logprob: -3.180779218673706
    5. ' ' → logprob: -3.305779218673706
    6. ',' → logprob: -3.805779218673706
    7. 'for' → logprob: -4.430779457092285
    8. '.' → logprob: -5.055779457092285
    9. '  ' → logprob: -5.180779457092285
    10. ' for' → logprob: -5.305779457092285

Token 747: ' 
' (ID: 793)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20587003231048584
    2. '<|end|>' → logprob: -2.4558701515197754
    3. '   ' → logprob: -2.9558701515197754
    4. '    
' → logprob: -4.580870151519775
    5. ' ' → logprob: -4.705870151519775
    6. 'for' → logprob: -4.955870151519775
    7. '\n' → logprob: -5.455870151519775
    8. '<|end|>' → logprob: -5.955870151519775
    9. ' for' → logprob: -6.205870151519775
    10. ' 
' → logprob: -6.330870151519775

Token 748: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5330129265785217
    2. 'for' → logprob: -2.283012866973877
    3. '
' → logprob: -2.408012866973877
    4. '    
' → logprob: -3.033012866973877
    5. 'i' → logprob: -3.283012866973877
    6. ',' → logprob: -3.658012866973877
    7. ' for' → logprob: -3.658012866973877
    8. ' 
' → logprob: -4.033012866973877
    9. '_' → logprob: -4.533012866973877
    10. '.' → logprob: -4.533012866973877

Token 749: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9441671967506409
    2. 'i' → logprob: -1.319167137145996
    3. 'while' → logprob: -2.694167137145996
    4. 'stack' → logprob: -2.694167137145996
    5. '   ' → logprob: -2.819167137145996
    6. 'dp' → logprob: -3.194167137145996
    7. ' for' → logprob: -3.444167137145996
    8. 'max' → logprob: -4.069167137145996
    9. ' i' → logprob: -4.944167137145996
    10. 'idx' → logprob: -5.069167137145996

Token 750: ' Cette' (ID: 27383)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0098726749420166
    2. 'dp' → logprob: -1.3848726749420166
    3. 'stack' → logprob: -1.6348726749420166
    4. 'while' → logprob: -2.7598726749420166
    5. 'i' → logprob: -3.1348726749420166
    6. 'max' → logprob: -4.2598724365234375
    7. 'best' → logprob: -4.3848724365234375
    8. 'ans' → logprob: -4.6348724365234375
    9. 'st' → logprob: -5.1348724365234375
    10. 'cur' → logprob: -5.3848724365234375

Token 751: ' variable' (ID: 11076)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6568382978439331
    2. '=' → logprob: -0.9068382978439331
    3. ' ' → logprob: -3.4068384170532227
    4. '_' → logprob: -3.5318384170532227
    5. ' +=' → logprob: -4.906838417053223
    6. '+=' → logprob: -6.906838417053223
    7. ' _' → logprob: -7.031838417053223
    8. 'for' → logprob: -7.531838417053223
    9. 'n' → logprob: -7.781838417053223
    10. '.' → logprob: -7.906838417053223

Token 752: ' agit' (ID: 109598)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9836186766624451
    2. ' =' → logprob: -1.1086187362670898
    3. '_' → logprob: -1.3586187362670898
    4. ' +=' → logprob: -4.23361873626709
    5. ',' → logprob: -4.48361873626709
    6. ' ' → logprob: -5.60861873626709
    7. '+=' → logprob: -6.35861873626709
    8. '_=' → logprob: -6.48361873626709
    9. ' _' → logprob: -6.98361873626709
    10. 'for' → logprob: -7.35861873626709

Token 753: ' ici' (ID: 27994)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.383862167596817
    2. ' =' → logprob: -1.5088621377944946
    3. ' as' → logprob: -2.883862257003784
    4. ' ' → logprob: -4.258862018585205
    5. '  ' → logprob: -4.758862018585205
    6. 'as' → logprob: -5.508862018585205
    7. '   ' → logprob: -5.508862018585205
    8. ' +=' → logprob: -5.758862018585205
    9. '<|end|>' → logprob: -6.383862018585205
    10. ',' → logprob: -6.383862018585205

Token 754: ' comme' (ID: 7971)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 755: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.7656086087226868
    2. 'un' → logprob: -1.390608549118042
    3. ' a' → logprob: -2.265608549118042
    4. 'a' → logprob: -2.515608549118042
    5. ' une' → logprob: -3.015608549118042
    6. '0' → logprob: -4.265608787536621
    7. '1' → logprob: -4.515608787536621
    8. ' compteur' → logprob: -5.140608787536621
    9. 'counter' → logprob: -5.390608787536621
    10. 'une' → logprob: -5.390608787536621

Token 756: ' sorte' (ID: 37800)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.6541520357131958
    2. 'counter' → logprob: -1.2791520357131958
    3. 'offset' → logprob: -2.9041519165039062
    4. 'c' → logprob: -3.0291519165039062
    5. ' counter' → logprob: -3.4041519165039062
    6. 'flag' → logprob: -3.6541519165039062
    7. ' compteur' → logprob: -4.904151916503906
    8. 'int' → logprob: -5.154151916503906
    9. ' offset' → logprob: -5.529151916503906
    10. 'sent' → logprob: -5.779151916503906

Token 757: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8346766829490662
    2. ' d' → logprob: -1.084676742553711
    3. '   ' → logprob: -2.584676742553711
    4. '_' → logprob: -2.709676742553711
    5. '=' → logprob: -2.959676742553711
    6. ' ' → logprob: -4.334676742553711
    7. '  ' → logprob: -5.834676742553711
    8. 'd' → logprob: -5.834676742553711
    9. 'de' → logprob: -5.834676742553711
    10. ' of' → logprob: -5.834676742553711

Token 758: ' dr' (ID: 1498)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.7802067995071411
    2. 'comp' → logprob: -0.9052067995071411
    3. 'flag' → logprob: -2.7802066802978516
    4. 'c' → logprob: -3.4052066802978516
    5. 'offset' → logprob: -4.280206680297852
    6. ' compteur' → logprob: -4.405206680297852
    7. ' counter' → logprob: -4.780206680297852
    8. 'd' → logprob: -5.655206680297852
    9. 'pointer' → logprob: -7.655206680297852
    10. 'buffer' → logprob: -7.655206680297852

Token 759: 'apeau' (ID: 140059)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.19298991560935974
    2. 'rape' → logprob: -2.5679898262023926
    3. 'éc' → logprob: -3.4429898262023926
    4. 'ép' → logprob: -4.067989826202393
    5. 'r' → logprob: -4.192989826202393
    6. 'e' → logprob: -4.192989826202393
    7. 'éf' → logprob: -4.192989826202393
    8. 'rap' → logprob: -7.442989826202393
    9. ' é' → logprob: -7.692989826202393
    10. 'è' → logprob: -8.19299030303955

Token 760: ' ou' (ID: 2031)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 761: ' d' (ID: 272)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.7303447723388672
    2. 'comp' → logprob: -0.8553447723388672
    3. ' compteur' → logprob: -2.855344772338867
    4. ' un' → logprob: -4.355344772338867
    5. 'counter' → logprob: -5.230344772338867
    6. 'offset' → logprob: -5.480344772338867
    7. 'flag' → logprob: -6.105344772338867
    8. 'indice' → logprob: -6.230344772338867
    9. 'd' → logprob: -6.355344772338867
    10. 'ind' → logprob: -6.355344772338867

Token 762: ''état' (ID: 116357)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.9939013719558716
    2. 'ind' → logprob: -1.8689013719558716
    3. ''ind' → logprob: -1.9939013719558716
    4. 'indice' → logprob: -1.9939013719558716
    5. 'offset' → logprob: -2.743901252746582
    6. ' compteur' → logprob: -3.368901252746582
    7. 'indic' → logprob: -3.618901252746582
    8. 'counter' → logprob: -4.368901252746582
    9. 'index' → logprob: -4.618901252746582
    10. 'acc' → logprob: -4.618901252746582

Token 763: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 764: ' elle' (ID: 11451)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1101880595088005
    2. ' 
' → logprob: -3.2351880073547363
    3. '   ' → logprob: -4.110188007354736
    4. '    ' → logprob: -4.360188007354736
    5. '  ' → logprob: -4.735188007354736
    6. '    
' → logprob: -4.860188007354736
    7. ')' → logprob: -5.485188007354736
    8. '   
' → logprob: -5.860188007354736
    9. '  
' → logprob: -5.985188007354736
    10. '<|end|>' → logprob: -6.735188007354736

Token 765: ' sera' (ID: 15511)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7388335466384888
    2. ' =' → logprob: -1.4888335466384888
    3. ' +=' → logprob: -1.6138335466384888
    4. '+=' → logprob: -2.363833427429199
    5. ' ' → logprob: -6.863833427429199
    6. '   ' → logprob: -7.113833427429199
    7. ',' → logprob: -7.363833427429199
    8. '#' → logprob: -8.3638334274292
    9. '[' → logprob: -8.7388334274292
    10. ')' → logprob: -8.8638334274292

Token 766: ' utilisée' (ID: 106548)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1828585863113403
    2. '+=' → logprob: -1.5578585863113403
    3. ' used' → logprob: -1.9328585863113403
    4. ' +=' → logprob: -1.9328585863113403
    5. '   ' → logprob: -3.057858467102051
    6. '0' → logprob: -3.057858467102051
    7. ' =' → logprob: -3.682858467102051
    8. '+' → logprob: -3.807858467102051
    9. 'increment' → logprob: -4.682858467102051
    10. 'used' → logprob: -5.057858467102051

Token 767: ' pour' (ID: 1930)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19683407247066498
    2. '+' → logprob: -2.821834087371826
    3. ' =' → logprob: -3.321834087371826
    4. '+=' → logprob: -3.571834087371826
    5. ' ' → logprob: -3.696834087371826
    6. ' +=' → logprob: -3.946834087371826
    7. '   ' → logprob: -5.696834087371826
    8. 'for' → logprob: -6.321834087371826
    9. '_' → logprob: -6.446834087371826
    10. ' for' → logprob: -7.071834087371826

Token 768: ' ajust' (ID: 32650)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.125690221786499
    2. 'i' → logprob: -1.250690221786499
    3. ' True' → logprob: -2.000690221786499
    4. '1' → logprob: -2.500690221786499
    5. '_' → logprob: -2.750690221786499
    6. 'H' → logprob: -3.625690221786499
    7. '0' → logprob: -3.875690221786499
    8. ' i' → logprob: -4.000690460205078
    9. 'False' → logprob: -5.000690460205078
    10. ' ' → logprob: -5.250690460205078

Token 769: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.05480802804231644
    2. '   ' → logprob: -3.5548081398010254
    3. 'é' → logprob: -4.554808139801025
    4. '=' → logprob: -5.429808139801025
    5. 'ant' → logprob: -6.304808139801025
    6. 'ée' → logprob: -6.304808139801025
    7. ' =' → logprob: -6.554808139801025
    8. 'ement' → logprob: -7.054808139801025
    9. '+' → logprob: -7.179808139801025
    10. 'e' → logprob: -7.679808139801025

Token 770: ' certains' (ID: 30681)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.7847237586975098
    2. ' la' → logprob: -1.9097237586975098
    3. 'l' → logprob: -2.6597237586975098
    4. 'H' → logprob: -2.9097237586975098
    5. ' the' → logprob: -3.2847237586975098
    6. ' H' → logprob: -3.4097237586975098
    7. 'le' → logprob: -3.4097237586975098
    8. '1' → logprob: -3.6597237586975098
    9. ' le' → logprob: -3.7847237586975098
    10. '<|end|>' → logprob: -3.9097237586975098

Token 771: ' calcul' (ID: 7559)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1863313764333725
    2. ' indices' → logprob: -2.686331272125244
    3. 'indices' → logprob: -3.061331272125244
    4. 'indice' → logprob: -4.561331272125244
    5. ' H' → logprob: -5.061331272125244
    6. ' espaces' → logprob: -5.186331272125244
    7. 'H' → logprob: -5.686331272125244
    8. ' _' → logprob: -5.811331272125244
    9. ')' → logprob: -6.061331272125244
    10. 'index' → logprob: -6.061331272125244

Token 772: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2162802517414093
    2. 'ations' → logprob: -2.341280221939087
    3. 'ateur' → logprob: -3.466280221939087
    4. '   ' → logprob: -4.216280460357666
    5. 'es' → logprob: -4.466280460357666
    6. 'ateurs' → logprob: -4.841280460357666
    7. 'i' → logprob: -4.966280460357666
    8. 'er' → logprob: -5.466280460357666
    9. 'off' → logprob: -5.966280460357666
    10. '#' → logprob: -6.216280460357666

Token 773: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8134493231773376
    2. '<|end|>' → logprob: -0.9384493231773376
    3. ')' → logprob: -2.9384493827819824
    4. ' ' → logprob: -3.3134493827819824
    5. ',' → logprob: -4.438449382781982
    6. '=' → logprob: -4.563449382781982
    7. ' =' → logprob: -4.813449382781982
    8. '    ' → logprob: -4.813449382781982
    9. '.' → logprob: -4.938449382781982
    10. '[]' → logprob: -5.188449382781982

Token 774: ' la' (ID: 557)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.13343609869480133
    2. ' range' → logprob: -2.1334362030029297
    3. 'H' → logprob: -5.75843620300293
    4. ' la' → logprob: -6.63343620300293
    5. 'la' → logprob: -7.88343620300293
    6. 'enumer' → logprob: -7.88343620300293
    7. 'the' → logprob: -8.13343620300293
    8. 'for' → logprob: -8.38343620300293
    9. 'l' → logprob: -8.50843620300293
    10. ' the' → logprob: -8.50843620300293

Token 775: ' boucle' (ID: 174211)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16942425072193146
    2. 'for' → logprob: -1.919424295425415
    3. 'while' → logprob: -5.044424057006836
    4. ' range' → logprob: -6.544424057006836
    5. '   ' → logprob: -8.044424057006836
    6. 'H' → logprob: -8.419424057006836
    7. '#' → logprob: -8.794424057006836
    8. ' for' → logprob: -8.919424057006836
    9. 'rang' → logprob: -9.169424057006836
    10. 'loop' → logprob: -9.544424057006836

Token 776: ' suivante' (ID: 107439)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015614435076713562
    2. '    
' → logprob: -5.6406145095825195
    3. 'for' → logprob: -5.6406145095825195
    4. '.' → logprob: -5.7656145095825195
    5. ',' → logprob: -6.5156145095825195
    6. ' for' → logprob: -6.8906145095825195
    7. '  ' → logprob: -7.2656145095825195
    8. '
' → logprob: -7.5156145095825195
    9. '    ' → logprob: -7.6406145095825195
    10. ' ' → logprob: -8.51561450958252

Token 777: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2918725311756134
    2. '    
' → logprob: -2.166872501373291
    3. '
' → logprob: -2.791872501373291
    4. '<|end|>' → logprob: -4.041872501373291
    5. ',' → logprob: -4.291872501373291
    6. '.' → logprob: -4.666872501373291
    7. '   
' → logprob: -5.291872501373291
    8. ' ' → logprob: -5.416872501373291
    9. '  ' → logprob: -5.541872501373291
    10. '  
' → logprob: -5.666872501373291

Token 778: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3640129864215851
    2. 'for' → logprob: -1.2390129566192627
    3. ' for' → logprob: -4.864013195037842
    4. 'i' → logprob: -4.989013195037842
    5. '    
' → logprob: -7.989013195037842
    6. ' i' → logprob: -8.989012718200684
    7. '
' → logprob: -9.239012718200684
    8. 'while' → logprob: -9.364012718200684
    9. 'max' → logprob: -9.489012718200684
    10. '```' → logprob: -10.614012718200684

Token 779: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6616949439048767
    2. 'for' → logprob: -0.9116949439048767
    3. 'dp' → logprob: -3.1616950035095215
    4. 'i' → logprob: -4.1616950035095215
    5. 'ans' → logprob: -5.0366950035095215
    6. 'max' → logprob: -5.4116950035095215
    7. 'stack' → logprob: -6.0366950035095215
    8. 'cnt' → logprob: -6.5366950035095215
    9. 'res' → logprob: -6.6616950035095215
    10. 'answer' → logprob: -7.0366950035095215

Token 780: ' flag' (ID: 9641)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6399756669998169
    2. ' for' → logprob: -1.514975666999817
    3. 'i' → logprob: -1.889975666999817
    4. '   ' → logprob: -2.5149755477905273
    5. ' i' → logprob: -4.764975547790527
    6. '    
' → logprob: -6.264975547790527
    7. 'res' → logprob: -6.389975547790527
    8. 'max' → logprob: -6.764975547790527
    9. 'result' → logprob: -7.014975547790527
    10. ' ' → logprob: -7.264975547790527

Token 781: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038173455744981766
    2. '=' → logprob: -3.2881734371185303
    3. '_' → logprob: -9.66317367553711
    4. ' ' → logprob: -10.28817367553711
    5. ',' → logprob: -11.16317367553711
    6. '_space' → logprob: -12.78817367553711
    7. ' ,' → logprob: -12.91317367553711
    8. '[' → logprob: -13.03817367553711
    9. 'space' → logprob: -13.28817367553711
    10. '<|end|>' → logprob: -13.41317367553711

Token 782: ' ' (ID: 220)
  Prédit: ' False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.9690039157867432
    2. 'False' → logprob: -1.0940039157867432
    3. ' True' → logprob: -1.5940039157867432
    4. 'True' → logprob: -2.719003915786743
    5. '0' → logprob: -4.344003677368164
    6. ' ' → logprob: -5.719003677368164
    7. '1' → logprob: -8.344003677368164
    8. ' [' → logprob: -11.094003677368164
    9. ' -' → logprob: -11.219003677368164
    10. '-' → logprob: -11.219003677368164

Token 783: '1' (ID: 16)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.34063059091567993
    2. 'True' → logprob: -1.4656305313110352
    3. '0' → logprob: -2.965630531311035
    4. '1' → logprob: -5.215630531311035
    5. '-' → logprob: -8.090630531311035
    6. ' False' → logprob: -9.090630531311035
    7. ' True' → logprob: -9.840630531311035
    8. 'N' → logprob: -9.965630531311035
    9. '[' → logprob: -10.090630531311035
    10. 'H' → logprob: -10.215630531311035

Token 784: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 785: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 786: ' Initial' (ID: 9209)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9762510657310486
    2. 'True' → logprob: -1.7262511253356934
    3. '#' → logprob: -2.1012511253356934
    4. 'for' → logprob: -2.3512511253356934
    5. 'flag' → logprob: -2.6012511253356934
    6. ' True' → logprob: -3.6012511253356934
    7. '=' → logprob: -3.8512511253356934
    8. ' ' → logprob: -4.351251125335693
    9. ' 
' → logprob: -4.601251125335693
    10. ' for' → logprob: -4.601251125335693

Token 787: 'isation' (ID: 6993)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.6082233786582947
    2. '_flag' → logprob: -1.7332234382629395
    3. '=' → logprob: -1.9832234382629395
    4. ' =' → logprob: -2.6082234382629395
    5. ' flag' → logprob: -3.2332234382629395
    6. '_' → logprob: -4.4832234382629395
    7. ')' → logprob: -5.6082234382629395
    8. 'def' → logprob: -6.2332234382629395
    9. 't' → logprob: -6.8582234382629395
    10. 'itial' → logprob: -6.9832234382629395

Token 788: ' d' (ID: 272)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 789: ''une' (ID: 13337)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.8878613710403442
    2. '<|end|>' → logprob: -1.7628613710403442
    3. ' flag' → logprob: -1.8878613710403442
    4. 'a' → logprob: -3.0128612518310547
    5. ' ' → logprob: -3.1378612518310547
    6. 'une' → logprob: -3.2628612518310547
    7. ' une' → logprob: -3.3878612518310547
    8. ' un' → logprob: -3.8878612518310547
    9. ' a' → logprob: -4.387861251831055
    10. 'un' → logprob: -4.637861251831055

Token 790: ' seconde' (ID: 66204)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.22579343616962433
    2. 'variable' → logprob: -1.725793480873108
    3. ' flag' → logprob: -4.225793361663818
    4. ' variable' → logprob: -6.350793361663818
    5. 'bool' → logprob: -6.475793361663818
    6. 'counter' → logprob: -6.725793361663818
    7. 'boolean' → logprob: -7.100793361663818
    8. 'token' → logprob: -7.100793361663818
    9. 'space' → logprob: -7.100793361663818
    10. '<|end|>' → logprob: -7.725793361663818

Token 791: ' variable' (ID: 11076)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6167991161346436
    2. '<|end|>' → logprob: -0.8667991161346436
    3. 'space' → logprob: -4.116799354553223
    4. ' space' → logprob: -5.241799354553223
    5. ' =' → logprob: -5.366799354553223
    6. ' flag' → logprob: -5.991799354553223
    7. '=' → logprob: -5.991799354553223
    8. '  ' → logprob: -6.366799354553223
    9. '<|end|>' → logprob: -6.366799354553223
    10. ')' → logprob: -6.366799354553223

Token 792: ' appelée' (ID: 179130)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 793: ' '' (ID: 461)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.3771166205406189
    2. ' flag' → logprob: -1.2521166801452637
    3. '(flag' → logprob: -4.252116680145264
    4. ' ' → logprob: -5.752116680145264
    5. '<|end|>' → logprob: -6.002116680145264
    6. '_flag' → logprob: -6.252116680145264
    7. '=' → logprob: -6.502116680145264
    8. '	flag' → logprob: -7.502116680145264
    9. ' =' → logprob: -7.627116680145264
    10. '```' → logprob: -7.627116680145264

Token 794: 'flag' (ID: 17665)
  Prédit: 'flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.23466677963733673
    2. 'off' → logprob: -1.7346668243408203
    3. 'True' → logprob: -4.23466682434082
    4. 'int' → logprob: -4.73466682434082
    5. 'bool' → logprob: -5.60966682434082
    6. 'False' → logprob: -5.73466682434082
    7. 'offset' → logprob: -6.98466682434082
    8. '0' → logprob: -7.35966682434082
    9. '1' → logprob: -7.73466682434082
    10. 'H' → logprob: -8.85966682434082

Token 795: ''' (ID: 6)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5371881723403931
    2. ')' → logprob: -2.2871880531311035
    3. ' =' → logprob: -2.5371880531311035
    4. '
' → logprob: -2.7871880531311035
    5. '=' → logprob: -2.9121880531311035
    6. '  ' → logprob: -3.4121880531311035
    7. ' ' → logprob: -3.5371880531311035
    8. '    ' → logprob: -4.5371880531311035
    9. '#' → logprob: -4.5371880531311035
    10. ' #' → logprob: -4.6621880531311035

Token 796: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2105296850204468
    2. '<|end|>' → logprob: -1.3355296850204468
    3. '=' → logprob: -1.4605296850204468
    4. '   ' → logprob: -2.7105298042297363
    5. ' =' → logprob: -3.7105298042297363
    6. '  ' → logprob: -3.8355298042297363
    7. '
' → logprob: -3.8355298042297363
    8. '#' → logprob: -3.8355298042297363
    9. ')' → logprob: -4.710529804229736
    10. '<|end|>' → logprob: -5.085529804229736

Token 797: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0023193915840238333
    2. ' ' → logprob: -6.7523193359375
    3. '0' → logprob: -6.8773193359375
    4. 'True' → logprob: -9.3773193359375
    5. ' True' → logprob: -10.7523193359375
    6. '-' → logprob: -12.1273193359375
    7. '   ' → logprob: -12.8773193359375
    8. ' -' → logprob: -14.1273193359375
    9. 'False' → logprob: -14.1273193359375
    10. '  ' → logprob: -14.6273193359375

Token 798: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.065902940928936
    2. '0' → logprob: -2.8159029483795166
    3. 'True' → logprob: -5.5659027099609375
    4. 'False' → logprob: -10.190902709960938
    5. 'N' → logprob: -10.815902709960938
    6. ' ' → logprob: -11.315902709960938
    7. ' True' → logprob: -11.815902709960938
    8. '-' → logprob: -12.065902709960938
    9. '(True' → logprob: -12.565902709960938
    10. '100' → logprob: -12.815902709960938

Token 799: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 800: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1533762812614441
    2. '<|end|>' → logprob: -2.528376340866089
    3. '    
' → logprob: -3.778376340866089
    4. '
' → logprob: -3.778376340866089
    5. ' for' → logprob: -5.90337610244751
    6. ' ' → logprob: -6.40337610244751
    7. '  ' → logprob: -6.40337610244751
    8. 'for' → logprob: -6.65337610244751
    9. '  
' → logprob: -6.77837610244751
    10. ':' → logprob: -6.77837610244751

Token 801: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2992389500141144
    2. '
' → logprob: -1.799238920211792
    3. '    
' → logprob: -3.299238920211792
    4. '<|end|>' → logprob: -3.924238920211792
    5. ':' → logprob: -4.924239158630371
    6. '  ' → logprob: -4.924239158630371
    7. '\n' → logprob: -5.299239158630371
    8. '  
' → logprob: -5.924239158630371
    9. ' ' → logprob: -6.174239158630371
    10. '   
' → logprob: -6.299239158630371

Token 802: ' Cependant' (ID: 74480)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.42809730768203735
    2. ' for' → logprob: -2.4280972480773926
    3. '#' → logprob: -2.6780972480773926
    4. 'i' → logprob: -2.9280972480773926
    5. 'while' → logprob: -3.1780972480773926
    6. 'flag' → logprob: -3.4280972480773926
    7. ' while' → logprob: -4.678097248077393
    8. '
' → logprob: -4.803097248077393
    9. ' #' → logprob: -4.928097248077393
    10. ' i' → logprob: -5.178097248077393

Token 803: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 804: ' cette' (ID: 7696)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.619926929473877
    2. '<|end|>' → logprob: -0.994926929473877
    3. ' flag' → logprob: -3.119926929473877
    4. '    ' → logprob: -4.494926929473877
    5. 'flag' → logprob: -4.494926929473877
    6. ' )' → logprob: -5.244926929473877
    7. ' 
' → logprob: -5.619926929473877
    8. ')' → logprob: -5.994926929473877
    9. '<|end|>' → logprob: -5.994926929473877
    10. '  ' → logprob: -6.494926929473877

Token 805: ' variable' (ID: 11076)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.4102027416229248
    2. ' flag' → logprob: -1.1602027416229248
    3. 'variable' → logprob: -4.660202980041504
    4. ' variable' → logprob: -4.785202980041504
    5. '
' → logprob: -5.535202980041504
    6. '

' → logprob: -8.410202980041504
    7. '=' → logprob: -9.410202980041504
    8. '#' → logprob: -9.660202980041504
    9. ' 
' → logprob: -9.785202980041504
    10. ' =' → logprob: -9.785202980041504

Token 806: ' n' (ID: 297)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23960506916046143
    2. ' =' → logprob: -1.7396050691604614
    3. ' ' → logprob: -3.864604949951172
    4. '#' → logprob: -4.989604949951172
    5. '<|end|>' → logprob: -5.114604949951172
    6. '
' → logprob: -7.114604949951172
    7. ' 
' → logprob: -7.364604949951172
    8. ',' → logprob: -7.364604949951172
    9. '   ' → logprob: -8.489604949951172
    10. '  ' → logprob: -8.614604949951172

Token 807: ''est' (ID: 6616)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1472565084695816
    2. ' =' → logprob: -2.02225661277771
    3. 'ot' → logprob: -6.272256374359131
    4. '#' → logprob: -6.647256374359131
    5. '=None' → logprob: -8.522256851196289
    6. 'o' → logprob: -8.647256851196289
    7. '=False' → logprob: -8.772256851196289
    8. ',' → logprob: -8.772256851196289
    9. ' #' → logprob: -9.272256851196289
    10. '+=' → logprob: -9.272256851196289

Token 808: ' jamais' (ID: 23077)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.46140560507774353
    2. ' pas' → logprob: -1.086405634880066
    3. ' jamais' → logprob: -4.2114057540893555
    4. 'not' → logprob: -4.8364057540893555
    5. 'unused' → logprob: -5.0864057540893555
    6. ' not' → logprob: -6.4614057540893555
    7. '#' → logprob: -8.336405754089355
    8. ' finalement' → logprob: -8.461405754089355
    9. '_pas' → logprob: -8.711405754089355
    10. '<|end|>' → logprob: -9.086405754089355

Token 809: ' utilisée' (ID: 106548)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.03161546215415001
    2. ' utilisée' → logprob: -3.6566154956817627
    3. 'used' → logprob: -5.531615257263184
    4. ' used' → logprob: -7.156615257263184
    5. 'mod' → logprob: -9.031615257263184
    6. ' utilisé' → logprob: -9.531615257263184
    7. ''util' → logprob: -9.656615257263184
    8. '_util' → logprob: -9.906615257263184
    9. 'ut' → logprob: -10.281615257263184
    10. ' utilized' → logprob: -10.656615257263184

Token 810: ' dans' (ID: 2671)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 811: ' la' (ID: 557)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.47113385796546936
    2. 'le' → logprob: -1.596133828163147
    3. 'this' → logprob: -1.846133828163147
    4. ' the' → logprob: -5.471133708953857
    5. ' ce' → logprob: -5.471133708953857
    6. 'la' → logprob: -6.096133708953857
    7. ' le' → logprob: -6.346133708953857
    8. ' this' → logprob: -7.096133708953857
    9. '#' → logprob: -7.596133708953857
    10. 'l' → logprob: -7.846133708953857

Token 812: ' suite' (ID: 13800)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.0006254645413719118
    2. ' code' → logprob: -8.125625610351562
    3. 'suite' → logprob: -8.500625610351562
    4. 'provided' → logprob: -9.875625610351562
    5. '```' → logprob: -10.500625610351562
    6. 'rest' → logprob: -10.875625610351562
    7. '#' → logprob: -11.625625610351562
    8. 'reste' → logprob: -11.750625610351562
    9. 'remaining' → logprob: -12.875625610351562
    10. 'script' → logprob: -12.875625610351562

Token 813: ' du' (ID: 1462)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 814: ' code' (ID: 3490)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'code' → logprob: -2.7968066206085496e-05
    2. ' code' → logprob: -10.625027656555176
    3. 'programme' → logprob: -13.500027656555176
    4. '```' → logprob: -14.250027656555176
    5. '_code' → logprob: -14.500027656555176
    6. 'コード' → logprob: -14.625027656555176
    7. '#' → logprob: -15.375027656555176
    8. 'Code' → logprob: -16.000028610229492
    9. 'script' → logprob: -16.250028610229492
    10. 'cod' → logprob: -16.750028610229492

Token 815: ' et' (ID: 859)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 816: ' peut' (ID: 9216)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2107783406972885
    2. '<|end|>' → logprob: -1.7107783555984497
    3. '.' → logprob: -6.08577823638916
    4. ' ' → logprob: -6.96077823638916
    5. '
' → logprob: -7.08577823638916
    6. ' pass' → logprob: -7.21077823638916
    7. ' #' → logprob: -7.33577823638916
    8. '<|end|>' → logprob: -7.46077823638916
    9. ' can' → logprob: -7.71077823638916
    10. ' is' → logprob: -7.83577823638916

Token 817: ' donc' (ID: 14206)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.011981979012489319
    2. '#' → logprob: -5.761981964111328
    3. ' être' → logprob: -6.261981964111328
    4. 'êtres' → logprob: -6.386981964111328
    5. 'don' → logprob: -7.011981964111328
    6. ''être' → logprob: -7.386981964111328
    7. 'êt' → logprob: -7.636981964111328
    8. '```' → logprob: -7.886981964111328
    9. 'etre' → logprob: -8.011981964111328
    10. '<|end|>' → logprob: -8.136981964111328

Token 818: ' être' (ID: 9104)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.11373112350702286
    2. ' être' → logprob: -3.1137311458587646
    3. '<|end|>' → logprob: -3.6137311458587646
    4. ' be' → logprob: -4.1137309074401855
    5. '#' → logprob: -5.8637309074401855
    6. 'pass' → logprob: -6.1137309074401855
    7. ''être' → logprob: -6.4887309074401855
    8. 'êt' → logprob: -6.6137309074401855
    9. 'êtres' → logprob: -6.7387309074401855
    10. '_' → logprob: -6.7387309074401855

Token 819: ' supprim' (ID: 142986)
  Prédit: 'sup'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sup' → logprob: -0.10444393008947372
    2. ' supprim' → logprob: -2.4794440269470215
    3. 'removed' → logprob: -5.3544440269470215
    4. 'ignor' → logprob: -5.8544440269470215
    5. 'om' → logprob: -5.9794440269470215
    6. 'ret' → logprob: -6.2294440269470215
    7. 'ignored' → logprob: -6.7294440269470215
    8. ' om' → logprob: -7.6044440269470215
    9. 'su' → logprob: -8.229443550109863
    10. 'supp' → logprob: -8.229443550109863

Token 820: 'ée' (ID: 2894)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.038863178342580795
    2. 'e' → logprob: -3.413863182067871
    3. '#' → logprob: -6.038863182067871
    4. ')' → logprob: -6.413863182067871
    5. '()
' → logprob: -8.413863182067871
    6. '.' → logprob: -8.663863182067871
    7. '(e' → logprob: -8.788863182067871
    8. ']' → logprob: -9.538863182067871
    9. '(' → logprob: -9.663863182067871
    10. 'é' → logprob: -9.663863182067871

Token 821: ' sans' (ID: 9828)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 822: ' changer' (ID: 47099)
  Prédit: 'impact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'impact' → logprob: -0.3583966791629791
    2. 'eff' → logprob: -2.2333967685699463
    3. 'aff' → logprob: -2.4833967685699463
    4. 'cons' → logprob: -3.2333967685699463
    5. 'inc' → logprob: -3.7333967685699463
    6. 'changer' → logprob: -4.358396530151367
    7. 'auc' → logprob: -4.608396530151367
    8. 'in' → logprob: -4.983396530151367
    9. 'alt' → logprob: -5.483396530151367
    10. 'modifier' → logprob: -5.858396530151367

Token 823: ' le' (ID: 505)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 824: ' comportement' (ID: 98649)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.5421430468559265
    2. 'fonction' → logprob: -0.9171430468559265
    3. 'code' → logprob: -4.417142868041992
    4. 'programme' → logprob: -5.167142868041992
    5. 'rés' → logprob: -7.167142868041992
    6. ' comportement' → logprob: -8.917142868041992
    7. '#' → logprob: -10.042142868041992
    8. '```' → logprob: -11.042142868041992
    9. 'fon' → logprob: -11.167142868041992
    10. 'result' → logprob: -11.292142868041992

Token 825: ' du' (ID: 1462)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 826: ' programme' (ID: 18190)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.1655358374118805
    2. 'code' → logprob: -1.915535807609558
    3. 'program' → logprob: -5.415535926818848
    4. 'script' → logprob: -7.290535926818848
    5. ' programme' → logprob: -8.790535926818848
    6. ' code' → logprob: -11.915535926818848
    7. 'prog' → logprob: -12.915535926818848
    8. 'programma' → logprob: -13.040535926818848
    9. '#' → logprob: -13.415535926818848
    10. '```' → logprob: -13.790535926818848

Token 827: '.

' (ID: 364)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 828: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16643556952476501
    2. '   ' → logprob: -2.041435480117798
    3. ' for' → logprob: -4.916435718536377
    4. '    
' → logprob: -5.541435718536377
    5. 'result' → logprob: -5.666435718536377
    6. 'i' → logprob: -6.166435718536377
    7. 'max' → logprob: -6.291435718536377
    8. 'res' → logprob: -6.666435718536377
    9. 'ans' → logprob: -7.166435718536377
    10. 'answer' → logprob: -7.416435718536377

Token 829: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.34600120782852173
    2. 'dp' → logprob: -2.096001148223877
    3. 'stack' → logprob: -3.096001148223877
    4. 'ans' → logprob: -3.221001148223877
    5. 'res' → logprob: -3.721001148223877
    6. 'answer' → logprob: -4.846001148223877
    7. 'max' → logprob: -5.346001148223877
    8. 'result' → logprob: -5.596001148223877
    9. 'cur' → logprob: -6.096001148223877
    10. 'i' → logprob: -6.096001148223877

Token 830: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4115670323371887
    2. ' h' → logprob: -1.161566972732544
    3. 'i' → logprob: -4.286567211151123
    4. 'h' → logprob: -5.036567211151123
    5. ' x' → logprob: -5.911567211151123
    6. ' ' → logprob: -7.661567211151123
    7. ' _' → logprob: -8.161566734313965
    8. 'x' → logprob: -9.036566734313965
    9. '_' → logprob: -9.286566734313965
    10. ' height' → logprob: -9.286566734313965

Token 831: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01832318864762783
    2. 'in' → logprob: -4.0183234214782715
    3. ' ' → logprob: -9.268322944641113
    4. ',' → logprob: -9.768322944641113
    5. '	in' → logprob: -11.768322944641113
    6. ' ' → logprob: -12.768322944641113
    7. '_' → logprob: -13.268322944641113
    8. '0' → logprob: -13.643322944641113
    9. ' ,' → logprob: -13.643322944641113
    10. '1' → logprob: -13.768322944641113

Token 832: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.313341349363327
    2. ' range' → logprob: -1.3133413791656494
    3. ' ' → logprob: -10.31334114074707
    4. '   ' → logprob: -11.68834114074707
    5. 'H' → logprob: -11.93834114074707
    6. '	range' → logprob: -12.06334114074707
    7. '  ' → logprob: -12.43834114074707
    8. 're' → logprob: -12.81334114074707
    9. 'rang' → logprob: -12.81334114074707
    10. ')' → logprob: -12.81334114074707

Token 833: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6932216286659241
    2. '(N' → logprob: -0.6932216286659241
    3. '(len' → logprob: -10.193222045898438
    4. '(n' → logprob: -10.818222045898438
    5. '(
' → logprob: -11.693222045898438
    6. '1' → logprob: -12.443222045898438
    7. 'N' → logprob: -12.568222045898438
    8. '(
' → logprob: -15.443222045898438
    9. ' (' → logprob: -15.568222045898438
    10. '()' → logprob: -15.818222045898438

Token 834: '-' (ID: 12)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001507601235061884
    2. ')' → logprob: -7.376507759094238
    3. ' ):' → logprob: -7.751507759094238
    4. '-' → logprob: -8.376507759094238
    5. '):
' → logprob: -9.001507759094238
    6. ' -' → logprob: -9.501507759094238
    7. '   ' → logprob: -10.876507759094238
    8. ':' → logprob: -14.126507759094238
    9. '+' → logprob: -14.251507759094238
    10. ' )' → logprob: -14.501507759094238

Token 835: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013238313840702176
    2. '2' → logprob: -9.37513256072998
    3. ' ' → logprob: -10.00013256072998
    4. ')' → logprob: -14.25013256072998
    5. '   ' → logprob: -15.12513256072998
    6. '0' → logprob: -15.25013256072998
    7. '-' → logprob: -15.31263256072998
    8. '3' → logprob: -15.81263256072998
    9. '１' → logprob: -16.250131607055664
    10. '(' → logprob: -16.375131607055664

Token 836: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009379047551192343
    2. '):
' → logprob: -7.7509379386901855
    3. ')' → logprob: -8.000937461853027
    4. ' ):' → logprob: -8.750937461853027
    5. '-' → logprob: -12.625937461853027
    6. ':' → logprob: -12.750937461853027
    7. '   ' → logprob: -13.125937461853027
    8. ',' → logprob: -13.375937461853027
    9. '+' → logprob: -14.000937461853027
    10. '):
' → logprob: -14.250937461853027

Token 837: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0056745754554867744
    2. ' -' → logprob: -5.255674362182617
    3. '0' → logprob: -7.755674362182617
    4. ' ' → logprob: -12.130674362182617
    5. '1' → logprob: -12.505674362182617
    6. '   ' → logprob: -13.255674362182617
    7. '
' → logprob: -14.130674362182617
    8. '-
' → logprob: -15.380674362182617
    9. '    ' → logprob: -16.005674362182617
    10. '  ' → logprob: -16.130674362182617

Token 838: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.005404626950621605
    2. '0' → logprob: -5.255404472351074
    3. ' -' → logprob: -8.880404472351074
    4. '1' → logprob: -10.505404472351074
    5. ' ' → logprob: -12.755404472351074
    6. '   ' → logprob: -14.505404472351074
    7. '2' → logprob: -15.630404472351074
    8. '
' → logprob: -15.880404472351074
    9. '-H' → logprob: -15.880404472351074
    10. '−' → logprob: -16.00540542602539

Token 839: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005623835138976574
    2. '-' → logprob: -5.505623817443848
    3. ',-' → logprob: -6.505623817443848
    4. ' -' → logprob: -10.380623817443848
    5. '   ' → logprob: -11.630623817443848
    6. ' ,' → logprob: -12.755623817443848
    7. '-,' → logprob: -12.880623817443848
    8. ' ,-' → logprob: -12.880623817443848
    9. ',
' → logprob: -14.755623817443848
    10. '):' → logprob: -15.505623817443848

Token 840: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0005573204252868891
    2. ' -' → logprob: -7.5005574226379395
    3. '   ' → logprob: -12.625556945800781
    4. '-)' → logprob: -14.625556945800781
    5. '  ' → logprob: -15.125556945800781
    6. ')' → logprob: -15.750556945800781
    7. ' ' → logprob: -16.62555694580078
    8. '-
' → logprob: -16.87555694580078
    9. '```' → logprob: -17.62555694580078
    10. ',-' → logprob: -17.62555694580078

Token 841: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '2' → logprob: -15.625
    3. ' ' → logprob: -16.125
    4. ')' → logprob: -16.25
    5. '-' → logprob: -17.5
    6. '   ' → logprob: -19.4375
    7. '):
' → logprob: -19.5
    8. ' -' → logprob: -19.5625
    9. '3' → logprob: -19.625
    10. '
' → logprob: -19.625

Token 842: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0011686758371070027
    2. '):
' → logprob: -6.876168727874756
    3. ':' → logprob: -10.376168251037598
    4. ' ):' → logprob: -10.501168251037598
    5. '   ' → logprob: -10.626168251037598
    6. '-' → logprob: -10.876168251037598
    7. ',' → logprob: -11.001168251037598
    8. ')' → logprob: -11.251168251037598
    9. '):-' → logprob: -13.251168251037598
    10. '):
' → logprob: -13.876168251037598

Token 843: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17958864569664001
    2. '   ' → logprob: -2.054588556289673
    3. ' :' → logprob: -3.804588556289673
    4. '    ' → logprob: -5.679588794708252
    5. '<|end|>' → logprob: -6.054588794708252
    6. ' ' → logprob: -6.304588794708252
    7. '       ' → logprob: -6.679588794708252
    8. '\' → logprob: -7.304588794708252
    9. ':
' → logprob: -7.429588794708252
    10. '    
' → logprob: -7.804588794708252

Token 844: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16392391920089722
    2. 'while' → logprob: -2.038923978805542
    3. ' if' → logprob: -5.038923740386963
    4. 'h' → logprob: -5.663923740386963
    5. 'off' → logprob: -5.663923740386963
    6. '   ' → logprob: -5.788923740386963
    7. ' while' → logprob: -6.038923740386963
    8. 'diff' → logprob: -7.038923740386963
    9. '       ' → logprob: -7.288923740386963
    10. 'd' → logprob: -9.413924217224121

Token 845: ' Bou' (ID: 33816)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3060123324394226
    2. 'while' → logprob: -1.6810123920440674
    3. ' if' → logprob: -3.1810123920440674
    4. ' while' → logprob: -3.8060123920440674
    5. '   ' → logprob: -4.556012153625488
    6. 'h' → logprob: -7.181012153625488
    7. 'diff' → logprob: -7.181012153625488
    8. 'off' → logprob: -7.306012153625488
    9. 'H' → logprob: -8.431012153625488
    10. 'val' → logprob: -8.681012153625488

Token 846: 'cle' (ID: 3170)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7898398041725159
    2. '       ' → logprob: -1.164839744567871
    3. 'r' → logprob: -2.039839744567871
    4. 'n' → logprob: -3.539839744567871
    5. 'u' → logprob: -3.664839744567871
    6. '    ' → logprob: -3.789839744567871
    7. 'space' → logprob: -4.664839744567871
    8. '     ' → logprob: -5.914839744567871
    9. '      ' → logprob: -6.039839744567871
    10. 'f' → logprob: -6.539839744567871

Token 847: ' for' (ID: 395)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.33745670318603516
    2. ' :' → logprob: -1.7124567031860352
    3. '   ' → logprob: -2.587456703186035
    4. '    ' → logprob: -4.087456703186035
    5. ' ' → logprob: -4.712456703186035
    6. '       ' → logprob: -7.212456703186035
    7. '(' → logprob: -7.337456703186035
    8. '[' → logprob: -7.462456703186035
    9. ' (' → logprob: -7.587456703186035
    10. ' :
' → logprob: -7.962456703186035

Token 848: ' qui' (ID: 2780)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.37151578068733215
    2. '   ' → logprob: -1.9965157508850098
    3. ' :' → logprob: -2.2465157508850098
    4. '       ' → logprob: -3.1215157508850098
    5. '    ' → logprob: -4.37151575088501
    6. '[' → logprob: -5.49651575088501
    7. '(' → logprob: -6.24651575088501
    8. ':
' → logprob: -6.74651575088501
    9. ' (' → logprob: -6.74651575088501
    10. ' ' → logprob: -7.24651575088501

Token 849: ' démar' (ID: 72663)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39094826579093933
    2. ':' → logprob: -1.3909482955932617
    3. ' :' → logprob: -3.7659482955932617
    4. '    ' → logprob: -3.8909482955932617
    5. ' ' → logprob: -4.765948295593262
    6. '       ' → logprob: -5.015948295593262
    7. ' if' → logprob: -5.765948295593262
    8. '  ' → logprob: -6.265948295593262
    9. 'if' → logprob: -6.640948295593262
    10. ' for' → logprob: -6.765948295593262

Token 850: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.09907606244087219
    2. 'r' → logprob: -2.97407603263855
    3. 'ne' → logprob: -3.72407603263855
    4. 'range' → logprob: -4.474076271057129
    5. '   ' → logprob: -6.224076271057129
    6. 'n' → logprob: -6.224076271057129
    7. 'rr' → logprob: -7.349076271057129
    8. '```' → logprob: -7.474076271057129
    9. 'le' → logprob: -7.974076271057129
    10. '``' → logprob: -8.599076271057129

Token 851: ' à' (ID: 1221)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7878568768501282
    2. ' :' → logprob: -1.2878568172454834
    3. '   ' → logprob: -1.9128568172454834
    4. '    ' → logprob: -3.6628568172454834
    5. ',' → logprob: -3.6628568172454834
    6. ' ' → logprob: -3.9128568172454834
    7. '       ' → logprob: -4.2878570556640625
    8. ' (' → logprob: -4.9128570556640625
    9. '):' → logprob: -5.7878570556640625
    10. ' i' → logprob: -5.7878570556640625

Token 852: ' l' (ID: 305)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2547600567340851
    2. 'N' → logprob: -1.5047600269317627
    3. ' i' → logprob: -6.004760265350342
    4. ' N' → logprob: -8.004759788513184
    5. '   ' → logprob: -11.629759788513184
    6. 'range' → logprob: -11.879759788513184
    7. ' ' → logprob: -12.629759788513184
    8. '	N' → logprob: -13.629759788513184
    9. '	i' → logprob: -14.004759788513184
    10. '0' → logprob: -14.379759788513184

Token 853: ''ind' (ID: 82245)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.1344381868839264
    2. 'i' → logprob: -2.1344382762908936
    3. ' N' → logprob: -5.1344380378723145
    4. ' i' → logprob: -6.6344380378723145
    5. '   ' → logprob: -8.884438514709473
    6. ' ' → logprob: -10.509438514709473
    7. ' range' → logprob: -10.634438514709473
    8. 'range' → logprob: -10.634438514709473
    9. ')' → logprob: -11.509438514709473
    10. '    ' → logprob: -11.759438514709473

Token 854: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.015419462695717812
    2. 'e' → logprob: -4.3904194831848145
    3. 'i' → logprob: -5.8904194831848145
    4. 'ice' → logprob: -9.515419006347656
    5. 'é' → logprob: -9.765419006347656
    6. 'ices' → logprob: -12.765419006347656
    7. 'exe' → logprob: -13.890419006347656
    8. 'es' → logprob: -14.390419006347656
    9. 'iex' → logprob: -14.390419006347656
    10. 'ei' → logprob: -14.765419006347656

Token 855: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.004647876601666212
    2. ' N' → logprob: -5.504647731781006
    3. 'i' → logprob: -7.504647731781006
    4. ' i' → logprob: -11.379648208618164
    5. '   ' → logprob: -12.754648208618164
    6. '	N' → logprob: -13.504648208618164
    7. ' ' → logprob: -14.129648208618164
    8. 'n' → logprob: -14.129648208618164
    9. '(N' → logprob: -14.879648208618164
    10. '=N' → logprob: -15.379648208618164

Token 856: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.012510471045970917
    2. ' -' → logprob: -4.387510299682617
    3. '1' → logprob: -15.262510299682617
    4. 'i' → logprob: -16.637510299682617
    5. ' ' → logprob: -16.762510299682617
    6. '```' → logprob: -16.762510299682617
    7. '-=' → logprob: -17.012510299682617
    8. ' i' → logprob: -17.262510299682617
    9. ')' → logprob: -17.387510299682617
    10. '=' → logprob: -17.387510299682617

Token 857: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0007276826072484255
    2. ' -' → logprob: -7.750727653503418
    3. '1' → logprob: -8.125727653503418
    4. '-
' → logprob: -15.000727653503418
    5. '```' → logprob: -16.250728607177734
    6. '2' → logprob: -16.500728607177734
    7. ')' → logprob: -16.625728607177734
    8. ''-' → logprob: -16.625728607177734
    9. '_' → logprob: -17.000728607177734
    10. ' ' → logprob: -17.125728607177734

Token 858: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.57208251953125
    2. ',' → logprob: -1.57208251953125
    3. ' :' → logprob: -1.57208251953125
    4. '   ' → logprob: -4.57208251953125
    5. '):' → logprob: -5.32208251953125
    6. ' ,' → logprob: -5.82208251953125
    7. ')' → logprob: -7.82208251953125
    8. ' :
' → logprob: -8.07208251953125
    9. ':
' → logprob: -8.19708251953125
    10. '       ' → logprob: -8.57208251953125

Token 859: 'dern' (ID: 19098)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7052567005157471
    2. ' )' → logprob: -1.205256700515747
    3. 'i' → logprob: -2.455256700515747
    4. ' ' → logprob: -2.830256700515747
    5. ' i' → logprob: -3.330256700515747
    6. ' ):
' → logprob: -5.705256462097168
    7. '):
' → logprob: -5.955256462097168
    8. '32' → logprob: -6.205256462097168
    9. '<|end|>' → logprob: -6.205256462097168
    10. '0' → logprob: -6.330256462097168

Token 860: 'ier' (ID: 905)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.23099982738494873
    2. 'e' → logprob: -1.6059998273849487
    3. ')' → logprob: -6.230999946594238
    4. 'ier' → logprob: -7.855999946594238
    5. 'er' → logprob: -7.980999946594238
    6. 'érieur' → logprob: -7.980999946594238
    7. 'é' → logprob: -8.105999946594238
    8. 'ième' → logprob: -8.230999946594238
    9. 'ef' → logprob: -8.480999946594238
    10. 'éf' → logprob: -8.730999946594238

Token 861: ' indice' (ID: 90848)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22525610029697418
    2. ' )' → logprob: -1.850256085395813
    3. ' ' → logprob: -4.100255966186523
    4. ' token' → logprob: -4.850255966186523
    5. ' :' → logprob: -5.600255966186523
    6. ' ' → logprob: -6.350255966186523
    7. '_' → logprob: -6.475255966186523
    8. ':' → logprob: -6.600255966186523
    9. ' ,' → logprob: -6.600255966186523
    10. ' i' → logprob: -6.600255966186523

Token 862: ' valide' (ID: 137323)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3985958695411682
    2. ' )' → logprob: -1.1485958099365234
    3. ' ):' → logprob: -5.148595809936523
    4. '):' → logprob: -6.148595809936523
    5. ' ),' → logprob: -6.273595809936523
    6. ',' → logprob: -7.648595809936523
    7. '),' → logprob: -8.023595809936523
    8. ' ):
' → logprob: -8.398595809936523
    9. ' ' → logprob: -8.648595809936523
    10. ' ,' → logprob: -8.773595809936523

Token 863: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2821008563041687
    2. ' )' → logprob: -1.6571009159088135
    3. '):' → logprob: -3.9071009159088135
    4. ' ):' → logprob: -3.9071009159088135
    5. ' ):
' → logprob: -5.407100677490234
    6. ',' → logprob: -6.157100677490234
    7. ' :' → logprob: -6.157100677490234
    8. '):
' → logprob: -6.282100677490234
    9. ' ,' → logprob: -6.782100677490234
    10. ' ' → logprob: -6.782100677490234

Token 864: ' la' (ID: 557)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0003542926860973239
    2. ' H' → logprob: -8.000354766845703
    3. ')' → logprob: -11.375354766845703
    4. 'i' → logprob: -13.000354766845703
    5. 'N' → logprob: -13.125354766845703
    6. ' la' → logprob: -14.375354766845703
    7. 'la' → logprob: -14.875354766845703
    8. 'l' → logprob: -15.125354766845703
    9. ' ' → logprob: -15.125354766845703
    10. 'range' → logprob: -15.125354766845703

Token 865: ' liste' (ID: 31719)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.00791133102029562
    2. 'range' → logprob: -5.382911205291748
    3. ' H' → logprob: -6.382911205291748
    4. ')' → logprob: -7.382911205291748
    5. 'liste' → logprob: -7.757911205291748
    6. 'list' → logprob: -8.757911682128906
    7. ' range' → logprob: -8.757911682128906
    8. '`' → logprob: -9.757911682128906
    9. 's' → logprob: -10.507911682128906
    10. '```' → logprob: -10.882911682128906

Token 866: ' H' (ID: 487)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02503708377480507
    2. ' )' → logprob: -3.7750370502471924
    3. '):' → logprob: -6.7750372886657715
    4. '):
' → logprob: -8.275036811828613
    5. ')
' → logprob: -9.525036811828613
    6. '),' → logprob: -9.650036811828613
    7. '   ' → logprob: -9.900036811828613
    8. ' ):' → logprob: -10.025036811828613
    9. ' ):
' → logprob: -10.275036811828613
    10. 'H' → logprob: -10.650036811828613

Token 867: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16259050369262695
    2. '):
' → logprob: -2.412590503692627
    3. ')' → logprob: -3.037590503692627
    4. ' ):' → logprob: -5.412590503692627
    5. ':' → logprob: -5.537590503692627
    6. '   ' → logprob: -6.037590503692627
    7. ' ):
' → logprob: -7.037590503692627
    8. ' )' → logprob: -8.037590026855469
    9. ' :' → logprob: -8.537590026855469
    10. ',' → logprob: -9.412590026855469

Token 868: ' et' (ID: 859)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20582909882068634
    2. ' :' → logprob: -1.70582914352417
    3. '   ' → logprob: -5.95582914352417
    4. ',' → logprob: -7.83082914352417
    5. '):' → logprob: -7.95582914352417
    6. ' ,' → logprob: -8.455828666687012
    7. ' ' → logprob: -8.580828666687012
    8. '    ' → logprob: -9.080828666687012
    9. ')' → logprob: -9.080828666687012
    10. '  ' → logprob: -9.205828666687012

Token 869: ' décr' (ID: 123041)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.35322585701942444
    2. ' i' → logprob: -1.603225827217102
    3. '    ' → logprob: -2.6032259464263916
    4. '   ' → logprob: -4.4782257080078125
    5. ' ' → logprob: -5.2282257080078125
    6. '  ' → logprob: -6.9782257080078125
    7. ':' → logprob: -7.6032257080078125
    8. '	i' → logprob: -7.7282257080078125
    9. ',' → logprob: -7.8532257080078125
    10. 'in' → logprob: -7.9782257080078125

Token 870: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.16741827130317688
    2. 'ément' → logprob: -2.6674182415008545
    3. 'e' → logprob: -3.0424182415008545
    4. 'ement' → logprob: -4.167418479919434
    5. 'o' → logprob: -5.542418479919434
    6. 'c' → logprob: -5.542418479919434
    7. 'ose' → logprob: -6.292418479919434
    8. 'ease' → logprob: -6.292418479919434
    9. 'és' → logprob: -6.917418479919434
    10. 'ements' → logprob: -7.042418479919434

Token 871: 'mente' (ID: 4186)
  Prédit: 'ment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.026973789557814598
    2. 'mente' → logprob: -3.9019737243652344
    3. 'm' → logprob: -6.026973724365234
    4. 'ments' → logprob: -6.276973724365234
    5. 'ément' → logprob: -7.276973724365234
    6. 'mentar' → logprob: -7.651973724365234
    7. 'ement' → logprob: -8.401973724365234
    8. 'mented' → logprob: -8.526973724365234
    9. 'mental' → logprob: -9.526973724365234
    10. 'mentation' → logprob: -9.651973724365234

Token 872: ' jusqu' (ID: 21961)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.531192421913147
    2. '(i' → logprob: -1.531192421913147
    3. '   ' → logprob: -2.0311923027038574
    4. '<|end|>' → logprob: -2.5311923027038574
    5. ':' → logprob: -2.6561923027038574
    6. ')' → logprob: -2.7811923027038574
    7. ',' → logprob: -2.7811923027038574
    8. ' i' → logprob: -3.4061923027038574
    9. '1' → logprob: -4.031192302703857
    10. ' ' → logprob: -4.156192302703857

Token 873: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.8982201814651489
    2. '’à' → logprob: -1.398220181465149
    3. ' à' → logprob: -1.648220181465149
    4. 'à' → logprob: -3.2732200622558594
    5. 'i' → logprob: -3.7732200622558594
    6. '1' → logprob: -3.8982200622558594
    7. '=' → logprob: -4.398220062255859
    8. '0' → logprob: -4.648220062255859
    9. '<|end|>' → logprob: -4.773220062255859
    10. '   ' → logprob: -4.773220062255859

Token 874: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.061148080974817276
    2. 'i' → logprob: -3.311148166656494
    3. '0' → logprob: -3.811148166656494
    4. ' ' → logprob: -7.811148166656494
    5. ' i' → logprob: -8.186147689819336
    6. '   ' → logprob: -10.811147689819336
    7. '    ' → logprob: -12.936147689819336
    8. 'index' → logprob: -13.061147689819336
    9. '```' → logprob: -13.561147689819336
    10. '	i' → logprob: -13.811147689819336

Token 875: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09717773646116257
    2. 'i' → logprob: -2.472177743911743
    3. '0' → logprob: -4.847177505493164
    4. ' i' → logprob: -8.597177505493164
    5. ' ' → logprob: -8.847177505493164
    6. '```' → logprob: -11.722177505493164
    7. '   ' → logprob: -12.784677505493164
    8. 'index' → logprob: -13.722177505493164
    9. '-' → logprob: -13.847177505493164
    10. '	i' → logprob: -14.034677505493164

Token 876: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.027563080191612244
    2. ' :' → logprob: -4.277563095092773
    3. ':
' → logprob: -5.152563095092773
    4. '   ' → logprob: -5.277563095092773
    5. ',' → logprob: -6.902563095092773
    6. ' :
' → logprob: -7.277563095092773
    7. '):' → logprob: -8.027563095092773
    8. '       ' → logprob: -8.777563095092773
    9. '):
' → logprob: -10.277563095092773
    10. '.' → logprob: -10.527563095092773

Token 877: 'p' (ID: 79)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.9236654043197632
    2. '):' → logprob: -0.9236654043197632
    3. ')' → logprob: -1.9236654043197632
    4. ' -' → logprob: -4.048665523529053
    5. '   ' → logprob: -4.423665523529053
    6. ' ):' → logprob: -4.548665523529053
    7. '):
' → logprob: -4.673665523529053
    8. '-)' → logprob: -5.798665523529053
    9. ' )' → logprob: -5.923665523529053
    10. '<|end|>' → logprob: -6.798665523529053

Token 878: 'uis' (ID: 4560)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09668339043855667
    2. ')' → logprob: -3.0966835021972656
    3. ' ):' → logprob: -3.8466835021972656
    4. '):
' → logprob: -4.721683502197266
    5. ',' → logprob: -4.846683502197266
    6. '<|end|>' → logprob: -5.721683502197266
    7. ':' → logprob: -6.096683502197266
    8. ' )' → logprob: -6.846683502197266
    9. ' :' → logprob: -7.096683502197266
    10. ' ):
' → logprob: -7.346683502197266

Token 879: 'que' (ID: 1126)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2003940343856812
    2. ')' → logprob: -1.5753940343856812
    3. '=' → logprob: -2.2003941535949707
    4. '   ' → logprob: -2.3253941535949707
    5. '0' → logprob: -2.8253941535949707
    6. '):' → logprob: -2.9503941535949707
    7. '    ' → logprob: -3.0753941535949707
    8. '...' → logprob: -4.325394153594971
    9. '<|end|>' → logprob: -4.325394153594971
    10. ',' → logprob: -4.450394153594971

Token 880: ' la' (ID: 557)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.35175177454948425
    2. ' i' → logprob: -1.4767518043518066
    3. '0' → logprob: -2.8517518043518066
    4. ' range' → logprob: -5.476751804351807
    5. 'range' → logprob: -6.101751804351807
    6. ' ' → logprob: -6.476751804351807
    7. ')' → logprob: -6.726751804351807
    8. ' the' → logprob: -8.601751327514648
    9. ' )' → logprob: -8.726751327514648
    10. '>' → logprob: -8.726751327514648

Token 881: ' borne' (ID: 111819)
  Prédit: 'stop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stop' → logprob: -1.272076964378357
    2. ' stop' → logprob: -1.522076964378357
    3. 'range' → logprob: -1.647076964378357
    4. ' range' → logprob: -1.647076964378357
    5. ')' → logprob: -3.5220770835876465
    6. ' step' → logprob: -3.7720770835876465
    7. '0' → logprob: -4.7720770835876465
    8. ':' → logprob: -5.1470770835876465
    9. 'condition' → logprob: -5.5220770835876465
    10. 'step' → logprob: -5.5220770835876465

Token 882: ' inf' (ID: 5603)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.30695703625679016
    2. 'inclusive' → logprob: -2.5569570064544678
    3. ' =' → logprob: -3.0569570064544678
    4. ')' → logprob: -3.3069570064544678
    5. 'ex' → logprob: -4.056957244873047
    6. 'exclusive' → logprob: -4.306957244873047
    7. ' is' → logprob: -4.431957244873047
    8. ' inclus' → logprob: -4.556957244873047
    9. ' inf' → logprob: -4.556957244873047
    10. 'excluded' → logprob: -4.806957244873047

Token 883: 'érieure' (ID: 45836)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.025885097682476044
    2. '=' → logprob: -4.275885105133057
    3. 't' → logprob: -6.400885105133057
    4. 'y' → logprob: -7.150885105133057
    5. 'u' → logprob: -7.275885105133057
    6. 'ut' → logprob: -7.525885105133057
    7. '=None' → logprob: -7.525885105133057
    8. 'def' → logprob: -7.900885105133057
    9. ' :' → logprob: -7.900885105133057
    10. '+' → logprob: -8.025884628295898

Token 884: ' ' (ID: 220)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.7151915431022644
    2. '=' → logprob: -0.9651915431022644
    3. ',' → logprob: -3.215191602706909
    4. ')' → logprob: -3.215191602706909
    5. 'is' → logprob: -4.46519136428833
    6. '-' → logprob: -4.46519136428833
    7. '=-' → logprob: -4.71519136428833
    8. ' =' → logprob: -5.84019136428833
    9. '<|end|>' → logprob: -5.96519136428833
    10. ' -' → logprob: -5.96519136428833

Token 885: '0' (ID: 15)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3461731970310211
    2. '<|end|>' → logprob: -2.0961732864379883
    3. 'is' → logprob: -2.3461732864379883
    4. ' is' → logprob: -3.2211732864379883
    5. ')' → logprob: -4.346173286437988
    6. '=None' → logprob: -4.971173286437988
    7. '=-' → logprob: -6.096173286437988
    8. ':' → logprob: -6.096173286437988
    9. 'inclusive' → logprob: -6.096173286437988
    10. '0' → logprob: -7.221173286437988

Token 886: ' n' (ID: 297)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.41234666109085083
    2. ' is' → logprob: -2.287346601486206
    3. ' est' → logprob: -2.787346601486206
    4. ',' → logprob: -2.787346601486206
    5. 'n' → logprob: -3.037346601486206
    6. ' n' → logprob: -3.662346601486206
    7. '<|end|>' → logprob: -3.912346601486206
    8. 'est' → logprob: -5.287346839904785
    9. '+' → logprob: -5.787346839904785
    10. 'is' → logprob: -6.287346839904785

Token 887: ''est' (ID: 6616)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6790490746498108
    2. '<|end|>' → logprob: -0.9290490746498108
    3. ' is' → logprob: -2.929049015045166
    4. 'n' → logprob: -5.054049015045166
    5. 's' → logprob: -5.679049015045166
    6. ',' → logprob: -5.679049015045166
    7. ' est' → logprob: -5.804049015045166
    8. '+' → logprob: -5.804049015045166
    9. '=' → logprob: -5.929049015045166
    10. ':' → logprob: -6.054049015045166

Token 888: ' pas' (ID: 2173)
  Prédit: 'included'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'included' → logprob: -0.6212176084518433
    2. 'excluded' → logprob: -1.6212176084518433
    3. 'inclusive' → logprob: -1.8712176084518433
    4. ')' → logprob: -4.246217727661133
    5. 'ex' → logprob: -4.371217727661133
    6. '>' → logprob: -4.371217727661133
    7. '<|end|>' → logprob: -4.496217727661133
    8. 'exclusive' → logprob: -4.621217727661133
    9. 'not' → logprob: -4.996217727661133
    10. 'in' → logprob: -4.996217727661133

Token 889: ' incl' (ID: 11368)
  Prédit: 'included'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'included' → logprob: -0.6975553631782532
    2. ')' → logprob: -1.5725553035736084
    3. 'inclusive' → logprob: -2.3225553035736084
    4. 'in' → logprob: -2.4475553035736084
    5. '>' → logprob: -3.0725553035736084
    6. 'ex' → logprob: -4.0725555419921875
    7. 'incl' → logprob: -4.4475555419921875
    8. '<|end|>' → logprob: -4.4475555419921875
    9. 'atte' → logprob: -5.5725555419921875
    10. ' inclus' → logprob: -6.0725555419921875

Token 890: 'use' (ID: 1821)
  Prédit: 'use'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.42612171173095703
    2. 'ue' → logprob: -1.301121711730957
    3. 'ude' → logprob: -3.051121711730957
    4. 'u' → logprob: -4.301121711730957
    5. 'e' → logprob: -5.801121711730957
    6. 'usive' → logprob: -5.926121711730957
    7. 'due' → logprob: -6.176121711730957
    8. 'ée' → logprob: -6.801121711730957
    9. 'us' → logprob: -7.176121711730957
    10. 'uded' → logprob: -7.176121711730957

Token 891: ').
' (ID: 6294)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.016425875946879387
    2. '):
' → logprob: -4.516426086425781
    3. ':' → logprob: -5.516426086425781
    4. ')' → logprob: -7.391426086425781
    5. '   ' → logprob: -7.766426086425781
    6. ' ):' → logprob: -8.516426086425781
    7. ',' → logprob: -10.016426086425781
    8. ' :' → logprob: -11.266426086425781
    9. ' ):
' → logprob: -11.516426086425781
    10. '       ' → logprob: -11.516426086425781

Token 892: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44780445098876953
    2. '   ' → logprob: -1.0728044509887695
    3. ':' → logprob: -4.8228044509887695
    4. '<|end|>' → logprob: -5.8228044509887695
    5. '        
' → logprob: -6.1978044509887695
    6. '    ' → logprob: -6.3228044509887695
    7. '    
' → logprob: -6.8228044509887695
    8. ' ' → logprob: -7.3228044509887695
    9. ' 
' → logprob: -8.19780445098877
    10. ':
' → logprob: -8.32280445098877

Token 893: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027241090312600136
    2. '       ' → logprob: -4.152241230010986
    3. '    ' → logprob: -5.527241230010986
    4. ' if' → logprob: -6.152241230010986
    5. '    
' → logprob: -6.527241230010986
    6. ':' → logprob: -7.277241230010986
    7. ' ' → logprob: -7.402241230010986
    8. ' 
' → logprob: -7.402241230010986
    9. 'if' → logprob: -8.027240753173828
    10. '     
' → logprob: -8.027240753173828

Token 894: ' À' (ID: 27643)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7957038283348083
    2. ' if' → logprob: -1.5457038879394531
    3. '   ' → logprob: -1.6707038879394531
    4. 'while' → logprob: -2.420703887939453
    5. ' while' → logprob: -2.920703887939453
    6. '    ' → logprob: -6.045703887939453
    7. 'h' → logprob: -8.045703887939453
    8. 'H' → logprob: -8.170703887939453
    9. '	if' → logprob: -8.170703887939453
    10. '	while' → logprob: -8.795703887939453

Token 895: ' chaque' (ID: 21194)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.7096153497695923
    2. '   ' → logprob: -1.8346153497695923
    3. ':' → logprob: -2.0846152305603027
    4. ' :' → logprob: -2.3346152305603027
    5. ' range' → logprob: -3.8346152305603027
    6. ' i' → logprob: -4.084615230560303
    7. ' ' → logprob: -4.209615230560303
    8. 'i' → logprob: -4.334615230560303
    9. 'H' → logprob: -4.584615230560303
    10. '):' → logprob: -4.709615230560303

Token 896: ' it' (ID: 480)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7736584544181824
    2. 'i' → logprob: -1.2736585140228271
    3. '   ' → logprob: -2.148658514022827
    4. ':' → logprob: -2.773658514022827
    5. ' i' → logprob: -3.398658514022827
    6. '  ' → logprob: -4.648658275604248
    7. '    ' → logprob: -5.398658275604248
    8. '_' → logprob: -5.773658275604248
    9. ')' → logprob: -5.773658275604248
    10. ' :' → logprob: -5.773658275604248

Token 897: 'ération' (ID: 24977)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.7963734865188599
    2. 'ération' → logprob: -1.1713734865188599
    3. 'é' → logprob: -2.0463733673095703
    4. 'érateur' → logprob: -3.5463733673095703
    5. 'e' → logprob: -4.29637336730957
    6. 'érieur' → logprob: -4.54637336730957
    7. 'éré' → logprob: -4.54637336730957
    8. '   ' → logprob: -5.17137336730957
    9. 'érêt' → logprob: -5.29637336730957
    10. 'ab' → logprob: -5.42137336730957

Token 898: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24045349657535553
    2. ' :' → logprob: -1.6154534816741943
    3. '   ' → logprob: -5.240453720092773
    4. ',' → logprob: -5.365453720092773
    5. ':
' → logprob: -6.490453720092773
    6. '[' → logprob: -6.865453720092773
    7. ' :
' → logprob: -6.865453720092773
    8. ' ,' → logprob: -7.740453720092773
    9. '{' → logprob: -7.990453720092773
    10. ' ' → logprob: -8.615453720092773

Token 899: ' i' (ID: 575)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5689201951026917
    2. ' ' → logprob: -1.8189201354980469
    3. '   ' → logprob: -2.068920135498047
    4. '    ' → logprob: -2.943920135498047
    5. ' i' → logprob: -3.818920135498047
    6. 'if' → logprob: -4.443920135498047
    7. ' 
' → logprob: -4.443920135498047
    8. '     
' → logprob: -4.443920135498047
    9. ':' → logprob: -4.818920135498047
    10. ' :' → logprob: -5.443920135498047

Token 900: ' représente' (ID: 88912)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.39821261167526245
    2. '-=' → logprob: -1.6482126712799072
    3. '-' → logprob: -2.1482126712799072
    4. ')' → logprob: -5.148212432861328
    5. '=' → logprob: -5.898212432861328
    6. ' ' → logprob: -5.898212432861328
    7. ' -' → logprob: -6.023212432861328
    8. '   ' → logprob: -6.773212432861328
    9. ',' → logprob: -6.898212432861328
    10. '.' → logprob: -7.398212432861328

Token 901: ' l' (ID: 305)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.14321908354759216
    2. ' i' → logprob: -2.018218994140625
    3. 'the' → logprob: -8.143218994140625
    4. ' the' → logprob: -9.143218994140625
    5. ' la' → logprob: -10.393218994140625
    6. '	i' → logprob: -10.768218994140625
    7. ' ' → logprob: -11.018218994140625
    8. '    ' → logprob: -11.268218994140625
    9. ' ' → logprob: -11.268218994140625
    10. '<|end|>' → logprob: -11.393218994140625

Token 902: ''ind' (ID: 82245)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3343527317047119
    2. ' i' → logprob: -1.834352731704712
    3. 'n' → logprob: -2.834352731704712
    4. '<|end|>' → logprob: -4.084352493286133
    5. 'space' → logprob: -5.209352493286133
    6. ')' → logprob: -5.334352493286133
    7. 'e' → logprob: -5.334352493286133
    8. '	i' → logprob: -5.709352493286133
    9. '=i' → logprob: -6.084352493286133
    10. '<|end|>' → logprob: -6.209352493286133

Token 903: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.04270465299487114
    2. 'ex' → logprob: -3.4177045822143555
    3. 'e' → logprob: -4.7927045822143555
    4. 'é' → logprob: -7.4177045822143555
    5. 'exe' → logprob: -10.167704582214355
    6. 'i' → logprob: -10.792704582214355
    7. 'ique' → logprob: -11.667704582214355
    8. 'èce' → logprob: -11.792704582214355
    9. 'ece' → logprob: -11.917704582214355
    10. 'ices' → logprob: -11.917704582214355

Token 904: ' courant' (ID: 74694)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 905: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11413511633872986
    2. ':' → logprob: -2.6141350269317627
    3. '=' → logprob: -4.739135265350342
    4. '-' → logprob: -5.114135265350342
    5. '    ' → logprob: -5.364135265350342
    6. '<|end|>' → logprob: -5.739135265350342
    7. ',' → logprob: -6.489135265350342
    8. ' =' → logprob: -6.489135265350342
    9. ' :' → logprob: -6.614135265350342
    10. '       ' → logprob: -6.739135265350342

Token 906: ' la' (ID: 557)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.08559110015630722
    2. 'range' → logprob: -2.5855910778045654
    3. ' H' → logprob: -5.7105913162231445
    4. ' range' → logprob: -6.4605913162231445
    5. ')' → logprob: -6.9605913162231445
    6. 'the' → logprob: -8.460591316223145
    7. 'la' → logprob: -8.460591316223145
    8. ' la' → logprob: -8.710591316223145
    9. 'i' → logprob: -9.710591316223145
    10. '   ' → logprob: -10.460591316223145

Token 907: ' liste' (ID: 31719)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5992135405540466
    2. 'range' → logprob: -0.8492135405540466
    3. ' H' → logprob: -4.474213600158691
    4. 'H' → logprob: -4.849213600158691
    5. ')' → logprob: -7.224213600158691
    6. ' for' → logprob: -7.349213600158691
    7. 'for' → logprob: -7.474213600158691
    8. 'liste' → logprob: -7.599213600158691
    9. ' code' → logprob: -7.974213600158691
    10. ' sequence' → logprob: -8.599213600158691

Token 908: ' H' (ID: 487)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8204798698425293
    2. ' :' → logprob: -0.8204798698425293
    3. '   ' → logprob: -2.6954798698425293
    4. '):' → logprob: -4.445479869842529
    5. ')' → logprob: -4.945479869842529
    6. ':
' → logprob: -5.070479869842529
    7. ' :
' → logprob: -5.070479869842529
    8. '-' → logprob: -5.570479869842529
    9. '    ' → logprob: -6.070479869842529
    10. ',' → logprob: -6.445479869842529

Token 909: '.' (ID: 13)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008108478039503098
    2. ':
' → logprob: -5.758108615875244
    3. '   ' → logprob: -5.883108615875244
    4. ' :' → logprob: -7.258108615875244
    5. '):' → logprob: -7.508108615875244
    6. ')' → logprob: -8.133108139038086
    7. ',' → logprob: -8.383108139038086
    8. '.' → logprob: -9.383108139038086
    9. '[' → logprob: -9.758108139038086
    10. ' :
' → logprob: -10.258108139038086

Token 910: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4234239459037781
    2. ':' → logprob: -2.298424005508423
    3. ' 
' → logprob: -2.298424005508423
    4. '       ' → logprob: -3.298424005508423
    5. ' ' → logprob: -3.673424005508423
    6. '    
' → logprob: -3.923424005508423
    7. '   
' → logprob: -4.173423767089844
    8. '  
' → logprob: -5.048423767089844
    9. '    ' → logprob: -5.423423767089844
    10. '     
' → logprob: -5.423423767089844

Token 911: ' traite' (ID: 180696)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.382490873336792
    2. ' -=' → logprob: -1.382490873336792
    3. ':' → logprob: -2.382490873336792
    4. ' +=' → logprob: -2.632490873336792
    5. ' =' → logprob: -2.757490873336792
    6. ' :' → logprob: -3.007490873336792
    7. '[' → logprob: -3.132490873336792
    8. ' ,' → logprob: -3.132490873336792
    9. '   ' → logprob: -3.257490873336792
    10. '=' → logprob: -3.882490873336792

Token 912: ' donc' (ID: 14206)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5730007290840149
    2. ' i' → logprob: -1.3230006694793701
    3. 'i' → logprob: -2.57300066947937
    4. ' ' → logprob: -3.94800066947937
    5. ' =' → logprob: -4.573000907897949
    6. '   ' → logprob: -4.698000907897949
    7. ' :' → logprob: -4.823000907897949
    8. '    ' → logprob: -4.948000907897949
    9. ' H' → logprob: -4.948000907897949
    10. ':' → logprob: -5.323000907897949

Token 913: ' la' (ID: 557)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.43007856607437134
    2. 'H' → logprob: -1.5550785064697266
    3. ' i' → logprob: -2.6800785064697266
    4. ' H' → logprob: -3.4300785064697266
    5. ' la' → logprob: -4.180078506469727
    6. 'l' → logprob: -4.680078506469727
    7. '   ' → logprob: -5.930078506469727
    8. ' ' → logprob: -6.180078506469727
    9. ' the' → logprob: -6.180078506469727
    10. ' l' → logprob: -6.805078506469727

Token 914: ' liste' (ID: 31719)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.540515661239624
    2. 'i' → logprob: -1.915515661239624
    3. ' ' → logprob: -1.915515661239624
    4. '[i' → logprob: -3.040515661239624
    5. '[' → logprob: -3.540515661239624
    6. ' H' → logprob: -3.665515661239624
    7. ' [' → logprob: -5.040515899658203
    8. ' current' → logprob: -6.040515899658203
    9. ' space' → logprob: -6.040515899658203
    10. ')' → logprob: -6.790515899658203

Token 915: ' du' (ID: 1462)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.011402525007724762
    2. '[' → logprob: -4.636402606964111
    3. ' i' → logprob: -7.511402606964111
    4. ' [' → logprob: -7.886402606964111
    5. ' à' → logprob: -8.886402130126953
    6. '   ' → logprob: -9.136402130126953
    7. ' en' → logprob: -9.511402130126953
    8. ',' → logprob: -9.511402130126953
    9. 'i' → logprob: -9.886402130126953
    10. 's' → logprob: -10.011402130126953

Token 916: ' dernier' (ID: 27982)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.303188294172287
    2. ' i' → logprob: -1.5531883239746094
    3. ' second' → logprob: -4.928188323974609
    4. ' ' → logprob: -5.053188323974609
    5. 's' → logprob: -5.428188323974609
    6. ' H' → logprob: -5.678188323974609
    7. ' end' → logprob: -5.803188323974609
    8. ' N' → logprob: -6.303188323974609
    9. ' dernier' → logprob: -6.303188323974609
    10. ' )' → logprob: -6.365688323974609

Token 917: ' élément' (ID: 99627)
  Prédit: ' token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' token' → logprob: -1.030735731124878
    2. 'token' → logprob: -1.780735731124878
    3. ' ' → logprob: -1.780735731124878
    4. ' i' → logprob: -2.280735731124878
    5. 'i' → logprob: -2.780735731124878
    6. '-' → logprob: -3.155735731124878
    7. ')' → logprob: -3.780735731124878
    8. ']' → logprob: -4.280735969543457
    9. ' -' → logprob: -4.280735969543457
    10. 'indice' → logprob: -5.405735969543457

Token 918: ' vers' (ID: 3640)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.9274921417236328
    2. ' -' → logprob: -1.3024921417236328
    3. ' au' → logprob: -1.8024921417236328
    4. ' à' → logprob: -2.802492141723633
    5. 's' → logprob: -3.802492141723633
    6. 'au' → logprob: -4.052492141723633
    7. '   ' → logprob: -4.052492141723633
    8. ' ' → logprob: -4.302492141723633
    9. ',' → logprob: -4.927492141723633
    10. ')' → logprob: -5.427492141723633

Token 919: ' le' (ID: 505)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.44100821018218994
    2. '1' → logprob: -1.44100821018219
    3. 'le' → logprob: -2.6910080909729004
    4. 'i' → logprob: -3.1910080909729004
    5. '0' → logprob: -4.9410080909729
    6. 'la' → logprob: -6.1910080909729
    7. 'un' → logprob: -7.9410080909729
    8. '   ' → logprob: -8.066008567810059
    9. ' l' → logprob: -8.316008567810059
    10. ' i' → logprob: -8.316008567810059

Token 920: ' premier' (ID: 15506)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004410178866237402
    2. 'prem' → logprob: -6.129410266876221
    3. 'i' → logprob: -6.754410266876221
    4. '0' → logprob: -7.504410266876221
    5. '```' → logprob: -8.879409790039062
    6. ' ' → logprob: -8.879409790039062
    7. ' i' → logprob: -10.004409790039062
    8. 'dern' → logprob: -10.379409790039062
    9. ' premier' → logprob: -10.629409790039062
    10. '<|end|>' → logprob: -11.004409790039062

Token 921: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05921807512640953
    2. '   ' → logprob: -3.059218168258667
    3. '):' → logprob: -5.309217929840088
    4. ' :' → logprob: -6.059217929840088
    5. ':
' → logprob: -6.309217929840088
    6. '       ' → logprob: -7.684217929840088
    7. ')' → logprob: -8.059218406677246
    8. ',' → logprob: -8.184218406677246
    9. '<|end|>' → logprob: -9.309218406677246
    10. '.' → logprob: -9.434218406677246

Token 922: '        
' (ID: 3564)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46338024735450745
    2. ' ' → logprob: -2.4633803367614746
    3. '       ' → logprob: -2.4633803367614746
    4. ' 
' → logprob: -2.7133803367614746
    5. ':' → logprob: -2.9633803367614746
    6. '    
' → logprob: -4.088380336761475
    7. '    ' → logprob: -4.463380336761475
    8. '<|end|>' → logprob: -4.838380336761475
    9. '     
' → logprob: -4.838380336761475
    10. ' :' → logprob: -5.213380336761475

Token 923: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01817510649561882
    2. '       ' → logprob: -4.14317512512207
    3. '    
' → logprob: -6.89317512512207
    4. '    ' → logprob: -7.39317512512207
    5. ' 
' → logprob: -9.14317512512207
    6. '        
' → logprob: -9.39317512512207
    7. ':' → logprob: -9.39317512512207
    8. ' if' → logprob: -9.76817512512207
    9. '     
' → logprob: -10.26817512512207
    10. 'if' → logprob: -10.89317512512207

Token 924: ' if' (ID: 538)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.18746048212051392
    2. 'if' (adapté à ' if') → logprob: -1.8124604225158691
    3. '   ' → logprob: -5.562460422515869
    4. 'diff' → logprob: -5.812460422515869
    5. ' while' → logprob: -8.062460899353027
    6. 'off' → logprob: -8.562460899353027
    7. 'd' → logprob: -8.937460899353027
    8. 'h' → logprob: -9.562460899353027
    9. ' if' → logprob: -10.187460899353027
    10. 'H' → logprob: -10.687460899353027

Token 925: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.002412873087450862
    2. ' H' → logprob: -6.502412796020508
    3. '(H' → logprob: -7.877412796020508
    4. 'off' → logprob: -8.252412796020508
    5. 'i' → logprob: -8.877412796020508
    6. '   ' → logprob: -9.752412796020508
    7. ' off' → logprob: -11.127412796020508
    8. '(off' → logprob: -11.252412796020508
    9. 'not' → logprob: -11.502412796020508
    10. '	H' → logprob: -11.752412796020508

Token 926: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00015872348740231246
    2. '[' → logprob: -8.750158309936523
    3. ' [' → logprob: -15.375158309936523
    4. '[I' → logprob: -16.875158309936523
    5. '[j' → logprob: -17.000158309936523
    6. '```' → logprob: -17.250158309936523
    7. 'i' → logprob: -18.875158309936523
    8. '   ' → logprob: -19.375158309936523
    9. '[
' → logprob: -19.500158309936523
    10. ')' → logprob: -19.500158309936523

Token 927: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12367529422044754
    2. '<' → logprob: -3.1236753463745117
    3. ']<' → logprob: -3.1236753463745117
    4. ']>=' → logprob: -4.748675346374512
    5. '[' → logprob: -5.373675346374512
    6. ']>' → logprob: -5.623675346374512
    7. '>' → logprob: -5.623675346374512
    8. ']<=' → logprob: -5.873675346374512
    9. ']+' → logprob: -6.873675346374512
    10. '-' → logprob: -7.123675346374512

Token 928: ' -' (ID: 533)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.012064074166119099
    2. ' <' → logprob: -4.637063980102539
    3. '<=' → logprob: -6.887063980102539
    4. '>' → logprob: -7.637063980102539
    5. '>=' → logprob: -7.637063980102539
    6. '+' → logprob: -9.887063980102539
    7. ' <=' → logprob: -10.012063980102539
    8. '<H' → logprob: -10.137063980102539
    9. '<int' → logprob: -10.387063980102539
    10. '-' → logprob: -10.887063980102539

Token 929: ' off' (ID: 1277)
  Prédit: 'off'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'off' → logprob: -0.19654951989650726
    2. 'H' → logprob: -2.821549415588379
    3. '(off' → logprob: -2.946549415588379
    4. '1' → logprob: -3.321549415588379
    5. '(H' → logprob: -4.321549415588379
    6. '(' → logprob: -5.071549415588379
    7. '(i' → logprob: -5.071549415588379
    8. 'i' → logprob: -5.696549415588379
    9. ' off' → logprob: -7.446549415588379
    10. ' (' → logprob: -8.821549415588379

Token 930: ' >=' (ID: 5064)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6027294993400574
    2. ' >' → logprob: -1.6027295589447021
    3. '<' → logprob: -2.727729558944702
    4. '>=' → logprob: -2.852729558944702
    5. ' <=' → logprob: -3.102729558944702
    6. '<=' → logprob: -3.227729558944702
    7. ' >=' → logprob: -3.727729558944702
    8. ' <' → logprob: -3.977729558944702
    9. '==' → logprob: -7.852729320526123
    10. ' ==' → logprob: -7.852729320526123

Token 931: ' H' (ID: 487)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.623796820640564
    2. 'H' → logprob: -1.373796820640564
    3. '0' → logprob: -1.873796820640564
    4. '2' → logprob: -2.8737969398498535
    5. 'i' → logprob: -7.4987969398498535
    6. ' ' → logprob: -8.998796463012695
    7. '3' → logprob: -9.373796463012695
    8. ' H' → logprob: -9.623796463012695
    9. '   ' → logprob: -11.123796463012695
    10. '(H' → logprob: -11.123796463012695

Token 932: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.020705729722976685
    2. '[' → logprob: -3.8957056999206543
    3. 'i' → logprob: -9.895706176757812
    4. ' [' → logprob: -10.395706176757812
    5. '-' → logprob: -10.895706176757812
    6. '[
' → logprob: -11.020706176757812
    7. '[-' → logprob: -11.520706176757812
    8. '[j' → logprob: -11.895706176757812
    9. '```' → logprob: -11.895706176757812
    10. '\[' → logprob: -12.395706176757812

Token 933: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.43004748225212097
    2. '[i' → logprob: -1.0550475120544434
    3. '[' → logprob: -7.055047512054443
    4. ' -' → logprob: -7.930047512054443
    5. 'i' → logprob: -9.430047035217285
    6. '[
' → logprob: -11.430047035217285
    7. ']' → logprob: -11.680047035217285
    8. '[j' → logprob: -11.805047035217285
    9. '(i' → logprob: -12.930047035217285
    10. '   ' → logprob: -12.930047035217285

Token 934: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.292907877039397e-06
    2. ' ' → logprob: -12.75000286102295
    3. '0' → logprob: -15.62500286102295
    4. '2' → logprob: -17.562503814697266
    5. '```' → logprob: -17.687503814697266
    6. 'i' → logprob: -18.125003814697266
    7. '   ' → logprob: -18.312503814697266
    8. '১' → logprob: -18.750003814697266
    9. '１' → logprob: -18.937503814697266
    10. '۱' → logprob: -19.062503814697266

Token 935: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24320803582668304
    2. '+' → logprob: -2.2432079315185547
    3. ' +' → logprob: -2.9932079315185547
    4. '):' → logprob: -3.6182079315185547
    5. ':
' → logprob: -3.8682079315185547
    6. ' :' → logprob: -5.493207931518555
    7. '):
' → logprob: -5.993207931518555
    8. ')' → logprob: -6.618207931518555
    9. ' -' → logprob: -6.993207931518555
    10. '-' → logprob: -7.243207931518555

Token 936: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09109687060117722
    2. '           ' → logprob: -3.216096878051758
    3. 'off' → logprob: -3.216096878051758
    4. ' off' → logprob: -5.966096878051758
    5. '   ' → logprob: -6.216096878051758
    6. ':' → logprob: -6.841096878051758
    7. '	       ' → logprob: -8.216096878051758
    8. '	   ' → logprob: -8.341096878051758
    9. '               ' → logprob: -8.966096878051758
    10. '	' → logprob: -8.966096878051758

Token 937: ' #' (ID: 1069)
  Prédit: 'off'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'off' → logprob: -0.02070596069097519
    2. '           ' → logprob: -3.8957059383392334
    3. ' off' → logprob: -9.770706176757812
    4. 'H' → logprob: -10.145706176757812
    5. '   ' → logprob: -10.145706176757812
    6. '       ' → logprob: -11.770706176757812
    7. 'offs' → logprob: -11.770706176757812
    8. 'continue' → logprob: -12.145706176757812
    9. 'Off' → logprob: -13.520706176757812
    10. 'offset' → logprob: -14.020706176757812

Token 938: ' Test' (ID: 4674)
  Prédit: 'off'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'off' → logprob: -0.003693658858537674
    2. 'continue' → logprob: -6.003693580627441
    3. '   ' → logprob: -7.128693580627441
    4. 'pass' → logprob: -8.378693580627441
    5. ' off' → logprob: -9.753693580627441
    6. 'H' → logprob: -9.878693580627441
    7. '       ' → logprob: -10.378693580627441
    8. '           ' → logprob: -11.628693580627441
    9. 'print' → logprob: -12.128693580627441
    10. 'offs' → logprob: -12.128693580627441

Token 939: 'e' (ID: 68)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06799974292516708
    2. ' :' → logprob: -3.442999839782715
    3. '\n' → logprob: -4.692999839782715
    4. '       ' → logprob: -4.817999839782715
    5. ':
' → logprob: -5.067999839782715
    6. '   ' → logprob: -6.192999839782715
    7. ' :
' → logprob: -6.567999839782715
    8. ' =' → logprob: -6.692999839782715
    9. '=' → logprob: -7.067999839782715
    10. ' 
' → logprob: -7.942999839782715

Token 940: ' si' (ID: 1784)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8552297949790955
    2. '       ' → logprob: -1.8552298545837402
    3. ' :' → logprob: -1.9802298545837402
    4. '        ' → logprob: -3.1052298545837402
    5. '        
' → logprob: -3.4802298545837402
    6. ' :
' → logprob: -3.6052298545837402
    7. ' =' → logprob: -3.9802298545837402
    8. ' 
' → logprob: -3.9802298545837402
    9. ''' → logprob: -3.9802298545837402
    10. ':' → logprob: -4.10522985458374

Token 941: ' la' (ID: 557)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.4510122239589691
    2. ' H' → logprob: -1.5760122537612915
    3. '1' → logprob: -2.076012134552002
    4. '   ' → logprob: -4.326012134552002
    5. '(H' → logprob: -5.076012134552002
    6. ' ' → logprob: -5.701012134552002
    7. ' (' → logprob: -5.826012134552002
    8. '0' → logprob: -6.201012134552002
    9. '    ' → logprob: -7.326012134552002
    10. '(' → logprob: -7.576012134552002

Token 942: ' hauteur' (ID: 72987)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.02948361076414585
    2. 'off' → logprob: -3.9044835567474365
    3. '1' → logprob: -5.029483795166016
    4. '0' → logprob: -7.279483795166016
    5. 'i' → logprob: -7.779483795166016
    6. '   ' → logprob: -7.779483795166016
    7. ' H' → logprob: -7.779483795166016
    8. ':' → logprob: -9.654483795166016
    9. '(H' → logprob: -9.779483795166016
    10. ')' → logprob: -10.404483795166016

Token 943: ' du' (ID: 1462)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03507327660918236
    2. '[i' → logprob: -4.285073280334473
    3. ' [' → logprob: -4.910073280334473
    4. ' ' → logprob: -5.910073280334473
    5. '>' → logprob: -6.285073280334473
    6. 'H' → logprob: -6.660073280334473
    7. '   ' → logprob: -6.910073280334473
    8. '```' → logprob: -6.910073280334473
    9. ' H' → logprob: -7.035073280334473
    10. ' -' → logprob: -7.410073280334473

Token 944: ' bloc' (ID: 51218)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.016117654740810394
    2. 'i' → logprob: -4.891117572784424
    3. ' H' → logprob: -6.391117572784424
    4. '[' → logprob: -6.641117572784424
    5. '(' → logprob: -7.016117572784424
    6. ' (' → logprob: -7.266117572784424
    7. ''' → logprob: -7.516117572784424
    8. '[i' → logprob: -7.641117572784424
    9. 'élé' → logprob: -7.641117572784424
    10. ']' → logprob: -8.016118049621582

Token 945: ' actuel' (ID: 113646)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9104464054107666
    2. '[i' → logprob: -1.0354464054107666
    3. 'H' → logprob: -2.1604464054107666
    4. ' H' → logprob: -2.9104464054107666
    5. 's' → logprob: -3.5354464054107666
    6. ' [' → logprob: -4.6604461669921875
    7. '`' → logprob: -4.6604461669921875
    8. ' ' → logprob: -5.4104461669921875
    9. '```' → logprob: -5.9104461669921875
    10. ' at' → logprob: -6.1604461669921875

Token 946: ' (' (ID: 350)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.19794128835201263
    2. '[' → logprob: -2.322941303253174
    3. '-' → logprob: -2.947941303253174
    4. ')' → logprob: -4.947941303253174
    5. '>' → logprob: -5.072941303253174
    6. '[i' → logprob: -5.572941303253174
    7. ' ' → logprob: -5.697941303253174
    8. ']' → logprob: -6.572941303253174
    9. '   ' → logprob: -6.697941303253174
    10. ''' → logprob: -6.947941303253174

Token 947: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.10749964416027069
    2. ')' → logprob: -2.982499599456787
    3. ''' → logprob: -4.732499599456787
    4. ' H' → logprob: -4.732499599456787
    5. '`' → logprob: -5.107499599456787
    6. ''H' → logprob: -5.232499599456787
    7. ' (' → logprob: -5.357499599456787
    8. '"' → logprob: -5.482499599456787
    9. '(H' → logprob: -5.732499599456787
    10. ' )' → logprob: -5.732499599456787

Token 948: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.004731534048914909
    2. '[' → logprob: -5.37973165512085
    3. ')' → logprob: -9.629731178283691
    4. '[
' → logprob: -11.254731178283691
    5. '[I' → logprob: -12.129731178283691
    6. ' [' → logprob: -12.254731178283691
    7. '```' → logprob: -12.254731178283691
    8. '[j' → logprob: -12.379731178283691
    9. ')[' → logprob: -12.504731178283691
    10. 'i' → logprob: -13.629731178283691

Token 949: '])' (ID: 4636)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00795604195445776
    2. '])' → logprob: -4.882956027984619
    3. ')' → logprob: -8.757956504821777
    4. ' ]' → logprob: -9.257956504821777
    5. ']-' → logprob: -9.757956504821777
    6. ']
' → logprob: -11.757956504821777
    7. '']' → logprob: -11.882956504821777
    8. '])-' → logprob: -12.132956504821777
    9. '[' → logprob: -12.757956504821777
    10. ' ])' → logprob: -13.382956504821777

Token 950: ' diminu' (ID: 80939)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10464503616094589
    2. '-' → logprob: -2.354645013809204
    3. ')' → logprob: -6.354645252227783
    4. ' ' → logprob: -7.104645252227783
    5. '>' → logprob: -7.729645252227783
    6. ' minus' → logprob: -7.729645252227783
    7. 'minus' → logprob: -8.479644775390625
    8. ',' → logprob: -9.104644775390625
    9. '```' → logprob: -9.354644775390625
    10. '    ' → logprob: -9.604644775390625

Token 951: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.16685514152050018
    2. 'e' → logprob: -3.0418550968170166
    3. 'é' → logprob: -3.0418550968170166
    4. 'ant' → logprob: -3.4168550968170166
    5. 'ee' → logprob: -3.7918550968170166
    6. '-' → logprob: -6.666855335235596
    7. 'ent' → logprob: -7.916855335235596
    8. '#' → logprob: -8.541854858398438
    9. '   ' → logprob: -9.041854858398438
    10. 'ed' → logprob: -9.041854858398438

Token 952: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.31275784969329834
    2. 'de' → logprob: -1.5627578496932983
    3. '<|end|>' → logprob: -3.562757968902588
    4. ' d' → logprob: -4.312757968902588
    5. 'd' → logprob: -4.562757968902588
    6. '1' → logprob: -5.562757968902588
    7. ' du' → logprob: -7.187757968902588
    8. 's' → logprob: -8.06275749206543
    9. '<|end|>' → logprob: -8.18775749206543
    10. ' of' → logprob: -8.31275749206543

Token 953: ' la' (ID: 557)
  Prédit: 'off'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'off' → logprob: -0.06466859579086304
    2. ' off' → logprob: -2.814668655395508
    3. '1' → logprob: -6.689668655395508
    4. 'l' → logprob: -6.689668655395508
    5. ' l' → logprob: -8.689668655395508
    6. 'offset' → logprob: -11.689668655395508
    7. ' ' → logprob: -11.689668655395508
    8. '(off' → logprob: -11.814668655395508
    9. 'offs' → logprob: -12.564668655395508
    10. 'le' → logprob: -12.814668655395508

Token 954: ' valeur' (ID: 41664)
  Prédit: 'off'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'off' → logprob: -0.022785665467381477
    2. ' off' → logprob: -3.8977856636047363
    3. '1' → logprob: -6.147785663604736
    4. 'offset' → logprob: -9.772786140441895
    5. ' ' → logprob: -11.397786140441895
    6. ''off' → logprob: -11.772786140441895
    7. '(off' → logprob: -11.897786140441895
    8. ''' → logprob: -12.022786140441895
    9. 'offs' → logprob: -12.272786140441895
    10. '`' → logprob: -12.897786140441895

Token 955: ' de' (ID: 334)
  Prédit: 'off'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'off' → logprob: -0.3586896061897278
    2. ' off' → logprob: -1.858689546585083
    3. ' d' → logprob: -2.733689546585083
    4. ''' → logprob: -3.233689546585083
    5. 'd' → logprob: -4.608689785003662
    6. ' de' → logprob: -4.608689785003662
    7. 'de' → logprob: -4.858689785003662
    8. ''off' → logprob: -5.358689785003662
    9. '1' → logprob: -5.608689785003662
    10. ' ' → logprob: -6.483689785003662

Token 956: ' off' (ID: 1277)
  Prédit: 'off'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'off' → logprob: -0.042669352144002914
    2. '1' → logprob: -3.2926692962646484
    3. ' off' → logprob: -5.417669296264648
    4. 'offset' → logprob: -9.042669296264648
    5. ' ' → logprob: -10.667669296264648
    6. '```' → logprob: -11.542669296264648
    7. 'l' → logprob: -11.667669296264648
    8. 'offs' → logprob: -12.042669296264648
    9. '`' → logprob: -12.667669296264648
    10. '(off' → logprob: -12.792669296264648

Token 957: ' (' (ID: 350)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.4869309663772583
    2. '>' → logprob: -1.4869309663772583
    3. ' >=' → logprob: -1.9869309663772583
    4. '>=' → logprob: -3.8619308471679688
    5. ' ' → logprob: -7.986930847167969
    6. ')' → logprob: -8.861930847167969
    7. ' <' → logprob: -8.986930847167969
    8. '">' → logprob: -9.111930847167969
    9. ' -' → logprob: -9.486930847167969
    10. '+' → logprob: -9.861930847167969

Token 958: 'cor' (ID: 11111)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2049606591463089
    2. ')' → logprob: -2.579960584640503
    3. ''' → logprob: -3.204960584640503
    4. ' )' → logprob: -3.204960584640503
    5. '+' → logprob: -4.329960823059082
    6. ' ' → logprob: -4.829960823059082
    7. ' +' → logprob: -5.079960823059082
    8. '"' → logprob: -8.079960823059082
    9. ' '' → logprob: -9.204960823059082
    10. '`' → logprob: -9.204960823059082

Token 959: 'rection' (ID: 36365)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.2717861533164978
    2. 'respond' → logprob: -1.8967862129211426
    3. 'rection' → logprob: -2.6467862129211426
    4. 'rec' → logprob: -4.521786212921143
    5. 'r' → logprob: -5.896786212921143
    6. 'res' → logprob: -6.771786212921143
    7. 'resp' → logprob: -7.021786212921143
    8. 're' → logprob: -8.271785736083984
    9. 'rige' → logprob: -8.396785736083984
    10. 'rig' → logprob: -8.771785736083984

Token 960: ' évent' (ID: 80346)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04084985703229904
    2. ' )' → logprob: -3.6658499240875244
    3. '+' → logprob: -5.040849685668945
    4. ' de' → logprob: -6.540849685668945
    5. 'de' → logprob: -6.540849685668945
    6. '   ' → logprob: -6.790849685668945
    7. ' est' → logprob: -7.165849685668945
    8. ' +' → logprob: -7.665849685668945
    9. 's' → logprob: -8.665849685668945
    10. '>' → logprob: -8.665849685668945

Token 961: 'uelle' (ID: 18079)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6771713495254517
    2. ')' → logprob: -0.9271713495254517
    3. '=' → logprob: -3.677171230316162
    4. '```' → logprob: -4.552171230316162
    5. ' de' → logprob: -4.802171230316162
    6. '-' → logprob: -4.927171230316162
    7. 'e' → logprob: -5.177171230316162
    8. '>' → logprob: -5.552171230316162
    9. ' +' → logprob: -5.552171230316162
    10. '   ' → logprob: -5.552171230316162

Token 962: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3569665849208832
    2. ' )' → logprob: -1.2319666147232056
    3. ')>=' → logprob: -6.106966495513916
    4. ')>' → logprob: -6.356966495513916
    5. '>=' → logprob: -6.481966495513916
    6. ' >=' → logprob: -6.856966495513916
    7. '>' → logprob: -6.981966495513916
    8. '+' → logprob: -8.856966972351074
    9. ' >' → logprob: -8.856966972351074
    10. 'de' → logprob: -8.981966972351074

Token 963: ' est' (ID: 893)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026299718767404556
    2. ' :' → logprob: -4.026299953460693
    3. '>' → logprob: -6.151299953460693
    4. ' >=' → logprob: -6.276299953460693
    5. '>=' → logprob: -6.526299953460693
    6. ')' → logprob: -7.026299953460693
    7. '):' → logprob: -7.776299953460693
    8. ':
' → logprob: -8.526299476623535
    9. ' and' → logprob: -8.901299476623535
    10. '   ' → logprob: -8.901299476623535

Token 964: ' supérieure' (ID: 106336)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.39497965574264526
    2. ' >' → logprob: -1.14497971534729
    3. '>=' → logprob: -5.144979476928711
    4. ' >=' → logprob: -6.269979476928711
    5. ' strictly' → logprob: -9.519979476928711
    6. 'strict' → logprob: -9.519979476928711
    7. '<' → logprob: -10.269979476928711
    8. '">' → logprob: -10.394979476928711
    9. ')' → logprob: -10.644979476928711
    10. '<=' → logprob: -11.019979476928711

Token 965: ' ou' (ID: 2031)
  Prédit: ' ou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ou' → logprob: -0.6111100316047668
    2. ' or' → logprob: -0.8611100316047668
    3. '<|end|>' → logprob: -4.861110210418701
    4. 'ou' → logprob: -5.361110210418701
    5. '=' → logprob: -5.736110210418701
    6. ')' → logprob: -5.861110210418701
    7. '+' → logprob: -5.861110210418701
    8. ':' → logprob: -5.986110210418701
    9. 'or' → logprob: -6.611110210418701
    10. '           ' → logprob: -6.611110210418701

Token 966: ' ég' (ID: 33150)
  Prédit: 'eg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eg' → logprob: -0.6108803749084473
    2. 'ég' → logprob: -0.9858803749084473
    3. 'égal' → logprob: -3.3608803749084473
    4. ' ég' → logprob: -3.6108803749084473
    5. ' eg' → logprob: -4.860880374908447
    6. '#' → logprob: -5.235880374908447
    7. 'strict' → logprob: -5.735880374908447
    8. '=' → logprob: -6.235880374908447
    9. 'Eg' → logprob: -6.860880374908447
    10. 'ug' → logprob: -6.860880374908447

Token 967: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.0024962294846773148
    2. 'al' → logprob: -6.252496242523193
    3. '=' → logprob: -9.252495765686035
    4. 'uale' → logprob: -9.252495765686035
    5. '>' → logprob: -10.002495765686035
    6. '`' → logprob: -10.252495765686035
    7. 'alee' → logprob: -10.502495765686035
    8. '{' → logprob: -10.877495765686035
    9. 'a' → logprob: -10.877495765686035
    10. '}' → logprob: -10.877495765686035

Token 968: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.19278328120708466
    2. 'à' → logprob: -2.0677833557128906
    3. ')' → logprob: -4.567783355712891
    4. '           ' → logprob: -5.067783355712891
    5. '    ' → logprob: -5.442783355712891
    6. '1' → logprob: -5.442783355712891
    7. 'au' → logprob: -5.942783355712891
    8. '<|end|>' → logprob: -6.317783355712891
    9. ' )' → logprob: -6.567783355712891
    10. ' (' → logprob: -6.567783355712891

Token 969: ' la' (ID: 557)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.11291271448135376
    2. ' H' → logprob: -2.237912654876709
    3. '`' → logprob: -10.737913131713867
    4. ' ' → logprob: -11.362913131713867
    5. '1' → logprob: -11.737913131713867
    6. '0' → logprob: -11.737913131713867
    7. ' la' → logprob: -11.862913131713867
    8. '```' → logprob: -11.862913131713867
    9. 'la' → logprob: -12.237913131713867
    10. ' ' → logprob: -12.612913131713867

Token 970: ' hauteur' (ID: 72987)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.28341904282569885
    2. ' H' → logprob: -1.7834190130233765
    3. ''' → logprob: -3.408419132232666
    4. ' ' → logprob: -4.158419132232666
    5. 'H' → logprob: -4.783419132232666
    6. '"' → logprob: -5.158419132232666
    7. 'space' → logprob: -5.908419132232666
    8. '`' → logprob: -6.158419132232666
    9. ' '' → logprob: -6.283419132232666
    10. ' ' → logprob: -6.658419132232666

Token 971: ' du' (ID: 1462)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.359755516052246
    2. 'de' → logprob: -1.609755516052246
    3. '(i' → logprob: -2.359755516052246
    4. '[' → logprob: -2.484755516052246
    5. '   ' → logprob: -2.734755516052246
    6. '(' → logprob: -3.359755516052246
    7. '       ' → logprob: -3.484755516052246
    8. ' of' → logprob: -3.609755516052246
    9. 's' → logprob: -3.734755516052246
    10. ' de' → logprob: -3.859755516052246

Token 972: ' bloc' (ID: 51218)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8580209612846375
    2. 'H' → logprob: -0.9830209612846375
    3. ' H' → logprob: -1.9830210208892822
    4. ' ' → logprob: -3.6080210208892822
    5. '`' → logprob: -4.733020782470703
    6. '"' → logprob: -4.983020782470703
    7. ' '' → logprob: -5.608020782470703
    8. '```' → logprob: -5.733020782470703
    9. ' ' → logprob: -5.983020782470703
    10. 'es' → logprob: -6.233020782470703

Token 973: ' précédent' (ID: 128462)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.6448560357093811
    2. 'su' → logprob: -1.6448559761047363
    3. '[i' → logprob: -1.6448559761047363
    4. 'i' → logprob: -3.5198559761047363
    5. ' précédent' → logprob: -3.8948559761047363
    6. 'preced' → logprob: -4.144855976104736
    7. 'H' → logprob: -4.894855976104736
    8. '   ' → logprob: -4.894855976104736
    9. '[' → logprob: -6.144855976104736
    10. ' H' → logprob: -6.644855976104736

Token 974: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04094346985220909
    2. ' :' → logprob: -3.4159433841705322
    3. '):' → logprob: -6.040943622589111
    4. '       ' → logprob: -7.165943622589111
    5. ')' → logprob: -7.165943622589111
    6. '.' → logprob: -7.415943622589111
    7. '           ' → logprob: -7.415943622589111
    8. ' and' → logprob: -7.790943622589111
    9. ' or' → logprob: -7.915943622589111
    10. ',' → logprob: -7.915943622589111

Token 975: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -6.742448022123426e-05
    2. ' H' → logprob: -9.625067710876465
    3. '`' → logprob: -14.375067710876465
    4. '```' → logprob: -15.375067710876465
    5. '           ' → logprob: -16.00006675720215
    6. ')' → logprob: -16.00006675720215
    7. '   ' → logprob: -16.12506675720215
    8. 'i' → logprob: -16.62506675720215
    9. ''H' → logprob: -17.50006675720215
    10. '       ' → logprob: -17.75006675720215

Token 976: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.47757811343763e-05
    2. '[' → logprob: -10.375044822692871
    3. '```' → logprob: -12.000044822692871
    4. '-' → logprob: -12.500044822692871
    5. ' [' → logprob: -13.750044822692871
    6. 'i' → logprob: -14.125044822692871
    7. '   ' → logprob: -14.375044822692871
    8. '[-' → logprob: -14.625044822692871
    9. ')' → logprob: -15.500044822692871
    10. '
' → logprob: -15.625044822692871

Token 977: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.006095400545746088
    2. '[i' → logprob: -5.1310954093933105
    3. ' -' → logprob: -9.506094932556152
    4. 'i' → logprob: -10.131094932556152
    5. '   ' → logprob: -11.256094932556152
    6. '[' → logprob: -11.381094932556152
    7. '```' → logprob: -11.506094932556152
    8. '])' → logprob: -11.756094932556152
    9. '1' → logprob: -12.881094932556152
    10. '[-' → logprob: -13.006094932556152

Token 978: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2113979209971149e-05
    2. ' ' → logprob: -11.875012397766113
    3. '```' → logprob: -13.125012397766113
    4. '2' → logprob: -13.500012397766113
    5. '   ' → logprob: -14.125012397766113
    6. '-' → logprob: -14.625012397766113
    7. 'i' → logprob: -16.375011444091797
    8. '0' → logprob: -16.750011444091797
    9. ']' → logprob: -16.875011444091797
    10. '<|end|>' → logprob: -17.375011444091797

Token 979: ']).
' (ID: 135644)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11273092776536942
    2. '):
' → logprob: -2.3627309799194336
    3. ')' → logprob: -4.862730979919434
    4. '       ' → logprob: -5.612730979919434
    5. '):
' → logprob: -7.612730979919434
    6. ':' → logprob: -8.612730979919434
    7. '   ' → logprob: -9.362730979919434
    8. ' ):' → logprob: -9.487730979919434
    9. '+' → logprob: -10.237730979919434
    10. '           ' → logprob: -10.237730979919434

Token 980: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017607787624001503
    2. '       ' → logprob: -5.142607688903809
    3. '               ' → logprob: -5.517607688903809
    4. '\n' → logprob: -5.642607688903809
    5. ' continue' → logprob: -6.892607688903809
    6. 'continue' → logprob: -7.142607688903809
    7. ' ' → logprob: -7.267607688903809
    8. '		' → logprob: -7.892607688903809
    9. '\t' → logprob: -8.392607688903809
    10. ' \' → logprob: -8.517607688903809

Token 981: ' #' (ID: 1069)
  Prédit: 'off'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'off' → logprob: -0.25022071599960327
    2. '   ' → logprob: -1.625220775604248
    3. '       ' → logprob: -4.125220775604248
    4. ' off' → logprob: -5.375220775604248
    5. 'continue' → logprob: -6.000220775604248
    6. '           ' → logprob: -8.25022029876709
    7. 'i' → logprob: -8.75022029876709
    8. ':' → logprob: -8.87522029876709
    9. 'if' → logprob: -9.25022029876709
    10. '```' → logprob: -9.25022029876709

Token 982: ' Si' (ID: 7832)
  Prédit: 'off'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'off' → logprob: -0.016143105924129486
    2. '   ' → logprob: -4.266143321990967
    3. '       ' → logprob: -6.766143321990967
    4. '           ' → logprob: -7.641143321990967
    5. 'continue' → logprob: -8.766142845153809
    6. 'H' → logprob: -9.266142845153809
    7. 'pass' → logprob: -10.141142845153809
    8. ' off' → logprob: -10.766142845153809
    9. 'offs' → logprob: -11.891142845153809
    10. 'offset' → logprob: -12.141142845153809

Token 983: ' oui' (ID: 50908)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.9261739253997803
    2. ' True' → logprob: -0.9261739253997803
    3. '           ' → logprob: -2.5511739253997803
    4. '       ' → logprob: -2.8011739253997803
    5. 'continue' → logprob: -3.3011739253997803
    6. '   ' → logprob: -3.8011739253997803
    7. ' H' → logprob: -6.051174163818359
    8. ' ' → logprob: -6.301174163818359
    9. ' continue' → logprob: -6.426174163818359
    10. 'H' → logprob: -7.176174163818359

Token 984: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07404672354459763
    2. ' :' → logprob: -3.5740466117858887
    3. '       ' → logprob: -3.6990466117858887
    4. '           ' → logprob: -4.199046611785889
    5. ',' → logprob: -7.199046611785889
    6. '	' → logprob: -7.699046611785889
    7. ' ' → logprob: -7.949046611785889
    8. '		' → logprob: -8.074047088623047
    9. '   ' → logprob: -8.199047088623047
    10. ':
' → logprob: -8.449047088623047

Token 985: ' on' (ID: 402)
  Prédit: 'off'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'off' → logprob: -0.29370665550231934
    2. '   ' → logprob: -1.4187066555023193
    3. '       ' → logprob: -4.918706893920898
    4. 'continue' → logprob: -5.793706893920898
    5. ' off' → logprob: -6.418706893920898
    6. '           ' → logprob: -9.168706893920898
    7. 'H' → logprob: -9.543706893920898
    8. 'pass' → logprob: -9.668706893920898
    9. '   ' → logprob: -9.918706893920898
    10. ' continue' → logprob: -10.293706893920898

Token 986: ' peut' (ID: 9216)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5827151536941528
    2. 'continue' → logprob: -1.7077151536941528
    3. ' continue' → logprob: -2.0827150344848633
    4. '       ' → logprob: -3.0827150344848633
    5. 'off' → logprob: -3.3327150344848633
    6. ' off' → logprob: -3.5827150344848633
    7. ':' → logprob: -4.957715034484863
    8. '           ' → logprob: -5.332715034484863
    9. '=' → logprob: -6.207715034484863
    10. 'contin' → logprob: -6.832715034484863

Token 987: ' "' (ID: 392)
  Prédit: 'off'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'off' → logprob: -1.0524864196777344
    2. 'continue' → logprob: -1.1774864196777344
    3. 'contin' → logprob: -2.0524864196777344
    4. '   ' → logprob: -2.1774864196777344
    5. ' continuer' → logprob: -2.5524864196777344
    6. ' continue' → logprob: -4.802486419677734
    7. '       ' → logprob: -5.302486419677734
    8. ' off' → logprob: -5.802486419677734
    9. ' H' → logprob: -5.927486419677734
    10. '           ' → logprob: -7.302486419677734

Token 988: 'desc' (ID: 17186)
  Prédit: 'off'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'off' → logprob: -0.0016989875584840775
    2. 'continue' → logprob: -6.626698970794678
    3. 'H' → logprob: -8.626699447631836
    4. '   ' → logprob: -9.001699447631836
    5. 'increment' → logprob: -10.876699447631836
    6. 'offs' → logprob: -11.251699447631836
    7. 'offset' → logprob: -11.751699447631836
    8. ' off' → logprob: -11.751699447631836
    9. 'pass' → logprob: -12.001699447631836
    10. '           ' → logprob: -12.751699447631836

Token 989: 'endre' (ID: 9574)
  Prédit: 'endre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endre' → logprob: -0.00037263904232531786
    2. 'c' → logprob: -8.625372886657715
    3. 'ender' → logprob: -9.500372886657715
    4. 'end' → logprob: -9.750372886657715
    5. 're' → logprob: -10.625372886657715
    6. 'er' → logprob: -11.875372886657715
    7. 'e' → logprob: -12.375372886657715
    8. 'ent' → logprob: -12.500372886657715
    9. 'r' → logprob: -13.250372886657715
    10. 'endres' → logprob: -13.375372886657715

Token 990: '"' (ID: 1)
  Prédit: ' H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' H' → logprob: -1.072337031364441
    2. 'H' → logprob: -1.572337031364441
    3. 'd' → logprob: -1.697337031364441
    4. ' d' → logprob: -2.9473371505737305
    5. 'le' → logprob: -3.1973371505737305
    6. '       ' → logprob: -3.3223371505737305
    7. '   ' → logprob: -3.4473371505737305
    8. ' de' → logprob: -3.8223371505737305
    9. 'l' → logprob: -4.1973371505737305
    10. 'i' → logprob: -4.4473371505737305

Token 991: ' un' (ID: 537)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.7825969457626343
    2. 'off' → logprob: -1.6575969457626343
    3. 'd' → logprob: -2.032597064971924
    4. '   ' → logprob: -2.532597064971924
    5. 'de' → logprob: -3.407597064971924
    6. 'of' → logprob: -3.407597064971924
    7. '       ' → logprob: -3.782597064971924
    8. '           ' → logprob: -4.032597064971924
    9. ' H' → logprob: -4.657597064971924
    10. '1' → logprob: -5.032597064971924

Token 992: ' bloc' (ID: 51218)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.3535739183425903
    2. 'i' → logprob: -1.9785739183425903
    3. 'pe' → logprob: -2.228573799133301
    4. 'e' → logprob: -2.353573799133301
    5. 'H' → logprob: -2.728573799133301
    6. '1' → logprob: -3.103573799133301
    7. '<|end|>' → logprob: -3.353573799133301
    8. '
' → logprob: -3.853573799133301
    9. 'es' → logprob: -4.228573799133301
    10. 'niveau' → logprob: -4.353573799133301

Token 993: ' sans' (ID: 9828)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06781663745641708
    2. '       ' → logprob: -3.192816734313965
    3. 'off' → logprob: -4.317816734313965
    4. '               ' → logprob: -5.692816734313965
    5. ' =' → logprob: -6.692816734313965
    6. 's' → logprob: -6.817816734313965
    7. '=' → logprob: -6.942816734313965
    8. ':' → logprob: -6.942816734313965
    9. '1' → logprob: -7.192816734313965
    10. '   ' → logprob: -7.442816734313965

Token 994: ' problème' (ID: 35630)
  Prédit: 'modifier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'modifier' → logprob: -1.1959320306777954
    2. 'changer' → logprob: -1.4459320306777954
    3. 'pro' → logprob: -1.6959320306777954
    4. 'mod' → logprob: -3.195931911468506
    5. 'dé' → logprob: -3.320931911468506
    6. 'increment' → logprob: -3.570931911468506
    7. 'in' → logprob: -3.570931911468506
    8. 'augment' → logprob: -3.695931911468506
    9. 'faire' → logprob: -3.820931911468506
    10. 'aj' → logprob: -4.195931911468506

Token 995: ' ou' (ID: 2031)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7630048990249634
    2. '           ' → logprob: -0.8880048990249634
    3. ':' → logprob: -2.263004779815674
    4. '.' → logprob: -5.138004779815674
    5. ',' → logprob: -5.513004779815674
    6. ' :' → logprob: -6.263004779815674
    7. '   ' → logprob: -6.638004779815674
    8. '               ' → logprob: -7.138004779815674
    9. ':
' → logprob: -7.388004779815674
    10. '	' → logprob: -7.638004779815674

Token 996: ' sans' (ID: 9828)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.9371600151062012
    2. 'continue' → logprob: -1.1871600151062012
    3. ' continuer' → logprob: -2.687160015106201
    4. 'modifier' → logprob: -3.062160015106201
    5. 'pass' → logprob: -3.062160015106201
    6. '   ' → logprob: -3.562160015106201
    7. ' continue' → logprob: -4.062160015106201
    8. 'aj' → logprob: -4.437160015106201
    9. 'ret' → logprob: -4.687160015106201
    10. 'off' → logprob: -4.812160015106201

Token 997: ' nécess' (ID: 25223)
  Prédit: 'changer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'changer' → logprob: -1.0230830907821655
    2. 'modifier' → logprob: -1.2730830907821655
    3. 'dé' → logprob: -3.023083209991455
    4. 'mod' → logprob: -3.023083209991455
    5. 'aj' → logprob: -3.148083209991455
    6. 'contin' → logprob: -3.523083209991455
    7. 'increment' → logprob: -3.523083209991455
    8. 'off' → logprob: -3.773083209991455
    9. 'augment' → logprob: -3.773083209991455
    10. 'pro' → logprob: -3.898083209991455

Token 998: 'iter' (ID: 2340)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.4754740595817566
    2. 'e' → logprob: -1.2254741191864014
    3. ' de' → logprob: -2.9754741191864014
    4. 'de' → logprob: -4.100473880767822
    5. ' d' → logprob: -5.350473880767822
    6. 's' → logprob: -5.600473880767822
    7. 'd' → logprob: -6.600473880767822
    8. 'a' → logprob: -6.975473880767822
    9. 'é' → logprob: -6.975473880767822
    10. '_' → logprob: -7.475473880767822

Token 999: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.41045084595680237
    2. 'd' → logprob: -1.91045081615448
    3. ' de' → logprob: -2.1604509353637695
    4. ' d' → logprob: -3.7854509353637695
    5. 'mod' → logprob: -4.6604509353637695
    6. ' ' → logprob: -5.0354509353637695
    7. 'une' → logprob: -5.1604509353637695
    8. '           ' → logprob: -5.9104509353637695
    9. '   ' → logprob: -6.0354509353637695
    10. '       ' → logprob: -6.1604509353637695

Token 1000: ' modification' (ID: 29847)
  Prédit: 'off'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'off' → logprob: -0.3408876657485962
    2. 'continue' → logprob: -1.3408876657485962
    3. 'contin' → logprob: -5.340887546539307
    4. 'increment' → logprob: -5.590887546539307
    5. 'H' → logprob: -5.715887546539307
    6. 'in' → logprob: -5.715887546539307
    7. 'continu' → logprob: -5.715887546539307
    8. '1' → logprob: -6.215887546539307
    9. 'break' → logprob: -6.715887546539307
    10. 'dé' → logprob: -6.715887546539307

Token 1001: '.' (ID: 13)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2641322910785675
    2. '       ' → logprob: -2.389132261276245
    3. '[i' → logprob: -2.889132261276245
    4. ' :' → logprob: -4.014132499694824
    5. '   ' → logprob: -4.389132499694824
    6. '=' → logprob: -4.514132499694824
    7. ':
' → logprob: -4.514132499694824
    8. '[' → logprob: -5.014132499694824
    9. ' =' → logprob: -5.014132499694824
    10. '           ' → logprob: -5.264132499694824

Token 1002: ' On' (ID: 2160)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.44175705313682556
    2. '       ' → logprob: -1.566757082939148
    3. ' continue' → logprob: -2.5667569637298584
    4. 'continue' → logprob: -2.8167569637298584
    5. '\n' → logprob: -5.4417572021484375
    6. '   ' → logprob: -6.1917572021484375
    7. '               ' → logprob: -6.4417572021484375
    8. '```' → logprob: -7.0667572021484375
    9. ':
' → logprob: -7.1917572021484375
    10. ':' → logprob: -8.316757202148438

Token 1003: ' ré' (ID: 3146)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.15868382155895233
    2. '   ' → logprob: -2.4086837768554688
    3. '       ' → logprob: -3.5336837768554688
    4. ' continue' → logprob: -4.408683776855469
    5. 'off' → logprob: -4.408683776855469
    6. 'contin' → logprob: -6.783683776855469
    7. 'pass' → logprob: -7.283683776855469
    8. '           ' → logprob: -7.658683776855469
    9. 'else' → logprob: -8.408683776855469
    10. 'continu' → logprob: -9.658683776855469

Token 1004: 'initial' (ID: 17493)
  Prédit: 'du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'du' → logprob: -1.015886902809143
    2. 'set' → logprob: -1.140886902809143
    3. 'turn' → logprob: -2.8908867835998535
    4. 'off' → logprob: -2.8908867835998535
    5. 'duce' → logprob: -3.1408867835998535
    6. 'sum' → logprob: -3.1408867835998535
    7. 'main' → logprob: -4.1408867835998535
    8. 'cup' → logprob: -4.2658867835998535
    9. 't' → logprob: -4.3908867835998535
    10. 'd' → logprob: -4.8908867835998535

Token 1005: 'ise' (ID: 1096)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.37295687198638916
    2. 'er' → logprob: -2.2479567527770996
    3. ' =' → logprob: -2.4979567527770996
    4. 'et' → logprob: -2.8729567527770996
    5. '=' → logprob: -3.8729567527770996
    6. 'e' → logprob: -4.9979567527771
    7. '   ' → logprob: -5.2479567527771
    8. 'ent' → logprob: -5.4979567527771
    9. '_' → logprob: -5.4979567527771
    10. 'sert' → logprob: -5.4979567527771

Token 1006: ' alors' (ID: 17971)
  Prédit: 'off'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'off' → logprob: -0.1018480584025383
    2. ' off' → logprob: -2.3518481254577637
    3. '\n' → logprob: -7.226848125457764
    4. '   ' → logprob: -7.601848125457764
    5. 'l' → logprob: -8.976847648620605
    6. '(off' → logprob: -9.351847648620605
    7. 'offset' → logprob: -10.351847648620605
    8. '\' → logprob: -11.101847648620605
    9. 'flag' → logprob: -11.226847648620605
    10. '    
' → logprob: -11.226847648620605

Token 1007: ' off' (ID: 1277)
  Prédit: 'off'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'off' → logprob: -0.00935499370098114
    2. '   ' → logprob: -5.259355068206787
    3. ' off' → logprob: -5.509355068206787
    4. 'flag' → logprob: -11.134354591369629
    5. '```' → logprob: -11.384354591369629
    6. '       ' → logprob: -11.884354591369629
    7. '(off' → logprob: -12.259354591369629
    8. 'offset' → logprob: -12.509354591369629
    9. '1' → logprob: -12.634354591369629
    10. '`' → logprob: -12.634354591369629

Token 1008: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011055956594645977
    2. ' =' → logprob: -4.511055946350098
    3. '+=' → logprob: -11.886055946350098
    4. ' +=' → logprob: -14.261055946350098
    5. '   ' → logprob: -15.386055946350098
    6. '=i' → logprob: -16.511056900024414
    7. '           ' → logprob: -16.886056900024414
    8. '    ' → logprob: -17.386056900024414
    9. '       ' → logprob: -17.636056900024414
    10. '=False' → logprob: -17.886056900024414

Token 1009: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07254907488822937
    2. 'H' → logprob: -2.6975491046905518
    3. '1' → logprob: -6.822548866271973
    4. 'i' → logprob: -6.822548866271973
    5. ' H' → logprob: -8.947548866271973
    6. '(H' → logprob: -9.072548866271973
    7. ' ' → logprob: -9.197548866271973
    8. '(i' → logprob: -10.197548866271973
    9. ' i' → logprob: -11.572548866271973
    10. '(' → logprob: -12.072548866271973

Token 1010: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007884489372372627
    2. 'H' → logprob: -4.882884502410889
    3. '1' → logprob: -8.88288402557373
    4. 'i' → logprob: -10.00788402557373
    5. '(H' → logprob: -10.00788402557373
    6. 'max' → logprob: -10.75788402557373
    7. '(i' → logprob: -12.13288402557373
    8. ' ' → logprob: -12.25788402557373
    9. '   ' → logprob: -12.25788402557373
    10. ' H' → logprob: -12.75788402557373

Token 1011: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19968414306640625
    2. '           ' → logprob: -2.6996841430664062
    3. '\n' → logprob: -3.5746841430664062
    4. '
' → logprob: -3.9496841430664062
    5. '        
' → logprob: -4.199684143066406
    6. ':' → logprob: -4.574684143066406
    7. '    
' → logprob: -4.574684143066406
    8. '<|end|>' → logprob: -5.074684143066406
    9. '=' → logprob: -5.199684143066406
    10. '            
' → logprob: -5.324684143066406

Token 1012: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04757394269108772
    2. '       ' → logprob: -3.422574043273926
    3. '\n' → logprob: -4.672574043273926
    4. '               ' → logprob: -6.797574043273926
    5. '            
' → logprob: -6.797574043273926
    6. '```' → logprob: -7.422574043273926
    7. ':' → logprob: -8.047574043273926
    8. '   ' → logprob: -8.297574043273926
    9. '' → logprob: -8.547574043273926
    10. '        
' → logprob: -8.922574043273926

Token 1013: ' off' (ID: 1277)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1478196382522583
    2. '\n' → logprob: -2.5228195190429688
    3. '       ' → logprob: -3.8978195190429688
    4. 'off' (adapté à ' off') → logprob: -4.397819519042969
    5. '            
' → logprob: -4.397819519042969
    6. '        
' → logprob: -5.897819519042969
    7. '               ' → logprob: -6.022819519042969
    8. '    
' → logprob: -6.147819519042969
    9. '\' → logprob: -7.147819519042969
    10. '
' → logprob: -7.272819519042969

Token 1014: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04859418421983719
    2. ' =' → logprob: -3.0485942363739014
    3. '   ' → logprob: -12.04859447479248
    4. '           ' → logprob: -15.04859447479248
    5. '       ' → logprob: -15.17359447479248
    6. ' +=' → logprob: -16.423593521118164
    7. '+=' → logprob: -16.548593521118164
    8. '  ' → logprob: -16.798593521118164
    9. '	' → logprob: -16.923593521118164
    10. '    ' → logprob: -16.923593521118164

Token 1015: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '1' → logprob: -19.3750057220459
    4. '   ' → logprob: -19.5000057220459
    5. '۰' → logprob: -21.0000057220459
    6. '=' → logprob: -21.2500057220459
    7. '	' → logprob: -21.7500057220459
    8. '```' → logprob: -22.5000057220459
    9. ' ' → logprob: -22.9375057220459
    10. '  ' → logprob: -23.0625057220459

Token 1016: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -19.000001907348633
    4. '1' → logprob: -19.875001907348633
    5. '۰' → logprob: -20.125001907348633
    6. '	' → logprob: -21.375001907348633
    7. '  ' → logprob: -21.500001907348633
    8. '０' → logprob: -21.812501907348633
    9. '=' → logprob: -22.062501907348633
    10. '(' → logprob: -22.125001907348633

Token 1017: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009744402021169662
    2. 'else' → logprob: -4.759744167327881
    3. ' else' → logprob: -7.134744167327881
    4. 'elif' → logprob: -8.509744644165039
    5. '   ' → logprob: -9.634744644165039
    6. '           ' → logprob: -10.634744644165039
    7. '	' → logprob: -11.134744644165039
    8. ' elif' → logprob: -12.259744644165039
    9. '<|end|>' → logprob: -12.509744644165039
    10. ')' → logprob: -12.634744644165039

Token 1018: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11070343106985092
    2. 'else' → logprob: -3.110703468322754
    3. 'elif' → logprob: -3.235703468322754
    4. ' else' → logprob: -4.485703468322754
    5. '<|end|>' → logprob: -5.735703468322754
    6. '   ' → logprob: -5.860703468322754
    7. ' elif' → logprob: -7.360703468322754
    8. '.' → logprob: -7.610703468322754
    9. '\n' → logprob: -7.735703468322754
    10. '	' → logprob: -8.110703468322754

Token 1019: ' On' (ID: 2160)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.1572810858488083
    2. '   ' → logprob: -2.5322811603546143
    3. '       ' → logprob: -2.9072811603546143
    4. 'elif' → logprob: -5.032280921936035
    5. ' else' → logprob: -5.657280921936035
    6. 'continue' → logprob: -6.907280921936035
    7. ')' → logprob: -9.157280921936035
    8. '	else' → logprob: -9.657280921936035
    9. '    
' → logprob: -9.907280921936035
    10. '	' → logprob: -10.407280921936035

Token 1020: ' remet' (ID: 78375)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0601317472755909
    2. 'continue' → logprob: -2.935131788253784
    3. 'else' → logprob: -5.810131549835205
    4. ' =' → logprob: -7.185131549835205
    5. ' continue' → logprob: -7.310131549835205
    6. 'contin' → logprob: -8.435132026672363
    7. 'reset' → logprob: -8.935132026672363
    8. '   ' → logprob: -9.060132026672363
    9. ')' → logprob: -9.310132026672363
    10. '	continue' → logprob: -9.560132026672363

Token 1021: ' la' (ID: 557)
  Prédit: 'off'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'off' → logprob: -0.12880875170230865
    2. '0' → logprob: -2.1288087368011475
    3. ' off' → logprob: -6.378808975219727
    4. ' ' → logprob: -9.003808975219727
    5. 'à' → logprob: -11.003808975219727
    6. '(off' → logprob: -11.378808975219727
    7. ' ' → logprob: -12.128808975219727
    8. '   ' → logprob: -12.503808975219727
    9. ' à' → logprob: -12.628808975219727
    10. 'offs' → logprob: -12.753808975219727

Token 1022: ' modification' (ID: 29847)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1435375064611435
    2. 'off' → logprob: -2.0185375213623047
    3. '```' → logprob: -7.518537521362305
    4. ' ' → logprob: -8.393537521362305
    5. ' off' → logprob: -10.768537521362305
    6. '`' → logprob: -10.893537521362305
    7. 'offset' → logprob: -11.018537521362305
    8. 'value' → logprob: -11.143537521362305
    9. 'zero' → logprob: -12.893537521362305
    10. '   ' → logprob: -13.018537521362305

Token 1023: '/c' (ID: 4308)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1024: 'orrection' (ID: 146464)
  Prédit: 'orrection'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orrection' → logprob: -0.001648995210416615
    2. 'on' → logprob: -7.626648902893066
    3. 'ont' → logprob: -8.126648902893066
    4. 'orr' → logprob: -8.251648902893066
    5. 'orrect' → logprob: -8.376648902893066
    6. 'omp' → logprob: -9.501648902893066
    7. 'om' → logprob: -9.626648902893066
    8. 'orre' → logprob: -10.126648902893066
    9. 'or' → logprob: -10.126648902893066
    10. 'lar' → logprob: -10.751648902893066

Token 1025: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1026: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8312570318812504e-05
    2. ' ' → logprob: -11.375018119812012
    3. '<|end|>' → logprob: -12.500018119812012
    4. 'z' → logprob: -13.375018119812012
    5. '```' → logprob: -13.875018119812012
    6. 'zero' → logprob: -15.250018119812012
    7. ' ' → logprob: -16.875019073486328
    8. ' zéro' → logprob: -17.375019073486328
    9. ' ' → logprob: -17.750019073486328
    10. '​' → logprob: -18.125019073486328

Token 1027: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002700377081055194
    2. 'z' → logprob: -8.250269889831543
    3. 'zero' → logprob: -12.000269889831543
    4. ' ' → logprob: -13.750269889831543
    5. '```' → logprob: -14.375269889831543
    6. ' zéro' → logprob: -15.625269889831543
    7. 'jour' → logprob: -15.750269889831543
    8. ' ' → logprob: -16.50027084350586
    9. '<|end|>' → logprob: -16.50027084350586
    10. 'niveau' → logprob: -17.00027084350586

Token 1028: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1029: ' la' (ID: 557)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9835283756256104
    2. 'contin' → logprob: -1.2335283756256104
    3. 'off' → logprob: -1.9835283756256104
    4. 'continue' → logprob: -2.1085283756256104
    5. '<|end|>' → logprob: -3.8585283756256104
    6. 'la' → logprob: -4.733528137207031
    7. ' continuer' → logprob: -4.983528137207031
    8. ' chaque' → logprob: -5.358528137207031
    9. 'l' → logprob: -5.608528137207031
    10. 'H' → logprob: -5.733528137207031

Token 1030: ' prochaine' (ID: 78876)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.89984130859375
    2. 'next' → logprob: -1.52484130859375
    3. 'pro' → logprob: -2.14984130859375
    4. 'contin' → logprob: -2.14984130859375
    5. 'continu' → logprob: -2.39984130859375
    6. 'suite' → logprob: -4.02484130859375
    7. ' prochaine' → logprob: -4.77484130859375
    8. ' next' → logprob: -5.39984130859375
    9. 'pass' → logprob: -6.02484130859375
    10. 'following' → logprob: -6.64984130859375

Token 1031: ' it' (ID: 480)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2886379957199097
    2. '    
' → logprob: -1.2886379957199097
    3. 'ligne' → logprob: -1.5386379957199097
    4. '```' → logprob: -2.663638114929199
    5. 'continue' → logprob: -2.913638114929199
    6. '        
' → logprob: -3.913638114929199
    7. '  
' → logprob: -4.038638114929199
    8. 'iteration' → logprob: -4.538638114929199
    9. '            
' → logprob: -4.913638114929199
    10. '   ' → logprob: -5.038638114929199

Token 1032: 'ération' (ID: 24977)
  Prédit: 'ération'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.000518716755323112
    2. 'er' → logprob: -9.000518798828125
    3. 'ration' → logprob: -9.125518798828125
    4. 't' → logprob: -9.375518798828125
    5. 'ér' → logprob: -9.875518798828125
    6. 'é' → logprob: -10.000518798828125
    7. 'étation' → logprob: -10.750518798828125
    8. 'érations' → logprob: -10.875518798828125
    9. 'r' → logprob: -11.000518798828125
    10. 'ré' → logprob: -11.875518798828125

Token 1033: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1034: '           ' (ID: 352)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.6519059538841248
    2. '\n' → logprob: -1.7769060134887695
    3. ' else' → logprob: -1.9019060134887695
    4. '```' → logprob: -2.9019060134887695
    5. ' 
' → logprob: -3.1519060134887695
    6. '<|end|>' → logprob: -3.7769060134887695
    7. 'elif' → logprob: -4.7769060134887695
    8. '  
' → logprob: -5.0269060134887695
    9. '    
' → logprob: -5.2769060134887695
    10. '       ' → logprob: -5.9019060134887695

Token 1035: ' continue' (ID: 4901)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.25426679849624634
    2. '       ' → logprob: -1.6292667388916016
    3. 'continue' (adapté à ' continue') → logprob: -4.379266738891602
    4. 'elif' → logprob: -4.754266738891602
    5. '   ' → logprob: -5.629266738891602
    6. ' else' → logprob: -5.754266738891602
    7. '           ' → logprob: -8.504266738891602
    8. '	' → logprob: -9.629266738891602
    9. '	else' → logprob: -9.754266738891602
    10. ' continue' → logprob: -9.879266738891602

Token 1036: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12399495393037796
    2. '<|end|>' → logprob: -2.748995065689087
    3. '        
' → logprob: -2.998995065689087
    4. 'if' → logprob: -7.248994827270508
    5. '            
' → logprob: -8.123994827270508
    6. '
' → logprob: -8.123994827270508
    7. 'elif' → logprob: -8.248994827270508
    8. 'else' → logprob: -8.748994827270508
    9. '    
' → logprob: -8.873994827270508
    10. ')' → logprob: -8.873994827270508

Token 1037: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4818986654281616
    2. '<|end|>' → logprob: -1.8568986654281616
    3. '        
' → logprob: -1.9818986654281616
    4. '    
' → logprob: -3.856898784637451
    5. 'elif' → logprob: -3.981898784637451
    6. '\n' → logprob: -4.731898784637451
    7. '  
' → logprob: -5.231898784637451
    8. 'if' → logprob: -5.356898784637451
    9. '
' → logprob: -5.481898784637451
    10. '   ' → logprob: -5.481898784637451

Token 1038: ' continue' (ID: 4901)
  Prédit: 'off'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'off' → logprob: -0.2936078906059265
    2. 'if' → logprob: -1.5436079502105713
    3. 'else' → logprob: -4.043607711791992
    4. 'continue' → logprob: -4.918607711791992
    5. '       ' → logprob: -5.043607711791992
    6. '   ' → logprob: -6.168607711791992
    7. 'next' → logprob: -6.668607711791992
    8. 'elif' → logprob: -6.793607711791992
    9. 'pass' → logprob: -6.918607711791992
    10. 'H' → logprob: -7.168607711791992

Token 1039: ' fait' (ID: 7473)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1040: ' passer' (ID: 27727)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.263322651386261
    2. 'contin' → logprob: -2.513322591781616
    3. '<|end|>' → logprob: -2.763322591781616
    4. 'suite' → logprob: -4.013322830200195
    5. 'la' → logprob: -4.638322830200195
    6. 'continue' → logprob: -4.763322830200195
    7. 'que' → logprob: -5.138322830200195
    8. 'su' → logprob: -5.138322830200195
    9. 's' → logprob: -5.638322830200195
    10. 'le' → logprob: -6.013322830200195

Token 1041: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1042: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.03883714973926544
    2. 'l' → logprob: -3.288837194442749
    3. 'the' → logprob: -7.41383695602417
    4. ' la' → logprob: -8.913837432861328
    5. 'i' → logprob: -10.413837432861328
    6. 'next' → logprob: -10.788837432861328
    7. '<|end|>' → logprob: -13.413837432861328
    8. '```' → logprob: -13.663837432861328
    9. '_la' → logprob: -14.163837432861328
    10. 'le' → logprob: -14.663837432861328

Token 1043: ' prochaine' (ID: 78876)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.08126997202634811
    2. 'new' → logprob: -2.9562699794769287
    3. 'i' → logprob: -4.08126974105835
    4. 'nou' → logprob: -5.45626974105835
    5. ' next' → logprob: -6.83126974105835
    6. 'n' → logprob: -7.20626974105835
    7. '```' → logprob: -7.20626974105835
    8. 'su' → logprob: -7.33126974105835
    9. ' prochaine' → logprob: -8.206270217895508
    10. '<|end|>' → logprob: -8.706270217895508

Token 1044: ' it' (ID: 480)
  Prédit: 'iteration'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'iteration' → logprob: -0.5293451547622681
    2. 'ligne' → logprob: -2.2793450355529785
    3. 'token' → logprob: -2.4043450355529785
    4. 'i' → logprob: -3.0293450355529785
    5. ' iteration' → logprob: -3.1543450355529785
    6. '\n' → logprob: -3.7793450355529785
    7. '
' → logprob: -3.7793450355529785
    8. 'it' → logprob: -4.1543450355529785
    9. '  
' → logprob: -4.5293450355529785
    10. 'indice' → logprob: -4.6543450355529785

Token 1045: 'ération' (ID: 24977)
  Prédit: 'ération'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.0018535543931648135
    2. 'er' → logprob: -6.7518534660339355
    3. 'ration' → logprob: -7.6268534660339355
    4. 'étation' → logprob: -9.626853942871094
    5. 'é' → logprob: -10.001853942871094
    6. 'ér' → logprob: -10.126853942871094
    7. 'éra' → logprob: -11.376853942871094
    8. 'érations' → logprob: -11.876853942871094
    9. 't' → logprob: -12.126853942871094
    10. 'ter' → logprob: -12.251853942871094

Token 1046: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1047: ' la' (ID: 557)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.3199312686920166
    2. 'la' → logprob: -1.6949312686920166
    3. '<|end|>' → logprob: -3.1949312686920166
    4. 'l' → logprob: -4.1949310302734375
    5. ' la' → logprob: -4.3199310302734375
    6. 'i' → logprob: -4.6949310302734375
    7. ' the' → logprob: -5.6949310302734375
    8. 'for' → logprob: -5.6949310302734375
    9. '```' → logprob: -5.9449310302734375
    10. 'loop' → logprob: -6.6949310302734375

Token 1048: ' boucle' (ID: 174211)
  Prédit: 'bou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bou' → logprob: -0.0229345690459013
    2. 'loop' → logprob: -4.522934436798096
    3. ' boucle' → logprob: -4.522934436798096
    4. 'for' → logprob: -7.022934436798096
    5. 'b' → logprob: -9.897934913635254
    6. '```' → logprob: -11.522934913635254
    7. ' loop' → logprob: -13.147934913635254
    8. 'ligne' → logprob: -13.397934913635254
    9. 'bout' → logprob: -13.522934913635254
    10. 'Bou' → logprob: -13.897934913635254

Token 1049: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1050: ' év' (ID: 23692)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1051: 'itant' (ID: 61641)
  Prédit: 'ite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.07691213488578796
    2. 'iter' → logprob: -2.8269121646881104
    3. 'itable' → logprob: -5.576911926269531
    4. 'itera' → logprob: -5.701911926269531
    5. 'it' → logprob: -5.951911926269531
    6. 'al' → logprob: -6.326911926269531
    7. 'itez' → logprob: -7.201911926269531
    8. 'itant' → logprob: -7.326911926269531
    9. 'ide' → logprob: -7.826911926269531
    10. 'itale' → logprob: -8.451911926269531

Token 1052: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.1279696226119995
    2. 'l' → logprob: -1.1279696226119995
    3. 'le' → logprob: -1.3779696226119995
    4. 'de' → logprob: -2.877969741821289
    5. 'la' → logprob: -4.002969741821289
    6. ' d' → logprob: -4.877969741821289
    7. 'tout' → logprob: -5.502969741821289
    8. ' de' → logprob: -6.252969741821289
    9. ' toute' → logprob: -6.377969741821289
    10. '       ' → logprob: -6.377969741821289

Token 1053: ''ex' (ID: 23472)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0606412887573242
    2. ''ex' → logprob: -1.0606412887573242
    3. 'ex' → logprob: -1.3106412887573242
    4. ''effect' → logprob: -4.935641288757324
    5. 'execut' → logprob: -5.435641288757324
    6. ''aller' → logprob: -5.560641288757324
    7. 'e' → logprob: -5.685641288757324
    8. 'aller' → logprob: -5.810641288757324
    9. 'l' → logprob: -6.435641288757324
    10. 'exec' → logprob: -6.560641288757324

Token 1054: 'éc' (ID: 5675)
  Prédit: 'éc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éc' → logprob: -0.03454391285777092
    2. 'ecut' → logprob: -3.534543991088867
    3. 'cut' → logprob: -5.659543991088867
    4. 'ec' → logprob: -7.409543991088867
    5. 'é' → logprob: -8.284543991088867
    6. 'ecute' → logprob: -8.284543991088867
    7. 'x' → logprob: -9.909543991088867
    8. 'e' → logprob: -10.034543991088867
    9. 'écut' → logprob: -10.284543991088867
    10. 'xec' → logprob: -11.409543991088867

Token 1055: 'uter' (ID: 23469)
  Prédit: 'uter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uter' → logprob: -0.12420986592769623
    2. 'cut' → logprob: -2.8742098808288574
    3. 'ecut' → logprob: -3.1242098808288574
    4. 'uer' → logprob: -4.499209880828857
    5. 'ect' → logprob: -6.624209880828857
    6. 'er' → logprob: -6.624209880828857
    7. 'u' → logprob: -6.874209880828857
    8. 'érer' → logprob: -8.1242094039917
    9. 'outer' → logprob: -8.2492094039917
    10. 'e' → logprob: -8.4992094039917

Token 1056: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.5617210865020752
    2. 'la' → logprob: -1.3117210865020752
    3. 'l' → logprob: -1.9367210865020752
    4. 'les' → logprob: -4.686720848083496
    5. ' la' → logprob: -5.811720848083496
    6. 'off' → logprob: -6.811720848083496
    7. 'the' → logprob: -7.186720848083496
    8. ' le' → logprob: -7.561720848083496
    9. 'tout' → logprob: -7.561720848083496
    10. ' les' → logprob: -8.061720848083496

Token 1057: ' reste' (ID: 26769)
  Prédit: 'reste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reste' → logprob: -0.7304159998893738
    2. ' reste' → logprob: -1.4804160594940186
    3. 'rest' → logprob: -1.8554160594940186
    4. 'code' → logprob: -3.1054160594940186
    5. 'bloc' → logprob: -3.2304160594940186
    6. 'cor' → logprob: -3.4804160594940186
    7. '```' → logprob: -5.1054158210754395
    8. 'remaining' → logprob: -5.7304158210754395
    9. ' code' → logprob: -5.7304158210754395
    10. 'block' → logprob: -6.2304158210754395

Token 1058: ' du' (ID: 1462)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1059: ' code' (ID: 3490)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.17572814226150513
    2. 'cor' → logprob: -1.9257280826568604
    3. 'bloc' → logprob: -4.4257283210754395
    4. 'for' → logprob: -5.8007283210754395
    5. '```' → logprob: -9.050727844238281
    6. 'loop' → logprob: -9.050727844238281
    7. 'block' → logprob: -9.550727844238281
    8. 'bou' → logprob: -10.050727844238281
    9. 'corp' → logprob: -11.425727844238281
    10. 'conten' → logprob: -11.550727844238281

Token 1060: ' dans' (ID: 2671)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1061: ' cette' (ID: 7696)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.895841658115387
    2. 'la' → logprob: -0.895841658115387
    3. 'ce' → logprob: -2.270841598510742
    4. 'le' → logprob: -2.770841598510742
    5. 'cet' → logprob: -4.270841598510742
    6. 'l' → logprob: -6.020841598510742
    7. 'cel' → logprob: -8.145841598510742
    8. 'celle' → logprob: -8.395841598510742
    9. 'this' → logprob: -8.645841598510742
    10. '```' → logprob: -8.770841598510742

Token 1062: ' boucle' (ID: 174211)
  Prédit: ' boucle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' boucle' → logprob: -0.04930863901972771
    2. 'if' → logprob: -3.5493085384368896
    3. 'bou' → logprob: -4.799308776855469
    4. 'case' → logprob: -6.174308776855469
    5. ' if' → logprob: -6.299308776855469
    6. 'for' → logprob: -6.424308776855469
    7. 'ligne' → logprob: -6.799308776855469
    8. 'b' → logprob: -7.424308776855469
    9. 'bloc' → logprob: -7.674308776855469
    10. '```' → logprob: -7.799308776855469

Token 1063: '.

' (ID: 364)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1064: '       ' (ID: 309)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -1.0254597663879395
    2. '   ' → logprob: -1.1504597663879395
    3. 'off' → logprob: -1.5254597663879395
    4. '       ' → logprob: -2.9004597663879395
    5. '```' → logprob: -3.9004597663879395
    6. 'elif' → logprob: -4.2754597663879395
    7. 'if' → logprob: -5.0254597663879395
    8. '    
' → logprob: -5.4004597663879395
    9. ' else' → logprob: -5.7754597663879395
    10. '        
' → logprob: -6.9004597663879395

Token 1065: ' elif' (ID: 9497)
  Prédit: 'off'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'off' → logprob: -0.523526668548584
    2. '       ' → logprob: -1.898526668548584
    3. '\n' → logprob: -3.023526668548584
    4. ' 
' → logprob: -3.023526668548584
    5. 'else' → logprob: -3.398526668548584
    6. '        
' → logprob: -3.898526668548584
    7. '    
' → logprob: -3.898526668548584
    8. '   ' → logprob: -3.898526668548584
    9. '```' → logprob: -4.148526668548584
    10. '
' → logprob: -4.273526668548584

Token 1066: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.25292453169822693
    2. 'off' → logprob: -2.1279244422912598
    3. ' H' → logprob: -2.6279244422912598
    4. '0' → logprob: -4.12792444229126
    5. ' off' → logprob: -5.62792444229126
    6. ' ' → logprob: -5.75292444229126
    7. '   ' → logprob: -5.87792444229126
    8. '(H' → logprob: -6.25292444229126
    9. '(off' → logprob: -6.37792444229126
    10. '1' → logprob: -7.12792444229126

Token 1067: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.696077227592468e-05
    2. '[' → logprob: -9.500077247619629
    3. ' [' → logprob: -14.375077247619629
    4. 'i' → logprob: -14.500077247619629
    5. '```' → logprob: -14.625077247619629
    6. '[I' → logprob: -16.625076293945312
    7. '[j' → logprob: -17.000076293945312
    8. '[user' → logprob: -17.500076293945312
    9. '[
' → logprob: -18.125076293945312
    10. '   ' → logprob: -18.125076293945312

Token 1068: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.43960994482040405
    2. '-' → logprob: -1.0646100044250488
    3. '[i' → logprob: -5.189610004425049
    4. ']-' → logprob: -5.689610004425049
    5. ' -' → logprob: -6.814610004425049
    6. '[' → logprob: -7.314610004425049
    7. '][' → logprob: -10.43960952758789
    8. '1' → logprob: -10.93960952758789
    9. 'i' → logprob: -11.18960952758789
    10. ' ]' → logprob: -11.31460952758789

Token 1069: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.35167717933654785
    2. ' -' → logprob: -1.2266771793365479
    3. '[i' → logprob: -5.976676940917969
    4. '[' → logprob: -7.851676940917969
    5. '   ' → logprob: -9.601676940917969
    6. ' ' → logprob: -9.726676940917969
    7. ')' → logprob: -9.976676940917969
    8. '1' → logprob: -10.226676940917969
    9. '```' → logprob: -11.476676940917969
    10. '<|end|>' → logprob: -11.601676940917969

Token 1070: ' off' (ID: 1277)
  Prédit: 'off'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'off' → logprob: -0.013158935122191906
    2. '1' → logprob: -4.638158798217773
    3. ' off' → logprob: -5.763158798217773
    4. '(' → logprob: -9.638158798217773
    5. '(off' → logprob: -10.013158798217773
    6. '0' → logprob: -10.138158798217773
    7. ' (' → logprob: -10.138158798217773
    8. ' ' → logprob: -10.888158798217773
    9. 'i' → logprob: -11.513158798217773
    10. 'offset' → logprob: -12.388158798217773

Token 1071: ' +' (ID: 659)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.369899719953537
    2. ' -' → logprob: -1.7448997497558594
    3. ' ==' → logprob: -2.9948997497558594
    4. '>' → logprob: -3.2448997497558594
    5. ' <' → logprob: -4.244899749755859
    6. '-' → logprob: -4.494899749755859
    7. '==' → logprob: -4.869899749755859
    8. ' <=' → logprob: -5.119899749755859
    9. ' >=' → logprob: -5.369899749755859
    10. '>=' → logprob: -7.619899749755859

Token 1072: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004472348664421588
    2. ' ' → logprob: -7.7504472732543945
    3. '-' → logprob: -12.000447273254395
    4. ' -' → logprob: -12.250447273254395
    5. '2' → logprob: -13.125447273254395
    6. '0' → logprob: -13.375447273254395
    7. '>' → logprob: -15.000447273254395
    8. ' (' → logprob: -15.125447273254395
    9. '(' → logprob: -15.437947273254395
    10. '```' → logprob: -15.562947273254395

Token 1073: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.966313281329349e-05
    2. ' ' → logprob: -10.125049591064453
    3. '-' → logprob: -12.375049591064453
    4. ' -' → logprob: -13.875049591064453
    5. '0' → logprob: -14.000049591064453
    6. '(' → logprob: -14.125049591064453
    7. 'H' → logprob: -14.250049591064453
    8. '2' → logprob: -14.687549591064453
    9. '(H' → logprob: -15.312549591064453
    10. ' (' → logprob: -15.437549591064453

Token 1074: ' ==' (ID: 951)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.14740721881389618
    2. ' >=' → logprob: -2.022407293319702
    3. '>' → logprob: -5.522407054901123
    4. '==' → logprob: -8.022407531738281
    5. ' >' → logprob: -8.147407531738281
    6. ' ==' → logprob: -10.022407531738281
    7. '<' → logprob: -10.897407531738281
    8. '<=' → logprob: -11.272407531738281
    9. ' ' → logprob: -11.772407531738281
    10. '   ' → logprob: -11.897407531738281

Token 1075: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -9.722539834911004e-05
    2. ' H' → logprob: -9.250097274780273
    3. '   ' → logprob: -14.125097274780273
    4. '	H' → logprob: -15.750097274780273
    5. '       ' → logprob: -16.000097274780273
    6. '           ' → logprob: -18.125097274780273
    7. '(H' → logprob: -18.875097274780273
    8. '  ' → logprob: -19.125097274780273
    9. 'h' → logprob: -19.250097274780273
    10. ' ' → logprob: -19.250097274780273

Token 1076: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2664456789934775e-06
    2. 'i' → logprob: -13.625000953674316
    3. '[' → logprob: -18.000001907348633
    4. ' [' → logprob: -19.125001907348633
    5. '```' → logprob: -19.125001907348633
    6. '[I' → logprob: -19.625001907348633
    7. '{i' → logprob: -19.875001907348633
    8. '(i' → logprob: -20.000001907348633
    9. '[j' → logprob: -20.000001907348633
    10. 'H' → logprob: -20.125001907348633

Token 1077: '-' (ID: 12)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.1613646000623703
    2. '-' → logprob: -2.1613645553588867
    3. 'i' → logprob: -3.4113645553588867
    4. '[-' → logprob: -8.036364555358887
    5. '[' → logprob: -8.286364555358887
    6. ' -' → logprob: -9.286364555358887
    7. '(i' → logprob: -10.286364555358887
    8. ']-' → logprob: -10.536364555358887
    9. ']' → logprob: -10.911364555358887
    10. '-i' → logprob: -11.161364555358887

Token 1078: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.625004768371582
    3. '-' → logprob: -14.000004768371582
    4. '   ' → logprob: -17.375003814697266
    5. '```' → logprob: -18.250003814697266
    6. '<|end|>' → logprob: -18.375003814697266
    7. ' -' → logprob: -18.875003814697266
    8. '2' → logprob: -19.250003814697266
    9. 'i' → logprob: -19.312503814697266
    10. '۱' → logprob: -19.437503814697266

Token 1079: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.09519288688898087
    2. ']:' → logprob: -2.7201929092407227
    3. ':' → logprob: -4.220192909240723
    4. ':
' → logprob: -4.970192909240723
    5. '):
' → logprob: -6.470192909240723
    6. ']' → logprob: -7.720192909240723
    7. '           ' → logprob: -7.720192909240723
    8. ']:
' → logprob: -8.220192909240723
    9. '       ' → logprob: -8.470192909240723
    10. '):' → logprob: -9.345192909240723

Token 1080: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.028370356187224388
    2. 'off' → logprob: -4.153370380401611
    3. '       ' → logprob: -4.778370380401611
    4. '		' → logprob: -6.903370380401611
    5. ' off' → logprob: -7.278370380401611
    6. '	       ' → logprob: -7.403370380401611
    7. '               ' → logprob: -8.028369903564453
    8. '   ' → logprob: -8.153369903564453
    9. '	   ' → logprob: -8.653369903564453
    10. '	' → logprob: -9.028369903564453

Token 1081: ' #' (ID: 1069)
  Prédit: 'off'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'off' → logprob: -0.0033961096778512
    2. '           ' → logprob: -5.753396034240723
    3. '       ' → logprob: -8.753396034240723
    4. '   ' → logprob: -10.253396034240723
    5. ' off' → logprob: -11.253396034240723
    6. 'continue' → logprob: -12.628396034240723
    7. '            
' → logprob: -13.003396034240723
    8. 'offs' → logprob: -13.128396034240723
    9. '
' → logprob: -14.253396034240723
    10. 'pass' → logprob: -14.378396034240723

Token 1082: ' Ici' (ID: 145754)
  Prédit: 'off'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'off' → logprob: -2.3676733690081164e-05
    2. ' off' → logprob: -11.12502384185791
    3. '   ' → logprob: -12.00002384185791
    4. '       ' → logprob: -13.25002384185791
    5. '           ' → logprob: -14.62502384185791
    6. 'offs' → logprob: -15.87502384185791
    7. '
' → logprob: -16.125022888183594
    8. '```' → logprob: -16.500022888183594
    9. ' ' → logprob: -17.000022888183594
    10. '(off' → logprob: -17.250022888183594

Token 1083: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8871055841445923
    2. '           ' → logprob: -1.3871055841445923
    3. '\n' → logprob: -2.2621054649353027
    4. 'off' → logprob: -2.5121054649353027
    5. ' :' → logprob: -3.3871054649353027
    6. '       ' → logprob: -3.6371054649353027
    7. ' off' → logprob: -3.7621054649353027
    8. '\t' → logprob: -3.8871054649353027
    9. '```' → logprob: -5.137105464935303
    10. '   ' → logprob: -5.137105464935303

Token 1084: ' on' (ID: 402)
  Prédit: 'off'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'off' → logprob: -0.08871828019618988
    2. ' off' → logprob: -2.5887181758880615
    3. ' ' → logprob: -5.463718414306641
    4. '           ' → logprob: -5.963718414306641
    5. '\n' → logprob: -6.963718414306641
    6. '       ' → logprob: -7.838718414306641
    7. '            
' → logprob: -8.21371841430664
    8. ' ' → logprob: -8.33871841430664
    9. ' 
' → logprob: -8.46371841430664
    10. '               ' → logprob: -8.58871841430664

Token 1085: ' vér' (ID: 42524)
  Prédit: 'off'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'off' → logprob: -0.23842217028141022
    2. ' off' → logprob: -1.863422155380249
    3. '   ' → logprob: -4.238422393798828
    4. '+' → logprob: -4.238422393798828
    5. ':' → logprob: -4.988422393798828
    6. ' ' → logprob: -5.488422393798828
    7. '           ' → logprob: -5.488422393798828
    8. '       ' → logprob: -5.738422393798828
    9. '    ' → logprob: -6.113422393798828
    10. ')' → logprob: -6.488422393798828

Token 1086: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.0009181279456242919
    2. 'if' → logprob: -7.750917911529541
    3. 'f' → logprob: -8.8759183883667
    4. 'ère' → logprob: -9.7509183883667
    5. 'ra' → logprob: -9.8759183883667
    6. 'ifié' → logprob: -10.0009183883667
    7. 'ite' → logprob: -10.5009183883667
    8. '   ' → logprob: -10.6259183883667
    9. 'ifi' → logprob: -10.8759183883667
    10. 'ife' → logprob: -11.0009183883667

Token 1087: ' si' (ID: 1784)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3629765510559082
    2. ':' → logprob: -1.4879765510559082
    3. ' if' → logprob: -2.112976551055908
    4. ' ' → logprob: -2.112976551055908
    5. '    ' → logprob: -2.862976551055908
    6. '   ' → logprob: -3.112976551055908
    7. 'off' → logprob: -3.612976551055908
    8. ' :' → logprob: -3.737976551055908
    9. '           ' → logprob: -4.237976551055908
    10. 'if' → logprob: -4.237976551055908

Token 1088: ',' (ID: 11)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0025528310798108578
    2. 'off' → logprob: -6.5025529861450195
    3. ' H' → logprob: -7.3775529861450195
    4. 'True' → logprob: -8.50255298614502
    5. ' off' → logprob: -9.25255298614502
    6. '1' → logprob: -9.87755298614502
    7. '(H' → logprob: -10.87755298614502
    8. '   ' → logprob: -11.12755298614502
    9. '           ' → logprob: -11.75255298614502
    10. '(off' → logprob: -12.25255298614502

Token 1089: ' en' (ID: 469)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0813981145620346
    2. 'off' → logprob: -2.5813980102539062
    3. ' off' → logprob: -6.456398010253906
    4. ' H' → logprob: -7.581398010253906
    5. 'True' → logprob: -8.581398010253906
    6. '1' → logprob: -10.081398010253906
    7. '(off' → logprob: -10.081398010253906
    8. '           ' → logprob: -10.456398010253906
    9. 'i' → logprob: -10.581398010253906
    10. 'Off' → logprob: -10.706398010253906

Token 1090: ' augment' (ID: 44474)
  Prédit: 'aj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aj' → logprob: -0.841162383556366
    2. 'augment' → logprob: -1.3411624431610107
    3. 'dé' → logprob: -1.9661624431610107
    4. 'sou' → logprob: -2.9661624431610107
    5. 'd' → logprob: -3.4661624431610107
    6. 'levant' → logprob: -4.216162204742432
    7. '```' → logprob: -5.091162204742432
    8. 'sub' → logprob: -5.091162204742432
    9. 'ré' → logprob: -5.216162204742432
    10. 'ret' → logprob: -5.341162204742432

Token 1091: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.0038180106785148382
    2. '   ' → logprob: -6.753818035125732
    3. '           ' → logprob: -6.878818035125732
    4. '+' → logprob: -7.378818035125732
    5. '       ' → logprob: -8.503817558288574
    6. '-' → logprob: -8.878817558288574
    7. 'er' → logprob: -9.378817558288574
    8. 'nt' → logprob: -9.628817558288574
    9. 'd' → logprob: -9.753817558288574
    10. 't' → logprob: -9.753817558288574

Token 1092: ' d' (ID: 272)
  Prédit: ' H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.43677642941474915
    2. 'H' → logprob: -1.9367763996124268
    3. '1' → logprob: -2.0617763996124268
    4. ' ' → logprob: -3.8117763996124268
    5. ' de' → logprob: -4.061776638031006
    6. ' off' → logprob: -4.186776638031006
    7. ' the' → logprob: -5.311776638031006
    8. 'off' → logprob: -5.436776638031006
    9. 'le' → logprob: -5.561776638031006
    10. 'de' → logprob: -6.311776638031006

Token 1093: ''une' (ID: 13337)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0033452557399868965
    2. ' ' → logprob: -5.753345489501953
    3. ' off' → logprob: -9.753345489501953
    4. '<|end|>' → logprob: -10.378345489501953
    5. 'off' → logprob: -10.753345489501953
    6. ' ' → logprob: -11.378345489501953
    7. '0' → logprob: -11.878345489501953
    8. ' -' → logprob: -12.128345489501953
    9. ' H' → logprob: -12.378345489501953
    10. '-' → logprob: -12.753345489501953

Token 1094: ' unité' (ID: 181741)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4956238865852356
    2. ' ' → logprob: -0.9956238865852356
    3. ' unité' → logprob: -4.49562406539917
    4. ' espace' → logprob: -6.24562406539917
    5. 'space' → logprob: -6.62062406539917
    6. '```' → logprob: -7.24562406539917
    7. 'esp' → logprob: -7.24562406539917
    8. '  ' → logprob: -7.24562406539917
    9. '   ' → logprob: -7.74562406539917
    10. 'unit' → logprob: -7.87062406539917

Token 1095: ' la' (ID: 557)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.2682879865169525
    2. ' ' → logprob: -2.5182878971099854
    3. ' H' → logprob: -3.2682878971099854
    4. ' la' → logprob: -3.3932878971099854
    5. ' le' → logprob: -3.8932878971099854
    6. ' ' → logprob: -4.1432881355285645
    7. '1' → logprob: -4.2682881355285645
    8. 'l' → logprob: -4.3932881355285645
    9. ' (' → logprob: -4.7682881355285645
    10. ' de' → logprob: -5.8932881355285645

Token 1096: ' hauteur' (ID: 72987)
  Prédit: 'off'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'off' → logprob: -0.5079821348190308
    2. ' H' → logprob: -1.7579821348190308
    3. 'H' → logprob: -2.1329822540283203
    4. ' off' → logprob: -2.5079822540283203
    5. ' ' → logprob: -4.25798225402832
    6. '1' → logprob: -5.75798225402832
    7. 'i' → logprob: -6.00798225402832
    8. ' i' → logprob: -7.13298225402832
    9. ' valeur' → logprob: -7.13298225402832
    10. ' value' → logprob: -7.50798225402832

Token 1097: ' actuelle' (ID: 104951)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6890468001365662
    2. 'de' → logprob: -1.689046859741211
    3. ' H' → logprob: -2.064046859741211
    4. 'H' → logprob: -2.189046859741211
    5. 'd' → logprob: -3.814046859741211
    6. ' d' → logprob: -4.064046859741211
    7. ' du' → logprob: -4.564046859741211
    8. ' of' → logprob: -5.689046859741211
    9. ' -' → logprob: -5.814046859741211
    10. '-' → logprob: -6.064046859741211

Token 1098: ' (' (ID: 350)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.416007936000824
    2. ' -' → logprob: -2.6660079956054688
    3. '-' → logprob: -2.7910079956054688
    4. ',' → logprob: -2.7910079956054688
    5. ' (' → logprob: -3.2910079956054688
    6. ')' → logprob: -3.6660079956054688
    7. '[' → logprob: -3.9160079956054688
    8. '(i' → logprob: -4.541007995605469
    9. '   ' → logprob: -5.041007995605469
    10. ' ' → logprob: -5.041007995605469

Token 1099: 'avec' (ID: 64065)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.04931306093931198
    2. ')' → logprob: -3.7993130683898926
    3. ' H' → logprob: -4.799313068389893
    4. 'off' → logprob: -5.424313068389893
    5. '+' → logprob: -5.549313068389893
    6. '),' → logprob: -6.049313068389893
    7. '-' → logprob: -6.674313068389893
    8. 'i' → logprob: -6.799313068389893
    9. '1' → logprob: -6.924313068389893
    10. ' ' → logprob: -7.549313068389893

Token 1100: ' la' (ID: 557)
  Prédit: 'off'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'off' → logprob: -0.07248067110776901
    2. '1' → logprob: -3.4474806785583496
    3. ' off' → logprob: -3.4474806785583496
    4. '+' → logprob: -6.32248067855835
    5. '-off' → logprob: -6.82248067855835
    6. '-' → logprob: -7.57248067855835
    7. 'offset' → logprob: -7.82248067855835
    8. ')' → logprob: -8.072480201721191
    9. '0' → logprob: -8.072480201721191
    10. 'le' → logprob: -8.447480201721191

Token 1101: ' correction' (ID: 43745)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0399539470672607
    2. ' +' → logprob: -1.4149539470672607
    3. ' ' → logprob: -2.2899539470672607
    4. '1' → logprob: -2.4149539470672607
    5. ')' → logprob: -3.0399539470672607
    6. 'off' → logprob: -3.0399539470672607
    7. ' off' → logprob: -3.6649539470672607
    8. ' )' → logprob: -3.7899539470672607
    9. ' plus' → logprob: -4.66495418548584
    10. '`' → logprob: -5.16495418548584

Token 1102: ' '' (ID: 461)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.0217068195343018
    2. ')' → logprob: -1.7717068195343018
    3. 'off' → logprob: -1.8967068195343018
    4. 'd' → logprob: -2.3967068195343018
    5. ' de' → logprob: -2.8967068195343018
    6. '+' → logprob: -2.8967068195343018
    7. ' d' → logprob: -3.5217068195343018
    8. '),' → logprob: -3.7717068195343018
    9. '-' → logprob: -4.146706581115723
    10. '`' → logprob: -4.896706581115723

Token 1103: 'off' (ID: 2864)
  Prédit: 'off'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'off' → logprob: -0.06527362018823624
    2. ' off' → logprob: -3.6902735233306885
    3. '+' → logprob: -4.190273761749268
    4. '-' → logprob: -4.315273761749268
    5. '1' → logprob: -5.190273761749268
    6. '-off' → logprob: -6.690273761749268
    7. '')' → logprob: -7.190273761749268
    8. ' -' → logprob: -7.440273761749268
    9. ')' → logprob: -7.690273761749268
    10. ' +' → logprob: -8.56527328491211

Token 1104: ''),
' (ID: 7239)
  Prédit: ''),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''),' → logprob: -0.12314053624868393
    2. '),' → logprob: -3.248140573501587
    3. '+' → logprob: -3.748140573501587
    4. '-' → logprob: -3.998140573501587
    5. ')' → logprob: -4.623140335083008
    6. ' -' → logprob: -4.623140335083008
    7. ' +' → logprob: -5.123140335083008
    8. '')' → logprob: -5.248140335083008
    9. ')'),' → logprob: -6.498140335083008
    10. '   ' → logprob: -7.373140335083008

Token 1105: '           ' (ID: 352)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4395866096019745
    2. ' :' → logprob: -2.189586639404297
    3. ' ' → logprob: -2.814586639404297
    4. ':' → logprob: -2.939586639404297
    5. '           ' → logprob: -3.189586639404297
    6. '\n' → logprob: -4.064586639404297
    7. '               ' → logprob: -4.314586639404297
    8. '    ' → logprob: -4.564586639404297
    9. ' 
' → logprob: -5.064586639404297
    10. ' \' → logprob: -5.189586639404297

Token 1106: ' #' (ID: 1069)
  Prédit: 'off'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'off' → logprob: -0.042059656232595444
    2. ' off' → logprob: -3.4170596599578857
    3. '   ' → logprob: -5.542059421539307
    4. '       ' → logprob: -5.792059421539307
    5. '           ' → logprob: -7.042059421539307
    6. 'i' → logprob: -9.167059898376465
    7. '    ' → logprob: -9.292059898376465
    8. ' ' → logprob: -9.792059898376465
    9. '	' → logprob: -10.667059898376465
    10. ' ' → logprob: -10.792059898376465

Token 1107: ' on' (ID: 402)
  Prédit: 'off'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'off' → logprob: -0.979221761226654
    2. 'on' → logprob: -1.4792218208312988
    3. ' on' → logprob: -1.7292218208312988
    4. ' off' → logprob: -2.229221820831299
    5. 'H' → logprob: -2.979221820831299
    6. ' H' → logprob: -3.479221820831299
    7. '           ' → logprob: -4.229221820831299
    8. '   ' → logprob: -4.854221820831299
    9. '       ' → logprob: -5.479221820831299
    10. ' ' → logprob: -7.104221820831299

Token 1108: ' pourrait' (ID: 39622)
  Prédit: ' peut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.3850167989730835
    2. 'pe' → logprob: -1.2600167989730835
    3. 'pour' → logprob: -4.510016918182373
    4. 'continue' → logprob: -5.010016918182373
    5. ' peux' → logprob: -5.385016918182373
    6. ' ' → logprob: -5.510016918182373
    7. 'p' → logprob: -6.510016918182373
    8. ' continue' → logprob: -6.885016918182373
    9. ' pour' → logprob: -7.010016918182373
    10. ' can' → logprob: -7.135016918182373

Token 1109: ' égal' (ID: 15059)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.6594378352165222
    2. 'desc' → logprob: -2.034437894821167
    3. 'faire' → logprob: -2.534437894821167
    4. 'ré' → logprob: -3.159437894821167
    5. 'dé' → logprob: -3.284437894821167
    6. 'r' → logprob: -3.284437894821167
    7. 'aj' → logprob: -3.534437894821167
    8. 'effect' → logprob: -4.284437656402588
    9. 'corr' → logprob: -4.284437656402588
    10. ' continuer' → logprob: -4.409437656402588

Token 1110: 'er' (ID: 259)
  Prédit: 'iser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.6394941210746765
    2. 'er' → logprob: -0.7644941210746765
    3. 'al' → logprob: -6.014493942260742
    4. 'aler' → logprob: -6.889493942260742
    5. 'izer' → logprob: -7.139493942260742
    6. 'ale' → logprob: -7.889493942260742
    7. 'e' → logprob: -7.889493942260742
    8. 'uer' → logprob: -8.014493942260742
    9. 'a' → logprob: -8.389493942260742
    10. 'uler' → logprob: -8.639493942260742

Token 1111: ' la' (ID: 557)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0018033420201390982
    2. ' H' → logprob: -6.376803398132324
    3. 'i' → logprob: -9.251803398132324
    4. '<|end|>' → logprob: -13.251803398132324
    5. ' i' → logprob: -13.751803398132324
    6. '(H' → logprob: -14.126803398132324
    7. 'the' → logprob: -14.876803398132324
    8. ' ' → logprob: -15.501803398132324
    9. ')' → logprob: -15.751803398132324
    10. '[i' → logprob: -16.001802444458008

Token 1112: ' hauteur' (ID: 72987)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.3545592129230499
    2. 'ha' → logprob: -1.3545591831207275
    3. ' hauteur' → logprob: -3.4795591831207275
    4. 'pr' → logprob: -5.479559421539307
    5. 'Ha' → logprob: -6.479559421539307
    6. 'height' → logprob: -6.604559421539307
    7. 'previous' → logprob: -6.854559421539307
    8. 'val' → logprob: -7.604559421539307
    9. 'h' → logprob: -8.354558944702148
    10. ' H' → logprob: -8.604558944702148

Token 1113: ' du' (ID: 1462)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.4305139183998108
    2. '[' → logprob: -1.305513858795166
    3. '[i' → logprob: -3.055513858795166
    4. 'de' → logprob: -4.430513858795166
    5. ' de' → logprob: -4.805513858795166
    6. ' H' → logprob: -5.555513858795166
    7. 'of' → logprob: -6.305513858795166
    8. '(H' → logprob: -6.805513858795166
    9. ' [' → logprob: -7.180513858795166
    10. 'd' → logprob: -7.305513858795166

Token 1114: ' bloc' (ID: 51218)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.022200066596269608
    2. 'bloc' → logprob: -4.022200107574463
    3. 'i' → logprob: -5.897200107574463
    4. ' bloc' → logprob: -7.397200107574463
    5. 'block' → logprob: -7.897200107574463
    6. ' H' → logprob: -8.897199630737305
    7. '[i' → logprob: -9.397199630737305
    8. 'blo' → logprob: -11.022199630737305
    9. 'b' → logprob: -11.272199630737305
    10. ' i' → logprob: -11.522199630737305

Token 1115: ' précédent' (ID: 128462)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.12339535355567932
    2. 'H' → logprob: -2.4983954429626465
    3. 'i' → logprob: -3.4983954429626465
    4. ' précédent' → logprob: -6.6233954429626465
    5. '   ' → logprob: -6.7483954429626465
    6. '[' → logprob: -7.6233954429626465
    7. 'preced' → logprob: -8.623394966125488
    8. ' H' → logprob: -8.998394966125488
    9. ' i' → logprob: -9.373394966125488
    10. '(i' → logprob: -9.498394966125488

Token 1116: '.' (ID: 13)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010255803354084492
    2. ':
' → logprob: -5.510255813598633
    3. ' :' → logprob: -5.885255813598633
    4. '.' → logprob: -6.135255813598633
    5. '           ' → logprob: -7.885255813598633
    6. ' (' → logprob: -9.135255813598633
    7. ')' → logprob: -9.135255813598633
    8. ',' → logprob: -9.385255813598633
    9. ' :
' → logprob: -9.760255813598633
    10. '+' → logprob: -9.885255813598633

Token 1117: ' Cela' (ID: 44403)
  Prédit: 'off'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'off' → logprob: -0.11922696977853775
    2. ' off' → logprob: -2.6192269325256348
    3. '\n' → logprob: -4.244226932525635
    4. '
' → logprob: -4.744226932525635
    5. ' 
' → logprob: -5.119226932525635
    6. '           ' → logprob: -5.619226932525635
    7. '       ' → logprob: -6.119226932525635
    8. '\
' → logprob: -6.244226932525635
    9. '   ' → logprob: -7.119226932525635
    10. '            
' → logprob: -7.869226932525635

Token 1118: ' signifie' (ID: 81149)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.1449981927871704
    2. ':' → logprob: -1.3949981927871704
    3. ':
' → logprob: -1.8949981927871704
    4. ' off' → logprob: -2.894998073577881
    5. 'off' → logprob: -3.519998073577881
    6. '           ' → logprob: -3.519998073577881
    7. '
' → logprob: -3.769998073577881
    8. ' :
' → logprob: -3.769998073577881
    9. ' ' → logprob: -3.894998073577881
    10. '\t' → logprob: -4.019998073577881

Token 1119: ' qu' (ID: 474)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.743259608745575
    2. ' que' → logprob: -1.2432596683502197
    3. ' that' → logprob: -3.2432596683502197
    4. ''' → logprob: -3.2432596683502197
    5. '    ' → logprob: -3.6182596683502197
    6. ' off' → logprob: -3.6182596683502197
    7. '"' → logprob: -4.243259429931641
    8. ' ' → logprob: -4.243259429931641
    9. 'off' → logprob: -4.743259429931641
    10. ' 
' → logprob: -5.118259429931641

Token 1120: ''on' (ID: 25812)
  Prédit: ''on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''on' → logprob: -0.9895157217979431
    2. ' off' → logprob: -1.114515781402588
    3. ' on' → logprob: -1.739515781402588
    4. ''' → logprob: -3.739515781402588
    5. ''off' → logprob: -3.739515781402588
    6. 'on' → logprob: -3.864515781402588
    7. 'off' → logprob: -4.114515781402588
    8. ''il' → logprob: -4.239515781402588
    9. '   ' → logprob: -4.489515781402588
    10. '       ' → logprob: -5.614515781402588

Token 1121: ' est' (ID: 893)
  Prédit: 'off'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'off' → logprob: -0.6399554014205933
    2. ' off' → logprob: -1.6399554014205933
    3. '       ' → logprob: -1.8899554014205933
    4. '           ' → logprob: -3.514955520629883
    5. ' continue' → logprob: -4.014955520629883
    6. '   ' → logprob: -4.139955520629883
    7. ' peut' → logprob: -4.264955520629883
    8. ' ' → logprob: -4.889955520629883
    9. 'continue' → logprob: -5.139955520629883
    10. ' peux' → logprob: -5.639955520629883

Token 1122: ' autor' (ID: 13432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07802439481019974
    2. '\t' → logprob: -4.328024387359619
    3. ' \' → logprob: -4.828024387359619
    4. '\n' → logprob: -5.078024387359619
    5. '    ' → logprob: -5.453024387359619
    6. ' i' → logprob: -5.703024387359619
    7. ' =' → logprob: -6.078024387359619
    8. ' dans' → logprob: -6.078024387359619
    9. ' ' → logprob: -6.078024387359619
    10. ' :' → logprob: -6.203024387359619

Token 1123: 'isé' (ID: 30065)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.0851992592215538
    2. 'isé' → logprob: -3.2101993560791016
    3. 'és' → logprob: -4.085199356079102
    4. 'à' → logprob: -4.210199356079102
    5. 'ée' → logprob: -5.835199356079102
    6. ' à' → logprob: -5.835199356079102
    7. 'e' → logprob: -6.460199356079102
    8. 'isés' → logprob: -7.710199356079102
    9. ' to' → logprob: -7.960199356079102
    10. ''à' → logprob: -8.085199356079102

Token 1124: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.15901190042495728
    2. ' to' → logprob: -2.7840118408203125
    3. ' a' → logprob: -3.6590118408203125
    4. 'à' → logprob: -3.9090118408203125
    5. '           ' → logprob: -4.7840118408203125
    6. '       ' → logprob: -4.7840118408203125
    7. '<|end|>' → logprob: -5.5340118408203125
    8. '   ' → logprob: -6.0340118408203125
    9. 'a' → logprob: -6.1590118408203125
    10. '    ' → logprob: -6.1590118408203125

Token 1125: ' ab' (ID: 692)
  Prédit: 'off'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'off' → logprob: -0.3431851267814636
    2. 'augment' → logprob: -2.0931851863861084
    3. 'contin' → logprob: -3.7181851863861084
    4. 'desc' → logprob: -3.8431851863861084
    5. ' off' → logprob: -3.9681851863861084
    6. 'dé' → logprob: -4.093184947967529
    7. 'increment' → logprob: -4.468184947967529
    8. 'd' → logprob: -4.593184947967529
    9. 'aj' → logprob: -4.718184947967529
    10. 'b' → logprob: -4.968184947967529

Token 1126: 'aisser' (ID: 130476)
  Prédit: 'aisser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aisser' → logprob: -0.0008273754501715302
    2. 'b' → logprob: -7.875827312469482
    3. '```' → logprob: -8.75082778930664
    4. 'a' → logprob: -8.87582778930664
    5. '#' → logprob: -11.00082778930664
    6. 'aiser' → logprob: -11.25082778930664
    7. '|' → logprob: -11.37582778930664
    8. '</' → logprob: -11.37582778930664
    9. 'att' → logprob: -11.62582778930664
    10. 'aisse' → logprob: -11.62582778930664

Token 1127: ' une' (ID: 2463)
  Prédit: ' H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.34545934200286865
    2. 'H' → logprob: -1.9704593420028687
    3. '1' → logprob: -2.470459461212158
    4. ' ' → logprob: -3.345459461212158
    5. ''' → logprob: -5.095459461212158
    6. ' off' → logprob: -5.345459461212158
    7. 'i' → logprob: -5.595459461212158
    8. '<|end|>' → logprob: -5.845459461212158
    9. 'off' → logprob: -6.095459461212158
    10. '\n' → logprob: -6.220459461212158

Token 1128: ' fois' (ID: 14697)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1129: ' la' (ID: 557)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7139865159988403
    2. ' H' → logprob: -1.4639865159988403
    3. ' ' → logprob: -1.8389865159988403
    4. 'i' → logprob: -3.588986396789551
    5. '\n' → logprob: -3.588986396789551
    6. ' \' → logprob: -3.713986396789551
    7. ' '' → logprob: -5.088986396789551
    8. ' ' → logprob: -5.213986396789551
    9. ' de' → logprob: -5.588986396789551
    10. '_' → logprob: -5.838986396789551

Token 1130: ' hauteur' (ID: 72987)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -1.1532477140426636
    2. ' H' → logprob: -1.1532477140426636
    3. ' hauteur' → logprob: -2.278247833251953
    4. 'ha' → logprob: -2.528247833251953
    5. 'i' → logprob: -2.778247833251953
    6. ' previous' → logprob: -3.778247833251953
    7. 'previous' → logprob: -3.903247833251953
    8. '\n' → logprob: -4.653247833251953
    9. 'block' → logprob: -4.653247833251953
    10. ' ' → logprob: -5.153247833251953

Token 1131: ' du' (ID: 1462)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.0676352977752686
    2. '   ' → logprob: -1.4426352977752686
    3. '[i' → logprob: -2.1926352977752686
    4. ' du' → logprob: -2.8176352977752686
    5. 'preced' → logprob: -3.3176352977752686
    6. ' précédente' → logprob: -3.9426352977752686
    7. ' H' → logprob: -4.067635536193848
    8. 'i' → logprob: -4.067635536193848
    9. 'd' → logprob: -4.192635536193848
    10. ' d' → logprob: -4.192635536193848

Token 1132: ' bloc' (ID: 51218)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.13918356597423553
    2. 'bloc' → logprob: -2.139183521270752
    3. ' bloc' → logprob: -5.139183521270752
    4. ' H' → logprob: -6.014183521270752
    5. 'block' → logprob: -6.889183521270752
    6. 'i' → logprob: -7.639183521270752
    7. 'bl' → logprob: -7.764183521270752
    8. 'previous' → logprob: -8.01418399810791
    9. 'preced' → logprob: -8.13918399810791
    10. 'prev' → logprob: -8.13918399810791

Token 1133: ' précédent' (ID: 128462)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.7128066420555115
    2. 'pr' → logprob: -1.2128067016601562
    3. 'i' → logprob: -2.2128067016601562
    4. ' précédent' → logprob: -3.0878067016601562
    5. 'H' → logprob: -3.7128067016601562
    6. '   ' → logprob: -4.337806701660156
    7. 'prev' → logprob: -4.962806701660156
    8. '[' → logprob: -5.462806701660156
    9. 'pré' → logprob: -5.712806701660156
    10. 'preced' → logprob: -6.712806701660156

Token 1134: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2719046175479889
    2. '[i' → logprob: -2.271904706954956
    3. ' :' → logprob: -3.271904706954956
    4. '[' → logprob: -3.521904706954956
    5. ' ' → logprob: -4.146904468536377
    6. ':
' → logprob: -4.271904468536377
    7. '+' → logprob: -5.146904468536377
    8. '.' → logprob: -5.521904468536377
    9. ' :
' → logprob: -5.646904468536377
    10. '=' → logprob: -5.896904468536377

Token 1135: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2842308680992573e-05
    2. ' ' → logprob: -11.375022888183594
    3. '```' → logprob: -12.250022888183594
    4. '<|end|>' → logprob: -12.875022888183594
    5. 'H' → logprob: -13.875022888183594
    6. 'un' → logprob: -14.375022888183594
    7. ' H' → logprob: -14.750022888183594
    8. 'le' → logprob: -15.250022888183594
    9. '`' → logprob: -15.250022888183594
    10. '-' → logprob: -15.500022888183594

Token 1136: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023846338444855064
    2. 'un' → logprob: -8.500238418579102
    3. 'une' → logprob: -10.750238418579102
    4. 'one' → logprob: -12.500238418579102
    5. '```' → logprob: -12.500238418579102
    6. 'plus' → logprob: -13.000238418579102
    7. ' ' → logprob: -14.375238418579102
    8. 'off' → logprob: -14.750238418579102
    9. '
' → logprob: -14.875238418579102
    10. '#' → logprob: -15.375238418579102

Token 1137: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8343241214752197
    2. '.' → logprob: -1.2093241214752197
    3. ',' → logprob: -2.0843241214752197
    4. '<|end|>' → logprob: -3.5843241214752197
    5. ' :' → logprob: -3.8343241214752197
    6. '           ' → logprob: -3.9593241214752197
    7. '       ' → logprob: -4.209323883056641
    8. '   ' → logprob: -4.584323883056641
    9. ' ' → logprob: -4.834323883056641
    10. ' ' → logprob: -5.084323883056641

Token 1138: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1608380675315857
    2. '       ' → logprob: -2.9108381271362305
    3. '\n' → logprob: -3.2858381271362305
    4. 'off' → logprob: -3.9108381271362305
    5. '               ' → logprob: -4.2858381271362305
    6. '            
' → logprob: -5.4108381271362305
    7. ' 
' → logprob: -5.6608381271362305
    8. '   ' → logprob: -6.0358381271362305
    9. ' ' → logprob: -6.2858381271362305
    10. '		' → logprob: -6.4108381271362305

Token 1139: ' off' (ID: 1277)
  Prédit: 'off'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'off' (adapté à ' off') → logprob: -0.0006490522064268589
    2. '       ' → logprob: -7.5006489753723145
    3. '           ' → logprob: -9.500649452209473
    4. '   ' → logprob: -11.000649452209473
    5. ' off' → logprob: -12.375649452209473
    6. '
' → logprob: -15.750649452209473
    7. '               ' → logprob: -16.250648498535156
    8. 'offs' → logprob: -17.125648498535156
    9. '```' → logprob: -17.375648498535156
    10. '            
' → logprob: -17.375648498535156

Token 1140: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6841103434562683
    2. ' =' → logprob: -1.434110403060913
    3. ' +=' → logprob: -1.934110403060913
    4. '+=' → logprob: -2.184110403060913
    5. '	' → logprob: -14.434110641479492
    6. '   ' → logprob: -14.559110641479492
    7. ' ' → logprob: -14.809110641479492
    8. '1' → logprob: -14.934110641479492
    9. ' ' → logprob: -14.934110641479492
    10. '＝' → logprob: -15.184110641479492

Token 1141: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00825604610145092
    2. 'H' → logprob: -4.883255958557129
    3. 'off' → logprob: -7.633255958557129
    4. '(H' → logprob: -9.758255958557129
    5. '   ' → logprob: -10.008255958557129
    6. 'max' → logprob: -11.008255958557129
    7. ' ' → logprob: -11.133255958557129
    8. '0' → logprob: -11.758255958557129
    9. ' H' → logprob: -12.008255958557129
    10. 'offs' → logprob: -13.008255958557129

Token 1142: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0037449754308909178
    2. 'H' → logprob: -5.628745079040527
    3. '(H' → logprob: -10.128745079040527
    4. 'off' → logprob: -10.378745079040527
    5. '   ' → logprob: -11.003745079040527
    6. ' ' → logprob: -11.003745079040527
    7. 'max' → logprob: -11.128745079040527
    8. '0' → logprob: -11.378745079040527
    9. ' H' → logprob: -12.753745079040527
    10. '(' → logprob: -13.253745079040527

Token 1143: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1144: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21085412800312042
    2. '<|end|>' → logprob: -2.5858540534973145
    3. 'continue' → logprob: -3.4608540534973145
    4. '   ' → logprob: -3.7108540534973145
    5. ' ' → logprob: -4.0858540534973145
    6. '	continue' → logprob: -4.5858540534973145
    7. '    ' → logprob: -5.3358540534973145
    8. '           ' → logprob: -5.4608540534973145
    9. 'else' → logprob: -5.4608540534973145
    10. ' continue' → logprob: -5.7108540534973145

Token 1145: ' On' (ID: 2160)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.39471718668937683
    2. 'else' → logprob: -2.019717216491699
    3. '<|end|>' → logprob: -2.894717216491699
    4. ' continue' → logprob: -3.144717216491699
    5. '	continue' → logprob: -3.519717216491699
    6. ' else' → logprob: -3.519717216491699
    7. '       ' → logprob: -4.644717216491699
    8. '1' → logprob: -5.019717216491699
    9. '   ' → logprob: -5.019717216491699
    10. '0' → logprob: -5.144717216491699

Token 1146: ' indique' (ID: 97324)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.39324840903282166
    2. '=' → logprob: -1.643248438835144
    3. '+=' → logprob: -2.5182483196258545
    4. ' continue' → logprob: -3.8932483196258545
    5. '#' → logprob: -4.268248558044434
    6. '1' → logprob: -5.393248558044434
    7. '<|end|>' → logprob: -5.393248558044434
    8. 'contin' → logprob: -6.143248558044434
    9. '+' → logprob: -7.143248558044434
    10. '0' → logprob: -7.143248558044434

Token 1147: ' qu' (ID: 474)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000526938121765852
    2. ' que' → logprob: -8.500527381896973
    3. 'que' → logprob: -8.625527381896973
    4. ' ' → logprob: -9.125527381896973
    5. '```' → logprob: -11.500527381896973
    6. 'une' → logprob: -11.875527381896973
    7. 'l' → logprob: -12.500527381896973
    8. ' that' → logprob: -12.500527381896973
    9. 'that' → logprob: -12.625527381896973
    10. '   ' → logprob: -13.375527381896973

Token 1148: ''une' (ID: 13337)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -1.1686006784439087
    2. ' une' → logprob: -1.6686006784439087
    3. ' cette' → logprob: -1.7936006784439087
    4. '1' → logprob: -2.543600559234619
    5. ' la' → logprob: -3.293600559234619
    6. ' ' → logprob: -3.418600559234619
    7. 'c' → logprob: -3.418600559234619
    8. ' a' → logprob: -3.543600559234619
    9. ''une' → logprob: -3.668600559234619
    10. 'a' → logprob: -3.793600559234619

Token 1149: ' modification' (ID: 29847)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.09514813125133514
    2. 'cor' → logprob: -2.7201480865478516
    3. ' modification' → logprob: -4.220148086547852
    4. ' mod' → logprob: -6.220148086547852
    5. ' correction' → logprob: -6.470148086547852
    6. 'dé' → logprob: -6.470148086547852
    7. ' unité' → logprob: -6.970148086547852
    8. '1' → logprob: -7.345148086547852
    9. 'ré' → logprob: -7.470148086547852
    10. 'd' → logprob: -7.845148086547852

Token 1150: '/c' (ID: 4308)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3168715834617615
    2. ' has' → logprob: -1.9418716430664062
    3. '<|end|>' → logprob: -2.5668716430664062
    4. 'a' → logprob: -3.1918716430664062
    5. 'has' → logprob: -5.191871643066406
    6. ' est' → logprob: -6.066871643066406
    7. 's' → logprob: -7.566871643066406
    8. ' was' → logprob: -8.566871643066406
    9. ' effectu' → logprob: -8.566871643066406
    10. ' have' → logprob: -8.816871643066406

Token 1151: 'orrection' (ID: 146464)
  Prédit: 'orrection'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orrection' → logprob: -0.00014716439181938767
    2. 'orrect' → logprob: -9.250146865844727
    3. 'orre' → logprob: -10.375146865844727
    4. 'orr' → logprob: -12.000146865844727
    5. 'or' → logprob: -12.875146865844727
    6. 'ont' → logprob: -13.125146865844727
    7. '```' → logprob: -13.250146865844727
    8. 'ré' → logprob: -13.625146865844727
    9. 'on' → logprob: -13.750146865844727
    10. 'orrelation' → logprob: -14.375146865844727

Token 1152: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7922809720039368
    2. ' has' → logprob: -1.042280912399292
    3. 'a' → logprob: -1.792280912399292
    4. ' est' → logprob: -4.042281150817871
    5. 'has' → logprob: -5.542281150817871
    6. '<|end|>' → logprob: -5.667281150817871
    7. ' is' → logprob: -6.542281150817871
    8. ' effectu' → logprob: -8.167281150817871
    9. ' was' → logprob: -8.417281150817871
    10. 'est' → logprob: -8.792281150817871

Token 1153: ' été' (ID: 9799)
  Prédit: ' été'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' été' → logprob: -0.3081585466861725
    2. 'été' → logprob: -1.55815851688385
    3. ' been' → logprob: -3.6831586360931396
    4. 'been' → logprob: -4.4331583976745605
    5. '<|end|>' → logprob: -5.5581583976745605
    6. ' a' → logprob: -5.6831583976745605
    7. ' effectu' → logprob: -6.9331583976745605
    8. ' ' → logprob: -7.0581583976745605
    9. 'faite' → logprob: -7.1831583976745605
    10. '1' → logprob: -7.4331583976745605

Token 1154: ' faite' (ID: 78359)
  Prédit: 'faite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faite' → logprob: -0.10149819403886795
    2. 'ap' → logprob: -2.9764981269836426
    3. 'effect' → logprob: -3.4764981269836426
    4. 'fait' → logprob: -4.726498126983643
    5. ' faite' → logprob: -6.226498126983643
    6. 'prise' → logprob: -6.601498126983643
    7. ' effectu' → logprob: -7.101498126983643
    8. 'aj' → logprob: -7.726498126983643
    9. ' apport' → logprob: -8.4764986038208
    10. '```' → logprob: -9.1014986038208

Token 1155: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1156: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.5514717102050781
    2. ' la' → logprob: -1.6764717102050781
    3. '1' → logprob: -2.051471710205078
    4. 'le' → logprob: -3.176471710205078
    5. 'the' → logprob: -3.926471710205078
    6. ' cette' → logprob: -4.301471710205078
    7. 'this' → logprob: -4.426471710205078
    8. 'l' → logprob: -5.551471710205078
    9. ' this' → logprob: -5.676471710205078
    10. ' the' → logprob: -5.926471710205078

Token 1157: ' prochaine' (ID: 78876)
  Prédit: ' prochaine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prochaine' → logprob: -0.930770218372345
    2. 'pro' → logprob: -1.5557701587677002
    3. 'suite' → logprob: -1.5557701587677002
    4. ' boucle' → logprob: -2.9307701587677
    5. 'ligne' → logprob: -3.1807701587677
    6. 'bou' → logprob: -3.3057701587677
    7. 'next' → logprob: -4.180770397186279
    8. ' suite' → logprob: -5.055770397186279
    9. ' ligne' → logprob: -6.055770397186279
    10. 'i' → logprob: -6.180770397186279

Token 1158: ' it' (ID: 480)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.0062353298999369144
    2. 'iteration' → logprob: -5.756235122680664
    3. ' it' → logprob: -5.881235122680664
    4. 'fois' → logprob: -9.506235122680664
    5. 'itera' → logprob: -10.006235122680664
    6. 'iter' → logprob: -10.756235122680664
    7. ' boucle' → logprob: -10.881235122680664
    8. ' ' → logprob: -11.381235122680664
    9. '#' → logprob: -11.506235122680664
    10. '   ' → logprob: -11.506235122680664

Token 1159: 'ération' (ID: 24977)
  Prédit: 'ération'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.0004610551695805043
    2. 'ration' → logprob: -8.000460624694824
    3. 'étation' → logprob: -10.250460624694824
    4. 't' → logprob: -10.375460624694824
    5. 'er' → logprob: -10.625460624694824
    6. 'érations' → logprob: -11.875460624694824
    7. 'ér' → logprob: -12.125460624694824
    8. 'tration' → logprob: -12.125460624694824
    9. 'ation' → logprob: -12.375460624694824
    10. 'é' → logprob: -12.625460624694824

Token 1160: '.

' (ID: 364)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1161: '       ' (ID: 309)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.48142382502555847
    2. 'continue' → logprob: -1.4814238548278809
    3. '       ' → logprob: -2.231423854827881
    4. '   ' → logprob: -3.481423854827881
    5. ' else' → logprob: -5.231423854827881
    6. ' continue' → logprob: -5.356423854827881
    7. '	continue' → logprob: -6.106423854827881
    8. '<|end|>' → logprob: -6.356423854827881
    9. '           ' → logprob: -7.606423854827881
    10. '.' → logprob: -7.606423854827881

Token 1162: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.25378772616386414
    2. '       ' → logprob: -1.5037877559661865
    3. '   ' → logprob: -6.378787517547607
    4. ' else' → logprob: -9.503787994384766
    5. 'elif' → logprob: -9.503787994384766
    6. '```' → logprob: -12.128787994384766
    7. 'continue' → logprob: -13.628787994384766
    8. '           ' → logprob: -13.753787994384766
    9. '	else' → logprob: -14.753787994384766
    10. '...' → logprob: -15.003787994384766

Token 1163: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.101911261677742
    2. '       ' → logprob: -2.4769113063812256
    3. 'print' → logprob: -5.2269110679626465
    4. ':' → logprob: -5.3519110679626465
    5. ':
' → logprob: -6.7269110679626465
    6. ' print' → logprob: -7.7269110679626465
    7. '   ' → logprob: -8.101911544799805
    8. '```' → logprob: -8.476911544799805
    9. '
' → logprob: -8.976911544799805
    10. '	       ' → logprob: -9.101911544799805

Token 1164: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3154999613761902
    2. 'print' → logprob: -1.315500020980835
    3. '   ' → logprob: -6.815499782562256
    4. '           ' → logprob: -7.065499782562256
    5. '```' → logprob: -8.940500259399414
    6. 'return' → logprob: -9.190500259399414
    7. ' print' → logprob: -10.440500259399414
    8. 'break' → logprob: -11.815500259399414
    9. '	print' → logprob: -12.065500259399414
    10. '        
' → logprob: -12.565500259399414

Token 1165: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.013354682363569736
    2. '   ' → logprob: -4.763354778289795
    3. '       ' → logprob: -5.638354778289795
    4. '```' → logprob: -7.388354778289795
    5. 'return' → logprob: -7.888354778289795
    6. '           ' → logprob: -8.763354301452637
    7. 'break' → logprob: -12.263354301452637
    8. ' print' → logprob: -12.388354301452637
    9. '	print' → logprob: -12.388354301452637
    10. '``' → logprob: -12.638354301452637

Token 1166: ' Si' (ID: 7832)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03960674628615379
    2. 'return' → logprob: -3.914606809616089
    3. '           ' → logprob: -4.66460657119751
    4. '       ' → logprob: -5.03960657119751
    5. 'break' → logprob: -6.28960657119751
    6. '   ' → logprob: -7.03960657119751
    7. '```' → logprob: -8.414607048034668
    8. '
' → logprob: -11.664607048034668
    9. ' print' → logprob: -11.664607048034668
    10. 'raise' → logprob: -12.664607048034668

Token 1167: ' aucune' (ID: 51173)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1330029964447021
    2. ' return' → logprob: -1.8830029964447021
    3. ' ' → logprob: -2.008002996444702
    4. ' 
' → logprob: -2.508002996444702
    5. '```' → logprob: -2.633002996444702
    6. '   ' → logprob: -3.133002996444702
    7. '           ' → logprob: -3.133002996444702
    8. '    ' → logprob: -3.383002996444702
    9. 'return' → logprob: -3.633002996444702
    10. ' False' → logprob: -4.258003234863281

Token 1168: ' des' (ID: 731)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.6893329620361328
    2. 'return' → logprob: -1.6893329620361328
    3. '  
' → logprob: -1.8143329620361328
    4. ' return' → logprob: -1.9393329620361328
    5. '    
' → logprob: -2.439332962036133
    6. '
' → logprob: -3.189332962036133
    7. '```' → logprob: -3.314332962036133
    8. '\n' → logprob: -3.439332962036133
    9. ' 
' → logprob: -4.314332962036133
    10. '            
' → logprob: -4.314332962036133

Token 1169: ' deux' (ID: 10301)
  Prédit: 'conditions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conditions' → logprob: -0.7399384379386902
    2. ' conditions' → logprob: -1.489938497543335
    3. ' ' → logprob: -1.864938497543335
    4. 'actions' → logprob: -3.364938497543335
    5. 'de' → logprob: -3.614938497543335
    6. '   ' → logprob: -4.239938259124756
    7. ':' → logprob: -4.364938259124756
    8. ' deux' → logprob: -4.739938259124756
    9. ' actions' → logprob: -4.989938259124756
    10. 'instructions' → logprob: -5.364938259124756

Token 1170: ' conditions' (ID: 6409)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04115444794297218
    2. 'conditions' → logprob: -4.041154384613037
    3. ' conditions' → logprob: -5.041154384613037
    4. ':
' → logprob: -5.916154384613037
    5. 'actions' → logprob: -6.041154384613037
    6. 'instructions' → logprob: -6.041154384613037
    7. ' ' → logprob: -6.416154384613037
    8. '   ' → logprob: -6.791154384613037
    9. 'options' → logprob: -6.916154384613037
    10. '```' → logprob: -7.041154384613037

Token 1171: ' précéd' (ID: 55435)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.836788535118103
    2. ':
' → logprob: -1.711788535118103
    3. '           ' → logprob: -2.3367886543273926
    4. '```' → logprob: -2.3367886543273926
    5. ' return' → logprob: -2.4617886543273926
    6. ' n' → logprob: -3.2117886543273926
    7. '       ' → logprob: -4.336788654327393
    8. 'n' → logprob: -4.336788654327393
    9. 'return' → logprob: -4.711788654327393
    10. ':return' → logprob: -4.836788654327393

Token 1172: 'entes' (ID: 5651)
  Prédit: 'entes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entes' → logprob: -0.0039087263867259026
    2. 'ents' → logprob: -6.503908634185791
    3. 'ent' → logprob: -6.628908634185791
    4. 'ente' → logprob: -7.628908634185791
    5. 'es' → logprob: -8.75390911102295
    6. 'est' → logprob: -9.12890911102295
    7. 'n' → logprob: -9.37890911102295
    8. 'ées' → logprob: -10.25390911102295
    9. '   ' → logprob: -10.75390911102295
    10. 'e' → logprob: -11.12890911102295

Token 1173: ' n' (ID: 297)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7063250541687012
    2. ':' → logprob: -1.3313250541687012
    3. ':
' → logprob: -1.4563250541687012
    4. '       ' → logprob: -5.206325054168701
    5. '               ' → logprob: -6.831325054168701
    6. ' :' → logprob: -7.206325054168701
    7. '```' → logprob: -7.706325054168701
    8. '   ' → logprob: -7.831325054168701
    9. ' :
' → logprob: -8.20632553100586
    10. 'return' → logprob: -8.45632553100586

Token 1174: ''est' (ID: 6616)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09897822886705399
    2. ':' → logprob: -2.973978281021118
    3. ':
' → logprob: -3.723978281021118
    4. '   ' → logprob: -5.473978042602539
    5. '       ' → logprob: -5.848978042602539
    6. 'break' → logprob: -6.223978042602539
    7. ' break' → logprob: -6.348978042602539
    8. ' n' → logprob: -6.348978042602539
    9. 'est' → logprob: -6.973978042602539
    10. ''est' → logprob: -6.973978042602539

Token 1175: ' rempl' (ID: 66326)
  Prédit: ' met'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' met' → logprob: -1.5976656675338745
    2. 's' → logprob: -2.097665786743164
    3. 'pas' → logprob: -2.097665786743164
    4. ' pas' → logprob: -2.222665786743164
    5. ' satisfied' → logprob: -2.222665786743164
    6. ' True' → logprob: -2.347665786743164
    7. 'True' → logprob: -2.597665786743164
    8. ':' → logprob: -3.472665786743164
    9. 'v' → logprob: -3.722665786743164
    10. 'met' → logprob: -3.847665786743164

Token 1176: 'ie' (ID: 396)
  Prédit: 'ue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.8819949626922607
    2. 'u' → logprob: -1.6319949626922607
    3. 'e' → logprob: -2.0069949626922607
    4. 'ait' → logprob: -2.1319949626922607
    5. ''est' → logprob: -4.25699520111084
    6. 'ève' → logprob: -4.50699520111084
    7. '           ' → logprob: -4.63199520111084
    8. 'ure' → logprob: -4.63199520111084
    9. 'ues' → logprob: -5.00699520111084
    10. 'i' → logprob: -5.00699520111084

Token 1177: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.027670573443174362
    2. '       ' → logprob: -4.402670383453369
    3. 'return' → logprob: -4.527670383453369
    4. ':' → logprob: -6.277670383453369
    5. ' return' → logprob: -6.777670383453369
    6. ':
' → logprob: -7.652670383453369
    7. '               ' → logprob: -8.027670860290527
    8. ':return' → logprob: -8.902670860290527
    9. 'raise' → logprob: -9.402670860290527
    10. 'break' → logprob: -10.402670860290527

Token 1178: ' alors' (ID: 17971)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.14364397525787354
    2. '       ' → logprob: -2.143643856048584
    3. 'return' → logprob: -4.768643856048584
    4. '           ' → logprob: -5.143643856048584
    5. '   ' → logprob: -6.768643856048584
    6. 'break' → logprob: -7.018643856048584
    7. ' print' → logprob: -9.518644332885742
    8. '```' → logprob: -9.893644332885742
    9. '	print' → logprob: -10.768644332885742
    10. 'off' → logprob: -11.768644332885742

Token 1179: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0029813870787620544
    2. '       ' → logprob: -6.377981185913086
    3. 'return' → logprob: -7.502981185913086
    4. '           ' → logprob: -7.502981185913086
    5. '   ' → logprob: -8.877981185913086
    6. '```' → logprob: -11.127981185913086
    7. ' print' → logprob: -11.502981185913086
    8. 'break' → logprob: -12.127981185913086
    9. '	print' → logprob: -13.252981185913086
    10. '
' → logprob: -13.502981185913086

Token 1180: ' sé' (ID: 7462)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.055522359907627106
    2. 'break' → logprob: -3.9305224418640137
    3. 'r' → logprob: -4.180522441864014
    4. 'return' → logprob: -4.555522441864014
    5. 'b' → logprob: -6.055522441864014
    6. 'raise' → logprob: -6.180522441864014
    7. 'p' → logprob: -6.430522441864014
    8. '```' → logprob: -6.930522441864014
    9. 'pr' → logprob: -7.555522441864014
    10. 'exit' → logprob: -8.555521965026855

Token 1181: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.00036299455678090453
    2. 'q' → logprob: -8.50036334991455
    3. 'quences' → logprob: -9.50036334991455
    4. 'qu' → logprob: -9.87536334991455
    5. 'QUENCE' → logprob: -11.50036334991455
    6. '#' → logprob: -11.62536334991455
    7. 'curité' → logprob: -13.00036334991455
    8. 'rie' → logprob: -13.12536334991455
    9. 'r' → logprob: -13.25036334991455
    10. 'quent' → logprob: -13.37536334991455

Token 1182: ' ne' (ID: 453)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.364962637424469
    2. 'print' → logprob: -1.4899625778198242
    3. 'n' → logprob: -3.364962577819824
    4. 'est' → logprob: -3.614962577819824
    5. ' print' → logprob: -4.864962577819824
    6. ' est' → logprob: -5.239962577819824
    7. 'return' → logprob: -6.239962577819824
    8. 's' → logprob: -7.739962577819824
    9. ' return' → logprob: -7.739962577819824
    10. 'break' → logprob: -8.114962577819824

Token 1183: ' respecte' (ID: 140483)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.14588020741939545
    2. 'est' → logprob: -2.7708802223205566
    3. 'respect' → logprob: -3.1458802223205566
    4. 'sera' → logprob: -4.395880222320557
    5. 's' → logprob: -4.520880222320557
    6. 'pour' → logprob: -5.770880222320557
    7. 'poss' → logprob: -6.895880222320557
    8. 'pas' → logprob: -7.645880222320557
    9. 'p' → logprob: -7.645880222320557
    10. ' peut' → logprob: -7.895880222320557

Token 1184: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.12626828253269196
    2. ' pas' → logprob: -2.3762683868408203
    3. 's' → logprob: -4.62626838684082
    4. ' la' → logprob: -5.12626838684082
    5. 'la' → logprob: -6.37626838684082
    6. 't' → logprob: -6.87626838684082
    7. 'le' → logprob: -7.00126838684082
    8. '   ' → logprob: -7.25126838684082
    9. 'nt' → logprob: -7.25126838684082
    10. 'pass' → logprob: -7.50126838684082

Token 1185: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0046800374984741
    2. 'print' → logprob: -1.3796800374984741
    3. '       ' → logprob: -2.3796801567077637
    4. ' la' → logprob: -3.1296801567077637
    5. 'le' → logprob: -3.5046801567077637
    6. '"' → logprob: -3.6296801567077637
    7. ' ' → logprob: -3.6296801567077637
    8. '           ' → logprob: -3.8796801567077637
    9. '```' → logprob: -3.8796801567077637
    10. 'the' → logprob: -4.129680156707764

Token 1186: ' contr' (ID: 6030)
  Prédit: 'condition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'condition' → logprob: -0.036938831210136414
    2. 'contr' → logprob: -4.536938667297363
    3. 'pro' → logprob: -4.786938667297363
    4. 'mont' → logprob: -5.161938667297363
    5. 'poss' → logprob: -5.161938667297363
    6. 'cond' → logprob: -5.911938667297363
    7. 'valid' → logprob: -7.661938667297363
    8. 's' → logprob: -8.161938667297363
    9. 'mon' → logprob: -8.286938667297363
    10. 'log' → logprob: -8.411938667297363

Token 1187: 'ainte' (ID: 48434)
  Prédit: 'ainte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ainte' → logprob: -0.002651751972734928
    2. 'aint' → logprob: -6.502651691436768
    3. 'a' → logprob: -6.877651691436768
    4. 'aints' → logprob: -9.627652168273926
    5. 'ain' → logprob: -11.002652168273926
    6. 'aine' → logprob: -12.252652168273926
    7. 'aise' → logprob: -12.252652168273926
    8. 'aites' → logprob: -12.502652168273926
    9. 'o' → logprob: -12.877652168273926
    10. 'ôle' → logprob: -13.127652168273926

Token 1188: ' exig' (ID: 30339)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.32541781663894653
    2. '       ' → logprob: -1.3254177570343018
    3. '   ' → logprob: -5.700417995452881
    4. 'return' → logprob: -6.075417995452881
    5. ' return' → logprob: -6.200417995452881
    6. '               ' → logprob: -6.825417995452881
    7. ':
' → logprob: -7.575417995452881
    8. '```' → logprob: -7.575417995452881
    9. '        
' → logprob: -7.825417995452881
    10. '            
' → logprob: -8.325417518615723

Token 1189: 'ée' (ID: 2894)
  Prédit: 'inte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inte' → logprob: -0.041132718324661255
    2. 'int' → logprob: -4.541132926940918
    3. 'ée' → logprob: -4.791132926940918
    4. 'rée' → logprob: -5.166132926940918
    5. 'ite' → logprob: -5.416132926940918
    6. 'e' → logprob: -6.166132926940918
    7. 'endue' → logprob: -6.666132926940918
    8. 'ee' → logprob: -6.666132926940918
    9. 'uite' → logprob: -6.791132926940918
    10. 'ainte' → logprob: -6.791132926940918

Token 1190: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03671879321336746
    2. ':' → logprob: -4.036718845367432
    3. '       ' → logprob: -4.411718845367432
    4. ':
' → logprob: -5.411718845367432
    5. '            
' → logprob: -7.786718845367432
    6. '               ' → logprob: -8.161718368530273
    7. '```' → logprob: -8.161718368530273
    8. '   ' → logprob: -8.786718368530273
    9. '          ' → logprob: -8.911718368530273
    10. ' :
' → logprob: -9.661718368530273

Token 1191: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006216724403202534
    2. 'return' → logprob: -6.006216526031494
    3. ' return' → logprob: -6.506216526031494
    4. '       ' → logprob: -7.256216526031494
    5. '   ' → logprob: -7.506216526031494
    6. '            
' → logprob: -8.131217002868652
    7. '               ' → logprob: -8.506217002868652
    8. ' 
' → logprob: -8.756217002868652
    9. '```' → logprob: -8.881217002868652
    10. '
' → logprob: -10.256217002868652

Token 1192: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8710502982139587
    2. 'print' → logprob: -0.8710502982139587
    3. '           ' → logprob: -1.8710503578186035
    4. '   ' → logprob: -4.9960503578186035
    5. '
' → logprob: -6.6210503578186035
    6. 'return' → logprob: -7.3710503578186035
    7. ' print' → logprob: -8.871049880981445
    8. '        
' → logprob: -9.996049880981445
    9. '```' → logprob: -10.121049880981445
    10. '    
' → logprob: -10.996049880981445

Token 1193: ' Dans' (ID: 22082)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12946949899196625
    2. 'print' → logprob: -2.254469394683838
    3. '       ' → logprob: -4.504469394683838
    4. 'return' → logprob: -5.379469394683838
    5. '
' → logprob: -7.879469394683838
    6. '   ' → logprob: -8.504469871520996
    7. '```' → logprob: -9.504469871520996
    8. '        
' → logprob: -10.254469871520996
    9. '            
' → logprob: -10.254469871520996
    10. ' print' → logprob: -10.379469871520996

Token 1194: ' le' (ID: 505)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.016369584947824478
    2. 'this' → logprob: -5.266369819641113
    3. 'ce' → logprob: -5.391369819641113
    4. 'break' → logprob: -6.516369819641113
    5. ' ce' → logprob: -6.766369819641113
    6. '```' → logprob: -7.016369819641113
    7. '#' → logprob: -7.266369819641113
    8. 'le' → logprob: -7.766369819641113
    9. ' print' → logprob: -8.516369819641113
    10. 'return' → logprob: -8.516369819641113

Token 1195: ' contexte' (ID: 82673)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.06899815797805786
    2. '```' → logprob: -3.568998098373413
    3. 'break' → logprob: -4.318998336791992
    4. ' else' → logprob: -4.943998336791992
    5. 'code' → logprob: -5.443998336791992
    6. 'for' → logprob: -5.443998336791992
    7. 'loop' → logprob: -6.193998336791992
    8. ' code' → logprob: -7.318998336791992
    9. ' break' → logprob: -7.443998336791992
    10. '`' → logprob: -7.443998336791992

Token 1196: ' de' (ID: 334)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8260451555252075
    2. '   ' → logprob: -1.4510451555252075
    3. '           ' → logprob: -1.7010451555252075
    4. ' return' → logprob: -3.451045036315918
    5. ' de' → logprob: -4.201045036315918
    6. ' du' → logprob: -4.326045036315918
    7. '#' → logprob: -4.326045036315918
    8. 'd' → logprob: -4.576045036315918
    9. 'de' → logprob: -4.951045036315918
    10. '               ' → logprob: -5.076045036315918

Token 1197: ' ce' (ID: 2357)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1286013275384903
    2. 'le' → logprob: -2.878601312637329
    3. 'break' → logprob: -3.628601312637329
    4. 'la' → logprob: -3.753601312637329
    5. 'l' → logprob: -5.253601551055908
    6. 'for' → logprob: -6.003601551055908
    7. '#' → logprob: -6.253601551055908
    8. '   ' → logprob: -6.503601551055908
    9. 'the' → logprob: -7.878601551055908
    10. ' print' → logprob: -8.00360107421875

Token 1198: ' problème' (ID: 35630)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.216689333319664
    2. 'for' → logprob: -2.466689348220825
    3. 'if' → logprob: -3.466689348220825
    4. 'else' → logprob: -3.716689348220825
    5. 'script' → logprob: -4.091689109802246
    6. ' code' → logprob: -4.591689109802246
    7. 'elif' → logprob: -4.716689109802246
    8. 'programme' → logprob: -4.841689109802246
    9. '```' → logprob: -5.591689109802246
    10. 'bloc' → logprob: -6.091689109802246

Token 1199: ',' (ID: 11)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.21047177910804749
    2. '           ' → logprob: -2.3354718685150146
    3. ':' → logprob: -2.9604718685150146
    4. '       ' → logprob: -3.4604718685150146
    5. '
' → logprob: -5.2104716300964355
    6. ',' → logprob: -6.4604716300964355
    7. ' :
' → logprob: -6.7104716300964355
    8. '   ' → logprob: -7.7104716300964355
    9. '):
' → logprob: -8.585472106933594
    10. '```' → logprob: -8.835472106933594

Token 1200: ' ça' (ID: 13590)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11376526951789856
    2. ' print' → logprob: -2.238765239715576
    3. '           ' → logprob: -7.238765239715576
    4. 'return' → logprob: -9.863765716552734
    5. '```' → logprob: -9.863765716552734
    6. '   ' → logprob: -10.113765716552734
    7. '       ' → logprob: -10.238765716552734
    8. ' return' → logprob: -10.738765716552734
    9. '	print' → logprob: -11.238765716552734
    10. '    ' → logprob: -12.988765716552734

Token 1201: ' signifie' (ID: 81149)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.49687859416007996
    2. 'return' → logprob: -1.4968786239624023
    3. 'print' → logprob: -2.2468786239624023
    4. '   ' → logprob: -3.4968786239624023
    5. '       ' → logprob: -3.9968786239624023
    6. ' return' → logprob: -5.746878623962402
    7. '
' → logprob: -6.121878623962402
    8. '#' → logprob: -6.121878623962402
    9. 'break' → logprob: -6.496878623962402
    10. '            
' → logprob: -7.121878623962402

Token 1202: ' que' (ID: 661)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.17269369959831238
    2. '           ' → logprob: -2.1726937294006348
    3. '   ' → logprob: -3.7976937294006348
    4. ' print' → logprob: -4.422693729400635
    5. '       ' → logprob: -4.672693729400635
    6. '```' → logprob: -7.297693729400635
    7. '	print' → logprob: -8.922693252563477
    8. ' ' → logprob: -10.547693252563477
    9. ' que' → logprob: -10.797693252563477
    10. '"' → logprob: -11.172693252563477

Token 1203: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0004297155828680843
    2. 'return' → logprob: -8.7504301071167
    3. '           ' → logprob: -8.8754301071167
    4. '   ' → logprob: -9.7504301071167
    5. ' print' → logprob: -10.0004301071167
    6. '       ' → logprob: -11.0004301071167
    7. '
' → logprob: -12.8754301071167
    8. 'pr' → logprob: -13.0004301071167
    9. '```' → logprob: -13.0004301071167
    10. '            
' → logprob: -13.5004301071167

Token 1204: ' transformation' (ID: 26242)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00012308525037951767
    2. 'break' → logprob: -9.500123023986816
    3. 'return' → logprob: -10.500123023986816
    4. 'prin' → logprob: -11.625123023986816
    5. 'pr' → logprob: -12.250123023986816
    6. '   ' → logprob: -13.875123023986816
    7. ' print' → logprob: -14.000123023986816
    8. '
' → logprob: -14.125123023986816
    9. 'flag' → logprob: -14.125123023986816
    10. '#print' → logprob: -14.375123023986816

Token 1205: ' des' (ID: 731)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2790299654006958
    2. '   ' → logprob: -1.6540299654006958
    3. '           ' → logprob: -3.9040298461914062
    4. ' print' → logprob: -4.279029846191406
    5. '       ' → logprob: -4.779029846191406
    6. 's' → logprob: -6.654029846191406
    7. 'n' → logprob: -6.654029846191406
    8. '```' → logprob: -6.779029846191406
    9. '
' → logprob: -6.904029846191406
    10. 'est' → logprob: -7.029029846191406

Token 1206: ' haute' (ID: 49646)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0744522288441658
    2. 'ha' → logprob: -3.0744521617889404
    3. 'H' → logprob: -3.9494521617889404
    4. 'pl' → logprob: -7.1994524002075195
    5. ' print' → logprob: -7.4494524002075195
    6. 'bl' → logprob: -7.6994524002075195
    7. ' haute' → logprob: -7.8244524002075195
    8. 'Ha' → logprob: -7.9494524002075195
    9. 'élé' → logprob: -7.9494524002075195
    10. ' H' → logprob: -8.07445240020752

Token 1207: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.003063391661271453
    2. 'ur' → logprob: -6.628063201904297
    3. 'teurs' → logprob: -6.753063201904297
    4. 's' → logprob: -8.753063201904297
    5. 't' → logprob: -9.503063201904297
    6. '#' → logprob: -9.628063201904297
    7. 'te' → logprob: -9.878063201904297
    8. 'teur' → logprob: -10.253063201904297
    9. 'r' → logprob: -10.378063201904297
    10. '```' → logprob: -10.503063201904297

Token 1208: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8811278343200684
    2. '#' → logprob: -1.2561278343200684
    3. ' n' → logprob: -2.6311278343200684
    4. 'est' → logprob: -2.8811278343200684
    5. 'H' → logprob: -3.1311278343200684
    6. '   ' → logprob: -3.1311278343200684
    7. ' est' → logprob: -3.8811278343200684
    8. 's' → logprob: -4.381127834320068
    9. ' H' → logprob: -4.506127834320068
    10. 'ne' → logprob: -4.506127834320068

Token 1209: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.05408969148993492
    2. 'est' → logprob: -4.054089546203613
    3. 'é' → logprob: -4.054089546203613
    4. ''' → logprob: -5.429089546203613
    5. 'e' → logprob: -5.429089546203613
    6. 'pas' → logprob: -6.304089546203613
    7. ''ex' → logprob: -6.804089546203613
    8. ''é' → logprob: -6.804089546203613
    9. ''a' → logprob: -7.054089546203613
    10. '’est' → logprob: -7.054089546203613

Token 1210: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.015483319759368896
    2. 'im' → logprob: -4.765483379364014
    3. ' pas' → logprob: -6.015483379364014
    4. 'plus' → logprob: -6.140483379364014
    5. '```' → logprob: -6.640483379364014
    6. 'possible' → logprob: -7.765483379364014
    7. ' impossible' → logprob: -8.265482902526855
    8. 'import' → logprob: -9.015482902526855
    9. 'Impossible' → logprob: -10.140482902526855
    10. ' plus' → logprob: -10.390482902526855

Token 1211: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.0009583894861862063
    2. 'poss' → logprob: -7.625958442687988
    3. ' possible' → logprob: -7.875958442687988
    4. 'pos' → logprob: -10.625958442687988
    5. '_possible' → logprob: -10.625958442687988
    6. '```' → logprob: -10.875958442687988
    7. 'Possible' → logprob: -11.875958442687988
    8. 'print' → logprob: -13.000958442687988
    9. 'valid' → logprob: -13.000958442687988
    10. 'faite' → logprob: -13.375958442687988

Token 1212: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1942291408777237
    2. '       ' → logprob: -1.8192291259765625
    3. ':' → logprob: -5.1942291259765625
    4. ':
' → logprob: -5.5692291259765625
    5. '
' → logprob: -6.9442291259765625
    6. '   ' → logprob: -6.9442291259765625
    7. 'print' → logprob: -7.0692291259765625
    8. 'raise' → logprob: -7.6942291259765625
    9. '            
' → logprob: -7.9442291259765625
    10. '        
' → logprob: -8.194229125976562

Token 1213: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1747310608625412
    2. '       ' → logprob: -2.4247310161590576
    3. 'print' → logprob: -2.7997310161590576
    4. '```' → logprob: -5.049731254577637
    5. '   ' → logprob: -5.799731254577637
    6. '
' → logprob: -6.674731254577637
    7. 'return' → logprob: -9.424731254577637
    8. '``' → logprob: -9.549731254577637
    9. ' print' → logprob: -9.799731254577637
    10. '        
' → logprob: -10.299731254577637

Token 1214: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.01732219196856022
    2. '           ' → logprob: -4.142322063446045
    3. '       ' → logprob: -7.267322063446045
    4. '   ' → logprob: -8.392322540283203
    5. 'return' → logprob: -8.767322540283203
    6. '```' → logprob: -9.517322540283203
    7. ' print' → logprob: -9.642322540283203
    8. '
' → logprob: -9.767322540283203
    9. '        
' → logprob: -13.142322540283203
    10. '            
' → logprob: -13.267322540283203

Token 1215: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.29614078998565674
    2. 'No' → logprob: -2.171140670776367
    3. '(NO' → logprob: -2.921140670776367
    4. '('' → logprob: -3.171140670776367
    5. 'NO' → logprob: -3.796140670776367
    6. '(No' → logprob: -4.546140670776367
    7. '(' → logprob: -4.796140670776367
    8. '"No' → logprob: -5.796140670776367
    9. '"' → logprob: -7.671140670776367
    10. '(-' → logprob: -7.921140670776367

Token 1216: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.012972922995686531
    2. '"' → logprob: -5.012972831726074
    3. '"No' → logprob: -5.137972831726074
    4. 'NO' → logprob: -9.512972831726074
    5. 'Impossible' → logprob: -9.762972831726074
    6. '":' → logprob: -9.887972831726074
    7. ':' → logprob: -10.012972831726074
    8. '
' → logprob: -10.137972831726074
    9. ':no' → logprob: -10.637972831726074
    10. ' No' → logprob: -11.637972831726074

Token 1217: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.005319139454513788
    2. '")
' → logprob: -5.255319118499756
    3. '")
' → logprob: -9.505319595336914
    4. '"' → logprob: -12.255319595336914
    5. ' ")' → logprob: -12.880319595336914
    6. 'e' → logprob: -13.380319595336914
    7. ')' → logprob: -14.505319595336914
    8. '\n' → logprob: -14.755319595336914
    9. '')' → logprob: -15.130319595336914
    10. 'ne' → logprob: -15.380319595336914

Token 1218: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.044482894241809845
    2. 'return' → logprob: -3.794482946395874
    3. '
' → logprob: -4.294482707977295
    4. ' return' → logprob: -5.419482707977295
    5. '               ' → logprob: -7.044482707977295
    6. '            
' → logprob: -7.044482707977295
    7. '\n' → logprob: -7.919482707977295
    8. ')' → logprob: -8.919483184814453
    9. ')return' → logprob: -9.544483184814453
    10. '		' → logprob: -9.544483184814453

Token 1219: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4056035876274109
    2. 'return' → logprob: -1.5306036472320557
    3. '
' → logprob: -2.5306036472320557
    4. ' return' → logprob: -3.5306036472320557
    5. '       ' → logprob: -5.155603408813477
    6. '               ' → logprob: -7.780603408813477
    7. '            
' → logprob: -8.030603408813477
    8. ')return' → logprob: -8.405603408813477
    9. '	return' → logprob: -8.530603408813477
    10. ')' → logprob: -8.655603408813477

Token 1220: ' On' (ID: 2160)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.02364862523972988
    2. ' return' → logprob: -3.773648738861084
    3. '
' → logprob: -8.023648262023926
    4. '           ' → logprob: -9.898648262023926
    5. '	return' → logprob: -10.898648262023926
    6. '       ' → logprob: -12.273648262023926
    7. '   ' → logprob: -14.148648262023926
    8. '               ' → logprob: -14.648648262023926
    9. '
' → logprob: -15.523648262023926
    10. '    
' → logprob: -15.648648262023926

Token 1221: ' affiche' (ID: 127479)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.06377234309911728
    2. 'return' → logprob: -2.813772439956665
    3. '
' → logprob: -6.813772201538086
    4. '   ' → logprob: -7.688772201538086
    5. '       ' → logprob: -9.188772201538086
    6. '           ' → logprob: -10.313772201538086
    7. '	return' → logprob: -10.938772201538086
    8. 'eturn' → logprob: -11.188772201538086
    9. ')' → logprob: -11.313772201538086
    10. '    
' → logprob: -11.563772201538086

Token 1222: ' '' (ID: 461)
  Prédit: '"No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"No' → logprob: -1.1739871501922607
    2. '"' → logprob: -1.4239871501922607
    3. 'No' → logprob: -1.6739871501922607
    4. '()' → logprob: -2.7989871501922607
    5. '\n' → logprob: -3.2989871501922607
    6. '")' → logprob: -3.2989871501922607
    7. '("' → logprob: -3.2989871501922607
    8. ' No' → logprob: -3.6739871501922607
    9. '```' → logprob: -4.04898738861084
    10. ')' → logprob: -4.17398738861084

Token 1223: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.04098603501915932
    2. '")' → logprob: -3.2909860610961914
    3. ' No' → logprob: -6.165986061096191
    4. '"No' → logprob: -7.915986061096191
    5. 'Yes' → logprob: -8.290986061096191
    6. '"' → logprob: -9.165986061096191
    7. '\n' → logprob: -9.790986061096191
    8. ')' → logprob: -10.790986061096191
    9. ' ")' → logprob: -11.165986061096191
    10. '```' → logprob: -11.415986061096191

Token 1224: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2925553619861603
    2. '")' → logprob: -1.792555332183838
    3. '           ' → logprob: -3.417555332183838
    4. ')return' → logprob: -3.542555332183838
    5. ')
' → logprob: -4.792555332183838
    6. '')' → logprob: -5.417555332183838
    7. '")
' → logprob: -5.667555332183838
    8. '\n' → logprob: -5.792555332183838
    9. 'return' → logprob: -6.042555332183838
    10. '       ' → logprob: -6.292555332183838

Token 1225: ' pour' (ID: 1930)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011628905311226845
    2. 'return' → logprob: -4.761629104614258
    3. ' return' → logprob: -7.136629104614258
    4. '
' → logprob: -7.136629104614258
    5. '               ' → logprob: -7.761629104614258
    6. ')' → logprob: -8.011629104614258
    7. '       ' → logprob: -8.761629104614258
    8. '<|end|>' → logprob: -8.761629104614258
    9. '\n' → logprob: -9.511629104614258
    10. '            
' → logprob: -9.511629104614258

Token 1226: ' ind' (ID: 1383)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.22943466901779175
    2. ' return' → logprob: -1.6044347286224365
    3. '   ' → logprob: -6.604434490203857
    4. '       ' → logprob: -6.729434490203857
    5. 'exit' → logprob: -6.979434490203857
    6. '           ' → logprob: -8.854434967041016
    7. ' exit' → logprob: -9.354434967041016
    8. '
' → logprob: -9.479434967041016
    9. 'print' → logprob: -10.229434967041016
    10. '    
' → logprob: -10.604434967041016

Token 1227: 'iquer' (ID: 63028)
  Prédit: 'iquer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iquer' → logprob: -0.020308049395680428
    2. 'ique' → logprob: -4.020308017730713
    3. 'iqué' → logprob: -7.020308017730713
    4. 'iquant' → logprob: -7.395308017730713
    5. 'iqu' → logprob: -7.645308017730713
    6. 'i' → logprob: -9.770308494567871
    7. 'icate' → logprob: -10.145308494567871
    8. 'is' → logprob: -10.395308494567871
    9. 'iq' → logprob: -11.020308494567871
    10. 'ex' → logprob: -12.020308494567871

Token 1228: ' l' (ID: 305)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.821323037147522
    2. ')' → logprob: -2.0713229179382324
    3. ' return' → logprob: -2.1963229179382324
    4. '")' → logprob: -2.1963229179382324
    5. '("")' → logprob: -2.6963229179382324
    6. 'return' → logprob: -2.9463229179382324
    7. '   ' → logprob: -4.321322917938232
    8. ' ' → logprob: -4.821322917938232
    9. '```' → logprob: -4.821322917938232
    10. ' )' → logprob: -4.946322917938232

Token 1229: ''im' (ID: 44488)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.9331182241439819
    2. 'o' → logprob: -1.683118224143982
    3. ''' → logprob: -2.4331183433532715
    4. ' possible' → logprob: -2.8081183433532715
    5. '```' → logprob: -3.0581183433532715
    6. ''arrêt' → logprob: -3.6831183433532715
    7. ' e' → logprob: -3.8081183433532715
    8. ''é' → logprob: -3.9331183433532715
    9. '')' → logprob: -4.0581183433532715
    10. '`' → logprob: -4.1831183433532715

Token 1230: 'poss' (ID: 67395)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.24284480512142181
    2. 'poss' → logprob: -1.617844820022583
    3. 'p' → logprob: -4.242844581604004
    4. 'pos' → logprob: -6.867844581604004
    5. 'Possible' → logprob: -6.992844581604004
    6. '_possible' → logprob: -7.742844581604004
    7. 'pression' → logprob: -9.242844581604004
    8. 'm' → logprob: -9.617844581604004
    9. 'port' → logprob: -9.742844581604004
    10. ' possible' → logprob: -9.992844581604004

Token 1231: 'ibilité' (ID: 44186)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.9947863221168518
    2. 'ité' → logprob: -1.119786262512207
    3. 'e' → logprob: -2.619786262512207
    4. 'u' → logprob: -2.869786262512207
    5. 'ibilité' → logprob: -2.869786262512207
    6. 'é' → logprob: -4.244786262512207
    7. 'it' → logprob: -4.369786262512207
    8. 'ity' → logprob: -4.494786262512207
    9. 'ible' → logprob: -4.619786262512207
    10. 'isible' → logprob: -4.619786262512207

Token 1232: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09099391847848892
    2. ')' → logprob: -2.965993881225586
    3. '       ' → logprob: -4.715993881225586
    4. '<|end|>' → logprob: -4.840993881225586
    5. '\n' → logprob: -5.465993881225586
    6. 'return' → logprob: -5.590993881225586
    7. ' return' → logprob: -5.840993881225586
    8. ')return' → logprob: -6.340993881225586
    9. '               ' → logprob: -6.715993881225586
    10. '
' → logprob: -6.965993881225586

Token 1233: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010456259362399578
    2. 'return' → logprob: -4.760456085205078
    3. '
' → logprob: -7.260456085205078
    4. ' return' → logprob: -7.385456085205078
    5. '       ' → logprob: -7.635456085205078
    6. '```' → logprob: -10.885456085205078
    7. '		' → logprob: -12.635456085205078
    8. '               ' → logprob: -12.760456085205078
    9. '   ' → logprob: -13.135456085205078
    10. '            
' → logprob: -13.385456085205078

Token 1234: ' exit' (ID: 10654)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.008262312039732933
    2. '           ' → logprob: -5.0082621574401855
    3. ' return' → logprob: -7.1332621574401855
    4. '       ' → logprob: -7.6332621574401855
    5. '
' → logprob: -8.633262634277344
    6. '	return' → logprob: -10.133262634277344
    7. '   ' → logprob: -10.133262634277344
    8. '```' → logprob: -12.508262634277344
    9. '    
' → logprob: -14.383262634277344
    10. '               ' → logprob: -14.633262634277344

Token 1235: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20497870445251465
    2. '(' → logprob: -1.7049787044525146
    3. '()
' → logprob: -5.954978942871094
    4. '()\' → logprob: -7.079978942871094
    5. '()

' → logprob: -10.454978942871094
    6. '("("' → logprob: -10.579978942871094
    7. '(
' → logprob: -11.329978942871094
    8. '())' → logprob: -11.454978942871094
    9. '()`' → logprob: -11.704978942871094
    10. '("\' → logprob: -11.954978942871094

Token 1236: '     ' (ID: 530)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00454096170142293
    2. '    
' → logprob: -5.754540920257568
    3. '
' → logprob: -7.754540920257568
    4. '       ' → logprob: -8.004541397094727
    5. '  
' → logprob: -8.629541397094727
    6. ' 
' → logprob: -9.379541397094727
    7. '\n' → logprob: -9.504541397094727
    8. '<|end|>' → logprob: -9.504541397094727
    9. ')' → logprob: -9.629541397094727
    10. '        
' → logprob: -10.129541397094727

Token 1237: ' #' (ID: 1069)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.039688438177108765
    2. '()
' → logprob: -3.7896883487701416
    3. '(' → logprob: -4.789688587188721
    4. '()\' → logprob: -5.289688587188721
    5. '\n' → logprob: -7.039688587188721
    6. '()

' → logprob: -7.539688587188721
    7. '   ' → logprob: -7.664688587188721
    8. '())' → logprob: -8.289688110351562
    9. '    
' → logprob: -8.539688110351562
    10. '
' → logprob: -9.039688110351562

Token 1238: ' On' (ID: 2160)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.795059323310852
    2. '\n' → logprob: -1.795059323310852
    3. ' 
' → logprob: -2.1700592041015625
    4. '0' → logprob: -2.1700592041015625
    5. '()' → logprob: -2.4200592041015625
    6. 'return' → logprob: -2.4200592041015625
    7. '  
' → logprob: -2.5450592041015625
    8. ')' → logprob: -3.1700592041015625
    9. ' ' → logprob: -3.2950592041015625
    10. '
' → logprob: -3.7950592041015625

Token 1239: ' arr' (ID: 1724)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.12963508069515228
    2. ' return' → logprob: -2.1296350955963135
    3. '           ' → logprob: -6.254634857177734
    4. '   ' → logprob: -7.879634857177734
    5. '       ' → logprob: -8.379634857177734
    6. '	return' → logprob: -9.754634857177734
    7. 'import' → logprob: -10.629634857177734
    8. '    ' → logprob: -11.129634857177734
    9. '```' → logprob: -11.129634857177734
    10. '               ' → logprob: -11.254634857177734

Token 1240: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.681600034236908
    2. 'êter' → logprob: -1.6816000938415527
    3. 'êt' → logprob: -1.8066000938415527
    4. 'uire' → logprob: -2.9316000938415527
    5. 'u' → logprob: -3.8066000938415527
    6. 'g' → logprob: -5.181600093841553
    7. 'ivée' → logprob: -5.431600093841553
    8. 'r' → logprob: -5.806600093841553
    9. 'êtes' → logprob: -5.806600093841553
    10. 'terminate' → logprob: -5.806600093841553

Token 1241: ' le' (ID: 505)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -7.465036105713807e-06
    2. '(' → logprob: -12.000007629394531
    3. '()
' → logprob: -14.250007629394531
    4. '()>' → logprob: -16.00000762939453
    5. '()<' → logprob: -16.25000762939453
    6. '()\' → logprob: -16.25000762939453
    7. ' ()' → logprob: -16.37500762939453
    8. '()=>' → logprob: -16.62500762939453
    9. '()?>' → logprob: -16.87500762939453
    10. '()%' → logprob: -16.87500762939453

Token 1242: ' programme' (ID: 18190)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00198787497356534
    2. 'program' → logprob: -6.876987934112549
    3. '(' → logprob: -7.126987934112549
    4. '())' → logprob: -9.62698745727539
    5. 'programme' → logprob: -10.25198745727539
    6. ')' → logprob: -11.25198745727539
    7. '0' → logprob: -11.50198745727539
    8. '1' → logprob: -12.00198745727539
    9. '()
' → logprob: -12.25198745727539
    10. ' program' → logprob: -12.75198745727539

Token 1243: ' immédiatement' (ID: 100743)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19446294009685516
    2. ')' → logprob: -2.694463014602661
    3. '       ' → logprob: -3.819463014602661
    4. '\n' → logprob: -3.819463014602661
    5. '<|end|>' → logprob: -4.069462776184082
    6. '    
' → logprob: -4.319462776184082
    7. '
' → logprob: -4.444462776184082
    8. '  
' → logprob: -4.694462776184082
    9. '```' → logprob: -5.944462776184082
    10. '\' → logprob: -6.069462776184082

Token 1244: '.

' (ID: 364)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5283745527267456
    2. '<|end|>' → logprob: -1.0283745527267456
    3. '\n' → logprob: -3.403374671936035
    4. '
' → logprob: -5.028374671936035
    5. '   ' → logprob: -5.153374671936035
    6. '\' → logprob: -6.153374671936035
    7. '  
' → logprob: -7.028374671936035
    8. '    
' → logprob: -7.278374671936035
    9. '<|end|>' → logprob: -7.653374671936035
    10. ' ' → logprob: -7.653374671936035

Token 1245: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016848169034346938
    2. '    
' → logprob: -6.751684665679932
    3. '```' → logprob: -8.50168514251709
    4. '       ' → logprob: -8.75168514251709
    5. '        
' → logprob: -9.62668514251709
    6. '  
' → logprob: -11.12668514251709
    7. '\' → logprob: -11.25168514251709
    8. '
' → logprob: -11.37668514251709
    9. ' 
' → logprob: -11.50168514251709
    10. '‌' → logprob: -12.25168514251709

Token 1246: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.227250610711053e-05
    2. '```' → logprob: -10.500041961669922
    3. 'Yes' → logprob: -11.875041961669922
    4. '   ' → logprob: -13.250041961669922
    5. '    
' → logprob: -13.500041961669922
    6. 'Print' → logprob: -13.625041961669922
    7. ' print' → logprob: -13.625041961669922
    8. 'No' → logprob: -13.750041961669922
    9. '``' → logprob: -14.750041961669922
    10. '	print' → logprob: -15.000041961669922

Token 1247: ' Si' (ID: 7832)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005539863486774266
    2. '   ' → logprob: -7.500554084777832
    3. ' print' → logprob: -14.250554084777832
    4. '```' → logprob: -15.625554084777832
    5. '	print' → logprob: -17.500553131103516
    6. '    
' → logprob: -17.625553131103516
    7. 'Print' → logprob: -18.125553131103516
    8. '
' → logprob: -18.625553131103516
    9. '  ' → logprob: -20.625553131103516
    10. '  
' → logprob: -20.875553131103516

Token 1248: ' la' (ID: 557)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0308068934828043
    2. ' True' → logprob: -3.53080677986145
    3. 'H' → logprob: -7.405807018280029
    4. 'off' → logprob: -9.155806541442871
    5. '(True' → logprob: -9.530806541442871
    6. 'len' → logprob: -9.655806541442871
    7. 'true' → logprob: -10.155806541442871
    8. '1' → logprob: -11.030806541442871
    9. '    
' → logprob: -11.280806541442871
    10. '
' → logprob: -11.280806541442871

Token 1249: ' boucle' (ID: 174211)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.02883652038872242
    2. ' True' → logprob: -3.653836488723755
    3. 'for' → logprob: -7.153836727142334
    4. '#' → logprob: -7.528836727142334
    5. 'true' → logprob: -7.528836727142334
    6. 'v' → logprob: -9.028836250305176
    7. '(True' → logprob: -9.653836250305176
    8. 'H' → logprob: -9.778836250305176
    9. '
' → logprob: -9.903836250305176
    10. ' for' → logprob: -9.903836250305176

Token 1250: ' n' (ID: 297)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8790786266326904
    2. 'se' → logprob: -1.3790786266326904
    3. ' completes' → logprob: -2.5040786266326904
    4. '   ' → logprob: -3.1290786266326904
    5. 'termin' → logprob: -3.3790786266326904
    6. 'else' → logprob: -3.6290786266326904
    7. 's' → logprob: -3.8790786266326904
    8. '```' → logprob: -4.1290788650512695
    9. 'compl' → logprob: -4.2540788650512695
    10. ' termine' → logprob: -4.3790788650512695

Token 1251: ''a' (ID: 10443)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7642327547073364
    2. '   ' → logprob: -0.7642327547073364
    3. '```' → logprob: -4.014232635498047
    4. 'print' → logprob: -4.139232635498047
    5. 'for' → logprob: -4.639232635498047
    6. 'est' → logprob: -5.389232635498047
    7. ''est' → logprob: -6.014232635498047
    8. ''arrive' → logprob: -6.389232635498047
    9. '#' → logprob: -6.639232635498047
    10. 'completed' → logprob: -6.764232635498047

Token 1252: ' jamais' (ID: 23077)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.17413108050823212
    2. 'print' → logprob: -2.174131155014038
    3. 'été' → logprob: -4.424130916595459
    4. ' pas' → logprob: -5.049130916595459
    5. '#' → logprob: -5.674130916595459
    6. 's' → logprob: -6.174130916595459
    7. 'é' → logprob: -6.299130916595459
    8. 'ex' → logprob: -6.299130916595459
    9. 'raise' → logprob: -6.674130916595459
    10. '```' → logprob: -6.674130916595459

Token 1253: ' rencontré' (ID: 141085)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05556114390492439
    2. 'aff' → logprob: -3.305561065673828
    3. 'ex' → logprob: -4.930561065673828
    4. 'im' → logprob: -5.055561065673828
    5. 'été' → logprob: -7.180561065673828
    6. 'éch' → logprob: -7.930561065673828
    7. 'appel' → logprob: -8.055561065673828
    8. 'per' → logprob: -8.305561065673828
    9. 'break' → logprob: -8.555561065673828
    10. ' print' → logprob: -8.555561065673828

Token 1254: ' le' (ID: 505)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.6915537714958191
    2. 'auc' → logprob: -1.5665538311004639
    3. 'une' → logprob: -1.6915538311004639
    4. 'un' → logprob: -3.816553831100464
    5. ' aucune' → logprob: -4.066553592681885
    6. 'd' → logprob: -4.066553592681885
    7. 'la' → logprob: -4.316553592681885
    8. 'le' → logprob: -4.691553592681885
    9. 'pas' → logprob: -4.691553592681885
    10. '"' → logprob: -5.816553592681885

Token 1255: ' cas' (ID: 2108)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.49519476294517517
    2. 'bloc' → logprob: -1.8701947927474976
    3. 'break' → logprob: -2.495194673538208
    4. 'mot' → logprob: -2.870194673538208
    5. 'return' → logprob: -3.370194673538208
    6. 'code' → logprob: -4.370194911956787
    7. 'for' → logprob: -5.120194911956787
    8. ' moindre' → logprob: -5.620194911956787
    9. 'fin' → logprob: -5.620194911956787
    10. 'cas' → logprob: -5.620194911956787

Token 1256: ' d' (ID: 272)
  Prédit: 'où'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'où' → logprob: -0.3117643892765045
    2. 'de' → logprob: -2.1867644786834717
    3. 'd' → logprob: -2.3117644786834717
    4. 'possible' → logprob: -4.186764240264893
    5. 'im' → logprob: -4.686764240264893
    6. ' où' → logprob: -5.061764240264893
    7. 'pas' → logprob: -5.186764240264893
    8. 'where' → logprob: -5.311764240264893
    9. 'Impossible' → logprob: -5.561764240264893
    10. '"' → logprob: -6.311764240264893

Token 1257: ''é' (ID: 12728)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.44833093881607056
    2. ''ex' → logprob: -2.198330879211426
    3. ''arrêt' → logprob: -2.823330879211426
    4. ''é' → logprob: -2.948330879211426
    5. ''' → logprob: -3.323330879211426
    6. 'une' → logprob: -3.573330879211426
    7. ''une' → logprob: -3.948330879211426
    8. 'é' → logprob: -4.323330879211426
    9. 'éc' → logprob: -5.323330879211426
    10. 'elif' → logprob: -5.448330879211426

Token 1258: 'chec' (ID: 132338)
  Prédit: 'chec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chec' → logprob: -0.004234632011502981
    2. ''arrêt' → logprob: -5.754234790802002
    3. 'arr' → logprob: -8.254234313964844
    4. 'che' → logprob: -9.004234313964844
    5. 'é' → logprob: -9.004234313964844
    6. 'termination' → logprob: -9.754234313964844
    7. ''arrivée' → logprob: -9.879234313964844
    8. 'x' → logprob: -9.879234313964844
    9. 'e' → logprob: -10.129234313964844
    10. 'continue' → logprob: -10.254234313964844

Token 1259: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05771491676568985
    2. '   ' → logprob: -2.9327149391174316
    3. ':
' → logprob: -6.057714939117432
    4. ',' → logprob: -8.057714462280273
    5. 'print' → logprob: -8.932714462280273
    6. '```' → logprob: -11.682714462280273
    7. '():' → logprob: -11.682714462280273
    8. '    
' → logprob: -11.807714462280273
    9. '):' → logprob: -12.557714462280273
    10. '{' → logprob: -13.182714462280273

Token 1260: ' c' (ID: 274)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6035560965538025
    2. 'print' → logprob: -0.8535560965538025
    3. ' print' → logprob: -3.6035561561584473
    4. '	print' → logprob: -11.978555679321289
    5. '    
' → logprob: -12.478555679321289
    6. '       ' → logprob: -14.228555679321289
    7. ' ' → logprob: -14.853555679321289
    8. '
' → logprob: -15.103555679321289
    9. '    ' → logprob: -15.603555679321289
    10. '  ' → logprob: -15.728555679321289

Token 1261: ''est' (ID: 6616)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02331535890698433
    2. '   ' → logprob: -4.0233154296875
    3. '```' → logprob: -6.0233154296875
    4. ' print' → logprob: -6.6483154296875
    5. '#' → logprob: -8.3983154296875
    6. 'ont' → logprob: -8.5233154296875
    7. '  ' → logprob: -8.8983154296875
    8. 'e' → logprob: -9.0233154296875
    9. '`' → logprob: -9.0233154296875
    10. '	print' → logprob: -9.1483154296875

Token 1262: ' que' (ID: 661)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04590446874499321
    2. 'print' → logprob: -3.4209043979644775
    3. '"' → logprob: -5.295904636383057
    4. 'que' → logprob: -6.045904636383057
    5. '    
' → logprob: -6.170904636383057
    6. ' que' → logprob: -6.420904636383057
    7. '#' → logprob: -8.295904159545898
    8. ' print' → logprob: -8.795904159545898
    9. 'Yes' → logprob: -9.045904159545898
    10. 'à' → logprob: -9.295904159545898

Token 1263: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006742842961102724
    2. '   ' → logprob: -5.13174295425415
    3. ' print' → logprob: -7.13174295425415
    4. '	print' → logprob: -12.881742477416992
    5. '"' → logprob: -13.006742477416992
    6. '    
' → logprob: -13.256742477416992
    7. '  ' → logprob: -13.506742477416992
    8. 'on' → logprob: -13.506742477416992
    9. 'la' → logprob: -13.881742477416992
    10. '("' → logprob: -14.006742477416992

Token 1264: ' transformation' (ID: 26242)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0007943779928609729
    2. 'sé' → logprob: -7.625794410705566
    3. 'sequence' → logprob: -9.000794410705566
    4. '#' → logprob: -10.000794410705566
    5. 's' → logprob: -10.250794410705566
    6. ' print' → logprob: -10.500794410705566
    7. ' sé' → logprob: -11.125794410705566
    8. 'suite' → logprob: -11.500794410705566
    9. 'ré' → logprob: -11.750794410705566
    10. '   ' → logprob: -12.125794410705566

Token 1265: ' est' (ID: 893)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.35537034273147583
    2. 'print' → logprob: -1.730370283126831
    3. 'possible' → logprob: -2.480370283126831
    4. 'pe' → logprob: -3.980370283126831
    5. 's' → logprob: -4.98037052154541
    6. 'p' → logprob: -5.60537052154541
    7. 'se' → logprob: -6.73037052154541
    8. '```' → logprob: -6.73037052154541
    9. 'Possible' → logprob: -6.85537052154541
    10. '_possible' → logprob: -7.23037052154541

Token 1266: ' réalis' (ID: 33704)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.001367857912555337
    2. 'poss' → logprob: -7.501368045806885
    3. ' possible' → logprob: -8.126367568969727
    4. 'pos' → logprob: -8.876367568969727
    5. 'Possible' → logprob: -9.126367568969727
    6. '   ' → logprob: -9.376367568969727
    7. 'valid' → logprob: -9.751367568969727
    8. '_possible' → logprob: -10.251367568969727
    9. '```' → logprob: -10.626367568969727
    10. 'successful' → logprob: -11.251367568969727

Token 1267: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -0.004091697279363871
    2. 'ée' → logprob: -5.504091739654541
    3. 'é' → logprob: -12.004091262817383
    4. 'ee' → logprob: -12.504091262817383
    5. 'e' → logprob: -12.754091262817383
    6. ' able' → logprob: -16.129091262817383
    7. 'ble' → logprob: -16.254091262817383
    8. 'nable' → logprob: -16.254091262817383
    9. 'possible' → logprob: -16.629091262817383
    10. 'ale' → logprob: -16.754091262817383

Token 1268: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31337305903434753
    2. 'print' → logprob: -1.31337308883667
    3. '    
' → logprob: -9.563372611999512
    4. ' print' → logprob: -10.688372611999512
    5. '```' → logprob: -11.438372611999512
    6. '	print' → logprob: -13.063372611999512
    7. '
' → logprob: -13.188372611999512
    8. '        
' → logprob: -13.688372611999512
    9. 'Print' → logprob: -14.438372611999512
    10. '  
' → logprob: -14.813372611999512

Token 1269: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1604488492012024
    2. '   ' → logprob: -1.9104487895965576
    3. '```' → logprob: -8.410449028015137
    4. ' print' → logprob: -13.660449028015137
    5. '	print' → logprob: -14.285449028015137
    6. '    
' → logprob: -15.785449028015137
    7. 'Print' → logprob: -16.53544807434082
    8. '``' → logprob: -16.53544807434082
    9. '`' → logprob: -17.41044807434082
    10. '       ' → logprob: -17.91044807434082

Token 1270: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.2015184909105301
    2. '   ' → logprob: -1.7015185356140137
    3. '```' → logprob: -9.326518058776855
    4. ' print' → logprob: -11.826518058776855
    5. '	print' → logprob: -11.951518058776855
    6. 'Print' → logprob: -13.826518058776855
    7. '    
' → logprob: -14.201518058776855
    8. '``' → logprob: -15.326518058776855
    9. '`' → logprob: -15.326518058776855
    10. '       ' → logprob: -16.201519012451172

Token 1271: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.000919796759262681
    2. '(' → logprob: -7.000919818878174
    3. '('' → logprob: -11.750919342041016
    4. '("("' → logprob: -14.500919342041016
    5. '(
' → logprob: -17.625919342041016
    6. ' ("' → logprob: -18.125919342041016
    7. '(("' → logprob: -18.500919342041016
    8. '("""' → logprob: -18.875919342041016
    9. '("")' → logprob: -19.250919342041016
    10. '"' → logprob: -19.250919342041016

Token 1272: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -6.704273118884885e-07
    2. '"' → logprob: -14.625000953674316
    3. 'YES' → logprob: -16.125
    4. 'Oui' → logprob: -17.5
    5. ' Yes' → logprob: -18.75
    6. '“Yes' → logprob: -18.875
    7. 'Ye' → logprob: -19.25
    8. 'Yeah' → logprob: -20.625
    9. '""' → logprob: -21.75
    10. 'yes' → logprob: -22.0

Token 1273: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -5.676981345459353e-06
    2. ')' → logprob: -12.500005722045898
    3. '()' → logprob: -13.750005722045898
    4. '")
' → logprob: -15.250005722045898
    5. ')")' → logprob: -15.250005722045898
    6. ' ")' → logprob: -15.875005722045898
    7. '')' → logprob: -16.0000057220459
    8. '"' → logprob: -17.7500057220459
    9. '```' → logprob: -18.2500057220459
    10. '")}' → logprob: -18.8750057220459

Token 1274: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1275: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1276: ' On' (ID: 2160)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1277: ' affiche' (ID: 127479)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3266700506210327
    2. '#' → logprob: -1.5766700506210327
    3. '   ' → logprob: -1.5766700506210327
    4. 'return' → logprob: -2.0766701698303223
    5. ' return' → logprob: -2.7016701698303223
    6. '.' → logprob: -2.7016701698303223
    7. '```' → logprob: -4.326670169830322
    8. 'print' → logprob: -5.076670169830322
    9. 'def' → logprob: -5.201670169830322
    10. '<|end|>' → logprob: -5.451670169830322

Token 1278: ' '' (ID: 461)
  Prédit: 'Yes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.4810961186885834
    2. '("' → logprob: -0.9810961484909058
    3. '(' → logprob: -5.231096267700195
    4. '"' → logprob: -6.481096267700195
    5. '('' → logprob: -10.106096267700195
    6. ' Yes' → logprob: -10.981096267700195
    7. '()' → logprob: -11.231096267700195
    8. '“Yes' → logprob: -12.106096267700195
    9. '("")' → logprob: -12.356096267700195
    10. '.Yes' → logprob: -12.356096267700195

Token 1279: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -4.036524842376821e-05
    2. 'Oui' → logprob: -10.375040054321289
    3. '"' → logprob: -12.000040054321289
    4. '```' → logprob: -13.875040054321289
    5. '")' → logprob: -14.375040054321289
    6. ' Yes' → logprob: -15.000040054321289
    7. '"""' → logprob: -15.125040054321289
    8. 'No' → logprob: -15.500040054321289
    9. ''' → logprob: -15.875040054321289
    10. 'Okay' → logprob: -16.62504005432129

Token 1280: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.028703317046165466
    2. '")' → logprob: -3.653703212738037
    3. '<|end|>' → logprob: -6.403703212738037
    4. '')' → logprob: -7.778703212738037
    5. '```' → logprob: -8.778703689575195
    6. ' )' → logprob: -9.403703689575195
    7. '\n' → logprob: -10.778703689575195
    8. '()' → logprob: -11.028703689575195
    9. '   ' → logprob: -11.153703689575195
    10. '`)' → logprob: -11.653703689575195

Token 1281: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1282: ' ind' (ID: 1383)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.02774849347770214
    2. ' ind' → logprob: -4.5277485847473145
    3. 'indi' → logprob: -4.7777485847473145
    4. 'final' → logprob: -6.5277485847473145
    5. 'val' → logprob: -6.9027485847473145
    6. 'la' → logprob: -7.1527485847473145
    7. ')' → logprob: -7.2777485847473145
    8. '   ' → logprob: -7.4027485847473145
    9. 'conf' → logprob: -7.4027485847473145
    10. 'confirm' → logprob: -8.027748107910156

Token 1283: 'iquer' (ID: 63028)
  Prédit: 'iquer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iquer' → logprob: -7.696077227592468e-05
    2. 'iqu' → logprob: -9.875077247619629
    3. 'i' → logprob: -11.000077247619629
    4. 'iker' → logprob: -13.375077247619629
    5. '
' → logprob: -13.625077247619629
    6. 'di' → logprob: -13.750077247619629
    7. 'iqué' → logprob: -13.750077247619629
    8. 'ique' → logprob: -13.875077247619629
    9. 'd' → logprob: -14.250077247619629
    10. 'iquant' → logprob: -14.625077247619629

Token 1284: ' le' (ID: 505)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1285: ' succès' (ID: 55897)
  Prédit: 'succ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'succ' → logprob: -0.479810893535614
    2. 'poss' → logprob: -1.3548109531402588
    3. 'possible' → logprob: -2.604810953140259
    4. 'car' → logprob: -3.479810953140259
    5. 'success' → logprob: -5.10481071472168
    6. 'bon' → logprob: -5.72981071472168
    7. ' succès' → logprob: -5.85481071472168
    8. 'accept' → logprob: -6.47981071472168
    9. 'ré' → logprob: -7.10481071472168
    10. 'programme' → logprob: -7.47981071472168

Token 1286: '.

' (ID: 364)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1287: 'if' (ID: 366)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8308366537094116
    2. '<|end|>' → logprob: -0.8308366537094116
    3. '\n' → logprob: -3.205836772918701
    4. ':' → logprob: -3.205836772918701
    5. '\' → logprob: -3.705836772918701
    6. '
' → logprob: -4.705836772918701
    7. '```' → logprob: -4.955836772918701
    8. '#' → logprob: -6.455836772918701
    9. '(' → logprob: -7.205836772918701
    10. '}' → logprob: -7.330836772918701

Token 1288: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.005508957430720329
    2. '__' → logprob: -5.255508899688721
    3. ' ' → logprob: -8.255509376525879
    4. ' ' → logprob: -12.255509376525879
    5. 'name' → logprob: -13.130509376525879
    6. '​' → logprob: -13.255509376525879
    7. '_' → logprob: -13.505509376525879
    8. '_name' → logprob: -13.505509376525879
    9. ' True' → logprob: -13.755509376525879
    10. ' ' → logprob: -13.880509376525879

Token 1289: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.040377918630838394
    2. 'name' → logprob: -3.4153778553009033
    3. ' ==' → logprob: -6.290378093719482
    4. '==' → logprob: -6.665378093719482
    5. '_' → logprob: -6.790378093719482
    6. '"' → logprob: -6.915378093719482
    7. ''' → logprob: -7.790378093719482
    8. ' __' → logprob: -8.790377616882324
    9. '=="' → logprob: -9.040377616882324
    10. 'main' → logprob: -9.165377616882324

Token 1290: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.01888905093073845
    2. '==' → logprob: -4.0188889503479
    3. '=="' → logprob: -7.8938889503479
    4. ' ==' → logprob: -8.018889427185059
    5. '=='' → logprob: -11.018889427185059
    6. '"' → logprob: -12.393889427185059
    7. '__('' → logprob: -12.768889427185059
    8. '___' → logprob: -12.768889427185059
    9. '____' → logprob: -13.393889427185059
    10. '__.__' → logprob: -13.393889427185059

Token 1291: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.02966439537703991
    2. ' ==' → logprob: -4.029664516448975
    3. '=="' → logprob: -4.654664516448975
    4. '__' → logprob: -6.404664516448975
    5. '=='' → logprob: -8.529664039611816
    6. '=' → logprob: -10.029664039611816
    7. '==
' → logprob: -10.404664039611816
    8. '===' → logprob: -13.529664039611816
    9. '[' → logprob: -13.779664039611816
    10. '"' → logprob: -13.779664039611816

Token 1292: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.008653218857944012
    2. ''' → logprob: -4.758653163909912
    3. ' "__' → logprob: -10.75865364074707
    4. '__' → logprob: -11.00865364074707
    5. ' '__' → logprob: -14.38365364074707
    6. '"name' → logprob: -15.75865364074707
    7. '"user' → logprob: -17.13365364074707
    8. '"_' → logprob: -17.25865364074707
    9. '"class' → logprob: -17.38365364074707
    10. '("__' → logprob: -18.00865364074707

Token 1293: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -2.935296834039036e-06
    2. 'name' → logprob: -13.00000286102295
    3. '__' → logprob: -14.87500286102295
    4. ' main' → logprob: -15.87500286102295
    5. '_main' → logprob: -16.250003814697266
    6. '	main' → logprob: -18.625003814697266
    7. '"' → logprob: -20.000003814697266
    8. '-main' → logprob: -20.125003814697266
    9. '(main' → logprob: -21.125003814697266
    10. 'built' → logprob: -21.375003814697266

Token 1294: '__' (ID: 771)
  Prédit: '__":
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.20152832567691803
    2. '__' → logprob: -1.7015283107757568
    3. '__':
' → logprob: -9.076528549194336
    4. '"' → logprob: -14.951528549194336
    5. '__["' → logprob: -15.326528549194336
    6. '__",' → logprob: -16.826528549194336
    7. '__
' → logprob: -17.201528549194336
    8. '__
' → logprob: -17.701528549194336
    9. '```' → logprob: -17.826528549194336
    10. ' "__' → logprob: -18.076528549194336

Token 1295: '":' (ID: 1243)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.42332592606544495
    2. ':' → logprob: -1.5483258962631226
    3. '__":
' → logprob: -2.298326015472412
    4. ':
' → logprob: -3.923326015472412
    5. '_' → logprob: -4.923326015472412
    6. '__:' → logprob: -6.298326015472412
    7. '__':
' → logprob: -7.048326015472412
    8. '   ' → logprob: -7.298326015472412
    9. '__
' → logprob: -7.298326015472412
    10. '():
' → logprob: -8.423325538635254

Token 1296: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010112535674124956
    2. '    
' → logprob: -7.001011371612549
    3. '	main' → logprob: -9.50101089477539
    4. '    ' → logprob: -12.25101089477539
    5. '\n' → logprob: -12.25101089477539
    6. ' main' → logprob: -12.87601089477539
    7. '   ' → logprob: -13.37601089477539
    8. '```' → logprob: -13.37601089477539
    9. '
' → logprob: -13.50101089477539
    10. 'main' → logprob: -13.62601089477539

Token 1297: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00032640635618008673
    2. 'main' → logprob: -8.500326156616211
    3. '	main' → logprob: -9.125326156616211
    4. '    
' → logprob: -11.625326156616211
    5. ' main' → logprob: -12.875326156616211
    6. '   ' → logprob: -13.500326156616211
    7. '(main' → logprob: -14.875326156616211
    8. '```' → logprob: -15.625326156616211
    9. '       ' → logprob: -16.00032615661621
    10. '_main' → logprob: -16.37532615661621

Token 1298: ' Cette' (ID: 27383)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007244425360113382
    2. '    
' → logprob: -5.88224458694458
    3. '	main' → logprob: -6.00724458694458
    4. ' main' → logprob: -6.63224458694458
    5. 'main' → logprob: -7.50724458694458
    6. '    ' → logprob: -10.882244110107422
    7. '   ' → logprob: -10.882244110107422
    8. '
' → logprob: -11.257244110107422
    9. '\n' → logprob: -11.882244110107422
    10. '(main' → logprob: -12.007244110107422

Token 1299: ' condition' (ID: 7060)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08817509561777115
    2. '__' → logprob: -3.463175058364868
    3. ' line' → logprob: -4.088175296783447
    4. '_' → logprob: -4.338175296783447
    5. ' :' → logprob: -4.963175296783447
    6. ' ' → logprob: -5.213175296783447
    7. ' ' → logprob: -6.338175296783447
    8. ' main' → logprob: -6.713175296783447
    9. ' condition' → logprob: -6.713175296783447
    10. ' __' → logprob: -6.838175296783447

Token 1300: ' spéciale' (ID: 142408)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004814103711396456
    2. ':
' → logprob: -6.004814147949219
    3. '   ' → logprob: -6.504814147949219
    4. '<|end|>' → logprob: -7.504814147949219
    5. '```' → logprob: -8.504814147949219
    6. ' :' → logprob: -10.754814147949219
    7. '<|end|>' → logprob: -11.129814147949219
    8. '    
' → logprob: -11.629814147949219
    9. '{' → logprob: -11.754814147949219
    10. '
' → logprob: -12.129814147949219

Token 1301: ' permet' (ID: 11798)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01335268933326006
    2. ':
' → logprob: -4.388352870941162
    3. '   ' → logprob: -7.763352870941162
    4. '<|end|>' → logprob: -8.388352394104004
    5. '```' → logprob: -10.138352394104004
    6. '
' → logprob: -10.388352394104004
    7. '    
' → logprob: -10.638352394104004
    8. ' :' → logprob: -11.013352394104004
    9. '<|end|>' → logprob: -11.263352394104004
    10. '{' → logprob: -11.763352394104004

Token 1302: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09594014286994934
    2. 'd' → logprob: -3.095940113067627
    3. ' de' → logprob: -3.845940113067627
    4. 'de' → logprob: -4.595940113067627
    5. ' d' → logprob: -4.845940113067627
    6. '  ' → logprob: -5.970940113067627
    7. ':' → logprob: -6.720940113067627
    8. ' ' → logprob: -7.470940113067627
    9. '    ' → logprob: -7.720940113067627
    10. 'import' → logprob: -8.220940589904785

Token 1303: ' vérifier' (ID: 93671)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.057656168937683105
    2. ' main' → logprob: -3.1826562881469727
    3. '   ' → logprob: -4.807656288146973
    4. 'import' → logprob: -5.807656288146973
    5. '```' → logprob: -7.307656288146973
    6. '__' → logprob: -7.432656288146973
    7. 'run' → logprob: -8.182656288146973
    8. '  ' → logprob: -8.682656288146973
    9. '	main' → logprob: -8.807656288146973
    10. 'if' → logprob: -8.807656288146973

Token 1304: ' si' (ID: 1784)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03583875671029091
    2. '   ' → logprob: -3.4108388423919678
    3. ' :' → logprob: -7.535838603973389
    4. '_' → logprob: -7.785838603973389
    5. '  ' → logprob: -7.910838603973389
    6. ' que' → logprob: -7.910838603973389
    7. ':
' → logprob: -9.410839080810547
    8. '.' → logprob: -9.785839080810547
    9. ' ' → logprob: -9.785839080810547
    10. ' ' → logprob: -10.160839080810547

Token 1305: ' le' (ID: 505)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.12716957926750183
    2. ' __' → logprob: -2.127169609069824
    3. ' True' → logprob: -8.752169609069824
    4. 'True' → logprob: -10.252169609069824
    5. ' ' → logprob: -11.002169609069824
    6. ' ' → logprob: -11.127169609069824
    7. '   ' → logprob: -12.127169609069824
    8. '_' → logprob: -12.377169609069824
    9. '	' → logprob: -12.877169609069824
    10. ' le' → logprob: -14.377169609069824

Token 1306: ' script' (ID: 11713)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0017847756389528513
    2. ' __' → logprob: -6.626784801483154
    3. ' script' → logprob: -8.001784324645996
    4. 'name' → logprob: -9.876784324645996
    5. 'script' → logprob: -10.251784324645996
    6. 'nom' → logprob: -11.501784324645996
    7. '_' → logprob: -11.751784324645996
    8. '___' → logprob: -11.876784324645996
    9. '_script' → logprob: -12.751784324645996
    10. '_name' → logprob: -12.876784324645996

Token 1307: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.2776678800582886
    2. 'est' → logprob: -1.5276678800582886
    3. '__' → logprob: -4.652667999267578
    4. ' ==' → logprob: -4.902667999267578
    5. ' is' → logprob: -5.902667999267578
    6. 'a' → logprob: -6.277667999267578
    7. '==' → logprob: -7.277667999267578
    8. 'name' → logprob: -7.402667999267578
    9. ' __' → logprob: -8.027667999267578
    10. '_est' → logprob: -8.027667999267578

Token 1308: ' exécut' (ID: 165350)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.7517892122268677
    2. 'le' → logprob: -1.0017892122268677
    3. ' exécut' → logprob: -2.751789093017578
    4. 'ex' → logprob: -2.876789093017578
    5. 'execut' → logprob: -3.501789093017578
    6. 'l' → logprob: -6.501789093017578
    7. 'exec' → logprob: -6.501789093017578
    8. 'import' → logprob: -6.626789093017578
    9. ' le' → logprob: -7.126789093017578
    10. ' __' → logprob: -7.126789093017578

Token 1309: 'é' (ID: 377)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0030652955174446106
    2. ' __' → logprob: -6.75306510925293
    3. ' en' → logprob: -7.25306510925293
    4. 'é' → logprob: -7.87806510925293
    5. 'e' → logprob: -8.50306510925293
    6. ' directement' → logprob: -8.87806510925293
    7. 'direct' → logprob: -9.00306510925293
    8. '_' → logprob: -9.12806510925293
    9. ' directly' → logprob: -10.25306510925293
    10. 'd' → logprob: -10.50306510925293

Token 1310: ' directement' (ID: 52317)
  Prédit: 'direct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direct' → logprob: -0.7665414214134216
    2. ' directement' → logprob: -1.2665414810180664
    3. '   ' → logprob: -1.8915414810180664
    4. ' directly' → logprob: -2.8915414810180664
    5. ' en' → logprob: -3.5165414810180664
    6. ' as' → logprob: -5.391541481018066
    7. '    ' → logprob: -6.266541481018066
    8. ' direct' → logprob: -6.766541481018066
    9. ' __' → logprob: -7.266541481018066
    10. '__' → logprob: -7.516541481018066

Token 1311: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003695443505421281
    2. '   ' → logprob: -5.878695487976074
    3. ':
' → logprob: -7.253695487976074
    4. ' :' → logprob: -10.128695487976074
    5. '<|end|>' → logprob: -10.128695487976074
    6. '```' → logprob: -10.628695487976074
    7. '.' → logprob: -10.878695487976074
    8. '{' → logprob: -11.253695487976074
    9. ' rather' → logprob: -12.253695487976074
    10. '>' → logprob: -12.503695487976074

Token 1312: 'pas' (ID: 21122)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.16695168614387512
    2. '   ' → logprob: -2.7919516563415527
    3. ' __' → logprob: -3.0419516563415527
    4. ' rather' → logprob: -3.7919516563415527
    5. 'main' → logprob: -5.291951656341553
    6. 'True' → logprob: -6.041951656341553
    7. 'instead' → logprob: -6.041951656341553
    8. 'rather' → logprob: -6.041951656341553
    9. ' main' → logprob: -6.291951656341553
    10. 'import' → logprob: -6.291951656341553

Token 1313: ' import' (ID: 1588)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.0069379559718072414
    2. 'import' → logprob: -6.2569379806518555
    3. 'en' → logprob: -6.6319379806518555
    4. ' comme' → logprob: -6.7569379806518555
    5. ' par' → logprob: -7.6319379806518555
    6. ' as' → logprob: -7.6319379806518555
    7. '__' → logprob: -7.6319379806518555
    8. ' via' → logprob: -8.381937980651855
    9. ' directement' → logprob: -8.881937980651855
    10. ' depuis' → logprob: -9.381937980651855

Token 1314: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.006808568723499775
    2. '__' → logprob: -5.506808757781982
    3. 'ed' → logprob: -6.006808757781982
    4. 'É' → logprob: -9.756808280944824
    5. 'ée' → logprob: -9.756808280944824
    6. '&eacute' → logprob: -9.881808280944824
    7. '_' → logprob: -11.006808280944824
    8. 'e' → logprob: -11.256808280944824
    9. ' __' → logprob: -11.506808280944824
    10. 'és' → logprob: -11.631808280944824

Token 1315: ' comme' (ID: 7971)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2692573368549347
    2. '):' → logprob: -2.0192573070526123
    3. ')' → logprob: -2.6442573070526123
    4. '):
' → logprob: -4.144257545471191
    5. ':
' → logprob: -4.769257545471191
    6. '   ' → logprob: -5.519257545471191
    7. ' ):' → logprob: -6.769257545471191
    8. ' :' → logprob: -7.019257545471191
    9. ' )' → logprob: -7.769257545471191
    10. '.' → logprob: -7.769257545471191

Token 1316: ' module' (ID: 8827)
  Prédit: 'module'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'module' → logprob: -0.27470532059669495
    2. ' un' → logprob: -1.6497052907943726
    3. ' module' → logprob: -3.274705410003662
    4. 'un' → logprob: -5.149705410003662
    5. '__' → logprob: -6.774705410003662
    6. ' ' → logprob: -6.899705410003662
    7. 'import' → logprob: -7.399705410003662
    8. ' __' → logprob: -7.524705410003662
    9. '	module' → logprob: -8.524704933166504
    10. 'a' → logprob: -8.649704933166504

Token 1317: ').
' (ID: 6294)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05196315050125122
    2. '):' → logprob: -3.8019630908966064
    3. ':
' → logprob: -4.4269633293151855
    4. '   ' → logprob: -4.5519633293151855
    5. ')' → logprob: -5.6769633293151855
    6. '.' → logprob: -6.8019633293151855
    7. '):
' → logprob: -7.3019633293151855
    8. ' :' → logprob: -8.676962852478027
    9. '```' → logprob: -8.801962852478027
    10. '#' → logprob: -10.176962852478027

Token 1318: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008937406353652477
    2. '	main' → logprob: -4.758937358856201
    3. '    
' → logprob: -8.63393783569336
    4. 'main' → logprob: -9.75893783569336
    5. '   ' → logprob: -9.88393783569336
    6. ' main' → logprob: -10.63393783569336
    7. '(main' → logprob: -13.38393783569336
    8. '	Main' → logprob: -13.38393783569336
    9. '	
' → logprob: -13.63393783569336
    10. ' ' → logprob: -14.00893783569336

Token 1319: ' main' (ID: 2758)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26941296458244324
    2. 'main' (adapté à ' main') → logprob: -2.0194129943847656
    3. '	main' → logprob: -2.2694129943847656
    4. ' main' → logprob: -9.894412994384766
    5. '   ' → logprob: -11.394412994384766
    6. '\t' → logprob: -12.769412994384766
    7. '_main' → logprob: -15.144412994384766
    8. '(main' → logprob: -15.269412994384766
    9. '    
' → logprob: -15.644412994384766
    10. ' ' → logprob: -15.644412994384766

Token 1320: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0001628956088097766
    2. '()
' → logprob: -8.750163078308105
    3. '(' → logprob: -13.250163078308105
    4. '()\' → logprob: -13.500163078308105
    5. '()`' → logprob: -15.125163078308105
    6. '()

' → logprob: -15.125163078308105
    7. '()"' → logprob: -15.625163078308105
    8. ' ()' → logprob: -15.750163078308105
    9. '```' → logprob: -15.875163078308105
    10. '();' → logprob: -16.12516212463379

Token 1321: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1322: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1323: ' Si' (ID: 7832)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1324: ' c' (ID: 274)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0038212179206311703
    2. 'True' → logprob: -6.12882137298584
    3. ' True' → logprob: -7.12882137298584
    4. ' __' → logprob: -7.12882137298584
    5. '_' → logprob: -10.75382137298584
    6. '___' → logprob: -12.50382137298584
    7. 'not' → logprob: -13.37882137298584
    8. '()' → logprob: -14.12882137298584
    9. '  ' → logprob: -14.25382137298584
    10. '(True' → logprob: -14.37882137298584

Token 1325: ''est' (ID: 6616)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.09836982935667038
    2. '_' → logprob: -2.723369836807251
    3. '()' → logprob: -3.973369836807251
    4. 'on' → logprob: -6.348369598388672
    5. '```' → logprob: -6.473369598388672
    6. ''est' → logprob: -6.598369598388672
    7. '___' → logprob: -6.723369598388672
    8. ' __' → logprob: -6.848369598388672
    9. '(__' → logprob: -7.973369598388672
    10. '#' → logprob: -8.473369598388672

Token 1326: ' le' (ID: 505)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.17322896420955658
    2. '<|end|>' → logprob: -1.9232289791107178
    3. '_' → logprob: -5.673228740692139
    4. '```' → logprob: -5.923228740692139
    5. ')' → logprob: -6.048228740692139
    6. '(' → logprob: -7.173228740692139
    7. ' ()' → logprob: -7.298228740692139
    8. '__' → logprob: -8.048229217529297
    9. ' ' → logprob: -8.048229217529297
    10. '  ' → logprob: -8.048229217529297

Token 1327: ' cas' (ID: 2108)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.05078453570604324
    2. 'script' → logprob: -3.9257845878601074
    3. 'main' → logprob: -4.175784587860107
    4. '```' → logprob: -6.175784587860107
    5. 'programme' → logprob: -6.300784587860107
    6. 'program' → logprob: -6.300784587860107
    7. 'direct' → logprob: -6.675784587860107
    8. 'nom' → logprob: -6.675784587860107
    9. ' __' → logprob: -6.675784587860107
    10. 'point' → logprob: -6.800784587860107

Token 1328: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1329: ' on' (ID: 402)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0009161015041172504
    2. ' main' → logprob: -7.000916004180908
    3. '	main' → logprob: -13.000916481018066
    4. '   ' → logprob: -13.250916481018066
    5. '```' → logprob: -15.625916481018066
    6. '_main' → logprob: -16.25091552734375
    7. '  ' → logprob: -16.37591552734375
    8. '(main' → logprob: -16.75091552734375
    9. '.main' → logprob: -17.00091552734375
    10. '__' → logprob: -17.50091552734375

Token 1330: ' ex' (ID: 513)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.15298648178577423
    2. '()' → logprob: -2.152986526489258
    3. ' main' → logprob: -4.277986526489258
    4. '(main' → logprob: -5.027986526489258
    5. '_' → logprob: -6.527986526489258
    6. '<|end|>' → logprob: -6.902986526489258
    7. '#' → logprob: -7.527986526489258
    8. ')' → logprob: -7.902986526489258
    9. '_main' → logprob: -8.277986526489258
    10. '  ' → logprob: -8.277986526489258

Token 1331: 'éc' (ID: 5675)
  Prédit: 'éc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éc' → logprob: -0.11915384978055954
    2. 'ecute' → logprob: -2.2441537380218506
    3. 'ecut' → logprob: -6.11915397644043
    4. 'ec' → logprob: -6.49415397644043
    5. 'é' → logprob: -6.99415397644043
    6. 'cute' → logprob: -7.24415397644043
    7. 'écut' → logprob: -8.11915397644043
    8. '#' → logprob: -8.99415397644043
    9. '   ' → logprob: -8.99415397644043
    10. 'c' → logprob: -9.61915397644043

Token 1332: 'ute' (ID: 1331)
  Prédit: 'ute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ute' → logprob: -0.055125653743743896
    2. 'cute' → logprob: -2.9301257133483887
    3. 'ecute' → logprob: -8.68012523651123
    4. 'cut' → logprob: -10.68012523651123
    5. 'ut' → logprob: -11.30512523651123
    6. 'uter' → logprob: -11.55512523651123
    7. '```' → logprob: -12.18012523651123
    8. 'utive' → logprob: -12.30512523651123
    9. '   ' → logprob: -13.18012523651123
    10. 'uteur' → logprob: -13.18012523651123

Token 1333: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0007139815716072917
    2. 'main' → logprob: -7.25071382522583
    3. '(main' → logprob: -12.875714302062988
    4. ' ()' → logprob: -14.750714302062988
    5. '()`' → logprob: -15.250714302062988
    6. '()
' → logprob: -15.375714302062988
    7. ' main' → logprob: -15.750714302062988
    8. '())' → logprob: -15.875714302062988
    9. '(' → logprob: -16.500713348388672
    10. '()]' → logprob: -17.000713348388672

Token 1334: ' fonction' (ID: 17610)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0014801019569858909
    2. 'program' → logprob: -7.3764801025390625
    3. 'programme' → logprob: -7.5014801025390625
    4. 'principal' → logprob: -8.751480102539062
    5. '__' → logprob: -10.001480102539062
    6. 'code' → logprob: -10.126480102539062
    7. '```' → logprob: -11.251480102539062
    8. 'script' → logprob: -11.501480102539062
    9. 'fonction' → logprob: -11.876480102539062
    10. ' main' → logprob: -12.126480102539062

Token 1335: ' principale' (ID: 68926)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.01451368723064661
    2. '()' → logprob: -4.2645134925842285
    3. '(main' → logprob: -8.014513969421387
    4. '(' → logprob: -12.014513969421387
    5. ' main' → logprob: -12.014513969421387
    6. '_main' → logprob: -12.139513969421387
    7. '.main' → logprob: -14.014513969421387
    8. '()`' → logprob: -14.889513969421387
    9. '()
' → logprob: -15.389513969421387
    10. '__' → logprob: -15.639513969421387

Token 1336: ' main' (ID: 2758)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1337: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7100385427474976
    2. '<|end|>' → logprob: -0.9600385427474976
    3. '
' → logprob: -2.585038661956787
    4. '\n' → logprob: -3.710038661956787
    5. ')' → logprob: -4.835038661956787
    6. '(' → logprob: -5.210038661956787
    7. '```' → logprob: -5.585038661956787
    8. '#' → logprob: -6.085038661956787
    9. '()
' → logprob: -6.085038661956787
    10. '<|end|>' → logprob: -6.960038661956787


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1335
Tokens correctement prédits (1ère position, stricte): 279
Tokens correctement prédits (1ère position, avec adaptation): 285
Tokens correctement prédits (top 10): 643
Précision stricte (1ère position): 20.90%
Précision adaptée (1ère position): 21.35%
Précision (top 10): 48.16%
================================================================================
