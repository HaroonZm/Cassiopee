================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:00:33
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n, k = map(int, input().split())
s = input()
ans = ""
i = 0
while i < n:
    if i == k - 1:
        ans += s[i].lower()
    else:
        ans += s[i]
    i += 1
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' k' (ID: 372)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023713937029242516
    2. ' =' → logprob: -4.398714065551758
    3. ',' → logprob: -4.523714065551758
    4. ' ' → logprob: -10.148714065551758
    5. '*' → logprob: -10.273714065551758
    6. '+' → logprob: -10.398714065551758
    7. ')' → logprob: -10.398714065551758
    8. '[' → logprob: -10.648714065551758
    9. '.' → logprob: -10.773714065551758
    10. '_' → logprob: -10.773714065551758

Token 4: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06230287253856659
    2. ' map' → logprob: -3.812302827835083
    3. ' n' → logprob: -4.437303066253662
    4. '0' → logprob: -4.562303066253662
    5. ' input' → logprob: -4.937303066253662
    6. 'map' → logprob: -5.812303066253662
    7. 'input' → logprob: -6.062303066253662
    8. '10' → logprob: -6.187303066253662
    9. '1' → logprob: -7.937303066253662
    10. ' int' → logprob: -8.062302589416504

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10975809395313263
    2. '<|end|>' → logprob: -2.359758138656616
    3. '```' → logprob: -5.734757900238037
    4. '<|end|>' → logprob: -5.984757900238037
    5. ')' → logprob: -7.359757900238037
    6. '(lambda' → logprob: -7.484757900238037
    7. '(user' → logprob: -7.609757900238037
    8. 'user' → logprob: -8.484758377075195
    9. '(int' → logprob: -8.609758377075195
    10. '[' → logprob: -9.109758377075195

Token 6: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.01242971420288086
    2. ')' → logprob: -5.012429714202881
    3. '(' → logprob: -5.512429714202881
    4. 'input' → logprob: -6.762429714202881
    5. '(user' → logprob: -9.387430191040039
    6. '(str' → logprob: -9.512430191040039
    7. '```' → logprob: -9.637430191040039
    8. '=input' → logprob: -9.887430191040039
    9. '(int' → logprob: -9.887430191040039
    10. ' input' → logprob: -10.512430191040039

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.576330304145813
    2. ' input' → logprob: -0.826330304145813
    3. '(input' → logprob: -7.951330184936523
    4. ')' → logprob: -10.451330184936523
    5. ',input' → logprob: -12.201330184936523
    6. '=input' → logprob: -13.076330184936523
    7. '[input' → logprob: -14.576330184936523
    8. '<input' → logprob: -14.826330184936523
    9. '	input' → logprob: -15.326330184936523
    10. 'stdin' → logprob: -15.576330184936523

Token 8: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.6826726794242859
    2. '()' → logprob: -1.5576727390289307
    3. ')' → logprob: -1.9326727390289307
    4. '().' → logprob: -2.8076727390289307
    5. '```' → logprob: -3.8076727390289307
    6. '(' → logprob: -4.057672500610352
    7. '`()' → logprob: -4.557672500610352
    8. '('' → logprob: -5.057672500610352
    9. '')' → logprob: -5.682672500610352
    10. '`)' → logprob: -5.682672500610352

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.000565541791729629
    2. 'strip' → logprob: -7.500565528869629
    3. 'rstrip' → logprob: -11.875565528869629
    4. ' split' → logprob: -12.625565528869629
    5. 'read' → logprob: -13.875565528869629
    6. ')' → logprob: -13.875565528869629
    7. '(split' → logprob: -15.625565528869629
    8. 'spl' → logprob: -15.625565528869629
    9. 'startswith' → logprob: -17.500566482543945
    10. 's' → logprob: -17.750566482543945

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08872120827436447
    2. '())' → logprob: -2.96372127532959
    3. '))' → logprob: -3.46372127532959
    4. '()' → logprob: -6.46372127532959
    5. '()))' → logprob: -8.58872127532959
    6. '`)' → logprob: -9.21372127532959
    7. '(' → logprob: -9.83872127532959
    8. '>)' → logprob: -11.46372127532959
    9. ')`' → logprob: -11.58872127532959
    10. ')))' → logprob: -11.71372127532959

Token 11: 's' (ID: 82)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1850565671920776
    2. 'if' → logprob: -1.1850565671920776
    3. 'for' → logprob: -2.435056686401367
    4. 'x' → logprob: -3.310056686401367
    5. '#' → logprob: -3.435056686401367
    6. '\n' → logprob: -3.560056686401367
    7. '```' → logprob: -3.810056686401367
    8. 'd' → logprob: -3.810056686401367
    9. 's' → logprob: -4.060056686401367
    10. ' ' → logprob: -4.185056686401367

Token 12: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13086551427841187
    2. '.' → logprob: -2.2558655738830566
    3. '=' → logprob: -4.755865573883057
    4. '[:]' → logprob: -5.630865573883057
    5. ' =' → logprob: -5.880865573883057
    6. '[:' → logprob: -7.255865573883057
    7. '[i' → logprob: -7.630865573883057
    8. '[input' → logprob: -8.380865097045898
    9. 's' → logprob: -8.880865097045898
    10. '[s' → logprob: -9.005865097045898

Token 13: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.34873753786087036
    2. ' input' → logprob: -1.2237374782562256
    3. '""' → logprob: -8.848737716674805
    4. '''' → logprob: -10.098737716674805
    5. '[input' → logprob: -10.848737716674805
    6. '"' → logprob: -11.223737716674805
    7. 'list' → logprob: -11.473737716674805
    8. '=input' → logprob: -11.723737716674805
    9. '(input' → logprob: -11.848737716674805
    10. ''' → logprob: -11.973737716674805

Token 14: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23935389518737793
    2. '()' → logprob: -1.614353895187378
    3. '('' → logprob: -5.239354133605957
    4. ''' → logprob: -5.489354133605957
    5. ')' → logprob: -6.114354133605957
    6. '"' → logprob: -7.114354133605957
    7. '("("' → logprob: -8.364354133605957
    8. '.' → logprob: -8.489354133605957
    9. '```' → logprob: -8.989354133605957
    10. '().' → logprob: -9.114354133605957

Token 15: 'ans' (ID: 616)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.873062252998352
    2. 'result' → logprob: -1.748062252998352
    3. 'if' → logprob: -1.998062252998352
    4. 'dp' → logprob: -2.3730621337890625
    5. 'c' → logprob: -3.1230621337890625
    6. 'd' → logprob: -3.3730621337890625
    7. 'counts' → logprob: -3.3730621337890625
    8. 'for' → logprob: -3.7480621337890625
    9. 'cnt' → logprob: -4.8730621337890625
    10. 'ans' → logprob: -5.1230621337890625

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38847559690475464
    2. '=' → logprob: -1.2634756565093994
    3. ' +=' → logprob: -3.5134756565093994
    4. '_' → logprob: -5.63847541809082
    5. '+=' → logprob: -5.88847541809082
    6. '+' → logprob: -6.76347541809082
    7. ' ' → logprob: -6.88847541809082
    8. '[' → logprob: -8.13847541809082
    9. '.' → logprob: -9.26347541809082
    10. '[:]' → logprob: -9.38847541809082

Token 17: ' ""
' (ID: 18061)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17359770834445953
    2. '""' → logprob: -2.173597812652588
    3. '''' → logprob: -3.923597812652588
    4. '"' → logprob: -4.298597812652588
    5. ' ' → logprob: -5.048597812652588
    6. ''' → logprob: -6.548597812652588
    7. 'n' → logprob: -6.548597812652588
    8. ' ""' → logprob: -7.298597812652588
    9. '[]' → logprob: -7.673597812652588
    10. 's' → logprob: -7.673597812652588

Token 18: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00022129806166049093
    2. 'i' → logprob: -8.875221252441406
    3. ' for' → logprob: -9.500221252441406
    4. 'f' → logprob: -12.750221252441406
    5. 'if' → logprob: -13.375221252441406
    6. 'n' → logprob: -14.125221252441406
    7. '```' → logprob: -14.875221252441406
    8. '\n' → logprob: -15.875221252441406
    9. 'd' → logprob: -16.125221252441406
    10. '\' → logprob: -16.125221252441406

Token 19: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6017925143241882
    2. ' =' → logprob: -1.351792573928833
    3. 'n' → logprob: -2.476792573928833
    4. 'f' → logprob: -3.476792573928833
    5. ' ' → logprob: -3.476792573928833
    6. ' +=' → logprob: -3.476792573928833
    7. '+' → logprob: -4.851792335510254
    8. 's' → logprob: -5.976792335510254
    9. '+=' → logprob: -6.476792335510254
    10. ' n' → logprob: -6.726792335510254

Token 20: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22542499005794525
    2. ' ' → logprob: -1.6004250049591064
    3. '1' → logprob: -11.475424766540527
    4. ' n' → logprob: -14.475424766540527
    5. '2' → logprob: -15.225424766540527
    6. 'n' → logprob: -15.225424766540527
    7. ' ' → logprob: -15.475424766540527
    8. ' len' → logprob: -15.975424766540527
    9. '6' → logprob: -16.350425720214844
    10. '3' → logprob: -16.475425720214844

Token 21: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001183204003609717
    2. ' ' → logprob: -6.751183032989502
    3. '1' → logprob: -11.37618350982666
    4. 'n' → logprob: -14.12618350982666
    5. '2' → logprob: -15.43868350982666
    6. ' n' → logprob: -15.75118350982666
    7. '=' → logprob: -16.376182556152344
    8. 'i' → logprob: -16.376182556152344
    9. 'k' → logprob: -16.563682556152344
    10. 's' → logprob: -16.626182556152344

Token 22: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.11134342849254608
    2. ' while' → logprob: -2.6113433837890625
    3. '\n' → logprob: -4.3613433837890625
    4. ':' → logprob: -4.7363433837890625
    5. 'w' → logprob: -5.7363433837890625
    6. '\' → logprob: -6.1113433837890625
    7. '<|end|>' → logprob: -6.4863433837890625
    8. '```' → logprob: -7.3613433837890625
    9. 'While' → logprob: -7.6113433837890625
    10. 'n' → logprob: -7.7363433837890625

Token 23: 'while' (ID: 7032)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 24: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.012934557162225246
    2. 'i' → logprob: -4.637934684753418
    3. ' ' → logprob: -5.762934684753418
    4. ' ' → logprob: -11.762934684753418
    5. ' n' → logprob: -11.887934684753418
    6. 's' → logprob: -12.387934684753418
    7. ' True' → logprob: -12.512934684753418
    8. ' s' → logprob: -12.762934684753418
    9. 'n' → logprob: -13.012934684753418
    10. '  ' → logprob: -13.637934684753418

Token 25: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1803588569164276
    2. '<' → logprob: -1.80535888671875
    3. ' <=' → logprob: -7.68035888671875
    4. ' ' → logprob: -9.68035888671875
    5. '<=' → logprob: -10.05535888671875
    6. '<len' → logprob: -10.93035888671875
    7. '<n' → logprob: -11.05535888671875
    8. '<size' → logprob: -12.55535888671875
    9. ' <
' → logprob: -13.18035888671875
    10. '<num' → logprob: -13.68035888671875

Token 26: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.04623357579112053
    2. 'n' → logprob: -3.171233654022217
    3. ' len' → logprob: -5.921233654022217
    4. 'len' → logprob: -8.171233177185059
    5. ' ' → logprob: -8.421233177185059
    6. ' k' → logprob: -10.421233177185059
    7. 'k' → logprob: -11.171233177185059
    8. 's' → logprob: -16.546234130859375
    9. ' ' → logprob: -16.671234130859375
    10. '	n' → logprob: -16.671234130859375

Token 27: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0026585354935377836
    2. ' and' → logprob: -6.252658367156982
    3. ':
' → logprob: -8.00265884399414
    4. ' :' → logprob: -8.37765884399414
    5. 'and' → logprob: -9.12765884399414
    6. ':**' → logprob: -11.37765884399414
    7. '+:' → logprob: -11.50265884399414
    8. '):' → logprob: -12.00265884399414
    9. '   ' → logprob: -12.37765884399414
    10. '':' → logprob: -12.75265884399414

Token 28: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5552446246147156
    2. ' if' → logprob: -1.6802446842193604
    3. '   ' → logprob: -1.9302446842193604
    4. 's' → logprob: -2.9302446842193604
    5. ' s' → logprob: -4.055244445800781
    6. '    ' → logprob: -4.555244445800781
    7. 'if' → logprob: -5.430244445800781
    8. '  ' → logprob: -6.430244445800781
    9. '```' → logprob: -6.680244445800781
    10. ' i' → logprob: -7.055244445800781

Token 29: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.20333462953567505
    2. 'c' → logprob: -2.2033345699310303
    3. ' if' → logprob: -3.5783345699310303
    4. 'count' → logprob: -3.9533345699310303
    5. 'j' → logprob: -4.953334808349609
    6. '   ' → logprob: -5.203334808349609
    7. 'cnt' → logprob: -5.703334808349609
    8. 'ch' → logprob: -5.828334808349609
    9. 's' → logprob: -6.328334808349609
    10. 'char' → logprob: -6.828334808349609

Token 30: ' i' (ID: 575)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.03682577237486839
    2. 's' → logprob: -3.536825656890869
    3. ' i' → logprob: -5.286825656890869
    4. ' k' → logprob: -7.036825656890869
    5. 'i' → logprob: -7.286825656890869
    6. ' ' → logprob: -8.036826133728027
    7. 'k' → logprob: -9.661826133728027
    8. ' (' → logprob: -11.161826133728027
    9. ' n' → logprob: -12.036826133728027
    10. '  ' → logprob: -12.161826133728027

Token 31: ' ==' (ID: 951)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2833911180496216
    2. ' +' → logprob: -1.4083911180496216
    3. ' ' → logprob: -6.783390998840332
    4. ' ==' → logprob: -7.283390998840332
    5. '==' → logprob: -8.783390998840332
    6. ' <' → logprob: -9.158390998840332
    7. ' <=' → logprob: -9.783390998840332
    8. '%' → logprob: -11.408390998840332
    9. '<' → logprob: -11.658390998840332
    10. ' !=' → logprob: -11.658390998840332

Token 32: ' k' (ID: 372)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9298267960548401
    2. '0' → logprob: -1.0548267364501953
    3. ' n' → logprob: -1.8048267364501953
    4. 'n' → logprob: -2.8048267364501953
    5. 'k' → logprob: -3.8048267364501953
    6. ' k' → logprob: -4.679826736450195
    7. 's' → logprob: -8.304826736450195
    8. ' s' → logprob: -9.554826736450195
    9. '(n' → logprob: -10.367326736450195
    10. '<n' → logprob: -10.429826736450195

Token 33: ' -' (ID: 533)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6931572556495667
    2. ' or' → logprob: -0.9431572556495667
    3. '-' → logprob: -3.318157196044922
    4. ' ' → logprob: -3.568157196044922
    5. '+' → logprob: -3.818157196044922
    6. '   ' → logprob: -5.193157196044922
    7. ' :' → logprob: -5.318157196044922
    8. '    ' → logprob: -5.443157196044922
    9. '<|end|>' → logprob: -6.193157196044922
    10. ' -' → logprob: -6.318157196044922

Token 34: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011755822924897075
    2. ' ' → logprob: -6.751175403594971
    3. '<|end|>' → logprob: -13.126175880432129
    4. '2' → logprob: -13.751175880432129
    5. '-' → logprob: -14.688675880432129
    6. '<|end|>' → logprob: -14.876175880432129
    7. '   ' → logprob: -15.188675880432129
    8. '...' → logprob: -15.251175880432129
    9. '0' → logprob: -15.626175880432129
    10. '  ' → logprob: -15.938675880432129

Token 35: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.061676347395405e-05
    2. ' ' → logprob: -10.12505054473877
    3. '2' → logprob: -11.62505054473877
    4. '   ' → logprob: -15.31255054473877
    5. '0' → logprob: -15.37505054473877
    6. '```' → logprob: -15.93755054473877
    7. '...' → logprob: -16.125051498413086
    8. '۱' → logprob: -16.437551498413086
    9. '  ' → logprob: -16.562551498413086
    10. '-' → logprob: -16.687551498413086

Token 36: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006620417116209865
    2. ' or' → logprob: -8.875661849975586
    3. ':
' → logprob: -9.125661849975586
    4. ' and' → logprob: -9.250661849975586
    5. '):' → logprob: -9.250661849975586
    6. ')' → logprob: -9.875661849975586
    7. '<|end|>' → logprob: -10.000661849975586
    8. ' :' → logprob: -10.125661849975586
    9. ',' → logprob: -10.625661849975586
    10. '   ' → logprob: -10.875661849975586

Token 37: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.034447625279426575
    2. ' ans' → logprob: -4.78444766998291
    3. '   ' → logprob: -4.90944766998291
    4. ':' → logprob: -5.15944766998291
    5. 's' → logprob: -5.65944766998291
    6. 'ans' → logprob: -5.90944766998291
    7. '    ' → logprob: -6.40944766998291
    8. ' s' → logprob: -6.65944766998291
    9. ' ' → logprob: -7.90944766998291
    10. '#' → logprob: -8.03444766998291

Token 38: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.1732112318277359
    2. '   ' → logprob: -2.0482113361358643
    3. ' ans' → logprob: -3.7982113361358643
    4. 's' → logprob: -5.673211097717285
    5. 'continue' → logprob: -7.173211097717285
    6. '	ans' → logprob: -7.173211097717285
    7. 'i' → logprob: -7.298211097717285
    8. '       ' → logprob: -8.048211097717285
    9. 'for' → logprob: -8.048211097717285
    10. '(ans' → logprob: -8.173211097717285

Token 39: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2327098846435547
    2. ' +=' → logprob: -1.6077098846435547
    3. '+' → logprob: -5.107709884643555
    4. '+='' → logprob: -7.357709884643555
    5. '+="' → logprob: -7.982709884643555
    6. '=' → logprob: -9.107709884643555
    7. ' +' → logprob: -9.607709884643555
    8. '.append' → logprob: -10.732709884643555
    9. '+=(' → logprob: -10.857709884643555
    10. ' =' → logprob: -11.982709884643555

Token 40: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.15298126637935638
    2. ''' → logprob: -3.1529812812805176
    3. '"' → logprob: -3.4029812812805176
    4. 'ans' → logprob: -3.7779812812805176
    5. '"s' → logprob: -4.027981281280518
    6. ''s' → logprob: -4.902981281280518
    7. ''*' → logprob: -5.277981281280518
    8. '"#' → logprob: -6.152981281280518
    9. ''#' → logprob: -6.527981281280518
    10. ''a' → logprob: -6.527981281280518

Token 41: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.025642169639468193
    2. '.upper' → logprob: -4.525642395019531
    3. '[' → logprob: -4.650642395019531
    4. '.lower' → logprob: -5.775642395019531
    5. '[::-' → logprob: -8.150642395019531
    6. '[k' → logprob: -8.400642395019531
    7. '[s' → logprob: -8.650642395019531
    8. '[:' → logprob: -9.275642395019531
    9. '[A' → logprob: -9.400642395019531
    10. '".' → logprob: -9.400642395019531

Token 42: '].' (ID: 1651)
  Prédit: '.upper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.upper' → logprob: -0.42921414971351624
    2. '.lower' → logprob: -1.1792141199111938
    3. '.' → logprob: -3.4292142391204834
    4. '.swap' → logprob: -5.679214000701904
    5. ')' → logprob: -6.304214000701904
    6. ').' → logprob: -6.429214000701904
    7. '].' → logprob: -6.679214000701904
    8. '.capitalize' → logprob: -8.679214477539062
    9. ']' → logprob: -9.179214477539062
    10. 'upper' → logprob: -9.429214477539062

Token 43: 'lower' (ID: 30330)
  Prédit: 'upper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' → logprob: -0.13411779701709747
    2. 'lower' → logprob: -2.259117841720581
    3. 'swap' → logprob: -3.884117841720581
    4. 'capitalize' → logprob: -8.63411808013916
    5. 'isl' → logprob: -8.75911808013916
    6. 'replace' → logprob: -9.25911808013916
    7. '.upper' → logprob: -10.50911808013916
    8. 'uppercase' → logprob: -11.38411808013916
    9. 'upp' → logprob: -12.13411808013916
    10. 'up' → logprob: -12.38411808013916

Token 44: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38751742243766785
    2. '()' → logprob: -1.1375174522399902
    3. '"' → logprob: -8.262516975402832
    4. '(
' → logprob: -9.387516975402832
    5. '(

' → logprob: -9.762516975402832
    6. '```' → logprob: -9.762516975402832
    7. ''' → logprob: -10.012516975402832
    8. '`' → logprob: -10.887516975402832
    9. '`()' → logprob: -11.012516975402832
    10. '()(' → logprob: -11.137516975402832

Token 45: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4372464716434479
    2. 'i' → logprob: -1.3122464418411255
    3. 'else' → logprob: -2.687246561050415
    4. 'elif' → logprob: -5.187246322631836
    5. ' i' → logprob: -5.437246322631836
    6. ' else' → logprob: -6.437246322631836
    7. '    
' → logprob: -6.437246322631836
    8. '\n' → logprob: -6.562246322631836
    9. '
' → logprob: -7.312246322631836
    10. '[i' → logprob: -8.437246322631836

Token 46: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.15334366261959076
    2. ' else' → logprob: -2.153343677520752
    3. 'elif' → logprob: -4.028343677520752
    4. 'i' → logprob: -5.278343677520752
    5. '   ' → logprob: -6.278343677520752
    6. ' elif' → logprob: -7.903343677520752
    7. ' ' → logprob: -8.403343200683594
    8. ')' → logprob: -8.403343200683594
    9. ' i' → logprob: -8.903343200683594
    10. '<|end|>' → logprob: -9.278343200683594

Token 47: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07282431423664093
    2. '       ' → logprob: -2.697824239730835
    3. ':
' → logprob: -6.072824478149414
    4. '   ' → logprob: -8.822824478149414
    5. '<|end|>' → logprob: -8.947824478149414
    6. '):' → logprob: -9.822824478149414
    7. '+' → logprob: -9.822824478149414
    8. 'ans' → logprob: -9.822824478149414
    9. ' :' → logprob: -11.072824478149414
    10. ',' → logprob: -11.072824478149414

Token 48: '       ' (ID: 309)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.22863371670246124
    2. ' ans' → logprob: -2.2286336421966553
    3. '       ' → logprob: -2.3536336421966553
    4. '   ' → logprob: -6.853633880615234
    5. '	ans' → logprob: -7.728633880615234
    6. '(ans' → logprob: -9.728633880615234
    7. '```' → logprob: -9.978633880615234
    8. '    ' → logprob: -10.728633880615234
    9. '      ' → logprob: -11.353633880615234
    10. 's' → logprob: -11.478633880615234

Token 49: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.023263998329639435
    2. ' ans' → logprob: -3.773263931274414
    3. '	ans' → logprob: -11.273263931274414
    4. '   ' → logprob: -12.648263931274414
    5. '(ans' → logprob: -13.773263931274414
    6. 'answer' → logprob: -14.398263931274414
    7. '       ' → logprob: -14.648263931274414
    8. '_ans' → logprob: -15.773263931274414
    9. ' ' → logprob: -16.023263931274414
    10. '  ' → logprob: -16.773263931274414

Token 50: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4987564980983734
    2. ' +=' → logprob: -0.9987565279006958
    3. '+' → logprob: -3.7487564086914062
    4. ' +' → logprob: -7.748756408691406
    5. '+='' → logprob: -8.123756408691406
    6. ']+=' → logprob: -9.998756408691406
    7. '+="' → logprob: -10.123756408691406
    8. ')' → logprob: -11.873756408691406
    9. '.append' → logprob: -13.248756408691406
    10. '=' → logprob: -13.373756408691406

Token 51: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0788913294672966
    2. ' s' → logprob: -2.5788912773132324
    3. ' ' → logprob: -13.70389175415039
    4. '(s' → logprob: -15.32889175415039
    5. '	s' → logprob: -16.70389175415039
    6. '_s' → logprob: -17.07889175415039
    7. '   ' → logprob: -17.07889175415039
    8. '  ' → logprob: -17.32889175415039
    9. ' ' → logprob: -17.95389175415039
    10. '`s' → logprob: -18.20389175415039

Token 52: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.1928003813372925e-05
    2. '[' → logprob: -9.875051498413086
    3. 'i' → logprob: -15.625051498413086
    4. '```' → logprob: -16.125051498413086
    5. '[I' → logprob: -16.500051498413086
    6. '[
' → logprob: -17.500051498413086
    7. '[...]' → logprob: -17.875051498413086
    8. '\[' → logprob: -18.500051498413086
    9. '[int' → logprob: -18.625051498413086
    10. '`' → logprob: -18.750051498413086

Token 53: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01860206201672554
    2. '].' → logprob: -4.893601894378662
    3. '.upper' → logprob: -5.268601894378662
    4. ')' → logprob: -5.393601894378662
    5. '<|end|>' → logprob: -7.393601894378662
    6. '])' → logprob: -7.893601894378662
    7. '.' → logprob: -9.39360237121582
    8. ').' → logprob: -10.39360237121582
    9. '}' → logprob: -10.64360237121582
    10. '[' → logprob: -10.76860237121582

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7647683620452881
    2. 'i' → logprob: -1.389768362045288
    3. '\n' → logprob: -1.764768362045288
    4. '
' → logprob: -2.764768362045288
    5. '    
' → logprob: -3.889768362045288
    6. ' i' → logprob: -3.889768362045288
    7. ' 
' → logprob: -6.014768600463867
    8. '  
' → logprob: -6.264768600463867
    9. '```' → logprob: -6.389768600463867
    10. '	i' → logprob: -6.639768600463867

Token 55: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.022162754088640213
    2. '   ' → logprob: -4.522162914276123
    3. ' i' → logprob: -4.522162914276123
    4. '	i' → logprob: -8.772162437438965
    5. '    
' → logprob: -11.897162437438965
    6. '\n' → logprob: -11.897162437438965
    7. '  ' → logprob: -12.522162437438965
    8. '_i' → logprob: -12.772162437438965
    9. ' ' → logprob: -13.022162437438965
    10. '```' → logprob: -13.147162437438965

Token 56: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10106007754802704
    2. '+=' → logprob: -2.351060152053833
    3. ' +=' → logprob: -7.226059913635254
    4. '++' → logprob: -9.101059913635254
    5. ' +' → logprob: -11.976059913635254
    6. '=' → logprob: -12.476059913635254
    7. '+++' → logprob: -13.476059913635254
    8. '+="' → logprob: -14.226059913635254
    9. '+='' → logprob: -14.351059913635254
    10. '```' → logprob: -14.976059913635254

Token 57: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -17.3750057220459
    4. '```' → logprob: -19.0000057220459
    5. '+' → logprob: -20.1250057220459
    6. '  ' → logprob: -21.3750057220459
    7. '１' → logprob: -22.0000057220459
    8. '0' → logprob: -22.4375057220459
    9. '`' → logprob: -22.6875057220459
    10. '       ' → logprob: -22.7500057220459

Token 58: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.500000953674316
    3. '```' → logprob: -16.625
    4. '   ' → logprob: -17.75
    5. '１' → logprob: -19.375
    6. '+' → logprob: -19.5
    7. '۱' → logprob: -20.125
    8. '`' → logprob: -20.375
    9. '१' → logprob: -20.4375
    10. '0' → logprob: -20.5

Token 59: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.981667537620524e-06
    2. ' print' → logprob: -13.375001907348633
    3. '
' → logprob: -15.375001907348633
    4. '```' → logprob: -16.625001907348633
    5. '.print' → logprob: -19.750001907348633
    6. 'pr' → logprob: -19.750001907348633
    7. '#print' → logprob: -20.125001907348633
    8. '``' → logprob: -20.250001907348633
    9. '\' → logprob: -20.375001907348633
    10. '-print' → logprob: -20.625001907348633

Token 60: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.704273118884885e-07
    2. ' print' → logprob: -14.500000953674316
    3. '
' → logprob: -17.0
    4. '```' → logprob: -17.125
    5. '``' → logprob: -20.625
    6. '.print' → logprob: -21.0
    7. '\' → logprob: -21.25
    8. ')
' → logprob: -21.375
    9. '(print' → logprob: -21.5
    10. '-print' → logprob: -21.625

Token 61: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5760506391525269
    2. '(ans' → logprob: -0.8260506391525269
    3. '("("' → logprob: -9.701050758361816
    4. '()' → logprob: -10.326050758361816
    5. '('' → logprob: -11.701050758361816
    6. 'ans' → logprob: -12.326050758361816
    7. '(len' → logprob: -14.076050758361816
    8. '(answer' → logprob: -14.201050758361816
    9. '(s' → logprob: -14.951050758361816
    10. '((' → logprob: -14.951050758361816

Token 62: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. '))' → logprob: -16.625
    3. ' )' → logprob: -16.75
    4. ')`' → logprob: -17.625
    5. '')' → logprob: -18.125
    6. '`)' → logprob: -18.625
    7. '")' → logprob: -19.0
    8. ')
' → logprob: -19.5
    9. '）' → logprob: -19.875
    10. ')**' → logprob: -20.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 60
Tokens correctement prédits (1ère position, stricte): 15
Tokens correctement prédits (1ère position, avec adaptation): 20
Tokens correctement prédits (top 10): 51
Précision stricte (1ère position): 25.00%
Précision adaptée (1ère position): 33.33%
Précision (top 10): 85.00%
================================================================================
