================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
H, W = map(int, input().split())
s = []
for i in range(H):
    s.append(input())
ans = 'Yes'
for i in range(H):
    for j in range(W):
        if s[i][j] == '#':
            ok = False
            if i != 0:
                if s[i-1][j] == '#':
                    ok = True
            if i != H-1:
                if s[i+1][j] == '#':
                    ok = True
            if j != 0:
                if s[i][j-1] == '#':
                    ok = True
            if j != W-1:
                if s[i][j+1] == '#':
                    ok = True
            if not ok:
                ans = 'No'
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'H' (ID: 39)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' W' (ID: 486)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4378816485404968
    2. '=' → logprob: -1.0628817081451416
    3. ' =' → logprob: -6.1878814697265625
    4. ')' → logprob: -6.3128814697265625
    5. '*' → logprob: -6.4378814697265625
    6. ':' → logprob: -6.6878814697265625
    7. '```' → logprob: -6.9378814697265625
    8. '#' → logprob: -8.187881469726562
    9. '.' → logprob: -8.687881469726562
    10. ';' → logprob: -8.687881469726562

Token 4: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02370345965027809
    2. '32' → logprob: -5.273703575134277
    3. ' map' → logprob: -5.898703575134277
    4. '100' → logprob: -6.273703575134277
    5. ' img' → logprob: -6.398703575134277
    6. ' image' → logprob: -6.523703575134277
    7. '224' → logprob: -6.773703575134277
    8. '128' → logprob: -6.898703575134277
    9. '256' → logprob: -6.898703575134277
    10. '64' → logprob: -6.898703575134277

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5342898964881897
    2. '(int' → logprob: -1.034289836883545
    3. '(str' → logprob: -3.534289836883545
    4. '(lambda' → logprob: -3.784289836883545
    5. '<|end|>' → logprob: -6.284289836883545
    6. '(input' → logprob: -7.534289836883545
    7. ')' → logprob: -7.534289836883545
    8. '(len' → logprob: -7.534289836883545
    9. '(range' → logprob: -7.659289836883545
    10. '[int' → logprob: -7.784289836883545

Token 6: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00732631329447031
    2. ')' → logprob: -5.757326126098633
    3. 'input' → logprob: -6.257326126098633
    4. '(' → logprob: -6.257326126098633
    5. '[input' → logprob: -9.882326126098633
    6. '(int' → logprob: -10.007326126098633
    7. '(str' → logprob: -10.257326126098633
    8. '(raw' → logprob: -10.632326126098633
    9. ' input' → logprob: -10.757326126098633
    10. '```' → logprob: -11.007326126098633

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06200723350048065
    2. ' input' → logprob: -2.812007188796997
    3. '(input' → logprob: -10.187006950378418
    4. ',input' → logprob: -13.812006950378418
    5. ')' → logprob: -14.312006950378418
    6. '=input' → logprob: -16.187007904052734
    7. '[input' → logprob: -16.687007904052734
    8. '<input' → logprob: -16.812007904052734
    9. '```' → logprob: -17.062007904052734
    10. '	input' → logprob: -17.312007904052734

Token 8: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7184149026870728
    2. '())' → logprob: -1.0934149026870728
    3. '(' → logprob: -2.093414783477783
    4. '()>' → logprob: -3.968414783477783
    5. '('' → logprob: -5.093414783477783
    6. '().' → logprob: -5.218414783477783
    7. '`()' → logprob: -5.343414783477783
    8. ')' → logprob: -5.343414783477783
    9. '()">' → logprob: -5.593414783477783
    10. '(""))' → logprob: -6.093414783477783

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0001761272142175585
    2. 'strip' → logprob: -8.750176429748535
    3. ')' → logprob: -11.375176429748535
    4. ' split' → logprob: -12.375176429748535
    5. 'rstrip' → logprob: -13.875176429748535
    6. 'read' → logprob: -14.250176429748535
    7. '(split' → logprob: -15.500176429748535
    8. 'spl' → logprob: -16.25017547607422
    9. 'startswith' → logprob: -17.62517547607422
    10. '```' → logprob: -18.12517547607422

Token 10: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.30600786209106445
    2. ')' → logprob: -1.4310078620910645
    3. '))' → logprob: -4.1810078620910645
    4. '()))' → logprob: -5.0560078620910645
    5. '()' → logprob: -5.9310078620910645
    6. '(' → logprob: -9.306007385253906
    7. '`)' → logprob: -10.306007385253906
    8. '('' → logprob: -10.556007385253906
    9. ' ())' → logprob: -10.806007385253906
    10. '```' → logprob: -11.931007385253906

Token 11: 's' (ID: 82)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.567688524723053
    2. 'x' → logprob: -1.3176884651184082
    3. ',' → logprob: -2.942688465118408
    4. 'h' → logprob: -3.817688465118408
    5. '#' → logprob: -4.067688465118408
    6. 'height' → logprob: -4.067688465118408
    7. 'for' → logprob: -4.692688465118408
    8. 'n' → logprob: -4.692688465118408
    9. '```' → logprob: -4.942688465118408
    10. '`' → logprob: -5.317688465118408

Token 12: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12017679959535599
    2. '[' → logprob: -2.4951767921447754
    3. ' =' → logprob: -3.7451767921447754
    4. '.' → logprob: -5.870176792144775
    5. 's' → logprob: -6.870176792144775
    6. '[]' → logprob: -7.370176792144775
    7. '[:]' → logprob: -7.495176792144775
    8. 'tring' → logprob: -7.745176792144775
    9. 'quares' → logprob: -7.870176792144775
    10. '=input' → logprob: -8.495177268981934

Token 13: ' []
' (ID: 8911)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.09186731278896332
    2. ' input' → logprob: -2.466867208480835
    3. 'list' → logprob: -6.216867446899414
    4. '[input' → logprob: -7.716867446899414
    5. ' list' → logprob: -7.841867446899414
    6. '[' → logprob: -10.716867446899414
    7. ' [' → logprob: -10.841867446899414
    8. '[]' → logprob: -10.841867446899414
    9. '(input' → logprob: -12.341867446899414
    10. 's' → logprob: -12.341867446899414

Token 14: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.045823566731997e-05
    2. ' for' → logprob: -10.875020027160645
    3. '```' → logprob: -14.000020027160645
    4. '``' → logprob: -15.875020027160645
    5. '   ' → logprob: -16.00002098083496
    6. '`' → logprob: -16.25002098083496
    7. '_for' → logprob: -16.37502098083496
    8. '
' → logprob: -16.75002098083496
    9. '_' → logprob: -16.87502098083496
    10. 'For' → logprob: -17.00002098083496

Token 15: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0509612560272217
    2. ' _' → logprob: -1.1759612560272217
    3. ' i' → logprob: -1.3009612560272217
    4. '_' → logprob: -2.6759612560272217
    5. 'i' → logprob: -8.1759614944458
    6. ' ' → logprob: -8.3009614944458
    7. ' ‌' → logprob: -9.0509614944458
    8. '  ' → logprob: -9.9259614944458
    9. ' ​' → logprob: -10.5509614944458
    10. ' ▁' → logprob: -10.6759614944458

Token 16: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0902491882443428
    2. 'n' → logprob: -2.9652493000030518
    3. 'in' → logprob: -3.4652493000030518
    4. ' ' → logprob: -6.340249061584473
    5. ' n' → logprob: -6.465249061584473
    6. '_' → logprob: -9.715249061584473
    7. '  ' → logprob: -10.840249061584473
    8. 's' → logprob: -11.215249061584473
    9. 'range' → logprob: -11.215249061584473
    10. ',' → logprob: -11.465249061584473

Token 17: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.38687145709991455
    2. ' range' → logprob: -1.1368714570999146
    3. '	range' → logprob: -15.511871337890625
    4. ' ' → logprob: -16.761871337890625
    5. '(range' → logprob: -17.386871337890625
    6. 'rang' → logprob: -17.636871337890625
    7. 'ran' → logprob: -17.761871337890625
    8. 'r' → logprob: -18.011871337890625
    9. '_range' → logprob: -18.011871337890625
    10. '.range' → logprob: -18.386871337890625

Token 18: '(H' (ID: 20904)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.576043963432312
    2. '(H' → logprob: -0.826043963432312
    3. '(W' → logprob: -9.326044082641602
    4. ' (' → logprob: -12.576044082641602
    5. '(int' → logprob: -12.576044082641602
    6. '(s' → logprob: -13.451044082641602
    7. '(`' → logprob: -14.076044082641602
    8. '()' → logprob: -14.326044082641602
    9. '(len' → logprob: -14.451044082641602
    10. '(range' → logprob: -14.451044082641602

Token 19: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0012182132340967655
    2. ')' → logprob: -6.876218318939209
    3. ':' → logprob: -9.62621784210205
    4. ' ):' → logprob: -9.75121784210205
    5. '):
' → logprob: -9.87621784210205
    6. '+' → logprob: -12.62621784210205
    7. ' ' → logprob: -13.75121784210205
    8. ''):' → logprob: -14.25121784210205
    9. '():' → logprob: -14.62621784210205
    10. '   ' → logprob: -14.62621784210205

Token 20: '   ' (ID: 271)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.1388513743877411
    2. '   ' → logprob: -2.2638514041900635
    3. 's' → logprob: -3.7638514041900635
    4. ' ' → logprob: -6.638851165771484
    5. '    ' → logprob: -7.263851165771484
    6. ' line' → logprob: -8.638851165771484
    7. '	s' → logprob: -9.513851165771484
    8. '```' → logprob: -9.513851165771484
    9. ' lines' → logprob: -10.263851165771484
    10. ' ```' → logprob: -10.888851165771484

Token 21: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.3133084177970886
    2. ' s' → logprob: -1.3133084774017334
    3. '   ' → logprob: -11.063308715820312
    4. ' ' → logprob: -11.438308715820312
    5. ' line' → logprob: -11.938308715820312
    6. ' row' → logprob: -12.563308715820312
    7. 'line' → logprob: -12.688308715820312
    8. 'row' → logprob: -13.563308715820312
    9. '```' → logprob: -13.938308715820312
    10. 'data' → logprob: -14.188308715820312

Token 22: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.04861336573958397
    2. '.' → logprob: -3.0486133098602295
    3. '.app' → logprob: -11.423613548278809
    4. '.extend' → logprob: -12.048613548278809
    5. 'append' → logprob: -12.923613548278809
    6. '.ap' → logprob: -13.048613548278809
    7. '.=' → logprob: -13.548613548278809
    8. ' .' → logprob: -13.673613548278809
    9. '+=' → logprob: -14.548613548278809
    10. ' +=' → logprob: -15.173613548278809

Token 23: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.1354820728302002
    2. '(list' → logprob: -2.1354820728302
    3. '(str' → logprob: -5.135481834411621
    4. '(' → logprob: -6.135481834411621
    5. 'input' → logprob: -8.010481834411621
    6. 'list' → logprob: -9.010481834411621
    7. '(int' → logprob: -11.635481834411621
    8. '(tuple' → logprob: -13.635481834411621
    9. '(
' → logprob: -13.885481834411621
    10. ' (' → logprob: -14.260481834411621

Token 24: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.003579049138352275
    2. '()' → logprob: -5.753579139709473
    3. '()))' → logprob: -8.503579139709473
    4. '().' → logprob: -8.628579139709473
    5. ')' → logprob: -11.253579139709473
    6. '();)' → logprob: -12.753579139709473
    7. ' ())' → logprob: -13.253579139709473
    8. '())
' → logprob: -14.378579139709473
    9. '());' → logprob: -14.878579139709473
    10. '())

' → logprob: -15.503579139709473

Token 25: 'ans' (ID: 616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2742869853973389
    2. '#' → logprob: -1.8992869853973389
    3. 'r' → logprob: -2.024286985397339
    4. '.' → logprob: -2.399286985397339
    5. 'h' → logprob: -2.774286985397339
    6. 'w' → logprob: -3.399286985397339
    7. 'm' → logprob: -3.524286985397339
    8. '[' → logprob: -4.024287223815918
    9. 'n' → logprob: -4.024287223815918
    10. 'x' → logprob: -4.149287223815918

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1632794588804245
    2. '=' → logprob: -1.913279414176941
    3. '_' → logprob: -6.6632795333862305
    4. '[' → logprob: -6.7882795333862305
    5. ' ' → logprob: -8.66327953338623
    6. '.' → logprob: -8.91327953338623
    7. '[:]' → logprob: -9.03827953338623
    8. '[]' → logprob: -9.53827953338623
    9. 's' → logprob: -10.28827953338623
    10. '=[]' → logprob: -10.41327953338623

Token 27: ' '' (ID: 461)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6256460547447205
    2. '[' → logprob: -1.5006461143493652
    3. '0' → logprob: -2.2506461143493652
    4. '["' → logprob: -3.2506461143493652
    5. '""' → logprob: -3.8756461143493652
    6. ' []' → logprob: -4.250646114349365
    7. '"' → logprob: -4.500646114349365
    8. '['' → logprob: -4.625646114349365
    9. '[[' → logprob: -4.625646114349365
    10. ' [' → logprob: -5.375646114349365

Token 28: 'Yes' (ID: 13022)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7826704978942871
    2. 'Yes' → logprob: -1.282670497894287
    3. 'No' → logprob: -2.282670497894287
    4. '#' → logprob: -2.907670497894287
    5. 'YES' → logprob: -4.032670497894287
    6. '"' → logprob: -4.407670497894287
    7. '.' → logprob: -4.532670497894287
    8. ''.' → logprob: -4.657670497894287
    9. '''' → logprob: -4.907670497894287
    10. '0' → logprob: -5.032670497894287

Token 29: ''
' (ID: 2207)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.08186109364032745
    2. ''' → logprob: -3.2068610191345215
    3. 'if' → logprob: -4.3318610191345215
    4. '<|end|>' → logprob: -4.3318610191345215
    5. '
' → logprob: -5.3318610191345215
    6. '')' → logprob: -5.5818610191345215
    7. ' if' → logprob: -7.2068610191345215
    8. '<|end|>' → logprob: -7.4568610191345215
    9. ' or' → logprob: -7.9568610191345215
    10. 'print' → logprob: -8.08186149597168

Token 30: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09203346073627472
    2. '\n' → logprob: -2.7170333862304688
    3. ' for' → logprob: -3.9670333862304688
    4. '<|end|>' → logprob: -6.342033386230469
    5. '\' → logprob: -7.092033386230469
    6. ' ' → logprob: -9.467033386230469
    7. '   ' → logprob: -10.092033386230469
    8. '```' → logprob: -10.092033386230469
    9. '<|end|>' → logprob: -10.092033386230469
    10. ')' → logprob: -10.467033386230469

Token 31: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0027595835272222757
    2. 'i' → logprob: -6.7527594566345215
    3. ' ' → logprob: -6.7527594566345215
    4. ' _' → logprob: -8.62775993347168
    5. ' h' → logprob: -9.25275993347168
    6. ' H' → logprob: -9.75275993347168
    7. ' ' → logprob: -10.12775993347168
    8. '_' → logprob: -10.75275993347168
    9. ' y' → logprob: -11.25275993347168
    10. '_i' → logprob: -12.37775993347168

Token 32: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.010627535171806812
    2. 'in' → logprob: -5.135627746582031
    3. ' ' → logprob: -5.385627746582031
    4. '  ' → logprob: -10.010627746582031
    5. 'n' → logprob: -10.885627746582031
    6. '<|end|>' → logprob: -11.760627746582031
    7. '	in' → logprob: -12.510627746582031
    8. '   ' → logprob: -12.760627746582031
    9. ' i' → logprob: -12.760627746582031
    10. 'range' → logprob: -12.885627746582031

Token 33: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.014169503934681416
    2. 'range' → logprob: -4.264169692993164
    3. ' s' → logprob: -13.014169692993164
    4. ' ' → logprob: -13.514169692993164
    5. 's' → logprob: -14.639169692993164
    6. '	range' → logprob: -14.764169692993164
    7. ' xrange' → logprob: -15.014169692993164
    8. '(range' → logprob: -15.264169692993164
    9. ' ran' → logprob: -15.264169692993164
    10. ')' → logprob: -15.514169692993164

Token 34: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.2366200089454651
    2. '(' → logprob: -1.6116199493408203
    3. ' (' → logprob: -4.98661994934082
    4. '(W' → logprob: -5.86161994934082
    5. ' H' → logprob: -6.98661994934082
    6. ' ' → logprob: -8.11161994934082
    7. 'H' → logprob: -9.61161994934082
    8. '(s' → logprob: -10.23661994934082
    9. '(len' → logprob: -10.36161994934082
    10. '(range' → logprob: -10.86161994934082

Token 35: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09426142275333405
    2. '-' → logprob: -2.719261407852173
    3. '):
' → logprob: -3.844261407852173
    4. ' -' → logprob: -6.094261646270752
    5. ' ):' → logprob: -8.469261169433594
    6. '   ' → logprob: -9.844261169433594
    7. ')' → logprob: -9.844261169433594
    8. ' ' → logprob: -10.469261169433594
    9. '):
' → logprob: -11.719261169433594
    10. ' ):
' → logprob: -11.969261169433594

Token 36: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05394331365823746
    2. '<|end|>' → logprob: -3.803943395614624
    3. ':' → logprob: -4.178943157196045
    4. ' ' → logprob: -4.553943157196045
    5. ' for' → logprob: -5.803943157196045
    6. '       ' → logprob: -7.928943157196045
    7. '<|end|>' → logprob: -8.178943634033203
    8. '    ' → logprob: -8.428943634033203
    9. '  ' → logprob: -8.678943634033203
    10. '    
' → logprob: -9.678943634033203

Token 37: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.23322522640228271
    2. '   ' → logprob: -1.6082252264022827
    3. 'for' (adapté à ' for') → logprob: -5.108225345611572
    4. ' ' → logprob: -6.858225345611572
    5. '<|end|>' → logprob: -7.983225345611572
    6. '    ' → logprob: -9.483224868774414
    7. '	for' → logprob: -9.608224868774414
    8. ' if' → logprob: -9.733224868774414
    9. '  ' → logprob: -10.358224868774414
    10. ' s' → logprob: -10.483224868774414

Token 38: ' j' (ID: 441)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4981910288333893
    2. 'range' → logprob: -1.123190999031067
    3. ' j' → logprob: -3.1231911182403564
    4. 'j' → logprob: -3.8731911182403564
    5. '<|end|>' → logprob: -7.498190879821777
    6. '   ' → logprob: -7.873190879821777
    7. ' ' → logprob: -7.998190879821777
    8. '(range' → logprob: -8.373190879821777
    9. ' s' → logprob: -9.248190879821777
    10. ')' → logprob: -9.498190879821777

Token 39: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026571279391646385
    2. 'in' → logprob: -3.776571273803711
    3. '+' → logprob: -5.901571273803711
    4. '   ' → logprob: -8.151571273803711
    5. ' ' → logprob: -8.526571273803711
    6. '    ' → logprob: -10.151571273803711
    7. '<|end|>' → logprob: -11.651571273803711
    8. '  ' → logprob: -11.776571273803711
    9. 'range' → logprob: -12.151571273803711
    10. '0' → logprob: -12.651571273803711

Token 40: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.47409588098526
    2. ' range' → logprob: -0.97409588098526
    3. '(range' → logprob: -11.099096298217773
    4. '	range' → logprob: -13.849096298217773
    5. ' xrange' → logprob: -14.349096298217773
    6. ' ' → logprob: -14.349096298217773
    7. '   ' → logprob: -14.849096298217773
    8. 's' → logprob: -15.224096298217773
    9. ')' → logprob: -15.849096298217773
    10. '.range' → logprob: -16.099096298217773

Token 41: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.7508933544158936
    2. '(' → logprob: -1.0008933544158936
    3. '(H' → logprob: -2.3758933544158936
    4. '(range' → logprob: -3.1258933544158936
    5. ' range' → logprob: -4.250893592834473
    6. ' (' → logprob: -5.000893592834473
    7. 'range' → logprob: -6.500893592834473
    8. '(s' → logprob: -7.500893592834473
    9. '(len' → logprob: -9.625893592834473
    10. ' ' → logprob: -9.750893592834473

Token 42: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06216026842594147
    2. '-' → logprob: -2.9371602535247803
    3. '):
' → logprob: -5.562160491943359
    4. ' -' → logprob: -6.937160491943359
    5. '   ' → logprob: -7.437160491943359
    6. ')' → logprob: -7.562160491943359
    7. '+' → logprob: -7.687160491943359
    8. ' ):' → logprob: -7.937160491943359
    9. 'if' → logprob: -8.06216049194336
    10. ':' → logprob: -9.68716049194336

Token 43: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4214734733104706
    2. ' if' → logprob: -1.421473503112793
    3. '   ' → logprob: -2.921473503112793
    4. 'if' → logprob: -3.046473503112793
    5. ' ' → logprob: -8.171473503112793
    6. '    ' → logprob: -8.421473503112793
    7. ':' → logprob: -8.546473503112793
    8. '#' → logprob: -9.296473503112793
    9. ',' → logprob: -9.296473503112793
    10. ')' → logprob: -10.046473503112793

Token 44: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.30168190598487854
    2. 'if' (adapté à ' if') → logprob: -1.5516818761825562
    3. '       ' → logprob: -3.3016819953918457
    4. '   ' → logprob: -4.926681995391846
    5. '           ' → logprob: -5.551681995391846
    6. ' ' → logprob: -8.926681518554688
    7. '#' → logprob: -9.676681518554688
    8. '    ' → logprob: -10.051681518554688
    9. ' continue' → logprob: -10.301681518554688
    10. ' s' → logprob: -10.301681518554688

Token 45: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.05535949766635895
    2. 's' → logprob: -2.9303596019744873
    3. ' j' → logprob: -9.180359840393066
    4. ' ' → logprob: -9.180359840393066
    5. ' i' → logprob: -9.305359840393066
    6. ' not' → logprob: -10.180359840393066
    7. '    ' → logprob: -10.180359840393066
    8. 'j' → logprob: -10.555359840393066
    9. '   ' → logprob: -10.805359840393066
    10. 'i' → logprob: -11.055359840393066

Token 46: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.1289874166250229
    2. '[j' → logprob: -2.1289873123168945
    3. '[' → logprob: -6.2539873123168945
    4. '[I' → logprob: -10.378987312316895
    5. '[]' → logprob: -11.128987312316895
    6. '[s' → logprob: -11.253987312316895
    7. '[int' → logprob: -11.503987312316895
    8. '[h' → logprob: -11.628987312316895
    9. ' ' → logprob: -11.878987312316895
    10. ' [' → logprob: -12.378987312316895

Token 47: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00687521044164896
    2. '[' → logprob: -5.381875038146973
    3. '[i' → logprob: -6.256875038146973
    4. '][' → logprob: -9.506875038146973
    5. '[]' → logprob: -10.006875038146973
    6. '!=' → logprob: -10.506875038146973
    7. '==' → logprob: -10.506875038146973
    8. ''[' → logprob: -10.881875038146973
    9. '[J' → logprob: -11.506875038146973
    10. ' !=' → logprob: -11.756875038146973

Token 48: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.002942517166957259
    2. '0' → logprob: -6.3779425621032715
    3. ']' → logprob: -7.6279425621032715
    4. ' ' → logprob: -8.377942085266113
    5. ' j' → logprob: -8.502942085266113
    6. ''' → logprob: -9.252942085266113
    7. '#' → logprob: -9.502942085266113
    8. '-' → logprob: -10.502942085266113
    9. 'i' → logprob: -11.002942085266113
    10. '1' → logprob: -11.127942085266113

Token 49: ']' (ID: 60)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.9878899455070496
    2. '!=' → logprob: -1.1128900051116943
    3. '==' → logprob: -1.8628900051116943
    4. ' ==' → logprob: -1.9878900051116943
    5. ')' → logprob: -5.987889766693115
    6. '=' → logprob: -6.362889766693115
    7. ' ' → logprob: -7.612889766693115
    8. '   ' → logprob: -8.237890243530273
    9. ']' → logprob: -8.237890243530273
    10. ':' → logprob: -8.362890243530273

Token 50: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6365926265716553
    2. '==' → logprob: -1.1365926265716553
    3. ' !=' → logprob: -2.5115926265716553
    4. '!=' → logprob: -2.7615926265716553
    5. '=='' → logprob: -5.886592864990234
    6. '=' → logprob: -6.761592864990234
    7. ' ' → logprob: -8.011592864990234
    8. ' =='' → logprob: -8.386592864990234
    9. '   ' → logprob: -8.636592864990234
    10. '!='' → logprob: -9.011592864990234

Token 51: ' '#' (ID: 11284)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.07680560648441315
    2. ''' → logprob: -3.201805591583252
    3. ' '#'' → logprob: -4.201805591583252
    4. ''.' → logprob: -4.451805591583252
    5. ''*' → logprob: -5.826805591583252
    6. ' '#' → logprob: -6.701805591583252
    7. ''S' → logprob: -7.701805591583252
    8. '"#' → logprob: -8.45180606842041
    9. ''C' → logprob: -8.70180606842041
    10. ''a' → logprob: -8.82680606842041

Token 52: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.060976266860962
    2. ''' → logprob: -1.310976266860962
    3. '':' → logprob: -1.435976266860962
    4. ' and' → logprob: -2.810976266860962
    5. 'and' → logprob: -3.560976266860962
    6. '#' → logprob: -3.810976266860962
    7. ' '' → logprob: -4.560976028442383
    8. ' ':' → logprob: -5.310976028442383
    9. '':
' → logprob: -5.435976028442383
    10. ''s' → logprob: -5.560976028442383

Token 53: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7620909810066223
    2. ' and' → logprob: -2.1370909214019775
    3. ':' → logprob: -2.2620909214019775
    4. ' continue' → logprob: -2.2620909214019775
    5. '               ' → logprob: -2.5120909214019775
    6. 'and' → logprob: -3.7620909214019775
    7. 'if' → logprob: -3.7620909214019775
    8. ' if' → logprob: -4.012091159820557
    9. 'continue' → logprob: -4.262091159820557
    10. '   ' → logprob: -4.387091159820557

Token 54: ' ok' (ID: 4763)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02323429472744465
    2. 'found' → logprob: -4.5232343673706055
    3. 'count' → logprob: -5.6482343673706055
    4. 'for' → logprob: -6.1482343673706055
    5. 'continue' → logprob: -6.2732343673706055
    6. ' if' → logprob: -6.3982343673706055
    7. 'print' → logprob: -7.1482343673706055
    8. '           ' → logprob: -8.148234367370605
    9. 'pass' → logprob: -8.273234367370605
    10. 'ans' → logprob: -8.273234367370605

Token 55: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026700593531131744
    2. '=' → logprob: -3.651700496673584
    3. ' ' → logprob: -8.776700973510742
    4. 'ay' → logprob: -9.276700973510742
    5. '=True' → logprob: -9.901700973510742
    6. '=False' → logprob: -10.526700973510742
    7. ' &=' → logprob: -10.526700973510742
    8. ' |=' → logprob: -11.026700973510742
    9. '   ' → logprob: -11.776700973510742
    10. '    ' → logprob: -12.151700973510742

Token 56: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.1644861400127411
    2. ' False' → logprob: -2.0394861698150635
    3. 'True' → logprob: -4.164485931396484
    4. ' True' → logprob: -5.289485931396484
    5. '(False' → logprob: -7.164485931396484
    6. '(True' → logprob: -9.164485931396484
    7. '0' → logprob: -9.914485931396484
    8. ' ' → logprob: -11.039485931396484
    9. ' (' → logprob: -11.539485931396484
    10. '(i' → logprob: -11.664485931396484

Token 57: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 58: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 59: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.36017411947250366
    2. 'for' → logprob: -1.6101741790771484
    3. ' ' → logprob: -3.3601741790771484
    4. '<|end|>' → logprob: -3.4851741790771484
    5. '           ' → logprob: -4.110174179077148
    6. ' if' → logprob: -5.110174179077148
    7. '            ' → logprob: -5.860174179077148
    8. 'if' (adapté à ' if') → logprob: -6.485174179077148
    9. '    ' → logprob: -6.610174179077148
    10. '   ' → logprob: -6.860174179077148

Token 60: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.762078046798706
    2. ' i' → logprob: -0.762078046798706
    3. ' (' → logprob: -3.387078046798706
    4. '(i' → logprob: -3.512078046798706
    5. '(' → logprob: -6.262078285217285
    6. ' ' → logprob: -8.012078285217285
    7. ' j' → logprob: -8.262078285217285
    8. 'j' → logprob: -8.387078285217285
    9. '   ' → logprob: -9.012078285217285
    10. '0' → logprob: -10.637078285217285

Token 61: ' !=' (ID: 1666)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.3558548390865326
    2. ' >' → logprob: -1.230854868888855
    3. '-' → logprob: -4.9808549880981445
    4. '+' → logprob: -7.9808549880981445
    5. ' ' → logprob: -9.355854988098145
    6. ' -' → logprob: -9.730854988098145
    7. '>-' → logprob: -12.480854988098145
    8. ' +' → logprob: -12.605854988098145
    9. '   ' → logprob: -12.730854988098145
    10. ' and' → logprob: -12.980854988098145

Token 62: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029760906472802162
    2. ' ' → logprob: -3.5297608375549316
    3. 'H' → logprob: -11.77976131439209
    4. ' H' → logprob: -13.02976131439209
    5. '   ' → logprob: -15.15476131439209
    6. '  ' → logprob: -16.154760360717773
    7. '=' → logprob: -16.967260360717773
    8. '    ' → logprob: -16.967260360717773
    9. ' ' → logprob: -17.404760360717773
    10. '```' → logprob: -17.592260360717773

Token 63: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005749551928602159
    2. ' ' → logprob: -7.500575065612793
    3. 'H' → logprob: -10.750575065612793
    4. ' H' → logprob: -15.000575065612793
    5. '   ' → logprob: -16.000574111938477
    6. '  ' → logprob: -17.750574111938477
    7. '    ' → logprob: -17.750574111938477
    8. '     ' → logprob: -18.313074111938477
    9. '=' → logprob: -18.438074111938477
    10. '۰' → logprob: -18.500574111938477

Token 64: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.012594294734299183
    2. 'and' → logprob: -4.387594223022461
    3. ' ' → logprob: -9.512594223022461
    4. ':' → logprob: -12.012594223022461
    5. '   ' → logprob: -13.012594223022461
    6. '<|end|>' → logprob: -14.137594223022461
    7. '    ' → logprob: -15.137594223022461
    8. ':
' → logprob: -15.262594223022461
    9. '	and' → logprob: -15.387594223022461
    10. ' or' → logprob: -15.887594223022461

Token 65: '               ' (ID: 506)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0017709736712276936
    2. 'and' → logprob: -6.376770973205566
    3. '               ' → logprob: -10.376770973205566
    4. '           ' → logprob: -11.251770973205566
    5. '<|end|>' → logprob: -11.626770973205566
    6. ' ' → logprob: -12.126770973205566
    7. ' if' → logprob: -12.751770973205566
    8. '            ' → logprob: -14.126770973205566
    9. ' ' → logprob: -14.126770973205566
    10. ' &&' → logprob: -14.251770973205566

Token 66: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.42655274271965027
    2. 'if' (adapté à ' if') → logprob: -1.3015527725219727
    3. ' and' → logprob: -2.9265527725219727
    4. 'and' → logprob: -4.051552772521973
    5. '           ' → logprob: -6.551552772521973
    6. ' ok' → logprob: -7.051552772521973
    7. 'ok' → logprob: -7.176552772521973
    8. '               ' → logprob: -7.926552772521973
    9. '<|end|>' → logprob: -8.426552772521973
    10. ' ' → logprob: -9.051552772521973

Token 67: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2519603967666626
    2. ' s' → logprob: -1.5019603967666626
    3. '                   ' → logprob: -11.876960754394531
    4. '   ' → logprob: -12.251960754394531
    5. '               ' → logprob: -12.251960754394531
    6. '           ' → logprob: -12.376960754394531
    7. ' ' → logprob: -13.001960754394531
    8. ' ' → logprob: -13.251960754394531
    9. '(s' → logprob: -13.876960754394531
    10. '	s' → logprob: -13.876960754394531

Token 68: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. '[I' → logprob: -15.625
    3. 'i' → logprob: -16.5
    4. '[' → logprob: -16.75
    5. '   ' → logprob: -17.0
    6. ' [' → logprob: -17.875
    7. '][' → logprob: -18.125
    8. 'I' → logprob: -18.75
    9. '```' → logprob: -19.125
    10. '[j' → logprob: -19.125

Token 69: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00026300468016415834
    2. ' -' → logprob: -8.250263214111328
    3. '][' → logprob: -14.375263214111328
    4. '[i' → logprob: -14.750263214111328
    5. '[' → logprob: -15.250263214111328
    6. ' ' → logprob: -15.500263214111328
    7. 'i' → logprob: -16.500263214111328
    8. '1' → logprob: -16.500263214111328
    9. '   ' → logprob: -16.500263214111328
    10. ']' → logprob: -16.750263214111328

Token 70: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.125006675720215
    3. '   ' → logprob: -14.125006675720215
    4. 'j' → logprob: -17.1250057220459
    5. '```' → logprob: -17.2500057220459
    6. '           ' → logprob: -18.2500057220459
    7. '       ' → logprob: -18.8750057220459
    8. '  ' → logprob: -18.8750057220459
    9. '１' → logprob: -19.1250057220459
    10. '-' → logprob: -19.1250057220459

Token 71: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0002695608709473163
    2. '[j' → logprob: -9.125269889831543
    3. ']' → logprob: -9.625269889831543
    4. ''][' → logprob: -10.250269889831543
    5. '[' → logprob: -10.375269889831543
    6. ' ][' → logprob: -11.000269889831543
    7. '"][' → logprob: -12.375269889831543
    8. '[i' → logprob: -12.500269889831543
    9. '   ' → logprob: -14.250269889831543
    10. ']][' → logprob: -14.375269889831543

Token 72: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.1130966991186142
    2. '][' → logprob: -2.2380967140197754
    3. '[j' → logprob: -8.488096237182617
    4. ']' → logprob: -10.238096237182617
    5. ' j' → logprob: -11.113096237182617
    6. '   ' → logprob: -12.238096237182617
    7. ' ][' → logprob: -12.738096237182617
    8. '_j' → logprob: -13.238096237182617
    9. '	j' → logprob: -13.238096237182617
    10. ' ' → logprob: -13.363096237182617

Token 73: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03012636862695217
    2. ']==' → logprob: -3.5301263332366943
    3. ' ]' → logprob: -8.405126571655273
    4. ']=='' → logprob: -9.030126571655273
    5. '==' → logprob: -11.030126571655273
    6. '']' → logprob: -11.780126571655273
    7. '#' → logprob: -12.655126571655273
    8. '   ' → logprob: -13.280126571655273
    9. '']==' → logprob: -13.905126571655273
    10. ' ==' → logprob: -14.780126571655273

Token 74: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2462884485721588
    2. ' ==' → logprob: -2.121288537979126
    3. ']' → logprob: -2.996288537979126
    4. ']==' → logprob: -3.121288537979126
    5. '#' → logprob: -5.871288299560547
    6. ']=='' → logprob: -7.746288299560547
    7. ' '#'' → logprob: -8.371288299560547
    8. '=='' → logprob: -8.496288299560547
    9. '']==' → logprob: -9.246288299560547
    10. '   ' → logprob: -9.371288299560547

Token 75: ' '#' (ID: 11284)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.00012190054985694587
    2. ' '#' → logprob: -9.7501220703125
    3. ' '#'' → logprob: -9.8751220703125
    4. ''' → logprob: -12.3751220703125
    5. '#' → logprob: -13.1251220703125
    6. '('#' → logprob: -13.2501220703125
    7. '"#' → logprob: -13.6251220703125
    8. '   ' → logprob: -14.0001220703125
    9. '='#' → logprob: -15.0001220703125
    10. ':'#' → logprob: -15.2501220703125

Token 76: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.22240638732910156
    2. '':
' → logprob: -1.7224063873291016
    3. ''' → logprob: -4.472406387329102
    4. ':' → logprob: -5.347406387329102
    5. ''or' → logprob: -6.347406387329102
    6. ' or' → logprob: -6.597406387329102
    7. '':
' → logprob: -6.847406387329102
    8. '               ' → logprob: -9.222406387329102
    9. ' '' → logprob: -9.222406387329102
    10. '                   ' → logprob: -9.972406387329102

Token 77: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004395340569317341
    2. '               ' → logprob: -6.129395484924316
    3. ' or' → logprob: -7.379395484924316
    4. ':
' → logprob: -8.004395484924316
    5. ':' → logprob: -8.129395484924316
    6. '                       ' → logprob: -8.129395484924316
    7. '                  ' → logprob: -8.504395484924316
    8. '<|end|>' → logprob: -9.129395484924316
    9. '           ' → logprob: -9.629395484924316
    10. ' ok' → logprob: -10.004395484924316

Token 78: ' ok' (ID: 4763)
  Prédit: ' ok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ok' → logprob: -0.06498109549283981
    2. 'ok' (adapté à ' ok') → logprob: -3.064980983734131
    3. '                   ' → logprob: -4.189980983734131
    4. '                       ' → logprob: -7.189980983734131
    5. '               ' → logprob: -8.564981460571289
    6. '                               ' → logprob: -9.814981460571289
    7. '                           ' → logprob: -10.814981460571289
    8. ' okay' → logprob: -11.064981460571289
    9. '	ok' → logprob: -11.189981460571289
    10. ' OK' → logprob: -11.564981460571289

Token 79: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5760204792022705
    2. ' =' → logprob: -0.8260204792022705
    3. '=True' → logprob: -9.576020240783691
    4. '                   ' → logprob: -11.701020240783691
    5. '                       ' → logprob: -13.826020240783691
    6. ' ' → logprob: -14.451020240783691
    7. '               ' → logprob: -14.451020240783691
    8. '<|end|>' → logprob: -15.451020240783691
    9. '=
' → logprob: -15.701020240783691
    10. '           ' → logprob: -15.701020240783691

Token 80: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.5759416818618774
    2. 'True' → logprob: -0.8259416818618774
    3. '=True' → logprob: -13.200942039489746
    4. '(True' → logprob: -14.950942039489746
    5. ' ' → logprob: -18.32594108581543
    6. ' Tru' → logprob: -18.32594108581543
    7. '.True' → logprob: -18.32594108581543
    8. '1' → logprob: -18.82594108581543
    9. 'Tr' → logprob: -19.07594108581543
    10. ' ' → logprob: -19.32594108581543

Token 81: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006528734229505062
    2. '<|end|>' → logprob: -5.756528854370117
    3. '               ' → logprob: -6.131528854370117
    4. '                   ' → logprob: -7.631528854370117
    5. '       ' → logprob: -7.881528854370117
    6. '          ' → logprob: -9.131528854370117
    7. '            ' → logprob: -10.631528854370117
    8. '   ' → logprob: -10.756528854370117
    9. '            
' → logprob: -11.006528854370117
    10. '<|end|>' → logprob: -11.006528854370117

Token 82: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000352266215486452
    2. '<|end|>' → logprob: -8.750351905822754
    3. '               ' → logprob: -9.000351905822754
    4. '       ' → logprob: -10.500351905822754
    5. '          ' → logprob: -11.375351905822754
    6. '            
' → logprob: -12.000351905822754
    7. '                   ' → logprob: -12.000351905822754
    8. '
' → logprob: -12.375351905822754
    9. '   ' → logprob: -12.750351905822754
    10. '<|end|>' → logprob: -13.125351905822754

Token 83: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.29027649760246277
    2. '<|end|>' → logprob: -1.7902765274047852
    3. '       ' → logprob: -3.665276527404785
    4. ' if' → logprob: -4.040276527404785
    5. ' or' → logprob: -4.415276527404785
    6. ' elif' → logprob: -5.165276527404785
    7. ' ' → logprob: -5.290276527404785
    8. 'elif' → logprob: -5.540276527404785
    9. '          ' → logprob: -6.040276527404785
    10. 'if' (adapté à ' if') → logprob: -6.540276527404785

Token 84: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.007335895672440529
    2. 'i' → logprob: -5.382335662841797
    3. ' j' → logprob: -6.007335662841797
    4. 'j' → logprob: -8.382335662841797
    5. ' ' → logprob: -11.757335662841797
    6. ' ' → logprob: -12.382335662841797
    7. '   ' → logprob: -12.507335662841797
    8. '    ' → logprob: -13.132335662841797
    9. '  ' → logprob: -14.007335662841797
    10. ' (' → logprob: -14.257335662841797

Token 85: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.6306996941566467
    2. '+' → logprob: -1.005699634552002
    3. '!=' → logprob: -2.505699634552002
    4. ' +' → logprob: -4.005699634552002
    5. ' >' → logprob: -6.630699634552002
    6. '>' → logprob: -7.380699634552002
    7. ' ' → logprob: -9.88070011138916
    8. '-' → logprob: -10.13070011138916
    9. ' <' → logprob: -10.25570011138916
    10. '<|end|>' → logprob: -10.50570011138916

Token 86: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.017761098220944405
    2. ' H' → logprob: -4.39276123046875
    3. '0' → logprob: -5.26776123046875
    4. ' ' → logprob: -9.76776123046875
    5. '(H' → logprob: -11.14276123046875
    6. '   ' → logprob: -12.39276123046875
    7. '	H' → logprob: -13.89276123046875
    8. '-H' → logprob: -14.26776123046875
    9. '                   ' → logprob: -14.26776123046875
    10. 'len' → logprob: -14.39276123046875

Token 87: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00047845521476119757
    2. ' -' → logprob: -7.750478267669678
    3. '1' → logprob: -10.000478744506836
    4. ' ' → logprob: -13.125478744506836
    5. '```' → logprob: -16.500478744506836
    6. '   ' → logprob: -16.750478744506836
    7. '–' → logprob: -16.875478744506836
    8. '−' → logprob: -17.375478744506836
    9. 'and' → logprob: -18.250478744506836
    10. ' ' → logprob: -18.250478744506836

Token 88: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000182921823579818
    2. ' ' → logprob: -8.62518310546875
    3. '<|end|>' → logprob: -13.62518310546875
    4. '   ' → logprob: -14.37518310546875
    5. '       ' → logprob: -15.12518310546875
    6. 'and' → logprob: -15.25018310546875
    7. '-' → logprob: -15.37518310546875
    8. '           ' → logprob: -15.50018310546875
    9. '```' → logprob: -16.25018310546875
    10. '<|end|>' → logprob: -16.25018310546875

Token 89: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005877360235899687
    2. ' and' → logprob: -5.755877494812012
    3. ':
' → logprob: -6.380877494812012
    4. 'and' → logprob: -7.380877494812012
    5. '               ' → logprob: -8.380877494812012
    6. '           ' → logprob: -9.630877494812012
    7. '       ' → logprob: -10.380877494812012
    8. ' :' → logprob: -11.130877494812012
    9. '<|end|>' → logprob: -11.505877494812012
    10. '):' → logprob: -11.880877494812012

Token 90: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.019315585494041443
    2. '<|end|>' → logprob: -4.019315719604492
    3. ' ' → logprob: -7.519315719604492
    4. ' if' → logprob: -8.019315719604492
    5. '           ' → logprob: -9.144315719604492
    6. '<|end|>' → logprob: -10.269315719604492
    7. '                ' → logprob: -10.769315719604492
    8. ' ' → logprob: -10.894315719604492
    9. '              ' → logprob: -10.894315719604492
    10. '       ' → logprob: -11.144315719604492

Token 91: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3160485029220581
    2. ' if' → logprob: -1.691048502922058
    3. '<|end|>' → logprob: -2.8160486221313477
    4. '               ' → logprob: -4.191048622131348
    5. '            ' → logprob: -5.066048622131348
    6. ' ' → logprob: -6.441048622131348
    7. '           ' → logprob: -6.566048622131348
    8. '                ' → logprob: -6.691048622131348
    9. ' 
' → logprob: -8.066048622131348
    10. 'if' (adapté à ' if') → logprob: -9.066048622131348

Token 92: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.0017067246371880174
    2. 's' → logprob: -6.376706600189209
    3. ' ' → logprob: -12.876707077026367
    4. '<|end|>' → logprob: -13.501707077026367
    5. ' ' → logprob: -15.751707077026367
    6. '(s' → logprob: -16.126707077026367
    7. ''s' → logprob: -16.126707077026367
    8. '    ' → logprob: -17.064207077026367
    9. '	s' → logprob: -17.064207077026367
    10. '#' → logprob: -17.064207077026367

Token 93: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00011617878044489771
    2. '-' → logprob: -9.625116348266602
    3. '[j' → logprob: -10.625116348266602
    4. '[' → logprob: -11.000116348266602
    5. '[I' → logprob: -12.500116348266602
    6. '   ' → logprob: -13.375116348266602
    7. ' [' → logprob: -14.375116348266602
    8. '```' → logprob: -14.625116348266602
    9. '[s' → logprob: -15.125116348266602
    10. ' ' → logprob: -15.250116348266602

Token 94: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0001628956088097766
    2. ' +' → logprob: -9.000163078308105
    3. '[' → logprob: -10.500163078308105
    4. '-' → logprob: -12.250163078308105
    5. '][' → logprob: -12.375163078308105
    6. '+[' → logprob: -14.125163078308105
    7. '   ' → logprob: -14.875163078308105
    8. '+
' → logprob: -15.000163078308105
    9. '1' → logprob: -15.250163078308105
    10. ' ' → logprob: -15.250163078308105

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.868328920158092e-05
    2. '[' → logprob: -11.375028610229492
    3. '[j' → logprob: -12.000028610229492
    4. '][' → logprob: -12.250028610229492
    5. ' ' → logprob: -12.875028610229492
    6. '```' → logprob: -13.375028610229492
    7. '<|end|>' → logprob: -14.375028610229492
    8. 'j' → logprob: -14.625028610229492
    9. '   ' → logprob: -15.000028610229492
    10. '#' → logprob: -15.625028610229492

Token 96: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0016578054055571556
    2. '[j' → logprob: -6.501657962799072
    3. ']' → logprob: -9.876657485961914
    4. '[' → logprob: -10.251657485961914
    5. '       ' → logprob: -10.751657485961914
    6. ' ][' → logprob: -11.001657485961914
    7. ''][' → logprob: -11.626657485961914
    8. '           ' → logprob: -12.251657485961914
    9. '   ' → logprob: -12.751657485961914
    10. '"][' → logprob: -13.251657485961914

Token 97: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.005551286041736603
    2. ''#' → logprob: -5.630551338195801
    3. '#' → logprob: -6.380551338195801
    4. '[j' → logprob: -8.7555513381958
    5. ' j' → logprob: -10.3805513381958
    6. '[' → logprob: -11.1305513381958
    7. ' '#'' → logprob: -11.2555513381958
    8. ']' → logprob: -11.8805513381958
    9. ')' → logprob: -12.3805513381958
    10. '')' → logprob: -12.3805513381958

Token 98: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.023966070264577866
    2. ']==' → logprob: -3.773966073989868
    3. '==' → logprob: -7.898965835571289
    4. ']=='' → logprob: -8.773965835571289
    5. ' ==' → logprob: -9.148965835571289
    6. '']' → logprob: -10.148965835571289
    7. ' ]' → logprob: -10.523965835571289
    8. '           ' → logprob: -11.773965835571289
    9. '#' → logprob: -12.773965835571289
    10. '']==' → logprob: -12.773965835571289

Token 99: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4293636679649353
    2. '==' → logprob: -1.05436372756958
    3. '=='' → logprob: -7.80436372756958
    4. ']==' → logprob: -8.929363250732422
    5. ']' → logprob: -9.929363250732422
    6. '#' → logprob: -10.929363250732422
    7. ' =='' → logprob: -11.429363250732422
    8. '           ' → logprob: -11.554363250732422
    9. '=' → logprob: -12.179363250732422
    10. '[' → logprob: -12.429363250732422

Token 100: ' '#' (ID: 11284)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.07838158309459686
    2. ' '#'' → logprob: -2.7033815383911133
    3. ' '#' → logprob: -4.828381538391113
    4. ''' → logprob: -8.203381538391113
    5. '#' → logprob: -10.078381538391113
    6. ' '' → logprob: -10.453381538391113
    7. '('#' → logprob: -10.703381538391113
    8. '"#' → logprob: -11.328381538391113
    9. '='#' → logprob: -11.828381538391113
    10. '','#' → logprob: -12.078381538391113

Token 101: '':
' (ID: 7669)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8947435617446899
    2. '               ' → logprob: -1.51974356174469
    3. '<|end|>' → logprob: -1.51974356174469
    4. ':' → logprob: -2.3947434425354004
    5. ':
' → logprob: -3.5197434425354004
    6. '                       ' → logprob: -4.0197434425354
    7. '           ' → logprob: -5.6447434425354
    8. ' or' → logprob: -5.8947434425354
    9. '<|end|>' → logprob: -6.3947434425354
    10. ''):
' → logprob: -7.0197434425354

Token 102: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.47503313422203064
    2. '                   ' → logprob: -1.225033164024353
    3. '                       ' → logprob: -2.6000330448150635
    4. ' or' → logprob: -5.600033283233643
    5. ' ok' → logprob: -5.850033283233643
    6. 'ok' → logprob: -6.850033283233643
    7. '           ' → logprob: -7.225033283233643
    8. '       ' → logprob: -8.350032806396484
    9. '              ' → logprob: -8.350032806396484
    10. '<|end|>' → logprob: -8.475032806396484

Token 103: ' ok' (ID: 4763)
  Prédit: ' ok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ok' → logprob: -0.0020936380606144667
    2. 'ok' (adapté à ' ok') → logprob: -6.37709379196167
    3. ' True' → logprob: -8.252093315124512
    4. '                   ' → logprob: -9.627093315124512
    5. '               ' → logprob: -10.502093315124512
    6. '                       ' → logprob: -11.377093315124512
    7. ' ' → logprob: -11.627093315124512
    8. 'True' → logprob: -12.127093315124512
    9. ' okay' → logprob: -12.502093315124512
    10. '```' → logprob: -13.127093315124512

Token 104: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5760055184364319
    2. '=' → logprob: -0.8260055184364319
    3. '=True' → logprob: -9.701005935668945
    4. '                   ' → logprob: -13.951005935668945
    5. ' ' → logprob: -14.076005935668945
    6. '               ' → logprob: -14.201005935668945
    7. '<|end|>' → logprob: -14.326005935668945
    8. '                ' → logprob: -15.076005935668945
    9. '=False' → logprob: -15.201005935668945
    10. '                       ' → logprob: -15.326005935668945

Token 105: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.5759410262107849
    2. ' True' → logprob: -0.8259410262107849
    3. '=True' → logprob: -13.70094108581543
    4. '(True' → logprob: -14.70094108581543
    5. ' ' → logprob: -17.32594108581543
    6. '.True' → logprob: -18.07594108581543
    7. ' ' → logprob: -18.70094108581543
    8. 'Yes' → logprob: -19.57594108581543
    9. '1' → logprob: -20.07594108581543
    10. 'Sure' → logprob: -20.20094108581543

Token 106: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.5107177862082608e-05
    2. '       ' → logprob: -11.375024795532227
    3. '            
' → logprob: -12.625024795532227
    4. '<|end|>' → logprob: -12.750024795532227
    5. '               ' → logprob: -13.000024795532227
    6. '          ' → logprob: -13.125024795532227
    7. '   ' → logprob: -13.750024795532227
    8. '```' → logprob: -14.875024795532227
    9. '                   ' → logprob: -15.500024795532227
    10. '		' → logprob: -15.500024795532227

Token 107: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00014823723176959902
    2. '       ' → logprob: -8.875147819519043
    3. '   ' → logprob: -12.750147819519043
    4. '               ' → logprob: -13.375147819519043
    5. '          ' → logprob: -13.625147819519043
    6. '            
' → logprob: -14.000147819519043
    7. '```' → logprob: -14.250147819519043
    8. ' ' → logprob: -15.250147819519043
    9. '		' → logprob: -15.375147819519043
    10. ' 
' → logprob: -15.875147819519043

Token 108: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04972534254193306
    2. '       ' → logprob: -3.424725294113159
    3. ' if' → logprob: -4.549725532531738
    4. 'if' (adapté à ' if') → logprob: -5.299725532531738
    5. '   ' → logprob: -8.549725532531738
    6. '```' → logprob: -9.299725532531738
    7. '<|end|>' → logprob: -10.299725532531738
    8. ' ' → logprob: -10.799725532531738
    9. '          ' → logprob: -11.549725532531738
    10. ' ' → logprob: -11.924725532531738

Token 109: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.02630273625254631
    2. 'j' → logprob: -3.6513028144836426
    3. '    ' → logprob: -13.651302337646484
    4. '   ' → logprob: -14.151302337646484
    5. ' ' → logprob: -15.401302337646484
    6. '           ' → logprob: -15.901302337646484
    7. '	j' → logprob: -16.401302337646484
    8. '```' → logprob: -16.776302337646484
    9. '(j' → logprob: -16.901302337646484
    10. '[j' → logprob: -17.151302337646484

Token 110: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.1802341192960739
    2. '!=' → logprob: -1.8052340745925903
    3. '>' → logprob: -8.4302339553833
    4. '<|end|>' → logprob: -9.1802339553833
    5. ' >' → logprob: -9.5552339553833
    6. '()!=' → logprob: -10.1802339553833
    7. '<|end|>' → logprob: -11.1802339553833
    8. ')!=' → logprob: -11.6802339553833
    9. '0' → logprob: -11.8052339553833
    10. ']!=' → logprob: -12.1802339553833

Token 111: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02324605919420719
    2. ' ' → logprob: -3.7732460498809814
    3. 'W' → logprob: -15.273245811462402
    4. '   ' → logprob: -15.273245811462402
    5. '  ' → logprob: -17.64824676513672
    6. ' W' → logprob: -17.64824676513672
    7. ' ' → logprob: -18.02324676513672
    8. '           ' → logprob: -18.02324676513672
    9. '                   ' → logprob: -18.14824676513672
    10. '    ' → logprob: -18.14824676513672

Token 112: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.093505099765025e-05
    2. ' ' → logprob: -11.000020980834961
    3. 'W' → logprob: -12.375020980834961
    4. '   ' → logprob: -18.25002098083496
    5. ' W' → logprob: -19.37502098083496
    6. '۰' → logprob: -19.87502098083496
    7. '  ' → logprob: -20.50002098083496
    8. '```' → logprob: -21.37502098083496
    9. '                   ' → logprob: -21.50002098083496
    10. '０' → logprob: -21.50002098083496

Token 113: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0034273394849151373
    2. ':
' → logprob: -6.003427505493164
    3. '               ' → logprob: -7.503427505493164
    4. ' and' → logprob: -8.628427505493164
    5. '           ' → logprob: -9.128427505493164
    6. 'and' → logprob: -9.503427505493164
    7. '       ' → logprob: -11.253427505493164
    8. '<|end|>' → logprob: -11.253427505493164
    9. '              ' → logprob: -13.003427505493164
    10. '          ' → logprob: -13.378427505493164

Token 114: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -9.85366350505501e-05
    2. ' if' → logprob: -9.25009822845459
    3. 'if' → logprob: -14.37509822845459
    4. '```' → logprob: -14.37509822845459
    5. '           ' → logprob: -14.50009822845459
    6. '                   ' → logprob: -15.75009822845459
    7. '              ' → logprob: -16.000099182128906
    8. ' ' → logprob: -16.500099182128906
    9. '<|end|>' → logprob: -16.750099182128906
    10. '                ' → logprob: -16.750099182128906

Token 115: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0312343742698431
    2. 'if' (adapté à ' if') → logprob: -3.5312342643737793
    3. '               ' → logprob: -6.531234264373779
    4. '                   ' → logprob: -10.656234741210938
    5. '           ' → logprob: -14.281234741210938
    6. '```' → logprob: -14.406234741210938
    7. '                ' → logprob: -14.656234741210938
    8. '                       ' → logprob: -15.906234741210938
    9. ' ' → logprob: -16.906234741210938
    10. '              ' → logprob: -17.031234741210938

Token 116: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.007606747094541788
    2. 's' → logprob: -4.8826069831848145
    3. ' ' → logprob: -14.882606506347656
    4. ' ' → logprob: -15.007606506347656
    5. '(s' → logprob: -17.757606506347656
    6. '	s' → logprob: -18.757606506347656
    7. '    ' → logprob: -18.882606506347656
    8. '   ' → logprob: -19.007606506347656
    9. '`s' → logprob: -19.195106506347656
    10. '<|end|>' → logprob: -19.257606506347656

Token 117: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.2200749754119897e-06
    2. '[j' → logprob: -13.750001907348633
    3. '-' → logprob: -14.250001907348633
    4. '[' → logprob: -15.750001907348633
    5. '][' → logprob: -16.125001907348633
    6. 'i' → logprob: -16.500001907348633
    7. ' [' → logprob: -17.125001907348633
    8. '```' → logprob: -17.375001907348633
    9. '[I' → logprob: -17.375001907348633
    10. '   ' → logprob: -17.625001907348633

Token 118: '][' (ID: 2696)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -14.625000953674316
    3. ' -' → logprob: -15.375000953674316
    4. '[j' → logprob: -18.0
    5. '][' → logprob: -18.5
    6. '```' → logprob: -20.375
    7. '1' → logprob: -20.875
    8. '   ' → logprob: -21.75
    9. ']-' → logprob: -22.0
    10. ' ' → logprob: -22.0

Token 119: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -9.209963900502771e-05
    2. '-' → logprob: -9.375092506408691
    3. ' j' → logprob: -12.250092506408691
    4. '   ' → logprob: -13.750092506408691
    5. ' ' → logprob: -14.250092506408691
    6. '1' → logprob: -15.000092506408691
    7. '```' → logprob: -16.250091552734375
    8. '[j' → logprob: -16.375091552734375
    9. '<|end|>' → logprob: -17.250091552734375
    10. '  ' → logprob: -17.250091552734375

Token 120: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.512236498361744e-07
    2. ' -' → logprob: -14.500000953674316
    3. '1' → logprob: -18.125
    4. '[' → logprob: -20.25
    5. '   ' → logprob: -20.25
    6. ' ' → logprob: -21.0
    7. ''-' → logprob: -21.125
    8. '```' → logprob: -21.25
    9. ']' → logprob: -21.75
    10. ']-' → logprob: -22.0

Token 121: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9623810658231378e-05
    2. ']' → logprob: -11.500020027160645
    3. ' ' → logprob: -12.500020027160645
    4. '#' → logprob: -13.000020027160645
    5. ''#' → logprob: -13.500020027160645
    6. '-' → logprob: -14.000020027160645
    7. 'j' → logprob: -14.375020027160645
    8. '   ' → logprob: -14.750020027160645
    9. '```' → logprob: -16.500019073486328
    10. '  ' → logprob: -17.125019073486328

Token 122: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0013749953359365463
    2. ']==' → logprob: -6.626375198364258
    3. ' ]' → logprob: -10.376375198364258
    4. ']=='' → logprob: -11.501375198364258
    5. '']' → logprob: -12.251375198364258
    6. '==' → logprob: -13.501375198364258
    7. '[' → logprob: -14.626375198364258
    8. '           ' → logprob: -14.751375198364258
    9. ' ==' → logprob: -15.376375198364258
    10. '   ' → logprob: -15.626375198364258

Token 123: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4780890941619873
    2. '==' → logprob: -0.9780890941619873
    3. ']' → logprob: -5.853089332580566
    4. ']==' → logprob: -6.853089332580566
    5. '=='' → logprob: -9.978089332580566
    6. '[' → logprob: -12.228089332580566
    7. '=' → logprob: -12.603089332580566
    8. ' ]' → logprob: -12.603089332580566
    9. '           ' → logprob: -12.853089332580566
    10. ']=='' → logprob: -13.103089332580566

Token 124: ' '#' (ID: 11284)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.0038902189116925
    2. ' '#'' → logprob: -5.753890037536621
    3. ' '#' → logprob: -7.378890037536621
    4. '#' → logprob: -10.128890037536621
    5. '('#' → logprob: -11.128890037536621
    6. ''' → logprob: -11.128890037536621
    7. '"#' → logprob: -11.628890037536621
    8. '='#' → logprob: -12.753890037536621
    9. '','#' → logprob: -13.378890037536621
    10. ''>' → logprob: -13.753890037536621

Token 125: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.49904900789260864
    2. '':' → logprob: -1.9990489482879639
    3. '']:
' → logprob: -2.499048948287964
    4. '                   ' → logprob: -2.624048948287964
    5. ']:
' → logprob: -2.874048948287964
    6. ':
' → logprob: -4.124049186706543
    7. ':' → logprob: -4.499049186706543
    8. ']:' → logprob: -4.874049186706543
    9. '']' → logprob: -5.499049186706543
    10. '']:' → logprob: -5.749049186706543

Token 126: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0015700951917096972
    2. '               ' → logprob: -7.501570224761963
    3. ':' → logprob: -7.626570224761963
    4. ':
' → logprob: -8.251569747924805
    5. '                       ' → logprob: -9.001569747924805
    6. '                  ' → logprob: -9.626569747924805
    7. '           ' → logprob: -10.501569747924805
    8. '                    ' → logprob: -12.126569747924805
    9. ' ok' → logprob: -12.126569747924805
    10. '   ' → logprob: -12.126569747924805

Token 127: ' ok' (ID: 4763)
  Prédit: ' ok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ok' → logprob: -0.07906768471002579
    2. 'ok' (adapté à ' ok') → logprob: -2.5790677070617676
    3. '                   ' → logprob: -8.82906723022461
    4. '               ' → logprob: -10.70406723022461
    5. ' okay' → logprob: -12.70406723022461
    6. '                       ' → logprob: -13.07906723022461
    7. '	ok' → logprob: -14.07906723022461
    8. ' ' → logprob: -14.57906723022461
    9. 'Ok' → logprob: -14.95406723022461
    10. '                    ' → logprob: -15.20406723022461

Token 128: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519398331642151
    2. ' =' → logprob: -1.5019397735595703
    3. '                   ' → logprob: -12.00193977355957
    4. '=True' → logprob: -13.00193977355957
    5. '               ' → logprob: -13.87693977355957
    6. ' ' → logprob: -15.12693977355957
    7. '==' → logprob: -15.12693977355957
    8. '           ' → logprob: -16.00193977355957
    9. '```' → logprob: -16.37693977355957
    10. '                ' → logprob: -16.50193977355957

Token 129: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.31326258182525635
    2. ' True' → logprob: -1.3132625818252563
    3. '=True' → logprob: -14.438262939453125
    4. '(True' → logprob: -15.688262939453125
    5. ' ' → logprob: -17.313262939453125
    6. ' ' → logprob: -17.813262939453125
    7. '.True' → logprob: -18.563262939453125
    8. 'Yes' → logprob: -19.938262939453125
    9. '1' → logprob: -20.438262939453125
    10. 'T' → logprob: -20.563262939453125

Token 130: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.8789383830153383e-05
    2. '               ' → logprob: -11.625019073486328
    3. '            
' → logprob: -12.625019073486328
    4. '          ' → logprob: -12.875019073486328
    5. '       ' → logprob: -13.000019073486328
    6. '```' → logprob: -14.625019073486328
    7. '<|end|>' → logprob: -14.875019073486328
    8. '   ' → logprob: -15.500019073486328
    9. '                   ' → logprob: -16.125019073486328
    10. '           
' → logprob: -16.500019073486328

Token 131: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02464275248348713
    2. '               ' → logprob: -3.7746427059173584
    3. '                   ' → logprob: -6.6496429443359375
    4. '```' → logprob: -10.399642944335938
    5. '       ' → logprob: -11.149642944335938
    6. '          ' → logprob: -11.399642944335938
    7. '<|end|>' → logprob: -11.399642944335938
    8. ' ' → logprob: -12.024642944335938
    9. '            
' → logprob: -12.149642944335938
    10. ' ok' → logprob: -12.524642944335938

Token 132: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10196992754936218
    2. ' if' → logprob: -2.3519699573516846
    3. '           ' → logprob: -6.3519697189331055
    4. '               ' → logprob: -11.601969718933105
    5. '       ' → logprob: -12.726969718933105
    6. '```' → logprob: -12.726969718933105
    7. 'If' → logprob: -13.851969718933105
    8. '            ' → logprob: -14.351969718933105
    9. '          ' → logprob: -14.726969718933105
    10. ' ' → logprob: -15.226969718933105

Token 133: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.10020741820335388
    2. 'j' → logprob: -2.3502073287963867
    3. ' ' → logprob: -15.225207328796387
    4. ' ' → logprob: -15.350207328796387
    5. '   ' → logprob: -16.475208282470703
    6. '	j' → logprob: -16.600208282470703
    7. '[j' → logprob: -16.975208282470703
    8. 's' → logprob: -17.100208282470703
    9. '(j' → logprob: -17.100208282470703
    10. '```' → logprob: -17.725208282470703

Token 134: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.029752686619758606
    2. '!=' → logprob: -3.529752731323242
    3. ' ' → logprob: -14.779752731323242
    4. '<|end|>' → logprob: -14.779752731323242
    5. '()!=' → logprob: -15.279752731323242
    6. ' ' → logprob: -15.404752731323242
    7. '!' → logprob: -16.029752731323242
    8. '```' → logprob: -16.279752731323242
    9. '+' → logprob: -16.404752731323242
    10. '!=(' → logprob: -16.404752731323242

Token 135: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.1602320373058319
    2. ' W' → logprob: -1.9102320671081543
    3. '1' → logprob: -12.785231590270996
    4. '(W' → logprob: -13.535231590270996
    5. '   ' → logprob: -13.535231590270996
    6. ' ' → logprob: -13.910231590270996
    7. '0' → logprob: -15.285231590270996
    8. '```' → logprob: -15.410231590270996
    9. '	W' → logprob: -15.410231590270996
    10. 'w' → logprob: -15.785231590270996

Token 136: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -8.41866585687967e-06
    2. ' -' → logprob: -11.875008583068848
    3. '1' → logprob: -13.500008583068848
    4. '−' → logprob: -19.25000762939453
    5. ' ' → logprob: -19.62500762939453
    6. '```' → logprob: -20.50000762939453
    7. '–' → logprob: -21.12500762939453
    8. '-
' → logprob: -21.37500762939453
    9. '   ' → logprob: -21.50000762939453
    10. '-​' → logprob: -21.87500762939453

Token 137: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.375006675720215
    3. '-' → logprob: -13.500006675720215
    4. '```' → logprob: -14.750006675720215
    5. '   ' → logprob: -15.875006675720215
    6. '2' → logprob: -17.0000057220459
    7. '       ' → logprob: -17.6250057220459
    8. '           ' → logprob: -17.8750057220459
    9. '１' → logprob: -18.4375057220459
    10. '``' → logprob: -18.6250057220459

Token 138: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00863336119800806
    2. ':
' → logprob: -5.258633136749268
    3. '               ' → logprob: -6.133633136749268
    4. '       ' → logprob: -7.383633136749268
    5. '<|end|>' → logprob: -8.133633613586426
    6. '           ' → logprob: -8.383633613586426
    7. ' and' → logprob: -11.008633613586426
    8. ' :' → logprob: -11.008633613586426
    9. '):' → logprob: -11.633633613586426
    10. ',' → logprob: -12.008633613586426

Token 139: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00010199354437645525
    2. ' if' → logprob: -9.250102043151855
    3. '           ' → logprob: -12.500102043151855
    4. 'if' → logprob: -13.625102043151855
    5. '       ' → logprob: -15.125102043151855
    6. '<|end|>' → logprob: -15.500102043151855
    7. '```' → logprob: -15.500102043151855
    8. '              ' → logprob: -16.25010108947754
    9. '                   ' → logprob: -17.12510108947754
    10. '			' → logprob: -17.25010108947754

Token 140: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.19275535643100739
    2. 'if' (adapté à ' if') → logprob: -1.9427553415298462
    3. '               ' → logprob: -3.4427554607391357
    4. '           ' → logprob: -10.442755699157715
    5. '                   ' → logprob: -14.317755699157715
    6. '```' → logprob: -14.817755699157715
    7. 'If' → logprob: -14.942755699157715
    8. '       ' → logprob: -15.817755699157715
    9. '                ' → logprob: -15.942755699157715
    10. '   ' → logprob: -16.0677547454834

Token 141: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.011048054322600365
    2. 's' → logprob: -4.511047840118408
    3. ' ' → logprob: -15.886048316955566
    4. ' ' → logprob: -16.38604736328125
    5. '   ' → logprob: -17.26104736328125
    6. '(s' → logprob: -17.38604736328125
    7. '	s' → logprob: -17.88604736328125
    8. '`s' → logprob: -19.01104736328125
    9. '```' → logprob: -19.01104736328125
    10. ' (' → logprob: -19.13604736328125

Token 142: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.088346359931165e-07
    2. '```' → logprob: -15.000000953674316
    3. '[' → logprob: -15.125000953674316
    4. 'i' → logprob: -15.625000953674316
    5. '   ' → logprob: -16.625
    6. '[j' → logprob: -17.5
    7. '][' → logprob: -18.125
    8. '[I' → logprob: -18.5
    9. 's' → logprob: -18.875
    10. '           ' → logprob: -19.0

Token 143: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.005297792609781027
    2. '[i' → logprob: -5.505297660827637
    3. '[j' → logprob: -6.755297660827637
    4. '[' → logprob: -11.005297660827637
    5. ' ][' → logprob: -11.755297660827637
    6. '           ' → logprob: -12.005297660827637
    7. '   ' → logprob: -12.130297660827637
    8. '+' → logprob: -12.505297660827637
    9. ']' → logprob: -13.005297660827637
    10. '               ' → logprob: -13.255297660827637

Token 144: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00029148702742531896
    2. '1' → logprob: -8.25029182434082
    3. ' j' → logprob: -11.00029182434082
    4. '+' → logprob: -12.00029182434082
    5. '[j' → logprob: -12.62529182434082
    6. '```' → logprob: -13.00029182434082
    7. '   ' → logprob: -14.12529182434082
    8. 's' → logprob: -15.00029182434082
    9. ' ' → logprob: -15.37529182434082
    10. ']' → logprob: -15.75029182434082

Token 145: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005065583158284426
    2. '][' → logprob: -5.755065441131592
    3. '[j' → logprob: -6.380065441131592
    4. '+j' → logprob: -9.38006591796875
    5. '[' → logprob: -9.75506591796875
    6. '[i' → logprob: -10.38006591796875
    7. '+[' → logprob: -12.50506591796875
    8. ' +' → logprob: -12.75506591796875
    9. '   ' → logprob: -13.00506591796875
    10. ']' → logprob: -13.25506591796875

Token 146: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008047337643802166
    2. ''#' → logprob: -4.883047103881836
    3. '#' → logprob: -8.508047103881836
    4. 'j' → logprob: -8.883047103881836
    5. ']' → logprob: -10.008047103881836
    6. '+' → logprob: -10.758047103881836
    7. '-' → logprob: -11.133047103881836
    8. '[j' → logprob: -12.133047103881836
    9. ' ' → logprob: -13.258047103881836
    10. '```' → logprob: -13.258047103881836

Token 147: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014586292207241058
    2. ']==' → logprob: -4.264586448669434
    3. '']' → logprob: -8.764586448669434
    4. '==' → logprob: -8.889586448669434
    5. ']=='' → logprob: -9.639586448669434
    6. ' ==' → logprob: -11.014586448669434
    7. '[' → logprob: -11.139586448669434
    8. ' ]' → logprob: -11.264586448669434
    9. '][' → logprob: -11.764586448669434
    10. '']==' → logprob: -12.264586448669434

Token 148: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.36826446652412415
    2. ' ==' → logprob: -1.2432644367218018
    3. ']' → logprob: -4.243264675140381
    4. ']==' → logprob: -5.368264675140381
    5. '[' → logprob: -8.743264198303223
    6. '=='' → logprob: -8.868264198303223
    7. '']' → logprob: -9.618264198303223
    8. '#' → logprob: -9.868264198303223
    9. '           ' → logprob: -9.993264198303223
    10. '               ' → logprob: -10.493264198303223

Token 149: ' '#' (ID: 11284)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.0009026461048051715
    2. ' '#' → logprob: -7.5009026527404785
    3. ' '#'' → logprob: -8.50090217590332
    4. ''' → logprob: -9.50090217590332
    5. '#' → logprob: -10.37590217590332
    6. '('#' → logprob: -10.75090217590332
    7. '"#' → logprob: -11.75090217590332
    8. '='#' → logprob: -13.25090217590332
    9. '','#' → logprob: -13.75090217590332
    10. ''>' → logprob: -13.75090217590332

Token 150: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.24626524746418
    2. '':' → logprob: -1.9962652921676636
    3. '                   ' → logprob: -2.746265172958374
    4. ':
' → logprob: -5.371265411376953
    5. ''' → logprob: -5.871265411376953
    6. ':' → logprob: -5.996265411376953
    7. '               ' → logprob: -6.246265411376953
    8. '']:
' → logprob: -6.246265411376953
    9. '']' → logprob: -6.496265411376953
    10. '           ' → logprob: -7.746265411376953

Token 151: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2221461981534958
    2. '               ' → logprob: -2.2221462726593018
    3. ' ok' → logprob: -3.2221462726593018
    4. 'ok' → logprob: -3.3471462726593018
    5. '                       ' → logprob: -4.222146034240723
    6. '           ' → logprob: -7.722146034240723
    7. '                  ' → logprob: -9.097146034240723
    8. '       ' → logprob: -9.597146034240723
    9. '              ' → logprob: -9.722146034240723
    10. '   ' → logprob: -9.722146034240723

Token 152: ' ok' (ID: 4763)
  Prédit: 'ok'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ok' (adapté à ' ok') → logprob: -0.3868842124938965
    2. ' ok' → logprob: -1.1368842124938965
    3. 'True' → logprob: -12.261884689331055
    4. 'Ok' → logprob: -12.636884689331055
    5. '#' → logprob: -13.261884689331055
    6. ' True' → logprob: -13.511884689331055
    7. '	ok' → logprob: -14.636884689331055
    8. ' okay' → logprob: -15.011884689331055
    9. '                   ' → logprob: -15.136884689331055
    10. 'OK' → logprob: -15.386884689331055

Token 153: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1271708458662033
    2. ' =' → logprob: -2.1271708011627197
    3. '=True' → logprob: -8.37717056274414
    4. '==' → logprob: -12.50217056274414
    5. ' True' → logprob: -13.25217056274414
    6. '=False' → logprob: -13.50217056274414
    7. 'True' → logprob: -13.75217056274414
    8. ' ==' → logprob: -13.87717056274414
    9. '               ' → logprob: -14.12717056274414
    10. '                   ' → logprob: -14.37717056274414

Token 154: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.16022686660289764
    2. ' True' → logprob: -1.910226821899414
    3. '=True' → logprob: -13.535226821899414
    4. '(True' → logprob: -13.910226821899414
    5. ' ' → logprob: -15.910226821899414
    6. ' ' → logprob: -16.285226821899414
    7. ''' → logprob: -16.535226821899414
    8. '1' → logprob: -16.785226821899414
    9. '#' → logprob: -16.910226821899414
    10. '.True' → logprob: -17.035226821899414

Token 155: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0018230968853458762
    2. '               ' → logprob: -6.5018229484558105
    3. '       ' → logprob: -8.751823425292969
    4. '                   ' → logprob: -9.751823425292969
    5. '            
' → logprob: -10.376823425292969
    6. ' continue' → logprob: -10.751823425292969
    7. ' if' → logprob: -11.626823425292969
    8. '```' → logprob: -11.626823425292969
    9. '
' → logprob: -11.876823425292969
    10. 'continue' → logprob: -12.251823425292969

Token 156: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0025275067891925573
    2. '               ' → logprob: -6.377527713775635
    3. '       ' → logprob: -8.002527236938477
    4. '```' → logprob: -8.502527236938477
    5. ' if' → logprob: -8.752527236938477
    6. '   ' → logprob: -10.502527236938477
    7. ' else' → logprob: -10.752527236938477
    8. 'if' → logprob: -11.127527236938477
    9. '            
' → logprob: -11.127527236938477
    10. 'else' → logprob: -11.377527236938477

Token 157: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.002981029450893402
    2. '           ' → logprob: -6.627981185913086
    3. '               ' → logprob: -7.127981185913086
    4. ' if' → logprob: -7.377981185913086
    5. '   ' → logprob: -9.127981185913086
    6. '       ' → logprob: -9.377981185913086
    7. '```' → logprob: -10.877981185913086
    8. 'continue' → logprob: -11.877981185913086
    9. 'print' → logprob: -12.627981185913086
    10. '                   ' → logprob: -13.752981185913086

Token 158: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.5766377449035645
    2. ' not' → logprob: -0.8266377449035645
    3. 'ok' → logprob: -7.3266377449035645
    4. ' ok' → logprob: -10.326637268066406
    5. ' ' → logprob: -12.701637268066406
    6. '(not' → logprob: -12.826637268066406
    7. '	not' → logprob: -14.576637268066406
    8. ' ' → logprob: -14.701637268066406
    9. '!' → logprob: -15.076637268066406
    10. '
' → logprob: -15.951637268066406

Token 159: ' ok' (ID: 4763)
  Prédit: ' ok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ok' → logprob: -0.005234002135694027
    2. 'ok' → logprob: -5.2552337646484375
    3. ' okay' → logprob: -15.630233764648438
    4. '(ok' → logprob: -16.880233764648438
    5. '	ok' → logprob: -17.880233764648438
    6. ' ' → logprob: -19.005233764648438
    7. '_ok' → logprob: -19.130233764648438
    8. ' ок' → logprob: -19.630233764648438
    9. ' ' → logprob: -19.880233764648438
    10. '.ok' → logprob: -20.130233764648438

Token 160: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16080304980278015
    2. ':
' → logprob: -1.9108030796051025
    3. '=' → logprob: -7.785802841186523
    4. '):
' → logprob: -9.410802841186523
    5. '):' → logprob: -10.660802841186523
    6. ':

' → logprob: -11.160802841186523
    7. '<|end|>' → logprob: -11.410802841186523
    8. ')' → logprob: -11.660802841186523
    9. ' =' → logprob: -12.410802841186523
    10. 's' → logprob: -12.535802841186523

Token 161: '               ' (ID: 506)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05151011422276497
    2. 'ans' → logprob: -3.5515100955963135
    3. ' ans' → logprob: -3.9265100955963135
    4. '	ans' → logprob: -6.801510334014893
    5. '
' → logprob: -7.926510334014893
    6. '```' → logprob: -9.426509857177734
    7. '           ' → logprob: -9.676509857177734
    8. '               ' → logprob: -9.926509857177734
    9. '       ' → logprob: -10.051509857177734
    10. '    
' → logprob: -10.176509857177734

Token 162: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0013510684948414564
    2. ' ans' → logprob: -6.6263508796691895
    3. '	ans' → logprob: -11.876351356506348
    4. '
' → logprob: -12.001351356506348
    5. 'print' → logprob: -12.376351356506348
    6. '           ' → logprob: -13.126351356506348
    7. '               ' → logprob: -13.251351356506348
    8. '_ans' → logprob: -14.001351356506348
    9. 'answer' → logprob: -14.126351356506348
    10. '(ans' → logprob: -14.126351356506348

Token 163: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04858839511871338
    2. ' =' → logprob: -3.048588275909424
    3. '+=' → logprob: -15.048588752746582
    4. '='' → logprob: -15.298588752746582
    5. ' ='' → logprob: -15.548588752746582
    6. '＝' → logprob: -15.798588752746582
    7. ' +=' → logprob: -17.298587799072266
    8. ' ' → logprob: -17.298587799072266
    9. '.=' → logprob: -18.048587799072266
    10. '+='' → logprob: -18.173587799072266

Token 164: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0013016649754717946
    2. ' '' → logprob: -6.7513017654418945
    3. '"No' → logprob: -9.001301765441895
    4. 'No' → logprob: -13.001301765441895
    5. '"' → logprob: -13.126301765441895
    6. ' ' → logprob: -13.251301765441895
    7. ' No' → logprob: -13.751301765441895
    8. '   ' → logprob: -15.001301765441895
    9. ''N' → logprob: -15.501301765441895
    10. '`' → logprob: -15.751301765441895

Token 165: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -2.816093228830141e-06
    2. '"No' → logprob: -12.87500286102295
    3. 'Impossible' → logprob: -16.625001907348633
    4. 'NO' → logprob: -17.000001907348633
    5. '_No' → logprob: -17.500001907348633
    6. ''' → logprob: -18.125001907348633
    7. ' No' → logprob: -18.250001907348633
    8. '>No' → logprob: -18.250001907348633
    9. '.No' → logprob: -18.500001907348633
    10. 'Not' → logprob: -19.000001907348633

Token 166: ''
' (ID: 2207)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2928028702735901
    2. '<|end|>' → logprob: -1.6678028106689453
    3. 'break' → logprob: -3.6678028106689453
    4. '
' → logprob: -4.042802810668945
    5. '               ' → logprob: -4.292802810668945
    6. '                   ' → logprob: -6.167802810668945
    7. ')' → logprob: -6.542802810668945
    8. '<|end|>' → logprob: -6.792802810668945
    9. '           ' → logprob: -7.042802810668945
    10. '```' → logprob: -7.542802810668945

Token 167: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.704065213445574e-05
    2. ' print' → logprob: -10.500046730041504
    3. '\n' → logprob: -11.875046730041504
    4. 'break' → logprob: -12.000046730041504
    5. '           ' → logprob: -12.625046730041504
    6. '               ' → logprob: -13.750046730041504
    7. '```' → logprob: -13.875046730041504
    8. '\' → logprob: -15.250046730041504
    9. '
' → logprob: -15.875046730041504
    10. '            
' → logprob: -16.37504768371582

Token 168: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.04911855235695839
    2. '(' → logprob: -3.0491185188293457
    3. '('' → logprob: -7.549118518829346
    4. '(answer' → logprob: -13.049118995666504
    5. '("("' → logprob: -13.799118995666504
    6. '()' → logprob: -14.174118995666504
    7. ' (' → logprob: -16.049118041992188
    8. '(`' → logprob: -16.549118041992188
    9. '(a' → logprob: -16.674118041992188
    10. 'ans' → logprob: -16.799118041992188

Token 169: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. '')' → logprob: -15.625000953674316
    3. ')`' → logprob: -15.625000953674316
    4. ' )' → logprob: -16.875
    5. '`)' → logprob: -18.25
    6. '))' → logprob: -18.5
    7. '()' → logprob: -18.625
    8. '())' → logprob: -19.25
    9. ')
' → logprob: -20.0
    10. '）' → logprob: -20.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 167
Tokens correctement prédits (1ère position, stricte): 88
Tokens correctement prédits (1ère position, avec adaptation): 93
Tokens correctement prédits (top 10): 151
Précision stricte (1ère position): 52.69%
Précision adaptée (1ère position): 55.69%
Précision (top 10): 90.42%
================================================================================
