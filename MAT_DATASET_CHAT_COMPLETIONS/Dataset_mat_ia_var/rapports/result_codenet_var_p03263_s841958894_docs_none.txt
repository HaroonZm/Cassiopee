================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:10
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def solve():
    H,W = map(int,input().split())
    field = [list(map(int,input().split())) for _ in range(H)]
    nh = 0
    nw = 0
    ans = []
    haveCoin = False
    while True:
        if field[nh][nw] % 2 != 0:
            if haveCoin:
                haveCoin = False
            else:
                haveCoin = True
        frm = [nh+1,nw+1]
        if nh % 2 == 0:
            nw += 1
            if nw == W:
                nh += 1
                nw = W-1
        else:
            nw -= 1
            if nw == -1:
                nh += 1
                nw = 0
        to = [nh+1,nw+1]
        if nh == H:
            break
        if haveCoin:
            ans.append(frm+to)
    print(len(ans))
    for elem in ans:
        print(*elem)
if __name__ == '__main__':
    solve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' solve' (ID: 17722)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8559384346008301
    2. '\' → logprob: -1.35593843460083
    3. '\n' → logprob: -1.35593843460083
    4. '```' → logprob: -3.35593843460083
    5. '    
' → logprob: -4.48093843460083
    6. ':' → logprob: -5.85593843460083
    7. '    ' → logprob: -6.23093843460083
    8. '(' → logprob: -6.60593843460083
    9. '\r' → logprob: -6.60593843460083
    10. ' 
' → logprob: -6.98093843460083

Token 4: ' H' (ID: 487)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.4673477411270142
    2. 'n' → logprob: -1.5923477411270142
    3. 'x' → logprob: -2.0923476219177246
    4. '   ' → logprob: -2.0923476219177246
    5. '\' → logprob: -2.4673476219177246
    6. 'a' → logprob: -2.5923476219177246
    7. 'i' → logprob: -3.4673476219177246
    8. '```' → logprob: -3.5923476219177246
    9. ' ' → logprob: -4.092347621917725
    10. '#' → logprob: -4.342347621917725

Token 5: ',W' (ID: 117252)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.432788223028183
    2. ',' → logprob: -1.6827882528305054
    3. '=' → logprob: -2.182788133621216
    4. '   ' → logprob: -3.682788133621216
    5. ':' → logprob: -5.307788372039795
    6. ' ' → logprob: -5.807788372039795
    7. 'e' → logprob: -5.807788372039795
    8. '    ' → logprob: -5.807788372039795
    9. ' ,' → logprob: -6.182788372039795
    10. ' +=' → logprob: -6.182788372039795

Token 6: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4905439615249634
    2. '=' → logprob: -0.9905439615249634
    3. ',' → logprob: -4.240543842315674
    4. '   ' → logprob: -7.365543842315674
    5. ')' → logprob: -7.490543842315674
    6. ' ,' → logprob: -8.240544319152832
    7. ' ' → logprob: -9.365544319152832
    8. '.' → logprob: -10.115544319152832
    9. '[' → logprob: -10.115544319152832
    10. ' =
' → logprob: -10.115544319152832

Token 7: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.05702175199985504
    2. 'map' → logprob: -2.9320218563079834
    3. ' list' → logprob: -6.432021617889404
    4. ' input' → logprob: -7.807021617889404
    5. ' ' → logprob: -10.057022094726562
    6. 'input' → logprob: -10.307022094726562
    7. 'list' → logprob: -10.307022094726562
    8. ' [' → logprob: -12.557022094726562
    9. ' int' → logprob: -13.057022094726562
    10. '0' → logprob: -13.432022094726562

Token 8: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.022152146324515343
    2. '(' → logprob: -4.147151947021484
    3. '(str' → logprob: -5.272151947021484
    4. '(lambda' → logprob: -7.022151947021484
    5. '(input' → logprob: -9.772151947021484
    6. ' (' → logprob: -12.522151947021484
    7. '(eval' → logprob: -12.522151947021484
    8. 'int' → logprob: -12.897151947021484
    9. '<int' → logprob: -13.522151947021484
    10. '[int' → logprob: -13.772151947021484

Token 9: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.49490249156951904
    2. ',' → logprob: -1.744902491569519
    3. ')' → logprob: -2.3699026107788086
    4. '(' → logprob: -2.3699026107788086
    5. '(str' → logprob: -4.494902610778809
    6. ',input' → logprob: -5.369902610778809
    7. 'input' → logprob: -5.619902610778809
    8. 'def' → logprob: -6.369902610778809
    9. '(stdin' → logprob: -6.494902610778809
    10. '(int' → logprob: -6.869902610778809

Token 10: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.2593109607696533
    2. '())' → logprob: -1.6343109607696533
    3. '()' → logprob: -3.5093109607696533
    4. ')' → logprob: -5.759310722351074
    5. '(' → logprob: -9.009310722351074
    6. '());' → logprob: -10.384310722351074
    7. '()>' → logprob: -10.759310722351074
    8. '()))' → logprob: -10.884310722351074
    9. '()[' → logprob: -11.259310722351074
    10. '();)' → logprob: -11.509310722351074

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.0564331205387134e-05
    2. 'strip' → logprob: -11.62501049041748
    3. ')' → logprob: -14.00001049041748
    4. ' split' → logprob: -14.50001049041748
    5. 'rstrip' → logprob: -15.37501049041748
    6. '(split' → logprob: -17.375011444091797
    7. 'read' → logprob: -18.000011444091797
    8. '())' → logprob: -18.375011444091797
    9. 'spl' → logprob: -19.000011444091797
    10. '()' → logprob: -19.000011444091797

Token 12: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011082957498729229
    2. '))' → logprob: -4.886083126068115
    3. '())' → logprob: -5.761083126068115
    4. '()' → logprob: -9.511082649230957
    5. '`)' → logprob: -9.511082649230957
    6. '')' → logprob: -10.386082649230957
    7. '('' → logprob: -10.386082649230957
    8. '(' → logprob: -10.636082649230957
    9. ')`' → logprob: -11.011082649230957
    10. ')))' → logprob: -11.136082649230957

Token 13: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05809842050075531
    2. '```' → logprob: -4.058098316192627
    3. '
' → logprob: -4.308098316192627
    4. '    
' → logprob: -4.808098316192627
    5. '\n' → logprob: -5.183098316192627
    6. '\' → logprob: -6.058098316192627
    7. '<|end|>' → logprob: -6.183098316192627
    8. '``' → logprob: -6.433098316192627
    9. ')' → logprob: -6.558098316192627
    10. ' for' → logprob: -7.683098316192627

Token 14: ' field' (ID: 3259)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7546766400337219
    2. 'dp' → logprob: -1.8796765804290771
    3. 'grid' → logprob: -1.8796765804290771
    4. ' grid' → logprob: -2.129676580429077
    5. 'matrix' → logprob: -4.004676818847656
    6. 'a' → logprob: -4.379676818847656
    7. 'A' → logprob: -4.629676818847656
    8. '```' → logprob: -4.754676818847656
    9. '`' → logprob: -5.129676818847656
    10. ' dp' → logprob: -5.254676818847656

Token 15: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.011849339120090008
    2. '=' → logprob: -4.886849403381348
    3. ' =' → logprob: -6.386849403381348
    4. '[:]' → logprob: -7.261849403381348
    5. '[]' → logprob: -7.386849403381348
    6. '[][]' → logprob: -8.011849403381348
    7. '\[' → logprob: -8.761849403381348
    8. '[i' → logprob: -9.261849403381348
    9. '[...]' → logprob: -9.386849403381348
    10. '=[]' → logprob: -9.636849403381348

Token 16: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1335245668888092
    2. ' [' → logprob: -2.8835246562957764
    3. '[input' → logprob: -3.3835246562957764
    4. '[]' → logprob: -4.133524417877197
    5. '[list' → logprob: -4.758524417877197
    6. ' []' → logprob: -5.258524417877197
    7. '[int' → logprob: -5.508524417877197
    8. '[line' → logprob: -8.508524894714355
    9. '[List' → logprob: -8.758524894714355
    10. '[array' → logprob: -8.883524894714355

Token 17: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.006148007698357105
    2. 'input' → logprob: -5.256147861480713
    3. ' list' → logprob: -7.006147861480713
    4. ' input' → logprob: -12.131148338317871
    5. '[input' → logprob: -13.631148338317871
    6. '[list' → logprob: -14.256148338317871
    7. '(list' → logprob: -15.881148338317871
    8. 'tuple' → logprob: -17.756147384643555
    9. ':list' → logprob: -18.006147384643555
    10. '[]' → logprob: -18.131147384643555

Token 18: '(map' (ID: 16946)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.253652423620224
    2. '(map' → logprob: -1.5036524534225464
    3. '(' → logprob: -6.378652572631836
    4. '(str' → logprob: -11.753652572631836
    5. '(int' → logprob: -12.253652572631836
    6. '()' → logprob: -12.378652572631836
    7. 'map' → logprob: -12.753652572631836
    8. 'input' → logprob: -14.003652572631836
    9. '(
' → logprob: -14.003652572631836
    10. '(range' → logprob: -14.253652572631836

Token 19: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00010413920972496271
    2. '(' → logprob: -10.000103950500488
    3. 'int' → logprob: -10.375103950500488
    4. '(lambda' → logprob: -11.250103950500488
    5. '[int' → logprob: -12.500103950500488
    6. '<int' → logprob: -12.625103950500488
    7. '(str' → logprob: -12.875103950500488
    8. ',int' → logprob: -13.500103950500488
    9. ')' → logprob: -13.625103950500488
    10. '=int' → logprob: -13.750103950500488

Token 20: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.4838327169418335
    2. ',input' → logprob: -0.9838327169418335
    3. ',' → logprob: -4.983832836151123
    4. '(' → logprob: -6.108832836151123
    5. 'input' → logprob: -7.858832836151123
    6. ' ,' → logprob: -9.483832359313965
    7. ' input' → logprob: -10.608832359313965
    8. '=input' → logprob: -10.608832359313965
    9. '<|end|>' → logprob: -10.858832359313965
    10. '(),' → logprob: -10.858832359313965

Token 21: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.4498052223643754e-05
    2. '()' → logprob: -11.375014305114746
    3. ' ().' → logprob: -13.500014305114746
    4. '.' → logprob: -14.250014305114746
    5. '.split' → logprob: -15.250014305114746
    6. '()))' → logprob: -15.250014305114746
    7. '(' → logprob: -15.500014305114746
    8. ' .' → logprob: -16.125015258789062
    9. 'split' → logprob: -17.000015258789062
    10. '   ' → logprob: -17.000015258789062

Token 22: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.842555426876061e-06
    2. '(split' → logprob: -12.500004768371582
    3. ' split' → logprob: -14.250004768371582
    4. 'strip' → logprob: -15.125004768371582
    5. 'rstrip' → logprob: -15.750004768371582
    6. 'spl' → logprob: -18.1250057220459
    7. '.split' → logprob: -18.2500057220459
    8. 'read' → logprob: -19.5000057220459
    9. 's' → logprob: -19.6250057220459
    10. '().' → logprob: -19.7500057220459

Token 23: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0024107310455292463
    2. '))' → logprob: -6.377410888671875
    3. '()' → logprob: -7.877410888671875
    4. '())' → logprob: -8.127410888671875
    5. '(' → logprob: -11.252410888671875
    6. '())))' → logprob: -11.502410888671875
    7. '()))
' → logprob: -12.502410888671875
    8. '()));' → logprob: -13.127410888671875
    9. '().' → logprob: -13.502410888671875
    10. '())).' → logprob: -14.002410888671875

Token 24: ' for' (ID: 395)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.7719120979309082
    2. '()' → logprob: -1.2719120979309082
    3. ')' → logprob: -1.3969120979309082
    4. '(' → logprob: -5.271912097930908
    5. '()]' → logprob: -5.646912097930908
    6. ')]' → logprob: -7.146912097930908
    7. 'for' → logprob: -7.521912097930908
    8. '()),' → logprob: -10.14691162109375
    9. ' for' → logprob: -10.39691162109375
    10. ']' → logprob: -10.39691162109375

Token 25: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.008104927837848663
    2. '_' → logprob: -5.3831048011779785
    3. '(range' → logprob: -6.8831048011779785
    4. ' _' → logprob: -7.0081048011779785
    5. 'range' → logprob: -7.0081048011779785
    6. '_range' → logprob: -7.7581048011779785
    7. ' ' → logprob: -9.258105278015137
    8. ' in' → logprob: -10.133105278015137
    9. ' i' → logprob: -10.258105278015137
    10. '(' → logprob: -10.508105278015137

Token 26: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.22663237154483795
    2. ' range' → logprob: -1.7266323566436768
    3. ' in' → logprob: -3.7266323566436768
    4. 'in' → logprob: -7.351632595062256
    5. '(range' → logprob: -9.226632118225098
    6. '	range' → logprob: -9.601632118225098
    7. '_range' → logprob: -11.851632118225098
    8. '_' → logprob: -12.351632118225098
    9. '.range' → logprob: -12.601632118225098
    10. ' ' → logprob: -13.351632118225098

Token 27: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0788901224732399
    2. ' range' → logprob: -2.578890085220337
    3. '	range' → logprob: -15.578889846801758
    4. '(range' → logprob: -15.828889846801758
    5. '_range' → logprob: -17.828889846801758
    6. ' ' → logprob: -17.828889846801758
    7. '.range' → logprob: -18.078889846801758
    8. '  ' → logprob: -18.203889846801758
    9. '   ' → logprob: -18.203889846801758
    10. 'rang' → logprob: -18.953889846801758

Token 28: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.002617870457470417
    2. '(' → logprob: -6.377617835998535
    3. '(W' → logprob: -7.002617835998535
    4. '(I' → logprob: -13.627617835998535
    5. ' (' → logprob: -13.877617835998535
    6. ')' → logprob: -14.127617835998535
    7. '(M' → logprob: -14.627617835998535
    8. '(F' → logprob: -15.002617835998535
    9. '((' → logprob: -15.127617835998535
    10. '(N' → logprob: -15.252617835998535

Token 29: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00012987985974177718
    2. ')' → logprob: -9.250129699707031
    3. ']' → logprob: -10.500129699707031
    4. ')])' → logprob: -13.250129699707031
    5. '])]' → logprob: -13.375129699707031
    6. '))' → logprob: -14.000129699707031
    7. '')]' → logprob: -14.125129699707031
    8. ')]
' → logprob: -15.250129699707031
    9. '])' → logprob: -15.625129699707031
    10. ')],' → logprob: -15.750129699707031

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43061572313308716
    2. '
' → logprob: -1.3056156635284424
    3. 'for' → logprob: -3.9306156635284424
    4. '<|end|>' → logprob: -4.0556159019470215
    5. '    
' → logprob: -4.3056159019470215
    6. ' for' → logprob: -4.3056159019470215
    7. '\n' → logprob: -5.6806159019470215
    8. ')' → logprob: -5.8056159019470215
    9. '```' → logprob: -6.1806159019470215
    10. '  
' → logprob: -7.1806159019470215

Token 31: ' nh' (ID: 5467)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13531476259231567
    2. 'for' → logprob: -3.510314702987671
    3. '
' → logprob: -3.760314702987671
    4. '```' → logprob: -4.01031494140625
    5. '    
' → logprob: -4.38531494140625
    6. ' for' → logprob: -4.63531494140625
    7. 'dp' → logprob: -4.63531494140625
    8. ')' → logprob: -6.01031494140625
    9. 'max' → logprob: -6.51031494140625
    10. 'count' → logprob: -6.51031494140625

Token 32: ' =' (ID: 314)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'br' → logprob: -1.2887266874313354
    2. 'd' → logprob: -1.6637266874313354
    3. '=[[' → logprob: -2.163726806640625
    4. 'b' → logprob: -2.538726806640625
    5. '=[' → logprob: -2.663726806640625
    6. ' =' → logprob: -2.663726806640625
    7. '=' → logprob: -3.038726806640625
    8. 'bors' → logprob: -3.163726806640625
    9. 'eight' → logprob: -4.163726806640625
    10. 'dx' → logprob: -4.538726806640625

Token 33: ' ' (ID: 220)
  Prédit: ' [-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [-' → logprob: -0.8712567090988159
    2. '[-' → logprob: -1.246256709098816
    3. ' [' → logprob: -1.496256709098816
    4. '[' → logprob: -2.7462568283081055
    5. '[h' → logprob: -6.4962568283081055
    6. '[i' → logprob: -6.9962568283081055
    7. '1' → logprob: -7.2462568283081055
    8. ' ' → logprob: -7.3712568283081055
    9. '-' → logprob: -7.3712568283081055
    10. '0' → logprob: -7.7462568283081055

Token 34: '0' (ID: 15)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.14768646657466888
    2. '[' → logprob: -2.64768648147583
    3. '-' → logprob: -3.89768648147583
    4. ' [-' → logprob: -4.27268648147583
    5. 'H' → logprob: -4.39768648147583
    6. '1' → logprob: -4.64768648147583
    7. ' [' → logprob: -5.77268648147583
    8. ' H' → logprob: -6.27268648147583
    9. 'range' → logprob: -6.77268648147583
    10. ' ' → logprob: -7.39768648147583

Token 35: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 36: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 37: ' nw' (ID: 45462)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08090711385011673
    2. ' for' → logprob: -2.580907106399536
    3. '
' → logprob: -6.580907344818115
    4. '<|end|>' → logprob: -8.205906867980957
    5. '   ' → logprob: -9.955906867980957
    6. '' → logprob: -10.205906867980957
    7. ' ' → logprob: -10.205906867980957
    8. '\n' → logprob: -10.455906867980957
    9. '	for' → logprob: -10.580906867980957
    10. ')' → logprob: -10.705906867980957

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38726451992988586
    2. '=' → logprob: -1.1372644901275635
    3. ' +=' → logprob: -8.512264251708984
    4. '+' → logprob: -9.637264251708984
    5. '+=' → logprob: -9.762264251708984
    6. ')' → logprob: -10.387264251708984
    7. '<|end|>' → logprob: -11.012264251708984
    8. ' ' → logprob: -12.637264251708984
    9. ']' → logprob: -12.887264251708984
    10. ' =)' → logprob: -13.012264251708984

Token 39: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4742269515991211
    2. '0' → logprob: -0.9742269515991211
    3. '1' → logprob: -9.599226951599121
    4. ' -' → logprob: -9.974226951599121
    5. '   ' → logprob: -11.911726951599121
    6. '-' → logprob: -12.099226951599121
    7. '+' → logprob: -12.849226951599121
    8. ' (' → logprob: -12.911726951599121
    9. '(' → logprob: -13.036726951599121
    10. '  ' → logprob: -13.411726951599121

Token 40: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004748268518596888
    2. ' ' → logprob: -5.504748344421387
    3. '1' → logprob: -7.879748344421387
    4. '-' → logprob: -8.379748344421387
    5. ' -' → logprob: -10.254748344421387
    6. '+' → logprob: -11.754748344421387
    7. '   ' → logprob: -12.879748344421387
    8. 'h' → logprob: -13.004748344421387
    9. '(' → logprob: -13.192248344421387
    10. 'H' → logprob: -13.442248344421387

Token 41: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 42: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 43: ' ans' (ID: 3345)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08909770101308823
    2. '=' → logprob: -2.464097738265991
    3. ' +=' → logprob: -9.08909797668457
    4. '_' → logprob: -11.21409797668457
    5. '[' → logprob: -11.96409797668457
    6. '+=' → logprob: -12.46409797668457
    7. ',' → logprob: -12.46409797668457
    8. ')' → logprob: -12.83909797668457
    9. ' =
' → logprob: -13.46409797668457
    10. '.' → logprob: -13.46409797668457

Token 45: ' []
' (ID: 8911)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18084686994552612
    2. ' ' → logprob: -2.180846929550171
    3. 'float' → logprob: -4.055846691131592
    4. ' []' → logprob: -4.305846691131592
    5. '[]' → logprob: -4.805846691131592
    6. ' float' → logprob: -4.805846691131592
    7. '10' → logprob: -6.305846691131592
    8. '1' → logprob: -7.305846691131592
    9. '100' → logprob: -7.805846691131592
    10. '"' → logprob: -7.930846691131592

Token 46: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3111569285392761
    2. '<|end|>' → logprob: -1.686156988143921
    3. '\n' → logprob: -3.686156988143921
    4. ':' → logprob: -4.061156749725342
    5. '
' → logprob: -4.186156749725342
    6. '\' → logprob: -5.686156749725342
    7. ' for' → logprob: -5.686156749725342
    8. ' ' → logprob: -5.686156749725342
    9. '    
' → logprob: -6.061156749725342
    10. ')' → logprob: -6.311156749725342

Token 47: ' have' (ID: 679)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8573371171951294
    2. ' for' → logprob: -1.7323371171951294
    3. '
' → logprob: -1.8573371171951294
    4. '   ' → logprob: -2.48233699798584
    5. '\n' → logprob: -2.48233699798584
    6. 'while' → logprob: -3.10733699798584
    7. ' while' → logprob: -4.48233699798584
    8. ',' → logprob: -5.73233699798584
    9. ':' → logprob: -5.85733699798584
    10. '\' → logprob: -6.23233699798584

Token 48: 'Coin' (ID: 40826)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5511622428894043
    2. '_' → logprob: -1.0511622428894043
    3. '[' → logprob: -3.6761622428894043
    4. '=' → logprob: -3.8011622428894043
    5. 'd' → logprob: -4.426162242889404
    6. ' ' → logprob: -5.426162242889404
    7. '[:]' → logprob: -6.301162242889404
    8. '[]' → logprob: -6.801162242889404
    9. '_space' → logprob: -7.176162242889404
    10. ',' → logprob: -7.176162242889404

Token 49: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5670624375343323
    2. 's' → logprob: -1.0670623779296875
    3. '=' → logprob: -2.4420623779296875
    4. 'd' → logprob: -6.6920623779296875
    5. ' ' → logprob: -8.317062377929688
    6. '[' → logprob: -9.567062377929688
    7. '  ' → logprob: -9.692062377929688
    8. '_' → logprob: -9.817062377929688
    9. ' s' → logprob: -9.942062377929688
    10. '_s' → logprob: -10.817062377929688

Token 50: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.6007488965988159
    2. 'False' → logprob: -0.8507488965988159
    3. ' True' → logprob: -4.2257490158081055
    4. '0' → logprob: -5.2257490158081055
    5. 'True' → logprob: -5.8507490158081055
    6. ' ' → logprob: -7.3507490158081055
    7. '[]' → logprob: -7.7257490158081055
    8. ' []' → logprob: -7.8507490158081055
    9. '(False' → logprob: -10.350749015808105
    10. '[' → logprob: -10.475749015808105

Token 51: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6694618463516235
    2. '\n' → logprob: -1.9194618463516235
    3. '<|end|>' → logprob: -2.169461727142334
    4. '
' → logprob: -2.294461727142334
    5. '   ' → logprob: -2.794461727142334
    6. '\' → logprob: -4.544461727142334
    7. ' ' → logprob: -4.794461727142334
    8. ':
' → logprob: -4.794461727142334
    9. ' for' → logprob: -4.919461727142334
    10. ' 
' → logprob: -5.044461727142334

Token 52: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7446173429489136
    2. '   ' → logprob: -1.3696173429489136
    3. '
' → logprob: -1.9946173429489136
    4. ' for' → logprob: -3.119617462158203
    5. '\' → logprob: -3.619617462158203
    6. 'for' → logprob: -4.369617462158203
    7. '    
' → logprob: -4.494617462158203
    8. '<|end|>' → logprob: -4.619617462158203
    9. ' 
' → logprob: -4.744617462158203
    10. ' ' → logprob: -5.119617462158203

Token 53: ' while' (ID: 2049)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5118805766105652
    2. ' for' → logprob: -1.76188063621521
    3. '
' → logprob: -2.38688063621521
    4. 'for' → logprob: -2.51188063621521
    5. '\' → logprob: -3.51188063621521
    6. '   ' → logprob: -4.386880397796631
    7. ' 
' → logprob: -6.011880397796631
    8. '```' → logprob: -6.011880397796631
    9. '    
' → logprob: -6.136880397796631
    10. ' ' → logprob: -6.261880397796631

Token 54: ' True' (ID: 6432)
  Prédit: ' nh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nh' → logprob: -0.019168242812156677
    2. ' not' → logprob: -4.269168376922607
    3. ' True' → logprob: -6.644168376922607
    4. 'nh' → logprob: -6.644168376922607
    5. ' nw' → logprob: -7.394168376922607
    6. ' H' → logprob: -7.644168376922607
    7. ' (' → logprob: -8.39416790008545
    8. ' h' → logprob: -8.51916790008545
    9. ' ' → logprob: -8.51916790008545
    10. 'H' → logprob: -9.14416790008545

Token 55: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00021974841365590692
    2. ':
' → logprob: -9.625219345092773
    3. '       ' → logprob: -9.625219345092773
    4. '):' → logprob: -10.500219345092773
    5. '   ' → logprob: -10.625219345092773
    6. ' :' → logprob: -11.625219345092773
    7. '():' → logprob: -11.750219345092773
    8. ',' → logprob: -12.000219345092773
    9. ':**' → logprob: -12.000219345092773
    10. '>:' → logprob: -13.625219345092773

Token 56: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11648514121770859
    2. '<|end|>' → logprob: -3.116485118865967
    3. ' ' → logprob: -3.366485118865967
    4. '    ' → logprob: -4.366485118865967
    5. '        ' → logprob: -5.616485118865967
    6. '   ' → logprob: -5.741485118865967
    7. ' 
' → logprob: -5.991485118865967
    8. '        
' → logprob: -6.116485118865967
    9. '\n' → logprob: -6.491485118865967
    10. ' if' → logprob: -6.616485118865967

Token 57: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.22881022095680237
    2. ' ' → logprob: -2.2288103103637695
    3. ' 
' → logprob: -3.1038103103637695
    4. 'if' (adapté à ' if') → logprob: -3.6038103103637695
    5. '    ' → logprob: -4.6038103103637695
    6. '#' → logprob: -6.2288103103637695
    7. '<|end|>' → logprob: -6.2288103103637695
    8. '       ' → logprob: -6.7288103103637695
    9. ' #' → logprob: -6.9788103103637695
    10. '   ' → logprob: -7.1038103103637695

Token 58: ' field' (ID: 3259)
  Prédit: ' have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' have' → logprob: -0.9529062509536743
    2. ' nh' → logprob: -0.9529062509536743
    3. ' not' → logprob: -2.3279061317443848
    4. 'have' → logprob: -2.5779061317443848
    5. ' nw' → logprob: -3.5779061317443848
    6. 'nh' → logprob: -4.577906131744385
    7. ' field' → logprob: -5.202906131744385
    8. 'nw' → logprob: -5.327906131744385
    9. 'not' → logprob: -6.952906131744385
    10. ' hw' → logprob: -6.952906131744385

Token 59: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.003557900432497263
    2. '[h' → logprob: -6.1285576820373535
    3. '[n' → logprob: -6.7535576820373535
    4. '[now' → logprob: -9.378558158874512
    5. '[i' → logprob: -10.128558158874512
    6. '   ' → logprob: -10.878558158874512
    7. '```' → logprob: -11.753558158874512
    8. ' [' → logprob: -12.128558158874512
    9. '[y' → logprob: -12.378558158874512
    10. '][' → logprob: -12.753558158874512

Token 60: 'nh' (ID: 5380)
  Prédit: 'nh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nh' → logprob: -0.001035787514410913
    2. ' nh' → logprob: -6.876035690307617
    3. '[' → logprob: -13.751035690307617
    4. '   ' → logprob: -13.876035690307617
    5. '][' → logprob: -14.626035690307617
    6. '0' → logprob: -15.126035690307617
    7. 'n' → logprob: -16.376035690307617
    8. 'ny' → logprob: -16.751035690307617
    9. 'Nh' → logprob: -17.001035690307617
    10. 'NH' → logprob: -17.251035690307617

Token 61: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0007718668202869594
    2. ']' → logprob: -8.000771522521973
    3. '[n' → logprob: -8.250771522521973
    4. '[' → logprob: -9.750771522521973
    5. ' ][' → logprob: -10.250771522521973
    6. ']>' → logprob: -10.625771522521973
    7. ']==' → logprob: -10.875771522521973
    8. '>' → logprob: -11.500771522521973
    9. ']!=' → logprob: -12.500771522521973
    10. '   ' → logprob: -12.625771522521973

Token 62: 'nw' (ID: 85546)
  Prédit: 'nw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nw' → logprob: -0.000455340719781816
    2. ' nw' → logprob: -7.750455379486084
    3. '<n' → logprob: -11.875454902648926
    4. ',n' → logprob: -12.375454902648926
    5. '   ' → logprob: -12.625454902648926
    6. 'n' → logprob: -12.750454902648926
    7. '[n' → logprob: -12.750454902648926
    8. '(n' → logprob: -13.500454902648926
    9. '0' → logprob: -14.000454902648926
    10. ':n' → logprob: -14.875454902648926

Token 63: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10670334100723267
    2. ']==' → logprob: -2.356703281402588
    3. ']>' → logprob: -5.356703281402588
    4. ']!=' → logprob: -7.231703281402588
    5. ' ]' → logprob: -7.981703281402588
    6. ']:' → logprob: -8.106703758239746
    7. ']>=' → logprob: -9.106703758239746
    8. '>' → logprob: -9.231703758239746
    9. ']<' → logprob: -9.356703758239746
    10. '==' → logprob: -9.731703758239746

Token 64: ' %' (ID: 1851)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7306922674179077
    2. '==' → logprob: -1.2306922674179077
    3. '>' → logprob: -2.3556923866271973
    4. ' >' → logprob: -2.6056923866271973
    5. '%' → logprob: -3.2306923866271973
    6. ' %' → logprob: -4.605692386627197
    7. ':' → logprob: -5.855692386627197
    8. ' !=' → logprob: -6.230692386627197
    9. '!=' → logprob: -7.105692386627197
    10. ' ' → logprob: -7.480692386627197

Token 65: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006716674659401178
    2. ' ' → logprob: -5.006716728210449
    3. '```' → logprob: -14.63171672821045
    4. '>' → logprob: -14.88171672821045
    5. '  ' → logprob: -16.006715774536133
    6. '２' → logprob: -16.131715774536133
    7. '   ' → logprob: -16.256715774536133
    8. '==' → logprob: -17.256715774536133
    9. '=' → logprob: -17.506715774536133
    10. '
' → logprob: -17.819215774536133

Token 66: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '```' → logprob: -17.625085830688477
    4. '２' → logprob: -17.750085830688477
    5. '  ' → logprob: -18.500085830688477
    6. '>' → logprob: -19.000085830688477
    7. '   ' → logprob: -19.125085830688477
    8. '==' → logprob: -19.625085830688477
    9. '!' → logprob: -19.625085830688477
    10. '

' → logprob: -19.625085830688477

Token 67: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4833506643772125
    2. ' ==' → logprob: -0.9833506345748901
    3. ' !=' → logprob: -5.23335075378418
    4. '!=' → logprob: -5.60835075378418
    5. '=' → logprob: -8.60835075378418
    6. ' =' → logprob: -10.60835075378418
    7. ':' → logprob: -11.48335075378418
    8. ')' → logprob: -12.73335075378418
    9. ')==' → logprob: -12.73335075378418
    10. ' ' → logprob: -13.60835075378418

Token 68: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4741402268409729
    2. ' ' → logprob: -0.9741402268409729
    3. '1' → logprob: -9.974140167236328
    4. '=' → logprob: -11.724140167236328
    5. '<|end|>' → logprob: -12.349140167236328
    6. ' ' → logprob: -13.349140167236328
    7. '==' → logprob: -14.661640167236328
    8. '  ' → logprob: -15.099140167236328
    9. ' =' → logprob: -15.161640167236328
    10. '<|end|>' → logprob: -15.224140167236328

Token 69: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007171963807195425
    2. ' ' → logprob: -7.2507171630859375
    3. '1' → logprob: -12.000717163085938
    4. '2' → logprob: -14.250717163085938
    5. '=' → logprob: -16.063217163085938
    6. '```' → logprob: -16.938217163085938
    7. '۰' → logprob: -17.375717163085938
    8. '０' → logprob: -18.063217163085938
    9. '6' → logprob: -18.313217163085938
    10. ':' → logprob: -18.438217163085938

Token 70: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006942047039046884
    2. ' :' → logprob: -7.875694274902344
    3. ' and' → logprob: -9.000694274902344
    4. '):' → logprob: -9.250694274902344
    5. ':
' → logprob: -9.500694274902344
    6. '<|end|>' → logprob: -12.125694274902344
    7. '       ' → logprob: -12.500694274902344
    8. ',' → logprob: -13.000694274902344
    9. '           ' → logprob: -13.500694274902344
    10. ')' → logprob: -13.750694274902344

Token 71: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.33308127522468567
    2. ' ' → logprob: -1.5830812454223633
    3. '            ' → logprob: -4.083081245422363
    4. '<|end|>' → logprob: -4.083081245422363
    5. '       ' → logprob: -4.708081245422363
    6. '        ' → logprob: -4.833081245422363
    7. '            
' → logprob: -5.458081245422363
    8. '#' → logprob: -5.458081245422363
    9. ':' → logprob: -5.708081245422363
    10. ':
' → logprob: -6.208081245422363

Token 72: ' if' (ID: 538)
  Prédit: ' field'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' field' → logprob: -0.8381471633911133
    2. ' ans' → logprob: -0.9631471633911133
    3. '           ' → logprob: -2.5881471633911133
    4. ' have' → logprob: -2.7131471633911133
    5. 'field' → logprob: -4.213147163391113
    6. ' has' → logprob: -4.838147163391113
    7. 'have' → logprob: -5.213147163391113
    8. '            ' → logprob: -5.338147163391113
    9. 'ans' → logprob: -5.713147163391113
    10. ' if' → logprob: -5.963147163391113

Token 73: ' have' (ID: 679)
  Prédit: ' have'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' have' → logprob: -0.033924952149391174
    2. 'have' → logprob: -3.6589250564575195
    3. ' not' → logprob: -5.0339250564575195
    4. '           ' → logprob: -7.5339250564575195
    5. ' field' → logprob: -8.40892505645752
    6. '            ' → logprob: -9.65892505645752
    7. ' has' → logprob: -10.28392505645752
    8. ' len' → logprob: -10.28392505645752
    9. ' ' → logprob: -10.28392505645752
    10. 'not' → logprob: -10.40892505645752

Token 74: 'Coin' (ID: 40826)
  Prédit: 'Coin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coin' → logprob: -0.173329696059227
    2. ' Coin' → logprob: -2.1733295917510986
    3. ' ' → logprob: -3.1733295917510986
    4. '_coin' → logprob: -6.798329830169678
    5. '_' → logprob: -8.04832935333252
    6. '  ' → logprob: -8.29832935333252
    7. ':' → logprob: -8.42332935333252
    8. ' not' → logprob: -8.54832935333252
    9. '   ' → logprob: -8.98582935333252
    10. ' ==' → logprob: -9.11082935333252

Token 75: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22714419662952423
    2. '               ' → logprob: -1.9771442413330078
    3. ' ==' → logprob: -3.602144241333008
    4. ' and' → logprob: -4.727144241333008
    5. ' =' → logprob: -5.227144241333008
    6. ':
' → logprob: -5.352144241333008
    7. ' :' → logprob: -5.477144241333008
    8. '==' → logprob: -5.602144241333008
    9. ' is' → logprob: -6.102144241333008
    10. '=' → logprob: -6.102144241333008

Token 76: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6732666492462158
    2. ' ' → logprob: -1.7982666492462158
    3. '<|end|>' → logprob: -2.298266649246216
    4. '           ' → logprob: -2.423266649246216
    5. '            ' → logprob: -2.798266649246216
    6. '                ' → logprob: -3.923266649246216
    7. '                
' → logprob: -4.173266410827637
    8. ')' → logprob: -4.173266410827637
    9. '            
' → logprob: -5.173266410827637
    10. '```' → logprob: -6.298266410827637

Token 77: ' have' (ID: 679)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.488231360912323
    2. '               ' → logprob: -2.1132314205169678
    3. '           ' → logprob: -2.4882314205169678
    4. ' field' → logprob: -3.2382314205169678
    5. '            ' → logprob: -3.3632314205169678
    6. ')' → logprob: -3.7382314205169678
    7. '                ' → logprob: -4.363231182098389
    8. 'field' → logprob: -4.488231182098389
    9. 'ans' → logprob: -4.613231182098389
    10. ' ' → logprob: -4.738231182098389

Token 78: 'Coin' (ID: 40826)
  Prédit: 'Coin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coin' → logprob: -0.0003878934367094189
    2. ' =' → logprob: -9.125388145446777
    3. ' Coin' → logprob: -9.500388145446777
    4. ':' → logprob: -9.750388145446777
    5. '_coin' → logprob: -9.750388145446777
    6. 'coin' → logprob: -10.875388145446777
    7. '=' → logprob: -11.375388145446777
    8. ' ' → logprob: -11.625388145446777
    9. '-' → logprob: -11.750388145446777
    10. ' ==' → logprob: -12.250388145446777

Token 79: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3875245153903961
    2. '=' → logprob: -1.1375244855880737
    3. '=False' → logprob: -8.012524604797363
    4. ' ' → logprob: -9.512524604797363
    5. '==' → logprob: -9.762524604797363
    6. ')' → logprob: -9.762524604797363
    7. '=True' → logprob: -9.887524604797363
    8. ' ==' → logprob: -10.262524604797363
    9. '.append' → logprob: -11.387524604797363
    10. '[' → logprob: -12.012524604797363

Token 80: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.02980949729681015
    2. ' False' → logprob: -3.5298094749450684
    3. 'True' → logprob: -9.904809951782227
    4. ' True' → logprob: -12.279809951782227
    5. ' not' → logprob: -13.029809951782227
    6. 'not' → logprob: -13.279809951782227
    7. '   ' → logprob: -14.904809951782227
    8. '0' → logprob: -15.779809951782227
    9. '=False' → logprob: -17.529809951782227
    10. ' ' → logprob: -18.279809951782227

Token 81: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5299696922302246
    2. '           ' → logprob: -1.1549696922302246
    3. '
' → logprob: -2.5299696922302246
    4. '            
' → logprob: -4.904969692230225
    5. '                
' → logprob: -5.654969692230225
    6. '       ' → logprob: -7.404969692230225
    7. '            ' → logprob: -7.404969692230225
    8. '                ' → logprob: -7.529969692230225
    9. '                   ' → logprob: -7.529969692230225
    10. ',' → logprob: -7.529969692230225

Token 82: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7819539904594421
    2. '               ' → logprob: -0.7819539904594421
    3. '
' → logprob: -2.781954050064087
    4. '                   ' → logprob: -4.656953811645508
    5. ',' → logprob: -5.281953811645508
    6. ')' → logprob: -5.781953811645508
    7. ' 
' → logprob: -7.531953811645508
    8. '#' → logprob: -7.656953811645508
    9. '   ' → logprob: -7.781953811645508
    10. '            ' → logprob: -7.906953811645508

Token 83: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12743522226810455
    2. ' else' → logprob: -2.3774352073669434
    3. 'else' (adapté à ' else') → logprob: -3.8774352073669434
    4. '               ' → logprob: -5.752435207366943
    5. '       ' → logprob: -5.877435207366943
    6. '   ' → logprob: -9.877435684204102
    7. ' ' → logprob: -10.877435684204102
    8. ' elif' → logprob: -10.877435684204102
    9. ',' → logprob: -11.127435684204102
    10. '
' → logprob: -11.377435684204102

Token 84: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3805745840072632
    2. ':
' → logprob: -1.6305745840072632
    3. '               ' → logprob: -2.1305747032165527
    4. '           ' → logprob: -7.755574703216553
    5. '<|end|>' → logprob: -8.005574226379395
    6. '              ' → logprob: -8.505574226379395
    7. ' :' → logprob: -8.755574226379395
    8. '       ' → logprob: -9.130574226379395
    9. '
' → logprob: -9.255574226379395
    10. '                ' → logprob: -9.755574226379395

Token 85: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -6.587483221665025e-05
    2. '           ' → logprob: -11.125065803527832
    3. ' has' → logprob: -11.375065803527832
    4. ' have' → logprob: -11.750065803527832
    5. ' if' → logprob: -12.000065803527832
    6. '                   ' → logprob: -12.125065803527832
    7. '```' → logprob: -12.125065803527832
    8. '   ' → logprob: -12.500065803527832
    9. '       ' → logprob: -12.625065803527832
    10. '                
' → logprob: -13.125065803527832

Token 86: ' have' (ID: 679)
  Prédit: ' have'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' have' → logprob: -0.2607180178165436
    2. 'have' (adapté à ' have') → logprob: -1.6357179880142212
    3. '               ' → logprob: -3.3857181072235107
    4. ' has' → logprob: -7.385717868804932
    5. '                   ' → logprob: -9.13571834564209
    6. 'has' → logprob: -9.76071834564209
    7. '```' → logprob: -10.38571834564209
    8. '   ' → logprob: -12.51071834564209
    9. '           ' → logprob: -12.76071834564209
    10. ' ' → logprob: -13.26071834564209

Token 87: 'Coin' (ID: 40826)
  Prédit: 'Coin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coin' → logprob: -2.696889623621246e-06
    2. '_coin' → logprob: -14.00000286102295
    3. 'Coins' → logprob: -14.37500286102295
    4. 'coin' → logprob: -14.75000286102295
    5. ' Coin' → logprob: -15.12500286102295
    6. '_C' → logprob: -15.12500286102295
    7. 'Co' → logprob: -16.125001907348633
    8. 'C' → logprob: -16.875001907348633
    9. '```' → logprob: -17.000001907348633
    10. 'Coal' → logprob: -17.875001907348633

Token 88: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602514386177063
    2. ' =' → logprob: -1.9102513790130615
    3. '=True' → logprob: -10.53525161743164
    4. ' ' → logprob: -15.66025161743164
    5. '=False' → logprob: -15.78525161743164
    6. '＝' → logprob: -15.91025161743164
    7. '<|end|>' → logprob: -16.28525161743164
    8. '                ' → logprob: -16.41025161743164
    9. ' =)' → logprob: -17.28525161743164
    10. '               ' → logprob: -18.53525161743164

Token 89: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.1602243334054947
    2. ' True' → logprob: -1.9102243185043335
    3. 'Tr' → logprob: -16.78522491455078
    4. '=True' → logprob: -16.78522491455078
    5. '(True' → logprob: -16.91022491455078
    6. '1' → logprob: -17.66022491455078
    7. ' Tru' → logprob: -17.78522491455078
    8. 'False' → logprob: -18.28522491455078
    9. 'T' → logprob: -18.78522491455078
    10. '   ' → logprob: -19.03522491455078

Token 90: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0533077716827393
    2. '
' → logprob: -1.8033077716827393
    3. ' 
' → logprob: -1.8033077716827393
    4. '        
' → logprob: -2.1783077716827393
    5. '    
' → logprob: -3.1783077716827393
    6. '           ' → logprob: -3.3033077716827393
    7. '            
' → logprob: -3.5533077716827393
    8. '  
' → logprob: -3.5533077716827393
    9. '\n' → logprob: -3.6783077716827393
    10. '   
' → logprob: -4.80330753326416

Token 91: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6021926403045654
    2. ' 
' → logprob: -1.6021926403045654
    3. '        
' → logprob: -2.6021926403045654
    4. '           ' → logprob: -2.8521926403045654
    5. '
' → logprob: -3.1021926403045654
    6. '            
' → logprob: -3.7271926403045654
    7. '    
' → logprob: -4.1021928787231445
    8. ' ' → logprob: -4.9771928787231445
    9. '  
' → logprob: -5.1021928787231445
    10. '                
' → logprob: -5.8521928787231445

Token 92: ' frm' (ID: 45032)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.1704769879579544
    2. ' ' → logprob: -3.0454769134521484
    3. '
' → logprob: -3.6704769134521484
    4. '       ' → logprob: -4.045476913452148
    5. '  
' → logprob: -4.045476913452148
    6. '        
' → logprob: -4.170476913452148
    7. 'n' → logprob: -5.170476913452148
    8. '#' → logprob: -5.170476913452148
    9. '\n' → logprob: -5.170476913452148
    10. '    
' → logprob: -5.920476913452148

Token 93: ' =' (ID: 314)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.18733446300029755
    2. ',' → logprob: -2.1873345375061035
    3. '=' → logprob: -3.8123345375061035
    4. '_' → logprob: -4.1873345375061035
    5. ' =' → logprob: -4.1873345375061035
    6. ' ' → logprob: -5.4373345375061035
    7. 'n' → logprob: -7.3123345375061035
    8. ' ,' → logprob: -7.6873345375061035
    9. 't' → logprob: -8.187334060668945
    10. '[' → logprob: -9.312334060668945

Token 94: ' [' (ID: 723)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6366655826568604
    2. '(n' → logprob: -0.7616655826568604
    3. '(' → logprob: -6.261665344238281
    4. '[n' → logprob: -7.261665344238281
    5. ' nh' → logprob: -7.386665344238281
    6. '(h' → logprob: -7.511665344238281
    7. '[' → logprob: -8.761665344238281
    8. ' [' → logprob: -9.761665344238281
    9. 'nh' → logprob: -11.011665344238281
    10. '(f' → logprob: -11.386665344238281

Token 95: 'nh' (ID: 5380)
  Prédit: 'nh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nh' → logprob: -0.0028665661811828613
    2. ' nh' → logprob: -5.877866744995117
    3. '   ' → logprob: -11.002866744995117
    4. 'n' → logprob: -11.127866744995117
    5. ']' → logprob: -11.627866744995117
    6. 'hn' → logprob: -11.877866744995117
    7. '
' → logprob: -13.127866744995117
    8. 'nw' → logprob: -13.502866744995117
    9. '(n' → logprob: -13.627866744995117
    10. '       ' → logprob: -14.127866744995117

Token 96: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18002106249332428
    2. ',n' → logprob: -1.805021047592163
    3. '][' → logprob: -9.680021286010742
    4. ']' → logprob: -9.805021286010742
    5. ',w' → logprob: -9.805021286010742
    6. ' ,' → logprob: -10.180021286010742
    7. '<|end|>' → logprob: -11.055021286010742
    8. '[' → logprob: -11.430021286010742
    9. '[n' → logprob: -12.555021286010742
    10. ')' → logprob: -12.680021286010742

Token 97: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.019521823152899742
    2. ',' → logprob: -4.144521713256836
    3. ',n' → logprob: -6.269521713256836
    4. ' ' → logprob: -7.019521713256836
    5. ',w' → logprob: -7.519521713256836
    6. ' ,' → logprob: -9.019521713256836
    7. ',W' → logprob: -11.019521713256836
    8. ' nw' → logprob: -12.769521713256836
    9. '(n' → logprob: -13.269521713256836
    10. '```' → logprob: -13.394521713256836

Token 98: ',n' (ID: 18103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5769823789596558
    2. ',n' → logprob: -0.8269823789596558
    3. ' ,' → logprob: -6.951982498168945
    4. ',w' → logprob: -9.951982498168945
    5. ',N' → logprob: -10.826982498168945
    6. ',W' → logprob: -13.326982498168945
    7. ',
' → logprob: -13.451982498168945
    8. ',m' → logprob: -13.701982498168945
    9. ']' → logprob: -13.826982498168945
    10. '   ' → logprob: -13.951982498168945

Token 99: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -7.896309739408025e-07
    2. '1' → logprob: -14.750000953674316
    3. '[w' → logprob: -15.875000953674316
    4. ' w' → logprob: -17.625
    5. '+' → logprob: -17.75
    6. '(w' → logprob: -17.875
    7. ''w' → logprob: -17.875
    8. '	w' → logprob: -17.875
    9. 'nw' → logprob: -17.875
    10. '+w' → logprob: -18.0

Token 100: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.5120287066092715e-05
    2. ' +' → logprob: -10.625035285949707
    3. ']+' → logprob: -11.750035285949707
    4. ']' → logprob: -13.375035285949707
    5. '+]' → logprob: -13.875035285949707
    6. '1' → logprob: -15.125035285949707
    7. '＋' → logprob: -17.25003433227539
    8. '<|end|>' → logprob: -17.75003433227539
    9. '+
' → logprob: -17.87503433227539
    10. '+"]' → logprob: -18.12503433227539

Token 101: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001860174525063485
    2. ' ' → logprob: -8.6251859664917
    3. '+' → logprob: -12.2501859664917
    4. '2' → logprob: -14.8126859664917
    5. ' +' → logprob: -14.8751859664917
    6. '   ' → logprob: -14.8751859664917
    7. ',' → logprob: -16.875186920166016
    8. '-' → logprob: -16.875186920166016
    9. ']' → logprob: -16.937686920166016
    10. '0' → logprob: -16.937686920166016

Token 102: ']
' (ID: 1592)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5876016616821289
    2. ']' → logprob: -0.8376016616821289
    3. '<|end|>' → logprob: -4.962601661682129
    4. ' ]' → logprob: -5.962601661682129
    5. '       ' → logprob: -6.837601661682129
    6. ' ,' → logprob: -7.712601661682129
    7. '<|end|>' → logprob: -8.712601661682129
    8. ',
' → logprob: -9.337601661682129
    9. '   ' → logprob: -10.462601661682129
    10. '}' → logprob: -10.587601661682129

Token 103: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4268898367881775
    2. '       ' → logprob: -1.6768898963928223
    3. '<|end|>' → logprob: -2.0518898963928223
    4. ' 
' → logprob: -4.426889896392822
    5. '        ' → logprob: -4.801889896392822
    6. '        
' → logprob: -5.051889896392822
    7. '    ' → logprob: -7.051889896392822
    8. ',' → logprob: -7.051889896392822
    9. '<|end|>' → logprob: -7.051889896392822
    10. '         
' → logprob: -7.676889896392822

Token 104: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14439572393894196
    2. 'if' (adapté à ' if') → logprob: -2.3943958282470703
    3. ' if' → logprob: -3.3943958282470703
    4. '<|end|>' → logprob: -5.14439582824707
    5. '        ' → logprob: -6.89439582824707
    6. 'n' → logprob: -8.26939582824707
    7. '#' → logprob: -8.26939582824707
    8. '...' → logprob: -8.39439582824707
    9. ',' → logprob: -8.39439582824707
    10. '<|end|>' → logprob: -8.51939582824707

Token 105: ' nh' (ID: 5467)
  Prédit: ' nw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nw' → logprob: -0.08133767545223236
    2. 'nw' → logprob: -2.7063376903533936
    3. ' nh' → logprob: -4.7063374519348145
    4. ' ' → logprob: -7.0813374519348145
    5. 'n' → logprob: -7.7063374519348145
    6. '(n' → logprob: -8.456337928771973
    7. ' n' → logprob: -8.456337928771973
    8. '   ' → logprob: -9.081337928771973
    9. ' not' → logprob: -9.581337928771973
    10. ' nws' → logprob: -9.831337928771973

Token 106: ' %' (ID: 1851)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.04097287729382515
    2. '<' → logprob: -3.790972948074341
    3. '+' → logprob: -4.540972709655762
    4. ' +' → logprob: -6.165972709655762
    5. ' ==' → logprob: -6.290972709655762
    6. ' !=' → logprob: -6.415972709655762
    7. '<n' → logprob: -7.540972709655762
    8. ' ' → logprob: -8.415972709655762
    9. '[' → logprob: -8.790972709655762
    10. '*' → logprob: -9.540972709655762

Token 107: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.012647494673728943
    2. ' ' → logprob: -4.38764762878418
    3. '==' → logprob: -9.26264762878418
    4. ' ==' → logprob: -11.13764762878418
    5. '1' → logprob: -11.51264762878418
    6. '=' → logprob: -12.26264762878418
    7. 'W' → logprob: -12.38764762878418
    8. ' W' → logprob: -13.51264762878418
    9. '  ' → logprob: -13.95014762878418
    10. '...' → logprob: -14.13764762878418

Token 108: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2233183042553719e-05
    2. '1' → logprob: -11.500012397766113
    3. ' ' → logprob: -13.625012397766113
    4. 'H' → logprob: -15.125012397766113
    5. 'W' → logprob: -15.250012397766113
    6. '0' → logprob: -16.000011444091797
    7. '```' → logprob: -16.375011444091797
    8. '4' → logprob: -16.875011444091797
    9. '3' → logprob: -17.750011444091797
    10. 'h' → logprob: -18.000011444091797

Token 109: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10032937675714493
    2. '==' → logprob: -2.3503293991088867
    3. '0' → logprob: -9.600329399108887
    4. ' ' → logprob: -10.850329399108887
    5. ')==' → logprob: -11.225329399108887
    6. ')' → logprob: -12.225329399108887
    7. '=' → logprob: -12.350329399108887
    8. '()==' → logprob: -12.600329399108887
    9. '<|end|>' → logprob: -13.350329399108887
    10. ' !=' → logprob: -13.350329399108887

Token 110: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010410251561552286
    2. ' ' → logprob: -6.876040935516357
    3. '1' → logprob: -11.751041412353516
    4. '==' → logprob: -16.813541412353516
    5. '=' → logprob: -16.938541412353516
    6. '   ' → logprob: -17.688541412353516
    7. '۰' → logprob: -18.188541412353516
    8. '```' → logprob: -18.251041412353516
    9. ' ==' → logprob: -18.626041412353516
    10. '  ' → logprob: -18.751041412353516

Token 111: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.186122770188376e-05
    2. '1' → logprob: -10.000091552734375
    3. '2' → logprob: -10.000091552734375
    4. ' ' → logprob: -13.875091552734375
    5. '```' → logprob: -17.875091552734375
    6. '==' → logprob: -18.375091552734375
    7. '   ' → logprob: -18.437591552734375
    8. '۰' → logprob: -18.750091552734375
    9. '00' → logprob: -19.312591552734375
    10. '０' → logprob: -19.375091552734375

Token 112: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.009172741323709488
    2. ' ==' → logprob: -5.7591729164123535
    3. 'and' → logprob: -5.8841729164123535
    4. ' ' → logprob: -6.5091729164123535
    5. '       ' → logprob: -7.0091729164123535
    6. '<|end|>' → logprob: -8.634172439575195
    7. '        ' → logprob: -9.009172439575195
    8. '           ' → logprob: -9.009172439575195
    9. ':' → logprob: -9.009172439575195
    10. '   ' → logprob: -9.384172439575195

Token 113: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16750669479370117
    2. '        ' → logprob: -2.417506694793701
    3. '<|end|>' → logprob: -3.542506694793701
    4. ' if' → logprob: -4.167506694793701
    5. ' ' → logprob: -4.792506694793701
    6. '           ' → logprob: -5.292506694793701
    7. ' and' → logprob: -6.917506694793701
    8. '               ' → logprob: -6.917506694793701
    9. ' +' → logprob: -7.542506694793701
    10. ',n' → logprob: -7.667506694793701

Token 114: ' nw' (ID: 45462)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7008081674575806
    2. ' if' → logprob: -0.7008081674575806
    3. '           ' → logprob: -5.450808048248291
    4. ' nw' → logprob: -6.325808048248291
    5. '       ' → logprob: -6.950808048248291
    6. 'nw' (adapté à ' nw') → logprob: -7.700808048248291
    7. '               ' → logprob: -9.57580852508545
    8. '        ' → logprob: -9.95080852508545
    9. '   ' → logprob: -12.45080852508545
    10. ' ' → logprob: -12.82580852508545

Token 115: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.26072782278060913
    2. '+=' → logprob: -1.635727882385254
    3. '+' → logprob: -3.385727882385254
    4. ' +' → logprob: -7.135727882385254
    5. ' <' → logprob: -11.260727882385254
    6. '=' → logprob: -11.635727882385254
    7. '<' → logprob: -11.760727882385254
    8. '+='' → logprob: -12.260727882385254
    9. ']+=' → logprob: -12.885727882385254
    10. '<|end|>' → logprob: -12.885727882385254

Token 116: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '   ' → logprob: -18.875003814697266
    4. '+' → logprob: -19.250003814697266
    5. '１' → logprob: -21.000003814697266
    6. '           ' → logprob: -21.500003814697266
    7. '  ' → logprob: -21.625003814697266
    8. '۱' → logprob: -21.875003814697266
    9. '<|end|>' → logprob: -22.125003814697266
    10. '```' → logprob: -22.750003814697266

Token 117: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '+' → logprob: -19.5
    4. '   ' → logprob: -20.5
    5. '１' → logprob: -20.875
    6. '۱' → logprob: -21.5
    7. '```' → logprob: -21.75
    8. '  ' → logprob: -22.3125
    9. '<|end|>' → logprob: -22.3125
    10. '0' → logprob: -22.625

Token 118: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 119: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 120: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.05454888567328453
    2. ' if' → logprob: -3.054548978805542
    3. '           ' → logprob: -5.554548740386963
    4. '       ' → logprob: -6.179548740386963
    5. '   ' → logprob: -14.304549217224121
    6. '	if' → logprob: -14.679549217224121
    7. '```' → logprob: -14.804549217224121
    8. 'If' → logprob: -15.179549217224121
    9. ' ' → logprob: -15.679549217224121
    10. '#' → logprob: -15.804549217224121

Token 121: ' nw' (ID: 45462)
  Prédit: ' nw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nw' → logprob: -0.07889099419116974
    2. 'nw' → logprob: -2.5788910388946533
    3. ' ' → logprob: -14.328890800476074
    4. 'n' → logprob: -15.703890800476074
    5. '   ' → logprob: -15.703890800476074
    6. ' nws' → logprob: -15.703890800476074
    7. ' ' → logprob: -17.20389175415039
    8. '  ' → logprob: -17.57889175415039
    9. ' n' → logprob: -17.70389175415039
    10. '	n' → logprob: -17.95389175415039

Token 122: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.043613117188215256
    2. '>=' → logprob: -3.7936131954193115
    3. ' ==' → logprob: -3.9186131954193115
    4. ' >=' → logprob: -8.79361343383789
    5. '<|end|>' → logprob: -9.29361343383789
    6. '=' → logprob: -10.41861343383789
    7. '>' → logprob: -12.04361343383789
    8. '#' → logprob: -13.16861343383789
    9. ']>=' → logprob: -13.29361343383789
    10. '===' → logprob: -13.41861343383789

Token 123: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0002614550176076591
    2. ' W' → logprob: -8.250261306762695
    3. '	W' → logprob: -16.250261306762695
    4. '   ' → logprob: -18.125261306762695
    5. '<W' → logprob: -18.500261306762695
    6. '<|end|>' → logprob: -18.875261306762695
    7. ' ' → logprob: -19.000261306762695
    8. '  ' → logprob: -19.250261306762695
    9. 'w' → logprob: -20.125261306762695
    10. '=W' → logprob: -20.125261306762695

Token 124: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06346181035041809
    2. ':
' → logprob: -2.8134617805480957
    3. '<|end|>' → logprob: -6.938461780548096
    4. ' and' → logprob: -7.938461780548096
    5. 'and' → logprob: -9.438462257385254
    6. '<|end|>' → logprob: -10.438462257385254
    7. ':

' → logprob: -10.938462257385254
    8. '
' → logprob: -12.438462257385254
    9. ' :' → logprob: -12.438462257385254
    10. '):
' → logprob: -12.688462257385254

Token 125: '               ' (ID: 506)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5336833000183105
    2. '\n' → logprob: -1.4086833000183105
    3. '       ' → logprob: -2.1586833000183105
    4. '               ' → logprob: -3.6586833000183105
    5. '<|end|>' → logprob: -4.9086833000183105
    6. ':
' → logprob: -5.5336833000183105
    7. 'n' → logprob: -5.5336833000183105
    8. '           ' → logprob: -5.5336833000183105
    9. '<|end|>' → logprob: -6.5336833000183105
    10. '  
' → logprob: -6.7836833000183105

Token 126: ' nh' (ID: 5467)
  Prédit: ' nh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nh' → logprob: -0.1854991316795349
    2. 'nh' (adapté à ' nh') → logprob: -1.8104991912841797
    3. 'nw' → logprob: -6.06049919128418
    4. '       ' → logprob: -6.68549919128418
    5. '   ' → logprob: -7.06049919128418
    6. '           ' → logprob: -8.06049919128418
    7. '\n' → logprob: -8.31049919128418
    8. '               ' → logprob: -8.43549919128418
    9. 'n' → logprob: -8.68549919128418
    10. ' nw' → logprob: -9.06049919128418

Token 127: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4769766628742218
    2. ' +=' → logprob: -0.9769766330718994
    3. '+' → logprob: -5.8519768714904785
    4. ' +' → logprob: -11.22697639465332
    5. ']+=' → logprob: -12.22697639465332
    6. '<|end|>' → logprob: -13.22697639465332
    7. '+='' → logprob: -14.85197639465332
    8. ' ' → logprob: -15.85197639465332
    9. ' ' → logprob: -16.10197639465332
    10. '```' → logprob: -16.10197639465332

Token 128: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -17.125003814697266
    4. '<|end|>' → logprob: -18.125003814697266
    5. '１' → logprob: -19.625003814697266
    6. '0' → logprob: -20.125003814697266
    7. '           ' → logprob: -20.875003814697266
    8. '```' → logprob: -21.000003814697266
    9. '       ' → logprob: -21.625003814697266
    10. '۱' → logprob: -21.875003814697266

Token 129: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.125
    3. '   ' → logprob: -20.5
    4. '１' → logprob: -21.25
    5. '<|end|>' → logprob: -22.0
    6. '۱' → logprob: -23.0625
    7. '```' → logprob: -23.3125
    8. '0' → logprob: -23.375
    9. '१' → logprob: -23.5
    10. '-' → logprob: -23.625

Token 130: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4849373698234558
    2. '           ' → logprob: -0.9849373698234558
    3. '<|end|>' → logprob: -5.1099371910095215
    4. '       ' → logprob: -5.6099371910095215
    5. '                   ' → logprob: -8.48493766784668
    6. '   ' → logprob: -8.60993766784668
    7. ',n' → logprob: -8.98493766784668
    8. '<|end|>' → logprob: -9.10993766784668
    9. '	       ' → logprob: -9.35993766784668
    10. 'n' → logprob: -9.48493766784668

Token 131: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2263123244047165
    2. '           ' → logprob: -1.601312279701233
    3. '       ' → logprob: -7.476312160491943
    4. '   ' → logprob: -8.851312637329102
    5. '                   ' → logprob: -9.726312637329102
    6. 'n' → logprob: -9.851312637329102
    7. 'nw' → logprob: -10.601312637329102
    8. ' nw' → logprob: -11.351312637329102
    9. '<|end|>' → logprob: -11.976312637329102
    10. ',n' → logprob: -12.476312637329102

Token 132: ' nw' (ID: 45462)
  Prédit: 'nw'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nw' (adapté à ' nw') → logprob: -0.0013408389640972018
    2. ' nw' → logprob: -6.751340866088867
    3. '1' → logprob: -9.501340866088867
    4. '0' → logprob: -9.751340866088867
    5. 'wn' → logprob: -10.751340866088867
    6. 'n' → logprob: -11.876340866088867
    7. 'w' → logprob: -11.876340866088867
    8. '       ' → logprob: -14.501340866088867
    9. '           ' → logprob: -14.876340866088867
    10. 'W' → logprob: -15.376340866088867

Token 133: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01508275605738163
    2. ' =' → logprob: -4.265082836151123
    3. '-=' → logprob: -7.015082836151123
    4. ' -=' → logprob: -11.015082359313965
    5. '0' → logprob: -12.640082359313965
    6. '＝' → logprob: -15.265082359313965
    7. '+=' → logprob: -15.515082359313965
    8. '-' → logprob: -15.640082359313965
    9. '<|end|>' → logprob: -15.890082359313965
    10. ' ' → logprob: -16.76508331298828

Token 134: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.00013774730905424803
    2. '0' → logprob: -9.375137329101562
    3. ' W' → logprob: -9.875137329101562
    4. '1' → logprob: -14.875137329101562
    5. '	W' → logprob: -15.000137329101562
    6. '<W' → logprob: -15.625137329101562
    7. '-' → logprob: -15.750137329101562
    8. 'w' → logprob: -16.250137329101562
    9. '(W' → logprob: -16.375137329101562
    10. '   ' → logprob: -17.000137329101562

Token 135: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0001601539261173457
    2. ' -' → logprob: -8.750160217285156
    3. '1' → logprob: -13.500160217285156
    4. '−' → logprob: -16.375160217285156
    5. '–' → logprob: -16.875160217285156
    6. 'minus' → logprob: -17.750160217285156
    7. '--' → logprob: -18.500160217285156
    8. '0' → logprob: -19.125160217285156
    9. '2' → logprob: -19.500160217285156
    10. '()-' → logprob: -19.500160217285156

Token 136: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023059594968799502
    2. '2' → logprob: -8.37523078918457
    3. ' ' → logprob: -18.37523078918457
    4. '0' → logprob: -18.75023078918457
    5. '   ' → logprob: -18.87523078918457
    6. '-' → logprob: -19.25023078918457
    7. '１' → logprob: -19.37523078918457
    8. '```' → logprob: -19.87523078918457
    9. '
' → logprob: -20.56273078918457
    10. '

' → logprob: -21.68773078918457

Token 137: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04312695935368538
    2. '<|end|>' → logprob: -3.2931270599365234
    3. 'else' → logprob: -6.418127059936523
    4. ' else' → logprob: -6.668127059936523
    5. '\n' → logprob: -7.418127059936523
    6. 'elif' → logprob: -7.668127059936523
    7. '<|end|>' → logprob: -8.168127059936523
    8. '
' → logprob: -8.418127059936523
    9. '   ' → logprob: -9.043127059936523
    10. ' elif' → logprob: -9.043127059936523

Token 138: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032724218908697367
    2. 'else' → logprob: -6.878272533416748
    3. '<|end|>' → logprob: -6.878272533416748
    4. ' else' → logprob: -7.003272533416748
    5. '   ' → logprob: -9.37827205657959
    6. 'elif' → logprob: -10.00327205657959
    7. '           ' → logprob: -10.50327205657959
    8. ' elif' → logprob: -10.50327205657959
    9. ')' → logprob: -10.75327205657959
    10. '\n' → logprob: -10.87827205657959

Token 139: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21799549460411072
    2. ' else' → logprob: -1.842995524406433
    3. 'else' (adapté à ' else') → logprob: -3.3429954051971436
    4. ' elif' → logprob: -6.967995643615723
    5. 'elif' → logprob: -7.467995643615723
    6. '   ' → logprob: -7.592995643615723
    7. ' ' → logprob: -9.717995643615723
    8. '	else' → logprob: -10.467995643615723
    9. '        
' → logprob: -11.467995643615723
    10. '           ' → logprob: -11.592995643615723

Token 140: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.27629444003105164
    2. '           ' → logprob: -1.526294469833374
    3. ':
' → logprob: -3.776294469833374
    4. '       ' → logprob: -7.276294231414795
    5. ':n' → logprob: -9.776294708251953
    6. '<|end|>' → logprob: -9.776294708251953
    7. 'n' → logprob: -10.026294708251953
    8. '(n' → logprob: -10.026294708251953
    9. '```' → logprob: -10.151294708251953
    10. '               ' → logprob: -10.151294708251953

Token 141: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03376141935586929
    2. '       ' → logprob: -3.408761501312256
    3. '   ' → logprob: -10.158761024475098
    4. '               ' → logprob: -10.783761024475098
    5. 'nw' → logprob: -11.033761024475098
    6. '	       ' → logprob: -11.658761024475098
    7. ' nw' → logprob: -11.908761024475098
    8. '        ' → logprob: -11.908761024475098
    9. '         ' → logprob: -12.158761024475098
    10. 'n' → logprob: -12.408761024475098

Token 142: ' nw' (ID: 45462)
  Prédit: 'nw'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nw' (adapté à ' nw') → logprob: -0.8246864676475525
    2. ' nw' → logprob: -0.9496864676475525
    3. '       ' → logprob: -1.8246865272521973
    4. '           ' → logprob: -4.574686527252197
    5. 'n' → logprob: -6.449686527252197
    6. '               ' → logprob: -7.324686527252197
    7. '   ' → logprob: -7.699686527252197
    8. '        ' → logprob: -9.074686050415039
    9. '	n' → logprob: -9.449686050415039
    10. ' ' → logprob: -9.699686050415039

Token 143: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.5959640145301819
    2. ' -=' → logprob: -0.8459640145301819
    3. '-' → logprob: -3.970963954925537
    4. '           ' → logprob: -7.345963954925537
    5. '            ' → logprob: -9.095964431762695
    6. '+=' → logprob: -10.095964431762695
    7. '        ' → logprob: -10.220964431762695
    8. '          ' → logprob: -10.345964431762695
    9. '   ' → logprob: -10.595964431762695
    10. '    ' → logprob: -10.720964431762695

Token 144: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.000123023986816
    3. '   ' → logprob: -18.000123977661133
    4. '１' → logprob: -18.375123977661133
    5. '       ' → logprob: -18.875123977661133
    6. '<|end|>' → logprob: -19.000123977661133
    7. '0' → logprob: -19.125123977661133
    8. '           ' → logprob: -19.250123977661133
    9. ' ' → logprob: -20.125123977661133
    10. '۱' → logprob: -20.250123977661133

Token 145: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '<|end|>' → logprob: -19.625
    4. '   ' → logprob: -20.125
    5. '１' → logprob: -20.25
    6. '```' → logprob: -20.625
    7. '0' → logprob: -21.625
    8. '۱' → logprob: -21.625
    9. '       ' → logprob: -21.6875
    10. '१' → logprob: -22.0

Token 146: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13272452354431152
    2. '<|end|>' → logprob: -2.1327245235443115
    3. '
' → logprob: -5.882724761962891
    4. '<|end|>' → logprob: -6.882724761962891
    5. '        
' → logprob: -7.382724761962891
    6. '```' → logprob: -7.507724761962891
    7. ' 
' → logprob: -8.13272476196289
    8. '\n' → logprob: -9.13272476196289
    9. '\' → logprob: -9.38272476196289
    10. ' if' → logprob: -9.38272476196289

Token 147: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023556292057037354
    2. '<|end|>' → logprob: -4.148556232452393
    3. '
' → logprob: -5.023556232452393
    4. '        
' → logprob: -8.27355670928955
    5. '<|end|>' → logprob: -8.89855670928955
    6. ' if' → logprob: -8.89855670928955
    7. ' 
' → logprob: -9.52355670928955
    8. '```' → logprob: -9.52355670928955
    9. '        ' → logprob: -9.64855670928955
    10. '\' → logprob: -10.39855670928955

Token 148: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.06202851980924606
    2. ' if' → logprob: -2.812028408050537
    3. '       ' → logprob: -10.437028884887695
    4. '```' → logprob: -10.687028884887695
    5. '           ' → logprob: -12.187028884887695
    6. '
' → logprob: -13.187028884887695
    7. 'If' → logprob: -14.437028884887695
    8. '	if' → logprob: -15.062028884887695
    9. '   ' → logprob: -15.562028884887695
    10. '               ' → logprob: -15.687028884887695

Token 149: ' nw' (ID: 45462)
  Prédit: ' nw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nw' → logprob: -0.10277223587036133
    2. 'nw' → logprob: -2.3527722358703613
    3. ' nh' → logprob: -5.977772235870361
    4. 'nh' → logprob: -11.102771759033203
    5. ' nws' → logprob: -12.477771759033203
    6. 'n' → logprob: -12.602771759033203
    7. ' nhw' → logprob: -13.602771759033203
    8. ' ' → logprob: -13.602771759033203
    9. ' n' → logprob: -14.727771759033203
    10. ' ' → logprob: -14.852771759033203

Token 150: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.22649237513542175
    2. '<' → logprob: -1.8514924049377441
    3. '==' → logprob: -3.851492404937744
    4. ' <' → logprob: -4.101492404937744
    5. '==-' → logprob: -4.851492404937744
    6. ' ' → logprob: -10.351491928100586
    7. '<|end|>' → logprob: -11.976491928100586
    8. '=' → logprob: -12.226491928100586
    9. '0' → logprob: -12.351491928100586
    10. ' ' → logprob: -12.851491928100586

Token 151: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0005542247672565281
    2. ' -' → logprob: -7.500554084777832
    3. '0' → logprob: -14.250554084777832
    4. ' ' → logprob: -15.375554084777832
    5. '-m' → logprob: -16.12555503845215
    6. '−' → logprob: -16.12555503845215
    7. '   ' → logprob: -16.50055503845215
    8. '  ' → logprob: -17.25055503845215
    9. '	' → logprob: -18.00055503845215
    10. '-M' → logprob: -18.12555503845215

Token 152: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -17.75001335144043
    4. '１' → logprob: -18.56251335144043
    5. '0' → logprob: -18.87501335144043
    6. '<|end|>' → logprob: -18.93751335144043
    7. '2' → logprob: -19.12501335144043
    8. '۱' → logprob: -19.50001335144043
    9. '```' → logprob: -19.87501335144043
    10. '১' → logprob: -19.93751335144043

Token 153: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3211848735809326
    2. ':' → logprob: -1.3211848735809326
    3. ' and' → logprob: -4.946185111999512
    4. '       ' → logprob: -7.946185111999512
    5. '           ' → logprob: -9.321185111999512
    6. '               ' → logprob: -9.446185111999512
    7. '<|end|>' → logprob: -9.446185111999512
    8. 'and' → logprob: -9.696185111999512
    9. '):
' → logprob: -10.196185111999512
    10. ',' → logprob: -10.696185111999512

Token 154: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.58838951587677
    2. ' and' → logprob: -1.71338951587677
    3. ':
' → logprob: -1.96338951587677
    4. ':' → logprob: -2.2133893966674805
    5. '           ' → logprob: -4.3383893966674805
    6. '       ' → logprob: -6.7133893966674805
    7. 'and' → logprob: -8.46338939666748
    8. ',' → logprob: -8.96338939666748
    9. '   ' → logprob: -10.46338939666748
    10. ' or' → logprob: -10.96338939666748

Token 155: ' nh' (ID: 5467)
  Prédit: ' nh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nh' → logprob: -0.3480914831161499
    2. '   ' → logprob: -1.59809148311615
    3. 'nh' (adapté à ' nh') → logprob: -3.0980916023254395
    4. '               ' → logprob: -3.5980916023254395
    5. '           ' → logprob: -4.4730916023254395
    6. 'n' → logprob: -5.9730916023254395
    7. '       ' → logprob: -5.9730916023254395
    8. ' ' → logprob: -6.7230916023254395
    9. '                   ' → logprob: -7.7230916023254395
    10. '    ' → logprob: -9.098091125488281

Token 156: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.32250434160232544
    2. '+=' → logprob: -1.3225042819976807
    3. '+' → logprob: -4.69750452041626
    4. ' +' → logprob: -9.447504043579102
    5. '=' → logprob: -13.197504043579102
    6. ' =' → logprob: -15.072504043579102
    7. ']+=' → logprob: -15.072504043579102
    8. ' ' → logprob: -15.197504043579102
    9. '<|end|>' → logprob: -15.822504043579102
    10. '   ' → logprob: -16.1975040435791

Token 157: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.692145012086257e-05
    2. ' ' → logprob: -10.000046730041504
    3. '0' → logprob: -13.875046730041504
    4. '   ' → logprob: -15.750046730041504
    5. '               ' → logprob: -16.00004768371582
    6. '2' → logprob: -16.37504768371582
    7. '<|end|>' → logprob: -16.50004768371582
    8. '           ' → logprob: -17.12504768371582
    9. '```' → logprob: -17.25004768371582
    10. '                   ' → logprob: -19.00004768371582

Token 158: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006717267446219921
    2. '0' → logprob: -5.006717205047607
    3. ' ' → logprob: -13.256717681884766
    4. '<|end|>' → logprob: -16.131717681884766
    5. '   ' → logprob: -17.381717681884766
    6. '2' → logprob: -17.881717681884766
    7. '>' → logprob: -18.881717681884766
    8. ')' → logprob: -19.131717681884766
    9. '```' → logprob: -19.319217681884766
    10. '+' → logprob: -19.881717681884766

Token 159: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0015519981971010566
    2. ',' → logprob: -7.751552104949951
    3. '<|end|>' → logprob: -7.751552104949951
    4. '0' → logprob: -8.126551628112793
    5. ',n' → logprob: -8.251551628112793
    6. '       ' → logprob: -10.126551628112793
    7. 'n' → logprob: -10.876551628112793
    8. '           ' → logprob: -11.251551628112793
    9. '                
' → logprob: -11.626551628112793
    10. '```' → logprob: -11.751551628112793

Token 160: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.017812509089708328
    2. '       ' → logprob: -5.017812728881836
    3. '<|end|>' → logprob: -5.517812728881836
    4. '```' → logprob: -6.142812728881836
    5. '0' → logprob: -6.392812728881836
    6. ' nw' → logprob: -7.017812728881836
    7. 'nw' → logprob: -7.517812728881836
    8. ',' → logprob: -7.642812728881836
    9. ',n' → logprob: -7.892812728881836
    10. 'n' → logprob: -8.642812728881836

Token 161: ' nw' (ID: 45462)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.576259970664978
    2. 'nw' (adapté à ' nw') → logprob: -0.826259970664978
    3. ' nw' → logprob: -8.70125961303711
    4. 'wn' → logprob: -10.20125961303711
    5. 'w' → logprob: -10.32625961303711
    6. '1' → logprob: -10.70125961303711
    7. '               ' → logprob: -10.82625961303711
    8. ' ' → logprob: -11.20125961303711
    9. 'wnd' → logprob: -11.82625961303711
    10. '   ' → logprob: -12.07625961303711

Token 162: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20146334171295166
    2. ' =' → logprob: -1.7014633417129517
    3. '0' → logprob: -9.95146369934082
    4. '<|end|>' → logprob: -13.45146369934082
    5. ' ' → logprob: -14.45146369934082
    6. '+=' → logprob: -15.70146369934082
    7. ' +=' → logprob: -15.95146369934082
    8. ')' → logprob: -16.45146369934082
    9. '＝' → logprob: -17.32646369934082
    10. ',' → logprob: -17.82646369934082

Token 163: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '   ' → logprob: -18.875
    4. '1' → logprob: -19.0
    5. '۰' → logprob: -19.375
    6. '00' → logprob: -20.625
    7. '０' → logprob: -21.25
    8. '<|end|>' → logprob: -21.3125
    9. '  ' → logprob: -21.6875
    10. '
' → logprob: -21.8125

Token 164: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.5
    3. '1' → logprob: -18.0
    4. '۰' → logprob: -18.625
    5. '00' → logprob: -19.625
    6. 'W' → logprob: -20.0
    7. '```' → logprob: -20.75
    8. '０' → logprob: -20.9375
    9. 'O' → logprob: -20.9375
    10. '[' → logprob: -21.0

Token 165: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004644792061299086
    2. '<|end|>' → logprob: -6.254644870758057
    3. ' if' → logprob: -7.129644870758057
    4. '   ' → logprob: -7.129644870758057
    5. ')' → logprob: -8.129644393920898
    6. ',' → logprob: -8.379644393920898
    7. '        
' → logprob: -9.379644393920898
    8. '           ' → logprob: -9.379644393920898
    9. '```' → logprob: -9.379644393920898
    10. ' ' → logprob: -9.504644393920898

Token 166: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007698671892285347
    2. ' if' → logprob: -5.5076985359191895
    3. '<|end|>' → logprob: -6.2576985359191895
    4. '   ' → logprob: -7.1326985359191895
    5. '```' → logprob: -8.132699012756348
    6. '           ' → logprob: -8.632699012756348
    7. ',' → logprob: -8.757699012756348
    8. '[' → logprob: -9.882699012756348
    9. '        ' → logprob: -10.007699012756348
    10. '    ' → logprob: -10.632699012756348

Token 167: ' to' (ID: 316)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.018579592928290367
    2. '       ' → logprob: -4.518579483032227
    3. ' if' → logprob: -4.893579483032227
    4. '```' → logprob: -12.393579483032227
    5. '   ' → logprob: -12.893579483032227
    6. 'next' → logprob: -14.393579483032227
    7. '        
' → logprob: -14.768579483032227
    8. '	if' → logprob: -15.018579483032227
    9. 'If' → logprob: -15.393579483032227
    10. 'while' → logprob: -15.643579483032227

Token 168: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0789315402507782
    2. '=' → logprob: -2.5789315700531006
    3. ' ' → logprob: -10.70393180847168
    4. ' =[' → logprob: -11.82893180847168
    5. 'r' → logprob: -12.57893180847168
    6. '[' → logprob: -13.07893180847168
    7. 'rm' → logprob: -13.70393180847168
    8. '=[' → logprob: -13.95393180847168
    9. '   ' → logprob: -14.20393180847168
    10. 'f' → logprob: -14.45393180847168

Token 169: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.48543334007263184
    2. '[n' → logprob: -0.9854333400726318
    3. ' [' → logprob: -4.485433578491211
    4. '[h' → logprob: -12.110433578491211
    5. '[now' → logprob: -12.360433578491211
    6. '[N' → logprob: -12.985433578491211
    7. '[str' → logprob: -13.360433578491211
    8. '[href' → logprob: -13.610433578491211
    9. '[new' → logprob: -14.235433578491211
    10. '[next' → logprob: -14.485433578491211

Token 170: 'nh' (ID: 5380)
  Prédit: 'nh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nh' → logprob: -4.0484450437361374e-05
    2. ' nh' → logprob: -10.125040054321289
    3. 'hn' → logprob: -16.12504005432129
    4. '   ' → logprob: -16.25004005432129
    5. '[' → logprob: -16.62504005432129
    6. '
' → logprob: -17.37504005432129
    7. 'n' → logprob: -17.37504005432129
    8. 'NH' → logprob: -17.87504005432129
    9. 'Nh' → logprob: -19.12504005432129
    10. ' ' → logprob: -19.12504005432129

Token 171: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0206720617134124e-05
    2. ' +' → logprob: -11.50001049041748
    3. '＋' → logprob: -19.625009536743164
    4. '+
' → logprob: -19.875009536743164
    5. '<|end|>' → logprob: -20.500009536743164
    6. '()+' → logprob: -21.500009536743164
    7. '+w' → logprob: -21.625009536743164
    8. '+n' → logprob: -22.125009536743164
    9. '1' → logprob: -22.250009536743164
    10. '[' → logprob: -22.625009536743164

Token 172: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4987974029500037e-05
    2. ' ' → logprob: -10.625024795532227
    3. 'nw' → logprob: -14.750024795532227
    4. '0' → logprob: -16.500024795532227
    5. ',w' → logprob: -17.000024795532227
    6. '   ' → logprob: -17.250024795532227
    7. 'w' → logprob: -17.375024795532227
    8. ',' → logprob: -17.500024795532227
    9. ' nw' → logprob: -17.875024795532227
    10. '```' → logprob: -18.375024795532227

Token 173: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.40275105834007263
    2. ',' → logprob: -1.152751088142395
    3. ',w' → logprob: -4.1527509689331055
    4. ' ,' → logprob: -11.277750968933105
    5. ',to' → logprob: -11.902750968933105
    6. ',num' → logprob: -12.652750968933105
    7. ',y' → logprob: -13.277750968933105
    8. ',s' → logprob: -13.777750968933105
    9. ',next' → logprob: -14.027750968933105
    10. ',user' → logprob: -14.027750968933105

Token 174: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -5.200166469876422e-06
    2. '+w' → logprob: -14.375004768371582
    3. '#w' → logprob: -14.625004768371582
    4. '1' → logprob: -14.625004768371582
    5. '<w' → logprob: -14.625004768371582
    6. 'nw' → logprob: -14.750004768371582
    7. ''w' → logprob: -14.875004768371582
    8. '+' → logprob: -15.000004768371582
    9. '[w' → logprob: -15.125004768371582
    10. '```' → logprob: -15.500004768371582

Token 175: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.4121114822482923e-06
    2. ' +' → logprob: -13.375003814697266
    3. '<|end|>' → logprob: -14.125003814697266
    4. '+]' → logprob: -15.000003814697266
    5. ']+' → logprob: -15.375003814697266
    6. ']' → logprob: -16.000003814697266
    7. '1' → logprob: -16.000003814697266
    8. '+"]' → logprob: -16.250003814697266
    9. '+
' → logprob: -16.625003814697266
    10. '```' → logprob: -17.125003814697266

Token 176: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '+' → logprob: -16.875001907348633
    4. ']' → logprob: -17.625001907348633
    5. '```' → logprob: -17.625001907348633
    6. '-' → logprob: -17.875001907348633
    7. '0' → logprob: -18.687501907348633
    8. ')' → logprob: -19.187501907348633
    9. '<|end|>' → logprob: -19.250001907348633
    10. ']+' → logprob: -20.625001907348633

Token 177: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011712945997714996
    2. '<|end|>' → logprob: -7.251171112060547
    3. ',' → logprob: -8.501171112060547
    4. ')' → logprob: -9.126171112060547
    5. ' ]' → logprob: -9.376171112060547
    6. ']
' → logprob: -10.501171112060547
    7. '<|end|>' → logprob: -11.501171112060547
    8. '       ' → logprob: -11.501171112060547
    9. '   ' → logprob: -11.876171112060547
    10. '}' → logprob: -12.751171112060547

Token 178: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5166052579879761
    2. '   ' → logprob: -1.141605257987976
    3. ' if' → logprob: -3.2666053771972656
    4. ' ans' → logprob: -4.266605377197266
    5. '<|end|>' → logprob: -4.391605377197266
    6. '           ' → logprob: -4.516605377197266
    7. 'if' → logprob: -6.641605377197266
    8. '
' → logprob: -6.891605377197266
    9. '[' → logprob: -7.016605377197266
    10. '```' → logprob: -7.141605377197266

Token 179: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.07691720873117447
    2. ' if' → logprob: -2.8269171714782715
    3. 'ans' → logprob: -4.3269171714782715
    4. ' ans' → logprob: -7.0769171714782715
    5. '   ' → logprob: -7.4519171714782715
    6. '       ' → logprob: -8.70191764831543
    7. '	ans' → logprob: -11.70191764831543
    8. '(ans' → logprob: -12.20191764831543
    9. '[' → logprob: -12.32691764831543
    10. '```' → logprob: -12.70191764831543

Token 180: ' nh' (ID: 5467)
  Prédit: ' nh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nh' → logprob: -0.35473310947418213
    2. 'nh' → logprob: -2.1047329902648926
    3. '0' → logprob: -2.6047329902648926
    4. ' ' → logprob: -2.8547329902648926
    5. ' not' → logprob: -3.4797329902648926
    6. 'have' → logprob: -5.979732990264893
    7. 'not' → logprob: -6.104732990264893
    8. ' have' → logprob: -6.229732990264893
    9. ' (' → logprob: -6.479732990264893
    10. ' hn' → logprob: -6.979732990264893

Token 181: ' ==' (ID: 951)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6303918957710266
    2. '<' → logprob: -1.5053918361663818
    3. ' ==' → logprob: -2.005391836166382
    4. ' >=' → logprob: -3.005391836166382
    5. ' !=' → logprob: -3.130391836166382
    6. '<|end|>' → logprob: -4.755392074584961
    7. '==' → logprob: -5.755392074584961
    8. '!=' → logprob: -6.505392074584961
    9. '>=' → logprob: -6.630392074584961
    10. ')' → logprob: -6.755392074584961

Token 182: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0019287518225610256
    2. ' H' → logprob: -6.251928806304932
    3. '   ' → logprob: -16.376928329467773
    4. ' ' → logprob: -16.751928329467773
    5. '	H' → logprob: -18.376928329467773
    6. '  ' → logprob: -18.751928329467773
    7. '0' → logprob: -19.251928329467773
    8. 'len' → logprob: -19.876928329467773
    9. ')' → logprob: -20.001928329467773
    10. 'HBox' → logprob: -20.376928329467773

Token 183: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2995910942554474
    2. ':' → logprob: -2.049591064453125
    3. 'and' → logprob: -2.049591064453125
    4. ':
' → logprob: -7.299591064453125
    5. '<|end|>' → logprob: -8.924591064453125
    6. '   ' → logprob: -9.049591064453125
    7. ' or' → logprob: -9.299591064453125
    8. '           ' → logprob: -9.299591064453125
    9. ':return' → logprob: -9.674591064453125
    10. ' ' → logprob: -10.299591064453125

Token 184: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1611006110906601
    2. '           ' → logprob: -1.9111006259918213
    3. '   ' → logprob: -7.161100387573242
    4. 'break' → logprob: -9.661100387573242
    5. ' break' → logprob: -10.536100387573242
    6. '               ' → logprob: -12.536100387573242
    7. '	break' → logprob: -12.911100387573242
    8. '	   ' → logprob: -14.286100387573242
    9. '```' → logprob: -14.411100387573242
    10. '        
' → logprob: -15.036100387573242

Token 185: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.671245813369751
    2. '           ' → logprob: -1.421245813369751
    3. ' break' → logprob: -1.546245813369751
    4. '       ' → logprob: -3.546245813369751
    5. '   ' → logprob: -5.546245574951172
    6. '	break' → logprob: -6.796245574951172
    7. '               ' → logprob: -7.546245574951172
    8. '```' → logprob: -10.046245574951172
    9. ' ' → logprob: -11.296245574951172
    10. 'if' → logprob: -12.046245574951172

Token 186: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010283180512487888
    2. '   ' → logprob: -4.88528299331665
    3. '<|end|>' → logprob: -6.88528299331665
    4. '
' → logprob: -7.01028299331665
    5. '        
' → logprob: -8.010283470153809
    6. '    
' → logprob: -9.010283470153809
    7. ' if' → logprob: -9.010283470153809
    8. ',' → logprob: -10.010283470153809
    9. '  
' → logprob: -10.885283470153809
    10. '<|end|>' → logprob: -10.885283470153809

Token 187: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2050473690032959
    2. '   ' → logprob: -1.705047369003296
    3. ' if' → logprob: -6.080047607421875
    4. '        
' → logprob: -7.955047607421875
    5. '    
' → logprob: -8.205047607421875
    6. '<|end|>' → logprob: -8.705047607421875
    7. '
' → logprob: -8.830047607421875
    8. '           ' → logprob: -9.205047607421875
    9. ' ' → logprob: -10.080047607421875
    10. ' 
' → logprob: -10.205047607421875

Token 188: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.44954460859298706
    2. 'if' (adapté à ' if') → logprob: -1.3245446681976318
    3. '   ' → logprob: -2.699544668197632
    4. '       ' → logprob: -3.949544668197632
    5. ' ans' → logprob: -5.074544429779053
    6. 'ans' → logprob: -5.699544429779053
    7. ' ' → logprob: -11.199544906616211
    8. '(ans' → logprob: -11.699544906616211
    9. '           ' → logprob: -12.199544906616211
    10. '    
' → logprob: -12.199544906616211

Token 189: ' have' (ID: 679)
  Prédit: ' have'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' have' → logprob: -0.4350857436656952
    2. 'have' → logprob: -1.0600857734680176
    3. ' field' → logprob: -5.560085773468018
    4. 'field' → logprob: -6.310085773468018
    5. ' not' → logprob: -7.810085773468018
    6. ' ' → logprob: -9.31008529663086
    7. ' len' → logprob: -9.68508529663086
    8. 'not' → logprob: -10.18508529663086
    9. ' hav' → logprob: -10.68508529663086
    10. ' (' → logprob: -11.68508529663086

Token 190: 'Coin' (ID: 40826)
  Prédit: 'Coin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coin' → logprob: -0.00012833021173719317
    2. '_coin' → logprob: -9.375128746032715
    3. '_C' → logprob: -10.250128746032715
    4. ' Coin' → logprob: -12.625128746032715
    5. 'C' → logprob: -13.625128746032715
    6. ':' → logprob: -13.750128746032715
    7. '_' → logprob: -14.125128746032715
    8. '_co' → logprob: -14.500128746032715
    9. 'Coins' → logprob: -14.500128746032715
    10. 'coin' → logprob: -15.000128746032715

Token 191: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05728869140148163
    2. ':
' → logprob: -2.932288646697998
    3. '==' → logprob: -6.682288646697998
    4. ' ==' → logprob: -7.057288646697998
    5. ' and' → logprob: -8.932289123535156
    6. '=' → logprob: -9.557289123535156
    7. ' =' → logprob: -10.682289123535156
    8. '[' → logprob: -11.557289123535156
    9. ' :' → logprob: -11.682289123535156
    10. '   ' → logprob: -11.807289123535156

Token 192: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07970920950174332
    2. ' ans' → logprob: -2.57970929145813
    3. 'ans' → logprob: -7.829709053039551
    4. '   ' → logprob: -8.32970905303955
    5. '	ans' → logprob: -9.70470905303955
    6. '       ' → logprob: -9.82970905303955
    7. '               ' → logprob: -10.57970905303955
    8. '(ans' → logprob: -10.82970905303955
    9. '            
' → logprob: -12.07970905303955
    10. '```' → logprob: -12.95470905303955

Token 193: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.4745716154575348
    2. ' ans' → logprob: -0.9745715856552124
    3. '           ' → logprob: -7.974571704864502
    4. '	ans' → logprob: -9.724571228027344
    5. '   ' → logprob: -9.849571228027344
    6. '       ' → logprob: -10.724571228027344
    7. '(ans' → logprob: -11.349571228027344
    8. '_ans' → logprob: -13.974571228027344
    9. '               ' → logprob: -14.099571228027344
    10. 'answer' → logprob: -14.349571228027344

Token 194: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.003620265983045101
    2. '.' → logprob: -5.628620147705078
    3. '.extend' → logprob: -11.503620147705078
    4. ' .' → logprob: -11.628620147705078
    5. '.app' → logprob: -14.878620147705078
    6. '.add' → logprob: -15.128620147705078
    7. '.push' → logprob: -15.628620147705078
    8. '.ap' → logprob: -16.378620147705078
    9. '   ' → logprob: -16.878620147705078
    10. ').' → logprob: -17.003620147705078

Token 195: '(frm' (ID: 180516)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.30022910237312317
    2. '((' → logprob: -1.5502290725708008
    3. '(frm' → logprob: -3.300229072570801
    4. '(' → logprob: -4.800229072570801
    5. '(fr' → logprob: -7.175229072570801
    6. '(f' → logprob: -7.300229072570801
    7. '(["' → logprob: -8.4252290725708
    8. '(['' → logprob: -8.8002290725708
    9. '(("' → logprob: -9.5502290725708
    10. '[' → logprob: -10.3002290725708

Token 196: '+' (ID: 10)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.31328505277633667
    2. '+' → logprob: -1.3132851123809814
    3. ')' → logprob: -11.438284873962402
    4. '+[' → logprob: -11.938284873962402
    5. '＋' → logprob: -14.063284873962402
    6. '+
' → logprob: -14.438284873962402
    7. '               ' → logprob: -14.563284873962402
    8. '           ' → logprob: -14.688284873962402
    9. ')+' → logprob: -14.688284873962402
    10. '+n' → logprob: -14.813284873962402

Token 197: 'to' (ID: 935)
  Prédit: 'to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -6.392202976712724e-06
    2. ' to' → logprob: -12.125006675720215
    3. '[to' → logprob: -14.625006675720215
    4. '["' → logprob: -15.375006675720215
    5. '[' → logprob: -16.0000057220459
    6. '['' → logprob: -16.5000057220459
    7. '(to' → logprob: -16.6250057220459
    8. ' ' → logprob: -20.2500057220459
    9. '	to' → logprob: -20.3750057220459
    10. '(' → logprob: -20.5000057220459

Token 198: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.472211968386546e-05
    2. '[])' → logprob: -10.125094413757324
    3. '])' → logprob: -10.750094413757324
    4. ' )' → logprob: -10.875094413757324
    5. '))' → logprob: -12.625094413757324
    6. ')]' → logprob: -13.250094413757324
    7. '`)' → logprob: -13.500094413757324
    8. ']' → logprob: -13.500094413757324
    9. '[' → logprob: -13.625094413757324
    10. '）' → logprob: -13.750094413757324

Token 199: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 200: ' print' (ID: 2123)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 201: '(len' (ID: 14990)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47545069456100464
    2. '(len' → logprob: -0.9754506945610046
    3. '(*' → logprob: -7.35045051574707
    4. '('' → logprob: -7.97545051574707
    5. '("("' → logprob: -8.22545051574707
    6. '()' → logprob: -9.85045051574707
    7. '(
' → logprob: -10.60045051574707
    8. '(sum' → logprob: -11.22545051574707
    9. '(ans' → logprob: -11.85045051574707
    10. '("' → logprob: -12.10045051574707

Token 202: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.0325924449716695e-05
    2. '(' → logprob: -11.50001049041748
    3. '(answer' → logprob: -16.625009536743164
    4. ' (' → logprob: -16.750009536743164
    5. '(
' → logprob: -17.375009536743164
    6. '(an' → logprob: -17.750009536743164
    7. 'ans' → logprob: -17.750009536743164
    8. '(

' → logprob: -19.375009536743164
    9. '	ans' → logprob: -19.500009536743164
    10. ')' → logprob: -19.750009536743164

Token 203: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.6100132496794686e-05
    2. ')
' → logprob: -10.375056266784668
    3. '()' → logprob: -11.125056266784668
    4. ' )' → logprob: -12.250056266784668
    5. '())' → logprob: -12.375056266784668
    6. '   ' → logprob: -15.000056266784668
    7. '(' → logprob: -15.125056266784668
    8. '))' → logprob: -15.375056266784668
    9. ')`' → logprob: -15.750056266784668
    10. '`)' → logprob: -16.62505531311035

Token 204: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10439570248126984
    2. '
' → logprob: -2.854395627975464
    3. ' for' → logprob: -3.604395627975464
    4. '\n' → logprob: -4.729395866394043
    5. '   ' → logprob: -6.229395866394043
    6. '```' → logprob: -6.229395866394043
    7. '    
' → logprob: -7.479395866394043
    8. '<|end|>' → logprob: -8.229395866394043
    9. '\' → logprob: -8.979395866394043
    10. 'print' → logprob: -9.104395866394043

Token 205: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.04157136753201485
    2. ' for' → logprob: -3.9165713787078857
    3. '   ' → logprob: -4.041571140289307
    4. '
' → logprob: -6.166571140289307
    5. '    
' → logprob: -7.666571140289307
    6. '```' → logprob: -8.166571617126465
    7. '\n' → logprob: -8.416571617126465
    8. '	for' → logprob: -9.541571617126465
    9. '<|end|>' → logprob: -9.541571617126465
    10. '\' → logprob: -12.666571617126465

Token 206: ' elem' (ID: 23108)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5477518439292908
    2. 'move' → logprob: -0.9227518439292908
    3. ' move' → logprob: -4.0477519035339355
    4. 'line' → logprob: -5.7977519035339355
    5. ' a' → logprob: -7.2977519035339355
    6. 'route' → logprob: -7.5477519035339355
    7. 'x' → logprob: -7.7977519035339355
    8. 'e' → logprob: -7.7977519035339355
    9. 'path' → logprob: -7.9227519035339355
    10. 'i' → logprob: -8.297751426696777

Token 207: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004094666335731745
    2. 'in' → logprob: -5.50409460067749
    3. 's' → logprob: -12.379095077514648
    4. ' ' → logprob: -12.629095077514648
    5. 'n' → logprob: -13.254095077514648
    6. '   ' → logprob: -13.629095077514648
    7. '	in' → logprob: -13.879095077514648
    8. ' i' → logprob: -14.504095077514648
    9. '  ' → logprob: -14.629095077514648
    10. ',' → logprob: -14.629095077514648

Token 208: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.006716436706483364
    2. ' ans' → logprob: -5.006716251373291
    3. '(ans' → logprob: -13.75671672821045
    4. '	ans' → logprob: -17.006715774536133
    5. '   ' → logprob: -19.756715774536133
    6. '_ans' → logprob: -19.881715774536133
    7. 'answer' → logprob: -20.131715774536133
    8. 'Ans' → logprob: -21.131715774536133
    9. ' ' → logprob: -22.506715774536133
    10. 'arr' → logprob: -22.756715774536133

Token 209: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08569079637527466
    2. ',' → logprob: -2.58569073677063
    3. ':
' → logprob: -5.460690975189209
    4. '   ' → logprob: -7.085690975189209
    5. '[::-' → logprob: -7.710690975189209
    6. '[' → logprob: -7.960690975189209
    7. '():' → logprob: -7.960690975189209
    8. '():
' → logprob: -9.08569049835205
    9. '):' → logprob: -9.21069049835205
    10. '[:-' → logprob: -9.71069049835205

Token 210: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011191291734576225
    2. '       ' → logprob: -5.011191368103027
    3. ' print' → logprob: -5.761191368103027
    4. ':' → logprob: -7.136191368103027
    5. ',' → logprob: -8.011191368103027
    6. 'print' → logprob: -9.386191368103027
    7. ':
' → logprob: -10.761191368103027
    8. '	print' → logprob: -11.136191368103027
    9. '<|end|>' → logprob: -11.261191368103027
    10. '[' → logprob: -11.886191368103027

Token 211: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.33032816648483276
    2. ' print' → logprob: -1.3303282260894775
    3. '   ' → logprob: -4.080327987670898
    4. '	print' → logprob: -10.955327987670898
    5. '#print' → logprob: -14.705327987670898
    6. '       ' → logprob: -14.705327987670898
    7. '```' → logprob: -14.830327987670898
    8. '    ' → logprob: -15.205327987670898
    9. '.print' → logprob: -15.205327987670898
    10. ',' → logprob: -15.580327987670898

Token 212: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.0032200184650719166
    2. '(elem' → logprob: -5.753220081329346
    3. '(' → logprob: -10.253219604492188
    4. '*' → logprob: -12.253219604492188
    5. 'elem' → logprob: -13.128219604492188
    6. '((*' → logprob: -16.003219604492188
    7. ' (*' → logprob: -16.628219604492188
    8. '(*)' → logprob: -16.878219604492188
    9. '(f' → logprob: -17.378219604492188
    10. '(*(' → logprob: -17.753219604492188

Token 213: 'elem' (ID: 35287)
  Prédit: 'elem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elem' → logprob: -1.9361264946837764e-07
    2. ' elem' → logprob: -16.0
    3. '(elem' → logprob: -18.5
    4. '	elem' → logprob: -19.25
    5. 'ele' → logprob: -19.875
    6. '[' → logprob: -21.125
    7. '   ' → logprob: -22.0
    8. 'element' → logprob: -22.125
    9. '.elem' → logprob: -23.625
    10. '  ' → logprob: -23.625

Token 214: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3544423381972592e-05
    2. ' )' → logprob: -12.50001335144043
    3. '   ' → logprob: -12.87501335144043
    4. '()' → logprob: -12.87501335144043
    5. '())' → logprob: -12.87501335144043
    6. '))' → logprob: -15.25001335144043
    7. ')
' → logprob: -15.25001335144043
    8. ')`' → logprob: -15.25001335144043
    9. ')}' → logprob: -15.50001335144043
    10. '       ' → logprob: -15.50001335144043

Token 215: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 216: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.00048644188791513443
    2. '__' → logprob: -7.875486373901367
    3. ' _' → logprob: -10.000486373901367
    4. '_' → logprob: -10.250486373901367
    5. ' ' → logprob: -10.750486373901367
    6. ' ' → logprob: -12.750486373901367
    7. ' ___' → logprob: -14.625486373901367
    8. '_name' → logprob: -15.250486373901367
    9. ' ​' → logprob: -15.250486373901367
    10. ' name' → logprob: -16.625486373901367

Token 217: 'name' (ID: 897)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.35248520970344543
    2. '__' → logprob: -1.227485179901123
    3. ' ==' → logprob: -5.727485179901123
    4. '_' → logprob: -7.852485179901123
    5. ' _' → logprob: -8.602485656738281
    6. '_name' → logprob: -9.602485656738281
    7. '==' → logprob: -9.977485656738281
    8. 'name' → logprob: -11.352485656738281
    9. ' ' → logprob: -11.477485656738281
    10. '___' → logprob: -11.602485656738281

Token 218: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00909501314163208
    2. ' ==' → logprob: -5.009095191955566
    3. '==' → logprob: -6.134095191955566
    4. '=="' → logprob: -8.884095191955566
    5. ' __' → logprob: -10.384095191955566
    6. '=='' → logprob: -11.759095191955566
    7. '_' → logprob: -12.009095191955566
    8. '___' → logprob: -12.384095191955566
    9. '__[' → logprob: -12.384095191955566
    10. '__.__' → logprob: -12.509095191955566

Token 219: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.17756693065166473
    2. '__' → logprob: -2.0525670051574707
    3. '==' → logprob: -3.4275670051574707
    4. '=="' → logprob: -7.052567005157471
    5. ' =="' → logprob: -7.677567005157471
    6. ' =' → logprob: -8.677566528320312
    7. '_' → logprob: -9.177566528320312
    8. '=' → logprob: -9.302566528320312
    9. ' __' → logprob: -9.552566528320312
    10. '=='' → logprob: -10.427566528320312

Token 220: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2521023750305176
    2. ''' → logprob: -1.5021023750305176
    3. '__' → logprob: -9.25210189819336
    4. ' "__' → logprob: -9.87710189819336
    5. ' '__' → logprob: -11.00210189819336
    6. '   ' → logprob: -12.25210189819336
    7. '`' → logprob: -13.12710189819336
    8. '"user' → logprob: -14.62710189819336
    9. ' "' → logprob: -14.87710189819336
    10. '"name' → logprob: -15.50210189819336

Token 221: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0027925148606300354
    2. '__' → logprob: -6.6277923583984375
    3. ''' → logprob: -7.0027923583984375
    4. 'name' → logprob: -7.7527923583984375
    5. '_main' → logprob: -9.627792358398438
    6. ''name' → logprob: -11.002792358398438
    7. '"' → logprob: -11.127792358398438
    8. ''m' → logprob: -11.252792358398438
    9. ' '__' → logprob: -11.752792358398438
    10. ' main' → logprob: -12.752792358398438

Token 222: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.5775072574615479
    2. '__' → logprob: -0.8275072574615479
    3. '__":
' → logprob: -6.702507019042969
    4. '__
' → logprob: -9.202507019042969
    5. '__.' → logprob: -9.452507019042969
    6. '__:' → logprob: -9.452507019042969
    7. '__.__' → logprob: -10.952507019042969
    8. '__('' → logprob: -11.327507019042969
    9. '__()
' → logprob: -12.202507019042969
    10. '_' → logprob: -12.202507019042969

Token 223: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22122228145599365
    2. ' solve' → logprob: -1.7212222814559937
    3. 'solve' → logprob: -4.221222400665283
    4. '    
' → logprob: -5.846222400665283
    5. '```' → logprob: -6.596222400665283
    6. '.solve' → logprob: -8.596221923828125
    7. '<|end|>' → logprob: -9.471221923828125
    8. '`' → logprob: -9.596221923828125
    9. ' 
' → logprob: -9.721221923828125
    10. '  
' → logprob: -9.846221923828125

Token 224: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' (adapté à ' solve') → logprob: -5.512236498361744e-07
    2. ' solve' → logprob: -14.500000953674316
    3. '   ' → logprob: -17.5
    4. '.solve' → logprob: -19.625
    5. 'resolve' → logprob: -20.625
    6. 'import' → logprob: -22.125
    7. 'solver' → logprob: -22.25
    8. 'save' → logprob: -22.625
    9. 'input' → logprob: -22.625
    10. '  ' → logprob: -22.625

Token 225: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5224249958992004
    2. '(' → logprob: -1.0224249362945557
    3. '<|end|>' → logprob: -4.022425174713135
    4. '```' → logprob: -4.772425174713135
    5. ')' → logprob: -5.022425174713135
    6. ':' → logprob: -5.522425174713135
    7. '(
' → logprob: -5.522425174713135
    8. '#' → logprob: -5.897425174713135
    9. '[' → logprob: -7.647425174713135
    10. '()
' → logprob: -7.647425174713135


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 223
Tokens correctement prédits (1ère position, stricte): 99
Tokens correctement prédits (1ère position, avec adaptation): 109
Tokens correctement prédits (top 10): 188
Précision stricte (1ère position): 44.39%
Précision adaptée (1ère position): 48.88%
Précision (top 10): 84.30%
================================================================================
