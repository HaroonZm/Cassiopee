================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:19
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
input_number = int(input())
if input_number < 1000:
    output_string = "ABC"
else:
    output_string = "ABD"
print(output_string)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'input' (ID: 2586)
  → Token d'amorce (pas de prédiction)

Token 1: '_number' (ID: 11733)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.050307054072618484
    2. '0' → logprob: -3.175307035446167
    3. 'input' → logprob: -6.050307273864746
    4. ' input' → logprob: -6.175307273864746
    5. '10' → logprob: -6.675307273864746
    6. '1' → logprob: -7.800307273864746
    7. '5' → logprob: -8.050307273864746
    8. ' int' → logprob: -8.425307273864746
    9. '42' → logprob: -8.425307273864746
    10. 'int' → logprob: -9.425307273864746

Token 4: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0016532829031348228
    2. '```' → logprob: -7.37665319442749
    3. ''' → logprob: -8.126653671264648
    4. '(input' → logprob: -8.626653671264648
    5. '`' → logprob: -8.751653671264648
    6. '_' → logprob: -9.501653671264648
    7. '("("' → logprob: -10.001653671264648
    8. '('' → logprob: -10.126653671264648
    9. '40' → logprob: -10.376653671264648
    10. '[' → logprob: -10.751653671264648

Token 5: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6011295318603516
    2. ')' → logprob: -0.9761295318603516
    3. '()' → logprob: -2.9761295318603516
    4. '())' → logprob: -3.8511295318603516
    5. '('' → logprob: -7.976129531860352
    6. '))' → logprob: -8.351129531860352
    7. '(
' → logprob: -8.351129531860352
    8. '")' → logprob: -8.476129531860352
    9. '[' → logprob: -8.601129531860352
    10. '<|end|>' → logprob: -8.601129531860352

Token 6: 'if' (ID: 366)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02653331495821476
    2. '*' → logprob: -4.151533126831055
    3. 'if' → logprob: -5.401533126831055
    4. '%' → logprob: -6.401533126831055
    5. '>' → logprob: -7.026533126831055
    6. '#' → logprob: -7.651533126831055
    7. ' ' → logprob: -7.776533126831055
    8. ')' → logprob: -7.901533126831055
    9. '.' → logprob: -8.276533126831055
    10. '=' → logprob: -8.401533126831055

Token 7: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.33059558272361755
    2. ' input' → logprob: -1.33059561252594
    3. 'input' → logprob: -4.08059549331665
    4. '  ' → logprob: -8.580595970153809
    5. '(input' → logprob: -10.705595970153809
    6. ' not' → logprob: -10.955595970153809
    7. ' (' → logprob: -11.205595970153809
    8. ''' → logprob: -11.455595970153809
    9. ' ' → logprob: -11.705595970153809
    10. ' user' → logprob: -12.330595970153809

Token 8: '_number' (ID: 11733)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06732883304357529
    2. ' ' → logprob: -3.692328929901123
    3. '_number' → logprob: -4.192328929901123
    4. ' _' → logprob: -4.817328929901123
    5. '[' → logprob: -6.067328929901123
    6. '(' → logprob: -6.067328929901123
    7. '  ' → logprob: -6.192328929901123
    8. '```' → logprob: -6.567328929901123
    9. '>' → logprob: -6.692328929901123
    10. '_space' → logprob: -6.817328929901123

Token 9: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.02323068492114544
    2. ' ' → logprob: -4.89823055267334
    3. ' >=' → logprob: -5.02323055267334
    4. ' ==' → logprob: -5.14823055267334
    5. ' <' → logprob: -6.27323055267334
    6. '>' → logprob: -7.64823055267334
    7. ' %' → logprob: -8.14823055267334
    8. '  ' → logprob: -8.77323055267334
    9. ' <=' → logprob: -8.77323055267334
    10. ' !=' → logprob: -10.27323055267334

Token 10: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11310787498950958
    2. '0' → logprob: -2.863107919692993
    3. '10' → logprob: -3.363107919692993
    4. '=' → logprob: -4.863107681274414
    5. '20' → logprob: -5.488107681274414
    6. '5' → logprob: -6.988107681274414
    7. '100' → logprob: -7.363107681274414
    8. '1' → logprob: -7.863107681274414
    9. '50' → logprob: -8.363107681274414
    10. '32' → logprob: -8.613107681274414

Token 11: '100' (ID: 1353)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.21749143302440643
    2. ' ' → logprob: -2.092491388320923
    3. '10' → logprob: -2.717491388320923
    4. '100' → logprob: -5.467491626739502
    5. '20' → logprob: -7.592491626739502
    6. '50' → logprob: -7.717491626739502
    7. '5' → logprob: -7.842491626739502
    8. '1' → logprob: -7.967491626739502
    9. '=' → logprob: -9.592491149902344
    10. '2' → logprob: -10.717491149902344

Token 12: '0' (ID: 15)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -4.024604277219623e-05
    2. ':**' → logprob: -11.750040054321289
    3. '):' → logprob: -12.000040054321289
    4. ':
' → logprob: -12.000040054321289
    5. '>:' → logprob: -12.000040054321289
    6. ' :' → logprob: -12.250040054321289
    7. '':' → logprob: -12.250040054321289
    8. '':'' → logprob: -13.500040054321289
    9. '":' → logprob: -14.250040054321289
    10. '():' → logprob: -14.875040054321289

Token 13: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.726595241460018e-05
    2. ' :' → logprob: -11.00003719329834
    3. ':**' → logprob: -12.00003719329834
    4. '):' → logprob: -12.37503719329834
    5. ':
' → logprob: -12.50003719329834
    6. '>:' → logprob: -12.87503719329834
    7. '':' → logprob: -13.37503719329834
    8. '':'' → logprob: -14.50003719329834
    9. '+:' → logprob: -15.25003719329834
    10. '":' → logprob: -15.37503719329834

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037315137684345245
    2. '    ' → logprob: -3.7873151302337646
    3. '\n' → logprob: -5.537315368652344
    4. 'print' → logprob: -5.912315368652344
    5. '    
' → logprob: -6.162315368652344
    6. '\' → logprob: -6.412315368652344
    7. ' print' → logprob: -6.537315368652344
    8. ' ' → logprob: -7.162315368652344
    9. ':' → logprob: -7.912315368652344
    10. ' 
' → logprob: -8.787315368652344

Token 15: ' output' (ID: 4733)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.10264907032251358
    2. 'print' → logprob: -2.352648973464966
    3. '    ' → logprob: -6.727649211883545
    4. '   ' → logprob: -6.977649211883545
    5. ' pass' → logprob: -9.227648735046387
    6. ' ' → logprob: -9.227648735046387
    7. ' ' → logprob: -10.852648735046387
    8. ' ```' → logprob: -10.977648735046387
    9. '```' → logprob: -11.477648735046387
    10. ' `' → logprob: -12.102648735046387

Token 16: '_string' (ID: 8609)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.036324337124824524
    2. '()' → logprob: -5.161324501037598
    3. ' =' → logprob: -5.286324501037598
    4. ')' → logprob: -5.411324501037598
    5. '"' → logprob: -5.661324501037598
    6. '(' → logprob: -5.786324501037598
    7. '_space' → logprob: -5.911324501037598
    8. ' ' → logprob: -6.161324501037598
    9. '_number' → logprob: -6.536324501037598
    10. '=' → logprob: -7.286324501037598

Token 17: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4499559998512268
    2. ' +=' → logprob: -1.824955940246582
    3. '=' → logprob: -2.324955940246582
    4. '+' → logprob: -3.449955940246582
    5. ' ' → logprob: -4.199955940246582
    6. ')' → logprob: -4.324955940246582
    7. '(' → logprob: -4.949955940246582
    8. '()' → logprob: -4.949955940246582
    9. ' +' → logprob: -4.949955940246582
    10. '+=' → logprob: -5.199955940246582

Token 18: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.14778508245944977
    2. ' "' → logprob: -2.272785186767578
    3. ''' → logprob: -3.647785186767578
    4. ' '' → logprob: -5.647785186767578
    5. '""' → logprob: -5.897785186767578
    6. ' ""' → logprob: -7.022785186767578
    7. '''' → logprob: -7.772785186767578
    8. 'input' → logprob: -8.647785186767578
    9. ' input' → logprob: -8.772785186767578
    10. ' ''' → logprob: -8.897785186767578

Token 19: 'ABC' (ID: 44197)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.43765580654144287
    2. ''' → logprob: -1.6876558065414429
    3. 'input' → logprob: -2.1876559257507324
    4. 'Hello' → logprob: -4.312655925750732
    5. 'Less' → logprob: -5.562655925750732
    6. '100' → logprob: -5.937655925750732
    7. '1' → logprob: -6.062655925750732
    8. '0' → logprob: -6.187655925750732
    9. '输入' → logprob: -6.437655925750732
    10. 'Congratulations' → logprob: -6.437655925750732

Token 20: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0021788119338452816
    2. '_' → logprob: -7.12717866897583
    3. '_"' → logprob: -7.25217866897583
    4. '"""' → logprob: -8.627179145812988
    5. '")' → logprob: -9.127179145812988
    6. 'def' → logprob: -9.377179145812988
    7. '"_' → logprob: -10.252179145812988
    8. '123' → logprob: -10.502179145812988
    9. '"}' → logprob: -10.502179145812988
    10. '+' → logprob: -10.627179145812988

Token 21: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.6742647886276245
    2. '<|end|>' → logprob: -1.0492647886276245
    3. 'elif' → logprob: -2.549264907836914
    4. '
' → logprob: -4.049264907836914
    5. ' else' → logprob: -4.299264907836914
    6. '   ' → logprob: -5.174264907836914
    7. ')' → logprob: -5.174264907836914
    8. '```' → logprob: -5.549264907836914
    9. '<|end|>' → logprob: -5.549264907836914
    10. '    
' → logprob: -5.924264907836914

Token 22: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.273621405242011e-05
    2. ':
' → logprob: -10.500032424926758
    3. ' :' → logprob: -12.750032424926758
    4. '   ' → logprob: -14.250032424926758
    5. ':**' → logprob: -14.375032424926758
    6. '):' → logprob: -14.625032424926758
    7. '":' → logprob: -16.375032424926758
    8. '```' → logprob: -16.625032424926758
    9. '：' → logprob: -16.875032424926758
    10. ':return' → logprob: -17.000032424926758

Token 23: '   ' (ID: 271)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2942008078098297
    2. '   ' → logprob: -1.6692007780075073
    3. ' "' → logprob: -2.794200897216797
    4. '    ' → logprob: -6.419200897216797
    5. ''' → logprob: -6.794200897216797
    6. ' output' → logprob: -7.544200897216797
    7. '<|end|>' → logprob: -8.294200897216797
    8. ' ' → logprob: -8.419200897216797
    9. '    
' → logprob: -8.669200897216797
    10. 'output' → logprob: -8.919200897216797

Token 24: ' output' (ID: 4733)
  Prédit: ' output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' output' → logprob: -0.13883230090141296
    2. 'output' (adapté à ' output') → logprob: -2.3888323307037354
    3. '   ' → logprob: -3.7638323307037354
    4. '"' → logprob: -4.263832092285156
    5. ' "' → logprob: -8.638832092285156
    6. '    ' → logprob: -9.263832092285156
    7. ''' → logprob: -9.513832092285156
    8. '```' → logprob: -9.763832092285156
    9. '	output' → logprob: -10.013832092285156
    10. '`' → logprob: -10.013832092285156

Token 25: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.006447369698435068
    2. '_' → logprob: -5.3814473152160645
    3. '_s' → logprob: -7.8814473152160645
    4. '_line' → logprob: -8.381447792053223
    5. '_number' → logprob: -8.381447792053223
    6. '_strings' → logprob: -8.381447792053223
    7. '_text' → logprob: -8.756447792053223
    8. '_str' → logprob: -9.006447792053223
    9. '_code' → logprob: -9.756447792053223
    10. '_output' → logprob: -10.006447792053223

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.013220583088696003
    2. ' +=' → logprob: -4.63822078704834
    3. '=' → logprob: -5.76322078704834
    4. ' +' → logprob: -8.51322078704834
    5. '+=' → logprob: -10.26322078704834
    6. ' ' → logprob: -10.26322078704834
    7. '+' → logprob: -10.63822078704834
    8. ' ==' → logprob: -11.76322078704834
    9. '<|end|>' → logprob: -12.26322078704834
    10. ')' → logprob: -13.51322078704834

Token 27: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.07089303433895111
    2. ' "' → logprob: -2.6958930492401123
    3. ''' → logprob: -7.070892810821533
    4. '""' → logprob: -10.320893287658691
    5. ' ' → logprob: -10.695893287658691
    6. ' '' → logprob: -10.945893287658691
    7. '"""' → logprob: -11.320893287658691
    8. ' ""' → logprob: -12.445893287658691
    9. ''"' → logprob: -13.070893287658691
    10. '`' → logprob: -13.570893287658691

Token 28: 'ABD' (ID: 193992)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.7290157079696655
    2. 'XYZ' → logprob: -0.8540157079696655
    3. 'DEF' → logprob: -2.479015827178955
    4. ' XYZ' → logprob: -5.604015827178955
    5. ' DEF' → logprob: -6.854015827178955
    6. ''' → logprob: -7.604015827178955
    7. '""' → logprob: -7.854015827178955
    8. 'def' → logprob: -7.854015827178955
    9. '"D' → logprob: -8.104015350341797
    10. '123' → logprob: -8.229015350341797

Token 29: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -2.868328920158092e-05
    2. '"
' → logprob: -12.000028610229492
    3. 'A' → logprob: -12.625028610229492
    4. 'B' → logprob: -12.750028610229492
    5. 'C' → logprob: -12.750028610229492
    6. '"`' → logprob: -13.250028610229492
    7. '"C' → logprob: -13.375028610229492
    8. '"B' → logprob: -13.375028610229492
    9. 'D' → logprob: -13.500028610229492
    10. '```' → logprob: -13.500028610229492

Token 30: 'print' (ID: 1598)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.580611526966095
    2. '<|end|>' → logprob: -1.2056114673614502
    3. 'print' → logprob: -2.20561146736145
    4. '\n' → logprob: -4.705611705780029
    5. 'output' → logprob: -4.830611705780029
    6. '```' → logprob: -5.205611705780029
    7. '\' → logprob: -6.080611705780029
    8. '<|end|>' → logprob: -6.830611705780029
    9. '#' → logprob: -6.955611705780029
    10. 'newline' → logprob: -6.955611705780029

Token 31: '(output' (ID: 22485)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04876063019037247
    2. '(output' → logprob: -3.0487606525421143
    3. '("("' → logprob: -8.923760414123535
    4. '(input' → logprob: -10.798760414123535
    5. '('' → logprob: -11.548760414123535
    6. ' (' → logprob: -12.298760414123535
    7. '()' → logprob: -13.548760414123535
    8. '(open' → logprob: -14.048760414123535
    9. 'output' → logprob: -14.798760414123535
    10. ' ' → logprob: -15.048760414123535

Token 32: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.00016480287013109773
    2. '_str' → logprob: -9.250164985656738
    3. '_' → logprob: -10.750164985656738
    4. '_s' → logprob: -11.000164985656738
    5. ')_' → logprob: -12.250164985656738
    6. '_ut' → logprob: -12.250164985656738
    7. '_strings' → logprob: -12.500164985656738
    8. '_output' → logprob: -12.500164985656738
    9. '_put' → logprob: -13.125164985656738
    10. '_number' → logprob: -13.125164985656738

Token 33: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. '))' → logprob: -15.875
    3. ' )' → logprob: -16.625
    4. '`)' → logprob: -17.0
    5. '')' → logprob: -17.125
    6. '")' → logprob: -18.125
    7. ')`' → logprob: -18.125
    8. '()' → logprob: -19.625
    9. '）' → logprob: -19.75
    10. ')
' → logprob: -19.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 31
Tokens correctement prédits (1ère position, stricte): 9
Tokens correctement prédits (1ère position, avec adaptation): 9
Tokens correctement prédits (top 10): 24
Précision stricte (1ère position): 29.03%
Précision adaptée (1ère position): 29.03%
Précision (top 10): 77.42%
================================================================================
