================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:16:40
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(1 << 25)
input_read_line = sys.stdin.readline
range_iter = range
enumerate_iter = enumerate

def to_zero_based(val):
    return int(val) - 1

def input_ints(zero_base=None):
    values = map(int, input_read_line().split())
    if zero_base is None:
        return list(values)
    else:
        return list(map(lambda elem: elem - zero_base, values))

def input_single_int():
    return int(input_read_line())

from bisect import bisect_left as bisect_l, bisect_right as bisect_r
from collections import defaultdict as def_dict

node_count = input_single_int()
node_values = input_ints()
adjacency_list = def_dict(list)
for edge_idx in range_iter(node_count - 1):
    node_u, node_v = input_ints(zero_base=1)
    adjacency_list[node_u].append(node_v)
    adjacency_list[node_v].append(node_u)

current_lis = []
result_lis_lengths = [0] * node_count

def depth_first_search(current_node, parent_node):
    node_value = node_values[current_node]
    lis_position = bisect_l(current_lis, node_value)
    did_append = False
    if lis_position == len(current_lis):
        current_lis.append(node_value)
        did_append = True
    else:
        previous_value = current_lis[lis_position]
        current_lis[lis_position] = node_value

    result_lis_lengths[current_node] = len(current_lis)
    for neighbor_node in adjacency_list[current_node]:
        if neighbor_node == parent_node:
            continue
        depth_first_search(neighbor_node, current_node)

    if did_append:
        del current_lis[lis_position]
    else:
        current_lis[lis_position] = previous_value

depth_first_search(0, -1)
print(*result_lis_lengths, sep='\n')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29996567964553833
    2. '\n' → logprob: -1.5499656200408936
    3. '<|end|>' → logprob: -3.6749656200408936
    4. '\' → logprob: -4.924965858459473
    5. 'import' → logprob: -5.674965858459473
    6. 'newline' → logprob: -5.799965858459473
    7. '<|end|>' → logprob: -6.049965858459473
    8. '
' → logprob: -6.924965858459473
    9. '```' → logprob: -6.924965858459473
    10. '' → logprob: -7.549965858459473

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -2.963691804325208e-05
    2. ' .' → logprob: -11.875029563903809
    3. '[' → logprob: -12.000029563903809
    4. '.import' → logprob: -13.250029563903809
    5. '."""' → logprob: -13.625029563903809
    6. '.`' → logprob: -13.750029563903809
    7. '.​' → logprob: -14.000029563903809
    8. '.user' → logprob: -14.125029563903809
    9. '.readline' → logprob: -14.250029563903809
    10. '.]' → logprob: -14.250029563903809

Token 5: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trace' → logprob: -0.3824406564235687
    2. 't' → logprob: -2.5074405670166016
    3. '_' → logprob: -2.6324405670166016
    4. 'set' → logprob: -3.2574405670166016
    5. '_trace' → logprob: -3.3824405670166016
    6. 'x' → logprob: -3.7574405670166016
    7. 's' → logprob: -4.507440567016602
    8. 'default' → logprob: -5.007440567016602
    9. 'sys' → logprob: -5.132440567016602
    10. 'ex' → logprob: -5.507440567016602

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0014520210679620504
    2. 'ursive' → logprob: -6.7514519691467285
    3. 'ur' → logprob: -9.376452445983887
    4. 'urs' → logprob: -10.001452445983887
    5. '_' → logprob: -10.126452445983887
    6. 'limit' → logprob: -10.376452445983887
    7. '_limit' → logprob: -11.001452445983887
    8. 'urf' → logprob: -11.251452445983887
    9. 't' → logprob: -11.626452445983887
    10. 'ursor' → logprob: -11.876452445983887

Token 7: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.4403606057167053
    2. 'limit' → logprob: -1.0653605461120605
    3. '_depth' → logprob: -4.5653605461120605
    4. 'depth' → logprob: -7.5653605461120605
    5. '_' → logprob: -8.315361022949219
    6. '_rate' → logprob: -10.065361022949219
    7. 'lim' → logprob: -10.190361022949219
    8. '_factor' → logprob: -10.440361022949219
    9. '(' → logprob: -10.565361022949219
    10. '_stack' → logprob: -10.690361022949219

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.694766489090398e-05
    2. '(
' → logprob: -10.500066757202148
    3. ' (' → logprob: -11.375066757202148
    4. '40' → logprob: -11.875066757202148
    5. '(

' → logprob: -12.500066757202148
    6. '((' → logprob: -12.750066757202148
    7. '```' → logprob: -12.750066757202148
    8. '(.' → logprob: -13.000066757202148
    9. '('' → logprob: -13.125066757202148
    10. '(()' → logprob: -13.250066757202148

Token 9: '1' (ID: 16)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.3134278953075409
    2. '100' → logprob: -1.3134279251098633
    3. '300' → logprob: -9.938427925109863
    4. '500' → logprob: -9.938427925109863
    5. ' ' → logprob: -10.688427925109863
    6. '150' → logprob: -11.063427925109863
    7. '999' → logprob: -11.188427925109863
    8. '200' → logprob: -11.563427925109863
    9. '1' → logprob: -12.938427925109863
    10. '   ' → logprob: -13.813427925109863

Token 10: ' <<' (ID: 2256)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.475796103477478
    2. '000' → logprob: -1.225796103477478
    3. '00' → logprob: -2.4757962226867676
    4. ')' → logprob: -7.850796222686768
    5. '))' → logprob: -8.85079574584961
    6. '024' → logprob: -9.60079574584961
    7. '5' → logprob: -9.72579574584961
    8. '8' → logprob: -9.72579574584961
    9. '05' → logprob: -10.10079574584961
    10. '03' → logprob: -10.47579574584961

Token 11: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5712863802909851
    2. '30' → logprob: -0.9462863802909851
    3. '20' → logprob: -3.44628643989563
    4. '25' → logprob: -4.946286201477051
    5. '31' → logprob: -5.446286201477051
    6. '26' → logprob: -6.821286201477051
    7. '29' → logprob: -6.946286201477051
    8. '10' → logprob: -7.446286201477051
    9. '15' → logprob: -7.696286201477051
    10. '32' → logprob: -8.82128620147705

Token 12: '25' (ID: 1161)
  Prédit: '25'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '25' → logprob: -1.003705620765686
    2. '20' → logprob: -1.128705620765686
    3. '30' → logprob: -1.253705620765686
    4. '15' → logprob: -4.1287055015563965
    5. '10' → logprob: -4.8787055015563965
    6. '12' → logprob: -8.003705978393555
    7. '29' → logprob: -8.628705978393555
    8. '31' → logprob: -8.753705978393555
    9. '27' → logprob: -10.003705978393555
    10. '16' → logprob: -10.253705978393555

Token 13: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.054500666621607e-06
    2. ' )' → logprob: -13.62500286102295
    3. '))' → logprob: -14.25000286102295
    4. ')
' → logprob: -14.62500286102295
    5. '')' → logprob: -16.250003814697266
    6. '**' → logprob: -16.250003814697266
    7. '*' → logprob: -16.500003814697266
    8. '`)' → logprob: -16.625003814697266
    9. '```' → logprob: -16.750003814697266
    10. '(' → logprob: -16.875003814697266

Token 14: 'input' (ID: 2586)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6498148441314697
    2. '\' → logprob: -1.7748148441314697
    3. '
' → logprob: -1.7748148441314697
    4. '```' → logprob: -3.0248148441314697
    5. '' → logprob: -3.7748148441314697
    6. '(' → logprob: -4.274814605712891
    7. '(
' → logprob: -4.524814605712891
    8. '

' → logprob: -4.899814605712891
    9. '
' → logprob: -5.024814605712891
    10. ')' → logprob: -5.024814605712891

Token 15: '_read' (ID: 14291)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0013490456622093916
    2. '40' → logprob: -8.251349449157715
    3. '('' → logprob: -8.626349449157715
    4. '```' → logprob: -8.626349449157715
    5. '()' → logprob: -8.876349449157715
    6. '.' → logprob: -9.251349449157715
    7. ''' → logprob: -9.376349449157715
    8. '"' → logprob: -9.626349449157715
    9. ')' → logprob: -9.626349449157715
    10. '("("' → logprob: -10.001349449157715

Token 16: '_line' (ID: 14418)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.39176782965660095
    2. '(' → logprob: -1.5167678594589233
    3. 'er' → logprob: -2.766767740249634
    4. ')' → logprob: -3.766767740249634
    5. 'line' → logprob: -5.266767978668213
    6. '=' → logprob: -5.641767978668213
    7. 'r' → logprob: -6.016767978668213
    8. ' =' → logprob: -6.266767978668213
    9. '_line' → logprob: -6.641767978668213
    10. 's' → logprob: -7.141767978668213

Token 17: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2097395360469818
    2. 'r' → logprob: -2.5847394466400146
    3. '=' → logprob: -2.7097394466400146
    4. 's' → logprob: -3.7097394466400146
    5. '(' → logprob: -4.334739685058594
    6. ' =' → logprob: -5.084739685058594
    7. ')' → logprob: -6.084739685058594
    8. '```' → logprob: -8.459739685058594
    9. '_' → logprob: -8.959739685058594
    10. 'line' → logprob: -9.209739685058594

Token 18: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5398255586624146
    2. ' input' → logprob: -1.5398255586624146
    3. ' sys' → logprob: -2.289825439453125
    4. 'sys' → logprob: -2.289825439453125
    5. ' lambda' → logprob: -9.414825439453125
    6. 'lambda' → logprob: -9.539825439453125
    7. '=sys' → logprob: -12.789825439453125
    8. ' ' → logprob: -13.039825439453125
    9. '	sys' → logprob: -13.664825439453125
    10. 'raw' → logprob: -14.164825439453125

Token 19: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.02766256593167782
    2. '.' → logprob: -3.777662515640259
    3. '.stdout' → logprob: -6.027662754058838
    4. ' .' → logprob: -7.027662754058838
    5. '.readline' → logprob: -7.527662754058838
    6. '.argv' → logprob: -7.902662754058838
    7. '.input' → logprob: -9.52766227722168
    8. '.std' → logprob: -10.27766227722168
    9. '.path' → logprob: -11.02766227722168
    10. '.stderr' → logprob: -11.15266227722168

Token 20: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0005013240152038634
    2. '.' → logprob: -8.25050163269043
    3. '.read' → logprob: -8.37550163269043
    4. '.buffer' → logprob: -12.25050163269043
    5. '.readlines' → logprob: -12.62550163269043
    6. 'read' → logprob: -14.12550163269043
    7. '```' → logprob: -15.00050163269043
    8. 'buffer' → logprob: -16.12550163269043
    9. ' .' → logprob: -16.50050163269043
    10. ' readline' → logprob: -16.75050163269043

Token 21: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8326337933540344
    2. '(' → logprob: -1.3326337337493896
    3. 'def' → logprob: -1.8326337337493896
    4. '
' → logprob: -3.3326337337493896
    5. '(
' → logprob: -3.4576337337493896
    6. '\n' → logprob: -4.582633972167969
    7. 'while' → logprob: -4.582633972167969
    8. ')' → logprob: -4.832633972167969
    9. '()
' → logprob: -4.957633972167969
    10. '\' → logprob: -5.207633972167969

Token 22: 'range' (ID: 20967)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02165810763835907
    2. 'n' → logprob: -5.021657943725586
    3. 'for' → logprob: -6.021657943725586
    4. '
' → logprob: -6.146657943725586
    5. '(n' → logprob: -6.521657943725586
    6. '()' → logprob: -6.521657943725586
    7. '\' → logprob: -6.521657943725586
    8. 'while' → logprob: -6.771657943725586
    9. '\n' → logprob: -7.021657943725586
    10. '(' → logprob: -7.271657943725586

Token 23: '_iter' (ID: 27043)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007055217283777893
    2. '(
' → logprob: -8.12570571899414
    3. '<|end|>' → logprob: -8.62570571899414
    4. ' (' → logprob: -9.50070571899414
    5. '(

' → logprob: -10.25070571899414
    6. '(n' → logprob: -10.50070571899414
    7. '40' → logprob: -11.00070571899414
    8. '```' → logprob: -11.25070571899414
    9. ')' → logprob: -11.75070571899414
    10. '((' → logprob: -12.00070571899414

Token 24: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02632259577512741
    2. ' =' → logprob: -4.401322364807129
    3. '=' → logprob: -5.026322364807129
    4. 'r' → logprob: -5.276322364807129
    5. 'ator' → logprob: -7.151322364807129
    6. ')' → logprob: -8.526322364807129
    7. ' (' → logprob: -8.651322364807129
    8. 's' → logprob: -9.276322364807129
    9. '()' → logprob: -9.401322364807129
    10. '```' → logprob: -9.401322364807129

Token 25: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10060452669858932
    2. ' range' → logprob: -2.35060453414917
    3. ' iter' → logprob: -9.100604057312012
    4. 'iter' → logprob: -9.350604057312012
    5. ' xrange' → logprob: -9.850604057312012
    6. 'int' → logprob: -9.975604057312012
    7. ' ' → logprob: -10.600604057312012
    8. 'lambda' → logprob: -10.850604057312012
    9. '(range' → logprob: -10.850604057312012
    10. '10' → logprob: -11.475604057312012

Token 26: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.031533919274806976
    2. 'def' → logprob: -4.656533718109131
    3. '(
' → logprob: -4.906533718109131
    4. '\' → logprob: -5.781533718109131
    5. '(n' → logprob: -6.031533718109131
    6. '\n' → logprob: -6.281533718109131
    7. '
' → logprob: -6.531533718109131
    8. ')' → logprob: -6.531533718109131
    9. '_' → logprob: -7.906533718109131
    10. ' (' → logprob: -7.906533718109131

Token 27: 'enumer' (ID: 90985)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15695223212242126
    2. '(' → logprob: -2.031952142715454
    3. '_' → logprob: -5.656952381134033
    4. '=' → logprob: -6.156952381134033
    5. 'for' → logprob: -6.406952381134033
    6. '(
' → logprob: -6.656952381134033
    7. ')' → logprob: -6.656952381134033
    8. 'import' → logprob: -7.656952381134033
    9. '(n' → logprob: -7.781952381134033
    10. ',' → logprob: -7.906952381134033

Token 28: 'ate' (ID: 379)
  Prédit: 'ate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -7.896309739408025e-07
    2. 'ator' → logprob: -14.125000953674316
    3. 'at' → logprob: -18.375
    4. 'ATE' → logprob: -18.625
    5. 'te' → logprob: -19.125
    6. ' ate' → logprob: -19.375
    7. 'a' → logprob: -19.875
    8. 'ater' → logprob: -19.875
    9. 't' → logprob: -20.0
    10. 'ated' → logprob: -20.125

Token 29: '_iter' (ID: 27043)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006597769097425044
    2. ' (' → logprob: -7.875659942626953
    3. '<|end|>' → logprob: -8.875659942626953
    4. '(
' → logprob: -10.125659942626953
    5. '<|end|>' → logprob: -11.125659942626953
    6. '()' → logprob: -11.250659942626953
    7. ' ' → logprob: -11.625659942626953
    8. ')' → logprob: -11.750659942626953
    9. '(user' → logprob: -11.875659942626953
    10. ',' → logprob: -12.125659942626953

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6672549843788147
    2. '(' → logprob: -1.41725492477417
    3. '=' → logprob: -1.41725492477417
    4. ' (' → logprob: -6.41725492477417
    5. ' ' → logprob: -9.167255401611328
    6. '_' → logprob: -9.667255401611328
    7. ' =(' → logprob: -9.792255401611328
    8. ')' → logprob: -10.167255401611328
    9. '("="' → logprob: -10.917255401611328
    10. '  ' → logprob: -11.042255401611328

Token 31: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.08517233282327652
    2. ' enumerate' → logprob: -2.710172414779663
    3. 'range' → logprob: -4.335172176361084
    4. ' range' → logprob: -6.210172176361084
    5. ' enumer' → logprob: -12.585172653198242
    6. '```' → logprob: -13.585172653198242
    7. 'enum' → logprob: -13.710172653198242
    8. '(range' → logprob: -13.835172653198242
    9. ' ' → logprob: -13.960172653198242
    10. 'iter' → logprob: -14.335172653198242

Token 32: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12051046639680862
    2. '
' → logprob: -3.1205105781555176
    3. '\' → logprob: -3.6205105781555176
    4. '\n' → logprob: -4.495510578155518
    5. '(' → logprob: -4.995510578155518
    6. '' → logprob: -5.120510578155518
    7. '

' → logprob: -5.745510578155518
    8. '```' → logprob: -5.995510578155518
    9. 'import' → logprob: -6.370510578155518
    10. '()' → logprob: -6.745510578155518

Token 33: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.000614624354057014
    2. '(' → logprob: -8.625614166259766
    3. 'n' → logprob: -9.000614166259766
    4. 'class' → logprob: -9.125614166259766
    5. 'd' → logprob: -10.000614166259766
    6. 'de' → logprob: -10.375614166259766
    7. ')' → logprob: -10.875614166259766
    8. '#' → logprob: -11.125614166259766
    9. '(n' → logprob: -11.125614166259766
    10. 'a' → logprob: -11.625614166259766

Token 34: ' to' (ID: 316)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.3138517737388611
    2. ' ' → logprob: -2.563851833343506
    3. ' dfs' → logprob: -2.563851833343506
    4. ' fibonacci' → logprob: -2.688851833343506
    5. ' main' → logprob: -3.938851833343506
    6. ' factor' → logprob: -4.188851833343506
    7. ' fib' → logprob: -5.813851833343506
    8. ' solve' → logprob: -5.938851833343506
    9. ' calculate' → logprob: -6.688851833343506
    10. ' my' → logprob: -6.813851833343506

Token 35: '_zero' (ID: 53468)
  Prédit: 'ken'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ken' → logprob: -0.7196282148361206
    2. '_int' → logprob: -0.9696282148361206
    3. '_lower' → logprob: -3.09462833404541
    4. '_str' → logprob: -3.46962833404541
    5. '_' → logprob: -4.34462833404541
    6. 'int' → logprob: -4.96962833404541
    7. '_k' → logprob: -5.09462833404541
    8. '_list' → logprob: -5.46962833404541
    9. '_base' → logprob: -5.71962833404541
    10. '_c' → logprob: -5.84462833404541

Token 36: '_based' (ID: 167300)
  Prédit: '_based'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_based' → logprob: -0.0619097538292408
    2. '_base' → logprob: -3.5619096755981445
    3. '_index' → logprob: -4.4369096755981445
    4. '_one' → logprob: -4.9369096755981445
    5. '_b' → logprob: -5.6869096755981445
    6. 'based' → logprob: -5.6869096755981445
    7. '_' → logprob: -5.6869096755981445
    8. '-based' → logprob: -6.9369096755981445
    9. '_center' → logprob: -8.561909675598145
    10. '_lower' → logprob: -8.686909675598145

Token 37: '(val' (ID: 17391)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07046996057033539
    2. '(_' → logprob: -3.320469856262207
    3. '_indices' → logprob: -4.445469856262207
    4. '(index' → logprob: -5.320469856262207
    5. '(indices' → logprob: -5.445469856262207
    6. '(idx' → logprob: -6.195469856262207
    7. '_index' → logprob: -6.820469856262207
    8. '(_)' → logprob: -7.070469856262207
    9. '_idx' → logprob: -7.195469856262207
    10. '_' → logprob: -7.195469856262207

Token 38: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007829454843886197
    2. ')' → logprob: -7.2507829666137695
    3. ' ):' → logprob: -10.00078296661377
    4. '):
' → logprob: -11.00078296661377
    5. ':' → logprob: -12.12578296661377
    6. ',' → logprob: -13.25078296661377
    7. '   ' → logprob: -14.00078296661377
    8. ' ' → logprob: -14.25078296661377
    9. '-' → logprob: -14.25078296661377
    10. ' )' → logprob: -15.37578296661377

Token 39: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009234054014086723
    2. ':' → logprob: -5.6342339515686035
    3. ' return' → logprob: -6.3842339515686035
    4. '    ' → logprob: -6.5092339515686035
    5. ':return' → logprob: -6.6342339515686035
    6. 'return' → logprob: -7.2592339515686035
    7. '(' → logprob: -8.259234428405762
    8. '	return' → logprob: -10.009234428405762
    9. ' ' → logprob: -10.134234428405762
    10. ' :' → logprob: -10.884234428405762

Token 40: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.07479319721460342
    2. 'return' (adapté à ' return') → logprob: -2.6997931003570557
    3. '   ' → logprob: -5.449793338775635
    4. '    ' → logprob: -7.574793338775635
    5. ' if' → logprob: -11.074792861938477
    6. ' val' → logprob: -12.324792861938477
    7. ' ' → logprob: -12.949792861938477
    8. '    
' → logprob: -13.324792861938477
    9. '	return' → logprob: -13.449792861938477
    10. 'eturn' → logprob: -13.699792861938477

Token 41: ' int' (ID: 677)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.00975739024579525
    2. 'val' → logprob: -4.6347575187683105
    3. ' int' → logprob: -14.759757041931152
    4. '0' → logprob: -15.509757041931152
    5. '	val' → logprob: -15.509757041931152
    6. ' ' → logprob: -15.634757041931152
    7. '_val' → logprob: -15.759757041931152
    8. '(val' → logprob: -16.25975799560547
    9. '[val' → logprob: -16.50975799560547
    10. ' max' → logprob: -17.00975799560547

Token 42: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.20142970979213715
    2. '(' → logprob: -1.7014297246932983
    3. '((' → logprob: -11.57642936706543
    4. '(value' → logprob: -13.32642936706543
    5. ' (' → logprob: -13.45142936706543
    6. '(x' → logprob: -14.57642936706543
    7. '()' → logprob: -14.57642936706543
    8. '[val' → logprob: -14.95142936706543
    9. '('' → logprob: -15.20142936706543
    10. '(vals' → logprob: -15.20142936706543

Token 43: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005670914542861283
    2. ' )' → logprob: -7.8755669593811035
    3. ')-' → logprob: -9.125567436218262
    4. '-' → logprob: -9.750567436218262
    5. ' -' → logprob: -11.125567436218262
    6. '-)' → logprob: -13.000567436218262
    7. '[' → logprob: -14.625567436218262
    8. '())' → logprob: -14.750567436218262
    9. '()' → logprob: -14.750567436218262
    10. '   ' → logprob: -14.875567436218262

Token 44: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6357869505882263
    2. ' -' → logprob: -0.7607869505882263
    3. ' ' → logprob: -6.260787010192871
    4. '()-' → logprob: -7.635787010192871
    5. '()' → logprob: -7.885787010192871
    6. '(' → logprob: -8.885787010192871
    7. '[' → logprob: -9.010787010192871
    8. '0' → logprob: -10.760787010192871
    9. '  ' → logprob: -11.010787010192871
    10. ')' → logprob: -11.385787010192871

Token 45: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -18.62500762939453
    4. '```' → logprob: -19.75000762939453
    5. '<|end|>' → logprob: -20.87500762939453
    6. '１' → logprob: -21.12500762939453
    7. '  ' → logprob: -21.25000762939453
    8. '0' → logprob: -21.75000762939453
    9. '۱' → logprob: -22.00000762939453
    10. '১' → logprob: -22.25000762939453

Token 46: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '   ' → logprob: -21.0
    4. '```' → logprob: -21.75
    5. '１' → logprob: -21.875
    6. '১' → logprob: -22.875
    7. '१' → logprob: -23.375
    8. '  ' → logprob: -23.375
    9. '۱' → logprob: -23.5
    10. '0' → logprob: -23.5

Token 47: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6754129528999329
    2. 'def' → logprob: -0.8004129528999329
    3. '

' → logprob: -3.675412893295288
    4. '\n' → logprob: -4.675413131713867
    5. 'newline' → logprob: -6.175413131713867
    6. '<|end|>' → logprob: -6.175413131713867
    7. '\' → logprob: -6.425413131713867
    8. '```' → logprob: -6.925413131713867
    9. '#' → logprob: -9.175413131713867
    10. '
' → logprob: -9.550413131713867

Token 48: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0008430993184447289
    2. '
' → logprob: -7.750843048095703
    3. 'class' → logprob: -8.875843048095703
    4. '\' → logprob: -9.000843048095703
    5. '#' → logprob: -10.125843048095703
    6. 'd' → logprob: -10.375843048095703
    7. '\n' → logprob: -10.500843048095703
    8. 'de' → logprob: -11.375843048095703
    9. '```' → logprob: -11.375843048095703
    10. 'n' → logprob: -11.500843048095703

Token 49: ' input' (ID: 3422)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.07814424484968185
    2. ' solve' → logprob: -2.7031443119049072
    3. ' dfs' → logprob: -5.578144073486328
    4. ' read' → logprob: -6.453144073486328
    5. ' factorial' → logprob: -7.203144073486328
    6. ' input' → logprob: -7.703144073486328
    7. ' process' → logprob: -8.703144073486328
    8. ' count' → logprob: -8.828144073486328
    9. ' parse' → logprob: -8.828144073486328
    10. ' bfs' → logprob: -8.953144073486328

Token 50: '_int' (ID: 12285)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.45698365569114685
    2. '():' → logprob: -1.0819836854934692
    3. '_line' → logprob: -4.08198356628418
    4. '_' → logprob: -4.58198356628418
    5. '(' → logprob: -8.95698356628418
    6. '_read' → logprob: -9.20698356628418
    7. '():
' → logprob: -9.45698356628418
    8. ' ()' → logprob: -9.83198356628418
    9. '_data' → logprob: -9.95698356628418
    10. '_lines' → logprob: -9.95698356628418

Token 51: 's' (ID: 82)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.1128806546330452
    2. '()' → logprob: -2.2378807067871094
    3. '():
' → logprob: -10.61288070678711
    4. 's' → logprob: -11.48788070678711
    5. ' ()' → logprob: -12.48788070678711
    6. '()">' → logprob: -12.73788070678711
    7. '()>' → logprob: -13.11288070678711
    8. ' ():' → logprob: -13.11288070678711
    9. '(' → logprob: -13.23788070678711
    10. '()`' → logprob: -13.36288070678711

Token 52: '(z' (ID: 27674)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -5.538490950129926e-05
    2. '():
' → logprob: -10.500055313110352
    3. ' ():' → logprob: -10.750055313110352
    4. '()' → logprob: -12.000055313110352
    5. '():

' → logprob: -16.37505531311035
    6. ' ()' → logprob: -16.87505531311035
    7. '(' → logprob: -16.87505531311035
    8. '().' → logprob: -18.00005531311035
    9. '():
' → logprob: -18.75005531311035
    10. '()*' → logprob: -18.87505531311035

Token 53: 'ero' (ID: 2464)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06478100270032883
    2. ')' → logprob: -3.1897809505462646
    3. 'ip' → logprob: -5.189781188964844
    4. '()' → logprob: -5.689781188964844
    5. '):
' → logprob: -5.939781188964844
    6. 'ine' → logprob: -6.439781188964844
    7. '():' → logprob: -6.939781188964844
    8. 'iz' → logprob: -7.064781188964844
    9. '   ' → logprob: -7.189781188964844
    10. 'ey' → logprob: -7.439781188964844

Token 54: '_base' (ID: 17096)
  Prédit: '_based'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_based' → logprob: -0.000500370399095118
    2. '_' → logprob: -7.750500202178955
    3. 'based' → logprob: -10.375500679016113
    4. '=True' → logprob: -11.750500679016113
    5. '_index' → logprob: -11.750500679016113
    6. '_to' → logprob: -11.875500679016113
    7. ')' → logprob: -12.750500679016113
    8. '_base' → logprob: -12.875500679016113
    9. '=False' → logprob: -13.250500679016113
    10. '=' → logprob: -13.375500679016113

Token 55: '=None' (ID: 12783)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7478870749473572
    2. '):' → logprob: -0.8728870749473572
    3. '=False' → logprob: -2.997887134552002
    4. '=True' → logprob: -3.622887134552002
    5. '=' → logprob: -3.747887134552002
    6. '):
' → logprob: -4.997887134552002
    7. 'ed' → logprob: -6.622887134552002
    8. ')' → logprob: -8.122886657714844
    9. '=None' → logprob: -8.872886657714844
    10. 'ased' → logprob: -9.247886657714844

Token 56: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00027349460287950933
    2. '):
' → logprob: -9.375273704528809
    3. ')' → logprob: -9.625273704528809
    4. '=' → logprob: -9.625273704528809
    5. ',' → logprob: -10.625273704528809
    6. '=None' → logprob: -10.750273704528809
    7. ' ):' → logprob: -12.250273704528809
    8. '):
' → logprob: -13.500273704528809
    9. '():' → logprob: -13.625273704528809
    10. '   ' → logprob: -14.125273704528809

Token 57: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00906358752399683
    2. '   ' → logprob: -5.009063720703125
    3. '()' → logprob: -6.634063720703125
    4. '():
' → logprob: -7.634063720703125
    5. '(' → logprob: -7.884063720703125
    6. ' ():' → logprob: -9.509063720703125
    7. ':' → logprob: -10.009063720703125
    8. '().' → logprob: -10.884063720703125
    9. ' ()' → logprob: -12.384063720703125
    10. '()[' → logprob: -12.509063720703125

Token 58: ' values' (ID: 4824)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8069729804992676
    2. ' return' → logprob: -1.4319729804992676
    3. ' line' → logprob: -2.6819729804992676
    4. ' vals' → logprob: -2.6819729804992676
    5. ' data' → logprob: -3.1819729804992676
    6. 'data' → logprob: -3.4319729804992676
    7. 'line' → logprob: -3.5569729804992676
    8. 'return' → logprob: -3.8069729804992676
    9. ' lst' → logprob: -4.556972980499268
    10. ' values' → logprob: -4.806972980499268

Token 59: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3133173882961273
    2. '=' → logprob: -1.3133174180984497
    3. '   ' → logprob: -10.31331729888916
    4. ' ' → logprob: -10.93831729888916
    5. '    ' → logprob: -13.81331729888916
    6. '＝' → logprob: -13.81331729888916
    7. '  ' → logprob: -14.06331729888916
    8. '=[]' → logprob: -14.81331729888916
    9. ',' → logprob: -15.43831729888916
    10. '()' → logprob: -15.68831729888916

Token 60: ' map' (ID: 4014)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.06580160558223724
    2. ' list' → logprob: -2.9408016204833984
    3. 'map' → logprob: -4.565801620483398
    4. ' map' → logprob: -7.940801620483398
    5. 'input' → logprob: -9.565801620483398
    6. '[' → logprob: -11.065801620483398
    7. '[list' → logprob: -11.815801620483398
    8. '[input' → logprob: -12.690801620483398
    9. ' input' → logprob: -13.315801620483398
    10. '   ' → logprob: -14.190801620483398

Token 61: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0015062900492921472
    2. '(' → logprob: -6.501506328582764
    3. 'int' → logprob: -13.376505851745605
    4. '(
' → logprob: -13.876505851745605
    5. '<int' → logprob: -14.376505851745605
    6. '(lambda' → logprob: -15.001505851745605
    7. '=int' → logprob: -15.626505851745605
    8. '(

' → logprob: -16.126506805419922
    9. ',int' → logprob: -16.376506805419922
    10. '()' → logprob: -16.376506805419922

Token 62: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03975110128521919
    2. ',input' → logprob: -3.2897510528564453
    3. 'input' → logprob: -6.539751052856445
    4. '(input' → logprob: -8.539751052856445
    5. ' ,' → logprob: -10.414751052856445
    6. ' input' → logprob: -10.914751052856445
    7. ',(' → logprob: -11.914751052856445
    8. '(' → logprob: -12.164751052856445
    9. '_input' → logprob: -13.539751052856445
    10. ' (' → logprob: -13.539751052856445

Token 63: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.04870636388659477
    2. ' input' → logprob: -3.048706293106079
    3. '   ' → logprob: -9.7987060546875
    4. ')' → logprob: -9.9237060546875
    5. '(input' → logprob: -11.9237060546875
    6. ',input' → logprob: -12.9237060546875
    7. '	input' → logprob: -13.1737060546875
    8. ' ' → logprob: -13.6737060546875
    9. '_input' → logprob: -15.0487060546875
    10. '=input' → logprob: -15.2987060546875

Token 64: '_read' (ID: 14291)
  Prédit: '_read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_read' → logprob: -0.000454506283858791
    2. '().' → logprob: -8.000454902648926
    3. '()' → logprob: -9.750454902648926
    4. '_reads' → logprob: -10.000454902648926
    5. 'read' → logprob: -11.750454902648926
    6. '_' → logprob: -13.750454902648926
    7. '_reader' → logprob: -14.125454902648926
    8. '(' → logprob: -14.375454902648926
    9. ')_' → logprob: -14.375454902648926
    10. '_READ' → logprob: -14.625454902648926

Token 65: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.07912749797105789
    2. 'line' → logprob: -2.704127550125122
    3. 'ine' → logprob: -4.704127311706543
    4. 'e' → logprob: -9.954127311706543
    5. 'Line' → logprob: -11.204127311706543
    6. '().' → logprob: -12.079127311706543
    7. '_LINE' → logprob: -12.079127311706543
    8. '()' → logprob: -12.204127311706543
    9. 'ne' → logprob: -12.704127311706543
    10. ')' → logprob: -13.204127311706543

Token 66: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.810037742368877e-05
    2. '()' → logprob: -10.250038146972656
    3. ' ().' → logprob: -12.875038146972656
    4. ')' → logprob: -16.750038146972656
    5. '())' → logprob: -17.250038146972656
    6. '()
' → logprob: -17.625038146972656
    7. ' ' → logprob: -18.125038146972656
    8. ' ()' → logprob: -19.000038146972656
    9. '()?.' → logprob: -19.375038146972656
    10. '(' → logprob: -19.500038146972656

Token 67: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.02332921512424946
    2. 'strip' → logprob: -3.773329257965088
    3. 'rstrip' → logprob: -9.52332878112793
    4. ' split' → logprob: -11.52332878112793
    5. ' strip' → logprob: -14.77332878112793
    6. '(split' → logprob: -15.52332878112793
    7. 'spl' → logprob: -16.77332878112793
    8. ' ' → logprob: -17.14832878112793
    9. ')' → logprob: -17.27332878112793
    10. 's' → logprob: -18.02332878112793

Token 68: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.009840610437095165
    2. ')' → logprob: -5.134840488433838
    3. '()' → logprob: -5.884840488433838
    4. '()))' → logprob: -7.009840488433838
    5. '))' → logprob: -9.259840965270996
    6. '())
' → logprob: -9.384840965270996
    7. '(' → logprob: -10.259840965270996
    8. '(),' → logprob: -13.884840965270996
    9. '()
' → logprob: -14.009840965270996
    10. '()))
' → logprob: -14.134840965270996

Token 69: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8007044792175293
    2. '   ' → logprob: -0.8007044792175293
    3. '    
' → logprob: -3.1757044792175293
    4. ')' → logprob: -3.3007044792175293
    5. ' if' → logprob: -5.425704479217529
    6. ' 
' → logprob: -5.550704479217529
    7. ' ' → logprob: -5.925704479217529
    8. '  
' → logprob: -6.175704479217529
    9. 'return' → logprob: -6.425704479217529
    10. 'if' → logprob: -6.550704479217529

Token 70: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2885439097881317
    2. '   ' → logprob: -1.663543939590454
    3. 'if' (adapté à ' if') → logprob: -2.913543939590454
    4. 'values' → logprob: -5.788543701171875
    5. ' return' → logprob: -6.663543701171875
    6. ' values' → logprob: -6.913543701171875
    7. ' ' → logprob: -7.538543701171875
    8. 'return' → logprob: -7.663543701171875
    9. '
' → logprob: -9.163543701171875
    10. ' for' → logprob: -9.663543701171875

Token 71: ' zero' (ID: 12421)
  Prédit: ' zero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zero' → logprob: -0.07890795916318893
    2. 'zero' → logprob: -2.5789079666137695
    3. ' not' → logprob: -11.20390796661377
    4. ' ' → logprob: -12.70390796661377
    5. 'not' → logprob: -14.20390796661377
    6. '(z' → logprob: -15.70390796661377
    7. 'z' → logprob: -15.95390796661377
    8. ' zer' → logprob: -16.203907012939453
    9. ' ' → logprob: -16.453907012939453
    10. '   ' → logprob: -16.578907012939453

Token 72: '_base' (ID: 17096)
  Prédit: '_base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_base' → logprob: -0.0040831477381289005
    2. '_based' → logprob: -5.504083156585693
    3. '_basis' → logprob: -13.004082679748535
    4. 'based' → logprob: -13.504082679748535
    5. '_' → logprob: -14.879082679748535
    6. '-based' → logprob: -15.629082679748535
    7. '_BASE' → logprob: -15.629082679748535
    8. '_bas' → logprob: -15.754082679748535
    9. '_Base' → logprob: -16.75408363342285
    10. '-base' → logprob: -16.87908363342285

Token 73: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.10316454619169235
    2. ':' → logprob: -2.3531644344329834
    3. 'is' → logprob: -6.6031646728515625
    4. '==' → logprob: -6.9781646728515625
    5. '):' → logprob: -7.8531646728515625
    6. ')' → logprob: -8.603164672851562
    7. ' ==' → logprob: -9.978164672851562
    8. ' ' → logprob: -11.728164672851562
    9. ' in' → logprob: -11.728164672851562
    10. '=' → logprob: -11.978164672851562

Token 74: ' None' (ID: 4662)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.9853878617286682
    2. 'None' → logprob: -1.1103878021240234
    3. 'not' → logprob: -1.3603878021240234
    4. ' None' → logprob: -3.2353878021240234
    5. 'True' → logprob: -6.735387802124023
    6. ' True' → logprob: -9.235387802124023
    7. '   ' → logprob: -10.235387802124023
    8. 'Not' → logprob: -10.735387802124023
    9. ' ' → logprob: -11.360387802124023
    10. '	not' → logprob: -12.235387802124023

Token 75: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002251125843031332
    2. ':
' → logprob: -8.625225067138672
    3. ':return' → logprob: -10.375225067138672
    4. ' :' → logprob: -11.750225067138672
    5. '):' → logprob: -12.250225067138672
    6. ' or' → logprob: -13.625225067138672
    7. ',' → logprob: -16.250225067138672
    8. ')' → logprob: -16.375225067138672
    9. '   ' → logprob: -16.625225067138672
    10. ':

' → logprob: -17.250225067138672

Token 76: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19882412254810333
    2. '       ' → logprob: -1.823824167251587
    3. '   ' → logprob: -4.823823928833008
    4. ':
' → logprob: -4.948823928833008
    5. ':return' → logprob: -5.698823928833008
    6. '):' → logprob: -8.823823928833008
    7. ' or' → logprob: -9.823823928833008
    8. ',' → logprob: -10.323823928833008
    9. 'return' → logprob: -10.698823928833008
    10. ' :' → logprob: -10.698823928833008

Token 77: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.1941760778427124
    2. '       ' → logprob: -1.3191760778427124
    3. 'return' (adapté à ' return') → logprob: -1.3191760778427124
    4. '   ' → logprob: -1.8191760778427124
    5. '    ' → logprob: -9.444175720214844
    6. '           ' → logprob: -10.444175720214844
    7. '	return' → logprob: -10.569175720214844
    8. ' ' → logprob: -10.819175720214844
    9. '        ' → logprob: -11.819175720214844
    10. '     ' → logprob: -12.069175720214844

Token 78: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.5760622620582581
    2. ' list' → logprob: -0.8260622620582581
    3. 'values' → logprob: -9.451062202453613
    4. ' values' → logprob: -10.576062202453613
    5. ' tuple' → logprob: -11.701062202453613
    6. '[list' → logprob: -12.576062202453613
    7. 'tuple' → logprob: -12.826062202453613
    8. '   ' → logprob: -13.576062202453613
    9. ' [' → logprob: -13.701062202453613
    10. '[' → logprob: -14.576062202453613

Token 79: '(values' (ID: 40883)
  Prédit: '(values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(values' → logprob: -2.7252845029579476e-05
    2. 'values' → logprob: -10.625027656555176
    3. '(' → logprob: -13.250027656555176
    4. '(map' → logprob: -14.000027656555176
    5. ' values' → logprob: -15.625027656555176
    6. '	values' → logprob: -16.12502670288086
    7. '.values' → logprob: -17.75002670288086
    8. '(value' → logprob: -18.37502670288086
    9. '_values' → logprob: -18.75002670288086
    10. '(filter' → logprob: -19.50002670288086

Token 80: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002905085450038314
    2. ')
' → logprob: -6.127904891967773
    3. '   ' → logprob: -7.252904891967773
    4. ' )' → logprob: -12.502904891967773
    5. ' ' → logprob: -12.752904891967773
    6. ')return' → logprob: -13.502904891967773
    7. '())' → logprob: -14.252904891967773
    8. '()' → logprob: -14.502904891967773
    9. '),' → logprob: -14.752904891967773
    10. '))' → logprob: -15.377904891967773

Token 81: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002802855451591313
    2. '    
' → logprob: -8.500280380249023
    3. '<|end|>' → logprob: -10.125280380249023
    4. '
' → logprob: -11.500280380249023
    5. '<|end|>' → logprob: -11.500280380249023
    6. 'elif' → logprob: -12.000280380249023
    7. 'if' → logprob: -13.625280380249023
    8. 'return' → logprob: -13.750280380249023
    9. ',' → logprob: -14.000280380249023
    10. '    ' → logprob: -14.375280380249023

Token 82: ' else' (ID: 1203)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.9421863555908203
    2. 'else' (adapté à ' else') → logprob: -1.0671863555908203
    3. ' else' → logprob: -1.6921863555908203
    4. ' return' → logprob: -3.3171863555908203
    5. 'if' → logprob: -3.6921863555908203
    6. '   ' → logprob: -4.19218635559082
    7. ' if' → logprob: -5.94218635559082
    8. 'elif' → logprob: -6.31718635559082
    9. '    
' → logprob: -7.81718635559082
    10. ' elif' → logprob: -8.06718635559082

Token 83: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6951274275779724
    2. ':
' → logprob: -0.6951274275779724
    3. '   ' → logprob: -7.070127487182617
    4. ':return' → logprob: -7.320127487182617
    5. ' return' → logprob: -9.320127487182617
    6. 'return' → logprob: -9.445127487182617
    7. ',' → logprob: -9.570127487182617
    8. ' :
' → logprob: -9.820127487182617
    9. ' :' → logprob: -9.945127487182617
    10. '       ' → logprob: -9.945127487182617

Token 84: '       ' (ID: 309)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.06299270689487457
    2. '   ' → logprob: -2.937992811203003
    3. 'return' → logprob: -5.062992572784424
    4. ' [' → logprob: -6.687992572784424
    5. '[' → logprob: -8.187993049621582
    6. ' list' → logprob: -9.187993049621582
    7. ' ' → logprob: -9.562993049621582
    8. '       ' → logprob: -10.812993049621582
    9. '    ' → logprob: -11.187993049621582
    10. '	return' → logprob: -11.937993049621582

Token 85: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.01111726462841034
    2. ' return' → logprob: -4.511117458343506
    3. '   ' → logprob: -9.636116981506348
    4. '	return' → logprob: -14.011116981506348
    5. '{return' → logprob: -14.136116981506348
    6. ':return' → logprob: -14.136116981506348
    7. ')return' → logprob: -14.886116981506348
    8. ')' → logprob: -15.011116981506348
    9. 'def' → logprob: -15.261116981506348
    10. '
' → logprob: -15.386116981506348

Token 86: ' list' (ID: 1562)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.9262022972106934
    2. '[list' → logprob: -0.9262022972106934
    3. '[val' → logprob: -1.6762022972106934
    4. ' [' → logprob: -4.801202297210693
    5. '[' → logprob: -5.426202297210693
    6. 'list' → logprob: -5.676202297210693
    7. '[value' → logprob: -6.176202297210693
    8. '[(' → logprob: -6.426202297210693
    9. '[to' → logprob: -7.426202297210693
    10. ' list' → logprob: -9.176202774047852

Token 87: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -5.7888184528565034e-05
    2. '(' → logprob: -10.0000581741333
    3. '(values' → logprob: -11.5000581741333
    4. '(int' → logprob: -14.1250581741333
    5. '((' → logprob: -14.6250581741333
    6. '(val' → logprob: -15.1250581741333
    7. '(value' → logprob: -15.2500581741333
    8. 'map' → logprob: -15.3750581741333
    9. '(m' → logprob: -16.375057220458984
    10. '(x' → logprob: -16.500057220458984

Token 88: '(lambda' (ID: 43341)
  Prédit: '(to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(to' → logprob: -0.07949662208557129
    2. '(lambda' → logprob: -2.8294966220855713
    3. '(' → logprob: -4.204496383666992
    4. 'to' → logprob: -6.204496383666992
    5. '(int' → logprob: -8.454496383666992
    6. '(t' → logprob: -9.329496383666992
    7. '(z' → logprob: -9.829496383666992
    8. ' to' → logprob: -9.954496383666992
    9. '(
' → logprob: -11.454496383666992
    10. '	to' → logprob: -12.329496383666992

Token 89: ' elem' (ID: 23108)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.6145964860916138
    2. ' lambda' → logprob: -1.4895964860916138
    3. '(lambda' → logprob: -2.739596366882324
    4. 'to' → logprob: -2.864596366882324
    5. ' x' → logprob: -3.114596366882324
    6. 'x' → logprob: -3.364596366882324
    7. ' to' → logprob: -3.614596366882324
    8. ':' → logprob: -6.239596366882324
    9. 'val' → logprob: -6.989596366882324
    10. '   ' → logprob: -7.114596366882324

Token 90: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004671018570661545
    2. ' :' → logprob: -5.379671096801758
    3. '   ' → logprob: -10.504671096801758
    4. 'to' → logprob: -12.004671096801758
    5. '           ' → logprob: -12.129671096801758
    6. ':int' → logprob: -12.754671096801758
    7. '       ' → logprob: -13.379671096801758
    8. ' ' → logprob: -14.004671096801758
    9. ':
' → logprob: -14.129671096801758
    10. '    ' → logprob: -14.254671096801758

Token 91: ' elem' (ID: 23108)
  Prédit: 'elem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elem' → logprob: -0.554863452911377
    2. ' elem' → logprob: -1.054863452911377
    3. 'to' → logprob: -3.304863452911377
    4. ' to' → logprob: -3.429863452911377
    5. '(elem' → logprob: -5.179863452911377
    6. 'int' → logprob: -7.179863452911377
    7. ' int' → logprob: -7.304863452911377
    8. ' (' → logprob: -7.304863452911377
    9. 'zero' → logprob: -9.054862976074219
    10. '	elem' → logprob: -9.054862976074219

Token 92: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.029801756143569946
    2. '-' → logprob: -3.529801845550537
    3. ' ' → logprob: -10.779801368713379
    4. '-zero' → logprob: -11.279801368713379
    5. ' if' → logprob: -12.029801368713379
    6. ':' → logprob: -12.029801368713379
    7. '-if' → logprob: -13.029801368713379
    8. '   ' → logprob: -13.654801368713379
    9. '-val' → logprob: -14.279801368713379
    10. '  ' → logprob: -14.779801368713379

Token 93: ' zero' (ID: 12421)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.31434229016304016
    2. 'zero' → logprob: -1.9393422603607178
    3. ' zero' → logprob: -2.3143422603607178
    4. '   ' → logprob: -4.439342498779297
    5. ' ' → logprob: -4.939342498779297
    6. '0' → logprob: -5.814342498779297
    7. ' (' → logprob: -5.814342498779297
    8. 'int' → logprob: -7.689342498779297
    9. '(int' → logprob: -8.314342498779297
    10. '(' → logprob: -8.439342498779297

Token 94: '_base' (ID: 17096)
  Prédit: '_base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_base' → logprob: -4.203409844194539e-05
    2. '_' → logprob: -10.875041961669922
    3. 'base' → logprob: -11.375041961669922
    4. '_based' → logprob: -11.500041961669922
    5. '_BASE' → logprob: -14.750041961669922
    6. '_basis' → logprob: -15.375041961669922
    7. '_Base' → logprob: -15.500041961669922
    8. ')' → logprob: -15.750041961669922
    9. '_bas' → logprob: -16.125041961669922
    10. 'Base' → logprob: -16.500041961669922

Token 95: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00028612653841264546
    2. ',val' → logprob: -8.375286102294922
    3. '))' → logprob: -10.375286102294922
    4. ' ,' → logprob: -11.375286102294922
    5. '),' → logprob: -12.375286102294922
    6. '   ' → logprob: -13.125286102294922
    7. ',value' → logprob: -13.375286102294922
    8. '(),' → logprob: -14.375286102294922
    9. ')),' → logprob: -14.625286102294922
    10. ',None' → logprob: -14.750286102294922

Token 96: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.02324594371020794
    2. ' values' → logprob: -3.7732460498809814
    3. '   ' → logprob: -15.648245811462402
    4. '	values' → logprob: -15.648245811462402
    5. '(values' → logprob: -16.02324676513672
    6. '.values' → logprob: -17.89824676513672
    7. 'value' → logprob: -18.27324676513672
    8. 'val' → logprob: -18.64824676513672
    9. ' ' → logprob: -19.52324676513672
    10. '_values' → logprob: -19.64824676513672

Token 97: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.07891402393579483
    2. ')' → logprob: -2.578913927078247
    3. ')))' → logprob: -10.953913688659668
    4. '))
' → logprob: -12.453913688659668
    5. ' ))' → logprob: -13.953913688659668
    6. '   ' → logprob: -14.078913688659668
    7. ')
' → logprob: -14.953913688659668
    8. ')}' → logprob: -15.078913688659668
    9. ' )' → logprob: -15.328913688659668
    10. '()))' → logprob: -16.203914642333984

Token 98: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7511465549468994
    2. ':' → logprob: -1.7511465549468994
    3. ')' → logprob: -2.1261465549468994
    4. '#' → logprob: -2.1261465549468994
    5. '(' → logprob: -3.1261465549468994
    6. 'def' → logprob: -4.37614631652832
    7. '\n' → logprob: -4.37614631652832
    8. '<|end|>' → logprob: -4.37614631652832
    9. '_' → logprob: -5.25114631652832
    10. '```' → logprob: -5.50114631652832

Token 99: ' input' (ID: 3422)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.38154667615890503
    2. ' input' → logprob: -1.8815467357635498
    3. ' solve' → logprob: -2.50654673576355
    4. ' dfs' → logprob: -3.13154673576355
    5. ' factorial' → logprob: -5.256546497344971
    6. ' bfs' → logprob: -5.256546497344971
    7. ' parse' → logprob: -5.631546497344971
    8. ' process' → logprob: -6.131546497344971
    9. ' sys' → logprob: -6.381546497344971
    10. ' test' → logprob: -6.506546497344971

Token 100: '_single' (ID: 46053)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.003604105906561017
    2. '(' → logprob: -6.503603935241699
    3. '()' → logprob: -7.128603935241699
    4. '_line' → logprob: -8.0036039352417
    5. '_(' → logprob: -8.1286039352417
    6. '_str' → logprob: -9.5036039352417
    7. '_raw' → logprob: -9.7536039352417
    8. '_s' → logprob: -10.0036039352417
    9. '_string' → logprob: -10.1286039352417
    10. '_parent' → logprob: -10.1286039352417

Token 101: '_int' (ID: 12285)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3339577615261078
    2. '_' → logprob: -1.4589577913284302
    3. '_line' → logprob: -3.3339576721191406
    4. '(' → logprob: -5.208957672119141
    5. '_int' → logprob: -5.958957672119141
    6. '_parent' → logprob: -6.083957672119141
    7. ']()' → logprob: -7.458957672119141
    8. 'line' → logprob: -8.08395767211914
    9. '_par' → logprob: -8.08395767211914
    10. 's' → logprob: -8.08395767211914

Token 102: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -8.93579563125968e-05
    2. ' ():' → logprob: -9.500089645385742
    3. '():
' → logprob: -11.375089645385742
    4. '()' → logprob: -12.750089645385742
    5. '(' → logprob: -17.625089645385742
    6. ' ()' → logprob: -18.000089645385742
    7. '():
' → logprob: -18.125089645385742
    8. '():

' → logprob: -18.625089645385742
    9. ':' → logprob: -19.500089645385742
    10. '().' → logprob: -19.875089645385742

Token 103: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.019030466675758362
    2. '(' → logprob: -5.019030570983887
    3. ':' → logprob: -5.519030570983887
    4. '   ' → logprob: -6.019030570983887
    5. '():
' → logprob: -6.019030570983887
    6. '()' → logprob: -6.144030570983887
    7. ' ():' → logprob: -6.894030570983887
    8. ':
' → logprob: -9.769030570983887
    9. ' return' → logprob: -9.894030570983887
    10. ' ()' → logprob: -10.644030570983887

Token 104: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02823198214173317
    2. ' return' → logprob: -3.7782320976257324
    3. '   ' → logprob: -5.778232097625732
    4. 'int' → logprob: -6.278232097625732
    5. '    
' → logprob: -13.778231620788574
    6. ' int' → logprob: -14.153231620788574
    7. '
' → logprob: -14.403231620788574
    8. '	return' → logprob: -15.278231620788574
    9. '    ' → logprob: -15.778231620788574
    10. ' ' → logprob: -16.02823257446289

Token 105: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.06196993216872215
    2. 'int' → logprob: -2.8119699954986572
    3. '(int' → logprob: -13.561969757080078
    4. ' ' → logprob: -14.436969757080078
    5. '  ' → logprob: -15.561969757080078
    6. '<int' → logprob: -16.186969757080078
    7. '	int' → logprob: -16.686969757080078
    8. ' in' → logprob: -17.186969757080078
    9. '   ' → logprob: -17.561969757080078
    10. '=int' → logprob: -17.686969757080078

Token 106: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.575951099395752
    2. '(input' → logprob: -0.825951099395752
    3. '(
' → logprob: -12.325950622558594
    4. 'input' → logprob: -12.325950622558594
    5. '(

' → logprob: -14.075950622558594
    6. '(sys' → logprob: -14.075950622558594
    7. ' (' → logprob: -15.075950622558594
    8. '()' → logprob: -15.700950622558594
    9. '('' → logprob: -15.700950622558594
    10. '(_' → logprob: -16.450950622558594

Token 107: '_read' (ID: 14291)
  Prédit: '_read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_read' → logprob: -0.00021259987261146307
    2. '()' → logprob: -8.625212669372559
    3. '())' → logprob: -10.625212669372559
    4. 'read' → logprob: -12.875212669372559
    5. '_single' → logprob: -12.875212669372559
    6. '_reads' → logprob: -13.750212669372559
    7. '(' → logprob: -13.875212669372559
    8. '()))' → logprob: -14.875212669372559
    9. '().' → logprob: -15.250212669372559
    10. '_' → logprob: -15.500212669372559

Token 108: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0011717714369297028
    2. 'line' → logprob: -6.751171588897705
    3. 'Line' → logprob: -14.251172065734863
    4. '_LINE' → logprob: -15.376172065734863
    5. '()' → logprob: -15.501172065734863
    6. ')' → logprob: -15.751172065734863
    7. '_' → logprob: -16.626171112060547
    8. '_l' → logprob: -17.126171112060547
    9. 'ine' → logprob: -17.376171112060547
    10. ' line' → logprob: -17.626171112060547

Token 109: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.02494942396879196
    2. '()' → logprob: -4.149949550628662
    3. '().' → logprob: -4.774949550628662
    4. '()))' → logprob: -8.024949073791504
    5. ')' → logprob: -9.524949073791504
    6. ' ())' → logprob: -10.524949073791504
    7. '();)' → logprob: -12.649949073791504
    8. '())
' → logprob: -13.399949073791504
    9. '()]' → logprob: -13.899949073791504
    10. '()
' → logprob: -14.024949073791504

Token 110: 'from' (ID: 2845)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0001302374730585143
    2. '
' → logprob: -9.250130653381348
    3. '#' → logprob: -11.125130653381348
    4. '<|end|>' → logprob: -12.500130653381348
    5. '(' → logprob: -13.000130653381348
    6. '\' → logprob: -13.125130653381348
    7. '```' → logprob: -13.250130653381348
    8. '\n' → logprob: -13.625130653381348
    9. 'class' → logprob: -13.625130653381348
    10. '(
' → logprob: -14.000130653381348

Token 111: ' bis' (ID: 7204)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.01711491495370865
    2. 'collections' → logprob: -4.267115116119385
    3. ' math' → logprob: -6.517115116119385
    4. ' sys' → logprob: -7.517115116119385
    5. ' itertools' → logprob: -7.642115116119385
    6. ' typing' → logprob: -7.892115116119385
    7. ' functools' → logprob: -9.767114639282227
    8. ' heap' → logprob: -12.767114639282227
    9. 'sys' → logprob: -12.892114639282227
    10. ' ' → logprob: -13.017114639282227

Token 112: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -1.8193366486229934e-05
    2. 'e' → logprob: -11.750018119812012
    3. 't' → logprob: -12.125018119812012
    4. 'import' → logprob: -13.000018119812012
    5. 'ec' → logprob: -14.000018119812012
    6. '>' → logprob: -15.000018119812012
    7. 'ector' → logprob: -15.125018119812012
    8. 'ection' → logprob: -15.250018119812012
    9. 'ct' → logprob: -15.375018119812012
    10. 'ected' → logprob: -15.625018119812012

Token 113: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.038062721490859985
    2. 'import' → logprob: -3.288062810897827
    3. ' ' → logprob: -11.038063049316406
    4. '	import' → logprob: -12.538063049316406
    5. '_import' → logprob: -13.913063049316406
    6. ' ' → logprob: -15.413063049316406
    7. ' im' → logprob: -15.538063049316406
    8. ' importar' → logprob: -16.288063049316406
    9. 'ort' → logprob: -16.663063049316406
    10. ' impor' → logprob: -16.788063049316406

Token 114: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.47422361373901367
    2. 'bis' → logprob: -0.9742236137390137
    3. 'ins' → logprob: -8.849224090576172
    4. ' ins' → logprob: -12.974224090576172
    5. 'b' → logprob: -14.599224090576172
    6. 'import' → logprob: -16.224224090576172
    7. 'binary' → logprob: -16.724224090576172
    8. '_left' → logprob: -17.224224090576172
    9. '	b' → logprob: -17.224224090576172
    10. ',b' → logprob: -17.474224090576172

Token 115: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -1.1472419600977446e-06
    2. 'e' → logprob: -14.500000953674316
    3. 'ectl' → logprob: -15.500000953674316
    4. 'ec' → logprob: -15.750000953674316
    5. 'ected' → logprob: -16.625001907348633
    6. '```' → logprob: -17.000001907348633
    7. 'sect' → logprob: -17.125001907348633
    8. 'ext' → logprob: -17.375001907348633
    9. 'ct' → logprob: -17.625001907348633
    10. 'ection' → logprob: -18.000001907348633

Token 116: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.12333666533231735
    2. '_right' → logprob: -2.2483365535736084
    3. '_' → logprob: -4.8733367919921875
    4. '<|end|>' → logprob: -6.6233367919921875
    5. 'import' → logprob: -7.7483367919921875
    6. ',' → logprob: -8.123336791992188
    7. '_ins' → logprob: -8.623336791992188
    8. 'left' → logprob: -8.623336791992188
    9. 'right' → logprob: -9.248336791992188
    10. 'ins' → logprob: -9.623336791992188

Token 117: ' as' (ID: 472)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2891671359539032
    2. ',' → logprob: -2.1641671657562256
    3. '<|end|>' → logprob: -2.7891671657562256
    4. '
' → logprob: -2.9141671657562256
    5. 'from' → logprob: -5.0391669273376465
    6. 'import' → logprob: -5.6641669273376465
    7. '

' → logprob: -5.9141669273376465
    8. '<|end|>' → logprob: -6.1641669273376465
    9. 'class' → logprob: -6.6641669273376465
    10. '' → logprob: -7.1641669273376465

Token 118: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.34355923533439636
    2. 'bl' → logprob: -1.3435592651367188
    3. 'b' → logprob: -3.8435592651367188
    4. ' bis' → logprob: -4.843559265136719
    5. '	b' → logprob: -8.843559265136719
    6. 'bs' → logprob: -9.718559265136719
    7. ' ' → logprob: -9.718559265136719
    8. ' bl' → logprob: -9.843559265136719
    9. 'bli' → logprob: -9.968559265136719
    10. 'bi' → logprob: -10.093559265136719

Token 119: 'ect' (ID: 534)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -1.2519173622131348
    2. '<|end|>' → logprob: -1.7519173622131348
    3. 'n' → logprob: -2.0019173622131348
    4. 't' → logprob: -2.2519173622131348
    5. 'nt' → logprob: -2.3769173622131348
    6. 'x' → logprob: -2.8769173622131348
    7. 'st' → logprob: -3.0019173622131348
    8. 'nst' → logprob: -4.001917362213135
    9. 'ts' → logprob: -4.251917362213135
    10. 'ns' → logprob: -4.501917362213135

Token 120: '_l' (ID: 1478)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06666494160890579
    2. '<|end|>' → logprob: -3.691664934158325
    3. '_
' → logprob: -4.441665172576904
    4. '
' → logprob: -4.691665172576904
    5. '(' → logprob: -5.066665172576904
    6. '_left' → logprob: -6.441665172576904
    7. ')' → logprob: -6.566665172576904
    8. 'def' → logprob: -6.691665172576904
    9. '_

' → logprob: -6.691665172576904
    10. '<|end|>' → logprob: -6.816665172576904

Token 121: ',' (ID: 11)
  Prédit: 'eft'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eft' → logprob: -3.8889261304575484e-06
    2. 'e' → logprob: -13.375003814697266
    3. 'ef' → logprob: -13.625003814697266
    4. 'ist' → logprob: -14.375003814697266
    5. 'ft' → logprob: -15.625003814697266
    6. 'ast' → logprob: -16.000003814697266
    7. 'oad' → logprob: -16.750003814697266
    8. ' eft' → logprob: -17.625003814697266
    9. 'ift' → logprob: -18.250003814697266
    10. 'og' → logprob: -19.375003814697266

Token 122: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.00013512482109945267
    2. ' bis' → logprob: -9.75013542175293
    3. 'from' → logprob: -10.00013542175293
    4. 'ins' → logprob: -10.50013542175293
    5. 'import' → logprob: -13.12513542175293
    6. 'b' → logprob: -13.50013542175293
    7. ' from' → logprob: -16.62513542175293
    8. 'binary' → logprob: -16.62513542175293
    9. 'bs' → logprob: -16.87513542175293
    10. '```' → logprob: -17.00013542175293

Token 123: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -3.5716304410016164e-05
    2. 'sect' → logprob: -10.500035285949707
    3. 'e' → logprob: -12.000035285949707
    4. 'ec' → logprob: -13.750035285949707
    5. 'ct' → logprob: -15.250035285949707
    6. 'ext' → logprob: -15.875035285949707
    7. '```' → logprob: -15.875035285949707
    8. '
' → logprob: -16.125036239624023
    9. 'est' → logprob: -16.750036239624023
    10. 'ce' → logprob: -17.625036239624023

Token 124: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -2.3199920178740285e-05
    2. '_left' → logprob: -11.125022888183594
    3. '_' → logprob: -12.125022888183594
    4. '_r' → logprob: -14.000022888183594
    5. 'right' → logprob: -14.000022888183594
    6. '_RIGHT' → logprob: -14.625022888183594
    7. '<|end|>' → logprob: -15.000022888183594
    8. '_Right' → logprob: -15.375022888183594
    9. 'Right' → logprob: -16.625022888183594
    10. ' _' → logprob: -16.625022888183594

Token 125: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.10094597190618515
    2. 'as' → logprob: -2.6009459495544434
    3. '<|end|>' → logprob: -3.9759459495544434
    4. '_as' → logprob: -6.475945949554443
    5. '(as' → logprob: -7.225945949554443
    6. ' ' → logprob: -8.350946426391602
    7. '_' → logprob: -8.600946426391602
    8. '<|end|>' → logprob: -8.725946426391602
    9. '(' → logprob: -9.475946426391602
    10. '	as' → logprob: -9.975946426391602

Token 126: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.0019048431422561407
    2. ' bis' → logprob: -6.3769049644470215
    3. 'b' → logprob: -8.626904487609863
    4. 'bs' → logprob: -11.751904487609863
    5. 'bi' → logprob: -12.501904487609863
    6. ' ' → logprob: -13.376904487609863
    7. 'bish' → logprob: -13.626904487609863
    8. 'bil' → logprob: -13.876904487609863
    9. 'bir' → logprob: -14.126904487609863
    10. 'bes' → logprob: -14.564404487609863

Token 127: 'ect' (ID: 534)
  Prédit: 'sect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sect' → logprob: -0.6588472127914429
    2. 'ect' → logprob: -1.4088472127914429
    3. 'is' → logprob: -1.5338472127914429
    4. 's' → logprob: -4.533847332000732
    5. 'ct' → logprob: -5.033847332000732
    6. 'ist' → logprob: -6.283847332000732
    7. 'st' → logprob: -6.908847332000732
    8. 'set' → logprob: -8.033846855163574
    9. 'sert' → logprob: -8.158846855163574
    10. 'ser' → logprob: -8.408846855163574

Token 128: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.002345919143408537
    2. '_l' → logprob: -6.502346038818359
    3. 'r' → logprob: -7.502346038818359
    4. '_' → logprob: -8.75234603881836
    5. '<|end|>' → logprob: -9.87734603881836
    6. ' _' → logprob: -10.87734603881836
    7. '_s' → logprob: -10.87734603881836
    8. '_right' → logprob: -11.75234603881836
    9. 'R' → logprob: -12.00234603881836
    10. '<|end|>' → logprob: -12.25234603881836

Token 129: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 130: 'from' (ID: 2845)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 131: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.07628816366195679
    2. ' collections' → logprob: -3.3262882232666016
    3. 'heap' → logprob: -4.076288223266602
    4. 'math' → logprob: -4.076288223266602
    5. ' math' → logprob: -5.826288223266602
    6. ' heap' → logprob: -7.451288223266602
    7. ' itertools' → logprob: -9.951288223266602
    8. '_math' → logprob: -13.576288223266602
    9. 'io' → logprob: -13.826288223266602
    10. '_heap' → logprob: -13.951288223266602

Token 132: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.0032121767289936543
    2. ' import' → logprob: -5.753211975097656
    3. 'from' → logprob: -11.628211975097656
    4. '.' → logprob: -11.753211975097656
    5. 'abc' → logprob: -12.378211975097656
    6. '<|end|>' → logprob: -12.878211975097656
    7. '_import' → logprob: -13.128211975097656
    8. 'deque' → logprob: -13.878211975097656
    9. '	import' → logprob: -13.878211975097656
    10. 'port' → logprob: -14.128211975097656

Token 133: ' defaultdict' (ID: 107098)
  Prédit: ' deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.3788042664527893
    2. ' defaultdict' → logprob: -1.6288042068481445
    3. 'deque' → logprob: -2.1288042068481445
    4. 'default' → logprob: -8.753804206848145
    5. 'de' → logprob: -11.628804206848145
    6. ' named' → logprob: -12.128804206848145
    7. 'named' → logprob: -12.878804206848145
    8. ' Counter' → logprob: -14.128804206848145
    9. ' default' → logprob: -14.628804206848145
    10. 'Deque' → logprob: -15.128804206848145

Token 134: ' as' (ID: 472)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1683624982833862
    2. 'import' → logprob: -1.9183624982833862
    3. 'def' → logprob: -1.9183624982833862
    4. 'from' → logprob: -1.9183624982833862
    5. 'class' → logprob: -2.043362617492676
    6. '
' → logprob: -2.793362617492676
    7. '

' → logprob: -3.293362617492676
    8. 'deque' → logprob: -4.418362617492676
    9. ',
' → logprob: -6.543362617492676
    10. 'graph' → logprob: -7.168362617492676

Token 135: ' def' (ID: 1056)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.5521264672279358
    2. ' dd' → logprob: -1.177126407623291
    3. 'default' → logprob: -2.302126407623291
    4. ' d' → logprob: -5.677126407623291
    5. 'dd' → logprob: -5.677126407623291
    6. ' default' → logprob: -5.802126407623291
    7. '_default' → logprob: -5.927126407623291
    8. '_dd' → logprob: -6.052126407623291
    9. 'd' → logprob: -7.552126407623291
    10. ' def' → logprob: -8.67712688446045

Token 136: '_dict' (ID: 11295)
  Prédit: 'ault'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ault' → logprob: -7.684157026233152e-05
    2. 'dict' → logprob: -11.000077247619629
    3. 'default' → logprob: -11.125077247619629
    4. 'aul' → logprob: -11.125077247619629
    5. 'fault' → logprob: -11.250077247619629
    6. 'a' → logprob: -11.750077247619629
    7. '```' → logprob: -12.875077247619629
    8. 'al' → logprob: -13.375077247619629
    9. ' defaultdict' → logprob: -13.500077247619629
    10. 'd' → logprob: -13.500077247619629

Token 137: '

' (ID: 279)
  Prédit: 'ault'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ault' → logprob: -0.40976133942604065
    2. ',' → logprob: -1.4097613096237183
    3. 'from' → logprob: -2.784761428833008
    4. '
' → logprob: -3.909761428833008
    5. '

' → logprob: -6.159761428833008
    6. ' defaultdict' → logprob: -6.659761428833008
    7. 'def' → logprob: -6.784761428833008
    8. 'import' → logprob: -6.909761428833008
    9. 'dict' → logprob: -7.034761428833008
    10. 'f' → logprob: -7.659761428833008

Token 138: 'node' (ID: 7005)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.5597645044326782
    2. 'def' → logprob: -1.6847645044326782
    3. '
' → logprob: -1.9347645044326782
    4. 'import' → logprob: -3.0597643852233887
    5. '

' → logprob: -4.059764385223389
    6. 'from' → logprob: -4.309764385223389
    7. 'graph' → logprob: -5.434764385223389
    8. ' 
' → logprob: -6.309764385223389
    9. ',' → logprob: -6.309764385223389
    10. ' 

' → logprob: -6.559764385223389

Token 139: '_count' (ID: 7536)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.026040857657790184
    2. '_' → logprob: -4.026041030883789
    3. ' =' → logprob: -5.276041030883789
    4. '_list' → logprob: -7.401041030883789
    5. '_s' → logprob: -7.401041030883789
    6. '_map' → logprob: -7.776041030883789
    7. ' s' → logprob: -7.901041030883789
    8. ' _' → logprob: -8.651041030883789
    9. ',' → logprob: -9.026041030883789
    10. '=' → logprob: -9.526041030883789

Token 140: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23397456109523773
    2. ',' → logprob: -1.858974575996399
    3. '=' → logprob: -3.1089744567871094
    4. ' ,' → logprob: -5.358974456787109
    5. ' ' → logprob: -5.983974456787109
    6. '_' → logprob: -7.483974456787109
    7. '_space' → logprob: -9.35897445678711
    8. ')' → logprob: -9.48397445678711
    9. '  ' → logprob: -10.35897445678711
    10. 'space' → logprob: -10.85897445678711

Token 141: ' input' (ID: 3422)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.33304324746131897
    2. 'int' → logprob: -2.083043336868286
    3. ' input' → logprob: -2.208043336868286
    4. 'input' → logprob: -3.458043336868286
    5. ' ' → logprob: -4.208043098449707
    6. '0' → logprob: -6.208043098449707
    7. ' None' → logprob: -8.958043098449707
    8. '10' → logprob: -10.083043098449707
    9. 'to' → logprob: -10.208043098449707
    10. '  ' → logprob: -10.708043098449707

Token 142: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -0.03295733779668808
    2. '()' → logprob: -3.6579573154449463
    3. '_' → logprob: -5.282957553863525
    4. 'Single' → logprob: -7.782957553863525
    5. '_int' → logprob: -8.157957077026367
    6. 'single' → logprob: -8.157957077026367
    7. '(' → logprob: -8.407957077026367
    8. '()
' → logprob: -9.532957077026367
    9. '('_' → logprob: -9.657957077026367
    10. '("_' → logprob: -10.157957077026367

Token 143: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.19808602333068848
    2. '_' → logprob: -1.8230860233306885
    3. 'int' → logprob: -4.198085784912109
    4. '_line' → logprob: -6.323085784912109
    5. '(' → logprob: -7.948085784912109
    6. '_token' → logprob: -8.44808578491211
    7. '_val' → logprob: -8.44808578491211
    8. '('_' → logprob: -9.32308578491211
    9. '()' → logprob: -9.69808578491211
    10. '_count' → logprob: -9.94808578491211

Token 144: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006080718245357275
    2. '(' → logprob: -6.006080627441406
    3. '()
' → logprob: -6.756080627441406
    4. '<|end|>' → logprob: -6.756080627441406
    5. '
' → logprob: -7.506080627441406
    6. ')' → logprob: -7.881080627441406
    7. '(
' → logprob: -9.506080627441406
    8. ':' → logprob: -10.131080627441406
    9. ',' → logprob: -10.256080627441406
    10. ' ()' → logprob: -10.381080627441406

Token 145: 'node' (ID: 7005)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.7815827131271362
    2. ' edges' → logprob: -1.4065827131271362
    3. '
' → logprob: -1.5315827131271362
    4. 'graph' → logprob: -3.781582832336426
    5. 'nodes' → logprob: -4.406582832336426
    6. 'node' → logprob: -4.781582832336426
    7. ' 
' → logprob: -5.031582832336426
    8. 'adj' → logprob: -5.156582832336426
    9. 'edge' → logprob: -5.281582832336426
    10. '_edges' → logprob: -5.906582832336426

Token 146: '_values' (ID: 20393)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03761701285839081
    2. '_values' → logprob: -3.7876169681549072
    3. '_' → logprob: -5.287617206573486
    4. '_edges' → logprob: -5.787617206573486
    5. '_s' → logprob: -6.412617206573486
    6. '_list' → logprob: -6.537617206573486
    7. '_count' → logprob: -6.912617206573486
    8. '_connections' → logprob: -7.912617206573486
    9. '_neighbors' → logprob: -7.912617206573486
    10. '_colors' → logprob: -8.162616729736328

Token 147: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05495744198560715
    2. '=' → logprob: -2.929957389831543
    3. ',' → logprob: -9.554957389831543
    4. ' ' → logprob: -13.054957389831543
    5. ' ,' → logprob: -13.804957389831543
    6. ' =[' → logprob: -15.179957389831543
    7. '=[]' → logprob: -15.554957389831543
    8. '[' → logprob: -15.804957389831543
    9. '=input' → logprob: -16.42995834350586
    10. '_' → logprob: -16.67995834350586

Token 148: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3134492337703705
    2. ' input' → logprob: -1.3134492635726929
    3. 'list' → logprob: -9.188448905944824
    4. ' list' → logprob: -9.438448905944824
    5. '(input' → logprob: -12.813448905944824
    6. '[input' → logprob: -14.313448905944824
    7. 'to' → logprob: -14.563448905944824
    8. '	input' → logprob: -14.813448905944824
    9. '_input' → logprob: -15.688448905944824
    10. 'map' → logprob: -15.813448905944824

Token 149: '_int' (ID: 12285)
  Prédit: '_single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -0.07007548213005066
    2. '()' → logprob: -2.945075511932373
    3. '_' → logprob: -5.070075511932373
    4. '_read' → logprob: -5.445075511932373
    5. '_int' → logprob: -5.945075511932373
    6. '_list' → logprob: -6.945075511932373
    7. '_line' → logprob: -7.695075511932373
    8. '().' → logprob: -8.695075035095215
    9. '_reads' → logprob: -9.945075035095215
    10. 'Single' → logprob: -10.070075035095215

Token 150: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -2.057743949990254e-05
    2. '_list' → logprob: -11.625020980834961
    3. '_line' → logprob: -12.500020980834961
    4. '()' → logprob: -12.500020980834961
    5. 'line' → logprob: -13.375020980834961
    6. 'list' → logprob: -13.500020980834961
    7. 'single' → logprob: -15.250020980834961
    8. '_s' → logprob: -15.750020980834961
    9. 'S' → logprob: -15.875020980834961
    10. 'vals' → logprob: -16.25002098083496

Token 151: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004092766437679529
    2. '(' → logprob: -5.504092693328857
    3. '0' → logprob: -12.254093170166016
    4. '()
' → logprob: -12.754093170166016
    5. '(True' → logprob: -12.754093170166016
    6. '(z' → logprob: -14.379093170166016
    7. '(False' → logprob: -14.504093170166016
    8. '();' → logprob: -14.754093170166016
    9. '()(' → logprob: -15.004093170166016
    10. '(None' → logprob: -15.004093170166016

Token 152: 'adj' (ID: 57001)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -1.0081140995025635
    2. 'adj' → logprob: -1.1331140995025635
    3. 'graph' → logprob: -1.7581140995025635
    4. 'parent' → logprob: -3.5081140995025635
    5. '
' → logprob: -3.6331140995025635
    6. 'tree' → logprob: -4.008113861083984
    7. 'neighbors' → logprob: -4.008113861083984
    8. 'children' → logprob: -4.633113861083984
    9. 'edge' → logprob: -4.883113861083984
    10. ' edges' → logprob: -5.508113861083984

Token 153: 'acency' (ID: 118557)
  Prédit: 'acency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acency' → logprob: -0.0033967059571295977
    2. 'acent' → logprob: -6.253396511077881
    3. ' =' → logprob: -6.753396511077881
    4. 'ac' → logprob: -8.503396987915039
    5. '=' → logprob: -9.753396987915039
    6. '_list' → logprob: -10.753396987915039
    7. '[' → logprob: -11.753396987915039
    8. '_' → logprob: -12.128396987915039
    9. 'acity' → logprob: -14.253396987915039
    10. 'list' → logprob: -14.378396987915039

Token 154: '_list' (ID: 4162)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4844738245010376
    2. '=' → logprob: -0.9844738245010376
    3. '_list' → logprob: -4.609473705291748
    4. '_' → logprob: -8.734474182128906
    5. '_lists' → logprob: -9.359474182128906
    6. 'acency' → logprob: -10.109474182128906
    7. '=[]' → logprob: -10.734474182128906
    8. 's' → logprob: -10.859474182128906
    9. 'list' → logprob: -10.984474182128906
    10. 'List' → logprob: -11.359474182128906

Token 155: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0788949653506279
    2. '=' → logprob: -2.578894853591919
    3. '=[]' → logprob: -13.32889461517334
    4. '[' → logprob: -13.45389461517334
    5. '=[' → logprob: -14.45389461517334
    6. ' ' → logprob: -14.70389461517334
    7. ' =[' → logprob: -15.07889461517334
    8. '[:]' → logprob: -15.32889461517334
    9. '={}' → logprob: -15.45389461517334
    10. '＝' → logprob: -15.82889461517334

Token 156: ' def' (ID: 1056)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00382810621522367
    2. 'default' → logprob: -5.753828048706055
    3. ' [[]' → logprob: -7.503828048706055
    4. '{' → logprob: -10.003828048706055
    5. 'def' → logprob: -10.503828048706055
    6. ' [' → logprob: -10.628828048706055
    7. ' defaultdict' → logprob: -14.253828048706055
    8. ' def' → logprob: -14.753828048706055
    9. '[len' → logprob: -15.753828048706055
    10. '[[' → logprob: -15.753828048706055

Token 157: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.0013355977134779096
    2. 'dict' → logprob: -6.751335620880127
    3. 'ault' → logprob: -9.501335144042969
    4. 'ict' → logprob: -9.876335144042969
    5. '_list' → logprob: -11.001335144042969
    6. 'Dict' → logprob: -11.876335144042969
    7. 'default' → logprob: -12.876335144042969
    8. '[' → logprob: -13.126335144042969
    9. '_' → logprob: -13.126335144042969
    10. '_dic' → logprob: -13.501335144042969

Token 158: '(list' (ID: 13116)
  Prédit: '(list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -7.159660890465602e-05
    2. '(' → logprob: -10.25007152557373
    3. 'list' → logprob: -10.37507152557373
    4. '(int' → logprob: -13.12507152557373
    5. '(lambda' → logprob: -13.25007152557373
    6. '(
' → logprob: -14.62507152557373
    7. '(l' → logprob: -14.87507152557373
    8. '```' → logprob: -16.000072479248047
    9. '=list' → logprob: -17.000072479248047
    10. ':list' → logprob: -17.125072479248047

Token 159: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002974614268168807
    2. ')
' → logprob: -5.877974510192871
    3. ')

' → logprob: -8.752974510192871
    4. '())' → logprob: -12.752974510192871
    5. ' )' → logprob: -13.252974510192871
    6. '()' → logprob: -13.252974510192871
    7. ')(' → logprob: -13.377974510192871
    8. ')`' → logprob: -14.127974510192871
    9. ')set' → logprob: -14.752974510192871
    10. '),' → logprob: -15.002974510192871

Token 160: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003827676991932094
    2. ' for' → logprob: -7.875382900238037
    3. '
' → logprob: -12.875382423400879
    4. '<|end|>' → logprob: -16.625383377075195
    5. '	for' → logprob: -17.125383377075195
    6. 'n' → logprob: -17.875383377075195
    7. ')' → logprob: -18.250383377075195
    8. ' 
' → logprob: -18.375383377075195
    9. '_for' → logprob: -18.500383377075195
    10. 'For' → logprob: -18.500383377075195

Token 161: ' edge' (ID: 11165)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.018202973529696465
    2. '_' → logprob: -4.018202781677246
    3. ' i' → logprob: -10.268202781677246
    4. ' ' → logprob: -11.143202781677246
    5. ' node' → logprob: -13.643202781677246
    6. ' range' → logprob: -13.768202781677246
    7. 'range' → logprob: -14.518202781677246
    8. '  ' → logprob: -14.643202781677246
    9. '(' → logprob: -15.643202781677246
    10. '_i' → logprob: -16.143203735351562

Token 162: '_idx' (ID: 15257)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6653218865394592
    2. ' _' → logprob: -1.0403218269348145
    3. '_' → logprob: -2.0403218269348145
    4. ' ' → logprob: -6.2903218269348145
    5. 'in' → logprob: -8.290322303771973
    6. '_in' → logprob: -8.790322303771973
    7. '(' → logprob: -9.665322303771973
    8. '_node' → logprob: -9.665322303771973
    9. 's' → logprob: -10.290322303771973
    10. '  ' → logprob: -11.040322303771973

Token 163: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043936826288700104
    2. 'in' → logprob: -3.2939367294311523
    3. ' ' → logprob: -5.293936729431152
    4. '_' → logprob: -7.168936729431152
    5. ' _' → logprob: -9.668936729431152
    6. ',' → logprob: -11.543936729431152
    7. 'range' → logprob: -12.543936729431152
    8. '_in' → logprob: -13.043936729431152
    9. '	in' → logprob: -13.668936729431152
    10. ' i' → logprob: -13.668936729431152

Token 164: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.11287341266870499
    2. ' range' → logprob: -2.2378733158111572
    3. 'node' → logprob: -10.487873077392578
    4. ' ' → logprob: -11.737873077392578
    5. '_' → logprob: -12.237873077392578
    6. '(range' → logprob: -12.237873077392578
    7. '	range' → logprob: -13.362873077392578
    8. ' node' → logprob: -13.487873077392578
    9. '  ' → logprob: -14.737873077392578
    10. '   ' → logprob: -14.862873077392578

Token 165: '_iter' (ID: 27043)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.14141398668289185
    2. '_iter' → logprob: -2.391413927078247
    3. '(' → logprob: -3.266413927078247
    4. '_(' → logprob: -6.516414165496826
    5. '(_' → logprob: -8.141413688659668
    6. 'node' → logprob: -8.391413688659668
    7. '_node' → logprob: -9.891413688659668
    8. '_' → logprob: -10.141413688659668
    9. 'iter' → logprob: -10.891413688659668
    10. ' (' → logprob: -11.266413688659668

Token 166: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.0019294669618830085
    2. '(' → logprob: -6.25192928314209
    3. '(n' → logprob: -14.37692928314209
    4. 'node' → logprob: -15.62692928314209
    5. '(edge' → logprob: -17.751930236816406
    6. ' (' → logprob: -17.876930236816406
    7. '(
' → logprob: -18.001930236816406
    8. ' node' → logprob: -18.251930236816406
    9. ',node' → logprob: -18.376930236816406
    10. '(Node' → logprob: -19.001930236816406

Token 167: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -2.4868770196917467e-05
    2. 'count' → logprob: -10.625024795532227
    3. '_' → logprob: -15.625024795532227
    4. '_counts' → logprob: -15.875024795532227
    5. '1' → logprob: -16.500024795532227
    6. 's' → logprob: -16.875024795532227
    7. '_cnt' → logprob: -17.000024795532227
    8. '-' → logprob: -17.375024795532227
    9. 'Count' → logprob: -17.500024795532227
    10. '_c' → logprob: -17.875024795532227

Token 168: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.22583043575286865
    2. '-' → logprob: -1.6008304357528687
    3. ' ' → logprob: -7.850830554962158
    4. '   ' → logprob: -10.975830078125
    5. '  ' → logprob: -12.350830078125
    6. ' ' → logprob: -12.600830078125
    7. '1' → logprob: -13.850830078125
    8. ')' → logprob: -13.850830078125
    9. '
' → logprob: -14.350830078125
    10. '	' → logprob: -15.225830078125

Token 169: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014164102263748646
    2. ' ' → logprob: -4.264163970947266
    3. '   ' → logprob: -15.389163970947266
    4. ')' → logprob: -16.389163970947266
    5. '  ' → logprob: -16.514163970947266
    6. ' ' → logprob: -17.139163970947266
    7. '
' → logprob: -17.264163970947266
    8. '<|end|>' → logprob: -17.264163970947266
    9. '```' → logprob: -17.451663970947266
    10. '2' → logprob: -17.889163970947266

Token 170: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001584850688232109
    2. ' ' → logprob: -8.750158309936523
    3. ')' → logprob: -16.750158309936523
    4. '
' → logprob: -17.875158309936523
    5. '   ' → logprob: -18.375158309936523
    6. '<|end|>' → logprob: -18.812658309936523
    7. '```' → logprob: -19.187658309936523
    8. '  ' → logprob: -19.187658309936523
    9. '১' → logprob: -19.312658309936523
    10. '2' → logprob: -19.375158309936523

Token 171: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018377847969532013
    2. '):
' → logprob: -4.018377780914307
    3. ':' → logprob: -9.268378257751465
    4. ')' → logprob: -9.518378257751465
    5. ' ):' → logprob: -9.893378257751465
    6. '):
' → logprob: -12.018378257751465
    7. '   ' → logprob: -13.768378257751465
    8. ' ):
' → logprob: -14.018378257751465
    9. '():' → logprob: -14.893378257751465
    10. ':
' → logprob: -15.393378257751465

Token 172: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010652014752849936
    2. '    
' → logprob: -7.751065254211426
    3. ' adjacency' → logprob: -8.001065254211426
    4. ' edges' → logprob: -9.126065254211426
    5. ' edge' → logprob: -9.501065254211426
    6. '<|end|>' → logprob: -10.251065254211426
    7. ' line' → logprob: -11.126065254211426
    8. '   ' → logprob: -11.376065254211426
    9. ' 
' → logprob: -12.126065254211426
    10. '    ' → logprob: -12.376065254211426

Token 173: ' node' (ID: 4596)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.442667156457901
    2. ' u' → logprob: -1.0676671266555786
    3. 'a' → logprob: -4.567667007446289
    4. ' a' → logprob: -5.942667007446289
    5. 'from' → logprob: -8.567667007446289
    6. '   ' → logprob: -8.692667007446289
    7. ' node' → logprob: -8.817667007446289
    8. 'node' (adapté à ' node') → logprob: -9.067667007446289
    9. 'start' → logprob: -9.817667007446289
    10. ' from' → logprob: -9.817667007446289

Token 174: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -1.3216825723648071
    2. '_a' → logprob: -1.5716825723648071
    3. 'u' → logprob: -1.8216825723648071
    4. '_' → logprob: -2.1966824531555176
    5. '1' → logprob: -2.3216824531555176
    6. 's' → logprob: -3.3216824531555176
    7. '_from' → logprob: -3.4466824531555176
    8. 'a' → logprob: -3.5716824531555176
    9. '_values' → logprob: -4.071682453155518
    10. '_line' → logprob: -4.446682453155518

Token 175: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0036384384147822857
    2. ',node' → logprob: -5.62863826751709
    3. ' ,' → logprob: -10.25363826751709
    4. ',n' → logprob: -14.00363826751709
    5. ',u' → logprob: -14.62863826751709
    6. ',
' → logprob: -14.75363826751709
    7. ',input' → logprob: -14.87863826751709
    8. ',user' → logprob: -15.12863826751709
    9. '_,' → logprob: -16.003639221191406
    10. ',line' → logprob: -16.503639221191406

Token 176: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.2811562120914459
    2. ' node' → logprob: -1.4061561822891235
    3. '	node' → logprob: -13.406156539916992
    4. ',node' → logprob: -13.656156539916992
    5. '_node' → logprob: -14.031156539916992
    6. ' ' → logprob: -14.406156539916992
    7. '[node' → logprob: -14.781156539916992
    8. '
' → logprob: -14.781156539916992
    9. '(node' → logprob: -14.781156539916992
    10. '=node' → logprob: -15.781156539916992

Token 177: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -3.166338137816638e-05
    2. 'v' → logprob: -10.500031471252441
    3. '_' → logprob: -13.375031471252441
    4. '	v' → logprob: -14.250031471252441
    5. '```' → logprob: -14.250031471252441
    6. '_u' → logprob: -14.250031471252441
    7. ',v' → logprob: -16.250032424926758
    8. '=' → logprob: -16.375032424926758
    9. '
' → logprob: -16.375032424926758
    10. '

' → logprob: -16.750032424926758

Token 178: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022849082946777
    2. ' =' → logprob: -1.9102284908294678
    3. ',' → logprob: -12.785228729248047
    4. '=input' → logprob: -14.785228729248047
    5. '=line' → logprob: -15.285228729248047
    6. '=node' → logprob: -15.535228729248047
    7. ' ' → logprob: -16.035228729248047
    8. '   ' → logprob: -16.035228729248047
    9. '＝' → logprob: -16.160228729248047
    10. ')' → logprob: -16.535228729248047

Token 179: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3670292794704437
    2. 'input' → logprob: -1.2420293092727661
    3. ' map' → logprob: -4.742029190063477
    4. 'to' → logprob: -5.367029190063477
    5. 'map' → logprob: -5.742029190063477
    6. ' to' → logprob: -6.367029190063477
    7. ' ' → logprob: -10.117029190063477
    8. '(input' → logprob: -11.367029190063477
    9. 'list' → logprob: -11.867029190063477
    10. '[' → logprob: -11.992029190063477

Token 180: '_int' (ID: 12285)
  Prédit: '_single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -0.2641679644584656
    2. '_read' → logprob: -1.7641680240631104
    3. '()' → logprob: -3.3891680240631104
    4. '().' → logprob: -4.514167785644531
    5. '_split' → logprob: -4.514167785644531
    6. '_int' → logprob: -6.139167785644531
    7. '_' → logprob: -6.889167785644531
    8. '_line' → logprob: -7.264167785644531
    9. '(' → logprob: -8.889167785644531
    10. 'single' → logprob: -9.014167785644531

Token 181: 's' (ID: 82)
  Prédit: 'ts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ts' → logprob: -0.14130541682243347
    2. 't' → logprob: -2.141305446624756
    3. 's' → logprob: -4.266305446624756
    4. 'nts' → logprob: -8.641304969787598
    5. '()' → logprob: -10.141304969787598
    6. '_ts' → logprob: -12.016304969787598
    7. '_t' → logprob: -12.641304969787598
    8. 'nt' → logprob: -12.891304969787598
    9. 'rs' → logprob: -13.016304969787598
    10. '_line' → logprob: -13.141304969787598

Token 182: '(z' (ID: 27674)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -7.576873758807778e-05
    2. '(' → logprob: -9.750075340270996
    3. '()
' → logprob: -11.250075340270996
    4. ' ()' → logprob: -13.750075340270996
    5. '(True' → logprob: -13.875075340270996
    6. '();' → logprob: -14.250075340270996
    7. '()]' → logprob: -15.000075340270996
    8. '())' → logprob: -15.125075340270996
    9. '(),' → logprob: -15.500075340270996
    10. '()

' → logprob: -16.125076293945312

Token 183: 'ero' (ID: 2464)
  Prédit: 'ero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ero' → logprob: -3.2617008400848135e-05
    2. ')' → logprob: -11.250032424926758
    3. ' ' → logprob: -12.875032424926758
    4. '()' → logprob: -13.000032424926758
    5. '(' → logprob: -13.375032424926758
    6. '```' → logprob: -13.375032424926758
    7. '
' → logprob: -13.625032424926758
    8. '=' → logprob: -13.750032424926758
    9. 'zero' → logprob: -13.750032424926758
    10. ' ero' → logprob: -13.750032424926758

Token 184: '_base' (ID: 17096)
  Prédit: '_base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_base' → logprob: -0.043817490339279175
    2. '=' → logprob: -3.2938175201416016
    3. '_based' → logprob: -5.168817520141602
    4. 'based' → logprob: -10.418817520141602
    5. 'base' → logprob: -11.418817520141602
    6. '1' → logprob: -11.918817520141602
    7. '0' → logprob: -12.168817520141602
    8. '_basis' → logprob: -12.543817520141602
    9. '=None' → logprob: -13.168817520141602
    10. '_bas' → logprob: -13.418817520141602

Token 185: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.676292231422849e-05
    2. '(' → logprob: -11.250017166137695
    3. '1' → logprob: -13.125017166137695
    4. '=
' → logprob: -15.125017166137695
    5. ' =' → logprob: -15.125017166137695
    6. '=(' → logprob: -15.250017166137695
    7. ')=' → logprob: -15.625017166137695
    8. '=True' → logprob: -15.750017166137695
    9. '=

' → logprob: -15.875017166137695
    10. ')' → logprob: -16.000017166137695

Token 186: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002569289645180106
    2. ' ' → logprob: -8.625256538391113
    3. '0' → logprob: -9.500256538391113
    4. ')' → logprob: -13.375256538391113
    5. '   ' → logprob: -15.125256538391113
    6. '=' → logprob: -15.125256538391113
    7. '
' → logprob: -16.18775749206543
    8. 'True' → logprob: -16.93775749206543
    9. '`' → logprob: -17.18775749206543
    10. 'true' → logprob: -17.50025749206543

Token 187: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05491500720381737
    2. ')
' → logprob: -2.929914951324463
    3. ' )' → logprob: -11.429915428161621
    4. ')
' → logprob: -11.679915428161621
    5. '   ' → logprob: -12.179915428161621
    6. ')

' → logprob: -12.179915428161621
    7. ' )
' → logprob: -13.179915428161621
    8. ' ' → logprob: -15.304915428161621
    9. '))' → logprob: -15.804915428161621
    10. ')`' → logprob: -15.929915428161621

Token 188: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005100222188048065
    2. 'adj' → logprob: -8.375510215759277
    3. ' adjacency' → logprob: -8.500510215759277
    4. ')' → logprob: -10.125510215759277
    5. '    
' → logprob: -11.125510215759277
    6. '
' → logprob: -11.250510215759277
    7. '<|end|>' → logprob: -13.125510215759277
    8. '[' → logprob: -13.625510215759277
    9. ',' → logprob: -14.250510215759277
    10. '       ' → logprob: -14.750510215759277

Token 189: ' adjacency' (ID: 177015)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.6336504817008972
    2. ' adjacency' → logprob: -1.008650541305542
    3. '   ' → logprob: -2.258650541305542
    4. ' adj' → logprob: -9.883650779724121
    5. '    
' → logprob: -10.258650779724121
    6. '
' → logprob: -10.508650779724121
    7. ' adjacent' → logprob: -11.258650779724121
    8. 'Adj' → logprob: -12.383650779724121
    9. ')' → logprob: -13.008650779724121
    10. '_adj' → logprob: -13.008650779724121

Token 190: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -15.000000953674316
    3. 'list' → logprob: -15.500000953674316
    4. '[_' → logprob: -15.875000953674316
    5. '_' → logprob: -16.125001907348633
    6. 'List' → logprob: -16.875001907348633
    7. '_l' → logprob: -18.125001907348633
    8. '[u' → logprob: -18.625001907348633
    9. '_lst' → logprob: -18.750001907348633
    10. ')_' → logprob: -19.125001907348633

Token 191: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -0.0002619318547658622
    2. '[' → logprob: -8.250262260437012
    3. '[u' → logprob: -14.500262260437012
    4. ' [' → logprob: -16.375261306762695
    5. '(node' → logprob: -17.500261306762695
    6. '[user' → logprob: -17.625261306762695
    7. '\[' → logprob: -18.625261306762695
    8. '[
' → logprob: -19.250261306762695
    9. '[token' → logprob: -19.250261306762695
    10. '=node' → logprob: -19.625261306762695

Token 192: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -7.822646693966817e-06
    2. '_v' → logprob: -11.875007629394531
    3. 'u' → logprob: -14.625007629394531
    4. '_' → logprob: -16.12500762939453
    5. '_uv' → logprob: -16.25000762939453
    6. '[u' → logprob: -17.00000762939453
    7. '   ' → logprob: -17.37500762939453
    8. 's' → logprob: -17.37500762939453
    9. '_a' → logprob: -17.50000762939453
    10. ' _' → logprob: -17.75000762939453

Token 193: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0002444125711917877
    2. ').' → logprob: -9.000244140625
    3. '.append' → logprob: -9.625244140625
    4. ']' → logprob: -10.125244140625
    5. '.' → logprob: -12.000244140625
    6. ' ].' → logprob: -12.125244140625
    7. '[' → logprob: -13.625244140625
    8. '}.' → logprob: -14.625244140625
    9. '   ' → logprob: -14.750244140625
    10. ':].' → logprob: -15.375244140625

Token 194: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.128163257315464e-07
    2. ' append' → logprob: -15.375
    3. 'appen' → logprob: -17.5
    4. '.append' → logprob: -18.625
    5. 'app' → logprob: -19.625
    6. '	append' → logprob: -20.0
    7. 'Append' → logprob: -20.375
    8. 'add' → logprob: -21.375
    9. '_append' → logprob: -21.875
    10. ' ' → logprob: -21.875

Token 195: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.0007226797170005739
    2. '(' → logprob: -7.250722885131836
    3. 'node' → logprob: -11.875722885131836
    4. '(
' → logprob: -12.250722885131836
    5. ' node' → logprob: -14.375722885131836
    6. ' (' → logprob: -15.375722885131836
    7. '((' → logprob: -16.250722885131836
    8. '	node' → logprob: -17.000722885131836
    9. ',node' → logprob: -17.125722885131836
    10. '(Node' → logprob: -17.625722885131836

Token 196: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.03012983687222004
    2. '_u' → logprob: -3.530129909515381
    3. '_)' → logprob: -8.405129432678223
    4. '_' → logprob: -9.155129432678223
    5. ')' → logprob: -10.905129432678223
    6. 'v' → logprob: -11.405129432678223
    7. '_,' → logprob: -12.280129432678223
    8. 'u' → logprob: -13.155129432678223
    9. '   ' → logprob: -13.405129432678223
    10. '_
' → logprob: -13.405129432678223

Token 197: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.7729658540920354e-05
    2. ')
' → logprob: -10.750027656555176
    3. ' )' → logprob: -12.125027656555176
    4. '   ' → logprob: -14.250027656555176
    5. ')

' → logprob: -17.750028610229492
    6. '))' → logprob: -17.875028610229492
    7. '),' → logprob: -18.125028610229492
    8. ')#' → logprob: -18.500028610229492
    9. ')
' → logprob: -18.750028610229492
    10. '[' → logprob: -18.750028610229492

Token 198: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.490809417096898e-05
    2. 'node' → logprob: -10.625055313110352
    3. '[node' → logprob: -11.250055313110352
    4. ' adjacency' → logprob: -12.250055313110352
    5. 'adj' → logprob: -12.375055313110352
    6. ' node' → logprob: -12.500055313110352
    7. '   ' → logprob: -13.875055313110352
    8. '<|end|>' → logprob: -14.250055313110352
    9. ',node' → logprob: -14.375055313110352
    10. '[' → logprob: -14.625055313110352

Token 199: ' adjacency' (ID: 177015)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.4115692377090454
    2. ' adjacency' → logprob: -1.4115692377090454
    3. '   ' → logprob: -2.411569118499756
    4. 'node' → logprob: -5.661569118499756
    5. ' node' → logprob: -8.661569595336914
    6. ' ' → logprob: -9.286569595336914
    7. '[node' → logprob: -9.661569595336914
    8. ' adj' → logprob: -10.036569595336914
    9. '    
' → logprob: -10.786569595336914
    10. '    ' → logprob: -11.036569595336914

Token 200: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: 0.0
    2. '[' → logprob: -17.5
    3. 'List' → logprob: -17.625
    4. '_l' → logprob: -18.625
    5. '[_' → logprob: -18.625
    6. '_' → logprob: -18.625
    7. 'list' → logprob: -19.25
    8. ' _' → logprob: -19.625
    9. '._' → logprob: -20.625
    10. '```' → logprob: -21.0

Token 201: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -0.00015872348740231246
    2. '[' → logprob: -8.750158309936523
    3. '[user' → logprob: -16.500158309936523
    4. '_node' → logprob: -17.500158309936523
    5. '(node' → logprob: -17.625158309936523
    6. 'node' → logprob: -18.000158309936523
    7. '```' → logprob: -18.125158309936523
    8. '[]' → logprob: -18.375158309936523
    9. '[
' → logprob: -18.375158309936523
    10. ',node' → logprob: -18.750158309936523

Token 202: '_v' (ID: 5390)
  Prédit: '_u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -0.5231334567070007
    2. '_v' → logprob: -0.8981334567070007
    3. '   ' → logprob: -13.273133277893066
    4. ')' → logprob: -13.648133277893066
    5. '```' → logprob: -13.898133277893066
    6. '_' → logprob: -14.023133277893066
    7. '_uv' → logprob: -14.148133277893066
    8. ']' → logprob: -14.648133277893066
    9. '_s' → logprob: -14.898133277893066
    10. '_values' → logprob: -14.898133277893066

Token 203: '].' (ID: 1651)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.08167807757854462
    2. '].' → logprob: -2.5816781520843506
    3. ')' → logprob: -5.9566779136657715
    4. ']' → logprob: -9.58167839050293
    5. '.append' → logprob: -9.70667839050293
    6. '.' → logprob: -10.70667839050293
    7. '[' → logprob: -11.45667839050293
    8. '   ' → logprob: -11.70667839050293
    9. '])' → logprob: -11.83167839050293
    10. ']).' → logprob: -12.33167839050293

Token 204: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.128163257315464e-07
    2. '.append' → logprob: -16.375
    3. ' append' → logprob: -16.625
    4. 'appen' → logprob: -16.875
    5. 'app' → logprob: -18.125
    6. '	append' → logprob: -18.875
    7. '_append' → logprob: -20.625
    8. 'add' → logprob: -20.875
    9. 'adj' → logprob: -21.375
    10. 'prepend' → logprob: -21.625

Token 205: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.004085997585207224
    2. '(' → logprob: -5.504086017608643
    3. '(
' → logprob: -11.879085540771484
    4. ' (' → logprob: -15.129085540771484
    5. '(n' → logprob: -16.004085540771484
    6. '(Node' → logprob: -16.504085540771484
    7. '(u' → logprob: -16.754085540771484
    8. 'node' → logprob: -16.754085540771484
    9. '(nodes' → logprob: -17.504085540771484
    10. '(

' → logprob: -17.629085540771484

Token 206: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -3.4121114822482923e-06
    2. 'u' → logprob: -13.875003814697266
    3. ')' → logprob: -14.375003814697266
    4. '_' → logprob: -14.500003814697266
    5. '_v' → logprob: -14.625003814697266
    6. '_)' → logprob: -14.875003814697266
    7. ')_' → logprob: -16.125003814697266
    8. '[u' → logprob: -16.250003814697266
    9. '   ' → logprob: -16.500003814697266
    10. '```' → logprob: -17.125003814697266

Token 207: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.735893965815194e-05
    2. ')
' → logprob: -11.125017166137695
    3. ' )' → logprob: -13.250017166137695
    4. '<|end|>' → logprob: -16.000017166137695
    5. '))' → logprob: -16.125017166137695
    6. '   ' → logprob: -16.250017166137695
    7. '
' → logprob: -16.375017166137695
    8. ')

' → logprob: -16.875017166137695
    9. '```' → logprob: -17.125017166137695
    10. ')return' → logprob: -17.125017166137695

Token 208: 'current' (ID: 5804)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.08950194716453552
    2. 'stack' → logprob: -3.4645018577575684
    3. 'parent' → logprob: -3.9645018577575684
    4. 'depth' → logprob: -4.089501857757568
    5. 'def' → logprob: -4.964501857757568
    6. 'color' → logprob: -6.089501857757568
    7. 'sub' → logprob: -6.214501857757568
    8. ' visited' → logprob: -6.964501857757568
    9. '#' → logprob: -6.964501857757568
    10. 'distance' → logprob: -7.214501857757568

Token 209: '_l' (ID: 1478)
  Prédit: '_node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.2592228949069977
    2. '_' → logprob: -2.134222984313965
    3. '_depth' → logprob: -2.634222984313965
    4. '_parent' → logprob: -4.509222984313965
    5. '_path' → logprob: -4.759222984313965
    6. '_count' → logprob: -5.509222984313965
    7. '_value' → logprob: -5.634222984313965
    8. '_stack' → logprob: -6.134222984313965
    9. ' _' → logprob: -6.384222984313965
    10. '_val' → logprob: -6.759222984313965

Token 210: 'is' (ID: 276)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7282549142837524
    2. 'eft' → logprob: -1.2282549142837524
    3. 'ist' → logprob: -3.103254795074463
    4. '_node' → logprob: -3.103254795074463
    5. ' =' → logprob: -3.853254795074463
    6. 'node' → logprob: -3.978254795074463
    7. 'ca' → logprob: -3.978254795074463
    8. '=' → logprob: -4.228254795074463
    9. 'abel' → logprob: -4.603254795074463
    10. ',' → logprob: -4.978254795074463

Token 211: ' =' (ID: 314)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0005987849435769022
    2. ' =' → logprob: -8.375598907470703
    3. 'ting' → logprob: -8.875598907470703
    4. '_length' → logprob: -9.375598907470703
    5. '=' → logprob: -10.625598907470703
    6. 'ts' → logprob: -10.625598907470703
    7. 'tener' → logprob: -11.125598907470703
    8. '```' → logprob: -11.500598907470703
    9. '_t' → logprob: -11.750598907470703
    10. 'ted' → logprob: -11.875598907470703

Token 212: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.003339671529829502
    2. '[' → logprob: -5.878339767456055
    3. '[]
' → logprob: -8.503339767456055
    4. ' []' → logprob: -9.003339767456055
    5. '0' → logprob: -9.503339767456055
    6. '[]}' → logprob: -9.628339767456055
    7. '{}' → logprob: -11.753339767456055
    8. '[],' → logprob: -12.003339767456055
    9. '[:]' → logprob: -12.003339767456055
    10. '1' → logprob: -12.128339767456055

Token 213: 'result' (ID: 2521)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.146242156624794
    2. 'import' → logprob: -2.646242141723633
    3. 'for' → logprob: -4.146242141723633
    4. 'from' → logprob: -4.271242141723633
    5. 'current' → logprob: -4.771242141723633
    6. 'dp' → logprob: -5.021242141723633
    7. 'answer' → logprob: -5.146242141723633
    8. 'stack' → logprob: -5.771242141723633
    9. 'answers' → logprob: -5.896242141723633
    10. 'result' → logprob: -6.521242141723633

Token 214: '_l' (ID: 1478)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03339565917849541
    2. '_' → logprob: -4.033395767211914
    3. '=' → logprob: -4.908395767211914
    4. '_count' → logprob: -6.533395767211914
    5. '_values' → logprob: -7.158395767211914
    6. 's' → logprob: -7.283395767211914
    7. ',' → logprob: -7.408395767211914
    8. '_length' → logprob: -7.533395767211914
    9. ' ' → logprob: -7.908395767211914
    10. '_space' → logprob: -8.283395767211914

Token 215: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.6941276788711548
    2. '=' → logprob: -1.3191276788711548
    3. '=[]' → logprob: -2.1941275596618652
    4. 'ist' → logprob: -2.3191275596618652
    5. '[]' → logprob: -4.944127559661865
    6. ' =' → logprob: -4.944127559661865
    7. 'ength' → logprob: -5.819127559661865
    8. '=[]
' → logprob: -6.694127559661865
    9. '.append' → logprob: -6.944127559661865
    10. 'en' → logprob: -7.319127559661865

Token 216: '_lengths' (ID: 139878)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4743257164955139
    2. '=' → logprob: -0.9743257164955139
    3. '=[]' → logprob: -8.724326133728027
    4. '.' → logprob: -10.224326133728027
    5. '.append' → logprob: -10.974326133728027
    6. 's' → logprob: -11.599326133728027
    7. '[:]' → logprob: -12.349326133728027
    8. ':' → logprob: -12.474326133728027
    9. '.=' → logprob: -12.599326133728027
    10. '[]' → logprob: -12.849326133728027

Token 217: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026386335492134094
    2. '=' → logprob: -3.651386260986328
    3. ' ' → logprob: -9.651386260986328
    4. '=[]' → logprob: -11.901386260986328
    5. '.append' → logprob: -12.276386260986328
    6. '[:]' → logprob: -12.776386260986328
    7. '[]' → logprob: -13.401386260986328
    8. '  ' → logprob: -13.776386260986328
    9. '.' → logprob: -13.901386260986328
    10. ':' → logprob: -14.026386260986328

Token 218: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0005029928870499134
    2. '[' → logprob: -8.000502586364746
    3. ' []' → logprob: -8.750502586364746
    4. '[]
' → logprob: -11.750502586364746
    5. '[]}' → logprob: -14.875502586364746
    6. '[]>' → logprob: -15.750502586364746
    7. '[],' → logprob: -16.000503540039062
    8. '[node' → logprob: -16.375503540039062
    9. '[]

' → logprob: -16.500503540039062
    10. '[])' → logprob: -16.875503540039062

Token 219: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0020970876794308424
    2. ']' → logprob: -6.252097129821777
    3. '-' → logprob: -9.252097129821777
    4. 'None' → logprob: -10.002097129821777
    5. 'node' → logprob: -11.377097129821777
    6. ')' → logprob: -12.127097129821777
    7. '])' → logprob: -13.127097129821777
    8. ' ' → logprob: -13.752097129821777
    9. '()]' → logprob: -14.127097129821777
    10. '1' → logprob: -14.377097129821777

Token 220: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004839385801460594
    2. ']*' → logprob: -7.750483989715576
    3. ' for' → logprob: -10.875483512878418
    4. ' ]' → logprob: -11.375483512878418
    5. ',' → logprob: -11.625483512878418
    6. 'for' → logprob: -12.125483512878418
    7. ']*(' → logprob: -12.875483512878418
    8. ')' → logprob: -13.250483512878418
    9. ']
' → logprob: -13.625483512878418
    10. '])' → logprob: -14.500483512878418

Token 221: ' *' (ID: 425)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7899145483970642
    2. 'for' → logprob: -0.7899145483970642
    3. ' for' → logprob: -2.664914608001709
    4. 'def' → logprob: -3.914914608001709
    5. ',' → logprob: -6.664914608001709
    6. ',
' → logprob: -8.28991413116455
    7. '<|end|>' → logprob: -8.41491413116455
    8. '' → logprob: -8.78991413116455
    9. ')' → logprob: -8.91491413116455
    10. '

' → logprob: -9.16491413116455

Token 222: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.002555688377469778
    2. '(node' → logprob: -6.252555847167969
    3. ' node' → logprob: -7.377555847167969
    4. '(' → logprob: -14.627555847167969
    5. ' (' → logprob: -14.627555847167969
    6. 'n' → logprob: -14.877555847167969
    7. '[node' → logprob: -16.25255584716797
    8. '
' → logprob: -16.37755584716797
    9. '   ' → logprob: -16.62755584716797
    10. 'len' → logprob: -16.75255584716797

Token 223: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -4.36574100604048e-06
    2. '_' → logprob: -12.875004768371582
    3. 'count' → logprob: -13.750004768371582
    4. '_values' → logprob: -15.875004768371582
    5. '_c' → logprob: -16.000003814697266
    6. '_counts' → logprob: -16.000003814697266
    7. '__' → logprob: -16.125003814697266
    8. '_co' → logprob: -17.000003814697266
    9. ' _' → logprob: -17.000003814697266
    10. 's' → logprob: -17.875003814697266

Token 224: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.012321272864937782
    2. 'stack' → logprob: -5.012321472167969
    3. 'visited' → logprob: -5.887321472167969
    4. 'import' → logprob: -6.012321472167969
    5. '
' → logprob: -8.137321472167969
    6. 'from' → logprob: -11.012321472167969
    7. 'parent' → logprob: -11.012321472167969
    8. 'current' → logprob: -11.387321472167969
    9. 'sys' → logprob: -11.887321472167969
    10. 'depth' → logprob: -12.262321472167969

Token 225: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00037311585037969053
    2. 'import' → logprob: -8.250372886657715
    3. 'visited' → logprob: -9.250372886657715
    4. 'stack' → logprob: -11.125372886657715
    5. 'from' → logprob: -14.000372886657715
    6. 'sys' → logprob: -16.00037384033203
    7. ' def' → logprob: -17.25037384033203
    8. '```' → logprob: -17.25037384033203
    9. ' visited' → logprob: -17.87537384033203
    10. '_stack' → logprob: -19.00037384033203

Token 226: ' depth' (ID: 13636)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.005267434287816286
    2. 'dfs' → logprob: -5.25526762008667
    3. ' def' → logprob: -10.505267143249512
    4. 'def' → logprob: -13.005267143249512
    5. '_d' → logprob: -13.380267143249512
    6. ' lis' → logprob: -14.255267143249512
    7. 'd' → logprob: -14.630267143249512
    8. 'DFS' → logprob: -15.005267143249512
    9. ' d' → logprob: -15.255267143249512
    10. ' dp' → logprob: -15.630267143249512

Token 227: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -0.0005823421524837613
    2. '_' → logprob: -7.875582218170166
    3. 'first' → logprob: -9.250582695007324
    4. ' first' → logprob: -10.875582695007324
    5. '_search' → logprob: -10.875582695007324
    6. '_f' → logprob: -11.250582695007324
    7. '-first' → logprob: -11.625582695007324
    8. 'dfs' → logprob: -11.750582695007324
    9. '_FIRST' → logprob: -11.750582695007324
    10. 'First' → logprob: -12.000582695007324

Token 228: '_search' (ID: 23642)
  Prédit: '_search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_search' → logprob: -0.2523116171360016
    2. 'search' → logprob: -1.5023115873336792
    3. '_' → logprob: -8.252311706542969
    4. 'earch' → logprob: -9.502311706542969
    5. '(node' → logprob: -11.877311706542969
    6. '(' → logprob: -11.877311706542969
    7. 's' → logprob: -12.502311706542969
    8. 'Search' → logprob: -12.502311706542969
    9. '-search' → logprob: -12.752311706542969
    10. '
' → logprob: -13.252311706542969

Token 229: '(current' (ID: 15023)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.004157702904194593
    2. '(current' → logprob: -5.879157543182373
    3. '(' → logprob: -6.879157543182373
    4. '(u' → logprob: -8.379158020019531
    5. '(root' → logprob: -10.004158020019531
    6. '(cur' → logprob: -11.129158020019531
    7. ' (' → logprob: -11.504158020019531
    8. '(curr' → logprob: -11.754158020019531
    9. '(start' → logprob: -11.879158020019531
    10. '(
' → logprob: -12.629158020019531

Token 230: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.08674371987581253
    2. ',' → logprob: -2.5867438316345215
    3. ',node' → logprob: -5.8367438316345215
    4. '_,' → logprob: -6.2117438316345215
    5. '(node' → logprob: -6.9617438316345215
    6. '_' → logprob: -7.5867438316345215
    7. '):' → logprob: -7.7117438316345215
    8. ',_' → logprob: -8.086743354797363
    9. 'node' → logprob: -8.461743354797363
    10. ')' → logprob: -8.961743354797363

Token 231: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015264409012161195
    2. ',current' → logprob: -9.750152587890625
    3. '):' → logprob: -9.875152587890625
    4. ',node' → logprob: -10.750152587890625
    5. ' ,' → logprob: -11.125152587890625
    6. ',parent' → logprob: -12.875152587890625
    7. ':' → logprob: -13.625152587890625
    8. '   ' → logprob: -15.125152587890625
    9. ',u' → logprob: -15.250152587890625
    10. '):
' → logprob: -15.375152587890625

Token 232: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.30540892481803894
    2. ' parent' → logprob: -1.8054089546203613
    3. 'current' → logprob: -2.9304089546203613
    4. ' current' → logprob: -4.055408954620361
    5. 'path' → logprob: -4.055408954620361
    6. 'anc' → logprob: -5.930408954620361
    7. ' path' → logprob: -6.305408954620361
    8. 'prev' → logprob: -6.430408954620361
    9. 'depth' → logprob: -6.680408954620361
    10. 'visited' → logprob: -7.430408954620361

Token 233: '_node' (ID: 11390)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16120104491710663
    2. '):' → logprob: -1.911201000213623
    3. '):
' → logprob: -7.286201000213623
    4. '_node' → logprob: -9.286201477050781
    5. ')' → logprob: -9.661201477050781
    6. '=None' → logprob: -10.786201477050781
    7. ' ,' → logprob: -10.786201477050781
    8. ',node' → logprob: -10.786201477050781
    9. '_,' → logprob: -11.161201477050781
    10. ',current' → logprob: -11.536201477050781

Token 234: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6402456760406494
    2. ',' → logprob: -0.7652456760406494
    3. '):
' → logprob: -4.89024543762207
    4. ')' → logprob: -10.14024543762207
    5. '):
' → logprob: -11.39024543762207
    6. '   ' → logprob: -11.39024543762207
    7. ' ,' → logprob: -11.51524543762207
    8. ' ):' → logprob: -11.76524543762207
    9. ':' → logprob: -12.26524543762207
    10. ',
' → logprob: -13.14024543762207

Token 235: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007505440153181553
    2. 'global' → logprob: -8.250750541687012
    3. 'current' → logprob: -8.375750541687012
    4. 'import' → logprob: -9.625750541687012
    5. ' current' → logprob: -10.250750541687012
    6. ' for' → logprob: -10.500750541687012
    7. '   ' → logprob: -10.500750541687012
    8. ' global' → logprob: -10.625750541687012
    9. 'for' → logprob: -10.625750541687012
    10. '    
' → logprob: -10.750750541687012

Token 236: ' node' (ID: 4596)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.5737869143486023
    2. '   ' → logprob: -1.573786973953247
    3. 'import' → logprob: -1.948786973953247
    4. 'from' → logprob: -3.698786973953247
    5. ' pos' → logprob: -3.823786973953247
    6. ' import' → logprob: -4.823786735534668
    7. 'idx' → logprob: -4.948786735534668
    8. 'for' → logprob: -5.198786735534668
    9. ' from' → logprob: -5.323786735534668
    10. ' for' → logprob: -5.823786735534668

Token 237: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.2279050499200821
    2. '_val' → logprob: -1.602905035018921
    3. '_' → logprob: -6.4779052734375
    4. 'value' → logprob: -7.7279052734375
    5. '_values' → logprob: -8.2279052734375
    6. 'val' → logprob: -9.3529052734375
    7. '_index' → logprob: -9.9779052734375
    8. '_idx' → logprob: -10.6029052734375
    9. ' =' → logprob: -10.9779052734375
    10. '_vals' → logprob: -11.6029052734375

Token 238: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31348392367362976
    2. '=' → logprob: -1.3134839534759521
    3. ')' → logprob: -9.313484191894531
    4. '   ' → logprob: -10.438484191894531
    5. '=current' → logprob: -10.438484191894531
    6. 'current' → logprob: -11.063484191894531
    7. '_value' → logprob: -11.188484191894531
    8. '=node' → logprob: -11.813484191894531
    9. '_current' → logprob: -12.063484191894531
    10. '_index' → logprob: -12.313484191894531

Token 239: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.0002707529056351632
    2. ' node' → logprob: -8.25027084350586
    3. 'current' → logprob: -11.87527084350586
    4. '-node' → logprob: -13.87527084350586
    5. '   ' → logprob: -14.62527084350586
    6. ' ' → logprob: -15.00027084350586
    7. '[node' → logprob: -15.25027084350586
    8. '	node' → logprob: -15.75027084350586
    9. 'to' → logprob: -16.37527084350586
    10. 'bis' → logprob: -16.62527084350586

Token 240: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.0023098846431821585
    2. 'values' → logprob: -6.377309799194336
    3. '[current' → logprob: -7.877309799194336
    4. 'current' → logprob: -9.002309799194336
    5. '[node' → logprob: -9.752309799194336
    6. '_vals' → logprob: -11.627309799194336
    7. 's' → logprob: -12.377309799194336
    8. '_current' → logprob: -12.377309799194336
    9. 'node' → logprob: -12.377309799194336
    10. 'Values' → logprob: -12.627309799194336

Token 241: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -3.47626737493556e-05
    2. '[' → logprob: -11.00003433227539
    3. 'current' → logprob: -11.25003433227539
    4. '[
' → logprob: -13.00003433227539
    5. '   ' → logprob: -13.87503433227539
    6. '[node' → logprob: -14.87503433227539
    7. '[curr' → logprob: -15.00003433227539
    8. '[cur' → logprob: -15.00003433227539
    9. ' current' → logprob: -15.50003433227539
    10. ' [' → logprob: -15.50003433227539

Token 242: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -8.470901229884475e-05
    2. '[node' → logprob: -10.00008487701416
    3. 'node' → logprob: -10.75008487701416
    4. '_l' → logprob: -11.37508487701416
    5. '_' → logprob: -13.62508487701416
    6. ')' → logprob: -13.75008487701416
    7. '])' → logprob: -14.37508487701416
    8. '_token' → logprob: -14.37508487701416
    9. ' node' → logprob: -15.00008487701416
    10. '_NODE' → logprob: -15.25008487701416

Token 243: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09164044260978699
    2. ')
' → logprob: -2.5916404724121094
    3. '   ' → logprob: -4.466640472412109
    4. ']' → logprob: -6.966640472412109
    5. ' )' → logprob: -9.46664047241211
    6. '])' → logprob: -9.84164047241211
    7. ' )
' → logprob: -10.46664047241211
    8. ')
' → logprob: -10.96664047241211
    9. ']
' → logprob: -11.21664047241211
    10. ')

' → logprob: -11.34164047241211

Token 244: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30499380826950073
    2. 'pos' → logprob: -2.0549938678741455
    3. ' pos' → logprob: -2.4299938678741455
    4. ' idx' → logprob: -3.5549938678741455
    5. 'idx' → logprob: -4.429993629455566
    6. '    
' → logprob: -5.804993629455566
    7. ' position' → logprob: -7.929993629455566
    8. 'position' → logprob: -7.929993629455566
    9. ' current' → logprob: -8.054993629455566
    10. ' insertion' → logprob: -8.054993629455566

Token 245: ' lis' (ID: 20784)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0036608832888305187
    2. 'position' → logprob: -6.003660678863525
    3. 'idx' → logprob: -7.253660678863525
    4. 'insert' → logprob: -8.128661155700684
    5. 'index' → logprob: -9.503661155700684
    6. 'import' → logprob: -9.878661155700684
    7. 'in' → logprob: -10.753661155700684
    8. '   ' → logprob: -10.753661155700684
    9. ' pos' → logprob: -11.628661155700684
    10. 'if' → logprob: -14.128661155700684

Token 246: '_position' (ID: 23739)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.720511794090271
    2. '_idx' → logprob: -1.220511794090271
    3. '_index' → logprob: -1.720511794090271
    4. '_length' → logprob: -3.8455119132995605
    5. '_position' → logprob: -4.5955119132995605
    6. '_len' → logprob: -5.3455119132995605
    7. 'pos' → logprob: -6.8455119132995605
    8. ' =' → logprob: -7.0955119132995605
    9. '_' → logprob: -8.095511436462402
    10. 'import' → logprob: -8.345511436462402

Token 247: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326553225517273
    2. '=' → logprob: -1.3132655620574951
    3. '   ' → logprob: -12.813265800476074
    4. ' ' → logprob: -14.063265800476074
    5. '    ' → logprob: -15.938265800476074
    6. ' =
' → logprob: -16.688264846801758
    7. '	' → logprob: -16.938264846801758
    8. '  ' → logprob: -17.063264846801758
    9. '=
' → logprob: -18.313264846801758
    10. '＝' → logprob: -18.438264846801758

Token 248: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.011049113236367702
    2. ' bis' → logprob: -4.511049270629883
    3. 'b' → logprob: -14.636049270629883
    4. '   ' → logprob: -15.386049270629883
    5. 'len' → logprob: -15.386049270629883
    6. '0' → logprob: -15.886049270629883
    7. '	b' → logprob: -16.136049270629883
    8. ' ' → logprob: -16.761049270629883
    9. 'bi' → logprob: -17.261049270629883
    10. '
' → logprob: -17.636049270629883

Token 249: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.00014931005716789514
    2. 'ct' → logprob: -10.000149726867676
    3. 'sect' → logprob: -10.000149726867676
    4. 'e' → logprob: -11.125149726867676
    5. '```' → logprob: -11.750149726867676
    6. '_' → logprob: -11.875149726867676
    7. 'ects' → logprob: -12.625149726867676
    8. 't' → logprob: -12.875149726867676
    9. 'ce' → logprob: -13.250149726867676
    10. 'et' → logprob: -13.500149726867676

Token 250: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.008033500984311104
    2. '_r' → logprob: -4.883033275604248
    3. 'r' → logprob: -8.508033752441406
    4. 'l' → logprob: -9.383033752441406
    5. '(current' → logprob: -9.508033752441406
    6. 'current' → logprob: -10.008033752441406
    7. '_left' → logprob: -12.133033752441406
    8. '[current' → logprob: -12.633033752441406
    9. '_current' → logprob: -13.133033752441406
    10. ' current' → logprob: -13.133033752441406

Token 251: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.006727445870637894
    2. 'current' → logprob: -5.00672721862793
    3. ' current' → logprob: -11.75672721862793
    4. '(' → logprob: -13.25672721862793
    5. '(
' → logprob: -14.13172721862793
    6. '
' → logprob: -14.75672721862793
    7. ',current' → logprob: -14.75672721862793
    8. '[current' → logprob: -15.25672721862793
    9. '	current' → logprob: -15.50672721862793
    10. '=current' → logprob: -15.75672721862793

Token 252: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.08987443149089813
    2. '(current' → logprob: -2.464874505996704
    3. 'current' → logprob: -7.214874267578125
    4. 'l' → logprob: -9.839874267578125
    5. '[current' → logprob: -10.089874267578125
    6. '=current' → logprob: -10.464874267578125
    7. 's' → logprob: -10.964874267578125
    8. '_list' → logprob: -11.089874267578125
    9. '_current' → logprob: -11.089874267578125
    10. ' current' → logprob: -12.214874267578125

Token 253: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0013392893597483635
    2. '(node' → logprob: -7.126339435577393
    3. '(current' → logprob: -9.126338958740234
    4. '[node' → logprob: -9.376338958740234
    5. 'node' → logprob: -9.751338958740234
    6. 's' → logprob: -10.001338958740234
    7. ')' → logprob: -10.501338958740234
    8. '   ' → logprob: -10.501338958740234
    9. 'current' → logprob: -10.626338958740234
    10. '
' → logprob: -10.751338958740234

Token 254: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5125788450241089
    2. '(node' → logprob: -1.2625788450241089
    3. ',node' → logprob: -2.1375789642333984
    4. ' ,' → logprob: -8.887578964233398
    5. '(' → logprob: -11.512578964233398
    6. '[node' → logprob: -11.637578964233398
    7. ' (' → logprob: -11.637578964233398
    8. ',
' → logprob: -11.637578964233398
    9. ',(' → logprob: -12.762578964233398
    10. '   ' → logprob: -13.012578964233398

Token 255: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.31326842308044434
    2. 'node' → logprob: -1.3132684230804443
    3. '(node' → logprob: -12.688268661499023
    4. '	node' → logprob: -13.563268661499023
    5. '   ' → logprob: -13.813268661499023
    6. '[node' → logprob: -14.813268661499023
    7. '
' → logprob: -15.313268661499023
    8. 'Node' → logprob: -15.563268661499023
    9. ',node' → logprob: -15.688268661499023
    10. ')' → logprob: -16.313268661499023

Token 256: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -2.951771421066951e-05
    2. 'value' → logprob: -10.625029563903809
    3. '_' → logprob: -12.375029563903809
    4. 'alue' → logprob: -15.250029563903809
    5. '_val' → logprob: -16.250028610229492
    6. ')' → logprob: -16.375028610229492
    7. '_values' → logprob: -16.375028610229492
    8. ' _' → logprob: -16.500028610229492
    9. 'Value' → logprob: -16.625028610229492
    10. '_node' → logprob: -16.625028610229492

Token 257: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2519535422325134
    2. ')
' → logprob: -1.5019536018371582
    3. ')

' → logprob: -11.001953125
    4. ' )
' → logprob: -12.751953125
    5. ' )' → logprob: -13.001953125
    6. ')
' → logprob: -13.751953125
    7. '   ' → logprob: -14.001953125
    8. ')#' → logprob: -15.501953125
    9. ')`
' → logprob: -16.126953125
    10. ')`' → logprob: -16.376953125

Token 258: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8171560764312744
    2. '
' → logprob: -1.0671560764312744
    3. 'if' → logprob: -2.4421560764312744
    4. '    
' → logprob: -3.0671560764312744
    5. ' if' → logprob: -3.0671560764312744
    6. ' 
' → logprob: -4.942155838012695
    7. ')' → logprob: -4.942155838012695
    8. '\n' → logprob: -5.567155838012695
    9. '  
' → logprob: -5.567155838012695
    10. '```' → logprob: -6.067155838012695

Token 259: ' did' (ID: 2242)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0036519800778478384
    2. ' if' → logprob: -5.878652095794678
    3. '   ' → logprob: -7.253652095794678
    4. '#' → logprob: -9.75365161895752
    5. '    
' → logprob: -10.25365161895752
    6. 'current' → logprob: -10.87865161895752
    7. '```' → logprob: -11.12865161895752
    8. '	if' → logprob: -12.37865161895752
    9. 'If' → logprob: -13.50365161895752
    10. ' current' → logprob: -13.87865161895752

Token 260: '_append' (ID: 69293)
  Prédit: '_replace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_replace' → logprob: -0.4584466814994812
    2. 'x' → logprob: -1.708446741104126
    3. '_insert' → logprob: -3.083446741104126
    4. '_append' → logprob: -3.333446741104126
    5. '_push' → logprob: -3.958446741104126
    6. 'replace' → logprob: -4.083446502685547
    7. 'push' → logprob: -4.583446502685547
    8. '_change' → logprob: -4.833446502685547
    9. 'dx' → logprob: -5.333446502685547
    10. '_modify' → logprob: -5.333446502685547

Token 261: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12702985107898712
    2. '=' → logprob: -2.1270298957824707
    3. ' ' → logprob: -9.752029418945312
    4. '_' → logprob: -10.627029418945312
    5. '=False' → logprob: -12.502029418945312
    6. 'if' → logprob: -13.002029418945312
    7. '=True' → logprob: -13.252029418945312
    8. '  ' → logprob: -13.252029418945312
    9. '   ' → logprob: -13.377029418945312
    10. ':' → logprob: -13.502029418945312

Token 262: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.10860110074281693
    2. 'lis' → logprob: -2.8586010932922363
    3. ' False' → logprob: -3.2336010932922363
    4. 'len' → logprob: -5.858601093292236
    5. ' lis' → logprob: -5.858601093292236
    6. 'Lis' → logprob: -9.358601570129395
    7. ' len' → logprob: -9.983601570129395
    8. 'ls' → logprob: -10.233601570129395
    9. 'True' → logprob: -10.233601570129395
    10. 'li' → logprob: -10.233601570129395

Token 263: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.049946386367082596
    2. ' if' → logprob: -3.6749463081359863
    3. 'if' → logprob: -4.299946308135986
    4. '    
' → logprob: -4.924946308135986
    5. ' 
' → logprob: -6.424946308135986
    6. '
' → logprob: -7.799946308135986
    7. '   
' → logprob: -8.549946784973145
    8. ' ' → logprob: -9.549946784973145
    9. '    ' → logprob: -9.674946784973145
    10. '     
' → logprob: -9.799946784973145

Token 264: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33058446645736694
    2. ' if' → logprob: -1.3305845260620117
    3. 'if' → logprob: -4.080584526062012
    4. '    
' → logprob: -8.830584526062012
    5. ' 
' → logprob: -9.830584526062012
    6. '
' → logprob: -10.330584526062012
    7. '    ' → logprob: -10.955584526062012
    8. ' ' → logprob: -11.955584526062012
    9. '	if' → logprob: -12.455584526062012
    10. '  ' → logprob: -12.580584526062012

Token 265: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.005494141485542059
    2. ' if' → logprob: -5.255494117736816
    3. '   ' → logprob: -8.255494117736816
    4. '```' → logprob: -15.755494117736816
    5. '    
' → logprob: -16.130495071411133
    6. '	if' → logprob: -16.130495071411133
    7. '
' → logprob: -16.130495071411133
    8. 'If' → logprob: -17.630495071411133
    9. ' ' → logprob: -18.255495071411133
    10. '    ' → logprob: -18.755495071411133

Token 266: ' lis' (ID: 20784)
  Prédit: ' lis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lis' → logprob: -0.0028057026211172342
    2. 'lis' → logprob: -5.877805709838867
    3. ' len' → logprob: -14.502805709838867
    4. 'l' → logprob: -15.877805709838867
    5. ' ' → logprob: -16.252805709838867
    6. 'len' → logprob: -16.752805709838867
    7. ' lise' → logprob: -16.877805709838867
    8. '   ' → logprob: -17.752805709838867
    9. 'Lis' → logprob: -17.752805709838867
    10. ' lst' → logprob: -18.377805709838867

Token 267: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -2.339278580620885e-06
    2. 'position' → logprob: -14.000001907348633
    3. '_pos' → logprob: -14.000001907348633
    4. '_' → logprob: -15.375001907348633
    5. '_length' → logprob: -16.500001907348633
    6. ' _' → logprob: -16.875001907348633
    7. '   ' → logprob: -17.000001907348633
    8. '
' → logprob: -17.000001907348633
    9. 'osition' → logprob: -17.125001907348633
    10. '...' → logprob: -17.875001907348633

Token 268: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.008822325617074966
    2. ' ==' → logprob: -4.758822441101074
    3. '>=' → logprob: -8.508822441101074
    4. '==
' → logprob: -13.133822441101074
    5. ' >=' → logprob: -13.383822441101074
    6. '=' → logprob: -14.383822441101074
    7. 'equal' → logprob: -14.508822441101074
    8. ']==' → logprob: -14.633822441101074
    9. '===' → logprob: -14.883822441101074
    10. 'is' → logprob: -15.383822441101074

Token 269: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00033593899570405483
    2. ' len' → logprob: -8.000335693359375
    3. '   ' → logprob: -14.625335693359375
    4. '(len' → logprob: -17.250335693359375
    5. ' ' → logprob: -17.375335693359375
    6. '	len' → logprob: -17.625335693359375
    7. '=len' → logprob: -18.250335693359375
    8. 'length' → logprob: -19.125335693359375
    9. '
' → logprob: -20.000335693359375
    10. '[len' → logprob: -20.375335693359375

Token 270: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.0005763856461271644
    2. 'current' → logprob: -7.500576496124268
    3. '(' → logprob: -10.75057601928711
    4. '(
' → logprob: -14.00057601928711
    5. ' current' → logprob: -14.12557601928711
    6. '	current' → logprob: -16.12557601928711
    7. '$current' → logprob: -16.62557601928711
    8. '(cur' → logprob: -16.87557601928711
    9. '[current' → logprob: -17.12557601928711
    10. ',current' → logprob: -17.37557601928711

Token 271: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.25304874777793884
    2. 'current' → logprob: -1.6280487775802612
    3. '_current' → logprob: -3.8780486583709717
    4. '(current' → logprob: -5.128048896789551
    5. '_c' → logprob: -8.50304889678955
    6. ' current' → logprob: -9.00304889678955
    7. 'l' → logprob: -9.12804889678955
    8. '[current' → logprob: -9.25304889678955
    9. 's' → logprob: -10.50304889678955
    10. ')' → logprob: -10.50304889678955

Token 272: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.004962150938808918
    2. 'current' → logprob: -5.379961967468262
    3. '   ' → logprob: -9.254961967468262
    4. ')' → logprob: -9.754961967468262
    5. ')
' → logprob: -10.504961967468262
    6. '```' → logprob: -10.629961967468262
    7. '(current' → logprob: -11.004961967468262
    8. 'ist' → logprob: -11.129961967468262
    9. ' current' → logprob: -11.254961967468262
    10. '_current' → logprob: -11.379961967468262

Token 273: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2258627861738205
    2. '):' → logprob: -1.600862741470337
    3. ':' → logprob: -8.850862503051758
    4. '   ' → logprob: -8.850862503051758
    5. ')' → logprob: -9.100862503051758
    6. ':
' → logprob: -10.350862503051758
    7. '):
' → logprob: -12.100862503051758
    8. '       ' → logprob: -13.100862503051758
    9. ' ):
' → logprob: -13.100862503051758
    10. '():
' → logprob: -13.225862503051758

Token 274: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012587585486471653
    2. ' current' → logprob: -4.762587547302246
    3. 'current' → logprob: -6.262587547302246
    4. '   ' → logprob: -6.637587547302246
    5. ':
' → logprob: -8.637587547302246
    6. '        
' → logprob: -9.012587547302246
    7. ':' → logprob: -9.262587547302246
    8. '):
' → logprob: -9.512587547302246
    9. '
' → logprob: -9.637587547302246
    10. '(current' → logprob: -9.887587547302246

Token 275: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.1109873503446579
    2. 'current' (adapté à ' current') → logprob: -2.610987424850464
    3. '   ' → logprob: -3.485987424850464
    4. '       ' → logprob: -7.110987186431885
    5. '	current' → logprob: -9.360987663269043
    6. '
' → logprob: -11.735987663269043
    7. '    ' → logprob: -11.735987663269043
    8. ' ' → logprob: -11.985987663269043
    9. '_current' → logprob: -12.110987663269043
    10. '    
' → logprob: -12.110987663269043

Token 276: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -1.1994775377388578e-05
    2. 'l' → logprob: -12.125012397766113
    3. 'append' → logprob: -13.000012397766113
    4. '_' → logprob: -13.500012397766113
    5. 'current' → logprob: -13.750012397766113
    6. '.append' → logprob: -14.625012397766113
    7. '_current' → logprob: -15.000012397766113
    8. '_append' → logprob: -15.625012397766113
    9. 'lis' → logprob: -15.625012397766113
    10. '
' → logprob: -16.375011444091797

Token 277: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.004844003822654486
    2. 'append' → logprob: -5.7548441886901855
    3. '.append' → logprob: -7.1298441886901855
    4. 'current' → logprob: -7.5048441886901855
    5. '   ' → logprob: -8.879843711853027
    6. 'ist' → logprob: -10.629843711853027
    7. '_append' → logprob: -10.879843711853027
    8. 's' → logprob: -11.379843711853027
    9. '```' → logprob: -11.504843711853027
    10. ' append' → logprob: -11.629843711853027

Token 278: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.727905979962088e-05
    2. '.' → logprob: -10.00004768371582
    3. '.app' → logprob: -13.75004768371582
    4. '.ap' → logprob: -14.37504768371582
    5. 'append' → logprob: -16.75004768371582
    6. '.push' → logprob: -17.25004768371582
    7. '_append' → logprob: -18.25004768371582
    8. '.Append' → logprob: -18.37504768371582
    9. ' .' → logprob: -18.75004768371582
    10. '.extend' → logprob: -18.87504768371582

Token 279: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -4.644463479053229e-05
    2. 'node' → logprob: -10.000046730041504
    3. '(' → logprob: -14.375046730041504
    4. '(
' → logprob: -15.000046730041504
    5. ' node' → logprob: -16.750045776367188
    6. '[node' → logprob: -18.625045776367188
    7. '	node' → logprob: -19.000045776367188
    8. ',node' → logprob: -19.000045776367188
    9. '(value' → logprob: -19.125045776367188
    10. '(n' → logprob: -19.500045776367188

Token 280: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -2.451116051815916e-05
    2. 'value' → logprob: -10.625024795532227
    3. '_' → logprob: -15.875024795532227
    4. ')' → logprob: -17.625024795532227
    5. ' value' → logprob: -17.750024795532227
    6. 'Value' → logprob: -17.875024795532227
    7. '_values' → logprob: -18.125024795532227
    8. '_VALUE' → logprob: -18.875024795532227
    9. 'alue' → logprob: -19.625024795532227
    10. '_position' → logprob: -19.750024795532227

Token 281: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16192390024662018
    2. ')
' → logprob: -1.911923885345459
    3. '       ' → logprob: -6.661923885345459
    4. '<|end|>' → logprob: -8.536924362182617
    5. '   ' → logprob: -9.036924362182617
    6. '
' → logprob: -10.786924362182617
    7. '           ' → logprob: -10.786924362182617
    8. ')did' → logprob: -10.911924362182617
    9. ',' → logprob: -11.661924362182617
    10. '<|end|>' → logprob: -12.036924362182617

Token 282: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015587854431942105
    2. 'else' → logprob: -6.751558780670166
    3. '    
' → logprob: -8.126559257507324
    4. ' else' → logprob: -9.501559257507324
    5. '        
' → logprob: -12.751559257507324
    6. ')' → logprob: -12.751559257507324
    7. ':' → logprob: -13.126559257507324
    8. '
' → logprob: -13.251559257507324
    9. '       ' → logprob: -13.626559257507324
    10. ',' → logprob: -14.126559257507324

Token 283: ' did' (ID: 2242)
  Prédit: 'did'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'did' (adapté à ' did') → logprob: -0.009427614510059357
    2. '   ' → logprob: -5.259427547454834
    3. ' did' → logprob: -5.759427547454834
    4. '       ' → logprob: -6.884427547454834
    5. 'd' → logprob: -12.509428024291992
    6. '           ' → logprob: -12.634428024291992
    7. '
' → logprob: -15.009428024291992
    8. '  ' → logprob: -15.634428024291992
    9. 'do' → logprob: -15.884428024291992
    10. '    ' → logprob: -16.009428024291992

Token 284: '_append' (ID: 69293)
  Prédit: '_append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_append' → logprob: -0.001552355824969709
    2. 'append' → logprob: -6.501552581787109
    3. 'Append' → logprob: -11.25155258178711
    4. '_' → logprob: -11.25155258178711
    5. '_APPEND' → logprob: -11.25155258178711
    6. '.append' → logprob: -13.25155258178711
    7. '_app' → logprob: -13.25155258178711
    8. '	append' → logprob: -13.87655258178711
    9. '_extend' → logprob: -14.12655258178711
    10. 'd' → logprob: -14.25155258178711

Token 285: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20181889832019806
    2. ' =' → logprob: -1.7018189430236816
    3. '=True' → logprob: -7.826818943023682
    4. '   ' → logprob: -13.076818466186523
    5. 'True' → logprob: -13.076818466186523
    6. ' ' → logprob: -14.076818466186523
    7. ' True' → logprob: -14.326818466186523
    8. '=False' → logprob: -14.576818466186523
    9. '    ' → logprob: -15.701818466186523
    10. '=
' → logprob: -15.951818466186523

Token 286: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0009114635176956654
    2. ' True' → logprob: -7.000911235809326
    3. '(True' → logprob: -18.750911712646484
    4. 'Tr' → logprob: -19.750911712646484
    5. 'true' → logprob: -20.500911712646484
    6. '=True' → logprob: -20.750911712646484
    7. '   ' → logprob: -21.375911712646484
    8. ' ' → logprob: -22.750911712646484
    9. 'TRUE' → logprob: -23.000911712646484
    10. 'False' → logprob: -23.625911712646484

Token 287: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010884164832532406
    2. ' else' → logprob: -5.0108842849731445
    3. 'else' → logprob: -5.5108842849731445
    4. '    
' → logprob: -9.510884284973145
    5. '
' → logprob: -11.010884284973145
    6. ':' → logprob: -12.135884284973145
    7. 'elif' → logprob: -12.385884284973145
    8. '	else' → logprob: -12.760884284973145
    9. ' elif' → logprob: -13.135884284973145
    10. ';' → logprob: -13.510884284973145

Token 288: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6485502123832703
    2. 'else' → logprob: -0.7735502123832703
    3. ' else' → logprob: -4.148550033569336
    4. 'elif' → logprob: -10.773550033569336
    5. '    
' → logprob: -12.648550033569336
    6. '	else' → logprob: -12.773550033569336
    7. '```' → logprob: -13.148550033569336
    8. ')' → logprob: -13.148550033569336
    9. '_else' → logprob: -13.648550033569336
    10. 'current' → logprob: -14.523550033569336

Token 289: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.16294406354427338
    2. ' else' → logprob: -1.9129440784454346
    3. '   ' → logprob: -5.9129438400268555
    4. 'elif' → logprob: -11.787943840026855
    5. '	else' → logprob: -12.912943840026855
    6. '_else' → logprob: -14.037943840026855
    7. ' elif' → logprob: -14.787943840026855
    8. '    
' → logprob: -16.037944793701172
    9. '```' → logprob: -16.037944793701172
    10. 'current' → logprob: -16.162944793701172

Token 290: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2636931538581848
    2. '       ' → logprob: -2.13869309425354
    3. ':' → logprob: -2.26369309425354
    4. '   ' → logprob: -5.388693332672119
    5. ' :
' → logprob: -5.888693332672119
    6. ' current' → logprob: -6.138693332672119
    7. 'current' → logprob: -8.763692855834961
    8. ' :' → logprob: -9.388692855834961
    9. '    ' → logprob: -9.763692855834961
    10. '):
' → logprob: -9.888692855834961

Token 291: '       ' (ID: 309)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.1576780527830124
    2. ' current' → logprob: -2.6576781272888184
    3. '       ' → logprob: -3.1576781272888184
    4. '   ' → logprob: -3.4076781272888184
    5. '	current' → logprob: -9.53267765045166
    6. ',current' → logprob: -11.15767765045166
    7. '[current' → logprob: -11.15767765045166
    8. '_current' → logprob: -12.15767765045166
    9. '$current' → logprob: -12.90767765045166
    10. '=current' → logprob: -13.03267765045166

Token 292: ' previous' (ID: 5880)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.18461047112941742
    2. 'old' → logprob: -2.184610366821289
    3. 'original' → logprob: -3.684610366821289
    4. ' current' → logprob: -4.059610366821289
    5. 'saved' → logprob: -4.809610366821289
    6. 'temp' → logprob: -6.184610366821289
    7. ' old' → logprob: -6.684610366821289
    8. '   ' → logprob: -7.559610366821289
    9. 'backup' → logprob: -7.684610366821289
    10. 'prev' → logprob: -7.934610366821289

Token 293: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.015204273164272308
    2. '_val' → logprob: -4.265204429626465
    3. '_element' → logprob: -7.890204429626465
    4. ' =' → logprob: -8.390204429626465
    5. '_current' → logprob: -8.390204429626465
    6. '=current' → logprob: -9.515204429626465
    7. '_elem' → logprob: -9.890204429626465
    8. '=' → logprob: -10.015204429626465
    9. 'value' → logprob: -10.765204429626465
    10. '_' → logprob: -12.265204429626465

Token 294: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38759586215019226
    2. '=' → logprob: -1.1375958919525146
    3. '=current' → logprob: -7.2625956535339355
    4. '   ' → logprob: -12.262596130371094
    5. ' ' → logprob: -12.387596130371094
    6. ',' → logprob: -12.512596130371094
    7. '[current' → logprob: -12.512596130371094
    8. '    ' → logprob: -13.387596130371094
    9. 'current' → logprob: -13.512596130371094
    10. ',current' → logprob: -13.512596130371094

Token 295: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.023245595395565033
    2. ' current' → logprob: -3.7732455730438232
    3. '[current' → logprob: -16.648244857788086
    4. '(current' → logprob: -17.523244857788086
    5. '   ' → logprob: -17.898244857788086
    6. '	current' → logprob: -18.273244857788086
    7. '$current' → logprob: -19.273244857788086
    8. '=current' → logprob: -19.523244857788086
    9. 'Current' → logprob: -19.773244857788086
    10. '
' → logprob: -20.148244857788086

Token 296: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -1.9361264946837764e-07
    2. 'l' → logprob: -17.625
    3. '_list' → logprob: -18.0
    4. 'current' → logprob: -18.625
    5. '_' → logprob: -19.25
    6. '[current' → logprob: -19.25
    7. '_tokens' → logprob: -19.625
    8. 's' → logprob: -20.0
    9. '_token' → logprob: -20.0
    10. '_value' → logprob: -20.25

Token 297: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -1.9385402993066236e-05
    2. 's' → logprob: -11.250019073486328
    3. 'current' → logprob: -12.500019073486328
    4. '   ' → logprob: -14.750019073486328
    5. '[' → logprob: -15.000019073486328
    6. 'st' → logprob: -15.125019073486328
    7. 'IS' → logprob: -15.625019073486328
    8. '[current' → logprob: -15.875019073486328
    9. 'lis' → logprob: -15.875019073486328
    10. 'ist' → logprob: -16.000019073486328

Token 298: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.896309739408025e-07
    2. '[l' → logprob: -15.125000953674316
    3. ' [' → logprob: -15.625000953674316
    4. 'lis' → logprob: -16.25
    5. '[
' → logprob: -16.375
    6. '   ' → logprob: -16.625
    7. '```' → logprob: -16.875
    8. '[[' → logprob: -17.875
    9. '
' → logprob: -18.25
    10. ' lis' → logprob: -18.5

Token 299: 'lis' (ID: 34959)
  Prédit: 'lis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lis' → logprob: -4.47757811343763e-05
    2. ' lis' → logprob: -10.125044822692871
    3. 'bis' → logprob: -13.625044822692871
    4. 'lus' → logprob: -13.750044822692871
    5. 'ls' → logprob: -14.250044822692871
    6. '[' → logprob: -14.750044822692871
    7. 'l' → logprob: -14.750044822692871
    8. 'lic' → logprob: -15.750044822692871
    9. 'Lis' → logprob: -16.125043869018555
    10. 'list' → logprob: -16.375043869018555

Token 300: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.002843271940946579
    2. 'osition' → logprob: -6.252843379974365
    3. 'position' → logprob: -7.127843379974365
    4. 'ition' → logprob: -10.252842903137207
    5. 's' → logprob: -10.377842903137207
    6. '   ' → logprob: -12.377842903137207
    7. 'os' → logprob: -12.377842903137207
    8. 'ion' → logprob: -12.502842903137207
    9. 'pos' → logprob: -12.627842903137207
    10. ']' → logprob: -12.752842903137207

Token 301: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.021387649700045586
    2. ']
' → logprob: -4.271387577056885
    3. ')' → logprob: -5.271387577056885
    4. '<|end|>' → logprob: -7.146387577056885
    5. ')
' → logprob: -7.896387577056885
    6. 'current' → logprob: -8.021388053894043
    7. ' ]' → logprob: -8.396388053894043
    8. '   ' → logprob: -8.771388053894043
    9. '],' → logprob: -10.396388053894043
    10. '])' → logprob: -10.521388053894043

Token 302: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07393468171358109
    2. 'current' → logprob: -2.94893479347229
    3. ' current' → logprob: -4.073934555053711
    4. '   ' → logprob: -6.448934555053711
    5. '        
' → logprob: -9.448934555053711
    6. ',current' → logprob: -9.948934555053711
    7. '[current' → logprob: -10.448934555053711
    8. '
' → logprob: -10.448934555053711
    9. ' 
' → logprob: -10.573934555053711
    10. '$current' → logprob: -11.198934555053711

Token 303: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.00256757577881217
    2. ' current' → logprob: -6.002567768096924
    3. '   ' → logprob: -10.002567291259766
    4. '       ' → logprob: -10.002567291259766
    5. '	current' → logprob: -14.127567291259766
    6. '           ' → logprob: -15.377567291259766
    7. '[current' → logprob: -16.127567291259766
    8. ',current' → logprob: -17.127567291259766
    9. ' ' → logprob: -17.377567291259766
    10. '.current' → logprob: -17.627567291259766

Token 304: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -5.080963092041202e-06
    2. '_' → logprob: -12.625004768371582
    3. 'l' → logprob: -14.500004768371582
    4. ' _' → logprob: -15.375004768371582
    5. '_current' → logprob: -15.500004768371582
    6. 'current' → logprob: -15.750004768371582
    7. '```' → logprob: -16.3750057220459
    8. '_ls' → logprob: -16.7500057220459
    9. '_s' → logprob: -16.8750057220459
    10. '_list' → logprob: -17.1250057220459

Token 305: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.00047166430158540606
    2. 's' → logprob: -7.750471591949463
    3. 'current' → logprob: -10.875472068786621
    4. '[' → logprob: -12.000472068786621
    5. '[current' → logprob: -12.500472068786621
    6. '   ' → logprob: -12.625472068786621
    7. 'l' → logprob: -13.250472068786621
    8. 'c' → logprob: -13.875472068786621
    9. 'st' → logprob: -14.000472068786621
    10. 'ist' → logprob: -14.375472068786621

Token 306: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '[l' → logprob: -15.75
    3. ' [' → logprob: -17.125
    4. '```' → logprob: -19.0
    5. '   ' → logprob: -19.25
    6. '=' → logprob: -19.375
    7. '[[' → logprob: -19.625
    8. '[
' → logprob: -20.0
    9. '	' → logprob: -20.125
    10. ' =' → logprob: -20.5

Token 307: 'lis' (ID: 34959)
  Prédit: 'lis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lis' → logprob: -0.009454065933823586
    2. 'node' → logprob: -4.759454250335693
    3. ' lis' → logprob: -8.384453773498535
    4. 'ls' → logprob: -8.634453773498535
    5. 'lus' → logprob: -10.134453773498535
    6. ']' → logprob: -10.134453773498535
    7. 'li' → logprob: -10.134453773498535
    8. '[' → logprob: -10.259453773498535
    9. '   ' → logprob: -10.259453773498535
    10. 'las' → logprob: -10.259453773498535

Token 308: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.0010553185129538178
    2. 'osition' → logprob: -7.3760552406311035
    3. 'position' → logprob: -8.126055717468262
    4. 'Position' → logprob: -10.751055717468262
    5. 's' → logprob: -11.126055717468262
    6. '_' → logprob: -11.501055717468262
    7. ']' → logprob: -11.626055717468262
    8. '_pos' → logprob: -11.751055717468262
    9. '[' → logprob: -11.876055717468262
    10. '   ' → logprob: -12.251055717468262

Token 309: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03330884128808975
    2. '=' → logprob: -4.033308982849121
    3. ' =' → logprob: -4.908308982849121
    4. ']=' → logprob: -5.408308982849121
    5. ' ]' → logprob: -5.783308982849121
    6. ')' → logprob: -9.283308982849121
    7. '=node' → logprob: -12.533308982849121
    8. '    ' → logprob: -13.658308982849121
    9. ')=' → logprob: -13.908308982849121
    10. ',' → logprob: -13.908308982849121

Token 310: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04859429597854614
    2. ' =' → logprob: -3.0485942363739014
    3. '=node' → logprob: -11.92359447479248
    4. '=
' → logprob: -15.67359447479248
    5. '=user' → logprob: -17.673593521118164
    6. ']=' → logprob: -18.048593521118164
    7. '=current' → logprob: -18.173593521118164
    8. ' =
' → logprob: -18.423593521118164
    9. ')=' → logprob: -18.673593521118164
    10. '=s' → logprob: -18.673593521118164

Token 311: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.0005530327325686812
    2. ' node' → logprob: -7.500553131103516
    3. '   ' → logprob: -17.375553131103516
    4. '	node' → logprob: -17.875553131103516
    5. '(node' → logprob: -19.375553131103516
    6. 'value' → logprob: -19.875553131103516
    7. '[node' → logprob: -19.875553131103516
    8. '_node' → logprob: -21.625553131103516
    9. ',node' → logprob: -22.000553131103516
    10. 'Node' → logprob: -22.125553131103516

Token 312: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -9.372294698550832e-06
    2. 'value' → logprob: -11.625009536743164
    3. '_' → logprob: -16.000009536743164
    4. '_values' → logprob: -16.000009536743164
    5. 'Value' → logprob: -16.375009536743164
    6. '_VALUE' → logprob: -17.875009536743164
    7. '_Value' → logprob: -18.500009536743164
    8. '_node' → logprob: -18.625009536743164
    9. 'alue' → logprob: -18.625009536743164
    10. '_position' → logprob: -18.750009536743164

Token 313: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09234512597322464
    2. '    
' → logprob: -2.8423452377319336
    3. '
' → logprob: -3.5923452377319336
    4. '<|end|>' → logprob: -7.467345237731934
    5. '        
' → logprob: -7.717345237731934
    6. '\n' → logprob: -8.092345237731934
    7. 'def' → logprob: -8.342345237731934
    8. '       ' → logprob: -9.092345237731934
    9. ' 
' → logprob: -9.092345237731934
    10. '  
' → logprob: -9.467345237731934

Token 314: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1250738799571991
    2. '
' → logprob: -2.2500739097595215
    3. '    
' → logprob: -4.6250739097595215
    4. ' for' → logprob: -6.7500739097595215
    5. 'for' → logprob: -8.125073432922363
    6. '        
' → logprob: -8.625073432922363
    7. 'def' → logprob: -8.625073432922363
    8. ' 
' → logprob: -8.625073432922363
    9. '
' → logprob: -8.750073432922363
    10. '   
' → logprob: -10.125073432922363

Token 315: ' result' (ID: 1534)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05357728898525238
    2. ' for' → logprob: -3.053577184677124
    3. '   ' → logprob: -5.303577423095703
    4. '    
' → logprob: -13.678577423095703
    5. 'try' → logprob: -13.803577423095703
    6. '```' → logprob: -13.803577423095703
    7. '	for' → logprob: -15.178577423095703
    8. ' ' → logprob: -15.553577423095703
    9. '  ' → logprob: -17.303577423095703
    10. ',' → logprob: -17.553577423095703

Token 316: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -4.320199877838604e-07
    2. '_lengths' → logprob: -15.75
    3. '_result' → logprob: -16.25
    4. '_list' → logprob: -16.375
    5. '_' → logprob: -16.875
    6. '_li' → logprob: -18.125
    7. 'result' → logprob: -19.0
    8. ' _' → logprob: -19.625
    9. '_ls' → logprob: -19.75
    10. '_len' → logprob: -19.75

Token 317: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -5.8126592193730175e-05
    2. 's' → logprob: -11.1250581741333
    3. 'lis' → logprob: -11.1250581741333
    4. 'ist' → logprob: -11.7500581741333
    5. '[' → logprob: -12.8125581741333
    6. '   ' → logprob: -13.1250581741333
    7. 'st' → logprob: -13.3125581741333
    8. 'result' → logprob: -13.3750581741333
    9. '```' → logprob: -13.3750581741333
    10. 'i' → logprob: -13.6875581741333

Token 318: '_lengths' (ID: 139878)
  Prédit: '_lengths'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lengths' → logprob: -7.3458322731312364e-06
    2. '_l' → logprob: -12.125007629394531
    3. 's' → logprob: -13.625007629394531
    4. '_length' → logprob: -14.750007629394531
    5. 'length' → logprob: -16.25000762939453
    6. '_depth' → logprob: -17.25000762939453
    7. 'Lengths' → logprob: -17.37500762939453
    8. '_le' → logprob: -17.62500762939453
    9. ' lengths' → logprob: -17.75000762939453
    10. '[' → logprob: -17.87500762939453

Token 319: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -3.650518920039758e-06
    2. '[' → logprob: -12.750003814697266
    3. '[cur' → logprob: -14.500003814697266
    4. '[curr' → logprob: -15.625003814697266
    5. 'current' → logprob: -16.750003814697266
    6. ' [' → logprob: -17.625003814697266
    7. '(current' → logprob: -19.875003814697266
    8. '   ' → logprob: -20.125003814697266
    9. '=current' → logprob: -20.125003814697266
    10. ' current' → logprob: -20.250003814697266

Token 320: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0004131536406930536
    2. '_l' → logprob: -8.500412940979004
    3. 'node' → logprob: -8.875412940979004
    4. '_' → logprob: -9.875412940979004
    5. 'dfs' → logprob: -12.750412940979004
    6. ']' → logprob: -13.000412940979004
    7. ')' → logprob: -13.500412940979004
    8. '_]' → logprob: -13.500412940979004
    9. 'l' → logprob: -13.625412940979004
    10. '_code' → logprob: -14.000412940979004

Token 321: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011203341418877244
    2. ' ]' → logprob: -6.876120567321777
    3. ']=' → logprob: -9.876120567321777
    4. ')' → logprob: -10.626120567321777
    5. '=' → logprob: -11.626120567321777
    6. ' =' → logprob: -12.876120567321777
    7. ' )' → logprob: -15.251120567321777
    8. '   ' → logprob: -16.00111961364746
    9. ')=' → logprob: -17.87611961364746
    10. ' ' → logprob: -18.37611961364746

Token 322: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868725001811981
    2. ' =' → logprob: -1.1368725299835205
    3. '=int' → logprob: -14.636872291564941
    4. ' ' → logprob: -15.011872291564941
    5. '=len' → logprob: -16.136873245239258
    6. '=max' → logprob: -16.636873245239258
    7. ',' → logprob: -16.636873245239258
    8. ' =
' → logprob: -17.136873245239258
    9. '=index' → logprob: -17.136873245239258
    10. ')=' → logprob: -17.261873245239258

Token 323: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.14544473588466644
    2. 'lis' → logprob: -2.020444631576538
    3. ' len' → logprob: -6.770444869995117
    4. ' lis' → logprob: -7.145444869995117
    5. 'bis' → logprob: -7.270444869995117
    6. 'ls' → logprob: -10.395444869995117
    7. 'li' → logprob: -10.645444869995117
    8. '   ' → logprob: -11.145444869995117
    9. ' bis' → logprob: -11.645444869995117
    10. 'las' → logprob: -12.020444869995117

Token 324: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.0002848152944352478
    2. 'current' → logprob: -8.750285148620605
    3. '(' → logprob: -9.000285148620605
    4. '(
' → logprob: -13.000285148620605
    5. ' current' → logprob: -14.375285148620605
    6. '(cur' → logprob: -16.75028419494629
    7. '	current' → logprob: -17.12528419494629
    8. '$current' → logprob: -17.62528419494629
    9. '[current' → logprob: -18.25028419494629
    10. ' (' → logprob: -18.25028419494629

Token 325: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.01074571255594492
    2. '_current' → logprob: -5.260745525360107
    3. 'current' → logprob: -5.510745525360107
    4. '_c' → logprob: -6.760745525360107
    5. '(current' → logprob: -8.885746002197266
    6. '_' → logprob: -9.260746002197266
    7. '[current' → logprob: -10.885746002197266
    8. ' current' → logprob: -11.260746002197266
    9. '_cur' → logprob: -11.385746002197266
    10. 'l' → logprob: -12.260746002197266

Token 326: 'is' (ID: 276)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.00821690447628498
    2. 'is' → logprob: -4.883216857910156
    3. '(current' → logprob: -8.508216857910156
    4. ' current' → logprob: -9.258216857910156
    5. '_current' → logprob: -9.383216857910156
    6. 's' → logprob: -9.758216857910156
    7. ')' → logprob: -9.758216857910156
    8. '[current' → logprob: -11.133216857910156
    9. 'cur' → logprob: -11.383216857910156
    10. 'ist' → logprob: -11.383216857910156

Token 327: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006785232108086348
    2. ')
' → logprob: -5.0067853927612305
    3. ')

' → logprob: -10.13178539276123
    4. '   ' → logprob: -10.75678539276123
    5. ' )' → logprob: -12.25678539276123
    6. '
' → logprob: -14.13178539276123
    7. ' ' → logprob: -14.25678539276123
    8. ')
' → logprob: -14.25678539276123
    9. ' )
' → logprob: -15.63178539276123
    10. '[current' → logprob: -15.63178539276123

Token 328: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08322559297084808
    2. ' for' → logprob: -2.5832254886627197
    3. 'for' → logprob: -5.583225727081299
    4. '
' → logprob: -7.833225727081299
    5. '    
' → logprob: -8.83322525024414
    6. '```' → logprob: -11.45822525024414
    7. '	for' → logprob: -11.83322525024414
    8. ' 
' → logprob: -12.70822525024414
    9. '        
' → logprob: -14.08322525024414
    10. '   ' → logprob: -14.70822525024414

Token 329: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.13667501509189606
    2. ' for' → logprob: -2.1366751194000244
    3. '   ' → logprob: -4.636674880981445
    4. '    
' → logprob: -12.011674880981445
    5. '	for' → logprob: -12.636674880981445
    6. '
' → logprob: -14.886674880981445
    7. '```' → logprob: -16.136674880981445
    8. ' 
' → logprob: -16.886674880981445
    9. '   
' → logprob: -17.636674880981445
    10. ' ' → logprob: -18.011674880981445

Token 330: ' neighbor' (ID: 13034)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.7055272459983826
    2. ' child' → logprob: -1.7055273056030273
    3. 'child' → logprob: -2.0805273056030273
    4. ' neighbor' → logprob: -2.3305273056030273
    5. ' next' → logprob: -3.2055273056030273
    6. 'adj' → logprob: -3.2055273056030273
    7. 'next' → logprob: -3.9555273056030273
    8. ' adjacent' → logprob: -6.455527305603027
    9. ' adj' → logprob: -7.955527305603027
    10. '   ' → logprob: -9.205527305603027

Token 331: '_node' (ID: 11390)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2020195871591568
    2. 'in' → logprob: -1.7020195722579956
    3. '	in' → logprob: -7.702019691467285
    4. '_in' → logprob: -9.827019691467285
    5. ',' → logprob: -10.202019691467285
    6. ' ' → logprob: -10.327019691467285
    7. '_' → logprob: -10.827019691467285
    8. 's' → logprob: -13.577019691467285
    9. ' _' → logprob: -13.702019691467285
    10. ',in' → logprob: -14.077019691467285

Token 332: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02059829980134964
    2. 'in' → logprob: -3.8955984115600586
    3. '   ' → logprob: -10.520598411560059
    4. ',' → logprob: -11.270598411560059
    5. '	in' → logprob: -12.020598411560059
    6. '    ' → logprob: -12.145598411560059
    7. ' ' → logprob: -12.770598411560059
    8. '_in' → logprob: -14.270598411560059
    9. ',in' → logprob: -14.770598411560059
    10. ' ,' → logprob: -14.770598411560059

Token 333: ' adjacency' (ID: 177015)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.22581465542316437
    2. ' adjacency' → logprob: -1.600814700126648
    3. '   ' → logprob: -7.9758148193359375
    4. ' adj' → logprob: -10.850814819335938
    5. 'ad' → logprob: -10.850814819335938
    6. ' adjacent' → logprob: -11.975814819335938
    7. '(ad' → logprob: -12.850814819335938
    8. ' ' → logprob: -13.350814819335938
    9. 'enumer' → logprob: -13.725814819335938
    10. '    ' → logprob: -14.100814819335938

Token 334: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0002354832977289334
    2. 'adj' → logprob: -8.750235557556152
    3. 'list' → logprob: -9.500235557556152
    4. 'acency' → logprob: -14.125235557556152
    5. 'List' → logprob: -14.625235557556152
    6. 'ad' → logprob: -15.750235557556152
    7. ' adjacency' → logprob: -16.375234603881836
    8. '   ' → logprob: -16.500234603881836
    9. 'l' → logprob: -16.625234603881836
    10. '[' → logprob: -16.750234603881836

Token 335: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -3.173704271830502e-06
    2. 'current' → logprob: -12.87500286102295
    3. '[' → logprob: -15.25000286102295
    4. '   ' → logprob: -15.62500286102295
    5. '[cur' → logprob: -16.625003814697266
    6. '[
' → logprob: -17.875003814697266
    7. ' [' → logprob: -18.125003814697266
    8. '(current' → logprob: -18.125003814697266
    9. ' current' → logprob: -19.000003814697266
    10. '[curr' → logprob: -19.250003814697266

Token 336: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -1.7120533811976202e-05
    2. 'node' → logprob: -11.125017166137695
    3. ')' → logprob: -14.500017166137695
    4. 'Node' → logprob: -15.000017166137695
    5. '_nodes' → logprob: -15.250017166137695
    6. '_NODE' → logprob: -15.375017166137695
    7. '[node' → logprob: -15.500017166137695
    8. '])' → logprob: -16.375017166137695
    9. '_list' → logprob: -16.500017166137695
    10. '_' → logprob: -16.875017166137695

Token 337: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3146539032459259
    2. ':' → logprob: -1.9396538734436035
    3. ']:
' → logprob: -2.9396538734436035
    4. '):
' → logprob: -3.0646538734436035
    5. '   ' → logprob: -3.8146538734436035
    6. '       ' → logprob: -6.3146538734436035
    7. ']:' → logprob: -6.3146538734436035
    8. '):' → logprob: -7.6896538734436035
    9. '():
' → logprob: -8.564654350280762
    10. ' :
' → logprob: -9.189654350280762

Token 338: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00016551809676457196
    2. '   ' → logprob: -9.125165939331055
    3. ' if' → logprob: -10.375165939331055
    4. '<|end|>' → logprob: -10.875165939331055
    5. '           ' → logprob: -14.000165939331055
    6. '
' → logprob: -14.000165939331055
    7. '	' → logprob: -14.000165939331055
    8. ',' → logprob: -14.125165939331055
    9. 'if' → logprob: -14.250165939331055
    10. '    ' → logprob: -14.500165939331055

Token 339: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5047814249992371
    2. '       ' → logprob: -1.0047814846038818
    3. 'if' (adapté à ' if') → logprob: -3.504781484603882
    4. '   ' → logprob: -8.754781723022461
    5. '    ' → logprob: -10.879781723022461
    6. '	if' → logprob: -13.129781723022461
    7. ' ' → logprob: -13.129781723022461
    8. '           ' → logprob: -13.629781723022461
    9. '        ' → logprob: -14.129781723022461
    10. '     ' → logprob: -15.129781723022461

Token 340: ' neighbor' (ID: 13034)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.4740840494632721
    2. ' neighbor' → logprob: -0.9740840196609497
    3. '   ' → logprob: -12.72408390045166
    4. '    ' → logprob: -13.84908390045166
    5. 'ne' → logprob: -14.72408390045166
    6. '```' → logprob: -14.84908390045166
    7. 'not' → logprob: -15.09908390045166
    8. ' ' → logprob: -15.22408390045166
    9. ' neighbour' → logprob: -15.34908390045166
    10. '           ' → logprob: -15.47408390045166

Token 341: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -1.5048530030981055e-06
    2. 'node' → logprob: -13.625001907348633
    3. '_' → logprob: -15.500001907348633
    4. '
' → logprob: -17.250001907348633
    5. 'Node' → logprob: -17.500001907348633
    6. '_NODE' → logprob: -17.875001907348633
    7. '!=' → logprob: -18.500001907348633
    8. '==' → logprob: -18.625001907348633
    9. '_
' → logprob: -18.875001907348633
    10. ' !=' → logprob: -19.500001907348633

Token 342: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.4886428117752075
    2. ' !=' → logprob: -0.9886428117752075
    3. '==' → logprob: -4.488642692565918
    4. ' ==' → logprob: -5.738642692565918
    5. ' ' → logprob: -14.238642692565918
    6. '=' → logprob: -14.488642692565918
    7. '   ' → logprob: -14.488642692565918
    8. ')!=' → logprob: -14.488642692565918
    9. '()!=' → logprob: -14.613642692565918
    10. ']!=' → logprob: -14.738642692565918

Token 343: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.019338982179760933
    2. ' parent' → logprob: -4.019339084625244
    3. 'current' → logprob: -6.769339084625244
    4. ' current' → logprob: -10.144338607788086
    5. ' ' → logprob: -15.394338607788086
    6. '   ' → logprob: -15.644338607788086
    7. '	parent' → logprob: -16.019338607788086
    8. 'paren' → logprob: -17.394338607788086
    9. '  ' → logprob: -18.769338607788086
    10. '
' → logprob: -19.144338607788086

Token 344: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -9.996708104154095e-05
    2. 'node' → logprob: -9.250100135803223
    3. ':' → logprob: -13.125100135803223
    4. ' node' → logprob: -14.375100135803223
    5. '_NODE' → logprob: -14.375100135803223
    6. ':
' → logprob: -15.875100135803223
    7. '[node' → logprob: -16.000099182128906
    8. '
' → logprob: -16.375099182128906
    9. '   ' → logprob: -16.500099182128906
    10. '):
' → logprob: -16.875099182128906

Token 345: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.42011478543281555
    2. ':' → logprob: -1.1701147556304932
    3. '       ' → logprob: -3.545114755630493
    4. '           ' → logprob: -5.795114994049072
    5. ' continue' → logprob: -8.295114517211914
    6. 'continue' → logprob: -8.295114517211914
    7. ' or' → logprob: -9.295114517211914
    8. '):
' → logprob: -9.795114517211914
    9. ':return' → logprob: -10.170114517211914
    10. '   ' → logprob: -10.170114517211914

Token 346: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02995261736214161
    2. ' continue' → logprob: -3.6549525260925293
    3. 'continue' → logprob: -5.654952526092529
    4. '       ' → logprob: -9.154953002929688
    5. '
' → logprob: -11.404953002929688
    6. '	       ' → logprob: -12.279953002929688
    7. '            
' → logprob: -12.529953002929688
    8. ' continues' → logprob: -12.779953002929688
    9. '               ' → logprob: -12.779953002929688
    10. ',' → logprob: -13.279953002929688

Token 347: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.313821405172348
    2. ' continue' → logprob: -1.3138214349746704
    3. '           ' → logprob: -7.688821315765381
    4. '               ' → logprob: -9.813821792602539
    5. '       ' → logprob: -10.438821792602539
    6. '	continue' → logprob: -11.313821792602539
    7. '
' → logprob: -12.938821792602539
    8. 'contin' → logprob: -13.938821792602539
    9. '_continue' → logprob: -14.063821792602539
    10. 'continu' → logprob: -14.313821792602539

Token 348: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004107727203518152
    2. '
' → logprob: -6.00410795211792
    3. 'current' → logprob: -7.00410795211792
    4. '   ' → logprob: -8.379107475280762
    5. ' current' → logprob: -8.504107475280762
    6. '        
' → logprob: -8.629107475280762
    7. 'depth' → logprob: -10.879107475280762
    8. ',' → logprob: -11.254107475280762
    9. ')' → logprob: -11.504107475280762
    10. 'def' → logprob: -11.879107475280762

Token 349: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0795624628663063
    2. '   ' → logprob: -2.8295624256134033
    3. ' depth' → logprob: -4.329562664031982
    4. 'depth' → logprob: -5.704562664031982
    5. '	' → logprob: -7.954562664031982
    6. '        
' → logprob: -8.704562187194824
    7. '(depth' → logprob: -9.579562187194824
    8. '	   ' → logprob: -9.829562187194824
    9. '	de' → logprob: -9.954562187194824
    10. '_depth' → logprob: -10.079562187194824

Token 350: ' depth' (ID: 13636)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' (adapté à ' depth') → logprob: -0.30663442611694336
    2. ' depth' → logprob: -1.8066344261169434
    3. '   ' → logprob: -2.3066344261169434
    4. '
' → logprob: -8.681634902954102
    5. '       ' → logprob: -10.181634902954102
    6. '    
' → logprob: -10.556634902954102
    7. '(depth' → logprob: -11.431634902954102
    8. 'def' → logprob: -11.806634902954102
    9. '_depth' → logprob: -11.931634902954102
    10. '        
' → logprob: -12.181634902954102

Token 351: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -7.896309739408025e-07
    2. 'first' → logprob: -14.250000953674316
    3. '_current' → logprob: -17.875
    4. '_' → logprob: -18.0
    5. '_four' → logprob: -18.125
    6. '_f' → logprob: -18.5
    7. '_FIRST' → logprob: -18.625
    8. 'First' → logprob: -18.625
    9. '_second' → logprob: -19.875
    10. '_for' → logprob: -19.875

Token 352: '_search' (ID: 23642)
  Prédit: '_search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_search' → logprob: -0.029819343239068985
    2. 'search' → logprob: -3.5298192501068115
    3. '_first' → logprob: -9.77981948852539
    4. 'first' → logprob: -11.52981948852539
    5. 'Search' → logprob: -14.02981948852539
    6. 'earch' → logprob: -14.65481948852539
    7. 's' → logprob: -15.02981948852539
    8. ' search' → logprob: -15.77981948852539
    9. '_visit' → logprob: -15.90481948852539
    10. '_find' → logprob: -16.40481948852539

Token 353: '(ne' (ID: 79401)
  Prédit: '(ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ne' → logprob: -0.00022523177904076874
    2. '(' → logprob: -8.500225067138672
    3. '(
' → logprob: -11.375225067138672
    4. 'neighbor' → logprob: -11.625225067138672
    5. ' (' → logprob: -13.750225067138672
    6. '(next' → logprob: -17.125225067138672
    7. ' neighbor' → logprob: -17.250225067138672
    8. 'ne' → logprob: -17.625225067138672
    9. '(n' → logprob: -17.875225067138672
    10. '(

' → logprob: -17.875225067138672

Token 354: 'ighbor' (ID: 28225)
  Prédit: 'ighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ighbor' → logprob: -1.5570885807392187e-05
    2. 'igh' → logprob: -12.125015258789062
    3. 'ight' → logprob: -12.125015258789062
    4. 'ighbors' → logprob: -12.875015258789062
    5. 'gh' → logprob: -14.250015258789062
    6. 'ighborhood' → logprob: -14.250015258789062
    7. 'ighbour' → logprob: -15.375015258789062
    8. 'i' → logprob: -16.625015258789062
    9. 'ig' → logprob: -16.625015258789062
    10. ' ' → logprob: -16.750015258789062

Token 355: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -5.3120038501219824e-05
    2. 'node' → logprob: -10.500053405761719
    3. 'neighbor' → logprob: -10.875053405761719
    4. '_neighbor' → logprob: -12.500053405761719
    5. 'ighbor' → logprob: -14.000053405761719
    6. ',node' → logprob: -15.125053405761719
    7. ')' → logprob: -15.375053405761719
    8. 'Node' → logprob: -15.500053405761719
    9. '```' → logprob: -15.625053405761719
    10. '[node' → logprob: -16.00005340576172

Token 356: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00090407655807212
    2. ',current' → logprob: -7.125904083251953
    3. 'current' → logprob: -9.625904083251953
    4. ' ,' → logprob: -11.000904083251953
    5. ' current' → logprob: -11.625904083251953
    6. ',
' → logprob: -11.875904083251953
    7. '   ' → logprob: -14.375904083251953
    8. '(current' → logprob: -15.875904083251953
    9. ')' → logprob: -16.500904083251953
    10. '[current' → logprob: -17.125904083251953

Token 357: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.00043138445471413434
    2. ' current' → logprob: -7.750431537628174
    3. '   ' → logprob: -14.125431060791016
    4. '	current' → logprob: -18.250431060791016
    5. '
' → logprob: -18.750431060791016
    6. '           ' → logprob: -19.250431060791016
    7. '=current' → logprob: -19.250431060791016
    8. '$current' → logprob: -19.250431060791016
    9. '[current' → logprob: -19.500431060791016
    10. ' ' → logprob: -20.000431060791016

Token 358: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -6.885492621222511e-05
    2. 'node' → logprob: -9.625068664550781
    3. ')' → logprob: -14.250068664550781
    4. ' node' → logprob: -14.375068664550781
    5. '_token' → logprob: -14.375068664550781
    6. '_' → logprob: -15.500068664550781
    7. '_nodes' → logprob: -16.00006866455078
    8. 'Node' → logprob: -16.37506866455078
    9. '_NODE' → logprob: -16.37506866455078
    10. '_user' → logprob: -17.00006866455078

Token 359: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.032227642834186554
    2. ')
' → logprob: -3.5322277545928955
    3. '   ' → logprob: -6.032227516174316
    4. ')

' → logprob: -9.532227516174316
    5. '       ' → logprob: -14.532227516174316
    6. ' )' → logprob: -14.907227516174316
    7. ')
' → logprob: -15.157227516174316
    8. ' ' → logprob: -16.157228469848633
    9. ' )
' → logprob: -16.282228469848633
    10. ')return' → logprob: -16.782228469848633

Token 360: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011049585416913033
    2. 'if' → logprob: -4.511049747467041
    3. ' if' → logprob: -13.511049270629883
    4. '```' → logprob: -14.886049270629883
    5. '    
' → logprob: -16.886049270629883
    6. '       ' → logprob: -18.886049270629883
    7. '
' → logprob: -18.886049270629883
    8. 'current' → logprob: -19.136049270629883
    9. '	if' → logprob: -19.636049270629883
    10. '#' → logprob: -19.636049270629883

Token 361: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38695693016052246
    2. 'if' (adapté à ' if') → logprob: -1.1369569301605225
    3. ' if' → logprob: -9.386957168579102
    4. '```' → logprob: -13.261957168579102
    5. '       ' → logprob: -16.5119571685791
    6. '  ' → logprob: -16.7619571685791
    7. '
' → logprob: -16.7619571685791
    8. '	if' → logprob: -16.8869571685791
    9. ')' → logprob: -17.2619571685791
    10. ' ' → logprob: -17.3869571685791

Token 362: ' did' (ID: 2242)
  Prédit: ' did'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' did' → logprob: -0.1426893025636673
    2. 'did' → logprob: -2.0176892280578613
    3. 'd' → logprob: -12.14268970489502
    4. ' ' → logprob: -12.76768970489502
    5. '   ' → logprob: -13.51768970489502
    6. ' not' → logprob: -13.64268970489502
    7. 'lis' → logprob: -14.26768970489502
    8. '  ' → logprob: -14.64268970489502
    9. ' lis' → logprob: -14.76768970489502
    10. 'not' → logprob: -15.01768970489502

Token 363: '_append' (ID: 69293)
  Prédit: '_append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_append' → logprob: -0.00012130453251302242
    2. 'append' → logprob: -9.375121116638184
    3. 'Append' → logprob: -10.250121116638184
    4. '_APPEND' → logprob: -14.000121116638184
    5. '_' → logprob: -16.0001220703125
    6. '.append' → logprob: -16.2501220703125
    7. '_add' → logprob: -17.3751220703125
    8. ' append' → logprob: -17.3751220703125
    9. '_app' → logprob: -17.6251220703125
    10. 'prepend' → logprob: -18.3751220703125

Token 364: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5759732723236084
    2. ':' → logprob: -0.8259732723236084
    3. '):
' → logprob: -11.450973510742188
    4. '   ' → logprob: -11.450973510742188
    5. '       ' → logprob: -12.200973510742188
    6. 'current' → logprob: -12.950973510742188
    7. '():
' → logprob: -13.200973510742188
    8. ':
' → logprob: -14.075973510742188
    9. '):' → logprob: -14.450973510742188
    10. ' current' → logprob: -14.825973510742188

Token 365: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26371386647224426
    2. 'current' → logprob: -2.013713836669922
    3. ' current' → logprob: -3.013713836669922
    4. '   ' → logprob: -3.013713836669922
    5. '	current' → logprob: -10.388713836669922
    6. ',current' → logprob: -10.763713836669922
    7. '[current' → logprob: -11.138713836669922
    8. '```' → logprob: -12.513713836669922
    9. '     ' → logprob: -12.638713836669922
    10. '#' → logprob: -12.763713836669922

Token 366: ' del' (ID: 1083)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.004144999664276838
    2. ' current' → logprob: -5.50414514541626
    3. '   ' → logprob: -9.629144668579102
    4. '	current' → logprob: -15.254144668579102
    5. ',current' → logprob: -16.1291446685791
    6. '```' → logprob: -16.2541446685791
    7. '.current' → logprob: -16.3791446685791
    8. ' ' → logprob: -16.8791446685791
    9. '[current' → logprob: -17.1291446685791
    10. 'urrent' → logprob: -17.2541446685791

Token 367: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.005236837547272444
    2. 'current' → logprob: -5.255236625671387
    3. '(current' → logprob: -13.630236625671387
    4. '[current' → logprob: -13.880236625671387
    5. '	current' → logprob: -14.630236625671387
    6. '.current' → logprob: -15.505236625671387
    7. ' ' → logprob: -16.130237579345703
    8. 'urrent' → logprob: -16.630237579345703
    9. '_current' → logprob: -16.880237579345703
    10. 'Current' → logprob: -17.255237579345703

Token 368: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -1.6240566083070007e-06
    2. 'current' → logprob: -14.250001907348633
    3. '_list' → logprob: -14.875001907348633
    4. '[current' → logprob: -15.875001907348633
    5. '_current' → logprob: -16.000001907348633
    6. '[-' → logprob: -16.250001907348633
    7. '_' → logprob: -16.625001907348633
    8. 'l' → logprob: -17.375001907348633
    9. '_ls' → logprob: -17.375001907348633
    10. '(current' → logprob: -17.500001907348633

Token 369: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0025372595991939306
    2. 'current' → logprob: -6.002537250518799
    3. 's' → logprob: -11.127537727355957
    4. 'ist' → logprob: -11.252537727355957
    5. '[current' → logprob: -11.252537727355957
    6. 'st' → logprob: -12.127537727355957
    7. ' current' → logprob: -12.127537727355957
    8. '[' → logprob: -12.502537727355957
    9. '(current' → logprob: -13.627537727355957
    10. '```' → logprob: -14.127537727355957

Token 370: '[' (ID: 58)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -7.703443770878948e-06
    2. '[' → logprob: -11.875007629394531
    3. '[len' → logprob: -15.000007629394531
    4. '[:]' → logprob: -15.125007629394531
    5. '[
' → logprob: -16.75000762939453
    6. '[...]' → logprob: -17.37500762939453
    7. '[]' → logprob: -17.62500762939453
    8. '[last' → logprob: -19.00000762939453
    9. '```' → logprob: -20.12500762939453
    10. '[:-' → logprob: -20.12500762939453

Token 371: 'lis' (ID: 34959)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07916902750730515
    2. '-l' → logprob: -2.5791690349578857
    3. ')' → logprob: -9.079169273376465
    4. ' -' → logprob: -9.454169273376465
    5. '-L' → logprob: -10.579169273376465
    6. 'len' → logprob: -10.829169273376465
    7. ']' → logprob: -11.454169273376465
    8. '-end' → logprob: -11.579169273376465
    9. 'lis' → logprob: -11.954169273376465
    10. '-lfs' → logprob: -12.704169273376465

Token 372: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.01914181001484394
    2. 'osition' → logprob: -4.269141674041748
    3. 'position' → logprob: -5.769141674041748
    4. '-' → logprob: -7.894141674041748
    5. 'os' → logprob: -8.019142150878906
    6. 's' → logprob: -8.144142150878906
    7. '   ' → logprob: -8.394142150878906
    8. '_pos' → logprob: -9.394142150878906
    9. 'ion' → logprob: -9.394142150878906
    10. 'pos' → logprob: -9.644142150878906

Token 373: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06358353048563004
    2. ']
' → logprob: -2.8135836124420166
    3. '   ' → logprob: -6.4385833740234375
    4. ')' → logprob: -11.313583374023438
    5. ']
' → logprob: -14.063583374023438
    6. ' ]' → logprob: -14.063583374023438
    7. ')
' → logprob: -14.188583374023438
    8. '<|end|>' → logprob: -14.563583374023438
    9. ']

' → logprob: -14.938583374023438
    10. '       ' → logprob: -15.063583374023438

Token 374: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018170781433582306
    2. 'else' → logprob: -4.0181708335876465
    3. ' else' → logprob: -11.018170356750488
    4. 'elif' → logprob: -12.518170356750488
    5. '	else' → logprob: -14.393170356750488
    6. '<|end|>' → logprob: -16.018171310424805
    7. '```' → logprob: -16.268171310424805
    8. '       ' → logprob: -17.143171310424805
    9. '_else' → logprob: -17.268171310424805
    10. '}else' → logprob: -18.518171310424805

Token 375: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.576033353805542
    2. '   ' → logprob: -0.826033353805542
    3. ' else' → logprob: -9.326033592224121
    4. 'elif' → logprob: -12.451033592224121
    5. '	else' → logprob: -14.451033592224121
    6. '```' → logprob: -16.076032638549805
    7. '_else' → logprob: -16.201032638549805
    8. '       ' → logprob: -17.201032638549805
    9. '  ' → logprob: -17.576032638549805
    10. '}else' → logprob: -17.701032638549805

Token 376: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2648075819015503
    2. '       ' → logprob: -1.6398075819015503
    3. ':' → logprob: -3.26480770111084
    4. '   ' → logprob: -8.76480770111084
    5. ' :
' → logprob: -9.51480770111084
    6. 'current' → logprob: -9.63980770111084
    7. ' current' → logprob: -10.13980770111084
    8. '):
' → logprob: -10.38980770111084
    9. '[' → logprob: -11.13980770111084
    10. ',' → logprob: -11.38980770111084

Token 377: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06666605174541473
    2. 'current' → logprob: -2.8166661262512207
    3. ' current' → logprob: -5.566666126251221
    4. '   ' → logprob: -7.066666126251221
    5. ',current' → logprob: -12.441665649414062
    6. '	current' → logprob: -12.816665649414062
    7. '[current' → logprob: -13.691665649414062
    8. '           ' → logprob: -14.191665649414062
    9. ' ' → logprob: -14.816665649414062
    10. '_current' → logprob: -14.941665649414062

Token 378: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.0005588700296357274
    2. ' current' → logprob: -7.500558853149414
    3. '   ' → logprob: -12.375558853149414
    4. '       ' → logprob: -13.500558853149414
    5. '           ' → logprob: -16.000558853149414
    6. '[current' → logprob: -16.500558853149414
    7. '	current' → logprob: -17.000558853149414
    8. ',current' → logprob: -17.000558853149414
    9. '.current' → logprob: -17.625558853149414
    10. ' ' → logprob: -18.375558853149414

Token 379: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -4.320199877838604e-07
    2. 'l' → logprob: -16.0
    3. 's' → logprob: -16.125
    4. '_list' → logprob: -16.625
    5. 'lis' → logprob: -17.75
    6. 'L' → logprob: -18.125
    7. 'is' → logprob: -18.625
    8. '_li' → logprob: -18.625
    9. '_' → logprob: -19.125
    10. '[' → logprob: -19.75

Token 380: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0006377388490363955
    2. '[' → logprob: -7.750637531280518
    3. 's' → logprob: -8.625638008117676
    4. '[position' → logprob: -11.500638008117676
    5. '[pos' → logprob: -12.375638008117676
    6. '   ' → logprob: -13.125638008117676
    7. 'ist' → logprob: -13.625638008117676
    8. '```' → logprob: -13.625638008117676
    9. 'position' → logprob: -13.750638008117676
    10. 'st' → logprob: -14.000638008117676

Token 381: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '[
' → logprob: -19.125
    3. '[l' → logprob: -19.875
    4. '	' → logprob: -20.375
    5. ' [' → logprob: -20.5
    6. '   ' → logprob: -21.0
    7. '```' → logprob: -21.0
    8. '
' → logprob: -21.125
    9. '[len' → logprob: -21.5
    10. '[...]' → logprob: -22.125

Token 382: 'lis' (ID: 34959)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07224126905202866
    2. 'lis' → logprob: -2.8222413063049316
    3. 'position' → logprob: -5.447241306304932
    4. 'pos' → logprob: -5.447241306304932
    5. 's' → logprob: -7.697241306304932
    6. 'ls' → logprob: -8.072240829467773
    7. 'l' → logprob: -9.072240829467773
    8. '_position' → logprob: -9.322240829467773
    9. '```' → logprob: -9.447240829467773
    10. 'bis' → logprob: -9.447240829467773

Token 383: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.001113543170504272
    2. '[' → logprob: -7.126113414764404
    3. 'osition' → logprob: -8.876113891601562
    4. 'position' → logprob: -9.126113891601562
    5. '_pos' → logprob: -10.376113891601562
    6. 'pos' → logprob: -11.876113891601562
    7. 'Position' → logprob: -11.876113891601562
    8. 's' → logprob: -12.751113891601562
    9. '_positions' → logprob: -13.126113891601562
    10. ']' → logprob: -13.626113891601562

Token 384: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001601539261173457
    2. ']=' → logprob: -8.750160217285156
    3. ' ]' → logprob: -13.500160217285156
    4. '=' → logprob: -15.375160217285156
    5. ')' → logprob: -20.125160217285156
    6. ' =' → logprob: -21.250160217285156
    7. 's' → logprob: -21.250160217285156
    8. ']=(' → logprob: -22.000160217285156
    9. '[' → logprob: -22.125160217285156
    10. ']

' → logprob: -22.250160217285156

Token 385: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004078639671206474
    2. ' =' → logprob: -5.5040788650512695
    3. ']=' → logprob: -16.504077911376953
    4. '.=' → logprob: -16.754077911376953
    5. '=current' → logprob: -17.879077911376953
    6. '[:]' → logprob: -18.379077911376953
    7. '[' → logprob: -18.629077911376953
    8. ']' → logprob: -18.629077911376953
    9. '=re' → logprob: -18.754077911376953
    10. '=
' → logprob: -19.254077911376953

Token 386: ' previous' (ID: 5880)
  Prédit: 'previous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'previous' → logprob: -5.512236498361744e-07
    2. ' previous' → logprob: -14.500000953674316
    3. '(previous' → logprob: -21.0
    4. '.previous' → logprob: -21.375
    5. 'prev' → logprob: -21.625
    6. '_previous' → logprob: -24.25
    7. '
' → logprob: -25.25
    8. 'Previous' → logprob: -25.25
    9. '```' → logprob: -26.125
    10. '   ' → logprob: -26.5

Token 387: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.5332478142227046e-05
    2. 'value' → logprob: -11.125015258789062
    3. '_' → logprob: -15.125015258789062
    4. '_val' → logprob: -16.000015258789062
    5. 's' → logprob: -16.250015258789062
    6. 'Value' → logprob: -17.375015258789062
    7. 'alue' → logprob: -17.500015258789062
    8. '_Value' → logprob: -18.125015258789062
    9. '_VALUE' → logprob: -18.375015258789062
    10. '__' → logprob: -19.750015258789062

Token 388: '

' (ID: 279)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.001363093382678926
    2. '
' → logprob: -6.751363277435303
    3. ' depth' → logprob: -9.251362800598145
    4. '(depth' → logprob: -10.001362800598145
    5. 'dfs' → logprob: -11.251362800598145
    6. 'print' → logprob: -11.751362800598145
    7. '_depth' → logprob: -11.876362800598145
    8. '    
' → logprob: -11.876362800598145
    9. 'return' → logprob: -12.251362800598145
    10. 'if' → logprob: -12.376362800598145

Token 389: 'depth' (ID: 41022)
  Prédit: 'depth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.002079240046441555
    2. 'for' → logprob: -7.002079010009766
    3. 'print' → logprob: -7.877079010009766
    4. ' depth' → logprob: -8.127079010009766
    5. 'if' → logprob: -8.627079010009766
    6. '
' → logprob: -9.127079010009766
    7. '(depth' → logprob: -9.877079010009766
    8. 'def' → logprob: -10.127079010009766
    9. 'dfs' → logprob: -10.377079010009766
    10. '#' → logprob: -11.002079010009766

Token 390: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -2.816093228830141e-06
    2. '_' → logprob: -13.75000286102295
    3. 'first' → logprob: -14.87500286102295
    4. '_single' → logprob: -15.37500286102295
    5. '_four' → logprob: -15.50000286102295
    6. '_fast' → logprob: -15.62500286102295
    7. '_f' → logprob: -15.75000286102295
    8. '_for' → logprob: -16.125001907348633
    9. '_FIRST' → logprob: -16.625001907348633
    10. '_of' → logprob: -16.750001907348633

Token 391: '_search' (ID: 23642)
  Prédit: '_search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_search' → logprob: -1.5332478142227046e-05
    2. 'search' → logprob: -11.500015258789062
    3. '_first' → logprob: -12.750015258789062
    4. '_' → logprob: -14.125015258789062
    5. '_se' → logprob: -14.500015258789062
    6. '_scan' → logprob: -14.750015258789062
    7. '_s' → logprob: -15.375015258789062
    8. '_fetch' → logprob: -17.125015258789062
    9. '_find' → logprob: -17.125015258789062
    10. '_SEARCH' → logprob: -17.250015258789062

Token 392: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.008129963040119e-06
    2. ' (' → logprob: -13.500003814697266
    3. '(node' → logprob: -13.625003814697266
    4. '0' → logprob: -14.500003814697266
    5. '(
' → logprob: -14.625003814697266
    6. '(current' → logprob: -15.375003814697266
    7. '((' → logprob: -15.875003814697266
    8. '(root' → logprob: -17.125003814697266
    9. '()' → logprob: -17.875003814697266
    10. '(depth' → logprob: -19.000003814697266

Token 393: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. ')' → logprob: -19.75
    4. '(' → logprob: -20.875
    5. '   ' → logprob: -21.25
    6. '۰' → logprob: -23.625
    7. '00' → logprob: -24.0
    8. '
' → logprob: -24.5
    9. '０' → logprob: -24.875
    10. '(
' → logprob: -25.125

Token 394: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009571973932906985
    2. ')' → logprob: -7.000957012176514
    3. ',)' → logprob: -10.250957489013672
    4. ',None' → logprob: -11.875957489013672
    5. ',
' → logprob: -12.750957489013672
    6. ',

' → logprob: -16.125957489013672
    7. ',-' → logprob: -16.125957489013672
    8. ',:)' → logprob: -16.375957489013672
    9. '0' → logprob: -16.750957489013672
    10. ',null' → logprob: -16.875957489013672

Token 395: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.8624639324116288e-06
    2. ' -' → logprob: -13.250001907348633
    3. '   ' → logprob: -19.125001907348633
    4. ' ' → logprob: -20.500001907348633
    5. 'None' → logprob: -20.750001907348633
    6. '  ' → logprob: -22.750001907348633
    7. '−' → logprob: -24.875001907348633
    8. '-
' → logprob: -24.875001907348633
    9. '-none' → logprob: -25.625001907348633
    10. '‌' → logprob: -25.625001907348633

Token 396: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -20.625
    3. '１' → logprob: -22.25
    4. '2' → logprob: -23.625
    5. '-' → logprob: -23.75
    6. '```' → logprob: -24.0
    7. '۱' → logprob: -24.25
    8. '   ' → logprob: -24.75
    9. '
' → logprob: -25.0
    10. ')' → logprob: -25.25

Token 397: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.024604277219623e-05
    2. ')
' → logprob: -10.125040054321289
    3. ')`' → logprob: -17.25004005432129
    4. ' )' → logprob: -17.37504005432129
    5. '))' → logprob: -17.75004005432129
    6. ')

' → logprob: -18.37504005432129
    7. ')
' → logprob: -18.50004005432129
    8. '),' → logprob: -19.75004005432129
    9. ')return' → logprob: -20.25004005432129
    10. ')#' → logprob: -20.37504005432129

Token 398: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00033546582562848926
    2. 'for' → logprob: -8.000335693359375
    3. '```' → logprob: -18.375335693359375
    4. '
' → logprob: -18.875335693359375
    5. ' print' → logprob: -20.000335693359375
    6. '#print' → logprob: -20.875335693359375
    7. '    
' → logprob: -23.000335693359375
    8. 'pr' → logprob: -23.000335693359375
    9. 'import' → logprob: -23.125335693359375
    10. 'prin' → logprob: -23.250335693359375

Token 399: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.512942910194397
    2. '('' → logprob: -1.387942910194397
    3. '(max' → logprob: -2.5129427909851074
    4. '(' → logprob: -3.1379427909851074
    5. '("' → logprob: -3.6379427909851074
    6. 'max' → logprob: -7.637942790985107
    7. '(result' → logprob: -8.887943267822266
    8. '(
' → logprob: -8.887943267822266
    9. 'result' → logprob: -9.637943267822266
    10. '(min' → logprob: -10.012943267822266

Token 400: 'result' (ID: 2521)
  Prédit: 'result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.9361264946837764e-07
    2. ' result' → logprob: -15.75
    3. '(result' → logprob: -21.5
    4. '[result' → logprob: -24.625
    5. '$result' → logprob: -25.375
    6. '	result' → logprob: -25.75
    7. 'results' → logprob: -26.0
    8. '
' → logprob: -26.5
    9. '=result' → logprob: -26.875
    10. ')' → logprob: -27.125

Token 401: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.875
    3. 'lis' → logprob: -18.875
    4. '_result' → logprob: -18.875
    5. '_ls' → logprob: -19.0
    6. '_list' → logprob: -19.125
    7. 'result' → logprob: -19.25
    8. 's' → logprob: -19.375
    9. '_li' → logprob: -19.75
    10. '_s' → logprob: -20.375

Token 402: 'is' (ID: 276)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4282003343105316
    2. 'is' → logprob: -1.178200364112854
    3. 'ength' → logprob: -3.5532002449035645
    4. '_lengths' → logprob: -4.6782002449035645
    5. 'eng' → logprob: -7.1782002449035645
    6. 'en' → logprob: -7.5532002449035645
    7. 'length' → logprob: -7.9282002449035645
    8. 'st' → logprob: -8.053200721740723
    9. 'sizes' → logprob: -9.553200721740723
    10. '_s' → logprob: -9.678200721740723

Token 403: '_lengths' (ID: 139878)
  Prédit: '_lengths'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lengths' → logprob: -5.5577775128767826e-06
    2. 'ength' → logprob: -12.750005722045898
    3. '_l' → logprob: -13.375005722045898
    4. 'length' → logprob: -14.250005722045898
    5. 's' → logprob: -15.375005722045898
    6. '_length' → logprob: -15.875005722045898
    7. 'Lengths' → logprob: -16.3750057220459
    8. 'ths' → logprob: -17.5000057220459
    9. '_depth' → logprob: -17.8750057220459
    10. 'l' → logprob: -18.3750057220459

Token 404: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ' )' → logprob: -17.0
    3. '())' → logprob: -17.625
    4. ')
' → logprob: -17.625
    5. '))' → logprob: -17.625
    6. '()' → logprob: -18.125
    7. ')`' → logprob: -18.125
    8. '),' → logprob: -19.0
    9. ',)' → logprob: -20.0
    10. ')}' → logprob: -20.25

Token 405: ' sep' (ID: 31529)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.0013403621269389987
    2. 'end' → logprob: -7.376340389251709
    3. ' sep' → logprob: -7.751340389251709
    4. ')' → logprob: -8.50133991241455
    5. 'se' → logprob: -9.50133991241455
    6. ''\' → logprob: -12.87633991241455
    7. 'separator' → logprob: -13.62633991241455
    8. '_sep' → logprob: -14.75133991241455
    9. 'flush' → logprob: -14.87633991241455
    10. ')
' → logprob: -15.12633991241455

Token 406: '='\' (ID: 106410)
  Prédit: '=''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '='' → logprob: -0.001632451661862433
    2. '=' → logprob: -6.626632213592529
    3. '="' → logprob: -9.001632690429688
    4. '='\' → logprob: -9.001632690429688
    5. ''' → logprob: -9.751632690429688
    6. '"' → logprob: -14.001632690429688
    7. '=\' → logprob: -14.876632690429688
    8. '="\' → logprob: -15.126632690429688
    9. '=
' → logprob: -15.251632690429688
    10. '=',' → logprob: -16.376632690429688

Token 407: 'n' (ID: 77)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.10383529961109161
    2. 'n' → logprob: -2.353835344314575
    3. ''\' → logprob: -5.853835105895996
    4. ''' → logprob: -7.353835105895996
    5. ''n' → logprob: -10.478835105895996
    6. ' ' → logprob: -10.853835105895996
    7. 'newline' → logprob: -11.228835105895996
    8. '"\' → logprob: -11.353835105895996
    9. ' \' → logprob: -11.603835105895996
    10. '\' → logprob: -12.103835105895996

Token 408: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.961759259458631e-06
    2. '')' → logprob: -12.500004768371582
    3. ')
' → logprob: -13.875004768371582
    4. ' )' → logprob: -15.500004768371582
    5. '")' → logprob: -17.0000057220459
    6. '`)' → logprob: -18.5000057220459
    7. ')

' → logprob: -19.3750057220459
    8. '))' → logprob: -19.5000057220459
    9. '#' → logprob: -19.7500057220459
    10. ');' → logprob: -19.8750057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 406
Tokens correctement prédits (1ère position, stricte): 203
Tokens correctement prédits (1ère position, avec adaptation): 214
Tokens correctement prédits (top 10): 351
Précision stricte (1ère position): 50.00%
Précision adaptée (1ère position): 52.71%
Précision (top 10): 86.45%
================================================================================
