================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:31:44
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n, z = input(), input()
def find_abc(x):
    i, total = 0, 0
    while i <= len(x)-3:
        if ''.join([x[j] for j in range(i,i+3)]) is 'ABC':
            total += 1
        i += 1
    return total

class Counter:
    def __init__(self, substr):
        self.substr = substr
    def count(self, S):
        return sum(1 for k in range(len(S)-2) if S[k:k+3]==self.substr)

if False:
    print('never runs')
elif True:
    import functools
    result = functools.reduce(lambda acc, _: acc, [0], 0)
    print(Counter('ABC').count(z) + 0*find_abc(z))
else:
    print(find_abc(z))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' z' (ID: 579)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06031670421361923
    2. ' =' → logprob: -3.185316801071167
    3. ',' → logprob: -4.560316562652588
    4. ' ' → logprob: -6.060316562652588
    5. '+' → logprob: -6.185316562652588
    6. ')' → logprob: -7.060316562652588
    7. '*' → logprob: -7.185316562652588
    8. '**' → logprob: -8.435317039489746
    9. '[' → logprob: -8.935317039489746
    10. '.' → logprob: -9.935317039489746

Token 4: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6916863918304443
    2. ' map' → logprob: -1.5666863918304443
    3. '0' → logprob: -1.8166863918304443
    4. 'map' → logprob: -2.3166863918304443
    5. ' input' → logprob: -4.941686630249023
    6. 'input' → logprob: -5.066686630249023
    7. '10' → logprob: -5.441686630249023
    8. '1' → logprob: -5.566686630249023
    9. ' n' → logprob: -5.816686630249023
    10. '5' → logprob: -7.191686630249023

Token 5: '(),' (ID: 2547)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015716375783085823
    2. '()' → logprob: -7.0015716552734375
    3. '("("' → logprob: -8.626571655273438
    4. '().' → logprob: -9.126571655273438
    5. '(
' → logprob: -9.376571655273438
    6. '('' → logprob: -9.376571655273438
    7. '.' → logprob: -9.876571655273438
    8. ''' → logprob: -10.001571655273438
    9. '(.)' → logprob: -11.251571655273438
    10. ',' → logprob: -11.376571655273438

Token 6: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.25659066438674927
    2. ' input' → logprob: -1.6315906047821045
    3. 'int' → logprob: -4.131590843200684
    4. ' ' → logprob: -5.506590843200684
    5. '"' → logprob: -5.756590843200684
    6. ' int' → logprob: -5.881590843200684
    7. ''' → logprob: -6.756590843200684
    8. ' []' → logprob: -7.631590843200684
    9. '[]' → logprob: -7.881590843200684
    10. '0' → logprob: -8.131590843200684

Token 7: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011870192363858223
    2. '()' → logprob: -5.261870384216309
    3. ''' → logprob: -6.636870384216309
    4. '"' → logprob: -6.636870384216309
    5. '(
' → logprob: -7.261870384216309
    6. '```' → logprob: -7.261870384216309
    7. '('' → logprob: -7.511870384216309
    8. '`' → logprob: -7.636870384216309
    9. '.' → logprob: -7.886870384216309
    10. ' (' → logprob: -8.511870384216309

Token 8: 'def' (ID: 1314)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.23644667863845825
    2. '.' → logprob: -2.8614466190338135
    3. '=' → logprob: -3.1114466190338135
    4. '```' → logprob: -3.6114466190338135
    5. 'if' → logprob: -4.111446857452393
    6. '.strip' → logprob: -4.486446857452393
    7. 'n' → logprob: -4.611446857452393
    8. '\n' → logprob: -4.611446857452393
    9. '#' → logprob: -5.111446857452393
    10. '.replace' → logprob: -5.486446857452393

Token 9: ' find' (ID: 1646)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.003560042707249522
    2. '_' → logprob: -6.5035600662231445
    3. ' space' → logprob: -6.7535600662231445
    4. ' _' → logprob: -8.253560066223145
    5. '  ' → logprob: -9.253560066223145
    6. ' f' → logprob: -9.628560066223145
    7. ' a' → logprob: -9.628560066223145
    8. '_space' → logprob: -9.753560066223145
    9. ' n' → logprob: -10.003560066223145
    10. ' split' → logprob: -10.628560066223145

Token 10: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.021159157156944275
    2. '_max' → logprob: -4.1461591720581055
    3. ' _' → logprob: -6.0211591720581055
    4. '_space' → logprob: -8.521159172058105
    5. '_a' → logprob: -8.646159172058105
    6. '_l' → logprob: -8.771159172058105
    7. '(' → logprob: -9.021159172058105
    8. '_min' → logprob: -9.021159172058105
    9. '_difference' → logprob: -9.146159172058105
    10. '_sub' → logprob: -9.271159172058105

Token 11: 'abc' (ID: 26682)
  Prédit: 'common'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'common' → logprob: -1.1138215065002441
    2. 'z' → logprob: -2.113821506500244
    3. 'max' → logprob: -2.613821506500244
    4. 'substring' → logprob: -2.738821506500244
    5. 'difference' → logprob: -2.738821506500244
    6. 'sub' → logprob: -3.238821506500244
    7. 'g' → logprob: -3.613821506500244
    8. 'intersection' → logprob: -3.863821506500244
    9. 'l' → logprob: -3.988821506500244
    10. 'long' → logprob: -4.113821506500244

Token 12: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11557428538799286
    2. '_' → logprob: -2.365574359893799
    3. '(a' → logprob: -4.865574359893799
    4. 'def' → logprob: -6.490574359893799
    5. '(x' → logprob: -7.115574359893799
    6. ')' → logprob: -7.365574359893799
    7. ' (' → logprob: -7.490574359893799
    8. '```' → logprob: -7.740574359893799
    9. '(n' → logprob: -7.865574359893799
    10. '()' → logprob: -7.990574359893799

Token 13: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03998662158846855
    2. ')' → logprob: -3.7899866104125977
    3. ',' → logprob: -4.164986610412598
    4. '[' → logprob: -8.164986610412598
    5. ':' → logprob: -8.289986610412598
    6. '):
' → logprob: -8.914986610412598
    7. ' ):' → logprob: -9.914986610412598
    8. '_' → logprob: -10.164986610412598
    9. '**' → logprob: -10.164986610412598
    10. 'a' → logprob: -10.164986610412598

Token 14: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002795848995447159
    2. ' :' → logprob: -7.002795696258545
    3. '   ' → logprob: -7.252795696258545
    4. ':
' → logprob: -7.377795696258545
    5. '(' → logprob: -9.127796173095703
    6. ' ' → logprob: -9.377796173095703
    7. ':return' → logprob: -9.377796173095703
    8. '():' → logprob: -10.002796173095703
    9. '    ' → logprob: -10.002796173095703
    10. '):' → logprob: -10.877796173095703

Token 15: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7515164017677307
    2. '   ' → logprob: -2.126516342163086
    3. '    ' → logprob: -2.751516342163086
    4. 'a' → logprob: -2.751516342163086
    5. ' if' → logprob: -3.001516342163086
    6. ' i' → logprob: -3.501516342163086
    7. 'n' → logprob: -3.626516342163086
    8. 'i' (adapté à ' i') → logprob: -3.626516342163086
    9. ' a' → logprob: -3.626516342163086
    10. ' for' → logprob: -4.376516342163086

Token 16: ',' (ID: 11)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.6312954425811768
    2. '=' → logprob: -1.2562954425811768
    3. 'n' → logprob: -1.7562954425811768
    4. 'nt' → logprob: -5.256295204162598
    5. ' =' → logprob: -5.506295204162598
    6. ' ' → logprob: -8.006295204162598
    7. '_' → logprob: -8.506295204162598
    8. 'm' → logprob: -8.881295204162598
    9. 's' → logprob: -9.131295204162598
    10. 'nd' → logprob: -9.131295204162598

Token 17: ' total' (ID: 3609)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.5912951827049255
    2. 'j' → logprob: -1.0912952423095703
    3. 'a' → logprob: -3.3412952423095703
    4. ' ' → logprob: -3.8412952423095703
    5. ' a' → logprob: -3.8412952423095703
    6. ' s' → logprob: -4.71629524230957
    7. 's' → logprob: -4.84129524230957
    8. '1' → logprob: -5.84129524230957
    9. 'n' → logprob: -6.21629524230957
    10. ' n' → logprob: -6.21629524230957

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.013140465132892132
    2. '=' → logprob: -4.388140678405762
    3. ',' → logprob: -7.763140678405762
    4. ' ' → logprob: -9.888140678405762
    5. 's' → logprob: -10.263140678405762
    6. '  ' → logprob: -10.263140678405762
    7. ')' → logprob: -10.388140678405762
    8. '_' → logprob: -10.513140678405762
    9. ' ,' → logprob: -11.263140678405762
    10. ' +=' → logprob: -12.763140678405762

Token 19: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06403537094593048
    2. '0' → logprob: -2.814035415649414
    3. '1' → logprob: -6.189035415649414
    4. ' x' → logprob: -12.689035415649414
    5. '2' → logprob: -12.814035415649414
    6. 'x' → logprob: -13.439035415649414
    7. ' ' → logprob: -13.564035415649414
    8. ' -' → logprob: -14.189035415649414
    9. '  ' → logprob: -14.314035415649414
    10. ' (' → logprob: -14.564035415649414

Token 20: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18124373257160187
    2. ' ' → logprob: -2.431243658065796
    3. '1' → logprob: -2.556243658065796
    4. '2' → logprob: -8.681243896484375
    5. 'int' → logprob: -11.056243896484375
    6. 'x' → logprob: -11.306243896484375
    7. '(' → logprob: -11.806243896484375
    8. '[' → logprob: -12.306243896484375
    9. ' x' → logprob: -12.431243896484375
    10. '-' → logprob: -12.556243896484375

Token 21: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6304301619529724
    2. ',' → logprob: -1.1304302215576172
    3. '<|end|>' → logprob: -2.255430221557617
    4. ' ,' → logprob: -4.130430221557617
    5. '  ' → logprob: -4.755430221557617
    6. '<|end|>' → logprob: -5.255430221557617
    7. '   ' → logprob: -6.130430221557617
    8. '
' → logprob: -6.380430221557617
    9. ' 
' → logprob: -7.005430221557617
    10. ')' → logprob: -7.130430221557617

Token 22: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.27072566747665405
    2. '0' → logprob: -1.5207257270812988
    3. '1' → logprob: -4.020725727081299
    4. ' x' → logprob: -8.39572525024414
    5. ' i' → logprob: -9.89572525024414
    6. 'x' → logprob: -9.89572525024414
    7. '   ' → logprob: -10.39572525024414
    8. ' int' → logprob: -10.39572525024414
    9. ' []' → logprob: -10.39572525024414
    10. '  ' → logprob: -10.52072525024414

Token 23: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.045139532536268234
    2. '1' → logprob: -3.2951395511627197
    3. ' ' → logprob: -6.045139312744141
    4. '[]' → logprob: -6.670139312744141
    5. '""' → logprob: -6.920139312744141
    6. '''' → logprob: -7.045139312744141
    7. 'x' → logprob: -7.795139312744141
    8. 'int' → logprob: -8.29513931274414
    9. 'len' → logprob: -8.29513931274414
    10. '{}' → logprob: -9.29513931274414

Token 24: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.604930579662323
    2. '<|end|>' → logprob: -1.1049306392669678
    3. ' ' → logprob: -2.9799306392669678
    4. '
' → logprob: -3.6049306392669678
    5. '   ' → logprob: -4.729930400848389
    6. ' 
' → logprob: -5.104930400848389
    7. '<|end|>' → logprob: -5.104930400848389
    8. ',' → logprob: -5.479930400848389
    9. '  ' → logprob: -5.479930400848389
    10. ')' → logprob: -6.104930400848389

Token 25: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1201818659901619
    2. ' ' → logprob: -2.6201817989349365
    3. '   ' → logprob: -4.745182037353516
    4. ' 
' → logprob: -4.870182037353516
    5. ' :' → logprob: -5.745182037353516
    6. ':
' → logprob: -5.870182037353516
    7. '<|end|>' → logprob: -5.995182037353516
    8. ' while' → logprob: -6.245182037353516
    9. ',' → logprob: -6.370182037353516
    10. '
' → logprob: -6.370182037353516

Token 26: ' while' (ID: 2049)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.45809468626976013
    2. ' while' → logprob: -1.3330947160720825
    3. 'while' (adapté à ' while') → logprob: -2.583094596862793
    4. ':' → logprob: -5.083094596862793
    5. 'for' → logprob: -5.833094596862793
    6. ' for' → logprob: -5.958094596862793
    7. '   ' → logprob: -6.083094596862793
    8. 'n' → logprob: -6.208094596862793
    9. ' 
' → logprob: -6.458094596862793
    10. '
' → logprob: -6.833094596862793

Token 27: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.009496456943452358
    2. 'i' → logprob: -4.759496688842773
    3. ' x' → logprob: -7.759496688842773
    4. ' ' → logprob: -8.509496688842773
    5. 'x' → logprob: -9.009496688842773
    6. ' True' → logprob: -9.759496688842773
    7. 'True' → logprob: -11.009496688842773
    8. '(i' → logprob: -11.259496688842773
    9. ' total' → logprob: -11.509496688842773
    10. ' ' → logprob: -12.259496688842773

Token 28: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.04688282310962677
    2. '<' → logprob: -3.1718828678131104
    3. ' ' → logprob: -6.046882629394531
    4. ' <=' → logprob: -7.046882629394531
    5. '<len' → logprob: -7.671882629394531
    6. '<=' → logprob: -9.796882629394531
    7. ' in' → logprob: -10.296882629394531
    8. '<n' → logprob: -10.671882629394531
    9. '[' → logprob: -11.421882629394531
    10. '*' → logprob: -11.546882629394531

Token 29: ' len' (ID: 4631)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.597093939781189
    2. ' len' → logprob: -1.597093939781189
    3. 'x' → logprob: -1.722093939781189
    4. 'len' → logprob: -2.7220940589904785
    5. ' int' → logprob: -7.0970940589904785
    6. ' ' → logprob: -7.3470940589904785
    7. 'int' → logprob: -7.4720940589904785
    8. ' n' → logprob: -8.22209358215332
    9. 'n' → logprob: -8.97209358215332
    10. '10' → logprob: -9.72209358215332

Token 30: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0028448181692510843
    2. '(' → logprob: -5.87784481048584
    3. 'x' → logprob: -10.37784481048584
    4. '(s' → logprob: -12.62784481048584
    5. '(z' → logprob: -12.87784481048584
    6. '(n' → logprob: -13.87784481048584
    7. ' (' → logprob: -14.62784481048584
    8. ' x' → logprob: -14.75284481048584
    9. ')' → logprob: -15.00284481048584
    10. '(i' → logprob: -15.50284481048584

Token 31: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05955260619521141
    2. ')-' → logprob: -3.5595526695251465
    3. '):' → logprob: -3.6845526695251465
    4. ' )' → logprob: -6.0595526695251465
    5. '-' → logprob: -7.8095526695251465
    6. ' ):' → logprob: -8.059552192687988
    7. ' ' → logprob: -8.184552192687988
    8. '):
' → logprob: -8.309552192687988
    9. ' -' → logprob: -8.309552192687988
    10. '   ' → logprob: -8.559552192687988

Token 32: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.02112331986427307
    2. '1' → logprob: -4.27112340927124
    3. ' ' → logprob: -5.89612340927124
    4. '2' → logprob: -6.14612340927124
    5. '4' → logprob: -6.64612340927124
    6. '5' → logprob: -8.646122932434082
    7. '6' → logprob: -8.646122932434082
    8. '7' → logprob: -9.021122932434082
    9. '10' → logprob: -9.521122932434082
    10. '9' → logprob: -10.146122932434082

Token 33: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07313471287488937
    2. ' and' → logprob: -2.698134660720825
    3. ' :' → logprob: -6.323134899139404
    4. 'and' → logprob: -6.948134899139404
    5. ':
' → logprob: -8.073134422302246
    6. '   ' → logprob: -9.698134422302246
    7. ' ' → logprob: -10.573134422302246
    8. ' :
' → logprob: -11.948134422302246
    9. '<|end|>' → logprob: -12.073134422302246
    10. '):' → logprob: -12.198134422302246

Token 34: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4940202534198761
    2. '       ' → logprob: -1.3690202236175537
    3. '<|end|>' → logprob: -2.3690202236175537
    4. '   ' → logprob: -4.619020462036133
    5. ':' → logprob: -4.619020462036133
    6. '    ' → logprob: -5.244020462036133
    7. ' 
' → logprob: -5.369020462036133
    8. '  ' → logprob: -6.244020462036133
    9. '        
' → logprob: -6.619020462036133
    10. ',' → logprob: -6.744020462036133

Token 35: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5096902847290039
    2. ' if' → logprob: -1.134690284729004
    3. '  ' → logprob: -3.509690284729004
    4. 'if' (adapté à ' if') → logprob: -3.759690284729004
    5. '   ' → logprob: -4.509690284729004
    6. '    ' → logprob: -5.509690284729004
    7. ' x' → logprob: -6.259690284729004
    8. '       ' → logprob: -6.634690284729004
    9. '```' → logprob: -7.009690284729004
    10. 'abc' → logprob: -7.134690284729004

Token 36: ' ''.' (ID: 105941)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.04888494685292244
    2. 'x' → logprob: -3.048884868621826
    3. ' (' → logprob: -9.173885345458984
    4. 'int' → logprob: -10.173885345458984
    5. ' ' → logprob: -10.298885345458984
    6. ' int' → logprob: -10.423885345458984
    7. '(x' → logprob: -10.798885345458984
    8. '(' → logprob: -11.048885345458984
    9. ' ord' → logprob: -11.173885345458984
    10. ' '' → logprob: -11.673885345458984

Token 37: 'join' (ID: 10891)
  Prédit: 'startswith'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'startswith' → logprob: -0.1986040472984314
    2. 'join' → logprob: -2.198604106903076
    3. 'count' → logprob: -3.698604106903076
    4. 'find' → logprob: -4.323604106903076
    5. '<|end|>' → logprob: -4.323604106903076
    6. 'isdigit' → logprob: -4.573604106903076
    7. 'substring' → logprob: -5.698604106903076
    8. 'strip' → logprob: -7.073604106903076
    9. 'is' → logprob: -7.823604106903076
    10. 'slice' → logprob: -7.948604106903076

Token 38: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.2536897659301758
    2. '(x' → logprob: -1.6286897659301758
    3. '(sorted' → logprob: -3.878689765930176
    4. '([
' → logprob: -6.128689765930176
    5. '[x' → logprob: -6.253689765930176
    6. '(['' → logprob: -6.628689765930176
    7. '(' → logprob: -7.253689765930176
    8. '(list' → logprob: -8.128689765930176
    9. 'sorted' → logprob: -8.378689765930176
    10. '<|end|>' → logprob: -8.628689765930176

Token 39: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.006050620228052139
    2. '[x' → logprob: -5.5060505867004395
    3. 'list' → logprob: -6.8810505867004395
    4. 'str' → logprob: -8.131051063537598
    5. 'sorted' → logprob: -9.006051063537598
    6. '[' → logprob: -9.131051063537598
    7. 'map' → logprob: -9.256051063537598
    8. ' x' → logprob: -9.381051063537598
    9. '['' → logprob: -9.631051063537598
    10. '[i' → logprob: -10.006051063537598

Token 40: '[j' (ID: 7895)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.3915141355246305e-05
    2. '[' → logprob: -10.87502384185791
    3. '[j' → logprob: -13.37502384185791
    4. 'i' → logprob: -13.62502384185791
    5. ' [' → logprob: -14.12502384185791
    6. ' ' → logprob: -14.87502384185791
    7. '[
' → logprob: -15.12502384185791
    8. '[x' → logprob: -15.25002384185791
    9. '   ' → logprob: -15.50002384185791
    10. '[k' → logprob: -17.000024795532227

Token 41: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00013250234769657254
    2. 'j' → logprob: -10.62513256072998
    3. '']' → logprob: -10.62513256072998
    4. ' ]' → logprob: -10.62513256072998
    5. 'for' → logprob: -10.75013256072998
    6. ')' → logprob: -11.50013256072998
    7. ' for' → logprob: -11.87513256072998
    8. '>' → logprob: -12.25013256072998
    9. '```' → logprob: -12.75013256072998
    10. ']]' → logprob: -13.62513256072998

Token 42: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5762583017349243
    2. ' for' → logprob: -0.8262583017349243
    3. ']' → logprob: -9.076258659362793
    4. '	for' → logprob: -10.201258659362793
    5. ')' → logprob: -10.451258659362793
    6. ' j' → logprob: -10.826258659362793
    7. '[i' → logprob: -11.076258659362793
    8. ' ' → logprob: -11.076258659362793
    9. 'j' → logprob: -11.201258659362793
    10. '+i' → logprob: -11.576258659362793

Token 43: ' j' (ID: 441)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.010338276624679565
    2. '<|end|>' → logprob: -5.260338306427002
    3. ' j' → logprob: -6.135338306427002
    4. 'range' → logprob: -6.510338306427002
    5. ' in' → logprob: -7.010338306427002
    6. '<|end|>' → logprob: -8.010337829589844
    7. '	range' → logprob: -9.135337829589844
    8. ' xrange' → logprob: -10.010337829589844
    9. ' ' → logprob: -10.635337829589844
    10. '(range' → logprob: -11.885337829589844

Token 44: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0013147627469152212
    2. 'in' → logprob: -6.751314640045166
    3. '<|end|>' → logprob: -9.001315116882324
    4. ' ' → logprob: -11.376315116882324
    5. '<|end|>' → logprob: -12.126315116882324
    6. 'range' → logprob: -12.626315116882324
    7. ' range' → logprob: -14.626315116882324
    8. 's' → logprob: -15.876315116882324
    9. 'In' → logprob: -15.876315116882324
    10. '	in' → logprob: -17.001314163208008

Token 45: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.018161997199058533
    2. 'range' → logprob: -4.018161773681641
    3. '(range' → logprob: -12.14316177368164
    4. '	range' → logprob: -12.14316177368164
    5. ' xrange' → logprob: -13.89316177368164
    6. ' ' → logprob: -15.26816177368164
    7. '[' → logprob: -16.14316177368164
    8. '_range' → logprob: -17.14316177368164
    9. '.range' → logprob: -17.39316177368164
    10. '<|end|>' → logprob: -17.51816177368164

Token 46: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.006409462541341782
    2. 'i' → logprob: -5.881409645080566
    3. ' i' → logprob: -6.381409645080566
    4. '(' → logprob: -6.381409645080566
    5. '   ' → logprob: -9.006409645080566
    6. '	i' → logprob: -10.381409645080566
    7. ' (' → logprob: -11.131409645080566
    8. '{i' → logprob: -11.256409645080566
    9. ' ' → logprob: -12.131409645080566
    10. '<|end|>' → logprob: -12.506409645080566

Token 47: ',i' (ID: 25032)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2476799190044403
    2. ' ,' → logprob: -1.9976799488067627
    3. ',i' → logprob: -2.6226799488067627
    4. ' ' → logprob: -4.872679710388184
    5. '+' → logprob: -6.872679710388184
    6. 'i' → logprob: -7.122679710388184
    7. ' i' → logprob: -7.747679710388184
    8. ' to' → logprob: -7.997679710388184
    9. 'to' → logprob: -8.497679710388184
    10. '<|end|>' → logprob: -8.497679710388184

Token 48: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004514969885349274
    2. '3' → logprob: -5.754515171051025
    3. ' +' → logprob: -6.629515171051025
    4. ' ' → logprob: -11.629514694213867
    5. '4' → logprob: -12.754514694213867
    6. '+
' → logprob: -14.379514694213867
    7. '   ' → logprob: -14.629514694213867
    8. '6' → logprob: -15.004514694213867
    9. '＋' → logprob: -15.254514694213867
    10. '7' → logprob: -15.504514694213867

Token 49: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.9504606825648807e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -15.875019073486328
    4. '  ' → logprob: -16.250019073486328
    5. '```' → logprob: -16.750019073486328
    6. '1' → logprob: -16.812519073486328
    7. ')' → logprob: -17.062519073486328
    8. '4' → logprob: -17.625019073486328
    9. '2' → logprob: -18.125019073486328
    10. '۳' → logprob: -18.500019073486328

Token 50: ')])' (ID: 99066)
  Prédit: ')])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.0059175388887524605
    2. '])' → logprob: -5.630917549133301
    3. ')]' → logprob: -6.630917549133301
    4. ')' → logprob: -7.630917549133301
    5. ']])' → logprob: -8.0059175491333
    6. ']))' → logprob: -9.6309175491333
    7. ' )' → logprob: -10.1309175491333
    8. '])]' → logprob: -10.6309175491333
    9. '   ' → logprob: -11.2559175491333
    10. ' ' → logprob: -11.7559175491333

Token 51: ' is' (ID: 382)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.9046741127967834
    2. ' ==' → logprob: -1.1546740531921387
    3. ' in' → logprob: -1.2796740531921387
    4. 'in' → logprob: -6.904674053192139
    5. '=='' → logprob: -8.154674530029297
    6. ' ' → logprob: -9.029674530029297
    7. '===' → logprob: -9.154674530029297
    8. '=="' → logprob: -9.279674530029297
    9. ' not' → logprob: -9.529674530029297
    10. '  ' → logprob: -9.779674530029297

Token 52: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.8084355592727661
    2. ''' → logprob: -1.1834355592727661
    3. '"' → logprob: -1.6834355592727661
    4. ' "' → logprob: -2.8084354400634766
    5. ''a' → logprob: -6.933435440063477
    6. ' ' → logprob: -8.933435440063477
    7. ' not' → logprob: -8.933435440063477
    8. ''s' → logprob: -8.933435440063477
    9. ''e' → logprob: -9.308435440063477
    10. ' in' → logprob: -9.433435440063477

Token 53: 'ABC' (ID: 44197)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.32502710819244385
    2. ''' → logprob: -1.3250271081924438
    3. '"' → logprob: -5.200026988983154
    4. 'ABC' → logprob: -5.450026988983154
    5. ''ab' → logprob: -7.325026988983154
    6. ''a' → logprob: -7.450026988983154
    7. ' abc' → logprob: -8.450027465820312
    8. ' '' → logprob: -9.450027465820312
    9. 'a' → logprob: -9.575027465820312
    10. '  ' → logprob: -10.200027465820312

Token 54: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '':' → logprob: -0.05416547507047653
    2. ''' → logprob: -3.0541653633117676
    3. ''):' → logprob: -5.429165363311768
    4. ':' → logprob: -6.929165363311768
    5. '')' → logprob: -9.679165840148926
    6. '']:' → logprob: -10.054165840148926
    7. '']' → logprob: -10.929165840148926
    8. ''>' → logprob: -11.179165840148926
    9. '):' → logprob: -11.179165840148926
    10. ']:' → logprob: -11.554165840148926

Token 55: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014352009631693363
    2. ' and' → logprob: -5.014351844787598
    3. '<|end|>' → logprob: -5.764351844787598
    4. ' :' → logprob: -6.139351844787598
    5. ')' → logprob: -7.639351844787598
    6. 'and' → logprob: -7.889351844787598
    7. ' or' → logprob: -7.889351844787598
    8. ' ' → logprob: -8.389351844787598
    9. '==' → logprob: -8.514351844787598
    10. '):' → logprob: -9.014351844787598

Token 56: ' total' (ID: 3609)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06081767752766609
    2. '<|end|>' → logprob: -3.4358177185058594
    3. '        ' → logprob: -5.560817718505859
    4. '            ' → logprob: -5.810817718505859
    5. ' :' → logprob: -5.935817718505859
    6. '               ' → logprob: -6.060817718505859
    7. '  ' → logprob: -6.310817718505859
    8. '                ' → logprob: -6.560817718505859
    9. '       ' → logprob: -6.685817718505859
    10. ':' → logprob: -6.685817718505859

Token 57: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.429738312959671
    2. ' +=' → logprob: -1.1797382831573486
    3. '+' → logprob: -3.1797382831573486
    4. '=' → logprob: -8.17973804473877
    5. ' +' → logprob: -10.05473804473877
    6. '<|end|>' → logprob: -10.92973804473877
    7. ']+=' → logprob: -11.92973804473877
    8. '+='' → logprob: -12.42973804473877
    9. '==' → logprob: -13.05473804473877
    10. '++' → logprob: -13.30473804473877

Token 58: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03804539144039154
    2. ' ' → logprob: -3.2880454063415527
    3. '3' → logprob: -13.288044929504395
    4. '   ' → logprob: -14.913044929504395
    5. '  ' → logprob: -15.038044929504395
    6. ' ' → logprob: -15.038044929504395
    7. '+' → logprob: -15.100544929504395
    8. ' x' → logprob: -15.788044929504395
    9. 'x' → logprob: -15.850544929504395
    10. '2' → logprob: -16.10054588317871

Token 59: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018196819291915745
    2. ' ' → logprob: -8.750182151794434
    3. 'x' → logprob: -11.000182151794434
    4. '3' → logprob: -14.125182151794434
    5. 'z' → logprob: -14.375182151794434
    6. '   ' → logprob: -14.562682151794434
    7. '100' → logprob: -14.625182151794434
    8. '2' → logprob: -14.875182151794434
    9. '+' → logprob: -14.937682151794434
    10. '```' → logprob: -15.125182151794434

Token 60: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10168957710266113
    2. '<|end|>' → logprob: -2.476689577102661
    3. '
' → logprob: -4.726689338684082
    4. '\n' → logprob: -6.726689338684082
    5. '<|end|>' → logprob: -7.101689338684082
    6. '   ' → logprob: -7.851689338684082
    7. '\' → logprob: -8.226689338684082
    8. ')' → logprob: -9.226689338684082
    9. '      ' → logprob: -9.351689338684082
    10. ' ' → logprob: -9.351689338684082

Token 61: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06913144141435623
    2. '
' → logprob: -3.319131374359131
    3. '<|end|>' → logprob: -3.569131374359131
    4. '\n' → logprob: -7.194131374359131
    5. '<|end|>' → logprob: -7.819131374359131
    6. '   ' → logprob: -8.069131851196289
    7. '        
' → logprob: -8.819131851196289
    8. '\' → logprob: -8.944131851196289
    9. ' ' → logprob: -9.194131851196289
    10. '
' → logprob: -9.194131851196289

Token 62: ' i' (ID: 575)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019006840884685516
    2. '   ' → logprob: -4.519006729125977
    3. '<|end|>' → logprob: -5.644006729125977
    4. 'i' (adapté à ' i') → logprob: -6.769006729125977
    5. ' i' → logprob: -7.144006729125977
    6. ' ' → logprob: -7.144006729125977
    7. '    ' → logprob: -7.769006729125977
    8. '<|end|>' → logprob: -8.019006729125977
    9. '      ' → logprob: -8.769006729125977
    10. '           ' → logprob: -8.894006729125977

Token 63: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2850089371204376
    2. '+=' → logprob: -2.0350089073181152
    3. ' +=' → logprob: -2.1600089073181152
    4. ' +' → logprob: -7.035008907318115
    5. '++' → logprob: -7.660008907318115
    6. '=' → logprob: -8.035009384155273
    7. '<|end|>' → logprob: -8.410009384155273
    8. ' ' → logprob: -9.910009384155273
    9. '+++' → logprob: -11.535009384155273
    10. '1' → logprob: -12.160009384155273

Token 64: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004620710853487253
    2. ' ' → logprob: -5.379620552062988
    3. '```' → logprob: -15.629620552062988
    4. '   ' → logprob: -16.129621505737305
    5. '3' → logprob: -16.504621505737305
    6. '2' → logprob: -17.129621505737305
    7. ' ' → logprob: -17.254621505737305
    8. '  ' → logprob: -17.379621505737305
    9. '+' → logprob: -18.254621505737305
    10. '１' → logprob: -18.317121505737305

Token 65: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012451570364646614
    2. ' ' → logprob: -9.25012493133545
    3. '3' → logprob: -10.50012493133545
    4. '2' → logprob: -15.43762493133545
    5. '```' → logprob: -15.81262493133545
    6. '   ' → logprob: -16.625123977661133
    7. '  ' → logprob: -16.812623977661133
    8. '0' → logprob: -17.062623977661133
    9. '6' → logprob: -17.250123977661133
    10. '4' → logprob: -17.625123977661133

Token 66: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 67: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4533638656139374
    2. '   ' → logprob: -2.2033638954162598
    3. ' ' → logprob: -2.3283638954162598
    4. ':
' → logprob: -2.7033638954162598
    5. ':return' → logprob: -4.32836389541626
    6. '
' → logprob: -4.45336389541626
    7. '[' → logprob: -4.57836389541626
    8. '       ' → logprob: -4.82836389541626
    9. '<|end|>' → logprob: -4.95336389541626
    10. ' :' → logprob: -4.95336389541626

Token 68: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 69: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.3132646679878235
    2. 'total' → logprob: -1.3132646083831787
    3. '(total' → logprob: -13.813264846801758
    4. ' ' → logprob: -14.063264846801758
    5. 'Total' → logprob: -14.813264846801758
    6. '   ' → logprob: -15.813264846801758
    7. ' ' → logprob: -16.188264846801758
    8. 't' → logprob: -16.438264846801758
    9. '	total' → logprob: -16.438264846801758
    10. '0' → logprob: -16.813264846801758

Token 70: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 71: 'class' (ID: 1444)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7357454299926758
    2. '==' → logprob: -0.8607454299926758
    3. ' ' → logprob: -3.610745429992676
    4. ':' → logprob: -3.860745429992676
    5. '[' → logprob: -4.610745429992676
    6. ' ==' → logprob: -4.610745429992676
    7. '<|end|>' → logprob: -4.985745429992676
    8. '   ' → logprob: -5.610745429992676
    9. ',' → logprob: -5.860745429992676
    10. ')' → logprob: -6.110745429992676

Token 72: ' Counter' (ID: 32251)
  Prédit: ' ABC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ABC' → logprob: -0.8533536195755005
    2. ' Counter' → logprob: -1.2283536195755005
    3. ' ' → logprob: -1.8533536195755005
    4. ' My' → logprob: -3.353353500366211
    5. ' A' → logprob: -3.853353500366211
    6. ' Solution' → logprob: -4.103353500366211
    7. ' Count' → logprob: -4.103353500366211
    8. ' User' → logprob: -4.853353500366211
    9. ' String' → logprob: -5.728353500366211
    10. ' Test' → logprob: -5.853353500366211

Token 73: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004067597910761833
    2. '(' → logprob: -5.629067420959473
    3. '(C' → logprob: -8.879067420959473
    4. ':
' → logprob: -9.379067420959473
    5. '(object' → logprob: -9.379067420959473
    6. '():' → logprob: -9.754067420959473
    7. ' :' → logprob: -10.754067420959473
    8. '{' → logprob: -11.379067420959473
    9. '):' → logprob: -11.629067420959473
    10. 'Counter' → logprob: -12.129067420959473

Token 74: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04481133073568344
    2. '   ' → logprob: -3.919811248779297
    3. '<|end|>' → logprob: -5.169811248779297
    4. ':
' → logprob: -5.294811248779297
    5. '():' → logprob: -5.294811248779297
    6. ' :' → logprob: -5.794811248779297
    7. '(object' → logprob: -6.669811248779297
    8. ' def' → logprob: -7.169811248779297
    9. '(' → logprob: -7.169811248779297
    10. '(n' → logprob: -7.419811248779297

Token 75: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.01661546714603901
    2. '   ' → logprob: -4.766615390777588
    3. 'def' (adapté à ' def') → logprob: -5.391615390777588
    4. '    ' → logprob: -5.891615390777588
    5. ' ' → logprob: -7.766615390777588
    6. '    
' → logprob: -9.891615867614746
    7. ' 
' → logprob: -9.891615867614746
    8. ' pass' → logprob: -10.516615867614746
    9. ' n' → logprob: -11.016615867614746
    10. ' class' → logprob: -11.391615867614746

Token 76: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.017409250140190125
    2. 'init' → logprob: -4.517409324645996
    3. '__' → logprob: -5.642409324645996
    4. ' init' → logprob: -6.142409324645996
    5. ' ' → logprob: -8.642409324645996
    6. '_' → logprob: -8.642409324645996
    7. ' ' → logprob: -8.892409324645996
    8. ' _' → logprob: -9.767409324645996
    9. '_init' → logprob: -9.767409324645996
    10. ' def' → logprob: -11.517409324645996

Token 77: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.3856492842023727e-06
    2. 'ini' → logprob: -14.000000953674316
    3. ' init' → logprob: -15.125000953674316
    4. 'in' → logprob: -16.875001907348633
    5. 'i' → logprob: -17.750001907348633
    6. 'int' → logprob: -17.875001907348633
    7. ' ' → logprob: -18.125001907348633
    8. '   ' → logprob: -18.625001907348633
    9. '  ' → logprob: -18.625001907348633
    10. 'inite' → logprob: -19.000001907348633

Token 78: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.08923792839050293
    2. '__' → logprob: -2.464237928390503
    3. '__(
' → logprob: -8.964238166809082
    4. '(self' → logprob: -9.589238166809082
    5. '(' → logprob: -9.714238166809082
    6. '__((' → logprob: -10.714238166809082
    7. '__('' → logprob: -11.589238166809082
    8. '__(*' → logprob: -12.464238166809082
    9. '___' → logprob: -13.089238166809082
    10. ' (' → logprob: -13.964238166809082

Token 79: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00045045334263704717
    2. ' self' → logprob: -7.750450611114502
    3. ' ' → logprob: -11.125450134277344
    4. 'n' → logprob: -13.000450134277344
    5. ')' → logprob: -13.125450134277344
    6. '   ' → logprob: -15.375450134277344
    7. '  ' → logprob: -15.875450134277344
    8. '0' → logprob: -16.375450134277344
    9. 's' → logprob: -16.625450134277344
    10. '	self' → logprob: -16.750450134277344

Token 80: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0026881329249590635
    2. ' ,' → logprob: -6.252687931060791
    3. ',n' → logprob: -8.00268840789795
    4. ',self' → logprob: -8.25268840789795
    5. 'self' → logprob: -9.37768840789795
    6. ')' → logprob: -10.75268840789795
    7. ',x' → logprob: -11.12768840789795
    8. '_,' → logprob: -12.25268840789795
    9. ',s' → logprob: -12.50268840789795
    10. ',num' → logprob: -12.87768840789795

Token 81: ' substr' (ID: 29234)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008786991238594055
    2. ')' → logprob: -5.133787155151367
    3. ' self' → logprob: -6.508787155151367
    4. 'n' → logprob: -7.258787155151367
    5. '):
' → logprob: -8.008787155151367
    6. '):' → logprob: -9.133787155151367
    7. 's' → logprob: -9.758787155151367
    8. ')n' → logprob: -10.383787155151367
    9. 'value' → logprob: -10.633787155151367
    10. '):

' → logprob: -10.758787155151367

Token 82: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05300291255116463
    2. 'ing' → logprob: -3.0530028343200684
    3. '):
' → logprob: -6.428002834320068
    4. ')' → logprob: -6.803002834320068
    5. ':' → logprob: -8.053003311157227
    6. '=' → logprob: -8.178003311157227
    7. ',' → logprob: -8.553003311157227
    8. ' ):' → logprob: -8.678003311157227
    9. 'ance' → logprob: -9.053003311157227
    10. '=None' → logprob: -9.303003311157227

Token 83: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08830910921096802
    2. ':' → logprob: -3.4633090496063232
    3. '<|end|>' → logprob: -4.213309288024902
    4. ' ' → logprob: -4.463309288024902
    5. '   ' → logprob: -4.963309288024902
    6. ',' → logprob: -5.088309288024902
    7. '    ' → logprob: -5.088309288024902
    8. ')' → logprob: -5.713309288024902
    9. '      ' → logprob: -7.463309288024902
    10. '):' → logprob: -7.463309288024902

Token 84: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5243123769760132
    2. '       ' → logprob: -1.0243123769760132
    3. 'self' (adapté à ' self') → logprob: -3.0243124961853027
    4. '   ' → logprob: -8.899312019348145
    5. ' ' → logprob: -9.149312019348145
    6. '    ' → logprob: -10.399312019348145
    7. ' ' → logprob: -10.399312019348145
    8. '        ' → logprob: -10.649312019348145
    9. '	self' → logprob: -11.024312019348145
    10. '     ' → logprob: -11.024312019348145

Token 85: '.substr' (ID: 40709)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.049657389521598816
    2. '.substr' → logprob: -3.2996573448181152
    3. '=' → logprob: -5.549657344818115
    4. ' .' → logprob: -6.299657344818115
    5. ' substr' → logprob: -7.049657344818115
    6. ' =' → logprob: -7.049657344818115
    7. ' ' → logprob: -7.174657344818115
    8. '.value' → logprob: -7.549657344818115
    9. '._' → logprob: -7.549657344818115
    10. '.substring' → logprob: -7.674657344818115

Token 86: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5760055184364319
    2. ' =' → logprob: -0.8260055184364319
    3. ')' → logprob: -10.201005935668945
    4. ',' → logprob: -11.201005935668945
    5. ' ' → logprob: -11.576005935668945
    6. '<|end|>' → logprob: -13.326005935668945
    7. ')=' → logprob: -14.326005935668945
    8. '_' → logprob: -14.326005935668945
    9. '   ' → logprob: -14.701005935668945
    10. '==' → logprob: -14.951005935668945

Token 87: ' substr' (ID: 29234)
  Prédit: ' substr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' substr' → logprob: -0.04302419722080231
    2. 'substr' → logprob: -3.1680243015289307
    3. '(substr' → logprob: -10.918024063110352
    4. 'sub' → logprob: -13.168024063110352
    5. '.substr' → logprob: -13.668024063110352
    6. ' substring' → logprob: -14.418024063110352
    7. ' subprocess' → logprob: -14.418024063110352
    8. ' subs' → logprob: -14.668024063110352
    9. ' substrates' → logprob: -14.668024063110352
    10. '<|end|>' → logprob: -15.043024063110352

Token 88: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5279836058616638
    2. '<|end|>' → logprob: -0.9029836058616638
    3. '   ' → logprob: -6.402983665466309
    4. '<|end|>' → logprob: -6.527983665466309
    5. '

' → logprob: -8.027983665466309
    6. ')' → logprob: -8.027983665466309
    7. ' ' → logprob: -8.277983665466309
    8. '       ' → logprob: -8.402983665466309
    9. 'def' → logprob: -9.152983665466309
    10. '    
' → logprob: -9.152983665466309

Token 89: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.028565924614667892
    2. '<|end|>' → logprob: -3.7785658836364746
    3. '   ' → logprob: -5.528565883636475
    4. '

' → logprob: -8.278566360473633
    5. 'def' → logprob: -8.403566360473633
    6. '<|end|>' → logprob: -8.528566360473633
    7. ' def' → logprob: -8.653566360473633
    8. ' 
' → logprob: -9.028566360473633
    9. '    
' → logprob: -9.153566360473633
    10. '       ' → logprob: -9.403566360473633

Token 90: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43774813413619995
    2. 'def' (adapté à ' def') → logprob: -1.8127481937408447
    3. ' def' → logprob: -2.5627481937408447
    4. '   ' → logprob: -2.6877481937408447
    5. ' ' → logprob: -4.062747955322266
    6. ' 
' → logprob: -4.187747955322266
    7. '<|end|>' → logprob: -4.937747955322266
    8. '    
' → logprob: -6.687747955322266
    9. '	def' → logprob: -7.062747955322266
    10. '  
' → logprob: -7.437747955322266

Token 91: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.03316827490925789
    2. 'count' → logprob: -3.783168315887451
    3. ' find' → logprob: -5.158168315887451
    4. ' ' → logprob: -5.658168315887451
    5. ' __' → logprob: -8.158167839050293
    6. ' check' → logprob: -9.533167839050293
    7. ' get' → logprob: -9.533167839050293
    8. ' def' → logprob: -10.783167839050293
    9. '_count' → logprob: -10.908167839050293
    10. ' counter' → logprob: -10.908167839050293

Token 92: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47533926367759705
    2. '(self' → logprob: -0.9753392934799194
    3. '_' → logprob: -7.350339412689209
    4. '(s' → logprob: -9.10033893585205
    5. ' (' → logprob: -9.22533893585205
    6. 's' → logprob: -9.60033893585205
    7. 'self' → logprob: -9.72533893585205
    8. '()' → logprob: -10.10033893585205
    9. '_sub' → logprob: -10.47533893585205
    10. '_count' → logprob: -10.60033893585205

Token 93: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3953382670879364
    2. ',' → logprob: -1.1453382968902588
    3. ' ,' → logprob: -5.52033805847168
    4. ' ):' → logprob: -6.14533805847168
    5. ')' → logprob: -6.64533805847168
    6. ',x' → logprob: -8.64533805847168
    7. 'self' → logprob: -8.77033805847168
    8. '):
' → logprob: -9.52033805847168
    9. '   ' → logprob: -9.64533805847168
    10. ',s' → logprob: -9.77033805847168

Token 94: ' S' (ID: 336)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.182257890701294
    2. 's' → logprob: -1.932257890701294
    3. ' text' → logprob: -1.932257890701294
    4. ' self' → logprob: -2.057257890701294
    5. 'text' → logprob: -2.807257890701294
    6. ')' → logprob: -2.932257890701294
    7. ' x' → logprob: -3.307257890701294
    8. 'x' → logprob: -3.307257890701294
    9. 'self' → logprob: -3.557257890701294
    10. ' string' → logprob: -4.182257652282715

Token 95: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0022558800410479307
    2. '):
' → logprob: -6.377255916595459
    3. ' ):' → logprob: -8.3772554397583
    4. ')' → logprob: -8.8772554397583
    5. '):
' → logprob: -9.7522554397583
    6. ',' → logprob: -9.7522554397583
    7. '       ' → logprob: -10.5022554397583
    8. '   ' → logprob: -10.7522554397583
    9. '[' → logprob: -12.2522554397583
    10. ':' → logprob: -12.3772554397583

Token 96: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004666980355978012
    2. ':' → logprob: -5.504666805267334
    3. ',' → logprob: -9.129667282104492
    4. ':
' → logprob: -9.504667282104492
    5. '      ' → logprob: -10.129667282104492
    6. '   ' → logprob: -10.254667282104492
    7. ' =' → logprob: -10.379667282104492
    8. '    ' → logprob: -10.379667282104492
    9. '[' → logprob: -10.504667282104492
    10. '        ' → logprob: -10.629667282104492

Token 97: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5544081926345825
    2. 'return' (adapté à ' return') → logprob: -1.3044081926345825
    3. 'count' → logprob: -2.929408073425293
    4. 'total' → logprob: -3.054408073425293
    5. ' return' → logprob: -3.179408073425293
    6. ' total' → logprob: -5.679408073425293
    7. 'c' → logprob: -6.054408073425293
    8. ' count' → logprob: -6.429408073425293
    9. 'result' → logprob: -6.679408073425293
    10. 'cnt' → logprob: -6.804408073425293

Token 98: ' sum' (ID: 4215)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.3277131915092468
    2. 'S' → logprob: -1.7027132511138916
    3. ' sum' → logprob: -2.9527132511138916
    4. ' self' → logprob: -4.0777130126953125
    5. 'sum' → logprob: -4.0777130126953125
    6. 'self' → logprob: -4.5777130126953125
    7. ' ' → logprob: -7.9527130126953125
    8. 'len' → logprob: -8.702713012695312
    9. ' len' → logprob: -9.452713012695312
    10. 's' → logprob: -9.952713012695312

Token 99: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16885340213775635
    2. '([' → logprob: -2.293853282928467
    3. '(S' → logprob: -3.918853282928467
    4. '(s' → logprob: -4.293853282928467
    5. '(x' → logprob: -5.043853282928467
    6. '(self' → logprob: -5.293853282928467
    7. '(c' → logprob: -5.793853282928467
    8. '(
' → logprob: -6.168853282928467
    9. '(i' → logprob: -6.168853282928467
    10. '((' → logprob: -6.793853282928467

Token 100: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.33948782086372375
    2. 'S' → logprob: -1.3394877910614014
    3. '[' → logprob: -4.2144880294799805
    4. '[S' → logprob: -5.3394880294799805
    5. '(' → logprob: -6.4644880294799805
    6. 'self' → logprob: -6.7144880294799805
    7. '   ' → logprob: -7.2144880294799805
    8. '[i' → logprob: -7.5894880294799805
    9. 's' → logprob: -7.7144880294799805
    10. '(S' → logprob: -8.08948802947998

Token 101: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5767969489097595
    2. 'for' → logprob: -0.8267969489097595
    3. '   ' → logprob: -8.201796531677246
    4. '1' → logprob: -8.701796531677246
    5. ' ' → logprob: -8.701796531677246
    6. '
' → logprob: -9.826796531677246
    7. '           ' → logprob: -9.826796531677246
    8. '+' → logprob: -10.076796531677246
    9. '       ' → logprob: -11.076796531677246
    10. '  ' → logprob: -11.326796531677246

Token 102: ' k' (ID: 372)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.233592227101326
    2. 'i' → logprob: -1.7335922718048096
    3. '_' → logprob: -3.9835922718048096
    4. ' _' → logprob: -4.3585920333862305
    5. '_i' → logprob: -8.85859203338623
    6. '	i' → logprob: -10.23359203338623
    7. ' ' → logprob: -10.98359203338623
    8. ' j' → logprob: -11.60859203338623
    9. '```' → logprob: -12.10859203338623
    10. '_=' → logprob: -12.48359203338623

Token 103: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00013202552509028465
    2. 'in' → logprob: -9.000131607055664
    3. 'range' → logprob: -12.875131607055664
    4. ' ' → logprob: -13.000131607055664
    5. ',' → logprob: -13.125131607055664
    6. ' range' → logprob: -14.375131607055664
    7. '  ' → logprob: -15.125131607055664
    8. '   ' → logprob: -15.625131607055664
    9. ' i' → logprob: -15.750131607055664
    10. 'n' → logprob: -16.125131607055664

Token 104: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.020550761371850967
    2. ' range' → logprob: -3.8955507278442383
    3. '(range' → logprob: -12.770550727844238
    4. '[' → logprob: -13.395550727844238
    5. '	range' → logprob: -13.770550727844238
    6. ' ' → logprob: -14.145550727844238
    7. 'S' → logprob: -14.145550727844238
    8. ')' → logprob: -14.395550727844238
    9. '   ' → logprob: -14.645550727844238
    10. '.range' → logprob: -15.645550727844238

Token 105: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.00029625516617670655
    2. ' len' → logprob: -8.875296592712402
    3. 'len' → logprob: -9.250296592712402
    4. '(' → logprob: -10.000296592712402
    5. '   ' → logprob: -11.750296592712402
    6. ' (' → logprob: -12.250296592712402
    7. '	len' → logprob: -13.750296592712402
    8. '       ' → logprob: -14.500296592712402
    9. '    ' → logprob: -15.750296592712402
    10. ',len' → logprob: -15.875296592712402

Token 106: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.00017016702622640878
    2. '(self' → logprob: -9.12516975402832
    3. '(' → logprob: -10.00016975402832
    4. '(s' → logprob: -12.00016975402832
    5. 'S' → logprob: -12.12516975402832
    6. ')' → logprob: -13.37516975402832
    7. '(substr' → logprob: -14.25016975402832
    8. 'self' → logprob: -14.62516975402832
    9. 's' → logprob: -15.25016975402832
    10. '(len' → logprob: -15.37516975402832

Token 107: ')-' (ID: 14080)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08916476368904114
    2. ' -' → logprob: -2.8391647338867188
    3. ')' → logprob: -3.7141647338867188
    4. ')-' → logprob: -6.089164733886719
    5. ' ' → logprob: -9.339164733886719
    6. '   ' → logprob: -9.839164733886719
    7. ' )' → logprob: -11.339164733886719
    8. '-l' → logprob: -11.464164733886719
    9. 'len' → logprob: -12.214164733886719
    10. '))' → logprob: -12.589164733886719

Token 108: '2' (ID: 17)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.35049158334732056
    2. '2' → logprob: -1.2254915237426758
    3. ' len' → logprob: -6.600491523742676
    4. '(len' → logprob: -7.725491523742676
    5. ' ' → logprob: -8.725491523742676
    6. 'self' → logprob: -10.350491523742676
    7. '1' → logprob: -11.350491523742676
    8. '   ' → logprob: -12.350491523742676
    9. '(' → logprob: -12.475491523742676
    10. '```' → logprob: -12.475491523742676

Token 109: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013231169432401657
    2. ' if' → logprob: -4.38823127746582
    3. ' )' → logprob: -7.51323127746582
    4. 'if' → logprob: -8.88823127746582
    5. '   ' → logprob: -11.13823127746582
    6. '+' → logprob: -11.38823127746582
    7. ' ' → logprob: -12.13823127746582
    8. ')
' → logprob: -13.76323127746582
    9. '```' → logprob: -14.01323127746582
    10. '  ' → logprob: -14.13823127746582

Token 110: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.020593509078025818
    2. 'if' → logprob: -4.020593643188477
    3. '           ' → logprob: -6.145593643188477
    4. '        ' → logprob: -9.395593643188477
    5. '       ' → logprob: -9.520593643188477
    6. '          ' → logprob: -9.645593643188477
    7. '            ' → logprob: -9.895593643188477
    8. '               ' → logprob: -11.770593643188477
    9. '              ' → logprob: -12.020593643188477
    10. '   ' → logprob: -13.020593643188477

Token 111: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.5766623020172119
    2. 'S' → logprob: -0.8266623020172119
    3. ' ''.' → logprob: -8.701662063598633
    4. '''.' → logprob: -8.951662063598633
    5. '   ' → logprob: -9.326662063598633
    6. '           ' → logprob: -9.451662063598633
    7. '    ' → logprob: -9.826662063598633
    8. ' self' → logprob: -10.201662063598633
    9. 'self' → logprob: -10.451662063598633
    10. ' ' → logprob: -10.701662063598633

Token 112: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -4.5252596464706585e-05
    2. 'k' → logprob: -10.625044822692871
    3. '[' → logprob: -11.500044822692871
    4. '   ' → logprob: -12.875044822692871
    5. '.startswith' → logprob: -13.625044822692871
    6. '           ' → logprob: -13.875044822692871
    7. ' [' → logprob: -14.375044822692871
    8. '       ' → logprob: -14.500044822692871
    9. '.substr' → logprob: -14.500044822692871
    10. '+k' → logprob: -14.750044822692871

Token 113: ':k' (ID: 69335)
  Prédit: ':k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':k' → logprob: -0.0010008938843384385
    2. ':' → logprob: -7.126000881195068
    3. 'k' → logprob: -9.251001358032227
    4. ' :' → logprob: -9.501001358032227
    5. '+k' → logprob: -11.376001358032227
    6. ':].' → logprob: -11.751001358032227
    7. ' ' → logprob: -13.251001358032227
    8. '	k' → logprob: -13.501001358032227
    9. ' k' → logprob: -14.376001358032227
    10. '   ' → logprob: -14.751001358032227

Token 114: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00035369666875340044
    2. ' +' → logprob: -8.750353813171387
    3. '3' → logprob: -9.250353813171387
    4. '+k' → logprob: -9.250353813171387
    5. 'k' → logprob: -13.375353813171387
    6. ']+' → logprob: -14.000353813171387
    7. ']' → logprob: -15.625353813171387
    8. '   ' → logprob: -15.625353813171387
    9. ' ' → logprob: -16.37535285949707
    10. ' k' → logprob: -17.12535285949707

Token 115: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.750004768371582
    3. 'len' → logprob: -13.625004768371582
    4. '   ' → logprob: -15.250004768371582
    5. 'abc' → logprob: -16.3750057220459
    6. '  ' → logprob: -17.1250057220459
    7. '           ' → logprob: -17.2500057220459
    8. 'length' → logprob: -17.4375057220459
    9. 'k' → logprob: -17.5000057220459
    10. 's' → logprob: -17.5000057220459

Token 116: ']==' (ID: 34128)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06318655610084534
    2. ']==' → logprob: -2.8131866455078125
    3. ' ]' → logprob: -7.3131866455078125
    4. ']=='' → logprob: -7.9381866455078125
    5. '==' → logprob: -8.938186645507812
    6. ' ==' → logprob: -10.188186645507812
    7. ']=="' → logprob: -11.938186645507812
    8. ')' → logprob: -12.188186645507812
    9. ')==' → logprob: -13.188186645507812
    10. ':]' → logprob: -13.438186645507812

Token 117: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.020773928612470627
    2. ' self' → logprob: -4.270773887634277
    3. ''' → logprob: -5.145773887634277
    4. ''s' → logprob: -7.645773887634277
    5. ' '' → logprob: -8.645773887634277
    6. '"' → logprob: -10.145773887634277
    7. 'ABC' → logprob: -10.770773887634277
    8. 'abc' → logprob: -11.270773887634277
    9. '  ' → logprob: -11.520773887634277
    10. '   ' → logprob: -12.395773887634277

Token 118: '.substr' (ID: 40709)
  Prédit: '.substr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.substr' → logprob: -0.00023238400171976537
    2. 'substr' → logprob: -8.375232696533203
    3. '.substring' → logprob: -14.125232696533203
    4. ' substr' → logprob: -14.625232696533203
    5. '.' → logprob: -15.375232696533203
    6. '.s' → logprob: -16.250232696533203
    7. ').' → logprob: -16.625232696533203
    8. '".' → logprob: -16.625232696533203
    9. '(substr' → logprob: -17.125232696533203
    10. 's' → logprob: -17.500232696533203

Token 119: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4259644558478612e-05
    2. '))' → logprob: -12.250014305114746
    3. ' )' → logprob: -12.250014305114746
    4. ')
' → logprob: -14.000014305114746
    5. '`)' → logprob: -14.500014305114746
    6. '')' → logprob: -14.500014305114746
    7. '   ' → logprob: -14.750014305114746
    8. '])' → logprob: -14.875014305114746
    9. ')))' → logprob: -15.250014305114746
    10. '       ' → logprob: -15.375014305114746

Token 120: 'if' (ID: 366)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24453802406787872
    2. 'n' → logprob: -3.2445380687713623
    3. ')' → logprob: -3.3695380687713623
    4. '<|end|>' → logprob: -3.4945380687713623
    5. '[' → logprob: -3.6195380687713623
    6. ' 
' → logprob: -4.244537830352783
    7. '   ' → logprob: -4.994537830352783
    8. '  
' → logprob: -4.994537830352783
    9. '.' → logprob: -5.119537830352783
    10. '#' → logprob: -5.244537830352783

Token 121: ' False' (ID: 7983)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.019899241626262665
    2. ' n' → logprob: -4.519899368286133
    3. '__' → logprob: -5.144899368286133
    4. ' z' → logprob: -6.519899368286133
    5. ' ' → logprob: -7.519899368286133
    6. ' len' → logprob: -8.269899368286133
    7. 'z' → logprob: -8.644899368286133
    8. ' ' → logprob: -8.769899368286133
    9. 'n' → logprob: -8.894899368286133
    10. ' name' → logprob: -9.019899368286133

Token 122: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011066683568060398
    2. ' :' → logprob: -4.511066913604736
    3. ':
' → logprob: -11.136066436767578
    4. ' :
' → logprob: -13.261066436767578
    5. ':def' → logprob: -14.386066436767578
    6. '   ' → logprob: -15.511066436767578
    7. ',' → logprob: -15.511066436767578
    8. ':n' → logprob: -15.636066436767578
    9. ':return' → logprob: -15.636066436767578
    10. ':

' → logprob: -15.761066436767578

Token 123: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2790553867816925
    2. ' :' → logprob: -1.7790553569793701
    3. '   ' → logprob: -2.90405535697937
    4. '    ' → logprob: -5.529055595397949
    5. ' :
' → logprob: -5.779055595397949
    6. ' ' → logprob: -5.904055595397949
    7. ':
' → logprob: -6.154055595397949
    8. ' n' → logprob: -6.404055595397949
    9. '<|end|>' → logprob: -6.404055595397949
    10. 'n' → logprob: -7.654055595397949

Token 124: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -1.5792404413223267
    2. ' for' → logprob: -1.8292404413223267
    3. ' counter' → logprob: -1.8292404413223267
    4. ' n' → logprob: -2.454240322113037
    5. ' abc' → logprob: -2.954240322113037
    6. ' pass' → logprob: -3.329240322113037
    7. 'abc' → logprob: -3.329240322113037
    8. 'print' (adapté à ' print') → logprob: -3.454240322113037
    9. ' find' → logprob: -3.579240322113037
    10. ' Counter' → logprob: -3.704240322113037

Token 125: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14318116009235382
    2. '(find' → logprob: -2.893181085586548
    3. '(n' → logprob: -3.143181085586548
    4. '('' → logprob: -4.018181324005127
    5. '("' → logprob: -5.143181324005127
    6. '()' → logprob: -5.268181324005127
    7. '(
' → logprob: -6.018181324005127
    8. 'find' → logprob: -7.268181324005127
    9. '(len' → logprob: -7.393181324005127
    10. '(f' → logprob: -8.018180847167969

Token 126: 'never' (ID: 74257)
  Prédit: 'ABC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.6618056297302246
    2. 'n' → logprob: -1.2868056297302246
    3. ''' → logprob: -3.4118056297302246
    4. '')' → logprob: -3.5368056297302246
    5. 'Code' → logprob: -3.9118056297302246
    6. ' n' → logprob: -3.9118056297302246
    7. 'A' → logprob: -4.286805629730225
    8. 'B' → logprob: -4.411805629730225
    9. '''' → logprob: -5.036805629730225
    10. ' '' → logprob: -5.161805629730225

Token 127: ' runs' (ID: 13719)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.1654445081949234
    2. ')' → logprob: -2.1654446125030518
    3. ' reached' → logprob: -3.5404446125030518
    4. ' executed' → logprob: -6.165444374084473
    5. ''' → logprob: -7.040444374084473
    6. ' called' → logprob: -7.415444374084473
    7. ' happens' → logprob: -7.540444374084473
    8. ' printed' → logprob: -7.540444374084473
    9. 'print' → logprob: -7.665444374084473
    10. ' occurs' → logprob: -7.915444374084473

Token 128: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.00644179992377758
    2. ')' → logprob: -5.131441593170166
    3. '')
' → logprob: -8.006442070007324
    4. ''' → logprob: -9.006442070007324
    5. '")' → logprob: -10.631442070007324
    6. '!' → logprob: -11.631442070007324
    7. '')

' → logprob: -11.756442070007324
    8. '\n' → logprob: -12.631442070007324
    9. ' ')' → logprob: -13.256442070007324
    10. ')
' → logprob: -13.506442070007324

Token 129: 'elif' (ID: 29767)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3300877809524536
    2. '<|end|>' → logprob: -1.3300877809524536
    3. ' ' → logprob: -2.330087661743164
    4. 'n' → logprob: -2.580087661743164
    5. '#' → logprob: -2.580087661743164
    6. 'if' → logprob: -3.330087661743164
    7. 'print' → logprob: -3.330087661743164
    8. 'for' → logprob: -3.580087661743164
    9. '[' → logprob: -3.705087661743164
    10. 'A' → logprob: -4.205087661743164

Token 130: ' True' (ID: 6432)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.34251368045806885
    2. ' z' → logprob: -1.9675136804580688
    3. ' True' → logprob: -3.2175135612487793
    4. 'n' → logprob: -3.3425135612487793
    5. 'z' → logprob: -3.7175135612487793
    6. ' len' → logprob: -3.9675135612487793
    7. 'True' → logprob: -5.217513561248779
    8. ' '' → logprob: -5.217513561248779
    9. ' find' → logprob: -5.467513561248779
    10. 'len' → logprob: -5.717513561248779

Token 131: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00014168102643452585
    2. ':
' → logprob: -9.000142097473145
    3. ' :' → logprob: -11.000142097473145
    4. '):' → logprob: -14.375142097473145
    5. ':

' → logprob: -15.000142097473145
    6. '   ' → logprob: -15.375142097473145
    7. ' and' → logprob: -15.750142097473145
    8. ':def' → logprob: -16.375141143798828
    9. ':**' → logprob: -16.625141143798828
    10. '():' → logprob: -17.250141143798828

Token 132: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018446773290634155
    2. '   ' → logprob: -4.643446922302246
    3. ':
' → logprob: -4.893446922302246
    4. ' :' → logprob: -8.143446922302246
    5. ' Counter' → logprob: -8.518446922302246
    6. '[' → logprob: -8.893446922302246
    7. '():' → logprob: -9.393446922302246
    8. '):' → logprob: -9.518446922302246
    9. 'Counter' → logprob: -9.643446922302246
    10. '<|end|>' → logprob: -10.018446922302246

Token 133: ' import' (ID: 1588)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.060177989304065704
    2. 'counter' → logprob: -3.31017804145813
    3. 'c' → logprob: -4.060177803039551
    4. 'abc' → logprob: -6.685177803039551
    5. 'Counter' → logprob: -7.310177803039551
    6. 'a' → logprob: -7.685177803039551
    7. 'count' → logprob: -7.685177803039551
    8. 'cnt' → logprob: -7.810177803039551
    9. ' print' → logprob: -8.18517780303955
    10. 'result' → logprob: -8.18517780303955

Token 134: ' functools' (ID: 142636)
  Prédit: ' re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' re' → logprob: -0.5974531769752502
    2. ' sys' → logprob: -0.8474531769752502
    3. ' itertools' → logprob: -4.8474531173706055
    4. 're' → logprob: -5.2224531173706055
    5. ' collections' → logprob: -5.4724531173706055
    6. ' ' → logprob: -6.7224531173706055
    7. ' math' → logprob: -7.3474531173706055
    8. ' string' → logprob: -7.4724531173706055
    9. 'sys' → logprob: -7.4724531173706055
    10. ' os' → logprob: -8.347453117370605

Token 135: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6321396231651306
    2. '
' → logprob: -0.8821396231651306
    3. 'import' → logprob: -4.882139682769775
    4. '<|end|>' → logprob: -4.882139682769775
    5. ' 
' → logprob: -5.007139682769775
    6. ' functools' → logprob: -5.007139682769775
    7. 'fun' → logprob: -5.507139682769775
    8. ' ,' → logprob: -5.882139682769775
    9. ',
' → logprob: -6.007139682769775
    10. ' ' → logprob: -6.257139682769775

Token 136: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6173132658004761
    2. '
' → logprob: -1.242313265800476
    3. '   ' → logprob: -3.2423133850097656
    4. '    
' → logprob: -4.242313385009766
    5. 'def' → logprob: -4.367313385009766
    6. ' functools' → logprob: -4.367313385009766
    7. ' ' → logprob: -4.492313385009766
    8. 'fun' → logprob: -4.492313385009766
    9. ' 
' → logprob: -4.617313385009766
    10. ',
' → logprob: -4.742313385009766

Token 137: ' result' (ID: 1534)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counter' → logprob: -1.0781244039535522
    2. 'c' → logprob: -1.8281244039535522
    3. 'abc' → logprob: -2.078124523162842
    4. ' counter' → logprob: -2.328124523162842
    5. 'print' → logprob: -2.453124523162842
    6. 'def' → logprob: -3.203124523162842
    7. 'count' → logprob: -3.453124523162842
    8. ' def' → logprob: -4.453124523162842
    9. ' print' → logprob: -4.578124523162842
    10. ' abc' → logprob: -4.703124523162842

Token 138: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03810666874051094
    2. '=' → logprob: -3.288106679916382
    3. ' ' → logprob: -10.288106918334961
    4. ',' → logprob: -10.913106918334961
    5. '.' → logprob: -12.538106918334961
    6. ')' → logprob: -13.163106918334961
    7. ' =
' → logprob: -13.663106918334961
    8. 's' → logprob: -14.538106918334961
    9. '<|end|>' → logprob: -14.538106918334961
    10. '=f' → logprob: -14.788106918334961

Token 139: ' functools' (ID: 142636)
  Prédit: 'fun'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fun' → logprob: -0.5588459968566895
    2. ' functools' → logprob: -0.9338459968566895
    3. 'Counter' → logprob: -4.4338459968566895
    4. ' Counter' → logprob: -4.5588459968566895
    5. 'find' → logprob: -5.1838459968566895
    6. ' fun' → logprob: -5.9338459968566895
    7. ' find' → logprob: -6.3088459968566895
    8. ' sum' → logprob: -6.9338459968566895
    9. 'sum' → logprob: -7.1838459968566895
    10. '[' → logprob: -8.433845520019531

Token 140: '.reduce' (ID: 49441)
  Prédit: '.reduce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.reduce' → logprob: -0.10049272328615189
    2. '.partial' → logprob: -2.3504927158355713
    3. '.' → logprob: -8.975492477416992
    4. '.wrap' → logprob: -9.850492477416992
    5. '.cache' → logprob: -10.475492477416992
    6. '.l' → logprob: -10.725492477416992
    7. '.sum' → logprob: -11.475492477416992
    8. ' .' → logprob: -11.725492477416992
    9. '.counter' → logprob: -11.725492477416992
    10. '.acc' → logprob: -11.850492477416992

Token 141: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.04138173535466194
    2. '(' → logprob: -3.6663818359375
    3. '('' → logprob: -4.4163818359375
    4. '(
' → logprob: -6.7913818359375
    5. '<|end|>' → logprob: -7.0413818359375
    6. '((' → logprob: -9.1663818359375
    7. '(len' → logprob: -9.2913818359375
    8. '(None' → logprob: -9.6663818359375
    9. '(counter' → logprob: -9.7913818359375
    10. '('.',' → logprob: -9.9163818359375

Token 142: ' acc' (ID: 1259)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.25123563408851624
    2. ' a' → logprob: -2.0012357234954834
    3. ' x' → logprob: -3.0012357234954834
    4. 'lambda' → logprob: -3.7512357234954834
    5. 'a' → logprob: -5.501235485076904
    6. ' acc' → logprob: -5.876235485076904
    7. '(lambda' → logprob: -6.001235485076904
    8. ' counter' → logprob: -6.376235485076904
    9. ' (' → logprob: -7.876235485076904
    10. 'x' → logprob: -8.126235961914062

Token 143: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019865304057020694
    2. ' ,' → logprob: -9.125198364257812
    3. 'lambda' → logprob: -10.125198364257812
    4. ',x' → logprob: -11.500198364257812
    5. 'a' → logprob: -11.625198364257812
    6. ' lambda' → logprob: -12.125198364257812
    7. '+' → logprob: -12.625198364257812
    8. ' x' → logprob: -12.625198364257812
    9. '   ' → logprob: -12.750198364257812
    10. '+,' → logprob: -12.875198364257812

Token 144: ' _:' (ID: 133568)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.7979024052619934
    2. ' x' → logprob: -1.6729023456573486
    3. ' lambda' → logprob: -1.7979023456573486
    4. ' z' → logprob: -2.5479023456573486
    5. 's' → logprob: -3.7979023456573486
    6. ' c' → logprob: -4.172902584075928
    7. ' n' → logprob: -4.297902584075928
    8. ' ' → logprob: -4.422902584075928
    9. ' y' → logprob: -4.797902584075928
    10. 'x' → logprob: -4.797902584075928

Token 145: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.5568590760231018
    2. ' acc' → logprob: -1.306859016418457
    3. 'Counter' → logprob: -2.306859016418457
    4. ' Counter' → logprob: -3.181859016418457
    5. ' counter' → logprob: -5.556859016418457
    6. '   ' → logprob: -6.306859016418457
    7. 'counter' → logprob: -6.306859016418457
    8. '(acc' → logprob: -6.556859016418457
    9. ' (' → logprob: -6.681859016418457
    10. ''acc' → logprob: -7.056859016418457

Token 146: ',' (ID: 11)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.14283782243728638
    2. '+' → logprob: -2.0178377628326416
    3. ' *' → logprob: -10.392837524414062
    4. '*' → logprob: -10.642837524414062
    5. ' if' → logprob: -11.392837524414062
    6. '+[' → logprob: -11.642837524414062
    7. '+C' → logprob: -11.642837524414062
    8. '.count' → logprob: -12.017837524414062
    9. '.find' → logprob: -12.142837524414062
    10. ' ' → logprob: -12.267837524414062

Token 147: ' [' (ID: 723)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.8277074694633484
    2. ' [' → logprob: -1.8277075290679932
    3. 'range' → logprob: -2.077707529067993
    4. '[' → logprob: -2.827707529067993
    5. ' z' → logprob: -3.077707529067993
    6. '[n' → logprob: -3.077707529067993
    7. '[z' → logprob: -3.077707529067993
    8. 'z' → logprob: -3.702707529067993
    9. ' n' → logprob: -3.952707529067993
    10. ' map' → logprob: -4.077707290649414

Token 148: '0' (ID: 15)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.5118148922920227
    2. 'n' → logprob: -2.011814832687378
    3. 'range' → logprob: -2.261814832687378
    4. '0' → logprob: -2.636814832687378
    5. '1' → logprob: -3.386814832687378
    6. 'None' → logprob: -4.386815071105957
    7. ''z' → logprob: -4.386815071105957
    8. 'find' → logprob: -5.011815071105957
    9. ''' → logprob: -5.761815071105957
    10. ' n' → logprob: -6.386815071105957

Token 149: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08490124344825745
    2. ']' → logprob: -2.8349013328552246
    3. ']*' → logprob: -4.084901332855225
    4. ',n' → logprob: -6.459901332855225
    5. ' ,' → logprob: -6.584901332855225
    6. ' for' → logprob: -7.334901332855225
    7. ']+' → logprob: -7.584901332855225
    8. ' ]' → logprob: -7.959901332855225
    9. ']*(' → logprob: -7.959901332855225
    10. '   ' → logprob: -8.209900856018066

Token 150: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.49634215235710144
    2. ')' → logprob: -2.496342182159424
    3. ' ' → logprob: -2.621342182159424
    4. 'find' → logprob: -2.996342182159424
    5. 'lambda' → logprob: -3.496342182159424
    6. ' find' → logprob: -3.621342182159424
    7. ' lambda' → logprob: -3.871342182159424
    8. ' n' → logprob: -4.121342182159424
    9. 'n' → logprob: -4.621342182159424
    10. 'range' → logprob: -4.746342182159424

Token 151: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17845678329467773
    2. 'n' → logprob: -3.5534567832946777
    3. 'z' → logprob: -3.6784567832946777
    4. '1' → logprob: -4.053456783294678
    5. 'int' → logprob: -4.303456783294678
    6. ')' → logprob: -4.428456783294678
    7. '10' → logprob: -4.428456783294678
    8. ' ' → logprob: -4.803456783294678
    9. 'range' → logprob: -4.803456783294678
    10. 'lambda' → logprob: -5.178456783294678

Token 152: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016012678388506174
    2. ' )' → logprob: -6.626601219177246
    3. ')
' → logprob: -9.001601219177246
    4. '+' → logprob: -9.876601219177246
    5. '0' → logprob: -10.751601219177246
    6. ',' → logprob: -11.251601219177246
    7. '   ' → logprob: -11.501601219177246
    8. '))' → logprob: -11.876601219177246
    9. '1' → logprob: -12.001601219177246
    10. ')))' → logprob: -12.251601219177246

Token 153: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.042628806084394455
    2. ' ' → logprob: -3.667628765106201
    3. ' )' → logprob: -5.667628765106201
    4. '
' → logprob: -6.042628765106201
    5. '<|end|>' → logprob: -6.167628765106201
    6. '(' → logprob: -6.292628765106201
    7. '+' → logprob: -6.542628765106201
    8. '[' → logprob: -6.542628765106201
    9. '#' → logprob: -7.292628765106201
    10. ',' → logprob: -7.542628765106201

Token 154: ' print' (ID: 2123)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8898288011550903
    2. ' ' → logprob: -1.3898288011550903
    3. '<|end|>' → logprob: -2.389828681945801
    4. 'result' → logprob: -2.514828681945801
    5. '+' → logprob: -2.889828681945801
    6. '
' → logprob: -3.014828681945801
    7. 'print' (adapté à ' print') → logprob: -4.514828681945801
    8. ' )' → logprob: -4.639828681945801
    9. '0' → logprob: -4.764828681945801
    10. ' 
' → logprob: -5.014828681945801

Token 155: '(C' (ID: 5559)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.5270795226097107
    2. '(' → logprob: -0.9020795226097107
    3. 'result' → logprob: -6.9020795822143555
    4. '('' → logprob: -7.0270795822143555
    5. ' (' → logprob: -7.1520795822143555
    6. '()' → logprob: -7.1520795822143555
    7. '(
' → logprob: -8.527079582214355
    8. '0' → logprob: -9.652079582214355
    9. '(None' → logprob: -10.027079582214355
    10. '(False' → logprob: -10.277079582214355

Token 156: 'ounter' (ID: 6265)
  Prédit: 'ounter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ounter' → logprob: -0.0008752549765631557
    2. 'ount' → logprob: -7.125875473022461
    3. 'o' → logprob: -10.250875473022461
    4. 'oun' → logprob: -11.125875473022461
    5. 'onter' → logprob: -12.250875473022461
    6. 'unter' → logprob: -12.375875473022461
    7. 'Counter' → logprob: -13.000875473022461
    8. 'ou' → logprob: -13.000875473022461
    9. 'outer' → logprob: -13.000875473022461
    10. 'counter' → logprob: -13.875875473022461

Token 157: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.03875768557190895
    2. '(' → logprob: -3.913757801055908
    3. '(n' → logprob: -4.413757801055908
    4. '(z' → logprob: -5.538757801055908
    5. '("' → logprob: -6.788757801055908
    6. ' ('' → logprob: -8.16375732421875
    7. ' (' → logprob: -8.41375732421875
    8. ')' → logprob: -8.78875732421875
    9. '(
' → logprob: -10.03875732421875
    10. '(s' → logprob: -10.41375732421875

Token 158: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.003275864291936159
    2. 'A' → logprob: -6.0032758712768555
    3. 'AB' → logprob: -7.7532758712768555
    4. 'B' → logprob: -9.378275871276855
    5. ' ABC' → logprob: -9.753275871276855
    6. 'abc' → logprob: -10.253275871276855
    7. 'ABA' → logprob: -10.628275871276855
    8. 'C' → logprob: -10.753275871276855
    9. ''' → logprob: -10.940775871276855
    10. 'BC' → logprob: -10.940775871276855

Token 159: '').' (ID: 3426)
  Prédit: '').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '').' → logprob: -0.07151294499635696
    2. ').' → logprob: -2.6965129375457764
    3. ''' → logprob: -8.071513175964355
    4. '").' → logprob: -8.071513175964355
    5. ')' → logprob: -8.321513175964355
    6. '')' → logprob: -8.321513175964355
    7. ' ').' → logprob: -9.071513175964355
    8. '('' → logprob: -9.946513175964355
    9. ')').' → logprob: -10.196513175964355
    10. ''))' → logprob: -10.446513175964355

Token 160: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -6.027225754223764e-05
    2. ' count' → logprob: -10.500060081481934
    3. 'c' → logprob: -11.000060081481934
    4. 'cou' → logprob: -12.250060081481934
    5. 'co' → logprob: -12.500060081481934
    6. 'counter' → logprob: -13.250060081481934
    7. '```' → logprob: -13.875060081481934
    8. 'counts' → logprob: -13.875060081481934
    9. 'cout' → logprob: -14.000060081481934
    10. ')' → logprob: -14.250060081481934

Token 161: '(z' (ID: 27674)
  Prédit: '(z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.1296871155500412
    2. '(n' → logprob: -2.1296870708465576
    3. '(' → logprob: -6.629687309265137
    4. '('' → logprob: -6.629687309265137
    5. ' (' → logprob: -9.879687309265137
    6. '("' → logprob: -10.879687309265137
    7. ')' → logprob: -11.504687309265137
    8. '(s' → logprob: -11.504687309265137
    9. '(x' → logprob: -12.129687309265137
    10. '((' → logprob: -12.629687309265137

Token 162: ')' (ID: 8)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.005951552651822567
    2. ')' → logprob: -5.130951404571533
    3. ')))' → logprob: -10.880951881408691
    4. ')+' → logprob: -14.005951881408691
    5. '))
' → logprob: -14.130951881408691
    6. '),' → logprob: -14.380951881408691
    7. ' ))' → logprob: -14.380951881408691
    8. ''))' → logprob: -14.880951881408691
    9. '()))' → logprob: -15.130951881408691
    10. ')
' → logprob: -16.005950927734375

Token 163: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002922022540587932
    2. '))' → logprob: -8.25029182434082
    3. ' )' → logprob: -10.62529182434082
    4. ')))' → logprob: -12.75029182434082
    5. ')`' → logprob: -14.37529182434082
    6. '`)' → logprob: -14.62529182434082
    7. '')' → logprob: -14.75029182434082
    8. '+' → logprob: -14.87529182434082
    9. ')
' → logprob: -15.00029182434082
    10. ')}' → logprob: -15.62529182434082

Token 164: ' ' (ID: 220)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' find' → logprob: -1.1494556665420532
    2. 'Counter' → logprob: -1.3994556665420532
    3. ' Counter' → logprob: -1.5244556665420532
    4. 'find' → logprob: -1.6494556665420532
    5. ' result' → logprob: -5.274455547332764
    6. '1' → logprob: -5.274455547332764
    7. ' len' → logprob: -5.524455547332764
    8. 'result' → logprob: -5.899455547332764
    9. 'len' → logprob: -6.399455547332764
    10. 'int' → logprob: -6.524455547332764

Token 165: '0' (ID: 15)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.2997499406337738
    2. ' find' → logprob: -2.0497498512268066
    3. 'Counter' → logprob: -2.2997498512268066
    4. 'result' → logprob: -4.924749851226807
    5. ' Counter' → logprob: -4.924749851226807
    6. '1' → logprob: -5.049749851226807
    7. 'len' → logprob: -6.174749851226807
    8. 'int' → logprob: -6.174749851226807
    9. ' result' → logprob: -7.049749851226807
    10. '(find' → logprob: -7.299749851226807

Token 166: '*' (ID: 9)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004234051739331335
    2. ' )' → logprob: -8.000423431396484
    3. '))' → logprob: -10.000423431396484
    4. '+' → logprob: -10.625423431396484
    5. ')
' → logprob: -12.250423431396484
    6. ' +' → logprob: -13.250423431396484
    7. ')`' → logprob: -13.500423431396484
    8. ')))' → logprob: -13.625423431396484
    9. ')#' → logprob: -14.000423431396484
    10. '*' → logprob: -14.125423431396484

Token 167: 'find' (ID: 6555)
  Prédit: 'find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.7915191054344177
    2. 'result' → logprob: -2.0415191650390625
    3. '1' → logprob: -2.7915191650390625
    4. 'n' → logprob: -2.9165191650390625
    5. '0' → logprob: -3.0415191650390625
    6. ' find' → logprob: -3.0415191650390625
    7. 'len' → logprob: -3.0415191650390625
    8. ')' → logprob: -3.2915191650390625
    9. 'Counter' → logprob: -3.7915191650390625
    10. 'int' → logprob: -3.9165191650390625

Token 168: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -2.339278580620885e-06
    2. 'abc' → logprob: -14.750001907348633
    3. '_xyz' → logprob: -14.875001907348633
    4. '_ab' → logprob: -15.250001907348633
    5. ''_' → logprob: -15.250001907348633
    6. '```' → logprob: -15.625001907348633
    7. '_n' → logprob: -15.875001907348633
    8. '_a' → logprob: -15.875001907348633
    9. ')_' → logprob: -15.875001907348633
    10. '('_' → logprob: -16.000001907348633

Token 169: 'abc' (ID: 26682)
  Prédit: 'abc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -3.333223139634356e-05
    2. 'z' → logprob: -10.875033378601074
    3. 'ab' → logprob: -11.750033378601074
    4. 'bc' → logprob: -13.375033378601074
    5. 'xyz' → logprob: -13.500033378601074
    6. 'a' → logprob: -14.000033378601074
    7. 'c' → logprob: -14.000033378601074
    8. '```' → logprob: -15.250033378601074
    9. ' ' → logprob: -15.500033378601074
    10. 'ABC' → logprob: -15.500033378601074

Token 170: '(z' (ID: 27674)
  Prédit: '(z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.14684168994426727
    2. '(n' → logprob: -2.0218417644500732
    3. '(' → logprob: -5.896841526031494
    4. '(x' → logprob: -7.021841526031494
    5. ' (' → logprob: -8.146842002868652
    6. '('' → logprob: -8.896842002868652
    7. ')' → logprob: -10.646842002868652
    8. '(s' → logprob: -10.646842002868652
    9. '((' → logprob: -11.396842002868652
    10. ')(' → logprob: -11.896842002868652

Token 171: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31339120864868164
    2. '))' → logprob: -1.3133912086486816
    3. ')))' → logprob: -9.438390731811523
    4. ' )' → logprob: -10.688390731811523
    5. '())' → logprob: -11.438390731811523
    6. ')
' → logprob: -12.438390731811523
    7. ' ))' → logprob: -12.563390731811523
    8. '))
' → logprob: -13.313390731811523
    9. '()' → logprob: -14.313390731811523
    10. '+' → logprob: -14.313390731811523

Token 172: 'else' (ID: 2807)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1237268447875977
    2. ' ' → logprob: -1.1237268447875977
    3. '<|end|>' → logprob: -1.1237268447875977
    4. '[' → logprob: -4.248726844787598
    5. '=' → logprob: -5.873726844787598
    6. '
' → logprob: -5.998726844787598
    7. '#' → logprob: -7.123726844787598
    8. '(' → logprob: -7.623726844787598
    9. ' )' → logprob: -7.748726844787598
    10. '+' → logprob: -7.998726844787598

Token 173: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2858145236968994
    2. '   ' → logprob: -1.5358145236968994
    3. ':
' → logprob: -3.4108145236968994
    4. ' :' → logprob: -9.53581428527832
    5. '    ' → logprob: -9.66081428527832
    6. '{' → logprob: -10.41081428527832
    7. 'print' → logprob: -10.66081428527832
    8. ' :
' → logprob: -10.66081428527832
    9. '(' → logprob: -11.03581428527832
    10. '[' → logprob: -11.28581428527832

Token 174: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000891332805622369
    2. 'print' → logprob: -7.375891208648682
    3. 'pass' → logprob: -9.87589168548584
    4. ' print' → logprob: -9.87589168548584
    5. '    
' → logprob: -10.12589168548584
    6. ' pass' → logprob: -10.62589168548584
    7. ' None' → logprob: -10.62589168548584
    8. '    ' → logprob: -10.75089168548584
    9. '0' → logprob: -10.87589168548584
    10. 'None' → logprob: -11.50089168548584

Token 175: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.4850744903087616
    2. 'pass' → logprob: -1.235074520111084
    3. ' pass' → logprob: -2.485074520111084
    4. ' print' → logprob: -5.110074520111084
    5. '   ' → logprob: -6.360074520111084
    6. '...' → logprob: -6.985074520111084
    7. 'None' → logprob: -7.360074520111084
    8. ' None' → logprob: -7.735074520111084
    9. '    ' → logprob: -8.860074043273926
    10. '0' → logprob: -9.110074043273926

Token 176: '(find' (ID: 60187)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8568488359451294
    2. '()' → logprob: -1.1068488359451294
    3. '('' → logprob: -1.6068488359451294
    4. '(C' → logprob: -4.10684871673584
    5. '(z' → logprob: -4.35684871673584
    6. '(n' → logprob: -4.98184871673584
    7. '("' → logprob: -5.85684871673584
    8. '(len' → logprob: -6.60684871673584
    9. '(None' → logprob: -6.60684871673584
    10. '("")' → logprob: -6.98184871673584

Token 177: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0280383548888494e-06
    2. 'abc' → logprob: -14.625000953674316
    3. '_ab' → logprob: -15.125000953674316
    4. '_xyz' → logprob: -16.375001907348633
    5. '_a' → logprob: -16.875001907348633
    6. '```' → logprob: -18.625001907348633
    7. '_n' → logprob: -18.750001907348633
    8. ' _' → logprob: -19.125001907348633
    9. 'ABC' → logprob: -19.375001907348633
    10. ')' → logprob: -19.625001907348633

Token 178: 'abc' (ID: 26682)
  Prédit: 'abc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.0007732972735539079
    2. 'z' → logprob: -7.2507734298706055
    3. 'ab' → logprob: -11.000773429870605
    4. 'a' → logprob: -11.125773429870605
    5. '_' → logprob: -11.625773429870605
    6. 'ABC' → logprob: -11.875773429870605
    7. 'xyz' → logprob: -12.250773429870605
    8. 'abcdef' → logprob: -13.250773429870605
    9. ' abc' → logprob: -13.625773429870605
    10. 'x' → logprob: -13.625773429870605

Token 179: '(z' (ID: 27674)
  Prédit: '(z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.011493386700749397
    2. '(' → logprob: -4.76149320602417
    3. '(n' → logprob: -6.01149320602417
    4. '(x' → logprob: -8.386493682861328
    5. '('' → logprob: -8.886493682861328
    6. ')' → logprob: -10.511493682861328
    7. '(s' → logprob: -12.011493682861328
    8. '((' → logprob: -12.011493682861328
    9. '(y' → logprob: -12.136493682861328
    10. ')(' → logprob: -13.136493682861328

Token 180: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.005238736979663372
    2. ')' → logprob: -5.2552385330200195
    3. ')))' → logprob: -13.00523853302002
    4. ''))' → logprob: -13.75523853302002
    5. '))
' → logprob: -14.25523853302002
    6. '),' → logprob: -15.13023853302002
    7. '])' → logprob: -15.25523853302002
    8. '()))' → logprob: -16.130239486694336
    9. '"))' → logprob: -16.755239486694336
    10. '));' → logprob: -16.880239486694336


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 178
Tokens correctement prédits (1ère position, stricte): 71
Tokens correctement prédits (1ère position, avec adaptation): 72
Tokens correctement prédits (top 10): 140
Précision stricte (1ère position): 39.89%
Précision adaptée (1ère position): 40.45%
Précision (top 10): 78.65%
================================================================================
