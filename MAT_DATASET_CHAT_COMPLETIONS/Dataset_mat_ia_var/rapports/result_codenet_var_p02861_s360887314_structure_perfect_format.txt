================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:38:40
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
xy = [list(map(int, input().split())) for _ in range(n)]
dist = 0
for i in range(n):
    for j in range(i+1, n):
        dist += ((xy[i][0] - xy[j][0]) ** 2 + (xy[i][1] - xy[j][1]) ** 2) ** 0.5
print(dist / ((n * (n - 1)) // 2) * (n - 1))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00038134094211272895
    2. '(n' → logprob: -9.000381469726562
    3. ''' → logprob: -9.500381469726562
    4. '('' → logprob: -10.125381469726562
    5. '```' → logprob: -10.125381469726562
    6. '`' → logprob: -10.750381469726562
    7. '("("' → logprob: -10.750381469726562
    8. '()' → logprob: -11.250381469726562
    9. 'n' → logprob: -11.625381469726562
    10. ')' → logprob: -12.000381469726562

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03871168941259384
    2. ')' → logprob: -3.5387117862701416
    3. '()' → logprob: -4.9137115478515625
    4. '())' → logprob: -7.1637115478515625
    5. '(
' → logprob: -8.663711547851562
    6. '```' → logprob: -9.163711547851562
    7. '(()' → logprob: -9.413711547851562
    8. '("("' → logprob: -9.663711547851562
    9. '('' → logprob: -9.913711547851562
    10. '`' → logprob: -10.163711547851562

Token 5: 'xy' (ID: 6077)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0521364212036133
    2. 'for' → logprob: -1.3021364212036133
    3. 'if' → logprob: -1.4271364212036133
    4. 's' → logprob: -3.1771364212036133
    5. 'f' → logprob: -4.177136421203613
    6. 'x' → logprob: -4.177136421203613
    7. 'a' → logprob: -4.552136421203613
    8. ')' → logprob: -4.677136421203613
    9. ' ' → logprob: -4.677136421203613
    10. '*' → logprob: -4.927136421203613

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07032541185617447
    2. '=' → logprob: -3.6953253746032715
    3. '[]' → logprob: -3.9453253746032715
    4. ' =' → logprob: -4.4453253746032715
    5. '_' → logprob: -5.4453253746032715
    6. '[i' → logprob: -5.8203253746032715
    7. '.' → logprob: -6.4453253746032715
    8. 's' → logprob: -6.4453253746032715
    9. ')' → logprob: -7.8203253746032715
    10. ' ' → logprob: -8.82032585144043

Token 7: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.05860276520252228
    2. '[input' → logprob: -3.808602809906006
    3. '[' → logprob: -3.933602809906006
    4. '[int' → logprob: -5.433602809906006
    5. 'list' → logprob: -5.558602809906006
    6. ' []' → logprob: -5.933602809906006
    7. '[n' → logprob: -6.558602809906006
    8. '[list' → logprob: -6.683602809906006
    9. '[x' → logprob: -7.058602809906006
    10. ' [' → logprob: -8.558602333068848

Token 8: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.25701290369033813
    2. 'tuple' → logprob: -1.5070128440856934
    3. ' list' → logprob: -6.257012844085693
    4. 'map' → logprob: -6.882012844085693
    5. ' tuple' → logprob: -7.007012844085693
    6. '[]' → logprob: -7.257012844085693
    7. ']' → logprob: -8.507013320922852
    8. '(tuple' → logprob: -9.257013320922852
    9. '[' → logprob: -9.632013320922852
    10. '(list' → logprob: -9.882013320922852

Token 9: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00040886594797484577
    2. '(' → logprob: -7.87540864944458
    3. '(input' → logprob: -10.750409126281738
    4. 'map' → logprob: -12.500409126281738
    5. '(int' → logprob: -13.125409126281738
    6. '(
' → logprob: -14.250409126281738
    7. '(range' → logprob: -15.375409126281738
    8. '()' → logprob: -15.500409126281738
    9. ' map' → logprob: -15.750409126281738
    10. '	map' → logprob: -16.500408172607422

Token 10: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0015202185604721308
    2. '(input' → logprob: -8.126520156860352
    3. 'int' → logprob: -8.251520156860352
    4. '<|end|>' → logprob: -8.251520156860352
    5. '(str' → logprob: -9.001520156860352
    6. '<int' → logprob: -9.126520156860352
    7. '(' → logprob: -9.376520156860352
    8. '(lambda' → logprob: -9.376520156860352
    9. '[int' → logprob: -9.626520156860352
    10. ']int' → logprob: -9.751520156860352

Token 11: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.007810797076672316
    2. ',input' → logprob: -5.132810592651367
    3. ',' → logprob: -7.007810592651367
    4. 'input' → logprob: -7.757810592651367
    5. '(' → logprob: -8.132810592651367
    6. ')' → logprob: -9.257810592651367
    7. ' input' → logprob: -9.632810592651367
    8. '=input' → logprob: -9.757810592651367
    9. '[input' → logprob: -11.757810592651367
    10. '```' → logprob: -12.007810592651367

Token 12: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0040823169983923435
    2. ' input' → logprob: -5.504082202911377
    3. '(input' → logprob: -12.629082679748535
    4. ')' → logprob: -15.504082679748535
    5. '=input' → logprob: -15.504082679748535
    6. ',input' → logprob: -15.629082679748535
    7. '<input' → logprob: -17.00408172607422
    8. '_input' → logprob: -17.37908172607422
    9. '[input' → logprob: -17.75408172607422
    10. '	input' → logprob: -18.12908172607422

Token 13: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00011367550177965313
    2. '()))' → logprob: -9.500113487243652
    3. '()' → logprob: -10.375113487243652
    4. '())' → logprob: -12.750113487243652
    5. '))' → logprob: -12.875113487243652
    6. '.split' → logprob: -14.250113487243652
    7. '(' → logprob: -15.000113487243652
    8. ' ().' → logprob: -15.000113487243652
    9. '()
' → logprob: -15.625113487243652
    10. ')' → logprob: -15.750113487243652

Token 14: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.4259644558478612e-05
    2. 'strip' → logprob: -11.750014305114746
    3. 'rstrip' → logprob: -12.250014305114746
    4. '(split' → logprob: -14.125014305114746
    5. ' split' → logprob: -14.375014305114746
    6. 'spl' → logprob: -15.375014305114746
    7. '.split' → logprob: -18.12501335144043
    8. 's' → logprob: -18.62501335144043
    9. ')' → logprob: -19.25001335144043
    10. 'sp' → logprob: -20.50001335144043

Token 15: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.02624468505382538
    2. '())' → logprob: -4.151244640350342
    3. '))' → logprob: -4.901244640350342
    4. '('' → logprob: -6.651244640350342
    5. '()' → logprob: -7.026244640350342
    6. '(' → logprob: -7.776244640350342
    7. ')' → logprob: -10.4012451171875
    8. '())))' → logprob: -10.6512451171875
    9. '()))
' → logprob: -10.7762451171875
    10. '("' → logprob: -11.1512451171875

Token 16: ' for' (ID: 395)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.5134631395339966
    2. '())' → logprob: -1.8884631395339966
    3. ')' → logprob: -2.013463020324707
    4. '()]' → logprob: -2.388463020324707
    5. ']' → logprob: -4.513463020324707
    6. '()' → logprob: -4.763463020324707
    7. '(' → logprob: -5.638463020324707
    8. '(n' → logprob: -7.013463020324707
    9. '])' → logprob: -8.513463020324707
    10. 'for' → logprob: -8.888463020324707

Token 17: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3996606171131134
    2. '_' → logprob: -1.274660587310791
    3. ' _' → logprob: -3.899660587310791
    4. '(' → logprob: -4.399660587310791
    5. ' in' → logprob: -5.274660587310791
    6. 'range' → logprob: -5.649660587310791
    7. '(range' → logprob: -5.649660587310791
    8. ' i' → logprob: -6.024660587310791
    9. '_range' → logprob: -6.774660587310791
    10. '()' → logprob: -7.274660587310791

Token 18: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005284515209496021
    2. 'in' → logprob: -5.755284309387207
    3. 'range' → logprob: -6.255284309387207
    4. ' range' → logprob: -9.005284309387207
    5. ' ' → logprob: -11.380284309387207
    6. 'n' → logprob: -11.630284309387207
    7. '<|end|>' → logprob: -11.630284309387207
    8. '_' → logprob: -12.255284309387207
    9. '(' → logprob: -12.380284309387207
    10. ')' → logprob: -13.255284309387207

Token 19: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001170225441455841
    2. ' range' → logprob: -6.7511701583862305
    3. '	range' → logprob: -17.376171112060547
    4. '(range' → logprob: -18.376171112060547
    5. '_range' → logprob: -18.626171112060547
    6. 'r' → logprob: -19.251171112060547
    7. '.range' → logprob: -19.376171112060547
    8. 'rang' → logprob: -19.376171112060547
    9. 'n' → logprob: -20.626171112060547
    10. ' ' → logprob: -21.001171112060547

Token 20: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0015031944494694471
    2. '(' → logprob: -6.501502990722656
    3. ' (' → logprob: -15.001502990722656
    4. 'n' → logprob: -15.876502990722656
    5. '(range' → logprob: -16.001502990722656
    6. '(len' → logprob: -16.126502990722656
    7. '(N' → logprob: -16.501502990722656
    8. '(
' → logprob: -17.126502990722656
    9. ')' → logprob: -18.376502990722656
    10. '(

' → logprob: -18.501502990722656

Token 21: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -7.159660890465602e-05
    2. ')' → logprob: -9.62507152557373
    3. ')])' → logprob: -13.25007152557373
    4. ']' → logprob: -13.50007152557373
    5. '))' → logprob: -14.37507152557373
    6. '])]' → logprob: -14.87507152557373
    7. ')]
' → logprob: -15.00007152557373
    8. '')]' → logprob: -15.12507152557373
    9. ' )' → logprob: -15.37507152557373
    10. ')].' → logprob: -16.375072479248047

Token 22: 'dist' (ID: 24126)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.4931966066360474
    2. 's' → logprob: -1.6181966066360474
    3. 'd' → logprob: -1.9931966066360474
    4. 'm' → logprob: -2.243196487426758
    5. 'dp' → logprob: -2.743196487426758
    6. '
' → logprob: -3.243196487426758
    7. 'c' → logprob: -3.368196487426758
    8. 'result' → logprob: -3.493196487426758
    9. 'max' → logprob: -3.868196487426758
    10. 'xy' → logprob: -3.993196487426758

Token 23: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07518833875656128
    2. '(' → logprob: -3.325188398361206
    3. '_' → logprob: -3.825188398361206
    4. 'ances' → logprob: -4.950188159942627
    5. 'ance' → logprob: -6.075188159942627
    6. '[' → logprob: -6.200188159942627
    7. ' =' → logprob: -6.575188159942627
    8. '=' → logprob: -7.450188159942627
    9. '_s' → logprob: -7.825188159942627
    10. '(s' → logprob: -8.200188636779785

Token 24: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6965053081512451
    2. '[]' → logprob: -0.8215053081512451
    3. '[max' → logprob: -3.446505308151245
    4. '[(' → logprob: -5.071505546569824
    5. ' []' → logprob: -5.196505546569824
    6. '[min' → logprob: -5.571505546569824
    7. '[int' → logprob: -5.821505546569824
    8. ' [' → logprob: -5.946505546569824
    9. '[[' → logprob: -6.196505546569824
    10. '[i' → logprob: -6.446505546569824

Token 25: '0' (ID: 15)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.3531534969806671
    2. '[' → logprob: -1.3531534671783447
    3. '[(' → logprob: -4.103153705596924
    4. '[max' → logprob: -4.228153705596924
    5. 'lambda' → logprob: -6.478153705596924
    6. '[min' → logprob: -6.478153705596924
    7. '[int' → logprob: -6.728153705596924
    8. '[x' → logprob: -7.103153705596924
    9. '[[' → logprob: -7.103153705596924
    10. 'max' → logprob: -7.853153705596924

Token 26: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0036911703646183014
    2. ' for' → logprob: -6.00369119644165
    3. '
' → logprob: -7.00369119644165
    4. ')' → logprob: -9.503690719604492
    5. '<|end|>' → logprob: -9.753690719604492
    6. '\n' → logprob: -10.003690719604492
    7. '.' → logprob: -10.503690719604492
    8. '```' → logprob: -10.753690719604492
    9. ',' → logprob: -11.253690719604492
    10. '' → logprob: -11.253690719604492

Token 27: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0012122603366151452
    2. ' for' → logprob: -7.126212120056152
    3. '
' → logprob: -7.876212120056152
    4. '\n' → logprob: -12.001212120056152
    5. '```' → logprob: -12.501212120056152
    6. ',' → logprob: -12.751212120056152
    7. ')' → logprob: -12.876212120056152
    8. '<|end|>' → logprob: -13.001212120056152
    9. '\' → logprob: -13.251212120056152
    10. 'import' → logprob: -13.251212120056152

Token 28: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5247982740402222
    2. ' i' → logprob: -0.8997982740402222
    3. '  ' → logprob: -7.274798393249512
    4. ' _' → logprob: -8.149798393249512
    5. 'i' → logprob: -8.274798393249512
    6. ' x' → logprob: -8.649798393249512
    7. '_' → logprob: -8.774798393249512
    8. ' j' → logprob: -11.024798393249512
    9. ' range' → logprob: -12.024798393249512
    10. ' xy' → logprob: -12.024798393249512

Token 29: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02502499707043171
    2. 'in' → logprob: -3.775024890899658
    3. ' ' → logprob: -6.650024890899658
    4. '+' → logprob: -7.775024890899658
    5. '  ' → logprob: -11.400025367736816
    6. '	in' → logprob: -11.525025367736816
    7. ',' → logprob: -11.775025367736816
    8. 'range' → logprob: -12.400025367736816
    9. 'n' → logprob: -12.525025367736816
    10. ')' → logprob: -12.650025367736816

Token 30: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.04300342872738838
    2. 'range' → logprob: -3.1680033206939697
    3. ' ' → logprob: -13.29300308227539
    4. ' xrange' → logprob: -13.66800308227539
    5. '	range' → logprob: -14.41800308227539
    6. '(range' → logprob: -15.04300308227539
    7. '  ' → logprob: -15.66800308227539
    8. ' ' → logprob: -16.16800308227539
    9. 'r' → logprob: -17.04300308227539
    10. 'rang' → logprob: -17.41800308227539

Token 31: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2015608847141266
    2. '(n' → logprob: -1.7015608549118042
    3. ' (' → logprob: -9.201560974121094
    4. ' ' → logprob: -11.076560974121094
    5. '(len' → logprob: -11.201560974121094
    6. ' n' → logprob: -11.201560974121094
    7. '(
' → logprob: -13.701560974121094
    8. '(range' → logprob: -14.076560974121094
    9. '(

' → logprob: -14.701560974121094
    10. 'n' → logprob: -15.076560974121094

Token 32: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08013258129358292
    2. ' -' → logprob: -2.580132484436035
    3. '):' → logprob: -7.580132484436035
    4. ')' → logprob: -7.705132484436035
    5. ' ' → logprob: -8.580132484436035
    6. '):
' → logprob: -9.830132484436035
    7. ' ):' → logprob: -11.330132484436035
    8. '1' → logprob: -11.455132484436035
    9. ' )' → logprob: -11.580132484436035
    10. '   ' → logprob: -13.205132484436035

Token 33: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4327832758426666
    2. '   ' → logprob: -1.0577832460403442
    3. ' ' → logprob: -6.307783126831055
    4. 'for' → logprob: -6.807783126831055
    5. '    ' → logprob: -7.557783126831055
    6. '	for' → logprob: -8.057783126831055
    7. '```' → logprob: -9.432783126831055
    8. '  ' → logprob: -10.057783126831055
    9. ' if' → logprob: -10.182783126831055
    10. ' i' → logprob: -10.682783126831055

Token 34: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.025769976899027824
    2. 'for' (adapté à ' for') → logprob: -3.7757699489593506
    3. '   ' → logprob: -6.02577018737793
    4. ' ' → logprob: -10.15077018737793
    5. ' if' → logprob: -10.90077018737793
    6. '    ' → logprob: -11.27577018737793
    7. '	for' → logprob: -11.40077018737793
    8. ' range' → logprob: -12.02577018737793
    9. ' j' → logprob: -12.27577018737793
    10. '```' → logprob: -12.27577018737793

Token 35: ' j' (ID: 441)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.14587846398353577
    2. ' j' → logprob: -2.145878553390503
    3. 'range' → logprob: -4.020878314971924
    4. 'j' → logprob: -7.270878314971924
    5. ' ' → logprob: -10.145878791809082
    6. '(range' → logprob: -10.770878791809082
    7. '_range' → logprob: -11.145878791809082
    8. '	range' → logprob: -11.395878791809082
    9. '   ' → logprob: -11.645878791809082
    10. ' xrange' → logprob: -11.645878791809082

Token 36: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.021397454664111137
    2. 'in' → logprob: -3.896397352218628
    3. ' ' → logprob: -7.896397590637207
    4. ' i' → logprob: -9.021397590637207
    5. 'range' → logprob: -9.271397590637207
    6. '   ' → logprob: -9.271397590637207
    7. ' range' → logprob: -9.521397590637207
    8. '(i' → logprob: -10.896397590637207
    9. '(' → logprob: -11.146397590637207
    10. ' =' → logprob: -11.521397590637207

Token 37: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.048848506063222885
    2. 'range' → logprob: -3.0488483905792236
    3. ' i' → logprob: -8.798848152160645
    4. ' ' → logprob: -9.298848152160645
    5. '(range' → logprob: -12.048848152160645
    6. 'i' → logprob: -12.173848152160645
    7. '	range' → logprob: -12.673848152160645
    8. '  ' → logprob: -14.048848152160645
    9. ' ra' → logprob: -14.048848152160645
    10. ' r' → logprob: -14.298848152160645

Token 38: '(i' (ID: 3649)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7107841372489929
    2. '(n' → logprob: -1.0857841968536377
    3. ' (' → logprob: -2.7107841968536377
    4. ' range' → logprob: -3.0857841968536377
    5. '(range' → logprob: -3.3357841968536377
    6. '(i' → logprob: -3.8357841968536377
    7. ' i' → logprob: -7.960783958435059
    8. 'range' → logprob: -8.085783958435059
    9. ' ' → logprob: -8.085783958435059
    10. ' n' → logprob: -8.210783958435059

Token 39: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0789559930562973
    2. ' +' → logprob: -2.578955888748169
    3. '1' → logprob: -10.45395565032959
    4. ' ' → logprob: -11.20395565032959
    5. '+)' → logprob: -11.70395565032959
    6. '+
' → logprob: -12.07895565032959
    7. '+i' → logprob: -12.82895565032959
    8. ' +
' → logprob: -13.07895565032959
    9. ')' → logprob: -13.45395565032959
    10. '+j' → logprob: -13.82895565032959

Token 40: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.0100624169572257e-05
    2. ' ' → logprob: -10.875020027160645
    3. ')' → logprob: -14.375020027160645
    4. '<|end|>' → logprob: -15.000020027160645
    5. '+' → logprob: -16.25002098083496
    6. 'n' → logprob: -17.25002098083496
    7. '2' → logprob: -17.37502098083496
    8. '   ' → logprob: -17.50002098083496
    9. '<|end|>' → logprob: -18.12502098083496
    10. '  ' → logprob: -18.62502098083496

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004184771329164505
    2. ',n' → logprob: -5.504184722900391
    3. ' ,' → logprob: -9.25418472290039
    4. 'n' → logprob: -12.50418472290039
    5. ',
' → logprob: -12.87918472290039
    6. ',

' → logprob: -14.12918472290039
    7. '(n' → logprob: -14.75418472290039
    8. '1' → logprob: -14.87918472290039
    9. ')' → logprob: -15.00418472290039
    10. '，' → logprob: -15.12918472290039

Token 42: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0052342405542731285
    2. ' n' → logprob: -5.255234241485596
    3. ' ' → logprob: -16.130233764648438
    4. ')' → logprob: -16.255233764648438
    5. ')n' → logprob: -16.255233764648438
    6. '	n' → logprob: -17.255233764648438
    7. '   ' → logprob: -17.255233764648438
    8. '(n' → logprob: -18.505233764648438
    9. '<n' → logprob: -19.380233764648438
    10. '```' → logprob: -19.380233764648438

Token 43: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000333320174831897
    2. ')' → logprob: -8.125333786010742
    3. '):
' → logprob: -10.500333786010742
    4. ' ):' → logprob: -12.250333786010742
    5. ':' → logprob: -12.500333786010742
    6. ')):' → logprob: -15.125333786010742
    7. '):

' → logprob: -15.625333786010742
    8. ')：' → logprob: -16.250333786010742
    9. '   ' → logprob: -16.375333786010742
    10. '():' → logprob: -16.375333786010742

Token 44: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0809708759188652
    2. '   ' → logprob: -2.9559707641601562
    3. '    ' → logprob: -4.955970764160156
    4. ' ' → logprob: -5.830970764160156
    5. '        
' → logprob: -5.955970764160156
    6. ':' → logprob: -6.455970764160156
    7. 'd' → logprob: -6.455970764160156
    8. ':
' → logprob: -6.580970764160156
    9. '    
' → logprob: -6.580970764160156
    10. ' 
' → logprob: -6.705970764160156

Token 45: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.30335310101509094
    2. 'dist' (adapté à ' dist') → logprob: -1.6783530712127686
    3. ' x' → logprob: -4.178353309631348
    4. ' dx' → logprob: -4.428353309631348
    5. '           ' → logprob: -5.053353309631348
    6. ' ' → logprob: -5.178353309631348
    7. ' if' → logprob: -5.178353309631348
    8. ' 
' → logprob: -5.428353309631348
    9. 'x' → logprob: -5.553353309631348
    10. '       ' → logprob: -5.803353309631348

Token 46: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.02031424455344677
    2. '+' → logprob: -4.8953142166137695
    3. '+=' → logprob: -5.1453142166137695
    4. ' =' → logprob: -5.3953142166137695
    5. ' +' → logprob: -6.6453142166137695
    6. '=' → logprob: -7.1453142166137695
    7. ' ' → logprob: -10.39531421661377
    8. 'max' → logprob: -10.52031421661377
    9. 's' → logprob: -10.89531421661377
    10. '_' → logprob: -11.27031421661377

Token 47: ' ((' (ID: 3536)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.4625772535800934
    2. '(abs' → logprob: -1.337577223777771
    3. '((' → logprob: -2.9625773429870605
    4. 'max' → logprob: -3.9625773429870605
    5. ' abs' → logprob: -4.3375773429870605
    6. '(max' → logprob: -4.5875773429870605
    7. '(x' → logprob: -4.8375773429870605
    8. ' (' → logprob: -5.9625773429870605
    9. ' max' → logprob: -7.0875773429870605
    10. ' ((' → logprob: -7.3375773429870605

Token 48: 'xy' (ID: 6077)
  Prédit: 'xy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xy' → logprob: -0.00794137455523014
    2. '(x' → logprob: -5.007941246032715
    3. 'x' → logprob: -6.757941246032715
    4. ' xy' → logprob: -10.132941246032715
    5. 'abs' → logprob: -11.257941246032715
    6. '(' → logprob: -12.757941246032715
    7. 'xi' → logprob: -13.257941246032715
    8. 'xx' → logprob: -13.507941246032715
    9. ' (' → logprob: -13.882941246032715
    10. '   ' → logprob: -13.882941246032715

Token 49: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.16189804673194885
    2. '[j' → logprob: -1.9118980169296265
    3. '[' → logprob: -6.411898136138916
    4. '[x' → logprob: -11.036897659301758
    5. '[I' → logprob: -12.536897659301758
    6. ' [' → logprob: -13.161897659301758
    7. 'i' → logprob: -13.661897659301758
    8. '[a' → logprob: -14.036897659301758
    9. '[s' → logprob: -14.286897659301758
    10. '[
' → logprob: -14.286897659301758

Token 50: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00037502311170101166
    2. '][' → logprob: -8.000374794006348
    3. '[j' → logprob: -11.625374794006348
    4. '0' → logprob: -11.875374794006348
    5. ' [' → logprob: -11.875374794006348
    6. '[x' → logprob: -12.125374794006348
    7. '[i' → logprob: -13.375374794006348
    8. ')[' → logprob: -13.500374794006348
    9. '[
' → logprob: -13.625374794006348
    10. ' ][' → logprob: -13.750374794006348

Token 51: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0445127372804563e-05
    2. ' ' → logprob: -12.37501049041748
    3. '1' → logprob: -12.75001049041748
    4. ']' → logprob: -14.43751049041748
    5. '
' → logprob: -14.43751049041748
    6. '

' → logprob: -14.93751049041748
    7. '   ' → logprob: -15.18751049041748
    8. '```' → logprob: -15.31251049041748
    9. '2' → logprob: -15.68751049041748
    10. '-' → logprob: -16.000009536743164

Token 52: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.42877230048179626
    2. ' -' → logprob: -1.0537723302841187
    3. '<|end|>' → logprob: -9.92877197265625
    4. ')' → logprob: -11.92877197265625
    5. '-)' → logprob: -12.05377197265625
    6. ' ' → logprob: -12.05377197265625
    7. ')-(' → logprob: -13.80377197265625
    8. ')-' → logprob: -14.17877197265625
    9. '-x' → logprob: -15.17877197265625
    10. ']' → logprob: -15.17877197265625

Token 53: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5759488344192505
    2. ' -' → logprob: -0.8259488344192505
    3. '-x' → logprob: -12.450948715209961
    4. ' ' → logprob: -13.075948715209961
    5. '-)' → logprob: -14.575948715209961
    6. '-t' → logprob: -15.200948715209961
    7. '-
' → logprob: -15.200948715209961
    8. ' ' → logprob: -15.200948715209961
    9. '   ' → logprob: -15.200948715209961
    10. ' -
' → logprob: -15.325948715209961

Token 54: ' xy' (ID: 53634)
  Prédit: 'xy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xy' → logprob: -0.4287148714065552
    2. ' xy' → logprob: -1.0537148714065552
    3. 'x' → logprob: -11.803714752197266
    4. '_xy' → logprob: -13.178714752197266
    5. '.xy' → logprob: -13.178714752197266
    6. ' ' → logprob: -13.928714752197266
    7. ' x' → logprob: -13.928714752197266
    8. 'xyz' → logprob: -15.053714752197266
    9. ')' → logprob: -15.303714752197266
    10. '<|end|>' → logprob: -16.178714752197266

Token 55: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.005765726324170828
    2. '][' → logprob: -5.255765914916992
    3. '[' → logprob: -7.755765914916992
    4. 'j' → logprob: -10.505765914916992
    5. ')[' → logprob: -10.630765914916992
    6. '```' → logprob: -11.255765914916992
    7. '[i' → logprob: -11.380765914916992
    8. '[][' → logprob: -11.755765914916992
    9. ' [' → logprob: -13.255765914916992
    10. '>[' → logprob: -13.505765914916992

Token 56: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0004797664878424257
    2. '[' → logprob: -8.375479698181152
    3. ']' → logprob: -8.875479698181152
    4. ' ][' → logprob: -9.750479698181152
    5. '"][' → logprob: -11.000479698181152
    6. ''][' → logprob: -11.250479698181152
    7. '   ' → logprob: -12.000479698181152
    8. ')][' → logprob: -13.000479698181152
    9. '1' → logprob: -13.375479698181152
    10. '0' → logprob: -13.375479698181152

Token 57: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023391995579004288
    2. '1' → logprob: -3.7733919620513916
    3. ' ' → logprob: -9.273391723632812
    4. '```' → logprob: -11.273391723632812
    5. '
' → logprob: -11.398391723632812
    6. '   ' → logprob: -11.648391723632812
    7. '[' → logprob: -11.898391723632812
    8. '][' → logprob: -12.898391723632812
    9. '
' → logprob: -13.335891723632812
    10. '  ' → logprob: -13.523391723632812

Token 58: '])' (ID: 4636)
  Prédit: ')**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.4744252562522888
    2. ')' → logprob: -0.9744252562522888
    3. ' )' → logprob: -8.849425315856934
    4. '])' → logprob: -8.849425315856934
    5. '）' → logprob: -10.224425315856934
    6. ']' → logprob: -12.224425315856934
    7. '))' → logprob: -12.474425315856934
    8. '`)' → logprob: -12.849425315856934
    9. '       ' → logprob: -12.849425315856934
    10. '   ' → logprob: -13.099425315856934

Token 59: ' **' (ID: 6240)
  Prédit: ')**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.2526020407676697
    2. ')' → logprob: -1.5026021003723145
    3. '**' → logprob: -7.5026021003723145
    4. ' )' → logprob: -9.252601623535156
    5. '2' → logprob: -11.377601623535156
    6. '**)' → logprob: -12.127601623535156
    7. '*' → logprob: -12.752601623535156
    8. '）' → logprob: -13.752601623535156
    9. ']' → logprob: -14.002601623535156
    10. ')*' → logprob: -14.377601623535156

Token 60: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00861729308962822
    2. ' ' → logprob: -4.758617401123047
    3. ')' → logprob: -14.133617401123047
    4. '<|end|>' → logprob: -14.633617401123047
    5. '۲' → logprob: -14.758617401123047
    6. '```' → logprob: -15.008617401123047
    7. '２' → logprob: -16.383617401123047
    8. '3' → logprob: -16.383617401123047
    9. '  ' → logprob: -16.446117401123047
    10. '٢' → logprob: -16.758617401123047

Token 61: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00018220659694634378
    2. ' ' → logprob: -8.625182151794434
    3. ')' → logprob: -14.312682151794434
    4. '```' → logprob: -14.812682151794434
    5. '1' → logprob: -15.375182151794434
    6. '   ' → logprob: -15.625182151794434
    7. '  ' → logprob: -15.875182151794434
    8. '۲' → logprob: -15.937682151794434
    9. '3' → logprob: -16.37518310546875
    10. '0' → logprob: -16.50018310546875

Token 62: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5775825381278992
    2. ' +' → logprob: -0.8275825381278992
    3. ')' → logprob: -6.577582359313965
    4. ')+' → logprob: -9.452582359313965
    5. '+)' → logprob: -9.702582359313965
    6. '<|end|>' → logprob: -10.077582359313965
    7. ' +
' → logprob: -10.452582359313965
    8. ')+(' → logprob: -10.952582359313965
    9. '+
' → logprob: -11.577582359313965
    10. ' )' → logprob: -11.952582359313965

Token 63: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.035657819360494614
    2. '(x' → logprob: -3.5356578826904297
    3. ' ((' → logprob: -5.78565788269043
    4. '(' → logprob: -6.28565788269043
    5. '((' → logprob: -7.41065788269043
    6. ' ' → logprob: -8.53565788269043
    7. '<|end|>' → logprob: -10.16065788269043
    8. '(y' → logprob: -10.28565788269043
    9. '(n' → logprob: -11.03565788269043
    10. ')' → logprob: -11.16065788269043

Token 64: 'xy' (ID: 6077)
  Prédit: 'xy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xy' → logprob: -0.523932158946991
    2. ' xy' → logprob: -0.898932158946991
    3. '(x' → logprob: -7.773931980133057
    4. ' (' → logprob: -9.148932456970215
    5. ' ' → logprob: -9.273932456970215
    6. '<|end|>' → logprob: -9.648932456970215
    7. '.xy' → logprob: -9.773932456970215
    8. '_xy' → logprob: -10.273932456970215
    9. 'x' → logprob: -12.148932456970215
    10. ')' → logprob: -12.398932456970215

Token 65: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.029844442382454872
    2. '[j' → logprob: -3.5298445224761963
    3. '[' → logprob: -9.404844284057617
    4. '[][' → logprob: -12.154844284057617
    5. 'i' → logprob: -13.154844284057617
    6. '][' → logprob: -13.404844284057617
    7. '[s' → logprob: -14.529844284057617
    8. '<|end|>' → logprob: -14.904844284057617
    9. '[I' → logprob: -15.029844284057617
    10. 'j' → logprob: -15.154844284057617

Token 66: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00015014449309092015
    2. '[' → logprob: -9.000149726867676
    3. ' ][' → logprob: -11.500149726867676
    4. ']' → logprob: -11.875149726867676
    5. '"][' → logprob: -12.250149726867676
    6. ''][' → logprob: -12.500149726867676
    7. '}[' → logprob: -15.375149726867676
    8. '1' → logprob: -15.500149726867676
    9. '[][' → logprob: -16.000150680541992
    10. ')[' → logprob: -16.125150680541992

Token 67: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08065793663263321
    2. '1' → logprob: -2.580657958984375
    3. '][' → logprob: -6.955657958984375
    4. '[' → logprob: -7.330657958984375
    5. ' ' → logprob: -9.205657958984375
    6. ']' → logprob: -10.080657958984375
    7. '<|end|>' → logprob: -12.830657958984375
    8. '   ' → logprob: -13.455657958984375
    9. '```' → logprob: -13.768157958984375
    10. '
' → logprob: -14.080657958984375

Token 68: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5011075735092163
    2. ' -' → logprob: -1.0011075735092163
    3. '<|end|>' → logprob: -3.876107692718506
    4. '-' → logprob: -5.626107692718506
    5. ')' → logprob: -6.876107692718506
    6. ']-' → logprob: -7.626107692718506
    7. ' ]' → logprob: -8.501107215881348
    8. '<|end|>' → logprob: -8.501107215881348
    9. ' ' → logprob: -8.751107215881348
    10. '][' → logprob: -9.251107215881348

Token 69: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0022378049325197935
    2. '-' → logprob: -6.127237796783447
    3. ')' → logprob: -10.377238273620605
    4. ' ' → logprob: -11.252238273620605
    5. '<|end|>' → logprob: -12.002238273620605
    6. ' ' → logprob: -14.627238273620605
    7. '<|end|>' → logprob: -14.877238273620605
    8. ' -
' → logprob: -15.252238273620605
    9. '[' → logprob: -15.377238273620605
    10. ' −' → logprob: -15.627238273620605

Token 70: ' xy' (ID: 53634)
  Prédit: 'xy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xy' → logprob: -0.693556010723114
    2. ' xy' → logprob: -0.693556010723114
    3. '<|end|>' → logprob: -9.06855583190918
    4. '.xy' → logprob: -9.19355583190918
    5. '_xy' → logprob: -9.56855583190918
    6. ' ' → logprob: -10.31855583190918
    7. 'j' → logprob: -10.56855583190918
    8. '1' → logprob: -11.06855583190918
    9. 'y' → logprob: -11.81855583190918
    10. ' ' → logprob: -11.81855583190918

Token 71: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.011337227188050747
    2. '][' → logprob: -4.5113372802734375
    3. 'j' → logprob: -8.636337280273438
    4. '[' → logprob: -10.136337280273438
    5. '[i' → logprob: -10.761337280273438
    6. ']' → logprob: -11.136337280273438
    7. '```' → logprob: -11.636337280273438
    8. '[][' → logprob: -12.511337280273438
    9. ''][' → logprob: -12.886337280273438
    10. '	j' → logprob: -13.011337280273438

Token 72: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0005064461147412658
    2. '[' → logprob: -8.125506401062012
    3. ']' → logprob: -9.750506401062012
    4. '1' → logprob: -10.000506401062012
    5. '0' → logprob: -10.500506401062012
    6. ' ][' → logprob: -11.000506401062012
    7. ''][' → logprob: -11.250506401062012
    8. ']][' → logprob: -11.750506401062012
    9. '   ' → logprob: -11.750506401062012
    10. '"][' → logprob: -11.750506401062012

Token 73: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.333223139634356e-05
    2. ' ' → logprob: -11.750033378601074
    3. '0' → logprob: -11.875033378601074
    4. '])' → logprob: -12.000033378601074
    5. ']' → logprob: -12.500033378601074
    6. '```' → logprob: -12.750033378601074
    7. '   ' → logprob: -13.500033378601074
    8. '
' → logprob: -14.375033378601074
    9. '  ' → logprob: -15.250033378601074
    10. '
' → logprob: -15.312533378601074

Token 74: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.05134604871273041
    2. ')' → logprob: -3.0513460636138916
    3. ']' → logprob: -7.0513458251953125
    4. ')**' → logprob: -7.4263458251953125
    5. '`)' → logprob: -8.051345825195312
    6. ']))' → logprob: -8.426345825195312
    7. ')])' → logprob: -8.676345825195312
    8. ''])' → logprob: -9.176345825195312
    9. '))' → logprob: -9.301345825195312
    10. '**' → logprob: -9.801345825195312

Token 75: ' **' (ID: 6240)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4847961366176605
    2. '**' → logprob: -1.484796166419983
    3. ' **' → logprob: -2.6097960472106934
    4. ')**' → logprob: -2.8597960472106934
    5. ' )' → logprob: -4.859796047210693
    6. '2' → logprob: -4.859796047210693
    7. ' **)' → logprob: -4.984796047210693
    8. '**)' → logprob: -5.734796047210693
    9. '))' → logprob: -7.859796047210693
    10. ' ' → logprob: -8.484796524047852

Token 76: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.41814133524894714
    2. '2' → logprob: -1.1681413650512695
    3. ' ' → logprob: -3.5431413650512695
    4. '(' → logprob: -6.5431413650512695
    5. '1' → logprob: -8.66814136505127
    6. '.' → logprob: -8.66814136505127
    7. ')' → logprob: -10.54314136505127
    8. '/' → logprob: -11.54314136505127
    9. '**' → logprob: -11.54314136505127
    10. ' ' → logprob: -12.29314136505127

Token 77: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.011291963048279285
    2. '0' → logprob: -4.636291980743408
    3. '1' → logprob: -6.511291980743408
    4. ' ' → logprob: -10.13629150390625
    5. '(' → logprob: -12.51129150390625
    6. ')' → logprob: -12.63629150390625
    7. '```' → logprob: -14.76129150390625
    8. '.' → logprob: -14.88629150390625
    9. '')' → logprob: -15.88629150390625
    10. ' ' → logprob: -15.88629150390625

Token 78: ')' (ID: 8)
  Prédit: ')**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.47416725754737854
    2. ')' → logprob: -0.9741672277450562
    3. '**' → logprob: -9.974166870117188
    4. ' )' → logprob: -10.349166870117188
    5. ')
' → logprob: -12.349166870117188
    6. '**)' → logprob: -13.474166870117188
    7. '0' → logprob: -13.724166870117188
    8. '))' → logprob: -14.099166870117188
    9. '```' → logprob: -14.349166870117188
    10. '）' → logprob: -14.599166870117188

Token 79: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.09548137336969376
    2. ')' → logprob: -2.9704813957214355
    3. '0' → logprob: -4.0954813957214355
    4. ' **' → logprob: -4.4704813957214355
    5. ')**' → logprob: -4.5954813957214355
    6. ' )' → logprob: -7.2204813957214355
    7. '**
' → logprob: -7.8454813957214355
    8. '
' → logprob: -9.345480918884277
    9. ' 
' → logprob: -9.970480918884277
    10. '```' → logprob: -10.095480918884277

Token 80: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0037594668101519346
    2. ' ' → logprob: -5.628759384155273
    3. '(' → logprob: -8.753759384155273
    4. ' (' → logprob: -13.878759384155273
    5. '.' → logprob: -15.003759384155273
    6. '-' → logprob: -15.753759384155273
    7. '   ' → logprob: -16.503759384155273
    8. ' -' → logprob: -17.378759384155273
    9. ' ' → logprob: -17.378759384155273
    10. '  ' → logprob: -17.816259384155273

Token 81: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00027420982951298356
    2. ' ' → logprob: -8.500274658203125
    3. '(' → logprob: -9.625274658203125
    4. '.' → logprob: -12.375274658203125
    5. '{' → logprob: -15.750274658203125
    6. '-' → logprob: -16.000274658203125
    7. '   ' → logprob: -16.750274658203125
    8. ' (' → logprob: -16.750274658203125
    9. ' ' → logprob: -17.375274658203125
    10. '  ' → logprob: -18.062774658203125

Token 82: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00015633940347470343
    2. '-' → logprob: -9.12515640258789
    3. '0' → logprob: -11.12515640258789
    4. '.-' → logprob: -11.25015640258789
    5. '```' → logprob: -12.25015640258789
    6. '-.' → logprob: -12.87515640258789
    7. '`.' → logprob: -12.87515640258789
    8. '.
' → logprob: -13.00015640258789
    9. '5' → logprob: -13.12515640258789
    10. ' ' → logprob: -14.50015640258789

Token 83: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -5.319370302458992e-06
    2. '0' → logprob: -13.937505722045898
    3. '25' → logprob: -14.187505722045898
    4. '2' → logprob: -14.312505722045898
    5. '```' → logprob: -14.687505722045898
    6. '05' → logprob: -14.750005722045898
    7. '.' → logprob: -14.937505722045898
    8. '3' → logprob: -15.062505722045898
    9. '4' → logprob: -15.125005722045898
    10. '7' → logprob: -15.562505722045898

Token 84: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2399251013994217
    2. '
' → logprob: -1.8649251461029053
    3. ' 
' → logprob: -3.2399251461029053
    4. ' print' → logprob: -5.239924907684326
    5. ')' → logprob: -5.614924907684326
    6. '  
' → logprob: -5.739924907684326
    7. 'n' → logprob: -6.739924907684326
    8. ' ' → logprob: -6.864924907684326
    9. '/' → logprob: -6.989924907684326
    10. ')
' → logprob: -7.239924907684326

Token 85: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.19540977478027344
    2. '
' → logprob: -2.4454097747802734
    3. ')' → logprob: -3.8204097747802734
    4. 'n' → logprob: -3.9454097747802734
    5. '/' → logprob: -4.320409774780273
    6. ' 
' → logprob: -4.820409774780273
    7. '#' → logprob: -5.070409774780273
    8. '\n' → logprob: -5.320409774780273
    9. '  
' → logprob: -5.445409774780273
    10. '*' → logprob: -6.320409774780273

Token 86: '(dist' (ID: 78981)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00035798799945041537
    2. '("("' → logprob: -8.500357627868652
    3. '('' → logprob: -9.250357627868652
    4. '(dist' → logprob: -10.125357627868652
    5. '(
' → logprob: -11.875357627868652
    6. '()' → logprob: -12.625357627868652
    7. '((' → logprob: -13.625357627868652
    8. '(sum' → logprob: -13.750357627868652
    9. '(

' → logprob: -13.750357627868652
    10. '("(' → logprob: -14.000357627868652

Token 87: ' /' (ID: 820)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.816093228830141e-06
    2. ' )' → logprob: -13.25000286102295
    3. '))' → logprob: -15.12500286102295
    4. '(' → logprob: -15.25000286102295
    5. ')`' → logprob: -16.125001907348633
    6. '*' → logprob: -16.250001907348633
    7. '+' → logprob: -16.250001907348633
    8. '）' → logprob: -16.875001907348633
    9. '()' → logprob: -17.125001907348633
    10. ')
' → logprob: -17.250001907348633

Token 88: ' ((' (ID: 3536)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2830426096916199
    2. 'n' → logprob: -1.5330426692962646
    3. ' (' → logprob: -4.1580424308776855
    4. '(' → logprob: -4.4080424308776855
    5. ' n' → logprob: -6.1580424308776855
    6. '((' → logprob: -7.4080424308776855
    7. ' ' → logprob: -10.783042907714844
    8. '2' → logprob: -10.783042907714844
    9. ' ((' → logprob: -11.283042907714844
    10. '1' → logprob: -11.783042907714844

Token 89: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00017350474081467837
    2. ' n' → logprob: -8.750173568725586
    3. '(n' → logprob: -11.375173568725586
    4. '(' → logprob: -13.375173568725586
    5. ' (' → logprob: -13.875173568725586
    6. '2' → logprob: -15.250173568725586
    7. ')n' → logprob: -15.250173568725586
    8. '1' → logprob: -15.375173568725586
    9. '
' → logprob: -15.625173568725586
    10. ' ' → logprob: -16.750173568725586

Token 90: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2589728534221649
    2. ' *' → logprob: -1.7589728832244873
    3. '*(' → logprob: -2.8839728832244873
    4. ' *(' → logprob: -11.758973121643066
    5. ')' → logprob: -12.258973121643066
    6. ')*(' → logprob: -12.633973121643066
    7. '*
' → logprob: -13.008973121643066
    8. '-' → logprob: -14.133973121643066
    9. '*n' → logprob: -14.383973121643066
    10. ' *
' → logprob: -14.633973121643066

Token 91: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.016175365075469017
    2. ' (' → logprob: -4.141175270080566
    3. '(' → logprob: -8.891175270080566
    4. '(
' → logprob: -13.016175270080566
    5. '-' → logprob: -15.516175270080566
    6. '（' → logprob: -15.766175270080566
    7. '1' → logprob: -15.766175270080566
    8. ' ' → logprob: -16.016176223754883
    9. '((' → logprob: -16.016176223754883
    10. 'n' → logprob: -16.516176223754883

Token 92: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.002819374203681946
    2. '(n' → logprob: -6.252819538116455
    3. '1' → logprob: -7.377819538116455
    4. ' n' → logprob: -8.627819061279297
    5. '-' → logprob: -9.627819061279297
    6. ')n' → logprob: -11.252819061279297
    7. '2' → logprob: -12.752819061279297
    8. '	n' → logprob: -13.377819061279297
    9. ' (' → logprob: -14.002819061279297
    10. '(' → logprob: -14.252819061279297

Token 93: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4740980267524719
    2. ' -' → logprob: -0.9740980267524719
    3. ')' → logprob: -10.974098205566406
    4. ' ' → logprob: -13.724098205566406
    5. '1' → logprob: -13.849098205566406
    6. ' )' → logprob: -14.224098205566406
    7. '−' → logprob: -15.349098205566406
    8. ')-' → logprob: -15.599098205566406
    9. '-)' → logprob: -15.974098205566406
    10. '))' → logprob: -15.974098205566406

Token 94: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008228530059568584
    2. ' ' → logprob: -7.125823020935059
    3. ')' → logprob: -11.500823020935059
    4. '<|end|>' → logprob: -12.750823020935059
    5. '2' → logprob: -13.000823020935059
    6. '```' → logprob: -14.125823020935059
    7. '   ' → logprob: -14.500823020935059
    8. '  ' → logprob: -14.688323020935059
    9. ' )' → logprob: -14.938323020935059
    10. '１' → logprob: -15.313323020935059

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.895480277715251e-06
    2. ' ' → logprob: -11.750008583068848
    3. '2' → logprob: -14.625008583068848
    4. '```' → logprob: -15.937508583068848
    5. ')' → logprob: -16.000009536743164
    6. '１' → logprob: -16.125009536743164
    7. '   ' → logprob: -16.687509536743164
    8. '  ' → logprob: -17.062509536743164
    9. '
' → logprob: -17.375009536743164
    10. '۱' → logprob: -17.875009536743164

Token 96: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01175013929605484
    2. ')/' → logprob: -4.511750221252441
    3. '))' → logprob: -7.886750221252441
    4. ')//' → logprob: -8.886750221252441
    5. ' )' → logprob: -9.011750221252441
    6. ')))' → logprob: -9.886750221252441
    7. '))/' → logprob: -11.511750221252441
    8. '`)' → logprob: -14.261750221252441
    9. ')
' → logprob: -14.386750221252441
    10. ' ))' → logprob: -14.511750221252441

Token 97: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07530942559242249
    2. '/' → logprob: -3.3253095149993896
    3. '))' → logprob: -3.4503095149993896
    4. '//' → logprob: -6.0753092765808105
    5. ')/' → logprob: -6.3253092765808105
    6. ' )' → logprob: -8.825309753417969
    7. '`)' → logprob: -9.200309753417969
    8. ' /' → logprob: -9.575309753417969
    9. '")' → logprob: -9.700309753417969
    10. ')]' → logprob: -9.825309753417969

Token 98: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.14267680048942566
    2. ' ' → logprob: -2.017676830291748
    3. ')' → logprob: -14.39267635345459
    4. '1' → logprob: -14.76767635345459
    5. ' )' → logprob: -16.017677307128906
    6. ' ' → logprob: -16.080177307128906
    7. '3' → logprob: -16.455177307128906
    8. '```' → logprob: -16.705177307128906
    9. '۲' → logprob: -16.767677307128906
    10. '２' → logprob: -16.767677307128906

Token 99: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.759734732331708e-05
    2. ' ' → logprob: -11.000017166137695
    3. '1' → logprob: -14.500017166137695
    4. ')' → logprob: -16.250017166137695
    5. '```' → logprob: -16.875017166137695
    6. '۲' → logprob: -17.250017166137695
    7. '２' → logprob: -17.437517166137695
    8. '<|end|>' → logprob: -18.437517166137695
    9. '
' → logprob: -18.625017166137695
    10. '٢' → logprob: -18.875017166137695

Token 100: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25193706154823303
    2. '))' → logprob: -1.5019370317459106
    3. ' )' → logprob: -13.001936912536621
    4. ')))' → logprob: -13.126936912536621
    5. ')
' → logprob: -13.376936912536621
    6. '))
' → logprob: -14.376936912536621
    7. ' ))' → logprob: -14.501936912536621
    8. ')`' → logprob: -15.001936912536621
    9. '),' → logprob: -16.001937866210938
    10. '`)' → logprob: -16.126937866210938

Token 101: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ' )' → logprob: -14.375000953674316
    3. '))' → logprob: -15.000000953674316
    4. ')`' → logprob: -15.875000953674316
    5. ')
' → logprob: -16.500001907348633
    6. '`)' → logprob: -16.875001907348633
    7. '')' → logprob: -17.500001907348633
    8. '）' → logprob: -17.750001907348633
    9. '}' → logprob: -19.375001907348633
    10. '*' → logprob: -19.375001907348633

Token 102: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.49401864409446716
    2. '2' → logprob: -0.9940186738967896
    3. ' n' → logprob: -4.8690185546875
    4. '3' → logprob: -4.8690185546875
    5. '0' → logprob: -6.4940185546875
    6. 'n' → logprob: -6.8690185546875
    7. '1' → logprob: -7.2440185546875
    8. '4' → logprob: -7.8690185546875
    9. '(n' → logprob: -8.2440185546875
    10. ' (' → logprob: -9.2440185546875

Token 103: 'n' (ID: 77)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5864180326461792
    2. ' ' → logprob: -0.8364180326461792
    3. '3' → logprob: -5.461418151855469
    4. ' n' → logprob: -5.711418151855469
    5. '4' → logprob: -6.961418151855469
    6. '1' → logprob: -7.211418151855469
    7. 'n' → logprob: -7.586418151855469
    8. '0' → logprob: -8.211418151855469
    9. '10' → logprob: -9.461418151855469
    10. '5' → logprob: -10.211418151855469

Token 104: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2825949192047119
    2. ' -' → logprob: -1.407594919204712
    3. ')' → logprob: -6.657594680786133
    4. '-)' → logprob: -9.782594680786133
    5. ' )' → logprob: -10.907594680786133
    6. ')/(' → logprob: -11.032594680786133
    7. '1' → logprob: -11.157594680786133
    8. ' ' → logprob: -11.282594680786133
    9. '-
' → logprob: -12.407594680786133
    10. '<|end|>' → logprob: -12.532594680786133

Token 105: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.19354231655597687
    2. ' ' → logprob: -1.8185423612594604
    3. '2' → logprob: -4.31854248046875
    4. '-' → logprob: -8.56854248046875
    5. ' -' → logprob: -10.06854248046875
    6. '3' → logprob: -10.06854248046875
    7. '4' → logprob: -10.31854248046875
    8. ')' → logprob: -10.94354248046875
    9. '0' → logprob: -11.19354248046875
    10. '	' → logprob: -11.94354248046875

Token 106: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003486746922135353
    2. '2' → logprob: -5.753486633300781
    3. ' ' → logprob: -8.378486633300781
    4. '-' → logprob: -11.253486633300781
    5. '```' → logprob: -11.315986633300781
    6. '
' → logprob: -11.378486633300781
    7. '3' → logprob: -11.565986633300781
    8. ')' → logprob: -11.565986633300781
    9. '１' → logprob: -12.003486633300781
    10. '4' → logprob: -13.565986633300781

Token 107: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005576187279075384
    2. '))' → logprob: -5.255576133728027
    3. ' )' → logprob: -8.130576133728027
    4. ')))' → logprob: -11.380576133728027
    5. ')
' → logprob: -12.005576133728027
    6. '**' → logprob: -12.005576133728027
    7. ')**' → logprob: -12.130576133728027
    8. '/' → logprob: -12.755576133728027
    9. ')`' → logprob: -12.755576133728027
    10. '*' → logprob: -13.255576133728027


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 105
Tokens correctement prédits (1ère position, stricte): 48
Tokens correctement prédits (1ère position, avec adaptation): 48
Tokens correctement prédits (top 10): 94
Précision stricte (1ère position): 45.71%
Précision adaptée (1ère position): 45.71%
Précision (top 10): 89.52%
================================================================================
