================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:15:19
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import stdin
def f(x): return "ARC" if x=="ABC" else "ABC"
s = stdin.readline().strip()
if s=="ABC":
    print("ARC")
elif s!="ABC":
    result = f(s)
    print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' stdin' (ID: 75143)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.036071863025426865
    2. ' argv' → logprob: -3.78607177734375
    3. 'exit' → logprob: -4.66107177734375
    4. ' exit' → logprob: -6.78607177734375
    5. 'stdout' → logprob: -6.91107177734375
    6. 'path' → logprob: -7.78607177734375
    7. 'stdin' → logprob: -8.03607177734375
    8. 'import' → logprob: -8.41107177734375
    9. 'version' → logprob: -9.53607177734375
    10. 'stderr' → logprob: -10.16107177734375

Token 4: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0006422612932510674
    2. '.readline' → logprob: -8.250641822814941
    3. '\n' → logprob: -8.500641822814941
    4. '.
' → logprob: -10.125641822814941
    5. 'import' → logprob: -10.250641822814941
    6. '\' → logprob: -10.500641822814941
    7. '```' → logprob: -10.875641822814941
    8. '.read' → logprob: -10.875641822814941
    9. '' → logprob: -12.000641822814941
    10. ',' → logprob: -12.125641822814941

Token 5: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.09893397241830826
    2. 'for' → logprob: -3.5989339351654053
    3. 'import' → logprob: -3.8489339351654053
    4. '.readline' → logprob: -4.223934173583984
    5. '\n' → logprob: -4.598934173583984
    6. 'print' → logprob: -5.598934173583984
    7. '' → logprob: -5.598934173583984
    8. '```' → logprob: -5.973934173583984
    9. '
' → logprob: -6.348934173583984
    10. ',' → logprob: -6.473934173583984

Token 6: ' f' (ID: 285)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15395735204219818
    2. ' read' → logprob: -2.1539573669433594
    3. ' process' → logprob: -4.903957366943359
    4. ' main' → logprob: -5.278957366943359
    5. ' readline' → logprob: -5.403957366943359
    6. ' func' → logprob: -6.528957366943359
    7. ' parse' → logprob: -6.528957366943359
    8. 'read' → logprob: -6.653957366943359
    9. ' space' → logprob: -7.153957366943359
    10. '_read' → logprob: -7.403957366943359

Token 7: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06674567610025406
    2. 'u' → logprob: -3.3167457580566406
    3. '(u' → logprob: -4.191745758056641
    4. 'unct' → logprob: -5.441745758056641
    5. 'unc' → logprob: -5.816745758056641
    6. '_' → logprob: -5.941745758056641
    7. '(a' → logprob: -6.566745758056641
    8. 'unction' → logprob: -7.066745758056641
    9. 'a' → logprob: -8.44174575805664
    10. 'un' → logprob: -8.81674575805664

Token 8: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04887450486421585
    2. ')' → logprob: -3.048874616622925
    3. ':' → logprob: -8.298874855041504
    4. '):
' → logprob: -10.673874855041504
    5. ',' → logprob: -12.048874855041504
    6. ' ):' → logprob: -13.298874855041504
    7. '[' → logprob: -13.423874855041504
    8. '**' → logprob: -14.673874855041504
    9. ')x' → logprob: -14.673874855041504
    10. ''):' → logprob: -14.798874855041504

Token 9: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38213998079299927
    2. '\n' → logprob: -2.1321399211883545
    3. '    
' → logprob: -3.1321399211883545
    4. ' 
' → logprob: -3.3821399211883545
    5. ' ' → logprob: -3.5071399211883545
    6. '\' → logprob: -3.6321399211883545
    7. '    ' → logprob: -3.7571399211883545
    8. ' return' → logprob: -4.632140159606934
    9. '
' → logprob: -4.757140159606934
    10. '  
' → logprob: -5.257140159606934

Token 10: ' "' (ID: 392)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.13012374937534332
    2. ' ' → logprob: -2.6301238536834717
    3. 'x' → logprob: -3.0051238536834717
    4. ' ' → logprob: -8.88012409210205
    5. ' None' → logprob: -8.88012409210205
    6. ''' → logprob: -10.88012409210205
    7. '0' → logprob: -11.00512409210205
    8. 'None' → logprob: -11.25512409210205
    9. '(x' → logprob: -11.38012409210205
    10. '"' → logprob: -11.63012409210205

Token 11: 'ARC' (ID: 64758)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7082750201225281
    2. '"' → logprob: -1.7082750797271729
    3. '0' → logprob: -3.208275079727173
    4. '\n' → logprob: -3.333275079727173
    5. 'True' → logprob: -3.583275079727173
    6. '42' → logprob: -3.583275079727173
    7. '1' → logprob: -3.708275079727173
    8. 'f' → logprob: -3.833275079727173
    9. 'int' → logprob: -3.833275079727173
    10. ''' → logprob: -4.083274841308594

Token 12: '"' (ID: 1)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.9773101806640625
    2. '"' → logprob: -1.7273101806640625
    3. 'H' → logprob: -2.4773101806640625
    4. '}' → logprob: -2.8523101806640625
    5. 'a' → logprob: -2.8523101806640625
    6. '"""' → logprob: -3.2273101806640625
    7. '"}' → logprob: -3.2273101806640625
    8. '-A' → logprob: -3.7273101806640625
    9. '{' → logprob: -4.3523101806640625
    10. '_A' → logprob: -4.6023101806640625

Token 13: ' if' (ID: 538)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.19676749408245087
    2. '[' → logprob: -3.071767568588257
    3. '.' → logprob: -3.821767568588257
    4. ')' → logprob: -3.946767568588257
    5. '_' → logprob: -3.946767568588257
    6. '(
' → logprob: -4.071767330169678
    7. ':' → logprob: -4.696767330169678
    8. '<|end|>' → logprob: -4.821767330169678
    9. '"' → logprob: -5.196767330169678
    10. '
' → logprob: -5.696767330169678

Token 14: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.005375691689550877
    2. 'x' → logprob: -5.255375862121582
    3. ' ' → logprob: -8.880375862121582
    4. '(x' → logprob: -14.380375862121582
    5. ' (' → logprob: -14.380375862121582
    6. ' not' → logprob: -15.005375862121582
    7. '(' → logprob: -15.255375862121582
    8. '"' → logprob: -15.380375862121582
    9. ' ' → logprob: -15.755375862121582
    10. ' a' → logprob: -16.005374908447266

Token 15: '=="' (ID: 24027)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6485885381698608
    2. ' >' → logprob: -2.0235886573791504
    3. '%' → logprob: -2.1485886573791504
    4. ' %' → logprob: -2.8985886573791504
    5. '>=' → logprob: -3.2735886573791504
    6. ' >=' → logprob: -3.3985886573791504
    7. '==' → logprob: -3.5235886573791504
    8. '<' → logprob: -3.7735886573791504
    9. ' <' → logprob: -3.8985886573791504
    10. ' ==' → logprob: -4.77358865737915

Token 16: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.7271363735198975
    2. 'ARC' → logprob: -1.1021363735198975
    3. 'A' → logprob: -2.1021363735198975
    4. 'B' → logprob: -5.227136611938477
    5. 'R' → logprob: -5.477136611938477
    6. '1' → logprob: -5.602136611938477
    7. 'AG' → logprob: -5.727136611938477
    8. '3' → logprob: -5.852136611938477
    9. 'abc' → logprob: -5.852136611938477
    10. '123' → logprob: -5.914636611938477

Token 17: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -3.106736039626412e-05
    2. 'ABC' → logprob: -11.625031471252441
    3. ' else' → logprob: -12.000031471252441
    4. 'else' → logprob: -12.125031471252441
    5. '```' → logprob: -12.875031471252441
    6. 'A' → logprob: -13.500031471252441
    7. '")' → logprob: -13.875031471252441
    8. '"""' → logprob: -13.875031471252441
    9. '\"' → logprob: -14.375031471252441
    10. 'D' → logprob: -14.625031471252441

Token 18: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.17984968423843384
    2. 'else' → logprob: -1.804849624633789
    3. '+' → logprob: -10.179849624633789
    4. '```' → logprob: -10.804849624633789
    5. ' ' → logprob: -11.054849624633789
    6. '==' → logprob: -11.554849624633789
    7. ' and' → logprob: -12.804849624633789
    8. ' or' → logprob: -12.929849624633789
    9. '"' → logprob: -13.554849624633789
    10. 'and' → logprob: -13.554849624633789

Token 19: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.026738440617918968
    2. ' "' → logprob: -3.651738405227661
    3. ''' → logprob: -8.526738166809082
    4. ' ' → logprob: -9.151738166809082
    5. '""' → logprob: -10.276738166809082
    6. ' x' → logprob: -10.776738166809082
    7. ' None' → logprob: -11.151738166809082
    8. ' '' → logprob: -11.401738166809082
    9. ' ""' → logprob: -12.214238166809082
    10. ' f' → logprob: -12.276738166809082

Token 20: 'ABC' (ID: 44197)
  Prédit: 'ARC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ARC' → logprob: -0.3159206509590149
    2. 'XYZ' → logprob: -1.5659205913543701
    3. '"' → logprob: -3.69092059135437
    4. 'DEF' → logprob: -5.065920829772949
    5. 'ABC' → logprob: -5.190920829772949
    6. 'AG' → logprob: -5.690920829772949
    7. '")' → logprob: -6.565920829772949
    8. 'xyz' → logprob: -6.690920829772949
    9. 'BCD' → logprob: -6.690920829772949
    10. 'R' → logprob: -6.940920829772949

Token 21: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.4736459888808895e-05
    2. '```' → logprob: -11.750014305114746
    3. '"
' → logprob: -12.875014305114746
    4. '")' → logprob: -13.250014305114746
    5. '"""' → logprob: -14.875014305114746
    6. ''' → logprob: -15.125014305114746
    7. '\n' → logprob: -15.250014305114746
    8. '"x' → logprob: -15.375014305114746
    9. '"\' → logprob: -15.500014305114746
    10. ' "' → logprob: -15.500014305114746

Token 22: 's' (ID: 82)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3505246937274933
    2. '\n' → logprob: -1.600524663925171
    3. 'newline' → logprob: -2.850524663925171
    4. '```' → logprob: -4.60052490234375
    5. '<|end|>' → logprob: -4.72552490234375
    6. '' → logprob: -5.60052490234375
    7. '\' → logprob: -5.60052490234375
    8. 'def' → logprob: -5.72552490234375
    9. 'for' → logprob: -6.22552490234375
    10. '

' → logprob: -7.10052490234375

Token 23: ' =' (ID: 314)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.014794083312153816
    2. '.' → logprob: -4.639793872833252
    3. '[t' → logprob: -6.389793872833252
    4. '(t' → logprob: -6.764793872833252
    5. '[' → logprob: -7.139793872833252
    6. 'td' → logprob: -7.389793872833252
    7. '.t' → logprob: -7.514793872833252
    8. '[:' → logprob: -10.63979434967041
    9. 'tring' → logprob: -11.13979434967041
    10. 'tr' → logprob: -11.13979434967041

Token 24: ' stdin' (ID: 75143)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.12840570509433746
    2. ' stdin' → logprob: -2.253405809402466
    3. 'input' → logprob: -4.503405570983887
    4. '(stdin' → logprob: -6.253405570983887
    5. ' input' → logprob: -6.628405570983887
    6. '""' → logprob: -7.878405570983887
    7. 's' → logprob: -9.128405570983887
    8. '''' → logprob: -9.253405570983887
    9. '.stdin' → logprob: -9.253405570983887
    10. '"' → logprob: -9.628405570983887

Token 25: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.2159753292798996
    2. '.' → logprob: -2.215975284576416
    3. '.read' → logprob: -2.465975284576416
    4. '.readlines' → logprob: -8.340975761413574
    5. 'read' → logprob: -11.090975761413574
    6. '.Read' → logprob: -11.715975761413574
    7. ' .' → logprob: -13.340975761413574
    8. '.rstrip' → logprob: -13.965975761413574
    9. '.strip' → logprob: -14.215975761413574
    10. ' readline' → logprob: -14.340975761413574

Token 26: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.031490832567214966
    2. '(' → logprob: -3.5314908027648926
    3. ')' → logprob: -7.781490802764893
    4. '().' → logprob: -8.15649127960205
    5. '`()' → logprob: -8.28149127960205
    6. '|()
' → logprob: -9.15649127960205
    7. '```' → logprob: -9.40649127960205
    8. ''s' → logprob: -9.65649127960205
    9. ']()' → logprob: -9.65649127960205
    10. ' ()' → logprob: -9.78149127960205

Token 27: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.00043102685594931245
    2. 'rstrip' → logprob: -7.750431060791016
    3. ' strip' → logprob: -15.500431060791016
    4. 'read' → logprob: -17.000431060791016
    5. 'replace' → logprob: -17.125431060791016
    6. '_strip' → logprob: -17.625431060791016
    7. '```' → logprob: -18.125431060791016
    8. 'startswith' → logprob: -18.750431060791016
    9. '-strip' → logprob: -19.000431060791016
    10. '(strip' → logprob: -20.000431060791016

Token 28: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0017616904806345701
    2. '(' → logprob: -6.3767619132995605
    3. '()
' → logprob: -10.501761436462402
    4. '()`' → logprob: -12.126761436462402
    5. ' ()' → logprob: -12.376761436462402
    6. '()>' → logprob: -12.751761436462402
    7. '`()' → logprob: -13.126761436462402
    8. '())' → logprob: -13.251761436462402
    9. '()<' → logprob: -13.251761436462402
    10. '()

' → logprob: -13.376761436462402

Token 29: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.722539834911004e-05
    2. 'p' → logprob: -9.375097274780273
    3. 'if' → logprob: -12.250097274780273
    4. '```' → logprob: -12.500097274780273
    5. '\n' → logprob: -13.500097274780273
    6. 'pr' → logprob: -14.125097274780273
    7. ' print' → logprob: -14.375097274780273
    8. '\' → logprob: -15.125097274780273
    9. 'result' → logprob: -15.625097274780273
    10. 'prin' → logprob: -15.750097274780273

Token 30: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.019994478672742844
    2. 's' → logprob: -4.894994258880615
    3. ' f' → logprob: -4.894994258880615
    4. ' ' → logprob: -5.394994258880615
    5. ' ' → logprob: -8.269994735717773
    6. 'f' → logprob: -11.394994735717773
    7. ' x' → logprob: -12.644994735717773
    8. '_s' → logprob: -12.894994735717773
    9. ' __' → logprob: -13.144994735717773
    10. '_' → logprob: -13.269994735717773

Token 31: '=="' (ID: 24027)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20184636116027832
    2. '==' → logprob: -1.7018463611602783
    3. ' =="' → logprob: -8.3268461227417
    4. '=="' → logprob: -9.2018461227417
    5. ' ' → logprob: -10.3268461227417
    6. ' !=' → logprob: -10.7018461227417
    7. '=' → logprob: -11.3268461227417
    8. '!=' → logprob: -12.0768461227417
    9. ' =='' → logprob: -12.8268461227417
    10. ' =' → logprob: -13.2018461227417

Token 32: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.008789588697254658
    2. 'ARC' → logprob: -4.758789539337158
    3. '"' → logprob: -8.758790016174316
    4. 'abc' → logprob: -12.383790016174316
    5. ' ABC' → logprob: -13.133790016174316
    6. 'XYZ' → logprob: -13.258790016174316
    7. 'A' → logprob: -13.383790016174316
    8. '"""' → logprob: -13.883790016174316
    9. 'AB' → logprob: -14.008790016174316
    10. 'ABI' → logprob: -14.258790016174316

Token 33: '":
' (ID: 9213)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22842609882354736
    2. '":' → logprob: -1.6034260988235474
    3. '):' → logprob: -6.103425979614258
    4. '"' → logprob: -8.228425979614258
    5. ':
' → logprob: -8.603425979614258
    6. ' :' → logprob: -9.228425979614258
    7. '"):' → logprob: -9.353425979614258
    8. '">' → logprob: -10.228425979614258
    9. '"]:' → logprob: -10.728425979614258
    10. ')' → logprob: -11.103425979614258

Token 34: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4567139148712158
    2. '\n' → logprob: -1.5817139148712158
    3. ' print' → logprob: -2.081713914871216
    4. '   ' → logprob: -3.706713914871216
    5. '
' → logprob: -5.456713676452637
    6. '<|end|>' → logprob: -5.831713676452637
    7. '	print' → logprob: -6.331713676452637
    8. '    
' → logprob: -7.581713676452637
    9. '#' → logprob: -8.581713676452637
    10. '\r' → logprob: -8.706713676452637

Token 35: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.4122558832168579
    2. ' print' → logprob: -1.287255883216858
    3. '   ' → logprob: -2.7872557640075684
    4. '       ' → logprob: -8.537256240844727
    5. '	print' → logprob: -11.662256240844727
    6. '\n' → logprob: -11.912256240844727
    7. ' ' → logprob: -12.912256240844727
    8. '    ' → logprob: -13.162256240844727
    9. ' s' → logprob: -13.537256240844727
    10. 's' → logprob: -13.537256240844727

Token 36: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.3361033797264099
    2. '(' → logprob: -1.3361034393310547
    3. '(f' → logprob: -3.8361034393310547
    4. '('' → logprob: -6.961103439331055
    5. '()' → logprob: -10.586103439331055
    6. '("("' → logprob: -11.461103439331055
    7. '(s' → logprob: -12.211103439331055
    8. '(F' → logprob: -12.961103439331055
    9. '("")' → logprob: -13.086103439331055
    10. '"' → logprob: -13.086103439331055

Token 37: 'ARC' (ID: 64758)
  Prédit: 'ARC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ARC' → logprob: -0.00028648413717746735
    2. 'ABC' → logprob: -8.375286102294922
    3. 'AR' → logprob: -10.875286102294922
    4. ' ARC' → logprob: -10.875286102294922
    5. 'A' → logprob: -11.250286102294922
    6. 'ARG' → logprob: -14.125286102294922
    7. '"' → logprob: -14.250286102294922
    8. 'B' → logprob: -14.625286102294922
    9. 'ARCH' → logprob: -15.125286102294922
    10. 'ARK' → logprob: -15.250286102294922

Token 38: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0003589416155591607
    2. '")
' → logprob: -8.000358581542969
    3. '")
' → logprob: -11.625358581542969
    4. ')' → logprob: -12.000358581542969
    5. ')")' → logprob: -12.375358581542969
    6. '")

' → logprob: -13.875358581542969
    7. '"' → logprob: -13.875358581542969
    8. '!")' → logprob: -14.375358581542969
    9. '()' → logprob: -14.750358581542969
    10. 'AC' → logprob: -15.250358581542969

Token 39: 'elif' (ID: 29767)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.002157399198040366
    2. 'elif' → logprob: -6.377157211303711
    3. ' else' → logprob: -7.752157211303711
    4. '<|end|>' → logprob: -11.752157211303711
    5. '```' → logprob: -12.377157211303711
    6. ')' → logprob: -12.627157211303711
    7. 'e' → logprob: -13.002157211303711
    8. '_else' → logprob: -13.502157211303711
    9. 'el' → logprob: -13.627157211303711
    10. 'elser' → logprob: -14.127157211303711

Token 40: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.25193944573402405
    2. 's' → logprob: -1.5019394159317017
    3. ' ' → logprob: -13.06443977355957
    4. '(s' → logprob: -13.31443977355957
    5. 'f' → logprob: -13.75193977355957
    6. ' ' → logprob: -13.93943977355957
    7. '0' → logprob: -14.81443977355957
    8. '	s' → logprob: -14.87693977355957
    9. '_s' → logprob: -14.93943977355957
    10. 'x' → logprob: -15.00193977355957

Token 41: '!="' (ID: 76516)
  Prédit: '=="'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=="' → logprob: -0.005010074470192194
    2. '==' → logprob: -5.38001012802124
    3. ' =="' → logprob: -8.880009651184082
    4. ' ==' → logprob: -9.005009651184082
    5. '=' → logprob: -9.630009651184082
    6. '=='' → logprob: -10.380009651184082
    7. '!="' → logprob: -11.005009651184082
    8. '="' → logprob: -12.505009651184082
    9. '==="' → logprob: -13.005009651184082
    10. '"' → logprob: -13.130009651184082

Token 42: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.16740716993808746
    2. 'ARC' → logprob: -1.9174071550369263
    3. '"' → logprob: -5.042407035827637
    4. ''' → logprob: -8.667407035827637
    5. 'abc' → logprob: -9.292407035827637
    6. ' ARC' → logprob: -9.917407035827637
    7. '")' → logprob: -10.042407035827637
    8. ' ABC' → logprob: -10.292407035827637
    9. '"""' → logprob: -10.292407035827637
    10. 'XYZ' → logprob: -10.354907035827637

Token 43: '":
' (ID: 9213)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008881637826561928
    2. ':
' → logprob: -5.008881568908691
    3. '):' → logprob: -6.258881568908691
    4. '":' → logprob: -9.258881568908691
    5. ' and' → logprob: -10.008881568908691
    6. ' :' → logprob: -10.133881568908691
    7. '):
' → logprob: -10.508881568908691
    8. ')' → logprob: -11.508881568908691
    9. 'and' → logprob: -11.758881568908691
    10. '   ' → logprob: -12.258881568908691

Token 44: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018157173180952668
    2. '       ' → logprob: -6.3768157958984375
    3. 'print' → logprob: -10.001815795898438
    4. ':' → logprob: -10.501815795898438
    5. '    ' → logprob: -11.751815795898438
    6. '    
' → logprob: -12.126815795898438
    7. '\n' → logprob: -12.501815795898438
    8. '     ' → logprob: -12.876815795898438
    9. ' print' → logprob: -12.876815795898438
    10. '
' → logprob: -13.001815795898438

Token 45: ' result' (ID: 1534)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004191417712718248
    2. ' print' → logprob: -6.0041913986206055
    3. '   ' → logprob: -6.3791913986206055
    4. '	print' → logprob: -11.879191398620605
    5. ' ' → logprob: -12.629191398620605
    6. '       ' → logprob: -12.879191398620605
    7. '```' → logprob: -13.754191398620605
    8. '    ' → logprob: -14.004191398620605
    9. 'pr' → logprob: -14.129191398620605
    10. '  ' → logprob: -14.254191398620605

Token 46: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31338900327682495
    2. ' =' → logprob: -1.3133890628814697
    3. ')' → logprob: -9.68838882446289
    4. ' ' → logprob: -11.06338882446289
    5. '(' → logprob: -11.81338882446289
    6. '.' → logprob: -12.06338882446289
    7. ':' → logprob: -12.06338882446289
    8. '=
' → logprob: -12.06338882446289
    9. ' =
' → logprob: -12.18838882446289
    10. '()' → logprob: -12.81338882446289

Token 47: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.5759588479995728
    2. 'f' → logprob: -0.8259588479995728
    3. '"' → logprob: -11.950959205627441
    4. ' ' → logprob: -12.325959205627441
    5. 's' → logprob: -12.450959205627441
    6. ''f' → logprob: -13.825959205627441
    7. ' s' → logprob: -14.325959205627441
    8. ' ' → logprob: -14.700959205627441
    9. '`' → logprob: -14.825959205627441
    10. '```' → logprob: -15.200959205627441

Token 48: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.018177801743149757
    2. '(' → logprob: -4.0181779861450195
    3. 's' → logprob: -10.76817798614502
    4. '(x' → logprob: -13.26817798614502
    5. '('' → logprob: -13.51817798614502
    6. '(
' → logprob: -14.01817798614502
    7. '("("' → logprob: -14.26817798614502
    8. '(f' → logprob: -14.51817798614502
    9. ' (' → logprob: -14.64317798614502
    10. '((' → logprob: -15.26817798614502

Token 49: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.787507714354433e-05
    2. ')
' → logprob: -10.87504768371582
    3. '))' → logprob: -11.00004768371582
    4. '")' → logprob: -12.00004768371582
    5. ' )' → logprob: -12.62504768371582
    6. ')`' → logprob: -14.25004768371582
    7. ')
' → logprob: -14.37504768371582
    8. '')' → logprob: -14.87504768371582
    9. '`)' → logprob: -15.25004768371582
    10. ')))' → logprob: -15.25004768371582

Token 50: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03551792725920677
    2. 'print' → logprob: -3.410517930984497
    3. '\n' → logprob: -7.785517692565918
    4. '   ' → logprob: -8.160517692565918
    5. '
' → logprob: -8.410517692565918
    6. '  
' → logprob: -8.535517692565918
    7. '<|end|>' → logprob: -8.785517692565918
    8. ' 
' → logprob: -9.160517692565918
    9. '    
' → logprob: -9.160517692565918
    10. '' → logprob: -9.160517692565918

Token 51: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.008987394161522388
    2. '
' → logprob: -5.6339874267578125
    3. ' print' → logprob: -6.0089874267578125
    4. '()
' → logprob: -6.7589874267578125
    5. '   ' → logprob: -7.0089874267578125
    6. '\n' → logprob: -7.6339874267578125
    7. ')
' → logprob: -9.633987426757812
    8. '()' → logprob: -9.758987426757812
    9. '\' → logprob: -9.883987426757812
    10. ')' → logprob: -10.383987426757812

Token 52: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.25265002250671387
    2. '(' → logprob: -1.5026500225067139
    3. '("("' → logprob: -7.252650260925293
    4. '('' → logprob: -12.252650260925293
    5. ' (' → logprob: -13.002650260925293
    6. '(f' → logprob: -13.627650260925293
    7. '("' → logprob: -14.377650260925293
    8. '()' → logprob: -14.377650260925293
    9. '("")' → logprob: -14.627650260925293
    10. '((' → logprob: -14.877650260925293

Token 53: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. '")' → logprob: -14.375001907348633
    3. ' )' → logprob: -15.250001907348633
    4. '))' → logprob: -15.250001907348633
    5. ')
' → logprob: -16.250001907348633
    6. '()' → logprob: -16.500001907348633
    7. '`)' → logprob: -16.750001907348633
    8. '')' → logprob: -17.000001907348633
    9. ')")' → logprob: -17.125001907348633
    10. '())' → logprob: -17.750001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 51
Tokens correctement prédits (1ère position, stricte): 18
Tokens correctement prédits (1ère position, avec adaptation): 20
Tokens correctement prédits (top 10): 37
Précision stricte (1ère position): 35.29%
Précision adaptée (1ère position): 39.22%
Précision (top 10): 72.55%
================================================================================
