================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:04
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from numpy import array, sort, sum as npsum

def getNM():
    n, m = map(int, input().split())
    return n, m

def getPoints(n):
    res = [[] for _ in range(3)]
    for _ in range(n):
        line = input().split()
        for idx, val in enumerate(line):
            res[idx].append(int(val))
    return tuple(array(r) for r in res)

class XYZCombinator:
    def __init__(self, x, y, z):
        self.arrs = [x, y, z]

    def build(self):
        ops = [
            (1, 1, 1), (1, 1, -1), (1, -1, -1), (1, -1, 1),
            (-1, -1, 1), (-1, 1, 1), (-1, 1, -1), (-1, -1, -1)
        ]
        v = []
        for o in ops:
            combined = o[0] * self.arrs[0] + o[1] * self.arrs[1] + o[2] * self.arrs[2]
            v.append(combined)
        return v

def takeTopSum(arr, m):
    return npsum(sort(arr)[::-1][:m])

if __name__ == '__main__':
    N, M = getNM()             # Procedural
    x, y, z = getPoints(N)     # Functional
    xyz = XYZCombinator(x, y, z).build()   # OOP
    score = [takeTopSum(arr, M) for arr in xyz]   # List Comprehension
    print(max(score))          # Script/block style
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' numpy' (ID: 19529)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' array' (ID: 2644)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.2554076611995697
    2. ' array' → logprob: -1.505407691001892
    3. 'random' → logprob: -6.130407810211182
    4. ' random' → logprob: -7.130407810211182
    5. ' as' → logprob: -8.005407333374023
    6. '*' → logprob: -9.755407333374023
    7. 'as' → logprob: -10.630407333374023
    8. ' ndarray' → logprob: -11.130407333374023
    9. 'empty' → logprob: -11.380407333374023
    10. ' numpy' → logprob: -11.755407333374023

Token 4: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005324954632669687
    2. '.' → logprob: -5.380324840545654
    3. ',' → logprob: -8.630325317382812
    4. '(
' → logprob: -8.630325317382812
    5. '\(' → logprob: -8.755325317382812
    6. '[' → logprob: -10.005325317382812
    7. 'a' → logprob: -10.630325317382812
    8. '\' → logprob: -11.005325317382812
    9. 'import' → logprob: -11.130325317382812
    10. '#' → logprob: -11.380325317382812

Token 5: ' sort' (ID: 4506)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.6183037161827087
    2. 'zeros' → logprob: -2.2433037757873535
    3. 'empty' → logprob: -2.6183037757873535
    4. 'as' → logprob: -2.7433037757873535
    5. 'nd' → logprob: -3.1183037757873535
    6. 'random' → logprob: -3.3683037757873535
    7. ' dot' → logprob: -3.4933037757873535
    8. 'ar' → logprob: -3.7433037757873535
    9. 'reshape' → logprob: -3.8683037757873535
    10. 'l' → logprob: -4.1183037757873535

Token 6: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005628037615679204
    2. '.' → logprob: -8.25056266784668
    3. '\(' → logprob: -8.75056266784668
    4. ',' → logprob: -9.87556266784668
    5. '(
' → logprob: -10.25056266784668
    6. '\' → logprob: -11.37556266784668
    7. 'a' → logprob: -11.50056266784668
    8. '[' → logprob: -11.50056266784668
    9. 'import' → logprob: -12.37556266784668
    10. ' (' → logprob: -12.87556266784668

Token 7: ' sum' (ID: 4215)
  Prédit: 'unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'unique' → logprob: -1.385650396347046
    2. 'where' → logprob: -1.885650396347046
    3. 'args' → logprob: -2.010650396347046
    4. ' unique' → logprob: -2.510650396347046
    5. 'search' → logprob: -2.635650396347046
    6. ' args' → logprob: -2.635650396347046
    7. ' search' → logprob: -2.635650396347046
    8. ' where' → logprob: -3.135650396347046
    9. ' concatenate' → logprob: -3.510650396347046
    10. 'arg' → logprob: -4.260650634765625

Token 8: ' as' (ID: 472)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0028851181268692017
    2. '(
' → logprob: -6.252885341644287
    3. ',' → logprob: -7.877885341644287
    4. '\(' → logprob: -8.627884864807129
    5. '#' → logprob: -9.002884864807129
    6. '.' → logprob: -9.127884864807129
    7. '(

' → logprob: -10.377884864807129
    8. '\' → logprob: -10.502884864807129
    9. 'a' → logprob: -10.877884864807129
    10. '[' → logprob: -11.502884864807129

Token 9: ' n' (ID: 297)
  Prédit: ' numpy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' numpy' → logprob: -0.3847254812717438
    2. ' np' → logprob: -1.8847254514694214
    3. 'np' → logprob: -2.509725570678711
    4. 'numpy' → logprob: -2.634725570678711
    5. '_numpy' → logprob: -4.384725570678711
    6. '_np' → logprob: -8.134725570678711
    7. '```' → logprob: -8.134725570678711
    8. ' s' → logprob: -8.509725570678711
    9. 's' → logprob: -8.634725570678711
    10. 'array' → logprob: -9.134725570678711

Token 10: 'psum' (ID: 65853)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.368711233139038
    2. 'sum' → logprob: -1.368711233139038
    3. 'umpy' → logprob: -2.493711233139038
    4. 'd' → logprob: -2.493711233139038
    5. 'um' → logprob: -2.618711233139038
    6. 'n' → logprob: -3.243711233139038
    7. 'orm' → logprob: -3.368711233139038
    8. 'm' → logprob: -3.493711233139038
    9. 'psum' → logprob: -3.493711233139038
    10. 'array' → logprob: -4.743711471557617

Token 11: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02107628621160984
    2. '.' → logprob: -4.021076202392578
    3. ',' → logprob: -6.646076202392578
    4. '\(' → logprob: -6.896076202392578
    5. '\' → logprob: -8.521076202392578
    6. '(
' → logprob: -8.646076202392578
    7. '#' → logprob: -9.896076202392578
    8. 'import' → logprob: -10.271076202392578
    9. 'a' → logprob: -10.771076202392578
    10. '\n' → logprob: -10.896076202392578

Token 12: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12432029843330383
    2. '.' → logprob: -3.4993202686309814
    3. ',' → logprob: -3.7493202686309814
    4. '[' → logprob: -4.3743205070495605
    5. 'a' → logprob: -4.3743205070495605
    6. '(
' → logprob: -4.4993205070495605
    7. '\' → logprob: -5.2493205070495605
    8. 'n' → logprob: -5.8743205070495605
    9. '`' → logprob: -5.9993205070495605
    10. '```' → logprob: -6.1243205070495605

Token 13: ' get' (ID: 717)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.9985565543174744
    2. ' my' → logprob: -1.6235566139221191
    3. ' sort' → logprob: -1.9985566139221191
    4. ' ' → logprob: -2.373556613922119
    5. ' array' → logprob: -3.248556613922119
    6. ' process' → logprob: -3.498556613922119
    7. ' factorial' → logprob: -3.623556613922119
    8. ' add' → logprob: -3.748556613922119
    9. ' compute' → logprob: -3.748556613922119
    10. ' foo' → logprob: -4.248556613922119

Token 14: 'NM' (ID: 63892)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1769018173217773
    2. '_array' → logprob: -1.1769018173217773
    3. '_max' → logprob: -1.4269018173217773
    4. '_sorted' → logprob: -2.5519018173217773
    5. '_sum' → logprob: -4.426901817321777
    6. '_elements' → logprob: -5.051901817321777
    7. '_unique' → logprob: -5.301901817321777
    8. '_data' → logprob: -5.676901817321777
    9. '_indices' → logprob: -6.051901817321777
    10. '_values' → logprob: -6.176901817321777

Token 15: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.024804651737213135
    2. '(n' → logprob: -4.649804592132568
    3. '(N' → logprob: -5.274804592132568
    4. '()' → logprob: -6.024804592132568
    5. '(x' → logprob: -6.649804592132568
    6. '(a' → logprob: -7.024804592132568
    7. '(num' → logprob: -7.274804592132568
    8. '(int' → logprob: -7.774804592132568
    9. 'ber' → logprob: -8.274805068969727
    10. 'def' → logprob: -8.274805068969727

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12780332565307617
    2. '(' → logprob: -3.127803325653076
    3. ' ' → logprob: -4.252803325653076
    4. '(n' → logprob: -4.377803325653076
    5. ' (' → logprob: -4.377803325653076
    6. '()' → logprob: -4.877803325653076
    7. ' return' → logprob: -5.002803325653076
    8. 'n' → logprob: -5.377803325653076
    9. '<|end|>' → logprob: -6.002803325653076
    10. 'return' → logprob: -6.252803325653076

Token 17: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.41455087065696716
    2. 'return' → logprob: -1.6645509004592896
    3. '   ' → logprob: -2.41455078125
    4. 'x' → logprob: -4.16455078125
    5. ' return' → logprob: -4.16455078125
    6. '```' → logprob: -4.28955078125
    7. ' n' → logprob: -5.16455078125
    8. 'r' → logprob: -5.91455078125
    9. 'N' → logprob: -6.03955078125
    10. 'a' → logprob: -6.66455078125

Token 18: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7354065775871277
    2. ' =' → logprob: -0.8604065775871277
    3. '=' → logprob: -2.4854066371917725
    4. ' ' → logprob: -5.360406398773193
    5. 'm' → logprob: -5.860406398773193
    6. ' ,' → logprob: -5.985406398773193
    7. ',m' → logprob: -6.735406398773193
    8. 'um' → logprob: -6.985406398773193
    9. '   ' → logprob: -7.110406398773193
    10. 'M' → logprob: -8.360406875610352

Token 19: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.25193992257118225
    2. 'm' → logprob: -1.5019398927688599
    3. ' ' → logprob: -12.37693977355957
    4. ' k' → logprob: -14.25193977355957
    5. '_m' → logprob: -14.62693977355957
    6. 'k' → logprob: -14.87693977355957
    7. ' ' → logprob: -14.93943977355957
    8. '	m' → logprob: -15.00193977355957
    9. ' r' → logprob: -15.00193977355957
    10. '   ' → logprob: -15.25193977355957

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005260799080133438
    2. '=' → logprob: -5.255260944366455
    3. ',' → logprob: -10.755260467529297
    4. ')' → logprob: -13.505260467529297
    5. ' ' → logprob: -13.505260467529297
    6. ' ,' → logprob: -14.130260467529297
    7. '<|end|>' → logprob: -14.380260467529297
    8. '  ' → logprob: -14.755260467529297
    9. ' =
' → logprob: -15.505260467529297
    10. ' =)' → logprob: -15.755260467529297

Token 21: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.15012168884277344
    2. 'map' → logprob: -2.2751216888427734
    3. ' input' → logprob: -3.7751216888427734
    4. 'input' → logprob: -4.525121688842773
    5. ' ' → logprob: -6.525121688842773
    6. ' list' → logprob: -7.775121688842773
    7. '0' → logprob: -8.275121688842773
    8. 'list' → logprob: -8.900121688842773
    9. '[' → logprob: -9.150121688842773
    10. ' [' → logprob: -9.275121688842773

Token 22: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.01617712713778019
    2. '(' → logprob: -4.266177177429199
    3. 'int' → logprob: -6.891177177429199
    4. '(str' → logprob: -8.1411771774292
    5. '(input' → logprob: -8.1411771774292
    6. '(lambda' → logprob: -8.1411771774292
    7. 'input' → logprob: -10.3911771774292
    8. '<int' → logprob: -10.6411771774292
    9. '[int' → logprob: -11.2661771774292
    10. '(
' → logprob: -11.7661771774292

Token 23: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9536822438240051
    2. 'input' → logprob: -1.2036821842193604
    3. '(input' → logprob: -1.2036821842193604
    4. ' input' → logprob: -4.4536824226379395
    5. '(' → logprob: -6.9536824226379395
    6. ',input' → logprob: -6.9536824226379395
    7. ',' → logprob: -7.9536824226379395
    8. '=input' → logprob: -8.078681945800781
    9. ' )' → logprob: -9.453681945800781
    10. '))' → logprob: -9.828681945800781

Token 24: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.20176656544208527
    2. 'input' → logprob: -1.7017666101455688
    3. ')' → logprob: -8.076766967773438
    4. ' )' → logprob: -10.451766967773438
    5. '(input' → logprob: -12.076766967773438
    6. ' ' → logprob: -12.326766967773438
    7. '=input' → logprob: -13.326766967773438
    8. ',input' → logprob: -14.451766967773438
    9. '	input' → logprob: -14.701766967773438
    10. '<input' → logprob: -15.826766967773438

Token 25: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.011815168894827366
    2. '()' → logprob: -4.886815071105957
    3. '())' → logprob: -5.511815071105957
    4. '()))' → logprob: -9.011815071105957
    5. '());' → logprob: -11.636815071105957
    6. ')' → logprob: -12.261815071105957
    7. '('' → logprob: -12.386815071105957
    8. '("' → logprob: -12.636815071105957
    9. '()
' → logprob: -12.761815071105957
    10. '()>' → logprob: -12.886815071105957

Token 26: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00020687808864749968
    2. 'strip' → logprob: -8.50020694732666
    3. 'rstrip' → logprob: -13.25020694732666
    4. ' split' → logprob: -13.75020694732666
    5. '(split' → logprob: -15.25020694732666
    6. 'read' → logprob: -15.75020694732666
    7. 'spl' → logprob: -16.250205993652344
    8. ')' → logprob: -17.875205993652344
    9. 'rs' → logprob: -19.000205993652344
    10. '```' → logprob: -19.250205993652344

Token 27: '())
' (ID: 4574)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.4414893686771393
    2. ')' → logprob: -1.066489338874817
    3. '())' → logprob: -4.816489219665527
    4. '()))' → logprob: -5.441489219665527
    5. '()' → logprob: -8.441489219665527
    6. '),' → logprob: -11.066489219665527
    7. ')))' → logprob: -11.316489219665527
    8. ''))' → logprob: -11.441489219665527
    9. '))
' → logprob: -11.691489219665527
    10. ')
' → logprob: -13.316489219665527

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3801809847354889
    2. '
' → logprob: -2.880181074142456
    3. '\n' → logprob: -2.880181074142456
    4. '<|end|>' → logprob: -3.255181074142456
    5. '    
' → logprob: -3.505181074142456
    6. ')' → logprob: -3.755181074142456
    7. ':' → logprob: -4.005180835723877
    8. ':return' → logprob: -4.130180835723877
    9. '	return' → logprob: -4.505180835723877
    10. 'return' → logprob: -4.505180835723877

Token 29: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1595400869846344
    2. 'return' (adapté à ' return') → logprob: -2.7845401763916016
    3. '<|end|>' → logprob: -2.7845401763916016
    4. ' return' → logprob: -4.034540176391602
    5. '<|end|>' → logprob: -6.784540176391602
    6. 'n' → logprob: -6.909540176391602
    7. '	return' → logprob: -7.284540176391602
    8. ')' → logprob: -7.409540176391602
    9. '    
' → logprob: -7.534540176391602
    10. '    ' → logprob: -7.784540176391602

Token 30: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2623978853225708
    2. 'n' → logprob: -1.8873978853225708
    3. ' array' → logprob: -3.1373977661132812
    4. 'array' → logprob: -3.5123977661132812
    5. ' (' → logprob: -5.512397766113281
    6. ' ' → logprob: -6.887397766113281
    7. '(n' → logprob: -7.512397766113281
    8. '(array' → logprob: -8.137397766113281
    9. '  ' → logprob: -10.012397766113281
    10. '   ' → logprob: -10.137397766113281

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022694433573633432
    2. ',m' → logprob: -6.877269268035889
    3. ' ,' → logprob: -7.002269268035889
    4. ',n' → logprob: -8.502269744873047
    5. '<|end|>' → logprob: -9.752269744873047
    6. ' ' → logprob: -10.627269744873047
    7. ',
' → logprob: -10.752269744873047
    8. ')' → logprob: -12.627269744873047
    9. ' m' → logprob: -13.127269744873047
    10. 'm' → logprob: -13.377269744873047

Token 32: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.06993710249662399
    2. 'm' → logprob: -2.694936990737915
    3. ' ' → logprob: -14.444936752319336
    4. 'space' → logprob: -15.694936752319336
    5. ' ' → logprob: -16.819936752319336
    6. '	m' → logprob: -18.069936752319336
    7. '    ' → logprob: -18.319936752319336
    8. ' space' → logprob: -18.319936752319336
    9. '```' → logprob: -18.444936752319336
    10. '32' → logprob: -19.132436752319336

Token 33: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2630824148654938
    2. '\n' → logprob: -1.7630823850631714
    3. '\' → logprob: -4.013082504272461
    4. 'n' → logprob: -4.513082504272461
    5. '```' → logprob: -4.638082504272461
    6. '<|end|>' → logprob: -4.888082504272461
    7. '' → logprob: -6.138082504272461
    8. 'newline' → logprob: -6.263082504272461
    9. ' 
' → logprob: -6.388082504272461
    10. '    
' → logprob: -6.513082504272461

Token 34: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.23661747574806213
    2. '
' → logprob: -1.7366174459457397
    3. '

' → logprob: -4.236617565155029
    4. '```' → logprob: -4.986617565155029
    5. 'n' → logprob: -5.111617565155029
    6. '\n' → logprob: -6.236617565155029
    7. '\' → logprob: -6.361617565155029
    8. 'd' → logprob: -7.236617565155029
    9. '<|end|>' → logprob: -7.361617565155029
    10. 'x' → logprob: -7.986617565155029

Token 35: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.10184568166732788
    2. ' get' → logprob: -2.9768457412719727
    3. ' solve' → logprob: -3.8518457412719727
    4. ' sort' → logprob: -4.601845741271973
    5. ' calculate' → logprob: -5.976845741271973
    6. ' process' → logprob: -6.101845741271973
    7. ' array' → logprob: -6.351845741271973
    8. ' find' → logprob: -6.476845741271973
    9. ' max' → logprob: -6.601845741271973
    10. 'main' → logprob: -6.976845741271973

Token 36: 'Points' (ID: 14117)
  Prédit: '_array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.2889236509799957
    2. 'array' → logprob: -2.038923740386963
    3. 'Array' → logprob: -3.788923740386963
    4. '_data' → logprob: -3.913923740386963
    5. '_input' → logprob: -4.038923740386963
    6. '_arr' → logprob: -4.288923740386963
    7. '_list' → logprob: -4.663923740386963
    8. 'arr' → logprob: -5.038923740386963
    9. 'A' → logprob: -5.663923740386963
    10. '_arrays' → logprob: -5.663923740386963

Token 37: '(n' (ID: 2406)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00022129806166049093
    2. '()' → logprob: -9.125221252441406
    3. '(' → logprob: -9.500221252441406
    4. ' ():' → logprob: -10.625221252441406
    5. '():
' → logprob: -13.000221252441406
    6. '()(' → logprob: -13.375221252441406
    7. '(points' → logprob: -13.750221252441406
    8. '()">' → logprob: -14.375221252441406
    9. '()*' → logprob: -14.750221252441406
    10. '```' → logprob: -14.875221252441406

Token 38: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00022690063633490354
    2. '):
' → logprob: -9.125226974487305
    3. ')' → logprob: -9.375226974487305
    4. ' ):' → logprob: -11.250226974487305
    5. ',' → logprob: -11.500226974487305
    6. ':' → logprob: -12.625226974487305
    7. '=' → logprob: -12.875226974487305
    8. '):
' → logprob: -13.000226974487305
    9. '   ' → logprob: -15.000226974487305
    10. ' ' → logprob: -15.750226974487305

Token 39: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03082180581986904
    2. ' points' → logprob: -3.9058218002319336
    3. '	points' → logprob: -5.155821800231934
    4. 'points' → logprob: -5.655821800231934
    5. '_points' → logprob: -7.780821800231934
    6. '(points' → logprob: -8.655821800231934
    7. '    ' → logprob: -9.030821800231934
    8. '   ' → logprob: -10.280821800231934
    9. ' return' → logprob: -10.405821800231934
    10. '[' → logprob: -10.655821800231934

Token 40: ' res' (ID: 694)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.09456741809844971
    2. 'points' → logprob: -2.46956729888916
    3. ' return' → logprob: -5.84456729888916
    4. '   ' → logprob: -6.46956729888916
    5. 'return' → logprob: -7.59456729888916
    6. ' [' → logprob: -9.09456729888916
    7. '[' → logprob: -9.34456729888916
    8. '	points' → logprob: -9.46956729888916
    9. ' array' → logprob: -9.59456729888916
    10. ' pts' → logprob: -9.84456729888916

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3936326205730438
    2. 'ult' → logprob: -1.3936326503753662
    3. '=' → logprob: -2.768632650375366
    4. 'ults' → logprob: -4.393632411956787
    5. 'ul' → logprob: -7.018632411956787
    6. '=[]' → logprob: -7.268632411956787
    7. 'u' → logprob: -9.018632888793945
    8. 'uls' → logprob: -9.893632888793945
    9. 'ultat' → logprob: -9.893632888793945
    10. '=[]
' → logprob: -10.018632888793945

Token 42: ' [[]' (ID: 182908)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.34888771176338196
    2. '[]' → logprob: -1.9738876819610596
    3. ' [' → logprob: -2.4738876819610596
    4. '[array' → logprob: -2.7238876819610596
    5. '[' → logprob: -5.348887920379639
    6. 'array' → logprob: -7.848887920379639
    7. ' array' → logprob: -8.09888744354248
    8. ' ' → logprob: -9.09888744354248
    9. ' [];' → logprob: -10.97388744354248
    10. '[n' → logprob: -11.22388744354248

Token 43: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20498035848140717
    2. 'for' → logprob: -1.7049803733825684
    3. ']' → logprob: -5.704980373382568
    4. ')' → logprob: -8.95497989654541
    5. ',' → logprob: -9.95497989654541
    6. ' ]' → logprob: -10.70497989654541
    7. ' ' → logprob: -11.70497989654541
    8. '   ' → logprob: -11.82997989654541
    9. '	for' → logprob: -11.95497989654541
    10. '()' → logprob: -13.20497989654541

Token 44: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.005361109972000122
    2. ' _' → logprob: -5.255361080169678
    3. ' range' → logprob: -9.255361557006836
    4. '_range' → logprob: -11.130361557006836
    5. 'range' → logprob: -11.505361557006836
    6. ' ' → logprob: -12.255361557006836
    7. ' i' → logprob: -13.630361557006836
    8. '_i' → logprob: -14.755361557006836
    9. 'i' → logprob: -14.880361557006836
    10. '(range' → logprob: -15.130361557006836

Token 45: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.04038273170590401
    2. ' in' → logprob: -3.4153826236724854
    3. 'range' → logprob: -5.0403828620910645
    4. 'ange' → logprob: -8.790382385253906
    5. 'n' → logprob: -9.915382385253906
    6. ' ' → logprob: -11.040382385253906
    7. 'i' → logprob: -11.665382385253906
    8. ' range' → logprob: -12.040382385253906
    9. '_' → logprob: -12.790382385253906
    10. '0' → logprob: -13.165382385253906

Token 46: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009120595059357584
    2. ' range' → logprob: -7.000912189483643
    3. '(range' → logprob: -15.000911712646484
    4. '	range' → logprob: -16.250911712646484
    5. ' ' → logprob: -17.125911712646484
    6. ')' → logprob: -17.250911712646484
    7. '   ' → logprob: -17.500911712646484
    8. 'rang' → logprob: -18.250911712646484
    9. '```' → logprob: -18.375911712646484
    10. '  ' → logprob: -18.375911712646484

Token 47: '(' (ID: 7)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0003805064770858735
    2. '(' → logprob: -7.875380516052246
    3. ' (' → logprob: -15.250380516052246
    4. 'n' → logprob: -17.00037956237793
    5. ')' → logprob: -17.12537956237793
    6. ')n' → logprob: -17.50037956237793
    7. '(
' → logprob: -18.25037956237793
    8. ' n' → logprob: -19.00037956237793
    9. ')(' → logprob: -19.50037956237793
    10. '((' → logprob: -20.12537956237793

Token 48: '3' (ID: 18)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.2664456789934775e-06
    2. ' n' → logprob: -13.875000953674316
    3. '(n' → logprob: -15.500000953674316
    4. ')n' → logprob: -16.000001907348633
    5. '	n' → logprob: -20.125001907348633
    6. '(' → logprob: -21.625001907348633
    7. ')' → logprob: -21.750001907348633
    8. '_n' → logprob: -22.250001907348633
    9. '0' → logprob: -22.500001907348633
    10. ',n' → logprob: -23.250001907348633

Token 49: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.7372048862162046e-05
    2. ']' → logprob: -11.250027656555176
    3. ')' → logprob: -12.000027656555176
    4. ' )' → logprob: -12.500027656555176
    5. ')]
' → logprob: -13.375027656555176
    6. ' ]' → logprob: -14.500027656555176
    7. ')],' → logprob: -14.625027656555176
    8. ' ' → logprob: -15.250027656555176
    9. '   ' → logprob: -15.375027656555176
    10. ')])' → logprob: -15.625027656555176

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2949402630329132
    2. ' for' → logprob: -1.6699402332305908
    3. 'for' → logprob: -2.919940233230591
    4. '	for' → logprob: -4.79494047164917
    5. '
' → logprob: -6.16994047164917
    6. '    
' → logprob: -6.54494047164917
    7. '<|end|>' → logprob: -7.66994047164917
    8. ' ' → logprob: -8.294939994812012
    9. '  
' → logprob: -8.794939994812012
    10. '```' → logprob: -9.419939994812012

Token 51: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0763750821352005
    2. ' for' → logprob: -2.7013750076293945
    3. '   ' → logprob: -5.0763750076293945
    4. 'points' → logprob: -9.701375007629395
    5. '	for' → logprob: -10.201375007629395
    6. 'i' → logprob: -10.451375007629395
    7. 'n' → logprob: -10.826375007629395
    8. ' points' → logprob: -11.701375007629395
    9. '```' → logprob: -12.201375007629395
    10. ' ' → logprob: -12.451375007629395

Token 52: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.2560723125934601
    2. '_' → logprob: -1.5060722827911377
    3. ' i' → logprob: -5.506072521209717
    4. ' ' → logprob: -10.131072044372559
    5. ' ' → logprob: -11.131072044372559
    6. ' range' → logprob: -11.381072044372559
    7. '_i' → logprob: -13.131072044372559
    8. ' n' → logprob: -13.256072044372559
    9. 'i' → logprob: -13.381072044372559
    10. '_range' → logprob: -15.006072044372559

Token 53: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08925122022628784
    2. 'in' → logprob: -2.4642512798309326
    3. 'range' → logprob: -9.339251518249512
    4. ' ' → logprob: -9.464251518249512
    5. 'import' → logprob: -9.464251518249512
    6. '  ' → logprob: -11.089251518249512
    7. 'n' → logprob: -11.464251518249512
    8. 'i' → logprob: -12.464251518249512
    9. '   ' → logprob: -12.714251518249512
    10. 'In' → logprob: -12.714251518249512

Token 54: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002485765377059579
    2. ' range' → logprob: -6.002485752105713
    3. '(range' → logprob: -11.752486228942871
    4. '	range' → logprob: -14.752486228942871
    5. ')' → logprob: -15.502486228942871
    6. ' ' → logprob: -15.502486228942871
    7. 'n' → logprob: -15.752486228942871
    8. 'ran' → logprob: -15.877486228942871
    9. '```' → logprob: -15.877486228942871
    10. 'in' → logprob: -16.002485275268555

Token 55: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -6.659005157416686e-05
    2. '(' → logprob: -9.625066757202148
    3. ' (' → logprob: -15.000066757202148
    4. 'n' → logprob: -16.12506675720215
    5. ' n' → logprob: -18.37506675720215
    6. '(int' → logprob: -20.37506675720215
    7. ' ' → logprob: -20.62506675720215
    8. ')' → logprob: -20.75006675720215
    9. '	n' → logprob: -20.87506675720215
    10. '(
' → logprob: -21.00006675720215

Token 56: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0033849377650767565
    2. ')' → logprob: -5.753385066986084
    3. ':' → logprob: -9.378384590148926
    4. '):
' → logprob: -9.753384590148926
    5. ' ):' → logprob: -9.878384590148926
    6. '   ' → logprob: -12.128384590148926
    7. '():' → logprob: -12.753384590148926
    8. ']:' → logprob: -13.753384590148926
    9. ' )' → logprob: -13.753384590148926
    10. ' ' → logprob: -14.253384590148926

Token 57: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00824540201574564
    2. '    ' → logprob: -5.258245468139648
    3. '   ' → logprob: -6.508245468139648
    4. '        
' → logprob: -8.133245468139648
    5. ' ' → logprob: -8.383245468139648
    6. '      ' → logprob: -8.633245468139648
    7. '        ' → logprob: -8.883245468139648
    8. ' points' → logprob: -9.133245468139648
    9. '```' → logprob: -9.633245468139648
    10. '    
' → logprob: -9.758245468139648

Token 58: ' line' (ID: 2543)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.09416953474283218
    2. ' x' → logprob: -2.4691696166992188
    3. 'p' → logprob: -5.844169616699219
    4. 'a' → logprob: -7.219169616699219
    5. '   ' → logprob: -7.344169616699219
    6. ' p' → logprob: -7.844169616699219
    7. ' points' → logprob: -8.969169616699219
    8. 'points' → logprob: -9.094169616699219
    9. 's' → logprob: -9.844169616699219
    10. ' a' → logprob: -10.094169616699219

Token 59: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34848976135253906
    2. ' =' → logprob: -1.223489761352539
    3. '=input' → logprob: -10.848489761352539
    4. ')' → logprob: -11.973489761352539
    5. '=line' → logprob: -11.973489761352539
    6. 's' → logprob: -12.223489761352539
    7. ',' → logprob: -13.598489761352539
    8. '()' → logprob: -13.598489761352539
    9. '_' → logprob: -13.723489761352539
    10. '=list' → logprob: -14.223489761352539

Token 60: ' input' (ID: 3422)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.5880626440048218
    2. ' input' → logprob: -1.3380626440048218
    3. 'input' → logprob: -2.3380627632141113
    4. 'list' → logprob: -2.4630627632141113
    5. ' map' → logprob: -7.963062763214111
    6. 'map' → logprob: -8.963062286376953
    7. ' tuple' → logprob: -10.713062286376953
    8. '[input' → logprob: -10.963062286376953
    9. '[' → logprob: -11.338062286376953
    10. 'tuple' → logprob: -11.838062286376953

Token 61: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.023249788209795952
    2. '()' → logprob: -3.773249864578247
    3. '(' → logprob: -13.273249626159668
    4. '())' → logprob: -13.398249626159668
    5. '()
' → logprob: -15.273249626159668
    6. ' ().' → logprob: -15.523249626159668
    7. ' ()' → logprob: -15.648249626159668
    8. '()

' → logprob: -15.898249626159668
    9. ')' → logprob: -16.648250579833984
    10. '()`' → logprob: -17.148250579833984

Token 62: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.20158018171787262
    2. 'strip' → logprob: -1.7015801668167114
    3. 'rstrip' → logprob: -8.701580047607422
    4. ' split' → logprob: -14.576580047607422
    5. 'spl' → logprob: -16.951580047607422
    6. ' strip' → logprob: -17.451580047607422
    7. 'rs' → logprob: -18.326580047607422
    8. 'str' → logprob: -19.326580047607422
    9. '(split' → logprob: -19.701580047607422
    10. 'replace' → logprob: -20.076580047607422

Token 63: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004330541472882032
    2. '(' → logprob: -5.504330635070801
    3. '('' → logprob: -8.3793306350708
    4. '())' → logprob: -11.8793306350708
    5. '("("' → logprob: -12.0043306350708
    6. '()]' → logprob: -13.2543306350708
    7. '()`' → logprob: -13.7543306350708
    8. '();' → logprob: -14.0043306350708
    9. ' ()' → logprob: -14.2543306350708
    10. '()
' → logprob: -14.2543306350708

Token 64: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15314167737960815
    2. '<|end|>' → logprob: -2.028141736984253
    3. '   ' → logprob: -5.278141498565674
    4. ' ' → logprob: -6.528141498565674
    5. '<|end|>' → logprob: -6.903141498565674
    6. ')' → logprob: -6.903141498565674
    7. '        
' → logprob: -7.528141498565674
    8. ',' → logprob: -8.028141975402832
    9. '    ' → logprob: -8.528141975402832
    10. '      ' → logprob: -8.653141975402832

Token 65: ' for' (ID: 395)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6026007533073425
    2. 'res' → logprob: -1.3526008129119873
    3. ' res' → logprob: -2.4776008129119873
    4. ' x' → logprob: -3.1026008129119873
    5. 'for' (adapté à ' for') → logprob: -3.4776008129119873
    6. ' for' → logprob: -3.8526008129119873
    7. '       ' → logprob: -5.102600574493408
    8. 'points' → logprob: -5.852600574493408
    9. '   ' → logprob: -6.977600574493408
    10. 'p' → logprob: -7.102600574493408

Token 66: ' idx' (ID: 14016)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.04107379540801048
    2. 'i' → logprob: -3.291073799133301
    3. ' j' → logprob: -6.541073799133301
    4. ' idx' → logprob: -7.291073799133301
    5. ' range' → logprob: -7.916073799133301
    6. 'j' → logprob: -8.5410737991333
    7. 'range' → logprob: -8.5410737991333
    8. 'idx' → logprob: -9.1660737991333
    9. ' ' → logprob: -10.7910737991333
    10. ' index' → logprob: -12.4160737991333

Token 67: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.18955868482589722
    2. 'in' → logprob: -2.189558744430542
    3. ',' → logprob: -2.814558744430542
    4. ' ,' → logprob: -7.689558506011963
    5. ' ' → logprob: -8.689558982849121
    6. '	in' → logprob: -9.439558982849121
    7. '_in' → logprob: -11.439558982849121
    8. ')' → logprob: -11.564558982849121
    9. '  ' → logprob: -11.939558982849121
    10. '=' → logprob: -11.939558982849121

Token 68: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.4366338551044464
    2. ' val' → logprob: -1.436633825302124
    3. 'x' → logprob: -2.811633825302124
    4. 'v' → logprob: -3.311633825302124
    5. 'value' → logprob: -5.061634063720703
    6. 'num' → logprob: -5.686634063720703
    7. 'p' → logprob: -5.686634063720703
    8. ' x' → logprob: -6.686634063720703
    9. ' v' → logprob: -6.936634063720703
    10. 'point' → logprob: -7.311634063720703

Token 69: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.049284927546978
    2. 'in' → logprob: -3.0492849349975586
    3. ' ' → logprob: -7.424284934997559
    4. ',' → logprob: -9.799284934997559
    5. ')' → logprob: -11.049284934997559
    6. '	in' → logprob: -11.299284934997559
    7. '  ' → logprob: -12.299284934997559
    8. '_in' → logprob: -12.799284934997559
    9. '<|end|>' → logprob: -13.299284934997559
    10. 's' → logprob: -13.924284934997559

Token 70: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.06200353056192398
    2. ' enumerate' → logprob: -2.8120036125183105
    3. 'enum' → logprob: -11.562003135681152
    4. 'em' → logprob: -11.937003135681152
    5. 'umer' → logprob: -12.187003135681152
    6. 'en' → logprob: -12.187003135681152
    7. '(en' → logprob: -12.187003135681152
    8. 'enu' → logprob: -13.937003135681152
    9. '```' → logprob: -14.562003135681152
    10. 'ex' → logprob: -14.812003135681152

Token 71: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -2.816093228830141e-06
    2. '(' → logprob: -13.37500286102295
    3. 'line' → logprob: -14.62500286102295
    4. '=line' → logprob: -15.12500286102295
    5. ' line' → logprob: -15.62500286102295
    6. '[line' → logprob: -16.625001907348633
    7. '(val' → logprob: -17.125001907348633
    8. '#line' → logprob: -17.375001907348633
    9. ',line' → logprob: -17.500001907348633
    10. '(range' → logprob: -17.625001907348633

Token 72: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0033914719242602587
    2. ':' → logprob: -6.003391265869141
    3. '):
' → logprob: -7.378391265869141
    4. '():' → logprob: -8.87839126586914
    5. ' ):' → logprob: -9.12839126586914
    6. '       ' → logprob: -12.12839126586914
    7. '[' → logprob: -12.12839126586914
    8. ')' → logprob: -12.50339126586914
    9. '[:-' → logprob: -12.50339126586914
    10. '   ' → logprob: -12.62839126586914

Token 73: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16035999357700348
    2. ':' → logprob: -2.410360097885132
    3. ' ' → logprob: -3.660360097885132
    4. '            ' → logprob: -4.410359859466553
    5. '<|end|>' → logprob: -5.285359859466553
    6. '        ' → logprob: -5.785359859466553
    7. ',' → logprob: -6.035359859466553
    8. '          ' → logprob: -6.285359859466553
    9. '       ' → logprob: -6.410359859466553
    10. '<|end|>' → logprob: -6.785359859466553

Token 74: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.08646703511476517
    2. ' ' → logprob: -2.5864670276641846
    3. 'res' (adapté à ' res') → logprob: -6.211467266082764
    4. '               ' → logprob: -6.211467266082764
    5. ' ' → logprob: -6.461467266082764
    6. ' 
' → logprob: -7.211467266082764
    7. ' val' → logprob: -7.961467266082764
    8. '<|end|>' → logprob: -8.586466789245605
    9. '           ' → logprob: -8.711466789245605
    10. '                
' → logprob: -9.211466789245605

Token 75: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0012408251641318202
    2. '[int' → logprob: -6.8762407302856445
    3. '[' → logprob: -8.626240730285645
    4. '[val' → logprob: -10.626240730285645
    5. '.append' → logprob: -14.626240730285645
    6. '[len' → logprob: -14.626240730285645
    7. '[id' → logprob: -14.751240730285645
    8. '[][' → logprob: -15.001240730285645
    9. '```' → logprob: -15.001240730285645
    10. '[Int' → logprob: -15.376240730285645

Token 76: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.022275380790233612
    2. ').' → logprob: -4.397275447845459
    3. '.append' → logprob: -4.647275447845459
    4. ']' → logprob: -10.1472749710083
    5. '.' → logprob: -10.5222749710083
    6. ' ].' → logprob: -10.5222749710083
    7. ')' → logprob: -11.2722749710083
    8. '}.' → logprob: -11.5222749710083
    9. ''].' → logprob: -13.2722749710083
    10. '   ' → logprob: -13.2722749710083

Token 77: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -5.512236498361744e-07
    2. ' append' → logprob: -14.750000953674316
    3. 'appen' → logprob: -16.625
    4. '.append' → logprob: -17.125
    5. 'extend' → logprob: -18.375
    6. 'add' → logprob: -19.125
    7. '	append' → logprob: -19.25
    8. 'Append' → logprob: -19.25
    9. 'app' → logprob: -19.625
    10. '_append' → logprob: -20.375

Token 78: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.11118503659963608
    2. '(float' → logprob: -2.361185073852539
    3. '(' → logprob: -4.986185073852539
    4. '(val' → logprob: -5.611185073852539
    5. '(array' → logprob: -8.361185073852539
    6. 'int' → logprob: -8.861185073852539
    7. 'val' → logprob: -10.986185073852539
    8. 'float' → logprob: -11.111185073852539
    9. '(eval' → logprob: -11.986185073852539
    10. ' (' → logprob: -12.986185073852539

Token 79: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.0005549400229938328
    2. '(' → logprob: -7.500555038452148
    3. 'val' → logprob: -13.750555038452148
    4. ' (' → logprob: -15.125555038452148
    5. ')(' → logprob: -15.375555038452148
    6. ' val' → logprob: -16.12555503845215
    7. '(
' → logprob: -16.12555503845215
    8. ')' → logprob: -17.12555503845215
    9. ',val' → logprob: -17.50055503845215
    10. '[val' → logprob: -17.50055503845215

Token 80: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0017475310014560819
    2. ')' → logprob: -6.3767476081848145
    3. ')))' → logprob: -10.126747131347656
    4. '[' → logprob: -13.376747131347656
    5. '()))' → logprob: -13.626747131347656
    6. ' ))' → logprob: -14.001747131347656
    7. '))
' → logprob: -14.126747131347656
    8. '])' → logprob: -15.626747131347656
    9. '),' → logprob: -15.626747131347656
    10. '))))' → logprob: -16.001747131347656

Token 81: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002667926950380206
    2. '    
' → logprob: -7.3776679039001465
    3. '<|end|>' → logprob: -7.7526679039001465
    4. ')' → logprob: -8.127668380737305
    5. ' ' → logprob: -8.377668380737305
    6. ' return' → logprob: -8.627668380737305
    7. '       ' → logprob: -8.627668380737305
    8. '\n' → logprob: -8.752668380737305
    9. 'return' → logprob: -8.752668380737305
    10. '    ' → logprob: -8.877668380737305

Token 82: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06907080858945847
    2. ')' → logprob: -3.944070816040039
    3. 'return' (adapté à ' return') → logprob: -4.194070816040039
    4. ' ' → logprob: -4.444070816040039
    5. '<|end|>' → logprob: -4.694070816040039
    6. ' return' → logprob: -5.194070816040039
    7. '\n' → logprob: -6.569070816040039
    8. '       ' → logprob: -7.319070816040039
    9. '  ' → logprob: -7.319070816040039
    10. '    ' → logprob: -7.444070816040039

Token 83: ' tuple' (ID: 31311)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.037286076694726944
    2. '(res' → logprob: -3.9122860431671143
    3. ' res' → logprob: -4.662286281585693
    4. 'tuple' → logprob: -5.412286281585693
    5. 'array' → logprob: -6.162286281585693
    6. '[' → logprob: -8.662285804748535
    7. ' tuple' → logprob: -8.787285804748535
    8. '(tuple' → logprob: -9.037285804748535
    9. '(array' → logprob: -10.037285804748535
    10. ' array' → logprob: -10.537285804748535

Token 84: '(array' (ID: 13176)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.00020973898062948138
    2. 'res' → logprob: -8.50020980834961
    3. '(' → logprob: -12.00020980834961
    4. '([' → logprob: -16.75020980834961
    5. '(tuple' → logprob: -17.75020980834961
    6. '((' → logprob: -17.87520980834961
    7. '$res' → logprob: -18.00020980834961
    8. ' res' → logprob: -18.25020980834961
    9. '	res' → logprob: -18.50020980834961
    10. '_res' → logprob: -18.50020980834961

Token 85: '(r' (ID: 4729)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0003148472751490772
    2. '(s' → logprob: -8.625314712524414
    3. ')(' → logprob: -9.625314712524414
    4. 's' → logprob: -10.375314712524414
    5. '(x' → logprob: -11.375314712524414
    6. '(' → logprob: -11.625314712524414
    7. ')' → logprob: -11.875314712524414
    8. 'res' → logprob: -12.250314712524414
    9. ' (' → logprob: -13.250314712524414
    10. '(val' → logprob: -13.500314712524414

Token 86: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006087815389037132
    2. 'es' → logprob: -5.131087779998779
    3. ',' → logprob: -9.131088256835938
    4. ').' → logprob: -10.381088256835938
    5. '))' → logprob: -12.506088256835938
    6. ')
' → logprob: -12.631088256835938
    7. ')s' → logprob: -13.256088256835938
    8. '(' → logprob: -13.756088256835938
    9. ')+' → logprob: -13.881088256835938
    10. '())' → logprob: -13.881088256835938

Token 87: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15712584555149078
    2. '(res' → logprob: -2.282125949859619
    3. '(r' → logprob: -3.782125949859619
    4. 's' → logprob: -4.907125949859619
    5. '(s' → logprob: -5.157125949859619
    6. '(' → logprob: -5.407125949859619
    7. ' for' → logprob: -7.282125949859619
    8. 'for' → logprob: -7.282125949859619
    9. '(x' → logprob: -7.782125949859619
    10. '(i' → logprob: -8.532125473022461

Token 88: ' r' (ID: 428)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.05709482729434967
    2. 'res' → logprob: -3.0570948123931885
    3. 'r' → logprob: -4.932095050811768
    4. ' r' → logprob: -6.807095050811768
    5. '(res' → logprob: -8.93209457397461
    6. '	res' → logprob: -11.80709457397461
    7. ' ' → logprob: -11.93209457397461
    8. 's' → logprob: -13.55709457397461
    9. '(r' → logprob: -13.80709457397461
    10. '<|end|>' → logprob: -13.80709457397461

Token 89: ' in' (ID: 306)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.5866446495056152
    2. '(res' → logprob: -0.8366446495056152
    3. ' res' → logprob: -4.586644649505615
    4. ')' → logprob: -7.961644649505615
    5. '_res' → logprob: -10.336645126342773
    6. '(' → logprob: -10.461645126342773
    7. '	res' → logprob: -10.836645126342773
    8. '=res' → logprob: -12.086645126342773
    9. '$res' → logprob: -12.461645126342773
    10. ',res' → logprob: -12.461645126342773

Token 90: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0005572011577896774
    2. ' res' → logprob: -7.5005574226379395
    3. '(res' → logprob: -12.375556945800781
    4. '	res' → logprob: -18.75055694580078
    5. ')' → logprob: -20.25055694580078
    6. 're' → logprob: -20.25055694580078
    7. 'r' → logprob: -20.37555694580078
    8. '$res' → logprob: -20.37555694580078
    9. 'resh' → logprob: -20.50055694580078
    10. 'ress' → logprob: -20.62555694580078

Token 91: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ' )' → logprob: -15.500000953674316
    3. ')
' → logprob: -16.0
    4. '))' → logprob: -16.5
    5. ')return' → logprob: -16.75
    6. ')}' → logprob: -16.875
    7. '<|end|>' → logprob: -17.25
    8. ')}}' → logprob: -17.375
    9. '),' → logprob: -17.375
    10. ')`' → logprob: -17.75

Token 92: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05050405487418175
    2. '<|end|>' → logprob: -4.050504207611084
    3. '#' → logprob: -4.425504207611084
    4. ')' → logprob: -5.300504207611084
    5. '```' → logprob: -5.675504207611084
    6. '
' → logprob: -6.050504207611084
    7. 'n' → logprob: -6.300504207611084
    8. '    
' → logprob: -6.800504207611084
    9. '(' → logprob: -7.175504207611084
    10. '[' → logprob: -7.675504207611084

Token 93: ' XYZ' (ID: 142627)
  Prédit: ' Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Point' → logprob: -0.17272880673408508
    2. ' Conv' → logprob: -3.4227287769317627
    3. ' Points' → logprob: -3.4227287769317627
    4. ' K' → logprob: -4.047729015350342
    5. ' Solution' → logprob: -4.047729015350342
    6. ' My' → logprob: -4.172729015350342
    7. ' ' → logprob: -4.672729015350342
    8. ' Triangle' → logprob: -5.047729015350342
    9. ' Solver' → logprob: -5.297729015350342
    10. ' Data' → logprob: -6.047729015350342

Token 94: 'Com' (ID: 1059)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0571439191699028
    2. '(' → logprob: -2.9321439266204834
    3. 'Vector' → logprob: -7.932143688201904
    4. '():' → logprob: -7.932143688201904
    5. '(:' → logprob: -8.182144165039062
    6. ' :' → logprob: -8.307144165039062
    7. 'Processor' → logprob: -9.182144165039062
    8. ':
' → logprob: -9.807144165039062
    9. '):' → logprob: -9.807144165039062
    10. '(object' → logprob: -9.807144165039062

Token 95: 'bin' (ID: 11893)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.19051627814769745
    2. 'puter' → logprob: -2.940516233444214
    3. 'p' → logprob: -3.065516233444214
    4. 'pressor' → logprob: -3.565516233444214
    5. 'bin' → logprob: -3.940516233444214
    6. 'bination' → logprob: -4.315516471862793
    7. 'binations' → logprob: -6.065516471862793
    8. 'ponent' → logprob: -6.190516471862793
    9. 'parer' → logprob: -6.315516471862793
    10. 'parator' → logprob: -6.440516471862793

Token 96: 'ator' (ID: 1246)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.43639108538627625
    2. 'e' → logprob: -1.4363911151885986
    3. 'ator' → logprob: -2.1863911151885986
    4. 'ation' → logprob: -6.1863908767700195
    5. 'ations' → logprob: -8.06139087677002
    6. 'ed' → logprob: -8.43639087677002
    7. 'a' → logprob: -8.43639087677002
    8. '```' → logprob: -8.68639087677002
    9. 'atorial' → logprob: -8.81139087677002
    10. 'at' → logprob: -8.81139087677002

Token 97: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00012880703434348106
    2. ':
' → logprob: -9.125128746032715
    3. '():' → logprob: -11.875128746032715
    4. ':def' → logprob: -12.375128746032715
    5. '(object' → logprob: -13.250128746032715
    6. ' :' → logprob: -13.500128746032715
    7. '(' → logprob: -13.500128746032715
    8. ':**' → logprob: -13.875128746032715
    9. '):' → logprob: -14.000128746032715
    10. '>:' → logprob: -14.500128746032715

Token 98: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25008121132850647
    2. ' def' → logprob: -1.625081181526184
    3. '    
' → logprob: -4.3750810623168945
    4. 'def' → logprob: -5.5000810623168945
    5. ' 
' → logprob: -6.2500810623168945
    6. ':' → logprob: -7.0000810623168945
    7. '<|end|>' → logprob: -7.0000810623168945
    8. '    ' → logprob: -7.7500810623168945
    9. '	def' → logprob: -7.8750810623168945
    10. ' indentation' → logprob: -8.125081062316895

Token 99: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.049181994050741196
    2. 'def' (adapté à ' def') → logprob: -3.4241819381713867
    3. '   ' → logprob: -4.174181938171387
    4. '	def' → logprob: -11.799181938171387
    5. '    
' → logprob: -12.174181938171387
    6. '    ' → logprob: -12.299181938171387
    7. ' """' → logprob: -13.299181938171387
    8. ' ' → logprob: -13.424181938171387
    9. ':def' → logprob: -13.549181938171387
    10. '(' → logprob: -13.799181938171387

Token 100: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0343947596848011
    2. ' init' → logprob: -4.03439474105835
    3. ' ' → logprob: -4.53439474105835
    4. ' _' → logprob: -5.90939474105835
    5. '__' → logprob: -6.78439474105835
    6. 'init' → logprob: -6.90939474105835
    7. ' ' → logprob: -8.284395217895508
    8. '_init' → logprob: -8.659395217895508
    9. '_' → logprob: -10.159395217895508
    10. '  ' → logprob: -10.659395217895508

Token 101: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.935296834039036e-06
    2. 'new' → logprob: -12.87500286102295
    3. 'ini' → logprob: -16.125003814697266
    4. 'next' → logprob: -16.375003814697266
    5. ' init' → logprob: -17.125003814697266
    6. 'call' → logprob: -17.250003814697266
    7. '```' → logprob: -17.875003814697266
    8. '_init' → logprob: -18.125003814697266
    9. 'int' → logprob: -18.750003814697266
    10. 'inite' → logprob: -18.875003814697266

Token 102: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.10026480257511139
    2. '__' → logprob: -2.35026478767395
    3. '__(
' → logprob: -10.600264549255371
    4. '__((' → logprob: -10.850264549255371
    5. '__('' → logprob: -12.100264549255371
    6. '___' → logprob: -12.975264549255371
    7. '(self' → logprob: -12.975264549255371
    8. '__(*' → logprob: -13.350264549255371
    9. '(' → logprob: -14.225264549255371
    10. '__("' → logprob: -14.600264549255371

Token 103: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0006328551680780947
    2. ' self' → logprob: -7.3756327629089355
    3. '
' → logprob: -13.250633239746094
    4. ')' → logprob: -13.500633239746094
    5. ',' → logprob: -13.625633239746094
    6. '   ' → logprob: -14.125633239746094
    7. ' ' → logprob: -15.000633239746094
    8. '0' → logprob: -15.250633239746094
    9. ',self' → logprob: -15.875633239746094
    10. '(self' → logprob: -16.000633239746094

Token 104: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0033956330735236406
    2. ' ,' → logprob: -6.5033955574035645
    3. 'self' → logprob: -6.5033955574035645
    4. ',n' → logprob: -8.253396034240723
    5. ',self' → logprob: -9.128396034240723
    6. ' self' → logprob: -10.753396034240723
    7. '(self' → logprob: -14.253396034240723
    8. ')' → logprob: -14.378396034240723
    9. '‌,' → logprob: -15.128396034240723
    10. ' ' → logprob: -15.628396034240723

Token 105: ' x' (ID: 1215)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.30641114711761475
    2. 'n' → logprob: -2.0564112663269043
    3. ' self' → logprob: -2.9314112663269043
    4. 'x' → logprob: -3.3064112663269043
    5. ' n' → logprob: -3.6814112663269043
    6. 'points' → logprob: -4.681411266326904
    7. ' points' → logprob: -5.306411266326904
    8. ' x' → logprob: -5.556411266326904
    9. 'xyz' → logprob: -6.931411266326904
    10. ' xyz' → logprob: -8.556410789489746

Token 106: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017531297635287046
    2. '_points' → logprob: -7.501753330230713
    3. 's' → logprob: -7.626753330230713
    4. ':' → logprob: -8.876752853393555
    5. '_size' → logprob: -9.626752853393555
    6. '_array' → logprob: -9.626752853393555
    7. '_vals' → logprob: -9.626752853393555
    8. '_,' → logprob: -9.751752853393555
    9. 'size' → logprob: -9.751752853393555
    10. '_values' → logprob: -10.251752853393555

Token 107: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.20141783356666565
    2. ' y' → logprob: -1.7014178037643433
    3. '	y' → logprob: -13.826417922973633
    4. 'z' → logprob: -14.201417922973633
    5. '   ' → logprob: -14.576417922973633
    6. ',y' → logprob: -14.826417922973633
    7. ',' → logprob: -14.951417922973633
    8. 'x' → logprob: -15.076417922973633
    9. ' ' → logprob: -15.451417922973633
    10. '<|end|>' → logprob: -15.951417922973633

Token 108: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2352385965641588e-05
    2. ' ,' → logprob: -11.750012397766113
    3. ',y' → logprob: -12.500012397766113
    4. '<|end|>' → logprob: -15.875012397766113
    5. '‌,' → logprob: -16.000011444091797
    6. ',
' → logprob: -16.000011444091797
    7. 'y' → logprob: -16.250011444091797
    8. '),' → logprob: -16.625011444091797
    9. ')' → logprob: -16.625011444091797
    10. ',x' → logprob: -17.875011444091797

Token 109: ' z' (ID: 579)
  Prédit: ' z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.5231454372406006
    2. 'z' → logprob: -0.8981454372406006
    3. ' and' → logprob: -12.39814567565918
    4. ' ' → logprob: -12.39814567565918
    5. '	z' → logprob: -12.52314567565918
    6. 'x' → logprob: -12.89814567565918
    7. 'and' → logprob: -12.89814567565918
    8. '   ' → logprob: -13.64814567565918
    9. ')' → logprob: -14.27314567565918
    10. ' x' → logprob: -14.39814567565918

Token 110: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000634639582131058
    2. '):
' → logprob: -8.00063419342041
    3. ',' → logprob: -8.50063419342041
    4. ')' → logprob: -9.62563419342041
    5. ' ):' → logprob: -10.62563419342041
    6. ':' → logprob: -12.62563419342041
    7. '):
' → logprob: -13.87563419342041
    8. '   ' → logprob: -14.87563419342041
    9. ' ' → logprob: -15.62563419342041
    10. ']:' → logprob: -16.250635147094727

Token 111: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03136099874973297
    2. ':' → logprob: -3.6563611030578613
    3. ',' → logprob: -6.406361103057861
    4. '):' → logprob: -6.656361103057861
    5. '   ' → logprob: -6.906361103057861
    6. ')' → logprob: -7.906361103057861
    7. '<|end|>' → logprob: -8.031360626220703
    8. '):
' → logprob: -8.656360626220703
    9. ':
' → logprob: -10.156360626220703
    10. '<|end|>' → logprob: -10.531360626220703

Token 112: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14431606233119965
    2. 'self' (adapté à ' self') → logprob: -2.3943159580230713
    3. ' self' → logprob: -3.1443159580230713
    4. '	self' → logprob: -10.144315719604492
    5. '   ' → logprob: -11.894315719604492
    6. ' ' → logprob: -12.894315719604492
    7. '	' → logprob: -13.394315719604492
    8. 'import' → logprob: -13.394315719604492
    9. '      ' → logprob: -14.019315719604492
    10. '        ' → logprob: -14.644315719604492

Token 113: '.arr' (ID: 76200)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9846476316452026
    2. '.x' → logprob: -0.9846476316452026
    3. ' =' → logprob: -1.4846476316452026
    4. '=' → logprob: -4.109647750854492
    5. ' .' → logprob: -5.234647750854492
    6. ' ' → logprob: -6.859647750854492
    7. '   ' → logprob: -6.859647750854492
    8. '       ' → logprob: -7.109647750854492
    9. '.=' → logprob: -8.234647750854492
    10. '=x' → logprob: -8.734647750854492

Token 114: 's' (ID: 82)
  Prédit: 'ays'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ays' → logprob: -0.002401697216555476
    2. 's' → logprob: -6.502401828765869
    3. 'ay' → logprob: -7.127401828765869
    4. 'x' → logprob: -9.877401351928711
    5. ' =' → logprob: -10.127401351928711
    6. '_x' → logprob: -13.002401351928711
    7. '=' → logprob: -13.377401351928711
    8. 'ayers' → logprob: -15.377401351928711
    9. 'AYS' → logprob: -15.502401351928711
    10. '   ' → logprob: -15.752401351928711

Token 115: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931586861610413
    2. ' =' → logprob: -0.6931586861610413
    3. 's' → logprob: -12.068159103393555
    4. '=[' → logprob: -12.818159103393555
    5. ' =[' → logprob: -14.068159103393555
    6. '[' → logprob: -14.568159103393555
    7. ')' → logprob: -14.693159103393555
    8. ',' → logprob: -14.818159103393555
    9. '<|end|>' → logprob: -15.318159103393555
    10. '   ' → logprob: -16.318159103393555

Token 116: ' [' (ID: 723)
  Prédit: '[array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[array' → logprob: -0.7871695756912231
    2. '[x' → logprob: -1.0371695756912231
    3. ' [' → logprob: -2.9121694564819336
    4. ' (' → logprob: -3.1621694564819336
    5. '(x' → logprob: -3.5371694564819336
    6. '(array' → logprob: -3.6621694564819336
    7. '[' → logprob: -3.9121694564819336
    8. 'array' → logprob: -4.162169456481934
    9. ' array' → logprob: -6.662169456481934
    10. '(' → logprob: -7.162169456481934

Token 117: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.056199200451374054
    2. 'array' → logprob: -2.931199312210083
    3. ' x' → logprob: -6.806199073791504
    4. ' array' → logprob: -8.806199073791504
    5. 'sort' → logprob: -10.181199073791504
    6. '   ' → logprob: -11.556199073791504
    7. 'arr' → logprob: -13.056199073791504
    8. 'np' → logprob: -13.181199073791504
    9. '(x' → logprob: -13.431199073791504
    10. ' ' → logprob: -13.681199073791504

Token 118: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011802274966612458
    2. ',y' → logprob: -6.751180171966553
    3. ' ,' → logprob: -11.876180648803711
    4. ',x' → logprob: -13.501180648803711
    5. ',
' → logprob: -13.751180648803711
    6. ',z' → logprob: -15.751180648803711
    7. ',n' → logprob: -16.00118064880371
    8. 'y' → logprob: -16.25118064880371
    9. ',Y' → logprob: -17.00118064880371
    10. '       ' → logprob: -17.12618064880371

Token 119: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.3132648468017578
    2. 'y' → logprob: -1.3132648468017578
    3. ' ' → logprob: -14.063264846801758
    4. ',y' → logprob: -14.438264846801758
    5. '	y' → logprob: -14.438264846801758
    6. ',' → logprob: -14.938264846801758
    7. '
' → logprob: -15.813264846801758
    8. '        ' → logprob: -15.938264846801758
    9. '    ' → logprob: -16.063264846801758
    10. '       ' → logprob: -16.563264846801758

Token 120: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00044771170360036194
    2. ',z' → logprob: -8.000447273254395
    3. ' ,' → logprob: -9.125447273254395
    4. '       ' → logprob: -13.875447273254395
    5. ',y' → logprob: -13.875447273254395
    6. ',
' → logprob: -14.375447273254395
    7. 'z' → logprob: -15.125447273254395
    8. '   ' → logprob: -15.500447273254395
    9. ' z' → logprob: -15.875447273254395
    10. '[' → logprob: -16.75044822692871

Token 121: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.14271855354309082
    2. ' z' → logprob: -2.017718553543091
    3. 'sort' → logprob: -10.767718315124512
    4. 'array' → logprob: -12.642718315124512
    5. '	z' → logprob: -12.642718315124512
    6. ' sort' → logprob: -12.767718315124512
    7. ' ' → logprob: -13.017718315124512
    8. 'sorted' → logprob: -13.267718315124512
    9. ']' → logprob: -13.392718315124512
    10. '   ' → logprob: -13.517718315124512

Token 122: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00010878815373871475
    2. ' ]' → logprob: -9.25010871887207
    3. ']
' → logprob: -12.37510871887207
    4. ',' → logprob: -12.75010871887207
    5. '       ' → logprob: -13.37510871887207
    6. '[' → logprob: -13.50010871887207
    7. '   ' → logprob: -13.87510871887207
    8. ']

' → logprob: -14.25010871887207
    9. ']}' → logprob: -15.50010871887207
    10. '],' → logprob: -15.75010871887207

Token 123: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3846246898174286
    2. '<|end|>' → logprob: -1.259624719619751
    3. '   ' → logprob: -3.884624719619751
    4. '    
' → logprob: -4.884624481201172
    5. 'def' → logprob: -6.634624481201172
    6. ',' → logprob: -7.009624481201172
    7. ' 
' → logprob: -7.009624481201172
    8. '  
' → logprob: -7.134624481201172
    9. '<|end|>' → logprob: -7.259624481201172
    10. ' ' → logprob: -7.384624481201172

Token 124: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.016482271254062653
    2. ' def' → logprob: -4.141482353210449
    3. '   ' → logprob: -7.766482353210449
    4. 'import' → logprob: -12.01648235321045
    5. 'from' → logprob: -12.14148235321045
    6. ' ' → logprob: -12.39148235321045
    7. '	def' → logprob: -12.51648235321045
    8. '    
' → logprob: -13.64148235321045
    9. ')' → logprob: -13.89148235321045
    10. '
' → logprob: -14.26648235321045

Token 125: ' build' (ID: 3024)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -1.6184628009796143
    2. ' combine' → logprob: -1.6184628009796143
    3. ' combinations' → logprob: -2.4934628009796143
    4. 'combine' → logprob: -2.4934628009796143
    5. '__' → logprob: -2.7434628009796143
    6. ' def' → logprob: -2.8684628009796143
    7. '_com' → logprob: -3.1184628009796143
    8. ' generate' → logprob: -3.2434628009796143
    9. ' get' → logprob: -3.2434628009796143
    10. ' comb' → logprob: -3.6184628009796143

Token 126: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.1597713679075241
    2. '(' → logprob: -2.78477144241333
    3. '_com' → logprob: -2.90977144241333
    4. '_' → logprob: -4.78477144241333
    5. '_array' → logprob: -5.53477144241333
    6. '_all' → logprob: -6.15977144241333
    7. '_comb' → logprob: -6.40977144241333
    8. 'self' → logprob: -6.65977144241333
    9. '_arrays' → logprob: -6.65977144241333
    10. '_points' → logprob: -6.78477144241333

Token 127: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.13556045293807983
    2. ')' → logprob: -3.6355605125427246
    3. '_' → logprob: -3.7605605125427246
    4. '):
' → logprob: -4.510560512542725
    5. '_array' → logprob: -4.635560512542725
    6. '_com' → logprob: -4.635560512542725
    7. '_arrays' → logprob: -5.135560512542725
    8. 'self' → logprob: -5.260560512542725
    9. '_arr' → logprob: -5.510560512542725
    10. ',' → logprob: -5.510560512542725

Token 128: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032619615085422993
    2. '<|end|>' → logprob: -6.503262042999268
    3. '[' → logprob: -7.753262042999268
    4. '        ' → logprob: -8.00326156616211
    5. '[]' → logprob: -8.37826156616211
    6. '        
' → logprob: -8.87826156616211
    7. ',' → logprob: -9.50326156616211
    8. 'return' → logprob: -9.62826156616211
    9. ' pass' → logprob: -9.75326156616211
    10. '(' → logprob: -9.75326156616211

Token 129: ' ops' (ID: 26973)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6544496417045593
    2. 'from' → logprob: -2.154449701309204
    3. 'result' → logprob: -2.404449701309204
    4. 'sorted' → logprob: -2.654449701309204
    5. 'res' → logprob: -2.904449701309204
    6. '       ' → logprob: -3.279449701309204
    7. 'x' → logprob: -4.404449462890625
    8. 'return' → logprob: -4.404449462890625
    9. 'pass' → logprob: -4.404449462890625
    10. 'import' → logprob: -4.779449462890625

Token 130: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023444391787052155
    2. '=' → logprob: -3.773444414138794
    3. '=[]' → logprob: -8.898444175720215
    4. '   ' → logprob: -11.148444175720215
    5. 's' → logprob: -12.023444175720215
    6. 'import' → logprob: -12.398444175720215
    7. '[]' → logprob: -12.523444175720215
    8. ' ' → logprob: -12.648444175720215
    9. '=[]
' → logprob: -12.773444175720215
    10. ']' → logprob: -12.773444175720215

Token 131: ' [
' (ID: 4240)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '['' → logprob: -0.6341314911842346
    2. '[' → logprob: -1.5091314315795898
    3. '[
' → logprob: -2.63413143157959
    4. '[]' → logprob: -2.75913143157959
    5. '["' → logprob: -3.25913143157959
    6. '["+' → logprob: -3.38413143157959
    7. '[(' → logprob: -4.13413143157959
    8. '[['' → logprob: -4.75913143157959
    9. ' ['' → logprob: -4.88413143157959
    10. '[]
' → logprob: -6.75913143157959

Token 132: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.2708295583724976
    2. ' lambda' → logprob: -1.3958295583724976
    3. 'lambda' → logprob: -1.5208295583724976
    4. '(lambda' → logprob: -2.145829677581787
    5. ' (' → logprob: -3.270829677581787
    6. ' '+' → logprob: -4.770829677581787
    7. ''' → logprob: -4.770829677581787
    8. ''+' → logprob: -4.770829677581787
    9. ' '' → logprob: -5.020829677581787
    10. 'sum' → logprob: -5.020829677581787

Token 133: ' (' (ID: 350)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.8660162091255188
    2. '(lambda' → logprob: -0.9910162091255188
    3. 'self' → logprob: -3.116016149520874
    4. '('+' → logprob: -3.116016149520874
    5. '(' (adapté à ' (') → logprob: -3.866016149520874
    6. 'sort' → logprob: -3.991016149520874
    7. 'array' → logprob: -4.616016387939453
    8. 'sum' → logprob: -4.741016387939453
    9. '("+' → logprob: -4.991016387939453
    10. ' lambda' → logprob: -5.116016387939453

Token 134: '1' (ID: 16)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.6123188138008118
    2. 'self' → logprob: -1.987318754196167
    3. '(lambda' → logprob: -2.612318754196167
    4. ''+' → logprob: -2.737318754196167
    5. '"+' → logprob: -3.737318754196167
    6. ''s' → logprob: -3.737318754196167
    7. '('+' → logprob: -3.737318754196167
    8. '(' → logprob: -3.987318754196167
    9. 'sort' → logprob: -4.112318992614746
    10. 'array' → logprob: -4.487318992614746

Token 135: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013807091861963272
    2. ' ,' → logprob: -4.38880729675293
    3. ',+' → logprob: -8.38880729675293
    4. ',)' → logprob: -8.51380729675293
    5. ',),' → logprob: -9.01380729675293
    6. '+' → logprob: -9.01380729675293
    7. ',),
' → logprob: -9.38880729675293
    8. 'j' → logprob: -9.63880729675293
    9. ')' → logprob: -9.76380729675293
    10. ',-' → logprob: -9.76380729675293

Token 136: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5654426217079163
    2. '0' → logprob: -1.8154425621032715
    3. '-' → logprob: -2.0654425621032715
    4. ' ' → logprob: -2.3154425621032715
    5. '+' → logprob: -4.4404425621032715
    6. '2' → logprob: -4.8154425621032715
    7. 'lambda' → logprob: -4.8154425621032715
    8. ' -' → logprob: -5.4404425621032715
    9. ' lambda' → logprob: -5.5654425621032715
    10. '),' → logprob: -7.0654425621032715

Token 137: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6207541823387146
    2. '0' → logprob: -1.3707542419433594
    3. '-' → logprob: -1.8707542419433594
    4. '2' → logprob: -3.8707542419433594
    5. '+' → logprob: -4.370754241943359
    6. ' ' → logprob: -4.745754241943359
    7. 'lambda' → logprob: -5.120754241943359
    8. '(' → logprob: -6.870754241943359
    9. '),' → logprob: -7.245754241943359
    10. '[' → logprob: -7.620754241943359

Token 138: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01683034934103489
    2. '),' → logprob: -4.3918304443359375
    3. ' ,' → logprob: -6.6418304443359375
    4. ')' → logprob: -6.6418304443359375
    5. '1' → logprob: -7.1418304443359375
    6. '),
' → logprob: -7.6418304443359375
    7. '),(' → logprob: -8.641830444335938
    8. ' ),' → logprob: -9.766830444335938
    9. ' ' → logprob: -10.141830444335938
    10. '),

' → logprob: -10.641830444335938

Token 139: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007984546944499016
    2. ' ' → logprob: -4.882984638214111
    3. '-' → logprob: -8.132984161376953
    4. ')' → logprob: -10.007984161376953
    5. ' -' → logprob: -11.257984161376953
    6. '0' → logprob: -11.882984161376953
    7. '+' → logprob: -12.820484161376953
    8. '  ' → logprob: -12.882984161376953
    9. '),' → logprob: -13.195484161376953
    10. '   ' → logprob: -13.257984161376953

Token 140: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011602196609601378
    2. '-' → logprob: -7.501160144805908
    3. ' ' → logprob: -7.501160144805908
    4. '0' → logprob: -10.501160621643066
    5. ')' → logprob: -11.001160621643066
    6. '+' → logprob: -12.876160621643066
    7. ' -' → logprob: -13.001160621643066
    8. '),' → logprob: -13.501160621643066
    9. '))' → logprob: -14.251160621643066
    10. '...' → logprob: -14.751160621643066

Token 141: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.6960222721099854
    2. '),
' → logprob: -0.6960222721099854
    3. ')' → logprob: -5.946022033691406
    4. '),(' → logprob: -8.696022033691406
    5. '),

' → logprob: -10.196022033691406
    6. '),
' → logprob: -10.446022033691406
    7. ',' → logprob: -11.946022033691406
    8. ' ),
' → logprob: -12.571022033691406
    9. '       ' → logprob: -12.821022033691406
    10. ' ),' → logprob: -12.946022033691406

Token 142: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9067178964614868
    2. '(' → logprob: -1.1567178964614868
    3. ' (' → logprob: -1.2817178964614868
    4. '       ' → logprob: -5.781717777252197
    5. ',' → logprob: -7.531717777252197
    6. '               ' → logprob: -8.656718254089355
    7. '   ' → logprob: -9.531718254089355
    8. '          ' → logprob: -9.781718254089355
    9. '
' → logprob: -10.656718254089355
    10. '(-' → logprob: -10.656718254089355

Token 143: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006847269367426634
    2. '-' → logprob: -5.006847381591797
    3. ' ' → logprob: -9.006847381591797
    4. ' -' → logprob: -11.756847381591797
    5. '   ' → logprob: -14.506847381591797
    6. ')' → logprob: -15.131847381591797
    7. '(' → logprob: -15.256847381591797
    8. '0' → logprob: -15.756847381591797
    9. '```' → logprob: -16.069347381591797
    10. '  ' → logprob: -17.006847381591797

Token 144: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010676169040380046
    2. ' ,' → logprob: -9.375106811523438
    3. '1' → logprob: -10.750106811523438
    4. ' ' → logprob: -15.375106811523438
    5. ',
' → logprob: -15.750106811523438
    6. ')' → logprob: -16.875106811523438
    7. ',-' → logprob: -16.875106811523438
    8. '-' → logprob: -17.000106811523438
    9. '   ' → logprob: -17.875106811523438
    10. '0' → logprob: -18.187606811523438

Token 145: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01004068087786436
    2. ' ' → logprob: -4.635040760040283
    3. '-' → logprob: -8.260040283203125
    4. ' -' → logprob: -10.635040283203125
    5. ',' → logprob: -14.385040283203125
    6. '   ' → logprob: -14.510040283203125
    7. '  ' → logprob: -15.135040283203125
    8. '(' → logprob: -15.635040283203125
    9. ' ' → logprob: -15.635040283203125
    10. ')' → logprob: -16.822540283203125

Token 146: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01424248144030571
    2. '-' → logprob: -4.514242649078369
    3. ' ' → logprob: -5.764242649078369
    4. ' -' → logprob: -10.014242172241211
    5. ',' → logprob: -12.389242172241211
    6. '   ' → logprob: -14.139242172241211
    7. '  ' → logprob: -14.264242172241211
    8. '```' → logprob: -15.201742172241211
    9. '−' → logprob: -15.889242172241211
    10. ')' → logprob: -15.951742172241211

Token 147: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.507972572464496e-05
    2. '1' → logprob: -9.87509536743164
    3. ' ,' → logprob: -10.62509536743164
    4. '-' → logprob: -11.50009536743164
    5. ',-' → logprob: -11.75009536743164
    6. ' -' → logprob: -14.62509536743164
    7. '(' → logprob: -14.87509536743164
    8. ',
' → logprob: -15.62509536743164
    9. ')' → logprob: -15.87509536743164
    10. '),' → logprob: -16.50009536743164

Token 148: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.002336281817406416
    2. ' -' → logprob: -6.127336502075195
    3. '1' → logprob: -8.877336502075195
    4. ' ' → logprob: -12.002336502075195
    5. ')' → logprob: -12.877336502075195
    6. '0' → logprob: -13.002336502075195
    7. '−' → logprob: -15.502336502075195
    8. '-)' → logprob: -16.002336502075195
    9. '   ' → logprob: -17.064836502075195
    10. ')-' → logprob: -17.064836502075195

Token 149: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -13.37500286102295
    3. ')' → logprob: -13.75000286102295
    4. '),' → logprob: -17.125001907348633
    5. ',' → logprob: -17.375001907348633
    6. '```' → logprob: -17.875001907348633
    7. '(' → logprob: -18.812501907348633
    8. '-' → logprob: -18.875001907348633
    9. '...' → logprob: -19.312501907348633
    10. '   ' → logprob: -19.562501907348633

Token 150: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00019209683523513377
    2. ')' → logprob: -8.750191688537598
    3. '),(' → logprob: -11.250191688537598
    4. ' ),' → logprob: -11.875191688537598
    5. ',' → logprob: -11.875191688537598
    6. '),
' → logprob: -12.000191688537598
    7. '),

' → logprob: -16.125192642211914
    8. '],' → logprob: -16.625192642211914
    9. '(' → logprob: -17.000192642211914
    10. ',),' → logprob: -17.000192642211914

Token 151: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.22092795372009277
    2. '(' → logprob: -1.7209279537200928
    3. '           ' → logprob: -3.9709279537200928
    4. '1' → logprob: -8.845928192138672
    5. ' ' → logprob: -8.845928192138672
    6. '   ' → logprob: -9.970928192138672
    7. '       ' → logprob: -10.220928192138672
    8. '            ' → logprob: -10.345928192138672
    9. '               ' → logprob: -10.720928192138672
    10. '          ' → logprob: -10.970928192138672

Token 152: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009367127786390483
    2. '(' → logprob: -7.625936508178711
    3. ' ' → logprob: -7.750936508178711
    4. '-' → logprob: -11.875936508178711
    5. ' (' → logprob: -11.875936508178711
    6. '           ' → logprob: -13.750936508178711
    7. '   ' → logprob: -14.000936508178711
    8. '
' → logprob: -14.250936508178711
    9. '  ' → logprob: -15.000936508178711
    10. ' -' → logprob: -15.125936508178711

Token 153: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.47626737493556e-05
    2. ' ,' → logprob: -10.37503433227539
    3. ',
' → logprob: -13.37503433227539
    4. '<|end|>' → logprob: -13.50003433227539
    5. '1' → logprob: -15.37503433227539
    6. ' ' → logprob: -16.00003433227539
    7. ')' → logprob: -16.12503433227539
    8. '<|end|>' → logprob: -17.50003433227539
    9. '(' → logprob: -17.93753433227539
    10. '```' → logprob: -18.06253433227539

Token 154: ' -' (ID: 533)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02141810953617096
    2. ' ' → logprob: -3.8964180946350098
    3. '-' → logprob: -7.14641809463501
    4. ' -' → logprob: -9.396418571472168
    5. ',' → logprob: -12.771418571472168
    6. '  ' → logprob: -14.646418571472168
    7. '   ' → logprob: -14.833918571472168
    8. '
' → logprob: -15.521418571472168
    9. '```' → logprob: -15.771418571472168
    10. '<|end|>' → logprob: -16.08391761779785

Token 155: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.129266067640856e-05
    2. ' ' → logprob: -11.125020980834961
    3. '<|end|>' → logprob: -12.375020980834961
    4. ',' → logprob: -13.625020980834961
    5. '<|end|>' → logprob: -15.187520980834961
    6. '...' → logprob: -15.687520980834961
    7. '   ' → logprob: -15.750020980834961
    8. '```' → logprob: -16.93752098083496
    9. '-' → logprob: -17.00002098083496
    10. '0' → logprob: -17.25002098083496

Token 156: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.578184497309849e-05
    2. ' ,' → logprob: -9.750085830688477
    3. '1' → logprob: -10.625085830688477
    4. '<|end|>' → logprob: -13.000085830688477
    5. ',
' → logprob: -15.250085830688477
    6. '           ' → logprob: -15.875085830688477
    7. ' ' → logprob: -16.125085830688477
    8. ')' → logprob: -16.250085830688477
    9. '(' → logprob: -16.250085830688477
    10. 's' → logprob: -17.125085830688477

Token 157: ' -' (ID: 533)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01815790683031082
    2. ' ' → logprob: -4.018157958984375
    3. '-' → logprob: -12.768157958984375
    4. ',' → logprob: -12.893157958984375
    5. ' -' → logprob: -13.518157958984375
    6. '<|end|>' → logprob: -14.643157958984375
    7. ')' → logprob: -14.893157958984375
    8. '           ' → logprob: -16.205657958984375
    9. '...' → logprob: -16.455657958984375
    10. '   ' → logprob: -16.768157958984375

Token 158: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.200166469876422e-06
    2. ')' → logprob: -12.500004768371582
    3. ' ' → logprob: -14.000004768371582
    4. '<|end|>' → logprob: -15.500004768371582
    5. '...' → logprob: -15.875004768371582
    6. ',' → logprob: -16.1250057220459
    7. '```' → logprob: -16.8750057220459
    8. '   ' → logprob: -17.6875057220459
    9. '(' → logprob: -17.6875057220459
    10. '۱' → logprob: -17.8125057220459

Token 159: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0016657774103805423
    2. ')' → logprob: -6.5016655921936035
    3. ',' → logprob: -8.876666069030762
    4. '),(' → logprob: -11.126666069030762
    5. '),
' → logprob: -12.626666069030762
    6. ' ),' → logprob: -12.626666069030762
    7. '],' → logprob: -13.751666069030762
    8. ',),' → logprob: -15.001666069030762
    9. '),

' → logprob: -15.376666069030762
    10. '},' → logprob: -15.501666069030762

Token 160: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.062470078468322754
    2. ' (' → logprob: -2.812469959259033
    3. '1' → logprob: -7.687469959259033
    4. ' ' → logprob: -10.937470436096191
    5. '           ' → logprob: -10.937470436096191
    6. '   ' → logprob: -12.687470436096191
    7. ',' → logprob: -13.312470436096191
    8. '(-' → logprob: -13.312470436096191
    9. ' (-' → logprob: -15.437470436096191
    10. '(
' → logprob: -15.562470436096191

Token 161: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004239735659211874
    2. '-' → logprob: -5.504239559173584
    3. ' ' → logprob: -9.004240036010742
    4. ' -' → logprob: -10.254240036010742
    5. '(' → logprob: -13.879240036010742
    6. '   ' → logprob: -14.254240036010742
    7. ')' → logprob: -15.066740036010742
    8. '0' → logprob: -15.379240036010742
    9. ',' → logprob: -15.629240036010742
    10. '```' → logprob: -15.754240036010742

Token 162: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.491498531133402e-06
    2. ' ,' → logprob: -11.750009536743164
    3. ',-' → logprob: -14.500009536743164
    4. ',
' → logprob: -14.750009536743164
    5. '<|end|>' → logprob: -14.875009536743164
    6. '1' → logprob: -15.500009536743164
    7. ' ' → logprob: -17.000009536743164
    8. ')' → logprob: -17.750009536743164
    9. 'import' → logprob: -18.000009536743164
    10. '0' → logprob: -18.125009536743164

Token 163: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02327774278819561
    2. ' -' → logprob: -3.773277759552002
    3. '1' → logprob: -10.898277282714844
    4. ',' → logprob: -11.648277282714844
    5. ' ' → logprob: -12.648277282714844
    6. '   ' → logprob: -13.898277282714844
    7. '           ' → logprob: -15.648277282714844
    8. '<|end|>' → logprob: -16.148277282714844
    9. '  ' → logprob: -16.273277282714844
    10. ')' → logprob: -16.398277282714844

Token 164: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00024251631111837924
    2. '-' → logprob: -8.750242233276367
    3. '<|end|>' → logprob: -9.625242233276367
    4. ' ' → logprob: -12.250242233276367
    5. ' -' → logprob: -12.625242233276367
    6. '...' → logprob: -13.125242233276367
    7. '<|end|>' → logprob: -13.125242233276367
    8. '.' → logprob: -14.375242233276367
    9. ')' → logprob: -14.437742233276367
    10. '```' → logprob: -14.500242233276367

Token 165: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7014437364414334e-05
    2. ' ,' → logprob: -10.75002670288086
    3. '1' → logprob: -12.62502670288086
    4. '<|end|>' → logprob: -13.37502670288086
    5. ',
' → logprob: -15.25002670288086
    6. '(' → logprob: -15.87502670288086
    7. ')' → logprob: -16.00002670288086
    8. '2' → logprob: -17.25002670288086
    9. ' ' → logprob: -17.50002670288086
    10. '0' → logprob: -18.00002670288086

Token 166: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16296908259391785
    2. ' ' → logprob: -2.0379691123962402
    3. ',' → logprob: -3.9129691123962402
    4. ' ,' → logprob: -9.287968635559082
    5. ')' → logprob: -11.787968635559082
    6. '<|end|>' → logprob: -12.412968635559082
    7. ' ' → logprob: -14.412968635559082
    8. '...' → logprob: -14.412968635559082
    9. '  ' → logprob: -14.537968635559082
    10. '   ' → logprob: -14.600468635559082

Token 167: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0921942703134846e-05
    2. ' ' → logprob: -11.50001049041748
    3. ',' → logprob: -15.37501049041748
    4. '<|end|>' → logprob: -15.37501049041748
    5. ')' → logprob: -15.75001049041748
    6. '+' → logprob: -16.625011444091797
    7. '...' → logprob: -17.125011444091797
    8. '{' → logprob: -17.750011444091797
    9. '(' → logprob: -18.375011444091797
    10. '```' → logprob: -18.625011444091797

Token 168: '),
' (ID: 2313)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0061041670851409435
    2. ')' → logprob: -5.256103992462158
    3. '),
' → logprob: -7.506103992462158
    4. ')]' → logprob: -9.006104469299316
    5. ',' → logprob: -9.131104469299316
    6. '),(' → logprob: -9.756104469299316
    7. ' ),' → logprob: -11.256104469299316
    8. '   ' → logprob: -12.006104469299316
    9. '],' → logprob: -12.381104469299316
    10. '),

' → logprob: -13.381104469299316

Token 169: '           ' (ID: 352)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9420014023780823
    2. ' (' → logprob: -1.3170013427734375
    3. '(-' → logprob: -1.8170013427734375
    4. '       ' → logprob: -2.0670013427734375
    5. ' (-' → logprob: -3.4420013427734375
    6. '   ' → logprob: -4.5670013427734375
    7. '           ' → logprob: -4.6920013427734375
    8. ' ' → logprob: -7.6920013427734375
    9. '               ' → logprob: -8.067001342773438
    10. '        ' → logprob: -8.317001342773438

Token 170: ' (-' (ID: 21382)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' (adapté à ' (-') → logprob: -0.05067598074674606
    2. '(' → logprob: -3.050675868988037
    3. '           ' → logprob: -6.675675868988037
    4. ' (-' → logprob: -7.425675868988037
    5. '   ' → logprob: -9.300676345825195
    6. ' (' → logprob: -9.800676345825195
    7. '       ' → logprob: -9.925676345825195
    8. '-' → logprob: -11.425676345825195
    9. '               ' → logprob: -12.050676345825195
    10. '          ' → logprob: -12.300676345825195

Token 171: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -13.00000286102295
    3. '(' → logprob: -15.62500286102295
    4. ',' → logprob: -15.87500286102295
    5. '<|end|>' → logprob: -16.000003814697266
    6. '-' → logprob: -16.875003814697266
    7. '<|end|>' → logprob: -17.000003814697266
    8. '...' → logprob: -17.500003814697266
    9. '0' → logprob: -17.750003814697266
    10. '   ' → logprob: -17.937503814697266

Token 172: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001519325451226905
    2. ' ,' → logprob: -9.000151634216309
    3. '<|end|>' → logprob: -10.875151634216309
    4. '1' → logprob: -11.750151634216309
    5. ' ' → logprob: -14.500151634216309
    6. ',
' → logprob: -15.000151634216309
    7. ')' → logprob: -15.250151634216309
    8. '<|end|>' → logprob: -15.625151634216309
    9. '0' → logprob: -16.375152587890625
    10. '[' → logprob: -16.375152587890625

Token 173: ' -' (ID: 533)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.038751374930143356
    2. ' ' → logprob: -3.2887513637542725
    3. '-' → logprob: -7.538751602172852
    4. ' -' → logprob: -9.163751602172852
    5. '<|end|>' → logprob: -10.163751602172852
    6. ',' → logprob: -10.413751602172852
    7. '<|end|>' → logprob: -14.476251602172852
    8. '[' → logprob: -14.601251602172852
    9. ')' → logprob: -14.663751602172852
    10. '...' → logprob: -14.788751602172852

Token 174: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.491498531133402e-06
    2. ' ' → logprob: -11.875009536743164
    3. ',' → logprob: -14.000009536743164
    4. ')' → logprob: -15.375009536743164
    5. '```' → logprob: -15.500009536743164
    6. '
' → logprob: -16.062509536743164
    7. '0' → logprob: -16.250009536743164
    8. '(' → logprob: -16.312509536743164
    9. '   ' → logprob: -16.375009536743164
    10. '-' → logprob: -16.437509536743164

Token 175: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0035655004903674126
    2. '1' → logprob: -5.753565311431885
    3. ' ,' → logprob: -7.878565311431885
    4. ' ' → logprob: -12.753565788269043
    5. '-' → logprob: -13.003565788269043
    6. '           ' → logprob: -13.878565788269043
    7. '(' → logprob: -14.128565788269043
    8. '<|end|>' → logprob: -14.253565788269043
    9. ')' → logprob: -14.878565788269043
    10. ',
' → logprob: -15.628565788269043

Token 176: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.017813678830862045
    2. '-' → logprob: -4.392813682556152
    3. ' ' → logprob: -5.392813682556152
    4. ' -' → logprob: -7.267813682556152
    5. ',' → logprob: -10.267813682556152
    6. '<|end|>' → logprob: -13.017813682556152
    7. '(' → logprob: -13.392813682556152
    8. ')' → logprob: -13.767813682556152
    9. '(-' → logprob: -13.892813682556152
    10. '[' → logprob: -14.517813682556152

Token 177: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006928142625838518
    2. '-' → logprob: -5.006927967071533
    3. ' ' → logprob: -8.631928443908691
    4. ' -' → logprob: -10.631928443908691
    5. ',' → logprob: -11.881928443908691
    6. '(' → logprob: -14.131928443908691
    7. '[' → logprob: -14.756928443908691
    8. '<|end|>' → logprob: -14.756928443908691
    9. ')' → logprob: -14.819428443908691
    10. '```' → logprob: -14.881928443908691

Token 178: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.001025662524625659
    2. ')' → logprob: -7.001025676727295
    3. '),
' → logprob: -9.501025199890137
    4. '),(' → logprob: -10.876025199890137
    5. ' ),' → logprob: -11.501025199890137
    6. ')]' → logprob: -12.251025199890137
    7. '),

' → logprob: -13.251025199890137
    8. ',' → logprob: -13.626025199890137
    9. ')],' → logprob: -14.126025199890137
    10. '],' → logprob: -14.251025199890137

Token 179: ' (-' (ID: 21382)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.1806696504354477
    2. ' (-' → logprob: -1.8056696653366089
    3. '           ' → logprob: -7.055669784545898
    4. '(' → logprob: -10.055669784545898
    5. '-' → logprob: -12.180669784545898
    6. '   ' → logprob: -12.805669784545898
    7. '               ' → logprob: -13.180669784545898
    8. '            ' → logprob: -13.305669784545898
    9. '       ' → logprob: -13.555669784545898
    10. '          ' → logprob: -13.680669784545898

Token 180: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001294030516874045
    2. '-' → logprob: -9.250129699707031
    3. ' -' → logprob: -10.750129699707031
    4. ' ' → logprob: -12.875129699707031
    5. '(-' → logprob: -13.687629699707031
    6. '...' → logprob: -14.125129699707031
    7. '```' → logprob: -14.125129699707031
    8. '<|end|>' → logprob: -14.187629699707031
    9. ',' → logprob: -14.625129699707031
    10. '<|end|>' → logprob: -15.000129699707031

Token 181: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00045164540642872453
    2. ' ,' → logprob: -8.375452041625977
    3. ' -' → logprob: -8.750452041625977
    4. '-' → logprob: -10.375452041625977
    5. ',-' → logprob: -11.375452041625977
    6. '1' → logprob: -11.750452041625977
    7. '<|end|>' → logprob: -12.750452041625977
    8. ' (-' → logprob: -13.000452041625977
    9. ',
' → logprob: -13.125452041625977
    10. ' ' → logprob: -13.750452041625977

Token 182: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0061291721649467945
    2. ' -' → logprob: -5.381129264831543
    3. '1' → logprob: -6.506129264831543
    4. ' ' → logprob: -11.256129264831543
    5. '(-' → logprob: -15.631129264831543
    6. '−' → logprob: -16.381128311157227
    7. '<|end|>' → logprob: -16.568628311157227
    8. '...' → logprob: -16.818628311157227
    9. ',' → logprob: -16.881128311157227
    10. '[-' → logprob: -17.006128311157227

Token 183: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.004346210043877363
    2. '1' → logprob: -5.5043463706970215
    3. ' -' → logprob: -8.254345893859863
    4. ' ' → logprob: -11.879345893859863
    5. ',' → logprob: -15.129345893859863
    6. '−' → logprob: -16.12934684753418
    7. '```' → logprob: -16.62934684753418
    8. '   ' → logprob: -16.75434684753418
    9. '...' → logprob: -17.06684684753418
    10. '[' → logprob: -17.12934684753418

Token 184: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00029518234077841043
    2. ' ,' → logprob: -8.250295639038086
    3. '1' → logprob: -10.875295639038086
    4. '           ' → logprob: -11.875295639038086
    5. '<|end|>' → logprob: -12.250295639038086
    6. ')' → logprob: -14.250295639038086
    7. ',
' → logprob: -14.625295639038086
    8. ' ' → logprob: -14.875295639038086
    9. '0' → logprob: -15.250295639038086
    10. '(' → logprob: -15.375295639038086

Token 185: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5458967685699463
    2. '-' → logprob: -0.9208967685699463
    3. ' ' → logprob: -4.045896530151367
    4. ' -' → logprob: -5.295896530151367
    5. '   ' → logprob: -12.920896530151367
    6. ')' → logprob: -12.920896530151367
    7. ',' → logprob: -13.670896530151367
    8. '```' → logprob: -13.983396530151367
    9. '  ' → logprob: -14.920896530151367
    10. '[' → logprob: -15.045896530151367

Token 186: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.42979133129119873
    2. '-' → logprob: -1.0547913312911987
    3. ' ' → logprob: -7.429791450500488
    4. ' -' → logprob: -7.679791450500488
    5. ',' → logprob: -11.054791450500488
    6. ')' → logprob: -11.554791450500488
    7. '),' → logprob: -12.054791450500488
    8. '   ' → logprob: -13.929791450500488
    9. '```' → logprob: -14.867291450500488
    10. '[' → logprob: -15.304791450500488

Token 187: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0005207431968301535
    2. ')' → logprob: -7.625520706176758
    3. ',' → logprob: -10.625520706176758
    4. '),
' → logprob: -12.250520706176758
    5. ' ),' → logprob: -13.750520706176758
    6. '],' → logprob: -13.875520706176758
    7. '),(' → logprob: -13.875520706176758
    8. ',),' → logprob: -15.625520706176758
    9. ')]' → logprob: -15.750520706176758
    10. '),

' → logprob: -15.875520706176758

Token 188: ' (-' (ID: 21382)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.05508425831794739
    2. ' (-' → logprob: -3.055084228515625
    3. '           ' → logprob: -5.055084228515625
    4. '-' → logprob: -10.430084228515625
    5. '(' → logprob: -10.805084228515625
    6. '               ' → logprob: -11.555084228515625
    7. '            ' → logprob: -11.680084228515625
    8. '   ' → logprob: -11.930084228515625
    9. '          ' → logprob: -12.055084228515625
    10. '       ' → logprob: -12.430084228515625

Token 189: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04308893904089928
    2. '-' → logprob: -3.168088912963867
    3. ' -' → logprob: -9.418088912963867
    4. ' ' → logprob: -12.793088912963867
    5. ',' → logprob: -13.043088912963867
    6. '(-' → logprob: -14.043088912963867
    7. ',-' → logprob: -14.168088912963867
    8. '```' → logprob: -14.605588912963867
    9. '
' → logprob: -15.105588912963867
    10. '...' → logprob: -15.230588912963867

Token 190: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006429764907807112
    2. '-' → logprob: -7.875642776489258
    3. ' ,' → logprob: -9.125642776489258
    4. ' -' → logprob: -9.250642776489258
    5. '1' → logprob: -10.375642776489258
    6. ',-' → logprob: -11.500642776489258
    7. '           ' → logprob: -11.875642776489258
    8. ',
' → logprob: -13.250642776489258
    9. '(-' → logprob: -13.375642776489258
    10. ' ' → logprob: -14.000642776489258

Token 191: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0011830847943201661
    2. ' -' → logprob: -6.751183032989502
    3. '1' → logprob: -11.37618350982666
    4. ',' → logprob: -14.25118350982666
    5. ' ' → logprob: -14.62618350982666
    6. '<|end|>' → logprob: -16.751182556152344
    7. ')' → logprob: -17.126182556152344
    8. '   ' → logprob: -17.626182556152344
    9. '–' → logprob: -17.751182556152344
    10. ',-' → logprob: -17.876182556152344

Token 192: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.002168340375646949
    2. '1' → logprob: -6.25216817855835
    3. ' -' → logprob: -8.377168655395508
    4. ',' → logprob: -11.877168655395508
    5. ' ' → logprob: -13.502168655395508
    6. '```' → logprob: -14.752168655395508
    7. '(-' → logprob: -15.627168655395508
    8. ',-' → logprob: -15.752168655395508
    9. ')' → logprob: -16.127168655395508
    10. '(' → logprob: -16.252168655395508

Token 193: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.670925358776003e-05
    2. '-' → logprob: -10.250066757202148
    3. ',-' → logprob: -11.000066757202148
    4. ' ,' → logprob: -12.000066757202148
    5. '           ' → logprob: -13.125066757202148
    6. ')' → logprob: -13.250066757202148
    7. ',
' → logprob: -13.250066757202148
    8. '(-' → logprob: -14.375066757202148
    9. ' -' → logprob: -14.500066757202148
    10. '),' → logprob: -14.875066757202148

Token 194: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.157039049663581e-05
    2. ' -' → logprob: -9.875051498413086
    3. ',' → logprob: -17.250051498413086
    4. ')' → logprob: -17.750051498413086
    5. '(-' → logprob: -18.500051498413086
    6. '1' → logprob: -18.625051498413086
    7. ' ' → logprob: -18.875051498413086
    8. '   ' → logprob: -19.125051498413086
    9. '(' → logprob: -19.625051498413086
    10. '```' → logprob: -19.750051498413086

Token 195: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0032240566797554493
    2. '1' → logprob: -5.753223896026611
    3. ' -' → logprob: -10.00322437286377
    4. ')' → logprob: -14.87822437286377
    5. '```' → logprob: -15.37822437286377
    6. '-)' → logprob: -15.62822437286377
    7. '(-' → logprob: -16.128223419189453
    8. '   ' → logprob: -16.878223419189453
    9. '−' → logprob: -17.878223419189453
    10. ')-' → logprob: -17.878223419189453

Token 196: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.06486903876066208
    2. ')' → logprob: -2.939868927001953
    3. ')]' → logprob: -4.689868927001953
    4. '),
' → logprob: -8.189868927001953
    5. ',' → logprob: -8.564868927001953
    6. ')])' → logprob: -9.064868927001953
    7. '),(' → logprob: -10.064868927001953
    8. ')],' → logprob: -10.439868927001953
    9. ' ),' → logprob: -10.814868927001953
    10. '))' → logprob: -11.189868927001953

Token 197: ' (-' (ID: 21382)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.20231777429580688
    2. ' (-' → logprob: -1.702317714691162
    3. '-' → logprob: -7.327317714691162
    4. ' -' → logprob: -9.07731819152832
    5. '           ' → logprob: -9.57731819152832
    6. '   ' → logprob: -10.57731819152832
    7. '       ' → logprob: -11.45231819152832
    8. '(' → logprob: -11.70231819152832
    9. '               ' → logprob: -12.07731819152832
    10. ' ' → logprob: -12.32731819152832

Token 198: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.253090865968261e-06
    2. ' ' → logprob: -12.500009536743164
    3. '...' → logprob: -13.500009536743164
    4. '<|end|>' → logprob: -13.625009536743164
    5. ',' → logprob: -14.250009536743164
    6. '-' → logprob: -14.437509536743164
    7. ' -' → logprob: -15.437509536743164
    8. '[' → logprob: -15.687509536743164
    9. '<|end|>' → logprob: -15.937509536743164
    10. '(' → logprob: -16.000009536743164

Token 199: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003925229888409376
    2. '-' → logprob: -5.628925323486328
    3. ',-' → logprob: -8.503925323486328
    4. ' -' → logprob: -9.378925323486328
    5. ')' → logprob: -11.128925323486328
    6. ' ,' → logprob: -11.628925323486328
    7. '1' → logprob: -11.628925323486328
    8. '```' → logprob: -13.253925323486328
    9. ',
' → logprob: -14.253925323486328
    10. ')]' → logprob: -14.628925323486328

Token 200: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0041764602065086365
    2. ' -' → logprob: -6.004176616668701
    3. '1' → logprob: -6.379176616668701
    4. ')' → logprob: -13.754176139831543
    5. ' ' → logprob: -14.254176139831543
    6. '−' → logprob: -14.754176139831543
    7. ',' → logprob: -15.004176139831543
    8. '...' → logprob: -16.50417709350586
    9. '```' → logprob: -16.75417709350586
    10. '(-' → logprob: -17.12917709350586

Token 201: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.080963092041202e-06
    2. '-' → logprob: -13.000004768371582
    3. ' ' → logprob: -13.875004768371582
    4. ')' → logprob: -14.500004768371582
    5. ',' → logprob: -14.625004768371582
    6. '```' → logprob: -15.500004768371582
    7. '...' → logprob: -15.625004768371582
    8. '<|end|>' → logprob: -16.0625057220459
    9. ']' → logprob: -16.1250057220459
    10. ' -' → logprob: -16.2500057220459

Token 202: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009829641319811344
    2. '-' → logprob: -4.759829521179199
    3. '1' → logprob: -7.384829521179199
    4. ',-' → logprob: -8.1348295211792
    5. ')' → logprob: -8.3848295211792
    6. ' -' → logprob: -10.2598295211792
    7. ')]' → logprob: -11.1348295211792
    8. ' ,' → logprob: -11.7598295211792
    9. '))' → logprob: -12.7598295211792
    10. ')])' → logprob: -13.0098295211792

Token 203: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.016173839569091797
    2. '1' → logprob: -4.141173839569092
    3. ' -' → logprob: -9.01617431640625
    4. ')' → logprob: -11.51617431640625
    5. '-)' → logprob: -12.01617431640625
    6. ' ' → logprob: -13.51617431640625
    7. '```' → logprob: -15.64117431640625
    8. '−' → logprob: -16.14117431640625
    9. ' ' → logprob: -16.64117431640625
    10. '-
' → logprob: -16.76617431640625

Token 204: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.176947600673884e-05
    2. '-' → logprob: -10.875021934509277
    3. ')' → logprob: -13.000021934509277
    4. ' ' → logprob: -15.375021934509277
    5. ' -' → logprob: -16.00002098083496
    6. '<|end|>' → logprob: -16.25002098083496
    7. '-)' → logprob: -17.25002098083496
    8. '```' → logprob: -17.75002098083496
    9. '">' → logprob: -18.50002098083496
    10. '...' → logprob: -18.62502098083496

Token 205: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01809433475136757
    2. '),' → logprob: -4.643094539642334
    3. ')]' → logprob: -5.393094539642334
    4. ']' → logprob: -5.643094539642334
    5. ')])' → logprob: -9.643094062805176
    6. '       ' → logprob: -10.268094062805176
    7. '])' → logprob: -10.643094062805176
    8. '   ' → logprob: -10.768094062805176
    9. ')
' → logprob: -10.893094062805176
    10. '],' → logprob: -11.143094062805176

Token 206: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16635450720787048
    2. ']' → logprob: -1.9163545370101929
    3. '   ' → logprob: -5.291354656219482
    4. ')' → logprob: -6.916354656219482
    5. ']
' → logprob: -9.916354179382324
    6. ',' → logprob: -10.541354179382324
    7. ' ]' → logprob: -12.416354179382324
    8. '           ' → logprob: -13.291354179382324
    9. '])' → logprob: -14.166354179382324
    10. ')]' → logprob: -14.541354179382324

Token 207: ' ]
' (ID: 10213)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6722971796989441
    2. '       ' → logprob: -0.7972971796989441
    3. ']
' (adapté à ' ]
') → logprob: -3.297297239303589
    4. '   ' → logprob: -6.29729700088501
    5. ']

' → logprob: -10.172297477722168
    6. ' ]' → logprob: -10.922297477722168
    7. ']
' → logprob: -11.047297477722168
    8. ')' → logprob: -11.547297477722168
    9. ' ]
' → logprob: -12.297297477722168
    10. ',' → logprob: -13.297297477722168

Token 208: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0036131395027041435
    2. '   ' → logprob: -5.753612995147705
    3. '
' → logprob: -8.503613471984863
    4. ')' → logprob: -9.753613471984863
    5. 'return' → logprob: -10.253613471984863
    6. '        
' → logprob: -10.378613471984863
    7. 'def' → logprob: -10.503613471984863
    8. '    
' → logprob: -11.378613471984863
    9. 'self' → logprob: -11.378613471984863
    10. '<|end|>' → logprob: -11.753613471984863

Token 209: ' v' (ID: 323)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23562078177928925
    2. 'self' → logprob: -1.6106207370758057
    3. 'return' → logprob: -6.235620975494385
    4. ' self' → logprob: -6.360620975494385
    5. 'result' → logprob: -6.360620975494385
    6. 'for' → logprob: -6.485620975494385
    7. 'def' → logprob: -7.485620975494385
    8. 'results' → logprob: -7.610620975494385
    9. 'res' → logprob: -7.735620975494385
    10. 'max' → logprob: -7.860620975494385

Token 210: ' =' (ID: 314)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.5639051795005798
    2. '=' → logprob: -1.4389052391052246
    3. 'als' → logprob: -1.9389052391052246
    4. ' =' → logprob: -3.6889052391052246
    5. 'ectors' → logprob: -4.813905239105225
    6. '=[]' → logprob: -4.938905239105225
    7. '   ' → logprob: -6.313905239105225
    8. 'ecs' → logprob: -6.438905239105225
    9. 'ects' → logprob: -6.563905239105225
    10. 's' → logprob: -6.688905239105225

Token 211: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.05659862607717514
    2. ' []' → logprob: -3.431598663330078
    3. '[' → logprob: -4.681598663330078
    4. '[]
' → logprob: -5.431598663330078
    5. ' [' → logprob: -5.556598663330078
    6. '[array' → logprob: -6.306598663330078
    7. 'array' → logprob: -7.306598663330078
    8. '0' → logprob: -7.806598663330078
    9. '[max' → logprob: -8.056598663330078
    10. 'max' → logprob: -8.181598663330078

Token 212: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00013488641707226634
    2. 'for' → logprob: -9.500134468078613
    3. ' for' → logprob: -9.750134468078613
    4. ',' → logprob: -14.625134468078613
    5. '   ' → logprob: -15.125134468078613
    6. '	' → logprob: -15.375134468078613
    7. '        
' → logprob: -15.875134468078613
    8. '[' → logprob: -16.12513542175293
    9. '           ' → logprob: -16.12513542175293
    10. '<|end|>' → logprob: -16.62513542175293

Token 213: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0769081562757492
    2. '       ' → logprob: -2.9519081115722656
    3. ' for' → logprob: -3.8269081115722656
    4. '   ' → logprob: -12.326908111572266
    5. '           ' → logprob: -13.826908111572266
    6. ' ' → logprob: -14.451908111572266
    7. 'x' → logprob: -14.576908111572266
    8. '	for' → logprob: -14.701908111572266
    9. '      ' → logprob: -15.451908111572266
    10. 'return' → logprob: -15.701908111572266

Token 214: ' o' (ID: 293)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.41928255558013916
    2. 'sign' → logprob: -2.0442824363708496
    3. 'x' → logprob: -3.1692824363708496
    4. 'a' → logprob: -3.1692824363708496
    5. 'arr' → logprob: -3.1692824363708496
    6. 'o' → logprob: -4.29428243637085
    7. ' op' → logprob: -4.41928243637085
    8. 'i' → logprob: -4.66928243637085
    9. ' sign' → logprob: -5.29428243637085
    10. 'ops' → logprob: -5.41928243637085

Token 215: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25906118750572205
    2. 'p' → logprob: -1.5090612173080444
    3. 'in' → logprob: -5.384061336517334
    4. 's' → logprob: -6.134061336517334
    5. 'pt' → logprob: -9.134060859680176
    6. 'f' → logprob: -9.759060859680176
    7. 'x' → logprob: -10.259060859680176
    8. 'ps' → logprob: -10.384060859680176
    9. 'b' → logprob: -11.259060859680176
    10. 'idx' → logprob: -11.509060859680176

Token 216: ' ops' (ID: 26973)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -3.619311974034645e-05
    2. ' ops' → logprob: -10.250036239624023
    3. 'op' → logprob: -15.000036239624023
    4. '   ' → logprob: -15.375036239624023
    5. 'self' → logprob: -15.500036239624023
    6. ' ' → logprob: -18.250036239624023
    7. '       ' → logprob: -18.375036239624023
    8. '[' → logprob: -18.375036239624023
    9. '.ops' → logprob: -18.375036239624023
    10. '_ops' → logprob: -18.500036239624023

Token 217: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014175849966704845
    2. ':
' → logprob: -4.264175891876221
    3. '):' → logprob: -12.014175415039062
    4. '):
' → logprob: -12.889175415039062
    5. ':
' → logprob: -14.139175415039062
    6. ',' → logprob: -14.264175415039062
    7. ' :' → logprob: -14.514175415039062
    8. ':

' → logprob: -14.764175415039062
    9. '           ' → logprob: -15.139175415039062
    10. '       ' → logprob: -15.514175415039062

Token 218: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0019073354778811336
    2. ':' → logprob: -6.7519073486328125
    3. ',' → logprob: -7.7519073486328125
    4. ':
' → logprob: -8.751907348632812
    5. '<|end|>' → logprob: -10.126907348632812
    6. '            
' → logprob: -10.876907348632812
    7. '
' → logprob: -11.126907348632812
    8. 'v' → logprob: -11.251907348632812
    9. '<|end|>' → logprob: -12.001907348632812
    10. '       ' → logprob: -12.126907348632812

Token 219: ' combined' (ID: 15890)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.645442008972168
    2. 'v' → logprob: -1.645442008972168
    3. 's' → logprob: -2.770442008972168
    4. ' v' → logprob: -2.895442008972168
    5. ' s' → logprob: -3.020442008972168
    6. ' val' → logprob: -3.520442008972168
    7. 'val' → logprob: -3.645442008972168
    8. 'vals' → logprob: -3.645442008972168
    9. ' vals' → logprob: -4.770442008972168
    10. 'x' → logprob: -5.395442008972168

Token 220: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18417589366436005
    2. '=' → logprob: -1.8091758489608765
    3. '_val' → logprob: -5.559175968170166
    4. '_value' → logprob: -8.309175491333008
    5. '_vals' → logprob: -9.434175491333008
    6. '_values' → logprob: -9.934175491333008
    7. '_sum' → logprob: -9.934175491333008
    8. '_arr' → logprob: -10.934175491333008
    9. 's' → logprob: -11.059175491333008
    10. '_' → logprob: -11.059175491333008

Token 221: ' o' (ID: 293)
  Prédit: ' o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' o' → logprob: -1.3318727016448975
    2. ' self' → logprob: -1.3318727016448975
    3. 'self' → logprob: -1.8318727016448975
    4. 'o' → logprob: -2.0818727016448975
    5. ' sum' → logprob: -2.2068727016448975
    6. 'sum' → logprob: -2.8318727016448975
    7. '[o' → logprob: -4.831872940063477
    8. ' [' → logprob: -5.831872940063477
    9. ' n' → logprob: -6.331872940063477
    10. 'n' → logprob: -6.831872940063477

Token 222: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.7848862373502925e-05
    2. '
' → logprob: -11.750027656555176
    3. ' [' → logprob: -11.875027656555176
    4. '[i' → logprob: -12.375027656555176
    5. '[
' → logprob: -13.000027656555176
    6. ',' → logprob: -13.375027656555176
    7. '*' → logprob: -13.875027656555176
    8. '0' → logprob: -14.125027656555176
    9. ' *' → logprob: -14.375027656555176
    10. 'x' → logprob: -15.375027656555176

Token 223: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.370294846012257e-05
    2. 'i' → logprob: -10.375043869018555
    3. ' ' → logprob: -11.750043869018555
    4. '[' → logprob: -13.125043869018555
    5. ']' → logprob: -14.250043869018555
    6. 'idx' → logprob: -14.687543869018555
    7. '
' → logprob: -15.437543869018555
    8. 'index' → logprob: -15.562543869018555
    9. 'x' → logprob: -15.937543869018555
    10. ' i' → logprob: -16.062543869018555

Token 224: ']' (ID: 60)
  Prédit: ']*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.5231334567070007
    2. ']' → logprob: -0.8981334567070007
    3. ']*(' → logprob: -11.898133277893066
    4. '   ' → logprob: -14.148133277893066
    5. '*' → logprob: -14.148133277893066
    6. ' ]' → logprob: -14.648133277893066
    7. '']' → logprob: -16.023134231567383
    8. ']\' → logprob: -16.148134231567383
    9. '  ' → logprob: -16.210634231567383
    10. '```' → logprob: -16.273134231567383

Token 225: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5161788463592529
    2. '*' → logprob: -1.516178846359253
    3. '*self' → logprob: -1.766178846359253
    4. '*x' → logprob: -4.516179084777832
    5. '*object' → logprob: -7.391179084777832
    6. '*v' → logprob: -7.516179084777832
    7. '*np' → logprob: -8.266179084777832
    8. '*this' → logprob: -9.766179084777832
    9. '**' → logprob: -10.266179084777832
    10. '*s' → logprob: -10.391179084777832

Token 226: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006768064573407173
    2. ' self' → logprob: -5.006768226623535
    3. 'array' → logprob: -10.006768226623535
    4. '(self' → logprob: -12.131768226623535
    5. '
' → logprob: -14.006768226623535
    6. ' array' → logprob: -15.006768226623535
    7. '	self' → logprob: -15.631768226623535
    8. 'arr' → logprob: -15.756768226623535
    9. '[self' → logprob: -16.00676727294922
    10. 's' → logprob: -16.25676727294922

Token 227: '.arr' (ID: 76200)
  Prédit: '.arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.arr' → logprob: -0.06202851980924606
    2. 'arr' → logprob: -2.812028408050537
    3. '.' → logprob: -10.812028884887695
    4. '[arr' → logprob: -11.062028884887695
    5. '	arr' → logprob: -11.687028884887695
    6. '<arr' → logprob: -12.312028884887695
    7. ' arr' → logprob: -12.437028884887695
    8. '$arr' → logprob: -13.187028884887695
    9. ' .' → logprob: -13.312028884887695
    10. '[' → logprob: -13.312028884887695

Token 228: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -15.875
    3. ' s' → logprob: -18.75
    4. 'arr' → logprob: -19.125
    5. '[s' → logprob: -19.375
    6. 'r' → logprob: -19.375
    7. '   ' → logprob: -19.5
    8. '1' → logprob: -20.0
    9. 'ss' → logprob: -20.25
    10. '           ' → logprob: -20.5

Token 229: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.610702363715973e-06
    2. '0' → logprob: -11.625009536743164
    3. 's' → logprob: -14.875009536743164
    4. ' ' → logprob: -16.500009536743164
    5. '[
' → logprob: -16.500009536743164
    6. ' [' → logprob: -18.250009536743164
    7. '```' → logprob: -18.500009536743164
    8. '   ' → logprob: -19.000009536743164
    9. 'def' → logprob: -19.250009536743164
    10. '1' → logprob: -19.375009536743164

Token 230: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -14.375000953674316
    3. ' ' → logprob: -15.625000953674316
    4. 's' → logprob: -18.8125
    5. 'def' → logprob: -18.875
    6. '   ' → logprob: -19.125
    7. 'import' → logprob: -19.3125
    8. '(' → logprob: -19.625
    9. '```' → logprob: -19.75
    10. '۰' → logprob: -19.8125

Token 231: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2268715500831604
    2. '+' → logprob: -1.6018714904785156
    3. ']' → logprob: -6.851871490478516
    4. ']+' → logprob: -8.101871490478516
    5. ')' → logprob: -10.476871490478516
    6. '[' → logprob: -10.726871490478516
    7. ')+' → logprob: -11.101871490478516
    8. ' ]' → logprob: -11.601871490478516
    9. ' +
' → logprob: -12.226871490478516
    10. '+
' → logprob: -12.476871490478516

Token 232: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.04859452322125435
    2. '+' → logprob: -3.0485944747924805
    3. '        ' → logprob: -12.92359447479248
    4. ' ' → logprob: -13.17359447479248
    5. '    ' → logprob: -14.42359447479248
    6. '            ' → logprob: -14.79859447479248
    7. '          ' → logprob: -15.04859447479248
    8. '         ' → logprob: -15.29859447479248
    9. '       ' → logprob: -15.42359447479248
    10. '      ' → logprob: -15.67359447479248

Token 233: ' o' (ID: 293)
  Prédit: ' o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' o' → logprob: -0.12695667147636414
    2. 'o' → logprob: -2.1269567012786865
    3. '(o' → logprob: -10.626956939697266
    4. '	o' → logprob: -13.376956939697266
    5. ' ' → logprob: -13.876956939697266
    6. ' (' → logprob: -14.876956939697266
    7. ''o' → logprob: -15.376956939697266
    8. '           ' → logprob: -15.626956939697266
    9. '[o' → logprob: -15.626956939697266
    10. '{o' → logprob: -16.001956939697266

Token 234: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.927930654550437e-05
    2. '1' → logprob: -10.500029563903809
    3. '```' → logprob: -14.875029563903809
    4. 'o' → logprob: -15.000029563903809
    5. '[
' → logprob: -15.500029563903809
    6. 'import' → logprob: -15.500029563903809
    7. '0' → logprob: -15.625029563903809
    8. 's' → logprob: -16.625028610229492
    9. '2' → logprob: -16.875028610229492
    10. ' [' → logprob: -16.875028610229492

Token 235: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. '0' → logprob: -14.12500286102295
    3. '[' → logprob: -14.37500286102295
    4. ' ' → logprob: -14.62500286102295
    5. '
' → logprob: -15.12500286102295
    6. '   ' → logprob: -15.25000286102295
    7. '```' → logprob: -16.375001907348633
    8. '2' → logprob: -16.750001907348633
    9. '(' → logprob: -17.375001907348633
    10. ']' → logprob: -17.625001907348633

Token 236: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.27267220616340637
    2. ' *' → logprob: -1.522672176361084
    3. ']' → logprob: -3.897672176361084
    4. '<|end|>' → logprob: -9.022672653198242
    5. ')' → logprob: -9.397672653198242
    6. ']*' → logprob: -10.647672653198242
    7. ',' → logprob: -12.647672653198242
    8. '}' → logprob: -13.522672653198242
    9. '*self' → logprob: -13.522672653198242
    10. '[' → logprob: -13.647672653198242

Token 237: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5759465098381042
    2. ' *' → logprob: -0.8259465098381042
    3. '*self' → logprob: -12.825946807861328
    4. '<|end|>' → logprob: -13.325946807861328
    5. '*object' → logprob: -13.700946807861328
    6. '```' → logprob: -14.825946807861328
    7. ' ' → logprob: -15.450946807861328
    8. '**' → logprob: -15.700946807861328
    9. ',' → logprob: -15.825946807861328
    10. '*np' → logprob: -15.950946807861328

Token 238: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12693022191524506
    2. ' self' → logprob: -2.1269302368164062
    3. '<|end|>' → logprob: -14.126930236816406
    4. '	self' → logprob: -14.501930236816406
    5. ' ' → logprob: -15.251930236816406
    6. '(self' → logprob: -15.751930236816406
    7. '           ' → logprob: -16.251930236816406
    8. '[self' → logprob: -16.626930236816406
    9. '*self' → logprob: -16.876930236816406
    10. '
' → logprob: -17.126930236816406

Token 239: '.arr' (ID: 76200)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.05114785209298134
    2. '[' → logprob: -3.801147937774658
    3. '.arr' → logprob: -3.926147937774658
    4. 'self' → logprob: -4.926147937774658
    5. '1' → logprob: -7.801147937774658
    6. ' arr' → logprob: -10.4261474609375
    7. '2' → logprob: -10.6761474609375
    8. '3' → logprob: -10.8011474609375
    9. '_arr' → logprob: -11.1761474609375
    10. 's' → logprob: -11.1761474609375

Token 240: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -4.060365608893335e-05
    2. '[' → logprob: -10.125041007995605
    3. 'rs' → logprob: -15.250041007995605
    4. 'ays' → logprob: -16.25004005432129
    5. '   ' → logprob: -17.25004005432129
    6. 'r' → logprob: -17.25004005432129
    7. ']' → logprob: -18.37504005432129
    8. 'ys' → logprob: -18.37504005432129
    9. 'arr' → logprob: -18.50004005432129
    10. '(' → logprob: -18.62504005432129

Token 241: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.008129963040119e-06
    2. '1' → logprob: -13.000003814697266
    3. '(' → logprob: -13.875003814697266
    4. '[
' → logprob: -15.750003814697266
    5. ' [' → logprob: -16.125003814697266
    6. '```' → logprob: -16.125003814697266
    7. '2' → logprob: -16.250003814697266
    8. '][' → logprob: -16.750003814697266
    9. 'import' → logprob: -17.125003814697266
    10. '()[' → logprob: -17.125003814697266

Token 242: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003932576219085604
    2. '2' → logprob: -7.875393390655518
    3. '[' → logprob: -11.75039291381836
    4. '0' → logprob: -12.50039291381836
    5. ' ' → logprob: -13.75039291381836
    6. '   ' → logprob: -15.62539291381836
    7. '```' → logprob: -15.87539291381836
    8. '
' → logprob: -17.00039291381836
    9. '(' → logprob: -17.25039291381836
    10. '-' → logprob: -18.12539291381836

Token 243: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5759847164154053
    2. '+' → logprob: -0.8259847164154053
    3. '[' → logprob: -10.325984954833984
    4. ' ' → logprob: -12.700984954833984
    5. ']+' → logprob: -12.825984954833984
    6. ']' → logprob: -13.075984954833984
    7. '```' → logprob: -13.950984954833984
    8. ')' → logprob: -14.200984954833984
    9. 'import' → logprob: -14.325984954833984
    10. '[]' → logprob: -14.450984954833984

Token 244: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.25193077325820923
    2. '+' → logprob: -1.5019307136535645
    3. '           ' → logprob: -14.126931190490723
    4. ' ' → logprob: -14.626931190490723
    5. '[' → logprob: -15.751931190490723
    6. '       ' → logprob: -16.751930236816406
    7. '            ' → logprob: -16.876930236816406
    8. 'import' → logprob: -17.126930236816406
    9. '        ' → logprob: -17.376930236816406
    10. '```' → logprob: -17.751930236816406

Token 245: ' o' (ID: 293)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.06196914613246918
    2. ' o' → logprob: -2.811969041824341
    3. '	o' → logprob: -13.811968803405762
    4. '(o' → logprob: -15.436968803405762
    5. '   ' → logprob: -16.061969757080078
    6. '           ' → logprob: -16.311969757080078
    7. ' ' → logprob: -16.936969757080078
    8. '       ' → logprob: -17.686969757080078
    9. '{o' → logprob: -18.061969757080078
    10. '    ' → logprob: -18.061969757080078

Token 246: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.935296834039036e-06
    2. '2' → logprob: -13.37500286102295
    3. '```' → logprob: -14.75000286102295
    4. '[
' → logprob: -15.12500286102295
    5. ' [' → logprob: -15.37500286102295
    6. 's' → logprob: -16.125003814697266
    7. '
' → logprob: -16.125003814697266
    8. '0' → logprob: -16.375003814697266
    9. '][' → logprob: -16.875003814697266
    10. ' ' → logprob: -18.500003814697266

Token 247: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.2617008400848135e-05
    2. '[' → logprob: -11.000032424926758
    3. '0' → logprob: -11.125032424926758
    4. '
' → logprob: -14.375032424926758
    5. '```' → logprob: -15.750032424926758
    6. ' ' → logprob: -16.000032424926758
    7. '-' → logprob: -16.625032424926758
    8. '(' → logprob: -16.750032424926758
    9. ']' → logprob: -16.750032424926758
    10. '   ' → logprob: -17.062532424926758

Token 248: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.35025379061698914
    2. ']' → logprob: -1.2252538204193115
    3. ' *' → logprob: -7.350253582000732
    4. ']*' → logprob: -7.350253582000732
    5. ')' → logprob: -7.975253582000732
    6. '}' → logprob: -8.85025405883789
    7. '<|end|>' → logprob: -10.72525405883789
    8. ')*' → logprob: -12.97525405883789
    9. '[' → logprob: -13.10025405883789
    10. '```' → logprob: -13.35025405883789

Token 249: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5759593844413757
    2. ' *' → logprob: -0.8259593844413757
    3. '<|end|>' → logprob: -11.075959205627441
    4. '*object' → logprob: -13.075959205627441
    5. '*self' → logprob: -13.950959205627441
    6. '**' → logprob: -14.450959205627441
    7. '```' → logprob: -15.325959205627441
    8. ' ' → logprob: -15.325959205627441
    9. '*out' → logprob: -16.075960159301758
    10. ')' → logprob: -16.200960159301758

Token 250: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01815134845674038
    2. ' self' → logprob: -4.01815128326416
    3. '	self' → logprob: -15.01815128326416
    4. ' ' → logprob: -15.26815128326416
    5. '(self' → logprob: -15.39315128326416
    6. '   ' → logprob: -15.76815128326416
    7. '           ' → logprob: -15.89315128326416
    8. '
' → logprob: -16.143152236938477
    9. '[self' → logprob: -16.393152236938477
    10. '*self' → logprob: -16.768152236938477

Token 251: '.arr' (ID: 76200)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13014249503612518
    2. 's' → logprob: -2.1301424503326416
    3. '2' → logprob: -6.005142688751221
    4. 'arr' → logprob: -7.880142688751221
    5. 'rs' → logprob: -9.755142211914062
    6. '(' → logprob: -9.880142211914062
    7. '3' → logprob: -10.255142211914062
    8. 'ss' → logprob: -10.380142211914062
    9. '][' → logprob: -10.755142211914062
    10. '```' → logprob: -10.880142211914062

Token 252: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.000628683075774461
    2. '[' → logprob: -7.375628471374512
    3. '   ' → logprob: -14.625628471374512
    4. '[-' → logprob: -15.375628471374512
    5. '2' → logprob: -15.500628471374512
    6. ']' → logprob: -15.500628471374512
    7. 'arr' → logprob: -15.500628471374512
    8. '3' → logprob: -15.875628471374512
    9. '(' → logprob: -16.000629425048828
    10. '0' → logprob: -16.000629425048828

Token 253: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00021843716967850924
    2. '2' → logprob: -8.875218391418457
    3. '(' → logprob: -10.375218391418457
    4. '][' → logprob: -10.625218391418457
    5. '0' → logprob: -12.250218391418457
    6. 's' → logprob: -12.375218391418457
    7. '```' → logprob: -12.375218391418457
    8. '[
' → logprob: -13.375218391418457
    9. 'def' → logprob: -13.500218391418457
    10. ']' → logprob: -13.500218391418457

Token 254: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001332382787950337
    2. '0' → logprob: -6.6263322830200195
    3. '[' → logprob: -12.37633228302002
    4. '-' → logprob: -14.37633228302002
    5. ' ' → logprob: -14.75133228302002
    6. '1' → logprob: -15.12633228302002
    7. '```' → logprob: -15.12633228302002
    8. '   ' → logprob: -15.25133228302002
    9. '
' → logprob: -15.56383228302002
    10. ']' → logprob: -16.188833236694336

Token 255: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11422796547412872
    2. ')' → logprob: -2.6142280101776123
    3. ']
' → logprob: -3.4892280101776123
    4. ')
' → logprob: -5.989227771759033
    5. '       ' → logprob: -6.739227771759033
    6. '])' → logprob: -7.864227771759033
    7. ')]' → logprob: -9.989228248596191
    8. ' ]' → logprob: -10.489228248596191
    9. ']
' → logprob: -11.114228248596191
    10. '])
' → logprob: -11.489228248596191

Token 256: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.093505099765025e-05
    2. 'v' → logprob: -11.375020980834961
    3. ',' → logprob: -12.375020980834961
    4. '       ' → logprob: -13.875020980834961
    5. ')' → logprob: -13.875020980834961
    6. '
' → logprob: -14.500020980834961
    7. '            
' → logprob: -14.500020980834961
    8. '          ' → logprob: -14.750020980834961
    9. '               ' → logprob: -14.750020980834961
    10. ' v' → logprob: -14.750020980834961

Token 257: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.0003948072553612292
    2. ' v' → logprob: -8.250394821166992
    3. '           ' → logprob: -9.750394821166992
    4. '
' → logprob: -9.750394821166992
    5. ')' → logprob: -12.125394821166992
    6. 's' → logprob: -13.000394821166992
    7. '       ' → logprob: -13.500394821166992
    8. 'max' → logprob: -13.625394821166992
    9. ')v' → logprob: -13.625394821166992
    10. '            
' → logprob: -14.250394821166992

Token 258: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.07898914813995361
    2. '.' → logprob: -2.578989028930664
    3. '.extend' → logprob: -9.453989028930664
    4. ' .' → logprob: -11.828989028930664
    5. '.app' → logprob: -11.953989028930664
    6. '.ap' → logprob: -12.078989028930664
    7. '.=' → logprob: -14.578989028930664
    8. '=' → logprob: -14.578989028930664
    9. '.sort' → logprob: -15.703989028930664
    10. '.push' → logprob: -16.203989028930664

Token 259: '(com' (ID: 27868)
  Prédit: '(sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sort' → logprob: -0.4818856418132782
    2. '(com' → logprob: -0.9818856716156006
    3. '(n' → logprob: -5.7318854331970215
    4. '(' → logprob: -6.3568854331970215
    5. '(max' → logprob: -6.7318854331970215
    6. '((' → logprob: -7.1068854331970215
    7. '(np' → logprob: -7.9818854331970215
    8. '(sorted' → logprob: -8.73188591003418
    9. '(int' → logprob: -8.85688591003418
    10. 'combined' → logprob: -9.98188591003418

Token 260: 'bined' (ID: 172357)
  Prédit: 'bined'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bined' → logprob: -0.0003221150254830718
    2. 'b' → logprob: -8.750322341918945
    3. 'bine' → logprob: -8.875322341918945
    4. 'ined' → logprob: -11.125322341918945
    5. 'combined' → logprob: -11.875322341918945
    6. '[b' → logprob: -13.875322341918945
    7. '[' → logprob: -15.000322341918945
    8. '(b' → logprob: -15.500322341918945
    9. 'bed' → logprob: -16.250322341918945
    10. 'bind' → logprob: -16.250322341918945

Token 261: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014768906403332949
    2. ')
' → logprob: -7.251476764678955
    3. '.max' → logprob: -7.501476764678955
    4. ' )' → logprob: -9.251477241516113
    5. '.sort' → logprob: -10.376477241516113
    6. 'max' → logprob: -10.501477241516113
    7. '.tolist' → logprob: -11.126477241516113
    8. ',)' → logprob: -11.626477241516113
    9. '.argmax' → logprob: -12.001477241516113
    10. '.sum' → logprob: -12.376477241516113

Token 262: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012354591861367226
    2. 'return' → logprob: -4.762354373931885
    3. ' return' → logprob: -5.887354373931885
    4. '
' → logprob: -7.012354373931885
    5. '        
' → logprob: -11.512354850769043
    6. ')' → logprob: -11.637354850769043
    7. '	return' → logprob: -11.887354850769043
    8. ',' → logprob: -12.012354850769043
    9. '   ' → logprob: -12.137354850769043
    10. '```' → logprob: -12.637354850769043

Token 263: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03772803023457527
    2. '       ' → logprob: -3.4127280712127686
    3. ' return' → logprob: -6.0377278327941895
    4. 'self' → logprob: -6.7877278327941895
    5. '
' → logprob: -7.9127278327941895
    6. 'v' → logprob: -9.162728309631348
    7. '   ' → logprob: -10.037728309631348
    8. '        
' → logprob: -11.537728309631348
    9. ')' → logprob: -12.162728309631348
    10. '```' → logprob: -12.287728309631348

Token 264: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.12145453691482544
    2. ' v' → logprob: -2.7464544773101807
    3. 'array' → logprob: -3.2464544773101807
    4. 'sort' → logprob: -4.87145471572876
    5. ' array' → logprob: -5.87145471572876
    6. ' sort' → logprob: -7.37145471572876
    7. 'tuple' → logprob: -9.121454238891602
    8. ' tuple' → logprob: -11.121454238891602
    9. 'n' → logprob: -11.246454238891602
    10. '[v' → logprob: -11.371454238891602

Token 265: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 266: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 267: ' take' (ID: 2304)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.005017667077481747
    2. ' max' → logprob: -6.1300177574157715
    3. ' solve' → logprob: -6.1300177574157715
    4. 'main' → logprob: -8.130017280578613
    5. ' maximize' → logprob: -8.505017280578613
    6. ' find' → logprob: -10.130017280578613
    7. ' process' → logprob: -10.505017280578613
    8. ' maximum' → logprob: -11.255017280578613
    9. 'solve' → logprob: -11.255017280578613
    10. ' get' → logprob: -11.630017280578613

Token 268: 'Top' (ID: 6046)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6471459865570068
    2. '_max' → logprob: -1.7721459865570068
    3. '_input' → logprob: -2.147145986557007
    4. '(' → logprob: -3.522145986557007
    5. '(n' → logprob: -3.647145986557007
    6. '(_' → logprob: -4.147146224975586
    7. '_indices' → logprob: -4.147146224975586
    8. '_sorted' → logprob: -4.397146224975586
    9. '_last' → logprob: -4.522146224975586
    10. '_min' → logprob: -4.897146224975586

Token 269: 'Sum' (ID: 17434)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.1639021635055542
    2. 'K' → logprob: -2.5389022827148438
    3. '_k' → logprob: -2.7889022827148438
    4. '(k' → logprob: -5.288902282714844
    5. '(arr' → logprob: -6.288902282714844
    6. '-k' → logprob: -7.538902282714844
    7. '(n' → logprob: -8.038902282714844
    8. '_elements' → logprob: -8.038902282714844
    9. 's' → logprob: -8.163902282714844
    10. 'n' → logprob: -8.288902282714844

Token 270: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.13533182442188263
    2. '(v' → logprob: -2.135331869125366
    3. '(lst' → logprob: -6.010331630706787
    4. '(' → logprob: -6.385331630706787
    5. '(vals' → logprob: -7.010331630706787
    6. '(k' → logprob: -7.260331630706787
    7. '(array' → logprob: -7.510331630706787
    8. '(n' → logprob: -7.635331630706787
    9. '(nums' → logprob: -7.885331630706787
    10. 's' → logprob: -8.010332107543945

Token 271: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015909895300865173
    2. 's' → logprob: -4.265909671783447
    3. ' ,' → logprob: -7.015909671783447
    4. ':' → logprob: -8.015910148620605
    5. 'ay' → logprob: -8.140910148620605
    6. 'ays' → logprob: -9.640910148620605
    7. ',n' → logprob: -9.890910148620605
    8. '):' → logprob: -10.640910148620605
    9. ',s' → logprob: -10.765910148620605
    10. 'arr' → logprob: -11.015910148620605

Token 272: ' m' (ID: 284)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.12121950834989548
    2. ' k' → logprob: -2.2462193965911865
    3. 'top' → logprob: -6.121219635009766
    4. 'count' → logprob: -6.371219635009766
    5. ' top' → logprob: -6.996219635009766
    6. 'cnt' → logprob: -7.871219635009766
    7. 'n' → logprob: -8.121219635009766
    8. 't' → logprob: -8.371219635009766
    9. 'K' → logprob: -8.371219635009766
    10. 'idx' → logprob: -8.496219635009766

Token 273: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.22708559036254883
    2. ',' → logprob: -1.6020855903625488
    3. '):
' → logprob: -6.477085590362549
    4. ')' → logprob: -9.60208511352539
    5. ' ):' → logprob: -10.60208511352539
    6. ':' → logprob: -11.35208511352539
    7. '   ' → logprob: -11.47708511352539
    8. '):
' → logprob: -11.47708511352539
    9. ' ,' → logprob: -12.35208511352539
    10. '  ' → logprob: -14.35208511352539

Token 274: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007636455120518804
    2. 'arr' → logprob: -8.000763893127441
    3. 'return' → logprob: -8.125763893127441
    4. ' return' → logprob: -9.375763893127441
    5. 'sorted' → logprob: -10.250763893127441
    6. ' sorted' → logprob: -12.125763893127441
    7. 'sort' → logprob: -12.625763893127441
    8. '   ' → logprob: -14.250763893127441
    9. '    
' → logprob: -14.500763893127441
    10. 'n' → logprob: -14.625763893127441

Token 275: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.11566592007875443
    2. 'sort' → logprob: -2.490665912628174
    3. 'arr' → logprob: -4.490665912628174
    4. ' return' → logprob: -4.865665912628174
    5. 'sorted' → logprob: -6.115665912628174
    6. 'n' → logprob: -6.365665912628174
    7. '   ' → logprob: -6.615665912628174
    8. ' sort' → logprob: -7.740665912628174
    9. 'idx' → logprob: -7.865665912628174
    10. 'indices' → logprob: -7.990665912628174

Token 276: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.09680003672838211
    2. ' n' → logprob: -2.9718000888824463
    3. 'arr' → logprob: -3.2218000888824463
    4. ' arr' → logprob: -8.221799850463867
    5. 'sum' → logprob: -8.221799850463867
    6. 'sort' → logprob: -8.221799850463867
    7. 'int' → logprob: -8.721799850463867
    8. 'np' → logprob: -9.221799850463867
    9. ' ' → logprob: -10.596799850463867
    10. 'sorted' → logprob: -10.971799850463867

Token 277: 'psum' (ID: 65853)
  Prédit: 'psum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'psum' → logprob: -0.04886394739151001
    2. 'ps' → logprob: -3.0488638877868652
    3. 'p' → logprob: -8.423864364624023
    4. 'sum' → logprob: -10.548864364624023
    5. 'pm' → logprob: -11.548864364624023
    6. 'psz' → logprob: -12.298864364624023
    7. 'n' → logprob: -13.048864364624023
    8. 'arr' → logprob: -13.298864364624023
    9. '	ps' → logprob: -13.423864364624023
    10. 'par' → logprob: -13.673864364624023

Token 278: '(sort' (ID: 88005)
  Prédit: '(sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sort' → logprob: -0.010704311542212963
    2. '(arr' → logprob: -5.385704517364502
    3. '(np' → logprob: -5.760704517364502
    4. '(sorted' → logprob: -6.385704517364502
    5. '(' → logprob: -7.385704517364502
    6. '(-' → logprob: -8.385704040527344
    7. 'sort' → logprob: -8.635704040527344
    8. '(n' → logprob: -9.135704040527344
    9. 'arr' → logprob: -10.135704040527344
    10. '(t' → logprob: -10.760704040527344

Token 279: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -9.77022064034827e-05
    2. 'arr' → logprob: -9.250097274780273
    3. '(' → logprob: -13.875097274780273
    4. '[arr' → logprob: -14.875097274780273
    5. '(-' → logprob: -16.125097274780273
    6. ' arr' → logprob: -16.375097274780273
    7. '-arr' → logprob: -17.500097274780273
    8. '<arr' → logprob: -18.625097274780273
    9. '	arr' → logprob: -18.750097274780273
    10. '(
' → logprob: -19.000097274780273

Token 280: ')[' (ID: 13637)
  Prédit: ')['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')[' → logprob: -0.0006208192789927125
    2. ')' → logprob: -7.8756208419799805
    3. '   ' → logprob: -8.50062084197998
    4. ' )' → logprob: -11.62562084197998
    5. ',' → logprob: -12.37562084197998
    6. '[::-' → logprob: -12.75062084197998
    7. '    ' → logprob: -12.87562084197998
    8. '       ' → logprob: -13.00062084197998
    9. 'arr' → logprob: -13.00062084197998
    10. ' ' → logprob: -13.25062084197998

Token 281: '::-' (ID: 96612)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.658284068107605
    2. '-m' → logprob: -0.783284068107605
    3. '-n' → logprob: -4.6582841873168945
    4. ' -' → logprob: -5.7832841873168945
    5. ':-' → logprob: -6.0332841873168945
    6. '::-' → logprob: -6.1582841873168945
    7. ':' → logprob: -6.7832841873168945
    8. '-M' → logprob: -6.7832841873168945
    9. ':m' → logprob: -7.0332841873168945
    10. '   ' → logprob: -7.7832841873168945

Token 282: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4961279630661011
    2. '-' → logprob: -0.9961279630661011
    3. 'slice' → logprob: -5.246128082275391
    4. '[:' → logprob: -5.496128082275391
    5. '[-' → logprob: -5.621128082275391
    6. 'top' → logprob: -6.371128082275391
    7. 'm' → logprob: -6.496128082275391
    8. 'x' → logprob: -7.121128082275391
    9. 'int' → logprob: -7.246128082275391
    10. 'c' → logprob: -7.371128082275391

Token 283: '][:' (ID: 63357)
  Prédit: '][:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][:' → logprob: -0.07957533746957779
    2. '[:' → logprob: -2.579575300216675
    3. ',' → logprob: -7.704575538635254
    4. ',:' → logprob: -8.579575538635254
    5. '   ' → logprob: -11.079575538635254
    6. ':' → logprob: -11.829575538635254
    7. '])' → logprob: -11.954575538635254
    8. ' :' → logprob: -12.454575538635254
    9. ']' → logprob: -12.579575538635254
    10. ' ' → logprob: -12.954575538635254

Token 284: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -3.128163257315464e-07
    2. ' m' → logprob: -15.25
    3. '   ' → logprob: -19.375
    4. ')m' → logprob: -20.5
    5. '```' → logprob: -21.875
    6. ')' → logprob: -23.0
    7. '
' → logprob: -23.375
    8. '	m' → logprob: -23.75
    9. ' ' → logprob: -24.0
    10. ',' → logprob: -24.25

Token 285: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3868977725505829
    2. '])' → logprob: -1.1368978023529053
    3. ' )' → logprob: -12.011898040771484
    4. ']' → logprob: -12.386898040771484
    5. ')
' → logprob: -12.511898040771484
    6. '))' → logprob: -13.011898040771484
    7. ')])' → logprob: -13.136898040771484
    8. '   ' → logprob: -13.261898040771484
    9. '})' → logprob: -13.386898040771484
    10. ' ])' → logprob: -13.761898040771484

Token 286: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 287: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.20141440629959106
    2. '__' → logprob: -1.7014143466949463
    3. 'name' → logprob: -14.951414108276367
    4. '_' → logprob: -15.826414108276367
    5. ' True' → logprob: -16.076414108276367
    6. '___' → logprob: -16.201414108276367
    7. '_name' → logprob: -16.326414108276367
    8. 'True' → logprob: -16.451414108276367
    9. ' ' → logprob: -16.576414108276367
    10. ' "__' → logprob: -16.701414108276367

Token 288: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1927010864019394
    2. ' ==' → logprob: -1.9427011013031006
    3. ' __' → logprob: -4.1927008628845215
    4. '==' → logprob: -4.4427008628845215
    5. 'name' → logprob: -5.4427008628845215
    6. 'if' → logprob: -7.8177008628845215
    7. '=="' → logprob: -9.19270133972168
    8. '.__' → logprob: -9.94270133972168
    9. ' (__' → logprob: -10.56770133972168
    10. '__.' → logprob: -10.81770133972168

Token 289: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.000536232371814549
    2. '==' → logprob: -7.6255364418029785
    3. '=="' → logprob: -10.87553596496582
    4. ' ==' → logprob: -11.12553596496582
    5. '__.__' → logprob: -11.50053596496582
    6. '_' → logprob: -13.50053596496582
    7. '__.' → logprob: -14.00053596496582
    8. '=='' → logprob: -14.62553596496582
    9. '___' → logprob: -14.75053596496582
    10. '"' → logprob: -15.12553596496582

Token 290: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.45049670338630676
    2. '==' → logprob: -1.2004966735839844
    3. '__' → logprob: -2.9504966735839844
    4. '=="' → logprob: -4.700496673583984
    5. '=='' → logprob: -8.825496673583984
    6. '_' → logprob: -11.075496673583984
    7. '==
' → logprob: -11.075496673583984
    8. '=' → logprob: -11.075496673583984
    9. ' =="' → logprob: -11.575496673583984
    10. ' ' → logprob: -11.825496673583984

Token 291: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.011310352943837643
    2. ''' → logprob: -4.511310577392578
    3. ' "__' → logprob: -8.261310577392578
    4. ' '__' → logprob: -13.261310577392578
    5. '__' → logprob: -13.511310577392578
    6. ' "' → logprob: -14.011310577392578
    7. '"_' → logprob: -16.511310577392578
    8. '"user' → logprob: -16.886310577392578
    9. '"name' → logprob: -17.261310577392578
    10. '("__' → logprob: -18.261310577392578

Token 292: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -3.726595241460018e-05
    2. 'name' → logprob: -10.50003719329834
    3. '__' → logprob: -11.62503719329834
    4. '"' → logprob: -14.62503719329834
    5. '_main' → logprob: -16.000038146972656
    6. ''' → logprob: -16.125038146972656
    7. 'm' → logprob: -17.875038146972656
    8. ' main' → logprob: -18.125038146972656
    9. 'ma' → logprob: -18.750038146972656
    10. '(main' → logprob: -18.875038146972656

Token 293: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.06145797297358513
    2. '__' → logprob: -3.061457872390747
    3. '__:' → logprob: -4.436458110809326
    4. '__":
' → logprob: -7.436458110809326
    5. ':' → logprob: -8.061457633972168
    6. '':' → logprob: -10.186457633972168
    7. '_' → logprob: -12.936457633972168
    8. ':
' → logprob: -13.686457633972168
    9. '':
' → logprob: -13.811457633972168
    10. '():
' → logprob: -13.936457633972168

Token 294: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0034335232339799404
    2. 'n' → logprob: -5.753433704376221
    3. ' n' → logprob: -8.503433227539062
    4. '(n' → logprob: -10.378433227539062
    5. '	n' → logprob: -11.253433227539062
    6. 'x' → logprob: -13.378433227539062
    7. '    
' → logprob: -13.628433227539062
    8. '```' → logprob: -13.753433227539062
    9. '       ' → logprob: -13.878433227539062
    10. ' ' → logprob: -14.378433227539062

Token 295: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00037621514638885856
    2. '   ' → logprob: -8.000375747680664
    3. ' n' → logprob: -10.125375747680664
    4. '	n' → logprob: -15.125375747680664
    5. 'def' → logprob: -16.000375747680664
    6. 'import' → logprob: -16.000375747680664
    7. 'nm' → logprob: -16.000375747680664
    8. 'N' (adapté à ' N') → logprob: -16.875375747680664
    9. 'from' → logprob: -17.125375747680664
    10. ' ' → logprob: -17.375375747680664

Token 296: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00035631912760436535
    2. ' ,' → logprob: -8.500356674194336
    3. ',M' → logprob: -8.875356674194336
    4. ',m' → logprob: -11.500356674194336
    5. 'M' → logprob: -13.750356674194336
    6. 'm' → logprob: -14.500356674194336
    7. ',
' → logprob: -15.375356674194336
    8. ' ' → logprob: -15.625356674194336
    9. '‌,' → logprob: -15.812856674194336
    10. ' M' → logprob: -16.187856674194336

Token 297: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.20141996443271637
    2. 'M' → logprob: -1.7014199495315552
    3. 'm' → logprob: -12.326419830322266
    4. '<|end|>' → logprob: -13.826419830322266
    5. ' ' → logprob: -14.201419830322266
    6. ' m' → logprob: -14.701419830322266
    7. '  ' → logprob: -16.951419830322266
    8. ' =' → logprob: -17.076419830322266
    9. ' ' → logprob: -17.451419830322266
    10. '   ' → logprob: -18.076419830322266

Token 298: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519300878047943
    2. '=' → logprob: -1.5019301176071167
    3. ',' → logprob: -14.501930236816406
    4. '=get' → logprob: -15.501930236816406
    5. '＝' → logprob: -16.751930236816406
    6. '=input' → logprob: -16.751930236816406
    7. ' =)' → logprob: -17.251930236816406
    8. ')' → logprob: -17.376930236816406
    9. '=n' → logprob: -17.376930236816406
    10. '=N' → logprob: -18.126930236816406

Token 299: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.5759397745132446
    2. 'get' → logprob: -0.8259397745132446
    3. ' map' → logprob: -15.450940132141113
    4. 'map' → logprob: -15.825940132141113
    5. '	get' → logprob: -17.825939178466797
    6. ' ' → logprob: -18.700939178466797
    7. '=get' → logprob: -19.075939178466797
    8. '   ' → logprob: -20.325939178466797
    9. '(get' → logprob: -20.450939178466797
    10. '[get' → logprob: -20.575939178466797

Token 300: 'NM' (ID: 63892)
  Prédit: 'NM'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NM' → logprob: -3.173704271830502e-06
    2. ' NM' → logprob: -12.87500286102295
    3. 'M' → logprob: -14.75000286102295
    4. 'N' → logprob: -16.625003814697266
    5. '(N' → logprob: -17.000003814697266
    6. '(' → logprob: -17.125003814697266
    7. 'TM' → logprob: -18.125003814697266
    8. 'nm' → logprob: -18.750003814697266
    9. '(n' → logprob: -19.500003814697266
    10. 'SM' → logprob: -19.875003814697266

Token 301: '()' (ID: 416)
  Prédit: '()
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.5759856700897217
    2. '()' → logprob: -0.8259856700897217
    3. '
' → logprob: -11.0759859085083
    4. '()
' → logprob: -11.0759859085083
    5. '   ' → logprob: -11.8259859085083
    6. '()

' → logprob: -12.2009859085083
    7. ' ()' → logprob: -14.3259859085083
    8. '(' → logprob: -14.3259859085083
    9. ' ()
' → logprob: -14.8259859085083
    10. 'x' → logprob: -15.3259859085083

Token 302: '            ' (ID: 3346)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28414401412010193
    2. 'x' → logprob: -1.4091440439224243
    3. 'points' → logprob: -6.659143924713135
    4. 'X' → logprob: -7.034143924713135
    5. 'xyz' → logprob: -7.784143924713135
    6. ' x' → logprob: -8.784144401550293
    7. '    
' → logprob: -9.409144401550293
    8. ' points' → logprob: -9.909144401550293
    9. 'XYZ' → logprob: -10.034144401550293
    10. '
' → logprob: -11.034144401550293

Token 303: ' #' (ID: 1069)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.11433407664299011
    2. '   ' → logprob: -2.4893341064453125
    3. 'X' → logprob: -3.8643341064453125
    4. '
' → logprob: -6.2393341064453125
    5. '    
' → logprob: -7.1143341064453125
    6. 'points' → logprob: -7.3643341064453125
    7. ' x' → logprob: -7.9893341064453125
    8. 'xyz' → logprob: -9.489334106445312
    9. ' points' → logprob: -9.614334106445312
    10. 'XYZ' → logprob: -10.239334106445312

Token 304: ' Proced' (ID: 79425)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.016518855467438698
    2. 'X' → logprob: -4.641519069671631
    3. 'points' → logprob: -5.141519069671631
    4. 'xyz' → logprob: -7.891519069671631
    5. 'xs' → logprob: -8.141518592834473
    6. 'pts' → logprob: -9.016518592834473
    7. 'XYZ' → logprob: -10.516518592834473
    8. ' x' → logprob: -11.016518592834473
    9. '   ' → logprob: -11.391518592834473
    10. 'coords' → logprob: -11.641518592834473

Token 305: 'ural' (ID: 4900)
  Prédit: 'ural'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ural' → logprob: -0.2347388118505478
    2. 'ure' → logprob: -1.859738826751709
    3. 'ur' → logprob: -2.984738826751709
    4. 'ures' → logprob: -6.109738826751709
    5. 'e' → logprob: -7.484738826751709
    6. 'ed' → logprob: -10.10973834991455
    7. 'ura' → logprob: -10.48473834991455
    8. 'd' → logprob: -10.73473834991455
    9. 'ue' → logprob: -11.73473834991455
    10. 'urals' → logprob: -11.73473834991455

Token 306: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47719845175743103
    2. 'x' → logprob: -0.9771984815597534
    3. '    
' → logprob: -6.727198600769043
    4. '
' → logprob: -7.102198600769043
    5. ' x' → logprob: -7.727198600769043
    6. '```' → logprob: -8.602198600769043
    7. 'X' → logprob: -8.852198600769043
    8. 'points' → logprob: -9.477198600769043
    9. ',' → logprob: -10.102198600769043
    10. '  ' → logprob: -10.102198600769043

Token 307: '   ' (ID: 271)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04614490270614624
    2. 'X' → logprob: -3.671144962310791
    3. '   ' → logprob: -4.671144962310791
    4. 'points' → logprob: -4.921144962310791
    5. 'xyz' → logprob: -6.421144962310791
    6. 'xs' → logprob: -7.296144962310791
    7. 'XYZ' → logprob: -8.296144485473633
    8. 'pts' → logprob: -9.046144485473633
    9. 'coords' → logprob: -9.546144485473633
    10. ' x' → logprob: -9.796144485473633

Token 308: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.10569556802511215
    2. 'X' → logprob: -2.4806954860687256
    3. 'points' → logprob: -4.230695724487305
    4. 'xs' → logprob: -7.105695724487305
    5. 'xyz' → logprob: -7.605695724487305
    6. 'pts' → logprob: -7.605695724487305
    7. 'XYZ' → logprob: -9.355695724487305
    8. 'coords' → logprob: -10.105695724487305
    9. 'p' → logprob: -10.480695724487305
    10. 'point' → logprob: -10.980695724487305

Token 309: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.027225754223764e-05
    2. ' ,' → logprob: -10.500060081481934
    3. 's' → logprob: -11.375060081481934
    4. ',y' → logprob: -11.500060081481934
    5. '=' → logprob: -12.125060081481934
    6. ' =' → logprob: -12.750060081481934
    7. '[' → logprob: -13.875060081481934
    8. '_,' → logprob: -14.625060081481934
    9. ',Y' → logprob: -15.375060081481934
    10. ',x' → logprob: -15.625060081481934

Token 310: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0380416102707386
    2. ' y' → logprob: -3.288041591644287
    3. '   ' → logprob: -16.288042068481445
    4. 'x' → logprob: -17.538042068481445
    5. '	y' → logprob: -17.663042068481445
    6. '    ' → logprob: -17.788042068481445
    7. '<|end|>' → logprob: -17.788042068481445
    8. ' ' → logprob: -17.913042068481445
    9. '  ' → logprob: -18.413042068481445
    10. 'Y' → logprob: -19.538042068481445

Token 311: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.771655115589965e-05
    2. '=' → logprob: -11.000018119812012
    3. ' ,' → logprob: -14.625018119812012
    4. ' =' → logprob: -15.000018119812012
    5. '<|end|>' → logprob: -16.125017166137695
    6. ',y' → logprob: -16.500017166137695
    7. ',z' → logprob: -18.000017166137695
    8. '‌,' → logprob: -18.125017166137695
    9. ',
' → logprob: -18.750017166137695
    10. '_,' → logprob: -19.000017166137695

Token 312: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.029751529917120934
    2. ' z' → logprob: -3.5297515392303467
    3. '   ' → logprob: -14.779751777648926
    4. '	z' → logprob: -15.029751777648926
    5. '  ' → logprob: -16.15475082397461
    6. 'x' → logprob: -16.27975082397461
    7. ' ' → logprob: -16.27975082397461
    8. ',' → logprob: -17.52975082397461
    9. ',z' → logprob: -17.52975082397461
    10. 'Z' → logprob: -17.65475082397461

Token 313: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04859418421983719
    2. ' =' → logprob: -3.0485942363739014
    3. ',' → logprob: -11.92359447479248
    4. ')' → logprob: -16.173593521118164
    5. '=get' → logprob: -16.798593521118164
    6. '=

' → logprob: -17.173593521118164
    7. '＝' → logprob: -18.048593521118164
    8. ')=' → logprob: -18.423593521118164
    9. 'x' → logprob: -18.673593521118164
    10. ' ' → logprob: -18.923593521118164

Token 314: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.014165272004902363
    2. ' get' → logprob: -4.26416540145874
    3. '   ' → logprob: -13.889164924621582
    4. '(get' → logprob: -15.139164924621582
    5. '[get' → logprob: -15.264164924621582
    6. '=get' → logprob: -15.639164924621582
    7. ' ' → logprob: -16.7641658782959
    8. '
' → logprob: -16.7641658782959
    9. '.get' → logprob: -16.8891658782959
    10. '	get' → logprob: -17.2641658782959

Token 315: 'Points' (ID: 14117)
  Prédit: 'Points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Points' → logprob: -8.061054359131958e-06
    2. 'points' → logprob: -12.375007629394531
    3. '(N' → logprob: -13.000007629394531
    4. '_points' → logprob: -14.125007629394531
    5. 'Point' → logprob: -15.250007629394531
    6. ' Points' → logprob: -15.250007629394531
    7. '(' → logprob: -15.875007629394531
    8. ' points' → logprob: -16.37500762939453
    9. 'P' → logprob: -16.87500762939453
    10. '(P' → logprob: -17.75000762939453

Token 316: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -2.069664333248511e-05
    2. 'N' → logprob: -11.000020980834961
    3. '(' → logprob: -12.500020980834961
    4. '   ' → logprob: -16.37502098083496
    5. '(M' → logprob: -17.25002098083496
    6. '(
' → logprob: -17.25002098083496
    7. ' (' → logprob: -17.75002098083496
    8. '(n' → logprob: -18.00002098083496
    9. '```' → logprob: -18.37502098083496
    10. '((' → logprob: -19.37502098083496

Token 317: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.685467764735222e-05
    2. ')
' → logprob: -9.375086784362793
    3. '   ' → logprob: -14.375086784362793
    4. '()' → logprob: -14.625086784362793
    5. ')

' → logprob: -15.000086784362793
    6. '())' → logprob: -15.000086784362793
    7. '(N' → logprob: -15.875086784362793
    8. ' )' → logprob: -16.25008773803711
    9. ')
' → logprob: -16.87508773803711
    10. ')`' → logprob: -17.37508773803711

Token 318: '    ' (ID: 257)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011048882268369198
    2. ' comb' → logprob: -4.886048793792725
    3. '
' → logprob: -6.636048793792725
    4. '    
' → logprob: -6.761048793792725
    5. 'com' → logprob: -7.636048793792725
    6. 'xyz' → logprob: -8.136049270629883
    7. 'comb' → logprob: -9.636049270629883
    8. 'c' → logprob: -10.136049270629883
    9. ' xyz' → logprob: -10.386049270629883
    10. ' combin' → logprob: -11.136049270629883

Token 319: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0815570056438446
    2. ' comb' → logprob: -3.081557035446167
    3. 'com' → logprob: -4.706556797027588
    4. '
' → logprob: -4.831556797027588
    5. 'xyz' → logprob: -5.206556797027588
    6. 'comb' → logprob: -5.581556797027588
    7. ' combin' → logprob: -5.956556797027588
    8. '    
' → logprob: -6.581556797027588
    9. 'c' → logprob: -6.831556797027588
    10. ' xyz' → logprob: -7.331556797027588

Token 320: ' Functional' (ID: 94981)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -1.2953747510910034
    2. 'xyz' → logprob: -1.2953747510910034
    3. ' comb' → logprob: -1.5453747510910034
    4. 'comb' → logprob: -1.7953747510910034
    5. ' combin' → logprob: -3.545374870300293
    6. ' xyz' → logprob: -3.545374870300293
    7. 'XYZ' → logprob: -5.670374870300293
    8. 'combo' → logprob: -6.045374870300293
    9. '   ' → logprob: -6.420374870300293
    10. '
' → logprob: -6.545374870300293

Token 321: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018713105469942093
    2. 'com' → logprob: -4.643712997436523
    3. 'comb' → logprob: -5.643712997436523
    4. 'xyz' → logprob: -6.018712997436523
    5. ' comb' → logprob: -6.643712997436523
    6. '    
' → logprob: -7.393712997436523
    7. '
' → logprob: -7.518712997436523
    8. 'c' → logprob: -8.143712997436523
    9. 'xc' → logprob: -10.268712997436523
    10. 'combo' → logprob: -10.268712997436523

Token 322: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06718917936086655
    2. 'com' → logprob: -3.5671892166137695
    3. 'comb' → logprob: -4.1921892166137695
    4. 'xyz' → logprob: -4.3171892166137695
    5. ' comb' → logprob: -5.0671892166137695
    6. 'c' → logprob: -7.3171892166137695
    7. ' xyz' → logprob: -8.19218921661377
    8. '    
' → logprob: -8.31718921661377
    9. 'xc' → logprob: -8.69218921661377
    10. 'x' → logprob: -8.94218921661377

Token 323: ' xyz' (ID: 82501)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.4286843538284302
    2. 'com' → logprob: -1.1786843538284302
    3. 'xyz' (adapté à ' xyz') → logprob: -3.5536842346191406
    4. 'c' → logprob: -5.678684234619141
    5. 'combo' → logprob: -6.053684234619141
    6. 'res' → logprob: -6.178684234619141
    7. 'vals' → logprob: -6.803684234619141
    8. 'xc' → logprob: -7.178684234619141
    9. 'result' → logprob: -7.803684234619141
    10. 'x' → logprob: -8.05368423461914

Token 324: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.627419114112854
    2. '_comb' → logprob: -1.502419114112854
    3. '_com' → logprob: -1.877419114112854
    4. 'com' → logprob: -3.0024189949035645
    5. '=' → logprob: -3.6274189949035645
    6. 'comb' → logprob: -5.0024189949035645
    7. 'Com' → logprob: -5.6274189949035645
    8. 'Comb' → logprob: -6.0024189949035645
    9. '_combo' → logprob: -7.2524189949035645
    10. 'c' → logprob: -8.377419471740723

Token 325: ' XYZ' (ID: 142627)
  Prédit: 'XYZ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XYZ' → logprob: -0.000553151941858232
    2. ' XYZ' → logprob: -7.500553131103516
    3. 'xyz' → logprob: -16.875553131103516
    4. 'XY' → logprob: -17.000553131103516
    5. ' ' → logprob: -17.125553131103516
    6. 'X' → logprob: -18.375553131103516
    7. '   ' → logprob: -19.125553131103516
    8. 'XZ' → logprob: -19.500553131103516
    9. 'ABC' → logprob: -19.625553131103516
    10. '  ' → logprob: -19.625553131103516

Token 326: 'Com' (ID: 1059)
  Prédit: 'Com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Com' → logprob: -1.9361264946837764e-07
    2. ' Com' → logprob: -15.875
    3. 'com' → logprob: -17.0
    4. 'xyz' → logprob: -19.75
    5. '_com' → logprob: -19.875
    6. '-Com' → logprob: -21.0
    7. 'COM' → logprob: -21.375
    8. '_Com' → logprob: -21.375
    9. '(x' → logprob: -21.5
    10. 'x' → logprob: -21.875

Token 327: 'bin' (ID: 11893)
  Prédit: 'inator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inator' → logprob: -0.20357440412044525
    2. 'bin' → logprob: -1.7035744190216064
    3. 'in' → logprob: -6.578574180603027
    4. 'ator' → logprob: -7.203574180603027
    5. 'b' → logprob: -11.203574180603027
    6. 'inat' → logprob: -12.953574180603027
    7. 'ulator' → logprob: -13.703574180603027
    8. 'int' → logprob: -13.828574180603027
    9. 'bat' → logprob: -13.953574180603027
    10. '_bin' → logprob: -14.203574180603027

Token 328: 'ator' (ID: 1246)
  Prédit: 'ator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ator' → logprob: 0.0
    2. 'tor' → logprob: -18.875
    3. 'ATOR' → logprob: -19.25
    4. 'at' → logprob: -20.0
    5. 'lator' → logprob: -20.875
    6. 'атор' → logprob: -21.625
    7. '   ' → logprob: -21.875
    8. 's' → logprob: -22.0
    9. 'v' → logprob: -22.0
    10. 'ulator' → logprob: -22.25

Token 329: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -4.723352049040841e-06
    2. '(' → logprob: -13.250004768371582
    3. ' (' → logprob: -13.250004768371582
    4. 'x' → logprob: -13.875004768371582
    5. '(
' → logprob: -15.875004768371582
    6. '```' → logprob: -20.000003814697266
    7. '   ' → logprob: -20.375003814697266
    8. '[x' → logprob: -20.625003814697266
    9. '((' → logprob: -21.125003814697266
    10. '3' → logprob: -21.625003814697266

Token 330: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.723973582556937e-05
    2. ',y' → logprob: -11.375017166137695
    3. ' ,' → logprob: -12.125017166137695
    4. ',
' → logprob: -16.375017166137695
    5. 'y' → logprob: -16.500017166137695
    6. '   ' → logprob: -16.625017166137695
    7. ')' → logprob: -17.375017166137695
    8. '),' → logprob: -18.250017166137695
    9. ',x' → logprob: -19.250017166137695
    10. '```' → logprob: -19.875017166137695

Token 331: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.03804149478673935
    2. ' y' → logprob: -3.288041591644287
    3. '   ' → logprob: -17.538042068481445
    4. ',' → logprob: -18.413042068481445
    5. '	y' → logprob: -18.413042068481445
    6. ' ' → logprob: -18.788042068481445
    7. '    ' → logprob: -18.913042068481445
    8. '  ' → logprob: -19.038042068481445
    9. ')' → logprob: -19.288042068481445
    10. 'z' → logprob: -19.663042068481445

Token 332: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.7530574849806726e-05
    2. ',z' → logprob: -10.500057220458984
    3. 'z' → logprob: -11.000057220458984
    4. ' ,' → logprob: -11.250057220458984
    5. ' z' → logprob: -15.875057220458984
    6. '   ' → logprob: -16.375057220458984
    7. ')' → logprob: -17.500057220458984
    8. '),' → logprob: -18.000057220458984
    9. ',
' → logprob: -18.125057220458984
    10. '_,' → logprob: -18.625057220458984

Token 333: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.004620710853487253
    2. ' z' → logprob: -5.379620552062988
    3. '	z' → logprob: -15.754620552062988
    4. '   ' → logprob: -15.754620552062988
    5. ' ' → logprob: -16.379621505737305
    6. ')' → logprob: -17.254621505737305
    7. 'x' → logprob: -17.504621505737305
    8. '  ' → logprob: -17.754621505737305
    9. '    ' → logprob: -18.504621505737305
    10. ',z' → logprob: -18.629621505737305

Token 334: ').' (ID: 741)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0029633231461048126
    2. ')
' → logprob: -6.252963542938232
    3. ').' → logprob: -6.877963542938232
    4. ')

' → logprob: -12.877963066101074
    5. ')
' → logprob: -14.877963066101074
    6. ' )' → logprob: -15.002963066101074
    7. '),' → logprob: -16.00296401977539
    8. ')`' → logprob: -16.00296401977539
    9. '())' → logprob: -16.37796401977539
    10. '   ' → logprob: -16.50296401977539

Token 335: 'build' (ID: 9242)
  Prédit: 'build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: 0.0
    2. 'built' → logprob: -19.875
    3. '```' → logprob: -20.375
    4. ' build' → logprob: -21.875
    5. '	build' → logprob: -21.875
    6. '.build' → logprob: -22.125
    7. '_build' → logprob: -22.875
    8. 'create' → logprob: -23.0
    9. '
' → logprob: -23.5
    10. 'print' → logprob: -23.875

Token 336: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.438573680294212e-06
    2. '()
' → logprob: -12.250005722045898
    3. '()`' → logprob: -15.500005722045898
    4. ' ()' → logprob: -16.1250057220459
    5. '()

' → logprob: -16.1250057220459
    6. '()]' → logprob: -16.8750057220459
    7. '();' → logprob: -17.2500057220459
    8. '(),' → logprob: -17.3750057220459
    9. '()"' → logprob: -17.5000057220459
    10. '()?' → logprob: -17.8750057220459

Token 337: '  ' (ID: 256)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0555693693459034
    2. 'result' → logprob: -3.4305694103240967
    3. 'res' → logprob: -4.680569171905518
    4. 'max' → logprob: -4.805569171905518
    5. 'answer' → logprob: -5.930569171905518
    6. 'ans' → logprob: -7.180569171905518
    7. 'results' → logprob: -8.055569648742676
    8. '   ' → logprob: -8.680569648742676
    9. 'answers' → logprob: -9.055569648742676
    10. 'r' → logprob: -9.930569648742676

Token 338: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11708580702543259
    2. 'res' → logprob: -2.8670856952667236
    3. 'max' → logprob: -3.6170856952667236
    4. 'result' → logprob: -4.242085933685303
    5. 'ans' → logprob: -4.992085933685303
    6. 'answer' → logprob: -5.867085933685303
    7. 'results' → logprob: -6.867085933685303
    8. '   ' → logprob: -7.367085933685303
    9. 'answers' → logprob: -7.617085933685303
    10. 'best' → logprob: -8.992085456848145

Token 339: ' O' (ID: 532)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.03680819645524025
    2. '[max' → logprob: -3.7868082523345947
    3. '[' → logprob: -5.786808013916016
    4. ' max' → logprob: -6.036808013916016
    5. 'sum' → logprob: -6.411808013916016
    6. 'results' → logprob: -6.411808013916016
    7. 'res' → logprob: -6.786808013916016
    8. 'result' → logprob: -6.786808013916016
    9. 'ans' → logprob: -7.536808013916016
    10. 'top' → logprob: -8.036808013916016

Token 340: 'OP' (ID: 4164)
  Prédit: 'pt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pt' → logprob: -0.48087653517723083
    2. '(max' → logprob: -2.2308764457702637
    3. 'ut' → logprob: -2.3558764457702637
    4. '()' → logprob: -2.9808764457702637
    5. 'p' → logprob: -3.2308764457702637
    6. '(' → logprob: -3.8558764457702637
    7. '()
' → logprob: -4.480876445770264
    8. 'b' → logprob: -4.855876445770264
    9. 'pts' → logprob: -5.105876445770264
    10. '(N' → logprob: -5.230876445770264

Token 341: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01698213815689087
    2. 'result' → logprob: -4.391982078552246
    3. '   ' → logprob: -6.266982078552246
    4. 'max' → logprob: -7.141982078552246
    5. 'answer' → logprob: -7.391982078552246
    6. 'res' → logprob: -7.516982078552246
    7. '```' → logprob: -8.766982078552246
    8. 'best' → logprob: -8.891982078552246
    9. 'results' → logprob: -9.141982078552246
    10. 'r' → logprob: -9.891982078552246

Token 342: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00020330198458395898
    2. 'result' → logprob: -9.250203132629395
    3. '   ' → logprob: -9.375203132629395
    4. 'max' → logprob: -11.125203132629395
    5. '```' → logprob: -12.750203132629395
    6. 'results' → logprob: -13.750203132629395
    7. 'answer' → logprob: -13.750203132629395
    8. ' print' → logprob: -13.875203132629395
    9. '_print' → logprob: -13.875203132629395
    10. '    
' → logprob: -15.750203132629395

Token 343: ' score' (ID: 8429)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.3451433409936726e-05
    2. 'result' → logprob: -11.125033378601074
    3. 'max' → logprob: -11.875033378601074
    4. 'ans' → logprob: -12.000033378601074
    5. 'answer' → logprob: -12.250033378601074
    6. 'res' → logprob: -14.750033378601074
    7. 'results' → logprob: -16.25003433227539
    8. '   ' → logprob: -16.37503433227539
    9. ' print' → logprob: -16.37503433227539
    10. 'answers' → logprob: -16.75003433227539

Token 344: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9790980219841003
    2. 's' → logprob: -1.1040980815887451
    3. '=' → logprob: -1.2290980815887451
    4. 'max' → logprob: -8.354098320007324
    5. '_max' → logprob: -10.604098320007324
    6. '=max' → logprob: -11.854098320007324
    7. '_' → logprob: -12.229098320007324
    8. ',' → logprob: -12.479098320007324
    9. '=s' → logprob: -13.604098320007324
    10. '   ' → logprob: -13.604098320007324

Token 345: ' [' (ID: 723)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00437529431656003
    2. '0' → logprob: -5.879375457763672
    3. ' max' → logprob: -6.629375457763672
    4. 'take' → logprob: -8.379375457763672
    5. '-' → logprob: -12.254375457763672
    6. '[max' → logprob: -12.629375457763672
    7. '   ' → logprob: -13.129375457763672
    8. 'float' → logprob: -13.254375457763672
    9. 'n' → logprob: -13.379375457763672
    10. ' take' → logprob: -13.629375457763672

Token 346: 'take' (ID: 45924)
  Prédit: 'take'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'take' → logprob: -1.9981420336989686e-05
    2. ' take' → logprob: -10.875020027160645
    3. 'tak' → logprob: -14.625020027160645
    4. 'int' → logprob: -15.500020027160645
    5. 'n' → logprob: -15.625020027160645
    6. '   ' → logprob: -17.000019073486328
    7. '
' → logprob: -18.125019073486328
    8. 'sum' → logprob: -18.500019073486328
    9. '

' → logprob: -18.750019073486328
    10. '.take' → logprob: -18.875019073486328

Token 347: 'Top' (ID: 6046)
  Prédit: 'Top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Top' → logprob: -1.9361264946837764e-07
    2. 'op' → logprob: -15.875
    3. 'T' → logprob: -16.875
    4. 'To' → logprob: -18.0
    5. ' Top' → logprob: -18.125
    6. 'top' → logprob: -18.875
    7. 's' → logprob: -19.125
    8. ' top' → logprob: -20.0
    9. '_top' → logprob: -20.125
    10. 'Sum' → logprob: -20.75

Token 348: 'Sum' (ID: 17434)
  Prédit: 'Sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sum' → logprob: -6.659005157416686e-05
    2. 'sum' → logprob: -9.625066757202148
    3. ' sum' → logprob: -15.000066757202148
    4. 's' → logprob: -16.12506675720215
    5. 'Summ' → logprob: -16.87506675720215
    6. '_sum' → logprob: -17.00006675720215
    7. 'S' → logprob: -17.12506675720215
    8. 'SUM' → logprob: -18.12506675720215
    9. '.sum' → logprob: -18.62506675720215
    10. '(sum' → logprob: -18.62506675720215

Token 349: '(arr' (ID: 19646)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.6200168132781982
    2. '(arr' → logprob: -0.8700168132781982
    3. 'arr' → logprob: -4.120017051696777
    4. 'v' → logprob: -4.495017051696777
    5. '(vec' → logprob: -4.745017051696777
    6. '(a' → logprob: -5.995017051696777
    7. 'vec' → logprob: -6.120017051696777
    8. '(x' → logprob: -7.995017051696777
    9. 'a' → logprob: -7.995017051696777
    10. '(c' → logprob: -8.370017051696777

Token 350: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016002024058252573
    2. '(arr' → logprob: -7.37660026550293
    3. ' ,' → logprob: -7.75160026550293
    4. '(m' → logprob: -8.62660026550293
    5. ' (' → logprob: -9.12660026550293
    6. ',m' → logprob: -9.25160026550293
    7. '(' → logprob: -9.62660026550293
    8. '(x' → logprob: -10.37660026550293
    9. 'arr' → logprob: -10.75160026550293
    10. ',M' → logprob: -11.50160026550293

Token 351: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.014164448715746403
    2. ' M' → logprob: -4.264164447784424
    3. '   ' → logprob: -13.889164924621582
    4. ' ' → logprob: -16.889163970947266
    5. ')' → logprob: -17.139163970947266
    6. '  ' → logprob: -17.889163970947266
    7. '	M' → logprob: -18.639163970947266
    8. 'm' → logprob: -19.014163970947266
    9. '    ' → logprob: -19.389163970947266
    10. '```' → logprob: -19.514163970947266

Token 352: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.786196975852363e-05
    2. ' )' → logprob: -10.250038146972656
    3. 'for' → logprob: -13.375038146972656
    4. ' for' → logprob: -14.625038146972656
    5. '   ' → logprob: -16.000038146972656
    6. '0' → logprob: -16.375038146972656
    7. ')
' → logprob: -16.500038146972656
    8. ' ' → logprob: -17.250038146972656
    9. '()' → logprob: -17.250038146972656
    10. '())' → logprob: -17.500038146972656

Token 353: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.023264462128281593
    2. 'for' → logprob: -3.7732644081115723
    3. ')' → logprob: -11.64826488494873
    4. ' ' → logprob: -11.89826488494873
    5. '   ' → logprob: -13.14826488494873
    6. '()' → logprob: -14.52326488494873
    7. '	for' → logprob: -15.39826488494873
    8. '  ' → logprob: -15.39826488494873
    9. '    ' → logprob: -15.52326488494873
    10. ']' → logprob: -16.148263931274414

Token 354: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.3163159489631653
    2. ' arr' → logprob: -1.9413158893585205
    3. ' xyz' → logprob: -2.6913158893585205
    4. 'xyz' → logprob: -2.8163158893585205
    5. '_xyz' → logprob: -11.191315650939941
    6. '	arr' → logprob: -11.816315650939941
    7. 'x' → logprob: -12.191315650939941
    8. 'abc' → logprob: -12.566315650939941
    9. '_arr' → logprob: -13.066315650939941
    10. ' ' → logprob: -13.566315650939941

Token 355: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03364765644073486
    2. 'in' → logprob: -3.4086475372314453
    3. ' xyz' → logprob: -14.408647537231445
    4. 'xyz' → logprob: -14.533647537231445
    5. ']' → logprob: -15.158647537231445
    6. ' ' → logprob: -15.783647537231445
    7. 'inx' → logprob: -15.908647537231445
    8. ')' → logprob: -16.533647537231445
    9. '(' → logprob: -16.658647537231445
    10. '	in' → logprob: -17.158647537231445

Token 356: ' xyz' (ID: 82501)
  Prédit: 'xyz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xyz' → logprob: -0.03804149478673935
    2. ' xyz' → logprob: -3.288041591644287
    3. '_xyz' → logprob: -17.913042068481445
    4. '.xyz' → logprob: -18.288042068481445
    5. 'abc' → logprob: -18.413042068481445
    6. ' ' → logprob: -21.038042068481445
    7. 'xxx' → logprob: -21.038042068481445
    8. 'x' → logprob: -21.538042068481445
    9. 'xy' → logprob: -21.913042068481445
    10. '   ' → logprob: -22.663042068481445

Token 357: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -6.015305552864447e-05
    2. ']
' → logprob: -9.875060081481934
    3. ' ]' → logprob: -12.750060081481934
    4. ')' → logprob: -12.875060081481934
    5. ')]' → logprob: -13.125060081481934
    6. '])' → logprob: -14.500060081481934
    7. ']

' → logprob: -14.750060081481934
    8. ']
' → logprob: -15.000060081481934
    9. '()]' → logprob: -17.12506103515625
    10. '   ' → logprob: -17.87506103515625

Token 358: '  ' (ID: 256)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1602407842874527
    2. '   ' → logprob: -1.9102407693862915
    3. '```' → logprob: -11.53524112701416
    4. ' print' → logprob: -12.28524112701416
    5. '    
' → logprob: -13.91024112701416
    6. '
' → logprob: -14.03524112701416
    7. '	print' → logprob: -15.53524112701416
    8. 'score' → logprob: -15.53524112701416
    9. 'answer' → logprob: -17.535240173339844
    10. '       ' → logprob: -17.535240173339844

Token 359: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.011050531640648842
    2. '   ' → logprob: -4.511050701141357
    3. '```' → logprob: -13.6360502243042
    4. ' print' → logprob: -14.0110502243042
    5. '    
' → logprob: -15.2610502243042
    6. 'answer' → logprob: -15.7610502243042
    7. 'score' → logprob: -16.386051177978516
    8. '
' → logprob: -16.511051177978516
    9. '	print' → logprob: -17.886051177978516
    10. '#print' → logprob: -18.011051177978516

Token 360: ' List' (ID: 2655)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.32045331597328186
    2. 'print' → logprob: -1.3204532861709595
    3. ' max' → logprob: -5.69545316696167
    4. 'score' → logprob: -6.07045316696167
    5. 'sort' → logprob: -6.82045316696167
    6. ' print' → logprob: -8.195453643798828
    7. 'sorted' → logprob: -9.820453643798828
    8. '
' → logprob: -10.570453643798828
    9. 'n' → logprob: -10.945453643798828
    10. ' score' → logprob: -11.320453643798828

Token 361: ' Com' (ID: 1390)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -1.1575225591659546
    2. ' comprehension' → logprob: -1.1575225591659546
    3. 'comp' → logprob: -1.5325225591659546
    4. 'com' → logprob: -2.032522678375244
    5. 'max' → logprob: -4.407522678375244
    6. '(score' → logprob: -4.782522678375244
    7. '   ' → logprob: -7.282522678375244
    8. 'compr' → logprob: -7.407522678375244
    9. '_com' → logprob: -7.532522678375244
    10. 'print' → logprob: -8.282522201538086

Token 362: 'preh' (ID: 41989)
  Prédit: 'preh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'preh' → logprob: -0.0002908910100813955
    2. 'pre' → logprob: -8.750290870666504
    3. 'p' → logprob: -9.250290870666504
    4. 'pr' → logprob: -11.625290870666504
    5. 'ps' → logprob: -11.625290870666504
    6. 'ph' → logprob: -11.875290870666504
    7. 'prehensive' → logprob: -12.625290870666504
    8. 'reh' → logprob: -12.750290870666504
    9. 'pret' → logprob: -13.625290870666504
    10. 'h' → logprob: -14.250290870666504

Token 363: 'ension' (ID: 3902)
  Prédit: 'ension'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ension' → logprob: -9.472211968386546e-05
    2. 'ensions' → logprob: -9.375094413757324
    3. 'score' → logprob: -11.750094413757324
    4. 'esion' → logprob: -14.875094413757324
    5. 'end' → logprob: -15.000094413757324
    6. 'ention' → logprob: -15.500094413757324
    7. 'ensation' → logprob: -15.500094413757324
    8. 's' → logprob: -15.500094413757324
    9. 'h' → logprob: -16.00009536743164
    10. 'ensive' → logprob: -16.25009536743164

Token 364: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0006725206621922553
    2. '   ' → logprob: -7.500672340393066
    3. '```' → logprob: -9.125672340393066
    4. ' print' → logprob: -12.125672340393066
    5. '
' → logprob: -13.125672340393066
    6. '<|end|>' → logprob: -13.375672340393066
    7. '    
' → logprob: -14.375672340393066
    8. '``' → logprob: -14.500672340393066
    9. '	print' → logprob: -15.625672340393066
    10. 'max' → logprob: -16.500673294067383

Token 365: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.023254677653312683
    2. '   ' → logprob: -3.773254632949829
    3. ' print' → logprob: -11.77325439453125
    4. '```' → logprob: -14.14825439453125
    5. '    
' → logprob: -15.27325439453125
    6. '	print' → logprob: -15.77325439453125
    7. '
' → logprob: -15.89825439453125
    8. '#' → logprob: -16.64825439453125
    9. '<|end|>' → logprob: -16.89825439453125
    10. '#print' → logprob: -16.89825439453125

Token 366: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.320199877838604e-07
    2. ' print' → logprob: -15.625
    3. '   ' → logprob: -15.875
    4. 'max' → logprob: -16.125
    5. 'score' → logprob: -19.5
    6. 'answer' → logprob: -20.625
    7. '```' → logprob: -20.75
    8. '    
' → logprob: -21.25
    9. 'result' → logprob: -21.625
    10. '
' → logprob: -21.75

Token 367: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.0007115975022315979
    2. '(' → logprob: -7.250711441040039
    3. 'max' → logprob: -14.250711441040039
    4. '(sorted' → logprob: -14.750711441040039
    5. '(min' → logprob: -15.500711441040039
    6. '(score' → logprob: -15.750711441040039
    7. '("("' → logprob: -16.00071144104004
    8. '(sort' → logprob: -17.25071144104004
    9. '(np' → logprob: -17.87571144104004
    10. '=max' → logprob: -18.00071144104004

Token 368: '(score' (ID: 70244)
  Prédit: '(score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(score' → logprob: -1.0280383548888494e-06
    2. 'score' → logprob: -14.000000953674316
    3. '(' → logprob: -17.000001907348633
    4. ' score' → logprob: -18.375001907348633
    5. ')' → logprob: -18.500001907348633
    6. '(scores' → logprob: -19.125001907348633
    7. '	score' → logprob: -20.375001907348633
    8. ' (' → logprob: -21.125001907348633
    9. '_score' → logprob: -21.250001907348633
    10. ')(' → logprob: -22.125001907348633

Token 369: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.014196882955729961
    2. ')' → logprob: -4.264196872711182
    3. '()))' → logprob: -10.88919734954834
    4. ')))' → logprob: -12.01419734954834
    5. '(score' → logprob: -12.26419734954834
    6. '(' → logprob: -13.88919734954834
    7. '())' → logprob: -13.88919734954834
    8. '()' → logprob: -14.38919734954834
    9. ' ))' → logprob: -14.76419734954834
    10. 'score' → logprob: -15.01419734954834

Token 370: '         ' (ID: 983)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05137266218662262
    2. '<|end|>' → logprob: -3.051372766494751
    3. '#' → logprob: -6.676372528076172
    4. '```' → logprob: -7.051372528076172
    5. '}' → logprob: -7.801372528076172
    6. ' ' → logprob: -10.051372528076172
    7. '(' → logprob: -10.176372528076172
    8. ']' → logprob: -10.301372528076172
    9. '<|end|>' → logprob: -10.426372528076172
    10. '[' → logprob: -11.301372528076172

Token 371: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 372: ' Script' (ID: 25721)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 373: '/block' (ID: 138890)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22550538182258606
    2. '<|end|>' → logprob: -1.7255053520202637
    3. '#' → logprob: -3.8505053520202637
    4. '```' → logprob: -6.725505352020264
    5. '}' → logprob: -8.100505828857422
    6. '<|end|>' → logprob: -8.350505828857422
    7. ']' → logprob: -8.600505828857422
    8. '[' → logprob: -8.600505828857422
    9. '
' → logprob: -9.350505828857422
    10. ':' → logprob: -9.725505828857422

Token 374: ' style' (ID: 2713)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 372
Tokens correctement prédits (1ère position, stricte): 179
Tokens correctement prédits (1ère position, avec adaptation): 189
Tokens correctement prédits (top 10): 308
Précision stricte (1ère position): 48.12%
Précision adaptée (1ère position): 50.81%
Précision (top 10): 82.80%
================================================================================
