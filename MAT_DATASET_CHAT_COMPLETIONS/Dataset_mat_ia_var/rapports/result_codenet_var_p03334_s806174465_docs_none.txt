================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:20
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def judge(D):
    n = 0
    while D % 4 == 0:
        n += 1
        D //= 4
    return (lambda x, y: ~((x >> n) ^ (y >> n)) & 1) if D % 2 == 1 else (lambda x, y: ~(x >> n) & 1)

N, D1, D2 = map(int, input().split())
j1, j2 = judge(D1), judge(D2)
for _, (x, y) in zip(range(N * N), filter(lambda p: j1(*p) and j2(*p), ((x, y) for x in range(N * 2) for y in range(N * 2)))):
    print(x, y)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' judge' (ID: 23319)
  → Token d'amorce (pas de prédiction)

Token 2: '(D' (ID: 9908)
  → Token d'amorce (pas de prédiction)

Token 3: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07684601098299026
    2. ')' → logprob: -3.201846122741699
    3. ',' → logprob: -3.951846122741699
    4. ':' → logprob: -5.451846122741699
    5. '_' → logprob: -6.326846122741699
    6. 'ef' → logprob: -6.576846122741699
    7. ' ):' → logprob: -6.576846122741699
    8. '[' → logprob: -6.576846122741699
    9. '(' → logprob: -7.326846122741699
    10. 'D' → logprob: -7.701846122741699

Token 4: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007469970732927322
    2. '(' → logprob: -6.50747013092041
    3. '_' → logprob: -6.63247013092041
    4. ''' → logprob: -6.75747013092041
    5. '.' → logprob: -7.25747013092041
    6. '[' → logprob: -7.38247013092041
    7. '   ' → logprob: -7.63247013092041
    8. ' :' → logprob: -7.88247013092041
    9. '():' → logprob: -8.25747013092041
    10. '[:]' → logprob: -8.63247013092041

Token 5: ' n' (ID: 297)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6901835203170776
    2. '   ' → logprob: -1.4401835203170776
    3. 'i' → logprob: -3.190183639526367
    4. '```' → logprob: -3.440183639526367
    5. '[' → logprob: -3.565183639526367
    6. ' if' → logprob: -3.690183639526367
    7. '    ' → logprob: -4.190183639526367
    8. ' 
' → logprob: -4.190183639526367
    9. '\n' → logprob: -4.565183639526367
    10. 'n' (adapté à ' n') → logprob: -4.565183639526367

Token 6: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5753157138824463
    2. ' =' → logprob: -1.4503157138824463
    3. '=' → logprob: -1.7003157138824463
    4. ',' → logprob: -4.950315475463867
    5. ' ' → logprob: -5.575315475463867
    6. '.' → logprob: -5.950315475463867
    7. '   ' → logprob: -6.075315475463867
    8. 'u' → logprob: -7.075315475463867
    9. ')' → logprob: -7.200315475463867
    10. '-' → logprob: -7.700315475463867

Token 7: ' ' (ID: 220)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.0023843301460146904
    2. 'len' → logprob: -6.127384185791016
    3. ' D' → logprob: -9.002384185791016
    4. ' ' → logprob: -9.752384185791016
    5. ' int' → logprob: -11.377384185791016
    6. '0' → logprob: -12.752384185791016
    7. '(len' → logprob: -14.252384185791016
    8. ' ' → logprob: -14.377384185791016
    9. '   ' → logprob: -15.127384185791016
    10. '=len' → logprob: -15.127384185791016

Token 8: '0' (ID: 15)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0621209479868412
    2. ' len' → logprob: -2.8121209144592285
    3. '0' → logprob: -9.062121391296387
    4. 'D' → logprob: -11.062121391296387
    5. ' D' → logprob: -11.812121391296387
    6. 'int' → logprob: -12.187121391296387
    7. ' ' → logprob: -12.562121391296387
    8. '1' → logprob: -13.187121391296387
    9. '10' → logprob: -14.187121391296387
    10. '[]' → logprob: -14.437121391296387

Token 9: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.4481595754623413
    2. '   ' → logprob: -1.5731595754623413
    3. '  ' → logprob: -2.198159694671631
    4. ',' → logprob: -2.323159694671631
    5. '\' → logprob: -2.948159694671631
    6. '+' → logprob: -3.073159694671631
    7. '   
' → logprob: -3.198159694671631
    8. '<|end|>' → logprob: -3.573159694671631
    9. ')' → logprob: -3.698159694671631
    10. '  
' → logprob: -3.948159694671631

Token 10: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8880001902580261
    2. ',' → logprob: -1.638000249862671
    3. '   ' → logprob: -1.888000249862671
    4. '
' → logprob: -2.888000249862671
    5. 'i' → logprob: -3.763000249862671
    6. ':' → logprob: -4.013000011444092
    7. ')' → logprob: -4.013000011444092
    8. '   
' → logprob: -4.263000011444092
    9. ' 
' → logprob: -4.388000011444092
    10. '+' → logprob: -4.638000011444092

Token 11: ' while' (ID: 2049)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15178732573986053
    2. 'i' → logprob: -3.026787281036377
    3. '   ' → logprob: -3.651787281036377
    4. 'for' → logprob: -4.651787281036377
    5. ' for' → logprob: -4.776787281036377
    6. ' 
' → logprob: -5.026787281036377
    7. 'w' → logprob: -5.026787281036377
    8. '`' → logprob: -5.526787281036377
    9. ' \' → logprob: -5.526787281036377
    10. '\n' → logprob: -6.026787281036377

Token 12: ' D' (ID: 415)
  Prédit: ' D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' D' → logprob: -0.6066898107528687
    2. ' n' → logprob: -0.9816898107528687
    3. ' ' → logprob: -2.981689929962158
    4. 'n' → logprob: -4.231689929962158
    5. ' not' → logprob: -4.731689929962158
    6. 'D' → logprob: -5.606689929962158
    7. '(' → logprob: -7.481689929962158
    8. ' (' → logprob: -7.606689929962158
    9. '    ' → logprob: -7.731689929962158
    10. '(n' → logprob: -8.981689453125

Token 13: ' %' (ID: 1851)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.533160388469696
    2. '[' → logprob: -0.908160388469696
    3. '>' → logprob: -5.783160209655762
    4. '[i' → logprob: -6.033160209655762
    5. '[]' → logprob: -7.158160209655762
    6. '[D' → logprob: -7.908160209655762
    7. '[t' → logprob: -8.033160209655762
    8. '[next' → logprob: -8.408160209655762
    9. '[e' → logprob: -8.783160209655762
    10. '[d' → logprob: -8.783160209655762

Token 14: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03160611167550087
    2. ' ' → logprob: -3.5316061973571777
    3. '10' → logprob: -7.031606197357178
    4. '3' → logprob: -7.531606197357178
    5. '5' → logprob: -8.40660572052002
    6. '1' → logprob: -9.78160572052002
    7. '4' → logprob: -9.78160572052002
    8. '7' → logprob: -10.65660572052002
    9. 'n' → logprob: -10.90660572052002
    10. '6' → logprob: -11.40660572052002

Token 15: '4' (ID: 19)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.021886836737394333
    2. '3' → logprob: -4.896886825561523
    3. '10' → logprob: -4.896886825561523
    4. '5' → logprob: -5.271886825561523
    5. '7' → logprob: -7.396886825561523
    6. '4' → logprob: -7.896886825561523
    7. '6' → logprob: -8.646886825561523
    8. '1' → logprob: -9.521886825561523
    9. 'n' → logprob: -9.771886825561523
    10. '8' → logprob: -10.146886825561523

Token 16: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7092110514640808
    2. ' ==' → logprob: -0.7092110514640808
    3. ' !=' → logprob: -4.4592108726501465
    4. '!=' → logprob: -5.8342108726501465
    5. '=' → logprob: -6.9592108726501465
    6. '>' → logprob: -8.334211349487305
    7. ':' → logprob: -8.959211349487305
    8. ' ' → logprob: -9.834211349487305
    9. ' =' → logprob: -10.584211349487305
    10. ' >' → logprob: -11.709211349487305

Token 17: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.42870253324508667
    2. ' ' → logprob: -1.0537025928497314
    3. '   ' → logprob: -14.428702354431152
    4. '=' → logprob: -14.803702354431152
    5. '```' → logprob: -15.428702354431152
    6. '1' → logprob: -15.803702354431152
    7. '  ' → logprob: -16.05370330810547
    8. 'n' → logprob: -16.49120330810547
    9. '    ' → logprob: -16.86620330810547
    10. '2' → logprob: -16.99120330810547

Token 18: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023238400171976537
    2. ' ' → logprob: -8.375232696533203
    3. '2' → logprob: -13.375232696533203
    4. '1' → logprob: -16.500232696533203
    5. '   ' → logprob: -17.125232696533203
    6. '```' → logprob: -17.125232696533203
    7. '=' → logprob: -17.937732696533203
    8. '  ' → logprob: -18.125232696533203
    9. '

' → logprob: -18.937732696533203
    10. '3' → logprob: -18.937732696533203

Token 19: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0024868345353752375
    2. ' :' → logprob: -6.127486705780029
    3. '):' → logprob: -9.377487182617188
    4. '   ' → logprob: -9.627487182617188
    5. '       ' → logprob: -9.877487182617188
    6. ':
' → logprob: -10.002487182617188
    7. ' and' → logprob: -10.252487182617188
    8. ',' → logprob: -12.627487182617188
    9. ':**' → logprob: -12.752487182617188
    10. '    ' → logprob: -13.502487182617188

Token 20: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1052897572517395
    2. '   ' → logprob: -3.3552896976470947
    3. 'n' → logprob: -3.8552896976470947
    4. ' ' → logprob: -4.105289936065674
    5. ' n' → logprob: -4.605289936065674
    6. '    ' → logprob: -5.105289936065674
    7. ' 
' → logprob: -5.230289936065674
    8. '        
' → logprob: -6.480289936065674
    9. '\n' → logprob: -7.105289936065674
    10. '<|end|>' → logprob: -7.105289936065674

Token 21: ' n' (ID: 297)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40752285718917847
    2. 'n' (adapté à ' n') → logprob: -1.7825229167938232
    3. ' n' → logprob: -2.7825229167938232
    4. '   ' → logprob: -2.9075229167938232
    5. ' D' → logprob: -4.032522678375244
    6. ' ' → logprob: -4.657522678375244
    7. '    ' → logprob: -5.157522678375244
    8. '4' → logprob: -5.532522678375244
    9. 'D' → logprob: -5.532522678375244
    10. ' 
' → logprob: -6.282522678375244

Token 22: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.029977256432175636
    2. '+=' → logprob: -3.529977321624756
    3. '=' → logprob: -9.279976844787598
    4. ' =' → logprob: -9.654976844787598
    5. '+' → logprob: -10.154976844787598
    6. ' ' → logprob: -10.779976844787598
    7. '   ' → logprob: -12.404976844787598
    8. ' +' → logprob: -12.779976844787598
    9. '+='' → logprob: -14.404976844787598
    10. '  ' → logprob: -15.029976844787598

Token 23: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6326040029525757
    2. '1' → logprob: -0.7576040029525757
    3. '4' → logprob: -12.882603645324707
    4. '   ' → logprob: -13.382603645324707
    5. '2' → logprob: -14.882603645324707
    6. '    ' → logprob: -15.820103645324707
    7. ' ' → logprob: -16.195104598999023
    8. '  ' → logprob: -17.070104598999023
    9. '+' → logprob: -17.195104598999023
    10. '```' → logprob: -17.257604598999023

Token 24: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0031897129956632853
    2. ' ' → logprob: -5.753189563751221
    3. '4' → logprob: -12.003190040588379
    4. '2' → logprob: -12.503190040588379
    5. '   ' → logprob: -13.253190040588379
    6. '  ' → logprob: -15.878190040588379
    7. '```' → logprob: -16.878189086914062
    8. '+' → logprob: -17.128189086914062
    9. '-' → logprob: -17.253189086914062
    10. '0' → logprob: -17.690689086914062

Token 25: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12465839087963104
    2. '   ' → logprob: -2.4996583461761475
    3. '    
' → logprob: -4.624658584594727
    4. '        
' → logprob: -5.124658584594727
    5. ' D' → logprob: -5.249658584594727
    6. ' ' → logprob: -5.624658584594727
    7. ' 
' → logprob: -5.749658584594727
    8. '    ' → logprob: -6.249658584594727
    9. 'D' → logprob: -6.624658584594727
    10. '4' → logprob: -6.749658584594727

Token 26: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35406211018562317
    2. '   ' → logprob: -1.6040620803833008
    3. ' D' → logprob: -3.354062080383301
    4. ' ' → logprob: -4.229062080383301
    5. '    ' → logprob: -4.479062080383301
    6. 'D' → logprob: -4.479062080383301
    7. '    
' → logprob: -5.104062080383301
    8. ' 
' → logprob: -5.229062080383301
    9. '        
' → logprob: -5.354062080383301
    10. '<|end|>' → logprob: -6.229062080383301

Token 27: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' (adapté à ' D') → logprob: -0.04083750396966934
    2. ' D' → logprob: -3.290837526321411
    3. '   ' → logprob: -6.040837287902832
    4. '       ' → logprob: -8.165837287902832
    5. '           ' → logprob: -9.790837287902832
    6. ' ' → logprob: -9.915837287902832
    7. '    ' → logprob: -12.165837287902832
    8. '```' → logprob: -12.165837287902832
    9. '  ' → logprob: -12.415837287902832
    10. '	D' → logprob: -13.165837287902832

Token 28: ' //' (ID: 602)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3734550178050995
    2. '//=' → logprob: -1.2484550476074219
    3. '/=' → logprob: -3.998455047607422
    4. ' /=' → logprob: -5.748455047607422
    5. ' //' → logprob: -6.373455047607422
    6. ' =' → logprob: -6.748455047607422
    7. '/' → logprob: -9.248455047607422
    8. ' ' → logprob: -9.373455047607422
    9. '//' → logprob: -10.123455047607422
    10. 'div' → logprob: -10.623455047607422

Token 29: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -2.696889623621246e-06
    2. '4' → logprob: -12.87500286102295
    3. '=}' → logprob: -16.000001907348633
    4. ' ' → logprob: -17.000001907348633
    5. ' =' → logprob: -17.250001907348633
    6. '=

' → logprob: -17.875001907348633
    7. '==' → logprob: -18.000001907348633
    8. '='' → logprob: -19.000001907348633
    9. '=
' → logprob: -19.000001907348633
    10. '=_' → logprob: -19.250001907348633

Token 30: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0003360582049936056
    2. ' ' → logprob: -8.000335693359375
    3. '   ' → logprob: -15.000335693359375
    4. '```' → logprob: -16.125335693359375
    5. '2' → logprob: -16.750335693359375
    6. '  ' → logprob: -17.750335693359375
    7. '' → logprob: -17.875335693359375
    8. '٤' → logprob: -18.125335693359375
    9. '<|end|>' → logprob: -18.625335693359375
    10. ' ' → logprob: -18.812835693359375

Token 31: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -3.650518920039758e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -16.000003814697266
    4. '```' → logprob: -16.250003814697266
    5. '2' → logprob: -17.625003814697266
    6. '' → logprob: -18.500003814697266
    7. '  ' → logprob: -18.750003814697266
    8. '٤' → logprob: -19.250003814697266
    9. '４' → logprob: -19.937503814697266
    10. '>' → logprob: -19.937503814697266

Token 32: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1473909616470337
    2. '<|end|>' → logprob: -2.272390842437744
    3. ' 
' → logprob: -4.022390842437744
    4. ' ' → logprob: -5.022390842437744
    5. '
' → logprob: -6.397390842437744
    6. '    ' → logprob: -6.647390842437744
    7. '    
' → logprob: -6.772390842437744
    8. ')' → logprob: -6.897390842437744
    9. '       ' → logprob: -6.897390842437744
    10. '\n' → logprob: -7.522390842437744

Token 33: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06000646948814392
    2. '<|end|>' → logprob: -3.8100063800811768
    3. ' 
' → logprob: -4.310006618499756
    4. ' ' → logprob: -5.185006618499756
    5. ')' → logprob: -5.685006618499756
    6. '\n' → logprob: -6.060006618499756
    7. '       ' → logprob: -6.435006618499756
    8. '    
' → logprob: -6.560006618499756
    9. '\' → logprob: -6.685006618499756
    10. ':' → logprob: -6.685006618499756

Token 34: ' return' (ID: 622)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8491123914718628
    2. '   ' → logprob: -0.8491123914718628
    3. ' 
' → logprob: -2.7241125106811523
    4. '    ' → logprob: -3.7241125106811523
    5. '\n' → logprob: -4.849112510681152
    6. ':' → logprob: -5.349112510681152
    7. '<|end|>' → logprob: -5.349112510681152
    8. ')' → logprob: -5.474112510681152
    9. ' return' → logprob: -5.599112510681152
    10. 'n' → logprob: -5.599112510681152

Token 35: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2263849526643753
    2. ' n' → logprob: -1.6013849973678589
    3. ' True' → logprob: -7.726385116577148
    4. 'True' → logprob: -8.476385116577148
    5. '(n' → logprob: -9.101385116577148
    6. ' (' → logprob: -9.476385116577148
    7. 'False' → logprob: -10.101385116577148
    8. ' ' → logprob: -10.976385116577148
    9. '(' → logprob: -11.101385116577148
    10. ' False' → logprob: -11.351385116577148

Token 36: 'lambda' (ID: 35280)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03967239707708359
    2. ' n' → logprob: -3.539672374725342
    3. 'D' → logprob: -4.914672374725342
    4. '4' → logprob: -6.539672374725342
    5. '2' → logprob: -7.789672374725342
    6. ' D' → logprob: -7.914672374725342
    7. '(n' → logprob: -9.5396728515625
    8. ' ' → logprob: -9.6646728515625
    9. 'abs' → logprob: -9.7896728515625
    10. '   ' → logprob: -10.1646728515625

Token 37: ' x' (ID: 1215)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7949725985527039
    2. ' x' → logprob: -1.2949726581573486
    3. 'x' → logprob: -2.0449726581573486
    4. 'n' → logprob: -2.1699726581573486
    5. ' D' → logprob: -4.2949724197387695
    6. 'D' → logprob: -4.4199724197387695
    7. ' ' → logprob: -6.2949724197387695
    8. ' k' → logprob: -6.6699724197387695
    9. ' d' → logprob: -7.6699724197387695
    10. 'k' → logprob: -7.6699724197387695

Token 38: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005666275974363089
    2. ' :' → logprob: -5.380666255950928
    3. ':x' → logprob: -7.255666255950928
    4. ',' → logprob: -8.255666732788086
    5. 'x' → logprob: -11.005666732788086
    6. '=' → logprob: -11.005666732788086
    7. ':n' → logprob: -11.255666732788086
    8. ',x' → logprob: -12.130666732788086
    9. ':
' → logprob: -12.130666732788086
    10. ':(' → logprob: -12.880666732788086

Token 39: ' y' (ID: 342)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6533241271972656
    2. ' n' → logprob: -1.6533241271972656
    3. '2' → logprob: -2.6533241271972656
    4. ' ' → logprob: -2.7783241271972656
    5. 'x' → logprob: -3.1533241271972656
    6. 'y' → logprob: -3.1533241271972656
    7. '4' → logprob: -3.4033241271972656
    8. ' y' → logprob: -3.9033241271972656
    9. ' x' → logprob: -4.653324127197266
    10. 'D' → logprob: -6.028324127197266

Token 40: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008585968054831028
    2. ' :' → logprob: -4.8835859298706055
    3. ':x' → logprob: -7.1335859298706055
    4. ',' → logprob: -9.008585929870605
    5. ':y' → logprob: -10.883585929870605
    6. '=' → logprob: -11.883585929870605
    7. ',:' → logprob: -12.508585929870605
    8. ':(' → logprob: -12.883585929870605
    9. '   ' → logprob: -13.008585929870605
    10. ':n' → logprob: -13.008585929870605

Token 41: ' ~' (ID: 6574)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5417391061782837
    2. ' x' → logprob: -0.9167391061782837
    3. '(x' → logprob: -5.041738986968994
    4. ' (' → logprob: -5.666738986968994
    5. ' y' → logprob: -5.666738986968994
    6. 'y' → logprob: -6.041738986968994
    7. ' ' → logprob: -7.791738986968994
    8. '(' → logprob: -8.041739463806152
    9. ' n' → logprob: -8.041739463806152
    10. 'n' → logprob: -8.041739463806152

Token 42: '((' (ID: 2054)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.14529310166835785
    2. '(x' → logprob: -2.7702929973602295
    3. ' x' → logprob: -3.2702929973602295
    4. 'y' → logprob: -4.520293235778809
    5. ' (' → logprob: -4.645293235778809
    6. 'n' → logprob: -5.270293235778809
    7. ' y' → logprob: -6.145293235778809
    8. '(n' → logprob: -6.520293235778809
    9. '((' → logprob: -6.770293235778809
    10. '(' → logprob: -6.895293235778809

Token 43: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0436149425804615
    2. 'y' → logprob: -3.5436148643493652
    3. ' x' → logprob: -5.293614864349365
    4. '(x' → logprob: -5.418614864349365
    5. '~' → logprob: -6.418614864349365
    6. ' y' → logprob: -7.293614864349365
    7. '((' → logprob: -7.793614864349365
    8. '(y' → logprob: -8.293615341186523
    9. '(' → logprob: -8.418615341186523
    10. 'n' → logprob: -8.793615341186523

Token 44: ' >>' (ID: 6832)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4865602254867554
    2. '^' → logprob: -1.6115602254867554
    3. ' ^' → logprob: -1.7365602254867554
    4. '|' → logprob: -2.111560344696045
    5. ' &' → logprob: -2.361560344696045
    6. ' |' → logprob: -2.736560344696045
    7. '&' → logprob: -2.986560344696045
    8. ' )' → logprob: -4.111560344696045
    9. '-' → logprob: -4.486560344696045
    10. ' y' → logprob: -4.986560344696045

Token 45: ' n' (ID: 297)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0717143565416336
    2. ' y' → logprob: -2.946714401245117
    3. '1' → logprob: -4.821714401245117
    4. '2' → logprob: -5.196714401245117
    5. ' ' → logprob: -7.571714401245117
    6. 'n' → logprob: -7.946714401245117
    7. '3' → logprob: -8.071714401245117
    8. '4' → logprob: -8.071714401245117
    9. 'x' → logprob: -8.071714401245117
    10. '31' → logprob: -8.196714401245117

Token 46: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014753569848835468
    2. ' )' → logprob: -4.264753341674805
    3. ')&' → logprob: -7.889753341674805
    4. '&' → logprob: -10.514753341674805
    5. ' ' → logprob: -10.514753341674805
    6. ' &' → logprob: -10.514753341674805
    7. '|' → logprob: -10.764753341674805
    8. 'y' → logprob: -10.764753341674805
    9. '-' → logprob: -10.889753341674805
    10. ')y' → logprob: -11.639753341674805

Token 47: ' ^' (ID: 7602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09346731007099152
    2. ' )' → logprob: -2.9684672355651855
    3. ')&' → logprob: -4.4684672355651855
    4. ' &' → logprob: -4.7184672355651855
    5. '&' → logprob: -5.0934672355651855
    6. '^' → logprob: -5.9684672355651855
    7. ' ^' → logprob: -6.4684672355651855
    8. ' y' → logprob: -6.4684672355651855
    9. 'y' → logprob: -6.9684672355651855
    10. ')^' → logprob: -7.0934672355651855

Token 48: ' (' (ID: 350)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3517336845397949
    2. ' y' → logprob: -1.226733684539795
    3. '(y' → logprob: -6.476733684539795
    4. ' (' → logprob: -7.101733684539795
    5. ' ' → logprob: -8.226734161376953
    6. '(' → logprob: -8.476734161376953
    7. '   ' → logprob: -9.351734161376953
    8. '    ' → logprob: -9.601734161376953
    9. 'x' → logprob: -9.851734161376953
    10. '  ' → logprob: -9.976734161376953

Token 49: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.015207217074930668
    2. ' y' → logprob: -4.265207290649414
    3. '(y' → logprob: -7.890207290649414
    4. 'x' → logprob: -8.265207290649414
    5. '   ' → logprob: -9.390207290649414
    6. ' ' → logprob: -10.015207290649414
    7. 'D' → logprob: -10.452707290649414
    8. ' (' → logprob: -10.515207290649414
    9. '(' → logprob: -10.577707290649414
    10. '    ' → logprob: -10.640207290649414

Token 50: ' >>' (ID: 6832)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8353356122970581
    2. ')))' → logprob: -1.210335612297058
    3. '))' → logprob: -1.460335612297058
    4. ' )' → logprob: -3.9603357315063477
    5. ' ))' → logprob: -5.335335731506348
    6. ' ' → logprob: -5.335335731506348
    7. ')>>' → logprob: -6.210335731506348
    8. '>>' → logprob: -7.085335731506348
    9. ')&' → logprob: -7.085335731506348
    10. '))))' → logprob: -7.210335731506348

Token 51: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005171851254999638
    2. '0' → logprob: -6.255171775817871
    3. '(n' → logprob: -7.005171775817871
    4. ' n' → logprob: -7.380171775817871
    5. '1' → logprob: -7.505171775817871
    6. '2' → logprob: -8.255171775817871
    7. '(' → logprob: -8.255171775817871
    8. '7' → logprob: -9.505171775817871
    9. ' ' → logprob: -9.630171775817871
    10. 'D' → logprob: -9.630171775817871

Token 52: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4570121467113495
    2. ')))' → logprob: -1.3320121765136719
    3. '))' → logprob: -2.332012176513672
    4. '))))' → logprob: -5.957012176513672
    5. ' ' → logprob: -6.332012176513672
    6. ' )' → logprob: -7.207012176513672
    7. '   ' → logprob: -8.957012176513672
    8. ')));' → logprob: -8.957012176513672
    9. ' ))' → logprob: -9.332012176513672
    10. '  ' → logprob: -9.957012176513672

Token 53: ' &' (ID: 827)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2020881474018097
    2. '))' → logprob: -2.2020881175994873
    3. '   ' → logprob: -3.8270881175994873
    4. ' )' → logprob: -4.327088356018066
    5. ')(' → logprob: -4.577088356018066
    6. ',' → logprob: -4.952088356018066
    7. ')))' → logprob: -4.952088356018066
    8. '))(' → logprob: -6.202088356018066
    9. '(' → logprob: -6.577088356018066
    10. ' ))' → logprob: -6.577088356018066

Token 54: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.24533703923225403
    2. ' ' → logprob: -1.7453370094299316
    3. ' ((' → logprob: -4.245337009429932
    4. '((' → logprob: -4.370337009429932
    5. ' (' → logprob: -4.870337009429932
    6. '(' → logprob: -5.495337009429932
    7. '0' → logprob: -6.995337009429932
    8. '(((' → logprob: -7.120337009429932
    9. '3' → logprob: -7.370337009429932
    10. ' D' → logprob: -8.37033748626709

Token 55: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03447192162275314
    2. '((' → logprob: -3.9094719886779785
    3. ' ' → logprob: -5.1594719886779785
    4. '(' → logprob: -6.0344719886779785
    5. '3' → logprob: -6.1594719886779785
    6. ' ((' → logprob: -7.2844719886779785
    7. '(((' → logprob: -7.4094719886779785
    8. '0' → logprob: -7.6594719886779785
    9. '(D' → logprob: -7.6594719886779785
    10. '(x' → logprob: -7.9094719886779785

Token 56: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05304405093193054
    2. ')(' → logprob: -3.428044080734253
    3. '   ' → logprob: -4.428043842315674
    4. ' )' → logprob: -5.553043842315674
    5. ' ' → logprob: -7.178043842315674
    6. '  ' → logprob: -7.428043842315674
    7. '))' → logprob: -8.053044319152832
    8. ')((' → logprob: -8.303044319152832
    9. ')(
' → logprob: -8.428044319152832
    10. ',' → logprob: -8.678044319152832

Token 57: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 58: ' D' (ID: 415)
  Prédit: ' D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' D' → logprob: -0.43076783418655396
    2. ' n' → logprob: -1.5557677745819092
    3. ' isinstance' → logprob: -2.680767774581909
    4. 'D' → logprob: -3.680767774581909
    5. 'n' → logprob: -4.180768013000488
    6. ' (' → logprob: -4.430768013000488
    7. ' type' → logprob: -5.305768013000488
    8. ' ' → logprob: -5.930768013000488
    9. ' len' → logprob: -6.055768013000488
    10. ' not' → logprob: -6.305768013000488

Token 59: ' %' (ID: 1851)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.804935097694397
    2. ' ==' → logprob: -1.429935097694397
    3. ' else' → logprob: -1.804935097694397
    4. ' >' → logprob: -2.8049349784851074
    5. ' %' → logprob: -3.8049349784851074
    6. '==' → logprob: -3.9299349784851074
    7. '!=' → logprob: -4.179934978485107
    8. 'else' → logprob: -4.304934978485107
    9. ' ' → logprob: -4.804934978485107
    10. '>' → logprob: -5.179934978485107

Token 60: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5293204188346863
    2. ' ' → logprob: -1.154320478439331
    3. '4' → logprob: -2.529320478439331
    4. '3' → logprob: -4.154320240020752
    5. '1' → logprob: -9.02932071685791
    6. '8' → logprob: -10.02932071685791
    7. '  ' → logprob: -10.15432071685791
    8. '5' → logprob: -10.96682071685791
    9. '...' → logprob: -11.59182071685791
    10. '7' → logprob: -11.65432071685791

Token 61: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.40249472856521606
    2. '4' → logprob: -1.1524946689605713
    3. ' ' → logprob: -4.40249490737915
    4. '3' → logprob: -5.77749490737915
    5. '8' → logprob: -9.152494430541992
    6. '1' → logprob: -10.777494430541992
    7. '  ' → logprob: -11.902494430541992
    8. '5' → logprob: -12.027494430541992
    9. '7' → logprob: -12.527494430541992
    10. '   ' → logprob: -12.902494430541992

Token 62: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6869500279426575
    2. ' ==' → logprob: -0.8119500279426575
    3. ' else' → logprob: -3.0619499683380127
    4. 'else' → logprob: -5.561950206756592
    5. ' !=' → logprob: -6.686950206756592
    6. '!=' → logprob: -7.186950206756592
    7. ' ' → logprob: -8.686949729919434
    8. '0' → logprob: -10.811949729919434
    9. '=' → logprob: -10.936949729919434
    10. '===' → logprob: -11.936949729919434

Token 63: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2679564654827118
    2. ' ' → logprob: -1.5179564952850342
    3. '1' → logprob: -4.142956256866455
    4. '==' → logprob: -11.767956733703613
    5. '=' → logprob: -12.080456733703613
    6. '   ' → logprob: -13.205456733703613
    7. '  ' → logprob: -13.455456733703613
    8. '```' → logprob: -13.767956733703613
    9. '2' → logprob: -14.017956733703613
    10. ' ' → logprob: -14.955456733703613

Token 64: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10115209966897964
    2. '1' → logprob: -2.351152181625366
    3. ' ' → logprob: -6.976151943206787
    4. '2' → logprob: -12.413652420043945
    5. '   ' → logprob: -13.601152420043945
    6. '```' → logprob: -13.601152420043945
    7. '  ' → logprob: -13.976152420043945
    8. '==' → logprob: -14.413652420043945
    9. '=' → logprob: -15.226152420043945
    10. '     ' → logprob: -15.726152420043945

Token 65: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.026472019031643867
    2. 'else' → logprob: -3.6514720916748047
    3. ' ' → logprob: -9.151472091674805
    4. '    ' → logprob: -11.026472091674805
    5. ':' → logprob: -11.401472091674805
    6. '   ' → logprob: -11.526472091674805
    7. ' :' → logprob: -11.776472091674805
    8. '	else' → logprob: -12.151472091674805
    9. '  ' → logprob: -12.276472091674805
    10. ' and' → logprob: -13.151472091674805

Token 66: ' (' (ID: 350)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.5569689869880676
    2. ' None' → logprob: -2.056968927383423
    3. ' (' → logprob: -2.556968927383423
    4. '(lambda' → logprob: -2.556968927383423
    5. 'lambda' → logprob: -2.556968927383423
    6. 'None' → logprob: -3.556968927383423
    7. ' False' → logprob: -4.181969165802002
    8. 'False' → logprob: -4.306969165802002
    9. '(' → logprob: -5.931969165802002
    10. '0' → logprob: -6.181969165802002

Token 67: 'lambda' (ID: 35280)
  Prédit: 'lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.43546587228775024
    2. ' lambda' → logprob: -1.1854658126831055
    3. '(lambda' → logprob: -3.3104658126831055
    4. ' (' → logprob: -5.6854658126831055
    5. 'None' → logprob: -6.5604658126831055
    6. 'False' → logprob: -6.8104658126831055
    7. '0' → logprob: -6.9354658126831055
    8. ' None' → logprob: -7.1854658126831055
    9. '(' → logprob: -7.3104658126831055
    10. '   ' → logprob: -7.4354658126831055

Token 68: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.2611287534236908
    2. 'x' → logprob: -1.5111287832260132
    3. ' lambda' → logprob: -5.386128902435303
    4. 'lambda' → logprob: -6.011128902435303
    5. ' y' → logprob: -7.761128902435303
    6. '0' → logprob: -7.761128902435303
    7. ' ' → logprob: -7.761128902435303
    8. ' None' → logprob: -9.136128425598145
    9. 'None' → logprob: -9.261128425598145
    10. 'y' → logprob: -9.511128425598145

Token 69: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11743077635765076
    2. ' ,' → logprob: -2.2424306869506836
    3. ',y' → logprob: -5.742430686950684
    4. ' y' → logprob: -6.867430686950684
    5. ' x' → logprob: -9.242430686950684
    6. 'y' → logprob: -9.367430686950684
    7. ' ' → logprob: -9.867430686950684
    8. ',x' → logprob: -10.492430686950684
    9. 'x' → logprob: -11.617430686950684
    10. '  ' → logprob: -11.929930686950684

Token 70: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.31476929783821106
    2. ' y' → logprob: -1.3147692680358887
    3. 'x' → logprob: -6.814769268035889
    4. ' x' → logprob: -8.439769744873047
    5. ' ' → logprob: -9.689769744873047
    6. '    ' → logprob: -10.439769744873047
    7. '0' → logprob: -10.814769744873047
    8. '   ' → logprob: -11.314769744873047
    9. '  ' → logprob: -11.752269744873047
    10. '	y' → logprob: -11.814769744873047

Token 71: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003349059261381626
    2. ' :' → logprob: -5.7533488273620605
    3. '):' → logprob: -9.628349304199219
    4. ',' → logprob: -10.503349304199219
    5. '   ' → logprob: -10.753349304199219
    6. ':return' → logprob: -11.753349304199219
    7. '       ' → logprob: -11.878349304199219
    8. '0' → logprob: -12.128349304199219
    9. '>:' → logprob: -12.253349304199219
    10. ')' → logprob: -12.253349304199219

Token 72: ' ~(' (ID: 85491)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4110492169857025
    2. ' ' → logprob: -2.5360491275787354
    3. ' (' → logprob: -2.7860491275787354
    4. '(x' → logprob: -2.7860491275787354
    5. 'x' → logprob: -3.4110491275787354
    6. ' x' → logprob: -3.4110491275787354
    7. '1' → logprob: -3.9110491275787354
    8. 'False' → logprob: -3.9110491275787354
    9. ' False' → logprob: -5.0360493659973145
    10. '((' → logprob: -5.2860493659973145

Token 73: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9877500534057617
    2. '(x' → logprob: -0.9877500534057617
    3. '((' → logprob: -1.6127500534057617
    4. ' (' → logprob: -3.3627500534057617
    5. ' ((' → logprob: -4.612750053405762
    6. ' x' → logprob: -4.987750053405762
    7. '(' → logprob: -6.237750053405762
    8. '0' → logprob: -7.487750053405762
    9. ' ' → logprob: -7.612750053405762
    10. '   ' → logprob: -8.487750053405762

Token 74: ' >>' (ID: 6832)
  Prédit: ' >>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >>' → logprob: -1.0516315698623657
    2. ' ^' → logprob: -1.1766315698623657
    3. '>>' → logprob: -1.3016315698623657
    4. ' ' → logprob: -3.676631450653076
    5. '^' → logprob: -3.926631450653076
    6. ' &' → logprob: -4.551631450653076
    7. '&' → logprob: -5.176631450653076
    8. ' %' → logprob: -5.676631450653076
    9. '%' → logprob: -5.676631450653076
    10. '[' → logprob: -8.176631927490234

Token 75: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.021611446514725685
    2. ' n' → logprob: -4.396611213684082
    3. 'y' → logprob: -5.521611213684082
    4. '(n' → logprob: -6.021611213684082
    5. '1' → logprob: -6.396611213684082
    6. ' y' → logprob: -8.021611213684082
    7. '(y' → logprob: -8.896611213684082
    8. ' ' → logprob: -8.896611213684082
    9. ' (' → logprob: -9.646611213684082
    10. '2' → logprob: -10.021611213684082

Token 76: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016970766708254814
    2. ' )' → logprob: -4.766970634460449
    3. ' ^' → logprob: -5.891970634460449
    4. ')^' → logprob: -6.266970634460449
    5. ' ' → logprob: -6.516970634460449
    6. '   ' → logprob: -6.766970634460449
    7. '^' → logprob: -7.891970634460449
    8. '    ' → logprob: -9.14197063446045
    9. '  ' → logprob: -9.26697063446045
    10. '       ' → logprob: -9.51697063446045

Token 77: ' &' (ID: 827)
  Prédit: ' ^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^' → logprob: -0.1365291327238083
    2. ')' → logprob: -2.5115292072296143
    3. '^' → logprob: -3.8865292072296143
    4. ' ' → logprob: -4.261528968811035
    5. ')^' → logprob: -4.636528968811035
    6. ' &' → logprob: -7.386528968811035
    7. '<|end|>' → logprob: -8.011528968811035
    8. ' ^=' → logprob: -8.386528968811035
    9. ' )' → logprob: -8.386528968811035
    10. ' ^
' → logprob: -9.386528968811035

Token 78: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3618032932281494
    2. ' ' → logprob: -1.6118032932281494
    3. ' (' → logprob: -3.1118032932281494
    4. '((' → logprob: -4.23680305480957
    5. ' y' → logprob: -4.23680305480957
    6. '(y' → logprob: -4.36180305480957
    7. ' ((' → logprob: -4.48680305480957
    8. 'y' → logprob: -6.11180305480957
    9. '(' → logprob: -6.11180305480957
    10. '(x' → logprob: -6.73680305480957

Token 79: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.034656986594200134
    2. ' ' → logprob: -4.159657001495361
    3. ' y' → logprob: -4.909657001495361
    4. 'y' → logprob: -5.284657001495361
    5. '(y' → logprob: -6.159657001495361
    6. '((' → logprob: -6.284657001495361
    7. ' (' → logprob: -7.034657001495361
    8. ' ((' → logprob: -8.034656524658203
    9. '(' → logprob: -8.409656524658203
    10. '(x' → logprob: -8.784656524658203

Token 80: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013140474911779165
    2. ' )' → logprob: -6.876314163208008
    3. '   ' → logprob: -8.876314163208008
    4. '))' → logprob: -10.501314163208008
    5. '       ' → logprob: -11.001314163208008
    6. ' ' → logprob: -11.126314163208008
    7. ')))' → logprob: -11.501314163208008
    8. '  ' → logprob: -11.501314163208008
    9. ')return' → logprob: -12.001314163208008
    10. ' ' → logprob: -12.001314163208008

Token 81: 'N' (ID: 45)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7491610050201416
    2. ')' → logprob: -1.3741610050201416
    3. '<|end|>' → logprob: -1.7491610050201416
    4. ',' → logprob: -2.9991610050201416
    5. ' ' → logprob: -3.8741610050201416
    6. ':' → logprob: -4.9991607666015625
    7. '```' → logprob: -5.4991607666015625
    8. '#' → logprob: -5.4991607666015625
    9. '[' → logprob: -6.2491607666015625
    10. '.' → logprob: -6.4991607666015625

Token 82: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3901913166046143
    2. '(' → logprob: -1.6401913166046143
    3. '=' → logprob: -2.0151913166046143
    4. 'o' → logprob: -2.1401913166046143
    5. 'e' → logprob: -2.7651913166046143
    6. 'u' → logprob: -2.8901913166046143
    7. '.' → logprob: -3.2651913166046143
    8. 'a' → logprob: -3.6401913166046143
    9. ',' → logprob: -3.7651913166046143
    10. ')' → logprob: -3.8901913166046143

Token 83: ' D' (ID: 415)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2921116352081299
    2. ' D' → logprob: -2.29211163520813
    3. ' =' → logprob: -3.04211163520813
    4. ' M' → logprob: -3.16711163520813
    5. 'D' → logprob: -3.91711163520813
    6. 'M' → logprob: -4.542111396789551
    7. '=' → logprob: -4.917111396789551
    8. 'x' → logprob: -5.542111396789551
    9. ''' → logprob: -5.792111396789551
    10. 'a' → logprob: -6.542111396789551

Token 84: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.282026469707489
    2. ' =' → logprob: -1.4070265293121338
    3. ',' → logprob: -7.657026290893555
    4. '[' → logprob: -8.532026290893555
    5. ' ' → logprob: -9.907026290893555
    6. ')' → logprob: -10.157026290893555
    7. '<|end|>' → logprob: -10.407026290893555
    8. '=
' → logprob: -10.532026290893555
    9. ' =
' → logprob: -10.907026290893555
    10. '=

' → logprob: -11.782026290893555

Token 85: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13127341866493225
    2. '=' → logprob: -2.2562735080718994
    3. ',' → logprob: -4.00627326965332
    4. ' ,' → logprob: -10.38127326965332
    5. ' =
' → logprob: -10.88127326965332
    6. ' ' → logprob: -11.13127326965332
    7. '<|end|>' → logprob: -11.88127326965332
    8. ' =
' → logprob: -13.13127326965332
    9. '=

' → logprob: -13.75627326965332
    10. '  ' → logprob: -14.00627326965332

Token 86: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0183594711124897
    2. ' D' → logprob: -4.018359661102295
    3. 'K' → logprob: -10.018359184265137
    4. 'N' → logprob: -10.393359184265137
    5. 'x' → logprob: -10.518359184265137
    6. 'd' → logprob: -10.768359184265137
    7. 'M' → logprob: -10.893359184265137
    8. 'A' → logprob: -11.393359184265137
    9. ' =' → logprob: -11.518359184265137
    10. '=' → logprob: -11.518359184265137

Token 87: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.29070791602134705
    2. '_' → logprob: -2.04070782661438
    3. '=' → logprob: -2.66570782661438
    4. ' =' → logprob: -3.29070782661438
    5. '1' → logprob: -4.665708065032959
    6. ',' → logprob: -5.290708065032959
    7. '_=' → logprob: -7.915708065032959
    8. ' ' → logprob: -8.5407075881958
    9. ' _' → logprob: -8.7907075881958
    10. ',_' → logprob: -9.4157075881958

Token 88: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28265270590782166
    2. ' =' → logprob: -1.407652735710144
    3. ',' → logprob: -6.532652854919434
    4. ' ' → logprob: -10.782652854919434
    5. ')' → logprob: -11.532652854919434
    6. ' =
' → logprob: -12.907652854919434
    7. '=

' → logprob: -12.907652854919434
    8. '<|end|>' → logprob: -13.157652854919434
    9. '=input' → logprob: -13.282652854919434
    10. '[' → logprob: -13.532652854919434

Token 89: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.9000700116157532
    2. 'map' → logprob: -1.1500699520111084
    3. ' ' → logprob: -1.7750699520111084
    4. '10' → logprob: -3.2750699520111084
    5. '1' → logprob: -3.9000699520111084
    6. '5' → logprob: -4.4000701904296875
    7. '0' → logprob: -5.0250701904296875
    8. 'input' → logprob: -5.0250701904296875
    9. '3' → logprob: -5.4000701904296875
    10. '4' → logprob: -5.5250701904296875

Token 90: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.5786349177360535
    2. '(' → logprob: -0.8286349177360535
    3. '(str' → logprob: -6.828634738922119
    4. '(input' → logprob: -7.453634738922119
    5. '(lambda' → logprob: -7.953634738922119
    6. '<|end|>' → logprob: -8.328635215759277
    7. '(list' → logprob: -8.578635215759277
    8. '(eval' → logprob: -9.328635215759277
    9. '(
' → logprob: -10.078635215759277
    10. '(s' → logprob: -11.078635215759277

Token 91: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.021406671032309532
    2. ',input' → logprob: -4.771406650543213
    3. '(' → logprob: -5.146406650543213
    4. 'input' → logprob: -5.396406650543213
    5. ')' → logprob: -6.396406650543213
    6. ',' → logprob: -8.396407127380371
    7. ' input' → logprob: -8.521407127380371
    8. ')(' → logprob: -9.146407127380371
    9. '=input' → logprob: -10.021407127380371
    10. '```' → logprob: -11.271407127380371

Token 92: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0031875784043222666
    2. ' input' → logprob: -5.753187656402588
    3. ')' → logprob: -12.37818717956543
    4. '(input' → logprob: -12.87818717956543
    5. ',input' → logprob: -13.12818717956543
    6. '=input' → logprob: -14.00318717956543
    7. '	input' → logprob: -16.50318717956543
    8. '```' → logprob: -16.62818717956543
    9. '<input' → logprob: -16.75318717956543
    10. '   ' → logprob: -16.87818717956543

Token 93: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5320765376091003
    2. '())' → logprob: -1.2820765972137451
    3. '().' → logprob: -2.032076597213745
    4. '(' → logprob: -6.532076358795166
    5. '()>' → logprob: -7.032076358795166
    6. '());' → logprob: -7.657076358795166
    7. ')' → logprob: -7.782076358795166
    8. '('' → logprob: -9.157076835632324
    9. '();)' → logprob: -9.282076835632324
    10. '(),' → logprob: -9.407076835632324

Token 94: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.2127087504486553e-05
    2. 'strip' → logprob: -10.875021934509277
    3. '(split' → logprob: -14.000021934509277
    4. ' split' → logprob: -14.000021934509277
    5. 'rstrip' → logprob: -14.000021934509277
    6. 'spl' → logprob: -14.625021934509277
    7. ')' → logprob: -16.375022888183594
    8. 's' → logprob: -17.000022888183594
    9. 'sp' → logprob: -17.875022888183594
    10. '```' → logprob: -19.250022888183594

Token 95: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.45407846570014954
    2. '())' → logprob: -1.0790784358978271
    3. '()' → logprob: -3.704078435897827
    4. '))' → logprob: -8.704078674316406
    5. '(' → logprob: -8.954078674316406
    6. '('' → logprob: -10.204078674316406
    7. '()))' → logprob: -10.829078674316406
    8. '();)' → logprob: -11.454078674316406
    9. '(),' → logprob: -12.079078674316406
    10. ' ())' → logprob: -12.204078674316406

Token 96: 'j' (ID: 73)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.022177446633577347
    2. '
' → logprob: -5.522177219390869
    3. 'func' → logprob: -5.647177219390869
    4. 'print' → logprob: -5.897177219390869
    5. 'j' → logprob: -6.272177219390869
    6. '<|end|>' → logprob: -6.397177219390869
    7. 'judge' → logprob: -6.647177219390869
    8. ' f' → logprob: -6.772177219390869
    9. 'x' → logprob: -6.772177219390869
    10. 'result' → logprob: -7.272177219390869

Token 97: '1' (ID: 16)
  Prédit: 'udge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'udge' → logprob: -9.13388703338569e-06
    2. 'UDGE' → logprob: -12.500009536743164
    3. 'ud' → logprob: -13.000009536743164
    4. 'judge' → logprob: -14.125009536743164
    5. 'udget' → logprob: -14.250009536743164
    6. 'u' → logprob: -14.375009536743164
    7. 'adge' → logprob: -14.625009536743164
    8. '=' → logprob: -15.875009536743164
    9. 'uge' → logprob: -16.000009536743164
    10. 'dge' → logprob: -16.250009536743164

Token 98: ',' (ID: 11)
  Prédit: 'udge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'udge' → logprob: -0.00016837897419463843
    2. 'UDGE' → logprob: -9.625168800354004
    3. 'ud' → logprob: -10.625168800354004
    4. '1' → logprob: -10.750168800354004
    5. ' =' → logprob: -11.125168800354004
    6. 'judge' → logprob: -11.375168800354004
    7. 'u' → logprob: -11.875168800354004
    8. '=' → logprob: -11.875168800354004
    9. '```' → logprob: -12.625168800354004
    10. 'ude' → logprob: -12.750168800354004

Token 99: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.06197025999426842
    2. ' j' → logprob: -2.8119702339172363
    3. '=j' → logprob: -13.936970710754395
    4. '=' → logprob: -14.186970710754395
    5. ' =' → logprob: -14.561970710754395
    6. '_j' → logprob: -15.311970710754395
    7. '	j' → logprob: -15.811970710754395
    8. ' ' → logprob: -15.936970710754395
    9. '<|end|>' → logprob: -16.561969757080078
    10. '*j' → logprob: -17.936969757080078

Token 100: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.013443619944155216
    2. '1' → logprob: -5.138443470001221
    3. ' =' → logprob: -5.138443470001221
    4. '=' → logprob: -7.013443470001221
    5. ',' → logprob: -7.638443470001221
    6. ' ' → logprob: -9.513443946838379
    7. '<|end|>' → logprob: -9.513443946838379
    8. 'udge' → logprob: -10.888443946838379
    9. '_' → logprob: -11.513443946838379
    10. '  ' → logprob: -11.763443946838379

Token 101: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759546160697937
    2. ' =' → logprob: -0.8259546160697937
    3. ',' → logprob: -11.32595443725586
    4. '=j' → logprob: -14.20095443725586
    5. '=

' → logprob: -14.70095443725586
    6. '=
' → logprob: -15.20095443725586
    7. '＝' → logprob: -15.32595443725586
    8. ' =
' → logprob: -15.32595443725586
    9. ' =)' → logprob: -15.32595443725586
    10. '<|end|>' → logprob: -15.32595443725586

Token 102: ' judge' (ID: 23319)
  Prédit: 'judge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'judge' → logprob: -0.5352334976196289
    2. ' judge' → logprob: -0.9102334976196289
    3. '[j' → logprob: -4.660233497619629
    4. 'jud' → logprob: -6.785233497619629
    5. '(j' → logprob: -7.785233497619629
    6. '[' → logprob: -8.035233497619629
    7. ' [' → logprob: -8.035233497619629
    8. ' (' → logprob: -9.660233497619629
    9. ' juge' → logprob: -9.660233497619629
    10. 'j' → logprob: -9.910233497619629

Token 103: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.0006284446571953595
    2. '(' → logprob: -7.375628471374512
    3. ' (' → logprob: -14.250628471374512
    4. '((' → logprob: -14.625628471374512
    5. '(d' → logprob: -15.375628471374512
    6. ')(' → logprob: -15.875628471374512
    7. '(
' → logprob: -16.250627517700195
    8. '(`' → logprob: -16.875627517700195
    9. '(N' → logprob: -17.625627517700195
    10. ')' → logprob: -17.625627517700195

Token 104: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2113979209971149e-05
    2. ' ' → logprob: -11.750012397766113
    3. '(' → logprob: -13.125012397766113
    4. ')' → logprob: -14.125012397766113
    5. '```' → logprob: -14.750012397766113
    6. '2' → logprob: -14.875012397766113
    7. '_' → logprob: -15.375012397766113
    8. '
' → logprob: -16.250011444091797
    9. '   ' → logprob: -16.875011444091797
    10. '`' → logprob: -16.875011444091797

Token 105: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.18091879785060883
    2. ')' → logprob: -1.80591881275177
    3. ',' → logprob: -6.8059186935424805
    4. ' ),' → logprob: -10.18091869354248
    5. ')
' → logprob: -10.93091869354248
    6. ' )' → logprob: -12.43091869354248
    7. '),(' → logprob: -13.68091869354248
    8. ');' → logprob: -14.05591869354248
    9. ')(' → logprob: -14.30591869354248
    10. ' ' → logprob: -14.55591869354248

Token 106: ' judge' (ID: 23319)
  Prédit: ' judge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' judge' → logprob: -0.048602476716041565
    2. 'judge' → logprob: -3.04860258102417
    3. ' ' → logprob: -11.673602104187012
    4. ' juge' → logprob: -13.173602104187012
    5. 'j' → logprob: -13.298602104187012
    6. ' juez' → logprob: -13.673602104187012
    7. 'jud' → logprob: -14.048602104187012
    8. ' j' → logprob: -15.798602104187012
    9. ' ' → logprob: -15.923602104187012
    10. ' judges' → logprob: -16.048603057861328

Token 107: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.0015040287980809808
    2. '(' → logprob: -6.501503944396973
    3. ' (' → logprob: -14.126503944396973
    4. '(Dense' → logprob: -14.876503944396973
    5. '(
' → logprob: -15.001503944396973
    6. '(

' → logprob: -16.37650489807129
    7. '((' → logprob: -16.87650489807129
    8. '(d' → logprob: -17.00150489807129
    9. '(Dialog' → logprob: -17.62650489807129
    10. '(DE' → logprob: -17.87650489807129

Token 108: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.7689099018462e-05
    2. ' ' → logprob: -9.50008773803711
    3. '1' → logprob: -11.87508773803711
    4. ')' → logprob: -12.62508773803711
    5. '_' → logprob: -14.37508773803711
    6. '  ' → logprob: -14.75008773803711
    7. '(' → logprob: -15.00008773803711
    8. '   ' → logprob: -15.00008773803711
    9. '۲' → logprob: -15.37508773803711
    10. ' )' → logprob: -15.68758773803711

Token 109: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008826419361867011
    2. '()' → logprob: -7.625882625579834
    3. ')
' → logprob: -8.500883102416992
    4. '<|end|>' → logprob: -8.875883102416992
    5. '())' → logprob: -10.500883102416992
    6. ' )' → logprob: -11.375883102416992
    7. '<|end|>' → logprob: -12.875883102416992
    8. '()
' → logprob: -13.875883102416992
    9. ')}' → logprob: -14.000883102416992
    10. '   ' → logprob: -14.125883102416992

Token 110: 'for' (ID: 1938)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.26675817370414734
    2. 'x' → logprob: -1.7667582035064697
    3. 'for' → logprob: -3.6417582035064697
    4. 'result' → logprob: -3.7667582035064697
    5. 'if' → logprob: -5.391757965087891
    6. 'while' → logprob: -5.891757965087891
    7. 'a' → logprob: -6.266757965087891
    8. 'i' → logprob: -6.641757965087891
    9. '<|end|>' → logprob: -7.016757965087891
    10. 'j' → logprob: -8.14175796508789

Token 111: ' _,' (ID: 18042)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.49180954694747925
    2. ' i' → logprob: -0.9918095469474792
    3. '_' → logprob: -4.116809368133545
    4. ' ' → logprob: -6.991809368133545
    5. ' x' → logprob: -8.241809844970703
    6. 'i' → logprob: -9.366809844970703
    7. '_i' → logprob: -12.616809844970703
    8. ' _
' → logprob: -12.741809844970703
    9. ' range' → logprob: -13.241809844970703
    10. 'x' → logprob: -13.991809844970703

Token 112: ' (' (ID: 350)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2008960247039795
    2. 'x' → logprob: -1.4508960247039795
    3. '(x' → logprob: -1.7008960247039795
    4. ' (' → logprob: -2.4508960247039795
    5. ' x' → logprob: -2.9508960247039795
    6. '_x' → logprob: -3.3258960247039795
    7. '(a' → logprob: -3.9508960247039795
    8. ' _' → logprob: -4.575896263122559
    9. 'a' → logprob: -4.700896263122559
    10. '__' → logprob: -4.700896263122559

Token 113: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.06048155575990677
    2. 'a' → logprob: -3.310481548309326
    3. ' x' → logprob: -4.060481548309326
    4. 'i' → logprob: -6.810481548309326
    5. ' a' → logprob: -7.560481548309326
    6. 's' → logprob: -7.685481548309326
    7. 'X' → logprob: -7.810481548309326
    8. 'A' → logprob: -7.810481548309326
    9. 'd' → logprob: -8.060482025146484
    10. '_x' → logprob: -8.060482025146484

Token 114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006781232077628374
    2. '1' → logprob: -8.375678062438965
    3. ',y' → logprob: -8.375678062438965
    4. ' ,' → logprob: -8.625678062438965
    5. 'y' → logprob: -10.625678062438965
    6. ')' → logprob: -12.250678062438965
    7. ',
' → logprob: -13.000678062438965
    8. ',x' → logprob: -13.625678062438965
    9. '_,' → logprob: -14.000678062438965
    10. '0' → logprob: -14.000678062438965

Token 115: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.14288866519927979
    2. ' y' → logprob: -2.0178885459899902
    3. ' ' → logprob: -9.517889022827148
    4. '_' → logprob: -9.892889022827148
    5. '_y' → logprob: -10.642889022827148
    6. 'z' → logprob: -11.642889022827148
    7. ')' → logprob: -12.017889022827148
    8. 't' → logprob: -12.142889022827148
    9. 'd' → logprob: -12.267889022827148
    10. 'x' → logprob: -12.830389022827148

Token 116: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.351697033504024e-05
    2. 'in' → logprob: -10.125083923339844
    3. ' )' → logprob: -10.125083923339844
    4. ' in' → logprob: -12.750083923339844
    5. ' ' → logprob: -15.375083923339844
    6. '  ' → logprob: -16.500083923339844
    7. '）' → logprob: -17.125083923339844
    8. ')
' → logprob: -17.125083923339844
    9. '   ' → logprob: -17.625083923339844
    10. '    ' → logprob: -17.875083923339844

Token 117: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.693161129951477
    2. ' in' → logprob: -0.693161129951477
    3. ' ' → logprob: -11.443161010742188
    4. 'n' → logprob: -14.193161010742188
    5. '<|end|>' → logprob: -14.193161010742188
    6. '  ' → logprob: -14.943161010742188
    7. 'inth' → logprob: -15.443161010742188
    8. ' 
' → logprob: -15.568161010742188
    9. ')' → logprob: -15.818161010742188
    10. 'ine' → logprob: -15.943161010742188

Token 118: ' zip' (ID: 16216)
  Prédit: ' enumerate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.06211881712079048
    2. 'enumer' → logprob: -2.8121187686920166
    3. ' zip' → logprob: -9.437118530273438
    4. '[' → logprob: -10.312118530273438
    5. 'zip' → logprob: -11.437118530273438
    6. 'range' → logprob: -11.562118530273438
    7. ' ' → logprob: -13.062118530273438
    8. ' range' → logprob: -13.312118530273438
    9. '```' → logprob: -13.312118530273438
    10. ' [' → logprob: -13.437118530273438

Token 119: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.0008756125462241471
    2. '(' → logprob: -7.125875473022461
    3. 'range' → logprob: -10.375875473022461
    4. ' range' → logprob: -10.500875473022461
    5. '(input' → logprob: -12.250875473022461
    6. '(
' → logprob: -12.250875473022461
    7. ' (' → logprob: -13.250875473022461
    8. '<|end|>' → logprob: -14.500875473022461
    9. '	range' → logprob: -15.875875473022461
    10. '(iter' → logprob: -16.12587547302246

Token 120: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.006947430316358805
    2. '(' → logprob: -5.0069475173950195
    3. '(n' → logprob: -8.50694751739502
    4. '(
' → logprob: -11.63194751739502
    5. ' (' → logprob: -12.13194751739502
    6. 'N' → logprob: -12.25694751739502
    7. '((' → logprob: -12.63194751739502
    8. '(int' → logprob: -12.63194751739502
    9. '(D' → logprob: -13.13194751739502
    10. ' ' → logprob: -14.63194751739502

Token 121: ' *' (ID: 425)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.4763752520084381
    2. ',' → logprob: -0.9763752222061157
    3. '),(' → logprob: -6.476375102996826
    4. ')' → logprob: -8.226375579833984
    5. ' ,' → logprob: -8.726375579833984
    6. ' ),' → logprob: -8.851375579833984
    7. ',),' → logprob: -9.726375579833984
    8. '   ' → logprob: -10.351375579833984
    9. ',(' → logprob: -11.351375579833984
    10. '(' → logprob: -11.351375579833984

Token 122: ' N' (ID: 478)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0632326602935791
    2. ' ' → logprob: -3.313232660293579
    3. '),' → logprob: -3.938232660293579
    4. ' ),' → logprob: -5.938232421875
    5. ',' → logprob: -7.563232421875
    6. '(' → logprob: -7.563232421875
    7. '3' → logprob: -7.938232421875
    8. '  ' → logprob: -8.063232421875
    9. '(N' → logprob: -8.813232421875
    10. '   ' → logprob: -9.063232421875

Token 123: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2020563930273056
    2. '),' → logprob: -1.7020564079284668
    3. '),(' → logprob: -8.202055931091309
    4. ' ,' → logprob: -8.452055931091309
    5. '(),' → logprob: -9.452055931091309
    6. ',),' → logprob: -10.702055931091309
    7. ' ),' → logprob: -10.827055931091309
    8. ',(' → logprob: -11.577055931091309
    9. ')' → logprob: -11.827055931091309
    10. ',
' → logprob: -13.077055931091309

Token 124: ' filter' (ID: 6690)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.8479666709899902
    2. '[' → logprob: -1.7229666709899902
    3. 'map' → logprob: -2.0979666709899902
    4. ' map' → logprob: -2.2229666709899902
    5. '[(' → logprob: -2.5979666709899902
    6. '[input' → logprob: -2.8479666709899902
    7. ' [(' → logprob: -4.59796667098999
    8. '[j' → logprob: -5.47296667098999
    9. 'input' → logprob: -5.72296667098999
    10. ' input' → logprob: -5.72296667098999

Token 125: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.007526416331529617
    2. '(None' → logprob: -5.507526397705078
    3. '(' → logprob: -5.882526397705078
    4. '(bool' → logprob: -7.757526397705078
    5. '(
' → logprob: -9.507526397705078
    6. '(False' → logprob: -10.007526397705078
    7. '(True' → logprob: -10.257526397705078
    8. 'lambda' → logprob: -10.757526397705078
    9. '(len' → logprob: -10.882526397705078
    10. '(int' → logprob: -12.132526397705078

Token 126: ' p' (ID: 275)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -1.155129313468933
    2. '(lambda' → logprob: -1.280129313468933
    3. 'None' → logprob: -1.530129313468933
    4. ' lambda' → logprob: -1.780129313468933
    5. ' None' → logprob: -4.030129432678223
    6. '(None' → logprob: -6.030129432678223
    7. '=lambda' → logprob: -7.030129432678223
    8. '0' → logprob: -8.655129432678223
    9. 'ambda' → logprob: -8.655129432678223
    10. ' (' → logprob: -9.530129432678223

Token 127: ':' (ID: 25)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.7200652360916138
    2. ':' → logprob: -1.7200652360916138
    3. 'lambda' → logprob: -1.9700652360916138
    4. '=lambda' → logprob: -2.720065116882324
    5. ' lambda' → logprob: -2.970065116882324
    6. ' p' → logprob: -3.595065116882324
    7. 'None' → logprob: -4.720065116882324
    8. '0' → logprob: -4.720065116882324
    9. ' :' → logprob: -4.720065116882324
    10. 'ambda' → logprob: -5.220065116882324

Token 128: ' j' (ID: 441)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.8363896012306213
    2. ' p' → logprob: -1.3363895416259766
    3. 'lambda' → logprob: -1.9613895416259766
    4. ' lambda' → logprob: -2.2113895416259766
    5. '(lambda' → logprob: -3.2113895416259766
    6. ' (' → logprob: -5.211389541625977
    7. '(p' → logprob: -6.211389541625977
    8. '(' → logprob: -6.461389541625977
    9. ')' → logprob: -7.648889541625977
    10. '=lambda' → logprob: -7.711389541625977

Token 129: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0033498897682875395
    2. '(p' → logprob: -6.003349781036377
    3. '2' → logprob: -7.378349781036377
    4. '(x' → logprob: -8.878350257873535
    5. '(*' → logprob: -10.628350257873535
    6. '((' → logprob: -10.878350257873535
    7. '
' → logprob: -11.378350257873535
    8. '(' → logprob: -11.503350257873535
    9. ')' → logprob: -11.753350257873535
    10. 'p' → logprob: -12.253350257873535

Token 130: '(*' (ID: 9000)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.00214252807199955
    2. '(' → logprob: -6.752142429351807
    3. '(*' → logprob: -7.377142429351807
    4. 'p' → logprob: -8.627142906188965
    5. ' (' → logprob: -9.752142906188965
    6. '(
' → logprob: -10.002142906188965
    7. '((' → logprob: -10.252142906188965
    8. '(x' → logprob: -11.877142906188965
    9. '(*(' → logprob: -12.252142906188965
    10. '
' → logprob: -12.377142906188965

Token 131: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00012701898231171072
    2. ' p' → logprob: -9.000126838684082
    3. '(p' → logprob: -13.125126838684082
    4. ')' → logprob: -14.750126838684082
    5. 'x' → logprob: -14.875126838684082
    6. ')p' → logprob: -15.375126838684082
    7. ' ' → logprob: -15.875126838684082
    8. '(' → logprob: -16.7501277923584
    9. '*p' → logprob: -16.7501277923584
    10. '(x' → logprob: -16.8751277923584

Token 132: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19138170778751373
    2. '),' → logprob: -2.3163816928863525
    3. '(p' → logprob: -3.6913816928863525
    4. ' and' → logprob: -3.6913816928863525
    5. ')),' → logprob: -4.941381931304932
    6. '(x' → logprob: -5.191381931304932
    7. ',' → logprob: -5.316381931304932
    8. 'and' → logprob: -5.566381931304932
    9. ')p' → logprob: -6.566381931304932
    10. '))' → logprob: -7.441381931304932

Token 133: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7413548231124878
    2. 'and' → logprob: -1.3663548231124878
    3. '(p' → logprob: -2.1163549423217773
    4. ')' → logprob: -3.2413549423217773
    5. '),' → logprob: -3.2413549423217773
    6. ',' → logprob: -3.3663549423217773
    7. '(x' → logprob: -4.866354942321777
    8. '(' → logprob: -5.116354942321777
    9. ')),' → logprob: -5.116354942321777
    10. '==' → logprob: -5.366354942321777

Token 134: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.043205056339502335
    2. 'j' → logprob: -3.1682050228118896
    3. ' not' → logprob: -8.543205261230469
    4. 'not' → logprob: -11.918205261230469
    5. ' ' → logprob: -13.793205261230469
    6. '    ' → logprob: -14.168205261230469
    7. ' ' → logprob: -14.543205261230469
    8. ')' → logprob: -14.793205261230469
    9. '	j' → logprob: -15.043205261230469
    10. ',' → logprob: -15.543205261230469

Token 135: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.000000953674316
    3. 'j' → logprob: -17.4375
    4. '
' → logprob: -17.875
    5. '  ' → logprob: -18.0
    6. '   ' → logprob: -18.25
    7. '```' → logprob: -18.4375
    8. ')' → logprob: -18.6875
    9. '

' → logprob: -19.125
    10. '    ' → logprob: -19.375

Token 136: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -1.2471589798224159e-05
    2. ' (*' → logprob: -12.250012397766113
    3. '(' → logprob: -13.000012397766113
    4. '*p' → logprob: -13.375012397766113
    5. '(p' → logprob: -13.625012397766113
    6. '(
' → logprob: -13.875012397766113
    7. '((*' → logprob: -14.250012397766113
    8. '(*(' → logprob: -14.875012397766113
    9. '*' → logprob: -15.000012397766113
    10. '(x' → logprob: -15.875012397766113

Token 137: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0005656610010191798
    2. ' p' → logprob: -7.500565528869629
    3. '(p' → logprob: -11.625565528869629
    4. ')p' → logprob: -13.500565528869629
    5. ')' → logprob: -14.000565528869629
    6. '*p' → logprob: -14.625565528869629
    7. ' ' → logprob: -14.875565528869629
    8. '   ' → logprob: -15.500565528869629
    9. '  ' → logprob: -15.625565528869629
    10. '
' → logprob: -16.125566482543945

Token 138: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.6919583678245544
    2. ')):' → logprob: -1.6919584274291992
    3. ')):
' → logprob: -2.441958427429199
    4. '):' → logprob: -2.566958427429199
    5. ')),' → logprob: -2.691958427429199
    6. '):
' → logprob: -3.441958427429199
    7. '))' → logprob: -3.816958427429199
    8. '(p' → logprob: -4.441958427429199
    9. ',' → logprob: -4.691958427429199
    10. ')' → logprob: -5.441958427429199

Token 139: ' ((' (ID: 3536)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.10256677120923996
    2. '[(' → logprob: -2.352566719055176
    3. ' ((' → logprob: -6.352566719055176
    4. '[((' → logprob: -8.102566719055176
    5. '([(' → logprob: -9.227566719055176
    6. ' [(' → logprob: -9.602566719055176
    7. '(((' → logprob: -9.727566719055176
    8. 'product' → logprob: -11.102566719055176
    9. '[[' → logprob: -11.352566719055176
    10. '(' → logprob: -11.602566719055176

Token 140: 'x' (ID: 87)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04921377822756767
    2. 'x' → logprob: -3.0492138862609863
    3. 'a' → logprob: -8.174213409423828
    4. 'j' → logprob: -8.799213409423828
    5. ' i' → logprob: -9.674213409423828
    6. 'r' → logprob: -10.549213409423828
    7. '(i' → logprob: -10.674213409423828
    8. 'k' → logprob: -11.049213409423828
    9. '0' → logprob: -11.799213409423828
    10. 'xi' → logprob: -12.049213409423828

Token 141: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005965645890682936
    2. ',y' → logprob: -5.380965709686279
    3. ' ,' → logprob: -6.630965709686279
    4. ',x' → logprob: -11.130965232849121
    5. 'y' → logprob: -12.755965232849121
    6. 'x' → logprob: -13.255965232849121
    7. '   ' → logprob: -13.505965232849121
    8. ',
' → logprob: -13.755965232849121
    9. ' y' → logprob: -14.005965232849121
    10. ' ' → logprob: -14.505965232849121

Token 142: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.10042469948530197
    2. ' y' → logprob: -2.3504247665405273
    3. 'x' → logprob: -8.475424766540527
    4. ' x' → logprob: -12.600424766540527
    5. ',y' → logprob: -13.475424766540527
    6. ' ' → logprob: -13.600424766540527
    7. ',' → logprob: -13.850424766540527
    8. '(y' → logprob: -14.350424766540527
    9. '0' → logprob: -15.225424766540527
    10. '   ' → logprob: -15.225424766540527

Token 143: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04188567027449608
    2. ' for' → logprob: -3.7918856143951416
    3. 'for' → logprob: -4.041885852813721
    4. ',' → logprob: -8.291885375976562
    5. ')
' → logprob: -8.291885375976562
    6. '
' → logprob: -8.791885375976562
    7. ' )' → logprob: -9.416885375976562
    8. '   ' → logprob: -9.791885375976562
    9. '  ' → logprob: -10.416885375976562
    10. ' ' → logprob: -10.791885375976562

Token 144: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12709660828113556
    2. 'for' → logprob: -2.127096652984619
    3. ')' → logprob: -9.377096176147461
    4. '
' → logprob: -10.377096176147461
    5. '   ' → logprob: -11.377096176147461
    6. ' in' → logprob: -11.502096176147461
    7. '	for' → logprob: -11.502096176147461
    8. ' ' → logprob: -11.877096176147461
    9. '<|end|>' → logprob: -12.377096176147461
    10. '  ' → logprob: -12.377096176147461

Token 145: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2550677955150604
    2. ' x' → logprob: -1.5050678253173828
    3. ' range' → logprob: -5.880067825317383
    4. 'range' → logprob: -9.005067825317383
    5. '0' → logprob: -9.255067825317383
    6. ' y' → logprob: -10.130067825317383
    7. 'y' → logprob: -10.255067825317383
    8. ' ' → logprob: -10.255067825317383
    9. ' xrange' → logprob: -12.130067825317383
    10. ' in' → logprob: -12.880067825317383

Token 146: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004097158554941416
    2. 'in' → logprob: -5.504096984863281
    3. ' ' → logprob: -11.379096984863281
    4. '<|end|>' → logprob: -12.629096984863281
    5. '0' → logprob: -13.879096984863281
    6. 'range' → logprob: -14.004096984863281
    7. 'import' → logprob: -14.379096984863281
    8. 'In' → logprob: -15.504096984863281
    9. ')' → logprob: -15.504096984863281
    10. '  ' → logprob: -15.629096984863281

Token 147: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03804275393486023
    2. ' range' → logprob: -3.2880427837371826
    3. '0' → logprob: -14.663043022155762
    4. '
' → logprob: -14.788043022155762
    5. ' ' → logprob: -15.663043022155762
    6. '(range' → logprob: -15.913043022155762
    7. '	range' → logprob: -16.288042068481445
    8. '   ' → logprob: -17.788042068481445
    9. ')' → logprob: -17.788042068481445
    10. '  ' → logprob: -17.913042068481445

Token 148: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0017695431597530842
    2. 'N' → logprob: -6.751769542694092
    3. '(' → logprob: -7.501769542694092
    4. '(
' → logprob: -11.37677001953125
    5. ' (' → logprob: -11.50177001953125
    6. '(n' → logprob: -11.75177001953125
    7. ' N' → logprob: -11.75177001953125
    8. ' ' → logprob: -12.62677001953125
    9. '	N' → logprob: -13.37677001953125
    10. '   ' → logprob: -13.87677001953125

Token 149: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15386587381362915
    2. ' for' → logprob: -3.0288658142089844
    3. '   ' → logprob: -3.5288658142089844
    4. 'N' → logprob: -3.5288658142089844
    5. 'for' → logprob: -4.153865814208984
    6. ' ' → logprob: -5.028865814208984
    7. '(N' → logprob: -5.903865814208984
    8. ' N' → logprob: -6.278865814208984
    9. '):
' → logprob: -6.403865814208984
    10. '       ' → logprob: -6.528865814208984

Token 150: ' ' (ID: 220)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -5.490809417096898e-05
    2. ' N' → logprob: -9.875055313110352
    3. ')' → logprob: -13.875055313110352
    4. '(N' → logprob: -13.875055313110352
    5. ' ' → logprob: -14.375055313110352
    6. '(' → logprob: -15.125055313110352
    7. '0' → logprob: -16.12505531311035
    8. '))' → logprob: -16.25005531311035
    9. 'n' → logprob: -16.50005531311035
    10. '1' → logprob: -16.62505531311035

Token 151: '2' (ID: 17)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -2.8444881536415778e-05
    2. ')' → logprob: -11.375028610229492
    3. ' N' → logprob: -11.625028610229492
    4. '0' → logprob: -12.750028610229492
    5. ' ' → logprob: -13.375028610229492
    6. 'n' → logprob: -14.125028610229492
    7. '))' → logprob: -14.750028610229492
    8. '(N' → logprob: -14.875028610229492
    9. '1' → logprob: -15.250028610229492
    10. '   ' → logprob: -15.250028610229492

Token 152: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007641222910024226
    2. ' )' → logprob: -7.750763893127441
    3. '+' → logprob: -8.625763893127441
    4. ' ' → logprob: -10.000763893127441
    5. ' for' → logprob: -10.875763893127441
    6. 'N' → logprob: -10.875763893127441
    7. ')
' → logprob: -11.125763893127441
    8. 'for' → logprob: -11.250763893127441
    9. '   ' → logprob: -11.500763893127441
    10. ',' → logprob: -12.250763893127441

Token 153: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2979741394519806
    2. 'for' → logprob: -1.9229741096496582
    3. ')' → logprob: -2.797974109649658
    4. '   ' → logprob: -3.172974109649658
    5. ' ' → logprob: -6.172974109649658
    6. '       ' → logprob: -6.297974109649658
    7. '+' → logprob: -6.922974109649658
    8. '    ' → logprob: -7.547974109649658
    9. '           ' → logprob: -7.547974109649658
    10. ',' → logprob: -7.922974109649658

Token 154: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.22598516941070557
    2. 'y' → logprob: -1.6009851694107056
    3. ' range' → logprob: -7.600985050201416
    4. 'range' → logprob: -9.600985527038574
    5. ' ' → logprob: -12.975985527038574
    6. 'x' → logprob: -13.850985527038574
    7. ' ' → logprob: -15.225985527038574
    8. ' x' → logprob: -15.225985527038574
    9. '   ' → logprob: -15.350985527038574
    10. '	y' → logprob: -15.725985527038574

Token 155: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14233948290348053
    2. ' range' → logprob: -2.2673394680023193
    3. 'range' → logprob: -4.142339706420898
    4. '(range' → logprob: -4.767339706420898
    5. 'in' → logprob: -5.392339706420898
    6. ' (' → logprob: -9.642339706420898
    7. '<|end|>' → logprob: -10.017339706420898
    8. ' ' → logprob: -11.142339706420898
    9. '	range' → logprob: -11.767339706420898
    10. ' xrange' → logprob: -12.392339706420898

Token 156: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.38731178641319275
    2. 'range' → logprob: -1.1373118162155151
    3. '(range' → logprob: -8.262311935424805
    4. 'N' → logprob: -8.887311935424805
    5. ' N' → logprob: -10.512311935424805
    6. '(N' → logprob: -11.387311935424805
    7. ' ' → logprob: -13.887311935424805
    8. ' (' → logprob: -14.012311935424805
    9. 'Range' → logprob: -14.012311935424805
    10. ' xrange' → logprob: -14.262311935424805

Token 157: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0017177811823785305
    2. '(' → logprob: -6.501717567443848
    3. 'N' → logprob: -8.626717567443848
    4. ' (' → logprob: -11.126717567443848
    5. '((' → logprob: -11.501717567443848
    6. ' N' → logprob: -13.126717567443848
    7. '(
' → logprob: -13.251717567443848
    8. ')' → logprob: -13.376717567443848
    9. ' ' → logprob: -13.626717567443848
    10. '(n' → logprob: -13.751717567443848

Token 158: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.043524328619241714
    2. '*' → logprob: -3.1685242652893066
    3. '2' → logprob: -8.543524742126465
    4. ' ' → logprob: -8.793524742126465
    5. '   ' → logprob: -9.043524742126465
    6. '(' → logprob: -11.168524742126465
    7. ')' → logprob: -11.168524742126465
    8. '))' → logprob: -11.293524742126465
    9. '       ' → logprob: -12.793524742126465
    10. '```' → logprob: -12.793524742126465

Token 159: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003603036515414715
    2. ' ' → logprob: -5.628602981567383
    3. '1' → logprob: -13.503602981567383
    4. '(' → logprob: -15.128602981567383
    5. ')' → logprob: -15.253602981567383
    6. '   ' → logprob: -15.378602981567383
    7. '))' → logprob: -15.691102981567383
    8. '
' → logprob: -16.066102981567383
    9. ' ' → logprob: -16.441102981567383
    10. '```' → logprob: -16.753602981567383

Token 160: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00046689616283401847
    2. '1' → logprob: -8.250467300415039
    3. ' ' → logprob: -8.500467300415039
    4. '   ' → logprob: -14.250467300415039
    5. ')' → logprob: -15.250467300415039
    6. '```' → logprob: -15.500467300415039
    7. '(' → logprob: -16.06296730041504
    8. '))' → logprob: -16.18796730041504
    9. '0' → logprob: -16.25046730041504
    10. '  ' → logprob: -16.31296730041504

Token 161: '))' (ID: 915)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.33028388023376465
    2. '))' → logprob: -1.8302838802337646
    3. '))))' → logprob: -2.7052838802337646
    4. '):' → logprob: -3.0802838802337646
    5. ')' → logprob: -5.455284118652344
    6. ')));' → logprob: -6.330284118652344
    7. ')):' → logprob: -6.455284118652344
    8. ':' → logprob: -8.705284118652344
    9. '))).' → logprob: -9.580284118652344
    10. '))),' → logprob: -9.705284118652344

Token 162: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.1258387714624405
    2. '))' → logprob: -2.2508387565612793
    3. '):' → logprob: -4.625838756561279
    4. ')):
' → logprob: -6.000838756561279
    5. ')))' → logprob: -7.750838756561279
    6. ')' → logprob: -9.375839233398438
    7. ':' → logprob: -9.375839233398438
    8. '):
' → logprob: -11.000839233398438
    9. ')):
' → logprob: -11.250839233398438
    10. '))))' → logprob: -12.125839233398438

Token 163: '   ' (ID: 271)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.5841493606567383
    2. '   ' → logprob: -0.8341493606567383
    3. 'print' → logprob: -4.834149360656738
    4. '	print' → logprob: -9.459149360656738
    5. '       ' → logprob: -10.209149360656738
    6. '    
' → logprob: -10.584149360656738
    7. '
' → logprob: -10.709149360656738
    8. ' 
' → logprob: -11.084149360656738
    9. ' ' → logprob: -11.334149360656738
    10. ',' → logprob: -12.084149360656738

Token 164: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.2281460016965866
    2. '   ' → logprob: -1.978145956993103
    3. 'print' (adapté à ' print') → logprob: -2.7281460762023926
    4. '
' → logprob: -8.978145599365234
    5. '	print' → logprob: -9.103145599365234
    6. ' 
' → logprob: -10.603145599365234
    7. '       ' → logprob: -10.853145599365234
    8. '    
' → logprob: -11.228145599365234
    9. '```' → logprob: -12.478145599365234
    10. '    ' → logprob: -12.603145599365234

Token 165: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.008164995349943638
    2. 'x' → logprob: -5.633164882659912
    3. '(' → logprob: -5.883164882659912
    4. '(f' → logprob: -6.383164882659912
    5. 'f' → logprob: -10.38316535949707
    6. '((' → logprob: -10.63316535949707
    7. '(
' → logprob: -12.00816535949707
    8. ' x' → logprob: -12.25816535949707
    9. ' (' → logprob: -12.50816535949707
    10. '('' → logprob: -12.63316535949707

Token 166: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006398207973688841
    2. ',y' → logprob: -5.1313982009887695
    3. ' ,' → logprob: -8.13139820098877
    4. ',end' → logprob: -8.88139820098877
    5. ')' → logprob: -10.63139820098877
    6. '(),' → logprob: -13.00639820098877
    7. ',
' → logprob: -13.00639820098877
    8. ',)' → logprob: -13.25639820098877
    9. ' y' → logprob: -13.75639820098877
    10. ',",' → logprob: -14.50639820098877

Token 167: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.31326326727867126
    2. ' y' → logprob: -1.3132632970809937
    3. '    ' → logprob: -14.688262939453125
    4. ')' → logprob: -14.938262939453125
    5. ' ' → logprob: -15.438262939453125
    6. '"' → logprob: -15.438262939453125
    7. ''y' → logprob: -15.688262939453125
    8. '	y' → logprob: -17.063262939453125
    9. ''' → logprob: -17.313262939453125
    10. ' 
' → logprob: -17.313262939453125

Token 168: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.306760805164231e-05
    2. ',' → logprob: -12.12501335144043
    3. ',)' → logprob: -13.12501335144043
    4. ' )' → logprob: -13.37501335144043
    5. ')
' → logprob: -13.62501335144043
    6. '<|end|>' → logprob: -13.62501335144043
    7. '))' → logprob: -15.00001335144043
    8. ');' → logprob: -15.12501335144043
    9. '),' → logprob: -15.37501335144043
    10. ')#' → logprob: -15.50001335144043


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 166
Tokens correctement prédits (1ère position, stricte): 70
Tokens correctement prédits (1ère position, avec adaptation): 71
Tokens correctement prédits (top 10): 139
Précision stricte (1ère position): 42.17%
Précision adaptée (1ère position): 42.77%
Précision (top 10): 83.73%
================================================================================
