================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:20:28
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
x, y, a, b, c = list(map(int, input().split()))
p = list(map(int, input().split()))
q = list(map(int, input().split()))
r = list(map(int, input().split()))
p.sort()
q.sort()
tmp1 = []
for i in range(a-x, a):
    tmp1.append(p[i])
for i in range(b-y, b):
    tmp1.append(q[i])
for i in range(c):
    tmp1.append(r[i])
tmp1.sort()
s = 0
for i in range(x+y):
    s += tmp1[-(i+1)]
print(s)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'x' (ID: 87)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' y' (ID: 342)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.047798529267311096
    2. ' =' → logprob: -3.1727986335754395
    3. ',' → logprob: -5.4227986335754395
    4. ' ' → logprob: -8.922798156738281
    5. '.' → logprob: -9.047798156738281
    6. '+' → logprob: -10.172798156738281
    7. ')' → logprob: -11.172798156738281
    8. '```' → logprob: -11.172798156738281
    9. ';' → logprob: -11.297798156738281
    10. '_' → logprob: -11.672798156738281

Token 4: ' a' (ID: 261)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09458693861961365
    2. ' =' → logprob: -2.4695868492126465
    3. ',' → logprob: -5.4695868492126465
    4. ' ' → logprob: -6.8445868492126465
    5. ')' → logprob: -9.094587326049805
    6. ' ,' → logprob: -9.469587326049805
    7. '.' → logprob: -9.719587326049805
    8. '_' → logprob: -10.594587326049805
    9. '<|end|>' → logprob: -11.094587326049805
    10. '```' → logprob: -11.594587326049805

Token 5: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0015098588773980737
    2. ' =' → logprob: -6.751509666442871
    3. '+' → logprob: -8.251509666442871
    4. ',' → logprob: -9.751509666442871
    5. ' ' → logprob: -11.876509666442871
    6. '_' → logprob: -13.001509666442871
    7. '[' → logprob: -13.376509666442871
    8. ')' → logprob: -13.626509666442871
    9. '.' → logprob: -13.626509666442871
    10. '=
' → logprob: -13.751509666442871

Token 6: ' b' (ID: 287)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03833075240254402
    2. ' =' → logprob: -3.5383307933807373
    3. ',' → logprob: -4.788330554962158
    4. ' ' → logprob: -9.413331031799316
    5. '.' → logprob: -10.038331031799316
    6. ',b' → logprob: -10.288331031799316
    7. 'b' → logprob: -10.538331031799316
    8. '_' → logprob: -11.913331031799316
    9. ' ,' → logprob: -12.163331031799316
    10. ')' → logprob: -12.538331031799316

Token 7: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004536923486739397
    2. '+' → logprob: -6.254537105560303
    3. ' =' → logprob: -6.254537105560303
    4. ',' → logprob: -8.129536628723145
    5. ')' → logprob: -9.504536628723145
    6. '```' → logprob: -9.504536628723145
    7. '*' → logprob: -9.879536628723145
    8. ' ' → logprob: -10.379536628723145
    9. '[' → logprob: -10.379536628723145
    10. '_' → logprob: -10.504536628723145

Token 8: ' c' (ID: 274)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00443284772336483
    2. ' =' → logprob: -5.629432678222656
    3. ',' → logprob: -7.129432678222656
    4. ')' → logprob: -11.754432678222656
    5. '=
' → logprob: -12.129432678222656
    6. ' ' → logprob: -12.254432678222656
    7. '+' → logprob: -12.879432678222656
    8. '.' → logprob: -13.004432678222656
    9. '<|end|>' → logprob: -13.004432678222656
    10. 'c' → logprob: -14.254432678222656

Token 9: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004851480480283499
    2. ' =' → logprob: -5.629851341247559
    3. '+' → logprob: -7.629851341247559
    4. ',' → logprob: -7.629851341247559
    5. '```' → logprob: -9.254851341247559
    6. ')' → logprob: -10.004851341247559
    7. '*' → logprob: -10.754851341247559
    8. '[' → logprob: -10.754851341247559
    9. '_' → logprob: -10.879851341247559
    10. '.' → logprob: -11.129851341247559

Token 10: ' list' (ID: 1562)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14216618239879608
    2. ' ' → logprob: -2.1421661376953125
    3. '1' → logprob: -4.3921661376953125
    4. ' [' → logprob: -6.6421661376953125
    5. '[' → logprob: -6.7671661376953125
    6. '10' → logprob: -9.767166137695312
    7. 'map' → logprob: -10.142166137695312
    8. ' None' → logprob: -10.517166137695312
    9. ' map' → logprob: -10.767166137695312
    10. 'x' → logprob: -10.767166137695312

Token 11: '(map' (ID: 16946)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3053610324859619
    2. '.' → logprob: -1.430361032485962
    3. '=' → logprob: -4.555360794067383
    4. ',' → logprob: -4.680360794067383
    5. ' =' → logprob: -5.930360794067383
    6. '[:]' → logprob: -6.805360794067383
    7. '[:' → logprob: -9.555360794067383
    8. '[x' → logprob: -10.430360794067383
    9. '.pop' → logprob: -10.680360794067383
    10. ';' → logprob: -11.055360794067383

Token 12: '(int' (ID: 2742)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.36071357131004333
    2. '(' → logprob: -1.6107136011123657
    3. '(int' → logprob: -2.735713481903076
    4. ')' → logprob: -3.985713481903076
    5. '(str' → logprob: -4.360713481903076
    6. '<|end|>' → logprob: -5.610713481903076
    7. '(eval' → logprob: -7.985713481903076
    8. '(
' → logprob: -7.985713481903076
    9. '```' → logprob: -7.985713481903076
    10. 'lambda' → logprob: -8.485713958740234

Token 13: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1637930870056152
    2. '<|end|>' → logprob: -1.1637930870056152
    3. '(input' → logprob: -1.7887930870056152
    4. ')' → logprob: -1.7887930870056152
    5. ',' → logprob: -5.038793087005615
    6. '```' → logprob: -5.163793087005615
    7. '(token' → logprob: -5.413793087005615
    8. '<|end|>' → logprob: -5.413793087005615
    9. '(x' → logprob: -5.663793087005615
    10. '(range' → logprob: -6.288793087005615

Token 14: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.003771577961742878
    2. ' input' → logprob: -5.878771781921387
    3. '(input' → logprob: -7.003771781921387
    4. ')' → logprob: -10.128771781921387
    5. ',input' → logprob: -11.378771781921387
    6. '<input' → logprob: -13.628771781921387
    7. '=input' → logprob: -13.753771781921387
    8. '))' → logprob: -14.128771781921387
    9. '(' → logprob: -14.253771781921387
    10. '[input' → logprob: -14.253771781921387

Token 15: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.35971465706825256
    2. '(input' → logprob: -2.2347147464752197
    3. '()))' → logprob: -2.8597147464752197
    4. '()' → logprob: -3.1097147464752197
    5. '(()' → logprob: -3.3597147464752197
    6. '(token' → logprob: -4.609714508056641
    7. '())' → logprob: -4.859714508056641
    8. '(""))' → logprob: -5.109714508056641
    9. '))' → logprob: -5.984714508056641
    10. ')' → logprob: -5.984714508056641

Token 16: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00045367187703959644
    2. 'strip' → logprob: -7.750453472137451
    3. ' split' → logprob: -11.37545394897461
    4. 'rstrip' → logprob: -12.00045394897461
    5. '(split' → logprob: -12.50045394897461
    6. ')' → logprob: -14.12545394897461
    7. 'spl' → logprob: -14.62545394897461
    8. 'read' → logprob: -14.87545394897461
    9. 'replace' → logprob: -17.50045394897461
    10. '```' → logprob: -17.62545394897461

Token 17: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.21611449122428894
    2. '()))' → logprob: -2.2161145210266113
    3. '(' → logprob: -3.3411145210266113
    4. ')' → logprob: -3.4661145210266113
    5. ')))' → logprob: -4.591114521026611
    6. '())' → logprob: -5.591114521026611
    7. '('' → logprob: -5.966114521026611
    8. '())))' → logprob: -7.341114521026611
    9. '()' → logprob: -7.591114521026611
    10. ''))' → logprob: -7.716114521026611

Token 18: 'p' (ID: 79)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.31007200479507446
    2. 'd' → logprob: -2.4350719451904297
    3. '+' → logprob: -2.9350719451904297
    4. 'x' → logprob: -3.0600719451904297
    5. '#' → logprob: -3.5600719451904297
    6. 'i' → logprob: -3.8100719451904297
    7. ',' → logprob: -5.06007194519043
    8. '*' → logprob: -5.31007194519043
    9. ' if' → logprob: -5.81007194519043
    10. ')' → logprob: -6.31007194519043

Token 19: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0018834194634109735
    2. '+' → logprob: -7.251883506774902
    3. '=' → logprob: -8.251883506774902
    4. ' =' → logprob: -8.876883506774902
    5. ')' → logprob: -9.001883506774902
    6. ',' → logprob: -9.001883506774902
    7. '-' → logprob: -9.876883506774902
    8. 'd' → logprob: -10.001883506774902
    9. ' r' → logprob: -10.251883506774902
    10. '_' → logprob: -10.251883506774902

Token 20: ' list' (ID: 1562)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6633393168449402
    2. 'x' → logprob: -1.663339376449585
    3. ' a' → logprob: -2.038339376449585
    4. ' x' → logprob: -2.288339376449585
    5. ' (' → logprob: -4.413339138031006
    6. '(x' → logprob: -4.538339138031006
    7. '(a' → logprob: -4.663339138031006
    8. ' ' → logprob: -5.163339138031006
    9. 'max' → logprob: -5.413339138031006
    10. '0' → logprob: -5.538339138031006

Token 21: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.4372808039188385
    2. '(' → logprob: -1.0622807741165161
    3. '(int' → logprob: -5.187280654907227
    4. '(range' → logprob: -6.562280654907227
    5. '(p' → logprob: -8.437280654907227
    6. '(list' → logprob: -8.562280654907227
    7. '(x' → logprob: -8.937280654907227
    8. '(.' → logprob: -9.062280654907227
    9. '(input' → logprob: -9.187280654907227
    10. '.map' → logprob: -9.687280654907227

Token 22: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.038198359310626984
    2. '(' → logprob: -3.288198471069336
    3. '<int' → logprob: -9.788198471069336
    4. '(str' → logprob: -10.663198471069336
    5. 'int' → logprob: -10.663198471069336
    6. '[int' → logprob: -11.038198471069336
    7. ')' → logprob: -11.538198471069336
    8. '(
' → logprob: -12.038198471069336
    9. '=int' → logprob: -12.413198471069336
    10. ',int' → logprob: -12.413198471069336

Token 23: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.5191781520843506
    2. ',input' → logprob: -1.0191781520843506
    3. ',' → logprob: -3.1441781520843506
    4. '(' → logprob: -7.26917839050293
    5. 'input' → logprob: -9.14417839050293
    6. ' ,' → logprob: -9.26917839050293
    7. '=input' → logprob: -10.01917839050293
    8. ' input' → logprob: -10.89417839050293
    9. ' (' → logprob: -11.89417839050293
    10. '```' → logprob: -11.89417839050293

Token 24: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5231866240501404
    2. ' input' → logprob: -0.8981866240501404
    3. '(input' → logprob: -9.898186683654785
    4. ',input' → logprob: -12.023186683654785
    5. ')' → logprob: -13.148186683654785
    6. 'list' → logprob: -13.773186683654785
    7. '[input' → logprob: -14.023186683654785
    8. '=input' → logprob: -14.148186683654785
    9. 'x' → logprob: -14.648186683654785
    10. '	input' → logprob: -14.898186683654785

Token 25: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00024001303245313466
    2. '()' → logprob: -8.375240325927734
    3. ' ().' → logprob: -13.250240325927734
    4. '(' → logprob: -13.375240325927734
    5. '()))' → logprob: -13.375240325927734
    6. '.' → logprob: -13.750240325927734
    7. '().__' → logprob: -14.125240325927734
    8. '())' → logprob: -14.500240325927734
    9. '().'' → logprob: -14.875240325927734
    10. '()));' → logprob: -14.875240325927734

Token 26: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.512236498361744e-07
    2. ' split' → logprob: -14.750000953674316
    3. '(split' → logprob: -16.625
    4. 'strip' → logprob: -16.875
    5. 'spl' → logprob: -17.5
    6. 'rstrip' → logprob: -18.375
    7. 'plit' → logprob: -18.875
    8. ')' → logprob: -20.125
    9. 'sp' → logprob: -20.25
    10. '.split' → logprob: -21.125

Token 27: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.17620091140270233
    2. '())' → logprob: -1.9262008666992188
    3. '()' → logprob: -4.801200866699219
    4. '))' → logprob: -5.051200866699219
    5. ')' → logprob: -6.926200866699219
    6. '(' → logprob: -8.676200866699219
    7. '()));' → logprob: -10.676200866699219
    8. '()))
' → logprob: -11.051200866699219
    9. '())))' → logprob: -12.301200866699219
    10. ' ())' → logprob: -12.426200866699219

Token 28: 'q' (ID: 80)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.826215922832489
    2. 'd' → logprob: -0.826215922832489
    3. 's' → logprob: -3.826215982437134
    4. 'x' → logprob: -3.826215982437134
    5. 'a' → logprob: -4.076215744018555
    6. 'p' → logprob: -4.451215744018555
    7. 'n' → logprob: -5.076215744018555
    8. 't' → logprob: -5.201215744018555
    9. '`' → logprob: -5.576215744018555
    10. ')' → logprob: -5.576215744018555

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.054944686591625214
    2. '=' → logprob: -2.9299447536468506
    3. '.' → logprob: -10.42994499206543
    4. '[' → logprob: -10.92994499206543
    5. ',' → logprob: -12.67994499206543
    6. ')' → logprob: -13.17994499206543
    7. 's' → logprob: -13.17994499206543
    8. '_' → logprob: -13.30494499206543
    9. 'space' → logprob: -13.67994499206543
    10. '.append' → logprob: -14.05494499206543

Token 30: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.28133904933929443
    2. 'list' → logprob: -1.4063390493392944
    3. ' p' → logprob: -8.906338691711426
    4. 'p' → logprob: -10.781338691711426
    5. '(list' → logprob: -11.156338691711426
    6. '[' → logprob: -12.406338691711426
    7. ' map' → logprob: -13.156338691711426
    8. ' [' → logprob: -13.281338691711426
    9. 'map' → logprob: -13.281338691711426
    10. '[]' → logprob: -13.406338691711426

Token 31: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6407843828201294
    2. '(map' → logprob: -0.7657843828201294
    3. '(int' → logprob: -5.51578426361084
    4. '(.' → logprob: -6.14078426361084
    5. '((' → logprob: -7.14078426361084
    6. '(list' → logprob: -7.51578426361084
    7. '(

' → logprob: -9.14078426361084
    8. '(lambda' → logprob: -9.26578426361084
    9. '(
' → logprob: -9.39078426361084
    10. '(range' → logprob: -10.01578426361084

Token 32: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00010926496179308742
    2. 'int' → logprob: -9.500109672546387
    3. '(' → logprob: -11.000109672546387
    4. '=int' → logprob: -11.750109672546387
    5. '<int' → logprob: -11.875109672546387
    6. '[int' → logprob: -13.375109672546387
    7. ',int' → logprob: -14.750109672546387
    8. ' int' → logprob: -15.250109672546387
    9. '```' → logprob: -16.00010871887207
    10. ' (' → logprob: -16.37510871887207

Token 33: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8076016902923584
    2. ',int' → logprob: -1.3076016902923584
    3. '(int' → logprob: -1.3076016902923584
    4. 'int' → logprob: -4.9326019287109375
    5. '<int' → logprob: -6.0576019287109375
    6. ',input' → logprob: -6.5576019287109375
    7. '=int' → logprob: -7.4326019287109375
    8. '(' → logprob: -7.8076019287109375
    9. '(input' → logprob: -7.8076019287109375
    10. '[int' → logprob: -7.9326019287109375

Token 34: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.45816752314567566
    2. 'int' → logprob: -1.083167552947998
    3. ' input' → logprob: -3.583167552947998
    4. ' int' → logprob: -6.708167552947998
    5. '(int' → logprob: -11.33316707611084
    6. '(input' → logprob: -12.45816707611084
    7. ' ' → logprob: -12.83316707611084
    8. '[int' → logprob: -12.95816707611084
    9. 'stdin' → logprob: -12.95816707611084
    10. 'str' → logprob: -13.83316707611084

Token 35: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.842555426876061e-06
    2. '()' → logprob: -13.000004768371582
    3. '.' → logprob: -14.000004768371582
    4. ').' → logprob: -14.625004768371582
    5. ' ().' → logprob: -14.625004768371582
    6. '()).' → logprob: -14.875004768371582
    7. '(.' → logprob: -15.875004768371582
    8. '>().' → logprob: -16.0000057220459
    9. '(' → logprob: -16.3750057220459
    10. '().__' → logprob: -16.8750057220459

Token 36: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.531315314830863e-06
    2. 's' → logprob: -13.375003814697266
    3. 'spl' → logprob: -13.625003814697266
    4. ' split' → logprob: -14.750003814697266
    5. ')' → logprob: -15.500003814697266
    6. 'strip' → logprob: -16.875003814697266
    7. '```' → logprob: -17.375003814697266
    8. 'plit' → logprob: -17.375003814697266
    9. '.split' → logprob: -18.000003814697266
    10. '_split' → logprob: -18.125003814697266

Token 37: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.625277042388916
    2. '))' → logprob: -0.875277042388916
    3. '())' → logprob: -3.875277042388916
    4. ')' → logprob: -4.125277042388916
    5. '()' → logprob: -4.500277042388916
    6. '()))
' → logprob: -9.625276565551758
    7. '(' → logprob: -11.250276565551758
    8. ' ))' → logprob: -11.500276565551758
    9. '()));' → logprob: -11.500276565551758
    10. '))
' → logprob: -12.500276565551758

Token 38: 'r' (ID: 81)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3971312046051025
    2. 'd' → logprob: -1.6471312046051025
    3. ')' → logprob: -2.0221312046051025
    4. 'p' → logprob: -2.3971312046051025
    5. 's' → logprob: -3.0221312046051025
    6. 'r' → logprob: -3.0221312046051025
    7. 'x' → logprob: -3.5221312046051025
    8. 'i' → logprob: -3.7721312046051025
    9. '#' → logprob: -3.8971312046051025
    10. 'n' → logprob: -4.022130966186523

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6793274879455566
    2. '=' → logprob: -1.0543274879455566
    3. '.' → logprob: -2.8043274879455566
    4. ',' → logprob: -3.5543274879455566
    5. '[' → logprob: -3.8043274879455566
    6. '_' → logprob: -3.9293274879455566
    7. ')' → logprob: -5.179327487945557
    8. 's' → logprob: -5.429327487945557
    9. '(' → logprob: -6.804327487945557
    10. 'a' → logprob: -6.929327487945557

Token 40: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.38496002554893494
    2. 'list' → logprob: -1.2599600553512573
    3. ' []' → logprob: -4.134960174560547
    4. '[' → logprob: -5.009960174560547
    5. '[]' → logprob: -5.134960174560547
    6. ' [' → logprob: -5.509960174560547
    7. '[list' → logprob: -6.759960174560547
    8. '(list' → logprob: -7.134960174560547
    9. ' p' → logprob: -7.384960174560547
    10. ' ' → logprob: -8.884960174560547

Token 41: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002157518407329917
    2. '(int' → logprob: -7.252157688140869
    3. '(map' → logprob: -7.502157688140869
    4. '((' → logprob: -8.252157211303711
    5. '(list' → logprob: -8.627157211303711
    6. '(s' → logprob: -9.877157211303711
    7. '(p' → logprob: -10.002157211303711
    8. '(range' → logprob: -10.002157211303711
    9. '(lambda' → logprob: -10.002157211303711
    10. '(.' → logprob: -10.252157211303711

Token 42: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -7.421908958349377e-05
    2. '(' → logprob: -9.87507438659668
    3. '<int' → logprob: -11.25007438659668
    4. '=int' → logprob: -12.62507438659668
    5. 'int' → logprob: -12.87507438659668
    6. '[int' → logprob: -12.87507438659668
    7. ',int' → logprob: -14.37507438659668
    8. ']int' → logprob: -15.37507438659668
    9. ')(' → logprob: -16.12507438659668
    10. '```' → logprob: -16.25007438659668

Token 43: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0046334033831954
    2. ',int' → logprob: -5.62963342666626
    3. '(' → logprob: -7.25463342666626
    4. ',' → logprob: -8.879632949829102
    5. '(input' → logprob: -9.754632949829102
    6. '=int' → logprob: -10.129632949829102
    7. 'int' → logprob: -10.254632949829102
    8. '```' → logprob: -10.879632949829102
    9. '<int' → logprob: -11.379632949829102
    10. '[int' → logprob: -11.879632949829102

Token 44: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04683516547083855
    2. 'input' → logprob: -3.67183518409729
    3. ' int' → logprob: -4.421834945678711
    4. ' input' → logprob: -5.046834945678711
    5. '(int' → logprob: -6.296834945678711
    6. '(input' → logprob: -10.671834945678711
    7. '[int' → logprob: -11.671834945678711
    8. '<int' → logprob: -12.296834945678711
    9. ',int' → logprob: -13.421834945678711
    10. '=int' → logprob: -13.421834945678711

Token 45: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.825890159234405e-05
    2. '(.' → logprob: -10.375068664550781
    3. '.' → logprob: -11.125068664550781
    4. ').' → logprob: -11.625068664550781
    5. '()' → logprob: -12.000068664550781
    6. ' ().' → logprob: -13.625068664550781
    7. '(' → logprob: -14.000068664550781
    8. '()).' → logprob: -14.125068664550781
    9. '{}.' → logprob: -14.125068664550781
    10. '>().' → logprob: -14.250068664550781

Token 46: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.981667537620524e-06
    2. 'spl' → logprob: -13.500001907348633
    3. '(split' → logprob: -15.125001907348633
    4. ')' → logprob: -16.125001907348633
    5. ' split' → logprob: -16.375001907348633
    6. 'sp' → logprob: -17.375001907348633
    7. 's' → logprob: -17.500001907348633
    8. '_split' → logprob: -18.875001907348633
    9. 'strip' → logprob: -19.875001907348633
    10. 'plit' → logprob: -20.000001907348633

Token 47: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.3235536813735962
    2. '))' → logprob: -2.0735535621643066
    3. '())' → logprob: -2.3235535621643066
    4. ')' → logprob: -3.1985535621643066
    5. '()' → logprob: -4.448553562164307
    6. '()))
' → logprob: -8.698554039001465
    7. '(' → logprob: -10.948554039001465
    8. '()));' → logprob: -11.073554039001465
    9. '())
' → logprob: -11.948554039001465
    10. ' ())' → logprob: -12.073554039001465

Token 48: 'p' (ID: 79)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.751244843006134
    2. 'i' → logprob: -1.7512447834014893
    3. 'for' → logprob: -2.0012447834014893
    4. 'x' → logprob: -3.0012447834014893
    5. 'if' → logprob: -3.2512447834014893
    6. 's' → logprob: -3.7512447834014893
    7. 't' → logprob: -4.376245021820068
    8. '```' → logprob: -4.376245021820068
    9. 'n' → logprob: -4.751245021820068
    10. 'u' → logprob: -4.751245021820068

Token 49: '.sort' (ID: 19551)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005462136119604111
    2. '<|end|>' → logprob: -6.380462169647217
    3. '.' → logprob: -6.630462169647217
    4. '\[' → logprob: -7.130462169647217
    5. '```' → logprob: -7.630462169647217
    6. '#' → logprob: -8.380461692810059
    7. '+' → logprob: -8.505461692810059
    8. ')' → logprob: -8.880461692810059
    9. ',' → logprob: -9.005461692810059
    10. '[:]' → logprob: -9.255461692810059

Token 50: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002149073174223304
    2. '()' → logprob: -6.2521491050720215
    3. '((' → logprob: -9.377148628234863
    4. ' (' → logprob: -10.502148628234863
    5. '("("' → logprob: -11.002148628234863
    6. '(p' → logprob: -11.127148628234863
    7. '(.' → logprob: -11.377148628234863
    8. '(
' → logprob: -11.502148628234863
    9. '(()' → logprob: -11.502148628234863
    10. '(

' → logprob: -11.627148628234863

Token 51: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.002707869280129671
    2. 'r' → logprob: -7.6277079582214355
    3. 'c' → logprob: -7.7527079582214355
    4. ',' → logprob: -8.002707481384277
    5. ' q' → logprob: -8.002707481384277
    6. 'p' → logprob: -8.127707481384277
    7. '```' → logprob: -8.377707481384277
    8. 'b' → logprob: -8.627707481384277
    9. 'i' → logprob: -9.627707481384277
    10. 'for' → logprob: -10.127707481384277

Token 52: '.sort' (ID: 19551)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6959666609764099
    2. '.sort' → logprob: -0.6959666609764099
    3. '[' → logprob: -6.195966720581055
    4. '.reverse' → logprob: -8.070966720581055
    5. '.q' → logprob: -8.945966720581055
    6. 'sort' → logprob: -9.820966720581055
    7. '.append' → logprob: -10.195966720581055
    8. '.pop' → logprob: -10.445966720581055
    9. '<|end|>' → logprob: -10.570966720581055
    10. ' .' → logprob: -10.820966720581055

Token 53: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0013786869822070003
    2. '(' → logprob: -6.626378536224365
    3. '(q' → logprob: -10.626379013061523
    4. '()`' → logprob: -11.876379013061523
    5. '()(' → logprob: -12.376379013061523
    6. '().' → logprob: -12.626379013061523
    7. '()

' → logprob: -12.876379013061523
    8. '())' → logprob: -13.001379013061523
    9. '()
' → logprob: -13.376379013061523
    10. '();' → logprob: -13.876379013061523

Token 54: 'tmp' (ID: 11669)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00018077615823131055
    2. '```' → logprob: -8.875181198120117
    3. 'c' → logprob: -10.625181198120117
    4. 'q' → logprob: -12.000181198120117
    5. ' r' → logprob: -12.875181198120117
    6. 'p' → logprob: -13.250181198120117
    7. 'b' → logprob: -13.250181198120117
    8. '``' → logprob: -13.875181198120117
    9. '`' → logprob: -14.375181198120117
    10. 'for' → logprob: -14.875181198120117

Token 55: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0330358743667603
    2. '_' → logprob: -1.1580358743667603
    3. '=' → logprob: -1.5330358743667603
    4. '[' → logprob: -2.6580357551574707
    5. '.' → logprob: -4.033035755157471
    6. ',' → logprob: -5.408035755157471
    7. 's' → logprob: -5.783035755157471
    8. '[:]' → logprob: -5.908035755157471
    9. '(' → logprob: -6.033035755157471
    10. ' ' → logprob: -6.283035755157471

Token 56: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.44852423667907715
    2. '=' → logprob: -1.0735242366790771
    3. '_' → logprob: -4.573524475097656
    4. '[' → logprob: -5.573524475097656
    5. ',' → logprob: -6.073524475097656
    6. 's' → logprob: -6.823524475097656
    7. '.' → logprob: -7.573524475097656
    8. '1' → logprob: -7.823524475097656
    9. '=[]' → logprob: -8.698524475097656
    10. '[:]' → logprob: -9.323524475097656

Token 57: ' []
' (ID: 8911)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.3918300867080688
    2. '0' → logprob: -2.2668299674987793
    3. '[p' → logprob: -2.2668299674987793
    4. ' p' → logprob: -2.3918299674987793
    5. 'b' → logprob: -2.6418299674987793
    6. '[]' → logprob: -2.6418299674987793
    7. 'a' → logprob: -3.0168299674987793
    8. '[a' → logprob: -3.2668299674987793
    9. ' ' → logprob: -3.3918299674987793
    10. ' [' → logprob: -3.6418299674987793

Token 58: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0544414147734642
    2. 'i' → logprob: -3.429441452026367
    3. 'tmp' → logprob: -4.054441452026367
    4. 'idx' → logprob: -6.679441452026367
    5. ' for' → logprob: -7.054441452026367
    6. 't' → logprob: -8.429441452026367
    7. 'p' → logprob: -8.804441452026367
    8. 'j' → logprob: -8.929441452026367
    9. '[' → logprob: -9.554441452026367
    10. 'q' → logprob: -10.054441452026367

Token 59: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3047649562358856
    2. 'i' → logprob: -1.554764986038208
    3. ' p' → logprob: -4.304764747619629
    4. 'pi' → logprob: -5.054764747619629
    5. ' pi' → logprob: -5.054764747619629
    6. 'p' → logprob: -5.554764747619629
    7. '_' → logprob: -5.554764747619629
    8. ' x' → logprob: -6.054764747619629
    9. ' _' → logprob: -6.179764747619629
    10. ' pp' → logprob: -6.554764747619629

Token 60: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.39410126209259033
    2. 'in' → logprob: -1.2691012620925903
    3. ' ' → logprob: -3.144101142883301
    4. 'n' → logprob: -7.644101142883301
    5. '  ' → logprob: -8.1441011428833
    6. '	in' → logprob: -8.5191011428833
    7. ',' → logprob: -9.1441011428833
    8. '_' → logprob: -9.5191011428833
    9. ' ,' → logprob: -9.5191011428833
    10. ' n' → logprob: -9.7691011428833

Token 61: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.18560607731342316
    2. ' range' → logprob: -2.060606002807617
    3. 'p' → logprob: -3.310606002807617
    4. 'r' → logprob: -5.685606002807617
    5. ' p' → logprob: -6.810606002807617
    6. 'q' → logprob: -7.810606002807617
    7. 'a' → logprob: -8.060606002807617
    8. ' r' → logprob: -8.935606002807617
    9. 'b' → logprob: -9.560606002807617
    10. 'c' → logprob: -10.060606002807617

Token 62: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.2664056122303009
    2. '(b' → logprob: -1.8914055824279785
    3. '(c' → logprob: -3.1414055824279785
    4. '(' → logprob: -4.5164055824279785
    5. '(x' → logprob: -4.5164055824279785
    6. '(y' → logprob: -4.7664055824279785
    7. '(len' → logprob: -4.8914055824279785
    8. '(n' → logprob: -7.1414055824279785
    9. '(q' → logprob: -7.2664055824279785
    10. '(p' → logprob: -8.766406059265137

Token 63: '-x' (ID: 12651)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003391117788851261
    2. '+' → logprob: -5.878391265869141
    3. '-' → logprob: -8.37839126586914
    4. ' ):' → logprob: -8.50339126586914
    5. ')' → logprob: -9.50339126586914
    6. '):
' → logprob: -10.37839126586914
    7. ',' → logprob: -11.12839126586914
    8. ':' → logprob: -11.25339126586914
    9. ' +' → logprob: -11.87839126586914
    10. ' -' → logprob: -12.62839126586914

Token 64: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.026832900941371918
    2. '+' → logprob: -4.1518330574035645
    3. ',' → logprob: -4.9018330574035645
    4. ')' → logprob: -6.2768330574035645
    5. ':' → logprob: -7.6518330574035645
    6. '-' → logprob: -7.7768330574035645
    7. ' ):' → logprob: -8.151832580566406
    8. '):
' → logprob: -9.276832580566406
    9. '1' → logprob: -10.151832580566406
    10. ' +' → logprob: -10.776832580566406

Token 65: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2293640673160553
    2. ' a' → logprob: -1.604364037513733
    3. ' ' → logprob: -6.604363918304443
    4. 'b' → logprob: -7.229363918304443
    5. ' -' → logprob: -7.479363918304443
    6. '-' → logprob: -7.854363918304443
    7. '0' → logprob: -8.229364395141602
    8. ' b' → logprob: -8.604364395141602
    9. '-a' → logprob: -8.604364395141602
    10. 'c' → logprob: -9.229364395141602

Token 66: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0840662270784378
    2. '-b' → logprob: -3.084066152572632
    3. '-' → logprob: -3.959066152572632
    4. '+b' → logprob: -4.834066390991211
    5. '+' → logprob: -5.459066390991211
    6. '):
' → logprob: -6.709066390991211
    7. '-c' → logprob: -7.459066390991211
    8. ' -' → logprob: -7.584066390991211
    9. ',' → logprob: -7.709066390991211
    10. ')' → logprob: -8.334066390991211

Token 67: '   ' (ID: 271)
  Prédit: ' tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.3847748041152954
    2. '	tmp' → logprob: -1.6347748041152954
    3. '   ' → logprob: -2.509774684906006
    4. ' ' → logprob: -3.509774684906006
    5. 'tmp' → logprob: -4.759774684906006
    6. '<|end|>' → logprob: -6.259774684906006
    7. ' p' → logprob: -7.634774684906006
    8. '\t' → logprob: -8.509775161743164
    9. '	t' → logprob: -8.759775161743164
    10. '[tmp' → logprob: -8.759775161743164

Token 68: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' (adapté à ' tmp') → logprob: -0.22508278489112854
    2. '   ' → logprob: -2.2250828742980957
    3. ' tmp' → logprob: -2.6000828742980957
    4. ' ' → logprob: -5.100082874298096
    5. 'for' → logprob: -5.475082874298096
    6. '  ' → logprob: -6.600082874298096
    7. 'if' → logprob: -6.600082874298096
    8. '	tmp' → logprob: -6.725082874298096
    9. ' for' → logprob: -6.850082874298096
    10. 'b' → logprob: -7.475082874298096

Token 69: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009143244242295623
    2. '.append' → logprob: -7.125914096832275
    3. '.' → logprob: -9.625914573669434
    4. 'append' → logprob: -11.625914573669434
    5. '```' → logprob: -12.125914573669434
    6. ' ' → logprob: -12.250914573669434
    7. '=' → logprob: -12.500914573669434
    8. '[' → logprob: -13.563414573669434
    9. ' =' → logprob: -13.563414573669434
    10. '   ' → logprob: -13.625914573669434

Token 70: '.append' (ID: 3709)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.043100472539663315
    2. '.append' → logprob: -3.168100357055664
    3. '.extend' → logprob: -9.668100357055664
    4. ' .' → logprob: -11.043100357055664
    5. '.=' → logprob: -12.043100357055664
    6. '.app' → logprob: -12.418100357055664
    7. '.ap' → logprob: -13.293100357055664
    8. 'append' → logprob: -13.543100357055664
    9. '=' → logprob: -13.543100357055664
    10. '.p' → logprob: -13.793100357055664

Token 71: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.1536770761013031
    2. '(q' → logprob: -2.028676986694336
    3. '(' → logprob: -4.653676986694336
    4. '(r' → logprob: -7.153676986694336
    5. 'p' → logprob: -8.778676986694336
    6. '((' → logprob: -8.903676986694336
    7. 'q' → logprob: -9.153676986694336
    8. '(i' → logprob: -10.403676986694336
    9. '([' → logprob: -10.653676986694336
    10. '(len' → logprob: -10.653676986694336

Token 72: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0017676468705758452
    2. '[' → logprob: -6.376767635345459
    3. ')' → logprob: -11.501768112182617
    4. '[q' → logprob: -11.501768112182617
    5. 'i' → logprob: -11.751768112182617
    6. '[-' → logprob: -11.876768112182617
    7. '[
' → logprob: -11.876768112182617
    8. '[b' → logprob: -12.751768112182617
    9. '[p' → logprob: -12.876768112182617
    10. '[a' → logprob: -12.876768112182617

Token 73: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.21341624855995178
    2. ']' → logprob: -1.8384162187576294
    3. ')' → logprob: -4.08841609954834
    4. ' ])' → logprob: -5.08841609954834
    5. '+' → logprob: -5.96341609954834
    6. ']>' → logprob: -6.96341609954834
    7. ']+' → logprob: -6.96341609954834
    8. ' ]' → logprob: -7.21341609954834
    9. '-' → logprob: -7.33841609954834
    10. '>' → logprob: -7.46341609954834

Token 74: 'for' (ID: 1938)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 75: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.15233707427978516
    2. 'i' → logprob: -2.152337074279785
    3. ' j' → logprob: -4.777337074279785
    4. ' range' → logprob: -4.902337074279785
    5. 'range' → logprob: -5.402337074279785
    6. ' in' → logprob: -6.027337074279785
    7. 'j' → logprob: -7.027337074279785
    8. ' ' → logprob: -7.527337074279785
    9. 'in' → logprob: -8.777337074279785
    10. ' b' → logprob: -9.152337074279785

Token 76: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00978406984359026
    2. 'in' → logprob: -4.63478422164917
    3. 'range' → logprob: -12.134783744812012
    4. ' ' → logprob: -12.884783744812012
    5. '(' → logprob: -13.259783744812012
    6. 'b' → logprob: -13.384783744812012
    7. 'a' → logprob: -13.634783744812012
    8. 'n' → logprob: -13.759783744812012
    9. '_' → logprob: -13.884783744812012
    10. ' ' → logprob: -14.009783744812012

Token 77: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2842872142791748
    2. 'range' → logprob: -1.4092872142791748
    3. 'b' → logprob: -6.534287452697754
    4. ' b' → logprob: -6.909287452697754
    5. '(range' → logprob: -7.909287452697754
    6. '(b' → logprob: -8.909287452697754
    7. 'c' → logprob: -9.284287452697754
    8. ' c' → logprob: -10.409287452697754
    9. '(c' → logprob: -10.909287452697754
    10. ' ' → logprob: -11.659287452697754

Token 78: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.024280032142996788
    2. '(c' → logprob: -4.274280071258545
    3. '(a' → logprob: -5.024280071258545
    4. '(x' → logprob: -6.649280071258545
    5. '(' → logprob: -7.149280071258545
    6. '(y' → logprob: -7.399280071258545
    7. 'b' → logprob: -8.149279594421387
    8. '(q' → logprob: -8.149279594421387
    9. '0' → logprob: -10.149279594421387
    10. ' (' → logprob: -10.274279594421387

Token 79: '-y' (ID: 18102)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4501957297325134
    2. '-y' → logprob: -1.5751957893371582
    3. ' -' → logprob: -2.200195789337158
    4. '-c' → logprob: -3.200195789337158
    5. '-x' → logprob: -6.575195789337158
    6. '-q' → logprob: -6.825195789337158
    7. '-a' → logprob: -8.2001953125
    8. 'y' → logprob: -8.3251953125
    9. ',' → logprob: -8.3251953125
    10. '-z' → logprob: -8.9501953125

Token 80: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00030388421146199107
    2. ' ,' → logprob: -8.375304222106934
    3. ',b' → logprob: -9.625304222106934
    4. ')' → logprob: -13.000304222106934
    5. 'b' → logprob: -13.375304222106934
    6. ' ' → logprob: -14.125304222106934
    7. ',
' → logprob: -14.625304222106934
    8. '),' → logprob: -15.125304222106934
    9. ' b' → logprob: -15.250304222106934
    10. ',y' → logprob: -15.500304222106934

Token 81: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.04858816787600517
    2. ' b' → logprob: -3.048588275909424
    3. ' ' → logprob: -14.173587799072266
    4. '	b' → logprob: -17.048587799072266
    5. '   ' → logprob: -17.173587799072266
    6. '>b' → logprob: -17.298587799072266
    7. ')b' → logprob: -17.798587799072266
    8. '  ' → logprob: -17.923587799072266
    9. 'c' → logprob: -17.923587799072266
    10. '<|end|>' → logprob: -18.173587799072266

Token 82: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4356768727302551
    2. '):
' → logprob: -1.0606768131256104
    3. ')' → logprob: -5.0606770515441895
    4. '):
' → logprob: -8.185676574707031
    5. ':' → logprob: -8.685676574707031
    6. '   ' → logprob: -9.435676574707031
    7. ',' → logprob: -10.310676574707031
    8. ':
' → logprob: -10.935676574707031
    9. '):

' → logprob: -11.310676574707031
    10. ' ):' → logprob: -12.185676574707031

Token 83: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08026724308729172
    2. 'tmp' → logprob: -2.9552671909332275
    3. ' tmp' → logprob: -3.8302671909332275
    4. '	tmp' → logprob: -6.705267429351807
    5. ' q' → logprob: -6.830267429351807
    6. 'q' → logprob: -7.705267429351807
    7. ' ' → logprob: -8.330266952514648
    8. '  ' → logprob: -8.955266952514648
    9. '	q' → logprob: -9.455266952514648
    10. '```' → logprob: -9.705266952514648

Token 84: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' (adapté à ' tmp') → logprob: -0.07358832657337189
    2. ' tmp' → logprob: -3.0735883712768555
    3. 'q' → logprob: -3.8235883712768555
    4. ' q' → logprob: -6.0735883712768555
    5. '   ' → logprob: -8.948588371276855
    6. '	tmp' → logprob: -8.948588371276855
    7. ' ' → logprob: -9.073588371276855
    8. '
' → logprob: -10.948588371276855
    9. '/tmp' → logprob: -11.323588371276855
    10. '(tmp' → logprob: -11.323588371276855

Token 85: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026379607617855072
    2. '.append' → logprob: -3.6513795852661133
    3. 'append' → logprob: -9.776379585266113
    4. '2' → logprob: -12.151379585266113
    5. '<|end|>' → logprob: -12.651379585266113
    6. '```' → logprob: -12.776379585266113
    7. '.setdefault' → logprob: -13.151379585266113
    8. '.' → logprob: -13.526379585266113
    9. '   ' → logprob: -13.526379585266113
    10. '<|end|>' → logprob: -14.026379585266113

Token 86: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.31628087162971497
    2. '.' → logprob: -1.3162808418273926
    3. '.extend' → logprob: -5.816280841827393
    4. 'append' → logprob: -11.19128131866455
    5. ' .' → logprob: -11.94128131866455
    6. '.app' → logprob: -12.44128131866455
    7. '[' → logprob: -13.69128131866455
    8. '.pop' → logprob: -13.69128131866455
    9. '.Append' → logprob: -13.69128131866455
    10. '.push' → logprob: -13.81628131866455

Token 87: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.00020747410599142313
    2. '(' → logprob: -8.875207901000977
    3. 'q' → logprob: -9.625207901000977
    4. ' (' → logprob: -13.750207901000977
    5. '(r' → logprob: -15.125207901000977
    6. '   ' → logprob: -17.000207901000977
    7. '	q' → logprob: -17.625207901000977
    8. '(
' → logprob: -17.625207901000977
    9. '((' → logprob: -17.750207901000977
    10. ' q' → logprob: -18.000207901000977

Token 88: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.45848218582978e-06
    2. '[' → logprob: -13.37500286102295
    3. ' [' → logprob: -15.50000286102295
    4. ')' → logprob: -16.125001907348633
    5. '   ' → logprob: -16.125001907348633
    6. '```' → logprob: -16.125001907348633
    7. 'i' → logprob: -16.625001907348633
    8. '[j' → logprob: -16.875001907348633
    9. '[I' → logprob: -17.250001907348633
    10. '[
' → logprob: -17.875001907348633

Token 89: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.02065342105925083
    2. ')' → logprob: -3.895653486251831
    3. ']' → logprob: -9.89565372467041
    4. '])
' → logprob: -10.27065372467041
    5. ' ])' → logprob: -11.89565372467041
    6. '))' → logprob: -12.14565372467041
    7. ')
' → logprob: -12.27065372467041
    8. ')]' → logprob: -12.64565372467041
    9. ')])' → logprob: -13.02065372467041
    10. ' )' → logprob: -13.89565372467041

Token 90: 'for' (ID: 1938)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7967567443847656
    2. 'tmp' → logprob: -0.9217567443847656
    3. 'c' → logprob: -2.0467567443847656
    4. 'print' → logprob: -4.671756744384766
    5. 'for' → logprob: -4.796756744384766
    6. '```' → logprob: -7.046756744384766
    7. 'p' → logprob: -7.921756744384766
    8. 't' → logprob: -8.046756744384766
    9. 's' → logprob: -8.296756744384766
    10. ')' → logprob: -8.421756744384766

Token 91: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.018287600949406624
    2. 'i' → logprob: -4.018287658691406
    3. '	i' → logprob: -10.143287658691406
    4. ' ' → logprob: -10.643287658691406
    5. ' j' → logprob: -11.143287658691406
    6. '_i' → logprob: -11.393287658691406
    7. ' c' → logprob: -11.518287658691406
    8. 'c' → logprob: -11.830787658691406
    9. '_' → logprob: -12.268287658691406
    10. ' ' → logprob: -12.330787658691406

Token 92: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3874322772026062
    2. 'in' → logprob: -1.137432336807251
    3. ' ' → logprob: -8.137432098388672
    4. 'range' → logprob: -8.887432098388672
    5. 'c' → logprob: -9.637432098388672
    6. '  ' → logprob: -11.012432098388672
    7. ' range' → logprob: -11.512432098388672
    8. 'n' → logprob: -11.512432098388672
    9. '_' → logprob: -12.137432098388672
    10. '   ' → logprob: -13.324932098388672

Token 93: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.22550709545612335
    2. ' range' → logprob: -1.600507140159607
    3. 'c' → logprob: -9.475506782531738
    4. 'r' → logprob: -11.475506782531738
    5. '(range' → logprob: -12.725506782531738
    6. '	range' → logprob: -13.600506782531738
    7. ' c' → logprob: -13.725506782531738
    8. ' r' → logprob: -14.225506782531738
    9. ' ' → logprob: -14.350506782531738
    10. '   ' → logprob: -16.100507736206055

Token 94: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.04755701869726181
    2. ' (' → logprob: -3.4225571155548096
    3. '(' → logprob: -4.9225568771362305
    4. ' c' → logprob: -5.0475568771362305
    5. 'range' → logprob: -10.29755687713623
    6. '(s' → logprob: -11.29755687713623
    7. '(a' → logprob: -11.29755687713623
    8. 'c' → logprob: -11.29755687713623
    9. ' range' → logprob: -11.42255687713623
    10. '(range' → logprob: -12.17255687713623

Token 95: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08860961347818375
    2. ' -' → logprob: -3.2136096954345703
    3. '-y' → logprob: -3.2136096954345703
    4. '-c' → logprob: -5.71360969543457
    5. '-z' → logprob: -7.58860969543457
    6. ',' → logprob: -8.58860969543457
    7. ' ' → logprob: -9.21360969543457
    8. '-b' → logprob: -9.46360969543457
    9. '-x' → logprob: -10.08860969543457
    10. 'y' → logprob: -10.58860969543457

Token 96: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.497151643037796
    2. 'tmp' → logprob: -1.6221516132354736
    3. ' tmp' → logprob: -1.9971516132354736
    4. '	tmp' → logprob: -2.8721516132354736
    5. 'r' → logprob: -7.247151851654053
    6. ' r' → logprob: -7.997151851654053
    7. '```' → logprob: -8.747151374816895
    8. '	r' → logprob: -8.872151374816895
    9. '    
' → logprob: -8.872151374816895
    10. ' ' → logprob: -9.122151374816895

Token 97: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' (adapté à ' tmp') → logprob: -0.020598065108060837
    2. ' tmp' → logprob: -4.0205979347229
    3. '   ' → logprob: -6.1455979347229
    4. 'r' → logprob: -8.395598411560059
    5. '	tmp' → logprob: -9.895598411560059
    6. ' r' → logprob: -11.395598411560059
    7. 'temp' → logprob: -12.395598411560059
    8. ' ' → logprob: -12.520598411560059
    9. '
' → logprob: -13.520598411560059
    10. '$tmp' → logprob: -13.895598411560059

Token 98: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. 'r' → logprob: -13.500003814697266
    3. '.append' → logprob: -14.000003814697266
    4. ' ' → logprob: -15.250003814697266
    5. 'tmp' → logprob: -15.375003814697266
    6. 'c' → logprob: -16.312503814697266
    7. '' → logprob: -16.500003814697266
    8. 'append' → logprob: -16.562503814697266
    9. '<|end|>' → logprob: -16.750003814697266
    10. '[' → logprob: -16.812503814697266

Token 99: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.17988772690296173
    2. '.' → logprob: -1.8048877716064453
    3. ' .' → logprob: -9.429887771606445
    4. '.pop' → logprob: -11.304887771606445
    5. '[' → logprob: -11.804887771606445
    6. '.push' → logprob: -11.804887771606445
    7. '.sort' → logprob: -11.804887771606445
    8. '.add' → logprob: -11.929887771606445
    9. '   ' → logprob: -12.179887771606445
    10. '.extend' → logprob: -12.554887771606445

Token 100: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.010215331800282001
    2. 'r' → logprob: -4.6352152824401855
    3. '(' → logprob: -7.7602152824401855
    4. '(
' → logprob: -10.760215759277344
    5. ' r' → logprob: -12.010215759277344
    6. ' (' → logprob: -12.760215759277344
    7. '	r' → logprob: -13.885215759277344
    8. '(int' → logprob: -14.510215759277344
    9. '((' → logprob: -14.635215759277344
    10. '(
' → logprob: -16.135215759277344

Token 101: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3902033970225602e-05
    2. '[' → logprob: -11.375014305114746
    3. ')' → logprob: -13.875014305114746
    4. '[I' → logprob: -14.375014305114746
    5. ' [' → logprob: -14.500014305114746
    6. '[c' → logprob: -16.87501335144043
    7. '[
' → logprob: -17.00001335144043
    8. '[j' → logprob: -17.50001335144043
    9. '[x' → logprob: -18.00001335144043
    10. '   ' → logprob: -18.12501335144043

Token 102: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018649426056072116
    2. ')
' → logprob: -9.250186920166016
    3. '))' → logprob: -9.875186920166016
    4. ' )' → logprob: -11.000186920166016
    5. '])' → logprob: -11.250186920166016
    6. ']' → logprob: -12.250186920166016
    7. ')`' → logprob: -14.125186920166016
    8. ')
' → logprob: -14.500186920166016
    9. ')))' → logprob: -14.750186920166016
    10. '[' → logprob: -15.000186920166016

Token 103: 'tmp' (ID: 11669)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3230738937854767
    2. 'tmp' → logprob: -2.1980738639831543
    3. '  
' → logprob: -3.3230738639831543
    4. 'print' → logprob: -3.5730738639831543
    5. '\n' → logprob: -3.8230738639831543
    6. ')' → logprob: -3.8230738639831543
    7. ' 
' → logprob: -4.198073863983154
    8. ')
' → logprob: -4.948073863983154
    9. 'sorted' → logprob: -5.198073863983154
    10. '' → logprob: -5.573073863983154

Token 104: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000432695698691532
    2. '2' → logprob: -7.75043249130249
    3. '_' → logprob: -15.125432968139648
    4. ' ' → logprob: -15.250432968139648
    5. ' =' → logprob: -15.937932968139648
    6. '_sum' → logprob: -16.06293296813965
    7. '[' → logprob: -16.31293296813965
    8. '```' → logprob: -16.56293296813965
    9. '_tmp' → logprob: -16.62543296813965
    10. '3' → logprob: -16.81293296813965

Token 105: '.sort' (ID: 19551)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 106: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00863016489893198
    2. '(' → logprob: -4.758630275726318
    3. ' ()' → logprob: -12.50862979888916
    4. '()`' → logprob: -12.50862979888916
    5. '();' → logprob: -13.50862979888916
    6. '()>' → logprob: -13.75862979888916
    7. '()<' → logprob: -14.25862979888916
    8. '().' → logprob: -14.38362979888916
    9. '()</' → logprob: -14.50862979888916
    10. '()
' → logprob: -14.75862979888916

Token 107: 's' (ID: 82)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00012558852904476225
    2. '[' → logprob: -10.250125885009766
    3. 'pr' → logprob: -10.375125885009766
    4. 'for' → logprob: -11.125125885009766
    5. '-' → logprob: -12.000125885009766
    6. '#' → logprob: -12.125125885009766
    7. ')' → logprob: -12.375125885009766
    8. '[
' → logprob: -12.500125885009766
    9. '```' → logprob: -12.625125885009766
    10. 'p' → logprob: -12.875125885009766

Token 108: ' =' (ID: 314)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.03240516036748886
    2. '=' → logprob: -3.657405138015747
    3. ' =' → logprob: -5.532405376434326
    4. 'u' → logprob: -7.032405376434326
    5. '=sum' → logprob: -7.032405376434326
    6. 'core' → logprob: -9.532404899597168
    7. '1' → logprob: -10.282404899597168
    8. '=len' → logprob: -10.407404899597168
    9. 'sum' → logprob: -10.782404899597168
    10. '_um' → logprob: -11.282404899597168

Token 109: ' ' (ID: 220)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.4268605709075928
    2. 'sum' → logprob: -1.6768605709075928
    3. ' tmp' → logprob: -2.1768605709075928
    4. '0' → logprob: -3.8018605709075928
    5. ' sum' → logprob: -3.8018605709075928
    6. ' ' → logprob: -6.801860809326172
    7. 'len' → logprob: -8.051860809326172
    8. '(tmp' → logprob: -8.301860809326172
    9. '[tmp' → logprob: -9.551860809326172
    10. '1' → logprob: -9.614360809326172

Token 110: '0' (ID: 15)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.13462428748607635
    2. 'tmp' → logprob: -2.5096242427825928
    3. '0' → logprob: -3.1346242427825928
    4. ' sum' → logprob: -7.259624481201172
    5. ' tmp' → logprob: -9.384624481201172
    6. 'len' → logprob: -9.384624481201172
    7. ' ' → logprob: -10.259624481201172
    8. '1' → logprob: -10.259624481201172
    9. '(sum' → logprob: -10.384624481201172
    10. 'max' → logprob: -10.884624481201172

Token 111: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04525654390454292
    2. '<|end|>' → logprob: -3.4202566146850586
    3. ' for' → logprob: -5.045256614685059
    4. '
' → logprob: -5.420256614685059
    5. '+' → logprob: -7.670256614685059
    6. '*' → logprob: -10.295256614685059
    7. 's' → logprob: -10.545256614685059
    8. '+
' → logprob: -10.670256614685059
    9. '<|end|>' → logprob: -10.795256614685059
    10. '\n' → logprob: -10.920256614685059

Token 112: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.309382373117842e-05
    2. ' for' → logprob: -11.625033378601074
    3. 'n' → logprob: -11.875033378601074
    4. 'i' → logprob: -12.500033378601074
    5. 's' → logprob: -12.625033378601074
    6. 'k' → logprob: -12.625033378601074
    7. 'print' → logprob: -13.250033378601074
    8. 'd' → logprob: -13.750033378601074
    9. 'm' → logprob: -14.000033378601074
    10. '```' → logprob: -14.250033378601074

Token 113: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6623565554618835
    2. ' i' → logprob: -0.7873565554618835
    3. ' val' → logprob: -5.037356376647949
    4. 'v' → logprob: -5.912356376647949
    5. 'val' → logprob: -6.037356376647949
    6. ' num' → logprob: -6.037356376647949
    7. ' t' → logprob: -6.162356376647949
    8. 'value' → logprob: -6.162356376647949
    9. ' value' → logprob: -6.287356376647949
    10. ' v' → logprob: -6.412356376647949

Token 114: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004587245639413595
    2. 'in' → logprob: -5.504587173461914
    3. ' ' → logprob: -7.629587173461914
    4. '  ' → logprob: -12.004587173461914
    5. 'range' → logprob: -12.254587173461914
    6. ' range' → logprob: -13.004587173461914
    7. '<|end|>' → logprob: -13.254587173461914
    8. 's' → logprob: -13.379587173461914
    9. ',' → logprob: -13.504587173461914
    10. ' i' → logprob: -14.129587173461914

Token 115: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.28826820850372314
    2. ' range' → logprob: -1.4132682085037231
    3. 'tmp' → logprob: -5.038268089294434
    4. ' tmp' → logprob: -7.663268089294434
    5. '   ' → logprob: -10.163268089294434
    6. '  ' → logprob: -10.288268089294434
    7. ' ' → logprob: -10.538268089294434
    8. '    ' → logprob: -12.038268089294434
    9. '	range' → logprob: -12.475768089294434
    10. '(range' → logprob: -12.538268089294434

Token 116: '(x' (ID: 4061)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.29346391558647156
    2. '(' → logprob: -2.168463945388794
    3. '(a' → logprob: -2.543463945388794
    4. '(x' → logprob: -2.918463945388794
    5. '(c' → logprob: -6.168463706970215
    6. '(-' → logprob: -6.793463706970215
    7. '(n' → logprob: -6.793463706970215
    8. '(k' → logprob: -7.043463706970215
    9. ' (' → logprob: -7.418463706970215
    10. '((' → logprob: -8.418463706970215

Token 117: '+y' (ID: 102753)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.0906734466552734
    2. '+y' → logprob: -1.2156734466552734
    3. '):' → logprob: -1.5906734466552734
    4. '+' → logprob: -2.0906734466552734
    5. '+x' → logprob: -4.215673446655273
    6. '+c' → logprob: -4.840673446655273
    7. ',' → logprob: -5.465673446655273
    8. '+b' → logprob: -5.715673446655273
    9. '+k' → logprob: -5.840673446655273
    10. '):
' → logprob: -6.340673446655273

Token 118: '):
' (ID: 1883)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6143827438354492
    2. '+' → logprob: -1.6143827438354492
    3. '):' → logprob: -2.239382743835449
    4. '+c' → logprob: -2.364382743835449
    5. ',' → logprob: -3.114382743835449
    6. '):
' → logprob: -4.989382743835449
    7. ' ):' → logprob: -6.114382743835449
    8. ' ,' → logprob: -6.364382743835449
    9. ')' → logprob: -6.739382743835449
    10. '+x' → logprob: -7.364382743835449

Token 119: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4123513996601105
    2. 's' → logprob: -1.287351369857788
    3. ' s' → logprob: -2.787351369857788
    4. '	s' → logprob: -9.162351608276367
    5. ' ' → logprob: -9.662351608276367
    6. '<|end|>' → logprob: -10.037351608276367
    7. '  ' → logprob: -10.287351608276367
    8. '    ' → logprob: -10.287351608276367
    9. '    
' → logprob: -11.162351608276367
    10. '       ' → logprob: -11.912351608276367

Token 120: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.17990057170391083
    2. ' s' → logprob: -1.8049005270004272
    3. '   ' → logprob: -9.179900169372559
    4. '
' → logprob: -11.179900169372559
    5. ' 
' → logprob: -11.429900169372559
    6. '	s' → logprob: -11.429900169372559
    7. ' ' → logprob: -11.929900169372559
    8. '```' → logprob: -12.429900169372559
    9. '`s' → logprob: -13.304900169372559
    10. 'if' → logprob: -13.929900169372559

Token 121: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.38718852400779724
    2. '+=' → logprob: -1.1371885538101196
    3. '+' → logprob: -8.512188911437988
    4. '=' → logprob: -10.012188911437988
    5. ' +' → logprob: -10.262188911437988
    6. ' =' → logprob: -10.762188911437988
    7. ']+=' → logprob: -11.887188911437988
    8. '+=(' → logprob: -12.887188911437988
    9. '+='' → logprob: -13.262188911437988
    10. '+="' → logprob: -13.762188911437988

Token 122: ' tmp' (ID: 8919)
  Prédit: ' tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.5759457349777222
    2. 'tmp' → logprob: -0.8259457349777222
    3. '	tmp' → logprob: -12.825945854187012
    4. '(tmp' → logprob: -13.075945854187012
    5. '/tmp' → logprob: -14.075945854187012
    6. '$tmp' → logprob: -15.825945854187012
    7. '_tmp' → logprob: -15.950945854187012
    8. '[tmp' → logprob: -16.200944900512695
    9. ' ' → logprob: -16.450944900512695
    10. 'Tmp' → logprob: -17.075944900512695

Token 123: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.5
    3. '```' → logprob: -17.125
    4. 's' → logprob: -18.875
    5. '' → logprob: -19.25
    6. ' ' → logprob: -19.25
    7. '`' → logprob: -19.5
    8. '[i' → logprob: -19.9375
    9. '１' → logprob: -20.1875
    10. '_' → logprob: -20.375

Token 124: '[-' (ID: 17503)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.026422565802931786
    2. '[' → logprob: -3.6514225006103516
    3. '[s' → logprob: -9.526422500610352
    4. '[x' → logprob: -10.776422500610352
    5. ' [' → logprob: -11.401422500610352
    6. '[
' → logprob: -11.526422500610352
    7. '```' → logprob: -13.651422500610352
    8. '[-' → logprob: -14.026422500610352
    9. '\[' → logprob: -14.151422500610352
    10. '   ' → logprob: -14.401422500610352

Token 125: '(' (ID: 7)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.09645771980285645
    2. '1' → logprob: -3.0964577198028564
    3. '(' → logprob: -3.3464577198028564
    4. 'i' → logprob: -4.471457481384277
    5. '(x' → logprob: -9.721457481384277
    6. ' (' → logprob: -10.596457481384277
    7. '{i' → logprob: -11.721457481384277
    8. ' i' → logprob: -12.971457481384277
    9. '[i' → logprob: -13.221457481384277
    10. ',i' → logprob: -13.721457481384277

Token 126: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.001438684994354844
    2. '(i' → logprob: -6.751438617706299
    3. '1' → logprob: -8.751439094543457
    4. ' i' → logprob: -9.376439094543457
    5. '(' → logprob: -11.001439094543457
    6. ' (' → logprob: -12.001439094543457
    7. '{i' → logprob: -13.876439094543457
    8. '   ' → logprob: -14.376439094543457
    9. ' ' → logprob: -14.876439094543457
    10. '(x' → logprob: -15.751439094543457

Token 127: '+' (ID: 10)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00046165118692442775
    2. ' ' → logprob: -8.00046157836914
    3. '+' → logprob: -9.25046157836914
    4. '2' → logprob: -10.75046157836914
    5. ')' → logprob: -12.62546157836914
    6. ')-' → logprob: -13.50046157836914
    7. '-' → logprob: -13.75046157836914
    8. '```' → logprob: -13.75046157836914
    9. ' -' → logprob: -14.25046157836914
    10. ' +' → logprob: -14.75046157836914

Token 128: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.625004768371582
    3. '2' → logprob: -14.375004768371582
    4. ')]' → logprob: -15.000004768371582
    5. ')' → logprob: -15.125004768371582
    6. '```' → logprob: -16.2500057220459
    7. '
' → logprob: -16.7500057220459
    8. '   ' → logprob: -17.0000057220459
    9. '`' → logprob: -18.0625057220459
    10. 's' → logprob: -18.4375057220459

Token 129: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.000634639582131058
    2. ']' → logprob: -7.500634670257568
    3. ')' → logprob: -10.25063419342041
    4. ')]
' → logprob: -10.75063419342041
    5. ' )' → logprob: -11.00063419342041
    6. ' ]' → logprob: -12.87563419342041
    7. ')])' → logprob: -13.87563419342041
    8. '1' → logprob: -14.00063419342041
    9. ')]

' → logprob: -14.62563419342041
    10. ' ' → logprob: -14.87563419342041

Token 130: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0004243587900418788
    2. ' print' → logprob: -7.875424385070801
    3. '
' → logprob: -10.1254243850708
    4. ' 
' → logprob: -12.8754243850708
    5. '  
' → logprob: -14.7504243850708
    6. '
' → logprob: -15.1254243850708
    7. '```' → logprob: -15.7504243850708
    8. '\' → logprob: -16.000423431396484
    9. 's' → logprob: -16.000423431396484
    10. ')' → logprob: -16.625423431396484

Token 131: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.029851730912923813
    2. '(s' → logprob: -3.5298516750335693
    3. 's' → logprob: -10.279851913452148
    4. '(
' → logprob: -10.404851913452148
    5. '()' → logprob: -10.654851913452148
    6. ' (' → logprob: -12.154851913452148
    7. '('' → logprob: -12.904851913452148
    8. '((' → logprob: -13.154851913452148
    9. '(`' → logprob: -13.904851913452148
    10. '(

' → logprob: -13.904851913452148

Token 132: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ' )' → logprob: -14.625000953674316
    3. '))' → logprob: -15.625000953674316
    4. ')`' → logprob: -17.375
    5. ')
' → logprob: -17.625
    6. '')' → logprob: -19.5
    7. ')#' → logprob: -19.75
    8. '`)' → logprob: -19.875
    9. '+' → logprob: -20.25
    10. '）' → logprob: -20.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 130
Tokens correctement prédits (1ère position, stricte): 54
Tokens correctement prédits (1ère position, avec adaptation): 58
Tokens correctement prédits (top 10): 107
Précision stricte (1ère position): 41.54%
Précision adaptée (1ère position): 44.62%
Précision (top 10): 82.31%
================================================================================
