================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:47:58
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Je vais mettre n comme ça, mais on pourrait demander aussi en argument
n = int(input())  # n: le nombre d'éléments
v = list(map(int, input().split()))  # je préfère 'map' ici, c'est plus rapide je pense

v = sorted(v)  # pourquoi pas utiliser sorted plutôt que sort(), c'est plus propre

for i in range(1, n):  # commence à 1 c'est ce qu'ils font d'habitude, bon...
    # retirer les 2 premiers (pfff, on fait comme ça)
    a = v[0]
    b = v[1]
    # faire leur moyenne
    mean = (a + b) / 2
    # enlever les éléments
    del v[0]  # hop!
    del v[0]  # hop! (attention à l'index)
    v.append(mean)  # on ajoute à la fin
    v = sorted(v)  # tant pis si c'est pas super optimisé, je trie à chaque fois

print(v[0])  # c'est censé être le dernier ? Bon, on affiche le premier, ça marche ici je crois
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Je' (ID: 4678)
  → Token d'amorce (pas de prédiction)

Token 2: ' vais' (ID: 42975)
  → Token d'amorce (pas de prédiction)

Token 3: ' mettre' (ID: 25339)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1939842849969864
    2. '_' → logprob: -2.568984270095825
    3. ' continuer' → logprob: -2.818984270095825
    4. ' coder' → logprob: -4.318984508514404
    5. '```' → logprob: -5.318984508514404
    6. ' écrire' → logprob: -5.693984508514404
    7. ' faire' → logprob: -5.943984508514404
    8. ' créer' → logprob: -6.318984508514404
    9. ' _' → logprob: -6.568984508514404
    10. ' code' → logprob: -6.693984508514404

Token 4: ' n' (ID: 297)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18372392654418945
    2. '```' → logprob: -2.9337239265441895
    3. ' un' → logprob: -3.6837239265441895
    4. '_' → logprob: -4.3087239265441895
    5. ' à' → logprob: -4.4337239265441895
    6. '  ' → logprob: -4.5587239265441895
    7. 'à' → logprob: -4.6837239265441895
    8. '#' → logprob: -5.0587239265441895
    9. 'un' → logprob: -5.3087239265441895
    10. ' ' → logprob: -5.6837239265441895

Token 5: ' comme' (ID: 7971)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4443155825138092
    2. ' =' → logprob: -1.8193155527114868
    3. '=' → logprob: -2.4443156719207764
    4. ' ' → logprob: -3.0693156719207764
    5. '```' → logprob: -4.444315433502197
    6. 'e' → logprob: -4.944315433502197
    7. '   ' → logprob: -4.944315433502197
    8. 'b' → logprob: -5.194315433502197
    9. 'space' → logprob: -5.319315433502197
    10. 'm' → logprob: -5.694315433502197

Token 6: ' ça' (ID: 13590)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.8300861120224
    2. ' variable' → logprob: -1.9550861120224
    3. ' un' → logprob: -2.0800862312316895
    4. ' nombre' → logprob: -2.8300862312316895
    5. 'une' → logprob: -2.8300862312316895
    6. 'nombre' → logprob: -3.4550862312316895
    7. ' une' → logprob: -3.4550862312316895
    8. ' la' → logprob: -3.4550862312316895
    9. ' le' → logprob: -3.5800862312316895
    10. ' param' → logprob: -3.5800862312316895

Token 7: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8766168355941772
    2. '```' → logprob: -1.8766168355941772
    3. '.' → logprob: -2.126616954803467
    4. 'n' → logprob: -2.751616954803467
    5. ' =' → logprob: -2.751616954803467
    6. '_' → logprob: -2.876616954803467
    7. ',' → logprob: -3.501616954803467
    8. '  
' → logprob: -4.001616954803467
    9. '\' → logprob: -4.126616954803467
    10. '`' → logprob: -4.126616954803467

Token 8: ' mais' (ID: 2899)
  Prédit: ' ça'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ça' → logprob: -1.5825258493423462
    2. ' ' → logprob: -1.9575258493423462
    3. ' n' → logprob: -2.3325257301330566
    4. 'n' → logprob: -2.7075257301330566
    5. ' un' → logprob: -2.9575257301330566
    6. ' c' → logprob: -2.9575257301330566
    7. 'ça' → logprob: -3.2075257301330566
    8. '#' → logprob: -3.5825257301330566
    9. ' je' → logprob: -3.8325257301330566
    10. ' mais' → logprob: -3.8325257301330566

Token 9: ' on' (ID: 402)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.8800030946731567
    2. '```' → logprob: -2.255002975463867
    3. ' je' → logprob: -2.505002975463867
    4. ' ' → logprob: -2.505002975463867
    5. ' ' → logprob: -3.005002975463867
    6. 'cela' → logprob: -3.005002975463867
    7. 'vous' → logprob: -3.005002975463867
    8. ' c' → logprob: -3.005002975463867
    9. ' ça' → logprob: -3.255002975463867
    10. 'ça' → logprob: -3.255002975463867

Token 10: ' pourrait' (ID: 39622)
  Prédit: ' peux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' peux' → logprob: -0.651914656162262
    2. ' ne' → logprob: -2.401914596557617
    3. '_' → logprob: -2.776914596557617
    4. ' ' → logprob: -3.026914596557617
    5. 'pe' → logprob: -3.276914596557617
    6. '```' → logprob: -3.401914596557617
    7. 'pour' → logprob: -3.526914596557617
    8. 'n' → logprob: -3.651914596557617
    9. 's' → logprob: -3.776914596557617
    10. ' pourra' → logprob: -4.151914596557617

Token 11: ' demander' (ID: 60771)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.694152295589447
    2. 'égal' → logprob: -1.4441523551940918
    3. 'mettre' → logprob: -2.069152355194092
    4. ' mettre' → logprob: -3.319152355194092
    5. ' aussi' → logprob: -3.319152355194092
    6. ' faire' → logprob: -4.694152355194092
    7. 'l' → logprob: -4.819152355194092
    8. 'faire' → logprob: -4.944152355194092
    9. '```' → logprob: -5.069152355194092
    10. ' utiliser' → logprob: -5.319152355194092

Token 12: ' aussi' (ID: 9894)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.7721765041351318
    2. ' n' → logprob: -2.647176504135132
    3. 'à' → logprob: -2.897176504135132
    4. ' ' → logprob: -2.897176504135132
    5. '_' → logprob: -3.022176504135132
    6. ' un' → logprob: -3.147176504135132
    7. 'l' → logprob: -3.147176504135132
    8. 'a' → logprob: -3.522176504135132
    9. ' a' → logprob: -3.522176504135132
    10. '```' → logprob: -3.522176504135132

Token 13: ' en' (ID: 469)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.17233586311340332
    2. ' à' → logprob: -2.9223358631134033
    3. ' un' → logprob: -3.6723358631134033
    4. ' ' → logprob: -3.7973358631134033
    5. ' n' → logprob: -4.922335624694824
    6. '```' → logprob: -4.922335624694824
    7. ' _' → logprob: -5.297335624694824
    8. ' au' → logprob: -5.422335624694824
    9. ' l' → logprob: -5.547335624694824
    10. ' une' → logprob: -5.672335624694824

Token 14: ' argument' (ID: 10383)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -0.42914482951164246
    2. '```' → logprob: -2.804144859313965
    3. 'param' → logprob: -2.929144859313965
    4. 'input' → logprob: -2.929144859313965
    5. 'fonction' → logprob: -3.054144859313965
    6. ' entrée' → logprob: -3.554144859313965
    7. 'entr' → logprob: -3.804144859313965
    8. ' input' → logprob: -4.179144859313965
    9. '#' → logprob: -4.679144859313965
    10. 's' → logprob: -5.554144859313965

Token 15: '
' (ID: 198)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.2531657218933105
    2. '_' → logprob: -1.3781657218933105
    3. ',' → logprob: -1.5031657218933105
    4. ' ' → logprob: -2.7531657218933105
    5. '`' → logprob: -3.2531657218933105
    6. 'n' → logprob: -3.5031657218933105
    7. '.' → logprob: -3.5031657218933105
    8. ':' → logprob: -3.6281657218933105
    9. 's' → logprob: -4.2531657218933105
    10. '\' → logprob: -5.1281657218933105

Token 16: 'n' (ID: 77)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1820807456970215
    2. '```' → logprob: -1.1820807456970215
    3. ':' → logprob: -1.9320807456970215
    4. '_' → logprob: -3.0570807456970215
    5. '`' → logprob: -3.3070807456970215
    6. 'n' → logprob: -3.3070807456970215
    7. '.' → logprob: -3.3070807456970215
    8. ' ' → logprob: -3.6820807456970215
    9. '\' → logprob: -4.1820807456970215
    10. ' :' → logprob: -4.3070807456970215

Token 17: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5602248907089233
    2. ' ' → logprob: -0.9352248907089233
    3. '=' → logprob: -3.435225009918213
    4. '_' → logprob: -6.560225009918213
    5. ',' → logprob: -6.810225009918213
    6. ')' → logprob: -7.310225009918213
    7. ' )' → logprob: -8.185224533081055
    8. '.' → logprob: -8.685224533081055
    9. ' ,' → logprob: -9.310224533081055
    10. 's' → logprob: -9.435224533081055

Token 18: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07274151593446732
    2. '10' → logprob: -2.9477415084838867
    3. '5' → logprob: -4.447741508483887
    4. ' int' → logprob: -5.572741508483887
    5. 'int' → logprob: -6.447741508483887
    6. '20' → logprob: -8.947741508483887
    7. '100' → logprob: -9.197741508483887
    8. '4' → logprob: -9.322741508483887
    9. '3' → logprob: -9.447741508483887
    10. '0' → logprob: -9.947741508483887

Token 19: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014930098317563534
    2. '(input' → logprob: -4.264930248260498
    3. '('' → logprob: -8.01492977142334
    4. ' (' → logprob: -8.13992977142334
    5. '()' → logprob: -9.51492977142334
    6. '("' → logprob: -11.01492977142334
    7. '(n' → logprob: -11.38992977142334
    8. '(
' → logprob: -11.38992977142334
    9. ' ' → logprob: -11.63992977142334
    10. 'input' → logprob: -12.38992977142334

Token 20: '())' (ID: 3516)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17115357518196106
    2. '()' → logprob: -2.1711535453796387
    3. '('' → logprob: -3.4211535453796387
    4. '())' → logprob: -5.421153545379639
    5. '("("' → logprob: -5.921153545379639
    6. '("' → logprob: -6.546153545379639
    7. '(""))' → logprob: -6.921153545379639
    8. '("")' → logprob: -7.171153545379639
    9. ')' → logprob: -8.921154022216797
    10. '(">' → logprob: -10.046154022216797

Token 21: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1644021272659302
    2. ')' → logprob: -1.6644021272659302
    3. 'n' → logprob: -2.1644020080566406
    4. '*' → logprob: -2.2894020080566406
    5. '#' → logprob: -2.5394020080566406
    6. '+' → logprob: -2.9144020080566406
    7. '<|end|>' → logprob: -3.5394020080566406
    8. ' 
' → logprob: -3.7894020080566406
    9. '%' → logprob: -4.039402008056641
    10. '
' → logprob: -4.289402008056641

Token 22: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.704028844833374
    2. '+' → logprob: -2.079028844833374
    3. '*' → logprob: -2.329028844833374
    4. '#' → logprob: -2.704028844833374
    5. '\n' → logprob: -3.329028844833374
    6. ')' → logprob: -3.454028844833374
    7. 'for' → logprob: -3.829028844833374
    8. 'n' → logprob: -3.829028844833374
    9. ',' → logprob: -4.079029083251953
    10. '**' → logprob: -4.329029083251953

Token 23: ' n' (ID: 297)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19385230541229248
    2. ' "' → logprob: -2.193852424621582
    3. '"' → logprob: -4.193852424621582
    4. '  ' → logprob: -5.068852424621582
    5. ' Entr' → logprob: -5.068852424621582
    6. ' '' → logprob: -5.568852424621582
    7. ''' → logprob: -5.818852424621582
    8. ' Le' → logprob: -5.943852424621582
    9. ' n' → logprob: -6.193852424621582
    10. ' saisir' → logprob: -6.193852424621582

Token 24: ':' (ID: 25)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 25: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.007990812882781029
    2. ' "' → logprob: -5.507990837097168
    3. '  ' → logprob: -6.507990837097168
    4. ' nombre' → logprob: -6.632990837097168
    5. 'nombre' → logprob: -8.757990837097168
    6. '<|end|>' → logprob: -9.007990837097168
    7. ' le' → logprob: -9.007990837097168
    8. ' ' → logprob: -9.132990837097168
    9. ' l' → logprob: -9.632990837097168
    10. ' '' → logprob: -9.757990837097168

Token 26: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.20276044309139252
    2. 'nombre' → logprob: -1.7027604579925537
    3. 'n' → logprob: -7.702760219573975
    4. ' ' → logprob: -8.452760696411133
    5. ' nombres' → logprob: -8.702760696411133
    6. 'Nombre' → logprob: -9.452760696411133
    7. 'é' → logprob: -10.077760696411133
    8. ' numéro' → logprob: -10.202760696411133
    9. 'nb' → logprob: -10.265260696411133
    10. ' code' → logprob: -10.390260696411133

Token 27: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.025850247591733932
    2. '<|end|>' → logprob: -3.900850296020508
    3. ' de' → logprob: -6.400850296020508
    4. ')' → logprob: -7.025850296020508
    5. ' )' → logprob: -7.775850296020508
    6. '<|end|>' → logprob: -7.900850296020508
    7. 's' → logprob: -8.025850296020508
    8. '  ' → logprob: -8.275850296020508
    9. '=' → logprob: -8.900850296020508
    10. '_' → logprob: -8.900850296020508

Token 28: ''' (ID: 6)
  Prédit: ' élèves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' élèves' → logprob: -1.5242482423782349
    2. ' éléments' → logprob: -1.8992482423782349
    3. ' él' → logprob: -2.0242481231689453
    4. ' ' → logprob: -2.1492481231689453
    5. 'élé' → logprob: -2.1492481231689453
    6. ' é' → logprob: -3.0242481231689453
    7. 'é' → logprob: -3.1492481231689453
    8. ''' → logprob: -3.2742481231689453
    9. '_' → logprob: -3.2742481231689453
    10. ' étudiants' → logprob: -4.399248123168945

Token 29: 'élé' (ID: 15228)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.5717018842697144
    2. 'élé' → logprob: -0.9467018842697144
    3. 'él' → logprob: -3.946702003479004
    4. 'én' → logprob: -4.821702003479004
    5. 'éc' → logprob: -5.821702003479004
    6. 'è' → logprob: -6.196702003479004
    7. 'év' → logprob: -6.571702003479004
    8. 'ét' → logprob: -6.821702003479004
    9. ' él' → logprob: -6.821702003479004
    10. 'en' → logprob: -6.946702003479004

Token 30: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.00032604875741526484
    2. 'v' → logprob: -8.625326156616211
    3. 'm' → logprob: -10.000326156616211
    4. 'ment' → logprob: -10.125326156616211
    5. 'phants' → logprob: -11.125326156616211
    6. '```' → logprob: -11.250326156616211
    7. 'ves' → logprob: -11.750326156616211
    8. 'éments' → logprob: -12.500326156616211
    9. '`' → logprob: -13.250326156616211
    10. '	' → logprob: -13.500326156616211

Token 31: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7232891917228699
    2. 's' → logprob: -1.3482892513275146
    3. ' 
' → logprob: -2.7232892513275146
    4. 'n' → logprob: -3.2232892513275146
    5. ' ' → logprob: -3.3482892513275146
    6. ')' → logprob: -3.7232892513275146
    7. '\n' → logprob: -4.3482890129089355
    8. '[' → logprob: -4.4732890129089355
    9. 'for' → logprob: -4.4732890129089355
    10. 'elements' → logprob: -4.5982890129089355

Token 32: 'v' (ID: 85)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.639565110206604
    2. 's' → logprob: -1.889565110206604
    3. ' ' → logprob: -2.0145649909973145
    4. '\n' → logprob: -2.1395649909973145
    5. '[' → logprob: -2.3895649909973145
    6. '\' → logprob: -2.5145649909973145
    7. ')' → logprob: -3.0145649909973145
    8. 'n' → logprob: -3.5145649909973145
    9. '\[' → logprob: -3.5145649909973145
    10. '#' → logprob: -4.0145649909973145

Token 33: ' =' (ID: 314)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9362179040908813
    2. 'al' → logprob: -1.1862179040908813
    3. 'ect' → logprob: -2.186217784881592
    4. ' =' → logprob: -2.811217784881592
    5. 'ale' → logprob: -2.936217784881592
    6. 'als' → logprob: -3.561217784881592
    7. 's' → logprob: -4.436217784881592
    8. 'ales' → logprob: -5.186217784881592
    9. '_' → logprob: -5.436217784881592
    10. 'e' → logprob: -5.561217784881592

Token 34: ' list' (ID: 1562)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.29939237236976624
    2. ' [' → logprob: -1.6743923425674438
    3. '[]' → logprob: -2.9243924617767334
    4. '[int' → logprob: -4.924392223358154
    5. '[' → logprob: -5.549392223358154
    6. 'list' → logprob: -5.549392223358154
    7. ' list' → logprob: -6.174392223358154
    8. '[input' → logprob: -9.049392700195312
    9. '[list' → logprob: -9.424392700195312
    10. '[n' → logprob: -9.549392700195312

Token 35: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.369500994682312
    2. '(map' → logprob: -1.244500994682312
    3. '(range' → logprob: -4.494501113891602
    4. '()' → logprob: -5.494501113891602
    5. '(int' → logprob: -5.744501113891602
    6. '(input' → logprob: -6.119501113891602
    7. '(eval' → logprob: -9.994501113891602
    8. '(
' → logprob: -10.994501113891602
    9. '(

' → logprob: -10.994501113891602
    10. 'map' → logprob: -11.244501113891602

Token 36: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.020814549177885056
    2. '(' → logprob: -3.8958146572113037
    3. 'int' → logprob: -8.645814895629883
    4. '(
' → logprob: -9.770814895629883
    5. '<int' → logprob: -11.395814895629883
    6. '(str' → logprob: -11.770814895629883
    7. ')' → logprob: -12.270814895629883
    8. '(input' → logprob: -12.270814895629883
    9. '=int' → logprob: -12.270814895629883
    10. '[int' → logprob: -13.520814895629883

Token 37: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.3200773000717163
    2. ',input' → logprob: -1.3200773000717163
    3. ',' → logprob: -5.070077419281006
    4. '(' → logprob: -7.820077419281006
    5. 'input' → logprob: -9.445076942443848
    6. ' ,' → logprob: -10.820076942443848
    7. ' (' → logprob: -12.945076942443848
    8. ',(' → logprob: -13.320076942443848
    9. ' input' → logprob: -13.445076942443848
    10. '=input' → logprob: -13.695076942443848

Token 38: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0036561263259500265
    2. ' input' → logprob: -5.628655910491943
    3. '(input' → logprob: -10.128656387329102
    4. ',input' → logprob: -11.253656387329102
    5. ' ' → logprob: -13.503656387329102
    6. '	input' → logprob: -14.878656387329102
    7. '<input' → logprob: -14.878656387329102
    8. '=input' → logprob: -15.253656387329102
    9. '   ' → logprob: -15.753656387329102
    10. ')' → logprob: -15.753656387329102

Token 39: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.933173426659778e-05
    2. '()' → logprob: -9.625069618225098
    3. '()))' → logprob: -13.375069618225098
    4. '(' → logprob: -14.375069618225098
    5. ' ().' → logprob: -14.500069618225098
    6. '())' → logprob: -15.625069618225098
    7. ')' → logprob: -16.50006866455078
    8. '()));' → logprob: -17.00006866455078
    9. '())))' → logprob: -17.00006866455078
    10. '))' → logprob: -17.12506866455078

Token 40: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0015233141602948308
    2. 'strip' → logprob: -6.501523494720459
    3. ' split' → logprob: -11.1265230178833
    4. 'rstrip' → logprob: -12.1265230178833
    5. '(split' → logprob: -14.3765230178833
    6. 'spl' → logprob: -15.8765230178833
    7. ')' → logprob: -16.251523971557617
    8. ' strip' → logprob: -17.376523971557617
    9. 's' → logprob: -18.251523971557617
    10. ' ' → logprob: -18.376523971557617

Token 41: '()))' (ID: 16829)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.19636410474777222
    2. '()))' → logprob: -1.946364164352417
    3. '()' → logprob: -3.571364164352417
    4. '(' → logprob: -5.321363925933838
    5. ')' → logprob: -6.196363925933838
    6. '())))' → logprob: -8.196364402770996
    7. '))' → logprob: -8.946364402770996
    8. '('' → logprob: -11.821364402770996
    9. '()));' → logprob: -12.071364402770996
    10. ')))' → logprob: -12.321364402770996

Token 42: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1264110654592514
    2. '[' → logprob: -3.001410961151123
    3. '.' → logprob: -3.876410961151123
    4. ' ' → logprob: -4.376410961151123
    5. '<|end|>' → logprob: -5.126410961151123
    6. '\' → logprob: -5.501410961151123
    7. '[:]' → logprob: -5.876410961151123
    8. '[:' → logprob: -6.001410961151123
    9. 'for' → logprob: -6.001410961151123
    10. 'v' → logprob: -6.251410961151123

Token 43: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.45168718695640564
    2. 'if' → logprob: -2.2016870975494385
    3. '#' → logprob: -2.3266870975494385
    4. '[' → logprob: -2.8266870975494385
    5. 'for' → logprob: -3.5766870975494385
    6. '
' → logprob: -4.076687335968018
    7. ' ' → logprob: -4.451687335968018
    8. 'v' → logprob: -4.826687335968018
    9. '[:' → logprob: -5.201687335968018
    10. 'print' → logprob: -5.451687335968018

Token 44: ' je' (ID: 1264)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.03627893328666687
    2. '(v' → logprob: -3.9112789630889893
    3. '(' → logprob: -4.53627872467041
    4. '()' → logprob: -5.41127872467041
    5. 'input' → logprob: -8.41127872467041
    6. ' v' → logprob: -9.03627872467041
    7. ')' → logprob: -10.41127872467041
    8. ')v' → logprob: -11.16127872467041
    9. '(input' → logprob: -11.78627872467041
    10. 's' → logprob: -12.41127872467041

Token 45: ' préfère' (ID: 141784)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9132749438285828
    2. 's' → logprob: -1.5382750034332275
    3. ' veux' → logprob: -2.2882750034332275
    4. 'veux' → logprob: -3.4132750034332275
    5. 'n' → logprob: -3.5382750034332275
    6. 'm' → logprob: -3.7882750034332275
    7. ' m' → logprob: -3.7882750034332275
    8. '_' → logprob: -3.9132750034332275
    9. ' vais' → logprob: -4.538274765014648
    10. 't' → logprob: -4.663274765014648

Token 46: ' '' (ID: 461)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.0521479845046997
    2. ' v' → logprob: -2.05214786529541
    3. 's' → logprob: -2.92714786529541
    4. ' garder' → logprob: -2.92714786529541
    5. 'tr' → logprob: -3.17714786529541
    6. ' ' → logprob: -3.30214786529541
    7. ' utiliser' → logprob: -3.42714786529541
    8. 'sorted' → logprob: -3.80214786529541
    9. 'mettre' → logprob: -3.80214786529541
    10. ' n' → logprob: -4.05214786529541

Token 47: 'map' (ID: 3726)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.015406439080834389
    2. 'n' → logprob: -6.015406608581543
    3. 'val' → logprob: -6.265406608581543
    4. 'l' → logprob: -6.390406608581543
    5. ''' → logprob: -6.390406608581543
    6. ' '' → logprob: -6.765406608581543
    7. ' v' → logprob: -6.890406608581543
    8. '_v' → logprob: -6.890406608581543
    9. 's' → logprob: -7.140406608581543
    10. 'range' → logprob: -7.390406608581543

Token 48: ''' (ID: 6)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10206303745508194
    2. ')' → logprob: -2.727062940597534
    3. '(int' → logprob: -3.977062940597534
    4. '(str' → logprob: -4.852063179016113
    5. '(lambda' → logprob: -5.852063179016113
    6. '(
' → logprob: -6.852063179016113
    7. '('' → logprob: -8.727063179016113
    8. '(

' → logprob: -8.977063179016113
    9. '(list' → logprob: -9.102063179016113
    10. '(print' → logprob: -9.477063179016113

Token 49: ' ici' (ID: 27994)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.030790477991104126
    2. ')' → logprob: -4.030790328979492
    3. 'v' → logprob: -5.405790328979492
    4. '[' → logprob: -6.155790328979492
    5. '(
' → logprob: -6.780790328979492
    6. '.' → logprob: -7.030790328979492
    7. '(n' → logprob: -7.030790328979492
    8. '#' → logprob: -7.655790328979492
    9. ',' → logprob: -7.780790328979492
    10. '()' → logprob: -8.155790328979492

Token 50: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7973591089248657
    2. 'v' → logprob: -1.9223591089248657
    3. '
' → logprob: -2.172358989715576
    4. '[' → logprob: -2.297358989715576
    5. '<|end|>' → logprob: -2.922358989715576
    6. 'n' → logprob: -3.922358989715576
    7. 's' → logprob: -4.172358989715576
    8. '.' → logprob: -4.422358989715576
    9. ')
' → logprob: -4.672358989715576
    10. ' 
' → logprob: -4.672358989715576

Token 51: ' c' (ID: 274)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21704305708408356
    2. ' n' → logprob: -2.717043161392212
    3. ' v' → logprob: -3.217043161392212
    4. ' reverse' → logprob: -3.842043161392212
    5. ' )' → logprob: -4.092042922973633
    6. 'v' → logprob: -4.092042922973633
    7. '()' → logprob: -4.717042922973633
    8. 'n' → logprob: -4.842042922973633
    9. 'reverse' → logprob: -5.467042922973633
    10. ' mais' → logprob: -5.592042922973633

Token 52: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.6776244640350342
    2. ''' → logprob: -1.5526244640350342
    3. 'a' → logprob: -1.6776244640350342
    4. ''#' → logprob: -3.927624464035034
    5. 'la' → logprob: -4.677624702453613
    6. 'n' → logprob: -4.802624702453613
    7. ''a' → logprob: -4.927624702453613
    8. ''s' → logprob: -4.927624702453613
    9. 'est' → logprob: -5.427624702453613
    10. 'c' → logprob: -5.552624702453613

Token 53: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.33985576033592224
    2. ' plus' → logprob: -1.3398557901382446
    3. ' pratique' → logprob: -4.464855670928955
    4. 'pr' → logprob: -5.464855670928955
    5. 'moins' → logprob: -6.464855670928955
    6. 'bien' → logprob: -6.589855670928955
    7. 'v' → logprob: -7.089855670928955
    8. ' rapide' → logprob: -7.214855670928955
    9. 'une' → logprob: -7.589855670928955
    10. ' un' → logprob: -7.964855670928955

Token 54: ' rapide' (ID: 44887)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -1.059560775756836
    2. 'rob' → logprob: -1.809560775756836
    3. 'pr' → logprob: -2.184560775756836
    4. 'compact' → logprob: -2.184560775756836
    5. 'simple' → logprob: -2.684560775756836
    6. 'rap' → logprob: -2.934560775756836
    7. 'clair' → logprob: -3.309560775756836
    8. 'python' → logprob: -3.434560775756836
    9. 'court' → logprob: -3.934560775756836
    10. 'lis' → logprob: -3.934560775756836

Token 55: ' je' (ID: 1264)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7932900786399841
    2. 'v' → logprob: -1.918290138244629
    3. '\n' → logprob: -2.168290138244629
    4. 'for' → logprob: -2.543290138244629
    5. ' 
' → logprob: -3.293290138244629
    6. 's' → logprob: -3.418290138244629
    7. 'n' → logprob: -3.543290138244629
    8. '#' → logprob: -3.668290138244629
    9. '' → logprob: -3.918290138244629
    10. '\' → logprob: -4.168290138244629

Token 56: ' pense' (ID: 29077)
  Prédit: ' trouve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trouve' → logprob: -0.04463727027177811
    2. ' pense' → logprob: -3.1696372032165527
    3. ' find' → logprob: -8.419637680053711
    4. ' crois' → logprob: -8.419637680053711
    5. ' suppose' → logprob: -8.419637680053711
    6. ' trouv' → logprob: -8.544637680053711
    7. 's' → logprob: -8.669637680053711
    8. 'find' → logprob: -9.169637680053711
    9. ' trouvé' → logprob: -9.419637680053711
    10. ' préfère' → logprob: -9.794637680053711

Token 57: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6035658717155457
    2. 'for' → logprob: -1.9785659313201904
    3. 'v' → logprob: -2.2285659313201904
    4. ' 
' → logprob: -2.7285659313201904
    5. '#' → logprob: -3.9785659313201904
    6. 's' → logprob: -4.103565692901611
    7. 'n' → logprob: -4.103565692901611
    8. ' for' → logprob: -4.228565692901611
    9. '\n' → logprob: -4.353565692901611
    10. '\' → logprob: -4.603565692901611

Token 58: 'v' (ID: 85)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5029520392417908
    2. 'v' → logprob: -1.3779520988464355
    3. '
' → logprob: -2.8779520988464355
    4. 'for' → logprob: -2.8779520988464355
    5. '#' → logprob: -4.6279520988464355
    6. 'sum' → logprob: -5.3779520988464355
    7. '\' → logprob: -6.5029520988464355
    8. '```' → logprob: -6.8779520988464355
    9. 'a' → logprob: -7.0029520988464355
    10. 'result' → logprob: -7.0029520988464355

Token 59: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7973368763923645
    2. '.' → logprob: -1.4223368167877197
    3. '[:]' → logprob: -1.9223368167877197
    4. '<|end|>' → logprob: -2.2973368167877197
    5. '.sort' → logprob: -3.5473368167877197
    6. '```' → logprob: -4.797337055206299
    7. '[n' → logprob: -5.547337055206299
    8. '[::-' → logprob: -5.672337055206299
    9. '[:' → logprob: -5.797337055206299
    10. '[v' → logprob: -6.422337055206299

Token 60: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.13360945880413055
    2. ' sorted' → logprob: -2.2586095333099365
    3. 'v' → logprob: -4.633609294891357
    4. ' v' → logprob: -5.508609294891357
    5. '[' → logprob: -5.633609294891357
    6. '[v' → logprob: -6.633609294891357
    7. 'list' → logprob: -7.258609294891357
    8. ' [' → logprob: -7.258609294891357
    9. ' list' → logprob: -8.508609771728516
    10. '[:' → logprob: -9.883609771728516

Token 61: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.014164102263748646
    2. '(' → logprob: -4.264163970947266
    3. '(n' → logprob: -15.639163970947266
    4. '((' → logprob: -16.014163970947266
    5. '(
' → logprob: -16.514163970947266
    6. ' (' → logprob: -16.514163970947266
    7. 'v' → logprob: -16.639163970947266
    8. '(list' → logprob: -17.014163970947266
    9. '(value' → logprob: -17.014163970947266
    10. '(x' → logprob: -18.139163970947266

Token 62: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002077932469546795
    2. ',' → logprob: -6.377078056335449
    3. '))' → logprob: -8.75207805633545
    4. '())' → logprob: -8.87707805633545
    5. '()' → logprob: -10.62707805633545
    6. ' )' → logprob: -11.12707805633545
    7. '(' → logprob: -11.50207805633545
    8. '(),' → logprob: -11.75207805633545
    9. '(reverse' → logprob: -12.37707805633545
    10. ' ,' → logprob: -13.37707805633545

Token 63: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0313747376203537
    2. '.' → logprob: -4.156374931335449
    3. '#' → logprob: -5.531374931335449
    4. '\' → logprob: -6.406374931335449
    5. '<|end|>' → logprob: -6.406374931335449
    6. '[n' → logprob: -6.906374931335449
    7. ')' → logprob: -7.031374931335449
    8. 'v' → logprob: -7.031374931335449
    9. ' ' → logprob: -7.281374931335449
    10. '```' → logprob: -7.656374931335449

Token 64: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9820765852928162
    2. '[' → logprob: -1.482076644897461
    3. 'print' → logprob: -2.357076644897461
    4. 'for' → logprob: -2.607076644897461
    5. '#' → logprob: -3.107076644897461
    6. ')' → logprob: -3.357076644897461
    7. 'v' → logprob: -3.482076644897461
    8. 'def' → logprob: -3.732076644897461
    9. '[n' → logprob: -3.982076644897461
    10. '

' → logprob: -4.232076644897461

Token 65: ' pourquoi' (ID: 39224)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8757201433181763
    2. ' v' → logprob: -0.8757201433181763
    3. 'v' → logprob: -2.5007200241088867
    4. ' sorted' → logprob: -3.8757200241088867
    5. ' for' → logprob: -4.625720024108887
    6. 'sorted' → logprob: -4.750720024108887
    7. 'print' → logprob: -5.000720024108887
    8. 'for' → logprob: -5.125720024108887
    9. ' n' → logprob: -5.250720024108887
    10. 'n' → logprob: -5.750720024108887

Token 66: ' pas' (ID: 2173)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7154980897903442
    2. '()' → logprob: -0.9654980897903442
    3. ',' → logprob: -2.4654979705810547
    4. ')' → logprob: -4.215497970581055
    5. 'v' → logprob: -4.340497970581055
    6. ' ' → logprob: -5.965497970581055
    7. '(v' → logprob: -6.215497970581055
    8. '?' → logprob: -6.340497970581055
    9. '#' → logprob: -6.465497970581055
    10. '.' → logprob: -6.465497970581055

Token 67: ' utiliser' (ID: 43227)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.1802617311477661
    2. '
' → logprob: -1.3052617311477661
    3. '[' → logprob: -1.9302617311477661
    4. '<|end|>' → logprob: -2.8052616119384766
    5. 's' → logprob: -2.9302616119384766
    6. '#' → logprob: -3.3052616119384766
    7. 'for' → logprob: -3.9302616119384766
    8. 'n' → logprob: -3.9302616119384766
    9. ' 
' → logprob: -4.680261611938477
    10. '' → logprob: -4.680261611938477

Token 68: ' sorted' (ID: 20099)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.32199060916900635
    2. '(' → logprob: -1.8219906091690063
    3. ' v' → logprob: -3.571990489959717
    4. ' la' → logprob: -3.696990489959717
    5. '(sorted' → logprob: -4.321990489959717
    6. '(v' → logprob: -5.196990489959717
    7. ' reverse' → logprob: -5.321990489959717
    8. '(reverse' → logprob: -5.446990489959717
    9. '```' → logprob: -5.571990489959717
    10. 'sorted' → logprob: -5.696990489959717

Token 69: ' plutôt' (ID: 40017)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003000696888193488
    2. '(
' → logprob: -8.625300407409668
    3. ',' → logprob: -10.250300407409668
    4. '[' → logprob: -10.375300407409668
    5. 'v' → logprob: -10.875300407409668
    6. ')' → logprob: -11.375300407409668
    7. '()' → logprob: -11.750300407409668
    8. '(v' → logprob: -12.125300407409668
    9. '(n' → logprob: -13.250300407409668
    10. '.' → logprob: -13.375300407409668

Token 70: ' que' (ID: 661)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13121852278709412
    2. '()' → logprob: -2.506218433380127
    3. 'v' → logprob: -4.381218433380127
    4. '(
' → logprob: -4.506218433380127
    5. 's' → logprob: -5.381218433380127
    6. ',' → logprob: -5.381218433380127
    7. ')' → logprob: -6.006218433380127
    8. '[' → logprob: -6.631218433380127
    9. '#' → logprob: -6.631218433380127
    10. 'def' → logprob: -7.756218433380127

Token 71: ' sort' (ID: 4506)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.5365561246871948
    2. 'v' → logprob: -0.9115561246871948
    3. '.sort' → logprob: -4.786556243896484
    4. '.v' → logprob: -5.786556243896484
    5. 'list' → logprob: -7.786556243896484
    6. 'sort' → logprob: -7.786556243896484
    7. '.' → logprob: -7.786556243896484
    8. ' sort' → logprob: -8.661556243896484
    9. ' list' → logprob: -8.786556243896484
    10. '	v' → logprob: -8.911556243896484

Token 72: '(),' (ID: 2547)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005787651054561138
    2. '(
' → logprob: -5.7557878494262695
    3. '()' → logprob: -6.2557878494262695
    4. '(v' → logprob: -7.8807878494262695
    5. 'v' → logprob: -9.13078784942627
    6. ',' → logprob: -9.88078784942627
    7. 's' → logprob: -10.25578784942627
    8. ')' → logprob: -10.63078784942627
    9. '(n' → logprob: -10.63078784942627
    10. '(
' → logprob: -11.38078784942627

Token 73: ' c' (ID: 274)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.6765948534011841
    2. ' car' → logprob: -1.426594853401184
    3. ')' → logprob: -2.9265947341918945
    4. ' n' → logprob: -3.1765947341918945
    5. ' parce' → logprob: -3.5515947341918945
    6. ',' → logprob: -3.6765947341918945
    7. ' reverse' → logprob: -3.8015947341918945
    8. 'v' → logprob: -3.8015947341918945
    9. '()' → logprob: -3.9265947341918945
    10. ' key' → logprob: -4.9265947341918945

Token 74: ''est' (ID: 6616)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.31621238589286804
    2. 'a' → logprob: -2.1912124156951904
    3. ''est' → logprob: -2.1912124156951904
    4. 'e' → logprob: -3.8162124156951904
    5. ''a' → logprob: -4.191212177276611
    6. 'ar' → logprob: -6.191212177276611
    7. 'ela' → logprob: -6.566212177276611
    8. ' '' → logprob: -7.066212177276611
    9. 'est' → logprob: -7.066212177276611
    10. 'omme' → logprob: -7.691212177276611

Token 75: ' plus' (ID: 2932)
  Prédit: ' plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.06511078029870987
    2. 'plus' → logprob: -3.315110683441162
    3. ' une' → logprob: -4.690110683441162
    4. ' un' → logprob: -5.190110683441162
    5. ' vrai' → logprob: -5.190110683441162
    6. ' ici' → logprob: -6.940110683441162
    7. ' ' → logprob: -7.065110683441162
    8. ' souvent' → logprob: -7.440110683441162
    9. ' more' → logprob: -7.565110683441162
    10. ' moins' → logprob: -7.815110683441162

Token 76: ' propre' (ID: 40682)
  Prédit: ' propre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' propre' → logprob: -0.21883288025856018
    2. 'pro' → logprob: -3.4688329696655273
    3. ' sûr' → logprob: -3.5938329696655273
    4. ' python' → logprob: -3.5938329696655273
    5. ' clair' → logprob: -3.7188329696655273
    6. 'python' → logprob: -3.8438329696655273
    7. ' lis' → logprob: -4.468832969665527
    8. ' safe' → logprob: -4.718832969665527
    9. ' pro' → logprob: -4.968832969665527
    10. 'safe' → logprob: -5.093832969665527

Token 77: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.41564086079597473
    2. '[' → logprob: -2.7906408309936523
    3. ')' → logprob: -2.9156408309936523
    4. 'v' → logprob: -3.0406408309936523
    5. ' 
' → logprob: -3.4156408309936523
    6. '<|end|>' → logprob: -3.5406408309936523
    7. ',' → logprob: -3.7906408309936523
    8. ' 

' → logprob: -4.290640830993652
    9. ' ' → logprob: -4.790640830993652
    10. '

' → logprob: -4.790640830993652

Token 78: 'for' (ID: 1938)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.1051552295684814
    2. 's' → logprob: -1.4801552295684814
    3. 'for' → logprob: -2.2301552295684814
    4. 'max' → logprob: -2.6051552295684814
    5. 'c' → logprob: -3.1051552295684814
    6. '#' → logprob: -3.7301552295684814
    7. 'median' → logprob: -3.7301552295684814
    8. 'sum' → logprob: -3.9801552295684814
    9. 'diff' → logprob: -4.230154991149902
    10. 'print' → logprob: -4.355154991149902

Token 79: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.08709702640771866
    2. ' ' → logprob: -2.587096929550171
    3. ' _' → logprob: -4.96209716796875
    4. '_' → logprob: -7.21209716796875
    5. ' e' → logprob: -9.33709716796875
    6. ' ' → logprob: -9.46209716796875
    7. 'i' → logprob: -9.46209716796875
    8. ' n' → logprob: -9.83709716796875
    9. ' x' → logprob: -9.83709716796875
    10. ' v' → logprob: -10.08709716796875

Token 80: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011048762127757072
    2. ' ' → logprob: -4.886048793792725
    3. 'in' → logprob: -5.761048793792725
    4. ' i' → logprob: -9.261048316955566
    5. '  ' → logprob: -10.011048316955566
    6. 'n' → logprob: -10.636048316955566
    7. '_' → logprob: -10.886048316955566
    8. ')' → logprob: -10.886048316955566
    9. ',' → logprob: -10.886048316955566
    10. ' n' → logprob: -11.761048316955566

Token 81: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.011199310421943665
    2. 'range' → logprob: -4.511199474334717
    3. ' ' → logprob: -9.136198997497559
    4. '	range' → logprob: -10.886198997497559
    5. ' v' → logprob: -11.386198997497559
    6. ' xrange' → logprob: -12.136198997497559
    7. ' ' → logprob: -13.011198997497559
    8. '(range' → logprob: -13.511198997497559
    9. '  ' → logprob: -13.511198997497559
    10. 'v' → logprob: -13.886198997497559

Token 82: '(' (ID: 7)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.25193852186203003
    2. '(' → logprob: -1.5019385814666748
    3. '(len' → logprob: -12.251938819885254
    4. '(
' → logprob: -12.751938819885254
    5. ' (' → logprob: -14.126938819885254
    6. '(

' → logprob: -14.626938819885254
    7. '()' → logprob: -15.626938819885254
    8. '((' → logprob: -16.626937866210938
    9. '(s' → logprob: -16.751937866210938
    10. 'n' → logprob: -17.126937866210938

Token 83: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0019031742122024298
    2. '1' → logprob: -6.376903057098389
    3. '(n' → logprob: -9.251903533935547
    4. ' n' → logprob: -9.751903533935547
    5. '(' → logprob: -10.501903533935547
    6. ')n' → logprob: -11.501903533935547
    7. 'len' → logprob: -12.501903533935547
    8. ')' → logprob: -13.001903533935547
    9. '0' → logprob: -13.501903533935547
    10. '2' → logprob: -14.251903533935547

Token 84: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0035387747921049595
    2. ',n' → logprob: -5.878538608551025
    3. ' ,' → logprob: -7.253538608551025
    4. '(n' → logprob: -11.128539085388184
    5. ',len' → logprob: -12.128539085388184
    6. ' n' → logprob: -13.003539085388184
    7. 'n' → logprob: -13.378539085388184
    8. '(' → logprob: -13.378539085388184
    9. '(len' → logprob: -15.003539085388184
    10. ' ' → logprob: -16.628538131713867

Token 85: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.25194650888442993
    2. ' n' → logprob: -1.5019464492797852
    3. 'len' → logprob: -11.876946449279785
    4. ' len' → logprob: -12.126946449279785
    5. ' ' → logprob: -13.376946449279785
    6. ')n' → logprob: -13.376946449279785
    7. ')' → logprob: -13.751946449279785
    8. '	n' → logprob: -14.876946449279785
    9. '(n' → logprob: -16.6269474029541
    10. ' 
' → logprob: -16.6269474029541

Token 86: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006125979125499725
    2. ' ):' → logprob: -7.500612735748291
    3. ')' → logprob: -9.875612258911133
    4. '):
' → logprob: -12.375612258911133
    5. ':' → logprob: -13.000612258911133
    6. '+' → logprob: -13.875612258911133
    7. '}:' → logprob: -15.625612258911133
    8. ',' → logprob: -15.750612258911133
    9. '():' → logprob: -15.750612258911133
    10. ' :' → logprob: -16.125612258911133

Token 87: ' ' (ID: 220)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.447852224111557
    2. ' ' → logprob: -1.5728522539138794
    3. ' 
' → logprob: -3.07285213470459
    4. ' :' → logprob: -3.19785213470459
    5. '   ' → logprob: -3.94785213470459
    6. ' if' → logprob: -4.44785213470459
    7. ' :
' → logprob: -4.82285213470459
    8. '    ' → logprob: -4.82285213470459
    9. ':
' → logprob: -5.07285213470459
    10. ' ' → logprob: -5.82285213470459

Token 88: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2929435968399048
    2. ' if' → logprob: -2.0429434776306152
    3. 'if' → logprob: -2.5429434776306152
    4. 'print' → logprob: -3.6679434776306152
    5. ' print' → logprob: -4.792943477630615
    6. ':' → logprob: -5.542943477630615
    7. '  ' → logprob: -6.042943477630615
    8. ' ' → logprob: -6.042943477630615
    9. 'v' → logprob: -6.792943477630615
    10. '    ' → logprob: -7.417943477630615

Token 89: ' commence' (ID: 44755)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.011613368988037
    2. '   ' → logprob: -1.011613368988037
    3. 'if' → logprob: -2.136613368988037
    4. ' if' → logprob: -2.761613368988037
    5. ':' → logprob: -2.886613368988037
    6. '  ' → logprob: -4.636613368988037
    7. '    ' → logprob: -5.136613368988037
    8. ')' → logprob: -5.136613368988037
    9. 'v' → logprob: -6.136613368988037
    10. 'print' → logprob: -6.386613368988037

Token 90: ' à' (ID: 1221)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.9299037456512451
    2. ':' → logprob: -1.3049037456512451
    3. ' à' → logprob: -1.9299037456512451
    4. ' ' → logprob: -2.179903745651245
    5. ',' → logprob: -3.929903745651245
    6. ')' → logprob: -3.929903745651245
    7. ' =' → logprob: -4.679903984069824
    8. '=' → logprob: -4.804903984069824
    9. 's' → logprob: -5.679903984069824
    10. '+' → logprob: -6.054903984069824

Token 91: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4266717731952667
    2. '0' → logprob: -1.4266717433929443
    3. ' ' → logprob: -2.8016717433929443
    4. 'i' → logprob: -3.8016717433929443
    5. 'n' → logprob: -4.676671981811523
    6. ' i' → logprob: -4.676671981811523
    7. ' n' → logprob: -5.551671981811523
    8. '2' → logprob: -7.426671981811523
    9. 'len' → logprob: -7.426671981811523
    10. 'range' → logprob: -8.926671981811523

Token 92: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14200080931186676
    2. '0' → logprob: -2.267000913619995
    3. 'n' → logprob: -3.767000913619995
    4. 'i' → logprob: -5.642000675201416
    5. 'len' → logprob: -6.267000675201416
    6. ' ' → logprob: -9.142001152038574
    7. '2' → logprob: -10.767001152038574
    8. '```' → logprob: -11.142001152038574
    9. 'range' → logprob: -11.142001152038574
    10. ' n' → logprob: -11.267001152038574

Token 93: ' c' (ID: 274)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012113779783248901
    2. ' :' → logprob: -4.637113571166992
    3. ':
' → logprob: -6.137113571166992
    4. ' :
' → logprob: -8.637113571166992
    5. ' if' → logprob: -12.387113571166992
    6. '   ' → logprob: -12.762113571166992
    7. ' ' → logprob: -12.887113571166992
    8. '```' → logprob: -14.012113571166992
    9. '{' → logprob: -14.387113571166992
    10. ' :
' → logprob: -14.387113571166992

Token 94: ''est' (ID: 6616)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.06487105041742325
    2. ':' → logprob: -3.939871072769165
    3. 'ont' → logprob: -4.689870834350586
    4. 'e' → logprob: -4.939870834350586
    5. 'el' → logprob: -5.814870834350586
    6. 'eux' → logprob: -5.939870834350586
    7. 'on' → logprob: -6.189870834350586
    8. 'omp' → logprob: -6.314870834350586
    9. '`' → logprob: -6.564870834350586
    10. ''est' → logprob: -6.564870834350586

Token 95: ' ce' (ID: 2357)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'par' → logprob: -1.487460732460022
    2. 'log' → logprob: -1.612460732460022
    3. ' parce' → logprob: -1.612460732460022
    4. ' logique' → logprob: -2.3624606132507324
    5. 'plus' → logprob: -3.2374606132507324
    6. ' parfait' → logprob: -3.3624606132507324
    7. 'pour' → logprob: -3.9874606132507324
    8. ' log' → logprob: -4.237460613250732
    9. 'bien' → logprob: -4.237460613250732
    10. 'que' → logprob: -4.487460613250732

Token 96: ' qu' (ID: 474)
  Prédit: 'qui'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qui' → logprob: -0.7827098965644836
    2. ' qui' → logprob: -1.2827098369598389
    3. ' que' → logprob: -1.5327098369598389
    4. 'que' → logprob: -3.282709836959839
    5. 'qu' → logprob: -5.032710075378418
    6. ' qu' → logprob: -5.407710075378418
    7. '```' → logprob: -7.907710075378418
    8. 'u' → logprob: -8.907710075378418
    9. ' ' → logprob: -9.407710075378418
    10. 's' → logprob: -9.907710075378418

Token 97: ''ils' (ID: 41108)
  Prédit: ''on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''on' → logprob: -0.21931013464927673
    2. ''il' → logprob: -1.9693101644515991
    3. ''' → logprob: -3.4693100452423096
    4. 'u' → logprob: -4.469310283660889
    5. 'e' → logprob: -5.219310283660889
    6. ' '' → logprob: -6.844310283660889
    7. ''est' → logprob: -6.969310283660889
    8. 'on' → logprob: -7.469310283660889
    9. ''y' → logprob: -7.469310283660889
    10. ''ont' → logprob: -7.469310283660889

Token 98: ' font' (ID: 5109)
  Prédit: ' veulent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' veulent' → logprob: -1.0728120803833008
    2. ' font' → logprob: -1.6978120803833008
    3. ' demand' → logprob: -2.322812080383301
    4. ' fais' → logprob: -2.572812080383301
    5. 'f' → logprob: -3.072812080383301
    6. ' demanda' → logprob: -3.072812080383301
    7. ' faut' → logprob: -3.322812080383301
    8. ' semblent' → logprob: -3.822812080383301
    9. 'avaient' → logprob: -3.947812080383301
    10. ' ont' → logprob: -4.197812080383301

Token 99: ' d' (ID: 272)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1440816968679428
    2. ' :' → logprob: -2.1440815925598145
    3. '   ' → logprob: -4.3940815925598145
    4. ' :
' → logprob: -6.5190815925598145
    5. ':
' → logprob: -6.7690815925598145
    6. ' if' → logprob: -7.3940815925598145
    7. '  ' → logprob: -7.8940815925598145
    8. '    ' → logprob: -8.269082069396973
    9. ' ' → logprob: -8.644082069396973
    10. ',' → logprob: -9.144082069396973

Token 100: ''habitude' (ID: 192765)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -7.85104202805087e-05
    2. ' ans' → logprob: -10.000078201293945
    3. 'e' → logprob: -11.000078201293945
    4. '_ans' → logprob: -12.000078201293945
    5. 'ANS' → logprob: -13.000078201293945
    6. 'u' → logprob: -13.750078201293945
    7. '```' → logprob: -13.875078201293945
    8. ''habitude' → logprob: -13.875078201293945
    9. 'Ans' → logprob: -14.000078201293945
    10. '(ans' → logprob: -14.500078201293945

Token 101: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13433939218521118
    2. ' :' → logprob: -2.2593393325805664
    3. '   ' → logprob: -4.384339332580566
    4. ' :
' → logprob: -5.884339332580566
    5. ':
' → logprob: -6.259339332580566
    6. ' ' → logprob: -6.884339332580566
    7. '    ' → logprob: -7.259339332580566
    8. ',' → logprob: -7.509339332580566
    9. ' 
' → logprob: -7.884339332580566
    10. '  ' → logprob: -8.384339332580566

Token 102: ' bon' (ID: 4846)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1867763251066208
    2. ' ' → logprob: -2.5617763996124268
    3. 'if' → logprob: -2.5617763996124268
    4. '   ' → logprob: -4.811776161193848
    5. '    ' → logprob: -6.436776161193848
    6. ' print' → logprob: -6.936776161193848
    7. 'v' → logprob: -7.061776161193848
    8. '  ' → logprob: -7.561776161193848
    9. 'print' → logprob: -7.561776161193848
    10. ' ' → logprob: -7.686776161193848

Token 103: '...
' (ID: 4908)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5720682144165039
    2. ':' → logprob: -0.9470682144165039
    3. ' :' → logprob: -4.197068214416504
    4. ' ' → logprob: -4.572068214416504
    5. ':
' → logprob: -4.572068214416504
    6. ' if' → logprob: -5.572068214416504
    7. ' :
' → logprob: -6.572068214416504
    8. '	if' → logprob: -6.822068214416504
    9. '  ' → logprob: -6.947068214416504
    10. '
' → logprob: -6.947068214416504

Token 104: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013845771551132202
    2. ' if' → logprob: -4.513845920562744
    3. '	if' → logprob: -7.138845920562744
    4. ' ' → logprob: -7.513845920562744
    5. '    ' → logprob: -8.263845443725586
    6. ':' → logprob: -8.263845443725586
    7. 'if' → logprob: -8.388845443725586
    8. ' print' → logprob: -8.763845443725586
    9. '    
' → logprob: -8.763845443725586
    10. '  ' → logprob: -9.013845443725586

Token 105: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4654959440231323
    2. 'if' → logprob: -1.0904959440231323
    3. 'print' → logprob: -4.090496063232422
    4. '   ' → logprob: -4.715496063232422
    5. ' print' → logprob: -5.715496063232422
    6. 'v' → logprob: -6.090496063232422
    7. ' ' → logprob: -6.215496063232422
    8. 'diff' → logprob: -7.215496063232422
    9. '    ' → logprob: -7.340496063232422
    10. '  ' → logprob: -7.965496063232422

Token 106: ' retirer' (ID: 136490)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.39771145582199097
    2. 'if' → logprob: -1.1477115154266357
    3. '   ' → logprob: -5.647711277008057
    4. 'v' → logprob: -6.397711277008057
    5. 'print' → logprob: -6.522711277008057
    6. ' v' → logprob: -7.022711277008057
    7. ' print' → logprob: -7.147711277008057
    8. 'diff' → logprob: -7.522711277008057
    9. ' pass' → logprob: -7.772711277008057
    10. ' ' → logprob: -7.897711277008057

Token 107: ' les' (ID: 1341)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.5270367860794067
    2. 'v' → logprob: -1.0270367860794067
    3. ' i' → logprob: -4.027036666870117
    4. 'i' → logprob: -4.902036666870117
    5. ' ' → logprob: -5.277036666870117
    6. '   ' → logprob: -5.527036666870117
    7. ' if' → logprob: -5.777036666870117
    8. 'if' → logprob: -6.527036666870117
    9. 's' → logprob: -6.652036666870117
    10. ')' → logprob: -6.902036666870117

Token 108: ' ' (ID: 220)
  Prédit: ' éléments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' éléments' → logprob: -0.9137219190597534
    2. 'élé' → logprob: -1.1637219190597534
    3. ' duplicates' → logprob: -2.163722038269043
    4. ' doubl' → logprob: -2.163722038269043
    5. 'duplicates' → logprob: -4.913722038269043
    6. ' elements' → logprob: -5.038722038269043
    7. ' i' → logprob: -5.163722038269043
    8. ' v' → logprob: -5.413722038269043
    9. ' ' → logprob: -5.538722038269043
    10. 'i' → logprob: -5.538722038269043

Token 109: '2' (ID: 17)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.15727242827415466
    2. 'v' → logprob: -2.7822723388671875
    3. 'duplicates' → logprob: -4.1572723388671875
    4. 'i' → logprob: -4.1572723388671875
    5. 'val' → logprob: -4.9072723388671875
    6. 'dou' → logprob: -4.9072723388671875
    7. 'd' → logprob: -5.1572723388671875
    8. 'elements' → logprob: -5.2822723388671875
    9. ' éléments' → logprob: -5.4072723388671875
    10. 'print' → logprob: -6.0322723388671875

Token 110: ' premiers' (ID: 59140)
  Prédit: ' premiers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' premiers' → logprob: -0.5402629971504211
    2. 'prem' → logprob: -1.2902629375457764
    3. ' premières' → logprob: -2.6652629375457764
    4. ' éléments' → logprob: -3.2902629375457764
    5. ' derniers' → logprob: -4.6652631759643555
    6. 'élé' → logprob: -5.2902631759643555
    7. 'i' → logprob: -5.5402631759643555
    8. 'v' → logprob: -5.7902631759643555
    9. ' first' → logprob: -6.2902631759643555
    10. ' ' → logprob: -6.4152631759643555

Token 111: ' (' (ID: 350)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.7011505365371704
    2. ' v' → logprob: -1.2011505365371704
    3. ' del' → logprob: -2.951150417327881
    4. ' if' → logprob: -3.451150417327881
    5. 'del' → logprob: -3.451150417327881
    6. ':' → logprob: -3.701150417327881
    7. '<|end|>' → logprob: -4.326150417327881
    8. ' ' → logprob: -4.451150417327881
    9. ',' → logprob: -5.576150417327881
    10. ' ,' → logprob: -5.701150417327881

Token 112: 'p' (ID: 79)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.24999049305915833
    2. ' v' → logprob: -2.124990463256836
    3. ')' → logprob: -2.624990463256836
    4. ' )' → logprob: -4.874990463256836
    5. '   ' → logprob: -4.999990463256836
    6. ' ' → logprob: -5.749990463256836
    7. '  ' → logprob: -6.124990463256836
    8. 'i' → logprob: -6.249990463256836
    9. ':' → logprob: -6.624990463256836
    10. 'del' → logprob: -6.999990463256836

Token 113: 'fff' (ID: 29318)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23468780517578125
    2. 'i' → logprob: -2.6096878051757812
    3. 'r' → logprob: -3.2346878051757812
    4. ']' → logprob: -3.8596878051757812
    5. 'ar' → logprob: -4.234687805175781
    6. '   ' → logprob: -4.484687805175781
    7. ' ' → logprob: -4.859687805175781
    8. 'v' → logprob: -5.234687805175781
    9. 'oints' → logprob: -5.359687805175781
    10. ':' → logprob: -5.734687805175781

Token 114: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9569749236106873
    2. ')' → logprob: -1.081974983215332
    3. 'v' → logprob: -2.081974983215332
    4. ' v' → logprob: -2.331974983215332
    5. ' )' → logprob: -3.706974983215332
    6. '    ' → logprob: -4.831974983215332
    7. ' ' → logprob: -5.081974983215332
    8. '  ' → logprob: -5.956974983215332
    9. ',' → logprob: -6.206974983215332
    10. ' i' → logprob: -6.331974983215332

Token 115: ' on' (ID: 402)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.7428582310676575
    2. ' v' → logprob: -1.7428581714630127
    3. '   ' → logprob: -2.1178581714630127
    4. ')' → logprob: -2.3678581714630127
    5. ' del' → logprob: -3.6178581714630127
    6. 'del' → logprob: -3.6178581714630127
    7. ' if' → logprob: -3.7428581714630127
    8. ' )' → logprob: -4.367858409881592
    9. ' i' → logprob: -4.617858409881592
    10. 'if' → logprob: -4.742858409881592

Token 116: ' fait' (ID: 7473)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.6178078651428223
    2. '   ' → logprob: -1.6178078651428223
    3. ' n' → logprob: -1.8678078651428223
    4. ')' → logprob: -2.3678078651428223
    5. 'n' → logprob: -2.8678078651428223
    6. ' v' → logprob: -2.9928078651428223
    7. ' ne' → logprob: -3.4928078651428223
    8. ' continue' → logprob: -3.7428078651428223
    9. ' les' → logprob: -3.9928078651428223
    10. ' ' → logprob: -3.9928078651428223

Token 117: ' comme' (ID: 7971)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.157250165939331
    2. '   ' → logprob: -1.157250165939331
    3. ')' → logprob: -2.407250165939331
    4. ' une' → logprob: -2.532250165939331
    5. ' i' → logprob: -2.907250165939331
    6. 'le' → logprob: -3.907250165939331
    7. '  ' → logprob: -4.03225040435791
    8. 'v' → logprob: -4.28225040435791
    9. ' )' → logprob: -4.28225040435791
    10. ' la' → logprob: -4.28225040435791

Token 118: ' ça' (ID: 13590)
  Prédit: ' ça'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ça' → logprob: -0.2606312930583954
    2. ' la' → logprob: -2.6356313228607178
    3. 'la' → logprob: -3.5106313228607178
    4. 'ça' → logprob: -4.510631084442139
    5. 'le' → logprob: -4.760631084442139
    6. ' une' → logprob: -4.885631084442139
    7. ' les' → logprob: -4.885631084442139
    8. ' if' → logprob: -5.135631084442139
    9. ' dans' → logprob: -5.260631084442139
    10. ' à' → logprob: -5.260631084442139

Token 119: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2215050756931305
    2. ')' → logprob: -2.2215051651000977
    3. ':' → logprob: -3.0965051651000977
    4. 'v' → logprob: -4.346505165100098
    5. ' )' → logprob: -4.971505165100098
    6. ',' → logprob: -5.346505165100098
    7. '    ' → logprob: -5.721505165100098
    8. ' ' → logprob: -5.846505165100098
    9. '(' → logprob: -5.971505165100098
    10. '()' → logprob: -5.971505165100098

Token 120: '   ' (ID: 271)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.36296212673187256
    2. '   ' → logprob: -1.4879621267318726
    3. ' v' → logprob: -3.112962245941162
    4. 'if' → logprob: -4.487962245941162
    5. '  ' → logprob: -5.737962245941162
    6. 'del' → logprob: -5.737962245941162
    7. '    ' → logprob: -5.987962245941162
    8. ' ' → logprob: -6.112962245941162
    9. ' if' → logprob: -6.112962245941162
    10. 'for' → logprob: -6.612962245941162

Token 121: ' a' (ID: 261)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.3353712260723114
    2. '   ' → logprob: -2.210371255874634
    3. 'del' → logprob: -2.460371255874634
    4. 'if' → logprob: -3.460371255874634
    5. ' del' → logprob: -3.710371255874634
    6. ' v' → logprob: -3.960371255874634
    7. ' if' → logprob: -4.835371017456055
    8. 'print' → logprob: -5.710371017456055
    9. 'for' → logprob: -6.835371017456055
    10. '  ' → logprob: -7.710371017456055

Token 122: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07976996153593063
    2. ',' → logprob: -2.7047698497772217
    3. '=' → logprob: -5.454770088195801
    4. 'b' → logprob: -6.454770088195801
    5. 'r' → logprob: -6.704770088195801
    6. ',b' → logprob: -7.204770088195801
    7. 'nd' → logprob: -8.2047700881958
    8. ' ,' → logprob: -8.4547700881958
    9. ',v' → logprob: -8.5797700881958
    10. 'rray' → logprob: -8.7047700881958

Token 123: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.023246178403496742
    2. ' v' → logprob: -3.7732462882995605
    3. '	v' → logprob: -14.398245811462402
    4. ' ' → logprob: -16.77324676513672
    5. ' ' → logprob: -16.77324676513672
    6. '   ' → logprob: -17.27324676513672
    7. '[v' → logprob: -17.39824676513672
    8. 'sorted' → logprob: -17.64824676513672
    9. '(v' → logprob: -17.89824676513672
    10. 's' → logprob: -18.02324676513672

Token 124: '[' (ID: 58)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.020042385905981064
    2. '[' → logprob: -4.145042419433594
    3. '[:' → logprob: -6.145042419433594
    4. '.pop' → logprob: -6.395042419433594
    5. '[:-' → logprob: -8.770042419433594
    6. '[:]' → logprob: -11.145042419433594
    7. 'pop' → logprob: -12.395042419433594
    8. 'i' → logprob: -12.395042419433594
    9. '1' → logprob: -13.395042419433594
    10. '[
' → logprob: -13.520042419433594

Token 125: '0' (ID: 15)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.22976289689540863
    2. '0' → logprob: -1.6047629117965698
    3. '1' → logprob: -5.854763031005859
    4. ' i' → logprob: -7.354763031005859
    5. '2' → logprob: -7.979763031005859
    6. ':' → logprob: -8.85476303100586
    7. ':i' → logprob: -8.97976303100586
    8. ' ' → logprob: -9.10476303100586
    9. ' :' → logprob: -10.22976303100586
    10. '-' → logprob: -10.22976303100586

Token 126: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009820547886192799
    2. ']+' → logprob: -4.759820461273193
    3. ']
' → logprob: -7.759820461273193
    4. '2' → logprob: -8.509820938110352
    5. 'i' → logprob: -9.009820938110352
    6. '+' → logprob: -9.009820938110352
    7. ' ]' → logprob: -9.134820938110352
    8. '+i' → logprob: -9.634820938110352
    9. ':' → logprob: -10.509820938110352
    10. ' +' → logprob: -10.884820938110352

Token 127: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8007699847221375
    2. '
' → logprob: -1.4257700443267822
    3. '<|end|>' → logprob: -2.0507700443267822
    4. 'v' → logprob: -2.6757700443267822
    5. ' +' → logprob: -3.1757700443267822
    6. 'a' → logprob: -4.175769805908203
    7. '   ' → logprob: -4.300769805908203
    8. ' ' → logprob: -4.550769805908203
    9. '+
' → logprob: -5.050769805908203
    10. ',' → logprob: -5.425769805908203

Token 128: ' b' (ID: 287)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.32089561223983765
    2. '   ' → logprob: -2.1958956718444824
    3. ' del' → logprob: -2.3208956718444824
    4. 'del' → logprob: -3.5708956718444824
    5. 'a' → logprob: -4.820895671844482
    6. ' v' → logprob: -5.070895671844482
    7. 'b' (adapté à ' b') → logprob: -5.195895671844482
    8. ' =' → logprob: -5.195895671844482
    9. '  ' → logprob: -5.695895671844482
    10. '
' → logprob: -6.195895671844482

Token 129: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5087506771087646
    2. ']' → logprob: -2.0087506771087646
    3. '=' → logprob: -2.1337506771087646
    4. ' ' → logprob: -3.0087506771087646
    5. ')' → logprob: -3.7587506771087646
    6. 'v' → logprob: -3.8837506771087646
    7. ' v' → logprob: -4.008750915527344
    8. ',' → logprob: -4.133750915527344
    9. '[' → logprob: -5.258750915527344
    10. '<|end|>' → logprob: -5.508750915527344

Token 130: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.14273013174533844
    2. 'v' → logprob: -2.017730236053467
    3. '	v' → logprob: -10.267729759216309
    4. ' ' → logprob: -10.892729759216309
    5. ' ' → logprob: -14.392729759216309
    6. ')v' → logprob: -15.517729759216309
    7. '    ' → logprob: -16.017730712890625
    8. '   ' → logprob: -16.017730712890625
    9. ',v' → logprob: -16.392730712890625
    10. '=v' → logprob: -16.517730712890625

Token 131: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.054919298738241196
    2. '[i' → logprob: -2.9299192428588867
    3. '.pop' → logprob: -10.679919242858887
    4. '[-' → logprob: -12.429919242858887
    5. ' [' → logprob: -13.179919242858887
    6. '1' → logprob: -13.429919242858887
    7. '[:' → logprob: -14.054919242858887
    8. '```' → logprob: -14.429919242858887
    9. '[a' → logprob: -14.679919242858887
    10. '[
' → logprob: -14.804919242858887

Token 132: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.88418151892256e-05
    2. '0' → logprob: -9.875059127807617
    3. ' ' → logprob: -12.375059127807617
    4. 'i' → logprob: -13.125059127807617
    5. '-' → logprob: -14.500059127807617
    6. ']' → logprob: -15.000059127807617
    7. '2' → logprob: -15.750059127807617
    8. '   ' → logprob: -16.625059127807617
    9. '```' → logprob: -16.750059127807617
    10. ')' → logprob: -17.250059127807617

Token 133: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0016176922945305705
    2. ']
' → logprob: -6.751617908477783
    3. ')' → logprob: -7.876617908477783
    4. ' ]' → logprob: -10.251617431640625
    5. '])' → logprob: -11.001617431640625
    6. ']

' → logprob: -12.251617431640625
    7. '<|end|>' → logprob: -12.751617431640625
    8. ')]' → logprob: -13.001617431640625
    9. ')
' → logprob: -13.251617431640625
    10. '+' → logprob: -14.001617431640625

Token 134: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1997218132019043
    2. '   ' → logprob: -2.3247218132019043
    3. '<|end|>' → logprob: -3.0747218132019043
    4. 'v' → logprob: -4.199721813201904
    5. '    
' → logprob: -4.949721813201904
    6. '  
' → logprob: -5.199721813201904
    7. ' 
' → logprob: -5.699721813201904
    8. '	
' → logprob: -6.824721813201904
    9. ')' → logprob: -6.824721813201904
    10. '   
' → logprob: -7.074721813201904

Token 135: ' #' (ID: 1069)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.12876452505588531
    2. '   ' → logprob: -2.6287646293640137
    3. '    
' → logprob: -4.503764629364014
    4. '
' → logprob: -4.628764629364014
    5. ' v' → logprob: -4.753764629364014
    6. '#' (adapté à ' #') → logprob: -5.503764629364014
    7. ' del' → logprob: -5.503764629364014
    8. 'c' → logprob: -5.628764629364014
    9. 'del' → logprob: -5.878764629364014
    10. '  
' → logprob: -7.378764629364014

Token 136: ' faire' (ID: 8119)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.8233358860015869
    2. ' del' → logprob: -1.198335886001587
    3. 'del' → logprob: -2.073335886001587
    4. ' v' → logprob: -2.323335886001587
    5. '   ' → logprob: -3.823335886001587
    6. '#' → logprob: -5.073335647583008
    7. ' new' → logprob: -6.573335647583008
    8. 'new' → logprob: -6.948335647583008
    9. ' #' → logprob: -7.198335647583008
    10. 'c' → logprob: -7.448335647583008

Token 137: ' leur' (ID: 9853)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.11804957687854767
    2. ' v' → logprob: -3.1180496215820312
    3. 'del' → logprob: -3.1180496215820312
    4. ' ' → logprob: -5.743049621582031
    5. '(v' → logprob: -5.743049621582031
    6. 'pop' → logprob: -6.118049621582031
    7. '(' → logprob: -6.618049621582031
    8. 'le' → logprob: -6.618049621582031
    9. '#' → logprob: -6.868049621582031
    10. 'c' → logprob: -6.868049621582031

Token 138: ' moyenne' (ID: 57480)
  Prédit: ' somme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' somme' → logprob: -0.6194913983345032
    2. 'sum' → logprob: -1.2444913387298584
    3. 's' → logprob: -1.8694913387298584
    4. ' sum' → logprob: -4.7444915771484375
    5. 'som' → logprob: -4.9944915771484375
    6. ' som' → logprob: -6.8694915771484375
    7. 'm' → logprob: -6.9944915771484375
    8. ' ' → logprob: -7.3694915771484375
    9. ' moyenne' → logprob: -8.119491577148438
    10. 'v' → logprob: -8.369491577148438

Token 139: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7579571008682251
    2. '
' → logprob: -1.757957100868225
    3. ' 
' → logprob: -2.6329569816589355
    4. '    
' → logprob: -2.8829569816589355
    5. ',' → logprob: -3.0079569816589355
    6. '  
' → logprob: -3.1329569816589355
    7. ' =' → logprob: -3.2579569816589355
    8. '<|end|>' → logprob: -3.7579569816589355
    9. ')' → logprob: -3.8829569816589355
    10. ' ' → logprob: -4.0079569816589355

Token 140: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2591685652732849
    2. '
' → logprob: -2.5091686248779297
    3. '    
' → logprob: -2.5091686248779297
    4. ' =' → logprob: -3.8841686248779297
    5. ' 
' → logprob: -4.50916862487793
    6. '  
' → logprob: -4.63416862487793
    7. '<|end|>' → logprob: -5.13416862487793
    8. '   
' → logprob: -5.50916862487793
    9. ',' → logprob: -5.63416862487793
    10. ')' → logprob: -5.88416862487793

Token 141: ' mean' (ID: 4774)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.40511491894721985
    2. ' m' → logprob: -1.5301148891448975
    3. ' c' → logprob: -2.7801148891448975
    4. 'c' → logprob: -3.0301148891448975
    5. ' moyenne' → logprob: -6.405115127563477
    6. 'mid' → logprob: -6.780115127563477
    7. 'avg' → logprob: -7.155115127563477
    8. ' mid' → logprob: -7.780115127563477
    9. 'mean' (adapté à ' mean') → logprob: -8.030115127563477
    10. ' v' → logprob: -8.405115127563477

Token 142: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4706539213657379
    2. '_' → logprob: -1.3456538915634155
    3. '=' → logprob: -2.220654010772705
    4. '(' → logprob: -5.970654010772705
    5. 's' → logprob: -6.720654010772705
    6. ')' → logprob: -7.095654010772705
    7. 'a' → logprob: -7.470654010772705
    8. 'e' → logprob: -7.595654010772705
    9. ' ' → logprob: -8.345653533935547
    10. '()' → logprob: -8.470653533935547

Token 143: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.4869958758354187
    2. ' (' → logprob: -0.9869958758354187
    3. '(v' → logprob: -4.361995697021484
    4. '(' → logprob: -10.236995697021484
    5. '(b' → logprob: -10.861995697021484
    6. '(A' → logprob: -11.361995697021484
    7. ' ' → logprob: -12.361995697021484
    8. 'a' → logprob: -12.736995697021484
    9. 'v' → logprob: -12.986995697021484
    10. '   ' → logprob: -13.111995697021484

Token 144: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0015023599844425917
    2. ' a' → logprob: -6.501502513885498
    3. '	a' → logprob: -18.501502990722656
    4. ' ' → logprob: -19.126502990722656
    5. '(a' → logprob: -20.626502990722656
    6. 'v' → logprob: -21.376502990722656
    7. ')a' → logprob: -21.751502990722656
    8. '   ' → logprob: -22.001502990722656
    9. '_a' → logprob: -22.001502990722656
    10. ' ' → logprob: -22.126502990722656

Token 145: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.04876233637332916
    2. '+' → logprob: -3.048762321472168
    3. '+b' → logprob: -8.673762321472168
    4. ' ' → logprob: -12.923762321472168
    5. ' ' → logprob: -13.673762321472168
    6. ' +
' → logprob: -16.423763275146484
    7. '+B' → logprob: -16.673763275146484
    8. ' plus' → logprob: -16.798763275146484
    9. '  ' → logprob: -18.298763275146484
    10. ' b' → logprob: -18.548763275146484

Token 146: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.31326213479042053
    2. 'b' → logprob: -1.3132621049880981
    3. ' ' → logprob: -15.688261985778809
    4. ' ' → logprob: -15.688261985778809
    5. '	b' → logprob: -17.188262939453125
    6. 'v' → logprob: -18.438262939453125
    7. '   ' → logprob: -18.563262939453125
    8. ' v' → logprob: -19.188262939453125
    9. '  ' → logprob: -20.188262939453125
    10. '    ' → logprob: -20.563262939453125

Token 147: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013392893597483635
    2. ')//' → logprob: -6.626339435577393
    3. ' )' → logprob: -11.376338958740234
    4. ')/' → logprob: -13.251338958740234
    5. '//' → logprob: -16.501338958740234
    6. '+' → logprob: -17.126338958740234
    7. ')>>' → logprob: -17.251338958740234
    8. ')#' → logprob: -17.376338958740234
    9. ')
' → logprob: -17.501338958740234
    10. ']' → logprob: -18.126338958740234

Token 148: ' /' (ID: 820)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.064460389316082
    2. '//' → logprob: -3.189460277557373
    3. ' /' → logprob: -4.064460277557373
    4. '/' → logprob: -5.564460277557373
    5. ')' → logprob: -9.564460754394531
    6. ' ' → logprob: -9.939460754394531
    7. ' ' → logprob: -10.064460754394531
    8. '2' → logprob: -11.064460754394531
    9. '#' → logprob: -11.189460754394531
    10. '"' → logprob: -11.939460754394531

Token 149: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006715728435665369
    2. ' ' → logprob: -5.006715774536133
    3. '```' → logprob: -15.506715774536133
    4. ' ' → logprob: -15.881715774536133
    5. '   ' → logprob: -17.256715774536133
    6. '  ' → logprob: -17.256715774536133
    7. '۲' → logprob: -17.694215774536133
    8. '２' → logprob: -17.944215774536133
    9. '.' → logprob: -18.444215774536133
    10. '3' → logprob: -18.944215774536133

Token 150: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002964935847558081
    2. ' ' → logprob: -8.125296592712402
    3. '```' → logprob: -16.125295639038086
    4. '   ' → logprob: -16.250295639038086
    5. '۲' → logprob: -17.125295639038086
    6. '２' → logprob: -17.125295639038086
    7. '  ' → logprob: -17.375295639038086
    8. ' ' → logprob: -17.937795639038086
    9. '`' → logprob: -19.062795639038086
    10. '.' → logprob: -19.250295639038086

Token 151: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02894190326333046
    2. '   ' → logprob: -3.9039418697357178
    3. '    
' → logprob: -5.903942108154297
    4. '<|end|>' → logprob: -6.153942108154297
    5. '  
' → logprob: -6.528942108154297
    6. ' 
' → logprob: -7.528942108154297
    7. '   
' → logprob: -7.903942108154297
    8. ')' → logprob: -8.153942108154297
    9. 'v' → logprob: -8.528942108154297
    10. ')
' → logprob: -8.903942108154297

Token 152: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021701245568692684
    2. 'v' → logprob: -7.127170085906982
    3. '
' → logprob: -7.127170085906982
    4. '    
' → logprob: -7.752170085906982
    5. '<|end|>' → logprob: -9.62717056274414
    6. '	v' → logprob: -11.50217056274414
    7. '  
' → logprob: -11.62717056274414
    8. ')' → logprob: -11.75217056274414
    9. '   ' → logprob: -11.87717056274414
    10. ' v' → logprob: -11.87717056274414

Token 153: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3185221552848816
    2. 'v' → logprob: -1.3185222148895264
    3. '    
' → logprob: -6.068521976470947
    4. ' v' → logprob: -6.693521976470947
    5. '
' → logprob: -7.943521976470947
    6. '#' (adapté à ' #') → logprob: -7.943521976470947
    7. '	v' → logprob: -7.943521976470947
    8. '  ' → logprob: -9.443522453308105
    9. '  
' → logprob: -9.443522453308105
    10. '   ' → logprob: -9.568522453308105

Token 154: ' enlever' (ID: 196982)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.08056093752384186
    2. '#' → logprob: -2.9555609226226807
    3. ' v' → logprob: -3.9555609226226807
    4. '   ' → logprob: -5.45556116104126
    5. 'del' → logprob: -7.08056116104126
    6. ' del' → logprob: -7.20556116104126
    7. ' #' → logprob: -8.330560684204102
    8. '	v' → logprob: -10.580560684204102
    9. '    
' → logprob: -11.080560684204102
    10. '  ' → logprob: -11.580560684204102

Token 155: ' les' (ID: 1341)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.1802162230014801
    2. 'v' → logprob: -1.8052161931991577
    3. ' ' → logprob: -8.930215835571289
    4. ' a' → logprob: -9.555215835571289
    5. ' b' → logprob: -9.930215835571289
    6. '	v' → logprob: -9.930215835571289
    7. 'b' → logprob: -10.430215835571289
    8. '(v' → logprob: -10.430215835571289
    9. ' del' → logprob: -10.430215835571289
    10. 'a' → logprob: -10.430215835571289

Token 156: ' éléments' (ID: 57375)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3032666444778442
    2. 'v' → logprob: -1.9282666444778442
    3. '[' → logprob: -1.9282666444778442
    4. ' ' → logprob: -1.9282666444778442
    5. ' v' → logprob: -2.4282665252685547
    6. ' deux' → logprob: -2.8032665252685547
    7. 'a' → logprob: -2.9282665252685547
    8. '2' → logprob: -3.0532665252685547
    9. ' a' → logprob: -4.178266525268555
    10. ' two' → logprob: -4.178266525268555

Token 157: '
' (ID: 198)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.12338396906852722
    2. ' v' → logprob: -2.6233839988708496
    3. ' del' → logprob: -3.9983839988708496
    4. '0' → logprob: -4.62338399887085
    5. '[' → logprob: -4.87338399887085
    6. ' ' → logprob: -5.74838399887085
    7. 'del' → logprob: -5.87338399887085
    8. '	v' → logprob: -7.49838399887085
    9. '[:' → logprob: -7.74838399887085
    10. '[v' → logprob: -8.123383522033691

Token 158: '   ' (ID: 271)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.39132097363471985
    2. ' del' → logprob: -2.1413209438323975
    3. '   ' → logprob: -2.5163209438323975
    4. ' v' → logprob: -2.7663209438323975
    5. 'del' → logprob: -3.3913209438323975
    6. '=' → logprob: -4.891321182250977
    7. ' =' → logprob: -5.141321182250977
    8. '0' → logprob: -5.266321182250977
    9. ' ' → logprob: -5.891321182250977
    10. '[' → logprob: -6.766321182250977

Token 159: ' del' (ID: 1083)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.867158055305481
    2. ' v' → logprob: -1.242158055305481
    3. ' del' → logprob: -1.492158055305481
    4. 'del' (adapté à ' del') → logprob: -3.3671579360961914
    5. '   ' → logprob: -3.4921579360961914
    6. '	v' → logprob: -6.992157936096191
    7. '	del' → logprob: -8.367157936096191
    8. ' ' → logprob: -10.617157936096191
    9. ',v' → logprob: -10.867157936096191
    10. '  ' → logprob: -11.117157936096191

Token 160: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.0021899950224906206
    2. 'v' → logprob: -6.127190113067627
    3. '(v' → logprob: -12.877189636230469
    4. '	v' → logprob: -13.877189636230469
    5. '[v' → logprob: -14.252189636230469
    6. ' ' → logprob: -15.127189636230469
    7. ')v' → logprob: -15.627189636230469
    8. '[' → logprob: -16.62718963623047
    9. '_v' → logprob: -17.12718963623047
    10. ' ' → logprob: -17.25218963623047

Token 161: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0028534941375255585
    2. '[:' → logprob: -5.8778533935546875
    3. '0' → logprob: -10.002853393554688
    4. '(' → logprob: -13.627853393554688
    5. ' [' → logprob: -14.877853393554688
    6. 'v' → logprob: -15.002853393554688
    7. '([' → logprob: -15.127853393554688
    8. '```' → logprob: -15.252853393554688
    9. '[:-' → logprob: -15.502853393554688
    10. '[
' → logprob: -15.502853393554688

Token 162: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007376969791948795
    2. '1' → logprob: -5.2573771476745605
    3. '2' → logprob: -6.5073771476745605
    4. ':' → logprob: -7.3823771476745605
    5. ' ' → logprob: -12.007376670837402
    6. '[' → logprob: -12.257376670837402
    7. '   ' → logprob: -12.382376670837402
    8. ' :' → logprob: -12.757376670837402
    9. '```' → logprob: -13.007376670837402
    10. '-' → logprob: -13.382376670837402

Token 163: ']' (ID: 60)
  Prédit: ']
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.2494831681251526
    2. ':' → logprob: -1.7494831085205078
    3. ']' → logprob: -3.124483108520508
    4. '2' → logprob: -5.999483108520508
    5. ']
' → logprob: -8.249483108520508
    6. ')
' → logprob: -9.249483108520508
    7. ':]
' → logprob: -10.124483108520508
    8. ']

' → logprob: -10.374483108520508
    9. '1' → logprob: -10.624483108520508
    10. '0' → logprob: -11.624483108520508

Token 164: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.44485437870025635
    2. '   ' → logprob: -1.9448543787002563
    3. '1' → logprob: -2.194854259490967
    4. '
' → logprob: -3.444854259490967
    5. 'del' → logprob: -3.444854259490967
    6. 'v' → logprob: -3.944854259490967
    7. ' del' → logprob: -4.819854259490967
    8. '<|end|>' → logprob: -5.319854259490967
    9. '0' → logprob: -5.944854259490967
    10. '<|end|>' → logprob: -6.069854259490967

Token 165: ' #' (ID: 1069)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3221497535705566
    2. 'del' → logprob: -1.3221497535705566
    3. ' del' → logprob: -1.9471497535705566
    4. 'v' → logprob: -2.1971497535705566
    5. '
' → logprob: -2.5721497535705566
    6. '   ' → logprob: -2.5721497535705566
    7. '1' → logprob: -3.1971497535705566
    8. '0' → logprob: -5.197149753570557
    9. '<|end|>' → logprob: -5.322149753570557
    10. ' v' → logprob: -5.447149753570557

Token 166: ' hop' (ID: 10284)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'del' → logprob: -0.002370893256738782
    2. '   ' → logprob: -6.502370834350586
    3. ' del' → logprob: -7.127370834350586
    4. '	del' → logprob: -10.127370834350586
    5. 'v' → logprob: -10.877370834350586
    6. '0' → logprob: -12.502370834350586
    7. '
' → logprob: -13.877370834350586
    8. '1' → logprob: -14.502370834350586
    9. '  ' → logprob: -15.002370834350586
    10. '2' → logprob: -15.502370834350586

Token 167: '!
' (ID: 4175)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'del' → logprob: -0.21113117039203644
    2. '   ' → logprob: -2.3361310958862305
    3. ' del' → logprob: -2.8361310958862305
    4. '
' → logprob: -3.7111310958862305
    5. '<|end|>' → logprob: -5.0861310958862305
    6. 'v' → logprob: -6.5861310958862305
    7. '	del' → logprob: -6.5861310958862305
    8. '<|end|>' → logprob: -7.4611310958862305
    9. '2' → logprob: -8.08613109588623
    10. ',' → logprob: -9.08613109588623

Token 168: '   ' (ID: 271)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'del' → logprob: -0.09596235305070877
    2. 'v' → logprob: -3.4709622859954834
    3. ' del' → logprob: -3.4709622859954834
    4. '   ' → logprob: -3.9709622859954834
    5. '<|end|>' → logprob: -5.2209625244140625
    6. '0' → logprob: -6.0959625244140625
    7. '	del' → logprob: -7.2209625244140625
    8. '1' → logprob: -7.3459625244140625
    9. ')' → logprob: -8.095962524414062
    10. '2' → logprob: -8.470962524414062

Token 169: ' del' (ID: 1083)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'del' (adapté à ' del') → logprob: -0.19852663576602936
    2. '0' → logprob: -2.323526620864868
    3. 'v' → logprob: -2.948526620864868
    4. ' del' → logprob: -3.823526620864868
    5. '   ' → logprob: -4.948526859283447
    6. '1' → logprob: -8.073526382446289
    7. '	del' → logprob: -8.698526382446289
    8. ' v' → logprob: -9.823526382446289
    9. ')' → logprob: -9.823526382446289
    10. '#' → logprob: -10.073526382446289

Token 170: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.12693022191524506
    2. ' v' → logprob: -2.1269302368164062
    3. '	v' → logprob: -13.751930236816406
    4. '[' → logprob: -14.501930236816406
    5. ')v' → logprob: -15.626930236816406
    6. '[v' → logprob: -16.001930236816406
    7. ' ' → logprob: -16.251930236816406
    8. '(v' → logprob: -16.751930236816406
    9. ' ' → logprob: -17.376930236816406
    10. '0' → logprob: -17.501930236816406

Token 171: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.5120287066092715e-05
    2. '0' → logprob: -10.375035285949707
    3. 'v' → logprob: -12.750035285949707
    4. '```' → logprob: -14.875035285949707
    5. ' [' → logprob: -15.500035285949707
    6. ' ' → logprob: -16.25003433227539
    7. '\[' → logprob: -16.50003433227539
    8. '   ' → logprob: -16.75003433227539
    9. '1' → logprob: -17.12503433227539
    10. '[
' → logprob: -18.00003433227539

Token 172: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.505351095460355e-05
    2. '1' → logprob: -9.500075340270996
    3. ' ' → logprob: -16.12507438659668
    4. '   ' → logprob: -17.00007438659668
    5. '۰' → logprob: -19.18757438659668
    6. '```' → logprob: -19.43757438659668
    7. '-' → logprob: -19.87507438659668
    8. '  ' → logprob: -20.06257438659668
    9. '[' → logprob: -20.18757438659668
    10. '`' → logprob: -20.56257438659668

Token 173: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012695759534835815
    2. ']' → logprob: -4.387695789337158
    3. '])' → logprob: -9.2626953125
    4. '#' → logprob: -9.5126953125
    5. ')
' → logprob: -12.1376953125
    6. '）' → logprob: -12.7626953125
    7. ' )' → logprob: -13.1376953125
    8. ')]' → logprob: -13.3876953125
    9. ')#' → logprob: -13.6376953125
    10. ')

' → logprob: -14.0126953125

Token 174: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005517853889614344
    2. 'v' → logprob: -5.255517959594727
    3. '	v' → logprob: -8.880517959594727
    4. ' v' → logprob: -9.380517959594727
    5. '    
' → logprob: -10.005517959594727
    6. '
' → logprob: -12.255517959594727
    7. '   ' → logprob: -12.505517959594727
    8. '	
' → logprob: -14.005517959594727
    9. ' 
' → logprob: -14.005517959594727
    10. ',' → logprob: -14.130517959594727

Token 175: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.062186259776353836
    2. 'v' → logprob: -2.8121862411499023
    3. ' v' → logprob: -9.437186241149902
    4. '	v' → logprob: -9.437186241149902
    5. '#' → logprob: -10.187186241149902
    6. '    
' → logprob: -11.562186241149902
    7. '  ' → logprob: -12.562186241149902
    8. ' ' → logprob: -13.562186241149902
    9. 'insert' → logprob: -13.812186241149902
    10. '   ' → logprob: -13.937186241149902

Token 176: ' hop' (ID: 10284)
  Prédit: 'hop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hop' → logprob: -0.1350369155406952
    2. 'v' → logprob: -2.3850369453430176
    3. ' hop' → logprob: -4.510036945343018
    4. '#' → logprob: -4.510036945343018
    5. 'Hop' → logprob: -5.510036945343018
    6. ' v' → logprob: -5.885036945343018
    7. ' ' → logprob: -6.135036945343018
    8. '<|end|>' → logprob: -6.385036945343018
    9. '   ' → logprob: -8.13503646850586
    10. ' Hop' → logprob: -8.26003646850586

Token 177: '!' (ID: 0)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005535095697268844
    2. 'v' → logprob: -8.125553131103516
    3. '	v' → logprob: -8.750553131103516
    4. '    
' → logprob: -9.625553131103516
    5. ' v' → logprob: -12.250553131103516
    6. '	
' → logprob: -12.875553131103516
    7. '   ' → logprob: -12.875553131103516
    8. ',' → logprob: -13.000553131103516
    9. '#' → logprob: -13.000553131103516
    10. '	   ' → logprob: -13.250553131103516

Token 178: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01853185147047043
    2. 'v' → logprob: -4.018531799316406
    3. '    
' → logprob: -8.268531799316406
    4. '	v' → logprob: -9.518531799316406
    5. ' v' → logprob: -10.518531799316406
    6. '
' → logprob: -12.018531799316406
    7. '  
' → logprob: -12.643531799316406
    8. '```' → logprob: -12.768531799316406
    9. '#' → logprob: -12.893531799316406
    10. '   
' → logprob: -12.893531799316406

Token 179: 'attention' (ID: 126213)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007706584874540567
    2. '   ' → logprob: -6.007706642150879
    3. ')v' → logprob: -6.132706642150879
    4. 'v' → logprob: -6.257706642150879
    5. ' )' → logprob: -7.257706642150879
    6. ' ' → logprob: -9.257706642150879
    7. '  ' → logprob: -9.757706642150879
    8. ' ' → logprob: -10.382706642150879
    9. ')
' → logprob: -10.507706642150879
    10. '#' → logprob: -10.507706642150879

Token 180: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8382582664489746
    2. ')' → logprob: -1.0882582664489746
    3. ' ' → logprob: -2.7132582664489746
    4. ' )' → logprob: -2.9632582664489746
    5. '!' → logprob: -3.0882582664489746
    6. ' à' → logprob: -3.7132582664489746
    7. ' ,' → logprob: -4.338258266448975
    8. ' to' → logprob: -5.338258266448975
    9. ':' → logprob: -5.463258266448975
    10. ' ' → logprob: -5.963258266448975

Token 181: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.2683161497116089
    2. 'la' → logprob: -2.5183162689208984
    3. ' ce' → logprob: -2.8933162689208984
    4. 'ce' → logprob: -3.0183162689208984
    5. ' l' → logprob: -3.6433162689208984
    6. 'index' → logprob: -5.018316268920898
    7. 'bien' → logprob: -5.518316268920898
    8. ' la' → logprob: -6.018316268920898
    9. 'v' → logprob: -6.018316268920898
    10. ' bien' → logprob: -6.018316268920898

Token 182: ''' (ID: 6)
  Prédit: 'indice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indice' → logprob: -0.956578254699707
    2. 'indices' → logprob: -1.456578254699707
    3. 'index' → logprob: -1.956578254699707
    4. ''' → logprob: -2.581578254699707
    5. 'indent' → logprob: -2.581578254699707
    6. 'ordre' → logprob: -2.956578254699707
    7. ''ind' → logprob: -4.331578254699707
    8. 'ind' → logprob: -4.956578254699707
    9. ''ordre' → logprob: -5.331578254699707
    10. ''effet' → logprob: -5.331578254699707

Token 183: 'index' (ID: 2257)
  Prédit: 'index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.6068081259727478
    2. 'indice' → logprob: -0.9818081259727478
    3. 'indices' → logprob: -2.7318081855773926
    4. 'd' → logprob: -5.231808185577393
    5. 'indent' → logprob: -5.481808185577393
    6. 'eff' → logprob: -6.356808185577393
    7. 'ind' → logprob: -6.606808185577393
    8. 'dé' → logprob: -6.856808185577393
    9. 'ordre' → logprob: -7.106808185577393
    10. 'shift' → logprob: -9.606807708740234

Token 184: ')
' (ID: 446)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6435153484344482
    2. '0' → logprob: -0.7685153484344482
    3. ')' → logprob: -5.018515586853027
    4. 's' → logprob: -6.143515586853027
    5. ' )' → logprob: -6.393515586853027
    6. '   ' → logprob: -8.643515586853027
    7. '[' → logprob: -9.268515586853027
    8. '  ' → logprob: -9.893515586853027
    9. ' ' → logprob: -11.268515586853027
    10. '    ' → logprob: -11.518515586853027

Token 185: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11293294280767441
    2. 'v' → logprob: -2.2379329204559326
    3. '	v' → logprob: -9.737933158874512
    4. ' v' → logprob: -10.737933158874512
    5. '    
' → logprob: -10.862933158874512
    6. '```' → logprob: -12.737933158874512
    7. '   ' → logprob: -13.487933158874512
    8. 'insert' → logprob: -13.737933158874512
    9. '  ' → logprob: -13.987933158874512
    10. '       ' → logprob: -14.112933158874512

Token 186: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.18049998581409454
    2. '   ' → logprob: -1.8055000305175781
    3. '#' → logprob: -7.305500030517578
    4. '    
' → logprob: -10.430500030517578
    5. ' v' → logprob: -10.680500030517578
    6. '	v' → logprob: -10.930500030517578
    7. 'insert' → logprob: -12.555500030517578
    8. '  ' → logprob: -13.180500030517578
    9. '```' → logprob: -13.805500030517578
    10. '   ' → logprob: -13.930500030517578

Token 187: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.044511619955301285
    2. '.insert' → logprob: -3.294511556625366
    3. '.' → logprob: -5.044511795043945
    4. '.app' → logprob: -12.669511795043945
    5. '.ap' → logprob: -14.419511795043945
    6. '=' → logprob: -15.044511795043945
    7. 'append' → logprob: -15.419511795043945
    8. '[' → logprob: -16.169511795043945
    9. 'insert' → logprob: -16.419511795043945
    10. '.extend' → logprob: -16.544511795043945

Token 188: '(mean' (ID: 106533)
  Prédit: '(mean'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mean' → logprob: -1.0445127372804563e-05
    2. 'mean' → logprob: -11.75001049041748
    3. '(me' → logprob: -13.25001049041748
    4. '(' → logprob: -14.12501049041748
    5. '(round' → logprob: -17.375009536743164
    6. '(int' → logprob: -17.500009536743164
    7. '((' → logprob: -17.750009536743164
    8. '(m' → logprob: -17.750009536743164
    9. ' mean' → logprob: -20.375009536743164
    10. '(float' → logprob: -20.375009536743164

Token 189: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20143185555934906
    2. ')
' → logprob: -1.7014318704605103
    3. ')
' → logprob: -11.576432228088379
    4. ' )' → logprob: -12.576432228088379
    5. ' )
' → logprob: -12.701432228088379
    6. ')

' → logprob: -13.576432228088379
    7. '   ' → logprob: -14.076432228088379
    8. '
' → logprob: -15.576432228088379
    9. ')v' → logprob: -16.576431274414062
    10. '))' → logprob: -16.701431274414062

Token 190: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18966390192508698
    2. 'v' → logprob: -1.8146638870239258
    3. '	v' → logprob: -5.439663887023926
    4. '<|end|>' → logprob: -5.939663887023926
    5. ' v' → logprob: -6.189663887023926
    6. '    
' → logprob: -8.564663887023926
    7. '
' → logprob: -9.064663887023926
    8. ',v' → logprob: -9.189663887023926
    9. ')' → logprob: -9.314663887023926
    10. ' ' → logprob: -9.814663887023926

Token 191: ' #' (ID: 1069)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.05990419536828995
    2. ' 
' → logprob: -3.934904098510742
    3. ' v' → logprob: -4.309904098510742
    4. '  
' → logprob: -4.809904098510742
    5. '
' → logprob: -5.184904098510742
    6. '   ' → logprob: -5.559904098510742
    7. '<|end|>' → logprob: -6.184904098510742
    8. ' ' → logprob: -6.434904098510742
    9. '    
' → logprob: -6.559904098510742
    10. ')' → logprob: -6.684904098510742

Token 192: ' on' (ID: 402)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.45283469557762146
    2. 'v' → logprob: -1.2028347253799438
    3. ' sorted' → logprob: -2.8278346061706543
    4. 'sorted' → logprob: -5.577834606170654
    5. '   ' → logprob: -8.077835083007812
    6. '  ' → logprob: -8.452835083007812
    7. ' ' → logprob: -9.327835083007812
    8. '	v' → logprob: -9.452835083007812
    9. '    ' → logprob: -10.702835083007812
    10. '#' → logprob: -11.202835083007812

Token 193: ' ajoute' (ID: 91611)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.36812859773635864
    2. '.sort' → logprob: -1.7431285381317139
    3. 'append' → logprob: -3.118128538131714
    4. ' append' → logprob: -4.243128776550293
    5. ' .' → logprob: -4.243128776550293
    6. 'sort' → logprob: -4.868128776550293
    7. '.' → logprob: -5.243128776550293
    8. ' sort' → logprob: -5.368128776550293
    9. ' sorted' → logprob: -5.368128776550293
    10. 'sorted' → logprob: -5.493128776550293

Token 194: ' à' (ID: 1221)
  Prédit: 'mean'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mean' → logprob: -1.1579397916793823
    2. '(' → logprob: -1.2829397916793823
    3. 'v' → logprob: -2.157939910888672
    4. '(mean' → logprob: -2.532939910888672
    5. ' ' → logprob: -3.407939910888672
    6. ' v' → logprob: -3.657939910888672
    7. '(v' → logprob: -3.657939910888672
    8. ' mean' → logprob: -3.657939910888672
    9. '(
' → logprob: -3.907939910888672
    10. '   ' → logprob: -4.157939910888672

Token 195: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.2317766398191452
    2. ' la' → logprob: -1.6067765951156616
    3. 'a' → logprob: -5.606776714324951
    4. 'v' → logprob: -7.106776714324951
    5. ' ' → logprob: -7.356776714324951
    6. 'l' → logprob: -7.356776714324951
    7. ' ' → logprob: -8.731776237487793
    8. '```' → logprob: -9.231776237487793
    9. 'the' → logprob: -9.731776237487793
    10. ' a' → logprob: -10.481776237487793

Token 196: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.00457834592089057
    2. 'f' → logprob: -5.879578113555908
    3. ' fin' → logprob: -7.504578113555908
    4. 'bonne' → logprob: -7.754578113555908
    5. 'v' → logprob: -8.129578590393066
    6. 'liste' → logprob: -8.754578590393066
    7. 'fi' → logprob: -9.254578590393066
    8. 'end' → logprob: -9.504578590393066
    9. 'm' → logprob: -10.254578590393066
    10. 'b' → logprob: -10.879578590393066

Token 197: '
' (ID: 198)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.7629421353340149
    2. '
' → logprob: -0.7629421353340149
    3. '<|end|>' → logprob: -3.63794207572937
    4. ' 
' → logprob: -4.012942314147949
    5. ' v' → logprob: -4.637942314147949
    6. '  
' → logprob: -5.762942314147949
    7. ' ' → logprob: -5.762942314147949
    8. '	v' → logprob: -5.887942314147949
    9. ')' → logprob: -6.512942314147949
    10. '
' → logprob: -7.012942314147949

Token 198: '   ' (ID: 271)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.16185921430587769
    2. '   ' → logprob: -2.0368592739105225
    3. ' v' → logprob: -4.161859035491943
    4. '<|end|>' → logprob: -6.661859035491943
    5. '	v' → logprob: -6.911859035491943
    6. '    
' → logprob: -7.536859035491943
    7. ' 
' → logprob: -8.411859512329102
    8. '
' → logprob: -8.786859512329102
    9. ' ' → logprob: -9.536859512329102
    10. '  
' → logprob: -9.911859512329102

Token 199: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.005520103964954615
    2. '   ' → logprob: -5.255519866943359
    3. ' v' → logprob: -8.25551986694336
    4. '	v' → logprob: -10.75551986694336
    5. '  ' → logprob: -12.88051986694336
    6. ' ' → logprob: -13.75551986694336
    7. '    
' → logprob: -14.13051986694336
    8. '    ' → logprob: -15.50551986694336
    9. '_v' → logprob: -16.63051986694336
    10. ')v' → logprob: -16.63051986694336

Token 200: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3171149492263794
    2. ' =' → logprob: -1.3171149492263794
    3. '.sort' → logprob: -5.56711483001709
    4. 'sort' → logprob: -11.81711483001709
    5. '.' → logprob: -11.94211483001709
    6. '.=' → logprob: -12.56711483001709
    7. ' =
' → logprob: -13.44211483001709
    8. 'sorted' → logprob: -13.56711483001709
    9. '=
' → logprob: -13.94211483001709
    10. '=v' → logprob: -14.44211483001709

Token 201: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -9.85366350505501e-05
    2. ' sorted' → logprob: -9.25009822845459
    3. '(sorted' → logprob: -13.37509822845459
    4. 'list' → logprob: -15.25009822845459
    5. 's' → logprob: -15.75009822845459
    6. 'v' → logprob: -16.125099182128906
    7. 'sort' → logprob: -16.125099182128906
    8. '.sorted' → logprob: -16.625099182128906
    9. '[' → logprob: -17.500099182128906
    10. 'Sorted' → logprob: -17.625099182128906

Token 202: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -1.0206720617134124e-05
    2. '(' → logprob: -11.50001049041748
    3. 'v' → logprob: -17.125009536743164
    4. ' (' → logprob: -18.125009536743164
    5. '((' → logprob: -18.750009536743164
    6. '()' → logprob: -18.750009536743164
    7. '```' → logprob: -19.000009536743164
    8. '(V' → logprob: -19.375009536743164
    9. '(
' → logprob: -20.375009536743164
    10. '	v' → logprob: -21.500009536743164

Token 203: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007447133306413889
    2. '())' → logprob: -5.257447242736816
    3. '()' → logprob: -6.132447242736816
    4. ' )' → logprob: -11.007447242736816
    5. '(' → logprob: -11.132447242736816
    6. ')
' → logprob: -12.382447242736816
    7. '))' → logprob: -13.507447242736816
    8. '()
' → logprob: -14.257447242736816
    9. 'v' → logprob: -14.882447242736816
    10. ')v' → logprob: -15.007447242736816

Token 204: ' ' (ID: 220)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00045783669338561594
    2. 'mean' → logprob: -9.000457763671875
    3. '#' → logprob: -9.125457763671875
    4. 'result' → logprob: -9.875457763671875
    5. ' print' → logprob: -10.375457763671875
    6. 'v' → logprob: -10.375457763671875
    7. '<|end|>' → logprob: -10.500457763671875
    8. '  
' → logprob: -10.625457763671875
    9. ')' → logprob: -11.000457763671875
    10. ']' → logprob: -11.625457763671875

Token 205: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.060259364545345306
    2. '#' → logprob: -3.3102593421936035
    3. ')' → logprob: -4.4352593421936035
    4. 'v' → logprob: -5.4352593421936035
    5. 'mean' → logprob: -6.3102593421936035
    6. '<|end|>' → logprob: -6.4352593421936035
    7. ']' → logprob: -7.6852593421936035
    8. '#print' → logprob: -8.185259819030762
    9. '[' → logprob: -8.310259819030762
    10. '(' → logprob: -8.435259819030762

Token 206: ' tant' (ID: 16235)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00622644042596221
    2. 'sorted' → logprob: -6.131226539611816
    3. '```' → logprob: -6.756226539611816
    4. ' v' → logprob: -7.256226539611816
    5. '()' → logprob: -7.881226539611816
    6. ')' → logprob: -7.881226539611816
    7. 'continue' → logprob: -8.256226539611816
    8. '#' → logprob: -8.506226539611816
    9. 'None' → logprob: -9.006226539611816
    10. 'pass' → logprob: -9.006226539611816

Token 207: ' pis' (ID: 19525)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.8370083570480347
    2. 'qu' → logprob: -1.2120083570480347
    3. 'que' → logprob: -1.8370083570480347
    4. 'pis' → logprob: -2.587008476257324
    5. 'ôt' → logprob: -3.962008476257324
    6. 't' → logprob: -4.587008476257324
    7. '   ' → logprob: -7.212008476257324
    8. 'qui' → logprob: -7.837008476257324
    9. 'pour' → logprob: -8.087008476257324
    10. 'quoi' → logprob: -8.212008476257324

Token 208: ' si' (ID: 1784)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003907543432433158
    2. '#' → logprob: -8.750391006469727
    3. ' print' → logprob: -9.750391006469727
    4. '
' → logprob: -10.000391006469727
    5. 'result' → logprob: -10.000391006469727
    6. ')' → logprob: -10.750391006469727
    7. 'mean' → logprob: -11.000391006469727
    8. 'v' → logprob: -11.500391006469727
    9. ']' → logprob: -11.875391006469727
    10. '#print' → logprob: -12.375391006469727

Token 209: ' c' (ID: 274)
  Prédit: 'ça'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ça' → logprob: -1.0277557373046875
    2. 'c' → logprob: -1.5277557373046875
    3. 'len' → logprob: -2.6527557373046875
    4. ' n' → logprob: -2.7777557373046875
    5. ' c' → logprob: -3.0277557373046875
    6. 'n' → logprob: -3.0277557373046875
    7. 'v' → logprob: -3.5277557373046875
    8. ' on' → logprob: -3.5277557373046875
    9. 'la' → logprob: -3.7777557373046875
    10. ' ça' → logprob: -3.7777557373046875

Token 210: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.07494217902421951
    2. 'est' → logprob: -2.699942111968994
    3. 'a' → logprob: -6.449942111968994
    4. 'pas' → logprob: -6.949942111968994
    5. 'e' → logprob: -7.699942111968994
    6. 'plus' → logprob: -7.949942111968994
    7. ''' → logprob: -7.949942111968994
    8. 'p' → logprob: -8.949942588806152
    9. 'n' → logprob: -9.074942588806152
    10. 'v' → logprob: -9.199942588806152

Token 211: ' pas' (ID: 2173)
  Prédit: 'ine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.6255303025245667
    2. 'lent' → logprob: -1.2505302429199219
    3. 'l' → logprob: -2.625530242919922
    4. 'un' → logprob: -2.750530242919922
    5. 'moins' → logprob: -4.500530242919922
    6. 'pas' → logprob: -4.875530242919922
    7. 'long' → logprob: -5.000530242919922
    8. ' un' → logprob: -5.625530242919922
    9. 'une' → logprob: -5.625530242919922
    10. 'co' → logprob: -6.500530242919922

Token 212: ' super' (ID: 2539)
  Prédit: 'optimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'optimal' → logprob: -0.06765443831682205
    2. 'optim' → logprob: -3.3176543712615967
    3. 'tr' → logprob: -4.067654609680176
    4. 'opt' → logprob: -5.817654609680176
    5. 'efficient' → logprob: -5.942654609680176
    6. 'la' → logprob: -6.317654609680176
    7. 'super' → logprob: -6.567654609680176
    8. 'eff' → logprob: -7.067654609680176
    9. ' optimal' → logprob: -7.067654609680176
    10. 'le' → logprob: -7.192654609680176

Token 213: ' optim' (ID: 9367)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002138720825314522
    2. 'result' → logprob: -6.627138614654541
    3. '#' → logprob: -7.877138614654541
    4. ' print' → logprob: -8.6271390914917
    5. '
' → logprob: -9.1271390914917
    6. 'mean' → logprob: -9.7521390914917
    7. 'final' → logprob: -10.1271390914917
    8. '    
' → logprob: -12.1271390914917
    9. '#print' → logprob: -12.2521390914917
    10. '  
' → logprob: -12.3771390914917

Token 214: 'isé' (ID: 30065)
  Prédit: 'isé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isé' → logprob: -0.7511027455329895
    2. 'isée' → logprob: -1.5011026859283447
    3. 'ale' → logprob: -1.5011026859283447
    4. 'al' → logprob: -3.3761026859283447
    5. 'is' → logprob: -3.5011026859283447
    6. 'e' → logprob: -5.001102924346924
    7. 'ized' → logprob: -5.876102924346924
    8. 'ise' → logprob: -6.001102924346924
    9. 'isées' → logprob: -6.001102924346924
    10. '()' → logprob: -6.751102924346924

Token 215: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00010902655776590109
    2. '#' → logprob: -9.87510871887207
    3. '
' → logprob: -10.87510871887207
    4. ' print' → logprob: -11.12510871887207
    5. 'result' → logprob: -12.62510871887207
    6. 'v' → logprob: -12.75010871887207
    7. ')' → logprob: -12.87510871887207
    8. 'mean' → logprob: -13.00010871887207
    9. '    
' → logprob: -13.12510871887207
    10. '#print' → logprob: -13.25010871887207

Token 216: ' je' (ID: 1264)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 217: ' trie' (ID: 139428)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'veux' → logprob: -1.4263193607330322
    2. 'continue' → logprob: -1.4263193607330322
    3. 'vais' → logprob: -1.4263193607330322
    4. 'p' → logprob: -2.6763193607330322
    5. 's' → logprob: -3.3013193607330322
    6. ' préfère' → logprob: -3.5513193607330322
    7. 'pr' → logprob: -3.6763193607330322
    8. 'f' → logprob: -3.8013193607330322
    9. 'vou' → logprob: -3.9263193607330322
    10. ' continue' → logprob: -4.301319122314453

Token 218: ' à' (ID: 1221)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03386502340435982
    2. '
' → logprob: -3.533864974975586
    3. '#' → logprob: -6.783864974975586
    4. 'result' → logprob: -7.158864974975586
    5. '<|end|>' → logprob: -7.283864974975586
    6. 'mean' → logprob: -7.783864974975586
    7. '  
' → logprob: -7.908864974975586
    8. '

' → logprob: -8.408864974975586
    9. ' print' → logprob: -9.158864974975586
    10. 'final' → logprob: -9.158864974975586

Token 219: ' chaque' (ID: 21194)
  Prédit: 'cha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cha' → logprob: -0.23890218138694763
    2. ' chaque' → logprob: -1.73890221118927
    3. 'each' → logprob: -4.6139020919799805
    4. 'ch' → logprob: -4.6139020919799805
    5. 'la' → logprob: -5.4889020919799805
    6. 'Chaque' → logprob: -5.4889020919799805
    7. 'nou' → logprob: -5.7389020919799805
    8. 'à' → logprob: -6.3639020919799805
    9. '```' → logprob: -6.7389020919799805
    10. 'new' → logprob: -7.1139020919799805

Token 220: ' fois' (ID: 14697)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.8163720965385437
    2. ' it' → logprob: -1.5663721561431885
    3. 'fois' → logprob: -2.0663721561431885
    4. 'tour' → logprob: -2.0663721561431885
    5. 'iteration' → logprob: -2.8163721561431885
    6. ' fois' → logprob: -4.316371917724609
    7. ' tour' → logprob: -4.691371917724609
    8. ' boucle' → logprob: -5.066371917724609
    9. ' ' → logprob: -6.316371917724609
    10. 'iter' → logprob: -6.441371917724609

Token 221: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0011013990733772516
    2. '#' → logprob: -7.376101493835449
    3. '
' → logprob: -8.50110149383545
    4. ' print' → logprob: -9.12610149383545
    5. 'result' → logprob: -9.25110149383545
    6. '

' → logprob: -11.87610149383545
    7. '#print' → logprob: -12.00110149383545
    8. 'm' → logprob: -12.12610149383545
    9. '  
' → logprob: -12.25110149383545
    10. ')' → logprob: -12.25110149383545

Token 222: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00019483851792756468
    2. 'result' → logprob: -9.125194549560547
    3. ')' → logprob: -10.500194549560547
    4. '#' → logprob: -10.625194549560547
    5. ' print' → logprob: -11.125194549560547
    6. 'final' → logprob: -12.625194549560547
    7. 'mean' → logprob: -12.750194549560547
    8. 'v' → logprob: -12.875194549560547
    9. ']' → logprob: -13.000194549560547
    10. 'm' → logprob: -13.125194549560547

Token 223: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.477206289768219
    2. '(' → logprob: -0.977206289768219
    3. '(sum' → logprob: -6.477206230163574
    4. '()' → logprob: -6.602206230163574
    5. '(*' → logprob: -9.602206230163574
    6. '(max' → logprob: -10.102206230163574
    7. '(
' → logprob: -10.477206230163574
    8. '(len' → logprob: -10.852206230163574
    9. '("' → logprob: -10.977206230163574
    10. '(min' → logprob: -11.102206230163574

Token 224: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0325924449716695e-05
    2. '[-' → logprob: -11.87501049041748
    3. ')' → logprob: -13.00001049041748
    4. '0' → logprob: -13.75001049041748
    5. ' [' → logprob: -17.000009536743164
    6. ' ' → logprob: -18.875009536743164
    7. ')[' → logprob: -19.375009536743164
    8. '[
' → logprob: -20.125009536743164
    9. '   ' → logprob: -20.500009536743164
    10. ' )' → logprob: -20.625009536743164

Token 225: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.250001907348633
    3. '-' → logprob: -16.000001907348633
    4. '1' → logprob: -17.750001907348633
    5. ' -' → logprob: -19.250001907348633
    6. '
' → logprob: -19.375001907348633
    7. '   ' → logprob: -19.375001907348633
    8. '00' → logprob: -19.750001907348633
    9. '000' → logprob: -19.750001907348633
    10. '۰' → logprob: -19.875001907348633

Token 226: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10023362934589386
    2. '])' → logprob: -2.350233554840088
    3. '))' → logprob: -11.225234031677246
    4. '})' → logprob: -12.225234031677246
    5. ']' → logprob: -12.600234031677246
    6. ')])' → logprob: -13.350234031677246
    7. ')]' → logprob: -13.725234031677246
    8. ' )' → logprob: -13.975234031677246
    9. '）' → logprob: -14.225234031677246
    10. ''])' → logprob: -15.100234031677246

Token 227: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 228: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 229: ' c' (ID: 274)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8500685095787048
    2. ''' → logprob: -1.6000685691833496
    3. ')' → logprob: -1.9750685691833496
    4. '<|end|>' → logprob: -2.3500685691833496
    5. '"' → logprob: -3.1000685691833496
    6. '\' → logprob: -3.6000685691833496
    7. '""' → logprob: -4.85006856918335
    8. '```' → logprob: -4.97506856918335
    9. '()' → logprob: -5.10006856918335
    10. ' )' → logprob: -5.10006856918335

Token 230: ''est' (ID: 6616)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.5603641867637634
    2. ''est' → logprob: -1.5603642463684082
    3. ''' → logprob: -2.685364246368408
    4. 'e' → logprob: -3.560364246368408
    5. 'ode' → logprob: -3.810364246368408
    6. 'o' → logprob: -4.060364246368408
    7. 'est' → logprob: -4.310364246368408
    8. '#' → logprob: -4.435364246368408
    9. 'a' → logprob: -4.560364246368408
    10. 'omp' → logprob: -5.185364246368408

Token 231: ' cens' (ID: 55288)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.5382187962532043
    2. 'le' → logprob: -2.0382187366485596
    3. ' la' → logprob: -2.0382187366485596
    4. 'tout' → logprob: -2.4132187366485596
    5. ' le' → logprob: -3.4132187366485596
    6. ' tout' → logprob: -4.288218975067139
    7. 'l' → logprob: -5.038218975067139
    8. ' fini' → logprob: -5.038218975067139
    9. '#' → logprob: -7.163218975067139
    10. 'f' → logprob: -7.163218975067139

Token 232: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -3.9650025428272784e-05
    2. '#' → logprob: -10.750040054321289
    3. 'e' → logprob: -11.375040054321289
    4. 'és' → logprob: -13.000040054321289
    5. 'ée' → logprob: -13.250040054321289
    6. 'ément' → logprob: -14.750040054321289
    7. 'sé' → logprob: -15.000040054321289
    8. ' é' → logprob: -15.250040054321289
    9. ''é' → logprob: -16.00004005432129
    10. 'è' → logprob: -16.00004005432129

Token 233: ' être' (ID: 9104)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.5641741156578064
    2. ' être' → logprob: -1.1891741752624512
    3. '#' → logprob: -2.314174175262451
    4. ' #' → logprob: -3.814174175262451
    5. ' etre' → logprob: -6.314174175262451
    6. ' afficher' → logprob: -6.689174175262451
    7. 'etre' → logprob: -7.439174175262451
    8. ''être' → logprob: -7.689174175262451
    9. ' ' → logprob: -8.189173698425293
    10. 'aff' → logprob: -8.189173698425293

Token 234: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.29672500491142273
    2. 'la' → logprob: -1.5467250347137451
    3. 'l' → logprob: -3.671725034713745
    4. 'v' → logprob: -5.171724796295166
    5. '0' → logprob: -5.421724796295166
    6. ' la' → logprob: -6.171724796295166
    7. 'm' → logprob: -6.546724796295166
    8. 'round' → logprob: -6.671724796295166
    9. ' le' → logprob: -6.796724796295166
    10. 'mean' → logprob: -7.546724796295166

Token 235: ' dernier' (ID: 27982)
  Prédit: 'minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'minimum' → logprob: -0.1087167039513588
    2. 'rés' → logprob: -2.8587167263031006
    3. 'me' → logprob: -4.1087164878845215
    4. 'min' → logprob: -4.6087164878845215
    5. 'result' → logprob: -5.1087164878845215
    6. 'm' → logprob: -5.2337164878845215
    7. ' minimum' → logprob: -5.8587164878845215
    8. 'plus' → logprob: -6.8587164878845215
    9. ' résultat' → logprob: -7.1087164878845215
    10. '#' → logprob: -7.2337164878845215

Token 236: ' ?' (ID: 1423)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 237: ' Bon' (ID: 12658)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 238: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 239: ' on' (ID: 402)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11550408601760864
    2. '\n' → logprob: -3.115504026412964
    3. ' oui' → logprob: -3.615504026412964
    4. '```' → logprob: -4.990504264831543
    5. '0' → logprob: -5.240504264831543
    6. ' )' → logprob: -5.865504264831543
    7. ' ' → logprob: -5.990504264831543
    8. ' yes' → logprob: -5.990504264831543
    9. 'newline' → logprob: -6.365504264831543
    10. '#' → logprob: -6.490504264831543

Token 240: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.894964337348938
    2. 'aff' → logprob: -1.394964337348938
    3. 'esp' → logprob: -1.769964337348938
    4. 'im' → logprob: -2.3949642181396484
    5. 'a' → logprob: -3.6449642181396484
    6. 'l' → logprob: -4.519964218139648
    7. 'continue' → logprob: -5.019964218139648
    8. 'y' → logprob: -5.394964218139648
    9. 'dir' → logprob: -5.769964218139648
    10. 'arr' → logprob: -5.894964218139648

Token 241: ' le' (ID: 505)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 242: ' premier' (ID: 15506)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.3381081819534302
    2. 'm' → logprob: -1.4631081819534302
    3. 'me' → logprob: -2.3381080627441406
    4. 'rés' → logprob: -2.5881080627441406
    5. ' résultat' → logprob: -2.5881080627441406
    6. 'minimum' → logprob: -2.7131080627441406
    7. 'mean' → logprob: -2.9631080627441406
    8. 'final' → logprob: -3.0881080627441406
    9. 'dern' → logprob: -3.4631080627441406
    10. '.' → logprob: -4.213108062744141

Token 243: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 244: ' ça' (ID: 13590)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8806495666503906
    2. '.' → logprob: -1.6306495666503906
    3. '#' → logprob: -2.8806495666503906
    4. 'end' → logprob: -2.8806495666503906
    5. ' qui' → logprob: -3.2556495666503906
    6. 'newline' → logprob: -3.5056495666503906
    7. '```' → logprob: -3.6306495666503906
    8. ' ' → logprob: -3.8806495666503906
    9. ' oui' → logprob: -4.005649566650391
    10. '""' → logprob: -4.130649566650391

Token 245: ' marche' (ID: 58191)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 246: ' ici' (ID: 27994)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 247: ' je' (ID: 1264)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 248: ' crois' (ID: 65485)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00557535607367754
    2. 'cro' → logprob: -5.755575180053711
    3. 'penser' → logprob: -7.380575180053711
    4. 'supp' → logprob: -7.380575180053711
    5. ' pense' → logprob: -7.505575180053711
    6. 'pens' → logprob: -8.005575180053711
    7. 'think' → logprob: -8.880575180053711
    8. 'veux' → logprob: -10.630575180053711
    9. 'vais' → logprob: -11.255575180053711
    10. 'sup' → logprob: -11.255575180053711


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 246
Tokens correctement prédits (1ère position, stricte): 55
Tokens correctement prédits (1ère position, avec adaptation): 58
Tokens correctement prédits (top 10): 139
Précision stricte (1ère position): 22.36%
Précision adaptée (1ère position): 23.58%
Précision (top 10): 56.50%
================================================================================
