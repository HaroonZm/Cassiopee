================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:45:09
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
a = list(map(int, input().split()))

sums = 0
for x in a:
    sums ^= x

blu = set()
remain = set(range(n))

for i in range(60, -1, -1):
    if ((sums >> i) & 1) == 0:
        di = -1
        for j in remain:
            if ((a[j] >> i) & 1) == 1:
                di = j
                break
        if di != -1:
            blu.add(di)
            remain.remove(di)
            for j in range(n):
                if j != di and ((a[j] >> i) & 1) == 1:
                    a[j] ^= a[di]

bsum = 0
for i in blu:
    bsum ^= a[i]

print(bsum + (sums ^ bsum))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00038134094211272895
    2. '(n' → logprob: -9.000381469726562
    3. ''' → logprob: -9.500381469726562
    4. '('' → logprob: -10.125381469726562
    5. '```' → logprob: -10.125381469726562
    6. '`' → logprob: -10.750381469726562
    7. '("("' → logprob: -10.750381469726562
    8. '()' → logprob: -11.250381469726562
    9. 'n' → logprob: -11.625381469726562
    10. ')' → logprob: -12.000381469726562

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0733853131532669
    2. ')' → logprob: -2.823385238647461
    3. '()' → logprob: -4.698385238647461
    4. '())' → logprob: -6.948385238647461
    5. '```' → logprob: -8.198385238647461
    6. '(
' → logprob: -8.448385238647461
    7. '('' → logprob: -8.823385238647461
    8. '(()' → logprob: -9.073385238647461
    9. '`' → logprob: -9.198385238647461
    10. '("("' → logprob: -9.698385238647461

Token 5: 'a' (ID: 64)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9191706776618958
    2. 'i' → logprob: -1.169170618057251
    3. 'for' → logprob: -1.669170618057251
    4. 's' → logprob: -3.169170618057251
    5. '*' → logprob: -4.66917085647583
    6. ')' → logprob: -4.91917085647583
    7. 'x' → logprob: -5.04417085647583
    8. '#' → logprob: -5.16917085647583
    9. '`' → logprob: -5.16917085647583
    10. 'a' → logprob: -5.54417085647583

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.030097683891654015
    2. ' =' → logprob: -4.405097484588623
    3. '=' → logprob: -5.405097484588623
    4. '[i' → logprob: -5.905097484588623
    5. 'r' → logprob: -6.030097484588623
    6. '.' → logprob: -6.655097484588623
    7. 'a' → logprob: -6.780097484588623
    8. '[a' → logprob: -7.030097484588623
    9. 'rray' → logprob: -7.280097484588623
    10. '[:]' → logprob: -7.530097484588623

Token 7: ' list' (ID: 1562)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.255839228630066
    2. ' []' → logprob: -1.255839228630066
    3. 'list' → logprob: -1.505839228630066
    4. ' list' → logprob: -1.880839228630066
    5. ' [' → logprob: -3.7558393478393555
    6. 'input' → logprob: -4.6308393478393555
    7. '[input' → logprob: -4.7558393478393555
    8. '[' → logprob: -5.1308393478393555
    9. ' input' → logprob: -6.0058393478393555
    10. '[int' → logprob: -6.1308393478393555

Token 8: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003622793301474303
    2. '(a' → logprob: -8.625362396240234
    3. '()' → logprob: -9.375362396240234
    4. '(range' → logprob: -10.000362396240234
    5. '(input' → logprob: -11.125362396240234
    6. '(`' → logprob: -12.125362396240234
    7. 'a' → logprob: -12.500362396240234
    8. '(
' → logprob: -12.500362396240234
    9. '("("' → logprob: -13.000362396240234
    10. '((' → logprob: -13.000362396240234

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.1174561157822609
    2. '(' → logprob: -2.3674561977386475
    3. '(str' → logprob: -4.242455959320068
    4. '(lambda' → logprob: -6.867455959320068
    5. '(input' → logprob: -7.242455959320068
    6. 'int' → logprob: -8.117456436157227
    7. ')' → logprob: -8.867456436157227
    8. '```' → logprob: -8.867456436157227
    9. '<int' → logprob: -9.367456436157227
    10. '(eval' → logprob: -9.617456436157227

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.007724452763795853
    2. '(' → logprob: -5.382724285125732
    3. '))' → logprob: -6.382724285125732
    4. ',input' → logprob: -7.257724285125732
    5. ')' → logprob: -8.00772476196289
    6. 'input' → logprob: -9.00772476196289
    7. '=input' → logprob: -9.50772476196289
    8. '```' → logprob: -10.88272476196289
    9. '[input' → logprob: -11.13272476196289
    10. '(user' → logprob: -11.25772476196289

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02977536804974079
    2. ' input' → logprob: -3.529775381088257
    3. '(input' → logprob: -10.654775619506836
    4. ',input' → logprob: -14.654775619506836
    5. ')' → logprob: -15.029775619506836
    6. '=input' → logprob: -15.279775619506836
    7. '	input' → logprob: -15.779775619506836
    8. '<input' → logprob: -16.529775619506836
    9. '[input' → logprob: -17.029775619506836
    10. ' ' → logprob: -17.779775619506836

Token 12: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.8747535943984985
    2. '().' → logprob: -1.1247535943984985
    3. '()' → logprob: -1.6247535943984985
    4. '())' → logprob: -2.874753475189209
    5. '()));' → logprob: -5.749753475189209
    6. '(' → logprob: -7.624753475189209
    7. '())))' → logprob: -7.624753475189209
    8. '()>' → logprob: -8.874753952026367
    9. '());' → logprob: -8.874753952026367
    10. '))' → logprob: -9.374753952026367

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007378002628684044
    2. 'strip' → logprob: -7.25073766708374
    3. 'rstrip' → logprob: -10.625738143920898
    4. ' split' → logprob: -12.750738143920898
    5. '(split' → logprob: -14.750738143920898
    6. ')' → logprob: -16.1257381439209
    7. 'spl' → logprob: -16.5007381439209
    8. 's' → logprob: -17.5007381439209
    9. ' strip' → logprob: -18.2507381439209
    10. '.split' → logprob: -18.5007381439209

Token 14: '()))

' (ID: 125972)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.7417557835578918
    2. '()))' → logprob: -0.8667557835578918
    3. ')' → logprob: -2.991755723953247
    4. '())' → logprob: -3.116755723953247
    5. '(' → logprob: -5.241755962371826
    6. '()' → logprob: -6.116755962371826
    7. '('' → logprob: -7.491755962371826
    8. ')))' → logprob: -7.866755962371826
    9. ''))' → logprob: -8.616755485534668
    10. '())))' → logprob: -9.116755485534668

Token 15: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7217824459075928
    2. 'a' → logprob: -1.0967824459075928
    3. 'm' → logprob: -2.5967824459075928
    4. 'max' → logprob: -3.5967824459075928
    5. 'c' → logprob: -3.9717824459075928
    6. 'for' → logprob: -4.096782684326172
    7. 'sum' → logprob: -4.346782684326172
    8. 'b' → logprob: -4.971782684326172
    9. 'count' → logprob: -5.346782684326172
    10. 'd' → logprob: -5.596782684326172

Token 16: 'ums' (ID: 6162)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.20231933891773224
    2. 'um' → logprob: -1.8273193836212158
    3. '.' → logprob: -4.077319145202637
    4. '=' → logprob: -6.077319145202637
    5. '[u' → logprob: -6.702319145202637
    6. '[' → logprob: -6.827319145202637
    7. ' =' → logprob: -8.202319145202637
    8. 'o' → logprob: -9.077319145202637
    9. '(' → logprob: -9.952319145202637
    10. '[:]' → logprob: -10.327319145202637

Token 17: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0026515135541558266
    2. '_' → logprob: -6.627651691436768
    3. 's' → logprob: -7.377651691436768
    4. '[' → logprob: -7.752651691436768
    5. '(a' → logprob: -9.00265121459961
    6. ')' → logprob: -10.50265121459961
    7. 'a' → logprob: -10.50265121459961
    8. '=' → logprob: -10.87765121459961
    9. '()' → logprob: -11.50265121459961
    10. '(s' → logprob: -11.62765121459961

Token 18: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.33094772696495056
    2. '[' → logprob: -1.580947756767273
    3. '[]' → logprob: -3.7059476375579834
    4. ' [' → logprob: -3.8309476375579834
    5. ' ' → logprob: -4.4559478759765625
    6. 'a' → logprob: -5.2059478759765625
    7. ' []' → logprob: -5.3309478759765625
    8. '{}' → logprob: -5.5809478759765625
    9. '[a' → logprob: -5.8309478759765625
    10. ' a' → logprob: -7.7059478759765625

Token 19: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1703060865402222
    2. '[' → logprob: -1.1703060865402222
    3. '[]' → logprob: -1.1703060865402222
    4. 'a' → logprob: -3.1703062057495117
    5. 'sum' → logprob: -4.420306205749512
    6. '{}' → logprob: -4.670306205749512
    7. '[a' → logprob: -5.420306205749512
    8. 'set' → logprob: -7.170306205749512
    9. '{' → logprob: -8.295306205749512
    10. '[len' → logprob: -9.295306205749512

Token 20: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.016200467944145203
    2. ' for' → logprob: -4.391200542449951
    3. '<|end|>' → logprob: -5.891200542449951
    4. '
' → logprob: -8.016200065612793
    5. '+' → logprob: -8.891200065612793
    6. ' ' → logprob: -9.266200065612793
    7. 's' → logprob: -9.516200065612793
    8. ')' → logprob: -9.516200065612793
    9. '\n' → logprob: -9.641200065612793
    10. 'i' → logprob: -10.641200065612793

Token 21: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00041458409396000206
    2. ' for' → logprob: -8.000414848327637
    3. '```' → logprob: -10.375414848327637
    4. '\n' → logprob: -10.875414848327637
    5. '
' → logprob: -11.250414848327637
    6. 'i' → logprob: -11.625414848327637
    7. 'n' → logprob: -13.250414848327637
    8. '`' → logprob: -13.875414848327637
    9. '``' → logprob: -14.125414848327637
    10. '+' → logprob: -14.250414848327637

Token 22: ' x' (ID: 1215)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6340118050575256
    2. ' ' → logprob: -0.7590118050575256
    3. '_' → logprob: -7.259011745452881
    4. 'i' → logprob: -7.509011745452881
    5. '  ' → logprob: -9.634012222290039
    6. ' _' → logprob: -10.384012222290039
    7. ' x' → logprob: -11.009012222290039
    8. ' a' → logprob: -11.259012222290039
    9. ' ‌' → logprob: -11.509012222290039
    10. ' ' → logprob: -11.759012222290039

Token 23: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.038100358098745346
    2. 'in' → logprob: -3.288100242614746
    3. ' ' → logprob: -10.413100242614746
    4. 's' → logprob: -11.163100242614746
    5. '	in' → logprob: -12.663100242614746
    6. '<|end|>' → logprob: -13.163100242614746
    7. 'n' → logprob: -13.538100242614746
    8. '_' → logprob: -14.038100242614746
    9. '  ' → logprob: -14.288100242614746
    10. 'import' → logprob: -14.413100242614746

Token 24: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1602369248867035
    2. ' a' → logprob: -1.9102369546890259
    3. ' range' → logprob: -11.785237312316895
    4. 'range' → logprob: -12.535237312316895
    5. '	a' → logprob: -14.285237312316895
    6. ' ' → logprob: -15.285237312316895
    7. '(a' → logprob: -15.660237312316895
    8. 's' → logprob: -15.785237312316895
    9. '[a' → logprob: -16.410236358642578
    10. '>a' → logprob: -16.785236358642578

Token 25: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.692145012086257e-05
    2. '+:' → logprob: -11.250046730041504
    3. ':
' → logprob: -11.500046730041504
    4. ' :' → logprob: -11.625046730041504
    5. '+' → logprob: -12.625046730041504
    6. '):' → logprob: -12.750046730041504
    7. '   ' → logprob: -12.875046730041504
    8. ':**' → logprob: -12.875046730041504
    9. 's' → logprob: -14.500046730041504
    10. ':s' → logprob: -14.625046730041504

Token 26: '   ' (ID: 271)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.34094592928886414
    2. '   ' → logprob: -1.7159459590911865
    3. ' ' → logprob: -2.8409459590911865
    4. ' sums' → logprob: -3.9659459590911865
    5. '<|end|>' → logprob: -4.840945720672607
    6. '+' → logprob: -5.340945720672607
    7. ''s' → logprob: -5.590945720672607
    8. ' s' → logprob: -5.590945720672607
    9. '    ' → logprob: -5.840945720672607
    10. ' 
' → logprob: -5.965945720672607

Token 27: ' sums' (ID: 73121)
  Prédit: ' sums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sums' → logprob: -0.6068722605705261
    2. 's' → logprob: -0.8568722605705261
    3. '   ' → logprob: -4.106872081756592
    4. ' if' → logprob: -4.606872081756592
    5. 'if' → logprob: -5.731872081756592
    6. ' s' → logprob: -8.23187255859375
    7. 'sum' → logprob: -8.48187255859375
    8. ' ' → logprob: -9.48187255859375
    9. '```' → logprob: -9.85687255859375
    10. ' sum' → logprob: -9.85687255859375

Token 28: ' ^=' (ID: 79665)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.07942097634077072
    2. '+=' → logprob: -2.579421043395996
    3. '+' → logprob: -7.579421043395996
    4. ' +' → logprob: -11.954421043395996
    5. ' ' → logprob: -12.704421043395996
    6. '+='' → logprob: -13.204421043395996
    7. '   ' → logprob: -13.579421043395996
    8. ']+=' → logprob: -13.579421043395996
    9. '=' → logprob: -13.704421043395996
    10. '+="' → logprob: -13.829421043395996

Token 29: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.029750484973192215
    2. ' x' → logprob: -3.5297505855560303
    3. ' ' → logprob: -18.27975082397461
    4. '	x' → logprob: -19.27975082397461
    5. '(x' → logprob: -19.52975082397461
    6. ' ' → logprob: -21.40475082397461
    7. '   ' → logprob: -21.40475082397461
    8. '%x' → logprob: -21.65475082397461
    9. ''x' → logprob: -21.90475082397461
    10. ')x' → logprob: -22.02975082397461

Token 30: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.523744523525238
    2. 's' → logprob: -1.7737445831298828
    3. '<|end|>' → logprob: -2.148744583129883
    4. '
' → logprob: -3.898744583129883
    5. ')' → logprob: -4.023744583129883
    6. '\n' → logprob: -4.023744583129883
    7. ' ' → logprob: -4.523744583129883
    8. 'n' → logprob: -4.648744583129883
    9. '\' → logprob: -4.773744583129883
    10. '#' → logprob: -5.023744583129883

Token 31: 'blu' (ID: 125889)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.035800572484731674
    2. 'if' → logprob: -4.035800457000732
    3. '
' → logprob: -4.160800457000732
    4. 's' → logprob: -7.035800457000732
    5. ' 
' → logprob: -8.28580093383789
    6. ' if' → logprob: -8.78580093383789
    7. '<|end|>' → logprob: -8.78580093383789
    8. '  
' → logprob: -9.41080093383789
    9. '\n' → logprob: -9.41080093383789
    10. ' print' → logprob: -9.78580093383789

Token 32: ' =' (ID: 314)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.010501679964363575
    2. 'etooth' → logprob: -5.635501861572266
    3. 'print' → logprob: -6.010501861572266
    4. 'eb' → logprob: -6.260501861572266
    5. 'es' → logprob: -7.635501861572266
    6. 'r' → logprob: -8.010501861572266
    7. 'et' → logprob: -8.635501861572266
    8. 'ep' → logprob: -8.635501861572266
    9. 's' → logprob: -9.010501861572266
    10. 'eh' → logprob: -9.135501861572266

Token 33: ' set' (ID: 920)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.027964703738689423
    2. '0' → logprob: -4.1529645919799805
    3. ' sums' → logprob: -4.7779645919799805
    4. '1' → logprob: -7.6529645919799805
    5. ' ' → logprob: -7.7779645919799805
    6. '[' → logprob: -7.9029645919799805
    7. 'sum' → logprob: -8.02796459197998
    8. ' s' → logprob: -8.15296459197998
    9. '(s' → logprob: -8.65296459197998
    10. 'a' → logprob: -8.65296459197998

Token 34: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004677542019635439
    2. '(a' → logprob: -6.004677772521973
    3. '(' → logprob: -6.504677772521973
    4. '([]' → logprob: -8.129677772521973
    5. '([' → logprob: -8.754677772521973
    6. '()
' → logprob: -9.629677772521973
    7. '(range' → logprob: -10.379677772521973
    8. ' ()' → logprob: -10.754677772521973
    9. '()

' → logprob: -11.004677772521973
    10. 'a' → logprob: -11.004677772521973

Token 35: 'remain' (ID: 186441)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01649528555572033
    2. ' for' → logprob: -4.266495227813721
    3. 's' → logprob: -6.641495227813721
    4. '<|end|>' → logprob: -8.266495704650879
    5. 'blu' → logprob: -9.266495704650879
    6. '=' → logprob: -9.266495704650879
    7. 'a' → logprob: -9.641495704650879
    8. 'b' → logprob: -10.016495704650879
    9. 'if' → logprob: -10.141495704650879
    10. '```' → logprob: -10.266495704650879

Token 36: ' =' (ID: 314)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.0885966345667839
    2. ' =' → logprob: -2.8385965824127197
    3. 's' → logprob: -4.213596820831299
    4. '=' → logprob: -4.713596820831299
    5. 'a' → logprob: -6.213596820831299
    6. '_' → logprob: -9.33859634399414
    7. 'ings' → logprob: -9.33859634399414
    8. 'ining' → logprob: -9.83859634399414
    9. 'aining' → logprob: -9.96359634399414
    10. 'in' → logprob: -9.96359634399414

Token 37: ' set' (ID: 920)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.945587158203125
    2. ' sums' → logprob: -1.070587158203125
    3. ' n' → logprob: -2.070587158203125
    4. ' set' → logprob: -2.945587158203125
    5. 'n' → logprob: -3.445587158203125
    6. ' s' → logprob: -3.820587158203125
    7. 'set' → logprob: -4.320587158203125
    8. '{' → logprob: -5.445587158203125
    9. ' ' → logprob: -5.570587158203125
    10. ' a' → logprob: -5.695587158203125

Token 38: '(range' (ID: 50017)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.021667785942554474
    2. '(a' → logprob: -4.021667957305908
    3. '(' → logprob: -5.771667957305908
    4. '()
' → logprob: -8.77166748046875
    5. '(range' → logprob: -9.52166748046875
    6. '(s' → logprob: -9.64666748046875
    7. 'a' → logprob: -10.52166748046875
    8. '()

' → logprob: -11.52166748046875
    9. ' ()' → logprob: -11.64666748046875
    10. '()\' → logprob: -12.14666748046875

Token 39: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.31364160776138306
    2. '(' → logprob: -1.3136415481567383
    3. '(s' → logprob: -7.938641548156738
    4. '(len' → logprob: -10.938641548156738
    5. 's' → logprob: -13.563641548156738
    6. 'n' → logprob: -13.813641548156738
    7. '(N' → logprob: -14.688641548156738
    8. ' (' → logprob: -14.688641548156738
    9. '((' → logprob: -15.063641548156738
    10. '(l' → logprob: -15.563641548156738

Token 40: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00032402228680439293
    2. ')' → logprob: -8.750324249267578
    3. ' ))' → logprob: -9.375324249267578
    4. '))
' → logprob: -9.875324249267578
    5. ')))' → logprob: -10.750324249267578
    6. '))

' → logprob: -12.750324249267578
    7. '),' → logprob: -14.125324249267578
    8. ',' → logprob: -14.375324249267578
    9. ' -' → logprob: -14.625324249267578
    10. '()))' → logprob: -14.750324249267578

Token 41: 'for' (ID: 1938)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 42: ' i' (ID: 575)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4341360330581665
    2. ' x' → logprob: -1.8091360330581665
    3. 'i' → logprob: -2.059135913848877
    4. ' i' → logprob: -2.809135913848877
    5. ' ' → logprob: -9.434136390686035
    6. '_' → logprob: -9.559136390686035
    7. 'v' → logprob: -9.559136390686035
    8. ' v' → logprob: -10.059136390686035
    9. '_x' → logprob: -10.309136390686035
    10. 'idx' → logprob: -10.434136390686035

Token 43: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.29068708419799805
    2. 'in' → logprob: -1.415687084197998
    3. 'n' → logprob: -4.790687084197998
    4. ' ' → logprob: -7.540687084197998
    5. ',' → logprob: -7.790687084197998
    6. ' n' → logprob: -9.165687561035156
    7. '  ' → logprob: -10.415687561035156
    8. '	in' → logprob: -10.665687561035156
    9. '   ' → logprob: -11.290687561035156
    10. 's' → logprob: -11.915687561035156

Token 44: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.005644824355840683
    2. ' remain' → logprob: -5.255644798278809
    3. 'range' → logprob: -8.505644798278809
    4. 'remain' → logprob: -9.130644798278809
    5. ' ' → logprob: -10.505644798278809
    6. ' a' → logprob: -10.630644798278809
    7. '	range' → logprob: -11.005644798278809
    8. '(range' → logprob: -11.505644798278809
    9. ' xrange' → logprob: -11.630644798278809
    10. '  ' → logprob: -12.380644798278809

Token 45: '(' (ID: 7)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.1269969791173935
    2. '(' → logprob: -2.1269969940185547
    3. '(s' → logprob: -10.126996994018555
    4. '(len' → logprob: -11.501996994018555
    5. 'n' → logprob: -11.876996994018555
    6. ' (' → logprob: -12.001996994018555
    7. ' n' → logprob: -12.626996994018555
    8. 's' → logprob: -14.501996994018555
    9. ' ' → logprob: -15.001996994018555
    10. '1' → logprob: -15.376996994018555

Token 46: '60' (ID: 1910)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0020903039257973433
    2. '1' → logprob: -6.2520904541015625
    3. ' n' → logprob: -10.002090454101562
    4. '0' → logprob: -10.877090454101562
    5. 'len' → logprob: -10.877090454101562
    6. ')' → logprob: -11.127090454101562
    7. '2' → logprob: -11.127090454101562
    8. 's' → logprob: -11.377090454101562
    9. '(n' → logprob: -11.502090454101562
    10. '3' → logprob: -12.627090454101562

Token 47: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004022357054054737
    2. ' ):' → logprob: -6.129022121429443
    3. ')' → logprob: -6.379022121429443
    4. '):
' → logprob: -9.004022598266602
    5. ' )' → logprob: -11.879022598266602
    6. ':' → logprob: -12.254022598266602
    7. '+' → logprob: -13.629022598266602
    8. ',' → logprob: -14.129022598266602
    9. '):
' → logprob: -15.004022598266602
    10. ' ):
' → logprob: -15.129022598266602

Token 48: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0009130131802521646
    2. ' -' → logprob: -7.000913143157959
    3. '0' → logprob: -14.0009126663208
    4. '1' → logprob: -15.1259126663208
    5. ' ' → logprob: -15.5009126663208
    6. '19' → logprob: -17.375913619995117
    7. '17' → logprob: -18.000913619995117
    8. '32' → logprob: -18.125913619995117
    9. '   ' → logprob: -18.250913619995117
    10. '2' → logprob: -18.250913619995117

Token 49: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.636475493200123e-05
    2. ' ' → logprob: -9.500076293945312
    3. '-' → logprob: -14.875076293945312
    4. '=' → logprob: -15.125076293945312
    5. ' -' → logprob: -15.937576293945312
    6. '```' → logprob: -15.937576293945312
    7. '2' → logprob: -16.375076293945312
    8. '   ' → logprob: -16.437576293945312
    9. '１' → logprob: -17.187576293945312
    10. '  ' → logprob: -17.187576293945312

Token 50: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004126603715121746
    2. '-' → logprob: -6.00412654876709
    3. ',-' → logprob: -6.75412654876709
    4. ' ,' → logprob: -7.75412654876709
    5. ' -' → logprob: -10.12912654876709
    6. ' ,-' → logprob: -12.12912654876709
    7. '):' → logprob: -12.50412654876709
    8. ')' → logprob: -13.00412654876709
    9. ' ' → logprob: -13.25412654876709
    10. '```' → logprob: -14.50412654876709

Token 51: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2519901394844055
    2. '-' → logprob: -1.5019900798797607
    3. ' ' → logprob: -9.75199031829834
    4. '1' → logprob: -13.75199031829834
    5. ')' → logprob: -14.37699031829834
    6. '```' → logprob: -14.62699031829834
    7. '  ' → logprob: -15.75199031829834
    8. ' )' → logprob: -16.376989364624023
    9. '<|end|>' → logprob: -16.501989364624023
    10. '0' → logprob: -16.501989364624023

Token 52: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '2' → logprob: -17.000085830688477
    4. '  ' → logprob: -17.500085830688477
    5. '   ' → logprob: -17.750085830688477
    6. ')' → logprob: -18.500085830688477
    7. '```' → logprob: -18.500085830688477
    8. '-' → logprob: -19.000085830688477
    9. '0' → logprob: -19.500085830688477
    10. '１' → logprob: -20.312585830688477

Token 53: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20270594954490662
    2. ' ):' → logprob: -1.702705979347229
    3. ':' → logprob: -7.9527058601379395
    4. '):
' → logprob: -8.077706336975098
    5. ' :' → logprob: -8.577706336975098
    6. ' ):
' → logprob: -8.952706336975098
    7. ')' → logprob: -9.077706336975098
    8. ' )' → logprob: -9.202706336975098
    9. '-' → logprob: -9.702706336975098
    10. '):
' → logprob: -11.327706336975098

Token 54: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3646908402442932
    2. '   ' → logprob: -1.6146907806396484
    3. '<|end|>' → logprob: -2.6146907806396484
    4. ' if' → logprob: -4.114690780639648
    5. ' 
' → logprob: -4.989690780639648
    6. '    ' → logprob: -4.989690780639648
    7. ' ' → logprob: -6.614690780639648
    8. '    
' → logprob: -7.489690780639648
    9. '  ' → logprob: -7.739690780639648
    10. '
' → logprob: -8.739690780639648

Token 55: ' if' (ID: 538)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.6342190504074097
    2. 'bit' → logprob: -1.6342190504074097
    3. 'found' → logprob: -1.8842190504074097
    4. 'for' → logprob: -3.259219169616699
    5. 'cur' → logprob: -3.759219169616699
    6. 'ms' → logprob: -4.759219169616699
    7. 'pivot' → logprob: -4.759219169616699
    8. 'm' → logprob: -5.134219169616699
    9. ' mask' → logprob: -5.509219169616699
    10. 'p' → logprob: -5.634219169616699

Token 56: ' ((' (ID: 3536)
  Prédit: ' sums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sums' → logprob: -0.7359491586685181
    2. 's' → logprob: -1.860949158668518
    3. ' (' → logprob: -2.2359490394592285
    4. '(s' → logprob: -2.3609490394592285
    5. '(i' → logprob: -2.3609490394592285
    6. ' any' → logprob: -3.7359490394592285
    7. '((' → logprob: -4.6109490394592285
    8. '(any' → logprob: -4.8609490394592285
    9. 'any' → logprob: -5.3609490394592285
    10. '(sum' → logprob: -5.4859490394592285

Token 57: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.038262493908405304
    2. ' sums' → logprob: -3.2882626056671143
    3. '(s' → logprob: -8.913262367248535
    4. 'sum' → logprob: -10.788262367248535
    5. ')' → logprob: -11.163262367248535
    6. ' (' → logprob: -11.288262367248535
    7. '   ' → logprob: -11.913262367248535
    8. ' ' → logprob: -12.163262367248535
    9. '(' → logprob: -12.288262367248535
    10. ')s' → logprob: -12.413262367248535

Token 58: 'ums' (ID: 6162)
  Prédit: 'ums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ums' → logprob: -0.11408631503582001
    2. 's' → logprob: -2.239086389541626
    3. 'ms' → logprob: -7.614086151123047
    4. ')' → logprob: -7.989086151123047
    5. 'um' → logprob: -9.739086151123047
    6. ' sums' → logprob: -10.239086151123047
    7. 'umps' → logprob: -10.489086151123047
    8. '[' → logprob: -10.614086151123047
    9. '>' → logprob: -10.739086151123047
    10. '   ' → logprob: -10.739086151123047

Token 59: ' >>' (ID: 6832)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.012300072237849236
    2. ' >>' → logprob: -4.63730001449585
    3. ' &' → logprob: -6.13730001449585
    4. '&' → logprob: -8.262300491333008
    5. ')' → logprob: -9.387300491333008
    6. '>>&' → logprob: -11.637300491333008
    7. '>>>' → logprob: -11.637300491333008
    8. '&gt' → logprob: -12.137300491333008
    9. ' ' → logprob: -12.637300491333008
    10. ' ' → logprob: -13.012300491333008

Token 60: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0004306692280806601
    2. ' i' → logprob: -7.750430583953857
    3. ')' → logprob: -17.750431060791016
    4. ')i' → logprob: -17.750431060791016
    5. '	i' → logprob: -17.875431060791016
    6. ' ' → logprob: -19.875431060791016
    7. '   ' → logprob: -19.875431060791016
    8. '_i' → logprob: -21.000431060791016
    9. '<|end|>' → logprob: -21.000431060791016
    10. '%i' → logprob: -21.125431060791016

Token 61: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018732868193183094
    2. ')&' → logprob: -9.125186920166016
    3. ' )' → logprob: -9.750186920166016
    4. '1' → logprob: -11.250186920166016
    5. '`)' → logprob: -12.750186920166016
    6. '')' → logprob: -13.750186920166016
    7. '&' → logprob: -13.875186920166016
    8. '")' → logprob: -14.000186920166016
    9. '0' → logprob: -14.250186920166016
    10. '）' → logprob: -15.375186920166016

Token 62: ' &' (ID: 827)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004265135154128075
    2. ')&' → logprob: -5.879265308380127
    3. '&' → logprob: -7.129265308380127
    4. ' )' → logprob: -7.379265308380127
    5. ' &' → logprob: -10.754264831542969
    6. '1' → logprob: -12.004264831542969
    7. '&)' → logprob: -12.754264831542969
    8. '&amp' → logprob: -13.754264831542969
    9. '0' → logprob: -14.129264831542969
    10. '`)' → logprob: -14.629264831542969

Token 63: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22541917860507965
    2. ' ' → logprob: -1.6004191637039185
    3. '   ' → logprob: -12.850419044494629
    4. ')' → logprob: -13.100419044494629
    5. '0' → logprob: -15.162919044494629
    6. '```' → logprob: -15.412919044494629
    7. '  ' → logprob: -15.537919044494629
    8. ' ' → logprob: -15.662919044494629
    9. '`' → logprob: -16.100419998168945
    10. '	' → logprob: -16.850419998168945

Token 64: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2007883671903983e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -15.812521934509277
    4. ')' → logprob: -15.875021934509277
    5. '```' → logprob: -16.500022888183594
    6. '`' → logprob: -16.937522888183594
    7. '{' → logprob: -18.125022888183594
    8. '``' → logprob: -18.312522888183594
    9. '１' → logprob: -18.437522888183594
    10. '0' → logprob: -18.625022888183594

Token 65: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004142861347645521
    2. '):' → logprob: -5.629142761230469
    3. ' )' → logprob: -7.879142761230469
    4. ')==' → logprob: -8.879142761230469
    5. '):
' → logprob: -11.379142761230469
    6. ' ):' → logprob: -11.629142761230469
    7. ':' → logprob: -13.504142761230469
    8. ')>' → logprob: -13.504142761230469
    9. '):

' → logprob: -14.754142761230469
    10. ')!=' → logprob: -14.879142761230469

Token 66: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4839366376399994
    2. ':' → logprob: -1.7339366674423218
    3. ')' → logprob: -2.1089365482330322
    4. '==' → logprob: -2.9839365482330322
    5. '):' → logprob: -4.108936786651611
    6. ' :' → logprob: -4.983936786651611
    7. ')==' → logprob: -4.983936786651611
    8. ' ):' → logprob: -6.108936786651611
    9. ' )' → logprob: -6.858936786651611
    10. '):
' → logprob: -7.608936786651611

Token 67: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4459116756916046
    2. ' ' → logprob: -1.0709116458892822
    3. '0' → logprob: -4.070911884307861
    4. '>' → logprob: -14.320911407470703
    5. ' ' → logprob: -14.445911407470703
    6. '=' → logprob: -15.070911407470703
    7. '۱' → logprob: -16.758411407470703
    8. ':' → logprob: -17.070911407470703
    9. '<|end|>' → logprob: -17.195911407470703
    10. '```' → logprob: -17.445911407470703

Token 68: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1435711681842804
    2. '0' → logprob: -2.018571138381958
    3. ' ' → logprob: -7.018571376800537
    4. '   ' → logprob: -16.143571853637695
    5. '>' → logprob: -16.331071853637695
    6. '```' → logprob: -16.706071853637695
    7. '=' → logprob: -17.393571853637695
    8. '01' → logprob: -17.456071853637695
    9. '۱' → logprob: -17.706071853637695
    10. '`' → logprob: -17.706071853637695

Token 69: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006730287801474333
    2. ':
' → logprob: -5.256730079650879
    3. '   ' → logprob: -7.506730079650879
    4. '       ' → logprob: -7.631730079650879
    5. ' :' → logprob: -7.881730079650879
    6. ' :
' → logprob: -10.006730079650879
    7. '):' → logprob: -11.881730079650879
    8. ' continue' → logprob: -12.006730079650879
    9. '    ' → logprob: -12.506730079650879
    10. ' ' → logprob: -12.631730079650879

Token 70: '       ' (ID: 309)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.4841129779815674
    2. '       ' → logprob: -1.2341129779815674
    3. '   ' → logprob: -2.4841129779815674
    4. 'continue' → logprob: -5.609112739562988
    5. '	continue' → logprob: -5.984112739562988
    6. ' ' → logprob: -6.984112739562988
    7. ' remain' → logprob: -7.109112739562988
    8. '
' → logprob: -8.234112739562988
    9. '   ' → logprob: -8.484112739562988
    10. ' ' → logprob: -8.734112739562988

Token 71: ' di' (ID: 1320)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.07474774122238159
    2. '       ' → logprob: -3.3247478008270264
    3. '   ' → logprob: -3.8247478008270264
    4. '	continue' → logprob: -4.824747562408447
    5. 'continue' → logprob: -5.324747562408447
    6. ' remain' → logprob: -7.449747562408447
    7. ' ' → logprob: -7.699747562408447
    8. ' ' → logprob: -9.324748039245605
    9. '    ' → logprob: -10.324748039245605
    10. '   ' → logprob: -10.574748039245605

Token 72: ' =' (ID: 314)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.0661838054656982
    2. 'ct' → logprob: -1.1911838054656982
    3. '   ' → logprob: -1.9411838054656982
    4. 'v' → logprob: -3.0661838054656982
    5. 's' → logprob: -3.6911838054656982
    6. 'ff' → logprob: -3.6911838054656982
    7. 'vide' → logprob: -4.066184043884277
    8. ' ' → logprob: -4.316184043884277
    9. '  ' → logprob: -4.816184043884277
    10. 'l' → logprob: -5.066184043884277

Token 73: ' -' (ID: 533)
  Prédit: 'remain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'remain' → logprob: -0.6719427704811096
    2. ' remain' → logprob: -0.9219427704811096
    3. 'set' → logprob: -3.671942710876465
    4. '{' → logprob: -3.671942710876465
    5. '{}' → logprob: -4.046942710876465
    6. ' set' → logprob: -4.421942710876465
    7. '[]' → logprob: -5.421942710876465
    8. ' {' → logprob: -7.171942710876465
    9. ' []' → logprob: -7.609442710876465
    10. '0' → logprob: -7.671942710876465

Token 74: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.79811754100956e-05
    2. 'i' → logprob: -11.000038146972656
    3. '2' → logprob: -11.250038146972656
    4. ' ' → logprob: -12.500038146972656
    5. 'n' → logprob: -13.500038146972656
    6. '-' → logprob: -13.875038146972656
    7. '10' → logprob: -14.250038146972656
    8. '100' → logprob: -15.500038146972656
    9. '(i' → logprob: -15.750038146972656
    10. '   ' → logprob: -16.062538146972656

Token 75: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3570755124092102
    2. '<|end|>' → logprob: -1.2320754528045654
    3. '
' → logprob: -5.8570756912231445
    4. ' ' → logprob: -5.9820756912231445
    5. '<|end|>' → logprob: -6.9820756912231445
    6. '   ' → logprob: -7.6070756912231445
    7. '        
' → logprob: -7.9820756912231445
    8. '	' → logprob: -8.107075691223145
    9. '	continue' → logprob: -8.732075691223145
    10. ' for' → logprob: -8.857075691223145

Token 76: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 77: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4765968918800354
    2. 'for' (adapté à ' for') → logprob: -0.9765968918800354
    3. ' continue' → logprob: -6.851596832275391
    4. 'continue' → logprob: -7.101596832275391
    5. '   ' → logprob: -8.10159683227539
    6. '       ' → logprob: -8.97659683227539
    7. ' ' → logprob: -9.97659683227539
    8. 'while' → logprob: -9.97659683227539
    9. '	for' → logprob: -10.10159683227539
    10. ' while' → logprob: -10.72659683227539

Token 78: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.11511286348104477
    2. 'idx' → logprob: -2.740112781524658
    3. 'x' → logprob: -4.365112781524658
    4. 'r' → logprob: -4.615112781524658
    5. 'v' → logprob: -4.990112781524658
    6. ' j' → logprob: -5.490112781524658
    7. 'k' → logprob: -6.240112781524658
    8. 'e' → logprob: -6.615112781524658
    9. 'pos' → logprob: -6.990112781524658
    10. 'u' → logprob: -6.990112781524658

Token 79: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07892041653394699
    2. 'in' → logprob: -2.578920364379883
    3. ' ' → logprob: -10.578920364379883
    4. '   ' → logprob: -13.453920364379883
    5. '  ' → logprob: -13.703920364379883
    6. '	in' → logprob: -14.078920364379883
    7. 'n' → logprob: -14.953920364379883
    8. ',' → logprob: -15.078920364379883
    9. '    ' → logprob: -15.328920364379883
    10. 'not' → logprob: -15.703920364379883

Token 80: ' remain' (ID: 12760)
  Prédit: 'remain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remain' → logprob: -0.5766972303390503
    2. ' remain' → logprob: -0.8266972303390503
    3. ' range' → logprob: -8.32669734954834
    4. ' list' → logprob: -8.57669734954834
    5. 'range' → logprob: -9.07669734954834
    6. 'list' → logprob: -9.20169734954834
    7. 'rem' → logprob: -10.07669734954834
    8. 'sorted' → logprob: -10.95169734954834
    9. ' ' → logprob: -11.20169734954834
    10. ' sorted' → logprob: -11.32669734954834

Token 81: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07914071530103683
    2. ':
' → logprob: -2.5791406631469727
    3. ':
' → logprob: -9.204140663146973
    4. ':

' → logprob: -10.329140663146973
    5. '):
' → logprob: -10.579140663146973
    6. ' if' → logprob: -11.079140663146973
    7. '       ' → logprob: -11.204140663146973
    8. '           ' → logprob: -11.579140663146973
    9. '):' → logprob: -11.579140663146973
    10. ' in' → logprob: -11.704140663146973

Token 82: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22811858355998993
    2. '           ' → logprob: -2.103118658065796
    3. ':
' → logprob: -2.603118658065796
    4. '<|end|>' → logprob: -5.353118419647217
    5. ' if' → logprob: -7.228118419647217
    6. '<|end|>' → logprob: -7.353118419647217
    7. ' :' → logprob: -7.478118419647217
    8. ' :
' → logprob: -8.228118896484375
    9. ' and' → logprob: -8.353118896484375
    10. ',' → logprob: -8.603118896484375

Token 83: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.503831148147583
    2. ' if' → logprob: -1.003831148147583
    3. '               ' → logprob: -3.753831148147583
    4. '           ' → logprob: -5.378830909729004
    5. ' and' → logprob: -7.628830909729004
    6. '```' → logprob: -8.003830909729004
    7. ' ' → logprob: -9.003830909729004
    8. ':' → logprob: -10.128830909729004
    9. '<|end|>' → logprob: -10.378830909729004
    10. 'and' → logprob: -10.503830909729004

Token 84: ' ((' (ID: 3536)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.4964923560619354
    2. ' ((' → logprob: -1.6214923858642578
    3. ' (' → logprob: -1.8714923858642578
    4. '(a' → logprob: -3.246492385864258
    5. '(x' → logprob: -8.121492385864258
    6. '(len' → logprob: -8.746492385864258
    7. '(' → logprob: -9.121492385864258
    8. '(((' → logprob: -9.246492385864258
    9. '   ' → logprob: -9.246492385864258
    10. ' ' → logprob: -9.496492385864258

Token 85: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00041732576210051775
    2. ' a' → logprob: -8.500417709350586
    3. '(a' → logprob: -8.500417709350586
    4. '	a' → logprob: -12.875417709350586
    5. ' (' → logprob: -13.500417709350586
    6. ')a' → logprob: -13.625417709350586
    7. '   ' → logprob: -14.125417709350586
    8. '(' → logprob: -14.375417709350586
    9. ')' → logprob: -14.750417709350586
    10. 'x' → logprob: -14.750417709350586

Token 86: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.6240566083070007e-06
    2. '[' → logprob: -14.000001907348633
    3. 'j' → logprob: -14.250001907348633
    4. '[i' → logprob: -17.625001907348633
    5. ' [' → logprob: -17.750001907348633
    6. '```' → logprob: -18.000001907348633
    7. '[a' → logprob: -18.375001907348633
    8. '[
' → logprob: -19.000001907348633
    9. '[q' → logprob: -19.000001907348633
    10. '   ' → logprob: -19.125001907348633

Token 87: ']' (ID: 60)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.06244107335805893
    2. ' >>' → logprob: -2.812441110610962
    3. ')' → logprob: -8.312440872192383
    4. ' ' → logprob: -9.562440872192383
    5. ']' → logprob: -9.812440872192383
    6. ')>>' → logprob: -10.562440872192383
    7. '>' → logprob: -10.687440872192383
    8. '}' → logprob: -11.062440872192383
    9. ' ' → logprob: -11.312440872192383
    10. '`' → logprob: -11.812440872192383

Token 88: ' >>' (ID: 6832)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.048627790063619614
    2. ' >>' → logprob: -3.0486278533935547
    3. ')' → logprob: -11.048627853393555
    4. ' ' → logprob: -11.673627853393555
    5. ')>>' → logprob: -11.923627853393555
    6. ' ' → logprob: -12.298627853393555
    7. '>' → logprob: -13.048627853393555
    8. '`' → logprob: -14.798627853393555
    9. '```' → logprob: -15.048627853393555
    10. '>>>' → logprob: -15.048627853393555

Token 89: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.009765418246388435
    2. ' i' → logprob: -4.634765625
    3. ')' → logprob: -12.509765625
    4. '   ' → logprob: -13.259765625
    5. ')i' → logprob: -13.384765625
    6. '	i' → logprob: -13.634765625
    7. ' ' → logprob: -13.884765625
    8. '<|end|>' → logprob: -15.759765625
    9. '  ' → logprob: -16.634765625
    10. '```' → logprob: -17.134765625

Token 90: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00037609596620313823
    2. ')&' → logprob: -8.125375747680664
    3. ' )' → logprob: -9.500375747680664
    4. '&' → logprob: -13.875375747680664
    5. '&)' → logprob: -14.500375747680664
    6. '       ' → logprob: -14.625375747680664
    7. '))' → logprob: -14.625375747680664
    8. '           ' → logprob: -14.750375747680664
    9. '   ' → logprob: -14.750375747680664
    10. '1' → logprob: -15.125375747680664

Token 91: ' &' (ID: 827)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004107732092961669
    2. ')&' → logprob: -8.000411033630371
    3. ' )' → logprob: -9.625411033630371
    4. '&' → logprob: -11.750411033630371
    5. '&)' → logprob: -14.875411033630371
    6. ' &' → logprob: -15.625411033630371
    7. ')>' → logprob: -15.875411033630371
    8. '）' → logprob: -16.000410079956055
    9. 'and' → logprob: -16.500410079956055
    10. '   ' → logprob: -16.500410079956055

Token 92: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013354785041883588
    2. ' ' → logprob: -6.626335620880127
    3. ')' → logprob: -12.376335144042969
    4. '   ' → logprob: -12.626335144042969
    5. '           ' → logprob: -14.376335144042969
    6. '```' → logprob: -15.501335144042969
    7. '                   ' → logprob: -15.751335144042969
    8. '>' → logprob: -16.00133514404297
    9. '  ' → logprob: -16.18883514404297
    10. '
' → logprob: -16.18883514404297

Token 93: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.313314952421933e-05
    2. ' ' → logprob: -9.750062942504883
    3. '   ' → logprob: -13.125062942504883
    4. '0' → logprob: -13.875062942504883
    5. ')' → logprob: -14.500062942504883
    6. '           ' → logprob: -14.750062942504883
    7. '                   ' → logprob: -16.062562942504883
    8. '               ' → logprob: -16.062562942504883
    9. '                           ' → logprob: -16.437562942504883
    10. '  ' → logprob: -16.500062942504883

Token 94: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002394170151092112
    2. ')==' → logprob: -9.000239372253418
    3. ' )' → logprob: -9.625239372253418
    4. '1' → logprob: -10.125239372253418
    5. '):
' → logprob: -12.250239372253418
    6. '):' → logprob: -13.625239372253418
    7. ')!=' → logprob: -14.250239372253418
    8. '')' → logprob: -14.375239372253418
    9. '）' → logprob: -14.500239372253418
    10. '")' → logprob: -14.625239372253418

Token 95: ' ==' (ID: 951)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24913980066776276
    2. '==' → logprob: -2.1241397857666016
    3. '1' → logprob: -2.8741397857666016
    4. ')==' → logprob: -3.3741397857666016
    5. ' ==' → logprob: -5.124139785766602
    6. ':' → logprob: -5.874139785766602
    7. '!=' → logprob: -8.249139785766602
    8. '):
' → logprob: -8.374139785766602
    9. ':
' → logprob: -8.749139785766602
    10. ']==' → logprob: -8.749139785766602

Token 96: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012737659562844783
    2. ' ' → logprob: -9.125127792358398
    3. '   ' → logprob: -11.375127792358398
    4. '           ' → logprob: -13.000127792358398
    5. '0' → logprob: -13.375127792358398
    6. '>' → logprob: -14.000127792358398
    7. '                   ' → logprob: -14.125127792358398
    8. '               ' → logprob: -15.000127792358398
    9. '                           ' → logprob: -15.375127792358398
    10. '       ' → logprob: -15.625127792358398

Token 97: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7252845029579476e-05
    2. ' ' → logprob: -11.250027656555176
    3. '0' → logprob: -11.625027656555176
    4. '   ' → logprob: -12.375027656555176
    5. '           ' → logprob: -15.250027656555176
    6. '>' → logprob: -15.687527656555176
    7. '                   ' → logprob: -16.00002670288086
    8. '                           ' → logprob: -16.62502670288086
    9. '               ' → logprob: -17.00002670288086
    10. '       ' → logprob: -17.18752670288086

Token 98: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2321402132511139
    2. ':' → logprob: -1.6071401834487915
    3. ' and' → logprob: -5.482140064239502
    4. '):
' → logprob: -6.107140064239502
    5. '           ' → logprob: -9.35714054107666
    6. ':
' → logprob: -9.73214054107666
    7. ':

' → logprob: -9.98214054107666
    8. '               ' → logprob: -10.23214054107666
    9. '):' → logprob: -10.60714054107666
    10. ')' → logprob: -10.85714054107666

Token 99: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5318142175674438
    2. ':
' → logprob: -1.6568142175674438
    3. ' di' → logprob: -1.9068142175674438
    4. 'di' → logprob: -3.1568140983581543
    5. '           ' → logprob: -4.281814098358154
    6. ':' → logprob: -4.406814098358154
    7. ' :
' → logprob: -6.531814098358154
    8. '):
' → logprob: -7.031814098358154
    9. ' and' → logprob: -7.156814098358154
    10. ' :' → logprob: -8.156814575195312

Token 100: ' di' (ID: 1320)
  Prédit: 'di'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'di' (adapté à ' di') → logprob: -0.6356770396232605
    2. ' di' → logprob: -0.7606770396232605
    3. '           ' → logprob: -6.635676860809326
    4. '               ' → logprob: -7.260676860809326
    5. ' ' → logprob: -7.635676860809326
    6. '
' → logprob: -8.760677337646484
    7. '   ' → logprob: -9.260677337646484
    8. '                   ' → logprob: -9.260677337646484
    9. 'd' → logprob: -9.760677337646484
    10. '  ' → logprob: -10.260677337646484

Token 101: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06196993216872215
    2. '=' → logprob: -2.8119699954986572
    3. ' ' → logprob: -14.061969757080078
    4. '                ' → logprob: -14.936969757080078
    5. '               ' → logprob: -14.936969757080078
    6. '<|end|>' → logprob: -15.311969757080078
    7. '                   ' → logprob: -15.686969757080078
    8. 's' → logprob: -16.811969757080078
    9. ',' → logprob: -17.061969757080078
    10. ':' → logprob: -17.186969757080078

Token 102: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0380416102707386
    2. ' j' → logprob: -3.288041591644287
    3. ' ' → logprob: -16.663042068481445
    4. '	j' → logprob: -17.163042068481445
    5. '$j' → logprob: -18.038042068481445
    6. '   ' → logprob: -18.288042068481445
    7. ' ' → logprob: -19.038042068481445
    8. '[j' → logprob: -19.413042068481445
    9. '```' → logprob: -19.413042068481445
    10. '_j' → logprob: -19.788042068481445

Token 103: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004425012972205877
    2. '       ' → logprob: -5.629425048828125
    3. '<|end|>' → logprob: -7.754425048828125
    4. '
' → logprob: -8.879425048828125
    5. ' break' → logprob: -9.254425048828125
    6. '           ' → logprob: -10.129425048828125
    7. '		       ' → logprob: -10.254425048828125
    8. '                
' → logprob: -11.379425048828125
    9. '			' → logprob: -11.754425048828125
    10. '<|end|>' → logprob: -11.754425048828125

Token 104: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00612383708357811
    2. '       ' → logprob: -5.256124019622803
    3. ' break' → logprob: -7.381124019622803
    4. '
' → logprob: -8.756123542785645
    5. '	break' → logprob: -10.881123542785645
    6. '                
' → logprob: -11.381123542785645
    7. '           ' → logprob: -11.381123542785645
    8. '        
' → logprob: -11.506123542785645
    9. ' if' → logprob: -11.631123542785645
    10. 'break' → logprob: -11.756123542785645

Token 105: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.4632734954357147
    2. ' break' → logprob: -1.213273525238037
    3. '               ' → logprob: -2.963273525238037
    4. 'remain' → logprob: -4.088273525238037
    5. ' remain' → logprob: -5.713273525238037
    6. '       ' → logprob: -6.588273525238037
    7. 'continue' → logprob: -9.338273048400879
    8. ' ' → logprob: -9.588273048400879
    9. '	break' → logprob: -9.588273048400879
    10. '           ' → logprob: -9.963273048400879

Token 106: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024535416159778833
    2. ' if' → logprob: -6.627453327178955
    3. 'if' → logprob: -7.502453327178955
    4. '
' → logprob: -7.877453327178955
    5. '        
' → logprob: -9.252453804016113
    6. '<|end|>' → logprob: -10.377453804016113
    7. '
' → logprob: -11.252453804016113
    8. ' remain' → logprob: -11.252453804016113
    9. 'remain' → logprob: -11.627453804016113
    10. '                
' → logprob: -12.252453804016113

Token 107: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018333015963435173
    2. '
' → logprob: -5.0183329582214355
    3. '<|end|>' → logprob: -5.1433329582214355
    4. ' if' → logprob: -5.3933329582214355
    5. 'if' → logprob: -7.5183329582214355
    6. '        
' → logprob: -9.018333435058594
    7. '```' → logprob: -9.018333435058594
    8. '   ' → logprob: -10.268333435058594
    9. '' → logprob: -10.268333435058594
    10. '               ' → logprob: -10.393333435058594

Token 108: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3212713897228241
    2. 'if' (adapté à ' if') → logprob: -2.0712714195251465
    3. ' if' → logprob: -2.0712714195251465
    4. ' remain' → logprob: -4.4462714195251465
    5. 'remain' → logprob: -4.5712714195251465
    6. '
' → logprob: -7.8212714195251465
    7. '   ' → logprob: -9.821270942687988
    8. '           ' → logprob: -10.196270942687988
    9. '        
' → logprob: -10.321270942687988
    10. 'continue' → logprob: -10.446270942687988

Token 109: ' di' (ID: 1320)
  Prédit: ' di'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' di' → logprob: -0.0031356513500213623
    2. 'di' → logprob: -5.878135681152344
    3. '           ' → logprob: -8.378135681152344
    4. '       ' → logprob: -10.128135681152344
    5. '   ' → logprob: -10.503135681152344
    6. '(di' → logprob: -11.753135681152344
    7. '               ' → logprob: -12.128135681152344
    8. ' ' → logprob: -12.378135681152344
    9. '        ' → logprob: -12.878135681152344
    10. '    ' → logprob: -12.878135681152344

Token 110: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.13675883412361145
    2. '==' → logprob: -2.136758804321289
    3. '==-' → logprob: -5.636758804321289
    4. '=' → logprob: -5.761758804321289
    5. ' !=' → logprob: -6.136758804321289
    6. '!=' → logprob: -7.386758804321289
    7. ')' → logprob: -8.761758804321289
    8. ' =' → logprob: -10.011758804321289
    9. ' ' → logprob: -10.636758804321289
    10. '!=-' → logprob: -10.636758804321289

Token 111: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0009115827269852161
    2. ' -' → logprob: -7.000911712646484
    3. '-j' → logprob: -16.375911712646484
    4. '   ' → logprob: -17.500911712646484
    5. '-d' → logprob: -18.750911712646484
    6. ' ' → logprob: -19.875911712646484
    7. '  ' → logprob: -19.875911712646484
    8. '-n' → logprob: -20.000911712646484
    9. '-i' → logprob: -20.250911712646484
    10. '−' → logprob: -20.375911712646484

Token 112: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.796184723294573e-06
    2. ' ' → logprob: -12.750005722045898
    3. 'di' → logprob: -13.375005722045898
    4. ' di' → logprob: -15.000005722045898
    5. '   ' → logprob: -15.250005722045898
    6. '```' → logprob: -15.500005722045898
    7. '-' → logprob: -16.2500057220459
    8. ',' → logprob: -16.3125057220459
    9. '2' → logprob: -16.6875057220459
    10. ' -' → logprob: -16.9375057220459

Token 113: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.0722123235464096
    2. ':' → logprob: -2.6972122192382812
    3. '           ' → logprob: -6.197212219238281
    4. '):
' → logprob: -9.572212219238281
    5. ':

' → logprob: -9.822212219238281
    6. ',' → logprob: -9.947212219238281
    7. ' :
' → logprob: -10.197212219238281
    8. ' and' → logprob: -11.447212219238281
    9. ':
' → logprob: -12.072212219238281
    10. '():
' → logprob: -12.822212219238281

Token 114: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03336672857403755
    2. ' remain' → logprob: -4.033366680145264
    3. ' di' → logprob: -4.408366680145264
    4. ' continue' → logprob: -7.283366680145264
    5. '
' → logprob: -7.908366680145264
    6. ',' → logprob: -8.283367156982422
    7. 'remain' → logprob: -8.283367156982422
    8. '       ' → logprob: -8.533367156982422
    9. '            
' → logprob: -8.658367156982422
    10. '```' → logprob: -8.783367156982422

Token 115: ' blu' (ID: 55577)
  Prédit: 'blu'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blu' (adapté à ' blu') → logprob: -0.561585009098053
    2. ' remain' → logprob: -1.4365849494934082
    3. ' blu' → logprob: -2.311584949493408
    4. '           ' → logprob: -3.311584949493408
    5. 'remain' → logprob: -3.311584949493408
    6. '       ' → logprob: -5.436584949493408
    7. 'bl' → logprob: -5.561584949493408
    8. '   ' → logprob: -5.686584949493408
    9. ' remains' → logprob: -6.811584949493408
    10. 'di' → logprob: -6.999084949493408

Token 116: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0038829767145216465
    2. '.' → logprob: -5.628882884979248
    3. ' .' → logprob: -8.253883361816406
    4. '.update' → logprob: -11.003883361816406
    5. 'add' → logprob: -13.378883361816406
    6. ' |=' → logprob: -13.628883361816406
    7. ' add' → logprob: -14.253883361816406
    8. '   ' → logprob: -14.253883361816406
    9. ' =' → logprob: -14.503883361816406
    10. '.union' → logprob: -15.503883361816406

Token 117: '(di' (ID: 131744)
  Prédit: '(di'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(di' → logprob: -3.4285862057004124e-05
    2. '(' → logprob: -10.37503433227539
    3. ' (' → logprob: -13.87503433227539
    4. 'di' → logprob: -14.50003433227539
    5. '((' → logprob: -15.12503433227539
    6. '(dis' → logprob: -15.25003433227539
    7. '(i' → logprob: -15.37503433227539
    8. '(d' → logprob: -15.75003433227539
    9. '(a' → logprob: -15.75003433227539
    10. '(diff' → logprob: -15.87503433227539

Token 118: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0040243761613965034
    2. ')' → logprob: -5.629024505615234
    3. '           ' → logprob: -8.129024505615234
    4. ')
' → logprob: -9.004024505615234
    5. ' )
' → logprob: -12.879024505615234
    6. '               ' → logprob: -13.004024505615234
    7. ')

' → logprob: -13.879024505615234
    8. '       ' → logprob: -15.004024505615234
    9. '<|end|>' → logprob: -16.504024505615234
    10. '
' → logprob: -16.629024505615234

Token 119: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07171224057674408
    2. 'remain' → logprob: -3.1967122554779053
    3. ' remain' → logprob: -3.5717122554779053
    4. '               ' → logprob: -10.196712493896484
    5. 'Remain' → logprob: -10.321712493896484
    6. '
' → logprob: -10.571712493896484
    7. 'continue' → logprob: -11.196712493896484
    8. ' ' → logprob: -11.321712493896484
    9. '```' → logprob: -11.321712493896484
    10. '<|end|>' → logprob: -11.446712493896484

Token 120: ' remain' (ID: 12760)
  Prédit: 'remain'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remain' (adapté à ' remain') → logprob: -0.00048715711454860866
    2. '           ' → logprob: -8.125487327575684
    3. ' remain' → logprob: -8.875487327575684
    4. 'for' → logprob: -10.250487327575684
    5. '   ' → logprob: -11.750487327575684
    6. '       ' → logprob: -12.750487327575684
    7. 'rem' → logprob: -13.750487327575684
    8. 'new' → logprob: -13.750487327575684
    9. '               ' → logprob: -13.750487327575684
    10. 's' → logprob: -15.125487327575684

Token 121: '.remove' (ID: 7986)
  Prédit: '.remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remove' → logprob: -0.0023700587917119265
    2. '.' → logprob: -6.2523698806762695
    3. '.dis' → logprob: -7.7523698806762695
    4. 'remove' → logprob: -12.00236988067627
    5. ' .' → logprob: -12.62736988067627
    6. ' -=' → logprob: -14.00236988067627
    7. ' remove' → logprob: -14.75236988067627
    8. '.clear' → logprob: -15.62736988067627
    9. '.Remove' → logprob: -15.87736988067627
    10. '.subtract' → logprob: -16.127370834350586

Token 122: '(di' (ID: 131744)
  Prédit: '(di'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(di' → logprob: -1.0280383548888494e-06
    2. '(rem' → logprob: -14.250000953674316
    3. '(' → logprob: -15.375000953674316
    4. '(dis' → logprob: -16.875001907348633
    5. 'di' → logprob: -17.000001907348633
    6. '(diff' → logprob: -18.625001907348633
    7. '(d' → logprob: -18.750001907348633
    8. '(div' → logprob: -18.750001907348633
    9. ' (' → logprob: -19.125001907348633
    10. '(dic' → logprob: -19.250001907348633

Token 123: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014234612695872784
    2. ')
' → logprob: -4.26423454284668
    3. '<|end|>' → logprob: -9.88923454284668
    4. ')

' → logprob: -11.88923454284668
    5. ')return' → logprob: -12.76423454284668
    6. '<|end|>' → logprob: -13.26423454284668
    7. ')n' → logprob: -13.63923454284668
    8. ')
' → logprob: -13.76423454284668
    9. '       ' → logprob: -13.88923454284668
    10. '           ' → logprob: -13.88923454284668

Token 124: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 125: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0370790958404541
    2. 'xor' → logprob: -4.412078857421875
    3. 'x' → logprob: -4.912078857421875
    4. 'pivot' → logprob: -5.037078857421875
    5. 'mask' → logprob: -5.787078857421875
    6. 'val' → logprob: -6.162078857421875
    7. 'bit' → logprob: -6.537078857421875
    8. 'cur' → logprob: -7.162078857421875
    9. 'target' → logprob: -8.037078857421875
    10. 'to' → logprob: -8.037078857421875

Token 126: ' j' (ID: 441)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.3437023162841797
    2. 'x' → logprob: -1.3437023162841797
    3. 'r' → logprob: -1.4687023162841797
    4. 'j' → logprob: -1.4687023162841797
    5. 'b' → logprob: -5.21870231628418
    6. 'y' → logprob: -5.71870231628418
    7. 'v' → logprob: -6.09370231628418
    8. ' j' → logprob: -6.96870231628418
    9. ' r' → logprob: -7.21870231628418
    10. ' x' → logprob: -7.21870231628418

Token 127: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01485070027410984
    2. 'in' → logprob: -4.264850616455078
    3. 'remain' → logprob: -7.389850616455078
    4. ' remain' → logprob: -9.639850616455078
    5. ' ' → logprob: -13.639850616455078
    6. 's' → logprob: -14.639850616455078
    7. '=' → logprob: -14.639850616455078
    8. 'rem' → logprob: -15.139850616455078
    9. '    ' → logprob: -15.139850616455078
    10. '   ' → logprob: -15.264850616455078

Token 128: ' range' (ID: 3352)
  Prédit: 'remain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'remain' → logprob: -0.12704600393772125
    2. ' remain' → logprob: -2.1270461082458496
    3. 'blu' → logprob: -10.127045631408691
    4. 'rem' → logprob: -10.252045631408691
    5. '   ' → logprob: -11.252045631408691
    6. ' blu' → logprob: -12.002045631408691
    7. 'list' → logprob: -12.127045631408691
    8. ' ' → logprob: -12.627045631408691
    9. '    ' → logprob: -12.752045631408691
    10. '  ' → logprob: -12.877045631408691

Token 129: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0196940116584301
    2. 'n' → logprob: -4.019693851470947
    3. '(j' → logprob: -7.644693851470947
    4. 'di' → logprob: -7.644693851470947
    5. '(len' → logprob: -8.269694328308105
    6. '(i' → logprob: -9.144694328308105
    7. '(' → logprob: -9.269694328308105
    8. 'j' → logprob: -9.894694328308105
    9. '(di' → logprob: -10.019694328308105
    10. ' n' → logprob: -11.519694328308105

Token 130: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.005210397765040398
    2. '):' → logprob: -5.6302103996276855
    3. ':
' → logprob: -7.3802103996276855
    4. '           ' → logprob: -7.5052103996276855
    5. '       ' → logprob: -9.005209922790527
    6. '               ' → logprob: -9.380209922790527
    7. ':' → logprob: -9.505209922790527
    8. '   ' → logprob: -9.880209922790527
    9. '():
' → logprob: -10.130209922790527
    10. '):
' → logprob: -10.755209922790527

Token 131: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1009741947054863
    2. ' if' → logprob: -2.4759740829467773
    3. 'if' → logprob: -4.725974082946777
    4. '<|end|>' → logprob: -6.350974082946777
    5. '```' → logprob: -7.725974082946777
    6. '           ' → logprob: -8.100974082946777
    7. ' ' → logprob: -9.100974082946777
    8. ',' → logprob: -9.600974082946777
    9. ':
' → logprob: -9.725974082946777
    10. '   ' → logprob: -9.725974082946777

Token 132: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5823660492897034
    2. ' if' → logprob: -0.8323660492897034
    3. '               ' → logprob: -5.207365989685059
    4. '   ' → logprob: -7.457365989685059
    5. ' ' → logprob: -8.832365989685059
    6. '                   ' → logprob: -9.082365989685059
    7. '           ' → logprob: -9.707365989685059
    8. '	if' → logprob: -11.207365989685059
    9. '```' → logprob: -11.457365989685059
    10. '       ' → logprob: -13.207365989685059

Token 133: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.07037729769945145
    2. ' j' → logprob: -2.6953773498535156
    3. '                   ' → logprob: -8.820377349853516
    4. '   ' → logprob: -8.945377349853516
    5. ' ' → logprob: -10.320377349853516
    6. '               ' → logprob: -10.445377349853516
    7. '  ' → logprob: -11.195377349853516
    8. '(j' → logprob: -11.320377349853516
    9. '    ' → logprob: -11.445377349853516
    10. ' (' → logprob: -11.820377349853516

Token 134: ' !=' (ID: 1666)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16577906906604767
    2. 'in' → logprob: -2.0407791137695312
    3. '!=' → logprob: -4.165779113769531
    4. ' !=' → logprob: -5.040779113769531
    5. ' not' → logprob: -7.290779113769531
    6. 'not' → logprob: -9.165779113769531
    7. '==' → logprob: -10.665779113769531
    8. ' ' → logprob: -11.040779113769531
    9. '   ' → logprob: -11.290779113769531
    10. ' ==' → logprob: -12.540779113769531

Token 135: ' di' (ID: 1320)
  Prédit: 'di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'di' → logprob: -0.0007455448503606021
    2. ' di' → logprob: -7.25074577331543
    3. '-di' → logprob: -11.25074577331543
    4. 'i' → logprob: -11.37574577331543
    5. '-' → logprob: -13.00074577331543
    6. 'j' → logprob: -13.12574577331543
    7. ' ' → logprob: -13.12574577331543
    8. 'd' → logprob: -13.62574577331543
    9. '   ' → logprob: -13.87574577331543
    10. ' -' → logprob: -15.00074577331543

Token 136: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.023262832313776016
    2. 'and' → logprob: -3.7732627391815186
    3. '               ' → logprob: -12.273262977600098
    4. '           ' → logprob: -12.523262977600098
    5. ':
' → logprob: -12.773262977600098
    6. '	and' → logprob: -13.148262977600098
    7. '                   ' → logprob: -13.273262977600098
    8. ' ' → logprob: -13.773262977600098
    9. '   ' → logprob: -14.898262977600098
    10. '                       ' → logprob: -15.273262977600098

Token 137: ' ((' (ID: 3536)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.6967759728431702
    2. 'j' → logprob: -1.0717759132385254
    3. '(j' → logprob: -2.4467759132385254
    4. ' ((' → logprob: -3.1967759132385254
    5. ' j' → logprob: -3.9467759132385254
    6. ' (' → logprob: -4.446775913238525
    7. '   ' → logprob: -8.071776390075684
    8. ' ' → logprob: -9.071776390075684
    9. '(((' → logprob: -9.071776390075684
    10. '  ' → logprob: -9.321776390075684

Token 138: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0011094938963651657
    2. ' a' → logprob: -6.876109600067139
    3. '(a' → logprob: -9.62610912322998
    4. '   ' → logprob: -12.62610912322998
    5. ' (' → logprob: -13.00110912322998
    6. '	a' → logprob: -13.37610912322998
    7. '((' → logprob: -14.62610912322998
    8. '(' → logprob: -14.62610912322998
    9. ' ' → logprob: -14.62610912322998
    10. '    ' → logprob: -14.87610912322998

Token 139: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0013691653730347753
    2. '[' → logprob: -6.751368999481201
    3. 'j' → logprob: -8.62636947631836
    4. '[a' → logprob: -11.75136947631836
    5. 'a' → logprob: -13.00136947631836
    6. '[i' → logprob: -13.00136947631836
    7. ' [' → logprob: -13.25136947631836
    8. ')' → logprob: -14.25136947631836
    9. '   ' → logprob: -14.62636947631836
    10. '[
' → logprob: -14.62636947631836

Token 140: ']' (ID: 60)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.6944089531898499
    2. ' >>' → logprob: -0.6944089531898499
    3. '[' → logprob: -7.319408893585205
    4. ']' → logprob: -8.319409370422363
    5. ')' → logprob: -8.569409370422363
    6. '[j' → logprob: -9.694409370422363
    7. ')>>' → logprob: -10.194409370422363
    8. ' ' → logprob: -11.444409370422363
    9. ' ' → logprob: -11.444409370422363
    10. '   ' → logprob: -11.694409370422363

Token 141: ' >>' (ID: 6832)
  Prédit: ' >>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >>' → logprob: -0.5759548544883728
    2. '>>' → logprob: -0.8259548544883728
    3. '[' → logprob: -12.20095443725586
    4. ' ' → logprob: -12.95095443725586
    5. ' ' → logprob: -12.95095443725586
    6. ')' → logprob: -13.32595443725586
    7. ')>>' → logprob: -13.45095443725586
    8. '>' → logprob: -14.95095443725586
    9. '>>(' → logprob: -15.20095443725586
    10. '   ' → logprob: -15.20095443725586

Token 142: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.001178439473733306
    2. ' i' → logprob: -6.75117826461792
    3. ' ' → logprob: -13.001178741455078
    4. '   ' → logprob: -13.251178741455078
    5. ')' → logprob: -13.626178741455078
    6. '	i' → logprob: -14.126178741455078
    7. ')i' → logprob: -14.126178741455078
    8. '  ' → logprob: -15.001178741455078
    9. '```' → logprob: -15.251178741455078
    10. '<|end|>' → logprob: -15.376178741455078

Token 143: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.5822400857578032e-05
    2. ')&' → logprob: -11.250025749206543
    3. ' )' → logprob: -12.125025749206543
    4. '1' → logprob: -12.750025749206543
    5. '               ' → logprob: -13.875025749206543
    6. '           ' → logprob: -14.375025749206543
    7. '))' → logprob: -14.750025749206543
    8. '   ' → logprob: -14.875025749206543
    9. ')>>' → logprob: -15.000025749206543
    10. '       ' → logprob: -15.250025749206543

Token 144: ' &' (ID: 827)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011283478699624538
    2. ')&' → logprob: -4.5112833976745605
    3. '1' → logprob: -8.886283874511719
    4. '&' → logprob: -9.386283874511719
    5. ' )' → logprob: -11.886283874511719
    6. '   ' → logprob: -13.011283874511719
    7. '0' → logprob: -14.011283874511719
    8. '           ' → logprob: -14.261283874511719
    9. '&)' → logprob: -14.511283874511719
    10. '       ' → logprob: -14.886283874511719

Token 145: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014164329506456852
    2. ' ' → logprob: -4.264164447784424
    3. '   ' → logprob: -15.139163970947266
    4. '```' → logprob: -15.139163970947266
    5. ')' → logprob: -16.389163970947266
    6. ' ' → logprob: -16.889163970947266
    7. '0' → logprob: -17.139163970947266
    8. '  ' → logprob: -17.514163970947266
    9. '           ' → logprob: -17.639163970947266
    10. '``' → logprob: -17.951663970947266

Token 146: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00043913270928896964
    2. ' ' → logprob: -7.750439167022705
    3. '0' → logprob: -12.000438690185547
    4. '   ' → logprob: -13.750438690185547
    5. '  ' → logprob: -15.375438690185547
    6. '
' → logprob: -15.562938690185547
    7. '```' → logprob: -16.062938690185547
    8. ' ' → logprob: -16.562938690185547
    9. '``' → logprob: -16.687938690185547
    10. '(' → logprob: -16.687938690185547

Token 147: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00527858454734087
    2. ')==' → logprob: -5.380278587341309
    3. '):
' → logprob: -8.005278587341309
    4. '==' → logprob: -8.755278587341309
    5. '1' → logprob: -9.380278587341309
    6. ' )' → logprob: -10.005278587341309
    7. ' ==' → logprob: -11.130278587341309
    8. '):' → logprob: -11.880278587341309
    9. ':
' → logprob: -13.255278587341309
    10. ':' → logprob: -13.255278587341309

Token 148: ' ==' (ID: 951)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09438401460647583
    2. ')==' → logprob: -2.719383955001831
    3. '==' → logprob: -3.969383955001831
    4. ' ==' → logprob: -5.84438419342041
    5. '):
' → logprob: -6.71938419342041
    6. '1' → logprob: -7.59438419342041
    7. ' )' → logprob: -8.59438419342041
    8. ':' → logprob: -8.96938419342041
    9. ':
' → logprob: -9.09438419342041
    10. '):' → logprob: -9.21938419342041

Token 149: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003377270477358252
    2. ' ' → logprob: -8.000337600708008
    3. '   ' → logprob: -13.375337600708008
    4. '0' → logprob: -15.625337600708008
    5. '                   ' → logprob: -16.312837600708008
    6. '           ' → logprob: -16.375337600708008
    7. '  ' → logprob: -16.500337600708008
    8. '               ' → logprob: -16.750337600708008
    9. '```' → logprob: -17.375337600708008
    10. '
' → logprob: -17.687837600708008

Token 150: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0921942703134846e-05
    2. ' ' → logprob: -11.62501049041748
    3. '0' → logprob: -13.50001049041748
    4. '   ' → logprob: -16.062511444091797
    5. 'i' → logprob: -16.312511444091797
    6. 'True' → logprob: -17.187511444091797
    7. '
' → logprob: -17.187511444091797
    8. '(' → logprob: -17.187511444091797
    9. 'di' → logprob: -17.437511444091797
    10. '```' → logprob: -17.812511444091797

Token 151: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.013195180334150791
    2. ':' → logprob: -4.388195037841797
    3. '                   ' → logprob: -7.513195037841797
    4. '):
' → logprob: -10.013195037841797
    5. '               ' → logprob: -10.763195037841797
    6. ' and' → logprob: -10.763195037841797
    7. ' :
' → logprob: -11.263195037841797
    8. '                       ' → logprob: -11.513195037841797
    9. '():
' → logprob: -11.513195037841797
    10. '           ' → logprob: -12.263195037841797

Token 152: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.14507421851158142
    2. ':
' → logprob: -2.6450741291046143
    3. 'a' → logprob: -2.8950741291046143
    4. ' a' → logprob: -5.145074367523193
    5. ':' → logprob: -6.145074367523193
    6. ' =' → logprob: -8.395073890686035
    7. '                       ' → logprob: -8.770073890686035
    8. '=' → logprob: -9.395073890686035
    9. ' :
' → logprob: -9.395073890686035
    10. '):
' → logprob: -10.145073890686035

Token 153: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.00020425561524461955
    2. ' a' → logprob: -8.500204086303711
    3. '   ' → logprob: -14.625204086303711
    4. '                   ' → logprob: -15.750204086303711
    5. '                       ' → logprob: -16.12520408630371
    6. ' ' → logprob: -17.00020408630371
    7. '	a' → logprob: -17.87520408630371
    8. '
' → logprob: -18.25020408630371
    9. '  ' → logprob: -18.87520408630371
    10. '       ' → logprob: -19.00020408630371

Token 154: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -2.339278580620885e-06
    2. '[a' → logprob: -13.625001907348633
    3. '[' → logprob: -15.125001907348633
    4. 'j' → logprob: -15.250001907348633
    5. '][' → logprob: -16.000001907348633
    6. ' [' → logprob: -16.375001907348633
    7. '```' → logprob: -16.375001907348633
    8. 'a' → logprob: -16.750001907348633
    9. '[
' → logprob: -16.875001907348633
    10. '[js' → logprob: -16.875001907348633

Token 155: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.35594263672828674
    2. ' ^=' → logprob: -1.9809426069259644
    3. '^' → logprob: -2.605942726135254
    4. ']^' → logprob: -2.730942726135254
    5. '[i' → logprob: -4.480942726135254
    6. '[' → logprob: -5.355942726135254
    7. '[j' → logprob: -6.230942726135254
    8. '
' → logprob: -6.855942726135254
    9. '=' → logprob: -6.980942726135254
    10. ']=' → logprob: -7.355942726135254

Token 156: ' ^=' (ID: 79665)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.08702851086854935
    2. ' ^=' → logprob: -2.7120285034179688
    3. '[' → logprob: -5.337028503417969
    4. '=' → logprob: -5.587028503417969
    5. '[j' → logprob: -5.587028503417969
    6. '[i' → logprob: -5.712028503417969
    7. '[a' → logprob: -7.337028503417969
    8. '[
' → logprob: -8.712028503417969
    9. '_^' → logprob: -9.212028503417969
    10. '^[' → logprob: -9.837028503417969

Token 157: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004622611217200756
    2. ' a' → logprob: -5.379622459411621
    3. '   ' → logprob: -13.504622459411621
    4. '                   ' → logprob: -14.129622459411621
    5. ' ' → logprob: -17.004623413085938
    6. '                       ' → logprob: -17.254623413085938
    7. '	a' → logprob: -17.254623413085938
    8. '               ' → logprob: -17.504623413085938
    9. '       ' → logprob: -17.879623413085938
    10. '           ' → logprob: -17.879623413085938

Token 158: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.981667537620524e-06
    2. 'di' → logprob: -13.500001907348633
    3. '```' → logprob: -16.000001907348633
    4. 'a' → logprob: -16.500001907348633
    5. ' di' → logprob: -16.750001907348633
    6. '           ' → logprob: -16.750001907348633
    7. '               ' → logprob: -17.000001907348633
    8. '[i' → logprob: -17.125001907348633
    9. '                   ' → logprob: -17.375001907348633
    10. '   ' → logprob: -17.375001907348633

Token 159: 'di' (ID: 4091)
  Prédit: 'di'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'di' → logprob: -4.320199877838604e-07
    2. ' di' → logprob: -15.125
    3. 'i' → logprob: -16.625
    4. '(di' → logprob: -17.625
    5. 'd' → logprob: -18.625
    6. '[' → logprob: -19.125
    7. '   ' → logprob: -20.0
    8. '_di' → logprob: -20.125
    9. '-di' → logprob: -20.25
    10. ' ' → logprob: -20.25

Token 160: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009645807440392673
    2. ']
' → logprob: -7.500964641571045
    3. '<|end|>' → logprob: -8.125964164733887
    4. ' ]' → logprob: -10.625964164733887
    5. '])' → logprob: -11.000964164733887
    6. ')' → logprob: -11.000964164733887
    7. '[' → logprob: -11.500964164733887
    8. ']

' → logprob: -11.500964164733887
    9. '<|end|>' → logprob: -11.750964164733887
    10. '']' → logprob: -12.375964164733887

Token 161: 'bs' (ID: 6229)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 162: 'um' (ID: 394)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6343542337417603
    2. ' =' → logprob: -1.1343542337417603
    3. '=set' → logprob: -2.3843541145324707
    4. 'um' → logprob: -4.009354114532471
    5. 'l' → logprob: -4.384354114532471
    6. 'ets' → logprob: -4.884354114532471
    7. 'et' → logprob: -5.384354114532471
    8. 'ize' → logprob: -5.884354114532471
    9. '=[]' → logprob: -6.009354114532471
    10. 'e' → logprob: -6.634354114532471

Token 163: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25317758321762085
    2. '=' → logprob: -1.5031776428222656
    3. ' +=' → logprob: -7.128177642822266
    4. '+=' → logprob: -8.003177642822266
    5. 's' → logprob: -10.253177642822266
    6. ' ^=' → logprob: -10.503177642822266
    7. ' ' → logprob: -10.628177642822266
    8. ' |=' → logprob: -12.253177642822266
    9. '   ' → logprob: -12.753177642822266
    10. ' ' → logprob: -12.878177642822266

Token 164: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06477899104356766
    2. ' ' → logprob: -2.814779043197632
    3. 's' → logprob: -6.314778804779053
    4. 'sum' → logprob: -7.689778804779053
    5. ' sums' → logprob: -7.814778804779053
    6. ' sum' → logprob: -9.564779281616211
    7. '   ' → logprob: -11.127279281616211
    8. ' s' → logprob: -11.252279281616211
    9. '1' → logprob: -12.252279281616211
    10. '(' → logprob: -12.377279281616211

Token 165: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002398720709607005
    2. 's' → logprob: -6.752398490905762
    3. 'sum' → logprob: -6.752398490905762
    4. ' ' → logprob: -11.002398490905762
    5. 'a' → logprob: -11.127398490905762
    6. '1' → logprob: -12.377398490905762
    7. '(' → logprob: -12.377398490905762
    8. 'len' → logprob: -12.877398490905762
    9. '[s' → logprob: -13.002398490905762
    10. 'set' → logprob: -13.377398490905762

Token 166: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 167: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003818140830844641
    2. ' for' → logprob: -7.875381946563721
    3. 'blu' → logprob: -14.875381469726562
    4. '	for' → logprob: -15.000381469726562
    5. '```' → logprob: -15.000381469726562
    6. '   ' → logprob: -15.125381469726562
    7. 'if' → logprob: -15.625381469726562
    8. 'while' → logprob: -16.125381469726562
    9. '
' → logprob: -17.125381469726562
    10. '<|end|>' → logprob: -17.250381469726562

Token 168: ' i' (ID: 575)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5299974083900452
    2. 'i' → logprob: -1.0299973487854004
    3. 'b' → logprob: -3.4049973487854004
    4. ' i' → logprob: -4.5299973487854
    5. ' x' → logprob: -5.0299973487854
    6. 'j' → logprob: -7.0299973487854
    7. 'v' → logprob: -7.1549973487854
    8. 'idx' → logprob: -7.4049973487854
    9. ' b' → logprob: -7.9049973487854
    10. 'k' → logprob: -8.529997825622559

Token 169: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6327223777770996
    2. 'in' → logprob: -0.7577223777770996
    3. ' ' → logprob: -9.757722854614258
    4. 'i' → logprob: -11.007722854614258
    5. 'n' → logprob: -11.757722854614258
    6. '	in' → logprob: -12.195222854614258
    7. 'a' → logprob: -12.695222854614258
    8. 's' → logprob: -12.820222854614258
    9. 'blu' → logprob: -13.070222854614258
    10. '   ' → logprob: -13.320222854614258

Token 170: ' blu' (ID: 55577)
  Prédit: 'blu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blu' → logprob: -0.11466418206691742
    2. ' blu' → logprob: -2.239664077758789
    3. ' range' → logprob: -6.864664077758789
    4. 'range' → logprob: -8.114664077758789
    5. ' remain' → logprob: -8.739664077758789
    6. 'remain' → logprob: -9.239664077758789
    7. 'bl' → logprob: -9.489664077758789
    8. 'ble' → logprob: -10.239664077758789
    9. 'blue' → logprob: -10.364664077758789
    10. ' blue' → logprob: -11.114664077758789

Token 171: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5363979935646057
    2. ':' → logprob: -1.036397933959961
    3. 'in' → logprob: -3.286397933959961
    4. ' in' → logprob: -4.161397933959961
    5. '   ' → logprob: -5.161397933959961
    6. ' ' → logprob: -7.786397933959961
    7. 's' → logprob: -8.036397933959961
    8. '  ' → logprob: -8.411397933959961
    9. '):
' → logprob: -8.911397933959961
    10. ',' → logprob: -9.036397933959961

Token 172: '   ' (ID: 271)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.18495841324329376
    2. '   ' → logprob: -2.3099584579467773
    3. 'bs' → logprob: -2.8099584579467773
    4. 'b' → logprob: -4.934958457946777
    5. '```' → logprob: -6.684958457946777
    6. '	b' → logprob: -8.434958457946777
    7. '
' → logprob: -8.809958457946777
    8. ' ' → logprob: -9.434958457946777
    9. '    
' → logprob: -9.559958457946777
    10. '^' → logprob: -9.809958457946777

Token 173: ' b' (ID: 287)
  Prédit: 'bs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bs' → logprob: -0.20255087316036224
    2. ' b' → logprob: -1.7025508880615234
    3. 'b' (adapté à ' b') → logprob: -7.452550888061523
    4. '   ' → logprob: -7.577550888061523
    5. '```' → logprob: -10.452550888061523
    6. ' ' → logprob: -12.452550888061523
    7. '
' → logprob: -12.827550888061523
    8. '    
' → logprob: -13.077550888061523
    9. '	b' → logprob: -13.327550888061523
    10. '``' → logprob: -14.077550888061523

Token 174: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -9.849109119386412e-06
    2. 's' → logprob: -12.375009536743164
    3. 'bs' → logprob: -12.750009536743164
    4. '   ' → logprob: -14.125009536743164
    5. '=' → logprob: -14.625009536743164
    6. '_sum' → logprob: -15.000009536743164
    7. ' sum' → logprob: -15.000009536743164
    8. '=sum' → logprob: -15.500009536743164
    9. ' =' → logprob: -16.125009536743164
    10. 'um' → logprob: -16.500009536743164

Token 175: ' ^=' (ID: 79665)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.014250596053898335
    2. ' ^=' → logprob: -4.264250755310059
    3. '+=' → logprob: -9.889250755310059
    4. '|' → logprob: -10.389250755310059
    5. '=' → logprob: -12.889250755310059
    6. '   ' → logprob: -13.889250755310059
    7. '_^' → logprob: -14.514250755310059
    8. ' ^' → logprob: -15.139250755310059
    9. '^

' → logprob: -15.139250755310059
    10. ''^' → logprob: -15.514250755310059

Token 176: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.9027791495318525e-05
    2. ' a' → logprob: -10.875019073486328
    3. '   ' → logprob: -18.250019073486328
    4. '	a' → logprob: -20.500019073486328
    5. '
' → logprob: -21.875019073486328
    6. 'i' → logprob: -22.500019073486328
    7. ' ' → logprob: -22.625019073486328
    8. '_a' → logprob: -22.625019073486328
    9. '  ' → logprob: -23.000019073486328
    10. '```' → logprob: -23.125019073486328

Token 177: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005144290626049042
    2. '[' → logprob: -8.000514030456543
    3. '{i' → logprob: -8.875514030456543
    4. 'i' → logprob: -10.250514030456543
    5. '{' → logprob: -13.375514030456543
    6. '(i' → logprob: -13.875514030456543
    7. 'blu' → logprob: -14.250514030456543
    8. '[b' → logprob: -16.50051498413086
    9. '```' → logprob: -16.62551498413086
    10. '[
' → logprob: -16.87551498413086

Token 178: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009468838572502136
    2. ']' → logprob: -4.884469032287598
    3. '}' → logprob: -7.009469032287598
    4. '<|end|>' → logprob: -7.009469032287598
    5. '```' → logprob: -11.509469032287598
    6. ')
' → logprob: -12.134469032287598
    7. ' )' → logprob: -12.384469032287598
    8. '#' → logprob: -12.384469032287598
    9. '']' → logprob: -12.634469032287598
    10. '）' → logprob: -12.634469032287598

Token 179: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003100791363976896
    2. 'if' → logprob: -8.875309944152832
    3. ' print' → logprob: -8.875309944152832
    4. 'b' → logprob: -10.875309944152832
    5. ' if' → logprob: -12.250309944152832
    6. '```' → logprob: -13.125309944152832
    7. 'assert' → logprob: -13.375309944152832
    8. '#' → logprob: -14.375309944152832
    9. ' 
' → logprob: -14.625309944152832
    10. 'n' → logprob: -14.750309944152832

Token 180: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.002076386474072933
    2. '(' → logprob: -6.377076148986816
    3. '()' → logprob: -8.377076148986816
    4. '('' → logprob: -9.877076148986816
    5. '(s' → logprob: -10.127076148986816
    6. '(bs' → logprob: -10.377076148986816
    7. '("' → logprob: -11.877076148986816
    8. '(bl' → logprob: -13.127076148986816
    9. '(ls' → logprob: -13.252076148986816
    10. '(sum' → logprob: -13.252076148986816

Token 181: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -8.93579563125968e-05
    2. 's' → logprob: -9.875089645385742
    3. 'su' → logprob: -10.375089645385742
    4. ')' → logprob: -12.750089645385742
    5. 'sup' → logprob: -13.875089645385742
    6. 'summ' → logprob: -14.500089645385742
    7. 'sm' → logprob: -14.750089645385742
    8. 'ls' → logprob: -15.000089645385742
    9. 'ss' → logprob: -15.250089645385742
    10. 'sun' → logprob: -16.000089645385742

Token 182: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.7697225252486533e-06
    2. ' )' → logprob: -13.000003814697266
    3. ')
' → logprob: -14.125003814697266
    4. '))' → logprob: -15.375003814697266
    5. '')' → logprob: -15.750003814697266
    6. ')#' → logprob: -16.125003814697266
    7. '`)' → logprob: -16.250003814697266
    8. ')`' → logprob: -16.625003814697266
    9. '")' → logprob: -17.500003814697266
    10. '#' → logprob: -17.750003814697266

Token 183: ' (' (ID: 350)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.21073170006275177
    2. ' ' → logprob: -2.0857317447662354
    3. ' sums' → logprob: -3.2107317447662354
    4. 's' → logprob: -3.7107317447662354
    5. ' s' → logprob: -7.835731506347656
    6. ' max' → logprob: -9.210731506347656
    7. ' n' → logprob: -9.210731506347656
    8. ' (' → logprob: -9.460731506347656
    9. ' sum' → logprob: -9.710731506347656
    10. 'sum' → logprob: -9.835731506347656

Token 184: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6528576612472534
    2. '1' → logprob: -1.1528576612472534
    3. ' sums' → logprob: -2.152857780456543
    4. '(' → logprob: -3.527857780456543
    5. ' ' → logprob: -4.777857780456543
    6. ' (' → logprob: -5.277857780456543
    7. '(s' → logprob: -6.902857780456543
    8. 'sum' → logprob: -7.027857780456543
    9. ')' → logprob: -7.152857780456543
    10. '((' → logprob: -7.902857780456543

Token 185: 'ums' (ID: 6162)
  Prédit: 'ums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ums' → logprob: -0.0005981888971291482
    2. 'um' → logprob: -8.625597953796387
    3. ')' → logprob: -8.875597953796387
    4. '[' → logprob: -9.375597953796387
    5. '>>' → logprob: -10.500597953796387
    6. '<<' → logprob: -10.500597953796387
    7. '1' → logprob: -10.500597953796387
    8. '^' → logprob: -11.250597953796387
    9. '#' → logprob: -11.500597953796387
    10. 's' → logprob: -11.875597953796387

Token 186: ' ^' (ID: 7602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000763883872423321
    2. '))' → logprob: -7.750763893127441
    3. '+' → logprob: -8.750763893127441
    4. ' )' → logprob: -9.250763893127441
    5. ')))' → logprob: -10.875763893127441
    6. '^' → logprob: -11.625763893127441
    7. ')
' → logprob: -11.750763893127441
    8. '-' → logprob: -11.750763893127441
    9. ')^' → logprob: -12.375763893127441
    10. ' +' → logprob: -12.500763893127441

Token 187: ' b' (ID: 287)
  Prédit: 'bs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bs' → logprob: -0.14295117557048798
    2. ' b' → logprob: -2.142951250076294
    3. 'b' → logprob: -4.142951011657715
    4. ' bs' → logprob: -11.767951011657715
    5. 's' → logprob: -13.017951011657715
    6. ' sums' → logprob: -13.017951011657715
    7. 'sum' → logprob: -13.267951011657715
    8. '	b' → logprob: -13.517951011657715
    9. ' ' → logprob: -13.767951011657715
    10. 'bsd' → logprob: -14.392951011657715

Token 188: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.21125701069831848
    2. 's' → logprob: -1.961256980895996
    3. ')' → logprob: -3.711256980895996
    4. '))' → logprob: -4.461256980895996
    5. 'ums' → logprob: -5.586256980895996
    6. 'um' → logprob: -5.586256980895996
    7. 'its' → logprob: -6.961256980895996
    8. ')))' → logprob: -7.211256980895996
    9. 'ms' → logprob: -7.336256980895996
    10. ')}' → logprob: -7.711256980895996

Token 189: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0031836593989282846
    2. '))' → logprob: -5.753183841705322
    3. ')))' → logprob: -12.753183364868164
    4. ')
' → logprob: -14.003183364868164
    5. ' )' → logprob: -14.503183364868164
    6. '`)' → logprob: -14.878183364868164
    7. '})' → logprob: -15.128183364868164
    8. ')`' → logprob: -15.378183364868164
    9. '())' → logprob: -15.753183364868164
    10. ')")' → logprob: -16.003183364868164


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 187
Tokens correctement prédits (1ère position, stricte): 75
Tokens correctement prédits (1ère position, avec adaptation): 83
Tokens correctement prédits (top 10): 158
Précision stricte (1ère position): 40.11%
Précision adaptée (1ère position): 44.39%
Précision (top 10): 84.49%
================================================================================
