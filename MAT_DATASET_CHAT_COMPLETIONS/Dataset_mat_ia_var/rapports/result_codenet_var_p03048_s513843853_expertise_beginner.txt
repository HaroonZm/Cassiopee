================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:01:24
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def solve(R, G, B, N):
    count = 0
    i = 0
    while i <= N:
        j = 0
        while j <= N:
            x = N - i - j
            if x >= 0 and x % B == 0:
                count += 1
            j += G
        i += R
    print(count)

def main():
    inputs = sys.stdin.read().split()
    R = int(inputs[0])
    G = int(inputs[1])
    B = int(inputs[2])
    N = int(inputs[3])
    solve(R, G, B, N)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0347585454583168
    2. '\n' → logprob: -4.034758567810059
    3. 'import' → logprob: -4.909758567810059
    4. '<|end|>' → logprob: -5.284758567810059
    5. '\' → logprob: -7.159758567810059
    6. '<|end|>' → logprob: -7.534758567810059
    7. 'newline' → logprob: -7.909758567810059
    8. ',' → logprob: -8.159758567810059
    9. '[' → logprob: -8.284758567810059
    10. '' → logprob: -8.284758567810059

Token 4: ' solve' (ID: 17722)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.013851531781256199
    2. ' space' → logprob: -6.388851642608643
    3. ' main' → logprob: -6.388851642608643
    4. ' ' → logprob: -6.888851642608643
    5. '<|end|>' → logprob: -6.888851642608643
    6. ' process' → logprob: -7.013851642608643
    7. '  ' → logprob: -7.013851642608643
    8. ' a' → logprob: -7.263851642608643
    9. ' sys' → logprob: -7.638851642608643
    10. '_' → logprob: -7.763851642608643

Token 5: '(R' (ID: 4092)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006465844344347715
    2. '():' → logprob: -6.381465911865234
    3. '(:' → logprob: -6.631465911865234
    4. '_' → logprob: -6.881465911865234
    5. ':' → logprob: -6.881465911865234
    6. '```' → logprob: -8.006465911865234
    7. '):' → logprob: -8.256465911865234
    8. '(":' → logprob: -8.881465911865234
    9. '(
' → logprob: -8.881465911865234
    10. ' (' → logprob: -9.881465911865234

Token 6: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09064981341362
    2. ',' → logprob: -2.4656498432159424
    3. ':' → logprob: -6.590649604797363
    4. ' ):' → logprob: -8.840649604797363
    5. ')' → logprob: -9.965649604797363
    6. 'e' → logprob: -10.340649604797363
    7. '):
' → logprob: -10.715649604797363
    8. ' ,' → logprob: -11.215649604797363
    9. 'adius' → logprob: -11.340649604797363
    10. '[' → logprob: -11.840649604797363

Token 7: ' G' (ID: 499)
  Prédit: ' C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.2998655438423157
    2. 'C' → logprob: -1.674865484237671
    3. ' K' → logprob: -4.17486572265625
    4. ' G' → logprob: -4.54986572265625
    5. ' B' → logprob: -5.17486572265625
    6. 'K' → logprob: -5.29986572265625
    7. ' r' → logprob: -5.42486572265625
    8. 'G' → logprob: -5.92486572265625
    9. ' L' → logprob: -6.04986572265625
    10. ' D' → logprob: -6.04986572265625

Token 8: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.034721001982688904
    2. ',' → logprob: -3.6597208976745605
    3. ')' → logprob: -4.7847208976745605
    4. ':' → logprob: -12.159721374511719
    5. ' ):' → logprob: -12.284721374511719
    6. '):
' → logprob: -12.659721374511719
    7. '```' → logprob: -13.034721374511719
    8. '),' → logprob: -13.159721374511719
    9. '   ' → logprob: -13.534721374511719
    10. '*' → logprob: -13.784721374511719

Token 9: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.38778913021087646
    2. 'B' → logprob: -1.1377891302108765
    3. ' ' → logprob: -7.137789249420166
    4. '  ' → logprob: -10.387788772583008
    5. '	B' → logprob: -10.637788772583008
    6. '   ' → logprob: -11.762788772583008
    7. '):' → logprob: -11.950288772583008
    8. '```' → logprob: -12.450288772583008
    9. ' ' → logprob: -12.512788772583008
    10. ')' → logprob: -12.762788772583008

Token 10: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0389799028635025
    2. ',' → logprob: -3.288980007171631
    3. ')' → logprob: -7.163980007171631
    4. '```' → logprob: -9.413979530334473
    5. ':' → logprob: -10.163979530334473
    6. '):
' → logprob: -11.288979530334473
    7. '   ' → logprob: -11.913979530334473
    8. ''):' → logprob: -12.663979530334473
    9. '**' → logprob: -12.788979530334473
    10. ' ):' → logprob: -13.038979530334473

Token 11: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.8246263861656189
    2. 'N' → logprob: -1.4496264457702637
    3. '):' → logprob: -2.5746264457702637
    4. ' W' → logprob: -2.6996264457702637
    5. ' K' → logprob: -3.1996264457702637
    6. 'W' → logprob: -3.6996264457702637
    7. 'K' → logprob: -3.6996264457702637
    8. ' ):' → logprob: -3.9496264457702637
    9. ' n' → logprob: -5.324626445770264
    10. ' D' → logprob: -5.324626445770264

Token 12: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007618647650815547
    2. ')' → logprob: -7.250761985778809
    3. ',' → logprob: -10.875761985778809
    4. ':' → logprob: -11.125761985778809
    5. ' ):' → logprob: -11.125761985778809
    6. '):
' → logprob: -14.875761985778809
    7. ''):' → logprob: -14.875761985778809
    8. ')):' → logprob: -15.125761985778809
    9. ')：' → logprob: -15.250761985778809
    10. '```' → logprob: -15.250761985778809

Token 13: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5811667442321777
    2. ':' → logprob: -0.8311667442321777
    3. '    ' → logprob: -6.831166744232178
    4. ' ' → logprob: -6.956166744232178
    5. '):' → logprob: -6.956166744232178
    6. ' :' → logprob: -7.081166744232178
    7. '```' → logprob: -7.456166744232178
    8. ':
' → logprob: -8.456167221069336
    9. ',' → logprob: -9.081167221069336
    10. '`:' → logprob: -9.831167221069336

Token 14: ' count' (ID: 3605)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7938593626022339
    2. ' total' → logprob: -2.0438594818115234
    3. ' max' → logprob: -2.2938594818115234
    4. '    ' → logprob: -2.4188594818115234
    5. ' dp' → logprob: -2.5438594818115234
    6. ' count' → logprob: -2.6688594818115234
    7. '   ' → logprob: -4.293859481811523
    8. ' ' → logprob: -4.418859481811523
    9. 'for' → logprob: -4.543859481811523
    10. ' ans' → logprob: -4.668859481811523

Token 15: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004638503771275282
    2. '=' → logprob: -5.379638671875
    3. ' +=' → logprob: -11.254638671875
    4. '_' → logprob: -12.879638671875
    5. ')' → logprob: -13.629638671875
    6. '  ' → logprob: -14.254638671875
    7. ' ' → logprob: -15.254638671875
    8. 'space' → logprob: -15.879638671875
    9. ' =)' → logprob: -15.879638671875
    10. '_space' → logprob: -16.004638671875

Token 16: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16022635996341705
    2. '0' → logprob: -1.9102263450622559
    3. ' ' → logprob: -13.910226821899414
    4. '   ' → logprob: -14.410226821899414
    5. '  ' → logprob: -15.160226821899414
    6. '    ' → logprob: -15.660226821899414
    7. '1' → logprob: -16.160226821899414
    8. '```' → logprob: -16.660226821899414
    9. '20' → logprob: -17.660226821899414
    10. ' sum' → logprob: -17.785226821899414

Token 17: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0160470362752676
    2. ' ' → logprob: -4.14104700088501
    3. '   ' → logprob: -11.391047477722168
    4. '  ' → logprob: -14.641047477722168
    5. ' ' → logprob: -15.266047477722168
    6. '```' → logprob: -15.703547477722168
    7. '(' → logprob: -16.01604652404785
    8. '=' → logprob: -16.51604652404785
    9. 'sum' → logprob: -16.76604652404785
    10. '    ' → logprob: -16.82854652404785

Token 18: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2043912708759308
    2. '<|end|>' → logprob: -2.5793912410736084
    3. '
' → logprob: -3.3293912410736084
    4. '\n' → logprob: -3.8293912410736084
    5. '    
' → logprob: -4.4543914794921875
    6. '    ' → logprob: -4.4543914794921875
    7. ' for' → logprob: -5.2043914794921875
    8. ' ' → logprob: -5.4543914794921875
    9. '```' → logprob: -5.4543914794921875
    10. '\' → logprob: -5.7043914794921875

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06990886479616165
    2. '```' → logprob: -3.194908857345581
    3. '    ' → logprob: -4.94490909576416
    4. '    
' → logprob: -5.44490909576416
    5. '\n' → logprob: -5.44490909576416
    6. '
' → logprob: -5.81990909576416
    7. ' for' → logprob: -5.81990909576416
    8. '\' → logprob: -6.81990909576416
    9. 'for' → logprob: -6.81990909576416
    10. '   
' → logprob: -7.31990909576416

Token 20: ' i' (ID: 575)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8572962880134583
    2. '   ' → logprob: -0.9822962880134583
    3. 'for' → logprob: -1.6072962284088135
    4. '```' → logprob: -7.732296466827393
    5. ' ' → logprob: -8.482295989990234
    6. '    ' → logprob: -9.232295989990234
    7. '  ' → logprob: -10.732295989990234
    8. '	for' → logprob: -11.357295989990234
    9. ' ```' → logprob: -11.357295989990234
    10. '\n' → logprob: -12.107295989990234

Token 21: ' =' (ID: 314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.008033854886889458
    2. ' n' → logprob: -4.883033752441406
    3. '=' → logprob: -8.008033752441406
    4. ' in' → logprob: -10.008033752441406
    5. ' =' → logprob: -10.633033752441406
    6. 'in' → logprob: -11.133033752441406
    7. 'nt' → logprob: -12.008033752441406
    8. ' ' → logprob: -13.258033752441406
    9. '=n' → logprob: -14.508033752441406
    10. '	n' → logprob: -14.883033752441406

Token 22: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5231285095214844
    2. '0' → logprob: -0.8981285095214844
    3. '```' → logprob: -13.148128509521484
    4. ' ' → logprob: -13.773128509521484
    5. '  ' → logprob: -14.710628509521484
    6. '   ' → logprob: -15.148128509521484
    7. '1' → logprob: -15.335628509521484
    8. '<|end|>' → logprob: -15.523128509521484
    9. '000' → logprob: -15.585628509521484
    10. '[' → logprob: -16.523128509521484

Token 23: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009130131802521646
    2. ' ' → logprob: -7.000913143157959
    3. '```' → logprob: -13.8759126663208
    4. '000' → logprob: -16.375913619995117
    5. '1' → logprob: -16.563413619995117
    6. '-' → logprob: -16.563413619995117
    7. '``' → logprob: -16.563413619995117
    8. '`' → logprob: -16.938413619995117
    9. '   ' → logprob: -17.313413619995117
    10. 'R' → logprob: -17.375913619995117

Token 24: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8502028584480286
    2. ' while' → logprob: -1.6002027988433838
    3. '```' → logprob: -2.475202798843384
    4. '   ' → logprob: -3.100202798843384
    5. 'while' → logprob: -3.225202798843384
    6. '  ' → logprob: -3.350202798843384
    7. ':' → logprob: -3.725202798843384
    8. ' 
' → logprob: -3.725202798843384
    9. '<|end|>' → logprob: -3.725202798843384
    10. ' for' → logprob: -4.100203037261963

Token 25: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.39542707800865173
    2. '<|end|>' → logprob: -2.1454269886016846
    3. ' 
' → logprob: -2.6454269886016846
    4. ' while' → logprob: -3.0204269886016846
    5. '  ' → logprob: -3.8954269886016846
    6. '
' → logprob: -4.145427227020264
    7. '   
' → logprob: -4.645427227020264
    8. '   ' → logprob: -5.145427227020264
    9. '<|end|>' → logprob: -5.270427227020264
    10. ':' → logprob: -5.395427227020264

Token 26: ' while' (ID: 2049)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05610499158501625
    2. ' while' → logprob: -3.681104898452759
    3. ' 
' → logprob: -4.431105136871338
    4. ' for' → logprob: -5.181105136871338
    5. 'while' (adapté à ' while') → logprob: -5.556105136871338
    6. 'for' → logprob: -6.681105136871338
    7. '  ' → logprob: -7.181105136871338
    8. ' ```' → logprob: -7.181105136871338
    9. '<|end|>' → logprob: -7.306105136871338
    10. '```' → logprob: -7.431105136871338

Token 27: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.01003631018102169
    2. 'i' → logprob: -4.635036468505859
    3. ' R' → logprob: -8.51003646850586
    4. ' ' → logprob: -10.63503646850586
    5. 'R' → logprob: -11.38503646850586
    6. ' True' → logprob: -11.51003646850586
    7. '```' → logprob: -11.63503646850586
    8. ' N' → logprob: -11.76003646850586
    9. '(i' → logprob: -12.76003646850586
    10. '	i' → logprob: -13.13503646850586

Token 28: ' <=' (ID: 5017)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3309485912322998
    2. '*' → logprob: -1.9559485912322998
    3. ' <=' → logprob: -2.0809485912323
    4. '<=' → logprob: -4.205948829650879
    5. ' <' → logprob: -8.205948829650879
    6. ' ' → logprob: -9.080948829650879
    7. '<' → logprob: -9.205948829650879
    8. '*N' → logprob: -9.955948829650879
    9. '*(' → logprob: -10.580948829650879
    10. '<R' → logprob: -11.205948829650879

Token 29: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0003924231859855354
    2. ' N' → logprob: -7.875392436981201
    3. 'R' → logprob: -12.000391960144043
    4. '   ' → logprob: -13.125391960144043
    5. ' ' → logprob: -13.375391960144043
    6. '	N' → logprob: -13.625391960144043
    7. '(N' → logprob: -15.125391960144043
    8. ' (' → logprob: -15.625391960144043
    9. '```' → logprob: -16.37539291381836
    10. '(' → logprob: -16.37539291381836

Token 30: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0029218492563813925
    2. ' and' → logprob: -6.127922058105469
    3. ':
' → logprob: -7.752922058105469
    4. 'and' → logprob: -8.627922058105469
    5. ' :' → logprob: -9.377922058105469
    6. '   ' → logprob: -11.752922058105469
    7. '```' → logprob: -12.252922058105469
    8. ',' → logprob: -12.377922058105469
    9. ':

' → logprob: -12.627922058105469
    10. ' ' → logprob: -13.002922058105469

Token 31: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8168197274208069
    2. '    ' → logprob: -1.066819667816162
    3. '       ' → logprob: -2.441819667816162
    4. ' and' → logprob: -3.441819667816162
    5. '   ' → logprob: -3.816819667816162
    6. ':' → logprob: -4.191819667816162
    7. '<|end|>' → logprob: -4.441819667816162
    8. ' :' → logprob: -4.691819667816162
    9. '```' → logprob: -4.691819667816162
    10. '     
' → logprob: -5.191819667816162

Token 32: ' j' (ID: 441)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5229021310806274
    2. ' if' → logprob: -1.6479021310806274
    3. ' i' → logprob: -2.272902011871338
    4. ' ' → logprob: -3.272902011871338
    5. ' j' → logprob: -4.647902011871338
    6. '        ' → logprob: -4.647902011871338
    7. 'j' (adapté à ' j') → logprob: -4.772902011871338
    8. '       ' → logprob: -4.772902011871338
    9. '<|end|>' → logprob: -4.772902011871338
    10. 'if' → logprob: -5.147902011871338

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01473794411867857
    2. '=' → logprob: -4.264738082885742
    3. ' ' → logprob: -7.764738082885742
    4. '<|end|>' → logprob: -9.264738082885742
    5. '<|end|>' → logprob: -10.889738082885742
    6. '    ' → logprob: -12.014738082885742
    7. ' in' → logprob: -12.139738082885742
    8. ' <=' → logprob: -12.389738082885742
    9. ')' → logprob: -12.389738082885742
    10. '   ' → logprob: -12.514738082885742

Token 34: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06994577497243881
    2. ' ' → logprob: -2.694945812225342
    3. '<|end|>' → logprob: -12.444945335388184
    4. '       ' → logprob: -13.444945335388184
    5. '   ' → logprob: -13.694945335388184
    6. '<|end|>' → logprob: -13.819945335388184
    7. '  ' → logprob: -14.757445335388184
    8. '```' → logprob: -15.382445335388184
    9. '۰' → logprob: -15.694945335388184
    10. ' ' → logprob: -16.0699462890625

Token 35: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007102862582542002
    2. ' ' → logprob: -7.250710487365723
    3. '       ' → logprob: -16.625709533691406
    4. '```' → logprob: -16.750709533691406
    5. '000' → logprob: -17.250709533691406
    6. '   ' → logprob: -17.313209533691406
    7. '<|end|>' → logprob: -17.938209533691406
    8. '۰' → logprob: -17.938209533691406
    9. 'i' → logprob: -18.188209533691406
    10. '<|end|>' → logprob: -18.188209533691406

Token 36: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 37: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 38: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.42248639464378357
    2. '<|end|>' → logprob: -1.297486424446106
    3. 'while' (adapté à ' while') → logprob: -2.6724863052368164
    4. '       ' → logprob: -6.922486305236816
    5. '<|end|>' → logprob: -7.172486305236816
    6. '```' → logprob: -8.672486305236816
    7. ' ' → logprob: -9.297486305236816
    8. '	while' → logprob: -9.422486305236816
    9. 'While' → logprob: -9.422486305236816
    10. '        ' → logprob: -10.922486305236816

Token 39: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.07891038805246353
    2. 'j' → logprob: -2.5789103507995605
    3. '        ' → logprob: -11.078910827636719
    4. ' ' → logprob: -13.703910827636719
    5. '    ' → logprob: -13.828910827636719
    6. ' ' → logprob: -13.953910827636719
    7. '$j' → logprob: -14.203910827636719
    8. '```' → logprob: -14.328910827636719
    9. '	j' → logprob: -15.078910827636719
    10. '            ' → logprob: -15.578910827636719

Token 40: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.003190666902810335
    2. '<=' → logprob: -5.753190517425537
    3. ' ' → logprob: -12.253190994262695
    4. '<|end|>' → logprob: -12.753190994262695
    5. ' ≤' → logprob: -13.253190994262695
    6. ')<=' → logprob: -14.003190994262695
    7. '```' → logprob: -14.378190994262695
    8. ' *' → logprob: -14.378190994262695
    9. ' <=",' → logprob: -15.003190994262695
    10. '<|end|>' → logprob: -15.253190994262695

Token 41: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.05490879714488983
    2. ' N' → logprob: -2.9299087524414062
    3. ' ' → logprob: -10.804908752441406
    4. '	N' → logprob: -12.929908752441406
    5. '(N' → logprob: -13.679908752441406
    6. '   ' → logprob: -14.054908752441406
    7. '  ' → logprob: -14.304908752441406
    8. ' (' → logprob: -14.429908752441406
    9. ' ' → logprob: -15.804908752441406
    10. '<|end|>' → logprob: -15.929908752441406

Token 42: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007885199971497059
    2. '<|end|>' → logprob: -5.382884979248047
    3. ':
' → logprob: -6.632884979248047
    4. ' and' → logprob: -6.632884979248047
    5. '<|end|>' → logprob: -8.757884979248047
    6. '):' → logprob: -8.882884979248047
    7. '       ' → logprob: -9.382884979248047
    8. ' :' → logprob: -9.507884979248047
    9. 'and' → logprob: -9.632884979248047
    10. ':

' → logprob: -10.757884979248047

Token 43: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012685993686318398
    2. '<|end|>' → logprob: -4.762685775756836
    3. ':' → logprob: -6.512685775756836
    4. '```' → logprob: -6.637685775756836
    5. '<|end|>' → logprob: -7.637685775756836
    6. ' and' → logprob: -8.137685775756836
    7. '       ' → logprob: -9.012685775756836
    8. '               ' → logprob: -9.137685775756836
    9. ' ' → logprob: -10.012685775756836
    10. '          ' → logprob: -10.262685775756836

Token 44: ' x' (ID: 1215)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.6862159967422485
    2. '           ' → logprob: -1.0612159967422485
    3. '            ' → logprob: -3.186215877532959
    4. 'k' → logprob: -3.436215877532959
    5. '               ' → logprob: -3.561215877532959
    6. ' ' → logprob: -3.936215877532959
    7. '```' → logprob: -4.061215877532959
    8. ' if' → logprob: -5.186215877532959
    9. ' for' → logprob: -6.811215877532959
    10. '<|end|>' → logprob: -6.936215877532959

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0053038387559354305
    2. '=' → logprob: -5.255303859710693
    3. '=k' → logprob: -11.130303382873535
    4. '       ' → logprob: -11.755303382873535
    5. '<|end|>' → logprob: -11.880303382873535
    6. '   ' → logprob: -12.130303382873535
    7. ' ' → logprob: -12.255303382873535
    8. 'k' → logprob: -12.505303382873535
    9. '*' → logprob: -12.505303382873535
    10. ')' → logprob: -12.755303382873535

Token 46: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.6370906829833984
    2. 'N' → logprob: -0.7620906829833984
    3. '(N' → logprob: -6.387090682983398
    4. ' (' → logprob: -6.512090682983398
    5. ' ' → logprob: -7.012090682983398
    6. '   ' → logprob: -9.137090682983398
    7. '	N' → logprob: -9.387090682983398
    8. '(' → logprob: -9.887090682983398
    9. '  ' → logprob: -10.137090682983398
    10. 'R' → logprob: -10.387090682983398

Token 47: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6335777044296265
    2. '-' → logprob: -0.7585777044296265
    3. '<|end|>' → logprob: -7.383577823638916
    4. ' ' → logprob: -8.633577346801758
    5. '-i' → logprob: -9.883577346801758
    6. '-k' → logprob: -10.258577346801758
    7. '<|end|>' → logprob: -10.383577346801758
    8. '   ' → logprob: -12.258577346801758
    9. '    ' → logprob: -12.383577346801758
    10. '```' → logprob: -12.383577346801758

Token 48: ' i' (ID: 575)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.30060702562332153
    2. ' R' → logprob: -2.1756069660186768
    3. ' (' → logprob: -2.8006069660186768
    4. '(' → logprob: -3.3006069660186768
    5. 'i' → logprob: -3.9256069660186768
    6. '(R' → logprob: -4.050607204437256
    7. ' i' → logprob: -5.175607204437256
    8. '(i' → logprob: -5.425607204437256
    9. '   ' → logprob: -7.800607204437256
    10. ' ' → logprob: -7.925607204437256

Token 49: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8383018970489502
    2. ' -' → logprob: -0.9633018970489502
    3. '*' → logprob: -1.7133018970489502
    4. '-R' → logprob: -6.338301658630371
    5. '-B' → logprob: -6.338301658630371
    6. ' *' → logprob: -7.213301658630371
    7. '```' → logprob: -7.963301658630371
    8. '<|end|>' → logprob: -7.963301658630371
    9. 'R' → logprob: -8.338301658630371
    10. ' ' → logprob: -9.588301658630371

Token 50: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.009446626529097557
    2. ' j' → logprob: -5.009446620941162
    3. '           ' → logprob: -6.884446620941162
    4. '   ' → logprob: -7.884446620941162
    5. ' ' → logprob: -8.00944709777832
    6. 'G' → logprob: -8.13444709777832
    7. '2' → logprob: -8.75944709777832
    8. 'B' → logprob: -9.38444709777832
    9. '10' → logprob: -10.00944709777832
    10. '       ' → logprob: -10.25944709777832

Token 51: '
' (ID: 198)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.1450951099395752
    2. '<|end|>' → logprob: -1.2700951099395752
    3. '           ' → logprob: -2.145095109939575
    4. '<|end|>' → logprob: -2.645095109939575
    5. ' ' → logprob: -3.020095109939575
    6. '
' → logprob: -3.770095109939575
    7. '               ' → logprob: -4.145094871520996
    8. ' for' → logprob: -4.270094871520996
    9. 'for' → logprob: -4.395094871520996
    10. 'if' → logprob: -4.770094871520996

Token 52: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 53: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.059965942054986954
    2. 'if' (adapté à ' if') → logprob: -3.0599658489227295
    3. '           ' → logprob: -4.559966087341309
    4. ' ' → logprob: -7.434966087341309
    5. '<|end|>' → logprob: -9.934966087341309
    6. '               ' → logprob: -10.184966087341309
    7. '```' → logprob: -10.809966087341309
    8. '*' → logprob: -10.809966087341309
    9. 'If' → logprob: -10.934966087341309
    10. '0' → logprob: -11.559966087341309

Token 54: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.018712516874074936
    2. 'x' → logprob: -4.018712520599365
    3. ' ' → logprob: -7.643712520599365
    4. ' (' → logprob: -10.143712043762207
    5. '0' → logprob: -10.643712043762207
    6. '  ' → logprob: -12.643712043762207
    7. '(x' → logprob: -12.768712043762207
    8. '            ' → logprob: -13.143712043762207
    9. '           ' → logprob: -13.268712043762207
    10. ' ' → logprob: -13.643712043762207

Token 55: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.024207312613725662
    2. '>=' → logprob: -3.774207353591919
    3. '<|end|>' → logprob: -8.14920711517334
    4. ' %' → logprob: -8.27420711517334
    5. ' ' → logprob: -8.52420711517334
    6. '%' → logprob: -9.52420711517334
    7. ')>=' → logprob: -9.77420711517334
    8. ']>=' → logprob: -10.64920711517334
    9. '0' → logprob: -11.14920711517334
    10. ' >' → logprob: -11.89920711517334

Token 56: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005938040092587471
    2. ' ' → logprob: -5.1309380531311035
    3. '<|end|>' → logprob: -11.880937576293945
    4. '   ' → logprob: -13.630937576293945
    5. '  ' → logprob: -14.505937576293945
    6. '```' → logprob: -15.755937576293945
    7. '<|end|>' → logprob: -15.755937576293945
    8. '۰' → logprob: -16.130937576293945
    9. ')' → logprob: -16.255937576293945
    10. '`' → logprob: -16.943437576293945

Token 57: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001706247916445136
    2. ' ' → logprob: -6.376706123352051
    3. '<|end|>' → logprob: -13.00170612335205
    4. '   ' → logprob: -14.62670612335205
    5. '  ' → logprob: -15.00170612335205
    6. '```' → logprob: -15.75170612335205
    7. '۰' → logprob: -15.87670612335205
    8. '<|end|>' → logprob: -15.93920612335205
    9. '-' → logprob: -16.189207077026367
    10. '`' → logprob: -16.376707077026367

Token 58: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07903013378381729
    2. 'and' → logprob: -2.5790300369262695
    3. ' ' → logprob: -9.45403003692627
    4. ':' → logprob: -10.82903003692627
    5. '<|end|>' → logprob: -10.95403003692627
    6. '           ' → logprob: -11.57903003692627
    7. ':
' → logprob: -11.95403003692627
    8. '<|end|>' → logprob: -13.07903003692627
    9. '	and' → logprob: -13.95403003692627
    10. ',' → logprob: -14.20403003692627

Token 59: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3883834481239319
    2. 'x' → logprob: -1.888383388519287
    3. ' (' → logprob: -1.888383388519287
    4. '(x' → logprob: -4.513383388519287
    5. '(' → logprob: -5.263383388519287
    6. ' ' → logprob: -7.013383388519287
    7. ' i' → logprob: -7.138383388519287
    8. '(i' → logprob: -7.888383388519287
    9. 'i' → logprob: -8.263383865356445
    10. '(B' → logprob: -9.075883865356445

Token 60: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.476760596036911
    2. ' %' → logprob: -0.9767606258392334
    3. '%B' → logprob: -6.726760387420654
    4. '*' → logprob: -7.101760387420654
    5. '%x' → logprob: -8.476760864257812
    6. ' *' → logprob: -9.226760864257812
    7. ' <=' → logprob: -9.351760864257812
    8. '<=' → logprob: -9.476760864257812
    9. '%i' → logprob: -9.726760864257812
    10. '%s' → logprob: -10.351760864257812

Token 61: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.08072656393051147
    2. ' B' → logprob: -2.8307266235351562
    3. 'R' → logprob: -4.080726623535156
    4. ' R' → logprob: -6.705726623535156
    5. ' ' → logprob: -8.205726623535156
    6. 'C' → logprob: -9.455726623535156
    7. '  ' → logprob: -10.955726623535156
    8. 'G' → logprob: -11.080726623535156
    9. 'A' → logprob: -11.705726623535156
    10. 'r' → logprob: -11.768226623535156

Token 62: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.28160056471824646
    2. ' ==' → logprob: -1.4066005945205688
    3. '=' → logprob: -7.906600475311279
    4. '===' → logprob: -10.531600952148438
    5. '<|end|>' → logprob: -10.906600952148438
    6. ' ' → logprob: -11.156600952148438
    7. ')==' → logprob: -11.656600952148438
    8. ' =' → logprob: -12.281600952148438
    9. ']==' → logprob: -12.781600952148438
    10. '==
' → logprob: -13.531600952148438

Token 63: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3869263231754303
    2. '0' → logprob: -1.136926293373108
    3. '<|end|>' → logprob: -9.886926651000977
    4. '```' → logprob: -13.636926651000977
    5. '  ' → logprob: -14.261926651000977
    6. ' ' → logprob: -14.386926651000977
    7. '   ' → logprob: -14.636926651000977
    8. '<|end|>' → logprob: -15.074426651000977
    9. '=' → logprob: -15.449426651000977
    10. '    ' → logprob: -16.074426651000977

Token 64: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026304941624403
    2. ' ' → logprob: -3.6513049602508545
    3. '<|end|>' → logprob: -12.526305198669434
    4. '   ' → logprob: -14.901305198669434
    5. '```' → logprob: -15.276305198669434
    6. '  ' → logprob: -15.901305198669434
    7. '۰' → logprob: -17.088804244995117
    8. 's' → logprob: -17.088804244995117
    9. '<|end|>' → logprob: -17.213804244995117
    10. '       ' → logprob: -17.401304244995117

Token 65: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004486653197091073
    2. ':
' → logprob: -7.750448703765869
    3. '):' → logprob: -11.750448226928711
    4. ' :' → logprob: -12.375448226928711
    5. ' and' → logprob: -12.500448226928711
    6. ':

' → logprob: -14.500448226928711
    7. ':**' → logprob: -14.500448226928711
    8. ',' → logprob: -15.125448226928711
    9. '):
' → logprob: -15.875448226928711
    10. '<|end|>' → logprob: -16.00044822692871

Token 66: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00071695790393278
    2. ' count' → logprob: -7.8757171630859375
    3. 'count' → logprob: -9.000717163085938
    4. '           ' → logprob: -9.125717163085938
    5. '              ' → logprob: -10.500717163085938
    6. '```' → logprob: -10.500717163085938
    7. '                   ' → logprob: -11.625717163085938
    8. '                
' → logprob: -11.625717163085938
    9. ' ' → logprob: -12.375717163085938
    10. '            ' → logprob: -12.625717163085938

Token 67: ' count' (ID: 3605)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7302209138870239
    2. '                   ' → logprob: -0.9802209138870239
    3. 'count' (adapté à ' count') → logprob: -2.4802207946777344
    4. ' count' → logprob: -2.8552207946777344
    5. '           ' → logprob: -7.605220794677734
    6. '                ' → logprob: -7.730220794677734
    7. '                       ' → logprob: -7.855220794677734
    8. '```' → logprob: -9.605220794677734
    9. '   ' → logprob: -9.855220794677734
    10. ' ' → logprob: -9.855220794677734

Token 68: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.03818332403898239
    2. '+=' → logprob: -3.2881832122802734
    3. '+' → logprob: -9.663183212280273
    4. '=' → logprob: -10.788183212280273
    5. ' =' → logprob: -10.913183212280273
    6. ']+=' → logprob: -11.788183212280273
    7. '<|end|>' → logprob: -11.788183212280273
    8. ')' → logprob: -12.163183212280273
    9. '   ' → logprob: -12.538183212280273
    10. '++' → logprob: -12.663183212280273

Token 69: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '<|end|>' → logprob: -18.500051498413086
    4. '   ' → logprob: -18.750051498413086
    5. '１' → logprob: -20.375051498413086
    6. '```' → logprob: -21.000051498413086
    7. '۱' → logprob: -21.500051498413086
    8. '  ' → logprob: -22.125051498413086
    9. '0' → logprob: -22.500051498413086
    10. '           ' → logprob: -22.500051498413086

Token 70: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '１' → logprob: -20.6250057220459
    4. '   ' → logprob: -20.8750057220459
    5. '<|end|>' → logprob: -20.8750057220459
    6. '۱' → logprob: -22.1250057220459
    7. '```' → logprob: -22.5000057220459
    8. '  ' → logprob: -22.5000057220459
    9. '१' → logprob: -23.2500057220459
    10. '١' → logprob: -23.5625057220459

Token 71: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00011534435179783031
    2. '
' → logprob: -10.375115394592285
    3. '		' → logprob: -10.500115394592285
    4. '          ' → logprob: -11.125115394592285
    5. '       ' → logprob: -11.375115394592285
    6. '            
' → logprob: -11.375115394592285
    7. '               ' → logprob: -12.000115394592285
    8. '            ' → logprob: -13.125115394592285
    9. 'j' → logprob: -13.625115394592285
    10. '         ' → logprob: -13.875115394592285

Token 72: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.813969957875088e-05
    2. '               ' → logprob: -10.625067710876465
    3. '		' → logprob: -11.500067710876465
    4. '          ' → logprob: -11.750067710876465
    5. '       ' → logprob: -12.000067710876465
    6. 'j' → logprob: -12.375067710876465
    7. '
' → logprob: -13.000067710876465
    8. '```' → logprob: -13.000067710876465
    9. '            ' → logprob: -13.125067710876465
    10. '            
' → logprob: -13.125067710876465

Token 73: ' j' (ID: 441)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012647966854274273
    2. '       ' → logprob: -4.387648105621338
    3. 'j' (adapté à ' j') → logprob: -10.13764762878418
    4. '		' → logprob: -10.63764762878418
    5. '               ' → logprob: -11.01264762878418
    6. '   ' → logprob: -11.63764762878418
    7. '          ' → logprob: -11.76264762878418
    8. '	       ' → logprob: -12.01264762878418
    9. '<|end|>' → logprob: -12.26264762878418
    10. ' j' → logprob: -12.38764762878418

Token 74: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1131073385477066
    2. ' +=' → logprob: -2.363107442855835
    3. '+' → logprob: -4.363107204437256
    4. '++' → logprob: -9.863107681274414
    5. '=' → logprob: -10.988107681274414
    6. ' +' → logprob: -11.613107681274414
    7. ']+=' → logprob: -15.113107681274414
    8. ' ' → logprob: -15.738107681274414
    9. '+="' → logprob: -16.363107681274414
    10. '```' → logprob: -16.488107681274414

Token 75: ' G' (ID: 499)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015860427811276168
    2. ' ' → logprob: -8.750158309936523
    3. '   ' → logprob: -16.875158309936523
    4. '```' → logprob: -18.500158309936523
    5. ' ' → logprob: -19.625158309936523
    6. '１' → logprob: -19.750158309936523
    7. '  ' → logprob: -20.250158309936523
    8. '<|end|>' → logprob: -20.500158309936523
    9. '       ' → logprob: -20.937658309936523
    10. '           ' → logprob: -21.312658309936523

Token 76: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05269014462828636
    2. 'i' → logprob: -4.302690029144287
    3. '
' → logprob: -4.552690029144287
    4. ' ' → logprob: -5.177690029144287
    5. '       ' → logprob: -5.302690029144287
    6. '  ' → logprob: -5.552690029144287
    7. '+' → logprob: -5.802690029144287
    8. ' i' → logprob: -5.927690029144287
    9. '1' → logprob: -6.302690029144287
    10. '```' → logprob: -6.802690029144287

Token 77: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02015046775341034
    2. '   ' → logprob: -4.145150661468506
    3. '<|end|>' → logprob: -6.770150661468506
    4. '```' → logprob: -6.895150661468506
    5. ' ' → logprob: -7.145150661468506
    6. '
' → logprob: -7.395150661468506
    7. '<|end|>' → logprob: -9.145150184631348
    8. ',' → logprob: -9.270150184631348
    9. '  ' → logprob: -9.770150184631348
    10. ' i' → logprob: -10.270150184631348

Token 78: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.0008135587559081614
    2. ' i' → logprob: -7.1258134841918945
    3. '   ' → logprob: -11.750813484191895
    4. '```' → logprob: -14.500813484191895
    5. '	i' → logprob: -15.000813484191895
    6. 'I' → logprob: -16.62581443786621
    7. '  ' → logprob: -16.75081443786621
    8. ' ' → logprob: -16.87581443786621
    9. 'a' → logprob: -17.12581443786621
    10. '*i' → logprob: -17.50081443786621

Token 79: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.38689154386520386
    2. ' +=' → logprob: -1.1368916034698486
    3. '+' → logprob: -10.88689136505127
    4. ']+=' → logprob: -14.13689136505127
    5. ' +' → logprob: -15.01189136505127
    6. '=' → logprob: -15.38689136505127
    7. '+='' → logprob: -15.38689136505127
    8. ' ' → logprob: -16.136892318725586
    9. '+="' → logprob: -16.386892318725586
    10. '    ' → logprob: -16.511892318725586

Token 80: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -8.494741632603109e-05
    2. ' R' → logprob: -9.37508487701416
    3. ' ' → logprob: -17.000085830688477
    4. '   ' → logprob: -17.250085830688477
    5. '	R' → logprob: -18.000085830688477
    6. '  ' → logprob: -18.625085830688477
    7. 'F' → logprob: -19.500085830688477
    8. '<R' → logprob: -19.625085830688477
    9. 'Ｒ' → logprob: -20.375085830688477
    10. '1' → logprob: -20.750085830688477

Token 81: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6110668778419495
    2. '
' → logprob: -1.2360668182373047
    3. 'return' → logprob: -1.9860668182373047
    4. 'print' → logprob: -3.9860668182373047
    5. '```' → logprob: -5.236066818237305
    6. ' return' → logprob: -5.611066818237305
    7. '    
' → logprob: -7.486066818237305
    8. '1' → logprob: -7.986066818237305
    9. '<|end|>' → logprob: -8.486066818237305
    10. '  
' → logprob: -8.486066818237305

Token 82: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002148357918485999
    2. 'return' → logprob: -6.252148151397705
    3. ' return' → logprob: -8.502148628234863
    4. '
' → logprob: -11.252148628234863
    5. 'print' → logprob: -13.627148628234863
    6. '```' → logprob: -14.002148628234863
    7. '    
' → logprob: -15.002148628234863
    8. '	return' → logprob: -15.127148628234863
    9. '       ' → logprob: -15.252148628234863
    10. ' ' → logprob: -15.377148628234863

Token 83: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4865105450153351
    2. 'return' → logprob: -0.9865105152130127
    3. ' return' → logprob: -4.486510753631592
    4. 'print' (adapté à ' print') → logprob: -6.986510753631592
    5. '
' → logprob: -9.236510276794434
    6. '```' → logprob: -10.236510276794434
    7. ' ' → logprob: -11.236510276794434
    8. '  ' → logprob: -11.986510276794434
    9. '    
' → logprob: -12.236510276794434
    10. ' print' → logprob: -12.361510276794434

Token 84: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.2519983947277069
    2. '(' → logprob: -1.5019984245300293
    3. ' (' → logprob: -9.751997947692871
    4. '()' → logprob: -12.126997947692871
    5. 'count' → logprob: -13.376997947692871
    6. '(
' → logprob: -13.876997947692871
    7. ' ' → logprob: -14.251997947692871
    8. '(cnt' → logprob: -14.251997947692871
    9. '(counter' → logprob: -15.126997947692871
    10. '('' → logprob: -15.126997947692871

Token 85: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.4121114822482923e-06
    2. ')
' → logprob: -12.875003814697266
    3. ' )' → logprob: -14.375003814697266
    4. ')`' → logprob: -16.125003814697266
    5. '))' → logprob: -16.375003814697266
    6. ')

' → logprob: -17.750003814697266
    7. '`)' → logprob: -18.000003814697266
    8. '）' → logprob: -18.375003814697266
    9. '```' → logprob: -18.500003814697266
    10. ')}' → logprob: -18.625003814697266

Token 86: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4050769507884979
    2. '<|end|>' → logprob: -1.2800769805908203
    3. '```' → logprob: -3.9050769805908203
    4. 'R' → logprob: -4.28007698059082
    5. '
' → logprob: -5.53007698059082
    6. ')' → logprob: -5.53007698059082
    7. 'solve' → logprob: -5.78007698059082
    8. '\' → logprob: -6.28007698059082
    9. '<|end|>' → logprob: -6.40507698059082
    10. '\n' → logprob: -7.65507698059082

Token 87: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.14430853724479675
    2. ' solve' → logprob: -2.019308567047119
    3. ' input' → logprob: -7.144308567047119
    4. ' run' → logprob: -8.144308090209961
    5. ' sys' → logprob: -9.019308090209961
    6. 'solve' → logprob: -9.394308090209961
    7. 'main' → logprob: -10.019308090209961
    8. ' __' → logprob: -10.019308090209961
    9. ' solution' → logprob: -10.144308090209961
    10. ' test' → logprob: -10.144308090209961

Token 88: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0001170132018160075
    2. ' ():' → logprob: -10.000117301940918
    3. '(' → logprob: -10.125117301940918
    4. '()' → logprob: -10.500117301940918
    5. '():
' → logprob: -13.500117301940918
    6. '(:' → logprob: -13.875117301940918
    7. ':' → logprob: -14.125117301940918
    8. '()>' → logprob: -14.875117301940918
    9. '(":' → logprob: -15.625117301940918
    10. '_' → logprob: -15.625117301940918

Token 89: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00045247984235174954
    2. ' import' → logprob: -8.375452041625977
    3. '    ' → logprob: -9.625452041625977
    4. 'import' → logprob: -10.500452041625977
    5. '```' → logprob: -10.500452041625977
    6. '    
' → logprob: -10.750452041625977
    7. ' pass' → logprob: -10.750452041625977
    8. ' input' → logprob: -11.750452041625977
    9. ' if' → logprob: -12.000452041625977
    10. ' for' → logprob: -12.250452041625977

Token 90: ' inputs' (ID: 21963)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.17339155077934265
    2. ' import' → logprob: -2.298391580581665
    3. 'R' → logprob: -3.673391580581665
    4. '   ' → logprob: -3.923391580581665
    5. ' R' → logprob: -5.548391342163086
    6. 'n' → logprob: -5.673391342163086
    7. 'for' → logprob: -6.423391342163086
    8. 'if' → logprob: -6.673391342163086
    9. ' for' → logprob: -7.423391342163086
    10. 'N' → logprob: -7.423391342163086

Token 91: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009762464091181755
    2. '=' → logprob: -4.634762287139893
    3. '()' → logprob: -12.38476276397705
    4. '   ' → logprob: -13.63476276397705
    5. ' ' → logprob: -14.50976276397705
    6. '	' → logprob: -15.75976276397705
    7. '＝' → logprob: -16.259761810302734
    8. '_' → logprob: -16.259761810302734
    9. '  ' → logprob: -16.634761810302734
    10. ' ' → logprob: -16.759761810302734

Token 92: ' sys' (ID: 12228)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.8947617411613464
    2. ' sys' → logprob: -1.1447618007659912
    3. 'sys' → logprob: -2.269761800765991
    4. 'list' → logprob: -2.269761800765991
    5. 'input' → logprob: -3.519761800765991
    6. ' input' → logprob: -3.519761800765991
    7. ' [' → logprob: -5.644761562347412
    8. '[input' → logprob: -6.394761562347412
    9. '[' → logprob: -6.894761562347412
    10. '[list' → logprob: -8.01976203918457

Token 93: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.002074840711429715
    2. '.argv' → logprob: -6.252074718475342
    3. '.' → logprob: -8.8770751953125
    4. '.readline' → logprob: -13.1270751953125
    5. '.stdout' → logprob: -13.1270751953125
    6. 'stdin' → logprob: -13.6270751953125
    7. ' .' → logprob: -14.7520751953125
    8. '.std' → logprob: -14.8770751953125
    9. '.input' → logprob: -15.3770751953125
    10. '.setdefault' → logprob: -16.2520751953125

Token 94: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.009371159598231316
    2. '.readlines' → logprob: -4.884371280670166
    3. '.read' → logprob: -6.884371280670166
    4. '.' → logprob: -7.259371280670166
    5. 'read' → logprob: -10.509370803833008
    6. ' readline' → logprob: -12.134370803833008
    7. ' .' → logprob: -13.134370803833008
    8. '<|end|>' → logprob: -14.759370803833008
    9. '.buffer' → logprob: -15.634370803833008
    10. '```' → logprob: -15.634370803833008

Token 95: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.31332966685295105
    2. '()' → logprob: -1.3133296966552734
    3. ' ()' → logprob: -11.063329696655273
    4. '_line' → logprob: -11.438329696655273
    5. '(' → logprob: -11.563329696655273
    6. 'line' → logprob: -11.688329696655273
    7. '（）' → logprob: -12.188329696655273
    8. '_lines' → logprob: -12.438329696655273
    9. '()

' → logprob: -12.813329696655273
    10. ' ().' → logprob: -13.063329696655273

Token 96: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.01817171648144722
    2. 'split' → logprob: -4.018171787261963
    3. 'rstrip' → logprob: -10.768171310424805
    4. 'read' → logprob: -14.643171310424805
    5. ' strip' → logprob: -15.768171310424805
    6. 'decode' → logprob: -16.393171310424805
    7. 'replace' → logprob: -16.393171310424805
    8. ' split' → logprob: -17.768171310424805
    9. 'str' → logprob: -19.018171310424805
    10. '(strip' → logprob: -20.143171310424805

Token 97: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00015908108616713434
    2. '(' → logprob: -9.37515926361084
    3. '('' → logprob: -9.87515926361084
    4. ' ()' → logprob: -12.25015926361084
    5. '（）' → logprob: -12.25015926361084
    6. '()\' → logprob: -12.37515926361084
    7. 'lines' → logprob: -12.87515926361084
    8. '()
' → logprob: -13.25015926361084
    9. '()]' → logprob: -14.25015926361084
    10. '()

' → logprob: -14.25015926361084

Token 98: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018530098721385002
    2. 'def' → logprob: -5.018529891967773
    3. '    
' → logprob: -5.268529891967773
    4. 'R' → logprob: -5.893529891967773
    5. ' R' → logprob: -6.393529891967773
    6. '<|end|>' → logprob: -7.393529891967773
    7. ' for' → logprob: -7.768529891967773
    8. ' ' → logprob: -8.643529891967773
    9. 'for' → logprob: -8.768529891967773
    10. 'n' → logprob: -8.768529891967773

Token 99: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' (adapté à ' R') → logprob: -0.024642404168844223
    2. ' R' → logprob: -3.7746424674987793
    3. 'r' → logprob: -7.274642467498779
    4. '   ' → logprob: -7.649642467498779
    5. 'for' → logprob: -9.524641990661621
    6. ' ' → logprob: -9.774641990661621
    7. 'def' → logprob: -10.149641990661621
    8. 'n' → logprob: -10.649641990661621
    9. ' for' → logprob: -11.524641990661621
    10. 'solve' → logprob: -12.524641990661621

Token 100: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07537984102964401
    2. ' =' → logprob: -2.8253798484802246
    3. '=' → logprob: -4.450379848480225
    4. ' ,' → logprob: -6.450379848480225
    5. ',R' → logprob: -9.950379371643066
    6. ',G' → logprob: -11.950379371643066
    7. '=int' → logprob: -12.700379371643066
    8. ' ' → logprob: -12.825379371643066
    9. '   ' → logprob: -13.200379371643066
    10. '  ' → logprob: -13.700379371643066

Token 101: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.002475777640938759
    2. ' int' → logprob: -6.002475738525391
    3. '[int' → logprob: -16.87747573852539
    4. '<int' → logprob: -17.50247573852539
    5. '(int' → logprob: -17.75247573852539
    6. '=int' → logprob: -18.50247573852539
    7. 'ints' → logprob: -19.12747573852539
    8. '	int' → logprob: -19.50247573852539
    9. ' ' → logprob: -20.50247573852539
    10. ':int' → logprob: -20.87747573852539

Token 102: '(inputs' (ID: 78697)
  Prédit: '(inputs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(inputs' → logprob: -3.845798710244708e-05
    2. '(' → logprob: -10.250038146972656
    3. 'inputs' → logprob: -12.875038146972656
    4. '(input' → logprob: -14.875038146972656
    5. '(outputs' → logprob: -16.750038146972656
    6. '(
' → logprob: -17.875038146972656
    7. ' inputs' → logprob: -17.875038146972656
    8. '(in' → logprob: -18.000038146972656
    9. '(tokens' → logprob: -18.125038146972656
    10. ' (' → logprob: -18.250038146972656

Token 103: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. ' [' → logprob: -16.625
    3. '(' → logprob: -18.0
    4. '   ' → logprob: -18.125
    5. '0' → logprob: -18.75
    6. ')[' → logprob: -19.75
    7. '\[' → logprob: -19.875
    8. ')' → logprob: -21.0
    9. '```' → logprob: -21.0
    10. ' ' → logprob: -21.75

Token 104: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '1' → logprob: -18.25
    3. '[' → logprob: -18.625
    4. ' ' → logprob: -18.625
    5. '۰' → logprob: -20.375
    6. ')' → logprob: -21.125
    7. '０' → logprob: -21.25
    8. '   ' → logprob: -21.375
    9. '000' → logprob: -22.375
    10. '00' → logprob: -22.375

Token 105: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20159147679805756
    2. '])' → logprob: -1.7015914916992188
    3. ' )' → logprob: -9.701591491699219
    4. ']' → logprob: -10.201591491699219
    5. ')]' → logprob: -10.951591491699219
    6. ' ])' → logprob: -11.076591491699219
    7. ')
' → logprob: -11.326591491699219
    8. ''])' → logprob: -11.451591491699219
    9. '))' → logprob: -12.076591491699219
    10. '）' → logprob: -12.451591491699219

Token 106: '   ' (ID: 271)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.6212123036384583
    2. ' G' → logprob: -1.1212122440338135
    3. '   ' → logprob: -1.9962122440338135
    4. '	G' → logprob: -7.246212482452393
    5. ' ' → logprob: -8.621212005615234
    6. '  ' → logprob: -10.371212005615234
    7. '    ' → logprob: -10.996212005615234
    8. ',G' → logprob: -11.496212005615234
    9. ',' → logprob: -11.871212005615234
    10. ' ' → logprob: -12.371212005615234

Token 107: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' (adapté à ' G') → logprob: -0.0021869030315428972
    2. ' G' → logprob: -6.1271867752075195
    3. '   ' → logprob: -13.62718677520752
    4. '	G' → logprob: -14.87718677520752
    5. ' ' → logprob: -16.627187728881836
    6. '  ' → logprob: -17.502187728881836
    7. ',G' → logprob: -17.877187728881836
    8. '
' → logprob: -18.002187728881836
    9. '```' → logprob: -18.627187728881836
    10. 'Ｇ' → logprob: -19.127187728881836

Token 108: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005251068156212568
    2. '=' → logprob: -5.255250930786133
    3. ' ' → logprob: -11.005250930786133
    4. ' ' → logprob: -15.755250930786133
    5. '=int' → logprob: -15.880250930786133
    6. ')' → logprob: -16.005250930786133
    7. '<|end|>' → logprob: -16.380250930786133
    8. '   ' → logprob: -16.630250930786133
    9. '  ' → logprob: -16.755250930786133
    10. ' =
' → logprob: -17.505250930786133

Token 109: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.06196959316730499
    2. ' int' → logprob: -2.811969518661499
    3. '=int' → logprob: -13.936969757080078
    4. '(int' → logprob: -14.061969757080078
    5. '[int' → logprob: -15.686969757080078
    6. '<int' → logprob: -16.061969757080078
    7. 'ints' → logprob: -18.061969757080078
    8. '	int' → logprob: -18.311969757080078
    9. ':int' → logprob: -18.436969757080078
    10. ']int' → logprob: -18.686969757080078

Token 110: '(inputs' (ID: 78697)
  Prédit: '(inputs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(inputs' → logprob: -7.505351095460355e-05
    2. 'inputs' → logprob: -9.500075340270996
    3. ' inputs' → logprob: -16.25007438659668
    4. '(input' → logprob: -16.87507438659668
    5. 'puts' → logprob: -17.00007438659668
    6. ')' → logprob: -17.25007438659668
    7. '(' → logprob: -18.12507438659668
    8. '(outputs' → logprob: -18.12507438659668
    9. ' (' → logprob: -19.25007438659668
    10. 'put' → logprob: -19.75007438659668

Token 111: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00012403888104017824
    2. '1' → logprob: -9.000123977661133
    3. '```' → logprob: -15.625123977661133
    4. ')' → logprob: -15.875123977661133
    5. '(' → logprob: -15.875123977661133
    6. '2' → logprob: -16.625123977661133
    7. ' ' → logprob: -17.625123977661133
    8. '   ' → logprob: -17.750123977661133
    9. ' [' → logprob: -17.875123977661133
    10. '3' → logprob: -18.500123977661133

Token 112: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.749814019713085e-06
    2. ' ' → logprob: -12.125006675720215
    3. '0' → logprob: -14.250006675720215
    4. '[' → logprob: -15.375006675720215
    5. '   ' → logprob: -15.500006675720215
    6. '```' → logprob: -16.00000762939453
    7. '2' → logprob: -17.68750762939453
    8. '  ' → logprob: -17.87500762939453
    9. '' → logprob: -18.68750762939453
    10. '１' → logprob: -18.75000762939453

Token 113: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017218305729329586
    2. ')
' → logprob: -7.0017218589782715
    3. '])' → logprob: -7.2517218589782715
    4. '   ' → logprob: -9.626721382141113
    5. ' )' → logprob: -11.626721382141113
    6. ')]' → logprob: -12.376721382141113
    7. '<|end|>' → logprob: -12.376721382141113
    8. ']' → logprob: -12.501721382141113
    9. '）' → logprob: -13.001721382141113
    10. ')
' → logprob: -13.126721382141113

Token 114: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011145912110805511
    2. 'B' → logprob: -4.636146068572998
    3. ' B' → logprob: -6.636146068572998
    4. '```' → logprob: -10.01114559173584
    5. ' ' → logprob: -10.88614559173584
    6. '    
' → logprob: -12.63614559173584
    7. '	B' → logprob: -12.63614559173584
    8. '  ' → logprob: -12.63614559173584
    9. '    ' → logprob: -14.26114559173584
    10. ',' → logprob: -14.26114559173584

Token 115: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.12693189084529877
    2. ' B' → logprob: -2.12693190574646
    3. '   ' → logprob: -13.251932144165039
    4. ' ' → logprob: -13.501932144165039
    5. '```' → logprob: -15.001932144165039
    6. 'int' → logprob: -15.501932144165039
    7. '  ' → logprob: -15.876932144165039
    8. '	B' → logprob: -17.00193214416504
    9. 'b' → logprob: -17.12693214416504
    10. ' int' → logprob: -17.87693214416504

Token 116: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889562100172043
    2. '=' → logprob: -2.5788955688476562
    3. '=int' → logprob: -12.203895568847656
    4. ' ' → logprob: -14.078895568847656
    5. '   ' → logprob: -16.953895568847656
    6. '  ' → logprob: -17.578895568847656
    7. ' ' → logprob: -18.203895568847656
    8. ')' → logprob: -18.453895568847656
    9. ' =)' → logprob: -18.703895568847656
    10. '＝' → logprob: -18.953895568847656

Token 117: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0007100477814674377
    2. ' int' → logprob: -7.2507100105285645
    3. '(int' → logprob: -16.500709533691406
    4. '   ' → logprob: -16.750709533691406
    5. '<int' → logprob: -17.125709533691406
    6. '[int' → logprob: -17.375709533691406
    7. '=int' → logprob: -17.500709533691406
    8. 'ints' → logprob: -18.500709533691406
    9. '	int' → logprob: -19.125709533691406
    10. ' ' → logprob: -19.875709533691406

Token 118: '(inputs' (ID: 78697)
  Prédit: '(inputs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(inputs' → logprob: -0.0011128316400572658
    2. 'inputs' → logprob: -7.251112937927246
    3. 'int' → logprob: -7.876112937927246
    4. '(int' → logprob: -11.626112937927246
    5. '2' → logprob: -11.751112937927246
    6. '(input' → logprob: -13.751112937927246
    7. ' inputs' → logprob: -14.126112937927246
    8. '(outputs' → logprob: -14.251112937927246
    9. 'puts' → logprob: -14.376112937927246
    10. '[int' → logprob: -14.876112937927246

Token 119: '[' (ID: 58)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.08897021412849426
    2. '[' → logprob: -2.463970184326172
    3. '```' → logprob: -11.588970184326172
    4. '(' → logprob: -12.213970184326172
    5. '   ' → logprob: -12.213970184326172
    6. ' ' → logprob: -12.713970184326172
    7. '])' → logprob: -12.838970184326172
    8. '3' → logprob: -13.463970184326172
    9. '  ' → logprob: -14.463970184326172
    10. '-' → logprob: -14.463970184326172

Token 120: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -15.250000953674316
    3. '```' → logprob: -16.25
    4. '   ' → logprob: -16.75
    5. '0' → logprob: -17.4375
    6. '3' → logprob: -17.75
    7. '``' → logprob: -17.9375
    8. '
' → logprob: -18.0
    9. '  ' → logprob: -18.1875
    10. '-' → logprob: -18.25

Token 121: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007029708009213209
    2. ')
' → logprob: -5.0070295333862305
    3. '   ' → logprob: -8.13202953338623
    4. ')
' → logprob: -11.75702953338623
    5. ' )' → logprob: -12.63202953338623
    6. ' ' → logprob: -12.75702953338623
    7. '```' → logprob: -13.50702953338623
    8. '）' → logprob: -14.13202953338623
    9. ' ' → logprob: -14.25702953338623
    10. '<|end|>' → logprob: -14.75702953338623

Token 122: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.052514947950839996
    2. 'N' → logprob: -3.1775150299072266
    3. ' N' → logprob: -4.677515029907227
    4. ' ' → logprob: -9.802515029907227
    5. '```' → logprob: -9.927515029907227
    6. '  ' → logprob: -10.302515029907227
    7. '    ' → logprob: -11.677515029907227
    8. '    
' → logprob: -11.802515029907227
    9. '
' → logprob: -11.927515029907227
    10. '	N' → logprob: -12.427515029907227

Token 123: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -1.5928495486150496e-05
    2. ' N' → logprob: -11.125016212463379
    3. '   ' → logprob: -14.000016212463379
    4. 'n' → logprob: -16.500015258789062
    5. ' ' → logprob: -16.500015258789062
    6. '
' → logprob: -17.500015258789062
    7. '  ' → logprob: -17.625015258789062
    8. '    
' → logprob: -17.625015258789062
    9. '	N' → logprob: -17.625015258789062
    10. '```' → logprob: -18.125015258789062

Token 124: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197306513786316
    2. '=' → logprob: -2.8119730949401855
    3. '=int' → logprob: -12.186972618103027
    4. ' ' → logprob: -15.061972618103027
    5. '   ' → logprob: -17.811973571777344
    6. ' ' → logprob: -18.311973571777344
    7. ' =
' → logprob: -18.561973571777344
    8. '=
' → logprob: -18.936973571777344
    9. 'int' → logprob: -19.561973571777344
    10. ')' → logprob: -19.936973571777344

Token 125: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.12693072855472565
    2. ' int' → logprob: -2.1269307136535645
    3. '   ' → logprob: -13.376931190490723
    4. '(int' → logprob: -14.751931190490723
    5. '[int' → logprob: -15.376931190490723
    6. '	int' → logprob: -15.751931190490723
    7. '=int' → logprob: -15.751931190490723
    8. '<int' → logprob: -15.876931190490723
    9. 'ints' → logprob: -17.001930236816406
    10. ' ' → logprob: -17.376930236816406

Token 126: '(inputs' (ID: 78697)
  Prédit: '(inputs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(inputs' → logprob: -2.0100624169572257e-05
    2. '(int' → logprob: -11.500020027160645
    3. 'inputs' → logprob: -12.000020027160645
    4. '(input' → logprob: -12.875020027160645
    5. 'int' → logprob: -14.000020027160645
    6. '(' → logprob: -16.12502098083496
    7. '(in' → logprob: -16.75002098083496
    8. ' (' → logprob: -17.75002098083496
    9. '(tokens' → logprob: -18.00002098083496
    10. ' inputs' → logprob: -18.25002098083496

Token 127: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0014490410685539246
    2. '(' → logprob: -7.501449108123779
    3. '3' → logprob: -7.626449108123779
    4. '4' → logprob: -8.001448631286621
    5. ')' → logprob: -10.251448631286621
    6. '2' → logprob: -10.876448631286621
    7. ']' → logprob: -12.001448631286621
    8. '[-' → logprob: -12.626448631286621
    9. '.' → logprob: -13.001448631286621
    10. '])' → logprob: -13.001448631286621

Token 128: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.008129963040119e-06
    2. '-' → logprob: -13.375003814697266
    3. '2' → logprob: -14.000003814697266
    4. 'int' → logprob: -14.500003814697266
    5. ' ' → logprob: -15.125003814697266
    6. '4' → logprob: -15.875003814697266
    7. '   ' → logprob: -16.312503814697266
    8. '```' → logprob: -16.375003814697266
    9. 'inputs' → logprob: -16.687503814697266
    10. '(' → logprob: -16.750003814697266

Token 129: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.759734732331708e-05
    2. ')
' → logprob: -11.000017166137695
    3. ' )' → logprob: -15.250017166137695
    4. ')
' → logprob: -15.750017166137695
    5. '   ' → logprob: -16.250017166137695
    6. '）' → logprob: -16.500017166137695
    7. ')`' → logprob: -16.625017166137695
    8. '))' → logprob: -16.875017166137695
    9. ')#' → logprob: -17.375017166137695
    10. ')}' → logprob: -17.625017166137695

Token 130: '   ' (ID: 271)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.6586777567863464
    2. '   ' → logprob: -0.7836777567863464
    3. ' solve' → logprob: -3.908677816390991
    4. '
' → logprob: -5.658677577972412
    5. '```' → logprob: -6.783677577972412
    6. '    
' → logprob: -7.033677577972412
    7. '.solve' → logprob: -9.90867805480957
    8. '	s' → logprob: -10.65867805480957
    9. '  
' → logprob: -10.78367805480957
    10. 'main' → logprob: -11.15867805480957

Token 131: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' (adapté à ' solve') → logprob: -0.001960274763405323
    2. '   ' → logprob: -6.251960277557373
    3. ' solve' → logprob: -10.376959800720215
    4. '.solve' → logprob: -15.251959800720215
    5. '```' → logprob: -15.751959800720215
    6. '  ' → logprob: -16.75196075439453
    7. '    
' → logprob: -16.87696075439453
    8. 'resolve' → logprob: -17.87696075439453
    9. '``' → logprob: -18.37696075439453
    10. ' ' → logprob: -18.87696075439453

Token 132: '(R' (ID: 4092)
  Prédit: '(R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(R' → logprob: -0.20146098732948303
    2. '(' → logprob: -1.7014609575271606
    3. '(N' → logprob: -10.076460838317871
    4. ' (' → logprob: -12.951460838317871
    5. '(
' → logprob: -13.326460838317871
    6. '(`' → logprob: -14.826460838317871
    7. '((' → logprob: -15.576460838317871
    8. '(

' → logprob: -15.826460838317871
    9. '```' → logprob: -16.326461791992188
    10. '(S' → logprob: -16.326461791992188

Token 133: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002523992152418941
    2. ',G' → logprob: -8.375252723693848
    3. ' ,' → logprob: -10.750252723693848
    4. ',g' → logprob: -16.00025177001953
    5. 'G' → logprob: -16.12525177001953
    6. ',
' → logprob: -16.50025177001953
    7. ')' → logprob: -17.87525177001953
    8. '，' → logprob: -18.25025177001953
    9. ' ' → logprob: -18.37525177001953
    10. '   ' → logprob: -18.37525177001953

Token 134: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.0005536287208087742
    2. ' G' → logprob: -7.500553607940674
    3. '   ' → logprob: -14.375554084777832
    4. ' ' → logprob: -17.500553131103516
    5. '	G' → logprob: -18.000553131103516
    6. '  ' → logprob: -18.125553131103516
    7. '    ' → logprob: -18.250553131103516
    8. ')' → logprob: -20.875553131103516
    9. ',G' → logprob: -20.875553131103516
    10. '
' → logprob: -21.125553131103516

Token 135: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.963691804325208e-05
    2. ' ,' → logprob: -10.875029563903809
    3. ',B' → logprob: -12.000029563903809
    4. ',G' → logprob: -13.000029563903809
    5. 'B' → logprob: -13.250029563903809
    6. 'G' → logprob: -16.125030517578125
    7. ',
' → logprob: -16.500030517578125
    8. ')' → logprob: -16.500030517578125
    9. '，' → logprob: -16.875030517578125
    10. ',

' → logprob: -17.250030517578125

Token 136: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.001326433615759015
    2. ' B' → logprob: -6.626326560974121
    3. 'N' → logprob: -15.501326560974121
    4. ' ' → logprob: -15.876326560974121
    5. '   ' → logprob: -16.751325607299805
    6. '	B' → logprob: -18.126325607299805
    7. 'b' → logprob: -18.501325607299805
    8. '  ' → logprob: -19.001325607299805
    9. '    ' → logprob: -19.501325607299805
    10. ' ' → logprob: -19.751325607299805

Token 137: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00043257648940198123
    2. ',N' → logprob: -8.625432968139648
    3. 'N' → logprob: -8.875432968139648
    4. ' ,' → logprob: -9.125432968139648
    5. ' N' → logprob: -12.625432968139648
    6. ')' → logprob: -14.625432968139648
    7. '   ' → logprob: -15.375432968139648
    8. '```' → logprob: -16.12543296813965
    9. ',
' → logprob: -16.37543296813965
    10. ' ' → logprob: -17.12543296813965

Token 138: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.03804183006286621
    2. ' N' → logprob: -3.288041830062866
    3. '   ' → logprob: -15.413042068481445
    4. ')' → logprob: -16.163042068481445
    5. ' ' → logprob: -16.288042068481445
    6. '	N' → logprob: -18.038042068481445
    7. ' ' → logprob: -18.288042068481445
    8. '    ' → logprob: -19.038042068481445
    9. '  ' → logprob: -19.163042068481445
    10. 'n' → logprob: -19.163042068481445

Token 139: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.173704271830502e-06
    2. ')
' → logprob: -12.75000286102295
    3. ' )' → logprob: -16.000003814697266
    4. ')`' → logprob: -16.625003814697266
    5. ')#' → logprob: -17.875003814697266
    6. ')

' → logprob: -17.875003814697266
    7. '))' → logprob: -17.875003814697266
    8. ')**' → logprob: -18.125003814697266
    9. ')}' → logprob: -18.750003814697266
    10. '```' → logprob: -18.875003814697266

Token 140: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.006249546073377132
    2. '\n' → logprob: -6.25624942779541
    3. '```' → logprob: -6.50624942779541
    4. '<|end|>' → logprob: -6.75624942779541
    5. '\' → logprob: -7.00624942779541
    6. '
' → logprob: -7.88124942779541
    7. ' if' → logprob: -8.75624942779541
    8. '#' → logprob: -9.38124942779541
    9. 'main' → logprob: -10.88124942779541
    10. 'I' → logprob: -10.88124942779541

Token 141: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.014194532297551632
    2. '__' → logprob: -4.264194488525391
    3. ' ' → logprob: -11.51419448852539
    4. '_' → logprob: -11.63919448852539
    5. '_name' → logprob: -11.76419448852539
    6. 'name' → logprob: -13.38919448852539
    7. '___' → logprob: -14.01419448852539
    8. ' _' → logprob: -14.01419448852539
    9. ' ' → logprob: -14.63919448852539
    10. ' ___' → logprob: -14.63919448852539

Token 142: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.047221049666404724
    2. ' ==' → logprob: -3.7972209453582764
    3. '==' → logprob: -4.0472211837768555
    4. '.__' → logprob: -6.0472211837768555
    5. '.' → logprob: -6.4222211837768555
    6. ' __' → logprob: -6.7972211837768555
    7. '__.__' → logprob: -7.4222211837768555
    8. '__.' → logprob: -8.547221183776855
    9. '[' → logprob: -9.672221183776855
    10. ' .' → logprob: -10.047221183776855

Token 143: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -5.512236498361744e-07
    2. '__.__' → logprob: -15.500000953674316
    3. '___' → logprob: -16.375
    4. '==' → logprob: -16.625
    5. '____' → logprob: -17.375
    6. ' ==' → logprob: -18.0
    7. '__
' → logprob: -18.25
    8. '__.' → logprob: -19.0
    9. '__('' → logprob: -19.0
    10. '__)' → logprob: -19.25

Token 144: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5826688408851624
    2. ' ==' → logprob: -1.2076687812805176
    3. '==' → logprob: -1.9576687812805176
    4. '=="' → logprob: -6.582668781280518
    5. '=='' → logprob: -9.582669258117676
    6. '=' → logprob: -11.332669258117676
    7. '___' → logprob: -11.582669258117676
    8. '__.__' → logprob: -11.582669258117676
    9. '_' → logprob: -11.832669258117676
    10. '===' → logprob: -12.207669258117676

Token 145: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2019822746515274
    2. ''' → logprob: -1.7019822597503662
    3. '__' → logprob: -7.701982498168945
    4. ' "__' → logprob: -9.201982498168945
    5. ' '__' → logprob: -11.576982498168945
    6. ' "' → logprob: -12.201982498168945
    7. '"user' → logprob: -14.576982498168945
    8. ' '' → logprob: -15.576982498168945
    9. ' __' → logprob: -15.701982498168945
    10. ''s' → logprob: -15.826982498168945

Token 146: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.3902033970225602e-05
    2. 'name' → logprob: -11.500014305114746
    3. 'built' → logprob: -13.375014305114746
    4. '__' → logprob: -14.000014305114746
    5. 'builtin' → logprob: -14.875014305114746
    6. 'm' → logprob: -15.375014305114746
    7. 'file' → logprob: -15.500014305114746
    8. '_main' → logprob: -15.750014305114746
    9. ' main' → logprob: -16.37501335144043
    10. 'mp' → logprob: -16.87501335144043

Token 147: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.08196774125099182
    2. '__":
' → logprob: -2.581967830657959
    3. '__.' → logprob: -5.956967830657959
    4. '__.__' → logprob: -8.0819673538208
    5. '__["' → logprob: -9.2069673538208
    6. '__:' → logprob: -9.8319673538208
    7. '__("' → logprob: -11.4569673538208
    8. '__",' → logprob: -12.2069673538208
    9. '__':
' → logprob: -12.5819673538208
    10. '__[' → logprob: -13.3319673538208

Token 148: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.248736172914505
    2. 'main' → logprob: -1.7487361431121826
    3. '   ' → logprob: -3.1237361431121826
    4. '	main' → logprob: -6.123736381530762
    5. '_main' → logprob: -11.373736381530762
    6. '   ' → logprob: -12.373736381530762
    7. ' ' → logprob: -12.623736381530762
    8. '  ' → logprob: -12.623736381530762
    9. '    
' → logprob: -12.748736381530762
    10. '__' → logprob: -12.873736381530762

Token 149: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -2.165027217415627e-05
    2. ' main' → logprob: -10.750021934509277
    3. '	main' → logprob: -16.37502098083496
    4. '   ' → logprob: -18.00002098083496
    5. '.main' → logprob: -23.25002098083496
    6. '_main' → logprob: -23.62502098083496
    7. '(main' → logprob: -23.62502098083496
    8. ' ' → logprob: -24.00002098083496
    9. 'import' → logprob: -24.37502098083496
    10. '```' → logprob: -24.37502098083496

Token 150: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.166338137816638e-05
    2. '(' → logprob: -10.625031471252441
    3. '()
' → logprob: -12.125031471252441
    4. '()`' → logprob: -13.750031471252441
    5. ' ()' → logprob: -14.875031471252441
    6. '();' → logprob: -16.125032424926758
    7. '()

' → logprob: -16.500032424926758
    8. '()"' → logprob: -16.625032424926758
    9. '()\' → logprob: -16.875032424926758
    10. '()<' → logprob: -17.125032424926758


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 148
Tokens correctement prédits (1ère position, stricte): 65
Tokens correctement prédits (1ère position, avec adaptation): 72
Tokens correctement prédits (top 10): 131
Précision stricte (1ère position): 43.92%
Précision adaptée (1ère position): 48.65%
Précision (top 10): 88.51%
================================================================================
