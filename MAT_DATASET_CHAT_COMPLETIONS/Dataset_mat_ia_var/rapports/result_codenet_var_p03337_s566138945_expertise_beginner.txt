================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:29
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
a, b = input().split()
a = int(a)
b = int(b)

somme = a + b
difference = a - b
produit = a * b

if somme >= difference and somme >= produit:
    plus_grand = somme
elif difference >= somme and difference >= produit:
    plus_grand = difference
else:
    plus_grand = produit

print(plus_grand)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'a' (ID: 64)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' b' (ID: 287)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2113417536020279
    2. '+' → logprob: -1.7113417387008667
    3. ',' → logprob: -5.336341857910156
    4. ' =' → logprob: -5.586341857910156
    5. ' ' → logprob: -8.086341857910156
    6. ' +' → logprob: -8.586341857910156
    7. '*' → logprob: -8.711341857910156
    8. '+=' → logprob: -8.961341857910156
    9. '.' → logprob: -9.086341857910156
    10. '[' → logprob: -9.586341857910156

Token 4: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12097881734371185
    2. '0' → logprob: -2.870978832244873
    3. '1' → logprob: -2.995978832244873
    4. '10' → logprob: -4.995978832244873
    5. '5' → logprob: -8.870978355407715
    6. '42' → logprob: -9.620978355407715
    7. 'input' → logprob: -9.995978355407715
    8. '[' → logprob: -10.120978355407715
    9. 'a' → logprob: -10.370978355407715
    10. ' [' → logprob: -10.495978355407715

Token 5: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020070893689990044
    2. '.' → logprob: -4.520071029663086
    3. '()' → logprob: -4.895071029663086
    4. '(
' → logprob: -7.270071029663086
    5. '().' → logprob: -8.520071029663086
    6. '(.)' → logprob: -8.520071029663086
    7. '('.')' → logprob: -9.520071029663086
    8. ',' → logprob: -9.520071029663086
    9. ''' → logprob: -10.020071029663086
    10. '(

' → logprob: -10.270071029663086

Token 6: 'split' (ID: 13627)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.6593208909034729
    2. 'split' → logprob: -0.7843208909034729
    3. 'strip' → logprob: -4.409320831298828
    4. '.strip' → logprob: -5.034320831298828
    5. '.' → logprob: -5.659320831298828
    6. ',' → logprob: -6.284320831298828
    7. '().' → logprob: -6.909320831298828
    8. '()' → logprob: -7.534320831298828
    9. ' split' → logprob: -8.034320831298828
    10. ''s' → logprob: -9.409320831298828

Token 7: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28146085143089294
    2. '()' → logprob: -1.4064608812332153
    3. '('' → logprob: -9.656460762023926
    4. '(
' → logprob: -9.906460762023926
    5. '`' → logprob: -10.406460762023926
    6. '(

' → logprob: -10.906460762023926
    7. '```' → logprob: -10.906460762023926
    8. '(`' → logprob: -11.031460762023926
    9. '`()' → logprob: -11.031460762023926
    10. '()`' → logprob: -11.156460762023926

Token 8: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.809756875038147
    2. '.' → logprob: -1.434756875038147
    3. '=' → logprob: -1.434756875038147
    4. ',' → logprob: -3.8097567558288574
    5. ' =' → logprob: -4.184756755828857
    6. '#' → logprob: -4.309756755828857
    7. '```' → logprob: -4.809756755828857
    8. '[' → logprob: -5.434756755828857
    9. '*' → logprob: -6.184756755828857
    10. ' a' → logprob: -6.684756755828857

Token 9: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3990224301815033
    2. '[' → logprob: -1.1490224599838257
    3. ' ' → logprob: -5.649022579193115
    4. '.' → logprob: -5.899022579193115
    5. '<|end|>' → logprob: -6.649022579193115
    6. 'a' → logprob: -6.899022579193115
    7. ' +' → logprob: -7.149022579193115
    8. '*' → logprob: -7.274022579193115
    9. '```' → logprob: -8.274022102355957
    10. '=' → logprob: -8.274022102355957

Token 10: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07994870096445084
    2. ' int' → logprob: -3.079948663711548
    3. 'a' → logprob: -3.579948663711548
    4. ' a' → logprob: -6.329948902130127
    5. 'float' → logprob: -7.454948902130127
    6. 'input' → logprob: -8.329948425292969
    7. 'b' → logprob: -9.329948425292969
    8. '0' → logprob: -9.454948425292969
    9. ' ' → logprob: -9.954948425292969
    10. ' float' → logprob: -9.954948425292969

Token 11: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.2528604567050934
    2. '(' → logprob: -1.502860426902771
    3. '('' → logprob: -7.2528605461120605
    4. 'a' → logprob: -9.002860069274902
    5. '()' → logprob: -10.877860069274902
    6. '```' → logprob: -11.002860069274902
    7. '("' → logprob: -11.127860069274902
    8. '(input' → logprob: -11.377860069274902
    9. '("("' → logprob: -11.502860069274902
    10. ')' → logprob: -12.127860069274902

Token 12: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006612073048017919
    2. '+' → logprob: -7.375661373138428
    3. ')
' → logprob: -11.62566089630127
    4. ' )' → logprob: -11.62566089630127
    5. '<|end|>' → logprob: -12.37566089630127
    6. '+)' → logprob: -12.87566089630127
    7. ')+' → logprob: -13.00066089630127
    8. ')a' → logprob: -13.50066089630127
    9. ' +' → logprob: -13.50066089630127
    10. '*' → logprob: -13.62566089630127

Token 13: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5464768409729004
    2. '+' → logprob: -0.9214768409729004
    3. ' b' → logprob: -4.7964768409729
    4. ' ' → logprob: -4.7964768409729
    5. '<|end|>' → logprob: -6.1714768409729
    6. '+b' → logprob: -6.2964768409729
    7. ' +' → logprob: -7.0464768409729
    8. '*' → logprob: -7.7964768409729
    9. ' 
' → logprob: -8.171476364135742
    10. '+
' → logprob: -8.171476364135742

Token 14: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 15: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.348455011844635
    2. ' int' → logprob: -1.2234549522399902
    3. ' ' → logprob: -12.598455429077148
    4. 'b' → logprob: -13.973455429077148
    5. '<int' → logprob: -13.973455429077148
    6. '=int' → logprob: -14.098455429077148
    7. '(int' → logprob: -14.223455429077148
    8. ' b' → logprob: -14.348455429077148
    9. '   ' → logprob: -14.473455429077148
    10. '0' → logprob: -14.598455429077148

Token 16: '(b' (ID: 3229)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18112069368362427
    2. '(b' → logprob: -1.8061206340789795
    3. '(a' → logprob: -6.806120872497559
    4. 'b' → logprob: -9.931120872497559
    5. ' (' → logprob: -9.931120872497559
    6. '('' → logprob: -10.556120872497559
    7. '("("' → logprob: -10.681120872497559
    8. '```' → logprob: -10.806120872497559
    9. ')' → logprob: -10.931120872497559
    10. '()' → logprob: -11.056120872497559

Token 17: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. ')
' → logprob: -14.625001907348633
    3. '')' → logprob: -14.750001907348633
    4. ' )' → logprob: -15.500001907348633
    5. '))' → logprob: -16.000001907348633
    6. '`)' → logprob: -16.125001907348633
    7. '```' → logprob: -16.500001907348633
    8. '+' → logprob: -17.000001907348633
    9. '[' → logprob: -17.125001907348633
    10. '")' → logprob: -17.625001907348633

Token 18: 's' (ID: 82)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.0643067359924316
    2. 'if' → logprob: -1.0643067359924316
    3. 's' → logprob: -2.4393067359924316
    4. '+' → logprob: -2.5643067359924316
    5. 'i' → logprob: -2.6893067359924316
    6. 'print' → logprob: -3.9393067359924316
    7. 'for' → logprob: -4.064306735992432
    8. 'n' → logprob: -4.564306735992432
    9. 'p' → logprob: -5.064306735992432
    10. 'sum' → logprob: -5.189306735992432

Token 19: 'omme' (ID: 30420)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.28016725182533264
    2. 'u' → logprob: -1.5301672220230103
    3. ' =' → logprob: -4.155167102813721
    4. '=' → logprob: -4.905167102813721
    5. '+' → logprob: -6.280167102813721
    6. ' +=' → logprob: -7.905167102813721
    7. 'tr' → logprob: -8.155167579650879
    8. 't' → logprob: -8.280167579650879
    9. '1' → logprob: -8.280167579650879
    10. 'r' → logprob: -8.405167579650879

Token 20: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007913462817668915
    2. 's' → logprob: -5.882913589477539
    3. '_' → logprob: -5.882913589477539
    4. '+' → logprob: -6.757913589477539
    5. '(a' → logprob: -7.632913589477539
    6. '(s' → logprob: -8.632913589477539
    7. ')' → logprob: -9.132913589477539
    8. '()' → logprob: -9.257913589477539
    9. 'a' → logprob: -9.757913589477539
    10. '=' → logprob: -10.007913589477539

Token 21: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00863123033195734
    2. ' a' → logprob: -4.758631229400635
    3. '0' → logprob: -11.008631706237793
    4. ' ' → logprob: -16.133630752563477
    5. '(a' → logprob: -19.258630752563477
    6. '	a' → logprob: -20.008630752563477
    7. 'b' → logprob: -21.508630752563477
    8. '+' → logprob: -21.508630752563477
    9. '_a' → logprob: -21.508630752563477
    10. 's' → logprob: -21.633630752563477

Token 22: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1602507382631302
    2. ' +' → logprob: -1.9102507829666138
    3. '+b' → logprob: -10.910250663757324
    4. '<|end|>' → logprob: -12.535250663757324
    5. ' ' → logprob: -14.160250663757324
    6. ' +=' → logprob: -14.410250663757324
    7. ')' → logprob: -14.535250663757324
    8. ' +
' → logprob: -14.660250663757324
    9. ' plus' → logprob: -15.035250663757324
    10. '[' → logprob: -15.410250663757324

Token 23: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3132626414299011
    2. ' b' → logprob: -1.313262701034546
    3. ' ' → logprob: -14.438262939453125
    4. '1' → logprob: -14.813262939453125
    5. ' б' → logprob: -17.813262939453125
    6. '	b' → logprob: -17.938262939453125
    7. ' ' → logprob: -18.313262939453125
    8. ')b' → logprob: -18.688262939453125
    9. '_b' → logprob: -18.938262939453125
    10. '```' → logprob: -19.313262939453125

Token 24: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7839823961257935
    2. '<|end|>' → logprob: -1.1589823961257935
    3. '*' → logprob: -2.283982276916504
    4. '\n' → logprob: -3.283982276916504
    5. 'print' → logprob: -4.283982276916504
    6. ';' → logprob: -4.658982276916504
    7. '%' → logprob: -4.783982276916504
    8. '\' → logprob: -5.033982276916504
    9. '.' → logprob: -5.033982276916504
    10. ')' → logprob: -5.158982276916504

Token 25: 'difference' (ID: 133489)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.026847058907151222
    2. 'p' → logprob: -4.526846885681152
    3. '\n' → logprob: -5.026846885681152
    4. '#' → logprob: -5.526846885681152
    5. '*' → logprob: -6.401846885681152
    6. '
' → logprob: -7.276846885681152
    7. '\' → logprob: -7.401846885681152
    8. 'pr' → logprob: -8.276846885681152
    9. '```' → logprob: -8.401846885681152
    10. '+' → logprob: -8.901846885681152

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0019362468738108873
    2. ' ' → logprob: -6.626936435699463
    3. '=' → logprob: -7.876936435699463
    4. '_' → logprob: -9.376935958862305
    5. '<|end|>' → logprob: -9.751935958862305
    6. 's' → logprob: -9.876935958862305
    7. ' ' → logprob: -11.876935958862305
    8. '  ' → logprob: -12.126935958862305
    9. ' =)' → logprob: -12.251935958862305
    10. '<|end|>' → logprob: -12.751935958862305

Token 27: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7030838131904602
    2. ' b' → logprob: -1.0780837535858154
    3. 'a' → logprob: -1.9530837535858154
    4. 'b' → logprob: -3.8280837535858154
    5. ' ' → logprob: -6.8280839920043945
    6. ' ' → logprob: -11.578083992004395
    7. '  ' → logprob: -12.578083992004395
    8. ' space' → logprob: -12.828083992004395
    9. '	a' → logprob: -13.578083992004395
    10. 'space' → logprob: -13.703083992004395

Token 28: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0012252279557287693
    2. '-' → logprob: -6.751224994659424
    3. ' ' → logprob: -10.126225471496582
    4. '<|end|>' → logprob: -12.126225471496582
    5. ' ' → logprob: -12.376225471496582
    6. ')' → logprob: -12.876225471496582
    7. ' +' → logprob: -14.376225471496582
    8. '_' → logprob: -14.501225471496582
    9. ' –' → logprob: -14.876225471496582
    10. ' ,' → logprob: -15.376225471496582

Token 29: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.011048054322600365
    2. ' b' → logprob: -4.511047840118408
    3. '<|end|>' → logprob: -15.886048316955566
    4. ' ' → logprob: -16.01104736328125
    5. '	b' → logprob: -18.51104736328125
    6. ')b' → logprob: -18.63604736328125
    7. ' б' → logprob: -19.63604736328125
    8. '>b' → logprob: -19.76104736328125
    9. '_b' → logprob: -21.51104736328125
    10. ')' → logprob: -22.13604736328125

Token 30: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19482934474945068
    2. ' 
' → logprob: -3.3198294639587402
    3. '<|end|>' → logprob: -3.5698294639587402
    4. '\n' → logprob: -3.6948294639587402
    5. '*' → logprob: -3.6948294639587402
    6. 'print' → logprob: -3.8198294639587402
    7. 's' → logprob: -4.81982946395874
    8. '+' → logprob: -5.31982946395874
    9. 'if' → logprob: -5.44482946395874
    10. '\' → logprob: -5.44482946395874

Token 31: 'produ' (ID: 11634)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.28133076429367065
    2. '*' → logprob: -2.4063308238983154
    3. 'print' → logprob: -2.7813308238983154
    4. ' 
' → logprob: -3.4063308238983154
    5. '\n' → logprob: -3.7813308238983154
    6. 'product' → logprob: -4.656330585479736
    7. '\' → logprob: -5.281330585479736
    8. '*
' → logprob: -5.406330585479736
    9. 'newline' → logprob: -5.656330585479736
    10. '```' → logprob: -6.531330585479736

Token 32: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.6931799650192261
    2. 'ct' → logprob: -0.6931799650192261
    3. '```' → logprob: -11.068180084228516
    4. 'kt' → logprob: -11.693180084228516
    5. ' ct' → logprob: -13.318180084228516
    6. 'ict' → logprob: -13.318180084228516
    7. '``' → logprob: -14.068180084228516
    8. 'c' → logprob: -14.318180084228516
    9. '   ' → logprob: -14.818180084228516
    10. '

' → logprob: -14.943180084228516

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006117198616266251
    2. '=' → logprob: -5.131117343902588
    3. 's' → logprob: -8.75611686706543
    4. ' ' → logprob: -10.50611686706543
    5. '_' → logprob: -13.75611686706543
    6. ')' → logprob: -14.38111686706543
    7. '<|end|>' → logprob: -14.38111686706543
    8. 'a' → logprob: -14.88111686706543
    9. '  ' → logprob: -15.63111686706543
    10. ',' → logprob: -15.88111686706543

Token 34: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.47407814860343933
    2. ' a' → logprob: -0.9740781784057617
    3. ' ' → logprob: -14.349078178405762
    4. ' ' → logprob: -15.349078178405762
    5. '	a' → logprob: -15.349078178405762
    6. '_a' → logprob: -16.974077224731445
    7. '(a' → logprob: -17.474077224731445
    8. 'b' → logprob: -17.599077224731445
    9. '  ' → logprob: -18.474077224731445
    10. ''' → logprob: -18.474077224731445

Token 35: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.474082350730896
    2. '*' → logprob: -0.974082350730896
    3. '*b' → logprob: -13.349081993103027
    4. '**' → logprob: -13.474081993103027
    5. ' ' → logprob: -13.599081993103027
    6. ' ' → logprob: -14.349081993103027
    7. ' **' → logprob: -16.224082946777344
    8. '`' → logprob: -16.474082946777344
    9. '*object' → logprob: -16.849082946777344
    10. '<|end|>' → logprob: -16.974082946777344

Token 36: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.06196768581867218
    2. ' b' → logprob: -2.811967611312866
    3. ' ' → logprob: -17.561967849731445
    4. '	b' → logprob: -18.186967849731445
    5. '_b' → logprob: -19.436967849731445
    6. ' б' → logprob: -19.561967849731445
    7. ' ' → logprob: -20.436967849731445
    8. '*b' → logprob: -21.436967849731445
    9. ')b' → logprob: -21.561967849731445
    10. '<|end|>' → logprob: -22.311967849731445

Token 37: '

' (ID: 279)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.7169296145439148
    2. '\n' → logprob: -1.8419296741485596
    3. '
' → logprob: -2.0919296741485596
    4. ' 
' → logprob: -2.9669296741485596
    5. 'print' → logprob: -2.9669296741485596
    6. '/' → logprob: -3.7169296741485596
    7. '' → logprob: -3.8419296741485596
    8. 'div' → logprob: -4.0919294357299805
    9. '/
' → logprob: -4.4669294357299805
    10. '#' → logprob: -4.5919294357299805

Token 38: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5043438076972961
    2. 'quot' → logprob: -1.2543437480926514
    3. 'division' → logprob: -2.7543437480926514
    4. 'div' → logprob: -3.3793437480926514
    5. 's' → logprob: -5.6293439865112305
    6. 'c' → logprob: -6.1293439865112305
    7. 'quo' → logprob: -6.8793439865112305
    8. 'if' → logprob: -6.8793439865112305
    9. 'qu' → logprob: -7.0043439865112305
    10. '```' → logprob: -7.1293439865112305

Token 39: ' somme' (ID: 64484)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.19959713518619537
    2. ' somme' → logprob: -1.8245971202850342
    3. 'a' → logprob: -4.824597358703613
    4. 's' → logprob: -5.449597358703613
    5. ' ' → logprob: -5.574597358703613
    6. ' ' → logprob: -6.699597358703613
    7. ' b' → logprob: -6.949597358703613
    8. ' s' → logprob: -7.449597358703613
    9. ' difference' → logprob: -8.449597358703613
    10. ' (' → logprob: -8.949597358703613

Token 40: ' >=' (ID: 5064)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.03895089402794838
    2. '>' → logprob: -4.0389509201049805
    3. ' ==' → logprob: -4.7889509201049805
    4. ' >=' → logprob: -5.0389509201049805
    5. ' <' → logprob: -5.9139509201049805
    6. ' <=' → logprob: -6.4139509201049805
    7. ' !=' → logprob: -7.6639509201049805
    8. ' ' → logprob: -7.7889509201049805
    9. '==' → logprob: -8.16395092010498
    10. '>=' → logprob: -9.28895092010498

Token 41: ' difference' (ID: 9809)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10462818294763565
    2. ' ' → logprob: -3.354628086090088
    3. 'b' → logprob: -3.604628086090088
    4. '10' → logprob: -3.979628086090088
    5. '100' → logprob: -4.104628086090088
    6. '20' → logprob: -6.854628086090088
    7. ' b' → logprob: -7.104628086090088
    8. '50' → logprob: -9.604628562927246
    9. '15' → logprob: -10.729628562927246
    10. 'a' → logprob: -10.854628562927246

Token 42: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006230590865015984
    2. ' :' → logprob: -5.256230354309082
    3. ' and' → logprob: -7.006230354309082
    4. 'and' → logprob: -9.506230354309082
    5. ':
' → logprob: -11.881230354309082
    6. '+:' → logprob: -13.006230354309082
    7. '>:' → logprob: -13.756230354309082
    8. '>' → logprob: -13.756230354309082
    9. ':**' → logprob: -13.881230354309082
    10. ',' → logprob: -14.381230354309082

Token 43: ' somme' (ID: 64484)
  Prédit: ' somme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' somme' → logprob: -0.3918287456035614
    2. 's' → logprob: -1.3918287754058838
    3. ' produit' → logprob: -3.266828775405884
    4. 'produ' → logprob: -3.891828775405884
    5. ' difference' → logprob: -5.141828536987305
    6. 'difference' → logprob: -5.516828536987305
    7. 'sum' → logprob: -5.891828536987305
    8. 'sou' → logprob: -7.516828536987305
    9. '```' → logprob: -7.766828536987305
    10. ' ' → logprob: -8.016828536987305

Token 44: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.15776419639587402
    2. ' <=' → logprob: -2.407764196395874
    3. '>=' → logprob: -3.157764196395874
    4. ' >' → logprob: -4.782764434814453
    5. '<=' → logprob: -5.657764434814453
    6. '>' → logprob: -6.657764434814453
    7. ' <' → logprob: -8.907764434814453
    8. ' ' → logprob: -9.657764434814453
    9. '<' → logprob: -10.907764434814453
    10. '```' → logprob: -11.157764434814453

Token 45: ' produit' (ID: 29429)
  Prédit: 'produ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'produ' → logprob: -0.12695278227329254
    2. ' produit' → logprob: -2.126952886581421
    3. 'prod' → logprob: -12.001953125
    4. 'pro' → logprob: -12.626953125
    5. 'product' → logprob: -12.626953125
    6. ' ' → logprob: -12.876953125
    7. '	pro' → logprob: -13.626953125
    8. ' produs' → logprob: -13.751953125
    9. 'Produit' → logprob: -13.751953125
    10. ' produ' → logprob: -13.876953125

Token 46: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003110327525064349
    2. ' :' → logprob: -8.125310897827148
    3. ':
' → logprob: -11.500310897827148
    4. ':**' → logprob: -13.375310897827148
    5. '):' → logprob: -13.750310897827148
    6. ' and' → logprob: -14.125310897827148
    7. '':' → logprob: -15.125310897827148
    8. '>:' → logprob: -15.250310897827148
    9. '':'' → logprob: -15.750310897827148
    10. ',' → logprob: -16.12531089782715

Token 47: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1330828219652176
    2. 'print' → logprob: -2.758082866668701
    3. ' print' → logprob: -4.133082866668701
    4. '    
' → logprob: -4.258082866668701
    5. ':' → logprob: -4.508082866668701
    6. '\n' → logprob: -4.883082866668701
    7. ' 
' → logprob: -5.508082866668701
    8. '
' → logprob: -5.758082866668701
    9. '  
' → logprob: -6.633082866668701
    10. ':
' → logprob: -7.008082866668701

Token 48: ' plus' (ID: 2932)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05005286633968353
    2. ' print' → logprob: -3.0500528812408447
    3. '   ' → logprob: -6.550052642822266
    4. 'result' → logprob: -10.800052642822266
    5. '```' → logprob: -12.175052642822266
    6. 'prin' → logprob: -12.800052642822266
    7. ' result' → logprob: -13.175052642822266
    8. ' ' → logprob: -13.425052642822266
    9. '	print' → logprob: -13.800052642822266
    10. ' resultat' → logprob: -15.175052642822266

Token 49: '_gr' (ID: 30286)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.354561448097229
    2. ' grand' → logprob: -1.979561448097229
    3. '_' → logprob: -2.6045613288879395
    4. '_gr' → logprob: -3.2295613288879395
    5. 's' → logprob: -3.9795613288879395
    6. 'gr' → logprob: -4.3545613288879395
    7. '   ' → logprob: -4.8545613288879395
    8. '_s' → logprob: -6.1045613288879395
    9. '  ' → logprob: -7.1045613288879395
    10. '```' → logprob: -7.6045613288879395

Token 50: 'and' (ID: 427)
  Prédit: 'and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -1.8908587662735954e-05
    2. 'os' → logprob: -11.375019073486328
    3. 'ande' → logprob: -12.375019073486328
    4. '(and' → logprob: -14.625019073486328
    5. 'ands' → logprob: -14.875019073486328
    6. 'rand' → logprob: -14.875019073486328
    7. 'an' → logprob: -15.000019073486328
    8. '_and' → logprob: -15.375019073486328
    9. ' and' → logprob: -15.750019073486328
    10. 'd' → logprob: -15.750019073486328

Token 51: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1426159292459488
    2. '=' → logprob: -2.392616033554077
    3. 's' → logprob: -4.267615795135498
    4. '_' → logprob: -4.267615795135498
    5. 'e' → logprob: -4.517615795135498
    6. '_e' → logprob: -6.892615795135498
    7. ' ' → logprob: -7.142615795135498
    8. '_s' → logprob: -8.267616271972656
    9. 'est' → logprob: -8.767616271972656
    10. '   ' → logprob: -9.392616271972656

Token 52: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07909081876277924
    2. ' somme' → logprob: -2.5790908336639404
    3. 'som' → logprob: -9.07909107208252
    4. 'sum' → logprob: -9.70409107208252
    5. 'sou' → logprob: -11.70409107208252
    6. ' ' → logprob: -12.32909107208252
    7. '   ' → logprob: -12.57909107208252
    8. '	s' → logprob: -12.57909107208252
    9. ' sommet' → logprob: -13.57909107208252
    10. ' ' → logprob: -13.82909107208252

Token 53: '
' (ID: 198)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.08684088289737701
    2. '
' → logprob: -2.836840867996216
    3. 'else' → logprob: -4.211841106414795
    4. '<|end|>' → logprob: -5.711841106414795
    5. '\n' → logprob: -6.211841106414795
    6. '
' → logprob: -6.461841106414795
    7. '```' → logprob: -6.836841106414795
    8. ' elif' → logprob: -7.461841106414795
    9. '    
' → logprob: -8.086840629577637
    10. '' → logprob: -8.211840629577637

Token 54: 'elif' (ID: 29767)
  Prédit: 'elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.004396409727632999
    2. 'else' → logprob: -6.129396438598633
    3. '
' → logprob: -6.879396438598633
    4. '<|end|>' → logprob: -7.254396438598633
    5. ' elif' → logprob: -8.629396438598633
    6. '\n' → logprob: -9.629396438598633
    7. 'e' → logprob: -9.879396438598633
    8. 'el' → logprob: -10.379396438598633
    9. '    
' → logprob: -10.504396438598633
    10. '#elif' → logprob: -11.004396438598633

Token 55: ' difference' (ID: 9809)
  Prédit: ' difference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' difference' → logprob: -0.1456848531961441
    2. 'difference' → logprob: -2.0206849575042725
    3. ' somme' → logprob: -7.020684719085693
    4. ' différence' → logprob: -7.395684719085693
    5. ' produit' → logprob: -7.520684719085693
    6. 's' → logprob: -8.020685195922852
    7. 'produ' → logprob: -8.145685195922852
    8. ' product' → logprob: -8.770685195922852
    9. ' ' → logprob: -11.020685195922852
    10. 'diff' → logprob: -11.020685195922852

Token 56: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.056564152240753174
    2. ' >' → logprob: -2.9315640926361084
    3. '>=' → logprob: -6.8065643310546875
    4. ' <=' → logprob: -8.181564331054688
    5. '>' → logprob: -8.681564331054688
    6. ' <' → logprob: -9.681564331054688
    7. ' ' → logprob: -9.806564331054688
    8. ' ' → logprob: -13.181564331054688
    9. '   ' → logprob: -13.556564331054688
    10. '  ' → logprob: -13.681564331054688

Token 57: ' somme' (ID: 64484)
  Prédit: 'produ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'produ' → logprob: -0.10890980809926987
    2. ' produit' → logprob: -2.358909845352173
    3. 's' → logprob: -5.233909606933594
    4. 'plus' → logprob: -6.233909606933594
    5. ' somme' → logprob: -7.483909606933594
    6. 'prod' → logprob: -7.983909606933594
    7. ' plus' → logprob: -8.733909606933594
    8. 'pro' → logprob: -8.858909606933594
    9. 'product' → logprob: -9.858909606933594
    10. ' ' → logprob: -10.858909606933594

Token 58: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07891159504652023
    2. 'and' → logprob: -2.578911542892456
    3. 'et' → logprob: -11.453911781311035
    4. ' et' → logprob: -12.078911781311035
    5. ' ' → logprob: -12.953911781311035
    6. '   ' → logprob: -13.078911781311035
    7. ' ' → logprob: -14.703911781311035
    8. '```' → logprob: -15.078911781311035
    9. '	and' → logprob: -15.953911781311035
    10. ':' → logprob: -16.07891082763672

Token 59: ' difference' (ID: 9809)
  Prédit: ' difference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' difference' → logprob: -0.5760659575462341
    2. 'difference' → logprob: -0.8260659575462341
    3. ' différence' → logprob: -9.576066017150879
    4. 'diff' → logprob: -10.201066017150879
    5. 'd' → logprob: -11.576066017150879
    6. '   ' → logprob: -12.826066017150879
    7. 'Difference' → logprob: -13.451066017150879
    8. ' ' → logprob: -13.701066017150879
    9. '_difference' → logprob: -13.826066017150879
    10. ' differ' → logprob: -14.076066017150879

Token 60: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.004625222180038691
    2. '>=' → logprob: -5.37962532043457
    3. ' ' → logprob: -12.50462532043457
    4. ' >' → logprob: -14.37962532043457
    5. '<|end|>' → logprob: -15.75462532043457
    6. ')>=' → logprob: -15.87962532043457
    7. '   ' → logprob: -16.12962532043457
    8. ']>=' → logprob: -16.12962532043457
    9. '>' → logprob: -16.37962532043457
    10. ' ' → logprob: -17.00462532043457

Token 61: ' produit' (ID: 29429)
  Prédit: 'produ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'produ' → logprob: -0.038070179522037506
    2. ' produit' → logprob: -3.2880702018737793
    3. 'prod' → logprob: -11.038069725036621
    4. ' ' → logprob: -12.663069725036621
    5. 'pro' → logprob: -12.913069725036621
    6. ' produs' → logprob: -13.163069725036621
    7. '	pro' → logprob: -13.663069725036621
    8. 'product' → logprob: -14.038069725036621
    9. '   ' → logprob: -14.038069725036621
    10. ' produ' → logprob: -14.163069725036621

Token 62: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00023119196703191847
    2. ':
' → logprob: -8.37523078918457
    3. ' :' → logprob: -15.12523078918457
    4. ':

' → logprob: -16.37523078918457
    5. ':
' → logprob: -17.12523078918457
    6. ':**' → logprob: -17.37523078918457
    7. ':return' → logprob: -17.50023078918457
    8. '):' → logprob: -17.62523078918457
    9. '   ' → logprob: -17.62523078918457
    10. ':</' → logprob: -18.37523078918457

Token 63: '   ' (ID: 271)
  Prédit: ' difference'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' difference' → logprob: -0.26248884201049805
    2. 'difference' → logprob: -1.512488842010498
    3. '   ' → logprob: -4.637488842010498
    4. 'produ' → logprob: -8.012489318847656
    5. ' différence' → logprob: -8.012489318847656
    6. ' produit' → logprob: -9.637489318847656
    7. ' product' → logprob: -10.637489318847656
    8. 'diff' → logprob: -10.762489318847656
    9. 'product' → logprob: -11.887489318847656
    10. '	pro' → logprob: -12.137489318847656

Token 64: ' plus' (ID: 2932)
  Prédit: 'difference'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'difference' → logprob: -0.019713880494236946
    2. 'plus' (adapté à ' plus') → logprob: -4.519713878631592
    3. ' difference' → logprob: -4.769713878631592
    4. '   ' → logprob: -9.51971435546875
    5. ' plus' → logprob: -9.64471435546875
    6. 'diff' → logprob: -12.14471435546875
    7. ' différence' → logprob: -14.39471435546875
    8. '_difference' → logprob: -14.76971435546875
    9. '    
' → logprob: -14.89471435546875
    10. 'd' → logprob: -15.51971435546875

Token 65: '_gr' (ID: 30286)
  Prédit: '_gr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_gr' → logprob: -8.537868779967539e-06
    2. '_' → logprob: -12.750008583068848
    3. '_difference' → logprob: -12.875008583068848
    4. 'difference' → logprob: -14.000008583068848
    5. 'gr' → logprob: -14.500008583068848
    6. '<|end|>' → logprob: -15.000008583068848
    7. '   ' → logprob: -15.125008583068848
    8. '_diff' → logprob: -15.625008583068848
    9. '```' → logprob: -15.875008583068848
    10. '\' → logprob: -15.875008583068848

Token 66: 'and' (ID: 427)
  Prédit: 'and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -1.6166903151315637e-05
    2. 'grand' → logprob: -11.750016212463379
    3. 'd' → logprob: -13.250016212463379
    4. 'ande' → logprob: -14.125016212463379
    5. 'a' → logprob: -14.375016212463379
    6. 'rand' → logprob: -14.500016212463379
    7. 'an' → logprob: -14.750016212463379
    8. '```' → logprob: -14.750016212463379
    9. 'aud' → logprob: -14.875016212463379
    10. 'ant' → logprob: -15.125016212463379

Token 67: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.474077433347702
    2. ' =' → logprob: -0.9740774631500244
    3. ' ' → logprob: -15.599077224731445
    4. 's' → logprob: -16.099077224731445
    5. '=

' → logprob: -17.224077224731445
    6. ' =
' → logprob: -17.349077224731445
    7. '_' → logprob: -17.474077224731445
    8. '=
' → logprob: -17.474077224731445
    9. ' ' → logprob: -18.224077224731445
    10. ',' → logprob: -18.224077224731445

Token 68: ' difference' (ID: 9809)
  Prédit: 'difference'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'difference' → logprob: -0.22551652789115906
    2. ' difference' → logprob: -1.6005165576934814
    3. 'diff' → logprob: -9.975516319274902
    4. 'd' → logprob: -10.475516319274902
    5. ' différence' → logprob: -10.850516319274902
    6. ' ' → logprob: -12.725516319274902
    7. '	d' → logprob: -13.475516319274902
    8. '_difference' → logprob: -13.975516319274902
    9. ' ' → logprob: -14.100516319274902
    10. '   ' → logprob: -14.350516319274902

Token 69: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.014166564680635929
    2. 'elif' → logprob: -4.264166355133057
    3. ' else' → logprob: -13.139166831970215
    4. 'els' → logprob: -14.764166831970215
    5. '```' → logprob: -14.764166831970215
    6. 'elses' → logprob: -16.3891658782959
    7. 'elser' → logprob: -16.8891658782959
    8. 'el' → logprob: -17.0141658782959
    9. 'elsif' → logprob: -17.5141658782959
    10. '_else' → logprob: -17.7641658782959

Token 70: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.001171056181192398
    2. 'elif' → logprob: -6.751171112060547
    3. ' else' → logprob: -14.251171112060547
    4. 'els' → logprob: -17.001171112060547
    5. '```' → logprob: -17.126171112060547
    6. '_else' → logprob: -18.126171112060547
    7. 'elser' → logprob: -18.251171112060547
    8. 'elses' → logprob: -18.376171112060547
    9. 'elsif' → logprob: -18.876171112060547
    10. '#else' → logprob: -19.626171112060547

Token 71: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00024013224174268544
    2. ':
' → logprob: -8.375240325927734
    3. ' :' → logprob: -11.625240325927734
    4. '   ' → logprob: -15.875240325927734
    5. ':

' → logprob: -16.375240325927734
    6. 's' → logprob: -16.500240325927734
    7. ' :
' → logprob: -17.000240325927734
    8. '```' → logprob: -17.500240325927734
    9. ':\' → logprob: -17.500240325927734
    10. '=' → logprob: -17.750240325927734

Token 72: '   ' (ID: 271)
  Prédit: 'produ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'produ' → logprob: -0.0382143035531044
    2. ' produit' → logprob: -3.2882142066955566
    3. 'plus' → logprob: -9.038214683532715
    4. 'prod' → logprob: -10.663214683532715
    5. '   ' → logprob: -11.038214683532715
    6. 'product' → logprob: -12.538214683532715
    7. ' plus' → logprob: -12.663214683532715
    8. '	pro' → logprob: -13.038214683532715
    9. ' produs' → logprob: -13.538214683532715
    10. 'Produit' → logprob: -13.663214683532715

Token 73: ' plus' (ID: 2932)
  Prédit: 'produ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'produ' → logprob: -0.0117965592071414
    2. 'plus' (adapté à ' plus') → logprob: -4.511796474456787
    3. ' produit' → logprob: -7.261796474456787
    4. ' plus' → logprob: -10.386796951293945
    5. 'prod' → logprob: -11.136796951293945
    6. 'product' → logprob: -14.636796951293945
    7. 'pro' → logprob: -15.261796951293945
    8. '   ' → logprob: -15.511796951293945
    9. ' ' → logprob: -15.886796951293945
    10. 'Produit' → logprob: -16.761796951293945

Token 74: '_gr' (ID: 30286)
  Prédit: '_gr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_gr' → logprob: -9.088346359931165e-07
    2. '_' → logprob: -14.750000953674316
    3. '_g' → logprob: -15.875000953674316
    4. 'grand' → logprob: -16.125
    5. 'gr' → logprob: -17.5
    6. '_tr' → logprob: -18.125
    7. '_GR' → logprob: -18.625
    8. '\' → logprob: -19.0
    9. '_prod' → logprob: -19.125
    10. '_pro' → logprob: -19.125

Token 75: 'and' (ID: 427)
  Prédit: 'and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -4.4060561776859686e-05
    2. 'd' → logprob: -10.875043869018555
    3. 'grand' → logprob: -12.750043869018555
    4. 'an' → logprob: -13.125043869018555
    5. '_gr' → logprob: -13.125043869018555
    6. 'rand' → logprob: -13.375043869018555
    7. 'at' → logprob: -13.375043869018555
    8. 'a' → logprob: -13.500043869018555
    9. 'aud' → logprob: -13.625043869018555
    10. 'ant' → logprob: -13.875043869018555

Token 76: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0031777136027812958
    2. ' =' → logprob: -5.753177642822266
    3. '_' → logprob: -17.503177642822266
    4. '=

' → logprob: -17.628177642822266
    5. ')' → logprob: -19.003177642822266
    6. '_=' → logprob: -19.253177642822266
    7. '＝' → logprob: -19.628177642822266
    8. '=
' → logprob: -19.878177642822266
    9. '=}' → logprob: -20.128177642822266
    10. '   ' → logprob: -20.753177642822266

Token 77: ' produit' (ID: 29429)
  Prédit: 'produ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'produ' → logprob: -0.014170682057738304
    2. ' produit' → logprob: -4.2641706466674805
    3. 'prod' → logprob: -12.01417064666748
    4. 'pro' → logprob: -15.01417064666748
    5. 'product' → logprob: -15.76417064666748
    6. 'produce' → logprob: -15.88917064666748
    7. ' ' → logprob: -16.014171600341797
    8. '	pro' → logprob: -16.139171600341797
    9. ' produ' → logprob: -16.639171600341797
    10. 'Produit' → logprob: -16.889171600341797

Token 78: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.003789388807490468
    2. '
' → logprob: -5.87878942489624
    3. '<|end|>' → logprob: -7.62878942489624
    4. '\n' → logprob: -8.878788948059082
    5. '#' → logprob: -9.253788948059082
    6. '\' → logprob: -10.128788948059082
    7. ' 
' → logprob: -10.128788948059082
    8. '```' → logprob: -10.253788948059082
    9. ' print' → logprob: -10.753788948059082
    10. '' → logprob: -11.253788948059082

Token 79: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.0219828002154827e-05
    2. 'if' → logprob: -11.000020027160645
    3. '#' → logprob: -13.250020027160645
    4. ' print' → logprob: -15.000020027160645
    5. '```' → logprob: -15.500020027160645
    6. '
' → logprob: -15.875020027160645
    7. 'prin' → logprob: -16.00002098083496
    8. 'for' → logprob: -16.25002098083496
    9. '\' → logprob: -16.37502098083496
    10. 'plus' → logprob: -16.62502098083496

Token 80: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.6047699318733066e-05
    2. '()' → logprob: -11.500016212463379
    3. 'plus' → logprob: -13.250016212463379
    4. '('' → logprob: -13.375016212463379
    5. '(+' → logprob: -14.250016212463379
    6. '("' → logprob: -14.500016212463379
    7. '(max' → logprob: -15.000016212463379
    8. '(s' → logprob: -15.125016212463379
    9. '(pl' → logprob: -15.625016212463379
    10. ' (' → logprob: -15.875016212463379

Token 81: 'plus' (ID: 11601)
  Prédit: 'plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -2.935296834039036e-06
    2. ' plus' → logprob: -12.87500286102295
    3. ')' → logprob: -15.75000286102295
    4. '"' → logprob: -16.875003814697266
    5. 'Plus' → logprob: -17.375003814697266
    6. '+' → logprob: -17.750003814697266
    7. '_plus' → logprob: -17.875003814697266
    8. '-plus' → logprob: -18.625003814697266
    9. 'pl' → logprob: -18.750003814697266
    10. '.plus' → logprob: -19.250003814697266

Token 82: '_gr' (ID: 30286)
  Prédit: '_gr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_gr' → logprob: -1.1472419600977446e-06
    2. '_' → logprob: -14.250000953674316
    3. '_g' → logprob: -16.250001907348633
    4. 'gr' → logprob: -16.375001907348633
    5. ' _' → logprob: -17.125001907348633
    6. 'e' → logprob: -17.375001907348633
    7. 'grand' → logprob: -17.750001907348633
    8. '_tr' → logprob: -17.875001907348633
    9. '\' → logprob: -18.000001907348633
    10. ')' → logprob: -18.500001907348633

Token 83: 'and' (ID: 427)
  Prédit: 'and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.0019479141337797046
    2. 'at' → logprob: -6.25194787979126
    3. 't' → logprob: -12.626948356628418
    4. 'ant' → logprob: -12.751948356628418
    5. 'a' → logprob: -12.876948356628418
    6. '(and' → logprob: -13.126948356628418
    7. 'd' → logprob: -13.501948356628418
    8. '{' → logprob: -13.876948356628418
    9. 'nd' → logprob: -14.001948356628418
    10. '```' → logprob: -14.376948356628418

Token 84: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. '))' → logprob: -16.375
    3. ')`' → logprob: -17.0
    4. ' )' → logprob: -17.25
    5. ')
' → logprob: -19.125
    6. '')' → logprob: -19.625
    7. '`)' → logprob: -20.0
    8. ')}' → logprob: -20.125
    9. ')**' → logprob: -20.5
    10. '(' → logprob: -20.5


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 82
Tokens correctement prédits (1ère position, stricte): 33
Tokens correctement prédits (1ère position, avec adaptation): 33
Tokens correctement prédits (top 10): 68
Précision stricte (1ère position): 40.24%
Précision adaptée (1ère position): 40.24%
Précision (top 10): 82.93%
================================================================================
