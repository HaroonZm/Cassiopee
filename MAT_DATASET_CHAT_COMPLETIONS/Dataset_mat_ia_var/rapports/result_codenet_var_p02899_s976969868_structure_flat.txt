================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:43:48
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
row = []
for i in range(N):
    row.append(0)
row2 = input().split(" ")
for i in range(N):
    row2[i] = int(row2[i])
for i in range(N):
    row[row2[i] - 1] = i + 1
for i in range(N):
    if i < N - 1:
        print(row[i], end=" ")
    else:
        print(row[i])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003567959647625685
    2. '(N' → logprob: -9.000356674194336
    3. '('' → logprob: -9.500356674194336
    4. ''' → logprob: -9.875356674194336
    5. '`' → logprob: -10.500356674194336
    6. '```' → logprob: -10.500356674194336
    7. '("("' → logprob: -11.375356674194336
    8. '()' → logprob: -11.500356674194336
    9. '(input' → logprob: -11.625356674194336
    10. '(
' → logprob: -12.250356674194336

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5405747294425964
    2. ')' → logprob: -0.9155747294425964
    3. '()' → logprob: -4.290574550628662
    4. '())' → logprob: -5.915574550628662
    5. '(
' → logprob: -8.41557502746582
    6. '```' → logprob: -9.16557502746582
    7. '))' → logprob: -9.29057502746582
    8. '")' → logprob: -9.54057502746582
    9. '(

' → logprob: -9.79057502746582
    10. '`)' → logprob: -9.79057502746582

Token 5: 'row' (ID: 843)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31470787525177
    2. 'if' → logprob: -2.1897077560424805
    3. 'i' → logprob: -3.3147077560424805
    4. 'a' → logprob: -3.6897077560424805
    5. 's' → logprob: -3.9397077560424805
    6. 'x' → logprob: -4.3147077560424805
    7. '*' → logprob: -4.8147077560424805
    8. 'f' → logprob: -4.9397077560424805
    9. '`' → logprob: -4.9397077560424805
    10. ')' → logprob: -4.9397077560424805

Token 6: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.12968219816684723
    2. '_' → logprob: -2.1296823024749756
    3. '_s' → logprob: -6.7546820640563965
    4. ' ' → logprob: -7.6296820640563965
    5. ' =' → logprob: -7.8796820640563965
    6. '[' → logprob: -8.379682540893555
    7. '[:]' → logprob: -9.004682540893555
    8. ' s' → logprob: -9.129682540893555
    9. '[]' → logprob: -9.754682540893555
    10. ')' → logprob: -10.254682540893555

Token 7: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.16468676924705505
    2. '0' → logprob: -2.789686679840088
    3. ' []' → logprob: -3.414686679840088
    4. 'N' → logprob: -4.539686679840088
    5. '"' → logprob: -4.664686679840088
    6. 'input' → logprob: -4.789686679840088
    7. ' N' → logprob: -4.789686679840088
    8. '[' → logprob: -5.039686679840088
    9. ''' → logprob: -5.414686679840088
    10. ' ' → logprob: -5.664686679840088

Token 8: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0036068400368094444
    2. ' for' → logprob: -6.128606796264648
    3. 'f' → logprob: -6.753606796264648
    4. '[' → logprob: -8.753606796264648
    5. '.' → logprob: -11.378606796264648
    6. ',' → logprob: -11.503606796264648
    7. '_' → logprob: -11.628606796264648
    8. '```' → logprob: -11.628606796264648
    9. '=' → logprob: -11.878606796264648
    10. 'F' → logprob: -12.003606796264648

Token 9: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04185514897108078
    2. ' i' → logprob: -3.2918550968170166
    3. '  ' → logprob: -5.666855335235596
    4. ' _' → logprob: -8.666854858398438
    5. '_' → logprob: -9.916854858398438
    6. 'i' → logprob: -10.291854858398438
    7. ' N' → logprob: -10.666854858398438
    8. ' ‌' → logprob: -10.916854858398438
    9. ' ' → logprob: -11.416854858398438
    10. ' range' → logprob: -11.791854858398438

Token 10: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05884949117898941
    2. 'in' → logprob: -2.933849573135376
    3. 'n' → logprob: -6.058849334716797
    4. ' ' → logprob: -6.558849334716797
    5. ' n' → logprob: -9.183849334716797
    6. '  ' → logprob: -10.558849334716797
    7. 'range' → logprob: -10.933849334716797
    8. '_' → logprob: -11.433849334716797
    9. 'space' → logprob: -11.933849334716797
    10. '```' → logprob: -12.058849334716797

Token 11: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.029754074290394783
    2. 'range' → logprob: -3.529754161834717
    3. ' ' → logprob: -12.904753684997559
    4. '	range' → logprob: -14.529753684997559
    5. '(range' → logprob: -15.404753684997559
    6. ' in' → logprob: -15.779753684997559
    7. '```' → logprob: -16.029754638671875
    8. ')' → logprob: -16.654754638671875
    9. ' xrange' → logprob: -17.029754638671875
    10. '_range' → logprob: -17.529754638671875

Token 12: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10028570890426636
    2. '(N' → logprob: -2.350285768508911
    3. ' (' → logprob: -10.100285530090332
    4. '(n' → logprob: -11.350285530090332
    5. '(
' → logprob: -12.100285530090332
    6. '(range' → logprob: -12.100285530090332
    7. '(len' → logprob: -12.225285530090332
    8. '(`' → logprob: -12.600285530090332
    9. '(i' → logprob: -12.725285530090332
    10. '(

' → logprob: -14.475285530090332

Token 13: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03204132616519928
    2. ')' → logprob: -3.532041311264038
    3. '+' → logprob: -6.407041549682617
    4. ' ):' → logprob: -7.907041549682617
    5. '):
' → logprob: -8.657041549682617
    6. ':' → logprob: -10.032041549682617
    7. ' )' → logprob: -10.782041549682617
    8. ',' → logprob: -12.032041549682617
    9. ' in' → logprob: -12.282041549682617
    10. ' ' → logprob: -12.532041549682617

Token 14: '   ' (ID: 271)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.268207848072052
    2. '   ' → logprob: -2.0182077884674072
    3. '    ' → logprob: -2.6432077884674072
    4. 'row' → logprob: -4.018208026885986
    5. ' ' → logprob: -4.893208026885986
    6. '```' → logprob: -6.643208026885986
    7. '	row' → logprob: -6.768208026885986
    8. '     
' → logprob: -7.643208026885986
    9. ' rows' → logprob: -8.143207550048828
    10. ' line' → logprob: -8.143207550048828

Token 15: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.4251003563404083
    2. 'row' (adapté à ' row') → logprob: -1.925100326538086
    3. '   ' → logprob: -2.175100326538086
    4. '    ' → logprob: -2.550100326538086
    5. ' ' → logprob: -5.300100326538086
    6. '```' → logprob: -6.925100326538086
    7. ' ```' → logprob: -7.300100326538086
    8. ' input' → logprob: -8.300100326538086
    9. ' line' → logprob: -8.425100326538086
    10. 'input' → logprob: -8.800100326538086

Token 16: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.12700402736663818
    2. '.' → logprob: -2.1270041465759277
    3. ' .' → logprob: -10.12700366973877
    4. '.extend' → logprob: -11.12700366973877
    5. 'append' → logprob: -12.12700366973877
    6. ' =' → logprob: -12.12700366973877
    7. '.app' → logprob: -12.87700366973877
    8. '=' → logprob: -13.25200366973877
    9. '_append' → logprob: -13.87700366973877
    10. 's' → logprob: -14.12700366973877

Token 17: '(' (ID: 7)
  Prédit: '([]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([]' → logprob: -0.7607042193412781
    2. '(' → logprob: -1.2607042789459229
    3. '(list' → logprob: -2.510704278945923
    4. '(int' → logprob: -2.510704278945923
    5. '([' → logprob: -2.635704278945923
    6. '(i' → logprob: -5.010704040527344
    7. '(input' → logprob: -5.510704040527344
    8. 'list' → logprob: -6.010704040527344
    9. '[]' → logprob: -7.135704040527344
    10. 'int' → logprob: -8.135704040527344

Token 18: '0' (ID: 15)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.043831974267959595
    2. 'list' → logprob: -4.168831825256348
    3. 'input' → logprob: -4.793831825256348
    4. '0' → logprob: -4.793831825256348
    5. '[]' → logprob: -5.418831825256348
    6. '[])' → logprob: -6.168831825256348
    7. 'i' → logprob: -6.293831825256348
    8. '[int' → logprob: -6.543831825256348
    9. ')' → logprob: -7.793831825256348
    10. '(int' → logprob: -8.543831825256348

Token 19: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.226628895296017e-06
    2. '[' → logprob: -13.250007629394531
    3. '))' → logprob: -13.250007629394531
    4. ' )' → logprob: -13.500007629394531
    5. ']' → logprob: -14.125007629394531
    6. '')' → logprob: -14.750007629394531
    7. '`)' → logprob: -15.000007629394531
    8. ')
' → logprob: -15.250007629394531
    9. '])' → logprob: -15.875007629394531
    10. '()' → logprob: -16.00000762939453

Token 20: 'row' (ID: 843)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8931554555892944
    2. '<|end|>' → logprob: -1.1431554555892944
    3. 'for' → logprob: -2.018155574798584
    4. ' ' → logprob: -3.018155574798584
    5. '
' → logprob: -3.268155574798584
    6. '\n' → logprob: -4.643155574798584
    7. '#' → logprob: -5.268155574798584
    8. '[
' → logprob: -5.268155574798584
    9. ' for' → logprob: -5.518155574798584
    10. '<|end|>' → logprob: -5.643155574798584

Token 21: '2' (ID: 17)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 22: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4442252218723297
    2. '[' → logprob: -1.4442251920700073
    3. '.' → logprob: -2.444225311279297
    4. '[]' → logprob: -4.194225311279297
    5. '.append' → logprob: -4.319225311279297
    6. ' =' → logprob: -6.694225311279297
    7. '[:]' → logprob: -6.694225311279297
    8. '=' → logprob: -7.069225311279297
    9. '_' → logprob: -7.194225311279297
    10. ')' → logprob: -7.319225311279297

Token 23: ' input' (ID: 3422)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.37216058373451233
    2. '[]' → logprob: -1.49716055393219
    3. ' [' → logprob: -2.6221606731414795
    4. '[' → logprob: -4.8721604347229
    5. '[row' → logprob: -5.6221604347229
    6. ' row' → logprob: -6.4971604347229
    7. 'row' → logprob: -6.6221604347229
    8. '[:]' → logprob: -9.372160911560059
    9. ' ' → logprob: -10.122160911560059
    10. '[]}' → logprob: -10.622160911560059

Token 24: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4297349452972412
    2. '()' → logprob: -1.0547349452972412
    3. '('' → logprob: -8.17973518371582
    4. ')' → logprob: -8.80473518371582
    5. '().' → logprob: -9.17973518371582
    6. '.' → logprob: -9.42973518371582
    7. '```' → logprob: -9.42973518371582
    8. '(
' → logprob: -9.80473518371582
    9. '(

' → logprob: -10.30473518371582
    10. '("("' → logprob: -10.55473518371582

Token 25: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0046503725461661816
    2. 'strip' → logprob: -5.379650592803955
    3. 'replace' → logprob: -10.879650115966797
    4. 'rstrip' → logprob: -12.129650115966797
    5. 'spl' → logprob: -12.629650115966797
    6. ' split' → logprob: -13.754650115966797
    7. 's' → logprob: -14.129650115966797
    8. 'startswith' → logprob: -15.129650115966797
    9. 'isdigit' → logprob: -15.629650115966797
    10. 'sp' → logprob: -16.004650115966797

Token 26: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7059859037399292
    2. '()' → logprob: -0.7059859037399292
    3. '('' → logprob: -4.580986022949219
    4. '("("' → logprob: -6.080986022949219
    5. '("' → logprob: -9.955986022949219
    6. '```' → logprob: -10.580986022949219
    7. '(`' → logprob: -10.830986022949219
    8. '`()' → logprob: -11.080986022949219
    9. '((' → logprob: -11.580986022949219
    10. ''' → logprob: -11.580986022949219

Token 27: ' ")
' (ID: 31232)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35136452317237854
    2. '")' → logprob: -1.3513644933700562
    3. ' ")' → logprob: -3.6013646125793457
    4. ' )' → logprob: -4.851364612579346
    5. '')' → logprob: -6.851364612579346
    6. '"' → logprob: -7.226364612579346
    7. ' ' → logprob: -7.976364612579346
    8. ''' → logprob: -10.101364135742188
    9. ')")' → logprob: -10.351364135742188
    10. '<|end|>' → logprob: -11.101364135742188

Token 28: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004766765050590038
    2. '[' → logprob: -5.629766941070557
    3. 'i' → logprob: -7.629766941070557
    4. ' for' → logprob: -8.129766464233398
    5. 'if' → logprob: -8.629766464233398
    6. 'f' → logprob: -9.379766464233398
    7. 'n' → logprob: -9.879766464233398
    8. '```' → logprob: -10.879766464233398
    9. ']' → logprob: -12.004766464233398
    10. '#' → logprob: -12.254766464233398

Token 29: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7058979868888855
    2. ' i' → logprob: -0.7058979868888855
    3. 'i' → logprob: -4.455897808074951
    4. '_' → logprob: -7.830897808074951
    5. '  ' → logprob: -7.955897808074951
    6. ' _' → logprob: -9.08089828491211
    7. ' j' → logprob: -9.58089828491211
    8. ' ' → logprob: -10.20589828491211
    9. ' space' → logprob: -10.95589828491211
    10. ' ‌' → logprob: -11.08089828491211

Token 30: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09806197136640549
    2. 'in' → logprob: -2.723062038421631
    3. ' ' → logprob: -3.598062038421631
    4. '  ' → logprob: -8.223061561584473
    5. '<|end|>' → logprob: -10.473061561584473
    6. ' =' → logprob: -11.973061561584473
    7. ' i' → logprob: -12.098061561584473
    8. '=' → logprob: -12.223061561584473
    9. ' ,' → logprob: -12.598061561584473
    10. ')' → logprob: -12.598061561584473

Token 31: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3132713735103607
    2. 'range' → logprob: -1.313271403312683
    3. 'row' → logprob: -12.188271522521973
    4. ' ' → logprob: -13.063271522521973
    5. '(range' → logprob: -14.313271522521973
    6. ' row' → logprob: -14.563271522521973
    7. ' xrange' → logprob: -14.563271522521973
    8. '	range' → logprob: -14.563271522521973
    9. '  ' → logprob: -15.438271522521973
    10. '_range' → logprob: -17.563270568847656

Token 32: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.48699793219566345
    2. '(N' → logprob: -0.9869979619979858
    3. '(len' → logprob: -4.361998081207275
    4. ' (' → logprob: -9.861997604370117
    5. '(n' → logprob: -11.361997604370117
    6. '(
' → logprob: -11.486997604370117
    7. '(

' → logprob: -12.986997604370117
    8. '(length' → logprob: -12.986997604370117
    9. '(int' → logprob: -13.111997604370117
    10. '(s' → logprob: -13.361997604370117

Token 33: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008869118988513947
    2. ')' → logprob: -4.758869171142578
    3. ':' → logprob: -9.133869171142578
    4. '):
' → logprob: -9.258869171142578
    5. ' ):' → logprob: -10.008869171142578
    6. ' )' → logprob: -13.008869171142578
    7. '):

' → logprob: -14.008869171142578
    8. '+' → logprob: -14.633869171142578
    9. ']:' → logprob: -15.133869171142578
    10. '>' → logprob: -15.258869171142578

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04514158517122269
    2. ' if' → logprob: -3.9201416969299316
    3. ' ' → logprob: -4.045141696929932
    4. ' row' → logprob: -5.920141696929932
    5. '    ' → logprob: -6.420141696929932
    6. '<|end|>' → logprob: -7.670141696929932
    7. '	row' → logprob: -8.170141220092773
    8. 'if' → logprob: -8.170141220092773
    9. 'row' → logprob: -8.170141220092773
    10. '	if' → logprob: -8.545141220092773

Token 35: ' row' (ID: 5225)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16841843724250793
    2. ' row' → logprob: -2.2934184074401855
    3. 'if' → logprob: -3.5434184074401855
    4. 'row' (adapté à ' row') → logprob: -3.7934184074401855
    5. '   ' → logprob: -6.4184184074401855
    6. ' ' → logprob: -7.2934184074401855
    7. ' print' → logprob: -9.043418884277344
    8. 'int' → logprob: -10.043418884277344
    9. '    ' → logprob: -10.418418884277344
    10. 'print' → logprob: -10.668418884277344

Token 36: '2' (ID: 17)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.12703751027584076
    2. '[' → logprob: -2.127037525177002
    3. '[I' → logprob: -10.502037048339844
    4. '[int' → logprob: -10.627037048339844
    5. '\[' → logprob: -11.252037048339844
    6. ' [' → logprob: -11.377037048339844
    7. '```' → logprob: -11.502037048339844
    8. '[...]' → logprob: -12.252037048339844
    9. '[len' → logprob: -12.877037048339844
    10. '[]' → logprob: -12.877037048339844

Token 37: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6066179871559143
    2. '[' → logprob: -1.4816179275512695
    3. '[int' → logprob: -1.4816179275512695
    4. '[count' → logprob: -10.23161792755127
    5. ' [' → logprob: -10.48161792755127
    6. '[len' → logprob: -10.60661792755127
    7. '[input' → logprob: -10.85661792755127
    8. '[]' → logprob: -11.10661792755127
    9. '[I' → logprob: -11.23161792755127
    10. '[Int' → logprob: -11.23161792755127

Token 38: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02579006366431713
    2. ']' → logprob: -4.400790214538574
    3. ' )' → logprob: -4.650790214538574
    4. '=int' → logprob: -7.025790214538574
    5. 'int' → logprob: -7.775790214538574
    6. '=' → logprob: -8.025790214538574
    7. ' ==' → logprob: -8.150790214538574
    8. ')==' → logprob: -8.275790214538574
    9. ' ]' → logprob: -8.400790214538574
    10. ']int' → logprob: -8.650790214538574

Token 39: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0459153950214386
    2. '=int' → logprob: -3.295915365219116
    3. ' =' → logprob: -5.045915603637695
    4. '==' → logprob: -7.170915603637695
    5. 'int' → logprob: -8.420915603637695
    6. ' ' → logprob: -9.045915603637695
    7. ' ==' → logprob: -9.295915603637695
    8. '<|end|>' → logprob: -9.670915603637695
    9. '+=' → logprob: -10.420915603637695
    10. '[int' → logprob: -10.920915603637695

Token 40: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.011048642918467522
    2. ' int' → logprob: -4.511048793792725
    3. '(int' → logprob: -15.261048316955566
    4. '[int' → logprob: -15.261048316955566
    5. '=int' → logprob: -16.386049270629883
    6. '<int' → logprob: -16.761049270629883
    7. 'float' → logprob: -16.886049270629883
    8. 'row' → logprob: -17.261049270629883
    9. '	int' → logprob: -17.511049270629883
    10. ' ' → logprob: -17.511049270629883

Token 41: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.07889264822006226
    2. '(' → logprob: -2.578892707824707
    3. '(
' → logprob: -14.203892707824707
    4. ' (' → logprob: -14.703892707824707
    5. '()' → logprob: -14.953892707824707
    6. '(column' → logprob: -15.328892707824707
    7. '(

' → logprob: -15.453892707824707
    8. '(Row' → logprob: -15.453892707824707
    9. 'row' → logprob: -15.578892707824707
    10. '(line' → logprob: -16.20389175415039

Token 42: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.173704271830502e-06
    2. '[i' → logprob: -13.50000286102295
    3. '[' → logprob: -13.87500286102295
    4. ' ' → logprob: -15.00000286102295
    5. ' [' → logprob: -15.50000286102295
    6. '```' → logprob: -16.437503814697266
    7. '２' → logprob: -16.875003814697266
    8. '   ' → logprob: -17.187503814697266
    9. ')' → logprob: -17.562503814697266
    10. '۲' → logprob: -17.625003814697266

Token 43: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0007201764383353293
    2. '[' → logprob: -7.250720024108887
    3. ')' → logprob: -11.750720024108887
    4. ' [' → logprob: -14.000720024108887
    5. '[I' → logprob: -14.000720024108887
    6. ')[' → logprob: -15.375720024108887
    7. '[int' → logprob: -16.500720977783203
    8. '[N' → logprob: -16.625720977783203
    9. ')i' → logprob: -16.750720977783203
    10. '[
' → logprob: -17.125720977783203

Token 44: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023607878014445305
    2. '])' → logprob: -3.7736079692840576
    3. ']' → logprob: -8.273608207702637
    4. ')])' → logprob: -10.273608207702637
    5. '))' → logprob: -10.398608207702637
    6. ')]' → logprob: -10.898608207702637
    7. ' )' → logprob: -11.273608207702637
    8. '[' → logprob: -12.898608207702637
    9. ')
' → logprob: -13.523608207702637
    10. '})' → logprob: -13.648608207702637

Token 45: 'for' (ID: 1938)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.42886146903038025
    2. '\n' → logprob: -2.303861379623413
    3. ' 
' → logprob: -2.428861379623413
    4. 'for' → logprob: -2.428861379623413
    5. '  
' → logprob: -4.053861618041992
    6. ' for' → logprob: -4.428861618041992
    7. 'if' → logprob: -4.678861618041992
    8. '<|end|>' → logprob: -4.678861618041992
    9. ' ' → logprob: -5.178861618041992
    10. '[' → logprob: -5.428861618041992

Token 46: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.18128719925880432
    2. ' ' → logprob: -1.806287169456482
    3. 'i' → logprob: -6.9312872886657715
    4. '_' → logprob: -8.431286811828613
    5. ' range' → logprob: -9.556286811828613
    6. ' ' → logprob: -9.931286811828613
    7. '  ' → logprob: -10.056286811828613
    8. ' ‌' → logprob: -10.306286811828613
    9. ' in' → logprob: -10.431286811828613
    10. ' (' → logprob: -10.681286811828613

Token 47: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2613694667816162
    2. 'in' → logprob: -1.5113694667816162
    3. ' ' → logprob: -4.761369705200195
    4. '  ' → logprob: -7.886369705200195
    5. 'range' → logprob: -8.511369705200195
    6. ' range' → logprob: -9.261369705200195
    7. '<|end|>' → logprob: -9.636369705200195
    8. '(' → logprob: -10.011369705200195
    9. '	in' → logprob: -11.386369705200195
    10. '   ' → logprob: -12.136369705200195

Token 48: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.01105206273496151
    2. 'range' → logprob: -4.511052131652832
    3. ' ' → logprob: -12.761052131652832
    4. '(range' → logprob: -14.011052131652832
    5. ' xrange' → logprob: -15.511052131652832
    6. '	range' → logprob: -15.886052131652832
    7. '  ' → logprob: -17.261051177978516
    8. ' row' → logprob: -18.011051177978516
    9. '_range' → logprob: -18.136051177978516
    10. '   ' → logprob: -18.386051177978516

Token 49: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.3217504024505615
    2. '(' → logprob: -1.3217504024505615
    3. ' (' → logprob: -4.821750640869141
    4. '(range' → logprob: -8.32175064086914
    5. ' ' → logprob: -9.94675064086914
    6. ' range' → logprob: -10.07175064086914
    7. '(len' → logprob: -10.94675064086914
    8. '(n' → logprob: -10.94675064086914
    9. '(s' → logprob: -11.69675064086914
    10. ' N' → logprob: -11.94675064086914

Token 50: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002769336337223649
    2. ')' → logprob: -6.752769470214844
    3. ' ):' → logprob: -6.877769470214844
    4. ':' → logprob: -8.127769470214844
    5. '-' → logprob: -8.877769470214844
    6. '):
' → logprob: -9.127769470214844
    7. '+' → logprob: -11.377769470214844
    8. ' :' → logprob: -13.002769470214844
    9. ' -' → logprob: -13.377769470214844
    10. '>' → logprob: -13.377769470214844

Token 51: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12604540586471558
    2. '   ' → logprob: -2.3760454654693604
    3. '<|end|>' → logprob: -5.001045227050781
    4. '    ' → logprob: -5.126045227050781
    5. ' if' → logprob: -5.126045227050781
    6. ' row' → logprob: -6.501045227050781
    7. '[' → logprob: -6.626045227050781
    8. 'if' → logprob: -7.126045227050781
    9. '  ' → logprob: -7.751045227050781
    10. ' for' → logprob: -8.251045227050781

Token 52: ' row' (ID: 5225)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3220600485801697
    2. ' row' → logprob: -1.4470601081848145
    3. 'if' → logprob: -4.0720601081848145
    4. ' ' → logprob: -4.0720601081848145
    5. 'row' (adapté à ' row') → logprob: -5.4470601081848145
    6. ' for' → logprob: -6.6970601081848145
    7. '   ' → logprob: -8.697059631347656
    8. ' print' → logprob: -9.822059631347656
    9. '    ' → logprob: -9.947059631347656
    10. 'for' → logprob: -10.197059631347656

Token 53: '[row' (ID: 35899)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.4427844285964966
    2. '[' → logprob: -1.0677844285964966
    3. '2' → logprob: -4.317784309387207
    4. '\[' → logprob: -8.317784309387207
    5. '[int' → logprob: -9.442784309387207
    6. ' [' → logprob: -10.317784309387207
    7. '```' → logprob: -10.317784309387207
    8. '[I' → logprob: -10.567784309387207
    9. '[
' → logprob: -10.817784309387207
    10. '[s' → logprob: -10.942784309387207

Token 54: '2' (ID: 17)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3157641887664795
    2. '2' → logprob: -2.0657641887664795
    3. ']' → logprob: -2.1907641887664795
    4. 'i' → logprob: -4.815764427185059
    5. '[' → logprob: -5.065764427185059
    6. ' i' → logprob: -5.815764427185059
    7. '+' → logprob: -6.065764427185059
    8. ' ]' → logprob: -6.065764427185059
    9. ')' → logprob: -6.190764427185059
    10. ' ' → logprob: -6.815764427185059

Token 55: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0009551709517836571
    2. '[' → logprob: -7.375955104827881
    3. ' [' → logprob: -8.500955581665039
    4. ']' → logprob: -9.375955581665039
    5. '[I' → logprob: -11.625955581665039
    6. ')' → logprob: -12.000955581665039
    7. ' ' → logprob: -12.125955581665039
    8. ' ]' → logprob: -12.875955581665039
    9. '][' → logprob: -13.000955581665039
    10. '   ' → logprob: -13.500955581665039

Token 56: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.022439174354076385
    2. ']]' → logprob: -4.397439002990723
    3. ' ]' → logprob: -5.897439002990723
    4. ']-' → logprob: -6.397439002990723
    5. ']+' → logprob: -6.647439002990723
    6. ')]' → logprob: -6.647439002990723
    7. '-' → logprob: -7.022439002990723
    8. '[i' → logprob: -7.772439002990723
    9. ' ]]' → logprob: -7.772439002990723
    10. ']==' → logprob: -8.647439002990723

Token 57: ' -' (ID: 533)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.18594741821289062
    2. ' ]' → logprob: -2.0609474182128906
    3. '+' → logprob: -4.560947418212891
    4. ']+=' → logprob: -4.685947418212891
    5. ' +=' → logprob: -4.935947418212891
    6. ']=' → logprob: -5.435947418212891
    7. '=' → logprob: -5.560947418212891
    8. '+=' → logprob: -5.935947418212891
    9. ' =' → logprob: -6.060947418212891
    10. ' +' → logprob: -7.685947418212891

Token 58: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003888470819219947
    2. ' ' → logprob: -7.8753886222839355
    3. '=' → logprob: -12.250389099121094
    4. '>' → logprob: -13.125389099121094
    5. '   ' → logprob: -14.562889099121094
    6. '<|end|>' → logprob: -15.562889099121094
    7. '2' → logprob: -15.687889099121094
    8. '0' → logprob: -16.187889099121094
    9. ')' → logprob: -16.312889099121094
    10. '```' → logprob: -16.375389099121094

Token 59: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7146746763028204e-05
    2. ' ' → logprob: -10.25003719329834
    3. '<|end|>' → logprob: -15.06253719329834
    4. '2' → logprob: -15.31253719329834
    5. '>' → logprob: -15.56253719329834
    6. '=' → logprob: -16.125036239624023
    7. '...' → logprob: -16.250036239624023
    8. '0' → logprob: -16.375036239624023
    9. '   ' → logprob: -16.562536239624023
    10. 'to' → logprob: -16.625036239624023

Token 60: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013008330017328262
    2. ' ]' → logprob: -5.138008117675781
    3. ']+=' → logprob: -5.388008117675781
    4. ']=' → logprob: -6.513008117675781
    5. '=' → logprob: -7.513008117675781
    6. ' +=' → logprob: -8.388008117675781
    7. '+=' → logprob: -9.263008117675781
    8. ' =' → logprob: -9.638008117675781
    9. ')' → logprob: -10.638008117675781
    10. '+' → logprob: -11.513008117675781

Token 61: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15078236162662506
    2. '=' → logprob: -2.025782346725464
    3. ' +=' → logprob: -4.900782585144043
    4. '+=' → logprob: -8.150782585144043
    5. ' ' → logprob: -8.275782585144043
    6. ' |=' → logprob: -10.525782585144043
    7. '<|end|>' → logprob: -10.775782585144043
    8. ' ^=' → logprob: -11.525782585144043
    9. ' *=' → logprob: -12.025782585144043
    10. '[' → logprob: -12.525782585144043

Token 62: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05727158486843109
    2. '1' → logprob: -2.9322714805603027
    3. 'row' → logprob: -6.807271480560303
    4. ' i' → logprob: -8.182271957397461
    5. '0' → logprob: -8.432271957397461
    6. '(' → logprob: -8.432271957397461
    7. '(i' → logprob: -8.557271957397461
    8. '2' → logprob: -9.682271957397461
    9. ' ' → logprob: -10.307271957397461
    10. ''i' → logprob: -10.432271957397461

Token 63: ' +' (ID: 659)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.4551321864128113
    2. '<|end|>' → logprob: -1.705132246017456
    3. '
' → logprob: -1.955132246017456
    4. 'print' → logprob: -4.455132007598877
    5. '[' → logprob: -4.830132007598877
    6. ' ' → logprob: -5.455132007598877
    7. '```' → logprob: -5.705132007598877
    8. '#' → logprob: -5.830132007598877
    9. '\' → logprob: -5.955132007598877
    10. '  
' → logprob: -6.705132007598877

Token 64: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002980432182084769
    2. ' ' → logprob: -8.125298500061035
    3. '2' → logprob: -14.250298500061035
    4. '<|end|>' → logprob: -14.687798500061035
    5. '0' → logprob: -15.500298500061035
    6. '```' → logprob: -16.31279754638672
    7. '`' → logprob: -16.56279754638672
    8. '  ' → logprob: -16.62529754638672
    9. '   ' → logprob: -16.62529754638672
    10. '<|end|>' → logprob: -17.56279754638672

Token 65: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.372294698550832e-06
    2. ' ' → logprob: -11.625009536743164
    3. '2' → logprob: -15.375009536743164
    4. '１' → logprob: -17.625009536743164
    5. '১' → logprob: -17.750009536743164
    6. '<|end|>' → logprob: -17.750009536743164
    7. '   ' → logprob: -17.875009536743164
    8. '१' → logprob: -17.937509536743164
    9. '۱' → logprob: -18.125009536743164
    10. '```' → logprob: -18.437509536743164

Token 66: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.022182920947670937
    2. 'for' → logprob: -3.8971829414367676
    3. '
' → logprob: -7.647182941436768
    4. '<|end|>' → logprob: -8.27218246459961
    5. '```' → logprob: -8.27218246459961
    6. '[' → logprob: -9.02218246459961
    7. ' for' → logprob: -9.02218246459961
    8. ')' → logprob: -9.27218246459961
    9. '\n' → logprob: -9.39718246459961
    10. ' ' → logprob: -10.27218246459961

Token 67: 'for' (ID: 1938)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0017330136615782976
    2. 'for' → logprob: -6.37673282623291
    3. '```' → logprob: -11.25173282623291
    4. '<|end|>' → logprob: -11.25173282623291
    5. 'pr' → logprob: -13.87673282623291
    6. '#' → logprob: -14.12673282623291
    7. ' print' → logprob: -14.25173282623291
    8. '#print' → logprob: -14.37673282623291
    9. '
' → logprob: -15.00173282623291
    10. ' for' → logprob: -15.00173282623291

Token 68: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.043683525174856186
    2. 'i' → logprob: -3.5436835289001465
    3. ' ' → logprob: -4.4186835289001465
    4. '_' → logprob: -7.0436835289001465
    5. ' range' → logprob: -7.5436835289001465
    6. ' _' → logprob: -8.668683052062988
    7. 'range' → logprob: -9.793683052062988
    8. '  ' → logprob: -9.918683052062988
    9. ' in' → logprob: -10.293683052062988
    10. ' row' → logprob: -10.668683052062988

Token 69: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0222714152187109
    2. 'in' → logprob: -4.022271633148193
    3. ' ' → logprob: -5.522271633148193
    4. '  ' → logprob: -9.647271156311035
    5. 'range' → logprob: -10.897271156311035
    6. ' range' → logprob: -11.397271156311035
    7. '(' → logprob: -12.647271156311035
    8. '	in' → logprob: -12.772271156311035
    9. '<|end|>' → logprob: -13.022271156311035
    10. ' i' → logprob: -13.022271156311035

Token 70: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.31346526741981506
    2. ' range' → logprob: -1.3134652376174927
    3. 'row' → logprob: -8.688465118408203
    4. ' row' → logprob: -10.938465118408203
    5. '(range' → logprob: -11.938465118408203
    6. ' ' → logprob: -12.063465118408203
    7. '  ' → logprob: -12.688465118408203
    8. '   ' → logprob: -14.563465118408203
    9. '	range' → logprob: -14.813465118408203
    10. '    ' → logprob: -15.813465118408203

Token 71: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7188555598258972
    2. '(N' → logprob: -0.7188555598258972
    3. '(range' → logprob: -3.718855619430542
    4. ' range' → logprob: -7.468855381011963
    5. ' (' → logprob: -7.968855381011963
    6. '(n' → logprob: -9.218855857849121
    7. 'range' → logprob: -9.718855857849121
    8. ' ' → logprob: -11.093855857849121
    9. '(len' → logprob: -11.468855857849121
    10. '((' → logprob: -12.718855857849121

Token 72: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0023785000666975975
    2. ')' → logprob: -6.377378463745117
    3. '):
' → logprob: -7.752378463745117
    4. ':' → logprob: -8.502378463745117
    5. ' ):' → logprob: -11.252378463745117
    6. '-' → logprob: -11.377378463745117
    7. '+' → logprob: -11.502378463745117
    8. 'print' → logprob: -12.877378463745117
    9. '   ' → logprob: -13.502378463745117
    10. ' ' → logprob: -14.252378463745117

Token 73: '   ' (ID: 271)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.0034697556402534246
    2. '   ' → logprob: -6.253469944000244
    3. 'print' → logprob: -6.503469944000244
    4. ' ' → logprob: -10.878469467163086
    5. '	print' → logprob: -11.628469467163086
    6. '    ' → logprob: -12.128469467163086
    7. ' 
' → logprob: -13.253469467163086
    8. '    
' → logprob: -13.503469467163086
    9. '```' → logprob: -13.628469467163086
    10. '.print' → logprob: -14.128469467163086

Token 74: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2014203518629074
    2. ' print' → logprob: -1.7014203071594238
    3. 'if' (adapté à ' if') → logprob: -12.826420783996582
    4. ' if' → logprob: -12.951420783996582
    5. '   ' → logprob: -14.451420783996582
    6. 'pr' → logprob: -14.951420783996582
    7. ' prin' → logprob: -15.326420783996582
    8. 'prin' → logprob: -15.576420783996582
    9. '.print' → logprob: -15.826420783996582
    10. 'printf' → logprob: -15.951420783996582

Token 75: ' i' (ID: 575)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.0005798388738185167
    2. 'row' → logprob: -7.750579833984375
    3. ' not' → logprob: -9.625579833984375
    4. ' ' → logprob: -9.625579833984375
    5. ' i' → logprob: -11.500579833984375
    6. ' ' → logprob: -12.375579833984375
    7. '(row' → logprob: -13.625579833984375
    8. '	row' → logprob: -14.125579833984375
    9. ' rows' → logprob: -15.625579833984375
    10. ' (' → logprob: -15.875579833984375

Token 76: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.7911635637283325
    2. ' ==' → logprob: -1.1661635637283325
    3. ' ' → logprob: -2.166163444519043
    4. ' !=' → logprob: -2.916163444519043
    5. '+' → logprob: -3.666163444519043
    6. '==' → logprob: -4.541163444519043
    7. '<' → logprob: -4.541163444519043
    8. ' %' → logprob: -5.666163444519043
    9. ' >' → logprob: -5.791163444519043
    10. '!=' → logprob: -6.416163444519043

Token 77: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.39548391103744507
    2. 'N' → logprob: -1.1454839706420898
    3. ' ' → logprob: -5.27048397064209
    4. ' len' → logprob: -6.27048397064209
    5. 'len' → logprob: -7.52048397064209
    6. ' row' → logprob: -8.27048397064209
    7. ' n' → logprob: -8.89548397064209
    8. '  ' → logprob: -9.14548397064209
    9. '(' → logprob: -9.14548397064209
    10. ' (' → logprob: -9.27048397064209

Token 78: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.42888981103897095
    2. ' -' → logprob: -1.0538897514343262
    3. ' ' → logprob: -9.303890228271484
    4. ':' → logprob: -9.928890228271484
    5. ' and' → logprob: -10.678890228271484
    6. '   ' → logprob: -11.678890228271484
    7. 'and' → logprob: -11.928890228271484
    8. '1' → logprob: -13.803890228271484
    9. ' :' → logprob: -13.803890228271484
    10. ':
' → logprob: -13.803890228271484

Token 79: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010355490958318114
    2. ' ' → logprob: -6.876035690307617
    3. '   ' → logprob: -14.001035690307617
    4. '2' → logprob: -14.251035690307617
    5. '  ' → logprob: -15.126035690307617
    6. '-' → logprob: -15.563535690307617
    7. 'row' → logprob: -16.251035690307617
    8. '```' → logprob: -16.563535690307617
    9. '１' → logprob: -16.626035690307617
    10. '3' → logprob: -16.688535690307617

Token 80: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00026634239475242794
    2. ' ' → logprob: -8.250266075134277
    3. '2' → logprob: -12.875266075134277
    4. '-' → logprob: -14.937766075134277
    5. '   ' → logprob: -14.937766075134277
    6. '１' → logprob: -15.437766075134277
    7. '3' → logprob: -15.562766075134277
    8. 'row' → logprob: -15.562766075134277
    9. '  ' → logprob: -15.875266075134277
    10. '```' → logprob: -16.000267028808594

Token 81: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.004089916590601206
    2. 'and' → logprob: -5.629089832305908
    3. ':' → logprob: -8.129090309143066
    4. ' ' → logprob: -9.379090309143066
    5. '   ' → logprob: -9.504090309143066
    6. ' or' → logprob: -11.254090309143066
    7. '    ' → logprob: -11.754090309143066
    8. ' :' → logprob: -12.254090309143066
    9. ',' → logprob: -12.754090309143066
    10. '	and' → logprob: -13.504090309143066

Token 82: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03573799878358841
    2. ' print' → logprob: -3.660737991333008
    3. '       ' → logprob: -4.910737991333008
    4. 'print' → logprob: -6.285737991333008
    5. '	print' → logprob: -9.410737991333008
    6. ' ' → logprob: -10.535737991333008
    7. '    ' → logprob: -11.410737991333008
    8. '    
' → logprob: -11.785737991333008
    9. '   ' → logprob: -11.910737991333008
    10. '	' → logprob: -12.285737991333008

Token 83: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0006403613369911909
    2. ' print' → logprob: -7.375640392303467
    3. '   ' → logprob: -11.250639915466309
    4. '	print' → logprob: -15.125639915466309
    5. '.print' → logprob: -15.875639915466309
    6. 'printf' → logprob: -16.000640869140625
    7. '       ' → logprob: -16.125640869140625
    8. ' ' → logprob: -17.000640869140625
    9. '(print' → logprob: -17.125640869140625
    10. '    ' → logprob: -17.375640869140625

Token 84: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -1.664371848164592e-05
    2. '(' → logprob: -11.250016212463379
    3. 'row' → logprob: -13.125016212463379
    4. '(str' → logprob: -13.500016212463379
    5. '(rows' → logprob: -17.125017166137695
    6. '(f' → logprob: -17.250017166137695
    7. '(column' → logprob: -17.375017166137695
    8. ' row' → logprob: -17.875017166137695
    9. ',row' → logprob: -18.875017166137695
    10. '(Row' → logprob: -19.000017166137695

Token 85: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.024604277219623e-05
    2. '[' → logprob: -10.125040054321289
    3. ')' → logprob: -16.87504005432129
    4. '[I' → logprob: -17.87504005432129
    5. ' [' → logprob: -18.00004005432129
    6. '[
' → logprob: -18.25004005432129
    7. '[index' → logprob: -18.37504005432129
    8. 'i' → logprob: -18.75004005432129
    9. '[N' → logprob: -19.12504005432129
    10. '[j' → logprob: -19.37504005432129

Token 86: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3147178590297699
    2. ',end' → logprob: -1.3147178888320923
    3. ' ,' → logprob: -6.564717769622803
    4. 'end' → logprob: -11.314718246459961
    5. '),' → logprob: -11.564718246459961
    6. ',row' → logprob: -12.189718246459961
    7. ',",' → logprob: -12.314718246459961
    8. ',en' → logprob: -12.564718246459961
    9. ')' → logprob: -13.189718246459961
    10. '   ' → logprob: -13.314718246459961

Token 87: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.03963218629360199
    2. ' end' → logprob: -4.039632320404053
    3. '"' → logprob: -4.164632320404053
    4. ',end' → logprob: -5.789632320404053
    5. ''end' → logprob: -6.289632320404053
    6. ''' → logprob: -7.664632320404053
    7. ',' → logprob: -9.539631843566895
    8. ')' → logprob: -9.539631843566895
    9. '(end' → logprob: -9.789631843566895
    10. ' ' → logprob: -10.039631843566895

Token 88: '="' (ID: 580)
  Prédit: '="'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '="' → logprob: -0.5363588333129883
    2. '='' → logprob: -1.0363588333129883
    3. '=' → logprob: -2.9113588333129883
    4. '=",' → logprob: -5.786358833312988
    5. '=',' → logprob: -6.536358833312988
    6. '"' → logprob: -6.661358833312988
    7. ''' → logprob: -8.786358833312988
    8. ' =' → logprob: -11.786358833312988
    9. '=''' → logprob: -12.536358833312988
    10. ' ="' → logprob: -13.036358833312988

Token 89: ' ")
' (ID: 31232)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.770618200302124
    2. '"' → logprob: -0.895618200302124
    3. ' ' → logprob: -2.145618200302124
    4. ''' → logprob: -5.145618438720703
    5. ')' → logprob: -5.270618438720703
    6. ' "' → logprob: -8.020618438720703
    7. ' )
' → logprob: -8.395618438720703
    8. ' ),' → logprob: -8.645618438720703
    9. ' ,' → logprob: -9.395618438720703
    10. ',' → logprob: -9.645618438720703

Token 90: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0041603147983551025
    2. '   ' → logprob: -5.504160404205322
    3. ' else' → logprob: -9.879159927368164
    4. 'print' → logprob: -10.629159927368164
    5. '	else' → logprob: -12.879159927368164
    6. 'elif' → logprob: -13.129159927368164
    7. '```' → logprob: -13.379159927368164
    8. '       ' → logprob: -16.004159927368164
    9. '  ' → logprob: -16.379159927368164
    10. ')' → logprob: -16.754159927368164

Token 91: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -1.0564331205387134e-05
    2. ' else' → logprob: -11.50001049041748
    3. '   ' → logprob: -16.000011444091797
    4. 'print' → logprob: -16.250011444091797
    5. 'elif' → logprob: -16.500011444091797
    6. '```' → logprob: -17.875011444091797
    7. '	else' → logprob: -19.000011444091797
    8. '#else' → logprob: -20.375011444091797
    9. ' ' → logprob: -21.125011444091797
    10. '  ' → logprob: -21.625011444091797

Token 92: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004181802738457918
    2. ':
' → logprob: -5.504181861877441
    3. '   ' → logprob: -9.754181861877441
    4. '       ' → logprob: -10.129181861877441
    5. 'print' → logprob: -12.754181861877441
    6. '):' → logprob: -13.504181861877441
    7. ' :' → logprob: -14.629181861877441
    8. ' print' → logprob: -16.004180908203125
    9. ':
' → logprob: -16.379180908203125
    10. '):
' → logprob: -16.379180908203125

Token 93: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00020270596724003553
    2. ' print' → logprob: -9.000203132629395
    3. '       ' → logprob: -9.875203132629395
    4. '   ' → logprob: -10.500203132629395
    5. '```' → logprob: -15.625203132629395
    6. '	print' → logprob: -16.125202178955078
    7. ' ' → logprob: -18.500202178955078
    8. '           ' → logprob: -18.750202178955078
    9. '  ' → logprob: -19.625202178955078
    10. '     ' → logprob: -19.750202178955078

Token 94: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -6.704273118884885e-07
    2. ' print' → logprob: -14.250000953674316
    3. '   ' → logprob: -22.0
    4. '```' → logprob: -22.125
    5. '	print' → logprob: -22.875
    6. 'printf' → logprob: -24.75
    7. 'println' → logprob: -25.125
    8. ' ' → logprob: -25.125
    9. '#print' → logprob: -25.25
    10. '(print' → logprob: -25.375

Token 95: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -9.014684110297821e-06
    2. '(' → logprob: -11.750008583068848
    3. '()' → logprob: -13.750008583068848
    4. 'row' → logprob: -17.500009536743164
    5. '(rows' → logprob: -18.125009536743164
    6. '(column' → logprob: -20.125009536743164
    7. '(
' → logprob: -20.375009536743164
    8. '((' → logprob: -20.500009536743164
    9. '(line' → logprob: -20.750009536743164
    10. '[row' → logprob: -21.750009536743164

Token 96: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1637164789135568e-05
    2. '[N' → logprob: -11.375011444091797
    3. '[' → logprob: -15.875011444091797
    4. '[n' → logprob: -18.125011444091797
    5. '[I' → logprob: -18.125011444091797
    6. '(i' → logprob: -19.125011444091797
    7. 'i' → logprob: -19.625011444091797
    8. ')' → logprob: -21.375011444091797
    9. '[end' → logprob: -21.500011444091797
    10. '[int' → logprob: -21.750011444091797

Token 97: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015229015843942761
    2. '))' → logprob: -8.875152587890625
    3. '")' → logprob: -12.375152587890625
    4. ')")' → logprob: -12.625152587890625
    5. '})' → logprob: -13.625152587890625
    6. ' )' → logprob: -14.250152587890625
    7. '])' → logprob: -14.250152587890625
    8. '`)' → logprob: -14.625152587890625
    9. ')`' → logprob: -14.625152587890625
    10. '())' → logprob: -14.875152587890625


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 95
Tokens correctement prédits (1ère position, stricte): 34
Tokens correctement prédits (1ère position, avec adaptation): 37
Tokens correctement prédits (top 10): 80
Précision stricte (1ère position): 35.79%
Précision adaptée (1ère position): 38.95%
Précision (top 10): 84.21%
================================================================================
