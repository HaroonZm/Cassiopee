================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:24:04
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
A0 = list(map(int, input().split()))
A1 = list(map(int, input().split()))
A2 = list(map(int, input().split()))
N = int(input())
b = []
for _ in range(N):
    b.append(int(input()))
ans00 = False
ans01 = False
ans02 = False
ans10 = False
ans11 = False
ans12 = False
ans20 = False
ans21 = False
ans22 = False
if A0[0] in b:
    ans00 = True
if A0[1] in b:
    ans01 = True
if A0[2] in b:
    ans02 = True
if A1[0] in b:
    ans10 = True
if A1[1] in b:
    ans11 = True
if A1[2] in b:
    ans12 = True
if A2[0] in b:
    ans20 = True
if A2[1] in b:
    ans21 = True
if A2[2] in b:
    ans22 = True
if ans00 and ans10 and ans20:
    print('Yes')
    sys.exit()
if ans01 and ans11 and ans21:
    print('Yes')
    sys.exit()
if ans02 and ans12 and ans22:
    print('Yes')
    sys.exit()
if ans00 and ans01 and ans02:
    print('Yes')
    sys.exit()
if ans10 and ans11 and ans12:
    print('Yes')
    sys.exit()
if ans20 and ans21 and ans22:
    print('Yes')
    sys.exit()
ans_flag = True
ans_flag2 = True
if not ans00:
    ans_flag = False
if not ans11:
    ans_flag = False
if not ans22:
    ans_flag = False
if not ans02:
    ans_flag2 = False
if not ans11:
    ans_flag2 = False
if not ans20:
    ans_flag2 = False
if ans_flag or ans_flag2:
    print('Yes')
else:
    print('No')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'A' (ID: 32)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3199642300605774
    2. '.' → logprob: -1.6949641704559326
    3. '<|end|>' → logprob: -2.9449641704559326
    4. '\' → logprob: -4.444964408874512
    5. 'newline' → logprob: -5.069964408874512
    6. 'import' → logprob: -5.069964408874512
    7. '' → logprob: -5.819964408874512
    8. '<|end|>' → logprob: -5.944964408874512
    9. '\r' → logprob: -6.069964408874512
    10. '
' → logprob: -6.319964408874512

Token 4: '0' (ID: 15)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6892330050468445
    2. '=' → logprob: -1.5642330646514893
    3. '_' → logprob: -1.6892330646514893
    4. ' =' → logprob: -3.6892330646514893
    5. ' ' → logprob: -3.6892330646514893
    6. 'r' → logprob: -3.8142330646514893
    7. 'p' → logprob: -4.81423282623291
    8. 'd' → logprob: -5.31423282623291
    9. 'i' → logprob: -5.43923282623291
    10. 'ir' → logprob: -5.68923282623291

Token 5: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.008093222044408321
    2. '=' → logprob: -5.383093357086182
    3. '[' → logprob: -6.633093357086182
    4. ' =' → logprob: -7.008093357086182
    5. '.
' → logprob: -8.008092880249023
    6. ',' → logprob: -8.508092880249023
    7. 'r' → logprob: -8.758092880249023
    8. ' .' → logprob: -9.633092880249023
    9. 'p' → logprob: -9.758092880249023
    10. 'A' → logprob: -10.008092880249023

Token 6: ' list' (ID: 1562)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.2645294666290283
    2. ' []' → logprob: -1.6395294666290283
    3. ' ' → logprob: -4.264529228210449
    4. '[]' → logprob: -4.889529228210449
    5. 'sys' → logprob: -4.889529228210449
    6. ' [' → logprob: -6.639529228210449
    7. ' "' → logprob: -6.889529228210449
    8. ' '' → logprob: -7.014529228210449
    9. ' {}' → logprob: -7.264529228210449
    10. '[' → logprob: -7.264529228210449

Token 7: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -4.203409844194539e-05
    2. '(
' → logprob: -11.125041961669922
    3. '[' → logprob: -12.000041961669922
    4. '(range' → logprob: -12.000041961669922
    5. ' (' → logprob: -12.250041961669922
    6. '((' → logprob: -13.000041961669922
    7. '(

' → logprob: -13.250041961669922
    8. '()' → logprob: -14.125041961669922
    9. '('' → logprob: -14.750041961669922
    10. '[(' → logprob: -15.000041961669922

Token 8: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.022905917838215828
    2. '(str' → logprob: -4.1479058265686035
    3. '(lambda' → logprob: -5.2729058265686035
    4. '(int' → logprob: -6.5229058265686035
    5. '(
' → logprob: -9.022906303405762
    6. ' (' → logprob: -10.397906303405762
    7. '(eval' → logprob: -10.522906303405762
    8. '(sys' → logprob: -10.647906303405762
    9. '(list' → logprob: -11.397906303405762
    10. '(print' → logprob: -12.147906303405762

Token 9: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.6342928409576416
    2. '(' → logprob: -0.7592928409576416
    3. ')' → logprob: -7.5092926025390625
    4. '(input' → logprob: -8.259292602539062
    5. ',' → logprob: -8.884292602539062
    6. ' (' → logprob: -8.884292602539062
    7. 'sys' → logprob: -9.134292602539062
    8. '(
' → logprob: -9.259292602539062
    9. '))' → logprob: -9.759292602539062
    10. '=sys' → logprob: -9.759292602539062

Token 10: ' input' (ID: 3422)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.41163671016693115
    2. 'sys' → logprob: -1.1616367101669312
    3. ' input' → logprob: -4.411636829376221
    4. 'input' → logprob: -4.661636829376221
    5. '(sys' → logprob: -5.911636829376221
    6. ')' → logprob: -9.036636352539062
    7. '=sys' → logprob: -10.661636352539062
    8. '(input' → logprob: -11.911636352539062
    9. ' )' → logprob: -12.286636352539062
    10. '	sys' → logprob: -12.536636352539062

Token 11: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7570719718933105
    2. '()))' → logprob: -1.0070719718933105
    3. '()' → logprob: -2.5070719718933105
    4. '(sys' → logprob: -3.6320719718933105
    5. '()));' → logprob: -3.8820719718933105
    6. '(()' → logprob: -5.0070719718933105
    7. '))' → logprob: -5.2570719718933105
    8. '())' → logprob: -5.3820719718933105
    9. '('' → logprob: -5.5070719718933105
    10. '(""))' → logprob: -5.8820719718933105

Token 12: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007426840020343661
    2. 'strip' → logprob: -7.2507429122924805
    3. 'rstrip' → logprob: -10.37574291229248
    4. ' split' → logprob: -14.50074291229248
    5. '(split' → logprob: -14.50074291229248
    6. 'spl' → logprob: -15.00074291229248
    7. ')' → logprob: -15.75074291229248
    8. 'read' → logprob: -16.375741958618164
    9. 'startswith' → logprob: -18.125741958618164
    10. 'replace' → logprob: -18.125741958618164

Token 13: '()))
' (ID: 24521)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7655851244926453
    2. '))' → logprob: -0.7655851244926453
    3. '()))' → logprob: -3.51558518409729
    4. ')))' → logprob: -4.015584945678711
    5. '(' → logprob: -4.390584945678711
    6. '())' → logprob: -4.765584945678711
    7. '()' → logprob: -7.265584945678711
    8. '())))' → logprob: -8.140584945678711
    9. ')>' → logprob: -10.140584945678711
    10. '),' → logprob: -11.265584945678711

Token 14: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.9623019695281982
    2. 'if' → logprob: -1.4623019695281982
    3. '.' → logprob: -1.9623019695281982
    4. '[' → logprob: -2.2123019695281982
    5. 'print' → logprob: -3.4623019695281982
    6. '#' → logprob: -3.5873019695281982
    7. 'for' → logprob: -3.5873019695281982
    8. '+' → logprob: -4.462302207946777
    9. 'a' → logprob: -4.462302207946777
    10. '`' → logprob: -5.212302207946777

Token 15: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04303424432873726
    2. '[' → logprob: -3.168034315109253
    3. 'O' → logprob: -10.418034553527832
    4. '_' → logprob: -14.168034553527832
    5. ' [' → logprob: -14.418034553527832
    6. '\[' → logprob: -14.418034553527832
    7. '1' → logprob: -14.793034553527832
    8. ' ' → logprob: -14.918034553527832
    9. 'A' → logprob: -15.043034553527832
    10. '```' → logprob: -15.168034553527832

Token 16: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07133536040782928
    2. '.' → logprob: -3.3213353157043457
    3. '+' → logprob: -4.321335315704346
    4. '.append' → logprob: -4.696335315704346
    5. ')' → logprob: -5.196335315704346
    6. ' =' → logprob: -6.696335315704346
    7. '[:]' → logprob: -7.196335315704346
    8. '=' → logprob: -7.821335315704346
    9. ' +' → logprob: -8.196335792541504
    10. '[A' → logprob: -8.446335792541504

Token 17: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.7150856852531433
    2. 'list' → logprob: -0.7150856852531433
    3. ' A' → logprob: -4.840085506439209
    4. 'A' → logprob: -5.340085506439209
    5. ' [' → logprob: -5.965085506439209
    6. '[]' → logprob: -6.590085506439209
    7. ' sorted' → logprob: -6.590085506439209
    8. 'sorted' → logprob: -6.715085506439209
    9. '[A' → logprob: -7.215085506439209
    10. '[' → logprob: -7.215085506439209

Token 18: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6940290927886963
    2. '(map' → logprob: -0.6940290927886963
    3. ' (' → logprob: -7.694028854370117
    4. '(.' → logprob: -9.069028854370117
    5. '(list' → logprob: -9.569028854370117
    6. '(
' → logprob: -9.819028854370117
    7. '(int' → logprob: -10.194028854370117
    8. '((' → logprob: -10.819028854370117
    9. '(filter' → logprob: -11.194028854370117
    10. '(range' → logprob: -11.444028854370117

Token 19: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.3147798180580139
    2. '(' → logprob: -1.3147797584533691
    3. '(str' → logprob: -6.564779758453369
    4. '<int' → logprob: -10.439780235290527
    5. '(
' → logprob: -11.439780235290527
    6. ')' → logprob: -11.564780235290527
    7. '(sys' → logprob: -11.564780235290527
    8. 'int' → logprob: -12.064780235290527
    9. ' (' → logprob: -12.189780235290527
    10. '[int' → logprob: -12.189780235290527

Token 20: ',' (ID: 11)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.6786900162696838
    2. '(input' → logprob: -1.178689956665039
    3. '(' → logprob: -3.053689956665039
    4. '.' → logprob: -3.178689956665039
    5. '(.' → logprob: -3.303689956665039
    6. '(sys' → logprob: -3.303689956665039
    7. ',' → logprob: -4.928689956665039
    8. ').' → logprob: -5.553689956665039
    9. '(int' → logprob: -5.678689956665039
    10. ',input' → logprob: -6.428689956665039

Token 21: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3944932520389557
    2. 'input' → logprob: -1.1444932222366333
    3. 'int' → logprob: -5.019493103027344
    4. ' int' → logprob: -7.394493103027344
    5. 'sys' → logprob: -8.769493103027344
    6. ' sys' → logprob: -9.019493103027344
    7. '(input' → logprob: -9.519493103027344
    8. 'import' → logprob: -12.894493103027344
    9. '(int' → logprob: -12.894493103027344
    10. 'stdin' → logprob: -13.144493103027344

Token 22: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.23917081207037e-05
    2. '()' → logprob: -10.750041961669922
    3. '.' → logprob: -11.125041961669922
    4. ' ().' → logprob: -12.625041961669922
    5. '(' → logprob: -13.250041961669922
    6. '()))' → logprob: -15.000041961669922
    7. ' .' → logprob: -15.750041961669922
    8. '().'' → logprob: -15.875041961669922
    9. ''s' → logprob: -16.500041961669922
    10. '(.' → logprob: -16.750041961669922

Token 23: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.088346359931165e-07
    2. 'spl' → logprob: -15.000000953674316
    3. '(split' → logprob: -15.250000953674316
    4. ')' → logprob: -15.250000953674316
    5. ' split' → logprob: -17.25
    6. 'strip' → logprob: -17.625
    7. 'rstrip' → logprob: -18.125
    8. '.split' → logprob: -18.625
    9. '()' → logprob: -20.0
    10. 'plit' → logprob: -20.25

Token 24: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.023439034819602966
    2. '()' → logprob: -4.648438930511475
    3. '())' → logprob: -4.898438930511475
    4. '))' → logprob: -5.148438930511475
    5. '()));' → logprob: -8.773439407348633
    6. ')' → logprob: -9.398439407348633
    7. '()))
' → logprob: -10.773439407348633
    8. '(' → logprob: -10.898439407348633
    9. '())))' → logprob: -11.523439407348633
    10. '())).' → logprob: -11.648439407348633

Token 25: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.386346459388733
    2. 'for' → logprob: -1.886346459388733
    3. 's' → logprob: -2.3863463401794434
    4. 'if' → logprob: -2.6363463401794434
    5. 'result' → logprob: -2.8863463401794434
    6. 'n' → logprob: -2.8863463401794434
    7. 'C' → logprob: -3.3863463401794434
    8. 'sum' → logprob: -3.6363463401794434
    9. 'a' → logprob: -3.7613463401794434
    10. 'S' → logprob: -3.7613463401794434

Token 26: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.18405191600322723
    2. '0' → logprob: -1.8090518712997437
    3. '[' → logprob: -5.809051990509033
    4. '1' → logprob: -6.809051990509033
    5. '_' → logprob: -8.934051513671875
    6. ' ' → logprob: -11.059051513671875
    7. '.' → logprob: -11.309051513671875
    8. '+' → logprob: -11.434051513671875
    9. ')' → logprob: -12.559051513671875
    10. 'A' → logprob: -13.371551513671875

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012541553005576134
    2. '=' → logprob: -4.387541770935059
    3. '.' → logprob: -11.637541770935059
    4. '[' → logprob: -12.137541770935059
    5. ' ' → logprob: -12.387541770935059
    6. '_' → logprob: -13.012541770935059
    7. '0' → logprob: -13.262541770935059
    8. ')' → logprob: -14.012541770935059
    9. '=[]' → logprob: -14.012541770935059
    10. 's' → logprob: -14.262541770935059

Token 28: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.32138118147850037
    2. 'list' → logprob: -1.3213812112808228
    3. ' [' → logprob: -5.821381092071533
    4. '[A' → logprob: -6.321381092071533
    5. 'A' → logprob: -7.196381092071533
    6. '[]' → logprob: -7.446381092071533
    7. '[' → logprob: -7.571381092071533
    8. ' A' → logprob: -7.571381092071533
    9. '[list' → logprob: -8.821381568908691
    10. '[int' → logprob: -8.946381568908691

Token 29: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5447682738304138
    2. '(int' → logprob: -1.1697683334350586
    3. '(map' → logprob: -2.5447683334350586
    4. '(list' → logprob: -3.9197683334350586
    5. '(lambda' → logprob: -4.919768333435059
    6. '((' → logprob: -6.419768333435059
    7. '(A' → logprob: -6.919768333435059
    8. '(len' → logprob: -8.169768333435059
    9. '(.' → logprob: -8.544768333435059
    10. '(range' → logprob: -8.919768333435059

Token 30: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -3.523948907968588e-05
    2. '(' → logprob: -10.625035285949707
    3. 'int' → logprob: -12.000035285949707
    4. '=int' → logprob: -12.625035285949707
    5. '<int' → logprob: -14.375035285949707
    6. ',int' → logprob: -15.125035285949707
    7. '[int' → logprob: -15.625035285949707
    8. '(list' → logprob: -16.00003433227539
    9. '(str' → logprob: -16.25003433227539
    10. ' (' → logprob: -16.75003433227539

Token 31: ',' (ID: 11)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -3.726595241460018e-05
    2. ' ().' → logprob: -11.12503719329834
    3. '()' → logprob: -11.37503719329834
    4. '.' → logprob: -12.75003719329834
    5. '```' → logprob: -13.37503719329834
    6. '[].' → logprob: -13.37503719329834
    7. '(int' → logprob: -13.87503719329834
    8. ').' → logprob: -14.12503719329834
    9. ' .' → logprob: -14.50003719329834
    10. '{}.' → logprob: -15.00003719329834

Token 32: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0024521113373339176
    2. ' int' → logprob: -6.1274518966674805
    3. '(int' → logprob: -8.75245189666748
    4. 'input' → logprob: -9.25245189666748
    5. ' input' → logprob: -12.37745189666748
    6. 'sys' → logprob: -12.75245189666748
    7. '[int' → logprob: -12.87745189666748
    8. 'str' → logprob: -13.87745189666748
    9. ',int' → logprob: -14.25245189666748
    10. '<int' → logprob: -14.50245189666748

Token 33: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.000966487976256758
    2. '()' → logprob: -7.625966548919678
    3. '.' → logprob: -7.875966548919678
    4. '(' → logprob: -9.50096607208252
    5. '(.' → logprob: -11.37596607208252
    6. ' ().' → logprob: -12.75096607208252
    7. '()))' → logprob: -13.25096607208252
    8. ').' → logprob: -13.37596607208252
    9. '())' → logprob: -13.75096607208252
    10. ')' → logprob: -13.75096607208252

Token 34: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.749814019713085e-06
    2. ')' → logprob: -13.000006675720215
    3. '.split' → logprob: -13.625006675720215
    4. 'spl' → logprob: -14.000006675720215
    5. '(split' → logprob: -14.250006675720215
    6. '))' → logprob: -14.500006675720215
    7. ' split' → logprob: -15.125006675720215
    8. '()))' → logprob: -15.375006675720215
    9. '_split' → logprob: -15.875006675720215
    10. 'sys' → logprob: -15.875006675720215

Token 35: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.7627574801445007
    2. '()))' → logprob: -0.7627574801445007
    3. ')' → logprob: -3.2627575397491455
    4. '())' → logprob: -4.262757301330566
    5. '()' → logprob: -4.262757301330566
    6. '(' → logprob: -7.637757301330566
    7. '()))
' → logprob: -8.762757301330566
    8. '()));' → logprob: -9.887757301330566
    9. ')))' → logprob: -10.887757301330566
    10. ''))' → logprob: -11.387757301330566

Token 36: 'N' (ID: 45)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.0227309465408325
    2. 'a' → logprob: -2.647730827331543
    3. 's' → logprob: -2.772730827331543
    4. 'n' → logprob: -2.897730827331543
    5. 'C' → logprob: -3.147730827331543
    6. 'r' → logprob: -3.272730827331543
    7. 'i' → logprob: -3.397730827331543
    8. 'B' → logprob: -3.522730827331543
    9. 'M' → logprob: -3.522730827331543
    10. 'S' → logprob: -3.522730827331543

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.024738356471061707
    2. '=' → logprob: -3.774738311767578
    3. ' ' → logprob: -7.149738311767578
    4. '_' → logprob: -7.399738311767578
    5. '.' → logprob: -10.524738311767578
    6. '=int' → logprob: -10.524738311767578
    7. '  ' → logprob: -11.774738311767578
    8. ' =
' → logprob: -12.024738311767578
    9. ')' → logprob: -12.024738311767578
    10. 's' → logprob: -12.649738311767578

Token 38: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.00357441115193069
    2. 'int' → logprob: -6.378574371337891
    3. ' len' → logprob: -6.628574371337891
    4. ' ' → logprob: -7.753574371337891
    5. ' A' → logprob: -9.25357437133789
    6. 'len' → logprob: -11.50357437133789
    7. ' input' → logprob: -12.37857437133789
    8. ' ' → logprob: -13.12857437133789
    9. ' max' → logprob: -13.62857437133789
    10. 'A' → logprob: -13.75357437133789

Token 39: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0038813117425888777
    2. '(input' → logprob: -5.628881454467773
    3. '()' → logprob: -9.003881454467773
    4. '('' → logprob: -9.378881454467773
    5. '(sys' → logprob: -10.253881454467773
    6. ' (' → logprob: -11.378881454467773
    7. 'input' → logprob: -12.253881454467773
    8. '(
' → logprob: -12.253881454467773
    9. '(s' → logprob: -12.378881454467773
    10. '(`' → logprob: -13.128881454467773

Token 40: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.35227611660957336
    2. '()' → logprob: -1.352276086807251
    3. ')' → logprob: -3.352276086807251
    4. '()))' → logprob: -5.97727632522583
    5. '(' → logprob: -7.97727632522583
    6. '))' → logprob: -8.352275848388672
    7. ' ())' → logprob: -9.602275848388672
    8. '().' → logprob: -10.477275848388672
    9. '`)' → logprob: -11.352275848388672
    10. '()`' → logprob: -11.852275848388672

Token 41: 'b' (ID: 65)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1815752238035202
    2. '[' → logprob: -3.181575298309326
    3. 'd' → logprob: -3.681575298309326
    4. 'A' → logprob: -4.056575298309326
    5. 'r' → logprob: -4.431575298309326
    6. '(' → logprob: -4.431575298309326
    7. 'a' → logprob: -4.556575298309326
    8. 'f' → logprob: -4.931575298309326
    9. 'result' → logprob: -5.056575298309326
    10. ')' → logprob: -5.306575298309326

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.866212010383606
    2. 'r' → logprob: -1.116212010383606
    3. 'i' → logprob: -3.6162118911743164
    4. '=' → logprob: -3.7412118911743164
    5. '[i' → logprob: -3.7412118911743164
    6. 'y' → logprob: -3.8662118911743164
    7. 'e' → logprob: -3.8662118911743164
    8. 'u' → logprob: -4.116211891174316
    9. 'uy' → logprob: -4.116211891174316
    10. '_' → logprob: -4.741211891174316

Token 43: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.630211353302002
    2. 'list' → logprob: -1.755211353302002
    3. '[' → logprob: -2.130211353302002
    4. ' []' → logprob: -2.255211353302002
    5. '[int' → logprob: -3.755211353302002
    6. ' [' → logprob: -4.130211353302002
    7. '0' → logprob: -4.505211353302002
    8. '[A' → logprob: -5.630211353302002
    9. ' list' → logprob: -5.755211353302002
    10. 'A' → logprob: -6.005211353302002

Token 44: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00033796546631492674
    2. ' for' → logprob: -8.625337600708008
    3. '[' → logprob: -8.875337600708008
    4. 'f' → logprob: -11.500337600708008
    5. '(' → logprob: -13.625337600708008
    6. '[]' → logprob: -13.875337600708008
    7. 'b' → logprob: -14.000337600708008
    8. 'i' → logprob: -14.125337600708008
    9. '_' → logprob: -14.250337600708008
    10. '0' → logprob: -14.250337600708008

Token 45: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4444292485713959
    2. ' _' → logprob: -1.5694292783737183
    3. '_' → logprob: -1.9444292783737183
    4. ' ' → logprob: -5.319429397583008
    5. 'i' → logprob: -5.944429397583008
    6. '_i' → logprob: -10.694429397583008
    7. ' ' → logprob: -11.194429397583008
    8. '  ' → logprob: -11.819429397583008
    9. ' ‌' → logprob: -12.069429397583008
    10. ' I' → logprob: -12.944429397583008

Token 46: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16322548687458038
    2. 'in' → logprob: -2.0382254123687744
    3. ' i' → logprob: -4.6632256507873535
    4. 'i' → logprob: -5.0382256507873535
    5. ' ' → logprob: -5.5382256507873535
    6. '0' → logprob: -8.913225173950195
    7. 'n' → logprob: -10.038225173950195
    8. 'b' → logprob: -10.288225173950195
    9. '  ' → logprob: -10.288225173950195
    10. 'A' → logprob: -10.288225173950195

Token 47: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.038058239966630936
    2. 'range' → logprob: -3.288058280944824
    3. ' A' → logprob: -12.163058280944824
    4. 'A' → logprob: -12.413058280944824
    5. ' b' → logprob: -12.663058280944824
    6. 'b' → logprob: -12.788058280944824
    7. '(range' → logprob: -14.788058280944824
    8. ' xrange' → logprob: -15.038058280944824
    9. '	range' → logprob: -15.288058280944824
    10. 'Range' → logprob: -15.538058280944824

Token 48: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.32382503151893616
    2. ' (' → logprob: -1.4488250017166138
    3. '(N' → logprob: -3.3238251209259033
    4. ' N' → logprob: -5.573824882507324
    5. ' ' → logprob: -6.323824882507324
    6. 'N' → logprob: -9.698824882507324
    7. '(range' → logprob: -10.448824882507324
    8. '(n' → logprob: -10.573824882507324
    9. '(s' → logprob: -11.448824882507324
    10. '(
' → logprob: -11.448824882507324

Token 49: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.049930740147829056
    2. ')' → logprob: -3.0499308109283447
    3. ' ):' → logprob: -7.299930572509766
    4. ':' → logprob: -7.424930572509766
    5. ' )' → logprob: -10.424930572509766
    6. '):
' → logprob: -10.549930572509766
    7. ',' → logprob: -12.299930572509766
    8. '+' → logprob: -12.424930572509766
    9. ':)' → logprob: -14.049930572509766
    10. ' ' → logprob: -14.049930572509766

Token 50: '   ' (ID: 271)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.11840058118104935
    2. 'b' → logprob: -2.2434005737304688
    3. '   ' → logprob: -5.368400573730469
    4. '	b' → logprob: -7.993400573730469
    5. ' ' → logprob: -9.118400573730469
    6. 'a' → logprob: -9.118400573730469
    7. ' a' → logprob: -9.618400573730469
    8. '    ' → logprob: -9.743400573730469
    9. ' s' → logprob: -10.368400573730469
    10. ' input' → logprob: -10.618400573730469

Token 51: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5612003207206726
    2. 'b' (adapté à ' b') → logprob: -0.9362003207206726
    3. 'a' → logprob: -4.686200141906738
    4. ' s' → logprob: -5.061200141906738
    5. 's' → logprob: -5.186200141906738
    6. ' a' → logprob: -5.561200141906738
    7. ' x' → logprob: -6.061200141906738
    8. 'x' → logprob: -6.186200141906738
    9. ' l' → logprob: -6.686200141906738
    10. 'l' → logprob: -7.061200141906738

Token 52: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.2520202398300171
    2. '.' → logprob: -1.502020239830017
    3. '.extend' → logprob: -9.877019882202148
    4. '=' → logprob: -11.502019882202148
    5. '.=' → logprob: -11.877019882202148
    6. ' =' → logprob: -12.127019882202148
    7. ' .' → logprob: -12.252019882202148
    8. 'append' → logprob: -12.502019882202148
    9. '.push' → logprob: -12.877019882202148
    10. '.app' → logprob: -13.502019882202148

Token 53: '(int' (ID: 2742)
  Prédit: '(list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.45746615529060364
    2. '(int' → logprob: -1.0824661254882812
    3. '(' → logprob: -3.8324661254882812
    4. '(tuple' → logprob: -5.082466125488281
    5. 'list' → logprob: -8.832466125488281
    6. 'int' → logprob: -9.582466125488281
    7. ' (' → logprob: -9.832466125488281
    8. '(float' → logprob: -10.082466125488281
    9. '(map' → logprob: -10.207466125488281
    10. '([' → logprob: -10.332466125488281

Token 54: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.016295703127980232
    2. '(' → logprob: -4.141295909881592
    3. '()' → logprob: -8.891295433044434
    4. '(sys' → logprob: -9.516295433044434
    5. '())' → logprob: -11.266295433044434
    6. 'input' → logprob: -11.516295433044434
    7. '(
' → logprob: -11.891295433044434
    8. ')' → logprob: -11.891295433044434
    9. ' (' → logprob: -12.016295433044434
    10. ' input' → logprob: -13.016295433044434

Token 55: '()))
' (ID: 24521)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5775784850120544
    2. '()))' → logprob: -0.8275784850120544
    3. '()' → logprob: -6.577578544616699
    4. '(' → logprob: -9.3275785446167
    5. ')' → logprob: -9.8275785446167
    6. '())))' → logprob: -10.4525785446167
    7. ' ())' → logprob: -11.2025785446167
    8. '()))
' → logprob: -11.2025785446167
    9. '()));' → logprob: -11.4525785446167
    10. '))' → logprob: -11.7025785446167

Token 56: 'ans' (ID: 616)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.317966341972351
    2. 'for' → logprob: -1.567966341972351
    3. 'c' → logprob: -1.942966341972351
    4. 'result' → logprob: -2.4429664611816406
    5. 'a' → logprob: -3.0679664611816406
    6. 'r' → logprob: -3.5679664611816406
    7. 'A' → logprob: -3.5679664611816406
    8. 'ans' → logprob: -3.8179664611816406
    9. 'answer' → logprob: -3.8179664611816406
    10. 'res' → logprob: -3.9429664611816406

Token 57: '00' (ID: 504)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.032790303230285645
    2. '=' → logprob: -3.532790184020996
    3. '(' → logprob: -6.782790184020996
    4. '[' → logprob: -7.157790184020996
    5. '_' → logprob: -7.657790184020996
    6. 's' → logprob: -8.282790184020996
    7. ' ' → logprob: -8.907790184020996
    8. '[:]' → logprob: -9.407790184020996
    9. '=[]' → logprob: -10.282790184020996
    10. '[]' → logprob: -10.282790184020996

Token 58: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.36895275115966797
    2. '=' → logprob: -1.243952751159668
    3. '0' → logprob: -5.368952751159668
    4. 's' → logprob: -5.618952751159668
    5. '[' → logprob: -5.868952751159668
    6. '_' → logprob: -5.993952751159668
    7. '1' → logprob: -6.368952751159668
    8. ' ' → logprob: -6.868952751159668
    9. ',' → logprob: -7.118952751159668
    10. '[]' → logprob: -7.243952751159668

Token 59: ' False' (ID: 7983)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16774359345436096
    2. '[]' → logprob: -2.667743682861328
    3. ' ' → logprob: -3.292743682861328
    4. '[' → logprob: -4.042743682861328
    5. ' []' → logprob: -5.292743682861328
    6. ' [' → logprob: -5.417743682861328
    7. 'A' → logprob: -5.417743682861328
    8. 'max' → logprob: -6.417743682861328
    9. 'sum' → logprob: -6.417743682861328
    10. ' A' → logprob: -6.542743682861328

Token 60: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1759331077337265
    2. '<|end|>' → logprob: -3.0509331226348877
    3. ':' → logprob: -3.4259331226348877
    4. ',' → logprob: -3.5509331226348877
    5. 'for' → logprob: -3.9259331226348877
    6. '#' → logprob: -4.300932884216309
    7. ';' → logprob: -6.050932884216309
    8. ')' → logprob: -6.175932884216309
    9. '\' → logprob: -6.175932884216309
    10. ' 
' → logprob: -6.425932884216309

Token 61: 'ans' (ID: 616)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06812681257724762
    2. 'for' → logprob: -3.193126916885376
    3. '<|end|>' → logprob: -4.693126678466797
    4. ':' → logprob: -5.318126678466797
    5. ' for' → logprob: -5.693126678466797
    6. 'if' → logprob: -6.318126678466797
    7. ' 
' → logprob: -6.443126678466797
    8. '\n' → logprob: -7.068126678466797
    9. '' → logprob: -7.318126678466797
    10. ':
' → logprob: -7.693126678466797

Token 62: '01' (ID: 2290)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.45136454701423645
    2. '00' → logprob: -1.576364517211914
    3. ' =' → logprob: -2.201364517211914
    4. '01' → logprob: -3.951364517211914
    5. ' ' → logprob: -4.701364517211914
    6. '=' → logprob: -4.951364517211914
    7. '10' → logprob: -5.576364517211914
    8. '1' → logprob: -6.201364517211914
    9. '_' → logprob: -6.701364517211914
    10. '11' → logprob: -7.076364517211914

Token 63: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.040281057357788086
    2. '=' → logprob: -3.290281057357788
    3. ' ' → logprob: -6.165281295776367
    4. ')' → logprob: -10.040281295776367
    5. '[' → logprob: -11.165281295776367
    6. ' )' → logprob: -11.415281295776367
    7. ' ==' → logprob: -11.540281295776367
    8. ':' → logprob: -11.665281295776367
    9. '=True' → logprob: -11.790281295776367
    10. ' =)' → logprob: -11.915281295776367

Token 64: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.803604781627655
    2. 'False' → logprob: -0.928604781627655
    3. ' True' → logprob: -2.0536048412323
    4. 'True' → logprob: -3.5536048412323
    5. '[]' → logprob: -9.428605079650879
    6. '0' → logprob: -9.428605079650879
    7. ' ' → logprob: -9.928605079650879
    8. ' []' → logprob: -10.803605079650879
    9. '(False' → logprob: -11.428605079650879
    10. ' None' → logprob: -12.053605079650879

Token 65: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.44448551535606384
    2. '
' → logprob: -1.1944855451583862
    3. ' for' → logprob: -3.9444854259490967
    4. '<|end|>' → logprob: -4.069485664367676
    5. 'if' → logprob: -4.194485664367676
    6. ' ' → logprob: -6.944485664367676
    7. 'i' → logprob: -7.319485664367676
    8. ' 
' → logprob: -7.444485664367676
    9. '\n' → logprob: -7.569485664367676
    10. ':' → logprob: -8.319485664367676

Token 66: 'ans' (ID: 616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12527015805244446
    2. 'if' → logprob: -2.625270128250122
    3. ' for' → logprob: -3.625270128250122
    4. '
' → logprob: -5.125270366668701
    5. 'i' → logprob: -5.625270366668701
    6. '\n' → logprob: -6.125270366668701
    7. ':' → logprob: -6.625270366668701
    8. ' 
' → logprob: -6.875270366668701
    9. ' if' → logprob: -7.250270366668701
    10. 'a' → logprob: -7.375270366668701

Token 67: '02' (ID: 3286)
  Prédit: '02'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '02' → logprob: -0.0743788629770279
    2. '10' → logprob: -2.9493789672851562
    3. '0' → logprob: -4.824378967285156
    4. '00' → logprob: -5.324378967285156
    5. '1' → logprob: -5.324378967285156
    6. '2' → logprob: -7.449378967285156
    7. '=' → logprob: -8.199378967285156
    8. '01' → logprob: -8.574378967285156
    9. '11' → logprob: -8.699378967285156
    10. '20' → logprob: -9.074378967285156

Token 68: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16026556491851807
    2. '=' → logprob: -1.910265564918518
    3. '=True' → logprob: -10.785265922546387
    4. '=False' → logprob: -11.035265922546387
    5. ' ' → logprob: -12.785265922546387
    6. 'False' → logprob: -14.785265922546387
    7. ' True' → logprob: -15.160265922546387
    8. ' False' → logprob: -15.410265922546387
    9. ')' → logprob: -15.535265922546387
    10. ' =
' → logprob: -15.660265922546387

Token 69: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.11947114765644073
    2. ' False' → logprob: -2.3694710731506348
    3. 'True' → logprob: -4.244471073150635
    4. ' True' → logprob: -5.369471073150635
    5. '0' → logprob: -10.369471549987793
    6. '(False' → logprob: -11.369471549987793
    7. ' ' → logprob: -11.744471549987793
    8. '[]' → logprob: -11.869471549987793
    9. 'all' → logprob: -12.869471549987793
    10. 'b' → logprob: -12.869471549987793

Token 70: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5302578210830688
    2. '
' → logprob: -1.0302578210830688
    3. ' for' → logprob: -3.0302577018737793
    4. 'if' → logprob: -5.655257701873779
    5. ' 
' → logprob: -7.030257701873779
    6. '\n' → logprob: -7.405257701873779
    7. '<|end|>' → logprob: -7.530257701873779
    8. 'i' → logprob: -8.780258178710938
    9. '```' → logprob: -8.905258178710938
    10. ' if' → logprob: -9.155258178710938

Token 71: 'ans' (ID: 616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0031597763299942017
    2. '
' → logprob: -6.878159999847412
    3. 'i' → logprob: -7.378159999847412
    4. 'f' → logprob: -7.378159999847412
    5. ' for' → logprob: -7.628159999847412
    6. 'if' → logprob: -8.503159523010254
    7. '```' → logprob: -10.378159523010254
    8. 'n' → logprob: -10.503159523010254
    9. '\n' → logprob: -10.628159523010254
    10. 'a' → logprob: -11.253159523010254

Token 72: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.027967095375061
    2. '0' → logprob: -1.152967095375061
    3. '00' → logprob: -1.902967095375061
    4. '03' → logprob: -2.0279669761657715
    5. '12' → logprob: -3.7779669761657715
    6. '20' → logprob: -4.4029669761657715
    7. '1' → logprob: -5.0279669761657715
    8. '01' → logprob: -6.9029669761657715
    9. '11' → logprob: -7.0279669761657715
    10. '2' → logprob: -7.6529669761657715

Token 73: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007691321894526482
    2. '=' → logprob: -4.882691383361816
    3. ' ' → logprob: -9.507691383361816
    4. '0' → logprob: -12.257691383361816
    5. ' =
' → logprob: -13.757691383361816
    6. '=False' → logprob: -13.882691383361816
    7. ',' → logprob: -14.257691383361816
    8. '_' → logprob: -14.257691383361816
    9. ' =)' → logprob: -14.882691383361816
    10. '=True' → logprob: -14.882691383361816

Token 74: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.5252054333686829
    2. 'False' → logprob: -0.9002054333686829
    3. ' True' → logprob: -6.400205612182617
    4. 'True' → logprob: -8.025205612182617
    5. ' ' → logprob: -10.525205612182617
    6. '(False' → logprob: -10.525205612182617
    7. '0' → logprob: -10.775205612182617
    8. '=False' → logprob: -12.150205612182617
    9. '[]' → logprob: -12.525205612182617
    10. ' =' → logprob: -14.025205612182617

Token 75: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7355048656463623
    2. '<|end|>' → logprob: -1.2355048656463623
    3. ' 
' → logprob: -1.6105048656463623
    4. '  
' → logprob: -4.360505104064941
    5. '<|end|>' → logprob: -5.360505104064941
    6. '
' → logprob: -5.985505104064941
    7. ' =' → logprob: -6.610505104064941
    8. ' ans' → logprob: -6.610505104064941
    9. 'False' → logprob: -6.735505104064941
    10. '```' → logprob: -7.235505104064941

Token 76: 'ans' (ID: 616)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.1011677160859108
    2. 'ans' → logprob: -2.476167678833008
    3. ' ' → logprob: -4.851167678833008
    4. ' False' → logprob: -6.601167678833008
    5. '(ans' → logprob: -7.101167678833008
    6. 'False' → logprob: -7.351167678833008
    7. '_ans' → logprob: -7.601167678833008
    8. ' True' → logprob: -7.976167678833008
    9. '	ans' → logprob: -8.726167678833008
    10. '<|end|>' → logprob: -8.726167678833008

Token 77: '11' (ID: 994)
  Prédit: '11'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.0007591230678372085
    2. '20' → logprob: -7.250759124755859
    3. '1' → logprob: -10.12575912475586
    4. '01' → logprob: -12.37575912475586
    5. '_' → logprob: -13.87575912475586
    6. '```' → logprob: -14.00075912475586
    7. '[' → logprob: -14.37575912475586
    8. '`' → logprob: -15.00075912475586
    9. '<|end|>' → logprob: -15.00075912475586
    10. '   ' → logprob: -15.37575912475586

Token 78: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008627224713563919
    2. '=' → logprob: -4.758627414703369
    3. '<|end|>' → logprob: -12.133626937866211
    4. ' ' → logprob: -12.883626937866211
    5. '=False' → logprob: -12.883626937866211
    6. '=True' → logprob: -14.383626937866211
    7. ' =
' → logprob: -14.508626937866211
    8. ' =)' → logprob: -14.758626937866211
    9. ')' → logprob: -15.633626937866211
    10. ' ='' → logprob: -16.13362693786621

Token 79: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.6327882409095764
    2. 'False' → logprob: -0.7577882409095764
    3. ' True' → logprob: -8.88278865814209
    4. 'True' → logprob: -10.38278865814209
    5. '(False' → logprob: -11.13278865814209
    6. '=False' → logprob: -13.13278865814209
    7. '0' → logprob: -13.75778865814209
    8. ' ' → logprob: -13.75778865814209
    9. '.False' → logprob: -15.63278865814209
    10. '[]' → logprob: -15.69528865814209

Token 80: '
' (ID: 198)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.3176708519458771
    2. ' False' → logprob: -1.3176708221435547
    3. '=False' → logprob: -5.817670822143555
    4. ' 
' → logprob: -7.192670822143555
    5. '(False' → logprob: -8.567670822143555
    6. '<|end|>' → logprob: -8.692670822143555
    7. ' =' → logprob: -9.192670822143555
    8. ' ' → logprob: -9.192670822143555
    9. '=' → logprob: -10.317670822143555
    10. '_false' → logprob: -11.067670822143555

Token 81: 'ans' (ID: 616)
  Prédit: ' False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.48603343963623047
    2. 'False' → logprob: -0.9860334396362305
    3. ' ' → logprob: -4.4860334396362305
    4. '<|end|>' → logprob: -8.36103343963623
    5. ' True' → logprob: -9.36103343963623
    6. '=False' → logprob: -9.48603343963623
    7. ' 
' → logprob: -9.48603343963623
    8. '(False' → logprob: -9.73603343963623
    9. '_false' → logprob: -11.11103343963623
    10. 'True' → logprob: -11.23603343963623

Token 82: '12' (ID: 899)
  Prédit: '12'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -0.2533632218837738
    2. '20' → logprob: -1.5033632516860962
    3. '2' → logprob: -6.878363132476807
    4. '02' → logprob: -8.253363609313965
    5. '```' → logprob: -10.128363609313965
    6. '1' → logprob: -10.128363609313965
    7. '=' → logprob: -11.128363609313965
    8. ' =' → logprob: -11.503363609313965
    9. '00' → logprob: -11.503363609313965
    10. '' → logprob: -11.878363609313965

Token 83: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011052536778151989
    2. '=' → logprob: -4.51105260848999
    3. '=False' → logprob: -12.511052131652832
    4. ' ' → logprob: -14.386052131652832
    5. '=True' → logprob: -15.136052131652832
    6. ' False' → logprob: -16.88605308532715
    7. 'False' → logprob: -16.88605308532715
    8. ' =
' → logprob: -17.51105308532715
    9. ' =)' → logprob: -17.76105308532715
    10. ' ='' → logprob: -18.13605308532715

Token 84: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.3487161695957184
    2. 'False' → logprob: -1.223716139793396
    3. ' True' → logprob: -8.348715782165527
    4. 'True' → logprob: -10.973715782165527
    5. '(False' → logprob: -11.348715782165527
    6. '=False' → logprob: -12.473715782165527
    7. '0' → logprob: -13.973715782165527
    8. ' ' → logprob: -14.848715782165527
    9. '[]' → logprob: -14.973715782165527
    10. '.False' → logprob: -15.848715782165527

Token 85: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.047677598893642426
    2. ' for' → logprob: -3.172677516937256
    3. 'if' → logprob: -6.547677516937256
    4. 'i' → logprob: -6.797677516937256
    5. '
' → logprob: -7.547677516937256
    6. '```' → logprob: -7.797677516937256
    7. ' 
' → logprob: -7.922677516937256
    8. '\n' → logprob: -8.797677993774414
    9. ' ' → logprob: -9.297677993774414
    10. '<|end|>' → logprob: -9.547677993774414

Token 86: 'ans' (ID: 616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0022234106436371803
    2. ' for' → logprob: -6.877223491668701
    3. 'if' → logprob: -7.002223491668701
    4. 'while' → logprob: -9.502223014831543
    5. 'i' → logprob: -9.627223014831543
    6. 'ans' → logprob: -10.127223014831543
    7. '```' → logprob: -10.752223014831543
    8. 'count' → logprob: -11.377223014831543
    9. 'flag' → logprob: -11.877223014831543
    10. 'b' → logprob: -12.252223014831543

Token 87: '20' (ID: 455)
  Prédit: '20'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.0006475062109529972
    2. '2' → logprob: -7.75064754486084
    3. ' =' → logprob: -9.62564754486084
    4. '=' → logprob: -10.12564754486084
    5. '22' → logprob: -10.25064754486084
    6. '0' → logprob: -10.50064754486084
    7. '13' → logprob: -10.87564754486084
    8. '```' → logprob: -11.75064754486084
    9. '  ' → logprob: -12.12564754486084
    10. '21' → logprob: -13.00064754486084

Token 88: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03813627362251282
    2. '=' → logprob: -3.2881362438201904
    3. '=False' → logprob: -9.41313648223877
    4. ' ' → logprob: -12.16313648223877
    5. '=True' → logprob: -12.66313648223877
    6. '0' → logprob: -12.66313648223877
    7. 'False' → logprob: -14.03813648223877
    8. ' False' → logprob: -15.53813648223877
    9. '<|end|>' → logprob: -16.163135528564453
    10. '20' → logprob: -16.663135528564453

Token 89: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.10021993517875671
    2. 'False' → logprob: -2.350219964981079
    3. '=False' → logprob: -12.3502197265625
    4. ' True' → logprob: -12.4752197265625
    5. '(False' → logprob: -12.4752197265625
    6. ' ' → logprob: -13.9752197265625
    7. '.False' → logprob: -16.1002197265625
    8. 'True' → logprob: -16.1002197265625
    9. '_false' → logprob: -16.8502197265625
    10. '0' → logprob: -17.3502197265625

Token 90: '
' (ID: 198)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.5348039269447327
    2. ' False' → logprob: -0.9098039269447327
    3. '<|end|>' → logprob: -5.284803867340088
    4. ' True' → logprob: -6.159803867340088
    5. ' 
' → logprob: -6.534803867340088
    6. ' ' → logprob: -6.659803867340088
    7. '=False' → logprob: -7.034803867340088
    8. '(False' → logprob: -7.909803867340088
    9. 'True' → logprob: -8.034804344177246
    10. '=True' → logprob: -10.534804344177246

Token 91: 'ans' (ID: 616)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.05691107362508774
    2. 'ans' → logprob: -3.556910991668701
    3. 'False' → logprob: -4.056910991668701
    4. ' False' → logprob: -4.806910991668701
    5. ' True' → logprob: -7.431910991668701
    6. 'True' → logprob: -8.55691146850586
    7. ' ' → logprob: -8.68191146850586
    8. '(ans' → logprob: -9.43191146850586
    9. '_ans' → logprob: -9.55691146850586
    10. '	ans' → logprob: -9.80691146850586

Token 92: '21' (ID: 2040)
  Prédit: '21'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '21' → logprob: -0.09049728512763977
    2. '22' → logprob: -3.0904972553253174
    3. '20' → logprob: -3.3404972553253174
    4. '12' → logprob: -5.3404974937438965
    5. '```' → logprob: -8.840497016906738
    6. '2' → logprob: -8.965497016906738
    7. '<|end|>' → logprob: -8.965497016906738
    8. '=' → logprob: -9.340497016906738
    9. '  ' → logprob: -9.590497016906738
    10. '   ' → logprob: -10.090497016906738

Token 93: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02977108582854271
    2. '=' → logprob: -3.529771089553833
    3. '=False' → logprob: -11.654770851135254
    4. ' ' → logprob: -12.279770851135254
    5. '=True' → logprob: -12.279770851135254
    6. ' =
' → logprob: -14.154770851135254
    7. '<|end|>' → logprob: -14.154770851135254
    8. ' =)' → logprob: -15.404770851135254
    9. ')' → logprob: -16.27977180480957
    10. '```' → logprob: -16.40477180480957

Token 94: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.16023540496826172
    2. 'False' → logprob: -1.9102354049682617
    3. ' True' → logprob: -11.660235404968262
    4. '(False' → logprob: -13.410235404968262
    5. '=False' → logprob: -14.535235404968262
    6. 'True' → logprob: -14.660235404968262
    7. ' ' → logprob: -16.410236358642578
    8. '.False' → logprob: -16.535236358642578
    9. '0' → logprob: -18.035236358642578
    10. ' ' → logprob: -18.660236358642578

Token 95: '
' (ID: 198)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.2520560324192047
    2. ' False' → logprob: -1.5020560026168823
    3. '=False' → logprob: -10.002056121826172
    4. ' =' → logprob: -10.752056121826172
    5. ' True' → logprob: -10.752056121826172
    6. 'True' → logprob: -10.877056121826172
    7. ' 
' → logprob: -11.752056121826172
    8. ' ' → logprob: -12.127056121826172
    9. '(False' → logprob: -12.627056121826172
    10. '=' → logprob: -13.752056121826172

Token 96: 'ans' (ID: 616)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.02975187823176384
    2. ' False' → logprob: -3.529751777648926
    3. 'True' → logprob: -13.654751777648926
    4. ' True' → logprob: -16.154752731323242
    5. '(False' → logprob: -16.529752731323242
    6. 'ans' → logprob: -16.779752731323242
    7. '=False' → logprob: -16.904752731323242
    8. ' ans' → logprob: -18.154752731323242
    9. 'false' → logprob: -18.779752731323242
    10. '_false' → logprob: -19.154752731323242

Token 97: '22' (ID: 1709)
  Prédit: '22'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '22' → logprob: -2.117345684382599e-05
    2. '<|end|>' → logprob: -11.500020980834961
    3. '2' → logprob: -12.000020980834961
    4. '[' → logprob: -13.875020980834961
    5. '_' → logprob: -14.000020980834961
    6. '02' → logprob: -14.125020980834961
    7. '  ' → logprob: -14.125020980834961
    8. ' ' → logprob: -14.250020980834961
    9. '.' → logprob: -16.12502098083496
    10. '   ' → logprob: -16.25002098083496

Token 98: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0486002042889595
    2. '=' → logprob: -3.048600196838379
    3. '=False' → logprob: -11.423600196838379
    4. '=True' → logprob: -13.548600196838379
    5. ' ' → logprob: -15.423600196838379
    6. 'False' → logprob: -16.048601150512695
    7. ' =)' → logprob: -17.173601150512695
    8. ' False' → logprob: -17.298601150512695
    9. ' =
' → logprob: -17.298601150512695
    10. ')' → logprob: -17.298601150512695

Token 99: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.20143350958824158
    2. 'False' → logprob: -1.701433539390564
    3. ' True' → logprob: -10.951433181762695
    4. '(False' → logprob: -13.451433181762695
    5. 'True' → logprob: -14.076433181762695
    6. '=False' → logprob: -15.326433181762695
    7. ' ' → logprob: -15.701433181762695
    8. '0' → logprob: -17.076433181762695
    9. '.False' → logprob: -17.451433181762695
    10. ' ' → logprob: -17.826433181762695

Token 100: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.015054922550916672
    2. ' for' → logprob: -4.265054702758789
    3. 'i' → logprob: -7.765054702758789
    4. 'if' → logprob: -8.390054702758789
    5. '
' → logprob: -9.515054702758789
    6. '\n' → logprob: -9.640054702758789
    7. 'while' → logprob: -10.890054702758789
    8. '```' → logprob: -11.265054702758789
    9. '\' → logprob: -11.515054702758789
    10. 'A' → logprob: -11.765054702758789

Token 101: 'if' (ID: 366)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01130363903939724
    2. ' for' → logprob: -4.886303424835205
    3. 'i' → logprob: -5.761303424835205
    4. '
' → logprob: -8.636303901672363
    5. 'if' → logprob: -8.761303901672363
    6. 'f' → logprob: -10.261303901672363
    7. ' 
' → logprob: -10.511303901672363
    8. 'n' → logprob: -10.761303901672363
    9. '\n' → logprob: -10.886303901672363
    10. 'A' → logprob: -11.261303901672363

Token 102: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.08197949826717377
    2. 'A' → logprob: -3.206979513168335
    3. ' (' → logprob: -3.831979513168335
    4. '(' → logprob: -5.331979274749756
    5. ' ' → logprob: -5.706979274749756
    6. ' b' → logprob: -5.706979274749756
    7. '(A' → logprob: -6.081979274749756
    8. ' len' → logprob: -7.081979274749756
    9. 'b' → logprob: -7.706979274749756
    10. ' not' → logprob: -7.831979274749756

Token 103: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.35706390615087e-05
    2. '[' → logprob: -11.000033378601074
    3. '00' → logprob: -11.125033378601074
    4. ' ' → logprob: -14.375033378601074
    5. '```' → logprob: -14.687533378601074
    6. 'A' → logprob: -14.937533378601074
    7. ' [' → logprob: -16.00003433227539
    8. '1' → logprob: -16.43753433227539
    9. '_' → logprob: -16.68753433227539
    10. '2' → logprob: -16.68753433227539

Token 104: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007958084461279213
    2. '==' → logprob: -8.000795364379883
    3. ' [' → logprob: -8.375795364379883
    4. ' ==' → logprob: -8.500795364379883
    5. '0' → logprob: -11.875795364379883
    6. ':' → logprob: -12.625795364379883
    7. '>' → logprob: -12.875795364379883
    8. '!=' → logprob: -13.125795364379883
    9. ' !=' → logprob: -13.250795364379883
    10. '[-' → logprob: -13.375795364379883

Token 105: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003646518336609006
    2. ' ' → logprob: -5.628646373748779
    3. '1' → logprob: -11.128646850585938
    4. ']' → logprob: -11.253646850585938
    5. '[' → logprob: -11.878646850585938
    6. '2' → logprob: -12.253646850585938
    7. '][' → logprob: -13.066146850585938
    8. '   ' → logprob: -14.128646850585938
    9. '3' → logprob: -14.378646850585938
    10. ']==' → logprob: -14.691146850585938

Token 106: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.14341935515403748
    2. '==' → logprob: -2.2684192657470703
    3. ' >' → logprob: -4.26841926574707
    4. ')' → logprob: -5.39341926574707
    5. ' <=' → logprob: -5.39341926574707
    6. ' )' → logprob: -6.39341926574707
    7. '>' → logprob: -6.51841926574707
    8. ' >=' → logprob: -6.76841926574707
    9. ' !=' → logprob: -6.89341926574707
    10. ' <' → logprob: -7.64341926574707

Token 107: ' in' (ID: 306)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4743182957172394
    2. '==' → logprob: -0.974318265914917
    3. '>' → logprob: -10.099318504333496
    4. ' !=' → logprob: -10.099318504333496
    5. '!=' → logprob: -10.349318504333496
    6. ' ' → logprob: -10.474318504333496
    7. ' >' → logprob: -10.724318504333496
    8. '=' → logprob: -11.224318504333496
    9. '<=' → logprob: -11.224318504333496
    10. ' <=' → logprob: -11.474318504333496

Token 108: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5257108211517334
    2. 'b' → logprob: -0.9007108211517334
    3. ' A' → logprob: -6.6507110595703125
    4. 'A' → logprob: -7.4007110595703125
    5. ' [' → logprob: -8.525711059570312
    6. ' ' → logprob: -8.650711059570312
    7. '[' → logprob: -9.025711059570312
    8. '[b' → logprob: -9.400711059570312
    9. '{' → logprob: -10.400711059570312
    10. ' {' → logprob: -10.900711059570312

Token 109: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.026245728135108948
    2. 'and' → logprob: -4.151245594024658
    3. ':' → logprob: -4.651245594024658
    4. ' or' → logprob: -8.276246070861816
    5. ' ' → logprob: -8.651246070861816
    6. ' :' → logprob: -8.776246070861816
    7. 'or' → logprob: -11.901246070861816
    8. ')' → logprob: -12.151246070861816
    9. ',' → logprob: -12.776246070861816
    10. ':
' → logprob: -13.276246070861816

Token 110: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4421390891075134
    2. ' and' → logprob: -1.0671391487121582
    3. ':' → logprob: -4.942139148712158
    4. ' ans' → logprob: -5.817139148712158
    5. 'and' → logprob: -6.317139148712158
    6. ' :' → logprob: -7.942139148712158
    7. ' True' → logprob: -8.067138671875
    8. ' or' → logprob: -8.692138671875
    9. ' ' → logprob: -8.817138671875
    10. ':
' → logprob: -9.317138671875

Token 111: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.11292814463376999
    2. 'ans' (adapté à ' ans') → logprob: -2.2379281520843506
    3. '   ' → logprob: -9.86292839050293
    4. ' if' → logprob: -10.86292839050293
    5. '	ans' → logprob: -11.48792839050293
    6. ' ' → logprob: -11.86292839050293
    7. '(ans' → logprob: -12.61292839050293
    8. 'if' → logprob: -12.61292839050293
    9. '_ans' → logprob: -13.36292839050293
    10. '    ' → logprob: -13.61292839050293

Token 112: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -1.9361264946837764e-07
    2. '0' → logprob: -17.125
    3. '10' → logprob: -17.375
    4. '02' → logprob: -19.0
    5. '01' → logprob: -19.0
    6. '20' → logprob: -19.125
    7. '```' → logprob: -21.75
    8. '000' → logprob: -21.875
    9. '``' → logprob: -22.625
    10. '`' → logprob: -22.875

Token 113: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132791221141815
    2. '=' → logprob: -1.313279151916504
    3. '=True' → logprob: -11.438279151916504
    4. ' ' → logprob: -11.938279151916504
    5. ' |=' → logprob: -17.688278198242188
    6. ' =)' → logprob: -17.813278198242188
    7. 'True' → logprob: -18.188278198242188
    8. ' True' → logprob: -18.313278198242188
    9. '＝' → logprob: -18.438278198242188
    10. ')' → logprob: -18.688278198242188

Token 114: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.01416350994259119
    2. ' True' → logprob: -4.264163494110107
    3. '(True' → logprob: -18.014163970947266
    4. '   ' → logprob: -18.514163970947266
    5. '=True' → logprob: -18.764163970947266
    6. 'Tr' → logprob: -18.764163970947266
    7. ' ' → logprob: -20.264163970947266
    8. 'T' → logprob: -20.639163970947266
    9. '1' → logprob: -20.889163970947266
    10. 'False' → logprob: -21.014163970947266

Token 115: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5294739007949829
    2. 'if' → logprob: -0.9044739007949829
    3. ' if' → logprob: -5.904473781585693
    4. '\n' → logprob: -5.904473781585693
    5. ' 
' → logprob: -7.779473781585693
    6. 'elif' → logprob: -9.529474258422852
    7. '' → logprob: -9.654474258422852
    8. '    
' → logprob: -9.654474258422852
    9. '  
' → logprob: -9.779474258422852
    10. '
' → logprob: -10.279474258422852

Token 116: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.004698784090578556
    2. ' if' → logprob: -5.379698753356934
    3. '<|end|>' → logprob: -10.129698753356934
    4. ' 
' → logprob: -11.754698753356934
    5. '
' → logprob: -11.754698753356934
    6. ' ' → logprob: -11.879698753356934
    7. 'elif' → logprob: -12.004698753356934
    8. 'i' → logprob: -13.254698753356934
    9. ')' → logprob: -13.504698753356934
    10. 'If' → logprob: -13.504698753356934

Token 117: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.011062094010412693
    2. 'A' → logprob: -4.511062145233154
    3. ' ' → logprob: -11.261061668395996
    4. ' ' → logprob: -14.886061668395996
    5. '  ' → logprob: -15.386061668395996
    6. '(A' → logprob: -15.386061668395996
    7. '	A' → logprob: -15.386061668395996
    8. '    ' → logprob: -16.136062622070312
    9. '   ' → logprob: -16.136062622070312
    10. 'b' → logprob: -16.511062622070312

Token 118: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.779520092299208e-05
    2. '[' → logprob: -9.500078201293945
    3. '1' → logprob: -13.000078201293945
    4. ' ' → logprob: -14.875078201293945
    5. 'A' → logprob: -16.500078201293945
    6. 'user' → logprob: -16.625078201293945
    7. '```' → logprob: -16.750078201293945
    8. '2' → logprob: -17.625078201293945
    9. '(' → logprob: -18.000078201293945
    10. '   ' → logprob: -18.062578201293945

Token 119: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.4868770196917467e-05
    2. ' [' → logprob: -10.625024795532227
    3. '```' → logprob: -16.375024795532227
    4. '\[' → logprob: -16.500024795532227
    5. '[
' → logprob: -16.750024795532227
    6. '.' → logprob: -17.250024795532227
    7. '`' → logprob: -17.375024795532227
    8. '1' → logprob: -17.375024795532227
    9. 'space' → logprob: -18.312524795532227
    10. ''[' → logprob: -18.312524795532227

Token 120: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010404328349977732
    2. ' ' → logprob: -6.876040458679199
    3. '0' → logprob: -12.7510404586792
    4. '[' → logprob: -13.0010404586792
    5. '2' → logprob: -13.8760404586792
    6. '   ' → logprob: -14.7510404586792
    7. '```' → logprob: -15.1885404586792
    8. ')' → logprob: -16.001039505004883
    9. 'space' → logprob: -16.376039505004883
    10. ' [' → logprob: -16.376039505004883

Token 121: ']' (ID: 60)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008229675702750683
    2. ']' → logprob: -5.633229732513428
    3. ')' → logprob: -5.758229732513428
    4. ' ]' → logprob: -7.133229732513428
    5. 'in' → logprob: -8.13322925567627
    6. ' ' → logprob: -8.50822925567627
    7. ' )' → logprob: -9.13322925567627
    8. '<|end|>' → logprob: -10.25822925567627
    9. '}' → logprob: -11.88322925567627
    10. '`' → logprob: -12.38322925567627

Token 122: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0019418458687141538
    2. 'in' → logprob: -6.251941680908203
    3. ' ' → logprob: -11.376941680908203
    4. ' ' → logprob: -13.501941680908203
    5. ')' → logprob: -16.001941680908203
    6. '<|end|>' → logprob: -16.251941680908203
    7. 'n' → logprob: -17.501941680908203
    8. 'In' → logprob: -18.001941680908203
    9. '	in' → logprob: -18.376941680908203
    10. ' i' → logprob: -18.501941680908203

Token 123: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.04858759790658951
    2. 'b' → logprob: -3.0485875606536865
    3. ' ' → logprob: -16.173587799072266
    4. ' ' → logprob: -16.423587799072266
    5. ' б' → logprob: -18.298587799072266
    6. '	b' → logprob: -19.048587799072266
    7. '_b' → logprob: -19.798587799072266
    8. '`' → logprob: -20.298587799072266
    9. '(b' → logprob: -20.298587799072266
    10. '```' → logprob: -20.298587799072266

Token 124: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007224413566291332
    2. '   ' → logprob: -8.000722885131836
    3. ':
' → logprob: -8.000722885131836
    4. '<|end|>' → logprob: -11.125722885131836
    5. ')' → logprob: -11.375722885131836
    6. ' :' → logprob: -12.000722885131836
    7. '):' → logprob: -12.375722885131836
    8. '=' → logprob: -12.625722885131836
    9. ' and' → logprob: -13.250722885131836
    10. ' ' → logprob: -13.500722885131836

Token 125: '   ' (ID: 271)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.25277435779571533
    2. 'True' → logprob: -1.5027743577957153
    3. '   ' → logprob: -7.127774238586426
    4. '(True' → logprob: -11.002774238586426
    5. '    ' → logprob: -11.502774238586426
    6. ' ' → logprob: -11.627774238586426
    7. '=True' → logprob: -12.377774238586426
    8. '1' → logprob: -14.502774238586426
    9. '  ' → logprob: -14.752774238586426
    10. ' ' → logprob: -15.377774238586426

Token 126: ' ans' (ID: 3345)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.31571802496910095
    2. 'True' → logprob: -1.3157180547714233
    3. ' ans' → logprob: -6.065718173980713
    4. 'ans' (adapté à ' ans') → logprob: -8.940717697143555
    5. '=True' → logprob: -14.565717697143555
    6. '   ' → logprob: -15.815717697143555
    7. 'true' → logprob: -16.065717697143555
    8. ' ' → logprob: -16.065717697143555
    9. ' true' → logprob: -16.190717697143555
    10. '(True' → logprob: -16.565717697143555

Token 127: '01' (ID: 2290)
  Prédit: '01'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '01' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.875001907348633
    3. '10' → logprob: -13.875001907348633
    4. '0' → logprob: -15.875001907348633
    5. '00' → logprob: -16.250001907348633
    6. '  ' → logprob: -17.125001907348633
    7. '1' → logprob: -18.000001907348633
    8. '   ' → logprob: -18.500001907348633
    9. '[' → logprob: -19.250001907348633
    10. '`' → logprob: -19.375001907348633

Token 128: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020817816257477
    2. '=' → logprob: -2.350208282470703
    3. '=True' → logprob: -13.600208282470703
    4. ' ' → logprob: -15.225208282470703
    5. ' ' → logprob: -17.475208282470703
    6. ' =
' → logprob: -17.975208282470703
    7. ')' → logprob: -18.225208282470703
    8. 'True' → logprob: -18.600208282470703
    9. '_' → logprob: -19.350208282470703
    10. '   ' → logprob: -19.475208282470703

Token 129: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.20141343772411346
    2. 'True' → logprob: -1.7014133930206299
    3. '(True' → logprob: -16.076414108276367
    4. '=True' → logprob: -17.201414108276367
    5. ' Tru' → logprob: -18.951414108276367
    6. ' ' → logprob: -19.076414108276367
    7. '.True' → logprob: -19.951414108276367
    8. ' ' → logprob: -20.326414108276367
    9. 'T' → logprob: -20.826414108276367
    10. 'Tr' → logprob: -21.326414108276367

Token 130: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0007419686880894005
    2. '
' → logprob: -7.250741958618164
    3. ' if' → logprob: -10.500741958618164
    4. '  
' → logprob: -13.125741958618164
    5. ' 
' → logprob: -13.875741958618164
    6. '\
' → logprob: -15.000741958618164
    7. 'If' → logprob: -15.000741958618164
    8. '    
' → logprob: -15.250741958618164
    9. '```' → logprob: -15.250741958618164
    10. '   ' → logprob: -16.500741958618164

Token 131: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00041172682540491223
    2. ' if' → logprob: -8.125411987304688
    3. '
' → logprob: -9.375411987304688
    4. ' 
' → logprob: -11.000411987304688
    5. '  
' → logprob: -11.500411987304688
    6. '\
' → logprob: -13.625411987304688
    7. 'If' → logprob: -14.000411987304688
    8. '    
' → logprob: -14.125411987304688
    9. '\n' → logprob: -14.500411987304688
    10. '```' → logprob: -15.375411987304688

Token 132: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.0015034328680485487
    2. 'A' → logprob: -6.5015034675598145
    3. ' ' → logprob: -13.751502990722656
    4. '(A' → logprob: -17.376502990722656
    5. ' ' → logprob: -17.501502990722656
    6. '	A' → logprob: -19.376502990722656
    7. '    ' → logprob: -19.626502990722656
    8. '   ' → logprob: -20.001502990722656
    9. '  ' → logprob: -20.376502990722656
    10. ' (' → logprob: -20.376502990722656

Token 133: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001024235738441348
    2. '[' → logprob: -7.00102424621582
    3. '2' → logprob: -9.12602424621582
    4. ' ' → logprob: -12.75102424621582
    5. '   ' → logprob: -14.50102424621582
    6. '```' → logprob: -15.62602424621582
    7. '  ' → logprob: -16.37602424621582
    8. ' [' → logprob: -16.62602424621582
    9. '    ' → logprob: -17.12602424621582
    10. '02' → logprob: -17.12602424621582

Token 134: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.088346359931165e-07
    2. ' [' → logprob: -14.500000953674316
    3. '[
' → logprob: -15.875000953674316
    4. '][' → logprob: -16.375
    5. '2' → logprob: -16.875
    6. '```' → logprob: -17.125
    7. '   ' → logprob: -17.625
    8. '\[' → logprob: -18.125
    9. ')[' → logprob: -19.25
    10. ']' → logprob: -19.375

Token 135: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.41866585687967e-06
    2. ' ' → logprob: -12.125008583068848
    3. '[' → logprob: -13.000008583068848
    4. '```' → logprob: -15.812508583068848
    5. '   ' → logprob: -15.937508583068848
    6. '۲' → logprob: -16.43750762939453
    7. '２' → logprob: -16.81250762939453
    8. '  ' → logprob: -16.87500762939453
    9. '
' → logprob: -17.43750762939453
    10. ']' → logprob: -17.56250762939453

Token 136: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4839060306549072
    2. ' in' → logprob: -0.9839060306549072
    3. ' ]' → logprob: -5.233905792236328
    4. 'in' → logprob: -5.858905792236328
    5. ')' → logprob: -6.983905792236328
    6. '<|end|>' → logprob: -8.108905792236328
    7. ' ' → logprob: -8.733905792236328
    8. '}' → logprob: -9.483905792236328
    9. 'In' → logprob: -9.983905792236328
    10. ' )' → logprob: -11.358905792236328

Token 137: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0076203495264053345
    2. 'in' → logprob: -4.882620334625244
    3. ' ' → logprob: -11.507620811462402
    4. ' ' → logprob: -13.132620811462402
    5. ')' → logprob: -13.632620811462402
    6. 'In' → logprob: -15.382620811462402
    7. '<|end|>' → logprob: -15.507620811462402
    8. '```' → logprob: -15.882620811462402
    9. ']' → logprob: -16.507619857788086
    10. '`' → logprob: -16.507619857788086

Token 138: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.026301225647330284
    2. 'b' → logprob: -3.651301145553589
    3. ' ' → logprob: -14.151301383972168
    4. ' ' → logprob: -15.526301383972168
    5. '	b' → logprob: -17.27630043029785
    6. '```' → logprob: -17.52630043029785
    7. ' б' → logprob: -17.77630043029785
    8. 's' → logprob: -18.40130043029785
    9. '[b' → logprob: -18.77630043029785
    10. ')b' → logprob: -19.02630043029785

Token 139: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00018399098189547658
    2. ':
' → logprob: -8.625184059143066
    3. '   ' → logprob: -13.375184059143066
    4. '):' → logprob: -13.875184059143066
    5. ':

' → logprob: -14.375184059143066
    6. ':
' → logprob: -14.500184059143066
    7. ' :' → logprob: -14.750184059143066
    8. '=' → logprob: -15.875184059143066
    9. '[' → logprob: -16.75018310546875
    10. '==' → logprob: -16.87518310546875

Token 140: '   ' (ID: 271)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.06245362386107445
    2. 'True' → logprob: -2.812453508377075
    3. '   ' → logprob: -7.687453746795654
    4. '=True' → logprob: -11.062453269958496
    5. ' ans' → logprob: -12.187453269958496
    6. ' =' → logprob: -12.562453269958496
    7. '    ' → logprob: -13.562453269958496
    8. ' ' → logprob: -14.312453269958496
    9. 'ans' → logprob: -14.562453269958496
    10. '=' → logprob: -15.187453269958496

Token 141: ' ans' (ID: 3345)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.1269282102584839
    2. ' True' → logprob: -2.1269283294677734
    3. '=True' → logprob: -16.751928329467773
    4. '(True' → logprob: -17.751928329467773
    5. 'ans' (adapté à ' ans') → logprob: -18.376928329467773
    6. 'Tr' → logprob: -18.501928329467773
    7. ' ans' → logprob: -19.126928329467773
    8. 'true' → logprob: -19.126928329467773
    9. ' Tru' → logprob: -19.376928329467773
    10. 'b' → logprob: -19.751928329467773

Token 142: '02' (ID: 3286)
  Prédit: '02'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '02' → logprob: -1.282920129597187e-05
    2. '12' → logprob: -11.375012397766113
    3. '2' → logprob: -13.875012397766113
    4. ' ' → logprob: -16.25001335144043
    5. '```' → logprob: -16.25001335144043
    6. '[' → logprob: -17.00001335144043
    7. '   ' → logprob: -17.50001335144043
    8. 'True' → logprob: -17.87501335144043
    9. '  ' → logprob: -18.50001335144043
    10. 'False' → logprob: -18.62501335144043

Token 143: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692883610725403
    2. ' =' → logprob: -2.1269288063049316
    3. '=True' → logprob: -14.12692928314209
    4. '   ' → logprob: -17.626928329467773
    5. '==' → logprob: -17.876928329467773
    6. ' ' → logprob: -18.001928329467773
    7. ')' → logprob: -18.251928329467773
    8. '＝' → logprob: -18.626928329467773
    9. '=

' → logprob: -18.876928329467773
    10. ':' → logprob: -19.001928329467773

Token 144: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.3132617771625519
    2. 'True' → logprob: -1.3132617473602295
    3. '(True' → logprob: -17.688261032104492
    4. '=True' → logprob: -17.813261032104492
    5. ' ' → logprob: -19.813261032104492
    6. ' ' → logprob: -20.438261032104492
    7. '.True' → logprob: -20.438261032104492
    8. ' Tru' → logprob: -21.063261032104492
    9. 'False' → logprob: -21.188261032104492
    10. '_true' → logprob: -22.938261032104492

Token 145: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4742809236049652
    2. '
' → logprob: -0.9742809534072876
    3. ' if' → logprob: -9.224281311035156
    4. '```' → logprob: -10.224281311035156
    5. '\n' → logprob: -10.724281311035156
    6. '  
' → logprob: -11.224281311035156
    7. '    
' → logprob: -11.224281311035156
    8. '
' → logprob: -11.599281311035156
    9. ' 
' → logprob: -12.349281311035156
    10. '\
' → logprob: -13.474281311035156

Token 146: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0031860284507274628
    2. '
' → logprob: -5.753186225891113
    3. ' if' → logprob: -12.128186225891113
    4. '\n' → logprob: -13.753186225891113
    5. '```' → logprob: -13.878186225891113
    6. '\
' → logprob: -15.503186225891113
    7. '
' → logprob: -16.003185272216797
    8. '  
' → logprob: -16.003185272216797
    9. 'If' → logprob: -16.128185272216797
    10. ' 
' → logprob: -16.253185272216797

Token 147: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.0028061794582754374
    2. 'A' → logprob: -5.877806186676025
    3. ' ' → logprob: -13.627805709838867
    4. ' ' → logprob: -16.252805709838867
    5. '(A' → logprob: -18.002805709838867
    6. '	A' → logprob: -18.127805709838867
    7. ' a' → logprob: -18.815305709838867
    8. ' not' → logprob: -18.815305709838867
    9. ' (' → logprob: -19.002805709838867
    10. '```' → logprob: -19.127805709838867

Token 148: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3425219549390022e-05
    2. '0' → logprob: -11.37501335144043
    3. '[' → logprob: -13.62501335144043
    4. ' ' → logprob: -15.75001335144043
    5. '2' → logprob: -16.06251335144043
    6. '10' → logprob: -16.81251335144043
    7. '```' → logprob: -17.12501335144043
    8. '
' → logprob: -17.62501335144043
    9. 'A' → logprob: -17.68751335144043
    10. 'user' → logprob: -18.12501335144043

Token 149: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.7697225252486533e-06
    2. ' [' → logprob: -13.000003814697266
    3. '0' → logprob: -13.875003814697266
    4. '```' → logprob: -16.625003814697266
    5. '[
' → logprob: -17.125003814697266
    6. '#' → logprob: -17.250003814697266
    7. 'if' → logprob: -17.250003814697266
    8. '][' → logprob: -17.812503814697266
    9. 'a' → logprob: -17.875003814697266
    10. ' ' → logprob: -17.875003814697266

Token 150: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.309382373117842e-05
    2. ' ' → logprob: -10.750033378601074
    3. '[' → logprob: -11.375033378601074
    4. '   ' → logprob: -17.500032424926758
    5. '(' → logprob: -17.937532424926758
    6. '<|end|>' → logprob: -18.125032424926758
    7. '00' → logprob: -18.687532424926758
    8. '  ' → logprob: -18.937532424926758
    9. '#' → logprob: -19.062532424926758
    10. ' [' → logprob: -19.312532424926758

Token 151: ']' (ID: 60)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07957423478364944
    2. ']' → logprob: -2.7045743465423584
    3. ')' → logprob: -5.329574108123779
    4. 'in' → logprob: -5.454574108123779
    5. ' ]' → logprob: -8.329574584960938
    6. ' ' → logprob: -8.579574584960938
    7. ' )' → logprob: -11.454574584960938
    8. '}' → logprob: -11.954574584960938
    9. '[' → logprob: -11.954574584960938
    10. ' ' → logprob: -12.329574584960938

Token 152: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007607220206409693
    2. 'in' → logprob: -4.8826069831848145
    3. ' ' → logprob: -14.132607460021973
    4. ' ' → logprob: -15.132607460021973
    5. ')' → logprob: -17.382606506347656
    6. 'n' → logprob: -17.632606506347656
    7. '	in' → logprob: -18.132606506347656
    8. '`' → logprob: -18.382606506347656
    9. 'In' → logprob: -18.882606506347656
    10. 'int' → logprob: -19.007606506347656

Token 153: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.06196768581867218
    2. 'b' → logprob: -2.811967611312866
    3. ' ' → logprob: -16.811967849731445
    4. ' ' → logprob: -17.561967849731445
    5. '	b' → logprob: -18.936967849731445
    6. ' б' → logprob: -19.311967849731445
    7. 's' → logprob: -19.936967849731445
    8. ')b' → logprob: -20.186967849731445
    9. '```' → logprob: -20.311967849731445
    10. '_b' → logprob: -20.686967849731445

Token 154: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001945533906109631
    2. ':
' → logprob: -6.251945495605469
    3. '   ' → logprob: -11.751945495605469
    4. ' :' → logprob: -12.126945495605469
    5. '):' → logprob: -13.626945495605469
    6. ':

' → logprob: -13.751945495605469
    7. '=' → logprob: -14.876945495605469
    8. ':
' → logprob: -15.126945495605469
    9. ' :
' → logprob: -15.251945495605469
    10. '):
' → logprob: -15.876945495605469

Token 155: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013885627500712872
    2. ' ans' → logprob: -4.388885498046875
    3. 'ans' → logprob: -6.638885498046875
    4. '=' → logprob: -10.638885498046875
    5. ':' → logprob: -11.263885498046875
    6. ' =' → logprob: -11.763885498046875
    7. '	ans' → logprob: -12.013885498046875
    8. '   ' → logprob: -12.638885498046875
    9. '(ans' → logprob: -13.263885498046875
    10. 'Ans' → logprob: -13.388885498046875

Token 156: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.5369794368743896
    2. ' True' → logprob: -1.5369794368743896
    3. 'True' → logprob: -1.7869794368743896
    4. 'ans' (adapté à ' ans') → logprob: -3.4119794368743896
    5. '=True' → logprob: -11.661979675292969
    6. '   ' → logprob: -12.411979675292969
    7. '(ans' → logprob: -13.536979675292969
    8. '	ans' → logprob: -13.661979675292969
    9. 'Ans' → logprob: -14.286979675292969
    10. 'true' → logprob: -14.786979675292969

Token 157: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.9361264946837764e-07
    2. '

' → logprob: -17.0
    3. '```' → logprob: -17.25
    4. '
' → logprob: -17.75
    5. '   ' → logprob: -17.875
    6. '1' → logprob: -18.625
    7. '``' → logprob: -18.875
    8. '  ' → logprob: -19.375
    9. '`' → logprob: -19.375
    10. '۱۰' → logprob: -19.625

Token 158: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20142298936843872
    2. ' =' → logprob: -1.701422929763794
    3. '=True' → logprob: -11.576422691345215
    4. ' ' → logprob: -16.07642364501953
    5. ')' → logprob: -16.70142364501953
    6. '   ' → logprob: -17.20142364501953
    7. '=

' → logprob: -17.20142364501953
    8. 'True' → logprob: -17.82642364501953
    9. '=False' → logprob: -17.95142364501953
    10. ' =
' → logprob: -17.95142364501953

Token 159: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.3132616877555847
    2. ' True' → logprob: -1.3132617473602295
    3. '=True' → logprob: -17.438261032104492
    4. '(True' → logprob: -17.813261032104492
    5. '.True' → logprob: -20.688261032104492
    6. ' Tru' → logprob: -20.688261032104492
    7. ' ' → logprob: -20.813261032104492
    8. 'T' → logprob: -20.938261032104492
    9. 'Tr' → logprob: -21.563261032104492
    10. 'False' → logprob: -22.313261032104492

Token 160: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06378072500228882
    2. ' if' → logprob: -3.0637807846069336
    3. ' 
' → logprob: -4.313780784606934
    4. '
' → logprob: -6.563780784606934
    5. '  
' → logprob: -8.688780784606934
    6. '<|end|>' → logprob: -9.938780784606934
    7. '```' → logprob: -10.188780784606934
    8. '    
' → logprob: -11.313780784606934
    9. 'If' → logprob: -11.938780784606934
    10. '   
' → logprob: -12.438780784606934

Token 161: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -3.547789674485102e-05
    2. ' if' → logprob: -10.250035285949707
    3. '
' → logprob: -16.625036239624023
    4. ' 
' → logprob: -18.375036239624023
    5. '```' → logprob: -18.875036239624023
    6. 'If' → logprob: -19.500036239624023
    7. 'ifs' → logprob: -20.875036239624023
    8. '  
' → logprob: -21.250036239624023
    9. '``' → logprob: -21.500036239624023
    10. '\
' → logprob: -22.125036239624023

Token 162: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.04858816787600517
    2. 'A' → logprob: -3.048588275909424
    3. ' ' → logprob: -14.298587799072266
    4. '   ' → logprob: -16.423587799072266
    5. ' ' → logprob: -17.298587799072266
    6. '    ' → logprob: -17.423587799072266
    7. 's' → logprob: -17.423587799072266
    8. '(A' → logprob: -18.048587799072266
    9. '  ' → logprob: -18.298587799072266
    10. '	A' → logprob: -18.298587799072266

Token 163: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.625
    3. ' ' → logprob: -16.375
    4. '0' → logprob: -17.0
    5. 'user' → logprob: -17.75
    6. '   ' → logprob: -19.875
    7. '```' → logprob: -20.125
    8. 'User' → logprob: -20.9375
    9. 'A' → logprob: -21.0625
    10. '-' → logprob: -21.0625

Token 164: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0280383548888494e-06
    2. '1' → logprob: -14.625000953674316
    3. ' [' → logprob: -15.375000953674316
    4. '```' → logprob: -15.750000953674316
    5. '[
' → logprob: -16.750001907348633
    6. '.' → logprob: -17.750001907348633
    7. '][' → logprob: -17.875001907348633
    8. '(' → logprob: -18.375001907348633
    9. ')[' → logprob: -18.375001907348633
    10. '`' → logprob: -18.625001907348633

Token 165: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.742448022123426e-05
    2. '0' → logprob: -9.625067710876465
    3. '
' → logprob: -14.500067710876465
    4. '[' → logprob: -14.625067710876465
    5. '```' → logprob: -15.875067710876465
    6. '   ' → logprob: -16.68756675720215
    7. '(' → logprob: -17.12506675720215
    8. '

' → logprob: -17.12506675720215
    9. ' ' → logprob: -17.43756675720215
    10. '`' → logprob: -17.56256675720215

Token 166: ']' (ID: 60)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0007341049495153129
    2. 'in' → logprob: -7.375734329223633
    3. ')' → logprob: -9.750734329223633
    4. ']' → logprob: -10.250734329223633
    5. ' ' → logprob: -11.250734329223633
    6. ' ' → logprob: -15.375734329223633
    7. '}' → logprob: -16.000734329223633
    8. ' ]' → logprob: -16.250734329223633
    9. '`' → logprob: -16.375734329223633
    10. '   ' → logprob: -16.500734329223633

Token 167: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014165391214191914
    2. 'in' → logprob: -4.26416540145874
    3. ' ' → logprob: -13.389164924621582
    4. ' ' → logprob: -15.889164924621582
    5. 'In' → logprob: -17.1391658782959
    6. '	in' → logprob: -17.2641658782959
    7. 'b' → logprob: -17.3891658782959
    8. ')' → logprob: -17.6391658782959
    9. 'n' → logprob: -18.2641658782959
    10. ' is' → logprob: -18.3891658782959

Token 168: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.474077433347702
    2. ' b' → logprob: -0.9740774631500244
    3. ' ' → logprob: -15.599077224731445
    4. '	b' → logprob: -16.474077224731445
    5. ' ' → logprob: -17.099077224731445
    6. ' б' → logprob: -17.474077224731445
    7. ')b' → logprob: -17.474077224731445
    8. '_b' → logprob: -17.724077224731445
    9. '[b' → logprob: -17.974077224731445
    10. '>b' → logprob: -18.224077224731445

Token 169: ':
' (ID: 734)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1205962747335434
    2. 'in' → logprob: -2.370596170425415
    3. ':' → logprob: -4.370596408843994
    4. ' b' → logprob: -5.870596408843994
    5. '   ' → logprob: -5.995596408843994
    6. ')' → logprob: -6.370596408843994
    7. 'b' → logprob: -8.495595932006836
    8. ' ' → logprob: -8.995595932006836
    9. ':
' → logprob: -9.370595932006836
    10. ' a' → logprob: -11.120595932006836

Token 170: '   ' (ID: 271)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.4996618628501892
    2. 'True' → logprob: -1.249661922454834
    3. '   ' → logprob: -2.374661922454834
    4. ' ans' → logprob: -4.374661922454834
    5. 'ans' → logprob: -7.249661922454834
    6. ' in' → logprob: -8.999661445617676
    7. '=True' → logprob: -9.999661445617676
    8. '    ' → logprob: -10.124661445617676
    9. 'in' → logprob: -10.374661445617676
    10. ' ' → logprob: -10.624661445617676

Token 171: ' ans' (ID: 3345)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.559937059879303
    2. 'b' → logprob: -1.0599370002746582
    3. ' True' → logprob: -2.559937000274658
    4. ' b' → logprob: -5.309937000274658
    5. 'ans' (adapté à ' ans') → logprob: -11.559937477111816
    6. ' ans' → logprob: -12.059937477111816
    7. '(True' → logprob: -12.309937477111816
    8. '   ' → logprob: -13.059937477111816
    9. '=True' → logprob: -13.934937477111816
    10. ' ' → logprob: -14.309937477111816

Token 172: '11' (ID: 994)
  Prédit: '11'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: 0.0
    2. '1' → logprob: -19.125
    3. '[' → logprob: -19.75
    4. '=' → logprob: -20.125
    5. '011' → logprob: -20.75
    6. '   ' → logprob: -20.75
    7. '```' → logprob: -21.25
    8. '111' → logprob: -21.375
    9. '１１' → logprob: -21.5
    10. '११' → logprob: -21.75

Token 173: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740873873233795
    2. ' =' → logprob: -0.9740873575210571
    3. '=True' → logprob: -11.599087715148926
    4. ' ' → logprob: -14.974087715148926
    5. '   ' → logprob: -15.474087715148926
    6. '==' → logprob: -15.724087715148926
    7. ' =
' → logprob: -16.34908676147461
    8. 'True' → logprob: -16.34908676147461
    9. '=
' → logprob: -16.59908676147461
    10. ' True' → logprob: -16.59908676147461

Token 174: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.061967797577381134
    2. ' True' → logprob: -2.8119678497314453
    3. '(True' → logprob: -16.686967849731445
    4. '=True' → logprob: -17.686967849731445
    5. 'False' → logprob: -20.686967849731445
    6. 'b' → logprob: -21.061967849731445
    7. '.True' → logprob: -21.061967849731445
    8. ' ' → logprob: -21.061967849731445
    9. ' ' → logprob: -21.311967849731445
    10. 'true' → logprob: -21.811967849731445

Token 175: '
' (ID: 198)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.8254086971282959
    2. 'True' → logprob: -1.575408697128296
    3. 'if' → logprob: -2.075408697128296
    4. '=' → logprob: -2.325408697128296
    5. ' if' → logprob: -2.825408697128296
    6. ' =' → logprob: -2.950408697128296
    7. '=True' → logprob: -3.950408697128296
    8. '   ' → logprob: -7.325408935546875
    9. '=
' → logprob: -9.200408935546875
    10. '```' → logprob: -9.825408935546875

Token 176: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.26121166348457336
    2. ' if' → logprob: -1.511211633682251
    3. 'True' → logprob: -4.88621187210083
    4. ' True' → logprob: -6.38621187210083
    5. '=True' → logprob: -13.136211395263672
    6. 'If' → logprob: -13.511211395263672
    7. '```' → logprob: -14.511211395263672
    8. '
' → logprob: -15.261211395263672
    9. ' 
' → logprob: -15.636211395263672
    10. '   ' → logprob: -15.886211395263672

Token 177: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.023246292024850845
    2. 'A' → logprob: -3.7732462882995605
    3. ' ' → logprob: -14.148246765136719
    4. '(A' → logprob: -17.02324676513672
    5. 'b' → logprob: -17.52324676513672
    6. ' ' → logprob: -17.52324676513672
    7. '	A' → logprob: -17.52324676513672
    8. '   ' → logprob: -17.64824676513672
    9. ' b' → logprob: -18.14824676513672
    10. '[A' → logprob: -18.52324676513672

Token 178: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '2' → logprob: -16.875
    4. '[' → logprob: -17.0
    5. '   ' → logprob: -17.875
    6. '0' → logprob: -18.75
    7. '20' → logprob: -18.875
    8. '```' → logprob: -19.125
    9. '  ' → logprob: -19.75
    10. '    ' → logprob: -20.375

Token 179: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. ' [' → logprob: -15.625
    3. '   ' → logprob: -17.875
    4. '```' → logprob: -17.875
    5. '2' → logprob: -18.75
    6. '0' → logprob: -18.875
    7. '[
' → logprob: -19.0
    8. ' ' → logprob: -19.5
    9. '][' → logprob: -19.75
    10. 'if' → logprob: -19.875

Token 180: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.9875325708417222e-05
    2. '[' → logprob: -11.000029563903809
    3. '1' → logprob: -11.875029563903809
    4. '0' → logprob: -13.000029563903809
    5. ' ' → logprob: -13.125029563903809
    6. '```' → logprob: -13.875029563903809
    7. '   ' → logprob: -14.375029563903809
    8. '(' → logprob: -16.625030517578125
    9. ']' → logprob: -17.312530517578125
    10. '-' → logprob: -17.437530517578125

Token 181: ']' (ID: 60)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0016553020104765892
    2. 'in' → logprob: -6.501655101776123
    3. ')' → logprob: -9.501655578613281
    4. ' ' → logprob: -10.126655578613281
    5. ']' → logprob: -10.376655578613281
    6. ' if' → logprob: -13.126655578613281
    7. '   ' → logprob: -13.501655578613281
    8. '`' → logprob: -14.126655578613281
    9. '```' → logprob: -14.251655578613281
    10. 'if' → logprob: -14.626655578613281

Token 182: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020547958090901375
    2. 'in' → logprob: -3.895547866821289
    3. ' ' → logprob: -12.645547866821289
    4. ')' → logprob: -13.770547866821289
    5. '=' → logprob: -14.270547866821289
    6. ' if' → logprob: -15.270547866821289
    7. ' =' → logprob: -15.270547866821289
    8. 'if' → logprob: -15.645547866821289
    9. 'In' → logprob: -15.895547866821289
    10. '`' → logprob: -16.64554786682129

Token 183: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.474147230386734
    2. ' b' → logprob: -0.9741472005844116
    3. 'True' → logprob: -9.974146842956543
    4. ' True' → logprob: -10.724146842956543
    5. ' ' → logprob: -14.599146842956543
    6. ' ' → logprob: -15.224146842956543
    7. '	b' → logprob: -15.224146842956543
    8. ' in' → logprob: -16.22414779663086
    9. '[b' → logprob: -16.22414779663086
    10. '_b' → logprob: -16.84914779663086

Token 184: ':
' (ID: 734)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.055153634399175644
    2. 'in' → logprob: -2.9301536083221436
    3. '   ' → logprob: -8.430153846740723
    4. ' ' → logprob: -10.555153846740723
    5. ':' → logprob: -12.055153846740723
    6. '=' → logprob: -12.180153846740723
    7. ' if' → logprob: -12.430153846740723
    8. 'if' → logprob: -12.430153846740723
    9. 'b' → logprob: -13.680153846740723
    10. '[' → logprob: -13.930153846740723

Token 185: '   ' (ID: 271)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.6938748359680176
    2. ' True' → logprob: -0.6938748359680176
    3. '=' → logprob: -8.56887435913086
    4. '   ' → logprob: -8.56887435913086
    5. ' ans' → logprob: -8.81887435913086
    6. '=True' → logprob: -9.19387435913086
    7. ' =' → logprob: -9.81887435913086
    8. 'ans' → logprob: -10.19387435913086
    9. ' ' → logprob: -13.06887435913086
    10. '(True' → logprob: -13.56887435913086

Token 186: ' ans' (ID: 3345)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.10021228343248367
    2. ' True' → logprob: -2.350212335586548
    3. 'b' → logprob: -12.350212097167969
    4. ' b' → logprob: -14.600212097167969
    5. '(True' → logprob: -14.850212097167969
    6. 'ans' (adapté à ' ans') → logprob: -15.475212097167969
    7. ' in' → logprob: -16.10021209716797
    8. ' ans' → logprob: -16.47521209716797
    9. '=True' → logprob: -16.47521209716797
    10. 'in' → logprob: -16.60021209716797

Token 187: '12' (ID: 899)
  Prédit: '12'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -5.512236498361744e-07
    2. 'True' → logprob: -15.000000953674316
    3. '2' → logprob: -16.0
    4. '1' → logprob: -18.75
    5. '```' → logprob: -19.0
    6. '21' → logprob: -19.125
    7. '=True' → logprob: -19.25
    8. '[' → logprob: -19.5
    9. '۱۲' → logprob: -19.5
    10. '012' → logprob: -19.5

Token 188: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868730664253235
    2. '=' → logprob: -1.1368730068206787
    3. '=True' → logprob: -13.386873245239258
    4. ' ' → logprob: -14.886873245239258
    5. '   ' → logprob: -16.136873245239258
    6. ' ' → logprob: -17.886873245239258
    7. '==' → logprob: -18.261873245239258
    8. ' ==' → logprob: -18.386873245239258
    9. '[' → logprob: -18.386873245239258
    10. ')' → logprob: -18.511873245239258

Token 189: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.3132616877555847
    2. ' True' → logprob: -1.3132617473602295
    3. '(True' → logprob: -17.438261032104492
    4. '=True' → logprob: -17.813261032104492
    5. ' ' → logprob: -20.938261032104492
    6. ' ' → logprob: -21.063261032104492
    7. '.True' → logprob: -21.063261032104492
    8. 'T' → logprob: -21.813261032104492
    9. 'False' → logprob: -22.188261032104492
    10. '1' → logprob: -23.063261032104492

Token 190: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.7432603272027336e-06
    2. '```' → logprob: -13.625001907348633
    3. ' if' → logprob: -15.250001907348633
    4. '
' → logprob: -15.375001907348633
    5. '``' → logprob: -17.750001907348633
    6. 'If' → logprob: -19.500001907348633
    7. '#' → logprob: -21.125001907348633
    8. 'ifs' → logprob: -21.250001907348633
    9. 'for' → logprob: -21.375001907348633
    10. '\
' → logprob: -21.750001907348633

Token 191: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.5048530030981055e-06
    2. ' if' → logprob: -14.000001907348633
    3. '```' → logprob: -14.750001907348633
    4. '
' → logprob: -15.375001907348633
    5. 'If' → logprob: -18.250001907348633
    6. '``' → logprob: -20.125001907348633
    7. 'for' → logprob: -20.250001907348633
    8. 'ifs' → logprob: -21.000001907348633
    9. '#' → logprob: -21.500001907348633
    10. ';if' → logprob: -21.750001907348633

Token 192: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.07889000326395035
    2. 'A' → logprob: -2.578890085220337
    3. ' ' → logprob: -15.203889846801758
    4. '(A' → logprob: -17.203889846801758
    5. '   ' → logprob: -17.578889846801758
    6. '	A' → logprob: -17.578889846801758
    7. ' ' → logprob: -18.703889846801758
    8. ' a' → logprob: -18.828889846801758
    9. 'a' → logprob: -18.953889846801758
    10. '[A' → logprob: -19.141389846801758

Token 193: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.088346359931165e-07
    2. '20' → logprob: -14.125000953674316
    3. '[' → logprob: -16.125
    4. ' ' → logprob: -17.0
    5. '0' → logprob: -17.125
    6. '
' → logprob: -18.125
    7. '```' → logprob: -18.4375
    8. 'A' → logprob: -18.5
    9. '２' → logprob: -18.6875
    10. '   ' → logprob: -18.8125

Token 194: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.1008713702030946e-06
    2. '0' → logprob: -13.375001907348633
    3. ' [' → logprob: -15.000001907348633
    4. '[
' → logprob: -16.875001907348633
    5. '```' → logprob: -17.250001907348633
    6. ' ' → logprob: -18.000001907348633
    7. 'if' → logprob: -18.250001907348633
    8. '][' → logprob: -18.500001907348633
    9. '#' → logprob: -19.500001907348633
    10. '   ' → logprob: -19.625001907348633

Token 195: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.727905979962088e-05
    2. '[' → logprob: -10.00004768371582
    3. ' ' → logprob: -13.37504768371582
    4. '(' → logprob: -16.25004768371582
    5. '<|end|>' → logprob: -17.00004768371582
    6. '```' → logprob: -18.12504768371582
    7. '   ' → logprob: -18.37504768371582
    8. '2' → logprob: -18.50004768371582
    9. '۰' → logprob: -18.75004768371582
    10. '][' → logprob: -19.00004768371582

Token 196: ']' (ID: 60)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005802113097161055
    2. 'in' → logprob: -5.255802154541016
    3. ']' → logprob: -7.505802154541016
    4. ')' → logprob: -11.380802154541016
    5. ' ' → logprob: -12.505802154541016
    6. '}' → logprob: -13.880802154541016
    7. ' ]' → logprob: -14.380802154541016
    8. '`' → logprob: -15.130802154541016
    9. ' ' → logprob: -15.380802154541016
    10. 'b' → logprob: -15.505802154541016

Token 197: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014164102263748646
    2. 'in' → logprob: -4.264163970947266
    3. ' ' → logprob: -14.889163970947266
    4. ' ' → logprob: -15.889163970947266
    5. 'In' → logprob: -16.639163970947266
    6. '	in' → logprob: -17.639163970947266
    7. 'if' → logprob: -18.764163970947266
    8. '`' → logprob: -18.889163970947266
    9. 'b' → logprob: -18.889163970947266
    10. '```' → logprob: -18.889163970947266

Token 198: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.1269282102584839
    2. 'b' → logprob: -2.1269283294677734
    3. ' ' → logprob: -15.876928329467773
    4. ' ' → logprob: -17.001928329467773
    5. '	b' → logprob: -18.126928329467773
    6. '```' → logprob: -18.751928329467773
    7. 's' → logprob: -19.001928329467773
    8. ' б' → logprob: -19.251928329467773
    9. '[b' → logprob: -19.376928329467773
    10. '(b' → logprob: -20.189428329467773

Token 199: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31336766481399536
    2. ':
' → logprob: -1.3133676052093506
    3. '   ' → logprob: -9.43836784362793
    4. ':

' → logprob: -11.06336784362793
    5. ':
' → logprob: -12.81336784362793
    6. ' :
' → logprob: -12.81336784362793
    7. '=' → logprob: -13.56336784362793
    8. '):
' → logprob: -13.68836784362793
    9. ' :' → logprob: -14.31336784362793
    10. 'b' → logprob: -14.31336784362793

Token 200: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26059988141059875
    2. ' ans' → logprob: -1.5105998516082764
    3. 'ans' → logprob: -4.7606000900268555
    4. ' ' → logprob: -10.260600090026855
    5. '  ' → logprob: -11.135600090026855
    6. '    ' → logprob: -11.885600090026855
    7. ' True' → logprob: -12.260600090026855
    8. '	ans' → logprob: -12.510600090026855
    9. '=' → logprob: -13.260600090026855
    10. 'True' → logprob: -13.885600090026855

Token 201: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.20496763288974762
    2. 'ans' (adapté à ' ans') → logprob: -1.7049676179885864
    3. 'True' → logprob: -5.954967498779297
    4. ' True' → logprob: -6.954967498779297
    5. '(ans' → logprob: -14.579967498779297
    6. '	ans' → logprob: -15.079967498779297
    7. 'answer' → logprob: -15.579967498779297
    8. '=True' → logprob: -16.079967498779297
    9. 'Ans' → logprob: -17.079967498779297
    10. '_ans' → logprob: -17.079967498779297

Token 202: '20' (ID: 455)
  Prédit: '20'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: 0.0
    2. '２０' → logprob: -20.0
    3. '```' → logprob: -24.375
    4. '2' → logprob: -24.5
    5. '۲۰' → logprob: -24.875
    6. ' ' → logprob: -24.875
    7. '
' → logprob: -25.375
    8. '২০' → logprob: -25.375
    9. '

' → logprob: -26.0
    10. '२०' → logprob: -26.375

Token 203: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25195151567459106
    2. ' =' → logprob: -1.5019514560699463
    3. '=True' → logprob: -10.751951217651367
    4. 'True' → logprob: -15.001951217651367
    5. ' ' → logprob: -15.251951217651367
    6. '   ' → logprob: -15.626951217651367
    7. '=
' → logprob: -16.626951217651367
    8. ' =
' → logprob: -17.501951217651367
    9. ' True' → logprob: -17.626951217651367
    10. ')' → logprob: -18.001951217651367

Token 204: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.3868711292743683
    2. ' True' → logprob: -1.136871099472046
    3. '=True' → logprob: -16.136871337890625
    4. '(True' → logprob: -17.136871337890625
    5. '.True' → logprob: -20.386871337890625
    6. ' ' → logprob: -20.386871337890625
    7. ' Tru' → logprob: -22.011871337890625
    8. 'T' → logprob: -22.386871337890625
    9. 'Tr' → logprob: -22.511871337890625
    10. 'False' → logprob: -22.886871337890625

Token 205: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -4.0722858102526516e-05
    2. ' if' → logprob: -10.250041007995605
    3. '
' → logprob: -12.250041007995605
    4. '```' → logprob: -14.875041007995605
    5. ' 
' → logprob: -15.875041007995605
    6. '``' → logprob: -17.00004005432129
    7. '  
' → logprob: -18.00004005432129
    8. 'If' → logprob: -18.25004005432129
    9. '\
' → logprob: -18.50004005432129
    10. '    
' → logprob: -19.25004005432129

Token 206: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00033546582562848926
    2. ' if' → logprob: -8.000335693359375
    3. '```' → logprob: -17.000335693359375
    4. 'If' → logprob: -19.750335693359375
    5. '
' → logprob: -19.875335693359375
    6. ' 
' → logprob: -20.375335693359375
    7. '``' → logprob: -21.750335693359375
    8. 'ifs' → logprob: -22.000335693359375
    9. 'elif' → logprob: -24.000335693359375
    10. '   ' → logprob: -24.250335693359375

Token 207: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.12692904472351074
    2. 'A' → logprob: -2.1269290447235107
    3. ' ' → logprob: -14.12692928314209
    4. '(A' → logprob: -16.751928329467773
    5. 'b' → logprob: -17.126928329467773
    6. '   ' → logprob: -17.376928329467773
    7. '	A' → logprob: -17.751928329467773
    8. '    ' → logprob: -18.001928329467773
    9. 'a' → logprob: -18.001928329467773
    10. ' (' → logprob: -18.126928329467773

Token 208: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.127333340875339e-06
    2. '21' → logprob: -12.750003814697266
    3. '[' → logprob: -14.000003814697266
    4. '20' → logprob: -15.625003814697266
    5. '1' → logprob: -16.000003814697266
    6. ' ' → logprob: -16.875003814697266
    7. '0' → logprob: -18.875003814697266
    8. '22' → logprob: -19.000003814697266
    9. '   ' → logprob: -19.500003814697266
    10. '```' → logprob: -19.500003814697266

Token 209: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.704273118884885e-07
    2. ' [' → logprob: -15.250000953674316
    3. '1' → logprob: -15.375000953674316
    4. '[
' → logprob: -16.875
    5. '][' → logprob: -17.125
    6. '```' → logprob: -17.625
    7. '21' → logprob: -18.125
    8. '   ' → logprob: -18.75
    9. '20' → logprob: -19.125
    10. '(' → logprob: -19.25

Token 210: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003122247871942818
    2. '0' → logprob: -8.750311851501465
    3. '2' → logprob: -8.875311851501465
    4. '[' → logprob: -11.250311851501465
    5. '(' → logprob: -15.125311851501465
    6. ' ' → logprob: -15.625311851501465
    7. '
' → logprob: -15.750311851501465
    8. '```' → logprob: -15.750311851501465
    9. '   ' → logprob: -16.75031280517578
    10. '21' → logprob: -17.62531280517578

Token 211: ']' (ID: 60)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023354141041636467
    2. 'in' → logprob: -3.7733540534973145
    3. ')' → logprob: -9.398354530334473
    4. ']' → logprob: -10.773354530334473
    5. 'b' → logprob: -13.023354530334473
    6. ' ' → logprob: -14.023354530334473
    7. ' b' → logprob: -14.648354530334473
    8. 'In' → logprob: -14.898354530334473
    9. '}' → logprob: -15.398354530334473
    10. '   ' → logprob: -16.148353576660156

Token 212: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008616226725280285
    2. 'in' → logprob: -4.7586164474487305
    3. ' ' → logprob: -14.00861644744873
    4. '   ' → logprob: -15.38361644744873
    5. 'b' → logprob: -15.75861644744873
    6. 'if' → logprob: -16.383615493774414
    7. ')' → logprob: -16.383615493774414
    8. '	in' → logprob: -16.633615493774414
    9. 'In' → logprob: -17.133615493774414
    10. ' if' → logprob: -17.258615493774414

Token 213: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5759397745132446
    2. 'b' → logprob: -0.8259397745132446
    3. ' ' → logprob: -16.200939178466797
    4. '	b' → logprob: -16.200939178466797
    5. '[b' → logprob: -17.450939178466797
    6. ' б' → logprob: -17.450939178466797
    7. '(b' → logprob: -17.700939178466797
    8. ')b' → logprob: -17.700939178466797
    9. 's' → logprob: -17.825939178466797
    10. 'True' → logprob: -18.200939178466797

Token 214: ':
' (ID: 734)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2350863218307495
    2. ' in' → logprob: -1.2350863218307495
    3. ':' → logprob: -2.110086441040039
    4. ' =' → logprob: -2.235086441040039
    5. 'in' → logprob: -2.360086441040039
    6. '   ' → logprob: -2.360086441040039
    7. '==' → logprob: -7.860086441040039
    8. ')' → logprob: -8.485086441040039
    9. ':
' → logprob: -8.610086441040039
    10. ' ==' → logprob: -8.860086441040039

Token 215: '   ' (ID: 271)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.5078749656677246
    2. ' True' → logprob: -1.2578749656677246
    3. 'ans' → logprob: -2.7578749656677246
    4. ' ans' → logprob: -3.0078749656677246
    5. 'b' → logprob: -7.007874965667725
    6. ' b' → logprob: -8.757875442504883
    7. ' in' → logprob: -10.507875442504883
    8. '=True' → logprob: -10.507875442504883
    9. 'in' → logprob: -11.507875442504883
    10. ' =' → logprob: -12.257875442504883

Token 216: ' ans' (ID: 3345)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.06359416246414185
    2. ' True' → logprob: -2.813594102859497
    3. 'ans' (adapté à ' ans') → logprob: -6.813594341278076
    4. ' ans' → logprob: -7.688594341278076
    5. 'b' → logprob: -9.688593864440918
    6. ' b' → logprob: -12.188593864440918
    7. '(True' → logprob: -14.188593864440918
    8. '=True' → logprob: -14.938593864440918
    9. 'False' → logprob: -16.563594818115234
    10. ' in' → logprob: -16.563594818115234

Token 217: '21' (ID: 2040)
  Prédit: '21'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '21' → logprob: 0.0
    2. '20' → logprob: -17.875
    3. '22' → logprob: -18.0
    4. '2' → logprob: -19.25
    5. ' ' → logprob: -20.125
    6. '   ' → logprob: -20.375
    7. 'True' → logprob: -20.625
    8. 'b' → logprob: -20.875
    9. '[' → logprob: -20.875
    10. '
' → logprob: -21.0

Token 218: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889143377542496
    2. ' =' → logprob: -2.5788915157318115
    3. '=True' → logprob: -13.32889175415039
    4. ' ' → logprob: -17.45389175415039
    5. '=

' → logprob: -17.95389175415039
    6. '   ' → logprob: -18.07889175415039
    7. ')' → logprob: -18.20389175415039
    8. '==' → logprob: -18.57889175415039
    9. '＝' → logprob: -18.70389175415039
    10. 'True' → logprob: -18.70389175415039

Token 219: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.25192946195602417
    2. ' True' → logprob: -1.501929521560669
    3. 'b' → logprob: -15.50192928314209
    4. '(True' → logprob: -16.501930236816406
    5. '=True' → logprob: -17.126930236816406
    6. ' b' → logprob: -17.376930236816406
    7. ' ' → logprob: -19.251930236816406
    8. ' ' → logprob: -19.501930236816406
    9. '.True' → logprob: -19.876930236816406
    10. 'False' → logprob: -20.251930236816406

Token 220: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.13159523904323578
    2. ' if' → logprob: -2.1315951347351074
    3. 'True' → logprob: -5.881595134735107
    4. '=True' → logprob: -7.506595134735107
    5. ' True' → logprob: -7.506595134735107
    6. '=' → logprob: -7.631595134735107
    7. ' =' → logprob: -8.506595611572266
    8. '
' → logprob: -10.756595611572266
    9. '```' → logprob: -10.756595611572266
    10. '=
' → logprob: -11.006595611572266

Token 221: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0009124171338044107
    2. ' if' → logprob: -7.000912189483643
    3. 'True' → logprob: -14.0009126663208
    4. '```' → logprob: -17.000911712646484
    5. 'If' → logprob: -18.375911712646484
    6. ' True' → logprob: -18.500911712646484
    7. '
' → logprob: -18.625911712646484
    8. '``' → logprob: -20.125911712646484
    9. '   ' → logprob: -20.500911712646484
    10. '=True' → logprob: -20.625911712646484

Token 222: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.014164801687002182
    2. 'A' → logprob: -4.264164924621582
    3. ' ' → logprob: -14.264164924621582
    4. '(A' → logprob: -14.264164924621582
    5. ' ans' → logprob: -17.014163970947266
    6. 'b' → logprob: -17.014163970947266
    7. '	A' → logprob: -17.639163970947266
    8. ' b' → logprob: -17.639163970947266
    9. ' (' → logprob: -18.014163970947266
    10. ' ' → logprob: -18.264163970947266

Token 223: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.8889261304575484e-06
    2. '22' → logprob: -12.875003814697266
    3. '[' → logprob: -14.125003814697266
    4. '20' → logprob: -15.000003814697266
    5. 'A' → logprob: -15.500003814697266
    6. ' ' → logprob: -17.125003814697266
    7. '202' → logprob: -20.250003814697266
    8. '02' → logprob: -20.500003814697266
    9. '21' → logprob: -20.625003814697266
    10. 'a' → logprob: -20.875003814697266

Token 224: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0280383548888494e-06
    2. '2' → logprob: -14.000000953674316
    3. ' [' → logprob: -16.500001907348633
    4. '[
' → logprob: -17.625001907348633
    5. '```' → logprob: -17.625001907348633
    6. '][' → logprob: -17.625001907348633
    7. ']' → logprob: -18.000001907348633
    8. '(' → logprob: -18.375001907348633
    9. '20' → logprob: -19.000001907348633
    10. '   ' → logprob: -19.625001907348633

Token 225: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.2729995988775045e-06
    2. '[' → logprob: -12.125006675720215
    3. ' ' → logprob: -14.375006675720215
    4. '```' → logprob: -16.5000057220459
    5. '   ' → logprob: -18.0625057220459
    6. '۲' → logprob: -18.3125057220459
    7. '-' → logprob: -18.8125057220459
    8. '0' → logprob: -19.0000057220459
    9. '２' → logprob: -19.1875057220459
    10. '  ' → logprob: -19.8125057220459

Token 226: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000981243560090661
    2. ' in' → logprob: -7.125981330871582
    3. 'in' → logprob: -8.875981330871582
    4. ' ]' → logprob: -10.375981330871582
    5. ')' → logprob: -12.625981330871582
    6. '']' → logprob: -14.750981330871582
    7. '```' → logprob: -14.875981330871582
    8. 'In' → logprob: -15.000981330871582
    9. '`]' → logprob: -15.250981330871582
    10. '}' → logprob: -15.375981330871582

Token 227: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026324912905693054
    2. 'in' → logprob: -3.651324987411499
    3. '=' → logprob: -11.276325225830078
    4. ' =' → logprob: -11.901325225830078
    5. ' ' → logprob: -12.776325225830078
    6. '=True' → logprob: -14.151325225830078
    7. 'In' → logprob: -14.526325225830078
    8. '   ' → logprob: -14.901325225830078
    9. '	in' → logprob: -15.276325225830078
    10. ')' → logprob: -15.901325225830078

Token 228: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6932239532470703
    2. ' b' → logprob: -0.6932239532470703
    3. 'True' → logprob: -9.56822395324707
    4. ' True' → logprob: -11.94322395324707
    5. '	b' → logprob: -15.81822395324707
    6. ' ' → logprob: -16.69322395324707
    7. '[b' → logprob: -16.81822395324707
    8. ' ' → logprob: -16.94322395324707
    9. '(b' → logprob: -17.19322395324707
    10. 's' → logprob: -17.69322395324707

Token 229: ':
' (ID: 734)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12695950269699097
    2. ' =' → logprob: -2.1269595623016357
    3. ':' → logprob: -11.251959800720215
    4. '   ' → logprob: -12.126959800720215
    5. 'in' → logprob: -12.251959800720215
    6. '==' → logprob: -12.626959800720215
    7. ' in' → logprob: -12.876959800720215
    8. ' ==' → logprob: -14.001959800720215
    9. '=True' → logprob: -14.126959800720215
    10. '=
' → logprob: -15.001959800720215

Token 230: '   ' (ID: 271)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.02975858747959137
    2. ' True' → logprob: -3.5297586917877197
    3. '=True' → logprob: -11.77975845336914
    4. ' =' → logprob: -14.77975845336914
    5. '=' → logprob: -16.27975845336914
    6. '(True' → logprob: -17.77975845336914
    7. '   ' → logprob: -18.52975845336914
    8. 'ans' → logprob: -19.77975845336914
    9. ' ' → logprob: -20.15475845336914
    10. '==' → logprob: -20.27975845336914

Token 231: ' ans' (ID: 3345)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.004078639671206474
    2. ' True' → logprob: -5.5040788650512695
    3. 'ans' (adapté à ' ans') → logprob: -15.87907886505127
    4. '=True' → logprob: -15.87907886505127
    5. ' ans' → logprob: -18.879077911376953
    6. '(True' → logprob: -19.754077911376953
    7. 'true' → logprob: -21.254077911376953
    8. ' =' → logprob: -22.254077911376953
    9. 'Ans' → logprob: -22.379077911376953
    10. '_true' → logprob: -22.379077911376953

Token 232: '22' (ID: 1709)
  Prédit: '22'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '22' → logprob: -1.9361264946837764e-07
    2. '2' → logprob: -16.125
    3. '12' → logprob: -19.0
    4. '२२' → logprob: -19.875
    5. '022' → logprob: -20.125
    6. '=' → logprob: -20.625
    7. '
' → logprob: -20.625
    8. '02' → logprob: -21.0
    9. '```' → logprob: -21.125
    10. ' ' → logprob: -21.25

Token 233: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10021594911813736
    2. ' =' → logprob: -2.3502159118652344
    3. '=True' → logprob: -11.600215911865234
    4. ' ' → logprob: -16.600215911865234
    5. ')' → logprob: -17.600215911865234
    6. 'True' → logprob: -17.725215911865234
    7. '   ' → logprob: -17.850215911865234
    8. '＝' → logprob: -18.100215911865234
    9. '=False' → logprob: -18.475215911865234
    10. '=

' → logprob: -18.975215911865234

Token 234: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.029750604182481766
    2. ' True' → logprob: -3.5297505855560303
    3. '=True' → logprob: -16.65475082397461
    4. '(True' → logprob: -17.40475082397461
    5. '.True' → logprob: -20.52975082397461
    6. 'False' → logprob: -20.90475082397461
    7. ' ' → logprob: -21.40475082397461
    8. ' ' → logprob: -21.65475082397461
    9. 'T' → logprob: -23.15475082397461
    10. 'Sure' → logprob: -23.15475082397461

Token 235: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00816227588802576
    2. 'print' → logprob: -4.883162498474121
    3. 'ans' → logprob: -8.133162498474121
    4. '
' → logprob: -9.383162498474121
    5. 'result' → logprob: -9.883162498474121
    6. 'for' → logprob: -11.133162498474121
    7. 'answer' → logprob: -11.133162498474121
    8. '#' → logprob: -11.258162498474121
    9. ' if' → logprob: -11.258162498474121
    10. 'res' → logprob: -11.508162498474121

Token 236: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0021965294145047665
    2. 'print' → logprob: -6.252196311950684
    3. ' if' → logprob: -9.502196311950684
    4. '
' → logprob: -9.502196311950684
    5. 'result' → logprob: -10.502196311950684
    6. 'ans' → logprob: -10.627196311950684
    7. '\n' → logprob: -10.752196311950684
    8. 'i' → logprob: -11.502196311950684
    9. 'for' → logprob: -12.377196311950684
    10. 'answer' → logprob: -12.377196311950684

Token 237: ' ans' (ID: 3345)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.48015910387039185
    2. ' (' → logprob: -1.105159044265747
    3. ' ans' → logprob: -3.730159044265747
    4. '(' → logprob: -3.730159044265747
    5. '((' → logprob: -7.355159282684326
    6. 'ans' → logprob: -7.480159282684326
    7. ' ((' → logprob: -7.480159282684326
    8. '(
' → logprob: -8.480158805847168
    9. ' (
' → logprob: -9.230158805847168
    10. ' ' → logprob: -9.855158805847168

Token 238: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: 0.0
    2. '``' → logprob: -18.25
    3. '000' → logprob: -18.5
    4. '01' → logprob: -18.5
    5. '```' → logprob: -18.5
    6. '0' → logprob: -19.375
    7. ' ' → logprob: -19.75
    8. '02' → logprob: -20.0
    9. '[' → logprob: -20.0
    10. '００' → logprob: -20.125

Token 239: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.20157258212566376
    2. 'and' → logprob: -1.7015725374221802
    3. ' ' → logprob: -9.32657241821289
    4. ' or' → logprob: -10.07657241821289
    5. '==' → logprob: -10.82657241821289
    6. 'or' → logprob: -13.32657241821289
    7. ' ==' → logprob: -13.57657241821289
    8. ':' → logprob: -14.20157241821289
    9. '	and' → logprob: -14.20157241821289
    10. '+' → logprob: -14.32657241821289

Token 240: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.07889298349618912
    2. ' ans' → logprob: -2.578892946243286
    3. ' ' → logprob: -13.203892707824707
    4. '(ans' → logprob: -14.328892707824707
    5. '	ans' → logprob: -14.578892707824707
    6. '   ' → logprob: -15.828892707824707
    7. 'answer' → logprob: -16.828893661499023
    8. '  ' → logprob: -16.953893661499023
    9. 'ann' → logprob: -17.203893661499023
    10. 'an' → logprob: -17.328893661499023

Token 241: '10' (ID: 702)
  Prédit: '01'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '01' → logprob: -1.7432603272027336e-06
    2. '11' → logprob: -13.875001907348633
    3. '10' → logprob: -15.000001907348633
    4. '02' → logprob: -16.125001907348633
    5. '   ' → logprob: -17.625001907348633
    6. '0' → logprob: -17.750001907348633
    7. '1' → logprob: -17.750001907348633
    8. '00' → logprob: -17.875001907348633
    9. '```' → logprob: -18.750001907348633
    10. '[' → logprob: -18.875001907348633

Token 242: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.012509997934103012
    2. 'and' → logprob: -4.387509822845459
    3. '<|end|>' → logprob: -16.012510299682617
    4. '0' → logprob: -16.137510299682617
    5. ' ' → logprob: -16.637510299682617
    6. '	and' → logprob: -17.637510299682617
    7. ' ' → logprob: -18.262510299682617
    8. '1' → logprob: -18.387510299682617
    9. '```' → logprob: -18.887510299682617
    10. 'a' → logprob: -19.012510299682617

Token 243: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0009117019944824278
    2. ' ans' → logprob: -7.000911712646484
    3. '(ans' → logprob: -15.750911712646484
    4. '	ans' → logprob: -17.125911712646484
    5. 'and' → logprob: -19.375911712646484
    6. 'answer' → logprob: -19.500911712646484
    7. 'ann' → logprob: -19.875911712646484
    8. '_ans' → logprob: -20.125911712646484
    9. ' ' → logprob: -20.250911712646484
    10. '12' → logprob: -20.625911712646484

Token 244: '20' (ID: 455)
  Prédit: '20'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -9.491498531133402e-06
    2. '00' → logprob: -12.000009536743164
    3. '12' → logprob: -13.125009536743164
    4. '02' → logprob: -14.625009536743164
    5. '[' → logprob: -15.500009536743164
    6. '0' → logprob: -15.500009536743164
    7. '```' → logprob: -15.875009536743164
    8. '11' → logprob: -16.375009536743164
    9. '   ' → logprob: -17.000009536743164
    10. '19' → logprob: -17.000009536743164

Token 245: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.055158600211143494
    2. ':
' → logprob: -3.1801586151123047
    3. ' or' → logprob: -4.430158615112305
    4. ' :' → logprob: -9.555158615112305
    5. 'or' → logprob: -9.930158615112305
    6. ' and' → logprob: -10.680158615112305
    7. '==' → logprob: -11.555158615112305
    8. ' :
' → logprob: -11.680158615112305
    9. ' ==' → logprob: -12.180158615112305
    10. '   ' → logprob: -13.305158615112305

Token 246: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0947674959897995
    2. ' print' → logprob: -2.7197675704956055
    3. 'print' → logprob: -3.7197675704956055
    4. ':' → logprob: -8.844767570495605
    5. ' or' → logprob: -9.844767570495605
    6. ':
' → logprob: -9.969767570495605
    7. '	print' → logprob: -11.219767570495605
    8. '```' → logprob: -12.719767570495605
    9. ' and' → logprob: -12.844767570495605
    10. '   ' → logprob: -12.844767570495605

Token 247: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0054237195290625095
    2. ' print' → logprob: -5.255423545837402
    3. '   ' → logprob: -8.630423545837402
    4. 'sys' → logprob: -11.880423545837402
    5. 'ans' → logprob: -13.380423545837402
    6. ' ' → logprob: -14.630423545837402
    7. '
' → logprob: -14.755423545837402
    8. ' sys' → logprob: -14.755423545837402
    9. 'pr' → logprob: -15.130423545837402
    10. '	print' → logprob: -15.255423545837402

Token 248: '('' (ID: 706)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.05156831815838814
    2. '(' → logprob: -3.1765682697296143
    3. '('' → logprob: -4.801568508148193
    4. '("#' → logprob: -8.301568031311035
    5. '()' → logprob: -11.426568031311035
    6. '(B' → logprob: -11.551568031311035
    7. '(A' → logprob: -12.301568031311035
    8. '(H' → logprob: -12.426568031311035
    9. '("""' → logprob: -12.426568031311035
    10. '(X' → logprob: -12.801568031311035

Token 249: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.011496568098664284
    2. ''' → logprob: -5.261496543884277
    3. '```' → logprob: -6.386496543884277
    4. '"' → logprob: -6.511496543884277
    5. 'Three' → logprob: -7.386496543884277
    6. '#' → logprob: -7.761496543884277
    7. '3' → logprob: -8.386496543884277
    8. ' Yes' → logprob: -8.511496543884277
    9. '``' → logprob: -8.636496543884277
    10. 'B' → logprob: -8.761496543884277

Token 250: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.07892239838838577
    2. '')
' → logprob: -2.5789225101470947
    3. '')
' → logprob: -10.828922271728516
    4. ')' → logprob: -11.703922271728516
    5. '")' → logprob: -12.578922271728516
    6. ')
' → logprob: -15.203922271728516
    7. '")
' → logprob: -15.203922271728516
    8. ''' → logprob: -15.328922271728516
    9. '')

' → logprob: -15.828922271728516
    10. '');' → logprob: -16.078922271728516

Token 251: '   ' (ID: 271)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.0002833848411682993
    2. 'el' → logprob: -9.250283241271973
    3. 'else' → logprob: -9.250283241271973
    4. 'if' → logprob: -9.375283241271973
    5. ' elif' → logprob: -13.000283241271973
    6. '   ' → logprob: -13.625283241271973
    7. '```' → logprob: -14.125283241271973
    8. 'elseif' → logprob: -14.875283241271973
    9. 'exit' → logprob: -15.250283241271973
    10. ')' → logprob: -15.250283241271973

Token 252: ' sys' (ID: 12228)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.043866321444511414
    2. 'exit' → logprob: -3.1688663959503174
    3. 'else' → logprob: -7.918866157531738
    4. '   ' → logprob: -8.418866157531738
    5. ' exit' → logprob: -8.543866157531738
    6. 'if' → logprob: -9.918866157531738
    7. 'el' → logprob: -11.668866157531738
    8. '```' → logprob: -12.293866157531738
    9. ' elif' → logprob: -12.543866157531738
    10. '\n' → logprob: -12.793866157531738

Token 253: '.exit' (ID: 27076)
  Prédit: '.exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -3.173704271830502e-06
    2. ' exit' → logprob: -13.62500286102295
    3. 'exit' → logprob: -14.25000286102295
    4. '.stdout' → logprob: -14.62500286102295
    5. '   ' → logprob: -14.87500286102295
    6. '.' → logprob: -15.25000286102295
    7. ' .' → logprob: -15.25000286102295
    8. '	exit' → logprob: -16.875003814697266
    9. '.quit' → logprob: -17.625003814697266
    10. '_exit' → logprob: -18.125003814697266

Token 254: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0007136239437386394
    2. '(' → logprob: -7.25071382522583
    3. '()
' → logprob: -13.000713348388672
    4. ' ()' → logprob: -13.750713348388672
    5. '()`' → logprob: -16.000713348388672
    6. '(
' → logprob: -16.375713348388672
    7. '().' → logprob: -17.250713348388672
    8. '()

' → logprob: -17.500713348388672
    9. '(True' → logprob: -17.625713348388672
    10. '();' → logprob: -17.750713348388672

Token 255: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -2.7848862373502925e-05
    2. 'elif' → logprob: -10.500027656555176
    3. 'i' → logprob: -16.375028610229492
    4. 'If' → logprob: -16.625028610229492
    5. '```' → logprob: -17.000028610229492
    6. ' if' → logprob: -18.875028610229492
    7. 'ifs' → logprob: -20.750028610229492
    8. '
' → logprob: -21.125028610229492
    9. 'or' → logprob: -21.750028610229492
    10. '\
' → logprob: -22.125028610229492

Token 256: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.4758276641368866
    2. ' ans' → logprob: -0.975827693939209
    3. '(ans' → logprob: -6.350827693939209
    4. '(' → logprob: -13.47582721710205
    5. '	ans' → logprob: -13.85082721710205
    6. ' (' → logprob: -14.22582721710205
    7. ' ' → logprob: -14.72582721710205
    8. '_ans' → logprob: -16.475828170776367
    9. 'Ans' → logprob: -16.975828170776367
    10. '   ' → logprob: -16.975828170776367

Token 257: '01' (ID: 2290)
  Prédit: '01'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '01' → logprob: -8.911954500945285e-05
    2. '00' → logprob: -9.375088691711426
    3. '11' → logprob: -12.500088691711426
    4. '0' → logprob: -15.875088691711426
    5. '02' → logprob: -16.250089645385742
    6. '21' → logprob: -16.625089645385742
    7. '
' → logprob: -17.125089645385742
    8. '[' → logprob: -17.750089645385742
    9. '10' → logprob: -18.000089645385742
    10. '`' → logprob: -18.375089645385742

Token 258: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.005234002135694027
    2. 'and' → logprob: -5.2552337646484375
    3. ' ' → logprob: -15.255233764648438
    4. ' ' → logprob: -17.630233764648438
    5. ' an' → logprob: -19.880233764648438
    6. '	and' → logprob: -20.130233764648438
    7. '   ' → logprob: -20.255233764648438
    8. ' и' → logprob: -20.255233764648438
    9. ' a' → logprob: -20.255233764648438
    10. 'a' → logprob: -20.630233764648438

Token 259: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00015860427811276168
    2. ' ans' → logprob: -8.750158309936523
    3. '(ans' → logprob: -16.875158309936523
    4. '	ans' → logprob: -18.625158309936523
    5. ' ' → logprob: -20.375158309936523
    6. 'and' → logprob: -20.500158309936523
    7. '   ' → logprob: -20.750158309936523
    8. 'answer' → logprob: -21.500158309936523
    9. '_ans' → logprob: -21.500158309936523
    10. 'ann' → logprob: -21.875158309936523

Token 260: '11' (ID: 994)
  Prédit: '11'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -4.320199877838604e-07
    2. '   ' → logprob: -16.25
    3. '1' → logprob: -16.5
    4. '
' → logprob: -16.875
    5. '111' → logprob: -17.25
    6. '01' → logprob: -18.125
    7. '10' → logprob: -18.25
    8. '{' → logprob: -18.5
    9. '十一' → logprob: -18.5
    10. '```' → logprob: -18.75

Token 261: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0380416102707386
    2. 'and' → logprob: -3.288041591644287
    3. ' ' → logprob: -17.038042068481445
    4. ' ' → logprob: -17.288042068481445
    5. '	and' → logprob: -17.913042068481445
    6. ' и' → logprob: -19.538042068481445
    7. '```' → logprob: -19.788042068481445
    8. '   ' → logprob: -20.163042068481445
    9. '<|end|>' → logprob: -20.163042068481445
    10. '_and' → logprob: -21.288042068481445

Token 262: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2014141082763672
    2. ' ans' → logprob: -1.7014141082763672
    3. '(ans' → logprob: -14.201414108276367
    4. '	ans' → logprob: -15.951414108276367
    5. '_ans' → logprob: -17.826414108276367
    6. 'Ans' → logprob: -18.701414108276367
    7. 'answer' → logprob: -19.201414108276367
    8. 'ANS' → logprob: -19.826414108276367
    9. ' ' → logprob: -21.076414108276367
    10. 'True' → logprob: -21.076414108276367

Token 263: '21' (ID: 2040)
  Prédit: '21'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '21' → logprob: 0.0
    2. '2' → logprob: -19.125
    3. '20' → logprob: -19.75
    4. '```' → logprob: -20.875
    5. '12' → logprob: -21.0
    6. '22' → logprob: -21.125
    7. '
' → logprob: -21.625
    8. '   ' → logprob: -22.375
    9. '``' → logprob: -22.5
    10. '{' → logprob: -22.5

Token 264: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0024773201439529657
    2. ':
' → logprob: -6.002477169036865
    3. '   ' → logprob: -14.627477645874023
    4. ':

' → logprob: -15.002477645874023
    5. ' :' → logprob: -15.127477645874023
    6. '):' → logprob: -15.252477645874023
    7. '==' → logprob: -15.377477645874023
    8. ':
' → logprob: -15.877477645874023
    9. ':**' → logprob: -18.127477645874023
    10. '>:' → logprob: -18.252477645874023

Token 265: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06397643685340881
    2. ':' → logprob: -2.813976526260376
    3. ':
' → logprob: -6.438976287841797
    4. '```' → logprob: -8.563976287841797
    5. 'print' → logprob: -8.688976287841797
    6. ' print' → logprob: -11.188976287841797
    7. '       ' → logprob: -11.313976287841797
    8. '  ' → logprob: -11.938976287841797
    9. '    ' → logprob: -11.938976287841797
    10. ' :' → logprob: -12.938976287841797

Token 266: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.07928884774446487
    2. ' print' → logprob: -2.579288959503174
    3. '   ' → logprob: -7.829288959503174
    4. '```' → logprob: -14.329288482666016
    5. '	print' → logprob: -15.579288482666016
    6. ' ' → logprob: -16.454288482666016
    7. '.print' → logprob: -16.579288482666016
    8. '    ' → logprob: -17.204288482666016
    9. '
' → logprob: -17.454288482666016
    10. '``' → logprob: -17.704288482666016

Token 267: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -9.674858301877975e-05
    2. '(' → logprob: -9.250096321105957
    3. '("' → logprob: -15.000096321105957
    4. ' ('' → logprob: -15.500096321105957
    5. '(('' → logprob: -17.750097274780273
    6. '(\'' → logprob: -18.375097274780273
    7. '('(' → logprob: -19.125097274780273
    8. '()' → logprob: -19.500097274780273
    9. '(
' → logprob: -19.625097274780273
    10. '(`' → logprob: -19.625097274780273

Token 268: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -2.935296834039036e-06
    2. ''' → logprob: -12.75000286102295
    3. ' Yes' → logprob: -18.250003814697266
    4. 'No' → logprob: -20.250003814697266
    5. 'YES' → logprob: -20.625003814697266
    6. 'Ye' → logprob: -20.875003814697266
    7. '('' → logprob: -21.250003814697266
    8. 'Y' → logprob: -22.375003814697266
    9. '.Yes' → logprob: -23.125003814697266
    10. 'True' → logprob: -23.625003814697266

Token 269: '')
' (ID: 2515)
  Prédit: '')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')
' → logprob: -0.1025579497218132
    2. '')' → logprob: -2.352557897567749
    3. '   ' → logprob: -6.227558135986328
    4. ')
' → logprob: -8.227558135986328
    5. ')' → logprob: -9.727558135986328
    6. '")
' → logprob: -10.727558135986328
    7. '')
' → logprob: -11.602558135986328
    8. '()' → logprob: -11.602558135986328
    9. '")' → logprob: -13.102558135986328
    10. '()
' → logprob: -13.102558135986328

Token 270: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2471589798224159e-05
    2. '```' → logprob: -11.750012397766113
    3. '
' → logprob: -13.375012397766113
    4. '    
' → logprob: -13.625012397766113
    5. '   ' → logprob: -13.625012397766113
    6. '<|end|>' → logprob: -16.00001335144043
    7. '``' → logprob: -16.25001335144043
    8. 'sys' → logprob: -16.50001335144043
    9. '   ' → logprob: -16.62501335144043
    10. ')' → logprob: -16.75001335144043

Token 271: ' sys' (ID: 12228)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6944443583488464
    2. 'sys' (adapté à ' sys') → logprob: -0.6944443583488464
    3. ' sys' → logprob: -6.694444179534912
    4. 'import' → logprob: -9.81944465637207
    5. '	sys' → logprob: -13.19444465637207
    6. '```' → logprob: -13.31944465637207
    7. '(sys' → logprob: -15.06944465637207
    8. '
' → logprob: -16.31944465637207
    9. 'system' → logprob: -16.94444465637207
    10. '``' → logprob: -16.94444465637207

Token 272: '.exit' (ID: 27076)
  Prédit: '.exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -3.650518920039758e-06
    2. '.' → logprob: -13.000003814697266
    3. '.stdout' → logprob: -15.000003814697266
    4. '.quit' → logprob: -15.250003814697266
    5. ' .' → logprob: -15.375003814697266
    6. '.ex' → logprob: -15.875003814697266
    7. 'exit' → logprob: -15.875003814697266
    8. '.EXIT' → logprob: -16.250003814697266
    9. '	exit' → logprob: -16.750003814697266
    10. '.exc' → logprob: -17.500003814697266

Token 273: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.546478935983032e-05
    2. '(' → logprob: -10.625025749206543
    3. '()
' → logprob: -14.625025749206543
    4. ' ()' → logprob: -15.375025749206543
    5. '()`' → logprob: -15.625025749206543
    6. '()

' → logprob: -16.625024795532227
    7. '().' → logprob: -17.000024795532227
    8. '();' → logprob: -17.125024795532227
    9. '()>' → logprob: -17.125024795532227
    10. '())' → logprob: -17.750024795532227

Token 274: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -2.0339031834737398e-05
    2. '```' → logprob: -11.250020027160645
    3. ' if' → logprob: -12.750020027160645
    4. 'If' → logprob: -13.625020027160645
    5. '(
' → logprob: -14.000020027160645
    6. '``' → logprob: -14.125020027160645
    7. '0' → logprob: -14.625020027160645
    8. '(' → logprob: -14.750020027160645
    9. '
' → logprob: -15.125020027160645
    10. 'ifs' → logprob: -15.375020027160645

Token 275: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.10047903656959534
    2. ' ans' → logprob: -2.3504791259765625
    3. '(ans' → logprob: -8.225479125976562
    4. '	ans' → logprob: -12.975479125976562
    5. '   ' → logprob: -13.850479125976562
    6. ' ' → logprob: -14.475479125976562
    7. '0' → logprob: -15.225479125976562
    8. 'a' → logprob: -16.350479125976562
    9. '(' → logprob: -16.350479125976562
    10. '_ans' → logprob: -16.475479125976562

Token 276: '02' (ID: 3286)
  Prédit: '02'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '02' → logprob: -0.00041339205927215517
    2. '22' → logprob: -8.375412940979004
    3. '12' → logprob: -9.000412940979004
    4. '[' → logprob: -10.000412940979004
    5. '2' → logprob: -11.875412940979004
    6. '20' → logprob: -13.000412940979004
    7. '
' → logprob: -13.250412940979004
    8. '```' → logprob: -14.500412940979004
    9. '022' → logprob: -14.500412940979004
    10. '0' → logprob: -15.187912940979004

Token 277: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.023245826363563538
    2. 'and' → logprob: -3.7732458114624023
    3. ' ' → logprob: -14.773245811462402
    4. ' ' → logprob: -17.89824676513672
    5. ' и' → logprob: -18.89824676513672
    6. '	and' → logprob: -19.39824676513672
    7. '```' → logprob: -20.14824676513672
    8. '_and' → logprob: -20.14824676513672
    9. '()' → logprob: -20.39824676513672
    10. '`' → logprob: -20.64824676513672

Token 278: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.25194594264030457
    2. 'ans' → logprob: -1.501945972442627
    3. '(ans' → logprob: -11.001945495605469
    4. '	ans' → logprob: -16.00194549560547
    5. ' ' → logprob: -18.37694549560547
    6. '_ans' → logprob: -18.87694549560547
    7. 'ANS' → logprob: -20.25194549560547
    8. 'answer' → logprob: -20.50194549560547
    9. 'Ans' → logprob: -21.00194549560547
    10. ' ansi' → logprob: -21.25194549560547

Token 279: '12' (ID: 899)
  Prédit: '12'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -9.088346359931165e-07
    2. '
' → logprob: -15.375000953674316
    3. '```' → logprob: -15.875000953674316
    4. '{' → logprob: -16.0
    5. '   ' → logprob: -16.5
    6. '22' → logprob: -16.75
    7. '۱۲' → logprob: -16.875
    8. '11' → logprob: -17.375
    9. '[' → logprob: -17.5
    10. '' → logprob: -17.5

Token 280: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3868713080883026
    2. 'and' → logprob: -1.136871337890625
    3. ' ' → logprob: -16.136871337890625
    4. '```' → logprob: -16.261871337890625
    5. ' ' → logprob: -17.886871337890625
    6. '``' → logprob: -18.136871337890625
    7. '	and' → logprob: -18.386871337890625
    8. '`' → logprob: -18.636871337890625
    9. 'ands' → logprob: -19.386871337890625
    10. '   ' → logprob: -19.636871337890625

Token 281: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.029754776507616043
    2. ' ans' → logprob: -3.529754877090454
    3. '(ans' → logprob: -12.404754638671875
    4. '	ans' → logprob: -15.779754638671875
    5. '_ans' → logprob: -19.029754638671875
    6. 'sys' → logprob: -19.529754638671875
    7. 'Ans' → logprob: -19.904754638671875
    8. 'ANS' → logprob: -20.279754638671875
    9. ' ' → logprob: -21.404754638671875
    10. 'answer' → logprob: -21.779754638671875

Token 282: '22' (ID: 1709)
  Prédit: '22'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '22' → logprob: 0.0
    2. '
' → logprob: -17.5
    3. '```' → logprob: -19.0
    4. 'print' → logprob: -19.125
    5. '[' → logprob: -19.625
    6. '2' → logprob: -19.875
    7. '20' → logprob: -20.375
    8. '``' → logprob: -20.75
    9. '21' → logprob: -20.875
    10. '022' → logprob: -21.375

Token 283: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12694081664085388
    2. ':
' → logprob: -2.1269407272338867
    3. ':

' → logprob: -12.251940727233887
    4. '   ' → logprob: -12.501940727233887
    5. ':
' → logprob: -13.376940727233887
    6. ' :' → logprob: -13.876940727233887
    7. ' :
' → logprob: -14.251940727233887
    8. '==' → logprob: -14.876940727233887
    9. '```' → logprob: -14.876940727233887
    10. 'print' → logprob: -15.876940727233887

Token 284: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2701140344142914
    2. ':' → logprob: -2.020113945007324
    3. ':
' → logprob: -2.270113945007324
    4. 'print' → logprob: -7.520113945007324
    5. ' print' → logprob: -8.770113945007324
    6. '  ' → logprob: -11.145113945007324
    7. '    ' → logprob: -11.145113945007324
    8. '       ' → logprob: -11.645113945007324
    9. ' ' → logprob: -12.020113945007324
    10. '```' → logprob: -12.145113945007324

Token 285: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.12694048881530762
    2. ' print' → logprob: -2.1269404888153076
    3. '   ' → logprob: -11.876940727233887
    4. 'True' → logprob: -12.751940727233887
    5. ' True' → logprob: -13.626940727233887
    6. 'Yes' → logprob: -14.251940727233887
    7. '```' → logprob: -15.126940727233887
    8. '(print' → logprob: -15.751940727233887
    9. ' ' → logprob: -16.37693977355957
    10. '.print' → logprob: -16.62693977355957

Token 286: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0002614550176076591
    2. '(' → logprob: -8.250261306762695
    3. '("' → logprob: -16.500261306762695
    4. '(('' → logprob: -17.125261306762695
    5. ' ('' → logprob: -17.500261306762695
    6. '(
' → logprob: -18.375261306762695
    7. '()' → logprob: -19.125261306762695
    8. '('(' → logprob: -19.250261306762695
    9. ''' → logprob: -19.500261306762695
    10. '(`' → logprob: -20.250261306762695

Token 287: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.02990877255797386
    2. ''' → logprob: -3.5299086570739746
    3. '('' → logprob: -8.779909133911133
    4. ' Yes' → logprob: -12.779909133911133
    5. '(' → logprob: -14.529909133911133
    6. '`' → logprob: -15.029909133911133
    7. 'YES' → logprob: -15.154909133911133
    8. '   ' → logprob: -15.404909133911133
    9. '.Yes' → logprob: -15.404909133911133
    10. '```' → logprob: -16.404909133911133

Token 288: '')
' (ID: 2515)
  Prédit: '')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')
' → logprob: -0.15682578086853027
    2. '')' → logprob: -2.4068257808685303
    3. '   ' → logprob: -2.9068257808685303
    4. ')
' → logprob: -8.03182601928711
    5. ')' → logprob: -10.03182601928711
    6. '")
' → logprob: -10.78182601928711
    7. '")' → logprob: -13.15682601928711
    8. '')
' → logprob: -13.53182601928711
    9. ' ')
' → logprob: -14.28182601928711
    10. '  ' → logprob: -14.40682601928711

Token 289: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015703336102887988
    2. '```' → logprob: -6.501570224761963
    3. '``' → logprob: -9.751570701599121
    4. 'sys' → logprob: -12.251570701599121
    5. '   ' → logprob: -13.376570701599121
    6. '    
' → logprob: -13.501570701599121
    7. 'import' → logprob: -13.876570701599121
    8. '(sys' → logprob: -15.376570701599121
    9. ' sys' → logprob: -15.626570701599121
    10. '`' → logprob: -15.626570701599121

Token 290: ' sys' (ID: 12228)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0077984947711229324
    2. 'sys' (adapté à ' sys') → logprob: -4.882798671722412
    3. 'import' → logprob: -9.132798194885254
    4. '```' → logprob: -9.757798194885254
    5. ' sys' → logprob: -10.757798194885254
    6. '``' → logprob: -13.257798194885254
    7. '	sys' → logprob: -13.757798194885254
    8. '   ' → logprob: -13.882798194885254
    9. '       ' → logprob: -14.757798194885254
    10. '
' → logprob: -15.132798194885254

Token 291: '.exit' (ID: 27076)
  Prédit: '.exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -6.704273118884885e-07
    2. 'exit' → logprob: -15.250000953674316
    3. ' .' → logprob: -15.750000953674316
    4. '.stdout' → logprob: -15.875000953674316
    5. '.' → logprob: -17.0
    6. '   ' → logprob: -17.375
    7. '	exit' → logprob: -17.625
    8. '.stderr' → logprob: -18.5
    9. '.Exit' → logprob: -18.625
    10. '```' → logprob: -18.75

Token 292: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.001230826834216714
    2. '(' → logprob: -7.251230716705322
    3. '()
' → logprob: -7.626230716705322
    4. '()`' → logprob: -10.50123119354248
    5. '(
' → logprob: -14.00123119354248
    6. '()

' → logprob: -14.12623119354248
    7. '())' → logprob: -14.25123119354248
    8. '()"' → logprob: -14.87623119354248
    9. '()\' → logprob: -14.87623119354248
    10. '();' → logprob: -15.00123119354248

Token 293: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1472419600977446e-06
    2. '```' → logprob: -13.750000953674316
    3. '``' → logprob: -17.625001907348633
    4. ' if' → logprob: -18.375001907348633
    5. 'If' → logprob: -21.125001907348633
    6. 'for' → logprob: -21.375001907348633
    7. '
' → logprob: -21.875001907348633
    8. 'print' → logprob: -22.000001907348633
    9. 'ifs' → logprob: -22.125001907348633
    10. 'elif' → logprob: -22.625001907348633

Token 294: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.027233891189098358
    2. 'ans' → logprob: -3.777233839035034
    3. '(ans' → logprob: -5.527234077453613
    4. '(' → logprob: -13.652234077453613
    5. ' (' → logprob: -13.777234077453613
    6. '	ans' → logprob: -14.027234077453613
    7. '_ans' → logprob: -16.152233123779297
    8. ' ' → logprob: -16.652233123779297
    9. 'Ans' → logprob: -16.902233123779297
    10. 'ANS' → logprob: -17.402233123779297

Token 295: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.0002651503309607506
    2. '10' → logprob: -8.250265121459961
    3. '20' → logprob: -12.625265121459961
    4. '01' → logprob: -15.250265121459961
    5. '0' → logprob: -15.375265121459961
    6. '[' → logprob: -17.50026512145996
    7. '02' → logprob: -18.87526512145996
    8. '
' → logprob: -19.12526512145996
    9. '```' → logprob: -19.37526512145996
    10. '30' → logprob: -20.87526512145996

Token 296: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.12692853808403015
    2. 'and' → logprob: -2.1269285678863525
    3. ' ' → logprob: -14.751928329467773
    4. ',' → logprob: -17.876928329467773
    5. ' ' → logprob: -17.876928329467773
    6. '	and' → logprob: -19.001928329467773
    7. '`' → logprob: -19.126928329467773
    8. ' ans' → logprob: -19.251928329467773
    9. ' &' → logprob: -19.876928329467773
    10. 'andr' → logprob: -20.001928329467773

Token 297: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.07889033854007721
    2. 'ans' → logprob: -2.578890323638916
    3. '(ans' → logprob: -14.578890800476074
    4. '	ans' → logprob: -16.703889846801758
    5. ' ' → logprob: -17.953889846801758
    6. '_ans' → logprob: -18.453889846801758
    7. 'ANS' → logprob: -20.328889846801758
    8. 'answer' → logprob: -21.328889846801758
    9. ' ansi' → logprob: -21.703889846801758
    10. 'Ans' → logprob: -21.703889846801758

Token 298: '01' (ID: 2290)
  Prédit: '11'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.0788901224732399
    2. '01' → logprob: -2.578890085220337
    3. '011' → logprob: -14.828889846801758
    4. '10' → logprob: -17.078889846801758
    5. '十一' → logprob: -17.953889846801758
    6. '1' → logprob: -18.328889846801758
    7. '１１' → logprob: -19.328889846801758
    8. ' ' → logprob: -20.203889846801758
    9. '{' → logprob: -20.578889846801758
    10. '111' → logprob: -20.828889846801758

Token 299: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.023245712742209435
    2. 'and' → logprob: -3.7732458114624023
    3. ' ' → logprob: -15.148245811462402
    4. ' ' → logprob: -18.273244857788086
    5. '	and' → logprob: -18.773244857788086
    6. ' и' → logprob: -19.148244857788086
    7. '```' → logprob: -19.648244857788086
    8. '<|end|>' → logprob: -20.148244857788086
    9. '1' → logprob: -20.523244857788086
    10. '0' → logprob: -20.523244857788086

Token 300: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2519337236881256
    2. ' ans' → logprob: -1.5019336938858032
    3. '(ans' → logprob: -12.376934051513672
    4. '	ans' → logprob: -14.876934051513672
    5. '_ans' → logprob: -17.001934051513672
    6. 'Ans' → logprob: -17.876934051513672
    7. 'ANS' → logprob: -18.501934051513672
    8. 'True' → logprob: -18.751934051513672
    9. 'answer' → logprob: -19.126934051513672
    10. ' True' → logprob: -20.376934051513672

Token 301: '02' (ID: 3286)
  Prédit: '02'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '02' → logprob: -4.320199877838604e-07
    2. '2' → logprob: -15.0
    3. ' ' → logprob: -17.875
    4. '[' → logprob: -19.75
    5. '002' → logprob: -20.0
    6. '```' → logprob: -20.125
    7. '   ' → logprob: -20.375
    8. '00' → logprob: -20.5
    9. '12' → logprob: -20.625
    10. '  ' → logprob: -21.0

Token 302: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10021097958087921
    2. ':
' → logprob: -2.3502109050750732
    3. ':
' → logprob: -13.475211143493652
    4. '   ' → logprob: -13.725211143493652
    5. ':

' → logprob: -14.225211143493652
    6. ' :' → logprob: -14.600211143493652
    7. ' :
' → logprob: -15.100211143493652
    8. '==' → logprob: -15.100211143493652
    9. '=' → logprob: -17.350210189819336
    10. '[' → logprob: -17.600210189819336

Token 303: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002932750794570893
    2. 'print' → logprob: -8.375293731689453
    3. '```' → logprob: -10.625293731689453
    4. ':' → logprob: -10.875293731689453
    5. ' print' → logprob: -11.000293731689453
    6. ':
' → logprob: -14.000293731689453
    7. '       ' → logprob: -14.500293731689453
    8. '  ' → logprob: -14.750293731689453
    9. '``' → logprob: -14.750293731689453
    10. ' ' → logprob: -15.000293731689453

Token 304: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.007421217858791351
    2. ' print' → logprob: -5.007421016693115
    3. '   ' → logprob: -7.257421016693115
    4. '```' → logprob: -14.257421493530273
    5. '``' → logprob: -17.382421493530273
    6. ' ' → logprob: -17.757421493530273
    7. '	print' → logprob: -17.882421493530273
    8. '.print' → logprob: -19.257421493530273
    9. '       ' → logprob: -19.507421493530273
    10. '  ' → logprob: -19.507421493530273

Token 305: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00026217024424113333
    2. '(' → logprob: -8.250262260437012
    3. ' ('' → logprob: -14.250262260437012
    4. '("' → logprob: -15.625262260437012
    5. '('(' → logprob: -16.500261306762695
    6. '(('' → logprob: -17.750261306762695
    7. '(
' → logprob: -18.750261306762695
    8. ' (' → logprob: -19.250261306762695
    9. '(`' → logprob: -20.000261306762695
    10. '(\'' → logprob: -20.250261306762695

Token 306: 'Yes' (ID: 13022)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5762530565261841
    2. 'Yes' → logprob: -0.8262530565261841
    3. '('' → logprob: -8.076252937316895
    4. ' Yes' → logprob: -13.326252937316895
    5. '(' → logprob: -14.951252937316895
    6. '"' → logprob: -15.326252937316895
    7. 'YES' → logprob: -15.451252937316895
    8. '`' → logprob: -15.701252937316895
    9. '.Yes' → logprob: -16.07625389099121
    10. '['' → logprob: -17.20125389099121

Token 307: '')
' (ID: 2515)
  Prédit: '')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')
' → logprob: -0.5930312275886536
    2. '')' → logprob: -0.8430312275886536
    3. ')' → logprob: -4.968031406402588
    4. '   ' → logprob: -5.093031406402588
    5. ')
' → logprob: -5.593031406402588
    6. '")
' → logprob: -9.71803092956543
    7. '")' → logprob: -9.96803092956543
    8. '')
' → logprob: -11.96803092956543
    9. ''' → logprob: -12.34303092956543
    10. '```' → logprob: -13.09303092956543

Token 308: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.2200749754119897e-06
    2. '   ' → logprob: -13.250001907348633
    3. '```' → logprob: -14.875001907348633
    4. '    
' → logprob: -17.250001907348633
    5. 'sys' → logprob: -17.750001907348633
    6. '
' → logprob: -17.875001907348633
    7. '   ' → logprob: -18.125001907348633
    8. '       ' → logprob: -19.000001907348633
    9. '<|end|>' → logprob: -19.125001907348633
    10. ')' → logprob: -20.125001907348633

Token 309: ' sys' (ID: 12228)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011803467059507966
    2. 'sys' (adapté à ' sys') → logprob: -6.751180171966553
    3. ' sys' → logprob: -11.751180648803711
    4. 'import' → logprob: -14.126180648803711
    5. '```' → logprob: -14.251180648803711
    6. '
' → logprob: -14.376180648803711
    7. '    
' → logprob: -16.00118064880371
    8. '	sys' → logprob: -16.00118064880371
    9. '   ' → logprob: -16.12618064880371
    10. '       ' → logprob: -17.00118064880371

Token 310: '.exit' (ID: 27076)
  Prédit: '.exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -4.320199877838604e-07
    2. ' .' → logprob: -15.875
    3. 'exit' → logprob: -15.875
    4. '.' → logprob: -16.0
    5. '.stdout' → logprob: -18.375
    6. '.quit' → logprob: -18.5
    7. '	exit' → logprob: -18.5
    8. '.EXIT' → logprob: -18.75
    9. '   ' → logprob: -19.375
    10. '.Exit' → logprob: -19.5

Token 311: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0003413031517993659
    2. '(' → logprob: -8.000341415405273
    3. '()
' → logprob: -12.250341415405273
    4. '()`' → logprob: -14.500341415405273
    5. ' ()' → logprob: -16.125341415405273
    6. '()

' → logprob: -16.500341415405273
    7. '(
' → logprob: -16.750341415405273
    8. '()>' → logprob: -17.500341415405273
    9. '()\' → logprob: -17.500341415405273
    10. '();' → logprob: -17.625341415405273

Token 312: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03847621753811836
    2. '```' → logprob: -3.2884762287139893
    3. '``' → logprob: -7.78847599029541
    4. ' if' → logprob: -11.66347599029541
    5. 'If' → logprob: -12.16347599029541
    6. 'print' → logprob: -13.41347599029541
    7. '<|end|>' → logprob: -14.16347599029541
    8. 'x' → logprob: -14.28847599029541
    9. '
' → logprob: -14.41347599029541
    10. '   ' → logprob: -14.53847599029541

Token 313: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3871639370918274
    2. ' ans' → logprob: -1.1371638774871826
    3. '(ans' → logprob: -8.137164115905762
    4. '	ans' → logprob: -15.012164115905762
    5. '_ans' → logprob: -17.137163162231445
    6. '   ' → logprob: -18.012163162231445
    7. 'ANS' → logprob: -18.012163162231445
    8. 'Ans' → logprob: -18.137163162231445
    9. ' ' → logprob: -18.137163162231445
    10. 'answer' → logprob: -18.387163162231445

Token 314: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -5.512236498361744e-07
    2. '
' → logprob: -15.375000953674316
    3. '00' → logprob: -16.125
    4. '```' → logprob: -16.125
    5. '11' → logprob: -17.25
    6. '`' → logprob: -17.5
    7. '``' → logprob: -17.875
    8. '20' → logprob: -17.875
    9. '[' → logprob: -18.375
    10. '01' → logprob: -18.375

Token 315: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.029750604182481766
    2. 'and' → logprob: -3.5297505855560303
    3. ' ' → logprob: -16.90475082397461
    4. ' ' → logprob: -18.52975082397461
    5. '	and' → logprob: -19.15475082397461
    6. '1' → logprob: -19.40475082397461
    7. '0' → logprob: -19.40475082397461
    8. '```' → logprob: -19.77975082397461
    9. '_and' → logprob: -20.27975082397461
    10. ' и' → logprob: -20.27975082397461

Token 316: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.04858805239200592
    2. 'ans' → logprob: -3.0485880374908447
    3. '(ans' → logprob: -14.298587799072266
    4. '	ans' → logprob: -17.423587799072266
    5. '_ans' → logprob: -18.298587799072266
    6. 'Ans' → logprob: -20.923587799072266
    7. 'ANS' → logprob: -21.173587799072266
    8. 'answer' → logprob: -21.673587799072266
    9. ' ' → logprob: -21.923587799072266
    10. ' ansi' → logprob: -22.423587799072266

Token 317: '11' (ID: 994)
  Prédit: '11'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -1.9361264946837764e-07
    2. 'print' → logprob: -17.625
    3. '01' → logprob: -18.125
    4. '
' → logprob: -18.375
    5. '10' → logprob: -18.5
    6. '```' → logprob: -18.875
    7. 'ele' → logprob: -19.125
    8. '011' → logprob: -19.25
    9. '1' → logprob: -19.625
    10. 'import' → logprob: -19.75

Token 318: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06196768581867218
    2. 'and' → logprob: -2.811967611312866
    3. '```' → logprob: -17.936967849731445
    4. ' ' → logprob: -18.436967849731445
    5. '&&' → logprob: -18.686967849731445
    6. ' и' → logprob: -19.436967849731445
    7. '	and' → logprob: -19.811967849731445
    8. ' ' → logprob: -19.811967849731445
    9. ' &&' → logprob: -20.811967849731445
    10. '[' → logprob: -20.936967849731445

Token 319: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.3868909478187561
    2. 'ans' → logprob: -1.1368908882141113
    3. '(ans' → logprob: -11.01189136505127
    4. '	ans' → logprob: -12.88689136505127
    5. '_ans' → logprob: -14.38689136505127
    6. 'ANS' → logprob: -15.76189136505127
    7. 'Ans' → logprob: -16.261890411376953
    8. 'True' → logprob: -16.511890411376953
    9. ' True' → logprob: -17.511890411376953
    10. 'answer' → logprob: -18.011890411376953

Token 320: '12' (ID: 899)
  Prédit: '12'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -9.088346359931165e-07
    2. 'True' → logprob: -14.000000953674316
    3. 'print' → logprob: -18.375
    4. '۱۲' → logprob: -18.5
    5. '10' → logprob: -19.0
    6. '[' → logprob: -19.0
    7. '012' → logprob: -19.125
    8. 'Yes' → logprob: -19.25
    9. 'import' → logprob: -19.25
    10. '```' → logprob: -19.375

Token 321: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06407617777585983
    2. ':
' → logprob: -2.8140761852264404
    3. '   ' → logprob: -6.189075946807861
    4. ' and' → logprob: -11.06407642364502
    5. '==' → logprob: -11.06407642364502
    6. '=' → logprob: -12.31407642364502
    7. ' :' → logprob: -12.56407642364502
    8. ' ==' → logprob: -13.18907642364502
    9. '):' → logprob: -13.18907642364502
    10. 'and' → logprob: -13.31407642364502

Token 322: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.963691804325208e-05
    2. 'print' → logprob: -11.250029563903809
    3. ' print' → logprob: -11.375029563903809
    4. '```' → logprob: -12.250029563903809
    5. '       ' → logprob: -15.375029563903809
    6. '``' → logprob: -17.125030517578125
    7. '    ' → logprob: -17.250030517578125
    8. ':' → logprob: -17.250030517578125
    9. '   ' → logprob: -17.750030517578125
    10. '  ' → logprob: -17.875030517578125

Token 323: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.3875496983528137
    2. 'print' (adapté à ' print') → logprob: -1.137549638748169
    3. 'True' → logprob: -8.01254940032959
    4. ' True' → logprob: -8.38754940032959
    5. '   ' → logprob: -9.26254940032959
    6. '```' → logprob: -10.76254940032959
    7. '(print' → logprob: -14.01254940032959
    8. '``' → logprob: -14.38754940032959
    9. '.print' → logprob: -14.76254940032959
    10. '(True' → logprob: -15.13754940032959

Token 324: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.000000953674316
    3. '("' → logprob: -18.0
    4. ' ('' → logprob: -19.5
    5. '(('' → logprob: -21.0
    6. ''' → logprob: -21.75
    7. '(
' → logprob: -22.5
    8. '(`' → logprob: -22.75
    9. '()' → logprob: -23.125
    10. '(',' → logprob: -23.375

Token 325: 'Yes' (ID: 13022)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.09566609561443329
    2. '('' → logprob: -2.9706661701202393
    3. 'Yes' → logprob: -3.2206661701202393
    4. '`' → logprob: -10.97066593170166
    5. '"' → logprob: -11.84566593170166
    6. '(' → logprob: -12.47066593170166
    7. '```' → logprob: -13.47066593170166
    8. '("' → logprob: -14.09566593170166
    9. '['' → logprob: -14.59566593170166
    10. '
' → logprob: -14.59566593170166

Token 326: '')
' (ID: 2515)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05178024247288704
    2. '()' → logprob: -3.1767802238464355
    3. '()
' → logprob: -5.3017802238464355
    4. ')' → logprob: -5.8017802238464355
    5. ')
' → logprob: -7.3017802238464355
    6. '')' → logprob: -10.676780700683594
    7. '')
' → logprob: -11.301780700683594
    8. '())
' → logprob: -12.051780700683594
    9. '       ' → logprob: -12.301780700683594
    10. '  ' → logprob: -12.426780700683594

Token 327: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.995397365652025e-05
    2. '```' → logprob: -9.375089645385742
    3. '``' → logprob: -12.750089645385742
    4. '   ' → logprob: -14.125089645385742
    5. '       ' → logprob: -14.250089645385742
    6. '
' → logprob: -15.125089645385742
    7. '    
' → logprob: -16.125089645385742
    8. '<|end|>' → logprob: -16.375089645385742
    9. '`' → logprob: -17.125089645385742
    10. 'sys' → logprob: -17.500089645385742

Token 328: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' (adapté à ' sys') → logprob: -0.003265411127358675
    2. '   ' → logprob: -5.753265380859375
    3. ' sys' → logprob: -10.003265380859375
    4. '```' → logprob: -10.378265380859375
    5. '	sys' → logprob: -12.378265380859375
    6. '``' → logprob: -12.628265380859375
    7. '(sys' → logprob: -13.503265380859375
    8. '=sys' → logprob: -13.503265380859375
    9. '       ' → logprob: -14.753265380859375
    10. 'import' → logprob: -15.378265380859375

Token 329: '.exit' (ID: 27076)
  Prédit: '.exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -9.088346359931165e-07
    2. '.' → logprob: -15.000000953674316
    3. 'exit' → logprob: -15.625000953674316
    4. '.Exit' → logprob: -16.125
    5. ' .' → logprob: -16.625
    6. '.EXIT' → logprob: -16.75
    7. '	exit' → logprob: -17.625
    8. '_exit' → logprob: -18.0
    9. '.quit' → logprob: -18.625
    10. '(exit' → logprob: -18.75

Token 330: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004089204594492912
    2. '()
' → logprob: -5.50408935546875
    3. '(' → logprob: -11.62908935546875
    4. '()`' → logprob: -14.37908935546875
    5. '()

' → logprob: -14.62908935546875
    6. '(
' → logprob: -15.00408935546875
    7. '())' → logprob: -15.75408935546875
    8. '()/' → logprob: -16.00408935546875
    9. '()\' → logprob: -16.12908935546875
    10. '()
' → logprob: -16.37908935546875

Token 331: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -3.173704271830502e-06
    2. '```' → logprob: -12.75000286102295
    3. ' if' → logprob: -15.75000286102295
    4. '
' → logprob: -16.875003814697266
    5. '``' → logprob: -16.875003814697266
    6. 'print' → logprob: -19.000003814697266
    7. 'for' → logprob: -21.125003814697266
    8. '#' → logprob: -21.375003814697266
    9. '`' → logprob: -21.750003814697266
    10. 'ifs' → logprob: -21.875003814697266

Token 332: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.006720347795635462
    2. ' ans' → logprob: -5.006720542907715
    3. '(ans' → logprob: -12.256720542907715
    4. '	ans' → logprob: -15.756720542907715
    5. ' ' → logprob: -18.2567195892334
    6. '_ans' → logprob: -19.0067195892334
    7. '   ' → logprob: -19.0067195892334
    8. 'A' → logprob: -19.1317195892334
    9. '0' → logprob: -19.2567195892334
    10. '20' → logprob: -19.3817195892334

Token 333: '20' (ID: 455)
  Prédit: '20'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: 0.0
    2. '2' → logprob: -18.25
    3. '00' → logprob: -19.75
    4. ' ' → logprob: -19.875
    5. '21' → logprob: -20.25
    6. '
' → logprob: -20.375
    7. '[' → logprob: -20.375
    8. '```' → logprob: -20.5
    9. '22' → logprob: -20.75
    10. '２０' → logprob: -21.5

Token 334: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.00861468818038702
    2. 'and' → logprob: -4.758614540100098
    3. ' ' → logprob: -17.133615493774414
    4. '0' → logprob: -17.508615493774414
    5. 'print' → logprob: -18.383615493774414
    6. '20' → logprob: -18.383615493774414
    7. '```' → logprob: -18.383615493774414
    8. 'if' → logprob: -18.508615493774414
    9. '()' → logprob: -18.633615493774414
    10. '`' → logprob: -19.133615493774414

Token 335: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.38688117265701294
    2. 'ans' → logprob: -1.1368811130523682
    3. '(ans' → logprob: -11.511880874633789
    4. '	ans' → logprob: -16.26188087463379
    5. '_ans' → logprob: -17.26188087463379
    6. 'ANS' → logprob: -18.63688087463379
    7. 'Ans' → logprob: -18.63688087463379
    8. 'answer' → logprob: -20.13688087463379
    9. 'ansi' → logprob: -21.26188087463379
    10. ' ansi' → logprob: -21.63688087463379

Token 336: '21' (ID: 2040)
  Prédit: '21'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '21' → logprob: -1.9361264946837764e-07
    2. '01' → logprob: -17.625
    3. 'print' → logprob: -18.0
    4. '
' → logprob: -18.625
    5. ' ' → logprob: -18.875
    6. '11' → logprob: -19.375
    7. '1' → logprob: -19.875
    8. '20' → logprob: -20.125
    9. '```' → logprob: -20.375
    10. '<|end|>' → logprob: -20.625

Token 337: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.023245595395565033
    2. 'and' → logprob: -3.7732455730438232
    3. ' ' → logprob: -16.523244857788086
    4. '```' → logprob: -17.398244857788086
    5. ' ' → logprob: -18.648244857788086
    6. '	and' → logprob: -18.773244857788086
    7. 'a' → logprob: -18.898244857788086
    8. 'print' → logprob: -19.273244857788086
    9. '`' → logprob: -19.398244857788086
    10. ' и' → logprob: -19.648244857788086

Token 338: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.011048408225178719
    2. ' ans' → logprob: -4.511048316955566
    3. '(ans' → logprob: -14.636048316955566
    4. '	ans' → logprob: -16.261049270629883
    5. 'True' → logprob: -18.261049270629883
    6. '_ans' → logprob: -19.636049270629883
    7. ' True' → logprob: -19.761049270629883
    8. 'and' → logprob: -20.261049270629883
    9. 'Ans' → logprob: -20.636049270629883
    10. 'ANS' → logprob: -21.261049270629883

Token 339: '22' (ID: 1709)
  Prédit: '22'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '22' → logprob: -1.2352385965641588e-05
    2. '12' → logprob: -12.500012397766113
    3. 'print' → logprob: -12.625012397766113
    4. 'True' → logprob: -12.875012397766113
    5. 'Yes' → logprob: -12.875012397766113
    6. '20' → logprob: -16.750011444091797
    7. '=True' → logprob: -17.250011444091797
    8. 'yes' → logprob: -17.625011444091797
    9. '
' → logprob: -18.625011444091797
    10. ' True' → logprob: -18.750011444091797

Token 340: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4759867191314697
    2. ':' → logprob: -0.9759867191314697
    3. '   ' → logprob: -6.475986480712891
    4. 'print' → logprob: -8.60098648071289
    5. '==' → logprob: -8.97598648071289
    6. ' ==' → logprob: -11.10098648071289
    7. ' and' → logprob: -11.35098648071289
    8. ':

' → logprob: -11.60098648071289
    9. 'and' → logprob: -12.47598648071289
    10. '  ' → logprob: -12.60098648071289

Token 341: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001434690784662962
    2. ':' → logprob: -9.625143051147461
    3. ':
' → logprob: -10.500143051147461
    4. '```' → logprob: -10.500143051147461
    5. ' print' → logprob: -11.375143051147461
    6. 'print' → logprob: -11.625143051147461
    7. '       ' → logprob: -14.500143051147461
    8. '``' → logprob: -14.500143051147461
    9. '==' → logprob: -15.125143051147461
    10. '  ' → logprob: -15.750143051147461

Token 342: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.04926665499806404
    2. ' print' → logprob: -3.0492665767669678
    3. '   ' → logprob: -7.299266815185547
    4. 'True' → logprob: -13.549266815185547
    5. ' True' → logprob: -14.799266815185547
    6. ' ' → logprob: -15.174266815185547
    7. '       ' → logprob: -15.799266815185547
    8. '    ' → logprob: -15.924266815185547
    9. '.print' → logprob: -15.924266815185547
    10. '```' → logprob: -15.924266815185547

Token 343: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -4.842555426876061e-06
    2. '(' → logprob: -12.250004768371582
    3. '("' → logprob: -17.8750057220459
    4. ' ('' → logprob: -18.2500057220459
    5. '(('' → logprob: -19.0000057220459
    6. '()' → logprob: -20.3750057220459
    7. '(`' → logprob: -21.6250057220459
    8. ''' → logprob: -21.6250057220459
    9. '(
' → logprob: -21.7500057220459
    10. '=('' → logprob: -22.7500057220459

Token 344: 'Yes' (ID: 13022)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.26938721537590027
    2. 'Yes' → logprob: -2.0193872451782227
    3. '('' → logprob: -2.2693872451782227
    4. '(' → logprob: -11.269387245178223
    5. '`' → logprob: -11.644387245178223
    6. ''S' → logprob: -12.519387245178223
    7. '"' → logprob: -13.019387245178223
    8. '```' → logprob: -13.144387245178223
    9. 'Sure' → logprob: -13.519387245178223
    10. '['' → logprob: -13.519387245178223

Token 345: '')
' (ID: 2515)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09240990877151489
    2. '()
' → logprob: -2.59240984916687
    3. '   ' → logprob: -4.342410087585449
    4. '():' → logprob: -8.21741008758545
    5. '():
' → logprob: -8.96741008758545
    6. '(' → logprob: -11.71741008758545
    7. '()`' → logprob: -12.84241008758545
    8. '```' → logprob: -12.84241008758545
    9. '()
' → logprob: -12.96741008758545
    10. '()

' → logprob: -13.21741008758545

Token 346: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.749814019713085e-06
    2. '       ' → logprob: -12.875006675720215
    3. 'sys' → logprob: -13.000006675720215
    4. '   ' → logprob: -14.125006675720215
    5. ' sys' → logprob: -14.375006675720215
    6. '  ' → logprob: -15.125006675720215
    7. '```' → logprob: -16.25000762939453
    8. ' ' → logprob: -17.12500762939453
    9. '	sys' → logprob: -17.25000762939453
    10. '    
' → logprob: -17.62500762939453

Token 347: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' (adapté à ' sys') → logprob: -0.20364899933338165
    2. '   ' → logprob: -1.7036490440368652
    3. ' sys' → logprob: -6.703649044036865
    4. 'import' → logprob: -7.203649044036865
    5. 'exit' → logprob: -9.578648567199707
    6. '=sys' → logprob: -9.953648567199707
    7. '	sys' → logprob: -10.203648567199707
    8. '(sys' → logprob: -10.203648567199707
    9. '```' → logprob: -10.203648567199707
    10. '       ' → logprob: -11.328648567199707

Token 348: '.exit' (ID: 27076)
  Prédit: '.exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -6.704273118884885e-07
    2. 'exit' → logprob: -15.000000953674316
    3. '   ' → logprob: -16.875
    4. ' .' → logprob: -17.375
    5. '	exit' → logprob: -17.5
    6. '_exit' → logprob: -17.875
    7. '.' → logprob: -18.375
    8. '.EXIT' → logprob: -18.5
    9. '.Exit' → logprob: -18.75
    10. '(exit' → logprob: -18.875

Token 349: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6931519508361816
    2. '()
' → logprob: -0.6931519508361816
    3. '(' → logprob: -12.693151473999023
    4. '()

' → logprob: -14.443151473999023
    5. '()
' → logprob: -15.068151473999023
    6. '('' → logprob: -15.068151473999023
    7. '(
' → logprob: -15.318151473999023
    8. '()`' → logprob: -15.443151473999023
    9. '())' → logprob: -16.818151473999023
    10. '())
' → logprob: -17.443151473999023

Token 350: 'ans' (ID: 616)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.4617256056226324e-05
    2. '```' → logprob: -11.375014305114746
    3. 'if' → logprob: -12.875014305114746
    4. 'else' → logprob: -15.125014305114746
    5. '#print' → logprob: -16.125015258789062
    6. ' print' → logprob: -16.500015258789062
    7. '
' → logprob: -17.125015258789062
    8. '    
' → logprob: -17.500015258789062
    9. '``' → logprob: -17.750015258789062
    10. '#' → logprob: -18.500015258789062

Token 351: '_flag' (ID: 25269)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2758183181285858
    2. '00' → logprob: -2.025818347930908
    3. '=' → logprob: -2.900818347930908
    4. '=False' → logprob: -4.025818347930908
    5. 'print' → logprob: -5.025818347930908
    6. '22' → logprob: -5.025818347930908
    7. 'False' → logprob: -5.900818347930908
    8. '0' → logprob: -6.400818347930908
    9. '23' → logprob: -6.400818347930908
    10. ' ' → logprob: -6.525818347930908

Token 352: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16035227477550507
    2. ' =' → logprob: -1.9103522300720215
    3. '=False' → logprob: -9.03535270690918
    4. '=True' → logprob: -12.78535270690918
    5. 'False' → logprob: -12.91035270690918
    6. ' ' → logprob: -13.41035270690918
    7. ' False' → logprob: -14.66035270690918
    8. '==' → logprob: -14.78535270690918
    9. 's' → logprob: -14.91035270690918
    10. 'print' → logprob: -16.16035270690918

Token 353: ' True' (ID: 6432)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.15165908634662628
    2. 'ans' → logprob: -2.1516590118408203
    3. '(ans' → logprob: -4.27665901184082
    4. '(False' → logprob: -5.15165901184082
    5. ' False' → logprob: -5.65165901184082
    6. 'True' → logprob: -7.77665901184082
    7. '((' → logprob: -8.27665901184082
    8. '(' → logprob: -8.90165901184082
    9. ' ans' → logprob: -8.90165901184082
    10. '(
' → logprob: -9.40165901184082

Token 354: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6046410799026489
    2. '
' → logprob: -0.8546410799026489
    3. ' if' → logprob: -4.229640960693359
    4. '<|end|>' → logprob: -4.979640960693359
    5. '\n' → logprob: -5.479640960693359
    6. ' 
' → logprob: -6.854640960693359
    7. 'for' → logprob: -8.10464096069336
    8. 'else' → logprob: -8.47964096069336
    9. '   ' → logprob: -8.60464096069336
    10. '  
' → logprob: -8.72964096069336

Token 355: 'ans' (ID: 616)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02363978698849678
    2. 'for' → logprob: -3.773639678955078
    3. ' if' → logprob: -8.023639678955078
    4. ' for' → logprob: -10.273639678955078
    5. ' ' → logprob: -11.523639678955078
    6. '   ' → logprob: -11.648639678955078
    7. 'print' → logprob: -12.898639678955078
    8. 'i' → logprob: -13.398639678955078
    9. '#' → logprob: -13.648639678955078
    10. '    ' → logprob: -13.898639678955078

Token 356: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -0.34870168566703796
    2. 'flag' → logprob: -1.3487017154693604
    3. '00' → logprob: -3.5987017154693604
    4. ' =' → logprob: -5.598701477050781
    5. '=' → logprob: -6.348701477050781
    6. '33' → logprob: -7.973701477050781
    7. '22' → logprob: -8.348701477050781
    8. '20' → logprob: -8.848701477050781
    9. '02' → logprob: -8.973701477050781
    10. '0' → logprob: -9.098701477050781

Token 357: '2' (ID: 17)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6877834796905518
    2. ' =' → logprob: -0.9377834796905518
    3. '=False' → logprob: -2.5627834796905518
    4. 'and' → logprob: -4.312783241271973
    5. '<|end|>' → logprob: -4.937783241271973
    6. ' and' → logprob: -6.187783241271973
    7. 'if' → logprob: -6.562783241271973
    8. '=True' → logprob: -7.062783241271973
    9. ' &=' → logprob: -7.062783241271973
    10. 'False' → logprob: -7.312783241271973

Token 358: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931662559509277
    2. ' =' → logprob: -0.6931662559509277
    3. '=False' → logprob: -11.318166732788086
    4. '=True' → logprob: -12.443166732788086
    5. ' ' → logprob: -13.193166732788086
    6. ' =)' → logprob: -15.568166732788086
    7. '==' → logprob: -15.693166732788086
    8. ')' → logprob: -15.943166732788086
    9. ' ==' → logprob: -16.068166732788086
    10. ':' → logprob: -16.193166732788086

Token 359: ' True' (ID: 6432)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.07147044688463211
    2. ' False' → logprob: -2.8214704990386963
    3. 'True' → logprob: -4.821470260620117
    4. ' True' → logprob: -6.696470260620117
    5. 'not' → logprob: -9.821470260620117
    6. 'ans' → logprob: -10.071470260620117
    7. ' not' → logprob: -10.071470260620117
    8. 'any' → logprob: -11.946470260620117
    9. '(False' → logprob: -11.946470260620117
    10. ' ans' → logprob: -12.571470260620117

Token 360: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0025405860505998135
    2. 'for' → logprob: -6.002540588378906
    3. ' if' → logprob: -9.877540588378906
    4. '
' → logprob: -12.377540588378906
    5. 'ans' → logprob: -13.127540588378906
    6. '   ' → logprob: -13.877540588378906
    7. '(
' → logprob: -14.127540588378906
    8. '#' → logprob: -14.252540588378906
    9. ' for' → logprob: -14.252540588378906
    10. '(ans' → logprob: -14.252540588378906

Token 361: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0008276138687506318
    2. 'for' → logprob: -7.125827789306641
    3. ' if' → logprob: -11.50082778930664
    4. 'ans' → logprob: -12.00082778930664
    5. '
' → logprob: -13.37582778930664
    6. '```' → logprob: -13.62582778930664
    7. 'print' → logprob: -14.00082778930664
    8. 'else' → logprob: -14.37582778930664
    9. '#' → logprob: -14.50082778930664
    10. 'import' → logprob: -14.87582778930664

Token 362: ' not' (ID: 625)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2847921550273895
    2. ' ans' → logprob: -1.409792184829712
    3. '(ans' → logprob: -5.659791946411133
    4. ' not' → logprob: -9.284791946411133
    5. 'not' → logprob: -10.284791946411133
    6. ' (' → logprob: -12.034791946411133
    7. '	ans' → logprob: -12.034791946411133
    8. '(' → logprob: -12.159791946411133
    9. ' ' → logprob: -12.534791946411133
    10. 'a' → logprob: -14.034791946411133

Token 363: ' ans' (ID: 3345)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.2795153856277466
    2. 'ans' → logprob: -1.9045153856277466
    3. ' ans' → logprob: -2.404515266418457
    4. ' (' → logprob: -5.404515266418457
    5. '(' → logprob: -9.529515266418457
    6. '((' → logprob: -10.154515266418457
    7. '	ans' → logprob: -11.904515266418457
    8. '(a' → logprob: -12.279515266418457
    9. 'ANS' → logprob: -12.529515266418457
    10. 'Ans' → logprob: -12.717015266418457

Token 364: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.00045367187703959644
    2. '01' → logprob: -7.875453472137451
    3. '02' → logprob: -9.75045394897461
    4. '10' → logprob: -11.25045394897461
    5. '11' → logprob: -13.37545394897461
    6. '20' → logprob: -15.12545394897461
    7. '0' → logprob: -15.37545394897461
    8. '```' → logprob: -16.12545394897461
    9. ' ' → logprob: -17.12545394897461
    10. '[' → logprob: -17.68795394897461

Token 365: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.04837226867675781
    2. ' and' → logprob: -3.548372268676758
    3. ':' → logprob: -4.673372268676758
    4. 'and' → logprob: -5.298372268676758
    5. 'or' → logprob: -5.548372268676758
    6. ' :' → logprob: -8.798372268676758
    7. ':
' → logprob: -9.923372268676758
    8. ' ' → logprob: -11.673372268676758
    9. '   ' → logprob: -12.673372268676758
    10. ' :
' → logprob: -13.298372268676758

Token 366: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.49890822172164917
    2. '   ' → logprob: -1.248908281326294
    3. ' ans' → logprob: -2.373908281326294
    4. ' and' → logprob: -5.498908042907715
    5. 'and' → logprob: -5.623908042907715
    6. ' or' → logprob: -5.748908042907715
    7. 'or' → logprob: -7.248908042907715
    8. ':' → logprob: -7.498908042907715
    9. ' ' → logprob: -8.998908042907715
    10. 'False' → logprob: -9.123908042907715

Token 367: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.00013238313840702176
    2. ' ans' → logprob: -9.25013256072998
    3. '   ' → logprob: -10.25013256072998
    4. '	ans' → logprob: -15.25013256072998
    5. '
' → logprob: -15.75013256072998
    6. ' ' → logprob: -15.87513256072998
    7. '  ' → logprob: -16.250131607055664
    8. 'answer' → logprob: -16.500131607055664
    9. '(ans' → logprob: -16.500131607055664
    10. '    ' → logprob: -17.625131607055664

Token 368: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -0.3137545883655548
    2. 'flag' → logprob: -1.3137545585632324
    3. '00' → logprob: -7.688754558563232
    4. ' flag' → logprob: -10.81375503540039
    5. 'Flag' → logprob: -12.56375503540039
    6. '20' → logprob: -12.56375503540039
    7. '02' → logprob: -13.18875503540039
    8. '10' → logprob: -13.31375503540039
    9. '01' → logprob: -13.81375503540039
    10. '	flag' → logprob: -14.06375503540039

Token 369: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02338407374918461
    2. ' =' → logprob: -3.7733840942382812
    3. '=False' → logprob: -9.023384094238281
    4. '2' → logprob: -11.148384094238281
    5. '=True' → logprob: -13.398384094238281
    6. 'and' → logprob: -14.023384094238281
    7. ' ' → logprob: -15.148384094238281
    8. '   ' → logprob: -15.273384094238281
    9. ' and' → logprob: -15.398384094238281
    10. '＝' → logprob: -15.523384094238281

Token 370: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -4.842555426876061e-06
    2. ' False' → logprob: -12.250004768371582
    3. '(False' → logprob: -19.8750057220459
    4. 'True' → logprob: -20.0000057220459
    5. '=False' → logprob: -20.5000057220459
    6. 'false' → logprob: -21.7500057220459
    7. 'F' → logprob: -22.3750057220459
    8. '
' → logprob: -23.2500057220459
    9. '.False' → logprob: -23.2500057220459
    10. '```' → logprob: -23.2500057220459

Token 371: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07309913635253906
    2. ' if' → logprob: -3.073099136352539
    3. '
' → logprob: -3.823099136352539
    4. ' 
' → logprob: -6.698099136352539
    5. '  
' → logprob: -7.948099136352539
    6. ' ' → logprob: -8.323099136352539
    7. '    
' → logprob: -8.448099136352539
    8. '   ' → logprob: -9.198099136352539
    9. 'elif' → logprob: -10.573099136352539
    10. ' or' → logprob: -10.698099136352539

Token 372: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00017278951418120414
    2. 'elif' → logprob: -9.62517261505127
    3. 'for' → logprob: -10.50017261505127
    4. ' if' → logprob: -10.75017261505127
    5. 'or' → logprob: -11.12517261505127
    6. 'print' → logprob: -11.25017261505127
    7. '
' → logprob: -11.62517261505127
    8. ' ' → logprob: -12.12517261505127
    9. '   ' → logprob: -12.87517261505127
    10. 'else' → logprob: -13.12517261505127

Token 373: ' not' (ID: 625)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.12565217912197113
    2. 'not' → logprob: -2.6256520748138428
    3. '11' → logprob: -3.6256520748138428
    4. '   ' → logprob: -4.375652313232422
    5. ' ans' → logprob: -5.750652313232422
    6. ' not' → logprob: -6.125652313232422
    7. '  ' → logprob: -8.250652313232422
    8. ' ' → logprob: -8.375652313232422
    9. '1' → logprob: -8.500652313232422
    10. '    ' → logprob: -9.000652313232422

Token 374: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.009440132416784763
    2. '11' → logprob: -5.384439945220947
    3. ' ans' → logprob: -5.509439945220947
    4. '   ' → logprob: -7.759439945220947
    5. ' ' → logprob: -9.009440422058105
    6. '12' → logprob: -9.884440422058105
    7. '01' → logprob: -10.259440422058105
    8. '  ' → logprob: -10.634440422058105
    9. 'answer' → logprob: -11.384440422058105
    10. '21' → logprob: -11.509440422058105

Token 375: '11' (ID: 994)
  Prédit: '11'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.0034451649989932775
    2. '01' → logprob: -5.753445148468018
    3. '10' → logprob: -8.378445625305176
    4. '21' → logprob: -12.003445625305176
    5. '011' → logprob: -12.003445625305176
    6. '22' → logprob: -12.440945625305176
    7. '02' → logprob: -12.440945625305176
    8. '20' → logprob: -12.503445625305176
    9. '   ' → logprob: -13.378445625305176
    10. '12' → logprob: -13.628445625305176

Token 376: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0068480996415019035
    2. ':
' → logprob: -5.006848335266113
    3. '   ' → logprob: -9.006848335266113
    4. ' :' → logprob: -12.756848335266113
    5. ':

' → logprob: -13.256848335266113
    6. '):' → logprob: -13.256848335266113
    7. 'and' → logprob: -13.881848335266113
    8. ' and' → logprob: -14.381848335266113
    9. '<|end|>' → logprob: -14.881848335266113
    10. '=' → logprob: -15.006848335266113

Token 377: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006244446150958538
    2. 'False' → logprob: -5.506244659423828
    3. ' False' → logprob: -6.256244659423828
    4. 'ans' → logprob: -9.131244659423828
    5. ' ans' → logprob: -9.506244659423828
    6. '=False' → logprob: -10.756244659423828
    7. ':' → logprob: -11.256244659423828
    8. '=' → logprob: -11.756244659423828
    9. '  ' → logprob: -12.506244659423828
    10. ' ' → logprob: -12.756244659423828

Token 378: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.30279165506362915
    2. ' ans' → logprob: -1.5527915954589844
    3. 'False' → logprob: -3.0527915954589844
    4. ' False' → logprob: -6.177791595458984
    5. '   ' → logprob: -8.177791595458984
    6. '	ans' → logprob: -12.427791595458984
    7. '(ans' → logprob: -13.302791595458984
    8. 'Ans' → logprob: -14.052791595458984
    9. 'false' → logprob: -14.552791595458984
    10. ' ' → logprob: -14.927791595458984

Token 379: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -0.03805858641862869
    2. 'flag' → logprob: -3.2880585193634033
    3. ' flag' → logprob: -11.163058280944824
    4. 'Flag' → logprob: -13.538058280944824
    5. 'False' → logprob: -14.288058280944824
    6. '	flag' → logprob: -15.163058280944824
    7. '   ' → logprob: -15.913058280944824
    8. 'True' → logprob: -16.78805923461914
    9. ' False' → logprob: -16.78805923461914
    10. '_' → logprob: -16.78805923461914

Token 380: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020741820335388
    2. ' =' → logprob: -2.3502073287963867
    3. '=False' → logprob: -14.225207328796387
    4. '=True' → logprob: -16.350208282470703
    5. '   ' → logprob: -17.100208282470703
    6. ' ' → logprob: -17.350208282470703
    7. '＝' → logprob: -18.850208282470703
    8. '=
' → logprob: -19.475208282470703
    9. 'False' → logprob: -19.600208282470703
    10. '=}' → logprob: -19.600208282470703

Token 381: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.029750484973192215
    2. ' False' → logprob: -3.5297505855560303
    3. '=False' → logprob: -18.77975082397461
    4. '(False' → logprob: -18.90475082397461
    5. 'True' → logprob: -20.77975082397461
    6. '_false' → logprob: -21.27975082397461
    7. '.False' → logprob: -22.52975082397461
    8. 'false' → logprob: -22.90475082397461
    9. 'F' → logprob: -23.27975082397461
    10. ' false' → logprob: -24.02975082397461

Token 382: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.004105827305465937
    2. ' if' → logprob: -5.504106044769287
    3. '
' → logprob: -10.879105567932129
    4. ' 
' → logprob: -12.379105567932129
    5. '   ' → logprob: -13.504105567932129
    6. '    
' → logprob: -14.004105567932129
    7. ' ' → logprob: -14.254105567932129
    8. 'If' → logprob: -14.629105567932129
    9. '  
' → logprob: -14.879105567932129
    10. '```' → logprob: -15.504105567932129

Token 383: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -7.52919222577475e-05
    2. ' if' → logprob: -9.500075340270996
    3. '
' → logprob: -14.750075340270996
    4. 'If' → logprob: -17.12507438659668
    5. '   ' → logprob: -17.25007438659668
    6. ' ' → logprob: -17.75007438659668
    7. 'f' → logprob: -18.87507438659668
    8. '    
' → logprob: -19.12507438659668
    9. '```' → logprob: -19.12507438659668
    10. ' 
' → logprob: -19.37507438659668

Token 384: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.20142485201358795
    2. 'not' → logprob: -1.7014248371124268
    3. '   ' → logprob: -11.576424598693848
    4. '!' → logprob: -14.326424598693848
    5. ' ' → logprob: -14.951424598693848
    6. '
' → logprob: -15.076424598693848
    7. '    ' → logprob: -15.451424598693848
    8. '	not' → logprob: -16.076425552368164
    9. '(not' → logprob: -16.076425552368164
    10. '       ' → logprob: -16.326425552368164

Token 385: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.026331186294555664
    2. ' ans' → logprob: -3.6513311862945557
    3. '21' → logprob: -11.401330947875977
    4. '22' → logprob: -11.651330947875977
    5. ' ' → logprob: -12.901330947875977
    6. '	ans' → logprob: -12.901330947875977
    7. '12' → logprob: -13.276330947875977
    8. '20' → logprob: -13.776330947875977
    9. '11' → logprob: -14.151330947875977
    10. ' not' → logprob: -14.401330947875977

Token 386: '22' (ID: 1709)
  Prédit: '22'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '22' → logprob: -3.7697225252486533e-06
    2. '20' → logprob: -12.625003814697266
    3. '11' → logprob: -15.750003814697266
    4. '2' → logprob: -16.250003814697266
    5. '21' → logprob: -16.625003814697266
    6. '220' → logprob: -17.375003814697266
    7. '

' → logprob: -17.875003814697266
    8. '
' → logprob: -18.000003814697266
    9. '```' → logprob: -18.750003814697266
    10. '[' → logprob: -19.125003814697266

Token 387: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008725902065634727
    2. ':
' → logprob: -4.758726119995117
    3. '):' → logprob: -9.383726119995117
    4. '   ' → logprob: -11.258726119995117
    5. ')' → logprob: -11.508726119995117
    6. '):
' → logprob: -13.133726119995117
    7. ' :' → logprob: -13.383726119995117
    8. '=' → logprob: -14.883726119995117
    9. ':

' → logprob: -15.258726119995117
    10. ' :
' → logprob: -16.508726119995117

Token 388: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028147439006716013
    2. 'False' → logprob: -6.627814769744873
    3. 'ans' → logprob: -7.127814769744873
    4. ' ans' → logprob: -7.502814769744873
    5. ' False' → logprob: -9.752814292907715
    6. '=' → logprob: -9.877814292907715
    7. ' =' → logprob: -12.252814292907715
    8. '(ans' → logprob: -12.252814292907715
    9. '	ans' → logprob: -12.377814292907715
    10. 'True' → logprob: -13.127814292907715

Token 389: ' ans' (ID: 3345)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.081785187125206
    2. ' False' → logprob: -2.831785202026367
    3. 'ans' (adapté à ' ans') → logprob: -4.581785202026367
    4. '   ' → logprob: -4.956785202026367
    5. ' ans' → logprob: -6.081785202026367
    6. 'True' → logprob: -9.831785202026367
    7. ' True' → logprob: -11.706785202026367
    8. ' ' → logprob: -13.581785202026367
    9. '=False' → logprob: -14.456785202026367
    10. '    ' → logprob: -14.706785202026367

Token 390: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -0.0015058133285492659
    2. 'flag' → logprob: -6.5015058517456055
    3. 'Flag' → logprob: -13.501505851745605
    4. '=' → logprob: -13.751505851745605
    5. '=False' → logprob: -15.376505851745605
    6. ' =' → logprob: -15.751505851745605
    7. '	flag' → logprob: -15.751505851745605
    8. '_FLAG' → logprob: -16.12650489807129
    9. ' flag' → logprob: -16.12650489807129
    10. '22' → logprob: -16.37650489807129

Token 391: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804344683885574
    2. ' =' → logprob: -3.28804349899292
    3. '=False' → logprob: -13.163043022155762
    4. '=True' → logprob: -17.038043975830078
    5. '==' → logprob: -17.538043975830078
    6. '=
' → logprob: -19.163043975830078
    7. '＝' → logprob: -19.538043975830078
    8. ' ' → logprob: -19.538043975830078
    9. 'False' → logprob: -19.788043975830078
    10. '=

' → logprob: -20.538043975830078

Token 392: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0004307884373702109
    2. ' False' → logprob: -7.750430583953857
    3. 'True' → logprob: -15.875431060791016
    4. '(False' → logprob: -19.875431060791016
    5. '=False' → logprob: -20.750431060791016
    6. 'F' → logprob: -21.250431060791016
    7. '.False' → logprob: -22.250431060791016
    8. '_false' → logprob: -22.500431060791016
    9. 'false' → logprob: -22.875431060791016
    10. ' True' → logprob: -23.250431060791016

Token 393: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00017267030489165336
    2. ' if' → logprob: -8.75017261505127
    3. '
' → logprob: -11.87517261505127
    4. '   ' → logprob: -13.00017261505127
    5. '```' → logprob: -13.00017261505127
    6. '  
' → logprob: -14.37517261505127
    7. '#' → logprob: -14.75017261505127
    8. '    
' → logprob: -15.00017261505127
    9. 'If' → logprob: -15.25017261505127
    10. ' ' → logprob: -15.37517261505127

Token 394: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.4378848391061183e-05
    2. ' if' → logprob: -11.250014305114746
    3. '```' → logprob: -14.000014305114746
    4. 'ans' → logprob: -15.250014305114746
    5. 'print' → logprob: -16.125015258789062
    6. '
' → logprob: -16.375015258789062
    7. '   ' → logprob: -16.750015258789062
    8. 'else' → logprob: -17.625015258789062
    9. '#' → logprob: -18.375015258789062
    10. '``' → logprob: -18.750015258789062

Token 395: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6326155066490173
    2. 'not' → logprob: -0.7576155066490173
    3. 'ans' → logprob: -12.132615089416504
    4. ' ans' → logprob: -12.257615089416504
    5. '!' → logprob: -13.507615089416504
    6. '   ' → logprob: -13.507615089416504
    7. ' ' → logprob: -13.882615089416504
    8. '(not' → logprob: -14.132615089416504
    9. '	not' → logprob: -14.757615089416504
    10. '
' → logprob: -14.757615089416504

Token 396: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -6.44443862256594e-05
    2. ' ans' → logprob: -10.125064849853516
    3. '20' → logprob: -11.500064849853516
    4. '(ans' → logprob: -11.875064849853516
    5. 'not' → logprob: -13.500064849853516
    6. '   ' → logprob: -13.625064849853516
    7. '21' → logprob: -14.000064849853516
    8. '22' → logprob: -14.125064849853516
    9. '```' → logprob: -14.625064849853516
    10. '	ans' → logprob: -14.625064849853516

Token 397: '02' (ID: 3286)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.01842406578361988
    2. '02' → logprob: -4.018424034118652
    3. '22' → logprob: -8.643424034118652
    4. '12' → logprob: -10.393424034118652
    5. '21' → logprob: -10.768424034118652
    6. '01' → logprob: -10.768424034118652
    7. '00' → logprob: -11.143424034118652
    8. '10' → logprob: -12.268424034118652
    9. '
' → logprob: -13.768424034118652
    10. '202' → logprob: -14.018424034118652

Token 398: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020070893689990044
    2. ':
' → logprob: -4.270071029663086
    3. '   ' → logprob: -5.145071029663086
    4. ' :' → logprob: -11.020071029663086
    5. '):' → logprob: -11.020071029663086
    6. ')' → logprob: -11.520071029663086
    7. '):
' → logprob: -12.020071029663086
    8. ' ' → logprob: -13.270071029663086
    9. ' :
' → logprob: -13.395071029663086
    10. '  ' → logprob: -13.395071029663086

Token 399: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03892888128757477
    2. ' ans' → logprob: -3.788928985595703
    3. 'ans' → logprob: -4.163928985595703
    4. '	ans' → logprob: -11.663928985595703
    5. '   ' → logprob: -13.538928985595703
    6. '(ans' → logprob: -13.663928985595703
    7. '       ' → logprob: -14.413928985595703
    8. '```' → logprob: -14.413928985595703
    9. ' ' → logprob: -14.788928985595703
    10. 'Ans' → logprob: -14.913928985595703

Token 400: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.20157763361930847
    2. ' ans' → logprob: -1.7015776634216309
    3. '   ' → logprob: -9.326577186584473
    4. '	ans' → logprob: -10.076577186584473
    5. '(ans' → logprob: -11.826577186584473
    6. '
' → logprob: -12.076577186584473
    7. 'Ans' → logprob: -12.201577186584473
    8. 'answer' → logprob: -12.451577186584473
    9. '_ans' → logprob: -12.451577186584473
    10. ' ' → logprob: -13.076577186584473

Token 401: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -2.1888679839321412e-05
    2. 'flag' → logprob: -10.750021934509277
    3. '_' → logprob: -15.625021934509277
    4. '=' → logprob: -16.00002098083496
    5. ' _' → logprob: -17.62502098083496
    6. '_f' → logprob: -18.12502098083496
    7. '_flags' → logprob: -18.12502098083496
    8. 'Flag' → logprob: -18.37502098083496
    9. '=_' → logprob: -18.50002098083496
    10. '_FLAG' → logprob: -18.75002098083496

Token 402: '2' (ID: 17)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740792512893677
    2. '=' → logprob: -0.9740792512893677
    3. '=False' → logprob: -13.349079132080078
    4. ' ' → logprob: -14.849079132080078
    5. '=True' → logprob: -16.224079132080078
    6. '   ' → logprob: -16.474079132080078
    7. 'False' → logprob: -17.974079132080078
    8. ' ' → logprob: -18.224079132080078
    9. '＝' → logprob: -18.349079132080078
    10. ' =
' → logprob: -18.599079132080078

Token 403: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014147937297821
    2. '=' → logprob: -1.7014148235321045
    3. '=False' → logprob: -13.701415061950684
    4. '=True' → logprob: -15.451415061950684
    5. ' ' → logprob: -15.826415061950684
    6. '   ' → logprob: -18.451414108276367
    7. ')' → logprob: -19.076414108276367
    8. ' =
' → logprob: -19.076414108276367
    9. 'False' → logprob: -19.326414108276367
    10. '＝' → logprob: -19.576414108276367

Token 404: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.676292231422849e-05
    2. ' False' → logprob: -11.000017166137695
    3. 'True' → logprob: -21.125017166137695
    4. '(False' → logprob: -21.250017166137695
    5. '=False' → logprob: -21.250017166137695
    6. 'F' → logprob: -23.000017166137695
    7. 'false' → logprob: -24.125017166137695
    8. '.False' → logprob: -24.750017166137695
    9. '_false' → logprob: -24.750017166137695
    10. 'Fa' → logprob: -25.375017166137695

Token 405: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -3.5954712075181305e-05
    2. ' if' → logprob: -10.250036239624023
    3. '```' → logprob: -15.250036239624023
    4. 'False' → logprob: -15.750036239624023
    5. '
' → logprob: -16.000036239624023
    6. '   ' → logprob: -17.375036239624023
    7. 'elif' → logprob: -17.375036239624023
    8. 'If' → logprob: -18.375036239624023
    9. 'ans' → logprob: -18.500036239624023
    10. '<|end|>' → logprob: -19.125036239624023

Token 406: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.009027552790939808
    2. ' if' → logprob: -4.759027481079102
    3. 'False' → logprob: -7.884027481079102
    4. '```' → logprob: -10.759027481079102
    5. ' False' → logprob: -11.634027481079102
    6. 'If' → logprob: -13.009027481079102
    7. '<|end|>' → logprob: -14.009027481079102
    8. 'for' → logprob: -14.509027481079102
    9. 'continue' → logprob: -14.634027481079102
    10. 'false' → logprob: -14.759027481079102

Token 407: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.20141372084617615
    2. 'not' → logprob: -1.7014137506484985
    3. '   ' → logprob: -15.451414108276367
    4. '
' → logprob: -16.201414108276367
    5. ' ' → logprob: -16.701414108276367
    6. '!' → logprob: -17.201414108276367
    7. 'ans' → logprob: -17.326414108276367
    8. ' ' → logprob: -18.201414108276367
    9. '	not' → logprob: -18.451414108276367
    10. 'n' → logprob: -18.576414108276367

Token 408: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0032029079739004374
    2. '12' → logprob: -6.00320291519165
    3. ' ans' → logprob: -7.37820291519165
    4. '	ans' → logprob: -10.003202438354492
    5. '   ' → logprob: -10.503202438354492
    6. '(ans' → logprob: -11.503202438354492
    7. '_ans' → logprob: -11.878202438354492
    8. ' ' → logprob: -12.253202438354492
    9. '11' → logprob: -13.253202438354492
    10. '  ' → logprob: -13.753202438354492

Token 409: '11' (ID: 994)
  Prédit: '12'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -1.8312570318812504e-05
    2. '10' → logprob: -11.375018119812012
    3. '11' → logprob: -12.625018119812012
    4. '
' → logprob: -13.625018119812012
    5. '

' → logprob: -14.250018119812012
    6. '01' → logprob: -15.000018119812012
    7. '21' → logprob: -15.125018119812012
    8. '```' → logprob: -15.250018119812012
    9. ' ' → logprob: -15.500018119812012
    10. '20' → logprob: -15.625018119812012

Token 410: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5400902628898621
    2. ':
' → logprob: -1.1650903224945068
    3. '   ' → logprob: -2.415090322494507
    4. '):
' → logprob: -5.540090084075928
    5. '=' → logprob: -5.665090084075928
    6. '):' → logprob: -5.665090084075928
    7. ')' → logprob: -5.790090084075928
    8. '<|end|>' → logprob: -8.040090560913086
    9. ' =' → logprob: -8.165090560913086
    10. '       ' → logprob: -8.665090560913086

Token 411: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.3596853831550106e-05
    2. '       ' → logprob: -10.875053405761719
    3. '=' → logprob: -11.750053405761719
    4. 'ans' → logprob: -11.875053405761719
    5. '  ' → logprob: -12.125053405761719
    6. '   ' → logprob: -12.750053405761719
    7. '    ' → logprob: -13.000053405761719
    8. ' ' → logprob: -13.125053405761719
    9. ')' → logprob: -13.125053405761719
    10. ' ans' → logprob: -13.625053405761719

Token 412: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.6931684017181396
    2. ' ans' → logprob: -0.6931684017181396
    3. '	ans' → logprob: -10.943168640136719
    4. '(ans' → logprob: -13.443168640136719
    5. '   ' → logprob: -13.943168640136719
    6. '_ans' → logprob: -14.068168640136719
    7. 'answer' → logprob: -15.443168640136719
    8. 'Ans' → logprob: -16.19316864013672
    9. '=' → logprob: -17.19316864013672
    10. 'ANS' → logprob: -17.44316864013672

Token 413: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -0.06197015196084976
    2. 'flag' → logprob: -2.8119702339172363
    3. 'Flag' → logprob: -13.811969757080078
    4. '_' → logprob: -15.186969757080078
    5. 'f' → logprob: -15.436969757080078
    6. ' flag' → logprob: -15.561969757080078
    7. '```' → logprob: -15.561969757080078
    8. '=' → logprob: -15.686969757080078
    9. '	flag' → logprob: -16.311969757080078
    10. 'fl' → logprob: -16.436969757080078

Token 414: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3306681513786316
    2. '=' → logprob: -1.3306682109832764
    3. ' =' → logprob: -4.080667972564697
    4. '=False' → logprob: -8.205668449401855
    5. '_flag' → logprob: -9.955668449401855
    6. '   ' → logprob: -11.455668449401855
    7. '_' → logprob: -11.580668449401855
    8. '=True' → logprob: -12.330668449401855
    9. ' ' → logprob: -12.830668449401855
    10. 'flag' → logprob: -12.955668449401855

Token 415: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407805919647217
    2. '=' → logprob: -0.9740780591964722
    3. '=False' → logprob: -14.349078178405762
    4. ' ' → logprob: -15.099078178405762
    5. '=True' → logprob: -16.724077224731445
    6. '   ' → logprob: -17.099077224731445
    7. '＝' → logprob: -18.849077224731445
    8. '.=' → logprob: -18.849077224731445
    9. ' ' → logprob: -19.224077224731445
    10. ' |=' → logprob: -19.349077224731445

Token 416: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0007099286303855479
    2. ' False' → logprob: -7.2507100105285645
    3. '=False' → logprob: -20.000709533691406
    4. '(False' → logprob: -20.125709533691406
    5. 'F' → logprob: -23.000709533691406
    6. 'True' → logprob: -23.125709533691406
    7. '_false' → logprob: -23.250709533691406
    8. 'false' → logprob: -23.625709533691406
    9. '.False' → logprob: -23.750709533691406
    10. '   ' → logprob: -24.625709533691406

Token 417: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.8624639324116288e-06
    2. ' if' → logprob: -13.250001907348633
    3. '
' → logprob: -18.125001907348633
    4. '```' → logprob: -18.750001907348633
    5. '   ' → logprob: -20.500001907348633
    6. 'If' → logprob: -20.625001907348633
    7. '``' → logprob: -21.125001907348633
    8. 'print' → logprob: -22.875001907348633
    9. 'for' → logprob: -23.750001907348633
    10. '    
' → logprob: -24.125001907348633

Token 418: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.306760805164231e-05
    2. ' if' → logprob: -11.25001335144043
    3. '```' → logprob: -20.37501335144043
    4. 'If' → logprob: -20.50001335144043
    5. '
' → logprob: -21.75001335144043
    6. '``' → logprob: -23.37501335144043
    7. '   ' → logprob: -24.37501335144043
    8. 'print' → logprob: -25.00001335144043
    9. '(if' → logprob: -25.00001335144043
    10. 'for' → logprob: -25.12501335144043

Token 419: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.25192928314208984
    2. 'not' → logprob: -1.5019292831420898
    3. '   ' → logprob: -16.001930236816406
    4. '
' → logprob: -18.876930236816406
    5. '!' → logprob: -19.501930236816406
    6. ' ' → logprob: -19.626930236816406
    7. '(not' → logprob: -19.626930236816406
    8. 'ans' → logprob: -20.501930236816406
    9. ':not' → logprob: -20.501930236816406
    10. '	not' → logprob: -21.001930236816406

Token 420: ' ans' (ID: 3345)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.011079533956944942
    2. 'ans' → logprob: -4.51107931137085
    3. ' ans' → logprob: -11.761079788208008
    4. '
' → logprob: -11.886079788208008
    5. '   ' → logprob: -12.511079788208008
    6. '```' → logprob: -12.511079788208008
    7. '`' → logprob: -13.011079788208008
    8. 'a' → logprob: -13.136079788208008
    9. ' ' → logprob: -13.261079788208008
    10. '  ' → logprob: -14.386079788208008

Token 421: '20' (ID: 455)
  Prédit: '20'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -1.9361264946837764e-07
    2. '12' → logprob: -16.25
    3. '02' → logprob: -17.625
    4. '
' → logprob: -19.25
    5. '01' → logprob: -19.25
    6. '２０' → logprob: -19.625
    7. '201' → logprob: -19.875
    8. '21' → logprob: -20.0
    9. '020' → logprob: -20.25
    10. ' ' → logprob: -20.375

Token 422: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7237085700035095
    2. '=' → logprob: -1.0987086296081543
    3. ':
' → logprob: -1.9737086296081543
    4. '   ' → logprob: -3.8487086296081543
    5. ' =' → logprob: -3.8487086296081543
    6. '=False' → logprob: -9.598708152770996
    7. ' :' → logprob: -10.848708152770996
    8. '=True' → logprob: -10.848708152770996
    9. ' :
' → logprob: -10.973708152770996
    10. '=
' → logprob: -11.348708152770996

Token 423: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23946836590766907
    2. ' =' → logprob: -1.8644683361053467
    3. '=' → logprob: -3.3644683361053467
    4. ' False' → logprob: -4.364468574523926
    5. 'False' → logprob: -4.614468574523926
    6. '=False' → logprob: -7.614468574523926
    7. ' ans' → logprob: -8.489468574523926
    8. ' ' → logprob: -10.489468574523926
    9. '    ' → logprob: -11.364468574523926
    10. 'ans' → logprob: -11.614468574523926

Token 424: ' ans' (ID: 3345)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.2015688717365265
    2. ' False' → logprob: -1.701568841934204
    3. ' ans' → logprob: -9.201568603515625
    4. 'ans' (adapté à ' ans') → logprob: -10.076568603515625
    5. '=False' → logprob: -11.451568603515625
    6. ' =' → logprob: -13.326568603515625
    7. ' false' → logprob: -15.826568603515625
    8. 'false' → logprob: -16.076568603515625
    9. '=' → logprob: -16.701568603515625
    10. '(False' → logprob: -17.576568603515625

Token 425: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -0.00017112065688706934
    2. 'flag' → logprob: -8.875170707702637
    3. 'Flag' → logprob: -10.500170707702637
    4. 'False' → logprob: -13.000170707702637
    5. '_' → logprob: -14.125170707702637
    6. ' flag' → logprob: -15.625170707702637
    7. '_FLAG' → logprob: -15.875170707702637
    8. '2' → logprob: -15.875170707702637
    9. '=False' → logprob: -16.250171661376953
    10. ' False' → logprob: -16.500171661376953

Token 426: '2' (ID: 17)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692894041538239
    2. ' =' → logprob: -2.1269290447235107
    3. '=False' → logprob: -14.12692928314209
    4. ' ' → logprob: -16.626928329467773
    5. '=True' → logprob: -17.126928329467773
    6. '=
' → logprob: -17.501928329467773
    7. '_=' → logprob: -18.251928329467773
    8. '2' → logprob: -18.376928329467773
    9. '=}' → logprob: -18.376928329467773
    10. 'False' → logprob: -18.501928329467773

Token 427: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687190413475037
    2. ' =' → logprob: -1.1368719339370728
    3. '=False' → logprob: -14.136872291564941
    4. '=True' → logprob: -16.261871337890625
    5. ' ' → logprob: -16.386871337890625
    6. '   ' → logprob: -17.011871337890625
    7. '=
' → logprob: -19.261871337890625
    8. ' =
' → logprob: -19.636871337890625
    9. ')' → logprob: -19.886871337890625
    10. '＝' → logprob: -19.886871337890625

Token 428: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.005233763717114925
    2. ' False' → logprob: -5.2552337646484375
    3. '(False' → logprob: -20.630233764648438
    4. 'True' → logprob: -21.255233764648438
    5. '=False' → logprob: -22.130233764648438
    6. '.False' → logprob: -24.255233764648438
    7. '_false' → logprob: -24.755233764648438
    8. 'F' → logprob: -24.880233764648438
    9. ' True' → logprob: -25.755233764648438
    10. '0' → logprob: -25.880233764648438

Token 429: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -6.869017852295656e-06
    2. '```' → logprob: -12.250006675720215
    3. ' if' → logprob: -14.250006675720215
    4. '
' → logprob: -14.250006675720215
    5. 'print' → logprob: -14.625006675720215
    6. '``' → logprob: -17.00000762939453
    7. 'for' → logprob: -17.12500762939453
    8. '#' → logprob: -17.25000762939453
    9. 'If' → logprob: -17.62500762939453
    10. ')' → logprob: -18.00000762939453

Token 430: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -2.45848218582978e-06
    2. '```' → logprob: -13.00000286102295
    3. ' if' → logprob: -17.000001907348633
    4. '``' → logprob: -17.750001907348633
    5. '
' → logprob: -18.250001907348633
    6. 'print' → logprob: -20.250001907348633
    7. 'else' → logprob: -21.875001907348633
    8. '   ' → logprob: -21.875001907348633
    9. ';if' → logprob: -22.000001907348633
    10. 'If' → logprob: -22.375001907348633

Token 431: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2823251187801361
    2. ' ans' → logprob: -1.4073251485824585
    3. ' not' → logprob: -7.282325267791748
    4. 'not' → logprob: -8.03232479095459
    5. '(ans' → logprob: -9.03232479095459
    6. ' ' → logprob: -10.90732479095459
    7. '   ' → logprob: -11.65732479095459
    8. '	ans' → logprob: -12.40732479095459
    9. '    ' → logprob: -13.15732479095459
    10. '  ' → logprob: -13.53232479095459

Token 432: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -0.007608989719301462
    2. 'flag' → logprob: -4.882608890533447
    3. '00' → logprob: -14.132609367370605
    4. '0' → logprob: -14.382609367370605
    5. '_' → logprob: -14.507609367370605
    6. ' flag' → logprob: -15.257609367370605
    7. 'Flag' → logprob: -15.382609367370605
    8. 'not' → logprob: -16.38260841369629
    9. '_flags' → logprob: -16.38260841369629
    10. '_FLAG' → logprob: -16.63260841369629

Token 433: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0036788135766983032
    2. ':
' → logprob: -5.628678798675537
    3. ' :' → logprob: -10.128679275512695
    4. '==' → logprob: -10.503679275512695
    5. ' ==' → logprob: -11.753679275512695
    6. ' or' → logprob: -13.253679275512695
    7. '   ' → logprob: -14.253679275512695
    8. '=' → logprob: -14.878679275512695
    9. ' :
' → logprob: -15.378679275512695
    10. 'or' → logprob: -15.503679275512695

Token 434: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.12692958116531372
    2. 'ans' → logprob: -2.126929521560669
    3. '(ans' → logprob: -13.50192928314209
    4. '	ans' → logprob: -16.126930236816406
    5. ' ' → logprob: -17.376930236816406
    6. ' ' → logprob: -19.001930236816406
    7. '_ans' → logprob: -19.126930236816406
    8. 'Ans' → logprob: -19.501930236816406
    9. '   ' → logprob: -20.126930236816406
    10. 'answer' → logprob: -20.501930236816406

Token 435: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -0.0007101670489646494
    2. 'flag' → logprob: -7.2507100105285645
    3. ' flag' → logprob: -16.250709533691406
    4. 'Flag' → logprob: -17.750709533691406
    5. '```' → logprob: -18.000709533691406
    6. '_f' → logprob: -18.375709533691406
    7. '_FLAG' → logprob: -18.500709533691406
    8. '	flag' → logprob: -18.625709533691406
    9. '_flags' → logprob: -18.875709533691406
    10. ' _' → logprob: -18.875709533691406

Token 436: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -18.125
    3. '２' → logprob: -18.5
    4. ':' → logprob: -19.0
    5. '۲' → logprob: -19.25
    6. '```' → logprob: -20.0
    7. '₂' → logprob: -20.0
    8. '_' → logprob: -20.125
    9. '٢' → logprob: -21.0625
    10. '২' → logprob: -21.4375

Token 437: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004081724211573601
    2. ':
' → logprob: -5.504081726074219
    3. '   ' → logprob: -13.754081726074219
    4. '==' → logprob: -13.754081726074219
    5. ' :' → logprob: -14.379081726074219
    6. '):' → logprob: -15.379081726074219
    7. ' ==' → logprob: -16.00408172607422
    8. ':

' → logprob: -16.50408172607422
    9. 'print' → logprob: -16.62908172607422
    10. ':
' → logprob: -17.00408172607422

Token 438: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012553498381748796
    2. 'print' → logprob: -6.751255512237549
    3. ' print' → logprob: -9.37625503540039
    4. '       ' → logprob: -15.75125503540039
    5. '```' → logprob: -15.87625503540039
    6. '	print' → logprob: -16.00125503540039
    7. '   ' → logprob: -17.37625503540039
    8. ' ' → logprob: -18.25125503540039
    9. '  ' → logprob: -18.62625503540039
    10. '
' → logprob: -18.62625503540039

Token 439: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39070674777030945
    2. 'print' (adapté à ' print') → logprob: -1.5157067775726318
    3. ' print' → logprob: -2.265706777572632
    4. '	print' → logprob: -12.015707015991211
    5. '       ' → logprob: -13.140707015991211
    6. '```' → logprob: -14.015707015991211
    7. ' ' → logprob: -14.140707015991211
    8. '   ' → logprob: -14.765707015991211
    9. '    ' → logprob: -14.890707015991211
    10. '  ' → logprob: -15.015707015991211

Token 440: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0017434853361919522
    2. '(' → logprob: -6.376743316650391
    3. '("' → logprob: -10.25174331665039
    4. ' ('' → logprob: -12.12674331665039
    5. ' (' → logprob: -15.00174331665039
    6. '(
' → logprob: -16.50174331665039
    7. '()' → logprob: -17.25174331665039
    8. '(('' → logprob: -17.25174331665039
    9. '('(' → logprob: -17.50174331665039
    10. '(\'' → logprob: -18.12674331665039

Token 441: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: 0.0
    2. ' Yes' → logprob: -18.5
    3. ''' → logprob: -19.0
    4. 'YES' → logprob: -19.75
    5. 'Ye' → logprob: -21.25
    6. 'True' → logprob: -21.5
    7. 'Yeah' → logprob: -23.25
    8. 'No' → logprob: -23.25
    9. '```' → logprob: -23.75
    10. 'Y' → logprob: -24.0

Token 442: '')
' (ID: 2515)
  Prédit: '')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')
' → logprob: -0.07890377938747406
    2. '')' → logprob: -2.5789036750793457
    3. '')
' → logprob: -11.828904151916504
    4. ')
' → logprob: -12.828904151916504
    5. 'else' → logprob: -13.203904151916504
    6. '")
' → logprob: -13.328904151916504
    7. ')' → logprob: -15.328904151916504
    8. '")' → logprob: -15.828904151916504
    9. '')

' → logprob: -16.578903198242188
    10. '   ' → logprob: -16.703903198242188

Token 443: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -7.941850526549388e-06
    2. '   ' → logprob: -11.875007629394531
    3. ' else' → logprob: -14.125007629394531
    4. 'elif' → logprob: -16.12500762939453
    5. '```' → logprob: -17.00000762939453
    6. 'sys' → logprob: -17.62500762939453
    7. 'print' → logprob: -18.25000762939453
    8. 'exit' → logprob: -18.75000762939453
    9. '}else' → logprob: -19.75000762939453
    10. 'Else' → logprob: -19.87500762939453

Token 444: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0552460215985775
    2. ':
' → logprob: -2.930246114730835
    3. '   ' → logprob: -8.305246353149414
    4. ' :' → logprob: -9.555246353149414
    5. ' :
' → logprob: -10.055246353149414
    6. ':

' → logprob: -14.180246353149414
    7. ':
' → logprob: -14.930246353149414
    8. '():
' → logprob: -15.055246353149414
    9. '():' → logprob: -15.430246353149414
    10. '    ' → logprob: -15.680246353149414

Token 445: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009938115254044533
    2. ' print' → logprob: -4.7599382400512695
    3. 'print' → logprob: -6.6349382400512695
    4. '	print' → logprob: -11.75993824005127
    5. '   ' → logprob: -14.50993824005127
    6. '    ' → logprob: -14.88493824005127
    7. '       ' → logprob: -16.134937286376953
    8. ' ' → logprob: -16.134937286376953
    9. '   ' → logprob: -16.884937286376953
    10. ' ' → logprob: -17.009937286376953

Token 446: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.5760558247566223
    2. ' print' → logprob: -0.8260558247566223
    3. '   ' → logprob: -9.076055526733398
    4. '	print' → logprob: -13.326055526733398
    5. ' ' → logprob: -15.576055526733398
    6. '    ' → logprob: -15.826055526733398
    7. '.print' → logprob: -18.0760555267334
    8. 'Print' → logprob: -18.8260555267334
    9. '(print' → logprob: -18.9510555267334
    10. '  ' → logprob: -19.2010555267334

Token 447: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0011749862460419536
    2. '(' → logprob: -6.7511749267578125
    3. '("' → logprob: -13.001174926757812
    4. ' ('' → logprob: -13.501174926757812
    5. '(
' → logprob: -13.876174926757812
    6. '('(' → logprob: -16.876174926757812
    7. '(False' → logprob: -17.001174926757812
    8. ' (' → logprob: -17.376174926757812
    9. '（' → logprob: -17.751174926757812
    10. '(('' → logprob: -17.876174926757812

Token 448: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: 0.0
    2. ''' → logprob: -18.875
    3. '"No' → logprob: -20.25
    4. ' No' → logprob: -20.375
    5. 'NO' → logprob: -20.625
    6. '_No' → logprob: -22.75
    7. '(No' → logprob: -23.0
    8. '>No' → logprob: -23.75
    9. '.No' → logprob: -24.375
    10. '')' → logprob: -25.0

Token 449: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.00016074994346126914
    2. ')' → logprob: -8.750161170959473
    3. '')
' → logprob: -13.375161170959473
    4. '")' → logprob: -14.125161170959473
    5. '()' → logprob: -17.500160217285156
    6. '('' → logprob: -18.000160217285156
    7. ''' → logprob: -18.500160217285156
    8. ' ')' → logprob: -19.125160217285156
    9. '```' → logprob: -19.375160217285156
    10. '`)' → logprob: -19.500160217285156


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 447
Tokens correctement prédits (1ère position, stricte): 241
Tokens correctement prédits (1ère position, avec adaptation): 253
Tokens correctement prédits (top 10): 413
Précision stricte (1ère position): 53.91%
Précision adaptée (1ère position): 56.60%
Précision (top 10): 92.39%
================================================================================
