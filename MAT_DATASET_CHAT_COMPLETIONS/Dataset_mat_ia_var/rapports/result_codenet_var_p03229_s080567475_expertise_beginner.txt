================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:18
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def read_int():
    return int(sys.stdin.readline())

def main():
    N = int(sys.stdin.readline())
    A = []
    for i in range(N):
        A.append(int(sys.stdin.readline()))
    A.sort()
    l1 = []
    u1 = []
    l2 = []
    u2 = []
    for i in range(N):
        if i < N // 2:
            l1.append(A[i])
        else:
            u1.append(A[i])
        if i < (N + 1) // 2:
            l2.append(A[i])
        else:
            u2.append(A[i])
    if N % 2 == 1:
        sum_u1 = sum(u1)
        sum_l1 = sum(l1)
        ans1 = (2 * sum_u1 - u1[0] - u1[1]) - 2 * sum_l1

        sum_u2 = sum(u2)
        sum_l2 = sum(l2)
        ans2 = 2 * sum_u2 - (2 * sum_l2 - l2[-1] - l2[-2])

        ans = max(ans1, ans2)
    else:
        sum_u1 = sum(u1)
        sum_l1 = sum(l1)
        ans = (2 * sum_u1 - u1[0]) - (2 * sum_l1 - l1[-1])
    print(ans)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0347585454583168
    2. '\n' → logprob: -4.034758567810059
    3. 'import' → logprob: -4.909758567810059
    4. '<|end|>' → logprob: -5.284758567810059
    5. '\' → logprob: -7.159758567810059
    6. '<|end|>' → logprob: -7.534758567810059
    7. 'newline' → logprob: -7.909758567810059
    8. ',' → logprob: -8.159758567810059
    9. '[' → logprob: -8.284758567810059
    10. '' → logprob: -8.284758567810059

Token 4: ' read' (ID: 1729)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02042287401854992
    2. ' ' → logprob: -5.39542293548584
    3. '  ' → logprob: -6.39542293548584
    4. '<|end|>' → logprob: -6.39542293548584
    5. ' process' → logprob: -6.52042293548584
    6. ' space' → logprob: -6.64542293548584
    7. ' sys' → logprob: -6.89542293548584
    8. ' main' → logprob: -6.89542293548584
    9. ' a' → logprob: -7.02042293548584
    10. ')' → logprob: -7.27042293548584

Token 5: '_int' (ID: 12285)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5789902210235596
    2. '_' → logprob: -0.8289902210235596
    3. '_line' → logprob: -6.7039899826049805
    4. ' (' → logprob: -6.8289899826049805
    5. '_file' → logprob: -8.95398998260498
    6. '_data' → logprob: -9.45398998260498
    7. '_input' → logprob: -9.45398998260498
    8. '```' → logprob: -9.45398998260498
    9. '("""' → logprob: -10.45398998260498
    10. '():' → logprob: -10.82898998260498

Token 6: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010125652886927128
    2. 's' → logprob: -5.385125637054443
    3. '():' → logprob: -6.260125637054443
    4. '_' → logprob: -7.135125637054443
    5. ':' → logprob: -7.385125637054443
    6. '):' → logprob: -7.510125637054443
    7. '```' → logprob: -7.635125637054443
    8. '(s' → logprob: -8.385126113891602
    9. '("("' → logprob: -9.010126113891602
    10. ' (' → logprob: -9.135126113891602

Token 7: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3577090799808502
    2. '():' → logprob: -1.3577090501785278
    3. '   ' → logprob: -3.8577091693878174
    4. ' return' → logprob: -5.357708930969238
    5. '()' → logprob: -5.482708930969238
    6. 'return' → logprob: -5.857708930969238
    7. '(int' → logprob: -6.482708930969238
    8. ':' → logprob: -6.482708930969238
    9. ' ' → logprob: -6.857708930969238
    10. ' (' → logprob: -6.857708930969238

Token 8: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5948106050491333
    2. ' return' → logprob: -0.9698106050491333
    3. 'return' (adapté à ' return') → logprob: -2.7198104858398438
    4. '    ' → logprob: -6.344810485839844
    5. ' ' → logprob: -7.594810485839844
    6. 'int' → logprob: -8.094810485839844
    7. '  ' → logprob: -8.344810485839844
    8. ' )' → logprob: -9.094810485839844
    9. '```' → logprob: -9.844810485839844
    10. 'n' → logprob: -10.219810485839844

Token 9: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.0036775132175534964
    2. 'int' → logprob: -5.6286773681640625
    3. ' ' → logprob: -9.503677368164062
    4. '(int' → logprob: -13.753677368164062
    5. '  ' → logprob: -14.753677368164062
    6. ' map' → logprob: -15.003677368164062
    7. ' i' → logprob: -15.128677368164062
    8. ' ' → logprob: -15.128677368164062
    9. '   ' → logprob: -15.628677368164062
    10. ' sys' → logprob: -16.503677368164062

Token 10: '(sys' (ID: 41042)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008382661268115044
    2. '(sys' → logprob: -4.883382797241211
    3. '(input' → logprob: -7.383382797241211
    4. '('' → logprob: -10.133382797241211
    5. '()' → logprob: -11.008382797241211
    6. '(
' → logprob: -11.383382797241211
    7. '("("' → logprob: -11.383382797241211
    8. '(open' → logprob: -11.508382797241211
    9. '((' → logprob: -11.883382797241211
    10. '(read' → logprob: -12.008382797241211

Token 11: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06410256028175354
    2. '.stdin' → logprob: -2.8141026496887207
    3. '.argv' → logprob: -6.314102649688721
    4. '.)' → logprob: -8.939102172851562
    5. '.readline' → logprob: -9.189102172851562
    6. '.stdout' → logprob: -10.439102172851562
    7. ' .' → logprob: -10.439102172851562
    8. '.read' → logprob: -11.439102172851562
    9. '.std' → logprob: -12.814102172851562
    10. '.")' → logprob: -12.814102172851562

Token 12: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00556848244741559
    2. '.read' → logprob: -5.255568504333496
    3. '.' → logprob: -8.005568504333496
    4. '.readlines' → logprob: -15.505568504333496
    5. ').' → logprob: -15.630568504333496
    6. '.)' → logprob: -15.755568504333496
    7. '().' → logprob: -16.00556755065918
    8. ' .' → logprob: -16.00556755065918
    9. '.Read' → logprob: -16.25556755065918
    10. ' readline' → logprob: -16.88056755065918

Token 13: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0021027985494583845
    2. '().' → logprob: -6.627102851867676
    3. '()' → logprob: -7.252102851867676
    4. '()))' → logprob: -10.627102851867676
    5. ' ())' → logprob: -10.627102851867676
    6. ')' → logprob: -11.752102851867676
    7. '()[' → logprob: -12.127102851867676
    8. '())
' → logprob: -12.502102851867676
    9. '(' → logprob: -14.252102851867676
    10. '`()' → logprob: -15.252102851867676

Token 14: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5174805521965027
    2. 'n' → logprob: -1.1424806118011475
    3. 'x' → logprob: -3.2674806118011475
    4. 'number' → logprob: -4.142480373382568
    5. '#' → logprob: -4.892480373382568
    6. 'num' → logprob: -5.017480373382568
    7. '\n' → logprob: -5.642480373382568
    8. 'value' → logprob: -5.892480373382568
    9. '
' → logprob: -6.267480373382568
    10. '```' → logprob: -6.767480373382568

Token 15: ' main' (ID: 2758)
  Prédit: ' write'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' write' → logprob: -0.2501109838485718
    2. ' read' → logprob: -2.0001111030578613
    3. ' calculate' → logprob: -3.2501111030578613
    4. ' main' → logprob: -4.000111103057861
    5. ' space' → logprob: -5.125111103057861
    6. '_' → logprob: -5.375111103057861
    7. ' process' → logprob: -5.625111103057861
    8. ' add' → logprob: -5.750111103057861
    9. ' ' → logprob: -6.000111103057861
    10. ' compute' → logprob: -6.125111103057861

Token 16: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.060887664556503296
    2. '():' → logprob: -2.935887575149536
    3. '(:' → logprob: -5.435887813568115
    4. '_' → logprob: -6.935887813568115
    5. ':' → logprob: -8.435887336730957
    6. '()' → logprob: -9.935887336730957
    7. '(_:' → logprob: -9.935887336730957
    8. '(**' → logprob: -10.060887336730957
    9. '```' → logprob: -10.185887336730957
    10. '.' → logprob: -10.310887336730957

Token 17: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007655846420675516
    2. '    
' → logprob: -5.882655620574951
    3. '\' → logprob: -6.382655620574951
    4. ' ' → logprob: -7.382655620574951
    5. '    ' → logprob: -7.507655620574951
    6. '(' → logprob: -7.757655620574951
    7. ')' → logprob: -8.25765609741211
    8. ' 
' → logprob: -8.38265609741211
    9. 'n' → logprob: -9.13265609741211
    10. '(n' → logprob: -9.25765609741211

Token 18: ' N' (ID: 478)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019578758627176285
    2. '    ' → logprob: -4.51957893371582
    3. 'n' → logprob: -5.76957893371582
    4. ' n' → logprob: -6.76957893371582
    5. 'input' → logprob: -6.89457893371582
    6. ' ' → logprob: -7.51957893371582
    7. '    
' → logprob: -7.89457893371582
    8. ' sys' → logprob: -8.26957893371582
    9. '4' → logprob: -8.39457893371582
    10. 'x' → logprob: -8.64457893371582

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15087217092514038
    2. ' ' → logprob: -2.650872230529785
    3. '=' → logprob: -3.525872230529785
    4. ')' → logprob: -4.400872230529785
    5. '   ' → logprob: -4.900872230529785
    6. ' )' → logprob: -5.525872230529785
    7. '    ' → logprob: -5.775872230529785
    8. '  ' → logprob: -5.900872230529785
    9. ' >' → logprob: -6.025872230529785
    10. ' ==' → logprob: -6.025872230529785

Token 20: ' int' (ID: 677)
  Prédit: ' read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.004357248544692993
    2. 'read' → logprob: -5.50435733795166
    3. ' int' → logprob: -8.25435733795166
    4. ' ' → logprob: -11.00435733795166
    5. 'int' → logprob: -13.37935733795166
    6. '	read' → logprob: -15.62935733795166
    7. '  ' → logprob: -16.379356384277344
    8. ' readline' → logprob: -16.879356384277344
    9. '   ' → logprob: -17.004356384277344
    10. '(read' → logprob: -17.754356384277344

Token 21: '(sys' (ID: 41042)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6074833273887634
    2. '(sys' → logprob: -0.8574833273887634
    3. '(input' → logprob: -3.482483386993408
    4. '()' → logprob: -8.73248291015625
    5. '(read' → logprob: -9.85748291015625
    6. '('' → logprob: -10.10748291015625
    7. '(
' → logprob: -11.10748291015625
    8. ' (' → logprob: -11.10748291015625
    9. '(System' → logprob: -12.23248291015625
    10. 'input' → logprob: -12.23248291015625

Token 22: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.007062846794724464
    2. '.' → logprob: -5.632062911987305
    3. '.argv' → logprob: -5.882062911987305
    4. '.stdout' → logprob: -7.507062911987305
    5. '.readline' → logprob: -9.882062911987305
    6. '.std' → logprob: -10.757062911987305
    7. '.)' → logprob: -11.382062911987305
    8. 'stdin' → logprob: -12.007062911987305
    9. ')' → logprob: -12.132062911987305
    10. ' .' → logprob: -12.507062911987305

Token 23: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.07090192288160324
    2. '.stdin' → logprob: -2.945901870727539
    3. '.' → logprob: -4.195901870727539
    4. '.read' → logprob: -7.320901870727539
    5. '.)' → logprob: -9.945901870727539
    6. '.argv' → logprob: -10.070901870727539
    7. ' .' → logprob: -10.695901870727539
    8. '.stdout' → logprob: -10.945901870727539
    9. '.Read' → logprob: -11.820901870727539
    10. '.readlines' → logprob: -11.820901870727539

Token 24: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.17112064361572266
    2. '()' → logprob: -1.9211206436157227
    3. ')' → logprob: -4.546120643615723
    4. '().' → logprob: -9.171120643615723
    5. '())
' → logprob: -9.921120643615723
    6. '(' → logprob: -10.171120643615723
    7. ' ())' → logprob: -10.921120643615723
    8. '()
' → logprob: -11.921120643615723
    9. '()))' → logprob: -13.296120643615723
    10. '())

' → logprob: -13.671120643615723

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11111324280500412
    2. '\' → logprob: -3.1111133098602295
    3. ')' → logprob: -3.6111133098602295
    4. ' ' → logprob: -4.86111307144165
    5. '```' → logprob: -4.98611307144165
    6. '\n' → logprob: -5.61111307144165
    7. '    
' → logprob: -5.73611307144165
    8. '
' → logprob: -5.98611307144165
    9. '    ' → logprob: -6.61111307144165
    10. ' for' → logprob: -7.11111307144165

Token 26: ' A' (ID: 355)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7879778742790222
    2. 'for' → logprob: -1.162977933883667
    3. ' for' → logprob: -1.912977933883667
    4. ' ' → logprob: -3.412977933883667
    5. 'n' → logprob: -4.162977695465088
    6. '\n' → logprob: -5.037977695465088
    7. ')' → logprob: -5.162977695465088
    8. '\' → logprob: -5.412977695465088
    9. '    ' → logprob: -6.037977695465088
    10. '    
' → logprob: -6.162977695465088

Token 27: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08335215598344803
    2. ' =' → logprob: -2.9583520889282227
    3. '.append' → logprob: -4.583352088928223
    4. '.' → logprob: -4.958352088928223
    5. '[:]' → logprob: -5.458352088928223
    6. '[]' → logprob: -5.583352088928223
    7. '=' → logprob: -6.833352088928223
    8. '_' → logprob: -8.083352088928223
    9. '[i' → logprob: -8.458352088928223
    10. ')' → logprob: -8.708352088928223

Token 28: ' []
' (ID: 8911)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.1933268904685974
    2. ' []' → logprob: -2.318326950073242
    3. 'list' → logprob: -3.193326950073242
    4. ' [' → logprob: -3.443326950073242
    5. '[]' → logprob: -5.693326950073242
    6. '[' → logprob: -7.318326950073242
    7. '[list' → logprob: -8.818326950073242
    8. ' ' → logprob: -9.068326950073242
    9. '[int' → logprob: -10.693326950073242
    10. ' sys' → logprob: -11.318326950073242

Token 29: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4331413507461548
    2. '   ' → logprob: -1.3081413507461548
    3. ' for' → logprob: -2.9331412315368652
    4. '\' → logprob: -3.9331412315368652
    5. '    
' → logprob: -6.058141231536865
    6. '	for' → logprob: -6.808141231536865
    7. '
' → logprob: -6.933141231536865
    8. '\n' → logprob: -7.058141231536865
    9. '' → logprob: -7.433141231536865
    10. '```' → logprob: -7.558141231536865

Token 30: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.018541447818279266
    2. ' for' → logprob: -4.14354133605957
    3. '   ' → logprob: -6.26854133605957
    4. '	for' → logprob: -8.26854133605957
    5. ' ' → logprob: -8.39354133605957
    6. 'f' → logprob: -10.26854133605957
    7. '' → logprob: -10.39354133605957
    8. ' 
' → logprob: -11.26854133605957
    9. '    ' → logprob: -11.39354133605957
    10. '    
' → logprob: -11.51854133605957

Token 31: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2196371853351593
    2. ' _' → logprob: -2.219637155532837
    3. ' i' → logprob: -2.469637155532837
    4. '_' → logprob: -5.719637393951416
    5. '  ' → logprob: -7.844637393951416
    6. ' range' → logprob: -9.219636917114258
    7. ' ‌' → logprob: -9.969636917114258
    8. ' in' → logprob: -10.469636917114258
    9. ' I' → logprob: -10.469636917114258
    10. ' N' → logprob: -11.219636917114258

Token 32: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.010101928375661373
    2. 'in' → logprob: -4.635101795196533
    3. ' ' → logprob: -8.010102272033691
    4. 'n' → logprob: -12.510102272033691
    5. '	in' → logprob: -13.135102272033691
    6. '  ' → logprob: -13.260102272033691
    7. ' i' → logprob: -13.385102272033691
    8. '_' → logprob: -13.885102272033691
    9. '```' → logprob: -15.010102272033691
    10. '0' → logprob: -15.072602272033691

Token 33: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.20142045617103577
    2. 'range' → logprob: -1.7014204263687134
    3. ' ' → logprob: -12.826420783996582
    4. '	range' → logprob: -12.951420783996582
    5. '(range' → logprob: -14.076420783996582
    6. ' xrange' → logprob: -14.201420783996582
    7. '_range' → logprob: -15.701420783996582
    8. '  ' → logprob: -15.951420783996582
    9. '.range' → logprob: -16.951419830322266
    10. '```' → logprob: -16.951419830322266

Token 34: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.038087960332632065
    2. '(N' → logprob: -3.288087844848633
    3. ' (' → logprob: -10.288087844848633
    4. '(n' → logprob: -11.913087844848633
    5. '(len' → logprob: -13.663087844848633
    6. '()' → logprob: -13.913087844848633
    7. '('' → logprob: -14.288087844848633
    8. '(range' → logprob: -14.413087844848633
    9. '(`' → logprob: -14.913087844848633
    10. ' ' → logprob: -14.913087844848633

Token 35: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0013492840807884932
    2. ')' → logprob: -6.876349449157715
    3. ' ):' → logprob: -8.501349449157715
    4. '+' → logprob: -9.876349449157715
    5. ':' → logprob: -10.501349449157715
    6. '):
' → logprob: -10.876349449157715
    7. '   ' → logprob: -11.626349449157715
    8. ' ' → logprob: -12.876349449157715
    9. ' )' → logprob: -13.751349449157715
    10. '():' → logprob: -14.251349449157715

Token 36: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23507177829742432
    2. '    ' → logprob: -1.9850717782974243
    3. '       ' → logprob: -3.9850716590881348
    4. ' 
' → logprob: -4.110071659088135
    5. '     
' → logprob: -4.610071659088135
    6. '   ' → logprob: -4.735071659088135
    7. 'A' → logprob: -5.235071659088135
    8. ' )' → logprob: -6.235071659088135
    9. ' A' → logprob: -6.235071659088135
    10. '        
' → logprob: -6.235071659088135

Token 37: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.44937190413475037
    2. 'A' (adapté à ' A') → logprob: -1.4493719339370728
    3. '   ' → logprob: -2.199371814727783
    4. '       ' → logprob: -4.949371814727783
    5. '    ' → logprob: -5.199371814727783
    6. ' line' → logprob: -6.824371814727783
    7. ' a' → logprob: -7.324371814727783
    8. 'a' → logprob: -7.699371814727783
    9. ' ' → logprob: -7.949371814727783
    10. 'line' → logprob: -8.199372291564941

Token 38: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.048637326806783676
    2. '.' → logprob: -3.0486373901367188
    3. '.ap' → logprob: -10.923637390136719
    4. '.app' → logprob: -11.048637390136719
    5. '.extend' → logprob: -11.798637390136719
    6. ' .' → logprob: -12.048637390136719
    7. '.readline' → logprob: -14.798637390136719
    8. 'append' → logprob: -15.048637390136719
    9. ').' → logprob: -15.173637390136719
    10. '.push' → logprob: -15.298637390136719

Token 39: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.225534126162529
    2. '(' → logprob: -1.6005340814590454
    3. ' (' → logprob: -9.725534439086914
    4. '(i' → logprob: -11.100534439086914
    5. 'int' → logprob: -11.600534439086914
    6. '(list' → logprob: -11.850534439086914
    7. '()' → logprob: -11.850534439086914
    8. '(
' → logprob: -11.975534439086914
    9. '(tuple' → logprob: -12.225534439086914
    10. '   ' → logprob: -13.225534439086914

Token 40: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.005942779127508402
    2. '(' → logprob: -5.1309428215026855
    3. 'sys' → logprob: -12.255942344665527
    4. '(

' → logprob: -13.255942344665527
    5. '=sys' → logprob: -13.505942344665527
    6. ' sys' → logprob: -13.755942344665527
    7. '()' → logprob: -13.880942344665527
    8. '(Sys' → logprob: -14.005942344665527
    9. '(system' → logprob: -14.130942344665527
    10. ' (' → logprob: -14.505942344665527

Token 41: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -3.91732100979425e-05
    2. '.stdout' → logprob: -11.000039100646973
    3. '(stdin' → logprob: -11.750039100646973
    4. '.readline' → logprob: -12.125039100646973
    5. 'stdin' → logprob: -12.250039100646973
    6. '.argv' → logprob: -13.125039100646973
    7. '().' → logprob: -13.625039100646973
    8. '.std' → logprob: -14.750039100646973
    9. '.stderr' → logprob: -15.125039100646973
    10. '.' → logprob: -16.12504005432129

Token 42: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0003218766360078007
    2. '().' → logprob: -8.750322341918945
    3. '.stdin' → logprob: -8.750322341918945
    4. '())' → logprob: -13.375322341918945
    5. '(stdin' → logprob: -14.000322341918945
    6. '.' → logprob: -14.250322341918945
    7. '()))' → logprob: -14.375322341918945
    8. '()' → logprob: -14.750322341918945
    9. '.readlines' → logprob: -15.000322341918945
    10. '.randint' → logprob: -16.125322341918945

Token 43: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.01843389868736267
    2. '())' → logprob: -4.018434047698975
    3. '()' → logprob: -8.393433570861816
    4. '()))
' → logprob: -10.143433570861816
    5. '))' → logprob: -11.893433570861816
    6. '())
' → logprob: -13.143433570861816
    7. '())))' → logprob: -13.143433570861816
    8. '()));' → logprob: -13.143433570861816
    9. '()),' → logprob: -13.518433570861816
    10. '().' → logprob: -13.893433570861816

Token 44: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2517705261707306
    2. '    
' → logprob: -1.7517704963684082
    3. '
' → logprob: -3.876770496368408
    4. ' 
' → logprob: -4.501770496368408
    5. '  
' → logprob: -5.126770496368408
    6. '<|end|>' → logprob: -5.376770496368408
    7. '```' → logprob: -6.626770496368408
    8. ')' → logprob: -7.126770496368408
    9. '\' → logprob: -7.126770496368408
    10. '#' → logprob: -7.626770496368408

Token 45: ' A' (ID: 355)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06929495930671692
    2. '    
' → logprob: -3.6942949295043945
    3. ' 
' → logprob: -4.9442949295043945
    4. 'for' → logprob: -4.9442949295043945
    5. ' for' → logprob: -4.9442949295043945
    6. 'A' (adapté à ' A') → logprob: -5.3192949295043945
    7. ' ' → logprob: -5.5692949295043945
    8. '    ' → logprob: -5.8192949295043945
    9. '\' → logprob: -6.3192949295043945
    10. ' A' → logprob: -6.5692949295043945

Token 46: '.sort' (ID: 19551)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.24791280925273895
    2. '<|end|>' → logprob: -1.9979127645492554
    3. '.' → logprob: -3.247912883758545
    4. '[:]' → logprob: -3.497912883758545
    5. '\[' → logprob: -5.747912883758545
    6. '.sort' → logprob: -6.247912883758545
    7. '<|end|>' → logprob: -6.497912883758545
    8. '```' → logprob: -6.497912883758545
    9. '[]' → logprob: -6.622912883758545
    10. '[len' → logprob: -7.372912883758545

Token 47: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9880644083023071
    2. '()' → logprob: -1.1130644083023071
    3. '(' → logprob: -1.9880644083023071
    4. '\' → logprob: -3.1130642890930176
    5. '[' → logprob: -3.2380642890930176
    6. '    
' → logprob: -4.238064289093018
    7. '<|end|>' → logprob: -4.363064289093018
    8. '()
' → logprob: -4.738064289093018
    9. '\n' → logprob: -4.738064289093018
    10. '    ' → logprob: -5.363064289093018

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4699990153312683
    2. '    
' → logprob: -1.969999074935913
    3. '
' → logprob: -2.344999074935913
    4. '\' → logprob: -3.219999074935913
    5. '<|end|>' → logprob: -3.219999074935913
    6. '```' → logprob: -3.969999074935913
    7. '\n' → logprob: -4.219998836517334
    8. '  
' → logprob: -5.094998836517334
    9. '' → logprob: -5.219998836517334
    10. ' 
' → logprob: -5.719998836517334

Token 49: ' l' (ID: 305)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6326646208763123
    2. '   ' → logprob: -1.882664680480957
    3. 'i' → logprob: -2.132664680480957
    4. 'if' → logprob: -2.757664680480957
    5. ' for' → logprob: -3.007664680480957
    6. '```' → logprob: -4.382664680480957
    7. 'print' → logprob: -4.757664680480957
    8. 'm' → logprob: -5.132664680480957
    9. '    
' → logprob: -5.257664680480957
    10. 'sum' → logprob: -5.382664680480957

Token 50: '1' (ID: 16)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7437117099761963
    2. 'eft' → logprob: -0.9937117099761963
    3. 'en' → logprob: -2.2437117099761963
    4. 'ast' → logprob: -3.6187117099761963
    5. ' =' → logprob: -4.868711471557617
    6. '=' → logprob: -5.993711471557617
    7. 'o' → logprob: -6.118711471557617
    8. 'et' → logprob: -6.868711471557617
    9. '```' → logprob: -6.993711471557617
    10. '[' → logprob: -6.993711471557617

Token 51: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10811526328325272
    2. '=' → logprob: -3.1081151962280273
    3. ',' → logprob: -3.3581151962280273
    4. 'en' → logprob: -4.483115196228027
    5. 'st' → logprob: -5.983115196228027
    6. 'e' → logprob: -6.233115196228027
    7. 'ength' → logprob: -6.483115196228027
    8. '[' → logprob: -6.733115196228027
    9. ' ,' → logprob: -7.358115196228027
    10. 'ist' → logprob: -7.483115196228027

Token 52: ' []
' (ID: 8911)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9293380379676819
    2. 'A' → logprob: -1.054337978363037
    3. ' A' → logprob: -1.804337978363037
    4. ' ' → logprob: -3.179337978363037
    5. 'len' → logprob: -3.304337978363037
    6. ' len' → logprob: -4.804337978363037
    7. '1' → logprob: -6.429337978363037
    8. 'N' → logprob: -7.054337978363037
    9. '[]' → logprob: -7.554337978363037
    10. ' N' → logprob: -7.679337978363037

Token 53: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.557465672492981
    2. 'l' → logprob: -1.432465672492981
    3. ' for' → logprob: -1.932465672492981
    4. '   ' → logprob: -3.5574655532836914
    5. ' l' → logprob: -4.932465553283691
    6. 'count' → logprob: -5.932465553283691
    7. 'i' → logprob: -6.932465553283691
    8. '[' → logprob: -7.307465553283691
    9. 'max' → logprob: -7.932465553283691
    10. 'prev' → logprob: -8.057465553283691

Token 54: ' u' (ID: 337)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.06551839411258698
    2. 'for' → logprob: -2.940518379211426
    3. 'i' → logprob: -6.065518379211426
    4. ' l' → logprob: -6.190518379211426
    5. 'count' → logprob: -6.440518379211426
    6. ' for' → logprob: -6.440518379211426
    7. 'left' → logprob: -7.440518379211426
    8. '   ' → logprob: -7.565518379211426
    9. 'max' → logprob: -7.815518379211426
    10. 'prev' → logprob: -8.440518379211426

Token 55: '1' (ID: 16)
  Prédit: 'pper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pper' → logprob: -0.22432895004749298
    2. 'p' → logprob: -1.7243289947509766
    3. 'n' → logprob: -4.599328994750977
    4. 's' → logprob: -5.474328994750977
    5. 'l' → logprob: -5.474328994750977
    6. 'pp' → logprob: -6.599328994750977
    7. '1' → logprob: -6.724328994750977
    8. 'nique' → logprob: -8.224328994750977
    9. 'PPER' → logprob: -8.349328994750977
    10. ' =' → logprob: -8.974328994750977

Token 56: ' =' (ID: 314)
  Prédit: 'pper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pper' → logprob: -0.6599617600440979
    2. 'p' → logprob: -0.7849617600440979
    3. '=' → logprob: -4.159961700439453
    4. ' =' → logprob: -4.784961700439453
    5. 'se' → logprob: -7.659961700439453
    6. 'PPER' → logprob: -7.909961700439453
    7. 'pp' → logprob: -8.034961700439453
    8. 's' → logprob: -8.034961700439453
    9. '=[]' → logprob: -8.409961700439453
    10. 'ser' → logprob: -8.659961700439453

Token 57: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.12063980102539062
    2. ' []' → logprob: -2.3706398010253906
    3. '0' → logprob: -4.745639801025391
    4. 'set' → logprob: -5.245639801025391
    5. 'len' → logprob: -5.995639801025391
    6. 'l' → logprob: -6.870639801025391
    7. ' ' → logprob: -7.245639801025391
    8. '[' → logprob: -7.870639801025391
    9. '[]
' → logprob: -8.12063980102539
    10. 'A' → logprob: -8.62063980102539

Token 58: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2674402892589569
    2. '   ' → logprob: -1.7674403190612793
    3. ' for' → logprob: -2.7674403190612793
    4. '    
' → logprob: -8.892439842224121
    5. '<|end|>' → logprob: -8.892439842224121
    6. ' ' → logprob: -9.142439842224121
    7. '
' → logprob: -9.267439842224121
    8. '  ' → logprob: -9.642439842224121
    9. ' 
' → logprob: -9.642439842224121
    10. '```' → logprob: -9.892439842224121

Token 59: ' l' (ID: 305)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013255408965051174
    2. ' for' → logprob: -4.763255596160889
    3. 'l' (adapté à ' l') → logprob: -6.263255596160889
    4. '   ' → logprob: -7.263255596160889
    5. 'lower' → logprob: -7.388255596160889
    6. 'f' → logprob: -7.513255596160889
    7. 'count' → logprob: -8.51325511932373
    8. 'low' → logprob: -8.51325511932373
    9. 'max' → logprob: -9.26325511932373
    10. 'i' → logprob: -9.76325511932373

Token 60: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06762468069791794
    2. 'e' → logprob: -4.067624568939209
    3. '2' → logprob: -4.192624568939209
    4. ' =' → logprob: -4.942624568939209
    5. 'o' → logprob: -5.067624568939209
    6. 'ower' → logprob: -5.067624568939209
    7. 'ow' → logprob: -5.317624568939209
    8. 'et' → logprob: -5.817624568939209
    9. '=' → logprob: -5.942624568939209
    10. '0' → logprob: -7.817624568939209

Token 61: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02066871151328087
    2. '=' → logprob: -3.8956687450408936
    3. '=[]' → logprob: -9.270668983459473
    4. ' ' → logprob: -11.270668983459473
    5. ',' → logprob: -11.270668983459473
    6. '[]' → logprob: -13.770668983459473
    7. '_' → logprob: -13.895668983459473
    8. '   ' → logprob: -14.270668983459473
    9. '[' → logprob: -14.270668983459473
    10. ']' → logprob: -14.770668983459473

Token 62: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.6337096691131592
    2. '[]' → logprob: -0.7587096691131592
    3. '0' → logprob: -7.758709907531738
    4. 'A' → logprob: -8.133709907531738
    5. ' ' → logprob: -8.508709907531738
    6. ' A' → logprob: -9.883709907531738
    7. '[]
' → logprob: -10.258709907531738
    8. '[]}' → logprob: -10.758709907531738
    9. ' [' → logprob: -11.258709907531738
    10. '[' → logprob: -11.258709907531738

Token 63: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23692858219146729
    2. 'u' → logprob: -1.6119285821914673
    3. ' u' → logprob: -5.111928462982178
    4. ' for' → logprob: -6.361928462982178
    5. 'for' → logprob: -6.486928462982178
    6. ' ' → logprob: -7.111928462982178
    7. '[]' → logprob: -7.861928462982178
    8. ' =' → logprob: -7.986928462982178
    9. '  ' → logprob: -8.486928939819336
    10. '[u' → logprob: -9.861928939819336

Token 64: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.10675723850727081
    2. ' u' → logprob: -2.356757164001465
    3. '   ' → logprob: -5.231757164001465
    4. ' for' → logprob: -7.356757164001465
    5. 'for' → logprob: -8.856757164001465
    6. ' ' → logprob: -8.856757164001465
    7. '	u' → logprob: -9.981757164001465
    8. '    ' → logprob: -10.106757164001465
    9. ' =' → logprob: -10.606757164001465
    10. '  ' → logprob: -10.731757164001465

Token 65: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00010425841173855588
    2. '1' → logprob: -9.375103950500488
    3. '=' → logprob: -12.125103950500488
    4. '_' → logprob: -13.000103950500488
    5. 's' → logprob: -13.000103950500488
    6. ' =' → logprob: -13.500103950500488
    7. '   ' → logprob: -13.750103950500488
    8. 'p' → logprob: -13.875103950500488
    9. '3' → logprob: -14.312603950500488
    10. ' ' → logprob: -14.312603950500488

Token 66: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5233832001686096
    2. '=' → logprob: -0.8983832001686096
    3. '=[]' → logprob: -8.523383140563965
    4. '.' → logprob: -10.148383140563965
    5. '.append' → logprob: -11.648383140563965
    6. '   ' → logprob: -13.023383140563965
    7. '[]' → logprob: -13.398383140563965
    8. ' .' → logprob: -13.648383140563965
    9. '.=' → logprob: -13.773383140563965
    10. '[:]' → logprob: -13.773383140563965

Token 67: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.47434818744659424
    2. ' []' → logprob: -0.9743481874465942
    3. '[' → logprob: -9.599348068237305
    4. '[]}' → logprob: -9.849348068237305
    5. '[]
' → logprob: -10.224348068237305
    6. ' ' → logprob: -10.599348068237305
    7. ' [' → logprob: -10.724348068237305
    8. '0' → logprob: -10.849348068237305
    9. ' []
' → logprob: -11.974348068237305
    10. 'A' → logprob: -12.099348068237305

Token 68: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6111109256744385
    2. 'for' → logprob: -1.4861109256744385
    3. ' for' → logprob: -1.4861109256744385
    4. '
' → logprob: -6.486110687255859
    5. '    
' → logprob: -6.861110687255859
    6. ' ' → logprob: -7.236110687255859
    7. ' 
' → logprob: -7.861110687255859
    8. '```' → logprob: -8.36111068725586
    9. '    ' → logprob: -8.73611068725586
    10. '  
' → logprob: -9.48611068725586

Token 69: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.018697306513786316
    2. ' for' → logprob: -4.268697261810303
    3. '   ' → logprob: -5.518697261810303
    4. 'f' → logprob: -9.143697738647461
    5. 'i' → logprob: -9.768697738647461
    6. '```' → logprob: -9.893697738647461
    7. 'm' → logprob: -10.018697738647461
    8. '    
' → logprob: -10.268697738647461
    9. 'max' → logprob: -10.393697738647461
    10. 'n' → logprob: -10.393697738647461

Token 70: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.45980748534202576
    2. ' a' → logprob: -1.3348075151443481
    3. ' x' → logprob: -2.7098073959350586
    4. ' ' → logprob: -3.9598073959350586
    5. ' A' → logprob: -5.084807395935059
    6. 'a' → logprob: -5.584807395935059
    7. 'i' → logprob: -5.834807395935059
    8. 'A' → logprob: -5.959807395935059
    9. ' v' → logprob: -6.584807395935059
    10. 'x' → logprob: -7.209807395935059

Token 71: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03264898806810379
    2. 'in' → logprob: -3.532649040222168
    3. ' ' → logprob: -5.907649040222168
    4. '  ' → logprob: -8.782649040222168
    5. '	in' → logprob: -12.157649040222168
    6. '   ' → logprob: -12.782649040222168
    7. 'range' → logprob: -13.032649040222168
    8. '0' → logprob: -13.532649040222168
    9. ' i' → logprob: -13.782649040222168
    10. 'In' → logprob: -13.782649040222168

Token 72: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1273738294839859
    2. 'range' → logprob: -2.1273739337921143
    3. 'A' → logprob: -8.377373695373535
    4. ' A' → logprob: -8.627373695373535
    5. ' ' → logprob: -11.377373695373535
    6. '(range' → logprob: -11.752373695373535
    7. ' xrange' → logprob: -13.002373695373535
    8. '	range' → logprob: -13.002373695373535
    9. '   ' → logprob: -13.127373695373535
    10. ')' → logprob: -13.377373695373535

Token 73: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.3491103947162628
    2. '(' → logprob: -1.2241103649139404
    3. ' (' → logprob: -8.09911060333252
    4. '(len' → logprob: -8.59911060333252
    5. '(n' → logprob: -9.09911060333252
    6. '(A' → logprob: -11.22411060333252
    7. ' ' → logprob: -11.34911060333252
    8. '(
' → logprob: -11.84911060333252
    9. ' N' → logprob: -11.84911060333252
    10. ')' → logprob: -12.34911060333252

Token 74: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0030983351171016693
    2. '):
' → logprob: -6.628098487854004
    3. '//' → logprob: -6.628098487854004
    4. '-' → logprob: -7.878098487854004
    5. ' ):' → logprob: -10.753098487854004
    6. '   ' → logprob: -10.878098487854004
    7. ' //' → logprob: -11.378098487854004
    8. ')' → logprob: -12.378098487854004
    9. '/' → logprob: -12.878098487854004
    10. ':' → logprob: -13.003098487854004

Token 75: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13994374871253967
    2. ':' → logprob: -2.389943838119507
    3. '    ' → logprob: -3.889943838119507
    4. '   ' → logprob: -4.139943599700928
    5. ' ' → logprob: -6.889943599700928
    6. '```' → logprob: -8.014944076538086
    7. ' :' → logprob: -8.389944076538086
    8. ' if' → logprob: -9.264944076538086
    9. '     
' → logprob: -9.389944076538086
    10. '     ' → logprob: -9.389944076538086

Token 76: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4777008593082428
    2. 'if' (adapté à ' if') → logprob: -1.2277008295059204
    3. '   ' → logprob: -2.60270094871521
    4. 'a' → logprob: -5.602700710296631
    5. ' a' → logprob: -5.852700710296631
    6. ' x' → logprob: -6.352700710296631
    7. ' A' → logprob: -6.852700710296631
    8. 'x' → logprob: -6.852700710296631
    9. ' for' → logprob: -6.977700710296631
    10. 'A' → logprob: -7.602700710296631

Token 77: ' i' (ID: 575)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.007452460005879402
    2. 'A' → logprob: -5.382452487945557
    3. ' ' → logprob: -6.132452487945557
    4. ' i' → logprob: -7.507452487945557
    5. ' ' → logprob: -10.007452011108398
    6. '    ' → logprob: -10.507452011108398
    7. '   ' → logprob: -12.132452011108398
    8. ' N' → logprob: -12.257452011108398
    9. 'i' → logprob: -12.257452011108398
    10. ' (' → logprob: -12.382452011108398

Token 78: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.2407769113779068
    2. ' %' → logprob: -1.9907768964767456
    3. ' ' → logprob: -3.240777015686035
    4. '%' → logprob: -3.490777015686035
    5. '<' → logprob: -5.615777015686035
    6. ' ==' → logprob: -5.990777015686035
    7. ' <=' → logprob: -6.740777015686035
    8. '0' → logprob: -8.740777015686035
    9. '==' → logprob: -9.490777015686035
    10. ' <%' → logprob: -10.240777015686035

Token 79: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.2258760780096054
    2. 'N' → logprob: -1.6008760929107666
    3. ' ' → logprob: -7.8508758544921875
    4. ' (' → logprob: -10.100875854492188
    5. '(' → logprob: -11.100875854492188
    6. '   ' → logprob: -12.225875854492188
    7. ' A' → logprob: -12.600875854492188
    8. '(N' → logprob: -12.850875854492188
    9. 'A' → logprob: -13.350875854492188
    10. ' len' → logprob: -13.975875854492188

Token 80: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.20258259773254395
    2. ' //' → logprob: -1.702582597732544
    3. ' ' → logprob: -7.827582359313965
    4. '/' → logprob: -8.452582359313965
    5. '2' → logprob: -8.952582359313965
    6. '   ' → logprob: -9.202582359313965
    7. '1' → logprob: -9.452582359313965
    8. '`' → logprob: -9.702582359313965
    9. '-' → logprob: -10.077582359313965
    10. ' ' → logprob: -10.827582359313965

Token 81: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005119665525853634
    2. '3' → logprob: -5.630119800567627
    3. ' ' → logprob: -7.130119800567627
    4. '4' → logprob: -7.255119800567627
    5. '   ' → logprob: -12.005119323730469
    6. '6' → logprob: -13.630119323730469
    7. '  ' → logprob: -13.755119323730469
    8. '```' → logprob: -14.505119323730469
    9. '1' → logprob: -14.630119323730469
    10. '<|end|>' → logprob: -14.692619323730469

Token 82: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001136881415732205
    2. '4' → logprob: -7.126136779785156
    3. '3' → logprob: -8.376136779785156
    4. ' ' → logprob: -9.251136779785156
    5. '5' → logprob: -13.001136779785156
    6. '  ' → logprob: -13.876136779785156
    7. '   ' → logprob: -14.126136779785156
    8. '```' → logprob: -14.501136779785156
    9. '10' → logprob: -14.938636779785156
    10. '6' → logprob: -15.376136779785156

Token 83: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003096546744927764
    2. '):' → logprob: -6.753096580505371
    3. ':
' → logprob: -6.878096580505371
    4. ' :' → logprob: -7.378096580505371
    5. ' and' → logprob: -9.628096580505371
    6. '   ' → logprob: -10.128096580505371
    7. '       ' → logprob: -10.378096580505371
    8. '-' → logprob: -10.503096580505371
    9. '+' → logprob: -10.753096580505371
    10. ')' → logprob: -11.378096580505371

Token 84: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0455436073243618
    2. ':' → logprob: -3.170543670654297
    3. '           ' → logprob: -6.920543670654297
    4. '<|end|>' → logprob: -8.170543670654297
    5. ':
' → logprob: -8.420543670654297
    6. '   ' → logprob: -8.670543670654297
    7. ' :' → logprob: -8.795543670654297
    8. ' and' → logprob: -8.920543670654297
    9. '        
' → logprob: -9.045543670654297
    10. ' ' → logprob: -9.420543670654297

Token 85: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.015467233955860138
    2. 'l' (adapté à ' l') → logprob: -4.265467166900635
    3. ' u' → logprob: -7.390467166900635
    4. '   ' → logprob: -8.640467643737793
    5. '           ' → logprob: -8.765467643737793
    6. 'u' → logprob: -8.765467643737793
    7. '    ' → logprob: -9.515467643737793
    8. '	l' → logprob: -9.890467643737793
    9. ' ' → logprob: -10.640467643737793
    10. '       ' → logprob: -11.390467643737793

Token 86: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.061054359131958e-06
    2. 'l' → logprob: -13.375007629394531
    3. 'ow' → logprob: -14.125007629394531
    4. 'ower' → logprob: -14.125007629394531
    5. '2' → logprob: -14.187507629394531
    6. 'o' → logprob: -14.500007629394531
    7. '```' → logprob: -14.937507629394531
    8. 'e' → logprob: -15.062507629394531
    9. '１' → logprob: -15.062507629394531
    10. 'i' → logprob: -15.125007629394531

Token 87: '.append' (ID: 3709)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3879140317440033
    2. '.append' → logprob: -1.1379140615463257
    3. ' .' → logprob: -6.887914180755615
    4. '.ap' → logprob: -11.387913703918457
    5. '.app' → logprob: -12.262913703918457
    6. '.extend' → logprob: -12.887913703918457
    7. ').' → logprob: -13.387913703918457
    8. '].' → logprob: -14.512913703918457
    9. '.add' → logprob: -15.387913703918457
    10. '.Append' → logprob: -15.512913703918457

Token 88: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0011720098555088043
    2. '(' → logprob: -6.751172065734863
    3. '(a' → logprob: -13.876172065734863
    4. '((' → logprob: -15.126172065734863
    5. '(
' → logprob: -15.501172065734863
    6. 'A' → logprob: -16.126171112060547
    7. ' (' → logprob: -16.251171112060547
    8. '(i' → logprob: -16.251171112060547
    9. '(N' → logprob: -17.501171112060547
    10. '(int' → logprob: -17.626171112060547

Token 89: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.652451464906335e-05
    2. '[' → logprob: -11.125016212463379
    3. ')' → logprob: -14.125016212463379
    4. 'i' → logprob: -15.250016212463379
    5. '[
' → logprob: -15.375016212463379
    6. ')[' → logprob: -15.750016212463379
    7. ' [' → logprob: -15.875016212463379
    8. ')i' → logprob: -16.625017166137695
    9. '```' → logprob: -17.125017166137695
    10. ' ' → logprob: -17.375017166137695

Token 90: '])
' (ID: 5169)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.6386338472366333
    2. ')' → logprob: -0.7636338472366333
    3. ' )' → logprob: -6.138633728027344
    4. '])' → logprob: -6.388633728027344
    5. ' ))' → logprob: -7.138633728027344
    6. '))
' → logprob: -8.013633728027344
    7. '   ' → logprob: -8.638633728027344
    8. ')
' → logprob: -8.638633728027344
    9. '+' → logprob: -9.013633728027344
    10. ' ' → logprob: -9.138633728027344

Token 91: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005935909226536751
    2. ' else' → logprob: -6.255936145782471
    3. 'else' → logprob: -6.380936145782471
    4. '   ' → logprob: -6.880936145782471
    5. '<|end|>' → logprob: -7.630936145782471
    6. ')' → logprob: -9.005935668945312
    7. 'elif' → logprob: -9.005935668945312
    8. ' ' → logprob: -9.130935668945312
    9. '    ' → logprob: -9.880935668945312
    10. '    
' → logprob: -9.880935668945312

Token 92: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.15850722789764404
    2. 'else' (adapté à ' else') → logprob: -2.4085073471069336
    3. '       ' → logprob: -2.9085073471069336
    4. '    ' → logprob: -7.158507347106934
    5. '   ' → logprob: -7.533507347106934
    6. ' elif' → logprob: -7.783507347106934
    7. ' ' → logprob: -9.283507347106934
    8. 'elif' → logprob: -9.533507347106934
    9. '        ' → logprob: -9.783507347106934
    10. '	else' → logprob: -10.033507347106934

Token 93: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03479135036468506
    2. ':
' → logprob: -3.9097914695739746
    3. '           ' → logprob: -4.284791469573975
    4. '       ' → logprob: -8.409790992736816
    5. '   ' → logprob: -9.909790992736816
    6. '        ' → logprob: -11.034790992736816
    7. ' :' → logprob: -11.284790992736816
    8. '          ' → logprob: -11.409790992736816
    9. ':
' → logprob: -11.409790992736816
    10. '               ' → logprob: -11.534790992736816

Token 94: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7994099259376526
    2. 'u' → logprob: -1.1744098663330078
    3. ' u' → logprob: -1.4244098663330078
    4. '   ' → logprob: -8.049409866333008
    5. '       ' → logprob: -8.924409866333008
    6. ' ' → logprob: -9.424409866333008
    7. '	u' → logprob: -9.674409866333008
    8. '               ' → logprob: -10.549409866333008
    9. ' ' → logprob: -10.674409866333008
    10. '          ' → logprob: -10.799409866333008

Token 95: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.2615615427494049
    2. ' u' → logprob: -1.6365615129470825
    3. 'l' → logprob: -3.511561632156372
    4. ' l' → logprob: -5.386561393737793
    5. '   ' → logprob: -7.136561393737793
    6. ' ' → logprob: -9.511561393737793
    7. '           ' → logprob: -9.761561393737793
    8. '    ' → logprob: -10.136561393737793
    9. '  ' → logprob: -10.511561393737793
    10. '	u' → logprob: -10.636561393737793

Token 96: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005234475247561932
    2. '2' → logprob: -5.255234241485596
    3. '.append' → logprob: -15.505234718322754
    4. '```' → logprob: -15.880234718322754
    5. 'per' → logprob: -16.317733764648438
    6. 'n' → logprob: -17.067733764648438
    7. 'pper' → logprob: -17.067733764648438
    8. '１' → logprob: -17.317733764648438
    9. '   ' → logprob: -17.442733764648438
    10. 'append' → logprob: -17.817733764648438

Token 97: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -7.696077227592468e-05
    2. '.' → logprob: -9.625077247619629
    3. ' .' → logprob: -12.875077247619629
    4. '.extend' → logprob: -13.125077247619629
    5. ').' → logprob: -13.250077247619629
    6. '.setdefault' → logprob: -13.375077247619629
    7. '.app' → logprob: -13.625077247619629
    8. '.add' → logprob: -14.125077247619629
    9. '.push' → logprob: -14.875077247619629
    10. '.Append' → logprob: -15.250077247619629

Token 98: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0002964935847558081
    2. '(' → logprob: -8.125296592712402
    3. '((' → logprob: -15.500296592712402
    4. 'A' → logprob: -16.250295639038086
    5. '(
' → logprob: -16.875295639038086
    6. ' (' → logprob: -17.000295639038086
    7. '(a' → logprob: -17.125295639038086
    8. '(int' → logprob: -18.125295639038086
    9. '('' → logprob: -19.125295639038086
    10. '(

' → logprob: -19.250295639038086

Token 99: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1472419600977446e-06
    2. ')' → logprob: -14.500000953674316
    3. '[' → logprob: -14.875000953674316
    4. '[j' → logprob: -16.125001907348633
    5. ')[' → logprob: -17.500001907348633
    6. '```' → logprob: -17.750001907348633
    7. '   ' → logprob: -18.000001907348633
    8. ')i' → logprob: -18.125001907348633
    9. '[I' → logprob: -18.375001907348633
    10. ' [' → logprob: -18.500001907348633

Token 100: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -7.958325295476243e-05
    2. ')' → logprob: -9.875079154968262
    3. ')])' → logprob: -11.625079154968262
    4. '])
' → logprob: -11.750079154968262
    5. ']' → logprob: -12.000079154968262
    6. ']))' → logprob: -14.000079154968262
    7. ' ])' → logprob: -14.000079154968262
    8. ')]' → logprob: -14.125079154968262
    9. '))' → logprob: -14.250079154968262
    10. ']])' → logprob: -14.625079154968262

Token 101: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2813514471054077
    2. '
' → logprob: -2.4063515663146973
    3. '       ' → logprob: -2.5313515663146973
    4. '<|end|>' → logprob: -2.9063515663146973
    5. '    
' → logprob: -4.281351566314697
    6. '  
' → logprob: -6.531351566314697
    7. '<|end|>' → logprob: -7.281351566314697
    8. '\n' → logprob: -7.281351566314697
    9. '    ' → logprob: -7.406351566314697
    10. '```' → logprob: -7.656351566314697

Token 102: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1409639120101929
    2. '<|end|>' → logprob: -1.1409639120101929
    3. '       ' → logprob: -1.7659639120101929
    4. '
' → logprob: -1.8909639120101929
    5. ' ' → logprob: -4.390964031219482
    6. ' else' → logprob: -5.265964031219482
    7. 'else' → logprob: -5.265964031219482
    8. '    ' → logprob: -6.265964031219482
    9. 'elif' → logprob: -6.265964031219482
    10. '<|end|>' → logprob: -6.265964031219482

Token 103: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.007456830702722073
    2. 'i' → logprob: -5.6324567794799805
    3. ' ' → logprob: -6.3824567794799805
    4. ' A' → logprob: -6.5074567794799805
    5. 'A' → logprob: -8.63245677947998
    6. ' N' → logprob: -8.63245677947998
    7. '   ' → logprob: -9.63245677947998
    8. '  ' → logprob: -9.88245677947998
    9. ' (' → logprob: -9.88245677947998
    10. '    ' → logprob: -10.75745677947998

Token 104: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.38954493403434753
    2. '<' → logprob: -1.13954496383667
    3. ' >=' → logprob: -6.13954496383667
    4. '>=' → logprob: -8.264544486999512
    5. ' ' → logprob: -9.514544486999512
    6. '<|end|>' → logprob: -9.889544486999512
    7. '>' → logprob: -10.139544486999512
    8. '<N' → logprob: -10.639544486999512
    9. ' >' → logprob: -11.014544486999512
    10. '%' → logprob: -11.264544486999512

Token 105: ' (' (ID: 350)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.9648058414459229
    2. ' N' → logprob: -0.9648058414459229
    3. ' (' → logprob: -1.9648058414459229
    4. '(N' → logprob: -2.839805841445923
    5. '(' → logprob: -3.839805841445923
    6. '3' → logprob: -4.589805603027344
    7. ' ' → logprob: -5.089805603027344
    8. '2' → logprob: -7.589805603027344
    9. '   ' → logprob: -8.089805603027344
    10. '1' → logprob: -8.214805603027344

Token 106: 'N' (ID: 45)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.37960273027420044
    2. '(' → logprob: -2.0046026706695557
    3. 'N' → logprob: -2.1296026706695557
    4. '(N' → logprob: -3.7546026706695557
    5. ' ' → logprob: -3.8796026706695557
    6. ' (' → logprob: -4.379602909088135
    7. ' N' → logprob: -5.629602909088135
    8. '   ' → logprob: -6.629602909088135
    9. '9' → logprob: -8.004602432250977
    10. '  ' → logprob: -9.254602432250977

Token 107: ' +' (ID: 659)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.5278540253639221
    2. '//' → logprob: -1.1528539657592773
    3. '*' → logprob: -3.5278539657592773
    4. ' ' → logprob: -3.6528539657592773
    5. ' *' → logprob: -3.7778539657592773
    6. '+' → logprob: -5.527853965759277
    7. '   ' → logprob: -5.777853965759277
    8. '1' → logprob: -6.027853965759277
    9. '-' → logprob: -6.152853965759277
    10. ' +' → logprob: -6.652853965759277

Token 108: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04475513473153114
    2. '2' → logprob: -3.294755220413208
    3. '3' → logprob: -5.544754981994629
    4. ' ' → logprob: -6.044754981994629
    5. '4' → logprob: -8.294754981994629
    6. '   ' → logprob: -9.544754981994629
    7. '5' → logprob: -10.294754981994629
    8. '  ' → logprob: -10.669754981994629
    9. '7' → logprob: -11.669754981994629
    10. '-' → logprob: -11.919754981994629

Token 109: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00504862517118454
    2. '2' → logprob: -5.505048751831055
    3. '3' → logprob: -7.005048751831055
    4. '4' → logprob: -10.505048751831055
    5. '0' → logprob: -11.630048751831055
    6. '   ' → logprob: -11.630048751831055
    7. ' ' → logprob: -11.880048751831055
    8. '5' → logprob: -12.380048751831055
    9. '-' → logprob: -12.880048751831055
    10. '  ' → logprob: -13.755048751831055

Token 110: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016147449612617493
    2. ')//' → logprob: -4.141147613525391
    3. ' )' → logprob: -9.26614761352539
    4. '//' → logprob: -11.14114761352539
    5. ' //' → logprob: -13.76614761352539
    6. ')
' → logprob: -14.01614761352539
    7. '   ' → logprob: -14.39114761352539
    8. '2' → logprob: -14.51614761352539
    9. '）' → logprob: -15.26614761352539
    10. ' ' → logprob: -15.39114761352539

Token 111: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.12888546288013458
    2. ' //' → logprob: -2.378885507583618
    3. ')' → logprob: -3.753885507583618
    4. ')//' → logprob: -5.628885269165039
    5. '2' → logprob: -8.003885269165039
    6. '   ' → logprob: -8.128885269165039
    7. '<|end|>' → logprob: -8.503885269165039
    8. '```' → logprob: -9.003885269165039
    9. ' ' → logprob: -9.378885269165039
    10. '<|end|>' → logprob: -10.003885269165039

Token 112: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.31331512331962585
    2. ' ' → logprob: -1.3133151531219482
    3. '   ' → logprob: -10.688315391540527
    4. '    ' → logprob: -11.438315391540527
    5. '1' → logprob: -12.438315391540527
    6. '```' → logprob: -12.438315391540527
    7. ' ' → logprob: -13.000815391540527
    8. ')' → logprob: -13.500815391540527
    9. '3' → logprob: -14.063315391540527
    10. '  ' → logprob: -14.188315391540527

Token 113: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00026896485360339284
    2. ' ' → logprob: -8.250268936157227
    3. '   ' → logprob: -12.250268936157227
    4. '  ' → logprob: -14.312768936157227
    5. '1' → logprob: -14.500268936157227
    6. '```' → logprob: -14.750268936157227
    7. '3' → logprob: -15.312768936157227
    8. '4' → logprob: -15.500268936157227
    9. '２' → logprob: -16.000268936157227
    10. '    ' → logprob: -16.125268936157227

Token 114: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5785893201828003
    2. ':
' → logprob: -0.8285893201828003
    3. '):
' → logprob: -6.82858943939209
    4. '       ' → logprob: -7.32858943939209
    5. '   ' → logprob: -8.20358943939209
    6. '           ' → logprob: -8.20358943939209
    7. '):' → logprob: -8.57858943939209
    8. ' :
' → logprob: -9.82858943939209
    9. '-' → logprob: -10.32858943939209
    10. ':
' → logprob: -10.95358943939209

Token 115: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009910109220072627
    2. '       ' → logprob: -7.750990867614746
    3. ':' → logprob: -8.000990867614746
    4. '   ' → logprob: -9.125990867614746
    5. ' l' → logprob: -9.625990867614746
    6. '          ' → logprob: -11.625990867614746
    7. ' u' → logprob: -11.625990867614746
    8. '               ' → logprob: -12.375990867614746
    9. 'u' → logprob: -12.500990867614746
    10. ' ' → logprob: -12.500990867614746

Token 116: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.5422882437705994
    2. 'l' (adapté à ' l') → logprob: -0.9172882437705994
    3. '           ' → logprob: -4.667288303375244
    4. '   ' → logprob: -5.167288303375244
    5. 'u' → logprob: -6.042288303375244
    6. ' u' → logprob: -7.167288303375244
    7. '       ' → logprob: -8.292287826538086
    8. ' ' → logprob: -8.792287826538086
    9. '  ' → logprob: -9.417287826538086
    10. '	l' → logprob: -9.417287826538086

Token 117: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.011055129580199718
    2. '1' → logprob: -4.511054992675781
    3. '.append' → logprob: -12.011054992675781
    4. '```' → logprob: -15.323554992675781
    5. ' ' → logprob: -15.386054992675781
    6. '   ' → logprob: -15.511054992675781
    7. 'append' → logprob: -16.26105499267578
    8. '２' → logprob: -16.76105499267578
    9. '₂' → logprob: -16.76105499267578
    10. '۲' → logprob: -17.44855499267578

Token 118: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0008110555354505777
    2. '.' → logprob: -7.1258111000061035
    3. ' .' → logprob: -12.750810623168945
    4. '<|end|>' → logprob: -13.875810623168945
    5. 'append' → logprob: -14.250810623168945
    6. '.app' → logprob: -14.250810623168945
    7. '.setdefault' → logprob: -14.625810623168945
    8. 'app' → logprob: -16.000810623168945
    9. '.Append' → logprob: -16.125810623168945
    10. ').' → logprob: -16.125810623168945

Token 119: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.00010223194840364158
    2. 'A' → logprob: -9.625102043151855
    3. '(' → logprob: -10.250102043151855
    4. '(
' → logprob: -15.375102043151855
    5. ' (' → logprob: -15.500102043151855
    6. ' A' → logprob: -15.875102043151855
    7. '   ' → logprob: -16.625102996826172
    8. '(a' → logprob: -17.250102996826172
    9. '((' → logprob: -17.375102996826172
    10. '(int' → logprob: -18.000102996826172

Token 120: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2664456789934775e-06
    2. '[' → logprob: -13.875000953674316
    3. ')' → logprob: -16.500001907348633
    4. '[I' → logprob: -16.625001907348633
    5. '[int' → logprob: -17.375001907348633
    6. '   ' → logprob: -18.375001907348633
    7. '[
' → logprob: -18.500001907348633
    8. '[A' → logprob: -18.500001907348633
    9. 'i' → logprob: -18.625001907348633
    10. ')[' → logprob: -18.875001907348633

Token 121: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012120374478399754
    2. '])' → logprob: -4.512120246887207
    3. ')
' → logprob: -7.012120246887207
    4. '       ' → logprob: -9.262120246887207
    5. ' )' → logprob: -10.512120246887207
    6. '))' → logprob: -10.762120246887207
    7. '])
' → logprob: -11.887120246887207
    8. '）' → logprob: -12.137120246887207
    9. '})' → logprob: -12.387120246887207
    10. '   ' → logprob: -12.762120246887207

Token 122: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026318999007344246
    2. 'else' → logprob: -6.377631664276123
    3. ' else' → logprob: -7.002631664276123
    4. '<|end|>' → logprob: -11.127632141113281
    5. '   ' → logprob: -13.252632141113281
    6. '```' → logprob: -13.502632141113281
    7. ')' → logprob: -13.752632141113281
    8. '      ' → logprob: -15.752632141113281
    9. '	else' → logprob: -15.877632141113281
    10. ' ' → logprob: -16.25263214111328

Token 123: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6993598341941833
    2. ' else' → logprob: -1.0743598937988281
    3. 'else' (adapté à ' else') → logprob: -1.8243598937988281
    4. ' u' → logprob: -8.949359893798828
    5. '   ' → logprob: -9.699359893798828
    6. 'u' → logprob: -10.324359893798828
    7. ' ' → logprob: -11.699359893798828
    8. '	else' → logprob: -12.074359893798828
    9. '```' → logprob: -12.324359893798828
    10. '<|end|>' → logprob: -12.324359893798828

Token 124: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.42293617129325867
    2. ':' → logprob: -1.172936201095581
    3. ':
' → logprob: -3.422936201095581
    4. '   ' → logprob: -6.547935962677002
    5. ' u' → logprob: -7.047935962677002
    6. '       ' → logprob: -8.79793643951416
    7. '          ' → logprob: -9.17293643951416
    8. '               ' → logprob: -9.79793643951416
    9. 'u' → logprob: -10.17293643951416
    10. ' ' → logprob: -10.92293643951416

Token 125: '           ' (ID: 352)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.8054835796356201
    2. ' u' → logprob: -0.8054835796356201
    3. '           ' → logprob: -2.43048357963562
    4. '   ' → logprob: -4.055483818054199
    5. '       ' → logprob: -7.430483818054199
    6. '	u' → logprob: -8.8054838180542
    7. ' ' → logprob: -9.8054838180542
    8. '(u' → logprob: -10.1804838180542
    9. '               ' → logprob: -10.4304838180542
    10. '          ' → logprob: -11.0554838180542

Token 126: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.04859350249171257
    2. ' u' → logprob: -3.048593521118164
    3. '           ' → logprob: -12.673593521118164
    4. '   ' → logprob: -13.173593521118164
    5. '	u' → logprob: -14.798593521118164
    6. '       ' → logprob: -15.298593521118164
    7. '
' → logprob: -16.548593521118164
    8. '  ' → logprob: -16.673593521118164
    9. '    ' → logprob: -16.673593521118164
    10. '          ' → logprob: -17.173593521118164

Token 127: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.7729658540920354e-05
    2. '1' → logprob: -10.500027656555176
    3. '```' → logprob: -16.125028610229492
    4. '_' → logprob: -17.875028610229492
    5. '２' → logprob: -18.187528610229492
    6. '   ' → logprob: -18.312528610229492
    7. '.append' → logprob: -18.375028610229492
    8. '۲' → logprob: -18.500028610229492
    9. ' ' → logprob: -18.687528610229492
    10. '₂' → logprob: -19.000028610229492

Token 128: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.1398757123970427e-05
    2. '.' → logprob: -11.500011444091797
    3. 'append' → logprob: -14.000011444091797
    4. ').' → logprob: -15.375011444091797
    5. '.app' → logprob: -16.625011444091797
    6. '.setdefault' → logprob: -16.750011444091797
    7. ' .' → logprob: -17.125011444091797
    8. '.push' → logprob: -18.375011444091797
    9. '.Append' → logprob: -18.500011444091797
    10. '	append' → logprob: -18.625011444091797

Token 129: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -3.173704271830502e-06
    2. '(' → logprob: -13.25000286102295
    3. 'A' → logprob: -13.50000286102295
    4. '(
' → logprob: -18.250003814697266
    5. ' (' → logprob: -19.625003814697266
    6. ')' → logprob: -20.625003814697266
    7. '(a' → logprob: -20.625003814697266
    8. '(B' → logprob: -20.875003814697266
    9. '((' → logprob: -21.250003814697266
    10. '```' → logprob: -21.250003814697266

Token 130: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.849109119386412e-06
    2. 'i' → logprob: -12.125009536743164
    3. ')' → logprob: -12.750009536743164
    4. '[' → logprob: -14.000009536743164
    5. '[I' → logprob: -15.875009536743164
    6. ']' → logprob: -16.000009536743164
    7. '```' → logprob: -16.000009536743164
    8. ')i' → logprob: -16.375009536743164
    9. '[j' → logprob: -17.125009536743164
    10. '(i' → logprob: -17.250009536743164

Token 131: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.11331460624933243
    2. ')' → logprob: -2.238314628601074
    3. '))' → logprob: -8.488314628601074
    4. ')])' → logprob: -8.613314628601074
    5. '})' → logprob: -10.988314628601074
    6. ')]' → logprob: -10.988314628601074
    7. ''])' → logprob: -11.363314628601074
    8. '   ' → logprob: -11.738314628601074
    9. ']' → logprob: -11.738314628601074
    10. '）' → logprob: -11.988314628601074

Token 132: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024769291281700134
    2. '
' → logprob: -4.524769306182861
    3. '    
' → logprob: -4.774769306182861
    4. ' for' → logprob: -6.399769306182861
    5. ' 
' → logprob: -7.649769306182861
    6. '<|end|>' → logprob: -7.649769306182861
    7. 'for' → logprob: -7.899769306182861
    8. '  
' → logprob: -8.149768829345703
    9. 'max' → logprob: -8.524768829345703
    10. ')' → logprob: -8.524768829345703

Token 133: ' if' (ID: 538)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.7298650145530701
    2. 'median' → logprob: -1.3548650741577148
    3. '   ' → logprob: -2.604865074157715
    4. 'print' → logprob: -2.979865074157715
    5. 'l' → logprob: -3.104865074157715
    6. 'mid' → logprob: -4.354865074157715
    7. ' median' → logprob: -4.354865074157715
    8. 'med' → logprob: -4.479865074157715
    9. 'q' → logprob: -4.979865074157715
    10. 'lower' → logprob: -5.104865074157715

Token 134: ' N' (ID: 478)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.5923214554786682
    2. ' l' → logprob: -1.4673213958740234
    3. ' N' → logprob: -2.5923213958740234
    4. 'u' → logprob: -3.2173213958740234
    5. ' len' → logprob: -3.3423213958740234
    6. 'l' → logprob: -3.9673213958740234
    7. ' ' → logprob: -4.217321395874023
    8. ' A' → logprob: -4.467321395874023
    9. ' (' → logprob: -4.842321395874023
    10. 'N' → logprob: -5.092321395874023

Token 135: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -1.090739130973816
    2. ' %' → logprob: -1.340739130973816
    3. ' <' → logprob: -2.0907392501831055
    4. ' ==' → logprob: -2.0907392501831055
    5. ' ' → logprob: -2.5907392501831055
    6. ' >=' → logprob: -3.3407392501831055
    7. ' >' → logprob: -4.2157392501831055
    8. '==' → logprob: -4.7157392501831055
    9. ' <=' → logprob: -4.9657392501831055
    10. '<' → logprob: -4.9657392501831055

Token 136: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.14268599450588226
    2. ' ' → logprob: -2.017685890197754
    3. '3' → logprob: -12.017685890197754
    4. '4' → logprob: -13.517685890197754
    5. '```' → logprob: -13.517685890197754
    6. ' ' → logprob: -14.517685890197754
    7. '
' → logprob: -15.642685890197754
    8. '<|end|>' → logprob: -15.642685890197754
    9. '1' → logprob: -15.892685890197754
    10. '  ' → logprob: -15.955185890197754

Token 137: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.9728669738397e-05
    2. '4' → logprob: -10.125100135803223
    3. '10' → logprob: -10.500100135803223
    4. ' ' → logprob: -11.000100135803223
    5. '3' → logprob: -11.625100135803223
    6. '   ' → logprob: -12.875100135803223
    7. '```' → logprob: -14.125100135803223
    8. '  ' → logprob: -14.250100135803223
    9. '20' → logprob: -14.500100135803223
    10. '7' → logprob: -15.375100135803223

Token 138: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.18028250336647034
    2. '==' → logprob: -1.805282473564148
    3. ' !=' → logprob: -8.180282592773438
    4. ':' → logprob: -9.305282592773438
    5. '0' → logprob: -9.930282592773438
    6. '=' → logprob: -10.180282592773438
    7. ' ' → logprob: -10.680282592773438
    8. '!=' → logprob: -11.055282592773438
    9. '2' → logprob: -11.805282592773438
    10. ' =' → logprob: -11.805282592773438

Token 139: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6371893286705017
    2. '0' → logprob: -0.7621893286705017
    3. '1' → logprob: -5.3871893882751465
    4. '2' → logprob: -12.637188911437988
    5. '=' → logprob: -14.887188911437988
    6. '  ' → logprob: -15.262188911437988
    7. ' ' → logprob: -15.262188911437988
    8. '   ' → logprob: -15.449688911437988
    9. '==' → logprob: -15.512188911437988
    10. '```' → logprob: -16.574689865112305

Token 140: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031092651188373566
    2. '1' → logprob: -6.003109455108643
    3. ' ' → logprob: -7.378109455108643
    4. '2' → logprob: -11.753108978271484
    5. '   ' → logprob: -15.440608978271484
    6. '  ' → logprob: -15.940608978271484
    7. '```' → logprob: -16.003108978271484
    8. '
' → logprob: -17.565608978271484
    9. '==' → logprob: -17.628108978271484
    10. '

' → logprob: -17.628108978271484

Token 141: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002632430987432599
    2. ':
' → logprob: -8.250263214111328
    3. ' :' → logprob: -14.000263214111328
    4. '):' → logprob: -15.000263214111328
    5. ':**' → logprob: -15.125263214111328
    6. '   ' → logprob: -15.750263214111328
    7. ':return' → logprob: -16.125263214111328
    8. ':

' → logprob: -16.250263214111328
    9. ',' → logprob: -17.250263214111328
    10. '       ' → logprob: -17.375263214111328

Token 142: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19085446000099182
    2. ':' → logprob: -2.190854549407959
    3. '   ' → logprob: -2.815854549407959
    4. ':
' → logprob: -6.815854549407959
    5. '    
' → logprob: -8.8158540725708
    6. ',' → logprob: -8.9408540725708
    7. '        
' → logprob: -8.9408540725708
    8. '    ' → logprob: -9.1908540725708
    9. ' :' → logprob: -9.5658540725708
    10. ' ' → logprob: -9.9408540725708

Token 143: ' sum' (ID: 4215)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0555475950241089
    2. ' print' → logprob: -1.0555475950241089
    3. '       ' → logprob: -2.0555477142333984
    4. 'print' → logprob: -2.5555477142333984
    5. ' for' → logprob: -2.8055477142333984
    6. 'for' → logprob: -4.305547714233398
    7. '    ' → logprob: -4.930547714233398
    8. '
' → logprob: -5.305547714233398
    9. ' l' → logprob: -5.805547714233398
    10. ' ' → logprob: -6.055547714233398

Token 144: '_u' (ID: 17063)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9693102836608887
    2. '_' → logprob: -1.3443102836608887
    3. '(l' → logprob: -1.9693102836608887
    4. '(u' → logprob: -2.2193102836608887
    5. '1' → logprob: -2.7193102836608887
    6. 's' → logprob: -4.469310283660889
    7. '([' → logprob: -4.844310283660889
    8. 'u' → logprob: -5.219310283660889
    9. ' =' → logprob: -5.719310283660889
    10. '(max' → logprob: -6.469310283660889

Token 145: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08921394497156143
    2. '2' → logprob: -2.4642138481140137
    3. 'u' → logprob: -9.339214324951172
    4. ' =' → logprob: -9.339214324951172
    5. '=' → logprob: -9.839214324951172
    6. '_' → logprob: -11.089214324951172
    7. 's' → logprob: -12.714214324951172
    8. '```' → logprob: -12.776714324951172
    9. '-' → logprob: -12.964214324951172
    10. '=u' → logprob: -13.339214324951172

Token 146: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1085084676742554
    2. '-' → logprob: -1.2335084676742554
    3. ' =' → logprob: -1.4835084676742554
    4. ' -' → logprob: -2.608508586883545
    5. '[' → logprob: -3.233508586883545
    6. '[-' → logprob: -3.608508586883545
    7. ' -=' → logprob: -5.858508586883545
    8. ')' → logprob: -6.733508586883545
    9. '   ' → logprob: -6.733508586883545
    10. '+=' → logprob: -7.108508586883545

Token 147: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.8203269839286804
    2. 'u' → logprob: -1.0703270435333252
    3. ' sum' → logprob: -1.8203270435333252
    4. ' u' → logprob: -2.945327043533325
    5. '0' → logprob: -6.445326805114746
    6. ' ' → logprob: -8.445326805114746
    7. '(sum' → logprob: -9.695326805114746
    8. '   ' → logprob: -9.757826805114746
    9. 'max' → logprob: -10.070326805114746
    10. '(u' → logprob: -10.945326805114746

Token 148: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.003206234658136964
    2. '(' → logprob: -5.753206253051758
    3. ' (' → logprob: -11.753206253051758
    4. 'u' → logprob: -12.378206253051758
    5. '()' → logprob: -12.503206253051758
    6. '(up' → logprob: -13.128206253051758
    7. '([' → logprob: -13.378206253051758
    8. '(
' → logprob: -13.628206253051758
    9. '(x' → logprob: -13.753206253051758
    10. '((' → logprob: -13.878206253051758

Token 149: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.869017852295656e-06
    2. '2' → logprob: -12.375006675720215
    3. ')' → logprob: -14.125006675720215
    4. '```' → logprob: -14.375006675720215
    5. '_' → logprob: -14.875006675720215
    6. '_u' → logprob: -15.625006675720215
    7. '[' → logprob: -16.12500762939453
    8. 'u' → logprob: -16.25000762939453
    9. ')_' → logprob: -16.93750762939453
    10. '[u' → logprob: -17.00000762939453

Token 150: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02723737806081772
    2. ')
' → logprob: -3.6522374153137207
    3. ' )' → logprob: -7.527237415313721
    4. ')-' → logprob: -9.027236938476562
    5. ' )
' → logprob: -9.027236938476562
    6. '[' → logprob: -9.777236938476562
    7. '   ' → logprob: -10.652236938476562
    8. ')+' → logprob: -11.027236938476562
    9. ' -' → logprob: -11.277236938476562
    10. ')
' → logprob: -11.902236938476562

Token 151: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9657171964645386
    2. '+' → logprob: -1.0907171964645386
    3. '       ' → logprob: -2.340717315673828
    4. '+
' → logprob: -2.715717315673828
    5. '-' → logprob: -3.215717315673828
    6. '   ' → logprob: -3.340717315673828
    7. ' +' → logprob: -4.340717315673828
    8. ')' → logprob: -5.340717315673828
    9. '<|end|>' → logprob: -5.340717315673828
    10. ' 
' → logprob: -5.715717315673828

Token 152: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.5525433421134949
    2. 'sum' (adapté à ' sum') → logprob: -0.9275433421134949
    3. 'print' → logprob: -4.5525431632995605
    4. '
' → logprob: -5.5525431632995605
    5. ' print' → logprob: -5.5525431632995605
    6. '       ' → logprob: -6.4275431632995605
    7. '+' → logprob: -6.5525431632995605
    8. ' -' → logprob: -6.6775431632995605
    9. ' ' → logprob: -6.6775431632995605
    10. '-' → logprob: -7.0525431632995605

Token 153: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.005412215366959572
    2. '_u' → logprob: -5.2554121017456055
    3. '_' → logprob: -9.255412101745605
    4. 'l' → logprob: -10.005412101745605
    5. '(l' → logprob: -11.380412101745605
    6. '_low' → logprob: -11.630412101745605
    7. '_lower' → logprob: -12.380412101745605
    8. 'u' → logprob: -13.005412101745605
    9. '(' → logprob: -13.505412101745605
    10. '	l' → logprob: -13.630412101745605

Token 154: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.05489063635468483
    2. '1' → logprob: -2.9298906326293945
    3. '```' → logprob: -12.429890632629395
    4. ')' → logprob: -14.304890632629395
    5. 'l' → logprob: -14.367390632629395
    6. '_' → logprob: -14.367390632629395
    7. '0' → logprob: -15.429890632629395
    8. 'u' → logprob: -15.617390632629395
    9. '₂' → logprob: -16.11739158630371
    10. '.append' → logprob: -16.17989158630371

Token 155: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9375439882278442
    2. ' +=' → logprob: -1.5625439882278442
    3. ' +' → logprob: -1.8125439882278442
    4. ')' → logprob: -2.3125438690185547
    5. '=' → logprob: -3.0625438690185547
    6. ' =' → logprob: -3.5625438690185547
    7. '-' → logprob: -3.9375438690185547
    8. ' -' → logprob: -3.9375438690185547
    9. '+=' → logprob: -4.687543869018555
    10. ' ' → logprob: -5.812543869018555

Token 156: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.6954312920570374
    2. 'sum' → logprob: -0.6954312920570374
    3. ' l' → logprob: -6.695431232452393
    4. 'l' → logprob: -6.945431232452393
    5. '(sum' → logprob: -9.82043170928955
    6. 'len' → logprob: -11.82043170928955
    7. 's' → logprob: -12.32043170928955
    8. ' ' → logprob: -12.82043170928955
    9. ' len' → logprob: -12.82043170928955
    10. '	sum' → logprob: -12.94543170928955

Token 157: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.00020377879263833165
    2. '(' → logprob: -9.125204086303711
    3. 'l' → logprob: -9.375204086303711
    4. '(u' → logprob: -11.875204086303711
    5. '(lower' → logprob: -13.500204086303711
    6. ' (' → logprob: -14.750204086303711
    7. '(low' → logprob: -15.500204086303711
    8. '	l' → logprob: -15.500204086303711
    9. ' l' → logprob: -15.750204086303711
    10. ')' → logprob: -15.750204086303711

Token 158: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.253090865968261e-06
    2. 'l' → logprob: -12.500009536743164
    3. ')' → logprob: -12.625009536743164
    4. '_' → logprob: -13.875009536743164
    5. 'f' → logprob: -15.875009536743164
    6. '2' → logprob: -16.000009536743164
    7. 'o' → logprob: -16.125009536743164
    8. '])' → logprob: -16.125009536743164
    9. 'ow' → logprob: -16.250009536743164
    10. '```' → logprob: -16.375009536743164

Token 159: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015046934597194195
    2. ')
' → logprob: -4.390047073364258
    3. '+' → logprob: -6.515047073364258
    4. '   ' → logprob: -7.390047073364258
    5. ' +' → logprob: -8.640047073364258
    6. '       ' → logprob: -9.765047073364258
    7. ')+' → logprob: -10.015047073364258
    8. ' )' → logprob: -10.265047073364258
    9. '()' → logprob: -10.890047073364258
    10. '-' → logprob: -11.015047073364258

Token 160: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05533919483423233
    2. '
' → logprob: -3.0553390979766846
    3. '+' → logprob: -6.555339336395264
    4. '        
' → logprob: -7.180339336395264
    5. '   ' → logprob: -7.305339336395264
    6. '+
' → logprob: -7.430339336395264
    7. '<|end|>' → logprob: -7.930339336395264
    8. 'print' → logprob: -7.930339336395264
    9. ',' → logprob: -8.055338859558105
    10. ')' → logprob: -8.055338859558105

Token 161: ' ans' (ID: 3345)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.036623645573854446
    2. 'print' → logprob: -3.53662371635437
    3. ' print' → logprob: -5.411623477935791
    4. '
' → logprob: -7.036623477935791
    5. '   ' → logprob: -7.536623477935791
    6. '-' → logprob: -8.53662395477295
    7. 'for' → logprob: -9.03662395477295
    8. ' ' → logprob: -9.53662395477295
    9. '```' → logprob: -9.66162395477295
    10. ' for' → logprob: -9.78662395477295

Token 162: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09385158121585846
    2. '=' → logprob: -2.7188515663146973
    3. '1' → logprob: -4.218851566314697
    4. '_' → logprob: -4.843851566314697
    5. ' ' → logprob: -7.593851566314697
    6. 's' → logprob: -8.968852043151855
    7. '[' → logprob: -9.218852043151855
    8. ')' → logprob: -10.343852043151855
    9. '   ' → logprob: -10.343852043151855
    10. ' _' → logprob: -10.593852043151855

Token 163: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5770667791366577
    2. ' =' → logprob: -0.8270667791366577
    3. '_' → logprob: -7.702066898345947
    4. ' +=' → logprob: -8.327066421508789
    5. '[' → logprob: -8.952066421508789
    6. '+=' → logprob: -9.577066421508789
    7. ')' → logprob: -9.702066421508789
    8. '.append' → logprob: -9.952066421508789
    9. '.' → logprob: -10.077066421508789
    10. '+' → logprob: -10.952066421508789

Token 164: ' (' (ID: 350)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.4623696208000183
    2. 'sum' → logprob: -1.087369680404663
    3. ' u' → logprob: -4.087369441986084
    4. 'u' → logprob: -4.462369441986084
    5. ' abs' → logprob: -7.212369441986084
    6. ' max' → logprob: -7.462369441986084
    7. ' ' → logprob: -7.712369441986084
    8. ' str' → logprob: -7.837369441986084
    9. 'max' → logprob: -7.837369441986084
    10. 'abs' → logprob: -7.962369441986084

Token 165: '2' (ID: 17)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.21958933770656586
    2. 'u' → logprob: -1.719589352607727
    3. 'A' → logprob: -5.3445892333984375
    4. ' sum' → logprob: -5.5945892333984375
    5. 'max' → logprob: -5.9695892333984375
    6. 'l' → logprob: -6.0945892333984375
    7. 'ans' → logprob: -6.2195892333984375
    8. ' u' → logprob: -6.9695892333984375
    9. '(sum' → logprob: -8.219589233398438
    10. 'N' → logprob: -8.344589233398438

Token 166: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.25720879435539246
    2. '*' → logprob: -1.5072088241577148
    3. ')' → logprob: -5.632208824157715
    4. ' +' → logprob: -8.007208824157715
    5. '+' → logprob: -8.132208824157715
    6. '*(' → logprob: -8.507208824157715
    7. '*u' → logprob: -8.882208824157715
    8. ' ' → logprob: -8.882208824157715
    9. '**' → logprob: -9.382208824157715
    10. '0' → logprob: -9.382208824157715

Token 167: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.03413096442818642
    2. '(sum' → logprob: -4.159131050109863
    3. ' sum' → logprob: -4.659131050109863
    4. 'l' → logprob: -6.534131050109863
    5. 'u' → logprob: -6.534131050109863
    6. '(' → logprob: -6.784131050109863
    7. ' (' → logprob: -7.159131050109863
    8. 'N' → logprob: -7.284131050109863
    9. 'max' → logprob: -7.409131050109863
    10. '10' → logprob: -7.784131050109863

Token 168: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -0.012482579797506332
    2. '_l' → logprob: -4.512482643127441
    3. '(u' → logprob: -6.887482643127441
    4. '_' → logprob: -8.762482643127441
    5. '(' → logprob: -9.262482643127441
    6. '(l' → logprob: -9.887482643127441
    7. 'u' → logprob: -10.137482643127441
    8. '(_' → logprob: -10.262482643127441
    9. ')' → logprob: -11.637482643127441
    10. '_)' → logprob: -11.637482643127441

Token 169: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5690089639974758e-05
    2. ')' → logprob: -11.750015258789062
    3. '_' → logprob: -12.625015258789062
    4. '```' → logprob: -13.625015258789062
    5. '_l' → logprob: -14.500015258789062
    6. '(' → logprob: -15.000015258789062
    7. '_u' → logprob: -15.000015258789062
    8. 'l' → logprob: -15.250015258789062
    9. 'u' → logprob: -15.250015258789062
    10. '2' → logprob: -15.250015258789062

Token 170: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1461574137210846
    2. ')' → logprob: -2.5211575031280518
    3. '-' → logprob: -3.1461575031280518
    4. ' )' → logprob: -4.521157264709473
    5. ' ' → logprob: -7.146157264709473
    6. '+' → logprob: -7.521157264709473
    7. ')-(' → logprob: -8.896157264709473
    8. ' +' → logprob: -9.146157264709473
    9. '    ' → logprob: -10.521157264709473
    10. ')-' → logprob: -10.771157264709473

Token 171: ' u' (ID: 337)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.08020134270191193
    2. ' ' → logprob: -3.2052013874053955
    3. '1' → logprob: -3.7052013874053955
    4. 'sum' → logprob: -5.580201148986816
    5. ' sum' → logprob: -5.955201148986816
    6. 'N' → logprob: -6.830201148986816
    7. '(' → logprob: -6.830201148986816
    8. ' (' → logprob: -6.955201148986816
    9. ' N' → logprob: -7.080201148986816
    10. '   ' → logprob: -7.455201148986816

Token 172: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017393168527632952
    2. '2' → logprob: -7.001739501953125
    3. 'n' → logprob: -8.001739501953125
    4. 'm' → logprob: -8.126739501953125
    5. 's' → logprob: -9.751739501953125
    6. 'l' → logprob: -10.251739501953125
    7. '[' → logprob: -10.626739501953125
    8. ')' → logprob: -10.751739501953125
    9. 'len' → logprob: -11.751739501953125
    10. '
' → logprob: -12.001739501953125

Token 173: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1666673719882965
    2. '[-' → logprob: -2.2916674613952637
    3. '[len' → logprob: -3.1666674613952637
    4. 'len' → logprob: -5.041667461395264
    5. '1' → logprob: -6.416667461395264
    6. ')' → logprob: -6.791667461395264
    7. '_len' → logprob: -7.916667461395264
    8. '.__' → logprob: -9.791666984558105
    9. 'sum' → logprob: -10.041666984558105
    10. '0' → logprob: -10.166666984558105

Token 174: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001808460452593863
    2. '-' → logprob: -6.3768086433410645
    3. ' ' → logprob: -10.126808166503906
    4. ' -' → logprob: -10.501808166503906
    5. 'len' → logprob: -11.626808166503906
    6. '[' → logprob: -11.939308166503906
    7. '   ' → logprob: -12.751808166503906
    8. ']' → logprob: -12.814308166503906
    9. '1' → logprob: -12.876808166503906
    10. '(' → logprob: -13.126808166503906

Token 175: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0741412490606308
    2. ' )' → logprob: -3.199141263961792
    3. ' -' → logprob: -3.824141263961792
    4. '-' → logprob: -4.949141025543213
    5. ' ' → logprob: -8.199141502380371
    6. '))' → logprob: -8.199141502380371
    7. '   ' → logprob: -8.449141502380371
    8. ')*' → logprob: -8.824141502380371
    9. '-)' → logprob: -9.074141502380371
    10. '*' → logprob: -9.074141502380371

Token 176: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012971388176083565
    2. ' )' → logprob: -4.6379714012146
    3. ' -' → logprob: -6.8879714012146
    4. ' +' → logprob: -6.8879714012146
    5. '+' → logprob: -7.3879714012146
    6. '-' → logprob: -8.387970924377441
    7. '[' → logprob: -9.762970924377441
    8. ')*' → logprob: -10.137970924377441
    9. ' ' → logprob: -10.512970924377441
    10. '))' → logprob: -10.512970924377441

Token 177: ' u' (ID: 337)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.10059686750173569
    2. ' ' → logprob: -2.9755969047546387
    3. 'l' → logprob: -4.100596904754639
    4. '1' → logprob: -4.225596904754639
    5. ' l' → logprob: -4.850596904754639
    6. '(' → logprob: -5.850596904754639
    7. ' (' → logprob: -6.725596904754639
    8. 'sum' → logprob: -7.725596904754639
    9. 'u' → logprob: -7.850596904754639
    10. ' u' → logprob: -8.10059642791748

Token 178: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1523761749267578
    2. '0' → logprob: -2.027376174926758
    3. '[' → logprob: -5.027376174926758
    4. '[-' → logprob: -6.652376174926758
    5. '-' → logprob: -7.027376174926758
    6. '2' → logprob: -7.152376174926758
    7. '```' → logprob: -9.777376174926758
    8. '   ' → logprob: -10.902376174926758
    9. ' ' → logprob: -11.027376174926758
    10. '
' → logprob: -11.777376174926758

Token 179: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0037025699857622385
    2. '[-' → logprob: -5.628702640533447
    3. '][' → logprob: -10.503702163696289
    4. ')[' → logprob: -10.753702163696289
    5. '])' → logprob: -11.503702163696289
    6. ')' → logprob: -11.628702163696289
    7. ']' → logprob: -11.628702163696289
    8. '0' → logprob: -12.253702163696289
    9. ' [' → logprob: -12.253702163696289
    10. '   ' → logprob: -12.378702163696289

Token 180: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.13953647017478943
    2. '1' → logprob: -2.2645363807678223
    3. '0' → logprob: -3.7645363807678223
    4. ' -' → logprob: -5.889536380767822
    5. ':' → logprob: -8.38953685760498
    6. ' ' → logprob: -9.26453685760498
    7. 'len' → logprob: -10.88953685760498
    8. '   ' → logprob: -11.13953685760498
    9. '-l' → logprob: -11.76453685760498
    10. '  ' → logprob: -11.76453685760498

Token 181: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00544695882126689
    2. ' )' → logprob: -5.505446910858154
    3. ' -' → logprob: -7.380446910858154
    4. '-' → logprob: -8.380447387695312
    5. '+' → logprob: -8.630447387695312
    6. ' +' → logprob: -9.755447387695312
    7. '))' → logprob: -9.755447387695312
    8. ')-' → logprob: -10.755447387695312
    9. ')+' → logprob: -10.880447387695312
    10. '[' → logprob: -11.005447387695312

Token 182: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.404794305562973
    2. '<|end|>' → logprob: -2.029794216156006
    3. '+' → logprob: -2.654794216156006
    4. ' +' → logprob: -2.779794216156006
    5. ' ' → logprob: -3.154794216156006
    6. '
' → logprob: -5.279794216156006
    7. '   ' → logprob: -5.404794216156006
    8. '*' → logprob: -5.904794216156006
    9. ' *' → logprob: -6.029794216156006
    10. '<|end|>' → logprob: -6.279794216156006

Token 183: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2811729311943054
    2. ' (' → logprob: -1.4061729907989502
    3. '2' → logprob: -11.406172752380371
    4. ' ' → logprob: -12.031172752380371
    5. '   ' → logprob: -13.531172752380371
    6. '    ' → logprob: -13.781172752380371
    7. '  ' → logprob: -14.156172752380371
    8. '1' → logprob: -14.906172752380371
    9. '((' → logprob: -14.906172752380371
    10. '        ' → logprob: -15.406172752380371

Token 184: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002203547628596425
    2. ' (' → logprob: -6.127203464508057
    3. '2' → logprob: -11.002203941345215
    4. ' ' → logprob: -14.502203941345215
    5. '((' → logprob: -15.002203941345215
    6. '(sum' → logprob: -15.377203941345215
    7. '   ' → logprob: -15.627203941345215
    8. '(
' → logprob: -16.1272029876709
    9. '  ' → logprob: -16.5022029876709
    10. '1' → logprob: -16.7522029876709

Token 185: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.11316759884357452
    2. '*' → logprob: -2.2381675243377686
    3. ' ' → logprob: -8.738167762756348
    4. ' ' → logprob: -9.863167762756348
    5. '*(' → logprob: -9.988167762756348
    6. ')' → logprob: -11.113167762756348
    7. '(' → logprob: -11.363167762756348
    8. ' (' → logprob: -11.488167762756348
    9. '*u' → logprob: -11.613167762756348
    10. 'sum' → logprob: -11.988167762756348

Token 186: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.2681645452976227
    2. 'sum' → logprob: -1.5181645154953003
    3. '(sum' → logprob: -4.51816463470459
    4. ' (' → logprob: -5.39316463470459
    5. '(' → logprob: -7.51816463470459
    6. ' ' → logprob: -10.26816463470459
    7. '(s' → logprob: -11.26816463470459
    8. 's' → logprob: -11.89316463470459
    9. 'l' → logprob: -12.33066463470459
    10. '	sum' → logprob: -12.39316463470459

Token 187: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.008302146568894386
    2. 'l' → logprob: -5.508302211761475
    3. '(l' → logprob: -5.508302211761475
    4. 'u' → logprob: -10.258301734924316
    5. '_u' → logprob: -10.258301734924316
    6. '(_' → logprob: -10.508301734924316
    7. '(' → logprob: -10.633301734924316
    8. '_' → logprob: -11.383301734924316
    9. '(u' → logprob: -11.383301734924316
    10. '	l' → logprob: -12.133301734924316

Token 188: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7729658540920354e-05
    2. 'l' → logprob: -10.625027656555176
    3. '```' → logprob: -13.875027656555176
    4. '2' → logprob: -14.250027656555176
    5. '(' → logprob: -14.375027656555176
    6. '_' → logprob: -15.250027656555176
    7. ')' → logprob: -15.750027656555176
    8. '_l' → logprob: -16.437528610229492
    9. '(l' → logprob: -16.562528610229492
    10. '１' → logprob: -16.812528610229492

Token 189: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 190: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0246258974075317
    2. '
' → logprob: -1.1496258974075317
    3. '<|end|>' → logprob: -1.3996258974075317
    4. '   ' → logprob: -3.024625778198242
    5. ':' → logprob: -4.899625778198242
    6. '       ' → logprob: -5.524625778198242
    7. ')
' → logprob: -5.649625778198242
    8. ' ' → logprob: -6.149625778198242
    9. ':
' → logprob: -6.399625778198242
    10. '    
' → logprob: -6.399625778198242

Token 191: ' sum' (ID: 4215)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6431978940963745
    2. ' ans' → logprob: -2.018198013305664
    3. '       ' → logprob: -2.393198013305664
    4. '
' → logprob: -2.518198013305664
    5. '\n' → logprob: -3.268198013305664
    6. '   ' → logprob: -3.393198013305664
    7. '(ans' → logprob: -4.143198013305664
    8. ' 
' → logprob: -4.268198013305664
    9. 'sum' (adapté à ' sum') → logprob: -4.518198013305664
    10. ' ' → logprob: -4.768198013305664

Token 192: '_u' (ID: 17063)
  Prédit: '_l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.02631632424890995
    2. '_u' → logprob: -3.6513164043426514
    3. 'l' → logprob: -11.77631664276123
    4. '(l' → logprob: -13.02631664276123
    5. '(u' → logprob: -13.27631664276123
    6. 'u' → logprob: -13.77631664276123
    7. '(_' → logprob: -14.15131664276123
    8. '_' → logprob: -14.15131664276123
    9. '(' → logprob: -14.90131664276123
    10. '_d' → logprob: -15.40131664276123

Token 193: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0026169205084443092
    2. '1' → logprob: -6.002616882324219
    3. 'u' → logprob: -9.502616882324219
    4. '_u' → logprob: -10.502616882324219
    5. '_' → logprob: -11.002616882324219
    6. 'l' → logprob: -12.127616882324219
    7. '_l' → logprob: -12.502616882324219
    8. '```' → logprob: -12.502616882324219
    9. '(u' → logprob: -13.127616882324219
    10. '   ' → logprob: -13.377616882324219

Token 194: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31327590346336365
    2. '=' → logprob: -1.313275933265686
    3. ' ' → logprob: -12.063276290893555
    4. '_' → logprob: -12.813276290893555
    5. '   ' → logprob: -13.063276290893555
    6. ')' → logprob: -13.188276290893555
    7. ',' → logprob: -14.813276290893555
    8. '    ' → logprob: -15.313276290893555
    9. '        ' → logprob: -15.688276290893555
    10. '       ' → logprob: -15.938276290893555

Token 195: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.387138694524765
    2. 'sum' → logprob: -1.1371387243270874
    3. '(sum' → logprob: -8.262138366699219
    4. '=sum' → logprob: -13.262138366699219
    5. '(' → logprob: -13.512138366699219
    6. '	sum' → logprob: -13.637138366699219
    7. ' ' → logprob: -13.762138366699219
    8. '2' → logprob: -13.762138366699219
    9. '.sum' → logprob: -14.512138366699219
    10. ' (' → logprob: -14.762138366699219

Token 196: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.0014903423143550754
    2. 'u' → logprob: -7.001490116119385
    3. '(l' → logprob: -7.501490116119385
    4. '(' → logprob: -11.251490592956543
    5. ' u' → logprob: -11.626490592956543
    6. ' (' → logprob: -13.001490592956543
    7. '	u' → logprob: -14.626490592956543
    8. 'l' → logprob: -14.876490592956543
    9. '(up' → logprob: -15.501490592956543
    10. '_u' → logprob: -15.876490592956543

Token 197: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.822646693966817e-06
    2. '1' → logprob: -13.375007629394531
    3. '_' → logprob: -13.750007629394531
    4. 'u' → logprob: -13.750007629394531
    5. 'p' → logprob: -14.125007629394531
    6. ')' → logprob: -14.375007629394531
    7. ' ' → logprob: -14.500007629394531
    8. '[' → logprob: -14.937507629394531
    9. '```' → logprob: -15.250007629394531
    10. '   ' → logprob: -15.375007629394531

Token 198: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005294119473546743
    2. ')
' → logprob: -5.255294322967529
    3. ' )' → logprob: -10.505293846130371
    4. ' -' → logprob: -11.380293846130371
    5. '       ' → logprob: -11.880293846130371
    6. ')-' → logprob: -12.380293846130371
    7. ')

' → logprob: -12.880293846130371
    8. '-' → logprob: -13.005293846130371
    9. '   ' → logprob: -13.255293846130371
    10. ' )
' → logprob: -13.505293846130371

Token 199: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0712880790233612
    2. '<|end|>' → logprob: -3.0712881088256836
    3. ' -' → logprob: -4.196288108825684
    4. '
' → logprob: -5.696288108825684
    5. ' sum' → logprob: -6.946288108825684
    6. '   ' → logprob: -7.446288108825684
    7. ' ' → logprob: -7.571288108825684
    8. '-' → logprob: -7.571288108825684
    9. ')' → logprob: -7.946288108825684
    10. '        ' → logprob: -7.946288108825684

Token 200: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' (adapté à ' sum') → logprob: -0.4741225242614746
    2. ' sum' → logprob: -0.9741225242614746
    3. 'ans' → logprob: -10.724123001098633
    4. ' ans' → logprob: -11.474123001098633
    5. '       ' → logprob: -12.224123001098633
    6. '   ' → logprob: -13.224123001098633
    7. '2' → logprob: -13.474123001098633
    8. ' ' → logprob: -14.099123001098633
    9. '(sum' → logprob: -14.224123001098633
    10. '	sum' → logprob: -14.224123001098633

Token 201: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -9.77022064034827e-05
    2. '_u' → logprob: -9.750097274780273
    3. 'l' → logprob: -10.250097274780273
    4. '2' → logprob: -13.625097274780273
    5. 'u' → logprob: -14.375097274780273
    6. '(' → logprob: -14.875097274780273
    7. '_' → logprob: -15.250097274780273
    8. '(l' → logprob: -15.375097274780273
    9. '   ' → logprob: -15.500097274780273
    10. ' l' → logprob: -15.750097274780273

Token 202: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001356667373329401
    2. 'l' → logprob: -6.751356601715088
    3. '_' → logprob: -9.751357078552246
    4. '```' → logprob: -10.626357078552246
    5. 'u' → logprob: -10.751357078552246
    6. '(' → logprob: -10.876357078552246
    7. ' l' → logprob: -11.251357078552246
    8. '_l' → logprob: -11.376357078552246
    9. '(l' → logprob: -11.376357078552246
    10. ' ' → logprob: -12.251357078552246

Token 203: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759466886520386
    2. ' =' → logprob: -0.8259466886520386
    3. ')' → logprob: -12.450946807861328
    4. ' ' → logprob: -13.575946807861328
    5. '   ' → logprob: -14.575946807861328
    6. ' +=' → logprob: -15.325946807861328
    7. '```' → logprob: -15.450946807861328
    8. '+=' → logprob: -15.575946807861328
    9. '<|end|>' → logprob: -15.700946807861328
    10. ')=' → logprob: -15.700946807861328

Token 204: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.2519911527633667
    2. 'sum' → logprob: -1.5019911527633667
    3. '(sum' → logprob: -9.751991271972656
    4. '2' → logprob: -13.001991271972656
    5. '(' → logprob: -14.251991271972656
    6. ' ' → logprob: -14.501991271972656
    7. '	sum' → logprob: -15.126991271972656
    8. '.sum' → logprob: -17.126991271972656
    9. '=sum' → logprob: -17.126991271972656
    10. 's' → logprob: -17.251991271972656

Token 205: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.001100683817639947
    2. 'l' → logprob: -6.876100540161133
    3. ' l' → logprob: -10.251100540161133
    4. '(' → logprob: -10.876100540161133
    5. ' (' → logprob: -11.751100540161133
    6. '	l' → logprob: -12.751100540161133
    7. '(u' → logprob: -13.251100540161133
    8. '(
' → logprob: -15.251100540161133
    9. '[l' → logprob: -15.376100540161133
    10. ',l' → logprob: -16.251100540161133

Token 206: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0087516784551553e-05
    2. 'l' → logprob: -12.62501049041748
    3. ')' → logprob: -13.12501049041748
    4. '_' → logprob: -13.87501049041748
    5. '(' → logprob: -14.00001049041748
    6. '   ' → logprob: -14.37501049041748
    7. ' ' → logprob: -14.50001049041748
    8. '```' → logprob: -14.75001049041748
    9. '1' → logprob: -15.12501049041748
    10. '
' → logprob: -15.62501049041748

Token 207: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2525670528411865
    2. ')' → logprob: -1.5025670528411865
    3. '       ' → logprob: -7.502567291259766
    4. '())
' → logprob: -10.627567291259766
    5. ' )
' → logprob: -11.377567291259766
    6. '()
' → logprob: -11.377567291259766
    7. ')

' → logprob: -11.377567291259766
    8. ')
' → logprob: -11.502567291259766
    9. '   ' → logprob: -11.752567291259766
    10. '
' → logprob: -13.002567291259766

Token 208: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011288654990494251
    2. '
' → logprob: -4.886288642883301
    3. '   ' → logprob: -6.136288642883301
    4. '<|end|>' → logprob: -6.886288642883301
    5. ' ans' → logprob: -9.5112886428833
    6. '        
' → logprob: -9.7612886428833
    7. '()
' → logprob: -10.2612886428833
    8. ',' → logprob: -10.3862886428833
    9. '<|end|>' → logprob: -10.5112886428833
    10. ')' → logprob: -10.5112886428833

Token 209: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.1807929277420044
    2. ' ans' → logprob: -1.8057929277420044
    3. '       ' → logprob: -7.555792808532715
    4. '(ans' → logprob: -8.555792808532715
    5. '	ans' → logprob: -9.055792808532715
    6. '   ' → logprob: -9.055792808532715
    7. '
' → logprob: -10.555792808532715
    8. 'answer' → logprob: -10.930792808532715
    9. '[' → logprob: -11.305792808532715
    10. '_ans' → logprob: -11.805792808532715

Token 210: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00025954778539016843
    2. '1' → logprob: -9.250259399414062
    3. '_' → logprob: -9.500259399414062
    4. ' =' → logprob: -9.875259399414062
    5. '=' → logprob: -10.875259399414062
    6. ' ' → logprob: -11.875259399414062
    7. '   ' → logprob: -12.500259399414062
    8. ' _' → logprob: -12.625259399414062
    9. '```' → logprob: -14.500259399414062
    10. '₂' → logprob: -14.750259399414062

Token 211: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011049470864236355
    2. '=' → logprob: -4.511049270629883
    3. ' ' → logprob: -13.636049270629883
    4. ')' → logprob: -16.136049270629883
    5. '<|end|>' → logprob: -16.511049270629883
    6. ' =
' → logprob: -17.386049270629883
    7. ' =)' → logprob: -17.386049270629883
    8. ',' → logprob: -17.511049270629883
    9. ' +=' → logprob: -17.761049270629883
    10. ' =[' → logprob: -18.011049270629883

Token 212: ' ' (ID: 220)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4741598963737488
    2. '(' → logprob: -0.9741598963737488
    3. '2' → logprob: -10.349160194396973
    4. '(sum' → logprob: -10.974160194396973
    5. ' ' → logprob: -11.724160194396973
    6. 'sum' → logprob: -11.849160194396973
    7. ' sum' → logprob: -12.224160194396973
    8. '(s' → logprob: -13.224160194396973
    9. '((' → logprob: -13.349160194396973
    10. '   ' → logprob: -13.349160194396973

Token 213: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03829611465334892
    2. ' (' → logprob: -3.2882962226867676
    3. '(sum' → logprob: -9.03829574584961
    4. '2' → logprob: -9.41329574584961
    5. 'sum' → logprob: -10.53829574584961
    6. ' sum' → logprob: -11.91329574584961
    7. '(abs' → logprob: -12.16329574584961
    8. '(s' → logprob: -12.66329574584961
    9. ' ' → logprob: -12.91329574584961
    10. '((' → logprob: -13.28829574584961

Token 214: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.06996110826730728
    2. '*' → logprob: -2.6949610710144043
    3. ' ' → logprob: -11.194961547851562
    4. ' ' → logprob: -12.694961547851562
    5. '*(' → logprob: -13.069961547851562
    6. '**' → logprob: -13.194961547851562
    7. ' **' → logprob: -13.319961547851562
    8. ')' → logprob: -14.444961547851562
    9. '<|end|>' → logprob: -14.694961547851562
    10. 'sum' → logprob: -15.694961547851562

Token 215: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.051344119012355804
    2. ' sum' → logprob: -3.426344156265259
    3. '(sum' → logprob: -4.05134391784668
    4. ' (' → logprob: -9.05134391784668
    5. '(' → logprob: -12.05134391784668
    6. '	sum' → logprob: -12.42634391784668
    7. '(s' → logprob: -13.05134391784668
    8. 'ans' → logprob: -13.30134391784668
    9. '_sum' → logprob: -13.30134391784668
    10. 's' → logprob: -13.42634391784668

Token 216: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -0.577465295791626
    2. '_l' → logprob: -0.827465295791626
    3. 'u' → logprob: -6.952465057373047
    4. 'l' → logprob: -7.827465057373047
    5. '(u' → logprob: -8.952465057373047
    6. '(l' → logprob: -10.952465057373047
    7. '(' → logprob: -12.202465057373047
    8. '(_' → logprob: -12.327465057373047
    9. '_' → logprob: -12.702465057373047
    10. '[u' → logprob: -13.952465057373047

Token 217: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005397395696491003
    2. '_u' → logprob: -5.755397319793701
    3. '_l' → logprob: -6.255397319793701
    4. 'u' → logprob: -9.13039779663086
    5. '_' → logprob: -9.25539779663086
    6. '1' → logprob: -9.88039779663086
    7. 'l' → logprob: -10.75539779663086
    8. '(u' → logprob: -11.38039779663086
    9. '(' → logprob: -13.00539779663086
    10. '   ' → logprob: -14.13039779663086

Token 218: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0010093499440699816
    2. '-' → logprob: -7.126009464263916
    3. ' ' → logprob: -9.001008987426758
    4. ' +' → logprob: -10.251008987426758
    5. '<|end|>' → logprob: -10.501008987426758
    6. ' ' → logprob: -11.751008987426758
    7. '+' → logprob: -12.501008987426758
    8. ')' → logprob: -13.001008987426758
    9. ' –' → logprob: -14.251008987426758
    10. '#' → logprob: -14.376008987426758

Token 219: ' (' (ID: 350)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.32575008273124695
    2. 'u' → logprob: -2.3257501125335693
    3. ' u' → logprob: -2.9507501125335693
    4. ' ' → logprob: -3.2007501125335693
    5. '(' → logprob: -3.5757501125335693
    6. 'l' → logprob: -4.20074987411499
    7. 'sum' → logprob: -4.45074987411499
    8. ' (' → logprob: -4.57574987411499
    9. ' sum' → logprob: -4.95074987411499
    10. ' l' → logprob: -4.95074987411499

Token 220: '2' (ID: 17)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.10877969115972519
    2. 'u' → logprob: -2.4837796688079834
    3. ' l' → logprob: -4.7337799072265625
    4. '2' → logprob: -4.8587799072265625
    5. ' u' → logprob: -6.1087799072265625
    6. '(l' → logprob: -8.358779907226562
    7. '(' → logprob: -8.858779907226562
    8. '(u' → logprob: -8.858779907226562
    9. '1' → logprob: -9.358779907226562
    10. ' ' → logprob: -9.858779907226562

Token 221: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.523260235786438
    2. ' *' → logprob: -0.898260235786438
    3. 'sum' → logprob: -9.648260116577148
    4. ')' → logprob: -10.523260116577148
    5. ' ' → logprob: -10.898260116577148
    6. ' sum' → logprob: -11.898260116577148
    7. '**' → logprob: -12.148260116577148
    8. '*l' → logprob: -12.523260116577148
    9. ' ' → logprob: -12.898260116577148
    10. '#' → logprob: -13.273260116577148

Token 222: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.1270175725221634
    2. ' sum' → logprob: -2.1270174980163574
    3. '(sum' → logprob: -10.377017974853516
    4. ' ' → logprob: -10.627017974853516
    5. ')' → logprob: -11.877017974853516
    6. '	sum' → logprob: -12.377017974853516
    7. '*' → logprob: -12.627017974853516
    8. ' *' → logprob: -12.752017974853516
    9. '<|end|>' → logprob: -12.752017974853516
    10. 's' → logprob: -13.252017974853516

Token 223: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.03601793199777603
    2. 'l' → logprob: -3.411017894744873
    3. '_u' → logprob: -7.036017894744873
    4. 'u' → logprob: -7.161017894744873
    5. '(l' → logprob: -7.536017894744873
    6. '(u' → logprob: -9.161018371582031
    7. '(' → logprob: -10.911018371582031
    8. '[l' → logprob: -11.411018371582031
    9. ' l' → logprob: -12.286018371582031
    10. ')' → logprob: -12.411018371582031

Token 224: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00048477304517291486
    2. 'l' → logprob: -8.000484466552734
    3. '1' → logprob: -9.500484466552734
    4. '_' → logprob: -11.250484466552734
    5. ' ' → logprob: -11.250484466552734
    6. '```' → logprob: -11.500484466552734
    7. '[' → logprob: -11.750484466552734
    8. '_l' → logprob: -12.000484466552734
    9. ' l' → logprob: -12.125484466552734
    10. 'u' → logprob: -12.687984466552734

Token 225: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09270636737346649
    2. ' -' → logprob: -2.8427064418792725
    3. ' )' → logprob: -3.7177064418792725
    4. '-' → logprob: -5.342706203460693
    5. '[' → logprob: -8.092706680297852
    6. ')-' → logprob: -8.342706680297852
    7. '       ' → logprob: -8.842706680297852
    8. ' ' → logprob: -8.967706680297852
    9. '<|end|>' → logprob: -9.842706680297852
    10. '   ' → logprob: -10.092706680297852

Token 226: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.14531485736370087
    2. ' l' → logprob: -2.020314931869507
    3. 'u' → logprob: -6.770314693450928
    4. '1' → logprob: -7.520314693450928
    5. ' u' → logprob: -7.645314693450928
    6. '(' → logprob: -8.770315170288086
    7. '(l' → logprob: -9.270315170288086
    8. ' (' → logprob: -9.520315170288086
    9. '2' → logprob: -10.020315170288086
    10. '   ' → logprob: -10.395315170288086

Token 227: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0010883049108088017
    2. '1' → logprob: -7.1260881423950195
    3. '(' → logprob: -9.25108814239502
    4. '```' → logprob: -9.87608814239502
    5. '[' → logprob: -10.62608814239502
    6. ')' → logprob: -11.00108814239502
    7. '0' → logprob: -11.12608814239502
    8. '-' → logprob: -11.37608814239502
    9. 'len' → logprob: -11.37608814239502
    10. '[-' → logprob: -11.50108814239502

Token 228: '[-' (ID: 17503)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03140084445476532
    2. '[-' → logprob: -3.5314009189605713
    3. '[len' → logprob: -7.156400680541992
    4. '   ' → logprob: -7.906400680541992
    5. '[(' → logprob: -8.781400680541992
    6. '[N' → logprob: -9.156400680541992
    7. '0' → logprob: -9.906400680541992
    8. ' [' → logprob: -10.156400680541992
    9. '1' → logprob: -10.156400680541992
    10. '```' → logprob: -11.468900680541992

Token 229: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001944461022503674
    2. '2' → logprob: -6.251944541931152
    3. ' ' → logprob: -11.876944541931152
    4. '   ' → logprob: -13.376944541931152
    5. '```' → logprob: -13.751944541931152
    6. '0' → logprob: -13.814444541931152
    7. '(' → logprob: -13.876944541931152
    8. 'len' → logprob: -14.001944541931152
    9. ']' → logprob: -14.501944541931152
    10. '-' → logprob: -14.501944541931152

Token 230: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1931249350309372
    2. '])' → logprob: -1.9431248903274536
    3. ' )' → logprob: -4.193124771118164
    4. ')])' → logprob: -5.193124771118164
    5. ' ])' → logprob: -5.693124771118164
    6. '-' → logprob: -6.068124771118164
    7. ']' → logprob: -6.318124771118164
    8. ' -' → logprob: -6.443124771118164
    9. ')]' → logprob: -6.943124771118164
    10. '[' → logprob: -7.443124771118164

Token 231: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013260699808597565
    2. ' )' → logprob: -4.513260841369629
    3. '-' → logprob: -7.013260841369629
    4. ' -' → logprob: -7.763260841369629
    5. '))' → logprob: -8.013260841369629
    6. '[' → logprob: -8.888260841369629
    7. '])' → logprob: -9.013260841369629
    8. ')
' → logprob: -9.763260841369629
    9. '-)' → logprob: -9.888260841369629
    10. '+' → logprob: -10.388260841369629

Token 232: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.391291081905365
    2. ' l' → logprob: -1.1412911415100098
    3. '1' → logprob: -5.51629114151001
    4. '2' → logprob: -9.141290664672852
    5. ' ' → logprob: -9.391290664672852
    6. '   ' → logprob: -9.891290664672852
    7. 'u' → logprob: -10.141290664672852
    8. ' u' → logprob: -10.516290664672852
    9. '           ' → logprob: -10.953790664672852
    10. '       ' → logprob: -11.453790664672852

Token 233: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0009382586576975882
    2. '1' → logprob: -7.000938415527344
    3. '[-' → logprob: -10.875938415527344
    4. '```' → logprob: -13.000938415527344
    5. '[' → logprob: -13.688438415527344
    6. '(-' → logprob: -13.938438415527344
    7. '][-' → logprob: -14.313438415527344
    8. ']' → logprob: -14.813438415527344
    9. '-' → logprob: -15.000938415527344
    10. '(' → logprob: -15.250938415527344

Token 234: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0002137882256647572
    2. '-' → logprob: -8.625213623046875
    3. '[' → logprob: -10.500213623046875
    4. '```' → logprob: -12.750213623046875
    5. '   ' → logprob: -13.875213623046875
    6. '][-' → logprob: -14.000213623046875
    7. '(-' → logprob: -14.750213623046875
    8. ' [-' → logprob: -14.875213623046875
    9. '[
' → logprob: -14.875213623046875
    10. '0' → logprob: -15.375213623046875

Token 235: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07891622185707092
    2. '2' → logprob: -2.578916311264038
    3. ' ' → logprob: -11.703916549682617
    4. '3' → logprob: -11.953916549682617
    5. '(-' → logprob: -13.078916549682617
    6. '0' → logprob: -13.391416549682617
    7. '```' → logprob: -13.391416549682617
    8. '   ' → logprob: -13.516416549682617
    9. '-' → logprob: -13.578916549682617
    10. ']' → logprob: -13.891416549682617

Token 236: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001249925117008388
    2. ' )' → logprob: -10.00012493133545
    3. '))' → logprob: -10.50012493133545
    4. ')
' → logprob: -10.75012493133545
    5. '）' → logprob: -11.62512493133545
    6. '   ' → logprob: -12.37512493133545
    7. '       ' → logprob: -12.62512493133545
    8. '`)' → logprob: -13.00012493133545
    9. '])' → logprob: -13.25012493133545
    10. ')))' → logprob: -13.37512493133545

Token 237: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5499001145362854
    2. '   ' → logprob: -1.0499000549316406
    3. '<|end|>' → logprob: -4.049900054931641
    4. ':
' → logprob: -4.299900054931641
    5. ':' → logprob: -4.424900054931641
    6. 'else' → logprob: -4.924900054931641
    7. ' else' → logprob: -5.299900054931641
    8. '    
' → logprob: -5.299900054931641
    9. ')' → logprob: -5.424900054931641
    10. ')
' → logprob: -5.674900054931641

Token 238: ' ans' (ID: 3345)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.18751907348632812
    2. '   ' → logprob: -2.187519073486328
    3. 'if' → logprob: -3.312519073486328
    4. ' print' → logprob: -4.312519073486328
    5. ' if' → logprob: -4.937519073486328
    6. 'ans' (adapté à ' ans') → logprob: -6.937519073486328
    7. '
' → logprob: -7.687519073486328
    8. ' ans' → logprob: -8.812519073486328
    9. 'answer' → logprob: -9.812519073486328
    10. '       ' → logprob: -10.062519073486328

Token 239: ' =' (ID: 314)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6182653903961182
    2. '=' → logprob: -1.3682653903961182
    3. ' =' → logprob: -1.6182653903961182
    4. 's' → logprob: -4.993265151977539
    5. '_' → logprob: -6.618265151977539
    6. '```' → logprob: -9.618265151977539
    7. '_=' → logprob: -9.868265151977539
    8. ' ' → logprob: -11.618265151977539
    9. '   ' → logprob: -11.618265151977539
    10. '_value' → logprob: -11.743265151977539

Token 240: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.3971939980983734
    2. ' min' → logprob: -1.8971940279006958
    3. ' ans' → logprob: -2.2721939086914062
    4. 'max' → logprob: -2.8971939086914062
    5. 'min' → logprob: -4.272193908691406
    6. 'ans' → logprob: -5.272193908691406
    7. '0' → logprob: -8.272193908691406
    8. ' abs' → logprob: -9.397193908691406
    9. ' ' → logprob: -10.147193908691406
    10. '(ans' → logprob: -10.522193908691406

Token 241: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0021913025993853807
    2. '(' → logprob: -6.127191066741943
    3. 'ans' → logprob: -12.752191543579102
    4. ' (' → logprob: -13.502191543579102
    5. '(answer' → logprob: -14.377191543579102
    6. '(
' → logprob: -14.377191543579102
    7. '(abs' → logprob: -16.0021915435791
    8. '(an' → logprob: -16.2521915435791
    9. '(a' → logprob: -16.2521915435791
    10. ' ans' → logprob: -16.5021915435791

Token 242: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030158525332808495
    2. ')' → logprob: -3.905158519744873
    3. ' ,' → logprob: -5.530158519744873
    4. '(ans' → logprob: -5.780158519744873
    5. ' +' → logprob: -7.155158519744873
    6. '+' → logprob: -8.030158996582031
    7. '<|end|>' → logprob: -8.030158996582031
    8. '1' → logprob: -8.155158996582031
    9. ',
' → logprob: -8.405158996582031
    10. ' )' → logprob: -9.030158996582031

Token 243: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021231167018413544
    2. ')' → logprob: -4.146231174468994
    3. ' +' → logprob: -6.396231174468994
    4. ' ,' → logprob: -6.521231174468994
    5. '+' → logprob: -6.771231174468994
    6. ',
' → logprob: -7.771231174468994
    7. '   ' → logprob: -8.896230697631836
    8. '<|end|>' → logprob: -8.896230697631836
    9. ' )' → logprob: -9.521230697631836
    10. ',)' → logprob: -9.771230697631836

Token 244: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.020707828924059868
    2. 'ans' → logprob: -3.895707845687866
    3. '(ans' → logprob: -8.895708084106445
    4. '	ans' → logprob: -11.145708084106445
    5. '0' → logprob: -12.270708084106445
    6. ')' → logprob: -12.645708084106445
    7. ' ' → logprob: -12.895708084106445
    8. '_ans' → logprob: -14.020708084106445
    9. ' ' → logprob: -14.395708084106445
    10. ' abs' → logprob: -14.645708084106445

Token 245: '2' (ID: 17)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012142390012741089
    2. '2' → logprob: -4.512142181396484
    3. '<|end|>' → logprob: -7.762142181396484
    4. ',' → logprob: -8.637142181396484
    5. ' )' → logprob: -9.137142181396484
    6. '_' → logprob: -9.262142181396484
    7. '1' → logprob: -9.262142181396484
    8. '_)' → logprob: -10.137142181396484
    9. '```' → logprob: -10.262142181396484
    10. '[' → logprob: -11.137142181396484

Token 246: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006987344822846353
    2. '   ' → logprob: -7.500698566436768
    3. ')
' → logprob: -9.000699043273926
    4. '<|end|>' → logprob: -11.125699043273926
    5. '       ' → logprob: -12.875699043273926
    6. ' )' → logprob: -14.000699043273926
    7. ')#' → logprob: -14.250699043273926
    8. '}' → logprob: -14.500699043273926
    9. ')return' → logprob: -14.625699043273926
    10. '<|end|>' → logprob: -14.875699043273926

Token 247: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04356016218662262
    2. '
' → logprob: -3.543560266494751
    3. '<|end|>' → logprob: -4.668560028076172
    4. ')' → logprob: -5.918560028076172
    5. 'print' → logprob: -7.293560028076172
    6. '    
' → logprob: -7.918560028076172
    7. '\n' → logprob: -8.793560028076172
    8. '```' → logprob: -9.043560028076172
    9. 'return' → logprob: -9.918560028076172
    10. ' return' → logprob: -10.043560028076172

Token 248: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12401780486106873
    2. 'else' (adapté à ' else') → logprob: -2.3740177154541016
    3. ' else' → logprob: -3.8740177154541016
    4. ')' → logprob: -6.624017715454102
    5. '<|end|>' → logprob: -7.124017715454102
    6. ':' → logprob: -8.874017715454102
    7. '	else' → logprob: -8.874017715454102
    8. '    
' → logprob: -8.999017715454102
    9. '
' → logprob: -10.249017715454102
    10. 'print' → logprob: -10.624017715454102

Token 249: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014260347932577133
    2. ':
' → logprob: -4.264260292053223
    3. '   ' → logprob: -10.014260292053223
    4. '       ' → logprob: -10.514260292053223
    5. '<|end|>' → logprob: -11.889260292053223
    6. ':

' → logprob: -12.389260292053223
    7. ' :' → logprob: -12.639260292053223
    8. ':return' → logprob: -13.139260292053223
    9. '```' → logprob: -13.264260292053223
    10. '{' → logprob: -13.764260292053223

Token 250: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007723622024059296
    2. '   ' → logprob: -5.507723808288574
    3. '
' → logprob: -5.632723808288574
    4. ' sum' → logprob: -11.257723808288574
    5. '{
' → logprob: -11.507723808288574
    6. '```' → logprob: -11.882723808288574
    7. '    
' → logprob: -12.382723808288574
    8. '    ' → logprob: -12.632723808288574
    9. 'sum' → logprob: -12.632723808288574
    10. '[' → logprob: -12.632723808288574

Token 251: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' (adapté à ' sum') → logprob: -0.03574489802122116
    2. ' sum' → logprob: -3.5357449054718018
    3. 'l' → logprob: -5.785744667053223
    4. '   ' → logprob: -6.160744667053223
    5. ' l' → logprob: -7.535744667053223
    6. 'ans' → logprob: -9.160744667053223
    7. 's' → logprob: -10.035744667053223
    8. '       ' → logprob: -10.535744667053223
    9. 'total' → logprob: -11.785744667053223
    10. '#' → logprob: -11.910744667053223

Token 252: '_u' (ID: 17063)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11906370520591736
    2. '(' → logprob: -2.24406361579895
    3. '_u' → logprob: -5.244063854217529
    4. 'u' → logprob: -8.494063377380371
    5. '(s' → logprob: -8.744063377380371
    6. '(u' → logprob: -8.994063377380371
    7. '_s' → logprob: -9.369063377380371
    8. '(_' → logprob: -9.369063377380371
    9. '(sum' → logprob: -9.869063377380371
    10. '_(' → logprob: -10.119063377380371

Token 253: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.24075713753700256
    2. '2' → logprob: -1.7407571077346802
    3. '_' → logprob: -4.115756988525391
    4. 'u' → logprob: -4.490756988525391
    5. '(u' → logprob: -4.990756988525391
    6. '_u' → logprob: -6.865756988525391
    7. ' =' → logprob: -6.865756988525391
    8. ')' → logprob: -7.365756988525391
    9. '=' → logprob: -7.490756988525391
    10. '(' → logprob: -8.11575698852539

Token 254: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10034889727830887
    2. '=' → logprob: -2.350348949432373
    3. ')' → logprob: -9.100348472595215
    4. ' ' → logprob: -11.600348472595215
    5. '   ' → logprob: -11.725348472595215
    6. '_' → logprob: -11.725348472595215
    7. '()' → logprob: -13.475348472595215
    8. '=sum' → logprob: -14.100348472595215
    9. ',' → logprob: -14.225348472595215
    10. ' +=' → logprob: -14.975348472595215

Token 255: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.06995099037885666
    2. 'sum' → logprob: -2.694951057434082
    3. '(sum' → logprob: -11.444951057434082
    4. '=sum' → logprob: -13.819951057434082
    5. ' ' → logprob: -14.194951057434082
    6. '	sum' → logprob: -14.319951057434082
    7. '2' → logprob: -15.319951057434082
    8. '   ' → logprob: -15.569951057434082
    9. ',sum' → logprob: -15.569951057434082
    10. '0' → logprob: -15.694951057434082

Token 256: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.016185808926820755
    2. 'u' → logprob: -4.141185760498047
    3. ' u' → logprob: -9.516185760498047
    4. '(' → logprob: -9.766185760498047
    5. ' (' → logprob: -11.016185760498047
    6. '	u' → logprob: -13.891185760498047
    7. '   ' → logprob: -14.141185760498047
    8. '_u' → logprob: -14.516185760498047
    9. '[u' → logprob: -14.766185760498047
    10. '(
' → logprob: -15.391185760498047

Token 257: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. '[' → logprob: -13.375007629394531
    3. 'u' → logprob: -13.500007629394531
    4. ' ' → logprob: -13.500007629394531
    5. ')' → logprob: -13.625007629394531
    6. '[u' → logprob: -14.937507629394531
    7. '   ' → logprob: -15.062507629394531
    8. '(' → logprob: -15.187507629394531
    9. '2' → logprob: -15.312507629394531
    10. '(u' → logprob: -15.437507629394531

Token 258: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2519902288913727
    2. ')
' → logprob: -1.5019901990890503
    3. '   ' → logprob: -11.25199031829834
    4. ' )
' → logprob: -11.37699031829834
    5. ')
' → logprob: -11.62699031829834
    6. ' )' → logprob: -12.00199031829834
    7. ')

' → logprob: -12.00199031829834
    8. '       ' → logprob: -12.12699031829834
    9. ')#' → logprob: -12.12699031829834
    10. '#' → logprob: -14.62699031829834

Token 259: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2660675346851349
    2. ' sum' → logprob: -2.3910675048828125
    3. '<|end|>' → logprob: -2.7660675048828125
    4. '
' → logprob: -4.1410675048828125
    5. ' ' → logprob: -4.1410675048828125
    6. '        ' → logprob: -4.2660675048828125
    7. ')' → logprob: -4.3910675048828125
    8. 'sum' → logprob: -5.3910675048828125
    9. ' *' → logprob: -5.7660675048828125
    10. ',' → logprob: -5.8910675048828125

Token 260: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.00976482592523098
    2. 'sum' (adapté à ' sum') → logprob: -4.634764671325684
    3. ' ' → logprob: -12.759764671325684
    4. '(sum' → logprob: -13.759764671325684
    5. 'space' → logprob: -13.884764671325684
    6. ' space' → logprob: -14.259764671325684
    7. '=sum' → logprob: -14.509764671325684
    8. '	sum' → logprob: -14.759764671325684
    9. ',sum' → logprob: -14.884764671325684
    10. '        ' → logprob: -15.134764671325684

Token 261: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.00030293059535324574
    2. '_u' → logprob: -9.250303268432617
    3. '1' → logprob: -9.500303268432617
    4. '2' → logprob: -9.875303268432617
    5. 'l' → logprob: -10.250303268432617
    6. '(' → logprob: -10.750303268432617
    7. '(l' → logprob: -11.750303268432617
    8. '(_' → logprob: -12.250303268432617
    9. '_' → logprob: -13.000303268432617
    10. ')' → logprob: -13.250303268432617

Token 262: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003422567679081112
    2. 'l' → logprob: -8.25034236907959
    3. '_l' → logprob: -10.00034236907959
    4. '(l' → logprob: -10.50034236907959
    5. '(' → logprob: -12.62534236907959
    6. ' l' → logprob: -13.25034236907959
    7. '_' → logprob: -14.50034236907959
    8. '(s' → logprob: -14.87534236907959
    9. '```' → logprob: -15.12534236907959
    10. '2' → logprob: -15.37534236907959

Token 263: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3133111894130707
    2. '=' → logprob: -1.313311219215393
    3. '   ' → logprob: -10.313311576843262
    4. ')' → logprob: -11.188311576843262
    5. ' ' → logprob: -13.438311576843262
    6. '    ' → logprob: -14.813311576843262
    7. '  ' → logprob: -15.938311576843262
    8. ')=' → logprob: -16.688310623168945
    9. '       ' → logprob: -16.813310623168945
    10. ' ' → logprob: -16.938310623168945

Token 264: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.5759703516960144
    2. 'sum' → logprob: -0.8259703516960144
    3. '(sum' → logprob: -10.575970649719238
    4. '2' → logprob: -13.200970649719238
    5. ' ' → logprob: -13.450970649719238
    6. '	sum' → logprob: -13.825970649719238
    7. '.sum' → logprob: -15.075970649719238
    8. '=sum' → logprob: -15.200970649719238
    9. '   ' → logprob: -15.825970649719238
    10. ' suma' → logprob: -16.825969696044922

Token 265: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.00027599421446211636
    2. 'l' → logprob: -8.250275611877441
    3. ' (' → logprob: -12.000275611877441
    4. '(' → logprob: -12.250275611877441
    5. ' l' → logprob: -13.125275611877441
    6. '	l' → logprob: -13.750275611877441
    7. '[l' → logprob: -15.625275611877441
    8. ',l' → logprob: -16.000276565551758
    9. '   ' → logprob: -16.625276565551758
    10. '(
' → logprob: -16.750276565551758

Token 266: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00046022076276130974
    2. 'l' → logprob: -7.750460147857666
    3. '_l' → logprob: -11.125460624694824
    4. ')' → logprob: -12.125460624694824
    5. '   ' → logprob: -13.250460624694824
    6. ' l' → logprob: -13.375460624694824
    7. '```' → logprob: -13.750460624694824
    8. ' ' → logprob: -14.000460624694824
    9. '(l' → logprob: -14.000460624694824
    10. '(' → logprob: -14.375460624694824

Token 267: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.38726767897605896
    2. ')' → logprob: -1.1372677087783813
    3. '   ' → logprob: -8.26226806640625
    4. '       ' → logprob: -9.76226806640625
    5. ')
' → logprob: -10.26226806640625
    6. '())
' → logprob: -11.63726806640625
    7. ' )
' → logprob: -11.88726806640625
    8. '()
' → logprob: -12.38726806640625
    9. '()' → logprob: -12.63726806640625
    10. ')

' → logprob: -12.63726806640625

Token 268: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16438744962215424
    2. '   ' → logprob: -2.5393874645233154
    3. '       ' → logprob: -2.6643874645233154
    4. 'ans' → logprob: -7.164387226104736
    5. '
' → logprob: -7.539387226104736
    6. '<|end|>' → logprob: -7.914387226104736
    7. ' ans' → logprob: -8.039387702941895
    8. '	ans' → logprob: -8.414387702941895
    9. '    
' → logprob: -8.664387702941895
    10. '        
' → logprob: -8.664387702941895

Token 269: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.08707495033740997
    2. ' ans' → logprob: -2.5870749950408936
    3. '   ' → logprob: -4.9620747566223145
    4. '       ' → logprob: -7.0870747566223145
    5. '	ans' → logprob: -8.462075233459473
    6. 'answer' → logprob: -10.462075233459473
    7. '(ans' → logprob: -10.712075233459473
    8. '_ans' → logprob: -11.337075233459473
    9. ' ' → logprob: -11.462075233459473
    10. '
' → logprob: -11.587075233459473

Token 270: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016093024984002113
    2. '=' → logprob: -4.1410932540893555
    3. '1' → logprob: -9.891093254089355
    4. ')' → logprob: -13.016093254089355
    5. ' ' → logprob: -13.266093254089355
    6. '<|end|>' → logprob: -14.266093254089355
    7. ' +=' → logprob: -14.391093254089355
    8. ' =
' → logprob: -14.516093254089355
    9. '2' → logprob: -14.516093254089355
    10. '_' → logprob: -14.891093254089355

Token 271: ' (' (ID: 350)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.39913472533226013
    2. '(' → logprob: -1.6491347551345825
    3. ' (' → logprob: -2.274134635925293
    4. ' ' → logprob: -3.399134635925293
    5. ' sum' → logprob: -8.774134635925293
    6. 'sum' → logprob: -8.774134635925293
    7. '   ' → logprob: -9.024134635925293
    8. 'max' → logprob: -9.524134635925293
    9. ' max' → logprob: -9.899134635925293
    10. '(sum' → logprob: -11.149134635925293

Token 272: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008299979381263256
    2. ' ' → logprob: -7.500830173492432
    3. '(' → logprob: -8.250829696655273
    4. ')' → logprob: -12.250829696655273
    5. 'sum' → logprob: -12.250829696655273
    6. ' (' → logprob: -12.625829696655273
    7. '(sum' → logprob: -14.000829696655273
    8. '   ' → logprob: -14.000829696655273
    9. '  ' → logprob: -14.500829696655273
    10. ' sum' → logprob: -15.375829696655273

Token 273: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.07889264822006226
    2. '*' → logprob: -2.578892707824707
    3. ' ' → logprob: -13.203892707824707
    4. ')' → logprob: -14.578892707824707
    5. ' ' → logprob: -15.078892707824707
    6. '**' → logprob: -15.703892707824707
    7. ' **' → logprob: -16.20389175415039
    8. '*(' → logprob: -17.82889175415039
    9. ' sum' → logprob: -17.95389175415039
    10. '*out' → logprob: -18.07889175415039

Token 274: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.2519317865371704
    2. ' sum' → logprob: -1.5019317865371704
    3. '(sum' → logprob: -13.126932144165039
    4. '
' → logprob: -15.751932144165039
    5. '	sum' → logprob: -15.876932144165039
    6. '=sum' → logprob: -16.25193214416504
    7. '_sum' → logprob: -16.37693214416504
    8. ' ' → logprob: -16.62693214416504
    9. '.sum' → logprob: -16.62693214416504
    10. 's' → logprob: -16.87693214416504

Token 275: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -6.511406809295295e-06
    2. 'u' → logprob: -12.625006675720215
    3. '(u' → logprob: -12.875006675720215
    4. ')' → logprob: -16.1250057220459
    5. '_' → logprob: -16.3750057220459
    6. '[u' → logprob: -16.3750057220459
    7. ')_' → logprob: -17.1250057220459
    8. '(_' → logprob: -17.1250057220459
    9. '_user' → logprob: -17.6250057220459
    10. '(' → logprob: -17.7500057220459

Token 276: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3557529857498594e-05
    2. '_l' → logprob: -10.87502384185791
    3. '_' → logprob: -13.75002384185791
    4. 'l' → logprob: -14.25002384185791
    5. 'u' → logprob: -14.37502384185791
    6. '_u' → logprob: -14.37502384185791
    7. '```' → logprob: -15.00002384185791
    8. ')' → logprob: -15.12502384185791
    9. 's' → logprob: -15.37502384185791
    10. '_s' → logprob: -15.50002384185791

Token 277: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.001057698973454535
    2. '-' → logprob: -7.2510576248168945
    3. ')' → logprob: -8.001057624816895
    4. ' ' → logprob: -11.751057624816895
    5. ' )' → logprob: -13.126057624816895
    6. ')-' → logprob: -14.126057624816895
    7. ' +' → logprob: -14.876057624816895
    8. ' ' → logprob: -14.876057624816895
    9. ')-(' → logprob: -15.251057624816895
    10. '   ' → logprob: -15.751057624816895

Token 278: ' u' (ID: 337)
  Prédit: ' u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.2630847096443176
    2. 'u' → logprob: -2.263084650039673
    3. '2' → logprob: -2.638084650039673
    4. ' ' → logprob: -3.138084650039673
    5. ' (' → logprob: -5.013084888458252
    6. ' sum' → logprob: -6.263084888458252
    7. '(' → logprob: -6.888084888458252
    8. '(u' → logprob: -7.013084888458252
    9. 'sum' → logprob: -7.013084888458252
    10. ' l' → logprob: -8.138084411621094

Token 279: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015633940347470343
    2. '[' → logprob: -9.25015640258789
    3. '(' → logprob: -11.00015640258789
    4. '0' → logprob: -11.12515640258789
    5. 'l' → logprob: -11.50015640258789
    6. ' ' → logprob: -13.00015640258789
    7. '{' → logprob: -13.00015640258789
    8. 'u' → logprob: -13.43765640258789
    9. '[u' → logprob: -13.62515640258789
    10. '
' → logprob: -13.68765640258789

Token 280: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.77627644513268e-06
    2. '[-' → logprob: -12.500008583068848
    3. '[len' → logprob: -13.625008583068848
    4. '[
' → logprob: -13.750008583068848
    5. ' [' → logprob: -14.500008583068848
    6. '0' → logprob: -14.875008583068848
    7. '   ' → logprob: -15.000008583068848
    8. ')[' → logprob: -15.125008583068848
    9. ')' → logprob: -15.375008583068848
    10. '\[' → logprob: -15.875008583068848

Token 281: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00038896629121154547
    2. '[' → logprob: -7.875389099121094
    3. ' ' → logprob: -11.875389099121094
    4. '00' → logprob: -14.750389099121094
    5. '1' → logprob: -15.625389099121094
    6. '2' → logprob: -15.812889099121094
    7. '#' → logprob: -16.062889099121094
    8. '][' → logprob: -16.062889099121094
    9. '   ' → logprob: -16.062889099121094
    10. ']' → logprob: -16.562889099121094

Token 282: '])' (ID: 4636)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1367778480052948
    2. ')' → logprob: -2.261777877807617
    3. '])' → logprob: -4.261777877807617
    4. ' ]' → logprob: -5.261777877807617
    5. '[' → logprob: -6.636777877807617
    6. ' )' → logprob: -6.636777877807617
    7. ' -' → logprob: -7.136777877807617
    8. ' ])' → logprob: -7.511777877807617
    9. ']-' → logprob: -8.761777877807617
    10. '-' → logprob: -9.011777877807617

Token 283: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.009071857668459415
    2. ')' → logprob: -5.1340718269348145
    3. '<|end|>' → logprob: -6.2590718269348145
    4. '-' → logprob: -6.8840718269348145
    5. ' ' → logprob: -8.884072303771973
    6. '*' → logprob: -11.384072303771973
    7. ' *' → logprob: -11.634072303771973
    8. ' )' → logprob: -11.759072303771973
    9. ' +' → logprob: -12.009072303771973
    10. ' ' → logprob: -12.134072303771973

Token 284: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.25325557589530945
    2. '2' → logprob: -1.5032556056976318
    3. ' (' → logprob: -7.003255367279053
    4. '(' → logprob: -8.003255844116211
    5. '1' → logprob: -9.878255844116211
    6. '    ' → logprob: -11.378255844116211
    7. ' ' → logprob: -11.753255844116211
    8. '   ' → logprob: -13.128255844116211
    9. '"' → logprob: -13.253255844116211
    10. '0' → logprob: -13.378255844116211

Token 285: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.34850063920021057
    2. ' ' → logprob: -1.2235006093978882
    3. '   ' → logprob: -10.72350025177002
    4. '    ' → logprob: -11.34850025177002
    5. ')' → logprob: -11.97350025177002
    6. '(' → logprob: -12.22350025177002
    7. ' (' → logprob: -12.34850025177002
    8. '  ' → logprob: -12.59850025177002
    9. '1' → logprob: -14.03600025177002
    10. ' ' → logprob: -14.59850025177002

Token 286: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.007633839268237352
    2. '*' → logprob: -4.882633686065674
    3. ' ' → logprob: -10.882634162902832
    4. ' ' → logprob: -12.257634162902832
    5. ' sum' → logprob: -12.507634162902832
    6. 'sum' → logprob: -15.007634162902832
    7. ' **' → logprob: -16.882633209228516
    8. ')' → logprob: -17.132633209228516
    9. 'import' → logprob: -18.007633209228516
    10. ' `' → logprob: -18.257633209228516

Token 287: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.048587825149297714
    2. 'sum' → logprob: -3.0485877990722656
    3. ' ' → logprob: -15.923587799072266
    4. '(sum' → logprob: -16.548587799072266
    5. ' *' → logprob: -17.173587799072266
    6. '*' → logprob: -17.173587799072266
    7. '	sum' → logprob: -17.173587799072266
    8. '2' → logprob: -17.548587799072266
    9. '=sum' → logprob: -17.923587799072266
    10. ' ' → logprob: -18.048587799072266

Token 288: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -1.0280383548888494e-06
    2. 'l' → logprob: -15.000000953674316
    3. '_' → logprob: -15.500000953674316
    4. ')' → logprob: -15.750000953674316
    5. ' _' → logprob: -16.125001907348633
    6. '[' → logprob: -16.625001907348633
    7. 'import' → logprob: -16.750001907348633
    8. '[l' → logprob: -17.000001907348633
    9. '   ' → logprob: -17.500001907348633
    10. ' ' → logprob: -17.875001907348633

Token 289: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009048703126609325
    2. '_l' → logprob: -4.759048938751221
    3. 'l' → logprob: -7.759048938751221
    4. '   ' → logprob: -12.634048461914062
    5. '2' → logprob: -13.884048461914062
    6. '```' → logprob: -13.884048461914062
    7. ' ' → logprob: -15.259048461914062
    8. ')' → logprob: -15.384048461914062
    9. ' l' → logprob: -15.634048461914062
    10. '-l' → logprob: -15.759048461914062

Token 290: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06623570621013641
    2. ' -' → logprob: -2.8162357807159424
    3. '<|end|>' → logprob: -6.441235542297363
    4. '-' → logprob: -6.816235542297363
    5. ' +' → logprob: -7.191235542297363
    6. ' )' → logprob: -8.066235542297363
    7. '   ' → logprob: -8.941235542297363
    8. '[' → logprob: -9.566235542297363
    9. '+' → logprob: -9.691235542297363
    10. '0' → logprob: -10.191235542297363

Token 291: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.18115223944187164
    2. ' l' → logprob: -1.8061522245407104
    3. 'u' → logprob: -7.05615234375
    4. ' u' → logprob: -7.80615234375
    5. '   ' → logprob: -10.18115234375
    6. '1' → logprob: -10.68115234375
    7. '	l' → logprob: -10.80615234375
    8. '(l' → logprob: -11.55615234375
    9. ' ' → logprob: -11.80615234375
    10. '    ' → logprob: -12.05615234375

Token 292: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004657849203795195
    2. 'l' → logprob: -5.379657745361328
    3. ' l' → logprob: -11.379657745361328
    4. '2' → logprob: -11.629657745361328
    5. 'u' → logprob: -11.879657745361328
    6. '   ' → logprob: -13.254657745361328
    7. '[' → logprob: -13.379657745361328
    8. '[-' → logprob: -13.379657745361328
    9. ' ' → logprob: -13.504657745361328
    10. '0' → logprob: -14.192157745361328

Token 293: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.008621666580438614
    2. '[' → logprob: -4.758621692657471
    3. '0' → logprob: -13.133621215820312
    4. '1' → logprob: -13.258621215820312
    5. '   ' → logprob: -13.758621215820312
    6. '[
' → logprob: -14.383621215820312
    7. ' [-' → logprob: -14.383621215820312
    8. '][-' → logprob: -14.883621215820312
    9. '```' → logprob: -15.383621215820312
    10. '-' → logprob: -15.758621215820312

Token 294: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.259079363080673e-05
    2. '2' → logprob: -12.250012397766113
    3. ' ' → logprob: -12.500012397766113
    4. '   ' → logprob: -13.625012397766113
    5. '
' → logprob: -14.312512397766113
    6. '```' → logprob: -14.500012397766113
    7. '])' → logprob: -15.250012397766113
    8. ']' → logprob: -15.312512397766113
    9. '(' → logprob: -16.06251335144043
    10. '0' → logprob: -16.25001335144043

Token 295: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.02690763771533966
    2. ')' → logprob: -3.6519076824188232
    3. ')])' → logprob: -8.526907920837402
    4. ' ])' → logprob: -8.526907920837402
    5. ']' → logprob: -9.901907920837402
    6. '-' → logprob: -10.026907920837402
    7. '])
' → logprob: -10.526907920837402
    8. ' )' → logprob: -11.026907920837402
    9. ']))' → logprob: -11.276907920837402
    10. '])-' → logprob: -11.276907920837402

Token 296: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0024462812580168247
    2. 'print' → logprob: -6.377446174621582
    3. '
' → logprob: -7.377446174621582
    4. '<|end|>' → logprob: -10.127446174621582
    5. '    
' → logprob: -10.252446174621582
    6. '```' → logprob: -10.877446174621582
    7. ')' → logprob: -11.377446174621582
    8. ' print' → logprob: -12.002446174621582
    9. 'return' → logprob: -13.377446174621582
    10. '       ' → logprob: -13.752446174621582

Token 297: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005229017697274685
    2. 'print' (adapté à ' print') → logprob: -5.7552289962768555
    3. '
' → logprob: -6.3802289962768555
    4. '    
' → logprob: -8.630228996276855
    5. '```' → logprob: -8.880228996276855
    6. ' print' → logprob: -11.130228996276855
    7. ')' → logprob: -11.630228996276855
    8. '<|end|>' → logprob: -12.380228996276855
    9. '  
' → logprob: -13.255228996276855
    10. '\n' → logprob: -13.380228996276855

Token 298: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0026392722502350807
    2. '(' → logprob: -6.252639293670654
    3. '()' → logprob: -7.252639293670654
    4. 'ans' → logprob: -13.627638816833496
    5. '(
' → logprob: -15.377638816833496
    6. ' (' → logprob: -15.502638816833496
    7. '('' → logprob: -15.502638816833496
    8. '(answer' → logprob: -15.502638816833496
    9. '(sum' → logprob: -16.877639770507812
    10. '("' → logprob: -17.002639770507812

Token 299: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.173704271830502e-06
    2. ')
' → logprob: -13.75000286102295
    3. '()' → logprob: -13.75000286102295
    4. ' )' → logprob: -14.75000286102295
    5. '())' → logprob: -15.50000286102295
    6. '`)' → logprob: -15.87500286102295
    7. '')' → logprob: -16.250003814697266
    8. ')`' → logprob: -16.375003814697266
    9. '")' → logprob: -17.875003814697266
    10. '))' → logprob: -18.250003814697266

Token 300: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 301: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.2014537751674652
    2. '__' → logprob: -1.7014538049697876
    3. 'name' → logprob: -10.576454162597656
    4. ' ' → logprob: -12.076454162597656
    5. '_name' → logprob: -12.576454162597656
    6. '___' → logprob: -13.701454162597656
    7. '  ' → logprob: -13.826454162597656
    8. 'Name' → logprob: -13.951454162597656
    9. ' ' → logprob: -13.951454162597656
    10. ' name' → logprob: -14.701454162597656

Token 302: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.034321386367082596
    2. '==' → logprob: -3.9093213081359863
    3. ' ==' → logprob: -4.409321308135986
    4. ' __' → logprob: -7.284321308135986
    5. '=="' → logprob: -7.909321308135986
    6. '_' → logprob: -8.784321784973145
    7. '__.__' → logprob: -9.909321784973145
    8. 'name' → logprob: -10.159321784973145
    9. '=='' → logprob: -10.159321784973145
    10. '_name' → logprob: -10.409321784973145

Token 303: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0004574863996822387
    2. '__.__' → logprob: -8.125457763671875
    3. '==' → logprob: -9.000457763671875
    4. '=="' → logprob: -11.250457763671875
    5. ' ==' → logprob: -11.625457763671875
    6. '__.' → logprob: -12.125457763671875
    7. '__["' → logprob: -12.625457763671875
    8. '___' → logprob: -13.375457763671875
    9. '__('' → logprob: -13.750457763671875
    10. '__":
' → logprob: -13.750457763671875

Token 304: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.45742133259773254
    2. '__' → logprob: -1.5824213027954102
    3. '==' → logprob: -1.8324213027954102
    4. '=="' → logprob: -6.58242130279541
    5. '=='' → logprob: -9.08242130279541
    6. '_' → logprob: -11.08242130279541
    7. '=' → logprob: -11.20742130279541
    8. '[' → logprob: -11.45742130279541
    9. ' =="' → logprob: -11.45742130279541
    10. '.__' → logprob: -12.08242130279541

Token 305: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.06202695146203041
    2. ''' → logprob: -2.8120269775390625
    3. '__' → logprob: -10.062026977539062
    4. ' "__' → logprob: -11.062026977539062
    5. ' '__' → logprob: -14.562026977539062
    6. '"user' → logprob: -16.312026977539062
    7. '"name' → logprob: -16.687026977539062
    8. '"_' → logprob: -17.062026977539062
    9. ''"' → logprob: -17.437026977539062
    10. '("__' → logprob: -17.687026977539062

Token 306: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.023444274440407753
    2. '__' → logprob: -3.773444175720215
    3. 'name' → logprob: -8.773444175720215
    4. '"' → logprob: -10.273444175720215
    5. '_main' → logprob: -13.148444175720215
    6. '__":
' → logprob: -13.148444175720215
    7. ''' → logprob: -13.398444175720215
    8. ' main' → logprob: -13.898444175720215
    9. '```' → logprob: -14.273444175720215
    10. 'python' → logprob: -14.523444175720215

Token 307: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.5787431001663208
    2. '__' → logprob: -0.8287431001663208
    3. '__':
' → logprob: -6.328742980957031
    4. '__:' → logprob: -7.203742980957031
    5. '__.' → logprob: -8.828742980957031
    6. '__["' → logprob: -9.703742980957031
    7. '__.__' → logprob: -11.078742980957031
    8. '__
' → logprob: -11.703742980957031
    9. '__[' → logprob: -11.703742980957031
    10. ':' → logprob: -12.203742980957031

Token 308: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.024317733943462372
    2. '   ' → logprob: -4.024317741394043
    3. 'main' → logprob: -5.399317741394043
    4. '	main' → logprob: -6.649317741394043
    5. '    
' → logprob: -8.899317741394043
    6. '_main' → logprob: -9.274317741394043
    7. '(main' → logprob: -10.524317741394043
    8. '<|end|>' → logprob: -11.149317741394043
    9. '    ' → logprob: -11.524317741394043
    10. '__' → logprob: -11.649317741394043

Token 309: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.00020389800192788243
    2. ' main' → logprob: -8.500204086303711
    3. '	main' → logprob: -15.375204086303711
    4. '   ' → logprob: -15.750204086303711
    5. '_main' → logprob: -20.25020408630371
    6. '.main' → logprob: -20.87520408630371
    7. '(main' → logprob: -21.37520408630371
    8. ' ' → logprob: -21.50020408630371
    9. '  ' → logprob: -21.75020408630371
    10. 'Main' → logprob: -22.75020408630371

Token 310: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 308
Tokens correctement prédits (1ère position, stricte): 158
Tokens correctement prédits (1ère position, avec adaptation): 168
Tokens correctement prédits (top 10): 274
Précision stricte (1ère position): 51.30%
Précision adaptée (1ère position): 54.55%
Précision (top 10): 88.96%
================================================================================
