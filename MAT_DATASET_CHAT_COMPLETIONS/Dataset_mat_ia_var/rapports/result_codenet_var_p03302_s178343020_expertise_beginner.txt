================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:43
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
inputs = input().split()
a = int(inputs[0])
b = int(inputs[1])

if a + b == 15:
    print("+")
else:
    if a * b == 15:
        print("*")
    else:
        print("x")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'inputs' (ID: 54250)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002302508568391204
    2. '('' → logprob: -7.002302646636963
    3. ''' → logprob: -7.502302646636963
    4. '[' → logprob: -8.752302169799805
    5. '.' → logprob: -9.127302169799805
    6. 's' → logprob: -9.252302169799805
    7. '"' → logprob: -9.377302169799805
    8. '(
' → logprob: -9.377302169799805
    9. '()' → logprob: -9.627302169799805
    10. ')' → logprob: -9.752302169799805

Token 4: 'split' (ID: 13627)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.24695205688476562
    2. '(' → logprob: -1.9969520568847656
    3. '().' → logprob: -3.7469520568847656
    4. '.' → logprob: -3.8719520568847656
    5. '.split' → logprob: -4.121952056884766
    6. 'split' → logprob: -4.621952056884766
    7. ')' → logprob: -5.746952056884766
    8. '```' → logprob: -5.871952056884766
    9. '.strip' → logprob: -6.121952056884766
    10. '.lower' → logprob: -7.121952056884766

Token 5: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003903026692569256
    2. '()' → logprob: -5.628902912139893
    3. '"' → logprob: -9.75390338897705
    4. '`' → logprob: -10.12890338897705
    5. '('' → logprob: -10.12890338897705
    6. '(
' → logprob: -10.12890338897705
    7. '("("' → logprob: -10.62890338897705
    8. '```' → logprob: -10.62890338897705
    9. '(

' → logprob: -10.75390338897705
    10. '((' → logprob: -11.00390338897705

Token 6: 'a' (ID: 64)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5415995121002197
    2. '.' → logprob: -0.9165995121002197
    3. '```' → logprob: -5.166599273681641
    4. 'print' → logprob: -5.916599273681641
    5. 'for' → logprob: -6.291599273681641
    6. '#' → logprob: -6.666599273681641
    7. '[:]' → logprob: -7.041599273681641
    8. '.for' → logprob: -7.166599273681641
    9. '[int' → logprob: -7.291599273681641
    10. '.append' → logprob: -7.666599273681641

Token 7: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006114955060184002
    2. '=' → logprob: -6.381114959716797
    3. ' =' → logprob: -7.131114959716797
    4. '+' → logprob: -7.381114959716797
    5. 's' → logprob: -7.381114959716797
    6. 'pp' → logprob: -7.506114959716797
    7. '.' → logprob: -7.881114959716797
    8. ',' → logprob: -8.131114959716797
    9. '[i' → logprob: -8.756114959716797
    10. '[p' → logprob: -8.881114959716797

Token 8: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1162932962179184
    2. ' int' → logprob: -2.24129319190979
    3. 'inputs' → logprob: -5.866293430328369
    4. ' inputs' → logprob: -7.616293430328369
    5. 'float' → logprob: -10.241292953491211
    6. ' ' → logprob: -10.366292953491211
    7. 'a' → logprob: -10.866292953491211
    8. '[int' → logprob: -10.866292953491211
    9. ' float' → logprob: -11.491292953491211
    10. ' a' → logprob: -12.491292953491211

Token 9: '(inputs' (ID: 78697)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3160242438316345
    2. '(inputs' → logprob: -1.3160243034362793
    3. '(a' → logprob: -6.191024303436279
    4. '(input' → logprob: -7.566024303436279
    5. 'inputs' → logprob: -10.316023826599121
    6. '(
' → logprob: -10.816023826599121
    7. '(

' → logprob: -10.816023826599121
    8. '(user' → logprob: -11.316023826599121
    9. '("("' → logprob: -11.316023826599121
    10. '()' → logprob: -11.441023826599121

Token 10: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.893480243277736e-05
    2. ')' → logprob: -10.250039100646973
    3. '[a' → logprob: -12.750039100646973
    4. '\[' → logprob: -16.000038146972656
    5. ' [' → logprob: -16.375038146972656
    6. '[])' → logprob: -16.500038146972656
    7. '[
' → logprob: -16.500038146972656
    8. '0' → logprob: -17.125038146972656
    9. ' )' → logprob: -17.750038146972656
    10. '[i' → logprob: -17.750038146972656

Token 11: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.65707261255011e-06
    2. '1' → logprob: -12.250008583068848
    3. ' ' → logprob: -12.500008583068848
    4. ')' → logprob: -16.875009536743164
    5. '])' → logprob: -17.125009536743164
    6. '-' → logprob: -17.750009536743164
    7. '2' → logprob: -17.750009536743164
    8. ']' → logprob: -17.875009536743164
    9. '```' → logprob: -18.500009536743164
    10. '   ' → logprob: -18.687509536743164

Token 12: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3178230822086334
    2. '])' → logprob: -1.317823052406311
    3. ']' → logprob: -5.4428229331970215
    4. ')])' → logprob: -9.31782341003418
    5. '))' → logprob: -10.06782341003418
    6. ')]' → logprob: -10.19282341003418
    7. ''])' → logprob: -11.06782341003418
    8. ' ])' → logprob: -12.31782341003418
    9. ']))' → logprob: -12.44282341003418
    10. '）' → logprob: -12.44282341003418

Token 13: 'b' (ID: 65)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01814842037856579
    2. 'b' → logprob: -4.518148422241211
    3. '+b' → logprob: -5.393148422241211
    4. '=' → logprob: -7.518148422241211
    5. ' +' → logprob: -7.643148422241211
    6. ',' → logprob: -8.393148422241211
    7. '*' → logprob: -8.393148422241211
    8. ' b' → logprob: -8.393148422241211
    9. '+
' → logprob: -9.018148422241211
    10. 'a' → logprob: -9.268148422241211

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7277474999427795
    2. ' ' → logprob: -1.6027474403381348
    3. ')' → logprob: -1.7277474403381348
    4. '=' → logprob: -2.1027474403381348
    5. '  ' → logprob: -5.602747440338135
    6. '<|end|>' → logprob: -5.602747440338135
    7. ' )' → logprob: -6.102747440338135
    8. '+' → logprob: -6.352747440338135
    9. '[' → logprob: -6.477747440338135
    10. '_' → logprob: -6.977747440338135

Token 15: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.57594233751297
    2. ' int' → logprob: -0.82594233751297
    3. ' ' → logprob: -14.075942039489746
    4. ' a' → logprob: -14.450942039489746
    5. '=int' → logprob: -14.825942039489746
    6. '(int' → logprob: -14.950942039489746
    7. ' inputs' → logprob: -15.075942039489746
    8. 'a' → logprob: -15.700942039489746
    9. 'inputs' → logprob: -16.075942993164062
    10. '<int' → logprob: -16.325942993164062

Token 16: '(inputs' (ID: 78697)
  Prédit: '(inputs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(inputs' → logprob: -0.07030318677425385
    2. '(' → logprob: -2.695303201675415
    3. '(a' → logprob: -8.195302963256836
    4. '(input' → logprob: -10.320302963256836
    5. '(outputs' → logprob: -11.070302963256836
    6. '(in' → logprob: -11.445302963256836
    7. ' (' → logprob: -11.570302963256836
    8. '(b' → logprob: -11.945302963256836
    9. 'inputs' → logprob: -12.945302963256836
    10. '("("' → logprob: -13.570302963256836

Token 17: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001366744691040367
    2. ')' → logprob: -9.125136375427246
    3. '[
' → logprob: -10.875136375427246
    4. ']' → logprob: -12.875136375427246
    5. ' [' → logprob: -13.125136375427246
    6. ')[' → logprob: -13.875136375427246
    7. '(' → logprob: -14.750136375427246
    8. '```' → logprob: -14.750136375427246
    9. '])' → logprob: -14.875136375427246
    10. ' )' → logprob: -15.000136375427246

Token 18: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04303058981895447
    2. '0' → logprob: -3.1680305004119873
    3. '])' → logprob: -10.918030738830566
    4. ' ' → logprob: -11.918030738830566
    5. ')' → logprob: -12.293030738830566
    6. ']' → logprob: -13.543030738830566
    7. ')]' → logprob: -15.418030738830566
    8. '2' → logprob: -15.668030738830566
    9. '```' → logprob: -16.41802978515625
    10. '   ' → logprob: -16.91802978515625

Token 19: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.127333340875339e-06
    2. ']' → logprob: -13.250003814697266
    3. ' )' → logprob: -14.375003814697266
    4. '}' → logprob: -14.875003814697266
    5. '')' → logprob: -15.125003814697266
    6. '`)' → logprob: -15.875003814697266
    7. '[' → logprob: -16.000003814697266
    8. '）' → logprob: -16.125003814697266
    9. '```' → logprob: -16.125003814697266
    10. '))' → logprob: -16.125003814697266

Token 20: 'if' (ID: 366)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.003198273479938507
    2. 'c' → logprob: -6.628198146820068
    3. '*' → logprob: -7.628198146820068
    4. '+
' → logprob: -7.628198146820068
    5. '=' → logprob: -8.003198623657227
    6. '#' → logprob: -8.253198623657227
    7. 'a' → logprob: -10.003198623657227
    8. '>' → logprob: -10.128198623657227
    9. 'i' → logprob: -10.253198623657227
    10. '-' → logprob: -10.253198623657227

Token 21: ' a' (ID: 261)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.37278130650520325
    2. ' a' → logprob: -1.2477812767028809
    3. 'a' → logprob: -3.747781276702881
    4. '  ' → logprob: -9.122781753540039
    5. '<|end|>' → logprob: -9.372781753540039
    6. ' (' → logprob: -9.872781753540039
    7. 'space' → logprob: -10.497781753540039
    8. 's' → logprob: -10.497781753540039
    9. ' ' → logprob: -10.497781753540039
    10. ' space' → logprob: -10.997781753540039

Token 22: ' +' (ID: 659)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.18129484355449677
    2. ' <' → logprob: -1.9312947988510132
    3. ' ' → logprob: -4.431294918060303
    4. '>' → logprob: -5.556294918060303
    5. '<' → logprob: -6.431294918060303
    6. ' ==' → logprob: -6.556294918060303
    7. ' <=' → logprob: -7.431294918060303
    8. ' >=' → logprob: -7.556294918060303
    9. '  ' → logprob: -8.431294441223145
    10. '_' → logprob: -8.931294441223145

Token 23: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.476650595664978
    2. ' b' → logprob: -0.976650595664978
    3. ' ' → logprob: -5.976650714874268
    4. '<|end|>' → logprob: -11.10165023803711
    5. '>b' → logprob: -11.60165023803711
    6. '1' → logprob: -13.22665023803711
    7. '  ' → logprob: -13.72665023803711
    8. ''' → logprob: -13.97665023803711
    9. '>' → logprob: -14.10165023803711
    10. ' >' → logprob: -14.35165023803711

Token 24: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.16361261904239655
    2. ' ' → logprob: -2.0386126041412354
    3. ' <' → logprob: -4.6636128425598145
    4. '  ' → logprob: -5.6636128425598145
    5. ' ==' → logprob: -5.7886128425598145
    6. ' <=' → logprob: -6.0386128425598145
    7. '>' → logprob: -6.7886128425598145
    8. ' >=' → logprob: -7.2886128425598145
    9. '<|end|>' → logprob: -8.663612365722656
    10. ' !=' → logprob: -9.288612365722656

Token 25: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04182714223861694
    2. '10' → logprob: -3.4168272018432617
    3. '100' → logprob: -5.291827201843262
    4. '0' → logprob: -6.166827201843262
    5. '1' → logprob: -7.666827201843262
    6. '20' → logprob: -8.791827201843262
    7. ' a' → logprob: -8.916827201843262
    8. '42' → logprob: -9.291827201843262
    9. '7' → logprob: -10.541827201843262
    10. '15' → logprob: -10.666827201843262

Token 26: '15' (ID: 1055)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.42363348603248596
    2. '100' → logprob: -1.6736334562301636
    3. '0' → logprob: -2.173633575439453
    4. ' ' → logprob: -3.548633575439453
    5. '1' → logprob: -5.423633575439453
    6. '3' → logprob: -5.548633575439453
    7. 'a' → logprob: -6.048633575439453
    8. '15' → logprob: -6.423633575439453
    9. '7' → logprob: -7.173633575439453
    10. '20' → logprob: -7.298633575439453

Token 27: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.961759259458631e-06
    2. ' :' → logprob: -12.625004768371582
    3. ':**' → logprob: -13.625004768371582
    4. '':'' → logprob: -16.1250057220459
    5. ':
' → logprob: -16.6250057220459
    6. ':''' → logprob: -16.7500057220459
    7. '):' → logprob: -17.0000057220459
    8. '>:' → logprob: -17.6250057220459
    9. ':return' → logprob: -17.8750057220459
    10. '：' → logprob: -18.0000057220459

Token 28: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009874253533780575
    2. ' :' → logprob: -5.50987434387207
    3. '   ' → logprob: -6.00987434387207
    4. ' print' → logprob: -6.63487434387207
    5. '\n' → logprob: -7.63487434387207
    6. ' ' → logprob: -7.88487434387207
    7. ':
' → logprob: -8.38487434387207
    8. '\' → logprob: -8.50987434387207
    9. 'print' → logprob: -8.50987434387207
    10. '.' → logprob: -8.88487434387207

Token 29: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.16532295942306519
    2. 'print' (adapté à ' print') → logprob: -1.91532301902771
    3. '   ' → logprob: -5.790322780609131
    4. '    ' → logprob: -6.290322780609131
    5. ' ' → logprob: -9.540323257446289
    6. '\n' → logprob: -10.415323257446289
    7. '\' → logprob: -11.165323257446289
    8. ' pass' → logprob: -11.165323257446289
    9. ' \' → logprob: -11.415323257446289
    10. '	print' → logprob: -12.040323257446289

Token 30: '("+' (ID: 68159)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0017195657128468156
    2. '('' → logprob: -6.6267194747924805
    3. '("("' → logprob: -8.25171947479248
    4. '("' → logprob: -9.25171947479248
    5. '()' → logprob: -10.87671947479248
    6. '(True' → logprob: -11.50171947479248
    7. '(a' → logprob: -13.37671947479248
    8. '("")' → logprob: -13.62671947479248
    9. '(
' → logprob: -14.12671947479248
    10. ' (' → logprob: -14.25171947479248

Token 31: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.03626087307929993
    2. '"' → logprob: -3.6612608432769775
    3. '15' → logprob: -5.536261081695557
    4. '""' → logprob: -5.661261081695557
    5. ''' → logprob: -6.786261081695557
    6. ')' → logprob: -7.036261081695557
    7. '')' → logprob: -8.786260604858398
    8. '"""' → logprob: -9.661260604858398
    9. '''' → logprob: -9.786260604858398
    10. '1' → logprob: -10.411260604858398

Token 32: 'else' (ID: 2807)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.14924310147762299
    2. 'else' → logprob: -2.274243116378784
    3. ' elif' → logprob: -4.024242877960205
    4. ' else' → logprob: -5.149242877960205
    5. ' ' → logprob: -5.274242877960205
    6. 'e' → logprob: -6.399242877960205
    7. '```' → logprob: -7.024242877960205
    8. '\n' → logprob: -7.024242877960205
    9. ':' → logprob: -7.274242877960205
    10. '\' → logprob: -7.524242877960205

Token 33: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00013369438238441944
    2. ' :' → logprob: -9.250133514404297
    3. '   ' → logprob: -10.750133514404297
    4. ':
' → logprob: -11.250133514404297
    5. '    ' → logprob: -14.500133514404297
    6. ' ' → logprob: -14.750133514404297
    7. '):' → logprob: -15.250133514404297
    8. '():' → logprob: -15.250133514404297
    9. ')' → logprob: -15.500133514404297
    10. '```' → logprob: -15.750133514404297

Token 34: '   ' (ID: 271)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0401640310883522
    2. '"-' → logprob: -4.040163993835449
    3. '   ' → logprob: -4.290163993835449
    4. '"' → logprob: -5.540163993835449
    5. 'print' → logprob: -6.290163993835449
    6. ' -' → logprob: -7.290163993835449
    7. ' ' → logprob: -7.415163993835449
    8. '    ' → logprob: -7.665163993835449
    9. '(' → logprob: -9.79016399383545
    10. '  ' → logprob: -9.91516399383545

Token 35: ' if' (ID: 538)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07960264384746552
    2. 'print' → logprob: -2.7046027183532715
    3. '"-' → logprob: -4.7046027183532715
    4. ' -' → logprob: -8.954602241516113
    5. 'if' (adapté à ' if') → logprob: -9.204602241516113
    6. '   ' → logprob: -9.454602241516113
    7. '"' → logprob: -10.079602241516113
    8. '-)' → logprob: -10.204602241516113
    9. '(' → logprob: -10.579602241516113
    10. '("-' → logprob: -10.954602241516113

Token 36: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.03574110195040703
    2. 'a' → logprob: -3.410741090774536
    3. ' ' → logprob: -6.410741329193115
    4. '<|end|>' → logprob: -8.160740852355957
    5. ' ' → logprob: -9.785740852355957
    6. ' b' → logprob: -10.285740852355957
    7. ' (' → logprob: -10.910740852355957
    8. '  ' → logprob: -11.785740852355957
    9. ')' → logprob: -12.035740852355957
    10. 'b' → logprob: -12.160740852355957

Token 37: ' *' (ID: 425)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7344747185707092
    2. ' +' → logprob: -1.2344746589660645
    3. '+' → logprob: -2.1094746589660645
    4. ' >' → logprob: -3.6094746589660645
    5. ' *' → logprob: -3.8594746589660645
    6. '*' → logprob: -3.9844746589660645
    7. ' -' → logprob: -4.4844746589660645
    8. '-' → logprob: -4.7344746589660645
    9. '<|end|>' → logprob: -4.8594746589660645
    10. ' ==' → logprob: -5.8594746589660645

Token 38: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0806565135717392
    2. ' b' → logprob: -2.7056565284729004
    3. '<|end|>' → logprob: -4.5806565284729
    4. ' ' → logprob: -7.8306565284729
    5. '<|end|>' → logprob: -11.330656051635742
    6. '  ' → logprob: -12.955656051635742
    7. '*b' → logprob: -14.455656051635742
    8. '	b' → logprob: -14.580656051635742
    9. ')b' → logprob: -14.705656051635742
    10. '>b' → logprob: -15.455656051635742

Token 39: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.012493999674916267
    2. ' >' → logprob: -5.137494087219238
    3. '==' → logprob: -5.262494087219238
    4. ' ' → logprob: -7.887494087219238
    5. ' <=' → logprob: -8.012494087219238
    6. ' >=' → logprob: -8.137494087219238
    7. ' <' → logprob: -8.387494087219238
    8. ' !=' → logprob: -10.387494087219238
    9. '<|end|>' → logprob: -10.387494087219238
    10. '   ' → logprob: -10.762494087219238

Token 40: ' ' (ID: 220)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.016818517819046974
    2. ' ' → logprob: -4.141818523406982
    3. '0' → logprob: -8.266818046569824
    4. '30' → logprob: -8.641818046569824
    5. '1' → logprob: -8.766818046569824
    6. '20' → logprob: -9.891818046569824
    7. '100' → logprob: -10.641818046569824
    8. '25' → logprob: -11.016818046569824
    9. '10' → logprob: -11.391818046569824
    10. '2' → logprob: -11.641818046569824

Token 41: '15' (ID: 1055)
  Prédit: '15'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.0004071971052326262
    2. ' ' → logprob: -8.125407218933105
    3. '0' → logprob: -10.375407218933105
    4. '1' → logprob: -10.750407218933105
    5. '30' → logprob: -11.125407218933105
    6. '60' → logprob: -11.500407218933105
    7. '50' → logprob: -12.250407218933105
    8. 'a' → logprob: -12.625407218933105
    9. '20' → logprob: -12.625407218933105
    10. '10' → logprob: -12.750407218933105

Token 42: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00012094692647224292
    2. ' :' → logprob: -10.000121116638184
    3. ':
' → logprob: -10.125121116638184
    4. '):' → logprob: -10.375121116638184
    5. '   ' → logprob: -13.000121116638184
    6. '       ' → logprob: -14.250121116638184
    7. '():' → logprob: -15.250121116638184
    8. '    ' → logprob: -15.625121116638184
    9. ' and' → logprob: -15.750121116638184
    10. '>:' → logprob: -15.750121116638184

Token 43: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05967356637120247
    2. '   ' → logprob: -2.934673547744751
    3. '    ' → logprob: -6.55967378616333
    4. ':' → logprob: -6.68467378616333
    5. '\n' → logprob: -6.93467378616333
    6. 'print' → logprob: -8.184673309326172
    7. '     ' → logprob: -8.684673309326172
    8. '\' → logprob: -9.184673309326172
    9. ' ' → logprob: -9.684673309326172
    10. '<|end|>' → logprob: -9.684673309326172

Token 44: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0485416054725647
    2. '       ' → logprob: -3.17354154586792
    3. '   ' → logprob: -5.42354154586792
    4. ' print' → logprob: -7.04854154586792
    5. '```' → logprob: -9.298542022705078
    6. '           ' → logprob: -9.923542022705078
    7. '\n' → logprob: -10.548542022705078
    8. '``' → logprob: -11.298542022705078
    9. '`' → logprob: -11.423542022705078
    10. '"' → logprob: -11.673542022705078

Token 45: '("*' (ID: 59145)
  Prédit: '("*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("*' → logprob: -0.18458381295204163
    2. '(' → logprob: -2.184583902359009
    3. '("("' → logprob: -3.559583902359009
    4. '("+' → logprob: -3.684583902359009
    5. '("' → logprob: -6.18458366394043
    6. '("")' → logprob: -9.05958366394043
    7. '"+"' → logprob: -9.80958366394043
    8. '("/")' → logprob: -10.05958366394043
    9. '("="' → logprob: -10.18458366394043
    10. '"*' → logprob: -10.30958366394043

Token 46: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00020699729793705046
    2. ')' → logprob: -9.50020694732666
    3. '")
' → logprob: -9.62520694732666
    4. ')")' → logprob: -10.00020694732666
    5. '"' → logprob: -11.25020694732666
    6. '*' → logprob: -12.50020694732666
    7. '+")' → logprob: -12.87520694732666
    8. ' ")' → logprob: -15.75020694732666
    9. '"+' → logprob: -15.75020694732666
    10. '("' → logprob: -15.87520694732666

Token 47: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.02093631774187088
    2. ' else' → logprob: -4.895936489105225
    3. '\n' → logprob: -5.270936489105225
    4. '   ' → logprob: -5.895936489105225
    5. 'elif' → logprob: -5.895936489105225
    6. '
' → logprob: -7.520936489105225
    7. '<|end|>' → logprob: -7.520936489105225
    8. '```' → logprob: -7.645936489105225
    9. 'e' → logprob: -8.270936012268066
    10. 'n' → logprob: -8.770936012268066

Token 48: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.015500571578741074
    2. '   ' → logprob: -4.515500545501709
    3. 'elif' → logprob: -5.640500545501709
    4. ' else' → logprob: -7.265500545501709
    5. '```' → logprob: -8.765501022338867
    6. 'e' → logprob: -11.640501022338867
    7. '	else' → logprob: -12.015501022338867
    8. '\n' → logprob: -12.015501022338867
    9. ')' → logprob: -12.515501022338867
    10. '\' → logprob: -13.015501022338867

Token 49: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00012308525037951767
    2. ':
' → logprob: -9.250123023986816
    3. ' :' → logprob: -10.625123023986816
    4. '<|end|>' → logprob: -13.875123023986816
    5. '   ' → logprob: -14.250123023986816
    6. ':

' → logprob: -15.375123023986816
    7. ':**' → logprob: -16.625123977661133
    8. ':
' → logprob: -16.625123977661133
    9. '```' → logprob: -16.625123977661133
    10. '       ' → logprob: -16.750123977661133

Token 50: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2587796449661255
    2. '   ' → logprob: -1.6337796449661255
    3. '"' → logprob: -4.008779525756836
    4. 'print' → logprob: -4.883779525756836
    5. '(' → logprob: -5.258779525756836
    6. '    ' → logprob: -7.383779525756836
    7. '()' → logprob: -7.883779525756836
    8. 'if' → logprob: -8.633779525756836
    9. '           ' → logprob: -9.133779525756836
    10. ' ' → logprob: -9.258779525756836

Token 51: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0004130344314035028
    2. '-' → logprob: -8.375412940979004
    3. 'if' → logprob: -8.875412940979004
    4. ' print' → logprob: -11.125412940979004
    5. '       ' → logprob: -11.375412940979004
    6. '("-' → logprob: -12.375412940979004
    7. 'pass' → logprob: -13.125412940979004
    8. '   ' → logprob: -13.250412940979004
    9. '(' → logprob: -13.500412940979004
    10. '    ' → logprob: -13.625412940979004

Token 52: '("' (ID: 568)
  Prédit: '("-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("-' → logprob: -0.8973810076713562
    2. '("' → logprob: -1.022381067276001
    3. '("("' → logprob: -2.272381067276001
    4. '("="' → logprob: -2.772381067276001
    5. '(' → logprob: -2.897381067276001
    6. '("")' → logprob: -5.897380828857422
    7. '("/")' → logprob: -6.022380828857422
    8. '("?' → logprob: -6.272380828857422
    9. '(">' → logprob: -6.522380828857422
    10. '("+' → logprob: -6.897380828857422

Token 53: 'x' (ID: 87)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.012961272150278091
    2. '?' → logprob: -5.012961387634277
    3. '!' → logprob: -6.137961387634277
    4. '0' → logprob: -7.012961387634277
    5. '15' → logprob: -7.262961387634277
    6. '!")' → logprob: -7.262961387634277
    7. '")' → logprob: -7.887961387634277
    8. '-)' → logprob: -8.137961387634277
    9. '"' → logprob: -8.262961387634277
    10. 'N' → logprob: -9.137961387634277

Token 54: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -3.309382373117842e-05
    2. 'x' → logprob: -11.500033378601074
    3. '"' → logprob: -11.625033378601074
    4. '*' → logprob: -11.750033378601074
    5. '!")' → logprob: -13.250033378601074
    6. ')")' → logprob: -13.500033378601074
    7. '")
' → logprob: -13.625033378601074
    8. ')' → logprob: -14.250033378601074
    9. ' ")' → logprob: -15.375033378601074
    10. '+")' → logprob: -15.500033378601074


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 52
Tokens correctement prédits (1ère position, stricte): 15
Tokens correctement prédits (1ère position, avec adaptation): 18
Tokens correctement prédits (top 10): 42
Précision stricte (1ère position): 28.85%
Précision adaptée (1ère position): 34.62%
Précision (top 10): 80.77%
================================================================================
