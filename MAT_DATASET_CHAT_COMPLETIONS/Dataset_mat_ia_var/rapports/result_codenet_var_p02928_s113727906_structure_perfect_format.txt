================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:46:47
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    N, K = map(int, input().split())
    A = list(map(int, input().split()))
    MOD = 10 ** 9 + 7
    count = 0
    for i in range(N - 1):
        for j in range(i, N):
            if A[i] == A[j]:
                continue
            elif K == 1 and A[i] > A[j]:
                count += 1
            else:
                if A[i] > A[j]:
                    count += K + K * (K - 1) // 2
                else:
                    k = K - 1
                    count += k + k * (k - 1) // 2
    print(count % MOD)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.49122923612594604
    2. '\n' → logprob: -1.2412292957305908
    3. '   ' → logprob: -2.741229295730591
    4. '    
' → logprob: -4.491229057312012
    5. ' 
' → logprob: -5.241229057312012
    6. '    ' → logprob: -5.366229057312012
    7. '```' → logprob: -5.616229057312012
    8. '(' → logprob: -5.991229057312012
    9. ''' → logprob: -6.616229057312012
    10. ' \' → logprob: -7.366229057312012

Token 4: ' N' (ID: 478)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5543336272239685
    2. '#' → logprob: -2.0543336868286133
    3. '   ' → logprob: -2.1793336868286133
    4. 'pass' → logprob: -2.6793336868286133
    5. '    ' → logprob: -3.5543336868286133
    6. 'return' → logprob: -3.6793336868286133
    7. 'p' → logprob: -4.429333686828613
    8. ' ' → logprob: -4.554333686828613
    9. '_' → logprob: -4.554333686828613
    10. 'a' → logprob: -5.054333686828613

Token 5: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2223850041627884
    2. ' =' → logprob: -2.0973849296569824
    3. '_' → logprob: -2.7223849296569824
    4. '.' → logprob: -5.347384929656982
    5. ')' → logprob: -6.347384929656982
    6. ',' → logprob: -6.472384929656982
    7. '  ' → logprob: -6.972384929656982
    8. ' ' → logprob: -7.222384929656982
    9. '   ' → logprob: -8.22238540649414
    10. 'u' → logprob: -9.22238540649414

Token 6: ' K' (ID: 658)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5967960357666016
    2. ' K' → logprob: -0.8467960357666016
    3. ' M' → logprob: -5.346796035766602
    4. 'K' → logprob: -5.971796035766602
    5. ' k' → logprob: -5.971796035766602
    6. '  ' → logprob: -6.346796035766602
    7. ' N' → logprob: -6.596796035766602
    8. ' =' → logprob: -6.846796035766602
    9. '    ' → logprob: -7.096796035766602
    10. ')' → logprob: -7.096796035766602

Token 7: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07904015481472015
    2. '=' → logprob: -2.579040050506592
    3. ',' → logprob: -8.95404052734375
    4. ')' → logprob: -11.32904052734375
    5. ' =
' → logprob: -13.32904052734375
    6. ' ,' → logprob: -13.70404052734375
    7. '<|end|>' → logprob: -13.70404052734375
    8. ' ' → logprob: -14.20404052734375
    9. '[' → logprob: -14.32904052734375
    10. '_' → logprob: -14.45404052734375

Token 8: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.014503470622003078
    2. 'map' → logprob: -4.264503479003906
    3. ' input' → logprob: -8.139503479003906
    4. 'input' → logprob: -10.514503479003906
    5. ' ' → logprob: -11.264503479003906
    6. '0' → logprob: -13.014503479003906
    7. ' int' → logprob: -13.139503479003906
    8. 'int' → logprob: -13.764503479003906
    9. ' list' → logprob: -13.764503479003906
    10. '	map' → logprob: -14.389503479003906

Token 9: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1625818908214569
    2. '(int' → logprob: -2.0375819206237793
    3. '(str' → logprob: -4.162581920623779
    4. '(lambda' → logprob: -5.537581920623779
    5. '(
' → logprob: -9.287581443786621
    6. '(input' → logprob: -10.787581443786621
    7. '(list' → logprob: -10.787581443786621
    8. '(len' → logprob: -11.162581443786621
    9. '<int' → logprob: -12.037581443786621
    10. '<|end|>' → logprob: -12.162581443786621

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.20557793974876404
    2. ',' → logprob: -2.205577850341797
    3. ',input' → logprob: -3.580577850341797
    4. ')' → logprob: -3.955577850341797
    5. 'input' → logprob: -4.080577850341797
    6. '(' → logprob: -4.580577850341797
    7. ' input' → logprob: -7.455577850341797
    8. ' ,' → logprob: -8.080577850341797
    9. '```' → logprob: -8.955577850341797
    10. '(str' → logprob: -9.205577850341797

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5760104656219482
    2. ' input' → logprob: -0.8260104656219482
    3. ')' → logprob: -9.951010704040527
    4. '(input' → logprob: -11.326010704040527
    5. ' )' → logprob: -11.951010704040527
    6. ',input' → logprob: -13.326010704040527
    7. '```' → logprob: -14.201010704040527
    8. ' ' → logprob: -14.701010704040527
    9. '=input' → logprob: -14.826010704040527
    10. 'str' → logprob: -15.576010704040527

Token 12: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.851711094379425
    2. '()' → logprob: -1.2267110347747803
    3. '().' → logprob: -1.3517110347747803
    4. ')' → logprob: -4.101711273193359
    5. '(' → logprob: -6.226711273193359
    6. '()))' → logprob: -6.976711273193359
    7. '());' → logprob: -7.726711273193359
    8. '('' → logprob: -7.851711273193359
    9. '()>' → logprob: -8.85171127319336
    10. '();)' → logprob: -9.10171127319336

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00026407750556245446
    2. 'strip' → logprob: -8.250264167785645
    3. 'rstrip' → logprob: -13.125264167785645
    4. ' split' → logprob: -15.000264167785645
    5. ')' → logprob: -15.250264167785645
    6. '(split' → logprob: -16.375263214111328
    7. 'read' → logprob: -17.375263214111328
    8. 'spl' → logprob: -17.875263214111328
    9. 'startswith' → logprob: -19.000263214111328
    10. 's' → logprob: -19.375263214111328

Token 14: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16191843152046204
    2. '))' → logprob: -1.9119184017181396
    3. '())' → logprob: -6.536918640136719
    4. '()))' → logprob: -8.661918640136719
    5. '()' → logprob: -9.786918640136719
    6. ')))' → logprob: -12.411918640136719
    7. '),' → logprob: -13.411918640136719
    8. '`)' → logprob: -13.411918640136719
    9. ''))' → logprob: -13.536918640136719
    10. '(' → logprob: -13.786918640136719

Token 15: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0401334762573242
    2. '\n' → logprob: -1.7901334762573242
    3. '
' → logprob: -1.9151334762573242
    4. '```' → logprob: -1.9151334762573242
    5. '    
' → logprob: -2.665133476257324
    6. '\' → logprob: -3.165133476257324
    7. ' 
' → logprob: -4.540133476257324
    8. ')' → logprob: -4.665133476257324
    9. '`' → logprob: -4.665133476257324
    10. '``' → logprob: -5.040133476257324

Token 16: ' A' (ID: 355)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.5962018966674805
    2. '   ' → logprob: -1.7212018966674805
    3. 'result' → logprob: -2.0962018966674805
    4. 'count' → logprob: -2.3462018966674805
    5. 'max' → logprob: -3.3462018966674805
    6. ' for' → logprob: -3.3462018966674805
    7. 'data' → logprob: -3.3462018966674805
    8. 'd' → logprob: -3.5962018966674805
    9. 'a' → logprob: -3.7212018966674805
    10. '```' → logprob: -3.7212018966674805

Token 17: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01400800608098507
    2. '=' → logprob: -5.139008045196533
    3. ' =' → logprob: -5.514008045196533
    4. '.' → logprob: -7.014008045196533
    5. '[]' → logprob: -7.014008045196533
    6. '[:]' → logprob: -7.264008045196533
    7. ')' → logprob: -7.639008045196533
    8. '[i' → logprob: -8.764007568359375
    9. '<|end|>' → logprob: -9.014007568359375
    10. '_' → logprob: -9.389007568359375

Token 18: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.04859315976500511
    2. 'list' → logprob: -3.048593044281006
    3. ' [' → logprob: -12.423593521118164
    4. '[' → logprob: -13.923593521118164
    5. '[list' → logprob: -15.173593521118164
    6. ' []' → logprob: -15.548593521118164
    7. ' map' → logprob: -15.673593521118164
    8. 'map' → logprob: -16.673593521118164
    9. '[]' → logprob: -17.173593521118164
    10. 'List' → logprob: -17.923593521118164

Token 19: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0037335683591663837
    2. '(int' → logprob: -6.2537336349487305
    3. '(input' → logprob: -7.2537336349487305
    4. '(range' → logprob: -7.2537336349487305
    5. '()' → logprob: -9.25373363494873
    6. '(map' → logprob: -9.50373363494873
    7. '(

' → logprob: -10.12873363494873
    8. '(
' → logprob: -10.12873363494873
    9. '(eval' → logprob: -10.75373363494873
    10. '(list' → logprob: -11.00373363494873

Token 20: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.02350844442844391
    2. '(' → logprob: -3.7735085487365723
    3. '[int' → logprob: -9.398508071899414
    4. '(str' → logprob: -9.773508071899414
    5. '<int' → logprob: -9.898508071899414
    6. '```' → logprob: -11.398508071899414
    7. '(lambda' → logprob: -11.648508071899414
    8. ')(' → logprob: -11.773508071899414
    9. '=int' → logprob: -11.898508071899414
    10. ')' → logprob: -12.148508071899414

Token 21: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25520995259284973
    2. ',input' → logprob: -1.7552099227905273
    3. '(input' → logprob: -3.0052099227905273
    4. '(' → logprob: -6.005209922790527
    5. ' ,' → logprob: -8.630209922790527
    6. ',int' → logprob: -9.130209922790527
    7. '(),' → logprob: -10.630209922790527
    8. '(int' → logprob: -10.755209922790527
    9. ')' → logprob: -11.130209922790527
    10. 'input' → logprob: -11.505209922790527

Token 22: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5759674906730652
    2. 'input' → logprob: -0.8259674906730652
    3. '(input' → logprob: -10.575967788696289
    4. ',input' → logprob: -14.075967788696289
    5. '	input' → logprob: -14.200967788696289
    6. ')' → logprob: -14.575967788696289
    7. '=input' → logprob: -15.075967788696289
    8. '_input' → logprob: -16.32596778869629
    9. '<input' → logprob: -16.32596778869629
    10. ' ' → logprob: -17.07596778869629

Token 23: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.018326692283153534
    2. '()' → logprob: -4.143326759338379
    3. '()))' → logprob: -6.268326759338379
    4. '(' → logprob: -9.018326759338379
    5. '()));' → logprob: -9.268326759338379
    6. '())' → logprob: -9.518326759338379
    7. '(),' → logprob: -10.268326759338379
    8. '())))' → logprob: -10.393326759338379
    9. '()-' → logprob: -12.018326759338379
    10. '(.' → logprob: -12.268326759338379

Token 24: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.6240566083070007e-06
    2. 'strip' → logprob: -13.875001907348633
    3. ' split' → logprob: -14.750001907348633
    4. '(split' → logprob: -15.500001907348633
    5. 'rstrip' → logprob: -16.250001907348633
    6. ')' → logprob: -18.500001907348633
    7. 'spl' → logprob: -18.750001907348633
    8. '()' → logprob: -19.500001907348633
    9. '.split' → logprob: -20.125001907348633
    10. 'plit' → logprob: -20.625001907348633

Token 25: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3607421815395355
    2. ')' → logprob: -1.860742211341858
    3. '()))' → logprob: -1.985742211341858
    4. '())' → logprob: -4.985742092132568
    5. '(' → logprob: -6.360742092132568
    6. '()' → logprob: -6.610742092132568
    7. ')))' → logprob: -9.610742568969727
    8. '()))
' → logprob: -12.485742568969727
    9. ''))' → logprob: -12.610742568969727
    10. '())))' → logprob: -12.610742568969727

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3871464729309082
    2. ':' → logprob: -1.6371464729309082
    3. ')' → logprob: -1.7621464729309082
    4. '
' → logprob: -1.8871464729309082
    5. '```' → logprob: -2.262146472930908
    6. '\n' → logprob: -3.512146472930908
    7. ':
' → logprob: -4.012146472930908
    8. ' ' → logprob: -4.512146472930908
    9. '    
' → logprob: -4.512146472930908
    10. '\' → logprob: -4.637146472930908

Token 27: ' MOD' (ID: 32868)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21951048076152802
    2. 'd' → logprob: -3.594510555267334
    3. '```' → logprob: -3.719510555267334
    4. 'i' → logprob: -3.844510555267334
    5. 'c' → logprob: -3.844510555267334
    6. '
' → logprob: -3.969510555267334
    7. '    
' → logprob: -4.219510555267334
    8. 'for' → logprob: -4.844510555267334
    9. 'if' → logprob: -4.844510555267334
    10. '`' → logprob: -5.344510555267334

Token 28: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6936544179916382
    2. ' =' → logprob: -0.6936544179916382
    3. ')' → logprob: -8.06865406036377
    4. '_' → logprob: -9.31865406036377
    5. ',' → logprob: -10.06865406036377
    6. ' ' → logprob: -10.56865406036377
    7. ' )' → logprob: -12.06865406036377
    8. ' =)' → logprob: -12.06865406036377
    9. '.' → logprob: -12.56865406036377
    10. ')=' → logprob: -12.81865406036377

Token 29: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.38758933544158936
    2. ' ' → logprob: -1.1375893354415894
    3. '100' → logprob: -7.262589454650879
    4. '1' → logprob: -11.137589454650879
    5. ' (' → logprob: -14.387589454650879
    6. ' ' → logprob: -14.637589454650879
    7. '(' → logprob: -14.887589454650879
    8. '998' → logprob: -14.887589454650879
    9. 'int' → logprob: -16.012588500976562
    10. '`' → logprob: -16.387588500976562

Token 30: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0032149034086614847
    2. '100' → logprob: -5.7532148361206055
    3. '(' → logprob: -11.378214836120605
    4. '1' → logprob: -11.378214836120605
    5. ' ' → logprob: -11.503214836120605
    6. '998' → logprob: -12.503214836120605
    7. 'int' → logprob: -15.128214836120605
    8. 'pow' → logprob: -16.128215789794922
    9. ' (' → logprob: -17.878215789794922
    10. '(int' → logprob: -18.628215789794922

Token 31: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.08353299647569656
    2. '**' → logprob: -2.7085330486297607
    3. '0' → logprob: -4.583532810211182
    4. '09' → logprob: -6.083532810211182
    5. '00' → logprob: -7.458532810211182
    6. '7' → logprob: -7.958532810211182
    7. '6' → logprob: -10.45853328704834
    8. '```' → logprob: -10.95853328704834
    9. '000' → logprob: -11.45853328704834
    10. ' **' → logprob: -11.58353328704834

Token 32: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.9361264946837764e-07
    2. '09' → logprob: -15.625
    3. ' ' → logprob: -17.875
    4. '```' → logprob: -20.0
    5. '+' → logprob: -20.5
    6. '10' → logprob: -21.25
    7. '   ' → logprob: -21.25
    8. '９' → logprob: -22.25
    9. '18' → logprob: -22.5
    10. '19' → logprob: -23.375

Token 33: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '09' → logprob: -17.375
    3. '10' → logprob: -20.75
    4. '+' → logprob: -21.125
    5. '18' → logprob: -21.375
    6. '９' → logprob: -21.5
    7. '```' → logprob: -22.375
    8. '99' → logprob: -22.75
    9. '19' → logprob: -23.0
    10. ' ' → logprob: -23.375

Token 34: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0025245302822440863
    2. ' +' → logprob: -6.002524375915527
    3. '7' → logprob: -10.127524375915527
    4. '＋' → logprob: -13.127524375915527
    5. '+
' → logprob: -13.127524375915527
    6. '6' → logprob: -13.752524375915527
    7. '+

' → logprob: -14.002524375915527
    8. '```' → logprob: -14.502524375915527
    9. ' ' → logprob: -14.752524375915527
    10. ' +
' → logprob: -15.002524375915527

Token 35: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.125
    3. '+' → logprob: -16.625
    4. '   ' → logprob: -18.0
    5. '```' → logprob: -18.625
    6. '07' → logprob: -19.375
    7. '9' → logprob: -19.375
    8. '７' → logprob: -20.0625
    9. '  ' → logprob: -20.625
    10. '

' → logprob: -21.3125

Token 36: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '   ' → logprob: -18.5
    3. '```' → logprob: -18.625
    4. ' ' → logprob: -19.125
    5. '７' → logprob: -19.625
    6. '+' → logprob: -19.75
    7. '07' → logprob: -20.875
    8. '``' → logprob: -20.9375
    9. '  ' → logprob: -21.3125
    10. '

' → logprob: -21.4375

Token 37: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.055243201553821564
    2. '   ' → logprob: -4.180243015289307
    3. '\n' → logprob: -4.555243015289307
    4. '\' → logprob: -5.180243015289307
    5. '' → logprob: -5.180243015289307
    6. '    
' → logprob: -5.555243015289307
    7. ' 
' → logprob: -5.805243015289307
    8. '```' → logprob: -6.180243015289307
    9. ')' → logprob: -6.305243015289307
    10. '<|end|>' → logprob: -6.680243015289307

Token 38: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47452983260154724
    2. '   ' → logprob: -1.7245298624038696
    3. '\' → logprob: -2.72452974319458
    4. '\n' → logprob: -3.34952974319458
    5. '```' → logprob: -3.34952974319458
    6. ' 
' → logprob: -3.97452974319458
    7. '    
' → logprob: -4.34952974319458
    8. 'dp' → logprob: -5.34952974319458
    9. '' → logprob: -5.72452974319458
    10. ')' → logprob: -5.72452974319458

Token 39: ' count' (ID: 3605)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.7206841707229614
    2. '
' → logprob: -1.8456841707229614
    3. '\' → logprob: -1.9706841707229614
    4. 'dp' → logprob: -2.095684051513672
    5. '   ' → logprob: -2.345684051513672
    6. ')' → logprob: -2.345684051513672
    7. ' 
' → logprob: -3.470684051513672
    8. 'result' → logprob: -4.095684051513672
    9. 'd' → logprob: -4.095684051513672
    10. ' ' → logprob: -4.220684051513672

Token 40: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5716801881790161
    2. '[' → logprob: -1.3216801881790161
    3. 's' → logprob: -2.4466800689697266
    4. '(' → logprob: -2.8216800689697266
    5. '=' → logprob: -4.071680068969727
    6. ' =' → logprob: -5.571680068969727
    7. ')' → logprob: -7.696680068969727
    8. ']' → logprob: -8.321680068969727
    9. ' ' → logprob: -8.446680068969727
    10. '_counts' → logprob: -8.571680068969727

Token 41: ' ' (ID: 220)
  Prédit: ' {}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {}' → logprob: -0.6155436038970947
    2. '0' → logprob: -1.9905436038970947
    3. ' ' → logprob: -1.9905436038970947
    4. '{}' → logprob: -2.3655436038970947
    5. ' [' → logprob: -2.6155436038970947
    6. '[' → logprob: -4.240543365478516
    7. ' {' → logprob: -5.615543365478516
    8. '{' → logprob: -6.740543365478516
    9. '[A' → logprob: -10.365543365478516
    10. ' {})' → logprob: -10.615543365478516

Token 42: '0' (ID: 15)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.505331814289093
    2. '0' → logprob: -1.7553317546844482
    3. '[' → logprob: -2.1303317546844482
    4. '{' → logprob: -2.2553317546844482
    5. 'default' → logprob: -9.630331993103027
    6. ' {}' → logprob: -10.380331993103027
    7. ' ' → logprob: -10.880331993103027
    8. '1' → logprob: -11.005331993103027
    9. 'dict' → logprob: -11.005331993103027
    10. '{}
' → logprob: -11.630331993103027

Token 43: '
' (ID: 198)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -1.1686725616455078
    2. '<|end|>' → logprob: -1.2936725616455078
    3. '
' → logprob: -2.043672561645508
    4. '   ' → logprob: -2.293672561645508
    5. '\n' → logprob: -2.668672561645508
    6. ' ' → logprob: -3.793672561645508
    7. ' 
' → logprob: -3.793672561645508
    8. '    
' → logprob: -4.168672561645508
    9. ' for' → logprob: -4.668672561645508
    10. 'for' → logprob: -4.793672561645508

Token 44: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -1.280290126800537
    2. '   ' → logprob: -1.280290126800537
    3. '
' → logprob: -1.905290126800537
    4. '\n' → logprob: -2.905290126800537
    5. ' 
' → logprob: -3.030290126800537
    6. '<|end|>' → logprob: -3.030290126800537
    7. ' ' → logprob: -3.155290126800537
    8. '' → logprob: -3.780290126800537
    9. ' for' → logprob: -4.030290126800537
    10. '    
' → logprob: -4.155290126800537

Token 45: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.7805595993995667
    2. ' for' → logprob: -1.7805595397949219
    3. '<|end|>' → logprob: -2.280559539794922
    4. '\' → logprob: -2.530559539794922
    5. '   ' → logprob: -3.030559539794922
    6. ' ' → logprob: -3.030559539794922
    7. '
' → logprob: -3.780559539794922
    8. ':' → logprob: -4.280559539794922
    9. '\n' → logprob: -4.280559539794922
    10. '```' → logprob: -4.655559539794922

Token 46: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07869929075241089
    2. ' ' → logprob: -2.7036993503570557
    3. '_' → logprob: -5.453699111938477
    4. ' _' → logprob: -6.078699111938477
    5. 'i' → logprob: -6.578699111938477
    6. ' a' → logprob: -8.453699111938477
    7. ' A' → logprob: -8.703699111938477
    8. ' x' → logprob: -9.078699111938477
    9. '  ' → logprob: -9.203699111938477
    10. ' j' → logprob: -10.078699111938477

Token 47: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008157783187925816
    2. 'in' → logprob: -5.133157730102539
    3. ' ' → logprob: -6.508157730102539
    4. '  ' → logprob: -7.508157730102539
    5. ' i' → logprob: -10.008157730102539
    6. ' <' → logprob: -10.258157730102539
    7. ' ```' → logprob: -11.008157730102539
    8. ' ,' → logprob: -11.383157730102539
    9. ' range' → logprob: -11.758157730102539
    10. '+' → logprob: -11.758157730102539

Token 48: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0025212035980075598
    2. 'range' → logprob: -6.00252103805542
    3. ' ' → logprob: -10.127521514892578
    4. ' A' → logprob: -13.252521514892578
    5. ' r' → logprob: -13.502521514892578
    6. ' ra' → logprob: -14.377521514892578
    7. '  ' → logprob: -14.752521514892578
    8. ' xrange' → logprob: -15.002521514892578
    9. '	range' → logprob: -15.127521514892578
    10. '   ' → logprob: -15.252521514892578

Token 49: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3916894197463989
    2. '(N' → logprob: -1.141689419746399
    3. '(K' → logprob: -5.641689300537109
    4. '(len' → logprob: -6.766689300537109
    5. '(n' → logprob: -9.51668930053711
    6. ' (' → logprob: -10.89168930053711
    7. '(
' → logprob: -13.26668930053711
    8. '(A' → logprob: -13.26668930053711
    9. '((' → logprob: -13.39168930053711
    10. '(M' → logprob: -13.51668930053711

Token 50: ' -' (ID: 533)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006735934875905514
    2. ' ):' → logprob: -7.625673770904541
    3. ')' → logprob: -9.000673294067383
    4. '-' → logprob: -10.375673294067383
    5. '):
' → logprob: -10.750673294067383
    6. ':' → logprob: -12.875673294067383
    7. '   ' → logprob: -13.125673294067383
    8. ' -' → logprob: -13.125673294067383
    9. '+' → logprob: -14.125673294067383
    10. ']:' → logprob: -15.000673294067383

Token 51: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7374849915504456
    2. ' ' → logprob: -1.3624849319458008
    3. ' K' → logprob: -1.4874849319458008
    4. 'K' → logprob: -3.237484931945801
    5. '2' → logprob: -8.4874849319458
    6. '-' → logprob: -8.8624849319458
    7. '	K' → logprob: -10.9249849319458
    8. ')' → logprob: -10.9874849319458
    9. '  ' → logprob: -11.2374849319458
    10. '+' → logprob: -11.6124849319458

Token 52: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008961515501141548
    2. 'K' → logprob: -4.7589616775512695
    3. '2' → logprob: -8.25896167755127
    4. ' ' → logprob: -9.63396167755127
    5. ' K' → logprob: -11.00896167755127
    6. '-' → logprob: -13.38396167755127
    7. '   ' → logprob: -14.13396167755127
    8. '3' → logprob: -14.32146167755127
    9. '(K' → logprob: -14.32146167755127
    10. '(' → logprob: -14.63396167755127

Token 53: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0022526723332703114
    2. ')' → logprob: -6.752252578735352
    3. ' ):' → logprob: -7.627252578735352
    4. ',' → logprob: -7.752252578735352
    5. '):
' → logprob: -9.002252578735352
    6. ':' → logprob: -10.627252578735352
    7. '-' → logprob: -12.127252578735352
    8. '>' → logprob: -12.502252578735352
    9. '+' → logprob: -13.627252578735352
    10. ' ' → logprob: -14.127252578735352

Token 54: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26718205213546753
    2. '    ' → logprob: -1.7671821117401123
    3. ':' → logprob: -3.1421821117401123
    4. ' ' → logprob: -4.892181873321533
    5. ' :' → logprob: -5.517181873321533
    6. '   ' → logprob: -5.642181873321533
    7. '<|end|>' → logprob: -6.642181873321533
    8. '        ' → logprob: -6.767181873321533
    9. '     ' → logprob: -6.892181873321533
    10. '      ' → logprob: -7.392181873321533

Token 55: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1346137821674347
    2. '   ' → logprob: -3.1346137523651123
    3. 'for' (adapté à ' for') → logprob: -3.1346137523651123
    4. '    ' → logprob: -3.7596137523651123
    5. '       ' → logprob: -4.759613990783691
    6. ' ' → logprob: -5.134613990783691
    7. ' if' → logprob: -7.384613990783691
    8. '  ' → logprob: -9.509613990783691
    9. 'if' → logprob: -9.509613990783691
    10. ':' → logprob: -9.634613990783691

Token 56: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.014478212222456932
    2. 'j' → logprob: -4.2644782066345215
    3. ' range' → logprob: -8.88947868347168
    4. ' ' → logprob: -9.13947868347168
    5. 'range' → logprob: -10.63947868347168
    6. ')' → logprob: -11.38947868347168
    7. '	j' → logprob: -11.88947868347168
    8. '    ' → logprob: -12.13947868347168
    9. '<|end|>' → logprob: -12.26447868347168
    10. ' ' → logprob: -12.76447868347168

Token 57: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0027664790395647287
    2. 'in' → logprob: -6.1277666091918945
    3. ' i' → logprob: -8.127766609191895
    4. ' ' → logprob: -8.252766609191895
    5. ')' → logprob: -12.377766609191895
    6. 'range' → logprob: -12.377766609191895
    7. 'i' → logprob: -12.752766609191895
    8. ' range' → logprob: -13.127766609191895
    9. '	in' → logprob: -13.502766609191895
    10. '   ' → logprob: -13.877766609191895

Token 58: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759907364845276
    2. ' range' → logprob: -0.8259907364845276
    3. '(range' → logprob: -10.075990676879883
    4. ' i' → logprob: -13.075990676879883
    5. ' ' → logprob: -13.200990676879883
    6. '	range' → logprob: -13.325990676879883
    7. '   ' → logprob: -13.575990676879883
    8. 'i' → logprob: -13.700990676879883
    9. '    ' → logprob: -14.825990676879883
    10. '  ' → logprob: -15.575990676879883

Token 59: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.001355594489723444
    2. '(' → logprob: -6.6263556480407715
    3. '(N' → logprob: -10.751355171203613
    4. ' (' → logprob: -12.376355171203613
    5. '(j' → logprob: -13.251355171203613
    6. ' i' → logprob: -14.376355171203613
    7. '(I' → logprob: -15.001355171203613
    8. '   ' → logprob: -15.251355171203613
    9. '(n' → logprob: -15.376355171203613
    10. 'i' → logprob: -15.626355171203613

Token 60: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2519322335720062
    2. ' +' → logprob: -1.5019322633743286
    3. '1' → logprob: -13.751932144165039
    4. ' ' → logprob: -14.001932144165039
    5. '+j' → logprob: -15.376932144165039
    6. ' +
' → logprob: -15.501932144165039
    7. '+
' → logprob: -15.751932144165039
    8. ')' → logprob: -16.00193214416504
    9. '+)' → logprob: -16.25193214416504
    10. '+i' → logprob: -16.50193214416504

Token 61: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.018943915143609047
    2. ' N' → logprob: -4.018943786621094
    3. 'i' → logprob: -7.643943786621094
    4. 'j' → logprob: -9.268943786621094
    5. '   ' → logprob: -9.393943786621094
    6. ' i' → logprob: -9.768943786621094
    7. ' ' → logprob: -10.518943786621094
    8. ' j' → logprob: -11.768943786621094
    9. '+' → logprob: -11.893943786621094
    10. 'K' → logprob: -12.018943786621094

Token 62: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002913288539275527
    2. '):
' → logprob: -5.877913475036621
    3. ')' → logprob: -10.377913475036621
    4. '-' → logprob: -11.252913475036621
    5. ' ):' → logprob: -11.252913475036621
    6. '+' → logprob: -11.377913475036621
    7. '   ' → logprob: -11.627913475036621
    8. '       ' → logprob: -11.752913475036621
    9. '):

' → logprob: -12.002913475036621
    10. ',' → logprob: -12.502913475036621

Token 63: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7504706978797913
    2. '       ' → logprob: -1.5004706382751465
    3. '           ' → logprob: -1.7504706382751465
    4. '        ' → logprob: -2.6254706382751465
    5. '+' → logprob: -3.5004706382751465
    6. ' :' → logprob: -4.7504706382751465
    7. '            ' → logprob: -5.1254706382751465
    8. ' ' → logprob: -5.6254706382751465
    9. '               ' → logprob: -6.3754706382751465
    10. '    ' → logprob: -6.6254706382751465

Token 64: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12537606060504913
    2. ' if' → logprob: -2.625375986099243
    3. 'if' (adapté à ' if') → logprob: -4.500376224517822
    4. '       ' → logprob: -4.625376224517822
    5. '    ' → logprob: -5.375376224517822
    6. '               ' → logprob: -5.375376224517822
    7. '           ' → logprob: -5.500376224517822
    8. '        ' → logprob: -5.625376224517822
    9. '            ' → logprob: -6.125376224517822
    10. '                ' → logprob: -6.875376224517822

Token 65: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.3760611414909363
    2. ' (' → logprob: -1.376061201095581
    3. ' ' → logprob: -3.876061201095581
    4. 'A' → logprob: -4.001060962677002
    5. ' abs' → logprob: -4.501060962677002
    6. '(' → logprob: -5.376060962677002
    7. '(A' → logprob: -6.001060962677002
    8. ' sum' → logprob: -6.876060962677002
    9. 'abs' → logprob: -7.376060962677002
    10. '    ' → logprob: -7.626060962677002

Token 66: '[i' (ID: 1768)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.04808521270751953
    2. '[i' → logprob: -3.1730852127075195
    3. '[' → logprob: -5.2980852127075195
    4. 'j' → logprob: -10.79808521270752
    5. ' [' → logprob: -11.04808521270752
    6. '[
' → logprob: -11.92308521270752
    7. '[a' → logprob: -12.92308521270752
    8. '```' → logprob: -12.92308521270752
    9. '[q' → logprob: -13.04808521270752
    10. '[A' → logprob: -13.04808521270752

Token 67: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2600484788417816
    2. ' +' → logprob: -1.885048508644104
    3. '-' → logprob: -4.1350483894348145
    4. '%' → logprob: -4.5100483894348145
    5. '>' → logprob: -4.7600483894348145
    6. ' -' → logprob: -4.8850483894348145
    7. '|' → logprob: -4.8850483894348145
    8. '==' → logprob: -5.3850483894348145
    9. '<' → logprob: -5.6350483894348145
    10. ' ==' → logprob: -5.7600483894348145

Token 68: ' ==' (ID: 951)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4036140441894531
    2. ' +' → logprob: -1.5286140441894531
    3. '%' → logprob: -3.028614044189453
    4. '==' → logprob: -4.278614044189453
    5. ' ==' → logprob: -4.528614044189453
    6. ' %' → logprob: -4.778614044189453
    7. '*' → logprob: -4.903614044189453
    8. '>' → logprob: -5.278614044189453
    9. ' ^' → logprob: -5.278614044189453
    10. '^' → logprob: -5.653614044189453

Token 69: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.11976052820682526
    2. ' A' → logprob: -2.244760513305664
    3. 'K' → logprob: -5.119760513305664
    4. ' K' → logprob: -7.619760513305664
    5. ' ' → logprob: -8.244760513305664
    6. ' (' → logprob: -10.119760513305664
    7. '(' → logprob: -10.619760513305664
    8. '	A' → logprob: -10.619760513305664
    9. '(A' → logprob: -10.619760513305664
    10. '0' → logprob: -10.744760513305664

Token 70: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0004299540014471859
    2. '[' → logprob: -8.0004301071167
    3. 'j' → logprob: -9.3754301071167
    4. '[i' → logprob: -12.3754301071167
    5. ' [' → logprob: -13.6254301071167
    6. '_j' → logprob: -14.1254301071167
    7. '```' → logprob: -14.5004301071167
    8. '	j' → logprob: -14.6254301071167
    9. ' j' → logprob: -15.0004301071167
    10. '[A' → logprob: -15.1254301071167

Token 71: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.708404004573822
    2. '):' → logprob: -1.0834040641784668
    3. ']' → logprob: -2.583404064178467
    4. ' and' → logprob: -2.708404064178467
    5. '+' → logprob: -4.708404064178467
    6. ')' → logprob: -5.083404064178467
    7. ' ):' → logprob: -5.833404064178467
    8. ':' → logprob: -5.958404064178467
    9. ' +' → logprob: -6.458404064178467
    10. ' ]' → logprob: -6.833404064178467

Token 72: '               ' (ID: 506)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4508007764816284
    2. '               ' → logprob: -1.4508007764816284
    3. ':' → logprob: -2.450800895690918
    4. '<|end|>' → logprob: -3.825800895690918
    5. 'and' → logprob: -4.825800895690918
    6. '           ' → logprob: -5.450800895690918
    7. ' ' → logprob: -6.200800895690918
    8. '       ' → logprob: -6.575800895690918
    9. '                ' → logprob: -6.700800895690918
    10. '            ' → logprob: -7.575800895690918

Token 73: ' continue' (ID: 4901)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.059774398803711
    2. '                ' → logprob: -1.684774398803711
    3. ' ' → logprob: -1.934774398803711
    4. '                    ' → logprob: -2.559774398803711
    5. ' count' → logprob: -2.809774398803711
    6. 'count' → logprob: -2.809774398803711
    7. '<|end|>' → logprob: -3.309774398803711
    8. '               ' → logprob: -3.934774398803711
    9. '	count' → logprob: -4.309774398803711
    10. ' +' → logprob: -4.559774398803711

Token 74: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2628181278705597
    2. '               ' → logprob: -1.8878180980682373
    3. '            
' → logprob: -4.262818336486816
    4. '                ' → logprob: -4.512818336486816
    5. '\n' → logprob: -4.512818336486816
    6. '<|end|>' → logprob: -4.512818336486816
    7. '                
' → logprob: -5.012818336486816
    8. '
' → logprob: -5.262818336486816
    9. '            ' → logprob: -5.637818336486816
    10. '       ' → logprob: -5.887818336486816

Token 75: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12311311811208725
    2. '               ' → logprob: -2.8731131553649902
    3. '<|end|>' → logprob: -4.12311315536499
    4. '            
' → logprob: -4.62311315536499
    5. '
' → logprob: -4.87311315536499
    6. '       ' → logprob: -4.99811315536499
    7. '                ' → logprob: -5.74811315536499
    8. '                
' → logprob: -5.74811315536499
    9. '            ' → logprob: -5.99811315536499
    10. '\n' → logprob: -5.99811315536499

Token 76: ' elif' (ID: 9497)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8195926547050476
    2. '           ' → logprob: -1.6945927143096924
    3. '            ' → logprob: -2.1945927143096924
    4. 'if' → logprob: -2.3195927143096924
    5. '               ' → logprob: -2.5695927143096924
    6. ' ' → logprob: -3.6945927143096924
    7. '<|end|>' → logprob: -3.9445927143096924
    8. '                ' → logprob: -4.444592475891113
    9. '       ' → logprob: -5.194592475891113
    10. '    ' → logprob: -5.319592475891113

Token 77: ' K' (ID: 658)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5047191977500916
    2. ' abs' → logprob: -1.3797192573547363
    3. 'abs' → logprob: -3.0047192573547363
    4. ' A' → logprob: -3.0047192573547363
    5. '(A' → logprob: -3.7547192573547363
    6. '(abs' → logprob: -4.379719257354736
    7. 'A' → logprob: -5.629719257354736
    8. '           ' → logprob: -6.129719257354736
    9. '(' → logprob: -6.504719257354736
    10. ' ' → logprob: -7.754719257354736

Token 78: ' ==' (ID: 951)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.1917271763086319
    2. ' >' → logprob: -3.0667271614074707
    3. '%' → logprob: -3.5667271614074707
    4. ' ==' → logprob: -3.5667271614074707
    5. ' <=' → logprob: -4.191727161407471
    6. ' ' → logprob: -4.316727161407471
    7. ' -' → logprob: -4.566727161407471
    8. '>' → logprob: -4.816727161407471
    9. '==' → logprob: -5.066727161407471
    10. ' >=' → logprob: -5.066727161407471

Token 79: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.36206692457199097
    2. '1' → logprob: -1.8620669841766357
    3. ' ' → logprob: -1.9870669841766357
    4. 'A' → logprob: -5.737066745758057
    5. 'j' → logprob: -5.737066745758057
    6. '2' → logprob: -6.862066745758057
    7. '(A' → logprob: -7.112066745758057
    8. ' A' → logprob: -7.612066745758057
    9. '(' → logprob: -7.737066745758057
    10. ' (' → logprob: -7.862066745758057

Token 80: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13980704545974731
    2. '1' → logprob: -2.5148069858551025
    3. 'A' → logprob: -3.6398069858551025
    4. 'j' → logprob: -4.764807224273682
    5. 'abs' → logprob: -5.264807224273682
    6. ' ' → logprob: -5.889807224273682
    7. '(A' → logprob: -6.514807224273682
    8. '(' → logprob: -6.889807224273682
    9. 'K' → logprob: -7.139807224273682
    10. '2' → logprob: -7.139807224273682

Token 81: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0025363059248775244
    2. ':
' → logprob: -6.002536296844482
    3. '               ' → logprob: -11.37753677368164
    4. ':return' → logprob: -11.50253677368164
    5. ' :' → logprob: -11.62753677368164
    6. ' and' → logprob: -11.62753677368164
    7. '):' → logprob: -11.75253677368164
    8. ' or' → logprob: -12.50253677368164
    9. '           ' → logprob: -12.87753677368164
    10. '<|end|>' → logprob: -13.50253677368164

Token 82: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.17735719680786133
    2. 'A' → logprob: -2.4273571968078613
    3. ' (' → logprob: -3.5523571968078613
    4. ' i' → logprob: -3.9273571968078613
    5. 'i' → logprob: -5.302357196807861
    6. ' abs' → logprob: -5.302357196807861
    7. ' ' → logprob: -5.427357196807861
    8. '(' → logprob: -5.677357196807861
    9. 'j' → logprob: -6.427357196807861
    10. ' j' → logprob: -6.552357196807861

Token 83: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.35665711760520935
    2. '[' → logprob: -1.7316571474075317
    3. '[j' → logprob: -2.106657028198242
    4. ' [' → logprob: -6.981657028198242
    5. '[a' → logprob: -9.231657028198242
    6. ' ' → logprob: -9.731657028198242
    7. '[
' → logprob: -9.856657028198242
    8. 'i' → logprob: -10.231657028198242
    9. 'j' → logprob: -10.919157028198242
    10. ' i' → logprob: -11.169157028198242

Token 84: ']' (ID: 60)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -1.610533595085144
    2. ' >' → logprob: -1.860533595085144
    3. ' ==' → logprob: -1.985533595085144
    4. ' ' → logprob: -2.1105337142944336
    5. ' <' → logprob: -2.6105337142944336
    6. ' %' → logprob: -2.6105337142944336
    7. '[' → logprob: -2.9855337142944336
    8. '+' → logprob: -2.9855337142944336
    9. ' +' → logprob: -3.4855337142944336
    10. ']' → logprob: -3.6105337142944336

Token 85: ' >' (ID: 1424)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.8904656171798706
    2. ' ==' → logprob: -1.7654656171798706
    3. ' >' → logprob: -2.39046573638916
    4. ' <' → logprob: -2.51546573638916
    5. ' ' → logprob: -2.64046573638916
    6. ' %' → logprob: -3.14046573638916
    7. '==' → logprob: -3.64046573638916
    8. '%' → logprob: -3.64046573638916
    9. '+' → logprob: -3.89046573638916
    10. '!=' → logprob: -4.01546573638916

Token 86: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2815922796726227
    2. ' A' → logprob: -1.4065922498703003
    3. ' ' → logprob: -8.03159236907959
    4. '0' → logprob: -10.40659236907959
    5. '=' → logprob: -10.65659236907959
    6. '	A' → logprob: -11.15659236907959
    7. ' ' → logprob: -11.40659236907959
    8. '=A' → logprob: -11.65659236907959
    9. '>A' → logprob: -11.65659236907959
    10. '>' → logprob: -11.90659236907959

Token 87: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.002405623672530055
    2. '[' → logprob: -6.377405643463135
    3. 'j' → logprob: -7.627405643463135
    4. '[i' → logprob: -9.127405166625977
    5. ']' → logprob: -11.002405166625977
    6. ' [' → logprob: -11.127405166625977
    7. ' j' → logprob: -11.127405166625977
    8. '```' → logprob: -11.252405166625977
    9. '[
' → logprob: -11.627405166625977
    10. '<|end|>' → logprob: -11.877405166625977

Token 88: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.047951702028512955
    2. ':' → logprob: -3.4229516983032227
    3. '):
' → logprob: -4.547951698303223
    4. ']:' → logprob: -6.297951698303223
    5. ')' → logprob: -7.047951698303223
    6. ':
' → logprob: -8.047951698303223
    7. ' ):' → logprob: -8.297951698303223
    8. '           ' → logprob: -9.547951698303223
    9. ' and' → logprob: -9.672951698303223
    10. '               ' → logprob: -10.172951698303223

Token 89: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0756443589925766
    2. '               ' → logprob: -2.7006442546844482
    3. ':
' → logprob: -6.075644493103027
    4. ' :' → logprob: -6.325644493103027
    5. '           ' → logprob: -7.575644493103027
    6. '                   ' → logprob: -7.825644493103027
    7. '):' → logprob: -8.200644493103027
    8. '                       ' → logprob: -9.325644493103027
    9. ' and' → logprob: -10.075644493103027
    10. '<|end|>' → logprob: -10.325644493103027

Token 90: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.041614461690187454
    2. '                   ' → logprob: -4.041614532470703
    3. ' count' → logprob: -4.166614532470703
    4. '               ' → logprob: -5.041614532470703
    5. '	count' → logprob: -7.916614532470703
    6. 'continue' → logprob: -8.541614532470703
    7. '           ' → logprob: -8.666614532470703
    8. '                       ' → logprob: -8.916614532470703
    9. '   ' → logprob: -9.416614532470703
    10. '       ' → logprob: -10.041614532470703

Token 91: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3197830617427826
    2. '+=' → logprob: -1.319783091545105
    3. '+' → logprob: -5.0697832107543945
    4. ' ' → logprob: -9.069783210754395
    5. '=' → logprob: -10.569783210754395
    6. '<|end|>' → logprob: -10.569783210754395
    7. ' +' → logprob: -11.069783210754395
    8. ']+=' → logprob: -11.319783210754395
    9. '+='' → logprob: -12.194783210754395
    10. '1' → logprob: -13.194783210754395

Token 92: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02326737530529499
    2. ' ' → logprob: -3.7732672691345215
    3. '0' → logprob: -11.27326774597168
    4. '2' → logprob: -13.02326774597168
    5. ' A' → logprob: -13.14826774597168
    6. 'A' → logprob: -14.14826774597168
    7. '(' → logprob: -14.52326774597168
    8. 'pow' → logprob: -14.71076774597168
    9. '-' → logprob: -15.14826774597168
    10. ' (' → logprob: -15.21076774597168

Token 93: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003728774609044194
    2. '0' → logprob: -9.125372886657715
    3. ' ' → logprob: -9.125372886657715
    4. 'N' → logprob: -9.625372886657715
    5. '(' → logprob: -10.625372886657715
    6. 'i' → logprob: -10.875372886657715
    7. 'A' → logprob: -11.500372886657715
    8. '(N' → logprob: -11.875372886657715
    9. 'K' → logprob: -12.250372886657715
    10. 'j' → logprob: -12.500372886657715

Token 94: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 95: '           ' (ID: 352)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.33101895451545715
    2. '
' → logprob: -2.2060189247131348
    3. '<|end|>' → logprob: -2.9560189247131348
    4. '           ' → logprob: -3.0810189247131348
    5. ' ' → logprob: -3.9560189247131348
    6. '               ' → logprob: -4.456018924713135
    7. '       ' → logprob: -4.831018924713135
    8. '<|end|>' → logprob: -5.206018924713135
    9. '   ' → logprob: -5.331018924713135
    10. ' 
' → logprob: -5.331018924713135

Token 96: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.9214657545089722
    2. ' ' → logprob: -2.0464658737182617
    3. 'else' (adapté à ' else') → logprob: -2.1714658737182617
    4. ' elif' → logprob: -2.1714658737182617
    5. '           ' → logprob: -2.2964658737182617
    6. 'elif' → logprob: -2.6714658737182617
    7. '            ' → logprob: -3.4214658737182617
    8. '               ' → logprob: -4.921465873718262
    9. '        ' → logprob: -4.921465873718262
    10. '       ' → logprob: -5.421465873718262

Token 97: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011970194056630135
    2. ':
' → logprob: -4.511970043182373
    3. ' :' → logprob: -7.761970043182373
    4. ' if' → logprob: -8.386970520019531
    5. '               ' → logprob: -9.261970520019531
    6. '           ' → logprob: -10.261970520019531
    7. ' :
' → logprob: -10.511970520019531
    8. '<|end|>' → logprob: -11.011970520019531
    9. ':

' → logprob: -11.386970520019531
    10. 'if' → logprob: -11.636970520019531

Token 98: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004193198401480913
    2. '                ' → logprob: -5.754193305969238
    3. '            ' → logprob: -8.004193305969238
    4. '           ' → logprob: -8.254193305969238
    5. '                   ' → logprob: -8.379193305969238
    6. ' ' → logprob: -10.379193305969238
    7. '              ' → logprob: -10.629193305969238
    8. '    ' → logprob: -11.129193305969238
    9. ' if' → logprob: -11.504193305969238
    10. '                
' → logprob: -11.629193305969238

Token 99: ' if' (ID: 538)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.18763205409049988
    2. 'pass' → logprob: -2.5626320838928223
    3. 'count' → logprob: -3.8126320838928223
    4. ' count' → logprob: -3.9376320838928223
    5. ' if' → logprob: -4.062632083892822
    6. ' for' → logprob: -4.812632083892822
    7. '               ' → logprob: -4.812632083892822
    8. ' break' → logprob: -5.187632083892822
    9. '                ' → logprob: -5.812632083892822
    10. '                   ' → logprob: -5.937632083892822

Token 100: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.8187259435653687
    2. ' K' → logprob: -1.8187259435653687
    3. ' (' → logprob: -1.9437259435653687
    4. 'A' → logprob: -2.318726062774658
    5. 'K' → logprob: -2.443726062774658
    6. '(A' → logprob: -3.068726062774658
    7. ' abs' → logprob: -4.943726062774658
    8. '(' → logprob: -5.068726062774658
    9. 'abs' → logprob: -6.818726062774658
    10. ' ' → logprob: -6.818726062774658

Token 101: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.02444314956665039
    2. '[j' → logprob: -3.7744431495666504
    3. '[' → logprob: -6.77444314956665
    4. 'i' → logprob: -11.649442672729492
    5. '[I' → logprob: -12.399442672729492
    6. '[
' → logprob: -12.524442672729492
    7. '[user' → logprob: -12.524442672729492
    8. ' [' → logprob: -12.649442672729492
    9. '[a' → logprob: -12.774442672729492
    10. '[s' → logprob: -12.899442672729492

Token 102: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5581022500991821
    2. ' >' → logprob: -1.3081022500991821
    3. ' <' → logprob: -2.3081021308898926
    4. ' ]' → logprob: -3.6831021308898926
    5. '[' → logprob: -4.058102130889893
    6. ' ' → logprob: -5.808102130889893
    7. '>' → logprob: -5.933102130889893
    8. '[i' → logprob: -6.058102130889893
    9. ']>' → logprob: -6.558102130889893
    10. '<' → logprob: -6.933102130889893

Token 103: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.292216420173645
    2. ' <' → logprob: -1.667216420173645
    3. ' %' → logprob: -3.4172163009643555
    4. ' ' → logprob: -4.6672163009643555
    5. '%' → logprob: -4.7922163009643555
    6. '>' → logprob: -4.9172163009643555
    7. '<' → logprob: -6.2922163009643555
    8. '+' → logprob: -7.2922163009643555
    9. ' *' → logprob: -7.2922163009643555
    10. '[' → logprob: -7.2922163009643555

Token 104: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.2520059049129486
    2. 'A' → logprob: -1.502005934715271
    3. ' ' → logprob: -9.877005577087402
    4. '	A' → logprob: -12.377005577087402
    5. '0' → logprob: -13.377005577087402
    6. 'j' → logprob: -13.377005577087402
    7. ')' → logprob: -13.502005577087402
    8. '   ' → logprob: -13.627005577087402
    9. '>A' → logprob: -13.627005577087402
    10. '=A' → logprob: -13.689505577087402

Token 105: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0005504102446138859
    2. 'j' → logprob: -7.625550270080566
    3. '[' → logprob: -9.875550270080566
    4. '[i' → logprob: -12.500550270080566
    5. ']' → logprob: -13.750550270080566
    6. '[
' → logprob: -13.750550270080566
    7. ' j' → logprob: -14.125550270080566
    8. '```' → logprob: -14.375550270080566
    9. ' [' → logprob: -14.750550270080566
    10. '	j' → logprob: -14.750550270080566

Token 106: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.9408900737762451
    2. ']:' → logprob: -0.9408900737762451
    3. ']:
' → logprob: -2.565890073776245
    4. '):
' → logprob: -2.565890073776245
    5. ']' → logprob: -4.065890312194824
    6. ']):' → logprob: -4.190890312194824
    7. ':' → logprob: -5.065890312194824
    8. '               ' → logprob: -5.565890312194824
    9. ' ):' → logprob: -5.565890312194824
    10. ']):
' → logprob: -5.940890312194824

Token 107: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6435443162918091
    2. ' and' → logprob: -1.643544316291809
    3. ':' → logprob: -1.768544316291809
    4. ':
' → logprob: -2.5185441970825195
    5. '                       ' → logprob: -4.2685441970825195
    6. '               ' → logprob: -5.1435441970825195
    7. 'and' → logprob: -5.7685441970825195
    8. ' or' → logprob: -6.2685441970825195
    9. '<|end|>' → logprob: -6.6435441970825195
    10. 'count' → logprob: -7.2685441970825195

Token 108: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.3901395797729492
    2. ' count' → logprob: -1.1401395797729492
    3. '                   ' → logprob: -6.140139579772949
    4. '                       ' → logprob: -7.265139579772949
    5. '               ' → logprob: -9.26513957977295
    6. ' break' → logprob: -9.39013957977295
    7. 'break' → logprob: -9.89013957977295
    8. '	count' → logprob: -10.26513957977295
    9. '   ' → logprob: -10.76513957977295
    10. ' ' → logprob: -10.89013957977295

Token 109: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.008656412363052368
    2. '+=' → logprob: -4.7586565017700195
    3. ' ' → logprob: -10.88365650177002
    4. ' =' → logprob: -11.63365650177002
    5. '+' → logprob: -12.00865650177002
    6. '    ' → logprob: -12.63365650177002
    7. '=' → logprob: -13.63365650177002
    8. ' +' → logprob: -14.00865650177002
    9. ' %=' → logprob: -14.75865650177002
    10. '   ' → logprob: -15.00865650177002

Token 110: ' K' (ID: 658)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1766532063484192
    2. ' ' → logprob: -2.6766531467437744
    3. 'K' → logprob: -2.9266531467437744
    4. ' K' → logprob: -3.3016531467437744
    5. ' (' → logprob: -7.1766533851623535
    6. '(' → logprob: -7.3016533851623535
    7. '(K' → logprob: -7.4266533851623535
    8. 'pow' → logprob: -8.301652908325195
    9. 'N' → logprob: -9.551652908325195
    10. 'count' → logprob: -9.551652908325195

Token 111: ' +' (ID: 659)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.1971540451049805
    2. '*' → logprob: -1.8221540451049805
    3. ' *' → logprob: -1.8221540451049805
    4. 'else' → logprob: -2.3221540451049805
    5. ' else' → logprob: -2.5721540451049805
    6. ' ' → logprob: -3.3221540451049805
    7. '           ' → logprob: -3.3221540451049805
    8. '       ' → logprob: -3.8221540451049805
    9. '                ' → logprob: -4.1971540451049805
    10. ' elif' → logprob: -4.3221540451049805

Token 112: ' K' (ID: 658)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10510005056858063
    2. ' ' → logprob: -2.730100154876709
    3. '0' → logprob: -4.855100154876709
    4. ' (' → logprob: -4.980100154876709
    5. '...' → logprob: -5.605100154876709
    6. '-' → logprob: -5.855100154876709
    7. 'count' → logprob: -6.105100154876709
    8. 'K' → logprob: -6.230100154876709
    9. '<|end|>' → logprob: -6.230100154876709
    10. 'i' → logprob: -6.730100154876709

Token 113: ' *' (ID: 425)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04308323189616203
    2. '1' → logprob: -4.418083190917969
    3. ' -' → logprob: -4.543083190917969
    4. ' ' → logprob: -5.168083190917969
    5. '*' → logprob: -5.293083190917969
    6. '<|end|>' → logprob: -5.668083190917969
    7. '2' → logprob: -6.543083190917969
    8. '0' → logprob: -6.918083190917969
    9. ' *' → logprob: -7.793083190917969
    10. '**' → logprob: -7.793083190917969

Token 114: ' (' (ID: 350)
  Prédit: '*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.29856666922569275
    2. '(K' → logprob: -1.9235666990280151
    3. '(N' → logprob: -2.6735665798187256
    4. '-' → logprob: -3.7985665798187256
    5. '1' → logprob: -5.423566818237305
    6. '(' → logprob: -5.423566818237305
    7. '*' → logprob: -5.548566818237305
    8. ' (' → logprob: -6.423566818237305
    9. '(count' → logprob: -6.673566818237305
    10. ' ' → logprob: -6.923566818237305

Token 115: 'K' (ID: 42)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.9037138223648071
    2. '-' → logprob: -1.4037138223648071
    3. 'K' → logprob: -1.6537138223648071
    4. '*(' → logprob: -2.0287137031555176
    5. 'j' → logprob: -5.278713703155518
    6. '(i' → logprob: -5.403713703155518
    7. ' -' → logprob: -5.528713703155518
    8. ' (' → logprob: -6.028713703155518
    9. ' K' → logprob: -6.153713703155518
    10. '(j' → logprob: -6.528713703155518

Token 116: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6933151483535767
    2. ' -' → logprob: -0.6933151483535767
    3. ' ' → logprob: -8.818315505981445
    4. '1' → logprob: -12.193315505981445
    5. '
' → logprob: -12.818315505981445
    6. '```' → logprob: -12.943315505981445
    7. '   ' → logprob: -13.193315505981445
    8. '  ' → logprob: -13.568315505981445
    9. '	' → logprob: -13.693315505981445
    10. '<|end|>' → logprob: -13.818315505981445

Token 117: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.062253691256046295
    2. ' ' → logprob: -2.937253713607788
    3. '-' → logprob: -5.312253475189209
    4. ' -' → logprob: -6.437253475189209
    5. '   ' → logprob: -8.437253952026367
    6. '                   ' → logprob: -8.812253952026367
    7. ')' → logprob: -8.937253952026367
    8. '  ' → logprob: -10.062253952026367
    9. '    ' → logprob: -10.187253952026367
    10. '       ' → logprob: -10.437253952026367

Token 118: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03427128493785858
    2. ' ' → logprob: -3.534271240234375
    3. '-' → logprob: -5.534271240234375
    4. ' -' → logprob: -7.784271240234375
    5. ')' → logprob: -10.534271240234375
    6. '   ' → logprob: -10.909271240234375
    7. '                   ' → logprob: -11.346771240234375
    8. '  ' → logprob: -11.596771240234375
    9. '```' → logprob: -11.596771240234375
    10. '2' → logprob: -11.971771240234375

Token 119: ')' (ID: 8)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.18338491022586823
    2. '//' → logprob: -2.433384895324707
    3. ')' → logprob: -2.683384895324707
    4. ')//' → logprob: -4.558384895324707
    5. ' )' → logprob: -7.058384895324707
    6. '   ' → logprob: -9.683384895324707
    7. ' ' → logprob: -10.433384895324707
    8. '")' → logprob: -11.558384895324707
    9. '    ' → logprob: -11.808384895324707
    10. '```' → logprob: -12.058384895324707

Token 120: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.14298290014266968
    2. '//' → logprob: -2.0179829597473145
    3. ' ' → logprob: -9.017982482910156
    4. ' *' → logprob: -9.642982482910156
    5. ' /' → logprob: -10.767982482910156
    6. ')//' → logprob: -10.767982482910156
    7. '   ' → logprob: -11.142982482910156
    8. ')' → logprob: -11.267982482910156
    9. '*' → logprob: -12.017982482910156
    10. '```' → logprob: -12.017982482910156

Token 121: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00118677644059062
    2. ' ' → logprob: -6.751186847686768
    3. '1' → logprob: -11.25118637084961
    4. '   ' → logprob: -14.25118637084961
    5. '```' → logprob: -14.50118637084961
    6. '  ' → logprob: -14.93868637084961
    7. '3' → logprob: -15.18868637084961
    8. '4' → logprob: -15.56368637084961
    9. '(' → logprob: -15.75118637084961
    10. '202' → logprob: -16.43868637084961

Token 122: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.1424973713001236e-05
    2. ' ' → logprob: -10.500031471252441
    3. '1' → logprob: -12.750031471252441
    4. '```' → logprob: -15.500031471252441
    5. '   ' → logprob: -15.625031471252441
    6. '3' → logprob: -15.812531471252441
    7. 'MOD' → logprob: -16.062530517578125
    8. '  ' → logprob: -16.875030517578125
    9. '4' → logprob: -17.000030517578125
    10. '
' → logprob: -17.437530517578125

Token 123: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9316092133522034
    2. '               ' → logprob: -1.3066091537475586
    3. '\n' → logprob: -1.6816091537475586
    4. '           ' → logprob: -2.9316091537475586
    5. '                   ' → logprob: -3.9316091537475586
    6. '+' → logprob: -4.431609153747559
    7. '       ' → logprob: -4.556609153747559
    8. '<|end|>' → logprob: -4.681609153747559
    9. '                ' → logprob: -4.931609153747559
    10. '   ' → logprob: -5.181609153747559

Token 124: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3118063807487488
    2. '           ' → logprob: -1.9368064403533936
    3. '\n' → logprob: -2.9368064403533936
    4. '
' → logprob: -4.3118062019348145
    5. '       ' → logprob: -4.4368062019348145
    6. '                ' → logprob: -4.5618062019348145
    7. '<|end|>' → logprob: -4.5618062019348145
    8. '   ' → logprob: -5.3118062019348145
    9. '                   ' → logprob: -5.4368062019348145
    10. '            ' → logprob: -5.5618062019348145

Token 125: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.3091335594654083
    2. ' else' → logprob: -1.934133529663086
    3. '               ' → logprob: -2.684133529663086
    4. '           ' → logprob: -3.309133529663086
    5. 'elif' → logprob: -4.934133529663086
    6. 'return' → logprob: -5.684133529663086
    7. '       ' → logprob: -5.809133529663086
    8. ' elif' → logprob: -7.184133529663086
    9. 'count' → logprob: -7.434133529663086
    10. '   ' → logprob: -7.809133529663086

Token 126: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06004374101758003
    2. ':' → logprob: -3.5600438117980957
    3. '               ' → logprob: -4.435043811798096
    4. ':
' → logprob: -4.685043811798096
    5. 'count' → logprob: -5.685043811798096
    6. ' if' → logprob: -6.935043811798096
    7. '           ' → logprob: -7.185043811798096
    8. '                       ' → logprob: -7.435043811798096
    9. '   ' → logprob: -8.185043334960938
    10. ' count' → logprob: -8.310043334960938

Token 127: '                   ' (ID: 699)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.09023436903953552
    2. ' count' → logprob: -2.5902342796325684
    3. '                   ' → logprob: -4.590234279632568
    4. '               ' → logprob: -7.215234279632568
    5. '   ' → logprob: -9.340234756469727
    6. '	count' → logprob: -9.465234756469727
    7. '                       ' → logprob: -9.840234756469727
    8. ' pass' → logprob: -9.965234756469727
    9. 'continue' → logprob: -10.215234756469727
    10. ' continue' → logprob: -10.965234756469727

Token 128: ' k' (ID: 372)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0010987765854224563
    2. ' count' → logprob: -7.0010986328125
    3. '                   ' → logprob: -9.0010986328125
    4. '               ' → logprob: -10.7510986328125
    5. 'continue' → logprob: -11.0010986328125
    6. 'break' → logprob: -11.7510986328125
    7. 'pass' → logprob: -12.5010986328125
    8. '   ' → logprob: -12.6260986328125
    9. '	count' → logprob: -12.8760986328125
    10. 'if' → logprob: -13.6260986328125

Token 129: ' =' (ID: 314)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -1.4406976699829102
    2. ' -=' → logprob: -1.4406976699829102
    3. ' +=' → logprob: -1.5656976699829102
    4. ' =' → logprob: -2.06569766998291
    5. '=' → logprob: -3.06569766998291
    6. ' *=' → logprob: -3.19069766998291
    7. '_count' → logprob: -3.94069766998291
    8. '*' → logprob: -4.19069766998291
    9. ' ' → logprob: -4.31569766998291
    10. '-' → logprob: -4.56569766998291

Token 130: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.10245530307292938
    2. ' K' → logprob: -2.7274553775787354
    3. ' (' → logprob: -4.477455139160156
    4. '(K' → logprob: -4.602455139160156
    5. '0' → logprob: -5.227455139160156
    6. 'max' → logprob: -6.477455139160156
    7. '(' → logprob: -7.102455139160156
    8. 'min' → logprob: -7.477455139160156
    9. ' ' → logprob: -7.602455139160156
    10. '1' → logprob: -7.727455139160156

Token 131: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7255526185035706
    2. ' -' → logprob: -1.3505525588989258
    3. ' *' → logprob: -1.6005525588989258
    4. '*(' → logprob: -3.225552558898926
    5. '*' → logprob: -4.225552558898926
    6. '<|end|>' → logprob: -8.100552558898926
    7. '
' → logprob: -9.600552558898926
    8. '1' → logprob: -9.850552558898926
    9. ' ' → logprob: -10.225552558898926
    10. ')' → logprob: -10.600552558898926

Token 132: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5258910655975342
    2. '2' → logprob: -0.9008910655975342
    3. ' ' → logprob: -5.900891304016113
    4. 'j' → logprob: -11.900891304016113
    5. '(' → logprob: -12.775891304016113
    6. '   ' → logprob: -12.900891304016113
    7. 'k' → logprob: -12.900891304016113
    8. ' j' → logprob: -13.150891304016113
    9. '                   ' → logprob: -13.775891304016113
    10. '0' → logprob: -14.025891304016113

Token 133: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.31363341212272644
    2. '1' → logprob: -1.3136334419250488
    3. ' ' → logprob: -7.938633441925049
    4. '(' → logprob: -12.81363296508789
    5. '<|end|>' → logprob: -12.81363296508789
    6. 'j' → logprob: -13.31363296508789
    7. 'k' → logprob: -13.56363296508789
    8. '0' → logprob: -14.31363296508789
    9. '   ' → logprob: -14.31363296508789
    10. 'i' → logprob: -14.50113296508789

Token 134: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.15075817704200745
    2. '
' → logprob: -2.4007582664489746
    3. ' *' → logprob: -4.275758266448975
    4. '               ' → logprob: -4.400758266448975
    5. '                    ' → logprob: -5.650758266448975
    6. ' ' → logprob: -6.025758266448975
    7. '*' → logprob: -6.150758266448975
    8. 'count' → logprob: -6.150758266448975
    9. ')' → logprob: -6.275758266448975
    10. '           ' → logprob: -6.525758266448975

Token 135: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0016071052523329854
    2. '
' → logprob: -7.2516069412231445
    3. '               ' → logprob: -8.376606941223145
    4. '                    
' → logprob: -8.376606941223145
    5. '                    ' → logprob: -9.001606941223145
    6. '           ' → logprob: -9.501606941223145
    7. 'count' → logprob: -10.126606941223145
    8. '                  ' → logprob: -10.501606941223145
    9. '                ' → logprob: -10.751606941223145
    10. '<|end|>' → logprob: -10.876606941223145

Token 136: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.05731064826250076
    2. ' count' → logprob: -3.1823105812072754
    3. '                   ' → logprob: -4.307310581207275
    4. '
' → logprob: -8.932311058044434
    5. 'if' → logprob: -9.182311058044434
    6. '               ' → logprob: -9.307311058044434
    7. '           ' → logprob: -9.307311058044434
    8. ' if' → logprob: -9.932311058044434
    9. 'for' → logprob: -10.307311058044434
    10. '       ' → logprob: -10.307311058044434

Token 137: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3133399486541748
    2. '+=' → logprob: -1.3133399486541748
    3. '=' → logprob: -10.563340187072754
    4. ' -=' → logprob: -10.563340187072754
    5. '+' → logprob: -11.438340187072754
    6. '+=(' → logprob: -12.313340187072754
    7. ' *=' → logprob: -12.938340187072754
    8. '-=' → logprob: -13.188340187072754
    9. ' =' → logprob: -13.563340187072754
    10. '*=' → logprob: -13.938340187072754

Token 138: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.07894652336835861
    2. ' k' → logprob: -2.703946590423584
    3. '(k' → logprob: -4.953946590423584
    4. ' (' → logprob: -6.578946590423584
    5. '(' → logprob: -8.078946113586426
    6. 'K' → logprob: -10.328946113586426
    7. '   ' → logprob: -10.578946113586426
    8. '                   ' → logprob: -10.578946113586426
    9. '(A' → logprob: -10.828946113586426
    10. '((' → logprob: -10.828946113586426

Token 139: ' +' (ID: 659)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1775948703289032
    2. '*' → logprob: -1.9275949001312256
    3. '*(' → logprob: -4.1775946617126465
    4. '+' → logprob: -7.0525946617126465
    5. ' +' → logprob: -7.0525946617126465
    6. '*k' → logprob: -9.427595138549805
    7. '**' → logprob: -10.427595138549805
    8. '*K' → logprob: -11.052595138549805
    9. ' *(' → logprob: -12.552595138549805
    10. ' ' → logprob: -12.552595138549805

Token 140: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.09233719855546951
    2. ' k' → logprob: -2.467337131500244
    3. '(k' → logprob: -5.967337131500244
    4. ' (' → logprob: -7.592337131500244
    5. '(' → logprob: -8.217337608337402
    6. '   ' → logprob: -11.092337608337402
    7. '((' → logprob: -11.467337608337402
    8. ' ' → logprob: -12.342337608337402
    9. 'K' → logprob: -12.342337608337402
    10. '	k' → logprob: -12.717337608337402

Token 141: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.15855810046195984
    2. ' *' → logprob: -2.0335581302642822
    3. '*(' → logprob: -4.158557891845703
    4. '1' → logprob: -9.908557891845703
    5. ' ' → logprob: -10.783557891845703
    6. '**' → logprob: -11.033557891845703
    7. '```' → logprob: -11.408557891845703
    8. '
' → logprob: -12.533557891845703
    9. '-' → logprob: -12.533557891845703
    10. '0' → logprob: -12.533557891845703

Token 142: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.26761335134506226
    2. '(k' → logprob: -1.517613410949707
    3. '(K' → logprob: -4.392613410949707
    4. '(' → logprob: -6.142613410949707
    5. '(i' → logprob: -7.767613410949707
    6. '(N' → logprob: -8.767613410949707
    7. '(A' → logprob: -9.017613410949707
    8. ' ' → logprob: -9.267613410949707
    9. '(j' → logprob: -9.267613410949707
    10. '(n' → logprob: -9.642613410949707

Token 143: 'k' (ID: 74)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6938276290893555
    2. '(k' → logprob: -1.1938276290893555
    3. '1' → logprob: -2.5688276290893555
    4. ' k' → logprob: -3.0688276290893555
    5. 'k' → logprob: -3.3188276290893555
    6. ' ' → logprob: -4.3188276290893555
    7. '(' → logprob: -4.5688276290893555
    8. '(K' → logprob: -4.9438276290893555
    9. ')' → logprob: -5.9438276290893555
    10. '(i' → logprob: -6.9438276290893555

Token 144: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3487063944339752
    2. ' -' → logprob: -1.2237063646316528
    3. ' ' → logprob: -9.098706245422363
    4. '1' → logprob: -9.223706245422363
    5. '+' → logprob: -11.098706245422363
    6. ')' → logprob: -11.473706245422363
    7. '   ' → logprob: -11.973706245422363
    8. '  ' → logprob: -12.723706245422363
    9. '
' → logprob: -12.848706245422363
    10. '```' → logprob: -12.848706245422363

Token 145: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010545044642640278
    2. ' ' → logprob: -9.250105857849121
    3. '```' → logprob: -13.312605857849121
    4. '   ' → logprob: -13.437605857849121
    5. '2' → logprob: -13.687605857849121
    6. ')' → logprob: -14.312605857849121
    7. '<|end|>' → logprob: -14.437605857849121
    8. '
' → logprob: -14.812605857849121
    9. '...' → logprob: -15.000105857849121
    10. '(' → logprob: -15.250105857849121

Token 146: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001438266917830333
    2. '2' → logprob: -9.250144004821777
    3. ' ' → logprob: -11.437644004821777
    4. '11' → logprob: -11.750144004821777
    5. '12' → logprob: -12.187644004821777
    6. '   ' → logprob: -13.062644004821777
    7. '```' → logprob: -13.250144004821777
    8. '
' → logprob: -13.562644004821777
    9. '129' → logprob: -13.875144004821777
    10. '10' → logprob: -13.937644004821777

Token 147: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18269629776477814
    2. ')//' → logprob: -2.3076963424682617
    3. '()' → logprob: -3.3076963424682617
    4. ' //' → logprob: -4.182696342468262
    5. '//' → logprob: -4.432696342468262
    6. ' )' → logprob: -5.807696342468262
    7. '   ' → logprob: -7.932696342468262
    8. ' ()' → logprob: -8.557696342468262
    9. ' ' → logprob: -9.682696342468262
    10. '```' → logprob: -9.807696342468262

Token 148: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.16056083142757416
    2. '//' → logprob: -1.9105608463287354
    3. '   ' → logprob: -9.535560607910156
    4. '```' → logprob: -9.660560607910156
    5. ' ' → logprob: -9.660560607910156
    6. '()' → logprob: -10.035560607910156
    7. ' ' → logprob: -10.285560607910156
    8. '	' → logprob: -11.035560607910156
    9. '    ' → logprob: -12.035560607910156
    10. '  ' → logprob: -12.160560607910156

Token 149: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5332478142227046e-05
    2. ' ' → logprob: -11.125015258789062
    3. '1' → logprob: -16.000015258789062
    4. '   ' → logprob: -16.625015258789062
    5. '```' → logprob: -16.625015258789062
    6. '6' → logprob: -17.187515258789062
    7. '4' → logprob: -17.812515258789062
    8. '3' → logprob: -18.062515258789062
    9. '202' → logprob: -18.437515258789062
    10. '
' → logprob: -18.687515258789062

Token 150: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5928495486150496e-05
    2. ' ' → logprob: -11.125016212463379
    3. '1' → logprob: -15.000016212463379
    4. '   ' → logprob: -16.375015258789062
    5. '212' → logprob: -17.000015258789062
    6. '22' → logprob: -17.250015258789062
    7. '210' → logprob: -17.750015258789062
    8. '21' → logprob: -17.750015258789062
    9. '202' → logprob: -17.812515258789062
    10. '214' → logprob: -17.875015258789062

Token 151: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40785521268844604
    2. '
' → logprob: -1.1578552722930908
    3. '    
' → logprob: -4.907855033874512
    4. '\n' → logprob: -5.782855033874512
    5. '       ' → logprob: -6.032855033874512
    6. '%' → logprob: -6.282855033874512
    7. '           ' → logprob: -6.407855033874512
    8. '%
' → logprob: -7.407855033874512
    9. '  
' → logprob: -7.532855033874512
    10. '```' → logprob: -7.907855033874512

Token 152: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5733922123908997
    2. '   ' → logprob: -1.0733921527862549
    3. '\n' → logprob: -2.698392152786255
    4. '    
' → logprob: -4.198392391204834
    5. ' return' → logprob: -5.823392391204834
    6. '  
' → logprob: -5.948392391204834
    7. 'return' → logprob: -6.698392391204834
    8. ' 
' → logprob: -7.198392391204834
    9. '```' → logprob: -7.323392391204834
    10. ' ' → logprob: -7.823392391204834

Token 153: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019671805202960968
    2. '
' → logprob: -4.51967191696167
    3. ' return' → logprob: -5.64467191696167
    4. 'return' → logprob: -6.26967191696167
    5. '%' → logprob: -6.76967191696167
    6. '    
' → logprob: -7.01967191696167
    7. ' ' → logprob: -8.144671440124512
    8. ')' → logprob: -9.019671440124512
    9. 'print' (adapté à ' print') → logprob: -9.269671440124512
    10. ' 
' → logprob: -9.394671440124512

Token 154: '(count' (ID: 25892)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04859543219208717
    2. '(count' → logprob: -3.048595428466797
    3. '(
' → logprob: -12.048595428466797
    4. '((' → logprob: -13.798595428466797
    5. '(

' → logprob: -14.673595428466797
    6. '(`' → logprob: -15.548595428466797
    7. ' (' → logprob: -15.548595428466797
    8. '(cnt' → logprob: -16.423595428466797
    9. '()' → logprob: -16.673595428466797
    10. 'count' → logprob: -16.923595428466797

Token 155: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.047547124326229095
    2. '%' → logprob: -3.2975471019744873
    3. ' %' → logprob: -4.672547340393066
    4. ' )' → logprob: -9.797547340393066
    5. ')%' → logprob: -10.297547340393066
    6. '**' → logprob: -11.922547340393066
    7. ')
' → logprob: -12.797547340393066
    8. '%)' → logprob: -12.922547340393066
    9. '```' → logprob: -13.172547340393066
    10. ',' → logprob: -13.547547340393066

Token 156: ' MOD' (ID: 32868)
  Prédit: ' MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' MOD' → logprob: -0.018358884379267693
    2. 'MOD' → logprob: -4.0183587074279785
    3. ' ' → logprob: -8.518359184265137
    4. '_MOD' → logprob: -12.518359184265137
    5. '.MOD' → logprob: -13.143359184265137
    6. ')' → logprob: -13.518359184265137
    7. ' ' → logprob: -13.643359184265137
    8. '(M' → logprob: -14.393359184265137
    9. ' )' → logprob: -16.14335823059082
    10. '  ' → logprob: -16.51835823059082

Token 157: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1008713702030946e-06
    2. ')
' → logprob: -13.750001907348633
    3. ' )' → logprob: -14.125001907348633
    4. ')`' → logprob: -16.500001907348633
    5. '()' → logprob: -16.625001907348633
    6. '())' → logprob: -16.750001907348633
    7. '))' → logprob: -17.000001907348633
    8. '`)' → logprob: -18.750001907348633
    9. ')}' → logprob: -18.875001907348633
    10. ')#' → logprob: -19.125001907348633

Token 158: 'main' (ID: 7731)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.28227370977401733
    2. '<|end|>' → logprob: -1.532273769378662
    3. '#' → logprob: -4.657273769378662
    4. ')' → logprob: -5.282273769378662
    5. '```' → logprob: -5.282273769378662
    6. '\n' → logprob: -5.907273769378662
    7. '[' → logprob: -6.657273769378662
    8. '\' → logprob: -6.657273769378662
    9. '

' → logprob: -7.282273769378662
    10. '(' → logprob: -7.282273769378662

Token 159: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6947751641273499
    2. '()' → logprob: -0.6947751641273499
    3. '(
' → logprob: -6.694775104522705
    4. '()
' → logprob: -8.069775581359863
    5. '#' → logprob: -9.944775581359863
    6. '```' → logprob: -11.944775581359863
    7. ')' → logprob: -12.319775581359863
    8. '(

' → logprob: -13.069775581359863
    9. '()\' → logprob: -13.194775581359863
    10. '\' → logprob: -13.194775581359863


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 157
Tokens correctement prédits (1ère position, stricte): 55
Tokens correctement prédits (1ère position, avec adaptation): 60
Tokens correctement prédits (top 10): 139
Précision stricte (1ère position): 35.03%
Précision adaptée (1ère position): 38.22%
Précision (top 10): 88.54%
================================================================================
