================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:21:05
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import numpy as np
from functools import reduce

# Lecture optimisée
buffer = sys.stdin.buffer
input = lambda: buffer.readline()
sys.setrecursionlimit(1 << 25)

h, w, k = map(int, input().split())
s = np.frombuffer(b"".join([input().rstrip() for _ in range(h)]), dtype=np.int8) - ord('0')
s = s.reshape(h, w)
ans = h + w

powerset = (bin(mask)[2:].zfill(h - 1) for mask in range(1 << (h - 1)))

for mask in range(1 << (h - 1)):
    cuts = [i for i in range(h - 1) if mask >> i & 1]
    groups = np.split(s, [c + 1 for c in cuts])
    group_sum = np.array([g.sum(axis=0) for g in groups])
    if np.any(group_sum > k):
        continue

    cnt = len(cuts)
    acc = np.zeros(len(groups), dtype=np.int64)
    for col in zip(*group_sum):
        acc += col
        if np.any(acc > k):
            cnt += 1
            acc = np.array(col)
    ans = min(ans, cnt)
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6429765224456787
    2. '.' → logprob: -0.8929765224456787
    3. 'import' → logprob: -3.8929765224456787
    4. 'newline' → logprob: -4.267976760864258
    5. '\' → logprob: -4.767976760864258
    6. '<|end|>' → logprob: -5.017976760864258
    7. '```' → logprob: -5.392976760864258
    8. '
' → logprob: -5.767976760864258
    9. '<|end|>' → logprob: -6.517976760864258
    10. '' → logprob: -6.517976760864258

Token 4: ' numpy' (ID: 19529)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00023321842309087515
    2. 'os' → logprob: -8.37523365020752
    3. ' math' → logprob: -13.87523365020752
    4. ' re' → logprob: -14.37523365020752
    5. '"os' → logprob: -14.87523365020752
    6. ' json' → logprob: -15.12523365020752
    7. '_os' → logprob: -15.87523365020752
    8. '	os' → logprob: -16.375232696533203
    9. ' ' → logprob: -16.750232696533203
    10. ' ' → logprob: -17.000232696533203

Token 5: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.01191825233399868
    2. '<|end|>' → logprob: -5.261918067932129
    3. '.' → logprob: -5.636918067932129
    4. 'as' → logprob: -5.886918067932129
    5. '<|end|>' → logprob: -9.261918067932129
    6. ' .' → logprob: -9.511918067932129
    7. '.ndarray' → logprob: -10.136918067932129
    8. '.as' → logprob: -10.386918067932129
    9. ' ' → logprob: -10.511918067932129
    10. '.pyplot' → logprob: -11.511918067932129

Token 6: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.0041841790080070496
    2. ' ' → logprob: -5.629184246063232
    3. 'np' → logprob: -7.504184246063232
    4. ' numpy' → logprob: -11.004183769226074
    5. ' ndarray' → logprob: -12.254183769226074
    6. ' array' → logprob: -12.379183769226074
    7. ''' → logprob: -13.254183769226074
    8. ' nd' → logprob: -13.254183769226074
    9. ' ' → logprob: -13.254183769226074
    10. ' a' → logprob: -14.879183769226074

Token 7: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5934869050979614
    2. '
' → logprob: -2.093486785888672
    3. '```' → logprob: -2.218486785888672
    4. '\n' → logprob: -2.718486785888672
    5. '.' → logprob: -3.468486785888672
    6. '<|end|>' → logprob: -3.468486785888672
    7. '\' → logprob: -3.718486785888672
    8. 'as' → logprob: -4.093486785888672
    9. '[' → logprob: -4.218486785888672
    10. 'newline' → logprob: -4.593486785888672

Token 8: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8131494522094727
    2. '\n' → logprob: -1.6881494522094727
    3. 'import' → logprob: -1.9381494522094727
    4. '```' → logprob: -2.6881494522094727
    5. '.' → logprob: -2.8131494522094727
    6. '<|end|>' → logprob: -3.3131494522094727
    7. '\' → logprob: -3.5631494522094727
    8. '

' → logprob: -5.063149452209473
    9. 'as' → logprob: -5.188149452209473
    10. '[' → logprob: -5.313149452209473

Token 9: ' functools' (ID: 142636)
  Prédit: ' sklearn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sklearn' → logprob: -0.0989525318145752
    2. 'sk' → logprob: -2.598952531814575
    3. ' scipy' → logprob: -4.223952293395996
    4. ' tensorflow' → logprob: -6.348952293395996
    5. ' pandas' → logprob: -6.598952293395996
    6. ' matplotlib' → logprob: -7.473952293395996
    7. 'tensorflow' → logprob: -7.973952293395996
    8. 'sc' → logprob: -8.098952293395996
    9. ' math' → logprob: -8.348952293395996
    10. ' sk' → logprob: -9.223952293395996

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.5241788029670715
    2. 'import' → logprob: -0.8991788029670715
    3. '_import' → logprob: -7.149178981781006
    4. ' ' → logprob: -9.399178504943848
    5. '_' → logprob: -9.649178504943848
    6. '.' → logprob: -10.149178504943848
    7. '	import' → logprob: -10.649178504943848
    8. ' _' → logprob: -10.649178504943848
    9. ' ' → logprob: -10.774178504943848
    10. '```' → logprob: -13.024178504943848

Token 11: ' reduce' (ID: 10389)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.9684136509895325
    2. 'partial' → logprob: -1.2184135913848877
    3. 'reduce' → logprob: -1.7184135913848877
    4. 'wrap' → logprob: -2.0934135913848877
    5. ' l' → logprob: -4.593413829803467
    6. ' wraps' → logprob: -4.718413829803467
    7. ' partial' → logprob: -6.093413829803467
    8. ' reduce' → logprob: -7.968413829803467
    9. 'wr' → logprob: -9.343413352966309
    10. 'cached' → logprob: -9.343413352966309

Token 12: '

' (ID: 279)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.737622082233429
    2. '(' → logprob: -1.7376220226287842
    3. 'def' → logprob: -2.487622022628784
    4. '\' → logprob: -2.612622022628784
    5. ',' → logprob: -2.862622022628784
    6. '\n' → logprob: -2.987622022628784
    7. '.' → logprob: -3.487622022628784
    8. '```' → logprob: -4.112622261047363
    9. '[' → logprob: -4.987622261047363
    10. '<|end|>' → logprob: -5.612622261047363

Token 13: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3801034390926361
    2. '(' → logprob: -1.6301034688949585
    3. ',' → logprob: -3.255103349685669
    4. '\' → logprob: -3.380103349685669
    5. '.' → logprob: -4.130103588104248
    6. 'd' → logprob: -4.880103588104248
    7. '```' → logprob: -5.630103588104248
    8. ')' → logprob: -5.755103588104248
    9. '`' → logprob: -6.255103588104248
    10. '#' → logprob: -6.255103588104248

Token 14: ' Lecture' (ID: 106534)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.21047170460224152
    2. ' def' → logprob: -2.2104716300964355
    3. ' ' → logprob: -2.9604716300964355
    4. 'd' → logprob: -5.0854716300964355
    5. 'reduce' → logprob: -5.5854716300964355
    6. '#' → logprob: -6.0854716300964355
    7. ' reduce' → logprob: -6.0854716300964355
    8. '_' → logprob: -6.5854716300964355
    9. ' #' → logprob: -6.7104716300964355
    10. 'import' → logprob: -6.9604716300964355

Token 15: ' optim' (ID: 9367)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.012158989906311
    2. '_' → logprob: -1.262158989906311
    3. 's' → logprob: -1.262158989906311
    4. ':' → logprob: -3.5121588706970215
    5. '1' → logprob: -5.0121588706970215
    6. 'def' → logprob: -5.1371588706970215
    7. ',' → logprob: -5.7621588706970215
    8. '2' → logprob: -5.7621588706970215
    9. ' =' → logprob: -6.0121588706970215
    10. '#' → logprob: -6.0121588706970215

Token 16: 'isée' (ID: 59331)
  Prédit: 'ization'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ization' → logprob: -0.1832527220249176
    2. 'izer' → logprob: -2.6832528114318848
    3. 'izations' → logprob: -3.6832528114318848
    4. 'al' → logprob: -3.9332528114318848
    5. '```' → logprob: -4.808252811431885
    6. '#' → logprob: -5.058252811431885
    7. 'i' → logprob: -5.183252811431885
    8. 'iz' → logprob: -5.183252811431885
    9. 'izers' → logprob: -5.183252811431885
    10. 'izing' → logprob: -5.933252811431885

Token 17: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1840515285730362
    2. ':' → logprob: -2.309051513671875
    3. 'de' → logprob: -3.684051513671875
    4. ' de' → logprob: -4.434051513671875
    5. ' :' → logprob: -4.559051513671875
    6. '\' → logprob: -5.559051513671875
    7. '#' → logprob: -5.684051513671875
    8. 'import' → logprob: -6.059051513671875
    9. ' def' → logprob: -6.184051513671875
    10. 's' → logprob: -6.309051513671875

Token 18: 'buffer' (ID: 15967)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03908217325806618
    2. ':' → logprob: -4.164082050323486
    3. 'de' → logprob: -5.039082050323486
    4. ' def' → logprob: -5.164082050323486
    5. ' :' → logprob: -5.539082050323486
    6. ' de' → logprob: -6.289082050323486
    7. '#' → logprob: -6.664082050323486
    8. '\' → logprob: -7.039082050323486
    9. '_' → logprob: -7.414082050323486
    10. ' ' → logprob: -7.414082050323486

Token 19: ' =' (ID: 314)
  Prédit: '_size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.6860312223434448
    2. ' =' → logprob: -1.1860312223434448
    3. '_' → logprob: -1.8110312223434448
    4. '=' → logprob: -3.6860313415527344
    5. 's' → logprob: -7.311031341552734
    6. 'size' → logprob: -7.811031341552734
    7. 'ed' → logprob: -8.436031341552734
    8. '_sizes' → logprob: -8.561031341552734
    9. '_data' → logprob: -8.686031341552734
    10. '_length' → logprob: -8.936031341552734

Token 20: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -1.3214715719223022
    2. 'byte' → logprob: -1.6964715719223022
    3. ' byte' → logprob: -1.9464715719223022
    4. 'sys' → logprob: -1.9464715719223022
    5. ' []' → logprob: -2.696471691131592
    6. ' b' → logprob: -2.696471691131592
    7. '[]' → logprob: -3.196471691131592
    8. 'b' → logprob: -3.196471691131592
    9. ' np' → logprob: -4.196471691131592
    10. '""' → logprob: -4.696471691131592

Token 21: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.46542277932167053
    2. '.' → logprob: -1.0904227495193481
    3. '.stdout' → logprob: -3.7154228687286377
    4. ' .' → logprob: -4.590422630310059
    5. '.argv' → logprob: -6.965422630310059
    6. '.std' → logprob: -8.090422630310059
    7. '.stderr' → logprob: -8.965422630310059
    8. '.buffer' → logprob: -9.465422630310059
    9. '.readline' → logprob: -10.340422630310059
    10. '.input' → logprob: -11.215422630310059

Token 22: '.buffer' (ID: 48964)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.5693300366401672
    2. '.read' → logprob: -0.9443300366401672
    3. '.buffer' → logprob: -3.1943299770355225
    4. '.readlines' → logprob: -6.194330215454102
    5. '.' → logprob: -6.694330215454102
    6. 'buffer' → logprob: -7.694330215454102
    7. 'read' → logprob: -8.319330215454102
    8. '```' → logprob: -9.569330215454102
    9. '.detach' → logprob: -9.944330215454102
    10. '_buffer' → logprob: -11.444330215454102

Token 23: '
' (ID: 198)
  Prédit: '.read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.read' → logprob: -0.589280366897583
    2. '.readline' → logprob: -1.464280366897583
    3. '.' → logprob: -1.589280366897583
    4. 'read' → logprob: -4.714280128479004
    5. '.readlines' → logprob: -7.964280128479004
    6. '_read' → logprob: -8.339280128479004
    7. '[:]' → logprob: -9.589280128479004
    8. ' readline' → logprob: -10.089280128479004
    9. '.Read' → logprob: -10.214280128479004
    10. ' ' → logprob: -10.464280128479004

Token 24: 'input' (ID: 2586)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.6893728375434875
    2. '.read' → logprob: -1.1893727779388428
    3. 'read' → logprob: -1.8143727779388428
    4. '_read' → logprob: -4.689373016357422
    5. '.' → logprob: -4.814373016357422
    6. 'def' → logprob: -5.189373016357422
    7. '.readlines' → logprob: -6.189373016357422
    8. '=' → logprob: -6.689373016357422
    9. 'data' → logprob: -6.939373016357422
    10. ' readline' → logprob: -7.814373016357422

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9134418368339539
    2. '=' → logprob: -1.0384418964385986
    3. '()' → logprob: -1.6634418964385986
    4. '_' → logprob: -3.6634418964385986
    5. '_data' → logprob: -4.5384416580200195
    6. '.' → logprob: -5.4134416580200195
    7. '_line' → logprob: -6.0384416580200195
    8. '.readline' → logprob: -6.0384416580200195
    9. '(' → logprob: -6.4134416580200195
    10. ' ' → logprob: -7.0384416580200195

Token 26: ' lambda' (ID: 27871)
  Prédit: ' buffer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' buffer' → logprob: -0.11326999962329865
    2. 'buffer' → logprob: -2.2382700443267822
    3. ' lambda' → logprob: -7.863269805908203
    4. 'lambda' → logprob: -10.488269805908203
    5. ' input' → logprob: -11.738269805908203
    6. ' ' → logprob: -12.113269805908203
    7. '	buffer' → logprob: -12.113269805908203
    8. ' sys' → logprob: -12.363269805908203
    9. 'input' → logprob: -13.113269805908203
    10. '.buffer' → logprob: -13.363269805908203

Token 27: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018470417708158493
    2. ' :' → logprob: -4.018470287322998
    3. ':list' → logprob: -9.893470764160156
    4. ':b' → logprob: -10.143470764160156
    5. ':void' → logprob: -10.643470764160156
    6. ':int' → logprob: -10.643470764160156
    7. ':data' → logprob: -10.768470764160156
    8. ':size' → logprob: -10.768470764160156
    9. 'buffer' → logprob: -10.893470764160156
    10. ' ' → logprob: -10.893470764160156

Token 28: ' buffer' (ID: 8573)
  Prédit: 'buffer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'buffer' → logprob: -0.25207334756851196
    2. ' buffer' → logprob: -1.5020732879638672
    3. 'sys' → logprob: -9.252073287963867
    4. ' sys' → logprob: -10.252073287963867
    5. 'input' → logprob: -12.127073287963867
    6. 'str' → logprob: -13.377073287963867
    7. 'buf' → logprob: -13.627073287963867
    8. '	buffer' → logprob: -13.752073287963867
    9. ' input' → logprob: -13.877073287963867
    10. '(buffer' → logprob: -14.377073287963867

Token 29: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0003372502396814525
    2. '.read' → logprob: -8.000337600708008
    3. ' readline' → logprob: -13.750337600708008
    4. '.' → logprob: -14.500337600708008
    5. '.raw' → logprob: -16.000337600708008
    6. '.readlines' → logprob: -17.250337600708008
    7. '.rstrip' → logprob: -17.500337600708008
    8. '.decode' → logprob: -17.625337600708008
    9. 'read' → logprob: -17.750337600708008
    10. '_read' → logprob: -19.250337600708008

Token 30: '()
' (ID: 1234)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.07890179008245468
    2. '()' → logprob: -2.578901767730713
    3. '.rstrip' → logprob: -12.828902244567871
    4. '(' → logprob: -13.453902244567871
    5. ' ().' → logprob: -13.578902244567871
    6. '()
' → logprob: -13.578902244567871
    7. '()\' → logprob: -13.578902244567871
    8. 'rstrip' → logprob: -14.078902244567871
    9. '().__' → logprob: -14.203902244567871
    10. '.' → logprob: -14.953902244567871

Token 31: 'sys' (ID: 17324)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3231063485145569
    2. '\n' → logprob: -2.323106288909912
    3. '
' → logprob: -2.448106288909912
    4. 'def' → logprob: -4.198106288909912
    5. ')' → logprob: -4.323106288909912
    6. '(' → logprob: -4.323106288909912
    7. ' ' → logprob: -5.073106288909912
    8. '#' → logprob: -5.073106288909912
    9. '()
' → logprob: -5.073106288909912
    10. '()\' → logprob: -5.323106288909912

Token 32: '.set' (ID: 1230)
  Prédit: '.stdout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdout' → logprob: -0.9205493330955505
    2. '.stdin' → logprob: -1.2955493927001953
    3. '.exit' → logprob: -1.5455493927001953
    4. '.' → logprob: -2.2955493927001953
    5. '.stderr' → logprob: -5.045549392700195
    6. '.argv' → logprob: -5.670549392700195
    7. '.set' → logprob: -6.420549392700195
    8. '.path' → logprob: -6.920549392700195
    9. '.version' → logprob: -8.045549392700195
    10. '.std' → logprob: -8.045549392700195

Token 33: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.0009543364867568016
    2. 'execution' → logprob: -7.8759541511535645
    3. 'switch' → logprob: -8.250954627990723
    4. 're' → logprob: -9.875954627990723
    5. 'ecution' → logprob: -10.000954627990723
    6. 'ursion' → logprob: -10.000954627990723
    7. 'limit' → logprob: -10.125954627990723
    8. '_rec' → logprob: -10.500954627990723
    9. 'trace' → logprob: -10.625954627990723
    10. 'v' → logprob: -11.500954627990723

Token 34: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -9.627176768844947e-05
    2. 'urs' → logprob: -9.625096321105957
    3. 'ursive' → logprob: -11.000096321105957
    4. 'ur' → logprob: -12.000096321105957
    5. 'limit' → logprob: -12.250096321105957
    6. 'usion' → logprob: -14.250096321105957
    7. '_limit' → logprob: -14.500096321105957
    8. 'ursor' → logprob: -14.750096321105957
    9. 'urse' → logprob: -15.000096321105957
    10. '_' → logprob: -15.750096321105957

Token 35: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -3.249780638725497e-05
    2. '_limit' → logprob: -10.375032424926758
    3. 'depth' → logprob: -14.375032424926758
    4. ' limit' → logprob: -14.500032424926758
    5. 'lim' → logprob: -17.250032424926758
    6. '-limit' → logprob: -18.625032424926758
    7. 'Limit' → logprob: -18.750032424926758
    8. '.limit' → logprob: -19.875032424926758
    9. '(limit' → logprob: -19.875032424926758
    10. '_LIMIT' → logprob: -19.875032424926758

Token 36: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.320199877838604e-07
    2. '((' → logprob: -15.375
    3. '(int' → logprob: -15.625
    4. ' (' → logprob: -17.625
    5. '()' → logprob: -18.25
    6. '100' → logprob: -18.25
    7. '(
' → logprob: -19.625
    8. '250' → logprob: -19.875
    9. ' ' → logprob: -20.0
    10. '400' → logprob: -20.5

Token 37: '1' (ID: 16)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.029843395575881004
    2. '100' → logprob: -3.529843330383301
    3. ' ' → logprob: -10.2798433303833
    4. '200' → logprob: -11.4048433303833
    5. '300' → logprob: -11.4048433303833
    6. '250' → logprob: -11.4048433303833
    7. '500' → logprob: -11.6548433303833
    8. '999' → logprob: -12.0298433303833
    9. '400' → logprob: -12.4048433303833
    10. '1' → logprob: -12.6548433303833

Token 38: ' <<' (ID: 2256)
  Prédit: '06'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '06' → logprob: -0.7603560090065002
    2. '000' → logprob: -0.8853560090065002
    3. '07' → logprob: -3.0103559494018555
    4. '6' → logprob: -3.0103559494018555
    5. '0' → logprob: -5.2603559494018555
    6. '5' → logprob: -5.3853559494018555
    7. '05' → logprob: -5.5103559494018555
    8. '00' → logprob: -6.2603559494018555
    9. '7' → logprob: -6.5103559494018555
    10. '8' → logprob: -6.6353559494018555

Token 39: ' ' (ID: 220)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '20' → logprob: -0.14472626149654388
    2. '25' → logprob: -2.019726276397705
    3. '30' → logprob: -6.394726276397705
    4. '15' → logprob: -8.644725799560547
    5. '27' → logprob: -9.019725799560547
    6. '31' → logprob: -10.644725799560547
    7. '21' → logprob: -11.269725799560547
    8. '26' → logprob: -11.269725799560547
    9. '16' → logprob: -12.144725799560547
    10. '29' → logprob: -12.394725799560547

Token 40: '25' (ID: 1161)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.10077536851167679
    2. '25' → logprob: -2.3507754802703857
    3. '30' → logprob: -8.100775718688965
    4. '15' → logprob: -8.725775718688965
    5. '27' → logprob: -10.475775718688965
    6. '21' → logprob: -10.850775718688965
    7. '23' → logprob: -11.100775718688965
    8. '16' → logprob: -11.600775718688965
    9. '17' → logprob: -11.725775718688965
    10. '31' → logprob: -11.975775718688965

Token 41: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4259644558478612e-05
    2. ')
' → logprob: -11.375014305114746
    3. ' )' → logprob: -13.625014305114746
    4. ')

' → logprob: -14.125014305114746
    5. '))' → logprob: -16.00001335144043
    6. '
' → logprob: -16.00001335144043
    7. '),' → logprob: -16.37501335144043
    8. '()' → logprob: -16.62501335144043
    9. ')
' → logprob: -16.62501335144043
    10. '```' → logprob: -16.62501335144043

Token 42: 'h' (ID: 71)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5300567746162415
    2. 'def' → logprob: -0.9050567746162415
    3. 'N' → logprob: -5.655056953430176
    4. '#' → logprob: -6.655056953430176
    5. 'class' → logprob: -7.030056953430176
    6. 't' → logprob: -8.280056953430176
    7. 'MOD' → logprob: -8.405056953430176
    8. 'a' → logprob: -8.780056953430176
    9. 'd' → logprob: -8.780056953430176
    10. 'T' → logprob: -9.155056953430176

Token 43: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1959972083568573
    2. '=' → logprob: -1.8209972381591797
    3. ' =' → logprob: -4.32099723815918
    4. 'e' → logprob: -7.07099723815918
    5. 'eight' → logprob: -7.07099723815918
    6. ' ,' → logprob: -8.19599723815918
    7. '=int' → logprob: -8.32099723815918
    8. 't' → logprob: -8.44599723815918
    9. ' ' → logprob: -8.82099723815918
    10. ',w' → logprob: -10.07099723815918

Token 44: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.1004372090101242
    2. ' w' → logprob: -2.3504371643066406
    3. ' ' → logprob: -8.72543716430664
    4. 'm' → logprob: -10.72543716430664
    5. 't' → logprob: -11.72543716430664
    6. '_' → logprob: -11.72543716430664
    7. 's' → logprob: -12.47543716430664
    8. 'l' → logprob: -12.72543716430664
    9. '=' → logprob: -12.72543716430664
    10. ' =' → logprob: -12.97543716430664

Token 45: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2813246548175812
    2. '=' → logprob: -1.4063246250152588
    3. ',' → logprob: -8.78132438659668
    4. ' ,' → logprob: -12.15632438659668
    5. ' ' → logprob: -12.15632438659668
    6. '=input' → logprob: -12.15632438659668
    7. '=int' → logprob: -13.78132438659668
    8. ' =
' → logprob: -14.03132438659668
    9. ')' → logprob: -14.65632438659668
    10. '=

' → logprob: -15.15632438659668

Token 46: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2568974494934082
    2. 'd' → logprob: -2.256897449493408
    3. 'm' → logprob: -3.506897449493408
    4. 'n' → logprob: -3.631897449493408
    5. 'q' → logprob: -3.881897449493408
    6. 'a' → logprob: -4.381897449493408
    7. ' k' → logprob: -4.631897449493408
    8. 'c' → logprob: -4.881897449493408
    9. 'x' → logprob: -5.506897449493408
    10. 't' → logprob: -5.631897449493408

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3484828770160675
    2. '=' → logprob: -1.2234828472137451
    3. ',' → logprob: -10.348483085632324
    4. ' ' → logprob: -12.973483085632324
    5. '=input' → logprob: -13.098483085632324
    6. '=int' → logprob: -14.348483085632324
    7. ' ,' → logprob: -15.223483085632324
    8. '=sys' → logprob: -15.723483085632324
    9. '=

' → logprob: -15.973483085632324
    10. ' =
' → logprob: -16.223482131958008

Token 48: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.14274007081985474
    2. ' map' → logprob: -2.01774001121521
    3. '[' → logprob: -10.517740249633789
    4. 'list' → logprob: -10.892740249633789
    5. 'buffer' → logprob: -12.017740249633789
    6. '	map' → logprob: -12.892740249633789
    7. ' ' → logprob: -13.017740249633789
    8. ' list' → logprob: -13.017740249633789
    9. ' [' → logprob: -13.267740249633789
    10. 'input' → logprob: -13.392740249633789

Token 49: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.016077304258942604
    2. '(' → logprob: -4.141077518463135
    3. '(input' → logprob: -11.016077041625977
    4. '(str' → logprob: -11.141077041625977
    5. '(list' → logprob: -12.391077041625977
    6. 'int' → logprob: -12.391077041625977
    7. '(tuple' → logprob: -14.266077041625977
    8. '(lambda' → logprob: -14.516077041625977
    9. '(map' → logprob: -15.141077041625977
    10. '<int' → logprob: -15.141077041625977

Token 50: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16885331273078918
    2. ',input' → logprob: -2.668853282928467
    3. '(' → logprob: -2.918853282928467
    4. '(input' → logprob: -3.668853282928467
    5. '(buffer' → logprob: -5.543853282928467
    6. 'input' → logprob: -6.543853282928467
    7. ' ,' → logprob: -7.168853282928467
    8. 'buffer' → logprob: -8.543853759765625
    9. '(sys' → logprob: -9.543853759765625
    10. '```' → logprob: -10.043853759765625

Token 51: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0493822805583477
    2. ' input' → logprob: -3.049382209777832
    3. 'buffer' → logprob: -7.299382209777832
    4. ' buffer' → logprob: -9.674382209777832
    5. ')' → logprob: -10.049382209777832
    6. ' ' → logprob: -12.924382209777832
    7. '(input' → logprob: -12.924382209777832
    8. '=input' → logprob: -13.424382209777832
    9. '```' → logprob: -13.424382209777832
    10. ',input' → logprob: -14.049382209777832

Token 52: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00014895245840307325
    2. '()' → logprob: -9.00014877319336
    3. '())' → logprob: -10.62514877319336
    4. ')' → logprob: -14.75014877319336
    5. ' ().' → logprob: -14.87514877319336
    6. '(' → logprob: -16.12514877319336
    7. '()[' → logprob: -16.87514877319336
    8. '()
' → logprob: -16.87514877319336
    9. '.readline' → logprob: -17.25014877319336
    10. '()

' → logprob: -17.62514877319336

Token 53: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.02754231169819832
    2. 'strip' → logprob: -4.0275421142578125
    3. 'decode' → logprob: -5.0275421142578125
    4. 'rstrip' → logprob: -5.9025421142578125
    5. ')' → logprob: -10.402542114257812
    6. 'read' → logprob: -11.152542114257812
    7. ' split' → logprob: -11.652542114257812
    8. '().' → logprob: -13.027542114257812
    9. '```' → logprob: -13.277542114257812
    10. '(split' → logprob: -13.402542114257812

Token 54: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.07754397392272949
    2. ')' → logprob: -3.0775439739227295
    3. '()' → logprob: -3.5775439739227295
    4. '(' → logprob: -7.952544212341309
    5. '(),' → logprob: -9.327544212341309
    6. '()))' → logprob: -9.702544212341309
    7. '))' → logprob: -10.702544212341309
    8. '())
' → logprob: -11.202544212341309
    9. '('' → logprob: -11.577544212341309
    10. '()),' → logprob: -11.702544212341309

Token 55: 's' (ID: 82)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.33637797832489014
    2. '\n' → logprob: -2.4613780975341797
    3. ')' → logprob: -2.5863780975341797
    4. ' 
' → logprob: -3.0863780975341797
    5. '<|end|>' → logprob: -3.4613780975341797
    6. ' ' → logprob: -4.83637809753418
    7. '
' → logprob: -5.21137809753418
    8. '\' → logprob: -5.33637809753418
    9. '  
' → logprob: -5.33637809753418
    10. '' → logprob: -5.83637809753418

Token 56: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07070478796958923
    2. '=' → logprob: -2.695704698562622
    3. '=[]' → logprob: -8.445704460144043
    4. ' ' → logprob: -8.820704460144043
    5. '[' → logprob: -9.070704460144043
    6. '[]' → logprob: -9.195704460144043
    7. '_' → logprob: -10.195704460144043
    8. 'quares' → logprob: -10.695704460144043
    9. 's' → logprob: -10.945704460144043
    10. '```' → logprob: -10.945704460144043

Token 57: ' np' (ID: 5374)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3661611080169678
    2. '[input' → logprob: -1.4911611080169678
    3. '[np' → logprob: -3.2411611080169678
    4. '[list' → logprob: -3.6161611080169678
    5. '[b' → logprob: -4.866161346435547
    6. '([' → logprob: -5.991161346435547
    7. '[]' → logprob: -5.991161346435547
    8. '[str' → logprob: -7.116161346435547
    9. '(buffer' → logprob: -7.741161346435547
    10. '[array' → logprob: -7.991161346435547

Token 58: '.from' (ID: 10935)
  Prédit: '.array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.array' → logprob: -0.025828754529356956
    2. '.from' → logprob: -4.775828838348389
    3. '.empty' → logprob: -5.025828838348389
    4. '.' → logprob: -5.650828838348389
    5. '.full' → logprob: -6.150828838348389
    6. '.zeros' → logprob: -6.525828838348389
    7. '.char' → logprob: -6.525828838348389
    8. '.asarray' → logprob: -6.900828838348389
    9. '.arange' → logprob: -8.02582836151123
    10. '.ndarray' → logprob: -8.02582836151123

Token 59: 'buffer' (ID: 15967)
  Prédit: 'buffer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'buffer' → logprob: -0.22477661073207855
    2. 'string' → logprob: -1.8497766256332397
    3. 'iter' → logprob: -3.34977650642395
    4. 'function' → logprob: -4.849776744842529
    5. 'py' → logprob: -7.474776744842529
    6. 'file' → logprob: -8.474776268005371
    7. 'strings' → logprob: -9.724776268005371
    8. '(buffer' → logprob: -9.849776268005371
    9. 'stdin' → logprob: -9.849776268005371
    10. 'regex' → logprob: -10.849776268005371

Token 60: '(b' (ID: 3229)
  Prédit: '(buffer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(buffer' → logprob: -0.0010257817339152098
    2. '(' → logprob: -7.001025676727295
    3. '(input' → logprob: -9.126026153564453
    4. 'buffer' → logprob: -13.001026153564453
    5. '(sys' → logprob: -13.501026153564453
    6. '(b' → logprob: -14.251026153564453
    7. '(buf' → logprob: -14.626026153564453
    8. '(buff' → logprob: -14.876026153564453
    9. '(Buffer' → logprob: -16.251026153564453
    10. ' buffer' → logprob: -16.376026153564453

Token 61: '"' (ID: 1)
  Prédit: 'uffer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uffer' → logprob: -0.0010917582549154758
    2. 'uf' → logprob: -7.376091957092285
    3. 'input' → logprob: -8.251091957092285
    4. 'y' → logprob: -9.501091957092285
    5. 'buffer' → logprob: -10.251091957092285
    6. 'uff' → logprob: -10.501091957092285
    7. '(buffer' → logprob: -11.001091957092285
    8. ''' → logprob: -11.376091957092285
    9. 'ufer' → logprob: -11.626091957092285
    10. '(input' → logprob: -12.001091957092285

Token 62: '".' (ID: 4050)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.35908469557762146
    2. 'buffer' → logprob: -1.3590847253799438
    3. 'uffer' → logprob: -3.7340846061706543
    4. 'sys' → logprob: -4.859084606170654
    5. 's' → logprob: -5.359084606170654
    6. '""' → logprob: -6.484084606170654
    7. '(buffer' → logprob: -6.734084606170654
    8. 'stdin' → logprob: -6.984084606170654
    9. '''' → logprob: -7.484084606170654
    10. 'b' → logprob: -7.734084606170654

Token 63: 'join' (ID: 10891)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -1.194908618927002
    2. 'read' → logprob: -1.319908618927002
    3. 'strip' → logprob: -2.069908618927002
    4. 'stdin' → logprob: -2.319908618927002
    5. 'rstrip' → logprob: -2.694908618927002
    6. 'uffer' → logprob: -3.319908618927002
    7. 'decode' → logprob: -3.694908618927002
    8. 'input' → logprob: -3.819908618927002
    9. 'in' → logprob: -3.944908618927002
    10. 'join' → logprob: -4.069908618927002

Token 64: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.6099262237548828
    2. '(input' → logprob: -1.1099262237548828
    3. '(buffer' → logprob: -2.109926223754883
    4. '[input' → logprob: -5.859926223754883
    5. 'input' → logprob: -6.484926223754883
    6. '(' → logprob: -7.609926223754883
    7. 'buffer' → logprob: -8.359926223754883
    8. '(sys' → logprob: -8.609926223754883
    9. '((' → logprob: -9.234926223754883
    10. '(map' → logprob: -9.359926223754883

Token 65: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2618001103401184
    2. 'buffer' → logprob: -1.5118000507354736
    3. '[input' → logprob: -4.761800289154053
    4. '[' → logprob: -7.011800289154053
    5. ' input' → logprob: -8.761799812316895
    6. ' buffer' → logprob: -9.886799812316895
    7. '[b' → logprob: -10.261799812316895
    8. '(input' → logprob: -10.636799812316895
    9. '(buffer' → logprob: -10.886799812316895
    10. 'list' → logprob: -11.261799812316895

Token 66: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.018186818808317184
    2. '().' → logprob: -4.518187046051025
    3. '()],' → logprob: -5.893187046051025
    4. '()),' → logprob: -6.018187046051025
    5. '()]' → logprob: -6.768187046051025
    6. '(),' → logprob: -8.268186569213867
    7. '())' → logprob: -8.393186569213867
    8. '()].' → logprob: -9.268186569213867
    9. '()).' → logprob: -10.393186569213867
    10. '(' → logprob: -10.643186569213867

Token 67: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.19313476979732513
    2. 'strip' → logprob: -1.8181347846984863
    3. 'split' → logprob: -4.693134784698486
    4. 'decode' → logprob: -5.568134784698486
    5. ')' → logprob: -8.693134307861328
    6. 'read' → logprob: -10.318134307861328
    7. 'replace' → logprob: -10.568134307861328
    8. 'encode' → logprob: -10.693134307861328
    9. 'tolist' → logprob: -10.818134307861328
    10. 't' → logprob: -11.068134307861328

Token 68: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00832248106598854
    2. 'b' → logprob: -5.758322715759277
    3. '(b' → logprob: -5.758322715759277
    4. '())' → logprob: -7.383322715759277
    5. '()\' → logprob: -7.508322715759277
    6. '(),' → logprob: -8.508322715759277
    7. '()]' → logprob: -9.008322715759277
    8. '(' → logprob: -9.258322715759277
    9. ' ()' → logprob: -9.633322715759277
    10. '()
' → logprob: -9.633322715759277

Token 69: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06639211624860764
    2. ' for' → logprob: -3.066392183303833
    3. 'for' → logprob: -4.191391944885254
    4. '(' → logprob: -7.566391944885254
    5. '(),' → logprob: -7.691391944885254
    6. ')' → logprob: -7.816391944885254
    7. ' ()' → logprob: -8.066391944885254
    8. ',' → logprob: -8.691391944885254
    9. '()),' → logprob: -9.566391944885254
    10. 's' → logprob: -9.691391944885254

Token 70: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4446922242641449
    2. ' range' → logprob: -1.1946922540664673
    3. ' _' → logprob: -3.1946921348571777
    4. 'range' → logprob: -4.444692134857178
    5. '_range' → logprob: -5.694692134857178
    6. ' in' → logprob: -10.569692611694336
    7. ' ' → logprob: -10.944692611694336
    8. '_i' → logprob: -11.069692611694336
    9. '_h' → logprob: -11.944692611694336
    10. '	range' → logprob: -12.444692611694336

Token 71: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014334732666611671
    2. ' range' → logprob: -4.264334678649902
    3. ' in' → logprob: -9.514334678649902
    4. '(range' → logprob: -10.889334678649902
    5. 'in' → logprob: -11.014334678649902
    6. 'ange' → logprob: -11.514334678649902
    7. 'ran' → logprob: -11.514334678649902
    8. '	range' → logprob: -11.764334678649902
    9. 'rang' → logprob: -12.264334678649902
    10. 'r' → logprob: -12.514334678649902

Token 72: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0032112228218466043
    2. ' range' → logprob: -5.75321102142334
    3. '(range' → logprob: -10.87821102142334
    4. '[' → logprob: -12.25321102142334
    5. '	range' → logprob: -13.25321102142334
    6. 'r' → logprob: -13.75321102142334
    7. 's' → logprob: -13.75321102142334
    8. '```' → logprob: -14.00321102142334
    9. 'ran' → logprob: -14.12821102142334
    10. '   ' → logprob: -14.37821102142334

Token 73: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -5.56233171664644e-05
    2. '(' → logprob: -10.125055313110352
    3. 'h' → logprob: -11.125055313110352
    4. '(
' → logprob: -14.875055313110352
    5. ' (' → logprob: -16.25005531311035
    6. '(w' → logprob: -16.37505531311035
    7. ' h' → logprob: -17.00005531311035
    8. '	h' → logprob: -17.00005531311035
    9. '((' → logprob: -17.12505531311035
    10. '<h' → logprob: -17.50005531311035

Token 74: ')]' (ID: 15710)
  Prédit: ']),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']),' → logprob: -0.0009390931227244437
    2. ')]' → logprob: -7.875938892364502
    3. '])' → logprob: -8.12593936920166
    4. ')],' → logprob: -9.00093936920166
    5. '])),' → logprob: -9.75093936920166
    6. ' ]' → logprob: -10.00093936920166
    7. '"]),' → logprob: -11.75093936920166
    8. '),' → logprob: -12.00093936920166
    9. ']),
' → logprob: -12.25093936920166
    10. ']' → logprob: -12.50093936920166

Token 75: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.32751405239105225
    2. '(),' → logprob: -2.077514171600342
    3. ',b' → logprob: -2.202514171600342
    4. '),' → logprob: -3.827514171600342
    5. ',h' → logprob: -4.952514171600342
    6. '(' → logprob: -5.577514171600342
    7. ',s' → logprob: -5.702514171600342
    8. ',np' → logprob: -6.327514171600342
    9. ',d' → logprob: -6.577514171600342
    10. ',n' → logprob: -7.077514171600342

Token 76: ' dtype' (ID: 29770)
  Prédit: 'dtype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dtype' → logprob: -0.0655263215303421
    2. ' dtype' → logprob: -3.190526247024536
    3. 'f' → logprob: -4.315526485443115
    4. ''' → logprob: -5.440526485443115
    5. ''<' → logprob: -7.065526485443115
    6. ''s' → logprob: -7.190526485443115
    7. 'count' → logprob: -7.565526485443115
    8. ''S' → logprob: -7.815526485443115
    9. '"' → logprob: -7.940526485443115
    10. ' f' → logprob: -8.190526008605957

Token 77: '=np' (ID: 40593)
  Prédit: '=''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '='' → logprob: -0.3515687882900238
    2. '=np' → logprob: -1.3515688180923462
    3. '=' → logprob: -3.6015686988830566
    4. '='<' → logprob: -4.976568698883057
    5. 'uint' → logprob: -6.976568698883057
    6. ''=' → logprob: -7.351568698883057
    7. '="' → logprob: -7.726568698883057
    8. '=b' → logprob: -8.101569175720215
    9. '=str' → logprob: -8.226569175720215
    10. ''' → logprob: -9.101569175720215

Token 78: '.int' (ID: 21499)
  Prédit: '.uint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.uint' → logprob: -0.00392095698043704
    2. 'uint' → logprob: -5.878921031951904
    3. '.byte' → logprob: -7.753921031951904
    4. '.int' → logprob: -8.128920555114746
    5. '.bool' → logprob: -8.628920555114746
    6. '.dtype' → logprob: -9.628920555114746
    7. '_uint' → logprob: -10.753920555114746
    8. '.' → logprob: -10.753920555114746
    9. 'S' → logprob: -11.128920555114746
    10. ''s' → logprob: -11.253920555114746

Token 79: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -1.1472419600977446e-06
    2. '32' → logprob: -13.875000953674316
    3. 'c' → logprob: -16.625001907348633
    4. '16' → logprob: -18.875001907348633
    5. '64' → logprob: -19.250001907348633
    6. 'p' → logprob: -19.875001907348633
    7. '1' → logprob: -20.500001907348633
    8. '08' → logprob: -20.500001907348633
    9. 'eight' → logprob: -20.500001907348633
    10. '_' → logprob: -21.000001907348633

Token 80: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08303295075893402
    2. ')-' → logprob: -2.5830328464508057
    3. '-' → logprob: -6.208033084869385
    4. ',' → logprob: -7.333033084869385
    5. '```' → logprob: -8.583032608032227
    6. '32' → logprob: -8.958032608032227
    7. '[' → logprob: -9.083032608032227
    8. ''-' → logprob: -9.208032608032227
    9. ')-(' → logprob: -9.208032608032227
    10. '-)' → logprob: -9.333032608032227

Token 81: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.15934179723262787
    2. '[' → logprob: -2.534341812133789
    3. ')' → logprob: -3.784341812133789
    4. '(' → logprob: -4.159341812133789
    5. ' -' → logprob: -5.784341812133789
    6. '45' → logprob: -5.909341812133789
    7. '```' → logprob: -6.159341812133789
    8. '[
' → logprob: -6.284341812133789
    9. '()' → logprob: -6.409341812133789
    10. '.' → logprob: -6.409341812133789

Token 82: ' ord' (ID: 6608)
  Prédit: '48'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '48' → logprob: -0.5006703734397888
    2. '32' → logprob: -1.2506704330444336
    3. ' ' → logprob: -2.8756704330444336
    4. '49' → logprob: -3.3756704330444336
    5. '64' → logprob: -4.375670433044434
    6. 'b' → logprob: -6.500670433044434
    7. 'ord' → logprob: -6.625670433044434
    8. '65' → logprob: -7.375670433044434
    9. '33' → logprob: -8.375670433044434
    10. ' b' → logprob: -8.875670433044434

Token 83: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.09229827672243118
    2. '(' → logprob: -2.8422982692718506
    3. '(b' → logprob: -4.59229850769043
    4. '("' → logprob: -4.59229850769043
    5. '('_' → logprob: -4.96729850769043
    6. 'b' → logprob: -6.96729850769043
    7. '('\' → logprob: -7.34229850769043
    8. '("("' → logprob: -7.96729850769043
    9. '("_' → logprob: -8.84229850769043
    10. '(a' → logprob: -9.21729850769043

Token 84: '0' (ID: 15)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5814698338508606
    2. '0' → logprob: -1.2064697742462158
    3. ''.' → logprob: -2.831469774246216
    4. 'a' → logprob: -3.456469774246216
    5. 'A' → logprob: -3.706469774246216
    6. ''' → logprob: -5.206470012664795
    7. 'B' → logprob: -5.706470012664795
    8. '1' → logprob: -5.956470012664795
    9. '.')' → logprob: -5.956470012664795
    10. 'W' → logprob: -6.081470012664795

Token 85: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03005732223391533
    2. '')' → logprob: -3.530057430267334
    3. ' )' → logprob: -8.655056953430176
    4. ''' → logprob: -9.780056953430176
    5. '")' → logprob: -10.530056953430176
    6. '0' → logprob: -11.155056953430176
    7. '[' → logprob: -11.655056953430176
    8. '`)' → logprob: -11.905056953430176
    9. ' ')' → logprob: -12.155056953430176
    10. ' ' → logprob: -12.530056953430176

Token 86: 's' (ID: 82)
  Prédit: '.reshape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.reshape' → logprob: -0.9088431000709534
    2. '.' → logprob: -1.2838430404663086
    3. 's' → logprob: -1.5338430404663086
    4. '(' → logprob: -2.5338430404663086
    5. '[' → logprob: -4.783843040466309
    6. 'reshape' → logprob: -5.408843040466309
    7. ' ' → logprob: -5.908843040466309
    8. '(
' → logprob: -6.408843040466309
    9. '\n' → logprob: -6.908843040466309
    10. ' .' → logprob: -7.158843040466309

Token 87: ' =' (ID: 314)
  Prédit: '.reshape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.reshape' → logprob: -0.00915360264480114
    2. '.' → logprob: -4.759153366088867
    3. 'reshape' → logprob: -8.009153366088867
    4. '.shape' → logprob: -9.009153366088867
    5. '<|end|>' → logprob: -10.009153366088867
    6. '.resize' → logprob: -11.134153366088867
    7. ' ' → logprob: -11.759153366088867
    8. '.s' → logprob: -12.759153366088867
    9. '[' → logprob: -12.759153366088867
    10. 's' → logprob: -12.884153366088867

Token 88: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.11322060227394104
    2. 's' → logprob: -2.238220691680908
    3. 'np' → logprob: -8.36322021484375
    4. ' np' → logprob: -8.73822021484375
    5. ' ' → logprob: -13.48822021484375
    6. '	s' → logprob: -14.61322021484375
    7. 'reshape' → logprob: -14.67572021484375
    8. '>' → logprob: -15.05072021484375
    9. ' ' → logprob: -15.61322021484375
    10. '.s' → logprob: -15.73822021484375

Token 89: '.reshape' (ID: 55028)
  Prédit: '.reshape'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.reshape' → logprob: -0.00016265720478259027
    2. '.' → logprob: -8.750163078308105
    3. ' .' → logprob: -13.250163078308105
    4. '.resize' → logprob: -13.500163078308105
    5. '.astype' → logprob: -14.375163078308105
    6. 'reshape' → logprob: -15.625163078308105
    7. '.res' → logprob: -16.00016212463379
    8. '.values' → logprob: -17.00016212463379
    9. '.flatten' → logprob: -17.75016212463379
    10. '.view' → logprob: -18.00016212463379

Token 90: '(h' (ID: 8120)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.3885548412799835
    2. '(h' → logprob: -1.1385548114776611
    3. '(' → logprob: -6.38855504989624
    4. '(
' → logprob: -15.138554573059082
    5. '(s' → logprob: -15.388554573059082
    6. 'h' → logprob: -15.513554573059082
    7. '(H' → logprob: -15.513554573059082
    8. ' (' → logprob: -15.638554573059082
    9. '/h' → logprob: -16.2635555267334
    10. '>((' → logprob: -16.2635555267334

Token 91: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020051265601068735
    2. ',w' → logprob: -6.252005100250244
    3. ' ,' → logprob: -9.502005577087402
    4. ',
' → logprob: -13.502005577087402
    5. 'w' → logprob: -14.752005577087402
    6. ',h' → logprob: -16.752004623413086
    7. ')' → logprob: -17.752004623413086
    8. ' w' → logprob: -18.127004623413086
    9. ',

' → logprob: -18.627004623413086
    10. ' ' → logprob: -18.877004623413086

Token 92: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.22541604936122894
    2. ' w' → logprob: -1.6004160642623901
    3. ')' → logprob: -13.35041618347168
    4. ' ' → logprob: -13.60041618347168
    5. '	w' → logprob: -15.85041618347168
    6. ',' → logprob: -16.72541618347168
    7. ' ' → logprob: -16.72541618347168
    8. '_w' → logprob: -17.22541618347168
    9. ',w' → logprob: -17.22541618347168
    10. '```' → logprob: -17.35041618347168

Token 93: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.961759259458631e-06
    2. ' )' → logprob: -13.875004768371582
    3. ',' → logprob: -14.000004768371582
    4. ')`' → logprob: -14.250004768371582
    5. '),' → logprob: -14.500004768371582
    6. ')
' → logprob: -14.500004768371582
    7. '))' → logprob: -14.625004768371582
    8. ',)' → logprob: -15.125004768371582
    9. ').' → logprob: -15.250004768371582
    10. ')#' → logprob: -16.0000057220459

Token 94: 'ans' (ID: 616)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.14062157273292542
    2. 'dist' → logprob: -3.6406216621398926
    3. '#' → logprob: -4.390621662139893
    4. 'answer' → logprob: -4.765621662139893
    5. 'def' → logprob: -4.890621662139893
    6. 'visited' → logprob: -5.015621662139893
    7. 'result' → logprob: -5.140621662139893
    8. 'd' → logprob: -5.140621662139893
    9. '
' → logprob: -5.140621662139893
    10. 'ans' → logprob: -5.265621662139893

Token 95: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026307035237550735
    2. '=' → logprob: -3.6513071060180664
    3. ' ' → logprob: -12.151307106018066
    4. 's' → logprob: -14.276307106018066
    5. '=int' → logprob: -15.651307106018066
    6. ' ' → logprob: -16.02630615234375
    7. 'import' → logprob: -16.15130615234375
    8. '_' → logprob: -16.40130615234375
    9. ',' → logprob: -16.65130615234375
    10. ' =
' → logprob: -17.02630615234375

Token 96: ' h' (ID: 312)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09049858152866364
    2. ' ' → logprob: -3.090498685836792
    3. 'h' → logprob: -4.215498447418213
    4. 'np' → logprob: -4.965498447418213
    5. 'k' → logprob: -5.840498447418213
    6. '-' → logprob: -6.215498447418213
    7. '10' → logprob: -6.340498447418213
    8. '1' → logprob: -6.340498447418213
    9. 'float' → logprob: -6.465498447418213
    10. 'w' → logprob: -6.465498447418213

Token 97: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10328151285648346
    2. '*' → logprob: -3.2282814979553223
    3. ' +' → logprob: -3.3532814979553223
    4. ' *' → logprob: -4.728281497955322
    5. 'for' → logprob: -5.603281497955322
    6. 'import' → logprob: -5.728281497955322
    7. 'def' → logprob: -6.228281497955322
    8. '-' → logprob: -6.353281497955322
    9. '*w' → logprob: -6.978281497955322
    10. 'w' → logprob: -6.978281497955322

Token 98: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.005862189922481775
    2. ' w' → logprob: -5.255862236022949
    3. '1' → logprob: -7.505862236022949
    4. 'k' → logprob: -10.13086223602295
    5. ' ' → logprob: -11.50586223602295
    6. '(w' → logprob: -12.00586223602295
    7. '(' → logprob: -12.38086223602295
    8. '+w' → logprob: -12.88086223602295
    9. '10' → logprob: -13.25586223602295
    10. 'h' → logprob: -13.25586223602295

Token 99: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.040519118309021
    2. '
' → logprob: -1.165519118309021
    3. '+' → logprob: -1.665519118309021
    4. '-' → logprob: -2.5405192375183105
    5. ' 
' → logprob: -3.4155192375183105
    6. ' for' → logprob: -4.2905192375183105
    7. '#' → logprob: -5.2905192375183105
    8. ' ' → logprob: -5.5405192375183105
    9. '*' → logprob: -6.2905192375183105
    10. '' → logprob: -6.7905192375183105

Token 100: 'powers' (ID: 172083)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1906389445066452
    2. ' for' → logprob: -2.565639019012451
    3. '
' → logprob: -2.690639019012451
    4. '#' → logprob: -5.065639019012451
    5. '+' → logprob: -5.065639019012451
    6. '-' → logprob: -5.065639019012451
    7. ')' → logprob: -6.190639019012451
    8. ' 
' → logprob: -6.440639019012451
    9. 'def' → logprob: -6.815639019012451
    10. ' ' → logprob: -7.190639019012451

Token 101: 'et' (ID: 292)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.380294531583786
    2. '_of' → logprob: -1.7552945613861084
    3. '2' → logprob: -2.3802945613861084
    4. '=' → logprob: -3.5052945613861084
    5. '_' → logprob: -4.380294322967529
    6. 'of' → logprob: -5.255294322967529
    7. 'Of' → logprob: -6.505294322967529
    8. '```' → logprob: -8.005294799804688
    9. '10' → logprob: -9.255294799804688
    10. ' ' → logprob: -9.255294799804688

Token 102: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010440931655466557
    2. '_' → logprob: -5.635440826416016
    3. '((' → logprob: -6.635440826416016
    4. '(range' → logprob: -6.635440826416016
    5. ' =' → logprob: -7.135440826416016
    6. '_range' → logprob: -7.260440826416016
    7. 's' → logprob: -7.260440826416016
    8. '_ranges' → logprob: -7.635440826416016
    9. 'range' → logprob: -8.885440826416016
    10. '("("' → logprob: -8.885440826416016

Token 103: ' (' (ID: 350)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.25186365842819214
    2. '[' → logprob: -2.126863718032837
    3. '(lambda' → logprob: -3.126863718032837
    4. 'lambda' → logprob: -3.251863718032837
    5. '(range' → logprob: -4.626863479614258
    6. '[]' → logprob: -5.751863479614258
    7. ' range' → logprob: -5.751863479614258
    8. '(' → logprob: -6.126863479614258
    9. 'list' → logprob: -7.001863479614258
    10. '[(' → logprob: -7.501863479614258

Token 104: 'bin' (ID: 11893)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6783785223960876
    2. '1' → logprob: -1.5533785820007324
    3. '(' → logprob: -1.6783785820007324
    4. '[' → logprob: -3.3033785820007324
    5. 'reduce' → logprob: -4.303378582000732
    6. 'list' → logprob: -4.803378582000732
    7. '[i' → logprob: -4.803378582000732
    8. '(range' → logprob: -4.928378582000732
    9. '[(' → logprob: -5.178378582000732
    10. 'np' → logprob: -5.553378582000732

Token 105: '(mask' (ID: 80748)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.10592807084321976
    2. '(' → logprob: -2.4809281826019287
    3. '(x' → logprob: -4.98092794418335
    4. '((' → logprob: -5.10592794418335
    5. '(k' → logprob: -6.35592794418335
    6. '(s' → logprob: -6.98092794418335
    7. '(pow' → logprob: -7.98092794418335
    8. '(n' → logprob: -8.230928421020508
    9. ')' → logprob: -8.480928421020508
    10. '(range' → logprob: -8.730928421020508

Token 106: ')[' (ID: 13637)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06485731899738312
    2. ' for' → logprob: -3.439857244491577
    3. 'for' → logprob: -3.689857244491577
    4. '(i' → logprob: -6.439857482910156
    5. ')' → logprob: -6.689857482910156
    6. '(mask' → logprob: -7.064857482910156
    7. '[' → logprob: -7.439857482910156
    8. '   ' → logprob: -8.439857482910156
    9. ')[' → logprob: -8.564857482910156
    10. '(range' → logprob: -9.064857482910156

Token 107: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01455632783472538
    2. 'for' → logprob: -4.514556407928467
    3. ' for' → logprob: -6.139556407928467
    4. '1' → logprob: -7.264556407928467
    5. ' ' → logprob: -7.764556407928467
    6. '[' → logprob: -8.514555931091309
    7. '   ' → logprob: -12.514555931091309
    8. '  ' → logprob: -12.889555931091309
    9. ')[' → logprob: -13.014555931091309
    10. '3' → logprob: -13.264555931091309

Token 108: ':].' (ID: 193388)
  Prédit: ':].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':].' → logprob: -0.0010803256882354617
    2. ':' → logprob: -7.126080513000488
    3. ':]' → logprob: -8.501080513000488
    4. '():' → logprob: -9.876080513000488
    5. ' :' → logprob: -11.501080513000488
    6. '().' → logprob: -12.126080513000488
    7. ':)' → logprob: -13.126080513000488
    8. ':],' → logprob: -13.626080513000488
    9. '::' → logprob: -14.626080513000488
    10. ':-' → logprob: -15.376080513000488

Token 109: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.00037192381569184363
    2. 'r' → logprob: -8.000371932983398
    3. '.z' → logprob: -10.250371932983398
    4. ' z' → logprob: -13.750371932983398
    5. ''z' → logprob: -17.8753719329834
    6. '```' → logprob: -18.8753719329834
    7. 'rstrip' → logprob: -19.1253719329834
    8. ',z' → logprob: -19.2503719329834
    9. ':z' → logprob: -19.2503719329834
    10. 'strip' → logprob: -19.5003719329834

Token 110: 'fill' (ID: 12413)
  Prédit: 'fill'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fill' → logprob: -0.00033784625702537596
    2. 'filled' → logprob: -8.000337600708008
    3. 'pad' → logprob: -13.625337600708008
    4. 'f' → logprob: -14.125337600708008
    5. 'p' → logprob: -15.750337600708008
    6. '_fill' → logprob: -16.500337600708008
    7. '-fill' → logprob: -16.500337600708008
    8. 'file' → logprob: -16.875337600708008
    9. '.fill' → logprob: -17.375337600708008
    10. 'full' → logprob: -17.625337600708008

Token 111: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.09748836606740952
    2. '(w' → logprob: -2.9724884033203125
    3. '(k' → logprob: -3.4724884033203125
    4. '(' → logprob: -4.5974884033203125
    5. '((' → logprob: -7.8474884033203125
    6. ')' → logprob: -10.347488403320312
    7. 'h' → logprob: -10.347488403320312
    8. 'w' → logprob: -10.347488403320312
    9. 'k' → logprob: -10.847488403320312
    10. '(max' → logprob: -10.972488403320312

Token 112: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2044985443353653
    2. '))' → logprob: -1.704498529434204
    3. ' )' → logprob: -6.704498767852783
    4. ')))' → logprob: -6.954498767852783
    5. '})' → logprob: -8.704498291015625
    6. ')[' → logprob: -8.829498291015625
    7. ' ))' → logprob: -8.954498291015625
    8. '])' → logprob: -9.204498291015625
    9. ').' → logprob: -9.704498291015625
    10. ')
' → logprob: -9.954498291015625

Token 113: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006411884678527713
    2. ' ' → logprob: -7.375641345977783
    3. '2' → logprob: -11.625640869140625
    4. '0' → logprob: -13.250640869140625
    5. ')' → logprob: -13.750640869140625
    6. '-' → logprob: -14.563140869140625
    7. '   ' → logprob: -14.813140869140625
    8. '3' → logprob: -15.250640869140625
    9. '(' → logprob: -15.625640869140625
    10. '```' → logprob: -15.688140869140625

Token 114: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -12.500003814697266
    3. '2' → logprob: -15.875003814697266
    4. '
' → logprob: -17.625003814697266
    5. ')' → logprob: -17.812503814697266
    6. '```' → logprob: -18.000003814697266
    7. '7' → logprob: -18.062503814697266
    8. '3' → logprob: -18.125003814697266
    9. '１' → logprob: -18.625003814697266
    10. '

' → logprob: -18.687503814697266

Token 115: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003282525110989809
    2. '))' → logprob: -6.75328254699707
    3. ' )' → logprob: -7.00328254699707
    4. ')[' → logprob: -7.50328254699707
    5. ')
' → logprob: -9.00328254699707
    6. 'for' → logprob: -9.12828254699707
    7. ',' → logprob: -9.50328254699707
    8. '")' → logprob: -9.87828254699707
    9. '),' → logprob: -9.87828254699707
    10. ' ' → logprob: -10.25328254699707

Token 116: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5686600804328918
    2. ' for' → logprob: -1.068660020828247
    3. ')' → logprob: -2.443660020828247
    4. '
' → logprob: -6.443660259246826
    5. '<|end|>' → logprob: -6.693660259246826
    6. '[::-' → logprob: -8.943659782409668
    7. ')
' → logprob: -9.193659782409668
    8. '<|end|>' → logprob: -9.443659782409668
    9. ',' → logprob: -9.693659782409668
    10. ' )' → logprob: -10.068659782409668

Token 117: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.09471773356199265
    2. 'range' → logprob: -2.4697177410125732
    3. ' mask' → logprob: -5.344717502593994
    4. ' range' → logprob: -6.969717502593994
    5. '_' → logprob: -10.594717979431152
    6. '_mask' → logprob: -11.219717979431152
    7. 'm' → logprob: -12.969717979431152
    8. '	mask' → logprob: -12.969717979431152
    9. 'masked' → logprob: -13.719717979431152
    10. 'r' → logprob: -14.094717979431152

Token 118: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004099296871572733
    2. 'in' → logprob: -5.504099369049072
    3. 'range' → logprob: -11.129098892211914
    4. ' ' → logprob: -12.629098892211914
    5. ' range' → logprob: -13.004098892211914
    6. '  ' → logprob: -15.004098892211914
    7. ')' → logprob: -15.629098892211914
    8. '   ' → logprob: -16.754098892211914
    9. 's' → logprob: -17.129098892211914
    10. ' ' → logprob: -18.004098892211914

Token 119: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.25192907452583313
    2. ' range' → logprob: -1.5019290447235107
    3. '(range' → logprob: -17.376928329467773
    4. '	range' → logprob: -17.751928329467773
    5. ' ' → logprob: -19.751928329467773
    6. ')' → logprob: -20.501928329467773
    7. '.range' → logprob: -21.001928329467773
    8. 'Range' → logprob: -21.376928329467773
    9. ' xrange' → logprob: -21.376928329467773
    10. '_range' → logprob: -21.626928329467773

Token 120: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008623674511909485
    2. '1' → logprob: -4.7586236000061035
    3. '2' → logprob: -12.383624076843262
    4. '((' → logprob: -12.508624076843262
    5. '   ' → logprob: -14.758624076843262
    6. ' ' → logprob: -15.258624076843262
    7. '(
' → logprob: -15.633624076843262
    8. ' (' → logprob: -15.758624076843262
    9. '(h' → logprob: -15.758624076843262
    10. '(pow' → logprob: -15.883624076843262

Token 121: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02404031716287136
    2. '2' → logprob: -3.7740402221679688
    3. '(' → logprob: -7.149040222167969
    4. ' ' → logprob: -12.649040222167969
    5. '(h' → logprob: -13.399040222167969
    6. 'h' → logprob: -13.524040222167969
    7. '
' → logprob: -13.649040222167969
    8. '   ' → logprob: -14.774040222167969
    9. 'pow' → logprob: -15.024040222167969
    10. '```' → logprob: -15.274040222167969

Token 122: ' <<' (ID: 2256)
  Prédit: ' <<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<' → logprob: -0.22162675857543945
    2. '<<' → logprob: -1.7216267585754395
    3. '<<(' → logprob: -3.9716267585754395
    4. ',' → logprob: -7.0966267585754395
    5. '1' → logprob: -8.846626281738281
    6. '<' → logprob: -9.721626281738281
    7. ' ' → logprob: -10.096626281738281
    8. '2' → logprob: -10.596626281738281
    9. ' <' → logprob: -10.971626281738281
    10. ' <<
' → logprob: -11.221626281738281

Token 123: ' (' (ID: 350)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.007670864462852478
    2. 'h' → logprob: -4.882670879364014
    3. ' (' → logprob: -10.007670402526855
    4. '(' → logprob: -11.382670402526855
    5. ' h' → logprob: -12.132670402526855
    6. '
' → logprob: -14.007670402526855
    7. '[h' → logprob: -14.632670402526855
    8. '<h' → logprob: -14.632670402526855
    9. '(
' → logprob: -15.257670402526855
    10. '	h' → logprob: -15.507670402526855

Token 124: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.009835309349000454
    2. '(h' → logprob: -4.634835243225098
    3. ' h' → logprob: -9.509835243225098
    4. ' (' → logprob: -12.634835243225098
    5. '(' → logprob: -14.384835243225098
    6. '<h' → logprob: -14.509835243225098
    7. '	h' → logprob: -15.259835243225098
    8. '   ' → logprob: -15.634835243225098
    9. '
' → logprob: -15.884835243225098
    10. '[h' → logprob: -16.134836196899414

Token 125: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.014186308719217777
    2. ' -' → logprob: -4.264186382293701
    3. '1' → logprob: -11.014185905456543
    4. ' ' → logprob: -12.264185905456543
    5. ')' → logprob: -14.764185905456543
    6. '```' → logprob: -15.014185905456543
    7. '
' → logprob: -15.389185905456543
    8. '2' → logprob: -15.514185905456543
    9. '–' → logprob: -16.01418685913086
    10. '<|end|>' → logprob: -16.26418685913086

Token 126: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00019042797794099897
    2. ' ' → logprob: -8.625190734863281
    3. '```' → logprob: -12.250190734863281
    4. '<|end|>' → logprob: -14.250190734863281
    5. '-' → logprob: -14.312690734863281
    6. '
' → logprob: -14.375190734863281
    7. ')' → logprob: -14.562690734863281
    8. '2' → logprob: -14.625190734863281
    9. '

' → logprob: -14.750190734863281
    10. '<|end|>' → logprob: -14.875190734863281

Token 127: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.750003814697266
    3. '(' → logprob: -15.000003814697266
    4. '```' → logprob: -15.000003814697266
    5. '-' → logprob: -15.375003814697266
    6. '(h' → logprob: -15.750003814697266
    7. 'h' → logprob: -16.000003814697266
    8. ')' → logprob: -17.125003814697266
    9. '

' → logprob: -17.125003814697266
    10. '
' → logprob: -17.187503814697266

Token 128: ')))

' (ID: 46526)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.004660453647375107
    2. ')' → logprob: -5.504660606384277
    3. '):' → logprob: -8.129660606384277
    4. ')):' → logprob: -8.379660606384277
    5. ')))' → logprob: -10.004660606384277
    6. ' ))' → logprob: -12.254660606384277
    7. '),' → logprob: -13.254660606384277
    8. ')),' → logprob: -14.129660606384277
    9. '()))' → logprob: -14.129660606384277
    10. '))
' → logprob: -14.254660606384277

Token 129: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.676981345459353e-06
    2. ' for' → logprob: -12.125005722045898
    3. ')' → logprob: -15.875005722045898
    4. '
' → logprob: -17.1250057220459
    5. 'def' → logprob: -17.6250057220459
    6. ':' → logprob: -18.6250057220459
    7. '```' → logprob: -19.7500057220459
    8. 'For' → logprob: -20.3750057220459
    9. '    
' → logprob: -20.5000057220459
    10. '	for' → logprob: -20.7500057220459

Token 130: ' mask' (ID: 10910)
  Prédit: ' mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mask' → logprob: -0.2894645631313324
    2. 'mask' → logprob: -1.5394645929336548
    3. ' cut' → logprob: -4.789464473724365
    4. 'cut' → logprob: -5.539464473724365
    5. 'h' → logprob: -5.789464473724365
    6. ' masks' → logprob: -5.914464473724365
    7. ' h' → logprob: -6.039464473724365
    8. ' cuts' → logprob: -6.039464473724365
    9. ' row' → logprob: -6.164464473724365
    10. 'row' → logprob: -6.414464473724365

Token 131: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012595707550644875
    2. 'in' → logprob: -4.3875956535339355
    3. ' ' → logprob: -9.762596130371094
    4. ',' → logprob: -11.012596130371094
    5. 's' → logprob: -12.512596130371094
    6. ' ' → logprob: -13.512596130371094
    7. '1' → logprob: -14.012596130371094
    8. ':' → logprob: -14.512596130371094
    9. ' ,' → logprob: -14.512596130371094
    10. 'In' → logprob: -14.637596130371094

Token 132: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5394725799560547
    2. 'range' → logprob: -0.9144725799560547
    3. '(' → logprob: -4.914472579956055
    4. 'powers' → logprob: -5.414472579956055
    5. ' powers' → logprob: -6.164472579956055
    6. ' (' → logprob: -6.664472579956055
    7. '(range' → logprob: -7.414472579956055
    8. ' ' → logprob: -8.414472579956055
    9. '1' → logprob: -8.664472579956055
    10. '   ' → logprob: -11.039472579956055

Token 133: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.339776832144707e-05
    2. '1' → logprob: -9.875082969665527
    3. '((' → logprob: -10.500082969665527
    4. ' (' → logprob: -12.375082969665527
    5. ' ' → logprob: -16.125083923339844
    6. '(
' → logprob: -17.875083923339844
    7. '```' → logprob: -17.875083923339844
    8. '   ' → logprob: -18.500083923339844
    9. '(len' → logprob: -18.500083923339844
    10. '2' → logprob: -19.000083923339844

Token 134: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9325881600379944
    2. '1' → logprob: -0.9325881600379944
    3. 'h' → logprob: -1.8075881004333496
    4. '(h' → logprob: -3.0575881004333496
    5. ' (' → logprob: -6.68258810043335
    6. ' ' → logprob: -7.80758810043335
    7. ' h' → logprob: -8.682588577270508
    8. '0' → logprob: -10.557588577270508
    9. ')' → logprob: -11.932588577270508
    10. '2' → logprob: -12.057588577270508

Token 135: ' <<' (ID: 2256)
  Prédit: ' <<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<' → logprob: -0.019116317853331566
    2. '<<' → logprob: -4.019116401672363
    3. '<<(' → logprob: -7.769116401672363
    4. ',' → logprob: -8.519116401672363
    5. '(' → logprob: -8.894116401672363
    6. ' (' → logprob: -9.019116401672363
    7. ' ' → logprob: -10.144116401672363
    8. '   ' → logprob: -11.019116401672363
    9. '(h' → logprob: -11.644116401672363
    10. ')' → logprob: -12.144116401672363

Token 136: ' (' (ID: 350)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.001573544810526073
    2. ' (' → logprob: -6.50157356262207
    3. '(' → logprob: -9.62657356262207
    4. 'h' → logprob: -12.75157356262207
    5. '(w' → logprob: -14.00157356262207
    6. '(H' → logprob: -14.12657356262207
    7. ' h' → logprob: -14.75157356262207
    8. '((' → logprob: -15.75157356262207
    9. ' ' → logprob: -17.00157356262207
    10. '[h' → logprob: -17.12657356262207

Token 137: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.4291156828403473
    2. '(h' → logprob: -1.054115653038025
    3. ' (' → logprob: -8.679115295410156
    4. ' h' → logprob: -8.804115295410156
    5. '(' → logprob: -9.679115295410156
    6. '   ' → logprob: -12.179115295410156
    7. '	h' → logprob: -12.804115295410156
    8. '<h' → logprob: -12.804115295410156
    9. '[h' → logprob: -12.804115295410156
    10. ')' → logprob: -13.179115295410156

Token 138: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02124960720539093
    2. ' -' → logprob: -3.896249532699585
    3. '1' → logprob: -7.521249771118164
    4. ')' → logprob: -9.396249771118164
    5. '   ' → logprob: -10.521249771118164
    6. ' ' → logprob: -10.771249771118164
    7. ')-' → logprob: -11.396249771118164
    8. '))' → logprob: -12.146249771118164
    9. '
' → logprob: -12.896249771118164
    10. '       ' → logprob: -13.021249771118164

Token 139: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002084277366520837
    2. ' ' → logprob: -8.500208854675293
    3. '```' → logprob: -13.812708854675293
    4. ')' → logprob: -14.250208854675293
    5. '
' → logprob: -14.375208854675293
    6. '-' → logprob: -14.375208854675293
    7. '   ' → logprob: -14.812708854675293
    8. '

' → logprob: -15.312708854675293
    9. '2' → logprob: -15.375208854675293
    10. 'h' → logprob: -16.062707901000977

Token 140: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2233183042553719e-05
    2. ' ' → logprob: -11.375012397766113
    3. '```' → logprob: -15.375012397766113
    4. '-' → logprob: -15.500012397766113
    5. '   ' → logprob: -16.812511444091797
    6. ')' → logprob: -17.125011444091797
    7. '(' → logprob: -17.187511444091797
    8. '
' → logprob: -17.250011444091797
    9. '

' → logprob: -17.875011444091797
    10. '2' → logprob: -18.250011444091797

Token 141: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.06368901580572128
    2. '):' → logprob: -2.9386889934539795
    3. '))' → logprob: -5.188689231872559
    4. ')):
' → logprob: -6.313689231872559
    5. ')' → logprob: -6.813689231872559
    6. ' ):' → logprob: -9.188689231872559
    7. ' ))' → logprob: -9.438689231872559
    8. '):
' → logprob: -9.813689231872559
    9. ')):
' → logprob: -10.438689231872559
    10. ' ' → logprob: -12.438689231872559

Token 142: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004806041717529297
    2. ' parts' → logprob: -6.129806041717529
    3. ' cut' → logprob: -7.754806041717529
    4. ' cuts' → logprob: -8.004806518554688
    5. ' groups' → logprob: -8.379806518554688
    6. 'cut' → logprob: -8.629806518554688
    7. '   ' → logprob: -8.879806518554688
    8. ' segments' → logprob: -9.129806518554688
    9. 'groups' → logprob: -9.254806518554688
    10. '    
' → logprob: -9.254806518554688

Token 143: ' cuts' (ID: 29505)
  Prédit: 'groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'groups' → logprob: -0.5037671327590942
    2. 'group' → logprob: -1.5037671327590942
    3. 'cut' → logprob: -2.6287670135498047
    4. '   ' → logprob: -3.2537670135498047
    5. 'rows' → logprob: -4.003767013549805
    6. 'cuts' (adapté à ' cuts') → logprob: -5.253767013549805
    7. 'block' → logprob: -5.503767013549805
    8. ' groups' → logprob: -5.753767013549805
    9. 'split' → logprob: -5.753767013549805
    10. 'g' → logprob: -5.878767013549805

Token 144: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012550740502774715
    2. '=' → logprob: -4.3875508308410645
    3. ' ' → logprob: -11.012550354003906
    4. '=[]' → logprob: -12.262550354003906
    5. 's' → logprob: -12.387550354003906
    6. ' =[' → logprob: -12.387550354003906
    7. '   ' → logprob: -13.012550354003906
    8. ',' → logprob: -13.137550354003906
    9. '=[' → logprob: -13.387550354003906
    10. '    ' → logprob: -13.887550354003906

Token 145: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.010220051743090153
    2. '[]' → logprob: -5.010220050811768
    3. '[]
' → logprob: -7.010220050811768
    4. '[s' → logprob: -7.135220050811768
    5. 'bin' → logprob: -7.885220050811768
    6. '[(' → logprob: -8.010220527648926
    7. ' [' → logprob: -8.260220527648926
    8. '[str' → logprob: -8.635220527648926
    9. '[m' → logprob: -9.135220527648926
    10. '[int' → logprob: -9.135220527648926

Token 146: 'i' (ID: 72)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011236425780225545
    2. '-' → logprob: -9.125112533569336
    3. ' ' → logprob: -12.750112533569336
    4. ' -' → logprob: -15.750112533569336
    5. ')' → logprob: -16.000112533569336
    6. '   ' → logprob: -16.250112533569336
    7. 'i' → logprob: -16.750112533569336
    8. '[' → logprob: -17.375112533569336
    9. '  ' → logprob: -17.875112533569336
    10. ']' → logprob: -18.125112533569336

Token 147: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.46008190512657166
    2. 'for' → logprob: -1.085081934928894
    3. '+' → logprob: -3.5850818157196045
    4. ' +' → logprob: -6.335082054138184
    5. '=' → logprob: -7.335082054138184
    6. '0' → logprob: -7.960082054138184
    7. ']' → logprob: -8.585082054138184
    8. '-' → logprob: -9.585082054138184
    9. ' ' → logprob: -9.835082054138184
    10. '1' → logprob: -10.835082054138184

Token 148: ' i' (ID: 575)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.38787466287612915
    2. ' range' → logprob: -1.1378746032714844
    3. 'i' → logprob: -7.012874603271484
    4. ' in' → logprob: -9.887874603271484
    5. ' i' → logprob: -10.262874603271484
    6. '(range' → logprob: -11.637874603271484
    7. 'in' → logprob: -12.137874603271484
    8. ' ' → logprob: -13.512874603271484
    9. '	range' → logprob: -13.887874603271484
    10. ',' → logprob: -14.762874603271484

Token 149: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.33072954416275024
    2. ' in' → logprob: -2.0807294845581055
    3. 'in' → logprob: -2.2057294845581055
    4. ' range' → logprob: -3.0807294845581055
    5. '(range' → logprob: -7.5807294845581055
    6. ',' → logprob: -8.830729484558105
    7. ' ' → logprob: -12.705729484558105
    8. '	range' → logprob: -12.955729484558105
    9. '
' → logprob: -13.705729484558105
    10. '(' → logprob: -13.830729484558105

Token 150: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2519313097000122
    2. 'range' → logprob: -1.5019313097000122
    3. ' ' → logprob: -13.626931190490723
    4. '	range' → logprob: -14.751931190490723
    5. '(range' → logprob: -15.126931190490723
    6. '
' → logprob: -16.50193214416504
    7. '   ' → logprob: -16.62693214416504
    8. '  ' → logprob: -17.00193214416504
    9. '    ' → logprob: -18.62693214416504
    10. '

' → logprob: -18.87693214416504

Token 151: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.020576810464262962
    2. '(' → logprob: -3.8955767154693604
    3. '1' → logprob: -10.645576477050781
    4. 'h' → logprob: -11.520576477050781
    5. '(len' → logprob: -14.145576477050781
    6. '((' → logprob: -16.14557647705078
    7. ' (' → logprob: -16.14557647705078
    8. '   ' → logprob: -16.64557647705078
    9. '<h' → logprob: -17.14557647705078
    10. '[h' → logprob: -17.39557647705078

Token 152: ' -' (ID: 533)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.23360231518745422
    2. ')' → logprob: -2.233602285385132
    3. '-' → logprob: -2.733602285385132
    4. ' -' → logprob: -3.483602285385132
    5. 'if' → logprob: -6.608602523803711
    6. ' if' → logprob: -6.608602523803711
    7. ')][' → logprob: -6.983602523803711
    8. ')]' → logprob: -7.108602523803711
    9. ' ' → logprob: -7.233602523803711
    10. '   ' → logprob: -9.233602523803711

Token 153: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003537582466378808
    2. '-' → logprob: -6.128537654876709
    3. ' ' → logprob: -6.628537654876709
    4. ' -' → logprob: -11.37853717803955
    5. ')' → logprob: -11.62853717803955
    6. '   ' → logprob: -12.75353717803955
    7. '```' → logprob: -13.50353717803955
    8. '
' → logprob: -13.87853717803955
    9. '2' → logprob: -13.87853717803955
    10. '  ' → logprob: -14.94103717803955

Token 154: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004832233826164156
    2. '-' → logprob: -7.87548303604126
    3. ' ' → logprob: -9.250483512878418
    4. ')' → logprob: -13.125483512878418
    5. '```' → logprob: -13.750483512878418
    6. '   ' → logprob: -13.875483512878418
    7. ' -' → logprob: -13.875483512878418
    8. 'h' → logprob: -15.125483512878418
    9. '  ' → logprob: -15.812983512878418
    10. '(' → logprob: -15.937983512878418

Token 155: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018327576981391758
    2. ' if' → logprob: -9.50018310546875
    3. ' )' → logprob: -9.62518310546875
    4. 'if' → logprob: -10.25018310546875
    5. '   ' → logprob: -12.37518310546875
    6. ' ' → logprob: -13.62518310546875
    7. '）' → logprob: -15.12518310546875
    8. '  ' → logprob: -15.50018310546875
    9. '")' → logprob: -15.50018310546875
    10. '1' → logprob: -16.00018310546875

Token 156: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2519998848438263
    2. 'if' → logprob: -1.501999855041504
    3. '   ' → logprob: -10.001999855041504
    4. ' ' → logprob: -11.001999855041504
    5. '	if' → logprob: -12.626999855041504
    6. '    ' → logprob: -13.501999855041504
    7. '       ' → logprob: -13.751999855041504
    8. '  ' → logprob: -13.751999855041504
    9. '1' → logprob: -14.126999855041504
    10. '0' → logprob: -14.876999855041504

Token 157: ' mask' (ID: 10910)
  Prédit: '(mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mask' → logprob: -0.22722455859184265
    2. ' mask' → logprob: -2.477224588394165
    3. 'mask' → logprob: -2.602224588394165
    4. ' (' → logprob: -3.102224588394165
    5. '((' → logprob: -9.102224349975586
    6. '(' → logprob: -10.477224349975586
    7. '(m' → logprob: -10.852224349975586
    8. ' ((' → logprob: -10.852224349975586
    9. '   ' → logprob: -11.352224349975586
    10. ' ' → logprob: -11.977224349975586

Token 158: ' >>' (ID: 6832)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.31512948870658875
    2. '&' → logprob: -1.3151295185089111
    3. '&i' → logprob: -6.690129280090332
    4. '&amp' → logprob: -8.440129280090332
    5. '&(' → logprob: -8.565129280090332
    6. '>>' → logprob: -9.690129280090332
    7. '&
' → logprob: -10.065129280090332
    8. '&gt' → logprob: -10.940129280090332
    9. '&p' → logprob: -10.940129280090332
    10. '&r' → logprob: -11.065129280090332

Token 159: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0005530327325686812
    2. ' i' → logprob: -7.500553131103516
    3. '	i' → logprob: -18.000553131103516
    4. '   ' → logprob: -18.125553131103516
    5. ' ' → logprob: -18.750553131103516
    6. '(i' → logprob: -18.875553131103516
    7. '```' → logprob: -20.000553131103516
    8. ')i' → logprob: -20.750553131103516
    9. '1' → logprob: -21.000553131103516
    10. '  ' → logprob: -21.375553131103516

Token 160: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.06273646652698517
    2. ' &' → logprob: -2.8127365112304688
    3. '&amp' → logprob: -7.312736511230469
    4. ')&' → logprob: -10.187736511230469
    5. '&i' → logprob: -10.187736511230469
    6. '1' → logprob: -11.062736511230469
    7. '&
' → logprob: -13.312736511230469
    8. '＆' → logprob: -13.437736511230469
    9. ')' → logprob: -13.937736511230469
    10. '&a' → logprob: -13.937736511230469

Token 161: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015023599844425917
    2. ' ' → logprob: -6.501502513885498
    3. '   ' → logprob: -18.876502990722656
    4. '  ' → logprob: -20.126502990722656
    5. '```' → logprob: -20.126502990722656
    6. '１' → logprob: -20.251502990722656
    7. ' ' → logprob: -21.501502990722656
    8. '۱' → logprob: -21.876502990722656
    9. '01' → logprob: -22.064002990722656
    10. '
' → logprob: -22.126502990722656

Token 162: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -18.12502670288086
    4. '{' → logprob: -18.37502670288086
    5. '' → logprob: -18.50002670288086
    6. '```' → logprob: -18.75002670288086
    7. '11' → logprob: -19.62502670288086
    8. '１' → logprob: -19.75002670288086
    9. '01' → logprob: -19.87502670288086
    10. '0' → logprob: -19.87502670288086

Token 163: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0015300977975130081
    2. ' ]' → logprob: -6.501530170440674
    3. '()]' → logprob: -10.876529693603516
    4. ']
' → logprob: -12.376529693603516
    5. '   ' → logprob: -13.251529693603516
    6. ')]' → logprob: -14.001529693603516
    7. ' ' → logprob: -14.626529693603516
    8. '(' → logprob: -15.001529693603516
    9. ')' → logprob: -15.126529693603516
    10. ']

' → logprob: -15.626529693603516

Token 164: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05274850130081177
    2. '    
' → logprob: -3.427748441696167
    3. '
' → logprob: -4.927748680114746
    4. 'groups' → logprob: -6.177748680114746
    5. 'segments' → logprob: -6.552748680114746
    6. ' parts' → logprob: -6.802748680114746
    7. 'current' → logprob: -6.927748680114746
    8. ' groups' → logprob: -6.927748680114746
    9. ',' → logprob: -6.927748680114746
    10. ' 
' → logprob: -7.927748680114746

Token 165: ' groups' (ID: 8896)
  Prédit: 'groups'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'groups' (adapté à ' groups') → logprob: -0.4820782244205475
    2. 'group' → logprob: -1.732078194618225
    3. 'parts' → logprob: -3.2320783138275146
    4. ' groups' → logprob: -3.2320783138275146
    5. 'segments' → logprob: -3.7320783138275146
    6. 'blocks' → logprob: -4.4820780754089355
    7. 'block' → logprob: -4.4820780754089355
    8. ' group' → logprob: -4.4820780754089355
    9. ' parts' → logprob: -5.2320780754089355
    10. '   ' → logprob: -5.2320780754089355

Token 166: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12695467472076416
    2. '=' → logprob: -2.1269545555114746
    3. '=[' → logprob: -11.376955032348633
    4. ',' → logprob: -11.626955032348633
    5. '=[]' → logprob: -13.126955032348633
    6. ' =[' → logprob: -13.126955032348633
    7. ' ' → logprob: -14.501955032348633
    8. '=[[' → logprob: -15.501955032348633
    9. '=[]
' → logprob: -15.501955032348633
    10. '=np' → logprob: -15.501955032348633

Token 167: ' np' (ID: 5374)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.028444506227970123
    2. ' [' → logprob: -4.653444290161133
    3. '[np' → logprob: -5.028444290161133
    4. 'np' → logprob: -5.528444290161133
    5. '[]' → logprob: -5.778444290161133
    6. '[]
' → logprob: -5.903444290161133
    7. '[len' → logprob: -6.903444290161133
    8. ' np' → logprob: -7.653444290161133
    9. '[h' → logprob: -8.153444290161133
    10. '[-' → logprob: -9.653444290161133

Token 168: '.split' (ID: 10347)
  Prédit: 'zeros'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'zeros' → logprob: -1.0155658721923828
    2. '.zeros' → logprob: -1.0155658721923828
    3. 'array' → logprob: -1.6405658721923828
    4. 'empty' → logprob: -3.015565872192383
    5. 'ones' → logprob: -3.890565872192383
    6. '.ones' → logprob: -4.640565872192383
    7. ' zeros' → logprob: -7.515565872192383
    8. '.empty' → logprob: -7.640565872192383
    9. 'c' → logprob: -7.765565872192383
    10. 'split' → logprob: -8.015565872192383

Token 169: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -9.968312951968983e-06
    2. 's' → logprob: -11.875009536743164
    3. '(' → logprob: -12.875009536743164
    4. ' (' → logprob: -15.375009536743164
    5. '(
' → logprob: -16.625009536743164
    6. ' ' → logprob: -17.750009536743164
    7. ' s' → logprob: -17.750009536743164
    8. ')' → logprob: -18.375009536743164
    9. '<|end|>' → logprob: -18.375009536743164
    10. '```' → logprob: -18.500009536743164

Token 170: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0415797084569931
    2. ',[' → logprob: -3.4165797233581543
    3. ',c' → logprob: -5.041579723358154
    4. ',np' → logprob: -7.541579723358154
    5. '[' → logprob: -8.666579246520996
    6. ' ,' → logprob: -8.666579246520996
    7. ',sum' → logprob: -9.541579246520996
    8. ',
' → logprob: -9.666579246520996
    9. 'c' → logprob: -10.041579246520996
    10. ',(' → logprob: -10.041579246520996

Token 171: ' [' (ID: 723)
  Prédit: 'cuts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cuts' → logprob: -0.005140069406479597
    2. ' cuts' → logprob: -5.75514030456543
    3. '[c' → logprob: -7.00514030456543
    4. 'cut' → logprob: -7.38014030456543
    5. '[' → logprob: -7.88014030456543
    6. '   ' → logprob: -10.88014030456543
    7. ' [' → logprob: -11.50514030456543
    8. '(c' → logprob: -12.50514030456543
    9. '[-' → logprob: -12.63014030456543
    10. 'c' → logprob: -12.88014030456543

Token 172: 'c' (ID: 66)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06137871742248535
    2. 'c' → logprob: -3.5613787174224854
    3. 'cut' → logprob: -4.061378479003906
    4. 'x' → logprob: -4.436378479003906
    5. 'idx' → logprob: -7.186378479003906
    6. '*' → logprob: -7.811378479003906
    7. '*i' → logprob: -8.311378479003906
    8. '(i' → logprob: -8.686378479003906
    9. 'ci' → logprob: -9.186378479003906
    10. 'pos' → logprob: -9.311378479003906

Token 173: ' +' (ID: 659)
  Prédit: 'ut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ut' → logprob: -0.015201344154775143
    2. '+' → logprob: -4.890201568603516
    3. 'uts' → logprob: -5.390201568603516
    4. ' +' → logprob: -6.515201568603516
    5. ' for' → logprob: -7.765201568603516
    6. 't' → logprob: -7.890201568603516
    7. 'u' → logprob: -8.390201568603516
    8. 'i' → logprob: -8.890201568603516
    9. 'x' → logprob: -10.140201568603516
    10. 'ts' → logprob: -10.140201568603516

Token 174: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5213274309644476e-05
    2. ' ' → logprob: -11.125015258789062
    3. '+' → logprob: -15.500015258789062
    4. 'for' → logprob: -16.250015258789062
    5. '   ' → logprob: -18.750015258789062
    6. ' for' → logprob: -18.750015258789062
    7. ' +' → logprob: -19.625015258789062
    8. '
' → logprob: -20.375015258789062
    9. '  ' → logprob: -20.375015258789062
    10. '```' → logprob: -20.625015258789062

Token 175: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '   ' → logprob: -17.875009536743164
    4. '+' → logprob: -18.625009536743164
    5. '  ' → logprob: -18.625009536743164
    6. 'for' → logprob: -18.750009536743164
    7. '
' → logprob: -19.500009536743164
    8. '```' → logprob: -19.625009536743164
    9. '0' → logprob: -19.875009536743164
    10. '    ' → logprob: -21.000009536743164

Token 176: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3868820369243622
    2. 'for' → logprob: -1.1368820667266846
    3. '   ' → logprob: -12.011881828308105
    4. ' ' → logprob: -12.636881828308105
    5. '	for' → logprob: -13.636881828308105
    6. '  ' → logprob: -15.261881828308105
    7. '    ' → logprob: -16.386882781982422
    8. ')' → logprob: -16.761882781982422
    9. '```' → logprob: -17.886882781982422
    10. '          ' → logprob: -18.011882781982422

Token 177: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.02980569191277027
    2. ' c' → logprob: -3.5298056602478027
    3. ' cut' → logprob: -10.029806137084961
    4. 'cut' → logprob: -11.654806137084961
    5. ' in' → logprob: -13.904806137084961
    6. 'cuts' → logprob: -14.154806137084961
    7. ' cuts' → logprob: -14.404806137084961
    8. ' ' → logprob: -16.02980613708496
    9. '	c' → logprob: -16.15480613708496
    10. '
' → logprob: -17.90480613708496

Token 178: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16024108231067657
    2. 'in' → logprob: -1.9102411270141602
    3. 'cut' → logprob: -12.03524112701416
    4. 'c' → logprob: -12.16024112701416
    5. 'cuts' → logprob: -12.91024112701416
    6. ' ' → logprob: -12.91024112701416
    7. ' cut' → logprob: -15.28524112701416
    8. '
' → logprob: -15.78524112701416
    9. ' cuts' → logprob: -16.035240173339844
    10. 's' → logprob: -16.410240173339844

Token 179: ' cuts' (ID: 29505)
  Prédit: 'cuts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cuts' → logprob: -0.0017138548428192735
    2. ' cuts' → logprob: -6.376713752746582
    3. 'cut' → logprob: -11.376713752746582
    4. 'Cuts' → logprob: -16.5017147064209
    5. '
' → logprob: -16.6267147064209
    6. ' ' → logprob: -17.1267147064209
    7. 'c' → logprob: -17.1267147064209
    8. '   ' → logprob: -17.6267147064209
    9. 'cu' → logprob: -17.7517147064209
    10. 'cups' → logprob: -18.3767147064209

Token 180: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.1022121012210846
    2. '],' → logprob: -2.3522121906280518
    3. '])
' → logprob: -6.227211952209473
    4. ' ])' → logprob: -11.227211952209473
    5. '])

' → logprob: -12.352211952209473
    6. '])
' → logprob: -12.602211952209473
    7. ']' → logprob: -13.477211952209473
    8. ' ],' → logprob: -13.727211952209473
    9. '])[' → logprob: -13.727211952209473
    10. '),' → logprob: -14.227211952209473

Token 181: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021215297281742096
    2. ',' → logprob: -5.771215438842773
    3. ' col' → logprob: -6.271215438842773
    4. 'current' → logprob: -6.271215438842773
    5. ' current' → logprob: -6.521215438842773
    6. '    
' → logprob: -6.646215438842773
    7. ' for' → logprob: -6.646215438842773
    8. 'col' → logprob: -6.771215438842773
    9. ' acc' → logprob: -7.146215438842773
    10. 'sum' → logprob: -7.146215438842773

Token 182: ' group' (ID: 3566)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.7903574705123901
    2. 'current' → logprob: -1.9153574705123901
    3. 'acc' → logprob: -2.4153575897216797
    4. 'sum' → logprob: -2.6653575897216797
    5. 'total' → logprob: -2.7903575897216797
    6. 'group' (adapté à ' group') → logprob: -2.7903575897216797
    7. 'cur' → logprob: -3.0403575897216797
    8. 'valid' → logprob: -3.0403575897216797
    9. 'cnt' → logprob: -3.0403575897216797
    10. '   ' → logprob: -3.2903575897216797

Token 183: '_sum' (ID: 29859)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.18584199249744415
    2. 's' → logprob: -1.9358420372009277
    3. '_sizes' → logprob: -4.310842037200928
    4. '_sum' → logprob: -4.685842037200928
    5. '_counts' → logprob: -6.935842037200928
    6. 'sum' → logprob: -7.810842037200928
    7. ' =' → logprob: -8.56084156036377
    8. 'ed' → logprob: -8.56084156036377
    9. '_ids' → logprob: -9.06084156036377
    10. '_cnt' → logprob: -9.18584156036377

Token 184: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5604271292686462
    2. '=' → logprob: -0.9354271292686462
    3. ' =' → logprob: -3.310427188873291
    4. '=np' → logprob: -9.810426712036133
    5. '=s' → logprob: -10.060426712036133
    6. ' s' → logprob: -11.185426712036133
    7. ' ' → logprob: -14.810426712036133
    8. '=[]' → logprob: -15.060426712036133
    9. '=
' → logprob: -15.060426712036133
    10. ')' → logprob: -15.185426712036133

Token 185: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.17660653591156006
    2. '[' → logprob: -2.9266066551208496
    3. ' np' → logprob: -3.0516066551208496
    4. '[np' → logprob: -4.05160665512085
    5. 'list' → logprob: -4.30160665512085
    6. 'groups' → logprob: -4.55160665512085
    7. 'reduce' → logprob: -4.80160665512085
    8. ' [' → logprob: -5.55160665512085
    9. ' list' → logprob: -6.30160665512085
    10. '[group' → logprob: -6.67660665512085

Token 186: '.array' (ID: 14557)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.9000203609466553
    2. 'array' → logprob: -1.5250203609466553
    3. 'groups' → logprob: -1.6500203609466553
    4. '[' → logprob: -2.2750203609466553
    5. 'list' → logprob: -3.0250203609466553
    6. '[group' → logprob: -5.025020599365234
    7. 'reduce' → logprob: -5.275020599365234
    8. '[np' → logprob: -5.650020599365234
    9. ' groups' → logprob: -5.775020599365234
    10. 'sum' → logprob: -5.775020599365234

Token 187: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.0009545749635435641
    2. '(list' → logprob: -7.625954627990723
    3. '[' → logprob: -7.875954627990723
    4. '[list' → logprob: -9.750954627990723
    5. '(' → logprob: -11.750954627990723
    6. '([(' → logprob: -12.750954627990723
    7. '(groups' → logprob: -13.000954627990723
    8. 'list' → logprob: -13.125954627990723
    9. '([],' → logprob: -13.125954627990723
    10. '([[' → logprob: -13.250954627990723

Token 188: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.737757682800293
    2. 'group' → logprob: -0.987757682800293
    3. 'np' → logprob: -2.112757682800293
    4. 'grp' → logprob: -3.737757682800293
    5. 'gs' → logprob: -6.112757682800293
    6. 'arr' → logprob: -7.237757682800293
    7. '0' → logprob: -7.737757682800293
    8. 'sum' → logprob: -8.112757682800293
    9. 'row' → logprob: -8.612757682800293
    10. ' g' → logprob: -8.737757682800293

Token 189: '.sum' (ID: 35381)
  Prédit: '.sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sum' → logprob: -0.00044949972652830184
    2. '.' → logprob: -7.7504496574401855
    3. ' .' → logprob: -12.125449180603027
    4. '.astype' → logprob: -12.625449180603027
    5. '.shape' → logprob: -13.000449180603027
    6. '.s' → logprob: -13.750449180603027
    7. '.reshape' → logprob: -13.750449180603027
    8. ').' → logprob: -13.875449180603027
    9. '.flatten' → logprob: -13.875449180603027
    10. 'sum' → logprob: -14.250449180603027

Token 190: '(axis' (ID: 74227)
  Prédit: '(axis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(axis' → logprob: -0.001106279087252915
    2. '()' → logprob: -7.126106262207031
    3. '(' → logprob: -8.751106262207031
    4. 'axis' → logprob: -8.876106262207031
    5. ' axis' → logprob: -13.001106262207031
    6. '(-' → logprob: -14.876106262207031
    7. '0' → logprob: -15.126106262207031
    8. '())' → logprob: -15.501106262207031
    9. 'for' → logprob: -16.00110626220703
    10. '1' → logprob: -16.00110626220703

Token 191: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00011772842844948173
    2. '1' → logprob: -9.125117301940918
    3. '=(' → logprob: -11.875117301940918
    4. '=-' → logprob: -14.250117301940918
    5. '(' → logprob: -15.125117301940918
    6. 'axis' → logprob: -15.500117301940918
    7. ')=' → logprob: -15.750117301940918
    8. ' =' → logprob: -16.000118255615234
    9. '=
' → logprob: -16.125118255615234
    10. ')' → logprob: -16.750118255615234

Token 192: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001487140398239717
    2. '0' → logprob: -9.00014877319336
    3. '(' → logprob: -10.75014877319336
    4. ' ' → logprob: -13.12514877319336
    5. 'tuple' → logprob: -13.75014877319336
    6. '=' → logprob: -15.12514877319336
    7. ' (' → logprob: -16.12514877319336
    8. ')' → logprob: -16.37514877319336
    9. '```' → logprob: -16.62514877319336
    10. 'w' → logprob: -16.87514877319336

Token 193: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00383559032343328
    2. ',' → logprob: -5.753835678100586
    3. ' )' → logprob: -7.628835678100586
    4. 'dtype' → logprob: -10.003835678100586
    5. ' ,' → logprob: -10.378835678100586
    6. ',d' → logprob: -10.378835678100586
    7. ' for' → logprob: -11.378835678100586
    8. ').' → logprob: -11.878835678100586
    9. ')])' → logprob: -12.003835678100586
    10. 'for' → logprob: -12.253835678100586

Token 194: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.016772329807281494
    2. ')' → logprob: -4.266772270202637
    3. 'for' → logprob: -6.516772270202637
    4. '   ' → logprob: -7.391772270202637
    5. '()' → logprob: -8.516772270202637
    6. ',' → logprob: -9.391772270202637
    7. ' ' → logprob: -9.641772270202637
    8. ' )' → logprob: -9.891772270202637
    9. '),' → logprob: -9.891772270202637
    10. '])' → logprob: -10.766772270202637

Token 195: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.008629233576357365
    2. ' g' → logprob: -4.758629322052002
    3. 'group' → logprob: -11.508628845214844
    4. ' group' → logprob: -13.133628845214844
    5. '_g' → logprob: -14.258628845214844
    6. '	g' → logprob: -14.696128845214844
    7. 'groups' → logprob: -15.008628845214844
    8. ' ' → logprob: -15.508628845214844
    9. ' ' → logprob: -15.633628845214844
    10. '_' → logprob: -16.321128845214844

Token 196: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01647769846022129
    2. 'in' → logprob: -4.766477584838867
    3. 'g' → logprob: -4.891477584838867
    4. ' g' → logprob: -8.141477584838867
    5. 'group' → logprob: -11.516477584838867
    6. 's' → logprob: -11.891477584838867
    7. ' ' → logprob: -12.141477584838867
    8. ' group' → logprob: -13.266477584838867
    9. ')' → logprob: -13.391477584838867
    10. ' ' → logprob: -14.016477584838867

Token 197: ' groups' (ID: 8896)
  Prédit: 'groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'groups' → logprob: -0.02630830556154251
    2. ' groups' → logprob: -3.651308298110962
    3. 'group' → logprob: -12.776308059692383
    4. '(groups' → logprob: -13.026308059692383
    5. '.groups' → logprob: -14.151308059692383
    6. '   ' → logprob: -14.526308059692383
    7. 'roups' → logprob: -15.026308059692383
    8. ' ' → logprob: -15.026308059692383
    9. 'g' → logprob: -15.151308059692383
    10. ')' → logprob: -15.651308059692383

Token 198: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4925347864627838
    2. ')
' → logprob: -1.2425347566604614
    3. '])' → logprob: -2.742534875869751
    4. ',' → logprob: -3.992534875869751
    5. '])
' → logprob: -4.617534637451172
    6. '   ' → logprob: -5.367534637451172
    7. ']' → logprob: -7.242534637451172
    8. ' )' → logprob: -7.867534637451172
    9. ').' → logprob: -7.992534637451172
    10. ' )
' → logprob: -8.367534637451172

Token 199: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19120270013809204
    2. 'current' → logprob: -3.0662026405334473
    3. 'count' → logprob: -3.9412026405334473
    4. 'col' → logprob: -3.9412026405334473
    5. ' current' → logprob: -4.066202640533447
    6. 'pos' → logprob: -4.441202640533447
    7. ' col' → logprob: -4.941202640533447
    8. 'cur' → logprob: -4.941202640533447
    9. 'acc' → logprob: -5.066202640533447
    10. 'cnt' → logprob: -5.816202640533447

Token 200: ' if' (ID: 538)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -1.491086721420288
    2. 'cur' → logprob: -1.866086721420288
    3. 'current' → logprob: -1.991086721420288
    4. 'if' (adapté à ' if') → logprob: -2.491086721420288
    5. 'ok' → logprob: -2.491086721420288
    6. 'acc' → logprob: -2.991086721420288
    7. 'cnt' → logprob: -3.241086721420288
    8. 'curr' → logprob: -3.491086721420288
    9. 'count' → logprob: -4.116086959838867
    10. 'pos' → logprob: -4.241086959838867

Token 201: ' np' (ID: 5374)
  Prédit: ' group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' group' → logprob: -0.9336982369422913
    2. 'group' → logprob: -1.1836981773376465
    3. ' np' → logprob: -2.0586981773376465
    4. '(group' → logprob: -2.5586981773376465
    5. 'np' → logprob: -2.8086981773376465
    6. '(np' → logprob: -3.5586981773376465
    7. ' (' → logprob: -5.3086981773376465
    8. '(' → logprob: -6.5586981773376465
    9. ' not' → logprob: -8.808698654174805
    10. ' ' → logprob: -9.933698654174805

Token 202: '.any' (ID: 54513)
  Prédit: '.any'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.any' → logprob: -0.004603980109095573
    2. '.max' → logprob: -5.629603862762451
    3. 'any' → logprob: -7.129603862762451
    4. 'max' → logprob: -8.62960433959961
    5. '.all' → logprob: -11.25460433959961
    6. '_any' → logprob: -12.62960433959961
    7. '.am' → logprob: -13.75460433959961
    8. '.maximum' → logprob: -13.87960433959961
    9. 'Any' → logprob: -14.00460433959961
    10. '.' → logprob: -14.25460433959961

Token 203: '(group' (ID: 36416)
  Prédit: '(group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(group' → logprob: -1.8550976164988242e-05
    2. 'group' → logprob: -11.125018119812012
    3. '(' → logprob: -13.000018119812012
    4. ' (' → logprob: -14.625018119812012
    5. '[group' → logprob: -14.875018119812012
    6. '((' → logprob: -15.625018119812012
    7. '(np' → logprob: -15.750018119812012
    8. ' group' → logprob: -16.500019073486328
    9. '(g' → logprob: -16.625019073486328
    10. '(groups' → logprob: -16.750019073486328

Token 204: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -6.153795766294934e-06
    2. 'sum' → logprob: -12.500005722045898
    3. '_group' → logprob: -13.875005722045898
    4. '>' → logprob: -14.000005722045898
    5. '_s' → logprob: -16.0000057220459
    6. ')' → logprob: -16.1250057220459
    7. '.sum' → logprob: -16.5000057220459
    8. '_max' → logprob: -16.8750057220459
    9. 's' → logprob: -16.8750057220459
    10. '_' → logprob: -17.2500057220459

Token 205: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.4742192327976227
    2. ' >' → logprob: -0.9742192029953003
    3. '>K' → logprob: -10.22421932220459
    4. ')' → logprob: -10.34921932220459
    5. ' >=' → logprob: -10.72421932220459
    6. '>=' → logprob: -11.22421932220459
    7. ' ' → logprob: -11.59921932220459
    8. ')>' → logprob: -11.84921932220459
    9. '[' → logprob: -12.22421932220459
    10. '.sum' → logprob: -12.84921932220459

Token 206: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0007166040013544261
    2. ' k' → logprob: -7.250716686248779
    3. '   ' → logprob: -13.625716209411621
    4. '	k' → logprob: -14.125716209411621
    5. '=k' → logprob: -14.250716209411621
    6. '[k' → logprob: -14.375716209411621
    7. ' ' → logprob: -14.500716209411621
    8. '    ' → logprob: -14.875716209411621
    9. '
' → logprob: -15.000716209411621
    10. '  ' → logprob: -15.250716209411621

Token 207: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10990218818187714
    2. '):
' → logprob: -2.6099021434783936
    3. ' ):' → logprob: -3.7349021434783936
    4. ':' → logprob: -5.609902381896973
    5. ' ):
' → logprob: -6.484902381896973
    6. ')' → logprob: -6.984902381896973
    7. ' :' → logprob: -8.609902381896973
    8. ' ' → logprob: -8.859902381896973
    9. '):
' → logprob: -9.484902381896973
    10. ':
' → logprob: -9.734902381896973

Token 208: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018534351838752627
    2. ' continue' → logprob: -6.5018534660339355
    3. 'continue' → logprob: -8.501852989196777
    4. '   ' → logprob: -9.126852989196777
    5. ':' → logprob: -11.001852989196777
    6. '	continue' → logprob: -11.876852989196777
    7. '           ' → logprob: -12.876852989196777
    8. '	' → logprob: -13.126852989196777
    9. ' continues' → logprob: -13.251852989196777
    10. '     ' → logprob: -13.251852989196777

Token 209: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.2137632519006729
    2. '   ' → logprob: -1.9637632369995117
    3. ' continue' → logprob: -2.9637632369995117
    4. '       ' → logprob: -7.963763236999512
    5. '	continue' → logprob: -8.963763236999512
    6. ' ' → logprob: -10.588763236999512
    7. '  ' → logprob: -12.963763236999512
    8. '    ' → logprob: -13.963763236999512
    9. 'contin' → logprob: -14.338763236999512
    10. 'break' → logprob: -14.713763236999512

Token 210: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028858294244855642
    2. 'col' → logprob: -7.127885818481445
    3. '    
' → logprob: -7.877885818481445
    4. 'pos' → logprob: -8.127885818481445
    5. 'count' → logprob: -8.252885818481445
    6. ' col' → logprob: -8.752885818481445
    7. ' cut' → logprob: -9.002885818481445
    8. 'cut' → logprob: -9.002885818481445
    9. 'for' → logprob: -9.252885818481445
    10. 'cnt' → logprob: -9.502885818481445

Token 211: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0883418470621109
    2. 'count' → logprob: -3.8383419513702393
    3. 'current' → logprob: -4.33834171295166
    4. 'cnt' → logprob: -5.08834171295166
    5. '    
' → logprob: -5.21334171295166
    6. 'cur' → logprob: -5.21334171295166
    7. 'acc' → logprob: -5.33834171295166
    8. 'curr' → logprob: -5.33834171295166
    9. 'col' → logprob: -5.33834171295166
    10. 'pos' → logprob: -5.46334171295166

Token 212: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -1.278641939163208
    2. 'count' → logprob: -1.903641939163208
    3. 'current' → logprob: -2.028641939163208
    4. 'cur' → logprob: -2.153641939163208
    5. 'col' → logprob: -3.028641939163208
    6. 'tmp' → logprob: -3.278641939163208
    7. 'curr' → logprob: -3.528641939163208
    8. 'acc' → logprob: -3.778641939163208
    9. 'pos' → logprob: -4.028641700744629
    10. 'width' → logprob: -4.278641700744629

Token 213: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004080897197127342
    2. '=' → logprob: -5.504080772399902
    3. ' ' → logprob: -13.754080772399902
    4. ',' → logprob: -15.004080772399902
    5. ' +=' → logprob: -15.379080772399902
    6. ' ' → logprob: -15.504080772399902
    7. '=cut' → logprob: -16.12908172607422
    8. ')' → logprob: -16.25408172607422
    9. '_cut' → logprob: -16.37908172607422
    10. ' =
' → logprob: -16.37908172607422

Token 214: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.025286903604865074
    2. 'bin' → logprob: -4.650286674499512
    3. ' len' → logprob: -5.025286674499512
    4. 'cuts' → logprob: -5.650286674499512
    5. 'groups' → logprob: -6.275286674499512
    6. '0' → logprob: -6.400286674499512
    7. 'bins' → logprob: -7.525286674499512
    8. 'cut' → logprob: -8.025286674499512
    9. '1' → logprob: -8.150286674499512
    10. ' bin' → logprob: -8.400286674499512

Token 215: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -9.376848902320489e-05
    2. '(groups' → logprob: -9.625093460083008
    3. '(group' → logprob: -11.625093460083008
    4. '(p' → logprob: -11.875093460083008
    5. '(' → logprob: -12.125093460083008
    6. '(g' → logprob: -13.375093460083008
    7. 'cuts' → logprob: -13.875093460083008
    8. ' cuts' → logprob: -14.125093460083008
    9. '([' → logprob: -14.250093460083008
    10. 'c' → logprob: -14.375093460083008

Token 216: 'uts' (ID: 4639)
  Prédit: 'uts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uts' → logprob: -0.04683493450284004
    2. '(c' → logprob: -3.796834945678711
    3. '(groups' → logprob: -4.296834945678711
    4. 'ut' → logprob: -4.796834945678711
    5. '(' → logprob: -7.421834945678711
    6. 'groups' → logprob: -7.921834945678711
    7. '(group' → logprob: -9.171834945678711
    8. '(g' → logprob: -9.671834945678711
    9. 'utting' → logprob: -10.421834945678711
    10. 's' → logprob: -10.546834945678711

Token 217: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03761586174368858
    2. '+' → logprob: -3.9126157760620117
    3. ' +' → logprob: -4.787615776062012
    4. ')+' → logprob: -4.912615776062012
    5. ' )' → logprob: -7.162615776062012
    6. '   ' → logprob: -8.162615776062012
    7. '+)' → logprob: -9.412615776062012
    8. ')
' → logprob: -11.037615776062012
    9. '	' → logprob: -11.162615776062012
    10. '[' → logprob: -11.287615776062012

Token 218: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14981743693351746
    2. ' col' → logprob: -2.14981746673584
    3. '    
' → logprob: -5.52481746673584
    4. '
' → logprob: -6.02481746673584
    5. ' for' → logprob: -6.27481746673584
    6. 'col' → logprob: -6.52481746673584
    7. ' cut' → logprob: -6.89981746673584
    8. ',' → logprob: -6.89981746673584
    9. ' cols' → logprob: -6.89981746673584
    10. ' prev' → logprob: -7.02481746673584

Token 219: ' acc' (ID: 1259)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -1.0935229063034058
    2. 'cur' → logprob: -1.8435229063034058
    3. 'pos' → logprob: -1.8435229063034058
    4. 'curr' → logprob: -2.5935230255126953
    5. 'current' → logprob: -2.8435230255126953
    6. 'acc' (adapté à ' acc') → logprob: -2.9685230255126953
    7. 'sum' → logprob: -3.4685230255126953
    8. 'valid' → logprob: -3.9685230255126953
    9. 'last' → logprob: -4.093523025512695
    10. 'width' → logprob: -4.218523025512695

Token 220: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.632689893245697
    2. '=' → logprob: -0.757689893245697
    3. '=np' → logprob: -9.632689476013184
    4. '_' → logprob: -12.507689476013184
    5. ',' → logprob: -12.757689476013184
    6. ' +=' → logprob: -12.882689476013184
    7. '=[]' → logprob: -13.007689476013184
    8. 'um' → logprob: -13.257689476013184
    9. '[:]' → logprob: -13.632689476013184
    10. '+=' → logprob: -13.632689476013184

Token 221: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.2610591650009155
    2. 'group' → logprob: -1.5110591650009155
    3. '0' → logprob: -5.386059284210205
    4. ' np' → logprob: -5.636059284210205
    5. ' group' → logprob: -7.636059284210205
    6. 'groups' → logprob: -8.136058807373047
    7. '[' → logprob: -10.261058807373047
    8. '[group' → logprob: -10.761058807373047
    9. ' ' → logprob: -11.136058807373047
    10. '(np' → logprob: -11.573558807373047

Token 222: '.zeros' (ID: 29146)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.21198171377182007
    2. 'p' → logprob: -2.711981773376465
    3. '0' → logprob: -2.836981773376465
    4. 'group' → logprob: -3.211981773376465
    5. 'm' → logprob: -5.211981773376465
    6. '.zeros' → logprob: -5.711981773376465
    7. 'groups' → logprob: -6.086981773376465
    8. 'zeros' → logprob: -6.211981773376465
    9. 'array' → logprob: -6.211981773376465
    10. ' np' → logprob: -6.336981773376465

Token 223: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.28946375846862793
    2. '(group' → logprob: -1.414463758468628
    3. '((' → logprob: -5.664463996887207
    4. '(ans' → logprob: -6.289463996887207
    5. '(groups' → logprob: -6.414463996887207
    6. '_like' → logprob: -7.289463996887207
    7. '(cnt' → logprob: -7.914463996887207
    8. '(p' → logprob: -9.289463996887207
    9. '(shape' → logprob: -9.664463996887207
    10. '(' → logprob: -10.289463996887207

Token 224: '(groups' (ID: 137765)
  Prédit: '(group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(group' → logprob: -0.6950445175170898
    2. '(groups' → logprob: -0.6950445175170898
    3. '(c' → logprob: -6.44504451751709
    4. '(p' → logprob: -8.82004451751709
    5. 'groups' → logprob: -9.44504451751709
    6. 'group' → logprob: -10.69504451751709
    7. '(' → logprob: -10.94504451751709
    8. '(s' → logprob: -11.69504451751709
    9. '(g' → logprob: -11.69504451751709
    10. ' groups' → logprob: -12.07004451751709

Token 225: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.09159737080335617
    2. ')' → logprob: -3.216597318649292
    3. '))' → logprob: -3.341597318649292
    4. ' ),' → logprob: -4.841597557067871
    5. ',' → logprob: -6.091597557067871
    6. ' )' → logprob: -7.466597557067871
    7. ')+' → logprob: -7.466597557067871
    8. ' ,' → logprob: -8.591597557067871
    9. '))
' → logprob: -8.716597557067871
    10. ' ))' → logprob: -8.716597557067871

Token 226: ' dtype' (ID: 29770)
  Prédit: 'dtype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dtype' → logprob: -0.022766202688217163
    2. ' dtype' → logprob: -4.27276611328125
    3. 'int' → logprob: -5.27276611328125
    4. 'np' → logprob: -6.02276611328125
    5. ')' → logprob: -7.02276611328125
    6. ' np' → logprob: -9.27276611328125
    7. ' int' → logprob: -11.39776611328125
    8. 'w' → logprob: -12.27276611328125
    9. 'd' → logprob: -12.39776611328125
    10. '0' → logprob: -13.14776611328125

Token 227: '=np' (ID: 40593)
  Prédit: '=int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=int' → logprob: -0.2746865451335907
    2. '=np' → logprob: -1.524686574935913
    3. 'int' → logprob: -4.274686336517334
    4. 'np' → logprob: -4.774686336517334
    5. ':int' → logprob: -9.524686813354492
    6. '(np' → logprob: -10.899686813354492
    7. ',int' → logprob: -11.274686813354492
    8. '[int' → logprob: -11.649686813354492
    9. '(int' → logprob: -12.149686813354492
    10. ' np' → logprob: -12.399686813354492

Token 228: '.int' (ID: 21499)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -3.666993507067673e-05
    2. '.int' → logprob: -10.250036239624023
    3. 'uint' → logprob: -13.750036239624023
    4. ' int' → logprob: -16.250036239624023
    5. '=int' → logprob: -18.000036239624023
    6. '[int' → logprob: -18.250036239624023
    7. '_int' → logprob: -18.625036239624023
    8. ''int' → logprob: -18.750036239624023
    9. ':int' → logprob: -19.125036239624023
    10. '<int' → logprob: -19.250036239624023

Token 229: '64' (ID: 2220)
  Prédit: '32'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '32' → logprob: -0.515110194683075
    2. '64' → logprob: -1.5151102542877197
    3. '16' → logprob: -2.2651102542877197
    4. 'int' → logprob: -3.0151102542877197
    5. '8' → logprob: -3.5151102542877197
    6. 'uint' → logprob: -8.89011001586914
    7. 'c' → logprob: -10.39011001586914
    8. 'np' → logprob: -12.76511001586914
    9. '   ' → logprob: -13.14011001586914
    10. 'p' → logprob: -13.14011001586914

Token 230: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02335798554122448
    2. ')
' → logprob: -3.77335786819458
    3. ' )' → logprob: -9.273358345031738
    4. ' )
' → logprob: -11.898358345031738
    5. ')

' → logprob: -12.148358345031738
    6. '   ' → logprob: -12.523358345031738
    7. ')
' → logprob: -13.398358345031738
    8. '
' → logprob: -14.648358345031738
    9. ')+' → logprob: -15.773358345031738
    10. ' ' → logprob: -16.273357391357422

Token 231: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.37100350856781006
    2. 'for' → logprob: -1.24600350856781
    3. '   ' → logprob: -4.9960036277771
    4. '
' → logprob: -5.1210036277771
    5. ' 
' → logprob: -5.2460036277771
    6. '    
' → logprob: -6.4960036277771
    7. ':' → logprob: -7.3710036277771
    8. '  
' → logprob: -7.3710036277771
    9. ',' → logprob: -7.7460036277771
    10. ':
' → logprob: -8.496003150939941

Token 232: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07890873402357101
    2. ' for' → logprob: -2.578908681869507
    3. '
' → logprob: -12.203908920288086
    4. '   ' → logprob: -12.328908920288086
    5. 'j' → logprob: -13.203908920288086
    6. 'i' → logprob: -13.328908920288086
    7. 'idx' → logprob: -13.578908920288086
    8. 'valid' → logprob: -13.953908920288086
    9. 'pos' → logprob: -13.953908920288086
    10. 'col' → logprob: -14.078908920288086

Token 233: ' col' (ID: 996)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.09334831684827805
    2. 'col' → logprob: -2.593348264694214
    3. ' j' → logprob: -5.218348503112793
    4. 'x' → logprob: -5.218348503112793
    5. ' col' → logprob: -5.968348503112793
    6. 'i' → logprob: -7.218348503112793
    7. 'w' → logprob: -9.593348503112793
    8. 'c' → logprob: -9.968348503112793
    9. ' x' → logprob: -9.968348503112793
    10. 'jj' → logprob: -10.843348503112793

Token 234: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006793998181819916
    2. 'in' → logprob: -5.006793975830078
    3. 's' → logprob: -10.631793975830078
    4. '   ' → logprob: -11.131793975830078
    5. ')' → logprob: -11.506793975830078
    6. '0' → logprob: -12.006793975830078
    7. ' ' → logprob: -12.256793975830078
    8. ',' → logprob: -12.756793975830078
    9. '_in' → logprob: -13.256793975830078
    10. '	in' → logprob: -13.506793975830078

Token 235: ' zip' (ID: 16216)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.009757863357663155
    2. ' range' → logprob: -4.634757995605469
    3. 's' → logprob: -14.009757995605469
    4. ' ' → logprob: -14.759757995605469
    5. '   ' → logprob: -15.384757995605469
    6. 'r' → logprob: -15.634757995605469
    7. '(range' → logprob: -16.00975799560547
    8. '	range' → logprob: -16.50975799560547
    9. '  ' → logprob: -17.13475799560547
    10. 'rang' → logprob: -17.13475799560547

Token 236: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.003001239150762558
    2. '(group' → logprob: -6.5030012130737305
    3. '(range' → logprob: -6.8780012130737305
    4. '(*(' → logprob: -7.8780012130737305
    5. '(*)' → logprob: -9.87800121307373
    6. '(s' → logprob: -11.00300121307373
    7. '(' → logprob: -11.12800121307373
    8. 'range' → logprob: -13.62800121307373
    9. '*' → logprob: -13.75300121307373
    10. ' (*' → logprob: -14.37800121307373

Token 237: 'group' (ID: 4323)
  Prédit: 'group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.0020155981183052063
    2. 's' → logprob: -7.127015590667725
    3. 'groups' → logprob: -7.127015590667725
    4. 'map' → logprob: -8.627016067504883
    5. '(group' → logprob: -9.002016067504883
    6. '[' → logprob: -10.127016067504883
    7. ' group' → logprob: -11.002016067504883
    8. '[group' → logprob: -11.127016067504883
    9. 'tuple' → logprob: -11.627016067504883
    10. '(' → logprob: -12.127016067504883

Token 238: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.000548387470189482
    2. '_s' → logprob: -7.875548362731934
    3. 's' → logprob: -9.375548362731934
    4. 'sum' → logprob: -9.500548362731934
    5. ')' → logprob: -13.000548362731934
    6. '_' → logprob: -14.500548362731934
    7. '
' → logprob: -14.500548362731934
    8. ' _' → logprob: -14.875548362731934
    9. ')_' → logprob: -14.875548362731934
    10. '_group' → logprob: -14.875548362731934

Token 239: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5760320425033569
    2. '):' → logprob: -0.8260320425033569
    3. '   ' → logprob: -10.576031684875488
    4. '):
' → logprob: -10.576031684875488
    5. '()):
' → logprob: -11.201031684875488
    6. ')' → logprob: -11.701031684875488
    7. ':' → logprob: -11.826031684875488
    8. '():' → logprob: -13.201031684875488
    9. ' ):' → logprob: -13.201031684875488
    10. ' ):
' → logprob: -13.201031684875488

Token 240: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3156045079231262
    2. '   ' → logprob: -1.3156044483184814
    3. ':' → logprob: -6.9406046867370605
    4. ' if' → logprob: -8.190604209899902
    5. ',' → logprob: -8.440604209899902
    6. '    
' → logprob: -8.815604209899902
    7. '```' → logprob: -9.190604209899902
    8. '):' → logprob: -9.315604209899902
    9. '        
' → logprob: -9.440604209899902
    10. '):
' → logprob: -9.565604209899902

Token 241: ' acc' (ID: 1259)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.118678517639637
    2. ' if' → logprob: -2.368678569793701
    3. '       ' → logprob: -4.618678569793701
    4. '           ' → logprob: -5.993678569793701
    5. ' acc' → logprob: -6.118678569793701
    6. 'acc' (adapté à ' acc') → logprob: -6.243678569793701
    7. 'for' → logprob: -6.743678569793701
    8. 'col' → logprob: -8.868678092956543
    9. 'idx' → logprob: -8.868678092956543
    10. ' for' → logprob: -8.868678092956543

Token 242: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.007770597469061613
    2. ' +=' → logprob: -4.882770538330078
    3. '+' → logprob: -8.882770538330078
    4. '=' → logprob: -11.007770538330078
    5. ']+=' → logprob: -12.257770538330078
    6. '[:]' → logprob: -13.507770538330078
    7. '_plus' → logprob: -13.757770538330078
    8. '+=(' → logprob: -14.382770538330078
    9. ' +' → logprob: -14.632770538330078
    10. '+c' → logprob: -15.382770538330078

Token 243: ' col' (ID: 996)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -3.464347173576243e-05
    2. 'np' → logprob: -10.62503433227539
    3. ' col' → logprob: -11.50003433227539
    4. 'column' → logprob: -17.37503433227539
    5. ' np' → logprob: -18.87503433227539
    6. '[col' → logprob: -19.00003433227539
    7. '	col' → logprob: -19.12503433227539
    8. ' ' → logprob: -19.37503433227539
    9. '   ' → logprob: -19.75003433227539
    10. '(col' → logprob: -19.87503433227539

Token 244: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09210380911827087
    2. '
' → logprob: -2.9671037197113037
    3. ' if' → logprob: -4.092103958129883
    4. 'if' → logprob: -4.842103958129883
    5. '<|end|>' → logprob: -5.342103958129883
    6. '        
' → logprob: -5.592103958129883
    7. '[' → logprob: -6.592103958129883
    8. '  
' → logprob: -7.967103958129883
    9. '   ' → logprob: -8.342103958129883
    10. '        ' → logprob: -8.467103958129883

Token 245: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5867736339569092
    2. ' if' → logprob: -0.9617736339569092
    3. 'if' → logprob: -3.461773633956909
    4. '        
' → logprob: -4.711773872375488
    5. '<|end|>' → logprob: -5.086773872375488
    6. '```' → logprob: -5.211773872375488
    7. '[' → logprob: -5.586773872375488
    8. '
' → logprob: -6.086773872375488
    9. '   ' → logprob: -7.461773872375488
    10. ' ' → logprob: -7.586773872375488

Token 246: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0621209479868412
    2. ' if' → logprob: -2.8121209144592285
    3. '       ' → logprob: -8.812121391296387
    4. '   ' → logprob: -13.437121391296387
    5. '[' → logprob: -14.187121391296387
    6. '        
' → logprob: -14.437121391296387
    7. '```' → logprob: -14.562121391296387
    8. '	if' → logprob: -15.062121391296387
    9. '
' → logprob: -15.187121391296387
    10. '>' → logprob: -16.06212043762207

Token 247: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.1870201826095581
    2. '(np' → logprob: -1.812020182609558
    3. '(acc' → logprob: -5.187020301818848
    4. 'acc' → logprob: -7.062020301818848
    5. ' np' → logprob: -7.687020301818848
    6. 'any' → logprob: -8.562020301818848
    7. '(any' → logprob: -9.437020301818848
    8. '(' → logprob: -10.062020301818848
    9. '(max' → logprob: -11.562020301818848
    10. ' (' → logprob: -11.937020301818848

Token 248: '.any' (ID: 54513)
  Prédit: '.any'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.any' → logprob: -0.07576504349708557
    2. 'any' → logprob: -2.8257651329040527
    3. '.max' → logprob: -5.200765132904053
    4. 'max' → logprob: -5.200765132904053
    5. '>' → logprob: -6.200765132904053
    6. '_any' → logprob: -7.700765132904053
    7. ' any' → logprob: -9.450764656066895
    8. 'Any' → logprob: -9.825764656066895
    9. 'gt' → logprob: -10.950764656066895
    10. '(any' → logprob: -11.075764656066895

Token 249: '(acc' (ID: 82668)
  Prédit: '(acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.0019618207588791847
    2. 'acc' → logprob: -6.251961708068848
    3. ' acc' → logprob: -10.501961708068848
    4. '(' → logprob: -12.501961708068848
    5. ' (' → logprob: -13.501961708068848
    6. '>' → logprob: -15.001961708068848
    7. '	acc' → logprob: -15.626961708068848
    8. '(ans' → logprob: -16.876962661743164
    9. '_acc' → logprob: -17.751962661743164
    10. '(ac' → logprob: -17.876962661743164

Token 250: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5759521722793579
    2. '>' → logprob: -0.8259521722793579
    3. ')' → logprob: -12.075952529907227
    4. ' ' → logprob: -12.450952529907227
    5. '>K' → logprob: -13.700952529907227
    6. ')>' → logprob: -14.825952529907227
    7. ' ' → logprob: -14.950952529907227
    8. '   ' → logprob: -15.450952529907227
    9. ' >=' → logprob: -15.825952529907227
    10. '>=' → logprob: -15.950952529907227

Token 251: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00023071514442563057
    2. ' k' → logprob: -8.37523078918457
    3. '	k' → logprob: -17.12523078918457
    4. '   ' → logprob: -17.50023078918457
    5. '[k' → logprob: -17.50023078918457
    6. ' ' → logprob: -18.62523078918457
    7. '(k' → logprob: -19.25023078918457
    8. '
' → logprob: -19.37523078918457
    9. '[' → logprob: -19.62523078918457
    10. '  ' → logprob: -20.12523078918457

Token 252: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.007394598796963692
    2. '):' → logprob: -5.007394790649414
    3. ' ):
' → logprob: -7.382394790649414
    4. '):
' → logprob: -11.132394790649414
    5. ':
' → logprob: -11.257394790649414
    6. ' ):' → logprob: -11.507394790649414
    7. ':' → logprob: -11.632394790649414
    8. '       ' → logprob: -12.507394790649414
    9. ')' → logprob: -12.757394790649414
    10. '):

' → logprob: -13.007394790649414

Token 253: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1145620346069336
    2. '       ' → logprob: -2.4895620346069336
    3. '
' → logprob: -3.9895620346069336
    4. ' ans' → logprob: -6.489562034606934
    5. 'cnt' → logprob: -6.489562034606934
    6. ' cnt' → logprob: -7.114562034606934
    7. '   ' → logprob: -7.614562034606934
    8. '            
' → logprob: -7.989562034606934
    9. ' cut' → logprob: -7.989562034606934
    10. 'ans' → logprob: -8.364562034606934

Token 254: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.2669932246208191
    2. ' cnt' → logprob: -1.6419932842254639
    3. '
' → logprob: -3.641993284225464
    4. '           ' → logprob: -4.891993045806885
    5. 'ans' → logprob: -6.141993045806885
    6. ' ans' → logprob: -6.266993045806885
    7. '            ' → logprob: -7.141993045806885
    8. 'acc' → logprob: -7.391993045806885
    9. ' acc' → logprob: -8.016993522644043
    10. 'count' → logprob: -8.141993522644043

Token 255: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1602315455675125
    2. ' +=' → logprob: -1.910231590270996
    3. ']+=' → logprob: -12.660231590270996
    4. '=' → logprob: -13.535231590270996
    5. '   ' → logprob: -13.660231590270996
    6. '  ' → logprob: -14.410231590270996
    7. '```' → logprob: -15.285231590270996
    8. '+' → logprob: -15.535231590270996
    9. '    ' → logprob: -16.03523063659668
    10. ' ' → logprob: -16.16023063659668

Token 256: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.625009536743164
    3. 'len' → logprob: -16.500009536743164
    4. '
' → logprob: -18.000009536743164
    5. '   ' → logprob: -19.750009536743164
    6. '```' → logprob: -19.875009536743164
    7. '+' → logprob: -19.937509536743164
    8. '2' → logprob: -20.000009536743164
    9. 'sum' → logprob: -20.312509536743164
    10. '  ' → logprob: -20.375009536743164

Token 257: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '
' → logprob: -19.375001907348633
    4. 'len' → logprob: -19.625001907348633
    5. '   ' → logprob: -20.125001907348633
    6. '2' → logprob: -20.375001907348633
    7. '  ' → logprob: -20.750001907348633
    8. '１' → logprob: -21.812501907348633
    9. '```' → logprob: -21.812501907348633
    10. '10' → logprob: -22.062501907348633

Token 258: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013305638916790485
    2. 'acc' → logprob: -4.3883056640625
    3. ' acc' → logprob: -7.2633056640625
    4. '       ' → logprob: -10.5133056640625
    5. '          ' → logprob: -10.7633056640625
    6. '
' → logprob: -10.8883056640625
    7. ',' → logprob: -12.1383056640625
    8. '            
' → logprob: -12.3883056640625
    9. '=' → logprob: -12.5133056640625
    10. '            ' → logprob: -12.7633056640625

Token 259: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1874714493751526
    2. 'acc' → logprob: -1.8124713897705078
    3. ' acc' → logprob: -4.937471389770508
    4. '
' → logprob: -8.062471389770508
    5. '       ' → logprob: -9.562471389770508
    6. ',' → logprob: -10.187471389770508
    7. '          ' → logprob: -10.687471389770508
    8. '   ' → logprob: -11.187471389770508
    9. '            
' → logprob: -11.437471389770508
    10. '(acc' → logprob: -11.562471389770508

Token 260: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' (adapté à ' acc') → logprob: -7.896309739408025e-07
    2. ' acc' → logprob: -14.375000953674316
    3. '           ' → logprob: -16.125
    4. '
' → logprob: -17.375
    5. '(acc' → logprob: -17.875
    6. '            
' → logprob: -19.5
    7. '       ' → logprob: -20.625
    8. '=' → logprob: -21.375
    9. '```' → logprob: -22.375
    10. 'ac' → logprob: -22.5

Token 261: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2524847090244293
    2. ' =' → logprob: -1.502484679222107
    3. '[:]' → logprob: -7.5024847984313965
    4. '.=' → logprob: -13.502484321594238
    5. '[col' → logprob: -14.127484321594238
    6. '.fill' → logprob: -14.627484321594238
    7. '＝' → logprob: -14.752484321594238
    8. '[...]' → logprob: -15.377484321594238
    9. '*=' → logprob: -15.877484321594238
    10. '=np' → logprob: -16.127485275268555

Token 262: ' np' (ID: 5374)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.001578182796947658
    2. 'np' → logprob: -6.501578330993652
    3. ' col' → logprob: -9.501578330993652
    4. ' np' → logprob: -14.376578330993652
    5. 'acc' → logprob: -15.501578330993652
    6. '[col' → logprob: -16.126577377319336
    7. 'column' → logprob: -16.251577377319336
    8. 'copy' → logprob: -17.626577377319336
    9. '	col' → logprob: -17.626577377319336
    10. '.col' → logprob: -17.751577377319336

Token 263: '.array' (ID: 14557)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.0037724121939390898
    2. 'np' → logprob: -5.628772258758545
    3. ' col' → logprob: -8.753772735595703
    4. 'acc' → logprob: -12.003772735595703
    5. '[col' → logprob: -12.753772735595703
    6. 'copy' → logprob: -13.378772735595703
    7. ' np' → logprob: -13.753772735595703
    8. 'cols' → logprob: -14.378772735595703
    9. 'column' → logprob: -14.503772735595703
    10. '.col' → logprob: -14.628772735595703

Token 264: '(col' (ID: 37070)
  Prédit: '(col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(col' → logprob: -0.10126995295286179
    2. 'col' → logprob: -2.3512699604034424
    3. '(list' → logprob: -7.351269721984863
    4. 'list' → logprob: -7.976269721984863
    5. '[col' → logprob: -9.601269721984863
    6. '	col' → logprob: -12.601269721984863
    7. '(' → logprob: -13.101269721984863
    8. ' col' → logprob: -13.601269721984863
    9. ',col' → logprob: -13.601269721984863
    10. '([' → logprob: -14.476269721984863

Token 265: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.016616291366518e-05
    2. ')
' → logprob: -10.000070571899414
    3. ',' → logprob: -11.250070571899414
    4. '<|end|>' → logprob: -12.375070571899414
    5. '.copy' → logprob: -13.375070571899414
    6. ' )' → logprob: -13.750070571899414
    7. ')d' → logprob: -14.000070571899414
    8. '       ' → logprob: -14.125070571899414
    9. ')return' → logprob: -14.250070571899414
    10. ').' → logprob: -14.875070571899414

Token 266: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3147861659526825
    2. ' else' → logprob: -2.439786195755005
    3. ' 
' → logprob: -3.064786195755005
    4. ' ' → logprob: -3.439786195755005
    5. 'else' → logprob: -3.689786195755005
    6. '<|end|>' → logprob: -3.939786195755005
    7. '   ' → logprob: -4.189785957336426
    8. ')
' → logprob: -4.564785957336426
    9. '
' → logprob: -5.439785957336426
    10. ',' → logprob: -5.564785957336426

Token 267: ' ans' (ID: 3345)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11746205389499664
    2. 'print' → logprob: -2.992462158203125
    3. '
' → logprob: -3.617462158203125
    4. ')
' → logprob: -4.242462158203125
    5. '   ' → logprob: -5.617462158203125
    6. 'else' → logprob: -5.992462158203125
    7. ' else' → logprob: -6.117462158203125
    8. '    
' → logprob: -6.367462158203125
    9. ' 
' → logprob: -6.617462158203125
    10. ' print' → logprob: -6.867462158203125

Token 268: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269569844007492
    2. ' =' → logprob: -2.1269569396972656
    3. '=min' → logprob: -10.501956939697266
    4. '   ' → logprob: -14.626956939697266
    5. '  ' → logprob: -15.501956939697266
    6. '<=' → logprob: -15.751956939697266
    7. ',' → logprob: -16.126956939697266
    8. 'min' → logprob: -16.376956939697266
    9. '=max' → logprob: -16.501956939697266
    10. ')' → logprob: -16.876956939697266

Token 269: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.1269291490316391
    2. ' min' → logprob: -2.1269290447235107
    3. '   ' → logprob: -14.50192928314209
    4. '	min' → logprob: -14.62692928314209
    5. '(min' → logprob: -17.001928329467773
    6. '[min' → logprob: -17.876928329467773
    7. '=min' → logprob: -18.251928329467773
    8. ',min' → logprob: -19.001928329467773
    9. '  ' → logprob: -19.251928329467773
    10. '.min' → logprob: -19.376928329467773

Token 270: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.0280383548888494e-06
    2. '(' → logprob: -14.000000953674316
    3. '(cnt' → logprob: -17.125001907348633
    4. 'ans' → logprob: -17.625001907348633
    5. '(answer' → logprob: -19.500001907348633
    6. ' (' → logprob: -20.250001907348633
    7. '(
' → logprob: -20.375001907348633
    8. '	ans' → logprob: -21.000001907348633
    9. '(an' → logprob: -21.375001907348633
    10. '(err' → logprob: -21.500001907348633

Token 271: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008217801805585623
    2. '(cnt' → logprob: -8.000822067260742
    3. ' ,' → logprob: -8.250822067260742
    4. '(ans' → logprob: -8.625822067260742
    5. ',c' → logprob: -10.250822067260742
    6. ' ans' → logprob: -12.875822067260742
    7. ',
' → logprob: -13.375822067260742
    8. ')' → logprob: -13.500822067260742
    9. 'cnt' → logprob: -13.500822067260742
    10. 'ans' → logprob: -14.000822067260742

Token 272: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.026307502761483192
    2. ' cnt' → logprob: -3.6513075828552246
    3. '   ' → logprob: -13.026307106018066
    4. '(cnt' → logprob: -13.401307106018066
    5. 'ans' → logprob: -14.151307106018066
    6. '	cnt' → logprob: -14.276307106018066
    7. 'count' → logprob: -14.401307106018066
    8. ' ' → logprob: -14.651307106018066
    9. '[cnt' → logprob: -15.401307106018066
    10. '  ' → logprob: -15.651307106018066

Token 273: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00328656705096364
    2. ')
' → logprob: -6.253286361694336
    3. ' )' → logprob: -6.628286361694336
    4. '+' → logprob: -11.253286361694336
    5. ' )
' → logprob: -11.378286361694336
    6. ' +' → logprob: -12.003286361694336
    7. '
' → logprob: -13.503286361694336
    8. ')

' → logprob: -14.003286361694336
    9. '   ' → logprob: -14.128286361694336
    10. '+)' → logprob: -14.878286361694336

Token 274: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013016337528824806
    2. '<|end|>' → logprob: -4.388016223907471
    3. '
' → logprob: -8.263016700744629
    4. '```' → logprob: -9.263016700744629
    5. '#' → logprob: -10.263016700744629
    6. 'print' → logprob: -10.388016700744629
    7. ' )' → logprob: -10.638016700744629
    8. '[' → logprob: -11.388016700744629
    9. '<|end|>' → logprob: -11.513016700744629
    10. '")' → logprob: -11.763016700744629

Token 275: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.005239087622612715
    2. '(' → logprob: -5.255239009857178
    3. '()' → logprob: -12.880239486694336
    4. ' (' → logprob: -14.130239486694336
    5. 'ans' → logprob: -14.505239486694336
    6. '(f' → logprob: -14.630239486694336
    7. '(
' → logprob: -14.630239486694336
    8. '(answer' → logprob: -14.755239486694336
    9. '('' → logprob: -16.505239486694336
    10. '(an' → logprob: -17.255239486694336

Token 276: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.491498531133402e-06
    2. ' )' → logprob: -12.750009536743164
    3. '())' → logprob: -13.250009536743164
    4. ')
' → logprob: -13.375009536743164
    5. '()' → logprob: -13.500009536743164
    6. ')`' → logprob: -13.875009536743164
    7. '))' → logprob: -14.875009536743164
    8. '`)' → logprob: -15.375009536743164
    9. '+' → logprob: -16.000009536743164
    10. '")' → logprob: -17.500009536743164


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 274
Tokens correctement prédits (1ère position, stricte): 110
Tokens correctement prédits (1ère position, avec adaptation): 117
Tokens correctement prédits (top 10): 236
Précision stricte (1ère position): 40.15%
Précision adaptée (1ère position): 42.70%
Précision (top 10): 86.13%
================================================================================
