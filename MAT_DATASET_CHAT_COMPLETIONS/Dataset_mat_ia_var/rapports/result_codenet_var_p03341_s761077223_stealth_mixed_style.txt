================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:00
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

# input as global func, procedural
read = lambda: sys.stdin.readline().rstrip()
n=int(input())
s=input()
count=[0]
for i in range(n):
    count.append(count[-1]+ (1 if s[i]=='W' else 0))

def calc(i):
    # object-oriented local scoping
    class Tmp: pass
    tmp = Tmp()
    tmp.l = count[i]
    tmp.r = n-i-(count[n]-count[i])
    return tmp.l+tmp.r

i, res = 0, n
while i<=n:
    res = min(res, calc(i))
    i+=1
sys.stdout.write(str(res)+'\n')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: '#' (ID: 2)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0347585454583168
    2. '\n' → logprob: -4.034758567810059
    3. 'import' → logprob: -4.909758567810059
    4. '<|end|>' → logprob: -5.284758567810059
    5. '\' → logprob: -7.159758567810059
    6. '<|end|>' → logprob: -7.534758567810059
    7. 'newline' → logprob: -7.909758567810059
    8. ',' → logprob: -8.159758567810059
    9. '[' → logprob: -8.284758567810059
    10. '' → logprob: -8.284758567810059

Token 4: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2402934730052948
    2. ' This' → logprob: -2.865293502807617
    3. ' The' → logprob: -3.740293502807617
    4. ' argparse' → logprob: -3.990293502807617
    5. ' is' → logprob: -4.615293502807617
    6. 'def' → logprob: -4.615293502807617
    7. ' argv' → logprob: -4.865293502807617
    8. ' def' → logprob: -4.990293502807617
    9. 'argv' → logprob: -4.990293502807617
    10. 'This' → logprob: -4.990293502807617

Token 5: ' as' (ID: 472)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012380613945424557
    2. '.' → logprob: -5.762380599975586
    3. '()' → logprob: -6.137380599975586
    4. '=' → logprob: -6.262380599975586
    5. '_' → logprob: -6.637380599975586
    6. ',' → logprob: -7.012380599975586
    7. ':' → logprob: -7.012380599975586
    8. '(
' → logprob: -7.637380599975586
    9. ')' → logprob: -7.887380599975586
    10. ' =' → logprob: -8.012380599975586

Token 6: ' global' (ID: 5466)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.15713022649288177
    2. 'sys' → logprob: -2.657130241394043
    3. ' a' → logprob: -3.907130241394043
    4. ' input' → logprob: -4.032130241394043
    5. ' =' → logprob: -4.657130241394043
    6. ' string' → logprob: -5.282130241394043
    7. '=sys' → logprob: -5.282130241394043
    8. 'input' → logprob: -6.032130241394043
    9. ' argv' → logprob: -6.032130241394043
    10. ' ' → logprob: -6.157130241394043

Token 7: ' func' (ID: 4660)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.007233293727040291
    2. ' _' → logprob: -6.007233142852783
    3. ' ' → logprob: -6.257233142852783
    4. '_input' → logprob: -7.257233142852783
    5. '=' → logprob: -7.382233142852783
    6. ' =' → logprob: -7.757233142852783
    7. '\' → logprob: -8.882233619689941
    8. '_variable' → logprob: -9.132233619689941
    9. 'input' → logprob: -9.507233619689941
    10. '#' → logprob: -9.507233619689941

Token 8: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6717056035995483
    2. '(' → logprob: -0.7967056035995483
    3. '_' → logprob: -4.421705722808838
    4. '()' → logprob: -5.046705722808838
    5. ' def' → logprob: -5.296705722808838
    6. '=' → logprob: -5.921705722808838
    7. ' ' → logprob: -6.046705722808838
    8. ' =' → logprob: -6.046705722808838
    9. 'input' → logprob: -6.546705722808838
    10. '(
' → logprob: -6.796705722808838

Token 9: ' procedural' (ID: 128482)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7220805883407593
    2. ' input' → logprob: -1.0970805883407593
    3. ' def' → logprob: -2.597080707550049
    4. 'def' → logprob: -2.597080707550049
    5. ' sys' → logprob: -4.847080707550049
    6. ' ' → logprob: -5.222080707550049
    7. ' =' → logprob: -5.847080707550049
    8. '()' → logprob: -6.597080707550049
    9. 'sys' → logprob: -6.597080707550049
    10. '(input' → logprob: -7.097080707550049

Token 10: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09271430969238281
    2. '\' → logprob: -3.467714309692383
    3. '()' → logprob: -3.967714309692383
    4. '_' → logprob: -4.467714309692383
    5. '(' → logprob: -4.592714309692383
    6. '(
' → logprob: -5.467714309692383
    7. 'input' → logprob: -6.092714309692383
    8. ':' → logprob: -6.342714309692383
    9. ' def' → logprob: -6.342714309692383
    10. ')' → logprob: -6.967714309692383

Token 11: 'read' (ID: 1293)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0813387781381607
    2. 'input' → logprob: -3.331338882446289
    3. '_' → logprob: -4.331338882446289
    4. '=' → logprob: -4.831338882446289
    5. ' =' → logprob: -5.831338882446289
    6. '(' → logprob: -5.831338882446289
    7. 'print' → logprob: -5.956338882446289
    8. '()' → logprob: -5.956338882446289
    9. ')' → logprob: -6.956338882446289
    10. ':' → logprob: -7.081338882446289

Token 12: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6834841966629028
    2. 'line' → logprob: -0.9334841966629028
    3. '_line' → logprob: -2.6834840774536133
    4. '(' → logprob: -4.058484077453613
    5. '_input' → logprob: -4.808484077453613
    6. '_' → logprob: -5.933484077453613
    7. 'put' → logprob: -6.933484077453613
    8. '())' → logprob: -7.058484077453613
    9. ' =' → logprob: -7.683484077453613
    10. 'Line' → logprob: -7.808484077453613

Token 13: ' lambda' (ID: 27871)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.2164604663848877
    2. ' sys' → logprob: -2.2164604663848877
    3. 'input' → logprob: -2.5914604663848877
    4. 'lambda' → logprob: -5.216460227966309
    5. ' input' → logprob: -5.466460227966309
    6. ' lambda' → logprob: -6.966460227966309
    7. '=sys' → logprob: -9.716460227966309
    8. 'int' → logprob: -10.716460227966309
    9. '	sys' → logprob: -10.841460227966309
    10. '(sys' → logprob: -11.341460227966309

Token 14: ':' (ID: 25)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.13421973586082458
    2. ' lambda' → logprob: -3.3842196464538574
    3. 'sys' → logprob: -3.3842196464538574
    4. ' ' → logprob: -3.5092196464538574
    5. 'lambda' → logprob: -4.134219646453857
    6. ':' → logprob: -5.634219646453857
    7. '=sys' → logprob: -6.009219646453857
    8. ' :' → logprob: -6.634219646453857
    9. ' input' → logprob: -6.634219646453857
    10. 'input' → logprob: -7.134219646453857

Token 15: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.13247771561145782
    2. 'sys' → logprob: -2.5074777603149414
    3. ' input' → logprob: -3.3824777603149414
    4. 'input' → logprob: -4.757477760314941
    5. 'int' → logprob: -10.757477760314941
    6. ' int' → logprob: -11.007477760314941
    7. ' ' → logprob: -12.007477760314941
    8. '	sys' → logprob: -12.632477760314941
    9. '=sys' → logprob: -13.007477760314941
    10. '(sys' → logprob: -13.382477760314941

Token 16: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0004366294015198946
    2. '.stdout' → logprob: -8.250436782836914
    3. '.' → logprob: -9.000436782836914
    4. '.argv' → logprob: -10.125436782836914
    5. '.std' → logprob: -12.125436782836914
    6. ' .' → logprob: -13.250436782836914
    7. 'stdin' → logprob: -13.750436782836914
    8. '.stderr' → logprob: -13.750436782836914
    9. '.readline' → logprob: -13.875436782836914
    10. ' stdin' → logprob: -13.875436782836914

Token 17: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.03904135525226593
    2. '.read' → logprob: -3.28904128074646
    3. '.' → logprob: -7.039041519165039
    4. '.readlines' → logprob: -9.664041519165039
    5. 'read' → logprob: -9.789041519165039
    6. '.buffer' → logprob: -14.039041519165039
    7. '.Read' → logprob: -14.164041519165039
    8. ' readline' → logprob: -14.539041519165039
    9. ' .' → logprob: -15.289041519165039
    10. '.write' → logprob: -15.414041519165039

Token 18: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.012681514956057072
    2. '().' → logprob: -4.387681484222412
    3. '()
' → logprob: -9.88768196105957
    4. '(' → logprob: -10.01268196105957
    5. '()\' → logprob: -10.38768196105957
    6. '()

' → logprob: -11.01268196105957
    7. ' ()' → logprob: -11.63768196105957
    8. '())' → logprob: -11.76268196105957
    9. ')' → logprob: -12.76268196105957
    10. '()<' → logprob: -13.38768196105957

Token 19: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0052373106591403484
    2. 'rstrip' → logprob: -5.255237102508545
    3. ' strip' → logprob: -13.255237579345703
    4. 'replace' → logprob: -14.130237579345703
    5. 'split' → logprob: -14.880237579345703
    6. '```' → logprob: -15.005237579345703
    7. 'decode' → logprob: -15.880237579345703
    8. '_strip' → logprob: -16.380237579345703
    9. 'read' → logprob: -17.255237579345703
    10. '-strip' → logprob: -17.630237579345703

Token 20: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.44329142570495605
    2. '(' → logprob: -1.068291425704956
    3. '(
' → logprob: -5.193291664123535
    4. '()
' → logprob: -6.068291664123535
    5. ')' → logprob: -6.193291664123535
    6. '
' → logprob: -6.818291664123535
    7. '\n' → logprob: -7.068291664123535
    8. '(

' → logprob: -7.318291664123535
    9. '<|end|>' → logprob: -7.443291664123535
    10. '()

' → logprob: -8.068291664123535

Token 21: 'n' (ID: 77)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15321969985961914
    2. '
' → logprob: -2.653219699859619
    3. '()' → logprob: -3.653219699859619
    4. '(' → logprob: -4.028219699859619
    5. '\n' → logprob: -5.278219699859619
    6. '

' → logprob: -5.653219699859619
    7. '#' → logprob: -5.653219699859619
    8. '\' → logprob: -6.278219699859619
    9. '(
' → logprob: -6.403219699859619
    10. 'n' → logprob: -6.528219699859619

Token 22: '=int' (ID: 37431)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20807744562625885
    2. '=' → logprob: -1.7080774307250977
    3. ' ' → logprob: -5.208077430725098
    4. '=int' → logprob: -7.208077430725098
    5. ',' → logprob: -8.833077430725098
    6. '.' → logprob: -9.333077430725098
    7. '  ' → logprob: -9.708077430725098
    8. ')' → logprob: -10.583077430725098
    9. 'u' → logprob: -10.583077430725098
    10. '<|end|>' → logprob: -11.083077430725098

Token 23: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7084203362464905
    2. '(read' → logprob: -0.7084203362464905
    3. '(input' → logprob: -4.208420276641846
    4. '()' → logprob: -9.083420753479004
    5. ' (' → logprob: -9.458420753479004
    6. '(sys' → logprob: -10.708420753479004
    7. 'read' → logprob: -10.958420753479004
    8. '(
' → logprob: -10.958420753479004
    9. '('' → logprob: -11.458420753479004
    10. '(open' → logprob: -11.458420753479004

Token 24: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.06298475712537766
    2. '()' → logprob: -2.8129847049713135
    3. ')' → logprob: -7.187984943389893
    4. '(' → logprob: -8.687984466552734
    5. '())
' → logprob: -10.812984466552734
    6. ' ())' → logprob: -10.937984466552734
    7. '().' → logprob: -11.062984466552734
    8. '()
' → logprob: -11.562984466552734
    9. '();)' → logprob: -11.812984466552734
    10. '()))' → logprob: -12.562984466552734

Token 25: 's' (ID: 82)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1200830936431885
    2. '<|end|>' → logprob: -1.2450830936431885
    3. '*' → logprob: -2.3700830936431885
    4. '.' → logprob: -2.3700830936431885
    5. '\' → logprob: -2.9950830936431885
    6. '+' → logprob: -3.3700830936431885
    7. '
' → logprob: -3.6200830936431885
    8. '\n' → logprob: -3.9950830936431885
    9. ' ' → logprob: -4.120082855224609
    10. 'for' → logprob: -4.870082855224609

Token 26: '=input' (ID: 87911)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43716973066329956
    2. ' =' → logprob: -1.1871697902679443
    3. '=input' → logprob: -3.0621697902679443
    4. '.' → logprob: -7.437169551849365
    5. '[' → logprob: -7.687169551849365
    6. '=s' → logprob: -8.562170028686523
    7. ' ' → logprob: -9.062170028686523
    8. 'um' → logprob: -9.187170028686523
    9. '=int' → logprob: -9.312170028686523
    10. '=list' → logprob: -9.437170028686523

Token 27: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004973658826202154
    2. '(' → logprob: -5.379973888397217
    3. '().' → logprob: -9.004973411560059
    4. '())' → logprob: -9.879973411560059
    5. ' ()' → logprob: -9.879973411560059
    6. ')' → logprob: -10.504973411560059
    7. '.' → logprob: -10.879973411560059
    8. '()]' → logprob: -11.004973411560059
    9. '()

' → logprob: -12.129973411560059
    10. '()
' → logprob: -12.129973411560059

Token 28: 'count' (ID: 5420)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.22158357501029968
    2. '+' → logprob: -3.096583604812622
    3. '[' → logprob: -3.096583604812622
    4. ' ' → logprob: -3.971583604812622
    5. '<|end|>' → logprob: -4.346583366394043
    6. 's' → logprob: -4.721583366394043
    7. '=' → logprob: -4.721583366394043
    8. '.strip' → logprob: -4.971583366394043
    9. '\' → logprob: -5.096583366394043
    10. 'n' → logprob: -5.596583366394043

Token 29: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34832748770713806
    2. '_' → logprob: -1.8483275175094604
    3. '(' → logprob: -2.098327398300171
    4. ' =' → logprob: -5.34832763671875
    5. 's' → logprob: -5.34832763671875
    6. '_=' → logprob: -5.59832763671875
    7. ' ' → logprob: -8.09832763671875
    8. ')' → logprob: -9.22332763671875
    9. ' (' → logprob: -9.59832763671875
    10. '()' → logprob: -10.09832763671875

Token 30: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.380904672667384e-05
    2. ' ' → logprob: -10.375033378601074
    3. '[' → logprob: -13.875033378601074
    4. ']' → logprob: -14.625033378601074
    5. '(' → logprob: -15.000033378601074
    6. '-' → logprob: -15.625033378601074
    7. '1' → logprob: -15.625033378601074
    8. 'False' → logprob: -16.12503433227539
    9. '   ' → logprob: -16.75003433227539
    10. '000' → logprob: -17.00003433227539

Token 31: ']
' (ID: 1592)
  Prédit: ']*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.4967105984687805
    2. ']' → logprob: -0.9967105984687805
    3. ']*(' → logprob: -3.9967105388641357
    4. ',' → logprob: -5.871710777282715
    5. ' for' → logprob: -6.996710777282715
    6. ' ]' → logprob: -8.746710777282715
    7. ']+' → logprob: -9.496710777282715
    8. 'for' → logprob: -11.371710777282715
    9. ']int' → logprob: -11.871710777282715
    10. '0' → logprob: -11.996710777282715

Token 32: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8283543586730957
    2. '0' → logprob: -1.3283543586730957
    3. ' for' → logprob: -1.3283543586730957
    4. ' ' → logprob: -4.203354358673096
    5. '[' → logprob: -4.953354358673096
    6. '+' → logprob: -5.703354358673096
    7. '=' → logprob: -5.953354358673096
    8. ',' → logprob: -6.828354358673096
    9. '*' → logprob: -6.953354358673096
    10. ']' → logprob: -7.078354358673096

Token 33: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2686108946800232
    2. 'i' → logprob: -1.893610954284668
    3. '_' → logprob: -3.143610954284668
    4. ' _' → logprob: -3.518610954284668
    5. ' c' → logprob: -5.018610954284668
    6. ' ' → logprob: -5.643610954284668
    7. 'c' → logprob: -6.518610954284668
    8. '_i' → logprob: -8.018610954284668
    9. '  ' → logprob: -9.768610954284668
    10. ' x' → logprob: -10.393610954284668

Token 34: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04319009929895401
    2. 'in' → logprob: -3.1681900024414062
    3. ' ' → logprob: -8.793190002441406
    4. '	in' → logprob: -11.418190002441406
    5. ',' → logprob: -11.918190002441406
    6. '+' → logprob: -12.543190002441406
    7. '  ' → logprob: -12.793190002441406
    8. 'range' → logprob: -13.168190002441406
    9. '```' → logprob: -13.168190002441406
    10. 'import' → logprob: -13.543190002441406

Token 35: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03810092806816101
    2. ' range' → logprob: -3.2881009578704834
    3. 's' → logprob: -9.913101196289062
    4. ' ' → logprob: -12.163101196289062
    5. ' s' → logprob: -13.163101196289062
    6. '(range' → logprob: -13.788101196289062
    7. '	range' → logprob: -14.413101196289062
    8. '  ' → logprob: -14.788101196289062
    9. '   ' → logprob: -15.413101196289062
    10. 'count' → logprob: -15.663101196289062

Token 36: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.16038000583648682
    2. '(' → logprob: -1.9103800058364868
    3. '(len' → logprob: -9.160380363464355
    4. ' (' → logprob: -10.160380363464355
    5. ' n' → logprob: -12.410380363464355
    6. ' ' → logprob: -12.535380363464355
    7. 'n' → logprob: -13.160380363464355
    8. '(
' → logprob: -14.660380363464355
    9. '(i' → logprob: -14.660380363464355
    10. '(s' → logprob: -15.285380363464355

Token 37: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1014532819390297
    2. '+' → logprob: -2.3514533042907715
    3. '-' → logprob: -7.2264533042907715
    4. '):
' → logprob: -8.101452827453613
    5. ')' → logprob: -9.351452827453613
    6. ' ):' → logprob: -9.726452827453613
    7. ':' → logprob: -10.976452827453613
    8. ' ' → logprob: -11.226452827453613
    9. ' +' → logprob: -11.476452827453613
    10. ']:' → logprob: -11.726452827453613

Token 38: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6372122168540955
    2. ' count' → logprob: -1.0122122764587402
    3. 'count' → logprob: -2.5122122764587402
    4. ' if' → logprob: -4.51221227645874
    5. '	count' → logprob: -5.26221227645874
    6. '   ' → logprob: -5.63721227645874
    7. '<|end|>' → logprob: -6.13721227645874
    8. '[' → logprob: -7.13721227645874
    9. ' s' → logprob: -7.13721227645874
    10. '    ' → logprob: -7.63721227645874

Token 39: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.3998285233974457
    2. ' count' → logprob: -1.149828553199768
    3. ' if' → logprob: -4.7748284339904785
    4. '   ' → logprob: -6.2748284339904785
    5. 'if' → logprob: -6.5248284339904785
    6. ' ' → logprob: -8.024828910827637
    7. '    ' → logprob: -8.024828910827637
    8. '	count' → logprob: -8.524828910827637
    9. '0' → logprob: -10.024828910827637
    10. 's' → logprob: -10.524828910827637

Token 40: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.03034600056707859
    2. '[-' → logprob: -3.530345916748047
    3. '.' → logprob: -7.655345916748047
    4. 'append' → logprob: -10.030345916748047
    5. '.extend' → logprob: -10.780345916748047
    6. '[' → logprob: -11.030345916748047
    7. '+' → logprob: -11.155345916748047
    8. '.app' → logprob: -12.030345916748047
    9. 'Append' → logprob: -12.405345916748047
    10. '[i' → logprob: -12.530345916748047

Token 41: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.0015146232908591628
    2. '(' → logprob: -6.626514434814453
    3. 'count' → logprob: -8.626514434814453
    4. ' count' → logprob: -12.751514434814453
    5. '((' → logprob: -13.251514434814453
    6. '(c' → logprob: -13.876514434814453
    7. '(s' → logprob: -14.001514434814453
    8. '(
' → logprob: -14.501514434814453
    9. ' (' → logprob: -14.626514434814453
    10. '=count' → logprob: -14.876514434814453

Token 42: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.10021097958087921
    2. '[i' → logprob: -2.3502109050750732
    3. '[' → logprob: -13.475211143493652
    4. '```' → logprob: -13.725211143493652
    5. '   ' → logprob: -14.725211143493652
    6. 'i' → logprob: -15.225211143493652
    7. ' [-' → logprob: -15.350211143493652
    8. '][-' → logprob: -15.725211143493652
    9. ' ' → logprob: -15.850211143493652
    10. '[
' → logprob: -15.975211143493652

Token 43: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00046510808169841766
    2. '+' → logprob: -8.375465393066406
    3. ' ' → logprob: -8.875465393066406
    4. ']+' → logprob: -10.000465393066406
    5. ']' → logprob: -11.000465393066406
    6. '()+' → logprob: -11.625465393066406
    7. ' +' → logprob: -12.125465393066406
    8. '   ' → logprob: -12.812965393066406
    9. ')+' → logprob: -13.562965393066406
    10. '(' → logprob: -13.937965393066406

Token 44: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04025379568338394
    2. '+s' → logprob: -3.9152538776397705
    3. ' +' → logprob: -4.165253639221191
    4. '+(' → logprob: -5.790253639221191
    5. ']+' → logprob: -7.790253639221191
    6. ')+(' → logprob: -8.790253639221191
    7. ')+' → logprob: -8.915253639221191
    8. '1' → logprob: -9.915253639221191
    9. ' +(' → logprob: -10.415253639221191
    10. '+[' → logprob: -10.540253639221191

Token 45: ' (' (ID: 350)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.7841112613677979
    2. '(s' → logprob: -0.9091112613677979
    3. '(' → logprob: -2.534111261367798
    4. '1' → logprob: -3.659111261367798
    5. '(i' → logprob: -3.784111261367798
    6. '(ord' → logprob: -5.159111022949219
    7. 'int' → logprob: -5.284111022949219
    8. ' (' → logprob: -6.784111022949219
    9. '(str' → logprob: -9.159111022949219
    10. '(len' → logprob: -9.534111022949219

Token 46: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04372198134660721
    2. 's' → logprob: -3.418721914291382
    3. ' ' → logprob: -5.168722152709961
    4. 'int' → logprob: -6.418722152709961
    5. '(s' → logprob: -6.668722152709961
    6. ' s' → logprob: -7.793722152709961
    7. '0' → logprob: -8.043722152709961
    8. '(' → logprob: -8.168722152709961
    9. ' int' → logprob: -8.918722152709961
    10. ' (' → logprob: -8.918722152709961

Token 47: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.04862211272120476
    2. 'if' → logprob: -3.0486221313476562
    3. 's' → logprob: -11.173622131347656
    4. ' ' → logprob: -12.048622131347656
    5. ')' → logprob: -12.923622131347656
    6. '   ' → logprob: -12.923622131347656
    7. '1' → logprob: -13.048622131347656
    8. '*(' → logprob: -13.673622131347656
    9. 'int' → logprob: -13.798622131347656
    10. '+' → logprob: -14.298622131347656

Token 48: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.2015693485736847
    2. 's' → logprob: -1.7015693187713623
    3. '(s' → logprob: -9.576569557189941
    4. ' ' → logprob: -9.826569557189941
    5. '  ' → logprob: -11.701569557189941
    6. ''s' → logprob: -11.951569557189941
    7. ' (' → logprob: -12.201569557189941
    8. '   ' → logprob: -12.451569557189941
    9. '(' → logprob: -13.451569557189941
    10. '	s' → logprob: -13.701569557189941

Token 49: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.180258191714529e-06
    2. '[' → logprob: -12.000008583068848
    3. '[I' → logprob: -13.875008583068848
    4. ' [' → logprob: -14.625008583068848
    5. '==' → logprob: -16.12500762939453
    6. '[
' → logprob: -16.50000762939453
    7. 'i' → logprob: -16.62500762939453
    8. '```' → logprob: -17.00000762939453
    9. '[a' → logprob: -17.12500762939453
    10. '[int' → logprob: -17.50000762939453

Token 50: ']=='' (ID: 71177)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.08147075772285461
    2. '=='' → logprob: -2.7064707279205322
    3. ' ==' → logprob: -5.456470966339111
    4. ']==' → logprob: -6.206470966339111
    5. '=' → logprob: -6.331470966339111
    6. ']' → logprob: -6.706470966339111
    7. ']=='' → logprob: -6.831470966339111
    8. '==
' → logprob: -8.331470489501953
    9. '=="' → logprob: -8.456470489501953
    10. '!=' → logprob: -9.081470489501953

Token 51: 'W' (ID: 54)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6910910606384277
    2. '1' → logprob: -1.8160910606384277
    3. '('' → logprob: -2.4410910606384277
    4. 'a' → logprob: -2.9410910606384277
    5. '#' → logprob: -3.3160910606384277
    6. 'I' → logprob: -3.8160910606384277
    7. 'R' → logprob: -3.8160910606384277
    8. 'T' → logprob: -4.441091060638428
    9. 'B' → logprob: -4.441091060638428
    10. '0' → logprob: -4.691091060638428

Token 52: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00011689399980241433
    2. ' '' → logprob: -9.750117301940918
    3. '')' → logprob: -10.625117301940918
    4. ''A' → logprob: -12.000117301940918
    5. ')'' → logprob: -12.625117301940918
    6. ''T' → logprob: -12.750117301940918
    7. ''E' → logprob: -13.000117301940918
    8. ''S' → logprob: -13.250117301940918
    9. ''O' → logprob: -13.250117301940918
    10. ''i' → logprob: -13.500117301940918

Token 53: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.058603327721357346
    2. 'else' → logprob: -3.183603286743164
    3. ')' → logprob: -4.183603286743164
    4. ' ' → logprob: -9.183603286743164
    5. ' )' → logprob: -10.058603286743164
    6. ''' → logprob: -10.683603286743164
    7. '')' → logprob: -11.058603286743164
    8. '	else' → logprob: -11.058603286743164
    9. '```' → logprob: -11.558603286743164
    10. '))' → logprob: -11.683603286743164

Token 54: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14268042147159576
    2. ' ' → logprob: -2.0176804065704346
    3. ' ' → logprob: -13.017680168151855
    4. '1' → logprob: -13.142680168151855
    5. '-' → logprob: -14.892680168151855
    6. ')' → logprob: -15.267680168151855
    7. '   ' → logprob: -15.705180168151855
    8. '  ' → logprob: -16.142681121826172
    9. ' -' → logprob: -16.705181121826172
    10. '2' → logprob: -16.767681121826172

Token 55: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0022619483061134815
    2. ' ' → logprob: -6.127262115478516
    3. '-' → logprob: -9.627262115478516
    4. '1' → logprob: -11.752262115478516
    5. ' -' → logprob: -13.627262115478516
    6. ')' → logprob: -13.877262115478516
    7. '   ' → logprob: -15.064762115478516
    8. '  ' → logprob: -16.002262115478516
    9. ' ' → logprob: -16.439762115478516
    10. 'o' → logprob: -16.877262115478516

Token 56: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.10024257749319077
    2. ')' → logprob: -2.3502426147460938
    3. ')))' → logprob: -11.100242614746094
    4. '))
' → logprob: -11.600242614746094
    5. ' ))' → logprob: -11.975242614746094
    6. ')
' → logprob: -13.100242614746094
    7. ' )' → logprob: -13.975242614746094
    8. '),' → logprob: -14.100242614746094
    9. ''))' → logprob: -14.600242614746094
    10. '1' → logprob: -15.225242614746094

Token 57: 'def' (ID: 1314)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -1.1550307273864746
    2. 'ans' → logprob: -1.5300307273864746
    3. 'dp' → logprob: -1.6550307273864746
    4. 'result' → logprob: -2.0300307273864746
    5. 'res' → logprob: -2.7800307273864746
    6. 'for' → logprob: -3.4050307273864746
    7. 'print' → logprob: -4.780030727386475
    8. 'min' → logprob: -5.155030727386475
    9. 'left' → logprob: -5.280030727386475
    10. 'm' → logprob: -5.280030727386475

Token 58: ' calc' (ID: 25691)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -1.2301628589630127
    2. ' calculate' → logprob: -1.3551628589630127
    3. ' solve' → logprob: -1.4801628589630127
    4. ' count' → logprob: -3.2301628589630127
    5. ' find' → logprob: -3.7301628589630127
    6. ' cost' → logprob: -3.8551628589630127
    7. ' min' → logprob: -3.8551628589630127
    8. ' check' → logprob: -4.605162620544434
    9. ' minimal' → logprob: -4.605162620544434
    10. ' get' → logprob: -4.980162620544434

Token 59: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.12528972327709198
    2. '(pos' → logprob: -2.7502896785736084
    3. '(' → logprob: -3.6252896785736084
    4. '(x' → logprob: -4.1252899169921875
    5. '(l' → logprob: -5.6252899169921875
    6. '(position' → logprob: -6.1252899169921875
    7. '(prefix' → logprob: -6.7502899169921875
    8. '(idx' → logprob: -7.3752899169921875
    9. '(left' → logprob: -7.6252899169921875
    10. '(index' → logprob: -7.7502899169921875

Token 60: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006463713478296995
    2. ')' → logprob: -5.131463527679443
    3. ',' → logprob: -8.506464004516602
    4. ' ):' → logprob: -9.256464004516602
    5. '):
' → logprob: -9.631464004516602
    6. ':' → logprob: -10.631464004516602
    7. ',j' → logprob: -10.881464004516602
    8. 'j' → logprob: -11.006464004516602
    9. '=' → logprob: -11.006464004516602
    10. '_' → logprob: -11.881464004516602

Token 61: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.09548581391572952
    2. 'return' → logprob: -3.2204859256744385
    3. ' total' → logprob: -4.595485687255859
    4. '   ' → logprob: -4.720485687255859
    5. ' cost' → logprob: -5.095485687255859
    6. ' i' → logprob: -5.720485687255859
    7. ' left' → logprob: -6.095485687255859
    8. ' if' → logprob: -6.095485687255859
    9. ' ans' → logprob: -6.595485687255859
    10. ' ' → logprob: -6.845485687255859

Token 62: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7372081875801086
    2. 'return' → logprob: -0.7372081875801086
    3. 'left' → logprob: -4.487208366394043
    4. ' left' → logprob: -4.612208366394043
    5. 'l' → logprob: -5.737208366394043
    6. ' l' → logprob: -5.862208366394043
    7. 'ret' → logprob: -5.987208366394043
    8. ' if' → logprob: -6.362208366394043
    9. ' total' → logprob: -6.862208366394043
    10. 'r' → logprob: -6.862208366394043

Token 63: ' object' (ID: 2817)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4467742443084717
    2. ' return' → logprob: -1.1967742443084717
    3. 'left' → logprob: -4.196774482727051
    4. 'i' → logprob: -4.446774482727051
    5. ' i' → logprob: -4.946774482727051
    6. ' left' → logprob: -5.071774482727051
    7. ' if' → logprob: -5.696774482727051
    8. 'if' → logprob: -5.821774482727051
    9. 'count' → logprob: -5.946774482727051
    10. 'l' → logprob: -6.946774482727051

Token 64: '-oriented' (ID: 49951)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8428032994270325
    2. 's' → logprob: -2.2178032398223877
    3. '=' → logprob: -2.3428032398223877
    4. ')' → logprob: -2.3428032398223877
    5. ' return' → logprob: -2.5928032398223877
    6. ' =' → logprob: -3.0928032398223877
    7. '   ' → logprob: -3.4678032398223877
    8. 'def' → logprob: -4.592803478240967
    9. 'left' → logprob: -4.967803478240967
    10. 'i' → logprob: -5.092803478240967

Token 65: ' local' (ID: 2698)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 66: ' sc' (ID: 1460)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.5295884609222412
    2. ' method' → logprob: -2.279588460922241
    3. 'def' → logprob: -2.529588460922241
    4. '   ' → logprob: -2.654588460922241
    5. 'method' → logprob: -2.654588460922241
    6. ' def' → logprob: -2.779588460922241
    7. '    ' → logprob: -2.779588460922241
    8. 'return' → logprob: -2.779588460922241
    9. ' variable' → logprob: -2.779588460922241
    10. ' i' → logprob: -3.404588460922241

Token 67: 'oping' (ID: 49497)
  Prédit: 'ope'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ope' → logprob: -0.0006834837258793414
    2. 'op' → logprob: -8.375683784484863
    3. 'ale' → logprob: -8.500683784484863
    4. 'ore' → logprob: -9.625683784484863
    5. '   ' → logprob: -9.750683784484863
    6. 'oping' → logprob: -10.125683784484863
    7. 'oped' → logprob: -10.875683784484863
    8. 'ode' → logprob: -11.000683784484863
    9. '```' → logprob: -11.125683784484863
    10. 'opes' → logprob: -12.125683784484863

Token 68: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1366117000579834
    2. '   ' → logprob: -1.3866117000579834
    3. '):' → logprob: -2.0116117000579834
    4. ':' → logprob: -2.2616117000579834
    5. '(' → logprob: -2.7616117000579834
    6. '(i' → logprob: -3.1366117000579834
    7. '<|end|>' → logprob: -3.8866117000579834
    8. '(n' → logprob: -4.0116119384765625
    9. ' (' → logprob: -5.0116119384765625
    10. ' ' → logprob: -5.0116119384765625

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11604495346546173
    2. ')' → logprob: -3.1160449981689453
    3. ' return' → logprob: -3.2410449981689453
    4. 'return' → logprob: -4.866044998168945
    5. '<|end|>' → logprob: -5.241044998168945
    6. '    ' → logprob: -5.616044998168945
    7. ' ' → logprob: -6.366044998168945
    8. ':' → logprob: -6.616044998168945
    9. ' (' → logprob: -7.366044998168945
    10. '(' → logprob: -7.366044998168945

Token 70: ' class' (ID: 744)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3636242747306824
    2. ' return' → logprob: -2.238624334335327
    3. 'left' → logprob: -2.238624334335327
    4. ' left' → logprob: -3.738624334335327
    5. 'if' → logprob: -4.363624095916748
    6. 'l' → logprob: -4.738624095916748
    7. 'ret' → logprob: -5.238624095916748
    8. 'res' → logprob: -5.238624095916748
    9. '   ' → logprob: -5.488624095916748
    10. 'right' → logprob: -5.488624095916748

Token 71: ' Tmp' (ID: 196850)
  Prédit: ' Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Solution' → logprob: -0.4016053080558777
    2. ' Solver' → logprob: -2.1516053676605225
    3. ' Calculator' → logprob: -2.7766053676605225
    4. ' Counter' → logprob: -3.4016053676605225
    5. ' Helper' → logprob: -3.7766053676605225
    6. ' Score' → logprob: -4.151605129241943
    7. ' Data' → logprob: -4.276605129241943
    8. ' Result' → logprob: -5.151605129241943
    9. ' Point' → logprob: -5.276605129241943
    10. ' Answer' → logprob: -5.401605129241943

Token 72: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00631210021674633
    2. ':
' → logprob: -5.256311893463135
    3. '):' → logprob: -8.256312370300293
    4. '   ' → logprob: -8.381312370300293
    5. '(object' → logprob: -8.881312370300293
    6. '(' → logprob: -9.256312370300293
    7. '       ' → logprob: -9.381312370300293
    8. '    ' → logprob: -9.631312370300293
    9. ' :' → logprob: -9.881312370300293
    10. '(T' → logprob: -10.131312370300293

Token 73: ' pass' (ID: 1853)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028914691880345345
    2. '<|end|>' → logprob: -3.7789146900177
    3. '   ' → logprob: -6.903914928436279
    4. ' pass' → logprob: -7.028914928436279
    5. '        
' → logprob: -7.278914928436279
    6. ' def' → logprob: -7.403914928436279
    7. '
' → logprob: -7.653914928436279
    8. 'def' → logprob: -7.903914928436279
    9. 'pass' → logprob: -8.153914451599121
    10. '<|end|>' → logprob: -8.528914451599121

Token 74: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 75: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 76: ' tmp' (ID: 8919)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2157258242368698
    2. 'tmp' (adapté à ' tmp') → logprob: -3.340725898742676
    3. 't' → logprob: -3.715725898742676
    4. '<|end|>' → logprob: -3.840725898742676
    5. '    ' → logprob: -4.215725898742676
    6. ' ' → logprob: -4.590725898742676
    7. '  ' → logprob: -4.715725898742676
    8. '       ' → logprob: -4.840725898742676
    9. 'n' → logprob: -4.840725898742676
    10. 'count' → logprob: -5.090725898742676

Token 77: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21518899500370026
    2. ' =' → logprob: -2.340188980102539
    3. '.' → logprob: -2.465188980102539
    4. '.=' → logprob: -4.965188980102539
    5. '.tmp' → logprob: -6.215188980102539
    6. '<|end|>' → logprob: -7.215188980102539
    7. '=None' → logprob: -7.840188980102539
    8. ' .' → logprob: -8.090188980102539
    9. 'tmp' → logprob: -8.090188980102539
    10. '.T' → logprob: -8.340188980102539

Token 78: ' Tmp' (ID: 196850)
  Prédit: 'Tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tmp' → logprob: -0.3133000433444977
    2. ' Tmp' → logprob: -1.3133000135421753
    3. '[' → logprob: -11.938300132751465
    4. '_tmp' → logprob: -12.313300132751465
    5. 'count' → logprob: -12.313300132751465
    6. ' ' → logprob: -12.438300132751465
    7. '[]' → logprob: -12.813300132751465
    8. '0' → logprob: -13.063300132751465
    9. 'tmp' → logprob: -13.188300132751465
    10. ' [' → logprob: -13.188300132751465

Token 79: '()
' (ID: 1234)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24272269010543823
    2. '
' → logprob: -2.367722749710083
    3. '<|end|>' → logprob: -2.367722749710083
    4. '    
' → logprob: -4.617722511291504
    5. '<|end|>' → logprob: -5.242722511291504
    6. 'tmp' → logprob: -5.242722511291504
    7. '  
' → logprob: -6.367722511291504
    8. ' ' → logprob: -6.992722511291504
    9. ' 
' → logprob: -7.242722511291504
    10. ' tmp' → logprob: -7.742722511291504

Token 81: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' (adapté à ' tmp') → logprob: -0.1156378909945488
    2. ' tmp' → logprob: -2.61563777923584
    3. '   ' → logprob: -3.36563777923584
    4. '
' → logprob: -8.11563777923584
    5. 'return' → logprob: -8.61563777923584
    6. '	tmp' → logprob: -8.61563777923584
    7. '    
' → logprob: -8.86563777923584
    8. ' ' → logprob: -9.24063777923584
    9. ' return' → logprob: -9.49063777923584
    10. 'count' → logprob: -9.61563777923584

Token 82: '.l' (ID: 1000)
  Prédit: '.count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.07312097400426865
    2. '.i' → logprob: -3.0731210708618164
    3. '.w' → logprob: -4.448121070861816
    4. '.' → logprob: -5.948121070861816
    5. '.n' → logprob: -6.073121070861816
    6. '.x' → logprob: -6.948121070861816
    7. 'count' → logprob: -7.198121070861816
    8. '.s' → logprob: -7.448121070861816
    9. '.W' → logprob: -7.448121070861816
    10. '.idx' → logprob: -7.698121070861816

Token 83: ' =' (ID: 314)
  Prédit: 'eft'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eft' → logprob: -0.5862917900085449
    2. '=' → logprob: -1.211291790008545
    3. ' =' → logprob: -2.836291790008545
    4. 'e' → logprob: -4.086291790008545
    5. 'count' → logprob: -4.211291790008545
    6. '=count' → logprob: -4.461291790008545
    7. 'ef' → logprob: -4.711291790008545
    8. '=i' → logprob: -5.336291790008545
    9. 'ist' → logprob: -5.336291790008545
    10. 'ength' → logprob: -5.461291790008545

Token 84: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.09866548329591751
    2. 'i' → logprob: -2.598665475845337
    3. ' count' → logprob: -4.348665714263916
    4. ' i' → logprob: -5.723665714263916
    5. '0' → logprob: -6.598665714263916
    6. 'max' → logprob: -7.723665714263916
    7. 'n' → logprob: -8.098665237426758
    8. ' ' → logprob: -8.598665237426758
    9. 'len' → logprob: -8.848665237426758
    10. '1' → logprob: -9.286165237426758

Token 85: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0016453108983114362
    2. '[' → logprob: -6.501645088195801
    3. ' [' → logprob: -10.0016450881958
    4. '[-' → logprob: -10.1266450881958
    5. ' ' → logprob: -10.8766450881958
    6. 'i' → logprob: -11.2516450881958
    7. '[n' → logprob: -12.1266450881958
    8. '  ' → logprob: -13.2516450881958
    9. '[:' → logprob: -13.3766450881958
    10. '   ' → logprob: -13.5016450881958

Token 86: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03822142258286476
    2. ']
' → logprob: -3.5382213592529297
    3. '-' → logprob: -5.28822135925293
    4. ']-' → logprob: -6.28822135925293
    5. ' ]' → logprob: -7.03822135925293
    6. ']+' → logprob: -8.28822135925293
    7. ' ]
' → logprob: -9.41322135925293
    8. ' -' → logprob: -9.53822135925293
    9. ']

' → logprob: -9.53822135925293
    10. ')' → logprob: -10.41322135925293

Token 87: '   ' (ID: 271)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.19603824615478516
    2. '   ' → logprob: -1.9460382461547852
    3. ' tmp' → logprob: -3.446038246154785
    4. '	tmp' → logprob: -6.321038246154785
    5. ' ' → logprob: -7.571038246154785
    6. '
' → logprob: -8.446038246154785
    7. 'return' → logprob: -9.196038246154785
    8. '  ' → logprob: -9.321038246154785
    9. ',tmp' → logprob: -9.321038246154785
    10. '    
' → logprob: -9.446038246154785

Token 88: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' (adapté à ' tmp') → logprob: -0.4248296022415161
    2. '   ' → logprob: -1.4248296022415161
    3. ' tmp' → logprob: -2.2998294830322266
    4. '	tmp' → logprob: -6.799829483032227
    5. ' ' → logprob: -6.924829483032227
    6. '  ' → logprob: -7.549829483032227
    7. '    ' → logprob: -8.049829483032227
    8. '    
' → logprob: -8.299829483032227
    9. 'w' → logprob: -8.674829483032227
    10. '
' → logprob: -8.799829483032227

Token 89: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.6714727878570557
    2. '_r' → logprob: -1.0464727878570557
    3. 'r' → logprob: -2.1714727878570557
    4. '.' → logprob: -5.421472549438477
    5. '<|end|>' → logprob: -6.046472549438477
    6. '.c' → logprob: -6.546472549438477
    7. '_' → logprob: -6.671472549438477
    8. '.n' → logprob: -6.671472549438477
    9. ' ' → logprob: -6.796472549438477
    10. '2' → logprob: -6.796472549438477

Token 90: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18085980415344238
    2. ' =' → logprob: -1.8058598041534424
    3. '=n' → logprob: -7.555859565734863
    4. '=count' → logprob: -7.805859565734863
    5. ']' → logprob: -9.430859565734863
    6. '=len' → logprob: -9.930859565734863
    7. ' ' → logprob: -11.430859565734863
    8. ']=' → logprob: -11.430859565734863
    9. '=[' → logprob: -12.055859565734863
    10. '=s' → logprob: -12.680859565734863

Token 91: ' n' (ID: 297)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.18484129011631012
    2. ' count' → logprob: -1.809841275215149
    3. '(count' → logprob: -5.434841156005859
    4. ' (' → logprob: -7.934841156005859
    5. 'len' → logprob: -9.55984115600586
    6. '(' → logprob: -10.05984115600586
    7. ' ' → logprob: -10.05984115600586
    8. '[count' → logprob: -10.30984115600586
    9. '   ' → logprob: -10.43484115600586
    10. ' len' → logprob: -10.55984115600586

Token 92: '-i' (ID: 18499)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12790369987487793
    2. '-' → logprob: -2.127903699874878
    3. '-count' → logprob: -7.127903938293457
    4. ' ' → logprob: -9.377903938293457
    5. '-t' → logprob: -10.252903938293457
    6. '-s' → logprob: -11.127903938293457
    7. '   ' → logprob: -11.252903938293457
    8. '  ' → logprob: -12.377903938293457
    9. '-n' → logprob: -12.502903938293457
    10. '-c' → logprob: -13.002903938293457

Token 93: '-(' (ID: 18825)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5547718405723572
    2. '   ' → logprob: -1.179771900177002
    3. '-' → logprob: -2.679771900177002
    4. ' ' → logprob: -3.929771900177002
    5. '-count' → logprob: -5.054771900177002
    6. '
' → logprob: -5.179771900177002
    7. '-return' → logprob: -5.679771900177002
    8. ' return' → logprob: -6.179771900177002
    9. '<|end|>' → logprob: -6.304771900177002
    10. '  ' → logprob: -6.679771900177002

Token 94: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.03610164299607277
    2. ' count' → logprob: -3.4111015796661377
    3. '(count' → logprob: -6.161101818084717
    4. ' (' → logprob: -8.536101341247559
    5. ' ' → logprob: -9.911101341247559
    6. ')' → logprob: -10.161101341247559
    7. '[count' → logprob: -11.036101341247559
    8. '   ' → logprob: -11.661101341247559
    9. '  ' → logprob: -12.036101341247559
    10. 'c' → logprob: -12.286101341247559

Token 95: '[n' (ID: 15433)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.012874653562903404
    2. '[n' → logprob: -4.387874603271484
    3. '][-' → logprob: -8.887874603271484
    4. '[' → logprob: -9.262874603271484
    5. ']' → logprob: -9.887874603271484
    6. '[i' → logprob: -10.137874603271484
    7. ' [-' → logprob: -11.887874603271484
    8. '[N' → logprob: -12.137874603271484
    9. '][' → logprob: -12.262874603271484
    10. '[len' → logprob: -12.512874603271484

Token 96: ']-' (ID: 27107)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3608541190624237
    2. ']-' → logprob: -2.110854148864746
    3. '[-' → logprob: -2.485854148864746
    4. '-' → logprob: -3.610854148864746
    5. '][' → logprob: -3.860854148864746
    6. '[n' → logprob: -3.860854148864746
    7. '][-' → logprob: -4.235854148864746
    8. '[' → logprob: -4.985854148864746
    9. '[i' → logprob: -5.235854148864746
    10. ' -' → logprob: -7.235854148864746

Token 97: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0030339211225509644
    2. '[count' → logprob: -6.3780341148376465
    3. ' count' → logprob: -7.2530341148376465
    4. ')' → logprob: -8.003033638000488
    5. 'tmp' → logprob: -8.878033638000488
    6. '(count' → logprob: -10.628033638000488
    7. '.count' → logprob: -10.628033638000488
    8. ' ' → logprob: -10.878033638000488
    9. ']' → logprob: -11.003033638000488
    10. '[' → logprob: -11.003033638000488

Token 98: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003187810070812702
    2. '[' → logprob: -8.25031852722168
    3. ' [' → logprob: -10.62531852722168
    4. '[
' → logprob: -11.00031852722168
    5. '][' → logprob: -11.50031852722168
    6. '[I' → logprob: -13.25031852722168
    7. ']' → logprob: -13.75031852722168
    8. ')[' → logprob: -14.12531852722168
    9. ' ' → logprob: -14.50031852722168
    10. '}[' → logprob: -15.12531852722168

Token 99: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.02151600457727909
    2. ')' → logprob: -4.271515846252441
    3. '])
' → logprob: -5.146515846252441
    4. ' ])' → logprob: -7.021515846252441
    5. ')
' → logprob: -8.396515846252441
    6. ']' → logprob: -9.146515846252441
    7. ' )' → logprob: -9.271515846252441
    8. ')])' → logprob: -9.896515846252441
    9. ''])' → logprob: -10.646515846252441
    10. ' ])
' → logprob: -10.646515846252441

Token 100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008704513311386108
    2. '
' → logprob: -5.258704662322998
    3. '    
' → logprob: -6.133704662322998
    4. '<|end|>' → logprob: -7.633704662322998
    5. ' return' → logprob: -8.13370418548584
    6. 'return' → logprob: -8.50870418548584
    7. ')' → logprob: -8.88370418548584
    8. '  
' → logprob: -10.13370418548584
    9. '    ' → logprob: -10.88370418548584
    10. '	return' → logprob: -11.00870418548584

Token 101: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014839778654277325
    2. 'return' (adapté à ' return') → logprob: -4.5148396492004395
    3. ' return' → logprob: -6.5148396492004395
    4. '
' → logprob: -6.5148396492004395
    5. '    
' → logprob: -7.3898396492004395
    6. '<|end|>' → logprob: -9.889840126037598
    7. '  
' → logprob: -10.389840126037598
    8. '  ' → logprob: -10.764840126037598
    9. '    ' → logprob: -11.014840126037598
    10. '	return' → logprob: -11.139840126037598

Token 102: ' tmp' (ID: 8919)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.9444782137870789
    2. 'max' → logprob: -1.0694782733917236
    3. 'tmp' → logprob: -1.5694782733917236
    4. ' min' → logprob: -3.5694782733917236
    5. ' max' → logprob: -3.6944782733917236
    6. ' tmp' → logprob: -5.0694780349731445
    7. '(tmp' → logprob: -9.444478034973145
    8. ' ' → logprob: -9.694478034973145
    9. '(min' → logprob: -9.694478034973145
    10. '[tmp' → logprob: -10.069478034973145

Token 103: '.l' (ID: 1000)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 104: '+' (ID: 10)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 105: 'tmp' (ID: 11669)
  Prédit: 'tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.001503790495917201
    2. ' tmp' → logprob: -6.501503944396973
    3. '	tmp' → logprob: -14.376503944396973
    4. '.tmp' → logprob: -14.876503944396973
    5. '/tmp' → logprob: -15.251503944396973
    6. ' ' → logprob: -15.376503944396973
    7. '$tmp' → logprob: -16.376502990722656
    8. '(tmp' → logprob: -16.876502990722656
    9. '[tmp' → logprob: -17.251502990722656
    10. '   ' → logprob: -17.626502990722656

Token 106: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.006508601829409599
    2. '.' → logprob: -5.131508827209473
    3. 'r' → logprob: -7.506508827209473
    4. ' .' → logprob: -11.506508827209473
    5. '`.' → logprob: -11.756508827209473
    6. '".' → logprob: -13.131508827209473
    7. '```' → logprob: -13.381508827209473
    8. '.l' → logprob: -13.506508827209473
    9. ' r' → logprob: -13.631508827209473
    10. ' ' → logprob: -13.756508827209473

Token 107: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.441307008266449
    2. ' 
' → logprob: -2.4413070678710938
    3. '\n' → logprob: -2.4413070678710938
    4. '<|end|>' → logprob: -2.5663070678710938
    5. 'max' → logprob: -3.4413070678710938
    6. '  
' → logprob: -3.6913070678710938
    7. 'print' → logprob: -4.316307067871094
    8. 'for' → logprob: -5.191307067871094
    9. 'n' → logprob: -5.316307067871094
    10. 'result' → logprob: -5.441307067871094

Token 108: 'i' (ID: 72)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.29739171266555786
    2. 'ans' → logprob: -1.922391653060913
    3. 'result' → logprob: -3.047391653060913
    4. 'res' → logprob: -3.672391653060913
    5. 'print' → logprob: -3.922391653060913
    6. 'answer' → logprob: -5.047391891479492
    7. '_' → logprob: -5.547391891479492
    8. 'min' → logprob: -6.297391891479492
    9. ' ans' → logprob: -6.297391891479492
    10. 'for' → logprob: -6.797391891479492

Token 109: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4821404814720154
    2. '+' → logprob: -1.4821405410766602
    3. ' ' → logprob: -2.60714054107666
    4. '<|end|>' → logprob: -4.23214054107666
    5. ' +' → logprob: -4.48214054107666
    6. 'nd' → logprob: -4.48214054107666
    7. '=' → logprob: -5.10714054107666
    8. ' n' → logprob: -5.10714054107666
    9. ' =' → logprob: -5.23214054107666
    10. ' +=' → logprob: -5.48214054107666

Token 110: ' res' (ID: 694)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.6095575094223022
    2. ' n' → logprob: -1.7345575094223022
    3. 'max' → logprob: -1.8595575094223022
    4. ' ' → logprob: -2.109557628631592
    5. ' max' → logprob: -2.734557628631592
    6. 'j' → logprob: -2.859557628631592
    7. ' j' → logprob: -3.234557628631592
    8. 'i' → logprob: -3.484557628631592
    9. ' =' → logprob: -3.609557628631592
    10. ' i' → logprob: -3.609557628631592

Token 111: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11304282397031784
    2. ' =' → logprob: -2.2380428314208984
    3. ' ' → logprob: -9.113042831420898
    4. ',' → logprob: -9.238042831420898
    5. '=
' → logprob: -12.738042831420898
    6. '=i' → logprob: -12.863042831420898
    7. '<|end|>' → logprob: -13.238042831420898
    8. ' ,' → logprob: -13.988042831420898
    9. '=

' → logprob: -13.988042831420898
    10. '  ' → logprob: -14.988042831420898

Token 112: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009920056909322739
    2. ' ' → logprob: -4.634920120239258
    3. '1' → logprob: -9.259920120239258
    4. 'min' → logprob: -10.509920120239258
    5. 'max' → logprob: -11.384920120239258
    6. '(' → logprob: -11.634920120239258
    7. 'n' → logprob: -11.884920120239258
    8. '-' → logprob: -12.134920120239258
    9. ' -' → logprob: -13.384920120239258
    10. ' min' → logprob: -13.509920120239258

Token 113: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0014658194268122315
    2. ' ' → logprob: -7.376465797424316
    3. 'min' → logprob: -7.626465797424316
    4. '1' → logprob: -8.876465797424316
    5. '-' → logprob: -9.376465797424316
    6. 'max' → logprob: -9.376465797424316
    7. 'n' → logprob: -10.876465797424316
    8. '(' → logprob: -11.251465797424316
    9. ' min' → logprob: -12.751465797424316
    10. '(n' → logprob: -13.501465797424316

Token 114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03793739154934883
    2. '
' → logprob: -4.162937164306641
    3. '<|end|>' → logprob: -4.287937164306641
    4. '<|end|>' → logprob: -5.662937164306641
    5. ',i' → logprob: -6.662937164306641
    6. ' ,' → logprob: -6.912937164306641
    7. ',
' → logprob: -7.287937164306641
    8. ',n' → logprob: -7.912937164306641
    9. ',len' → logprob: -8.66293716430664
    10. ',None' → logprob: -8.91293716430664

Token 115: ' n' (ID: 297)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.4514244496822357
    2. 'n' → logprob: -2.0764243602752686
    3. '0' → logprob: -2.7014243602752686
    4. 'calc' → logprob: -2.7014243602752686
    5. 'float' → logprob: -3.0764243602752686
    6. ' ' → logprob: -3.5764243602752686
    7. 'max' → logprob: -5.326424598693848
    8. '100' → logprob: -5.326424598693848
    9. '-' → logprob: -5.326424598693848
    10. ' n' → logprob: -5.451424598693848

Token 116: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06858862936496735
    2. '<|end|>' → logprob: -3.6935887336730957
    3. 'for' → logprob: -3.9435887336730957
    4. 'while' → logprob: -4.443588733673096
    5. ' for' → logprob: -5.818588733673096
    6. '\n' → logprob: -5.943588733673096
    7. ' while' → logprob: -6.193588733673096
    8. '<|end|>' → logprob: -7.443588733673096
    9. '+' → logprob: -7.693588733673096
    10. '  
' → logprob: -7.943588733673096

Token 117: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.20158874988555908
    2. 'for' → logprob: -1.701588749885559
    3. ' while' → logprob: -9.32658863067627
    4. '
' → logprob: -9.57658863067627
    5. ' for' → logprob: -11.07658863067627
    6. '```' → logprob: -14.20158863067627
    7. 'While' → logprob: -14.95158863067627
    8. '<|end|>' → logprob: -15.95158863067627
    9. '+' → logprob: -16.201589584350586
    10. 'i' → logprob: -16.451589584350586

Token 118: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.12694354355335236
    2. 'i' → logprob: -2.126943588256836
    3. ' True' → logprob: -12.001943588256836
    4. '(i' → logprob: -12.376943588256836
    5. 'True' → logprob: -12.751943588256836
    6. ' ' → logprob: -13.501943588256836
    7. '	i' → logprob: -14.501943588256836
    8. '   ' → logprob: -15.876943588256836
    9. ' ' → logprob: -16.626943588256836
    10. ' not' → logprob: -17.001943588256836

Token 119: '<=' (ID: 16672)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.2820207178592682
    2. '<n' → logprob: -1.5320206880569458
    3. '<' → logprob: -3.5320208072662354
    4. '<=' → logprob: -8.532020568847656
    5. ' <=' → logprob: -8.782020568847656
    6. '<len' → logprob: -10.032020568847656
    7. ' ' → logprob: -13.657020568847656
    8. ' n' → logprob: -14.407020568847656
    9. ' <
' → logprob: -14.907020568847656
    10. '<num' → logprob: -15.532020568847656

Token 120: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0001398929744027555
    2. ' n' → logprob: -8.875140190124512
    3. ' ' → logprob: -17.250139236450195
    4. '	n' → logprob: -17.750139236450195
    5. '```' → logprob: -18.875139236450195
    6. '   ' → logprob: -19.500139236450195
    7. '_n' → logprob: -19.875139236450195
    8. '(n' → logprob: -20.500139236450195
    9. '
' → logprob: -20.500139236450195
    10. 'len' → logprob: -21.875139236450195

Token 121: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5237560868263245
    2. ':
' → logprob: -0.8987560868263245
    3. ' :
' → logprob: -8.27375602722168
    4. '   ' → logprob: -8.52375602722168
    5. ' :' → logprob: -9.64875602722168
    6. ' and' → logprob: -10.02375602722168
    7. ':

' → logprob: -10.89875602722168
    8. '+' → logprob: -11.77375602722168
    9. ',' → logprob: -11.89875602722168
    10. ':
' → logprob: -12.02375602722168

Token 122: '   ' (ID: 271)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.09358445554971695
    2. '   ' → logprob: -2.8435845375061035
    3. 'res' → logprob: -3.5935845375061035
    4. ' if' → logprob: -6.0935845375061035
    5. '<|end|>' → logprob: -7.0935845375061035
    6. '
' → logprob: -8.843584060668945
    7. '    
' → logprob: -9.343584060668945
    8. '	res' → logprob: -9.718584060668945
    9. '<|end|>' → logprob: -9.843584060668945
    10. 'if' → logprob: -10.093584060668945

Token 123: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.41562119126319885
    2. ' res' → logprob: -1.7906211614608765
    3. ' if' → logprob: -3.165621280670166
    4. '
' → logprob: -3.415621280670166
    5. 'if' → logprob: -3.540621280670166
    6. 'val' → logprob: -3.540621280670166
    7. 'tmp' → logprob: -4.040621280670166
    8. 'r' → logprob: -5.165621280670166
    9. ' val' → logprob: -5.290621280670166
    10. 'v' → logprob: -5.790621280670166

Token 124: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3872835338115692
    2. '=' → logprob: -1.1372835636138916
    3. '>' → logprob: -8.262283325195312
    4. ' >' → logprob: -9.387283325195312
    5. '=min' → logprob: -9.637283325195312
    6. '=max' → logprob: -12.512283325195312
    7. 'min' → logprob: -14.262283325195312
    8. '   ' → logprob: -14.887283325195312
    9. ' ' → logprob: -15.637283325195312
    10. '>=' → logprob: -15.887283325195312

Token 125: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.048589304089546204
    2. ' min' → logprob: -3.0485892295837402
    3. 'calc' → logprob: -14.173589706420898
    4. 'res' → logprob: -14.548589706420898
    5. ' res' → logprob: -15.423589706420898
    6. '(min' → logprob: -15.673589706420898
    7. '	min' → logprob: -15.673589706420898
    8. 'max' → logprob: -15.798589706420898
    9. '=min' → logprob: -16.9235897064209
    10. '[min' → logprob: -17.4235897064209

Token 126: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.003179855877533555
    2. '(' → logprob: -5.753180027008057
    3. 'res' → logprob: -13.878179550170898
    4. ' res' → logprob: -14.253179550170898
    5. ' (' → logprob: -14.503179550170898
    6. '(
' → logprob: -16.5031795501709
    7. '	res' → logprob: -18.7531795501709
    8. '```' → logprob: -19.7531795501709
    9. ',res' → logprob: -20.0031795501709
    10. '(r' → logprob: -20.1281795501709

Token 127: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05796985328197479
    2. ',i' → logprob: -3.057969808578491
    3. ' ,' → logprob: -4.68297004699707
    4. ' i' → logprob: -10.30797004699707
    5. ',
' → logprob: -10.68297004699707
    6. ',res' → logprob: -10.80797004699707
    7. ' ,
' → logprob: -12.80797004699707
    8. 'i' → logprob: -13.18297004699707
    9. '   ' → logprob: -13.68297004699707
    10. ',count' → logprob: -14.30797004699707

Token 128: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.0015047440538182855
    2. ' calc' → logprob: -6.501504898071289
    3. '(calc' → logprob: -13.001504898071289
    4. '.calc' → logprob: -16.62650489807129
    5. '   ' → logprob: -16.75150489807129
    6. 'cal' → logprob: -17.12650489807129
    7. '
' → logprob: -17.12650489807129
    8. '_calc' → logprob: -18.87650489807129
    9. 'calculate' → logprob: -19.12650489807129
    10. ')' → logprob: -19.12650489807129

Token 129: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -9.253090865968261e-06
    2. '(' → logprob: -11.625009536743164
    3. ')' → logprob: -15.875009536743164
    4. '(
' → logprob: -16.000009536743164
    5. ' (' → logprob: -17.625009536743164
    6. 'i' → logprob: -18.250009536743164
    7. ')i' → logprob: -18.250009536743164
    8. ')(' → logprob: -18.750009536743164
    9. '[i' → logprob: -19.625009536743164
    10. '(ii' → logprob: -20.000009536743164

Token 130: '))
' (ID: 2210)
  Prédit: '))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.08035635203123093
    2. '))' → logprob: -2.5803563594818115
    3. ')' → logprob: -6.955356121063232
    4. ')
' → logprob: -7.955356121063232
    5. ')+' → logprob: -9.33035659790039
    6. '))
' → logprob: -10.20535659790039
    7. ' ))
' → logprob: -11.33035659790039
    8. '));' → logprob: -11.83035659790039
    9. ' ' → logprob: -12.20535659790039
    10. '   ' → logprob: -12.33035659790039

Token 131: '   ' (ID: 271)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006125852465629578
    2. '   ' → logprob: -5.5061259269714355
    3. '
' → logprob: -6.5061259269714355
    4. ' i' → logprob: -7.8811259269714355
    5. '    
' → logprob: -9.506125450134277
    6. '```' → logprob: -10.131125450134277
    7. ' 
' → logprob: -11.006125450134277
    8. '	i' → logprob: -11.381125450134277
    9. '\n' → logprob: -11.506125450134277
    10. '  
' → logprob: -11.756125450134277

Token 132: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -5.200166469876422e-06
    2. ' i' → logprob: -12.250004768371582
    3. '   ' → logprob: -15.000004768371582
    4. '
' → logprob: -16.8750057220459
    5. '```' → logprob: -18.5000057220459
    6. '	i' → logprob: -19.1250057220459
    7. 'print' → logprob: -19.3750057220459
    8. '    
' → logprob: -19.7500057220459
    9. '++' → logprob: -20.0000057220459
    10. '_i' → logprob: -20.0000057220459

Token 133: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1820852905511856
    2. '+' → logprob: -1.8070852756500244
    3. ' +=' → logprob: -6.1820855140686035
    4. '=' → logprob: -9.807085037231445
    5. '++' → logprob: -10.057085037231445
    6. '<|end|>' → logprob: -10.057085037231445
    7. 'i' → logprob: -10.182085037231445
    8. '+='' → logprob: -10.682085037231445
    9. '+="' → logprob: -10.932085037231445
    10. '+i' → logprob: -11.057085037231445

Token 134: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '```' → logprob: -18.125
    4. '   ' → logprob: -19.625
    5. '１' → logprob: -20.75
    6. '100' → logprob: -22.5
    7. '``' → logprob: -22.625
    8. '`' → logprob: -22.625
    9. '  ' → logprob: -23.125
    10. '
' → logprob: -23.25

Token 135: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.017935452982783318
    2. '
' → logprob: -4.642935276031494
    3. '<|end|>' → logprob: -4.892935276031494
    4. ')' → logprob: -8.767935752868652
    5. '#' → logprob: -9.142935752868652
    6. 'res' → logprob: -9.267935752868652
    7. '\n' → logprob: -9.392935752868652
    8. ' print' → logprob: -9.517935752868652
    9. '```' → logprob: -10.017935752868652
    10. '#print' → logprob: -10.517935752868652

Token 136: 'sys' (ID: 17324)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.842555426876061e-06
    2. ' print' → logprob: -12.625004768371582
    3. '
' → logprob: -13.875004768371582
    4. '<|end|>' → logprob: -15.500004768371582
    5. '```' → logprob: -15.875004768371582
    6. ')' → logprob: -15.875004768371582
    7. '#print' → logprob: -16.7500057220459
    8. 'pr' → logprob: -17.1250057220459
    9. '(print' → logprob: -18.5000057220459
    10. '  
' → logprob: -18.6250057220459

Token 137: '.stdout' (ID: 59462)
  Prédit: '.exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -0.048633236438035965
    2. '.stdout' → logprob: -3.048633337020874
    3. '.stderr' → logprob: -11.048633575439453
    4. '.stdin' → logprob: -11.173633575439453
    5. '.' → logprob: -11.798633575439453
    6. 'exit' → logprob: -12.548633575439453
    7. '.argv' → logprob: -13.298633575439453
    8. '.setdefault' → logprob: -14.548633575439453
    9. ' exit' → logprob: -14.673633575439453
    10. '.Exit' → logprob: -14.673633575439453

Token 138: '.write' (ID: 6765)
  Prédit: '.write'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.write' → logprob: -9.746380237629637e-05
    2. '.stdout' → logprob: -9.375097274780273
    3. '.flush' → logprob: -11.750097274780273
    4. '.put' → logprob: -14.000097274780273
    5. '.' → logprob: -14.125097274780273
    6. '.print' → logprob: -14.125097274780273
    7. '.readline' → logprob: -14.625097274780273
    8. '.stderr' → logprob: -14.875097274780273
    9. '.output' → logprob: -15.250097274780273
    10. '.println' → logprob: -15.375097274780273

Token 139: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.0005137138650752604
    2. '(' → logprob: -7.875513553619385
    3. '(f' → logprob: -9.375514030456543
    4. '("("' → logprob: -10.500514030456543
    5. 'str' → logprob: -11.250514030456543
    6. '('' → logprob: -12.375514030456543
    7. '```' → logprob: -13.750514030456543
    8. 'f' → logprob: -14.250514030456543
    9. '(res' → logprob: -14.750514030456543
    10. '   ' → logprob: -15.375514030456543

Token 140: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -6.2729995988775045e-06
    2. '(' → logprob: -12.250006675720215
    3. 'res' → logprob: -13.625006675720215
    4. ' (' → logprob: -16.3750057220459
    5. ')(' → logprob: -16.5000057220459
    6. ')' → logprob: -17.0000057220459
    7. ' res' → logprob: -18.1250057220459
    8. '(
' → logprob: -18.3750057220459
    9. '```' → logprob: -18.3750057220459
    10. '	res' → logprob: -18.6250057220459

Token 141: ')+'' (ID: 93078)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.48280736804008484
    2. ')' → logprob: -0.9828073978424072
    3. ')+' → logprob: -5.107807159423828
    4. '())' → logprob: -6.732807159423828
    5. ')+'' → logprob: -7.857807159423828
    6. '()' → logprob: -7.982807159423828
    7. '()))' → logprob: -7.982807159423828
    8. ')+"' → logprob: -8.482807159423828
    9. '))
' → logprob: -9.607807159423828
    10. '+' → logprob: -9.857807159423828

Token 142: '\' (ID: 59)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: 0.0
    2. '
' → logprob: -17.375
    3. 'n' → logprob: -20.125
    4. '\' → logprob: -20.5
    5. '\\' → logprob: -20.875
    6. '\r' → logprob: -21.25
    7. ' \' → logprob: -21.875
    8. '\
' → logprob: -22.0
    9. '\x' → logprob: -22.125
    10. '' → logprob: -22.375

Token 143: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00033546582562848926
    2. '\n' → logprob: -8.000335693359375
    3. ' n' → logprob: -19.750335693359375
    4. '	n' → logprob: -19.875335693359375
    5. '
' → logprob: -20.375335693359375
    6. '\' → logprob: -21.000335693359375
    7. 'newline' → logprob: -21.375335693359375
    8. 'nl' → logprob: -22.000335693359375
    9. ''n' → logprob: -22.625335693359375
    10. 'x' → logprob: -23.500335693359375

Token 144: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6931552886962891
    2. '')' → logprob: -0.6931552886962891
    3. '")' → logprob: -11.943155288696289
    4. '`)' → logprob: -14.568155288696289
    5. '')
' → logprob: -15.443155288696289
    6. ' )' → logprob: -15.818155288696289
    7. ''' → logprob: -15.818155288696289
    8. '}')' → logprob: -16.06815528869629
    9. ')'' → logprob: -16.06815528869629
    10. '```' → logprob: -16.19315528869629


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 142
Tokens correctement prédits (1ère position, stricte): 48
Tokens correctement prédits (1ère position, avec adaptation): 53
Tokens correctement prédits (top 10): 103
Précision stricte (1ère position): 33.80%
Précision adaptée (1ère position): 37.32%
Précision (top 10): 72.54%
================================================================================
