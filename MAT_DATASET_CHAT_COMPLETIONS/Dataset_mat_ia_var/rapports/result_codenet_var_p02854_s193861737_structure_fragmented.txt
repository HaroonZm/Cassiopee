================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:37:43
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def read_int():
    return int(input())

def read_list():
    return list(map(int, input().split()))

def compute_sum(lst):
    return sum(lst)

def compute_half(value):
    return value / 2

def in_bounds(i, n):
    return i < n

def update_cumsum(ans1, ai):
    return ans1 + ai

def increment_i(i):
    return i + 1

def loop_condition(ans1, half_x, i, n):
    return ans1 < half_x and in_bounds(i, n)

def decrement_i(i):
    return i - 1

def subtract(a, b):
    return a - b

def compute_ans2(x, ans1):
    return subtract(x, ans1)

def subtract_from_ans1(ans1, ai):
    return ans1 - ai

def abs_val(x):
    return abs(x)

def compute_diff(ans1, ans2):
    return abs_val(subtract(ans1, ans2))

def print_result(res):
    print(res)

def main():
    n = read_int()
    a = read_list()
    x = compute_sum(a)
    half_x = compute_half(x)
    i = 0
    ans1 = 0
    while loop_condition(ans1, half_x, i, n):
        ans1 = update_cumsum(ans1, a[i])
        i = increment_i(i)
    i = decrement_i(i)
    ans2 = compute_ans2(x, ans1)
    ans1 = subtract_from_ans1(ans1, a[i])
    diff = compute_diff(ans1, ans2)
    res = subtract(a[i], diff)
    print_result(res)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' read' (ID: 1729)
  → Token d'amorce (pas de prédiction)

Token 2: '_int' (ID: 12285)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020488280802965164
    2. '_' → logprob: -4.020488262176514
    3. '```' → logprob: -6.895488262176514
    4. ' (' → logprob: -7.895488262176514
    5. '():' → logprob: -7.895488262176514
    6. '(_' → logprob: -9.145488739013672
    7. '(_:' → logprob: -9.520488739013672
    8. ':' → logprob: -9.520488739013672
    9. '(a' → logprob: -9.770488739013672
    10. 's' → logprob: -10.020488739013672

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6814407706260681
    2. ':' → logprob: -2.056440830230713
    3. '   ' → logprob: -2.431440830230713
    4. '\' → logprob: -3.181440830230713
    5. '():' → logprob: -3.181440830230713
    6. '\n' → logprob: -3.306440830230713
    7. '    
' → logprob: -3.431440830230713
    8. ':
' → logprob: -3.681440830230713
    9. '(
' → logprob: -4.056440830230713
    10. ':return' → logprob: -4.431440830230713

Token 5: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2823098301887512
    2. 'n' → logprob: -2.7823097705841064
    3. 'i' → logprob: -2.9073097705841064
    4. 'x' → logprob: -3.0323097705841064
    5. '   ' → logprob: -3.4073097705841064
    6. 'r' → logprob: -3.7823097705841064
    7. '```' → logprob: -4.5323100090026855
    8. 'input' → logprob: -5.6573100090026855
    9. ' return' → logprob: -6.1573100090026855
    10. '`' → logprob: -6.2823100090026855

Token 6: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.01089501567184925
    2. 'int' → logprob: -4.885895252227783
    3. ' ' → logprob: -5.760895252227783
    4. ' input' → logprob: -10.135894775390625
    5. '  ' → logprob: -10.635894775390625
    6. ' ' → logprob: -10.885894775390625
    7. '0' → logprob: -11.260894775390625
    8. '(int' → logprob: -11.260894775390625
    9. '<int' → logprob: -11.510894775390625
    10. 'input' → logprob: -12.260894775390625

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000919200771022588
    2. '('' → logprob: -8.250919342041016
    3. ''' → logprob: -8.375919342041016
    4. '<|end|>' → logprob: -9.000919342041016
    5. '```' → logprob: -9.125919342041016
    6. '("("' → logprob: -10.500919342041016
    7. '(
' → logprob: -10.500919342041016
    8. ' (' → logprob: -10.750919342041016
    9. '()' → logprob: -10.875919342041016
    10. '`' → logprob: -10.875919342041016

Token 8: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.9551222324371338
    2. '(' → logprob: -1.0801222324371338
    3. '()' → logprob: -1.3301222324371338
    4. ')' → logprob: -4.830121994018555
    5. '()))' → logprob: -6.455121994018555
    6. '(""))' → logprob: -7.455121994018555
    7. '(
' → logprob: -8.205121994018555
    8. ' ())' → logprob: -8.705121994018555
    9. '('' → logprob: -8.830121994018555
    10. '(()' → logprob: -9.205121994018555

Token 9: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1121129989624023
    2. '
' → logprob: -1.4871129989624023
    3. '\n' → logprob: -1.6121129989624023
    4. '(' → logprob: -2.9871129989624023
    5. '```' → logprob: -3.1121129989624023
    6. '(
' → logprob: -3.3621129989624023
    7. '#' → logprob: -3.7371129989624023
    8. '()' → logprob: -3.9871129989624023
    9. '' → logprob: -4.112112998962402
    10. '<|end|>' → logprob: -4.862112998962402

Token 10: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.29399043321609497
    2. ' calculate' → logprob: -1.9189903736114502
    3. ' write' → logprob: -2.54399037361145
    4. ' compute' → logprob: -4.793990612030029
    5. ' space' → logprob: -5.043990612030029
    6. ' process' → logprob: -5.293990612030029
    7. ' add' → logprob: -6.418990612030029
    8. ' main' → logprob: -6.668990612030029
    9. ' user' → logprob: -7.293990612030029
    10. '_' → logprob: -7.668990612030029

Token 11: '_list' (ID: 4162)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00010270876373397186
    2. '_line' → logprob: -9.875102996826172
    3. '_string' → logprob: -10.875102996826172
    4. '(' → logprob: -11.375102996826172
    5. ' _' → logprob: -12.375102996826172
    6. '_str' → logprob: -13.000102996826172
    7. '__' → logprob: -13.250102996826172
    8. '_(' → logprob: -13.625102996826172
    9. '_s' → logprob: -14.000102996826172
    10. '_token' → logprob: -14.125102996826172

Token 12: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03751620650291443
    2. '_' → logprob: -3.6625161170959473
    3. '<|end|>' → logprob: -5.412516117095947
    4. ' (' → logprob: -6.662516117095947
    5. '("("' → logprob: -6.787516117095947
    6. '```' → logprob: -7.662516117095947
    7. '<|end|>' → logprob: -7.787516117095947
    8. '()' → logprob: -7.912516117095947
    9. '(_' → logprob: -8.037516593933105
    10. '[' → logprob: -8.162516593933105

Token 13: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8821168541908264
    2. '()' → logprob: -1.1321167945861816
    3. '[]' → logprob: -1.8821167945861816
    4. '(' → logprob: -2.6321167945861816
    5. '[' → logprob: -4.507116794586182
    6. 'return' → logprob: -5.132116794586182
    7. ' return' → logprob: -5.257116794586182
    8. '    ' → logprob: -5.507116794586182
    9. ' []' → logprob: -6.257116794586182
    10. ' ()' → logprob: -6.257116794586182

Token 14: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6591711640357971
    2. 'return' (adapté à ' return') → logprob: -1.6591711044311523
    3. ' []' → logprob: -2.4091711044311523
    4. '[]' → logprob: -2.5341711044311523
    5. '   ' → logprob: -2.7841711044311523
    6. ' list' → logprob: -3.4091711044311523
    7. 'list' → logprob: -3.7841711044311523
    8. '    ' → logprob: -6.659171104431152
    9. ' ' → logprob: -7.159171104431152
    10. 'input' → logprob: -7.159171104431152

Token 15: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.7073721289634705
    2. 'list' → logprob: -0.7073721289634705
    3. '[list' → logprob: -4.832372188568115
    4. '[' → logprob: -5.457372188568115
    5. ' [' → logprob: -6.457372188568115
    6. '[int' → logprob: -8.457371711730957
    7. '[input' → logprob: -10.332371711730957
    8. ' []' → logprob: -10.457371711730957
    9. '[]' → logprob: -11.082371711730957
    10. ' ' → logprob: -11.207371711730957

Token 16: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.049132056534290314
    2. '(' → logprob: -3.0491321086883545
    3. '(int' → logprob: -7.549131870269775
    4. '(input' → logprob: -11.549132347106934
    5. '()' → logprob: -12.674132347106934
    6. '(eval' → logprob: -13.049132347106934
    7. '(range' → logprob: -13.924132347106934
    8. '(
' → logprob: -15.174132347106934
    9. 'map' → logprob: -15.174132347106934
    10. '(

' → logprob: -15.424132347106934

Token 17: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0027215410955250263
    2. '(' → logprob: -6.252721309661865
    3. 'int' → logprob: -7.252721309661865
    4. ' int' → logprob: -10.752721786499023
    5. '<int' → logprob: -10.877721786499023
    6. '=int' → logprob: -10.877721786499023
    7. '(str' → logprob: -12.127721786499023
    8. ',int' → logprob: -12.252721786499023
    9. '   ' → logprob: -12.377721786499023
    10. ')' → logprob: -12.627721786499023

Token 18: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.540153980255127
    2. '(input' → logprob: -1.415153980255127
    3. ',' → logprob: -1.790153980255127
    4. 'input' → logprob: -5.165153980255127
    5. ' ,' → logprob: -7.290153980255127
    6. '(' → logprob: -7.665153980255127
    7. ' input' → logprob: -8.290153503417969
    8. '))' → logprob: -8.790153503417969
    9. '<input' → logprob: -9.665153503417969
    10. '=input' → logprob: -9.790153503417969

Token 19: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.12700317800045013
    2. ' input' → logprob: -2.1270031929016113
    3. '   ' → logprob: -10.127002716064453
    4. '(input' → logprob: -10.752002716064453
    5. ',input' → logprob: -12.502002716064453
    6. '=input' → logprob: -12.752002716064453
    7. ' ' → logprob: -13.002002716064453
    8. '	input' → logprob: -13.127002716064453
    9. ')' → logprob: -14.127002716064453
    10. '<input' → logprob: -14.377002716064453

Token 20: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.635164754698053e-05
    2. '()' → logprob: -10.750066757202148
    3. '))' → logprob: -10.750066757202148
    4. '()))' → logprob: -11.375066757202148
    5. ')' → logprob: -11.875066757202148
    6. '.' → logprob: -13.625066757202148
    7. ')))' → logprob: -13.875066757202148
    8. '())' → logprob: -14.250066757202148
    9. ' ().' → logprob: -14.250066757202148
    10. '())))' → logprob: -15.125066757202148

Token 21: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.005246918182820082
    2. 'strip' → logprob: -5.255247116088867
    3. 'rstrip' → logprob: -11.255247116088867
    4. ' split' → logprob: -15.755247116088867
    5. 's' → logprob: -16.380247116088867
    6. '(split' → logprob: -17.005247116088867
    7. 'read' → logprob: -17.630247116088867
    8. 'spl' → logprob: -17.755247116088867
    9. ')' → logprob: -18.755247116088867
    10. 'sp' → logprob: -20.005247116088867

Token 22: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.03428257256746292
    2. '))' → logprob: -3.534282684326172
    3. '()' → logprob: -5.659282684326172
    4. '())' → logprob: -7.284282684326172
    5. '(' → logprob: -8.534282684326172
    6. '())))' → logprob: -9.534282684326172
    7. ')))' → logprob: -10.534282684326172
    8. '()))
' → logprob: -10.659282684326172
    9. ')' → logprob: -11.159282684326172
    10. '()))

' → logprob: -11.909282684326172

Token 23: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10676655173301697
    2. 'd' → logprob: -2.35676646232605
    3. 'n' → logprob: -5.731766700744629
    4. 'de' → logprob: -6.856766700744629
    5. '
' → logprob: -6.981766700744629
    6. '\' → logprob: -7.981766700744629
    7. '' → logprob: -8.106766700744629
    8. 'for' → logprob: -8.856766700744629
    9. '#' → logprob: -9.356766700744629
    10. 'a' → logprob: -9.731766700744629

Token 24: ' compute' (ID: 23864)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.23516036570072174
    2. ' solve' → logprob: -1.9851603507995605
    3. ' write' → logprob: -4.3601603507995605
    4. ' read' → logprob: -4.3601603507995605
    5. ' sum' → logprob: -4.6101603507995605
    6. ' max' → logprob: -4.8601603507995605
    7. 'main' → logprob: -5.3601603507995605
    8. 'solve' → logprob: -5.3601603507995605
    9. ' factorial' → logprob: -5.3601603507995605
    10. ' binary' → logprob: -5.4851603507995605

Token 25: '_sum' (ID: 29859)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07047295570373535
    2. '_sum' → logprob: -3.1954729557037354
    3. '(' → logprob: -4.070472717285156
    4. '_factor' → logprob: -4.945472717285156
    5. '_value' → logprob: -7.445472717285156
    6. '_max' → logprob: -8.195472717285156
    7. ' _' → logprob: -8.445472717285156
    8. '_total' → logprob: -8.570472717285156
    9. '_area' → logprob: -8.695472717285156
    10. '_s' → logprob: -8.695472717285156

Token 26: '(lst' (ID: 95688)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002206997014582157
    2. '_' → logprob: -6.377206802368164
    3. '()' → logprob: -8.627206802368164
    4. '("("' → logprob: -10.002206802368164
    5. ')' → logprob: -10.252206802368164
    6. 'def' → logprob: -10.502206802368164
    7. 's' → logprob: -10.752206802368164
    8. '_of' → logprob: -11.377206802368164
    9. '```' → logprob: -11.377206802368164
    10. '<|end|>' → logprob: -11.502206802368164

Token 27: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6332288980484009
    2. ')' → logprob: -0.7582288980484009
    3. '[' → logprob: -8.38322925567627
    4. '(' → logprob: -9.00822925567627
    5. ')):' → logprob: -9.75822925567627
    6. ')>' → logprob: -10.63322925567627
    7. '   ' → logprob: -10.63322925567627
    8. '[]):' → logprob: -10.75822925567627
    9. ' ):' → logprob: -10.88322925567627
    10. '))' → logprob: -11.00822925567627

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26427844166755676
    2. '(' → logprob: -1.6392784118652344
    3. ' return' → logprob: -3.8892784118652344
    4. ':' → logprob: -5.639278411865234
    5. '    ' → logprob: -5.639278411865234
    6. '(lst' → logprob: -6.139278411865234
    7. 'return' → logprob: -6.264278411865234
    8. ' ' → logprob: -6.514278411865234
    9. ' sum' → logprob: -7.514278411865234
    10. ' lst' → logprob: -7.514278411865234

Token 29: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019281914457678795
    2. ' return' → logprob: -4.14428186416626
    3. '    ' → logprob: -6.89428186416626
    4. ' ' → logprob: -7.14428186416626
    5. ' r' → logprob: -7.89428186416626
    6. ' sum' → logprob: -8.019282341003418
    7. 'return' (adapté à ' return') → logprob: -8.269282341003418
    8. '  ' → logprob: -8.519282341003418
    9. 'r' → logprob: -8.644282341003418
    10. 'sum' → logprob: -10.519282341003418

Token 30: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.004146899562329054
    2. 'sum' → logprob: -5.504147052764893
    3. ' ' → logprob: -9.629146575927734
    4. '(sum' → logprob: -13.629146575927734
    5. ' ' → logprob: -14.629146575927734
    6. '  ' → logprob: -14.754146575927734
    7. '	sum' → logprob: -14.754146575927734
    8. '=sum' → logprob: -16.504146575927734
    9. ' max' → logprob: -17.004146575927734
    10. ' suma' → logprob: -17.629146575927734

Token 31: '(lst' (ID: 95688)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16030384600162506
    2. '(lst' → logprob: -1.9103038311004639
    3. ' (' → logprob: -10.410304069519043
    4. '(l' → logprob: -11.660304069519043
    5. '(

' → logprob: -11.660304069519043
    6. '(ls' → logprob: -11.660304069519043
    7. '(
' → logprob: -12.035304069519043
    8. '(list' → logprob: -12.535304069519043
    9. '(ll' → logprob: -12.910304069519043
    10. 'lst' → logprob: -13.160304069519043

Token 32: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00043353010551072657
    2. '))' → logprob: -7.750433444976807
    3. ')))' → logprob: -13.750433921813965
    4. ')
' → logprob: -14.500433921813965
    5. ' )' → logprob: -14.875433921813965
    6. '[' → logprob: -15.125433921813965
    7. '   ' → logprob: -15.375433921813965
    8. ')>' → logprob: -16.50043296813965
    9. '())' → logprob: -16.62543296813965
    10. '()' → logprob: -16.75043296813965

Token 33: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08831893652677536
    2. 'result' → logprob: -3.3383188247680664
    3. '\n' → logprob: -4.713318824768066
    4. '
' → logprob: -4.963318824768066
    5. '\' → logprob: -5.213318824768066
    6. '#' → logprob: -5.338318824768066
    7. 'print' → logprob: -5.463318824768066
    8. '()' → logprob: -5.588318824768066
    9. '(' → logprob: -5.713318824768066
    10. '```' → logprob: -6.088318824768066

Token 34: ' compute' (ID: 23864)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.16250082850456238
    2. ' compute' → logprob: -1.9125008583068848
    3. ' calculate' → logprob: -6.662500858306885
    4. 'main' → logprob: -8.162500381469727
    5. 'compute' → logprob: -8.287500381469727
    6. ' solve' → logprob: -8.412500381469727
    7. ' process' → logprob: -9.912500381469727
    8. ' find' → logprob: -9.912500381469727
    9. ' multiply' → logprob: -9.912500381469727
    10. ' check' → logprob: -11.287500381469727

Token 35: '_half' (ID: 105284)
  Prédit: '_product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_product' → logprob: -0.21498480439186096
    2. '_max' → logprob: -2.214984893798828
    3. '_average' → logprob: -2.714984893798828
    4. '_' → logprob: -4.464984893798828
    5. '_difference' → logprob: -6.339984893798828
    6. '_avg' → logprob: -6.714984893798828
    7. '_diff' → logprob: -6.964984893798828
    8. '_factor' → logprob: -6.964984893798828
    9. '_prod' → logprob: -7.464984893798828
    10. '_mean' → logprob: -7.589984893798828

Token 36: '(value' (ID: 6333)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8080452084541321
    2. '_sum' → logprob: -1.0580451488494873
    3. '(' → logprob: -1.6830451488494873
    4. '_split' → logprob: -5.308045387268066
    5. '()' → logprob: -5.808045387268066
    6. 's' → logprob: -6.183045387268066
    7. '_value' → logprob: -6.808045387268066
    8. '_list' → logprob: -6.808045387268066
    9. '_space' → logprob: -6.933045387268066
    10. 'sum' → logprob: -7.058045387268066

Token 37: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.016964320093393326
    2. ')' → logprob: -4.141964435577393
    3. '):
' → logprob: -8.016963958740234
    4. '   ' → logprob: -8.141963958740234
    5. ' ):' → logprob: -9.266963958740234
    6. '/' → logprob: -9.891963958740234
    7. '//' → logprob: -9.891963958740234
    8. ' ' → logprob: -10.266963958740234
    9. ' //' → logprob: -11.391963958740234
    10. '(value' → logprob: -11.516963958740234

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2658527195453644
    2. ' return' → logprob: -2.015852689743042
    3. ' value' → logprob: -2.390852689743042
    4. 'return' → logprob: -5.390852928161621
    5. 'value' → logprob: -5.640852928161621
    6. '    ' → logprob: -8.265852928161621
    7. ' (' → logprob: -8.765852928161621
    8. '(value' → logprob: -9.765852928161621
    9. ' ' → logprob: -10.515852928161621
    10. '    
' → logprob: -10.890852928161621

Token 39: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.05789694935083389
    2. '   ' → logprob: -3.682896852493286
    3. 'return' (adapté à ' return') → logprob: -4.057897090911865
    4. ' value' → logprob: -4.307897090911865
    5. 'value' → logprob: -8.057896614074707
    6. '    ' → logprob: -10.807896614074707
    7. ' if' → logprob: -12.307896614074707
    8. ' ' → logprob: -12.432896614074707
    9. '```' → logprob: -13.557896614074707
    10. 'eturn' → logprob: -13.807896614074707

Token 40: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.0036371308378875256
    2. 'value' → logprob: -5.628637313842773
    3. ' int' → logprob: -10.753637313842773
    4. ' ' → logprob: -12.253637313842773
    5. ' float' → logprob: -12.753637313842773
    6. '(value' → logprob: -12.878637313842773
    7. 'int' → logprob: -13.128637313842773
    8. ' (' → logprob: -14.128637313842773
    9. ' ' → logprob: -14.253637313842773
    10. '   ' → logprob: -14.503637313842773

Token 41: ' /' (ID: 820)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.01680796779692173
    2. ' ' → logprob: -4.641808032989502
    3. '//' → logprob: -5.266808032989502
    4. ' /' → logprob: -6.641808032989502
    5. '/' → logprob: -8.391807556152344
    6. ' ' → logprob: -9.516807556152344
    7. '`' → logprob: -9.766807556152344
    8. '1' → logprob: -10.641807556152344
    9. '```' → logprob: -10.891807556152344
    10. '"' → logprob: -11.016807556152344

Token 42: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.009756677784025669
    2. ' ' → logprob: -4.634756565093994
    3. '```' → logprob: -14.634757041931152
    4. '   ' → logprob: -16.134756088256836
    5. ' ' → logprob: -16.384756088256836
    6. '  ' → logprob: -17.572256088256836
    7. '۲' → logprob: -17.634756088256836
    8. '1' → logprob: -18.322256088256836
    9. '3' → logprob: -18.572256088256836
    10. '２' → logprob: -18.572256088256836

Token 43: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9504606825648807e-05
    2. ' ' → logprob: -10.875019073486328
    3. '```' → logprob: -14.750019073486328
    4. '   ' → logprob: -16.000019073486328
    5. '۲' → logprob: -17.875019073486328
    6. 'def' → logprob: -18.750019073486328
    7. '２' → logprob: -19.000019073486328
    8. '  ' → logprob: -19.125019073486328
    9. '`' → logprob: -19.687519073486328
    10. '٢' → logprob: -19.937519073486328

Token 44: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11760184168815613
    2. '

' → logprob: -2.7426018714904785
    3. '
' → logprob: -3.4926018714904785
    4. '<|end|>' → logprob: -4.9926018714904785
    5. '\' → logprob: -5.2426018714904785
    6. '\n' → logprob: -6.6176018714904785
    7. '#' → logprob: -6.9926018714904785
    8. '```' → logprob: -7.2426018714904785
    9. '*' → logprob: -7.8676018714904785
    10. '<|end|>' → logprob: -8.74260139465332

Token 45: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01424248144030571
    2. 'result' → logprob: -5.139242649078369
    3. 'print' → logprob: -5.889242649078369
    4. 'n' → logprob: -6.139242649078369
    5. '#' → logprob: -6.639242649078369
    6. 'value' → logprob: -6.764242649078369
    7. '
' → logprob: -8.514242172241211
    8. 'v' → logprob: -9.139242172241211
    9. 'd' → logprob: -9.264242172241211
    10. 'x' → logprob: -9.514242172241211

Token 46: ' in' (ID: 306)
  Prédit: ' compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.388376384973526
    2. ' main' → logprob: -1.1383763551712036
    3. 'compute' → logprob: -7.763376235961914
    4. ' calculate' → logprob: -7.888376235961914
    5. ' solve' → logprob: -8.263376235961914
    6. ' process' → logprob: -8.763376235961914
    7. ' find' → logprob: -9.388376235961914
    8. ' multiply' → logprob: -10.013376235961914
    9. 'main' → logprob: -10.138376235961914
    10. ' double' → logprob: -10.263376235961914

Token 47: '_bounds' (ID: 90408)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.08471395820379257
    2. '_' → logprob: -2.959713935852051
    3. 't' → logprob: -4.084713935852051
    4. '_put' → logprob: -4.959713935852051
    5. '_range' → logprob: -6.959713935852051
    6. 'p' → logprob: -7.084713935852051
    7. 'clude' → logprob: -7.334713935852051
    8. 'dex' → logprob: -7.459713935852051
    9. 'itialize' → logprob: -7.959713935852051
    10. 'pute' → logprob: -8.20971393585205

Token 48: '(i' (ID: 3649)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03268623724579811
    2. ' (' → logprob: -3.782686233520508
    3. '(_' → logprob: -5.657686233520508
    4. '(x' → logprob: -6.282686233520508
    5. '_' → logprob: -6.407686233520508
    6. '(value' → logprob: -7.157686233520508
    7. '(a' → logprob: -8.157686233520508
    8. '_(' → logprob: -8.657686233520508
    9. '(range' → logprob: -8.782686233520508
    10. '(s' → logprob: -9.282686233520508

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08128206431865692
    2. ' ,' → logprob: -2.706282138824463
    3. ')' → logprob: -4.581282138824463
    4. '):' → logprob: -8.456281661987305
    5. ',n' → logprob: -8.581281661987305
    6. 'n' → logprob: -8.956281661987305
    7. ' )' → logprob: -9.331281661987305
    8. ',i' → logprob: -9.331281661987305
    9. '_,' → logprob: -9.706281661987305
    10. '_' → logprob: -10.206281661987305

Token 50: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4187231957912445
    2. 'n' → logprob: -1.168723225593567
    3. ' length' → logprob: -4.668723106384277
    4. ' lst' → logprob: -5.043723106384277
    5. ' size' → logprob: -5.543723106384277
    6. 'length' → logprob: -5.668723106384277
    7. 'lst' → logprob: -5.668723106384277
    8. 'arr' → logprob: -6.418723106384277
    9. ' arr' → logprob: -6.793723106384277
    10. 'size' → logprob: -6.918723106384277

Token 51: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014780356548726559
    2. ')' → logprob: -4.764780521392822
    3. ',' → logprob: -5.139780521392822
    4. '):
' → logprob: -8.389780044555664
    5. ' ):' → logprob: -10.514780044555664
    6. 'e' → logprob: -11.139780044555664
    7. ' ,' → logprob: -12.889780044555664
    8. ':' → logprob: -13.014780044555664
    9. '):

' → logprob: -13.264780044555664
    10. '=' → logprob: -13.389780044555664

Token 52: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011264738626778126
    2. '0' → logprob: -4.761264801025391
    3. ' i' → logprob: -6.886264801025391
    4. ' return' → logprob: -7.011264801025391
    5. 'return' → logprob: -8.01126480102539
    6. 'i' → logprob: -9.13626480102539
    7. '(' → logprob: -9.51126480102539
    8. ' (' → logprob: -9.76126480102539
    9. ' ' → logprob: -9.88626480102539
    10. '    ' → logprob: -10.88626480102539

Token 53: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0030682645738124847
    2. ' ' → logprob: -7.003068447113037
    3. ' return' → logprob: -7.003068447113037
    4. 'return' (adapté à ' return') → logprob: -7.003068447113037
    5. '   ' → logprob: -8.003067970275879
    6. '(' → logprob: -14.378067970275879
    7. ' i' → logprob: -15.253067970275879
    8. '  ' → logprob: -15.253067970275879
    9. 'i' → logprob: -15.503067970275879
    10. ' (' → logprob: -15.503067970275879

Token 54: ' i' (ID: 575)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020574118942022324
    2. ' ' → logprob: -3.8955740928649902
    3. '(' → logprob: -11.395574569702148
    4. ' (' → logprob: -11.520574569702148
    5. '   ' → logprob: -11.645574569702148
    6. ' ' → logprob: -14.270574569702148
    7. ' i' → logprob: -14.395574569702148
    8. 'i' → logprob: -14.770574569702148
    9. '  ' → logprob: -15.145574569702148
    10. '```' → logprob: -15.895574569702148

Token 55: ' <' (ID: 464)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.7011127471923828
    2. '>=' → logprob: -0.7011127471923828
    3. '<' → logprob: -5.701112747192383
    4. ' <' → logprob: -6.326112747192383
    5. '>' → logprob: -6.451112747192383
    6. ' ' → logprob: -7.451112747192383
    7. '0' → logprob: -8.201112747192383
    8. ' >' → logprob: -8.701112747192383
    9. '+' → logprob: -10.076112747192383
    10. '[' → logprob: -10.576112747192383

Token 56: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.023778311908245087
    2. 'n' → logprob: -3.773778200149536
    3. ' ' → logprob: -8.023777961730957
    4. '0' → logprob: -8.523777961730957
    5. ' ' → logprob: -13.148777961730957
    6. '	n' → logprob: -13.898777961730957
    7. '1' → logprob: -14.523777961730957
    8. '=n' → logprob: -14.648777961730957
    9. '=' → logprob: -14.898777961730957
    10. '2' → logprob: -15.023777961730957

Token 57: '

' (ID: 279)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06212710589170456
    2. 'and' → logprob: -2.812127113342285
    3. ' ' → logprob: -9.562127113342285
    4. '<|end|>' → logprob: -9.687127113342285
    5. ' a' → logprob: -11.437127113342285
    6. 'a' → logprob: -11.937127113342285
    7. ' an' → logprob: -13.062127113342285
    8. '	and' → logprob: -13.812127113342285
    9. ' ' → logprob: -13.937127113342285
    10. '    ' → logprob: -14.062127113342285

Token 58: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03330526873469353
    2. '#' → logprob: -4.4083051681518555
    3. ':' → logprob: -4.6583051681518555
    4. '(' → logprob: -5.6583051681518555
    5. '<|end|>' → logprob: -6.1583051681518555
    6. '_' → logprob: -6.6583051681518555
    7. '
' → logprob: -6.7833051681518555
    8. '.' → logprob: -7.6583051681518555
    9. ')' → logprob: -7.9083051681518555
    10. '```' → logprob: -8.408305168151855

Token 59: ' update' (ID: 4027)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.20512467622756958
    2. ' is' → logprob: -2.580124616622925
    3. ' in' → logprob: -3.580124616622925
    4. ' out' → logprob: -3.830124616622925
    5. ' compute' → logprob: -4.580124855041504
    6. 'main' → logprob: -4.830124855041504
    7. ' read' → logprob: -4.830124855041504
    8. ' check' → logprob: -5.330124855041504
    9. ' factorial' → logprob: -5.330124855041504
    10. ' process' → logprob: -5.580124855041504

Token 60: '_c' (ID: 1303)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0162394046783447
    2. '(' → logprob: -1.5162394046783447
    3. '(i' → logprob: -1.8912394046783447
    4. '_value' → logprob: -1.8912394046783447
    5. '_list' → logprob: -3.1412394046783447
    6. '_array' → logprob: -3.8912394046783447
    7. '_sum' → logprob: -4.141239166259766
    8. '_values' → logprob: -5.266239166259766
    9. '_(' → logprob: -5.391239166259766
    10. '(_' → logprob: -5.391239166259766

Token 61: 'umsum' (ID: 197728)
  Prédit: 'ounter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ounter' → logprob: -0.3462715744972229
    2. 'ount' → logprob: -1.7212715148925781
    3. 'urrent' → logprob: -3.346271514892578
    4. '_' → logprob: -3.971271514892578
    5. '(i' → logprob: -4.346271514892578
    6. '(' → logprob: -4.846271514892578
    7. '_value' → logprob: -4.971271514892578
    8. 'ounters' → logprob: -5.471271514892578
    9. 'on' → logprob: -5.846271514892578
    10. 'o' → logprob: -6.221271514892578

Token 62: '(ans' (ID: 70054)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.5556135773658752
    2. '(' → logprob: -1.1806135177612305
    3. '(c' → logprob: -2.5556135177612305
    4. '(s' → logprob: -3.9306135177612305
    5. '(arr' → logprob: -5.0556135177612305
    6. 's' → logprob: -6.0556135177612305
    7. '(_' → logprob: -6.3056135177612305
    8. '(index' → logprob: -6.6806135177612305
    9. '((' → logprob: -6.6806135177612305
    10. '(a' → logprob: -6.8056135177612305

Token 63: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02239941619336605
    2. ',i' → logprob: -4.397399425506592
    3. '[i' → logprob: -5.022399425506592
    4. 's' → logprob: -7.022399425506592
    5. ' ,' → logprob: -7.522399425506592
    6. '[' → logprob: -7.772399425506592
    7. '):' → logprob: -7.772399425506592
    8. '_,' → logprob: -7.772399425506592
    9. '   ' → logprob: -9.147398948669434
    10. ',index' → logprob: -9.772398948669434

Token 64: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03194585070014
    2. ',i' → logprob: -4.156945705413818
    3. '[i' → logprob: -4.656945705413818
    4. ' ,' → logprob: -6.531945705413818
    5. '[' → logprob: -6.906945705413818
    6. '1' → logprob: -7.156945705413818
    7. ')' → logprob: -7.156945705413818
    8. '   ' → logprob: -7.406945705413818
    9. ',[' → logprob: -7.906945705413818
    10. 's' → logprob: -8.406946182250977

Token 65: ' ai' (ID: 8440)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.12819568812847137
    2. 'ans' → logprob: -3.0031957626342773
    3. ' i' → logprob: -3.5031957626342773
    4. 'i' → logprob: -4.753195762634277
    5. ' n' → logprob: -5.003195762634277
    6. 'n' → logprob: -5.878195762634277
    7. ' c' → logprob: -6.128195762634277
    8. ' idx' → logprob: -6.190695762634277
    9. ' value' → logprob: -6.315695762634277
    10. ' val' → logprob: -6.315695762634277

Token 66: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7434552311897278
    2. 's' → logprob: -1.243455171585083
    3. ',' → logprob: -1.618455171585083
    4. ')' → logprob: -3.993455171585083
    5. 'x' → logprob: -4.368455410003662
    6. '_list' → logprob: -6.868455410003662
    7. '[' → logprob: -6.868455410003662
    8. '+' → logprob: -7.618455410003662
    9. '_' → logprob: -7.618455410003662
    10. '[]):' → logprob: -7.743455410003662

Token 67: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5303393006324768
    2. '   ' → logprob: -2.030339241027832
    3. '):' → logprob: -2.280339241027832
    4. ',' → logprob: -2.530339241027832
    5. '+' → logprob: -3.530339241027832
    6. ' +' → logprob: -3.530339241027832
    7. ' :' → logprob: -4.030339241027832
    8. ' +=' → logprob: -4.780339241027832
    9. '[' → logprob: -5.405339241027832
    10. '+:' → logprob: -6.030339241027832

Token 68: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6810863018035889
    2. 'return' (adapté à ' return') → logprob: -1.4310863018035889
    3. 'ans' → logprob: -1.9310863018035889
    4. ' return' → logprob: -2.806086301803589
    5. ' ans' → logprob: -3.181086301803589
    6. '[]' → logprob: -6.056086540222168
    7. '[' → logprob: -6.931086540222168
    8. ')' → logprob: -7.056086540222168
    9. '(ans' → logprob: -7.056086540222168
    10. '	ans' → logprob: -7.181086540222168

Token 69: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3143889605998993
    2. ' ans' → logprob: -1.3143889904022217
    3. '(ans' → logprob: -7.189388751983643
    4. '[' → logprob: -8.4393892288208
    5. '	ans' → logprob: -10.0643892288208
    6. '   ' → logprob: -10.4393892288208
    7. ' [' → logprob: -10.6893892288208
    8. '[]' → logprob: -11.4393892288208
    9. ' ' → logprob: -11.8143892288208
    10. '_ans' → logprob: -11.9393892288208

Token 70: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. 's' → logprob: -14.625000953674316
    3. 'er' → logprob: -15.000000953674316
    4. '_' → logprob: -15.375000953674316
    5. '+' → logprob: -16.625001907348633
    6. '```' → logprob: -16.687501907348633
    7. 'sum' → logprob: -16.937501907348633
    8. '１' → logprob: -17.125001907348633
    9. ' ' → logprob: -17.312501907348633
    10. '(ans' → logprob: -17.437501907348633

Token 71: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20143243670463562
    2. ' +' → logprob: -1.701432466506958
    3. ' plus' → logprob: -12.201432228088379
    4. '-' → logprob: -12.951432228088379
    5. '+i' → logprob: -13.326432228088379
    6. '+a' → logprob: -13.576432228088379
    7. ' +=' → logprob: -13.826432228088379
    8. ' ' → logprob: -13.826432228088379
    9. '*' → logprob: -13.826432228088379
    10. '+=' → logprob: -14.076432228088379

Token 72: ' ai' (ID: 8440)
  Prédit: ' ai'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ai' → logprob: -0.018204839900135994
    2. 'ai' → logprob: -4.018204689025879
    3. ' ' → logprob: -10.893204689025879
    4. '(ai' → logprob: -10.893204689025879
    5. ' ' → logprob: -11.518204689025879
    6. '_ai' → logprob: -12.768204689025879
    7. '   ' → logprob: -13.518204689025879
    8. ' int' → logprob: -14.268204689025879
    9. 'int' → logprob: -14.643204689025879
    10. '  ' → logprob: -14.768204689025879

Token 73: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02274312451481819
    2. '<|end|>' → logprob: -4.022743225097656
    3. '*' → logprob: -5.772743225097656
    4. '<|end|>' → logprob: -7.897743225097656
    5. '
' → logprob: -8.147743225097656
    6. '

' → logprob: -8.772743225097656
    7. '```' → logprob: -9.022743225097656
    8. '+' → logprob: -9.522743225097656
    9. '#' → logprob: -9.772743225097656
    10. ' def' → logprob: -9.772743225097656

Token 74: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005557744298130274
    2. '#' → logprob: -8.750555992126465
    3. '
' → logprob: -9.500555992126465
    4. '\' → logprob: -9.875555992126465
    5. '```' → logprob: -10.125555992126465
    6. '<|end|>' → logprob: -10.125555992126465
    7. '[' → logprob: -10.375555992126465
    8. '.' → logprob: -10.500555992126465
    9. ':' → logprob: -10.875555992126465
    10. '*' → logprob: -10.875555992126465

Token 75: ' increment' (ID: 24032)
  Prédit: ' compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.47056788206100464
    2. ' main' → logprob: -1.2205679416656494
    3. ' solve' → logprob: -3.7205679416656494
    4. ' update' → logprob: -4.34556770324707
    5. 'compute' → logprob: -4.34556770324707
    6. ' process' → logprob: -4.84556770324707
    7. ' read' → logprob: -5.22056770324707
    8. ' find' → logprob: -5.34556770324707
    9. 'main' → logprob: -5.97056770324707
    10. ' max' → logprob: -5.97056770324707

Token 76: '_i' (ID: 10853)
  Prédit: '_counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_counter' → logprob: -0.8077446818351746
    2. '(' → logprob: -1.8077447414398193
    3. '_count' → logprob: -2.3077447414398193
    4. '(i' → logprob: -2.3077447414398193
    5. '_' → logprob: -2.5577447414398193
    6. '()' → logprob: -2.6827447414398193
    7. '_index' → logprob: -4.93274450302124
    8. '_answer' → logprob: -5.05774450302124
    9. '_value' → logprob: -5.43274450302124
    10. '(_' → logprob: -5.55774450302124

Token 77: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.4293316602706909
    2. '(' → logprob: -1.054331660270691
    3. '()' → logprob: -7.5543317794799805
    4. ' (' → logprob: -10.17933177947998
    5. '():' → logprob: -10.17933177947998
    6. '(n' → logprob: -11.67933177947998
    7. '(I' → logprob: -12.67933177947998
    8. 'i' → logprob: -13.30433177947998
    9. ' ()' → logprob: -13.55433177947998
    10. ' ' → logprob: -13.55433177947998

Token 78: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010571038350462914
    2. ',' → logprob: -5.510571002960205
    3. '):
' → logprob: -5.760571002960205
    4. ')' → logprob: -5.885571002960205
    5. ' ):' → logprob: -8.010571479797363
    6. '+' → logprob: -9.260571479797363
    7. ' ' → logprob: -9.885571479797363
    8. ':' → logprob: -11.260571479797363
    9. '1' → logprob: -11.510571479797363
    10. '   ' → logprob: -11.760571479797363

Token 79: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04134376719594002
    2. 'i' → logprob: -3.4163436889648438
    3. ' i' → logprob: -5.041343688964844
    4. ' return' → logprob: -7.291343688964844
    5. 'return' → logprob: -7.666343688964844
    6. '1' → logprob: -10.791343688964844
    7. '	i' → logprob: -11.416343688964844
    8. '    ' → logprob: -11.666343688964844
    9. '	return' → logprob: -12.666343688964844
    10. ' ' → logprob: -12.666343688964844

Token 80: ' return' (ID: 622)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2708773612976074
    2. '   ' → logprob: -2.1458773612976074
    3. ' i' → logprob: -2.6458773612976074
    4. 'return' (adapté à ' return') → logprob: -3.3958773612976074
    5. ' return' → logprob: -4.145877361297607
    6. '    ' → logprob: -11.270877838134766
    7. ' ' → logprob: -11.770877838134766
    8. '  ' → logprob: -12.270877838134766
    9. '	i' → logprob: -12.270877838134766
    10. '1' → logprob: -12.520877838134766

Token 81: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.47409164905548096
    2. 'i' → logprob: -0.974091649055481
    3. '1' → logprob: -11.849091529846191
    4. '   ' → logprob: -12.099091529846191
    5. ' ' → logprob: -14.349091529846191
    6. ' ' → logprob: -14.599091529846191
    7. '	i' → logprob: -14.974091529846191
    8. '(i' → logprob: -15.849091529846191
    9. '_i' → logprob: -16.224092483520508
    10. '0' → logprob: -16.599092483520508

Token 82: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20141655206680298
    2. ' +' → logprob: -1.7014164924621582
    3. '+i' → logprob: -13.451416969299316
    4. ' ' → logprob: -14.451416969299316
    5. ' +
' → logprob: -14.826416969299316
    6. ' plus' → logprob: -15.576416969299316
    7. '+
' → logprob: -15.826416969299316
    8. '1' → logprob: -15.826416969299316
    9. '()+' → logprob: -15.826416969299316
    10. ' ' → logprob: -16.076416015625

Token 83: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014163747429847717
    2. ' ' → logprob: -4.264163970947266
    3. '   ' → logprob: -16.014163970947266
    4. ' ' → logprob: -16.264163970947266
    5. '```' → logprob: -17.764163970947266
    6. '  ' → logprob: -17.951663970947266
    7. '2' → logprob: -17.951663970947266
    8. '0' → logprob: -18.701663970947266
    9. 'def' → logprob: -19.326663970947266
    10. '=' → logprob: -19.451663970947266

Token 84: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -16.8750057220459
    4. '```' → logprob: -18.5000057220459
    5. '  ' → logprob: -18.8750057220459
    6. '2' → logprob: -19.1250057220459
    7. 'def' → logprob: -20.5000057220459
    8. '0' → logprob: -21.0000057220459
    9. '4' → logprob: -21.5000057220459
    10. '+' → logprob: -21.7500057220459

Token 85: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0007330321241170168
    2. 'n' → logprob: -8.500733375549316
    3. 'if' → logprob: -9.000733375549316
    4. '\' → logprob: -9.125733375549316
    5. '```' → logprob: -9.250733375549316
    6. 'i' → logprob: -10.000733375549316
    7. '

' → logprob: -10.125733375549316
    8. '<|end|>' → logprob: -10.875733375549316
    9. 'for' → logprob: -11.250733375549316
    10. '#' → logprob: -11.250733375549316

Token 86: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06343350559473038
    2. 'n' → logprob: -3.4384334087371826
    3. 'i' → logprob: -3.5634334087371826
    4. 'if' → logprob: -7.938433647155762
    5. 'a' → logprob: -8.438433647155762
    6. 'd' → logprob: -8.688433647155762
    7. '#' → logprob: -9.188433647155762
    8. 'for' → logprob: -10.063433647155762
    9. '```' → logprob: -10.563433647155762
    10. '\' → logprob: -11.063433647155762

Token 87: ' loop' (ID: 11453)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.09780828654766083
    2. ' compute' → logprob: -2.597808361053467
    3. 'main' → logprob: -5.097808361053467
    4. ' process' → logprob: -5.347808361053467
    5. ' solve' → logprob: -5.847808361053467
    6. 'compute' → logprob: -6.472808361053467
    7. ' find' → logprob: -6.847808361053467
    8. ' calculate' → logprob: -7.847808361053467
    9. ' max' → logprob: -7.972808361053467
    10. ' read' → logprob: -8.472807884216309

Token 88: '_condition' (ID: 64948)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5720429420471191
    2. '_' → logprob: -1.0720429420471191
    3. '(i' → logprob: -3.072042942047119
    4. '():' → logprob: -3.572042942047119
    5. '(:' → logprob: -5.572042942047119
    6. '_(' → logprob: -5.822042942047119
    7. ':' → logprob: -5.822042942047119
    8. '_:' → logprob: -5.947042942047119
    9. '_body' → logprob: -6.322042942047119
    10. '_for' → logprob: -7.072042942047119

Token 89: '(ans' (ID: 70054)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.08939316868782043
    2. '(' → logprob: -2.464393138885498
    3. ' (' → logprob: -7.839393138885498
    4. '(n' → logprob: -10.839393615722656
    5. '(s' → logprob: -11.339393615722656
    6. ':' → logprob: -12.589393615722656
    7. '(a' → logprob: -12.964393615722656
    8. '(
' → logprob: -13.089393615722656
    9. '(ii' → logprob: -13.089393615722656
    10. '(I' → logprob: -13.339393615722656

Token 90: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002637199067976326
    2. '2' → logprob: -8.750264167785645
    3. ')' → logprob: -10.625264167785645
    4. ',' → logprob: -10.750264167785645
    5. '_' → logprob: -11.000264167785645
    6. '0' → logprob: -11.250264167785645
    7. ' ' → logprob: -11.750264167785645
    8. '>' → logprob: -12.437764167785645
    9. 's' → logprob: -13.125264167785645
    10. ' >' → logprob: -13.250264167785645

Token 91: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021597091108560562
    2. ' <' → logprob: -4.521596908569336
    3. ' ,' → logprob: -4.646596908569336
    4. ')' → logprob: -8.521596908569336
    5. '<' → logprob: -9.146596908569336
    6. ' >' → logprob: -9.146596908569336
    7. '):' → logprob: -9.521596908569336
    8. ' !=' → logprob: -9.771596908569336
    9. ' <=' → logprob: -9.771596908569336
    10. ' )' → logprob: -10.021596908569336

Token 92: ' half' (ID: 6375)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.43343156576156616
    2. ' ans' → logprob: -1.433431625366211
    3. 'n' → logprob: -3.308431625366211
    4. 'i' → logprob: -3.558431625366211
    5. ' n' → logprob: -4.308431625366211
    6. ' i' → logprob: -4.558431625366211
    7. 'ai' → logprob: -5.058431625366211
    8. ' ai' → logprob: -5.933431625366211
    9. ')' → logprob: -5.995931625366211
    10. '   ' → logprob: -6.495931625366211

Token 93: '_x' (ID: 7054)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.123533695936203
    2. ',' → logprob: -2.6235337257385254
    3. '_value' → logprob: -3.3735337257385254
    4. 'value' → logprob: -5.373533725738525
    5. '):
' → logprob: -6.623533725738525
    6. ')' → logprob: -7.248533725738525
    7. '_' → logprob: -7.248533725738525
    8. ' ):' → logprob: -7.748533725738525
    9. '_val' → logprob: -8.123533248901367
    10. ':' → logprob: -8.748533248901367

Token 94: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.48901233077049255
    2. ',' → logprob: -0.9890123605728149
    3. ')' → logprob: -4.364012241363525
    4. ' ):' → logprob: -6.864012241363525
    5. ' ,' → logprob: -8.489012718200684
    6. '):
' → logprob: -8.614012718200684
    7. ')>' → logprob: -8.739012718200684
    8. '_value' → logprob: -9.864012718200684
    9. '1' → logprob: -9.864012718200684
    10. ' )' → logprob: -9.864012718200684

Token 95: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2671269476413727
    2. ' n' → logprob: -2.14212703704834
    3. 'i' → logprob: -2.51712703704834
    4. 'n' → logprob: -4.14212703704834
    5. ' ans' → logprob: -5.14212703704834
    6. '   ' → logprob: -5.51712703704834
    7. ' ' → logprob: -5.89212703704834
    8. ' x' → logprob: -6.39212703704834
    9. ')' → logprob: -6.70462703704834
    10. '    ' → logprob: -7.20462703704834

Token 96: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006510255858302116
    2. ' ,' → logprob: -5.506510257720947
    3. '):' → logprob: -6.131510257720947
    4. ' ):' → logprob: -9.256509780883789
    5. ',n' → logprob: -9.381509780883789
    6. ')' → logprob: -10.256509780883789
    7. ',
' → logprob: -11.131509780883789
    8. ' )' → logprob: -12.506509780883789
    9. ' ' → logprob: -12.631509780883789
    10. 'n' → logprob: -12.756509780883789

Token 97: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.11917830258607864
    2. 'n' → logprob: -2.244178295135498
    3. ' x' → logprob: -5.619178295135498
    4. ' ' → logprob: -6.994178295135498
    5. 'x' → logprob: -7.119178295135498
    6. ' len' → logprob: -8.494178771972656
    7. ')' → logprob: -8.869178771972656
    8. 'len' → logprob: -9.431678771972656
    9. '    ' → logprob: -9.806678771972656
    10. '   ' → logprob: -9.869178771972656

Token 98: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12790244817733765
    2. ',' → logprob: -2.1279025077819824
    3. ')' → logprob: -7.127902507781982
    4. ' ):' → logprob: -9.127902030944824
    5. '):
' → logprob: -10.377902030944824
    6. ' ,' → logprob: -11.377902030944824
    7. '   ' → logprob: -12.377902030944824
    8. ':' → logprob: -12.752902030944824
    9. ',
' → logprob: -12.752902030944824
    10. ' ' → logprob: -13.127902030944824

Token 99: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11741360276937485
    2. ' ans' → logprob: -2.6174135208129883
    3. ' return' → logprob: -3.8674135208129883
    4. 'return' → logprob: -4.992413520812988
    5. 'ans' → logprob: -5.867413520812988
    6. '(ans' → logprob: -5.992413520812988
    7. ' and' → logprob: -6.492413520812988
    8. 'and' → logprob: -7.117413520812988
    9. '    ' → logprob: -7.117413520812988
    10. ' i' → logprob: -7.117413520812988

Token 100: ' return' (ID: 622)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.41739213466644287
    2. ' ans' → logprob: -1.4173921346664429
    3. '(ans' → logprob: -2.9173922538757324
    4. 'return' (adapté à ' return') → logprob: -3.9173922538757324
    5. '   ' → logprob: -4.417392253875732
    6. ' return' → logprob: -5.167392253875732
    7. 'i' → logprob: -5.792392253875732
    8. ' i' → logprob: -6.292392253875732
    9. ' (' → logprob: -7.042392253875732
    10. '(' → logprob: -8.042391777038574

Token 101: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5058705806732178
    2. ' ans' → logprob: -1.0058705806732178
    3. '(ans' → logprob: -3.8808705806732178
    4. 'i' → logprob: -5.255870819091797
    5. ' i' → logprob: -5.505870819091797
    6. ' (' → logprob: -7.630870819091797
    7. '   ' → logprob: -7.880870819091797
    8. '(i' → logprob: -8.630870819091797
    9. '(' → logprob: -9.255870819091797
    10. 'in' → logprob: -9.880870819091797

Token 102: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.375001907348633
    3. '<|end|>' → logprob: -14.750001907348633
    4. '[' → logprob: -16.937501907348633
    5. '<|end|>' → logprob: -17.312501907348633
    6. '...' → logprob: -17.500001907348633
    7. '_' → logprob: -17.562501907348633
    8. '１' → logprob: -17.687501907348633
    9. '১' → logprob: -18.250001907348633
    10. '१' → logprob: -18.312501907348633

Token 103: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.21044252812862396
    2. '<' → logprob: -1.8354425430297852
    3. ' <=' → logprob: -3.585442543029785
    4. '<=' → logprob: -6.585442543029785
    5. ' ' → logprob: -7.335442543029785
    6. '+' → logprob: -8.960442543029785
    7. '1' → logprob: -9.335442543029785
    8. ' +' → logprob: -9.585442543029785
    9. '_' → logprob: -10.460442543029785
    10. '[' → logprob: -10.710442543029785

Token 104: ' half' (ID: 6375)
  Prédit: ' half'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' half' → logprob: -0.005282615311443806
    2. 'half' → logprob: -5.255282402038574
    3. ' ' → logprob: -10.255282402038574
    4. ' ' → logprob: -11.880282402038574
    5. ' hal' → logprob: -12.880282402038574
    6. 'hal' → logprob: -13.630282402038574
    7. '_half' → logprob: -14.380282402038574
    8. ' hall' → logprob: -14.880282402038574
    9. ' space' → logprob: -15.005282402038574
    10. ' int' → logprob: -15.505282402038574

Token 105: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.02061919867992401
    2. '_' → logprob: -3.8956191539764404
    3. 'x' → logprob: -10.02061939239502
    4. ' _' → logprob: -11.77061939239502
    5. '_
' → logprob: -12.02061939239502
    6. ' ' → logprob: -12.64561939239502
    7. '_

' → logprob: -12.77061939239502
    8. '_n' → logprob: -13.02061939239502
    9. '_y' → logprob: -13.39561939239502
    10. '_i' → logprob: -13.39561939239502

Token 106: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5241647958755493
    2. 'and' → logprob: -0.8991647958755493
    3. '<|end|>' → logprob: -7.64916467666626
    4. ' ' → logprob: -8.274165153503418
    5. ' or' → logprob: -8.899165153503418
    6. 'def' → logprob: -9.524165153503418
    7. ')' → logprob: -10.524165153503418
    8. 'or' → logprob: -11.024165153503418
    9. '<|end|>' → logprob: -12.024165153503418
    10. '

' → logprob: -12.274165153503418

Token 107: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.9202253222465515
    2. 'i' → logprob: -1.4202253818511963
    3. 'in' → logprob: -1.5452253818511963
    4. ' i' → logprob: -1.9202253818511963
    5. ' ' → logprob: -10.670225143432617
    6. '   ' → logprob: -10.920225143432617
    7. ' and' → logprob: -12.420225143432617
    8. ' ' → logprob: -12.482725143432617
    9. '(i' → logprob: -12.795225143432617
    10. 'In' → logprob: -12.982725143432617

Token 108: '_bounds' (ID: 90408)
  Prédit: '_bounds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bounds' → logprob: -5.3596853831550106e-05
    2. '_bound' → logprob: -11.000053405761719
    3. '_b' → logprob: -11.250053405761719
    4. 'bounds' → logprob: -12.000053405761719
    5. '(i' → logprob: -12.125053405761719
    6. '_limits' → logprob: -13.250053405761719
    7. '_' → logprob: -13.250053405761719
    8. 's' → logprob: -13.625053405761719
    9. ')_' → logprob: -13.625053405761719
    10. '(_' → logprob: -13.750053405761719

Token 109: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0019297054968774319
    2. '(' → logprob: -6.251929759979248
    3. ' (' → logprob: -14.12692928314209
    4. '(
' → logprob: -15.87692928314209
    5. 'i' → logprob: -17.126930236816406
    6. '(ii' → logprob: -17.376930236816406
    7. '(I' → logprob: -17.376930236816406
    8. '((' → logprob: -18.251930236816406
    9. '```' → logprob: -18.501930236816406
    10. ' ' → logprob: -18.626930236816406

Token 110: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006903278641402721
    2. '(n' → logprob: -6.256903171539307
    3. '(i' → logprob: -6.381903171539307
    4. ' ,' → logprob: -6.506903171539307
    5. '(' → logprob: -6.756903171539307
    6. ',n' → logprob: -7.881903171539307
    7. ',i' → logprob: -9.256903648376465
    8. ')' → logprob: -9.256903648376465
    9. '),' → logprob: -10.506903648376465
    10. '`,' → logprob: -12.256903648376465

Token 111: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.018167035654187202
    2. 'n' → logprob: -4.018167018890381
    3. ')' → logprob: -12.268167495727539
    4. ')n' → logprob: -12.393167495727539
    5. ' ' → logprob: -12.518167495727539
    6. '	n' → logprob: -13.143167495727539
    7. '(n' → logprob: -13.268167495727539
    8. ' ' → logprob: -15.393167495727539
    9. '<|end|>' → logprob: -16.01816749572754
    10. ' )' → logprob: -16.14316749572754

Token 112: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.580929347255733e-05
    2. '))' → logprob: -11.500016212463379
    3. ')
' → logprob: -12.875016212463379
    4. '())' → logprob: -14.000016212463379
    5. ' )' → logprob: -14.000016212463379
    6. ')))' → logprob: -14.750016212463379
    7. ')

' → logprob: -15.250016212463379
    8. '   ' → logprob: -15.625016212463379
    9. ')return' → logprob: -16.250015258789062
    10. ')**' → logprob: -16.500015258789062

Token 113: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2589850425720215
    2. '<|end|>' → logprob: -1.3839850425720215
    3. 'def' → logprob: -1.6339850425720215
    4. ':' → logprob: -1.6339850425720215
    5. '(' → logprob: -3.5089850425720215
    6. '   ' → logprob: -4.3839850425720215
    7. '#' → logprob: -4.7589850425720215
    8. ' ' → logprob: -5.5089850425720215
    9. '<|end|>' → logprob: -5.7589850425720215
    10. '(
' → logprob: -6.0089850425720215

Token 114: ' decrement' (ID: 121877)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.26817768812179565
    2. 'main' → logprob: -2.1431777477264404
    3. ' solve' → logprob: -2.8931777477264404
    4. ' compute' → logprob: -4.018177509307861
    5. 'solve' → logprob: -4.143177509307861
    6. 'compute' → logprob: -5.018177509307861
    7. ' process' → logprob: -5.268177509307861
    8. ' read' → logprob: -5.518177509307861
    9. ' loop' → logprob: -6.018177509307861
    10. ' def' → logprob: -6.018177509307861

Token 115: '_i' (ID: 10853)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.2952241599559784
    2. '(' → logprob: -2.170224189758301
    3. '(ans' → logprob: -2.795224189758301
    4. '(value' → logprob: -3.795224189758301
    5. '(x' → logprob: -4.170224189758301
    6. ' (' → logprob: -4.920224189758301
    7. '(n' → logprob: -4.920224189758301
    8. 'def' → logprob: -5.045224189758301
    9. '_i' → logprob: -5.170224189758301
    10. '_' → logprob: -6.170224189758301

Token 116: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0040807779878377914
    2. '(' → logprob: -5.504080772399902
    3. ' (' → logprob: -13.254080772399902
    4. '(n' → logprob: -15.129080772399902
    5. '(
' → logprob: -15.629080772399902
    6. '(I' → logprob: -17.37908172607422
    7. '(ii' → logprob: -17.62908172607422
    8. '(a' → logprob: -17.75408172607422
    9. 'def' → logprob: -17.87908172607422
    10. '(s' → logprob: -18.00408172607422

Token 117: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010374975390732288
    2. ')' → logprob: -5.010375022888184
    3. '):
' → logprob: -5.635375022888184
    4. ' ):' → logprob: -10.635375022888184
    5. '):
' → logprob: -11.260375022888184
    6. '   ' → logprob: -11.385375022888184
    7. '-' → logprob: -11.510375022888184
    8. ',' → logprob: -12.010375022888184
    9. ' ' → logprob: -12.135375022888184
    10. ':' → logprob: -12.510375022888184

Token 118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019895849749445915
    2. ' return' → logprob: -4.519896030426025
    3. 'return' → logprob: -4.894896030426025
    4. ' i' → logprob: -7.269896030426025
    5. 'i' → logprob: -7.394896030426025
    6. '	return' → logprob: -12.394895553588867
    7. ' ' → logprob: -12.519895553588867
    8. '  ' → logprob: -12.894895553588867
    9. '    ' → logprob: -13.144895553588867
    10. '       ' → logprob: -15.144895553588867

Token 119: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.0352697372436523
    2. 'return' (adapté à ' return') → logprob: -1.4102697372436523
    3. '   ' → logprob: -1.5352697372436523
    4. 'i' → logprob: -2.1602697372436523
    5. ' i' → logprob: -2.6602697372436523
    6. ' ' → logprob: -9.285269737243652
    7. '    ' → logprob: -10.910269737243652
    8. '  ' → logprob: -10.910269737243652
    9. '	return' → logprob: -11.285269737243652
    10. '0' → logprob: -11.785269737243652

Token 120: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3132689297199249
    2. 'i' → logprob: -1.3132688999176025
    3. '   ' → logprob: -12.438268661499023
    4. '	i' → logprob: -13.313268661499023
    5. ' ' → logprob: -14.438268661499023
    6. ' ' → logprob: -14.813268661499023
    7. '(i' → logprob: -14.813268661499023
    8. '_i' → logprob: -16.563268661499023
    9. '  ' → logprob: -16.813268661499023
    10. '0' → logprob: -17.188268661499023

Token 121: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.26984190940856934
    2. ' -' → logprob: -1.5198419094085693
    3. '<|end|>' → logprob: -4.519842147827148
    4. ' ' → logprob: -5.144842147827148
    5. '+' → logprob: -7.519842147827148
    6. ' +' → logprob: -9.144842147827148
    7. '```' → logprob: -9.894842147827148
    8. '<|end|>' → logprob: -10.019842147827148
    9. '-
' → logprob: -10.144842147827148
    10. '1' → logprob: -10.269842147827148

Token 122: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005935432855039835
    2. ' ' → logprob: -5.1309356689453125
    3. '<|end|>' → logprob: -12.255935668945312
    4. '0' → logprob: -14.380935668945312
    5. '```' → logprob: -14.755935668945312
    6. '   ' → logprob: -15.005935668945312
    7. '	' → logprob: -15.755935668945312
    8. ' ' → logprob: -15.818435668945312
    9. 'i' → logprob: -15.818435668945312
    10. '<|end|>' → logprob: -16.568435668945312

Token 123: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.35706390615087e-05
    2. ' ' → logprob: -10.375033378601074
    3. '<|end|>' → logprob: -13.125033378601074
    4. '0' → logprob: -16.25003433227539
    5. '```' → logprob: -16.62503433227539
    6. '   ' → logprob: -18.12503433227539
    7. '<|end|>' → logprob: -18.62503433227539
    8. 'def' → logprob: -19.12503433227539
    9. '2' → logprob: -19.25003433227539
    10. '
' → logprob: -19.37503433227539

Token 124: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 125: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.013330229558050632
    2. 'x' → logprob: -4.888330459594727
    3. 'n' → logprob: -5.763330459594727
    4. '#' → logprob: -6.888330459594727
    5. 'a' → logprob: -7.513330459594727
    6. 'd' → logprob: -7.888330459594727
    7. 'i' → logprob: -8.888330459594727
    8. '```' → logprob: -9.013330459594727
    9. ':' → logprob: -9.513330459594727
    10. 'for' → logprob: -9.888330459594727

Token 126: ' subtract' (ID: 71973)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.021155066788196564
    2. 'main' → logprob: -4.521154880523682
    3. ' compute' → logprob: -5.271154880523682
    4. ' solve' → logprob: -5.896154880523682
    5. ' find' → logprob: -7.771154880523682
    6. ' process' → logprob: -7.896154880523682
    7. 'compute' → logprob: -8.02115535736084
    8. 'solve' → logprob: -8.52115535736084
    9. ' binary' → logprob: -8.77115535736084
    10. ' calculate' → logprob: -9.27115535736084

Token 127: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.152794361114502
    2. '(value' → logprob: -1.402794361114502
    3. '(ai' → logprob: -1.902794361114502
    4. '(a' → logprob: -2.152794361114502
    5. '_ai' → logprob: -2.527794361114502
    6. '(ans' → logprob: -3.277794361114502
    7. '_' → logprob: -4.027794361114502
    8. '(x' → logprob: -5.027794361114502
    9. '(answer' → logprob: -5.402794361114502
    10. '_value' → logprob: -5.527794361114502

Token 128: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017861925065517426
    2. ',b' → logprob: -4.142861843109131
    3. 'i' → logprob: -7.642861843109131
    4. '1' → logprob: -7.642861843109131
    5. ' ,' → logprob: -8.267862319946289
    6. 'b' → logprob: -8.517862319946289
    7. ')' → logprob: -9.392862319946289
    8. '_,' → logprob: -9.642862319946289
    9. '_b' → logprob: -9.892862319946289
    10. '_i' → logprob: -9.892862319946289

Token 129: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.10024290531873703
    2. ' b' → logprob: -2.350242853164673
    3. ')' → logprob: -11.225242614746094
    4. ' ' → logprob: -11.725242614746094
    5. '1' → logprob: -11.725242614746094
    6. '<|end|>' → logprob: -13.975242614746094
    7. ')b' → logprob: -13.975242614746094
    8. 'a' → logprob: -14.225242614746094
    9. 'i' → logprob: -14.475242614746094
    10. 'x' → logprob: -14.725242614746094

Token 130: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.029851965606212616
    2. ')' → logprob: -3.5298519134521484
    3. '):
' → logprob: -9.279851913452148
    4. '):

' → logprob: -13.279851913452148
    5. ' ):' → logprob: -13.529851913452148
    6. 'a' → logprob: -14.029851913452148
    7. '):
' → logprob: -14.154851913452148
    8. ':' → logprob: -14.279851913452148
    9. '(a' → logprob: -15.029851913452148
    10. ',' → logprob: -15.279851913452148

Token 131: '   ' (ID: 271)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.4750475585460663
    2. 'a' → logprob: -0.9750475883483887
    3. ' return' → logprob: -7.100047588348389
    4. '   ' → logprob: -8.97504711151123
    5. 'return' → logprob: -11.10004711151123
    6. '	a' → logprob: -13.22504711151123
    7. ' ' → logprob: -13.97504711151123
    8. '    ' → logprob: -14.97504711151123
    9. ' =' → logprob: -15.47504711151123
    10. '(a' → logprob: -16.600048065185547

Token 132: ' return' (ID: 622)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2924724519252777
    2. 'a' → logprob: -1.7924724817276
    3. ' return' → logprob: -2.5424723625183105
    4. 'return' (adapté à ' return') → logprob: -4.7924723625183105
    5. '   ' → logprob: -9.667472839355469
    6. '    ' → logprob: -12.042472839355469
    7. ' ' → logprob: -13.792472839355469
    8. ' ' → logprob: -13.917472839355469
    9. '	a' → logprob: -14.667472839355469
    10. '```' → logprob: -15.292472839355469

Token 133: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5759397745132446
    2. ' a' → logprob: -0.8259397745132446
    3. '(a' → logprob: -15.825940132141113
    4. ' ' → logprob: -16.200939178466797
    5. ' ' → logprob: -16.325939178466797
    6. '	a' → logprob: -16.575939178466797
    7. ' (' → logprob: -17.200939178466797
    8. '_a' → logprob: -17.575939178466797
    9. '(' → logprob: -18.950939178466797
    10. ''a' → logprob: -19.825939178466797

Token 134: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10021228343248367
    2. '-' → logprob: -2.350212335586548
    3. ' ' → logprob: -12.850212097167969
    4. ' ' → logprob: -13.475212097167969
    5. '-b' → logprob: -14.100212097167969
    6. '_' → logprob: -15.475212097167969
    7. '<|end|>' → logprob: -15.725212097167969
    8. '[' → logprob: -16.10021209716797
    9. ' -
' → logprob: -16.35021209716797
    10. ' –' → logprob: -16.72521209716797

Token 135: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.31330859661102295
    2. ' b' → logprob: -1.313308596611023
    3. ' ' → logprob: -10.563308715820312
    4. '1' → logprob: -10.813308715820312
    5. '	b' → logprob: -14.313308715820312
    6. ' б' → logprob: -16.313308715820312
    7. ' ' → logprob: -16.313308715820312
    8. '<|end|>' → logprob: -17.313308715820312
    9. ')b' → logprob: -17.688308715820312
    10. '_b' → logprob: -17.688308715820312

Token 136: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1114954948425293
    2. 'x' → logprob: -2.9864954948425293
    3. 'n' → logprob: -3.4864954948425293
    4. '#' → logprob: -4.486495494842529
    5. ':' → logprob: -5.111495494842529
    6. 'if' → logprob: -5.611495494842529
    7. 'i' → logprob: -6.736495494842529
    8. 'a' → logprob: -6.861495494842529
    9. '```' → logprob: -7.986495494842529
    10. ':def' → logprob: -8.611495971679688

Token 137: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13357838988304138
    2. 'x' → logprob: -2.758578300476074
    3. 'n' → logprob: -3.008578300476074
    4. '#' → logprob: -5.508578300476074
    5. 'a' → logprob: -5.883578300476074
    6. ':' → logprob: -5.883578300476074
    7. 'i' → logprob: -7.633578300476074
    8. 'if' → logprob: -7.883578300476074
    9. '```' → logprob: -7.883578300476074
    10. '
' → logprob: -8.508578300476074

Token 138: ' compute' (ID: 23864)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.6067837476730347
    2. ' main' → logprob: -0.9817837476730347
    3. 'compute' → logprob: -3.606783866882324
    4. 'max' → logprob: -3.856783866882324
    5. ' compute' → logprob: -5.356783866882324
    6. ' max' → logprob: -5.606783866882324
    7. 'read' → logprob: -5.856783866882324
    8. 'add' → logprob: -5.856783866882324
    9. 'min' → logprob: -6.106783866882324
    10. 'def' → logprob: -6.231783866882324

Token 139: '_ans' (ID: 146254)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_max' → logprob: -1.2101982831954956
    2. '_sum' → logprob: -2.085198402404785
    3. '_min' → logprob: -2.085198402404785
    4. '_half' → logprob: -2.210198402404785
    5. '_x' → logprob: -2.460198402404785
    6. '_diff' → logprob: -2.710198402404785
    7. '_average' → logprob: -3.210198402404785
    8. '_difference' → logprob: -3.710198402404785
    9. '_abs' → logprob: -4.210198402404785
    10. '_mod' → logprob: -4.460198402404785

Token 140: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10265359282493591
    2. '():' → logprob: -2.7276535034179688
    3. '(lst' → logprob: -4.477653503417969
    4. '2' → logprob: -4.977653503417969
    5. '(ans' → logprob: -5.352653503417969
    6. '(a' → logprob: -5.977653503417969
    7. '(' → logprob: -6.102653503417969
    8. '(x' → logprob: -6.977653503417969
    9. '()' → logprob: -7.227653503417969
    10. '(value' → logprob: -7.727653503417969

Token 141: '(x' (ID: 4061)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.13867466151714325
    2. '(' → logprob: -2.138674736022949
    3. '():' → logprob: -5.013674736022949
    4. '(a' → logprob: -6.263674736022949
    5. '(ai' → logprob: -6.638674736022949
    6. '(lst' → logprob: -7.263674736022949
    7. '(answer' → logprob: -8.88867473602295
    8. '(s' → logprob: -9.01367473602295
    9. '(i' → logprob: -9.13867473602295
    10. '(sum' → logprob: -9.26367473602295

Token 142: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030411219224333763
    2. '):' → logprob: -3.5304112434387207
    3. ' ,' → logprob: -8.030410766601562
    4. ' ):' → logprob: -8.405410766601562
    5. '):
' → logprob: -10.280410766601562
    6. ')' → logprob: -10.905410766601562
    7. '1' → logprob: -11.405410766601562
    8. ',
' → logprob: -11.780410766601562
    9. ',i' → logprob: -11.780410766601562
    10. ':' → logprob: -12.655410766601562

Token 143: ' ans' (ID: 3345)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7478066682815552
    2. ' ans' → logprob: -1.9978066682815552
    3. 'n' → logprob: -2.1228065490722656
    4. ' i' → logprob: -2.4978065490722656
    5. ' lst' → logprob: -2.6228065490722656
    6. 'lst' → logprob: -3.8728065490722656
    7. 'i' → logprob: -4.122806549072266
    8. 'ans' → logprob: -4.122806549072266
    9. ' a' → logprob: -4.497806549072266
    10. 'a' → logprob: -5.060306549072266

Token 144: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003459064057096839
    2. '2' → logprob: -5.8784589767456055
    3. ')' → logprob: -8.003458976745605
    4. ',' → logprob: -8.503458976745605
    5. ' ' → logprob: -10.003458976745605
    6. 'subtract' → logprob: -11.815958976745605
    7. '<|end|>' → logprob: -11.878458976745605
    8. '   ' → logprob: -12.003458976745605
    9. '[' → logprob: -12.190958976745605
    10. ' -' → logprob: -12.690958976745605

Token 145: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25830787420272827
    2. ',' → logprob: -1.508307933807373
    3. ')' → logprob: -5.758307933807373
    4. '):
' → logprob: -6.508307933807373
    5. ' ):' → logprob: -6.508307933807373
    6. ' ,' → logprob: -9.133307456970215
    7. '):

' → logprob: -10.883307456970215
    8. ':' → logprob: -11.258307456970215
    9. ' )' → logprob: -11.258307456970215
    10. '   ' → logprob: -11.383307456970215

Token 146: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07412675023078918
    2. ':
' → logprob: -3.074126720428467
    3. '   ' → logprob: -4.074126720428467
    4. ' =' → logprob: -5.574126720428467
    5. '=' → logprob: -5.699126720428467
    6. ':return' → logprob: -7.949126720428467
    7. ' return' → logprob: -8.324127197265625
    8. 'def' → logprob: -9.324127197265625
    9. '):' → logprob: -9.449127197265625
    10. '():' → logprob: -9.949127197265625

Token 147: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.38793522119522095
    2. ' return' → logprob: -1.1379351615905762
    3. '   ' → logprob: -6.887935161590576
    4. 'x' → logprob: -10.512935638427734
    5. ' x' → logprob: -12.262935638427734
    6. 'def' → logprob: -12.262935638427734
    7. 'subtract' → logprob: -13.137935638427734
    8. ' ' → logprob: -13.762935638427734
    9. ':return' → logprob: -13.887935638427734
    10. '	return' → logprob: -14.387935638427734

Token 148: ' subtract' (ID: 71973)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.44978487491607666
    2. ' x' → logprob: -1.0747848749160767
    3. ' max' → logprob: -5.324784755706787
    4. 'max' → logprob: -5.449784755706787
    5. '(x' → logprob: -5.699784755706787
    6. ' (' → logprob: -5.824784755706787
    7. 'abs' → logprob: -6.199784755706787
    8. 'subtract' → logprob: -6.324784755706787
    9. ' subtract' → logprob: -7.574784755706787
    10. ' abs' → logprob: -8.199785232543945

Token 149: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00043460296001285315
    2. '(' → logprob: -7.750434398651123
    3. ' (' → logprob: -13.125434875488281
    4. '(
' → logprob: -13.250434875488281
    5. 'x' → logprob: -16.75043487548828
    6. '((' → logprob: -18.00043487548828
    7. '
' → logprob: -18.12543487548828
    8. '(int' → logprob: -18.25043487548828
    9. 's' → logprob: -19.62543487548828
    10. '(

' → logprob: -19.62543487548828

Token 150: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026658078422769904
    2. ' ,' → logprob: -8.250267028808594
    3. 'ans' → logprob: -12.750267028808594
    4. ' ans' → logprob: -13.750267028808594
    5. ',
' → logprob: -14.250267028808594
    6. '(ans' → logprob: -15.750267028808594
    7. '',' → logprob: -15.875267028808594
    8. ',",' → logprob: -16.500267028808594
    9. '`,' → logprob: -16.750267028808594
    10. ',int' → logprob: -17.125267028808594

Token 151: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.07889077812433243
    2. ' ans' → logprob: -2.578890800476074
    3. '(ans' → logprob: -14.203890800476074
    4. '	ans' → logprob: -14.953890800476074
    5. 'answer' → logprob: -17.203889846801758
    6. '_ans' → logprob: -18.328889846801758
    7. ' ' → logprob: -19.703889846801758
    8. '   ' → logprob: -20.453889846801758
    9. 'anst' → logprob: -20.578889846801758
    10. 'int' → logprob: -20.703889846801758

Token 152: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.375
    3. '１' → logprob: -18.875
    4. 's' → logprob: -19.9375
    5. '2' → logprob: -20.125
    6. '-' → logprob: -20.1875
    7. ')' → logprob: -20.25
    8. '...' → logprob: -20.375
    9. '_' → logprob: -20.75
    10. '[' → logprob: -20.8125

Token 153: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ')
' → logprob: -14.500000953674316
    3. ' )' → logprob: -15.125000953674316
    4. '))' → logprob: -16.250001907348633
    5. ')return' → logprob: -17.000001907348633
    6. ')`' → logprob: -17.500001907348633
    7. ')}' → logprob: -17.625001907348633
    8. ')

' → logprob: -18.000001907348633
    9. '),' → logprob: -18.500001907348633
    10. ')}}' → logprob: -18.875001907348633

Token 154: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0032477048225700855
    2. 'x' → logprob: -5.7532477378845215
    3. 'if' → logprob: -9.878247261047363
    4. 'n' → logprob: -12.378247261047363
    5. 'print' → logprob: -12.378247261047363
    6. '#' → logprob: -12.753247261047363
    7. ' def' → logprob: -13.003247261047363
    8. '```' → logprob: -13.003247261047363
    9. '<|end|>' → logprob: -13.378247261047363
    10. 'ndef' → logprob: -15.003247261047363

Token 155: ' subtract' (ID: 71973)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04768930748105049
    2. 'main' → logprob: -3.797689199447632
    3. ' def' → logprob: -4.047689437866211
    4. ' main' → logprob: -5.172689437866211
    5. 'read' → logprob: -7.797689437866211
    6. '__' → logprob: -8.297689437866211
    7. ' __' → logprob: -8.547689437866211
    8. ' ' → logprob: -10.172689437866211
    9. 'define' → logprob: -10.547689437866211
    10. ' read' → logprob: -10.797689437866211

Token 156: '_from' (ID: 12526)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0768255814909935
    2. '(a' → logprob: -2.8268256187438965
    3. '(x' → logprob: -4.7018256187438965
    4. '_' → logprob: -5.5768256187438965
    5. '(_' → logprob: -7.5768256187438965
    6. '(s' → logprob: -8.826825141906738
    7. ' (' → logprob: -9.076825141906738
    8. '(
' → logprob: -9.201825141906738
    9. '(ai' → logprob: -9.326825141906738
    10. 'def' → logprob: -9.451825141906738

Token 157: '_ans' (ID: 146254)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4680529534816742
    2. 'ans' → logprob: -2.093052864074707
    3. '_ans' → logprob: -2.718052864074707
    4. '(ans' → logprob: -3.468052864074707
    5. '_list' → logprob: -3.593052864074707
    6. 'list' → logprob: -3.593052864074707
    7. '(x' → logprob: -3.843052864074707
    8. '_x' → logprob: -4.093052864074707
    9. 'def' → logprob: -4.343052864074707
    10. 'value' → logprob: -4.718052864074707

Token 158: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3518642485141754
    2. '1' → logprob: -1.226864218711853
    3. '(' → logprob: -6.601864337921143
    4. '(ans' → logprob: -6.726864337921143
    5. 'def' → logprob: -8.226863861083984
    6. '(x' → logprob: -8.601863861083984
    7. '```' → logprob: -9.351863861083984
    8. '_' → logprob: -9.601863861083984
    9. '(a' → logprob: -10.476863861083984
    10. '3' → logprob: -10.914363861083984

Token 159: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.038206618279218674
    2. '(' → logprob: -3.2882065773010254
    3. '(a' → logprob: -10.288207054138184
    4. 'def' → logprob: -10.413207054138184
    5. '(ai' → logprob: -10.413207054138184
    6. '(def' → logprob: -10.663207054138184
    7. '(answer' → logprob: -10.788207054138184
    8. ' (' → logprob: -11.163207054138184
    9. '(i' → logprob: -12.663207054138184
    10. '(
' → logprob: -13.413207054138184

Token 160: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8670179997570813e-05
    2. '_' → logprob: -11.875019073486328
    3. ')' → logprob: -12.375019073486328
    4. ' ' → logprob: -12.375019073486328
    5. ',' → logprob: -14.437519073486328
    6. '   ' → logprob: -14.687519073486328
    7. 'def' → logprob: -14.875019073486328
    8. '(' → logprob: -15.125019073486328
    9. '=' → logprob: -15.812519073486328
    10. '  ' → logprob: -16.250019073486328

Token 161: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022719393018633127
    2. ' ,' → logprob: -6.127272129058838
    3. '):' → logprob: -10.12727165222168
    4. ')' → logprob: -10.50227165222168
    5. ',a' → logprob: -12.37727165222168
    6. ',
' → logprob: -13.00227165222168
    7. '_,' → logprob: -13.87727165222168
    8. ' ' → logprob: -14.00227165222168
    9. ',i' → logprob: -14.00227165222168
    10. ' )' → logprob: -14.00227165222168

Token 162: ' ai' (ID: 8440)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.885101318359375
    2. 'ai' → logprob: -1.760101318359375
    3. ' ai' → logprob: -2.635101318359375
    4. ' ans' → logprob: -2.635101318359375
    5. 'x' → logprob: -2.885101318359375
    6. 'lst' → logprob: -3.260101318359375
    7. 'compute' → logprob: -3.260101318359375
    8. '1' → logprob: -3.635101318359375
    9. ')' → logprob: -3.635101318359375
    10. ' x' → logprob: -3.760101318359375

Token 163: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.026575112715363503
    2. ')' → logprob: -4.526575088500977
    3. '):
' → logprob: -4.526575088500977
    4. ',' → logprob: -5.526575088500977
    5. ' ):' → logprob: -7.901575088500977
    6. '[' → logprob: -9.901575088500977
    7. '):
' → logprob: -10.401575088500977
    8. '   ' → logprob: -10.401575088500977
    9. ':' → logprob: -10.526575088500977
    10. '(' → logprob: -10.776575088500977

Token 164: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3272714912891388
    2. '   ' → logprob: -1.7022714614868164
    3. '(ans' → logprob: -2.8272714614868164
    4. ':
' → logprob: -4.327271461486816
    5. '=' → logprob: -4.452271461486816
    6. '):' → logprob: -5.452271461486816
    7. ' ans' → logprob: -5.827271461486816
    8. ' =' → logprob: -6.327271461486816
    9. ':return' → logprob: -7.202271461486816
    10. ' return' → logprob: -7.452271461486816

Token 165: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.1993032991886139
    2. 'return' (adapté à ' return') → logprob: -1.8243032693862915
    3. ' ans' → logprob: -4.074303150177002
    4. 'ans' → logprob: -6.324303150177002
    5. '   ' → logprob: -7.574303150177002
    6. 'subtract' → logprob: -10.82430362701416
    7. '=' → logprob: -11.82430362701416
    8. ' =' → logprob: -11.82430362701416
    9. '(ans' → logprob: -12.19930362701416
    10. ':' → logprob: -12.44930362701416

Token 166: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.20152093470096588
    2. ' ans' → logprob: -1.7015209197998047
    3. '(ans' → logprob: -9.576520919799805
    4. 'subtract' → logprob: -10.326520919799805
    5. 'sub' → logprob: -13.076520919799805
    6. '	ans' → logprob: -13.201520919799805
    7. ' subtract' → logprob: -13.701520919799805
    8. '_ans' → logprob: -15.326520919799805
    9. 'answer' → logprob: -16.951520919799805
    10. ' ' → logprob: -16.951520919799805

Token 167: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -14.000001907348633
    3. '_' → logprob: -14.875001907348633
    4. '<|end|>' → logprob: -16.500001907348633
    5. '１' → logprob: -17.000001907348633
    6. '' → logprob: -17.125001907348633
    7. '   ' → logprob: -17.187501907348633
    8. '۱' → logprob: -17.375001907348633
    9. ' _' → logprob: -17.375001907348633
    10. '[' → logprob: -17.437501907348633

Token 168: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5232018232345581
    2. '-' → logprob: -0.8982018232345581
    3. ' ' → logprob: -10.523201942443848
    4. ' ' → logprob: -10.523201942443848
    5. '<|end|>' → logprob: -11.398201942443848
    6. '-ai' → logprob: -11.648201942443848
    7. ')' → logprob: -14.273201942443848
    8. '+' → logprob: -14.523201942443848
    9. '   ' → logprob: -14.898201942443848
    10. '=' → logprob: -15.148201942443848

Token 169: ' ai' (ID: 8440)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.3132699131965637
    2. ' ai' → logprob: -1.313269853591919
    3. '   ' → logprob: -12.81326961517334
    4. '_ai' → logprob: -13.06326961517334
    5. '(ai' → logprob: -13.31326961517334
    6. ' ' → logprob: -14.56326961517334
    7. '.ai' → logprob: -15.18826961517334
    8. '-ai' → logprob: -15.56326961517334
    9. ' ' → logprob: -15.68826961517334
    10. '  ' → logprob: -15.93826961517334

Token 170: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7502687573432922
    2. '<|end|>' → logprob: -1.1252686977386475
    3. '#' → logprob: -2.7502686977386475
    4. 'i' → logprob: -3.3752686977386475
    5. ':' → logprob: -3.5002686977386475
    6. 'x' → logprob: -3.7502686977386475
    7. ')' → logprob: -4.000268936157227
    8. '
' → logprob: -4.125268936157227
    9. 'n' → logprob: -5.250268936157227
    10. '.' → logprob: -5.750268936157227

Token 171: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13388174772262573
    2. 'x' → logprob: -2.2588818073272705
    3. 'n' → logprob: -4.383881568908691
    4. 'i' → logprob: -5.758881568908691
    5. 'if' → logprob: -6.008881568908691
    6. '#' → logprob: -7.008881568908691
    7. 'd' → logprob: -7.383881568908691
    8. 'a' → logprob: -7.883881568908691
    9. '```' → logprob: -8.508881568908691
    10. ' def' → logprob: -9.008881568908691

Token 172: ' abs' (ID: 8443)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.1503342241048813
    2. ' main' → logprob: -2.025334119796753
    3. 'compute' → logprob: -5.525334358215332
    4. 'def' → logprob: -6.400334358215332
    5. 'process' → logprob: -7.525334358215332
    6. 'read' → logprob: -8.150334358215332
    7. 'solve' → logprob: -8.150334358215332
    8. ' compute' → logprob: -8.775334358215332
    9. ' def' → logprob: -8.775334358215332
    10. 'calculate' → logprob: -9.025334358215332

Token 173: '_val' (ID: 13694)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005392124294303358
    2. '(abs' → logprob: -9.00053882598877
    3. '_' → logprob: -9.12553882598877
    4. '(a' → logprob: -9.62553882598877
    5. '<|end|>' → logprob: -10.50053882598877
    6. '(_)' → logprob: -11.00053882598877
    7. 'a' → logprob: -11.00053882598877
    8. '(x' → logprob: -11.00053882598877
    9. '("("' → logprob: -11.00053882598877
    10. '('' → logprob: -11.00053882598877

Token 174: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0019678890239447355
    2. '(a' → logprob: -7.126967906951904
    3. '(abs' → logprob: -7.251967906951904
    4. '(value' → logprob: -8.501967430114746
    5. '(x' → logprob: -9.251967430114746
    6. '()' → logprob: -10.876967430114746
    7. 'a' → logprob: -11.001967430114746
    8. 'def' → logprob: -11.251967430114746
    9. '("("' → logprob: -11.251967430114746
    10. '_' → logprob: -11.501967430114746

Token 175: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.025892067700624466
    2. '):
' → logprob: -3.9008920192718506
    3. ')' → logprob: -5.90089225769043
    4. '(x' → logprob: -6.02589225769043
    5. '(' → logprob: -8.77589225769043
    6. '):

' → logprob: -11.15089225769043
    7. '):
' → logprob: -12.15089225769043
    8. '   ' → logprob: -12.90089225769043
    9. ' ):' → logprob: -13.52589225769043
    10. 'x' → logprob: -13.77589225769043

Token 176: '   ' (ID: 271)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.28076034784317017
    2. '   ' → logprob: -2.0307602882385254
    3. ' abs' → logprob: -2.6557602882385254
    4. ' return' → logprob: -3.7807602882385254
    5. 'return' → logprob: -3.9057602882385254
    6. '(abs' → logprob: -8.155760765075684
    7. 'def' → logprob: -9.780760765075684
    8. '_abs' → logprob: -11.780760765075684
    9. '=' → logprob: -12.030760765075684
    10. '    
' → logprob: -12.530760765075684

Token 177: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.7316439747810364
    2. 'abs' → logprob: -0.9816439747810364
    3. ' return' → logprob: -2.2316439151763916
    4. ' abs' → logprob: -3.4816439151763916
    5. '   ' → logprob: -5.106644153594971
    6. 'def' → logprob: -10.981643676757812
    7. '(abs' → logprob: -13.106643676757812
    8. '    ' → logprob: -14.231643676757812
    9. '	return' → logprob: -14.231643676757812
    10. ' ' → logprob: -14.481643676757812

Token 178: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.3868734836578369
    2. ' abs' → logprob: -1.136873483657837
    3. '(abs' → logprob: -13.011873245239258
    4. '.abs' → logprob: -16.011873245239258
    5. '_abs' → logprob: -16.386873245239258
    6. 'x' → logprob: -17.136873245239258
    7. ' x' → logprob: -18.386873245239258
    8. '   ' → logprob: -18.636873245239258
    9. 'int' → logprob: -19.761873245239258
    10. 'fabs' → logprob: -20.136873245239258

Token 179: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.3132901191711426
    2. '(' → logprob: -1.3132901191711426
    3. '(
' → logprob: -11.563289642333984
    4. '<|end|>' → logprob: -11.688289642333984
    5. '(abs' → logprob: -12.688289642333984
    6. ' (' → logprob: -12.938289642333984
    7. 'x' → logprob: -13.063289642333984
    8. '(value' → logprob: -14.188289642333984
    9. '(

' → logprob: -14.313289642333984
    10. '()' → logprob: -15.563289642333984

Token 180: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.584239938296378e-06
    2. '())' → logprob: -12.250007629394531
    3. ')
' → logprob: -13.875007629394531
    4. '()' → logprob: -14.125007629394531
    5. ' )' → logprob: -14.500007629394531
    6. '(x' → logprob: -16.25000762939453
    7. ')

' → logprob: -16.37500762939453
    8. ')return' → logprob: -16.50000762939453
    9. '<|end|>' → logprob: -16.62500762939453
    10. '[' → logprob: -16.75000762939453

Token 181: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.029207762330770493
    2. 'x' → logprob: -3.654207706451416
    3. 'n' → logprob: -6.279207706451416
    4. 'if' → logprob: -7.029207706451416
    5. '#' → logprob: -10.279208183288574
    6. 'import' → logprob: -10.404208183288574
    7. 'print' → logprob: -11.029208183288574
    8. '```' → logprob: -11.529208183288574
    9. 'from' → logprob: -11.529208183288574
    10. 'a' → logprob: -11.779208183288574

Token 182: ' compute' (ID: 23864)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.41366398334503174
    2. 'main' → logprob: -1.1636639833450317
    3. 'max' → logprob: -4.913663864135742
    4. ' max' → logprob: -5.413663864135742
    5. 'def' → logprob: -5.538663864135742
    6. ' find' → logprob: -6.038663864135742
    7. ' def' → logprob: -6.163663864135742
    8. ' min' → logprob: -6.913663864135742
    9. 'find' → logprob: -7.163663864135742
    10. 'min' → logprob: -7.163663864135742

Token 183: '_diff' (ID: 41047)
  Prédit: '_diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_diff' → logprob: -0.8843798041343689
    2. '_min' → logprob: -1.3843798637390137
    3. '_abs' → logprob: -1.6343798637390137
    4. '_difference' → logprob: -2.5093798637390137
    5. '_max' → logprob: -4.259379863739014
    6. '_absolute' → logprob: -4.759379863739014
    7. '_distance' → logprob: -5.009379863739014
    8. 'diff' → logprob: -5.759379863739014
    9. '_m' → logprob: -5.884379863739014
    10. 'abs' → logprob: -6.009379863739014

Token 184: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.03762676566839218
    2. '(a' → logprob: -4.28762674331665
    3. '(abs' → logprob: -4.41262674331665
    4. '(' → logprob: -4.91262674331665
    5. '(x' → logprob: -5.78762674331665
    6. ' (' → logprob: -8.162627220153809
    7. '(answer' → logprob: -9.037627220153809
    8. '(prev' → logprob: -10.037627220153809
    9. '(diff' → logprob: -10.787627220153809
    10. '(value' → logprob: -10.787627220153809

Token 185: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2828303277492523
    2. '2' → logprob: -1.4078303575515747
    3. '_val' → logprob: -7.032830238342285
    4. '_' → logprob: -7.407830238342285
    5. ')' → logprob: -9.282830238342285
    6. 'val' → logprob: -10.032830238342285
    7. '_)' → logprob: -10.907830238342285
    8. ')_' → logprob: -12.282830238342285
    9. 'Val' → logprob: -12.407830238342285
    10. ' _' → logprob: -12.657830238342285

Token 186: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013641661498695612
    2. ' ,' → logprob: -6.626364231109619
    3. ',
' → logprob: -11.126363754272461
    4. ')' → logprob: -11.876363754272461
    5. ' -' → logprob: -12.501363754272461
    6. '-' → logprob: -13.126363754272461
    7. ' ' → logprob: -13.626363754272461
    8. '   ' → logprob: -13.751363754272461
    9. ',

' → logprob: -13.876363754272461
    10. '):
' → logprob: -13.876363754272461

Token 187: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.08729062229394913
    2. 'x' → logprob: -2.7122905254364014
    3. ' ans' → logprob: -4.9622907638549805
    4. 'ai' → logprob: -5.4622907638549805
    5. ' x' → logprob: -6.3372907638549805
    6. 'compute' → logprob: -6.3372907638549805
    7. '   ' → logprob: -7.8372907638549805
    8. 'abs' → logprob: -8.27479076385498
    9. 'half' → logprob: -8.52479076385498
    10. 'answer' → logprob: -8.52479076385498

Token 188: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00022487416572403163
    2. ')' → logprob: -8.750225067138672
    3. 'diff' → logprob: -10.875225067138672
    4. '```' → logprob: -11.375225067138672
    5. '1' → logprob: -11.625225067138672
    6. ',' → logprob: -12.000225067138672
    7. 's' → logprob: -12.375225067138672
    8. 'def' → logprob: -12.750225067138672
    9. '-' → logprob: -13.625225067138672
    10. '_' → logprob: -13.750225067138672

Token 189: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03373502567410469
    2. '):
' → logprob: -3.4087350368499756
    3. ')' → logprob: -10.283735275268555
    4. ',' → logprob: -11.033735275268555
    5. '):

' → logprob: -11.033735275268555
    6. ' ):' → logprob: -11.283735275268555
    7. '):
' → logprob: -11.783735275268555
    8. '   ' → logprob: -14.158735275268555
    9. ' ' → logprob: -15.158735275268555
    10. ' ):
' → logprob: -15.283735275268555

Token 190: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016208680346608162
    2. 'abs' → logprob: -4.391208648681641
    3. 'return' → logprob: -5.766208648681641
    4. ' return' → logprob: -7.891208648681641
    5. ' abs' → logprob: -8.64120864868164
    6. '(abs' → logprob: -12.14120864868164
    7. 'def' → logprob: -13.76620864868164
    8. '    ' → logprob: -14.39120864868164
    9. '  ' → logprob: -14.51620864868164
    10. '	return' → logprob: -14.64120864868164

Token 191: ' return' (ID: 622)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.006918899714946747
    2. 'return' (adapté à ' return') → logprob: -5.131918907165527
    3. ' abs' → logprob: -7.256918907165527
    4. '   ' → logprob: -8.631918907165527
    5. 'ans' → logprob: -9.506918907165527
    6. ' return' → logprob: -10.756918907165527
    7. 'min' → logprob: -12.506918907165527
    8. 'max' → logprob: -13.381918907165527
    9. '
' → logprob: -13.506918907165527
    10. '(abs' → logprob: -13.631918907165527

Token 192: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0028128400444984436
    2. ' abs' → logprob: -5.87781286239624
    3. '   ' → logprob: -12.877812385559082
    4. 'min' → logprob: -13.127812385559082
    5. '(abs' → logprob: -13.377812385559082
    6. 'ans' → logprob: -13.877812385559082
    7. 'int' → logprob: -14.877812385559082
    8. '```' → logprob: -15.877812385559082
    9. ' ' → logprob: -16.3153133392334
    10. '
' → logprob: -17.1278133392334

Token 193: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.25478288531303406
    2. '(ans' → logprob: -1.5047829151153564
    3. '(' → logprob: -6.254782676696777
    4. '(val' → logprob: -8.004782676696777
    5. 'val' → logprob: -8.129782676696777
    6. '_ans' → logprob: -9.129782676696777
    7. '(abs' → logprob: -10.004782676696777
    8. '_diff' → logprob: -10.254782676696777
    9. 'Val' → logprob: -10.629782676696777
    10. '(an' → logprob: -10.879782676696777

Token 194: '(sub' (ID: 19764)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.08402271568775177
    2. '(sub' → logprob: -2.8340227603912354
    3. '(' → logprob: -3.8340227603912354
    4. '((' → logprob: -9.834022521972656
    5. '(abs' → logprob: -9.959022521972656
    6. '(s' → logprob: -10.459022521972656
    7. '(com' → logprob: -10.584022521972656
    8. 'subtract' → logprob: -11.709022521972656
    9. '(answer' → logprob: -11.709022521972656
    10. ' (' → logprob: -12.584022521972656

Token 195: 'tract' (ID: 2642)
  Prédit: 'tract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tract' → logprob: -1.1041145626222715e-05
    2. 'stract' → logprob: -12.625011444091797
    3. 'tr' → logprob: -12.625011444091797
    4. ' tract' → logprob: -13.375011444091797
    5. 't' → logprob: -14.125011444091797
    6. '(ans' → logprob: -14.250011444091797
    7. 'TRACT' → logprob: -14.875011444091797
    8. '(' → logprob: -15.125011444091797
    9. 'tracted' → logprob: -15.375011444091797
    10. 'tractor' → logprob: -15.500011444091797

Token 196: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -3.7697225252486533e-06
    2. 'ans' → logprob: -12.875003814697266
    3. '(' → logprob: -13.875003814697266
    4. '(answer' → logprob: -15.625003814697266
    5. ' (' → logprob: -16.875003814697266
    6. '(
' → logprob: -17.000003814697266
    7. '(an' → logprob: -17.250003814697266
    8. '(abs' → logprob: -17.375003814697266
    9. ')' → logprob: -17.750003814697266
    10. ')(' → logprob: -18.625003814697266

Token 197: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '2' → logprob: -14.875000953674316
    3. 's' → logprob: -15.875000953674316
    4. 'er' → logprob: -18.3125
    5. '(' → logprob: -18.625
    6. '_' → logprob: -18.9375
    7. 't' → logprob: -19.4375
    8. 'r' → logprob: -19.4375
    9. ' ' → logprob: -19.4375
    10. ')' → logprob: -19.4375

Token 198: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.266944157890975e-05
    2. '(ans' → logprob: -10.375072479248047
    3. ' ,' → logprob: -10.750072479248047
    4. ',
' → logprob: -11.500072479248047
    5. 'ans' → logprob: -12.375072479248047
    6. '(' → logprob: -13.375072479248047
    7. ' ans' → logprob: -13.750072479248047
    8. ')' → logprob: -14.250072479248047
    9. ',

' → logprob: -14.625072479248047
    10. '2' → logprob: -15.000072479248047

Token 199: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0005707867676392198
    2. ' ans' → logprob: -7.500570774078369
    3. '(ans' → logprob: -11.000571250915527
    4. '	ans' → logprob: -14.625571250915527
    5. '   ' → logprob: -14.750571250915527
    6. '  ' → logprob: -16.50057029724121
    7. ' ' → logprob: -16.62557029724121
    8. '    ' → logprob: -17.00057029724121
    9. ')' → logprob: -17.25057029724121
    10. 'answer' → logprob: -17.87557029724121

Token 200: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00016194197814911604
    2. 'ans' → logprob: -8.750162124633789
    3. ' ans' → logprob: -13.750162124633789
    4. '   ' → logprob: -14.375162124633789
    5. ' ' → logprob: -14.875162124633789
    6. ')' → logprob: -15.000162124633789
    7. 's' → logprob: -15.250162124633789
    8. 'ance' → logprob: -16.12516212463379
    9. '[' → logprob: -16.25016212463379
    10. '(ans' → logprob: -16.37516212463379

Token 201: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.048642322421073914
    2. ')' → logprob: -3.04864239692688
    3. ')))' → logprob: -10.6736421585083
    4. '))
' → logprob: -10.7986421585083
    5. '(' → logprob: -12.4236421585083
    6. ')
' → logprob: -12.9236421585083
    7. '))

' → logprob: -13.7986421585083
    8. '()))' → logprob: -14.1736421585083
    9. '),' → logprob: -14.4236421585083
    10. ' ))' → logprob: -14.4236421585083

Token 202: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0014377313200384378
    2. 'x' → logprob: -6.751437664031982
    3. 'n' → logprob: -9.00143814086914
    4. 'if' → logprob: -9.12643814086914
    5. ' def' → logprob: -11.50143814086914
    6. '```' → logprob: -11.75143814086914
    7. '#' → logprob: -11.87643814086914
    8. 'print' → logprob: -13.25143814086914
    9. ')' → logprob: -13.50143814086914
    10. '()' → logprob: -14.00143814086914

Token 203: ' print' (ID: 2123)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.6662262678146362
    2. 'main' → logprob: -0.9162262678146362
    3. 'def' → logprob: -2.791226387023926
    4. 'read' → logprob: -4.041226387023926
    5. ' read' → logprob: -5.666226387023926
    6. ' def' → logprob: -5.791226387023926
    7. 'compute' → logprob: -8.041226387023926
    8. ' compute' → logprob: -8.791226387023926
    9. 'solve' → logprob: -8.791226387023926
    10. ' solve' → logprob: -9.666226387023926

Token 204: '_result' (ID: 11623)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0038430674467235804
    2. '()' → logprob: -5.628842830657959
    3. '("")' → logprob: -9.628843307495117
    4. '('' → logprob: -10.003843307495117
    5. '("("' → logprob: -10.003843307495117
    6. ' (' → logprob: -11.128843307495117
    7. '_' → logprob: -11.128843307495117
    8. '(
' → logprob: -11.128843307495117
    9. '(

' → logprob: -11.753843307495117
    10. '(`' → logprob: -12.128843307495117

Token 205: '(res' (ID: 8331)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018031466752290726
    2. '("("' → logprob: -4.518031597137451
    3. '()' → logprob: -5.643031597137451
    4. '('' → logprob: -6.268031597137451
    5. '("' → logprob: -6.893031597137451
    6. '("")' → logprob: -8.518031120300293
    7. '(()' → logprob: -9.393031120300293
    8. ' (' → logprob: -9.643031120300293
    9. '("""' → logprob: -10.518031120300293
    10. '((' → logprob: -10.643031120300293

Token 206: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9660322070121765
    2. '):' → logprob: -0.9660322070121765
    3. 'ult' → logprob: -1.4660322666168213
    4. '):
' → logprob: -5.091032028198242
    5. '(res' → logprob: -7.091032028198242
    6. '(result' → logprob: -8.466032028198242
    7. 'ect' → logprob: -8.716032028198242
    8. '):

' → logprob: -8.841032028198242
    9. 'res' → logprob: -9.466032028198242
    10. '   ' → logprob: -9.966032028198242

Token 207: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6113486289978027
    2. 'print' → logprob: -0.8613486289978027
    3. ' print' → logprob: -3.3613486289978027
    4. '(print' → logprob: -9.611349105834961
    5. ' res' → logprob: -11.111349105834961
    6. 'res' → logprob: -12.236349105834961
    7. '(res' → logprob: -12.236349105834961
    8. '(' → logprob: -13.111349105834961
    9. '```' → logprob: -13.361349105834961
    10. 'def' → logprob: -13.486349105834961

Token 208: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.10103292763233185
    2. ' print' → logprob: -2.3510329723358154
    3. '   ' → logprob: -7.101032733917236
    4. '```' → logprob: -13.351033210754395
    5. 'def' → logprob: -17.601032257080078
    6. '	print' → logprob: -18.351032257080078
    7. '(print' → logprob: -19.101032257080078
    8. 'pr' → logprob: -19.226032257080078
    9. '`' → logprob: -19.351032257080078
    10. '    
' → logprob: -19.476032257080078

Token 209: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0031793788075447083
    2. '(' → logprob: -5.753179550170898
    3. 'res' → logprob: -14.128179550170898
    4. '(result' → logprob: -14.378179550170898
    5. '()' → logprob: -15.628179550170898
    6. ' (' → logprob: -16.7531795501709
    7. '(f' → logprob: -17.0031795501709
    8. '(
' → logprob: -17.5031795501709
    9. ' res' → logprob: -17.7531795501709
    10. '(results' → logprob: -18.6281795501709

Token 210: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ')
' → logprob: -15.000000953674316
    3. ' )' → logprob: -15.625000953674316
    4. ')`' → logprob: -18.125
    5. '))' → logprob: -18.625
    6. '),' → logprob: -18.75
    7. ')

' → logprob: -19.125
    8. '())' → logprob: -19.25
    9. '()' → logprob: -19.5
    10. ')}' → logprob: -19.875

Token 211: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00011427151912357658
    2. 'x' → logprob: -9.625114440917969
    3. 'if' → logprob: -10.000114440917969
    4. ' def' → logprob: -13.500114440917969
    5. 'n' → logprob: -14.125114440917969
    6. '```' → logprob: -15.625114440917969
    7. '#' → logprob: -16.37511444091797
    8. '()' → logprob: -16.62511444091797
    9. 'import' → logprob: -17.25011444091797
    10. 'from' → logprob: -17.50011444091797

Token 212: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.5238662362098694
    2. ' main' → logprob: -0.8988662362098694
    3. 'solve' → logprob: -8.023866653442383
    4. 'def' → logprob: -8.273866653442383
    5. ' solve' → logprob: -9.148866653442383
    6. ' def' → logprob: -10.523866653442383
    7. 'process' → logprob: -11.773866653442383
    8. 'calculate' → logprob: -12.648866653442383
    9. 'compute' → logprob: -12.773866653442383
    10. ' process' → logprob: -13.148866653442383

Token 213: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.1756367712223437e-05
    2. '():
' → logprob: -11.625011444091797
    3. ' ():' → logprob: -13.000011444091797
    4. '()' → logprob: -14.625011444091797
    5. '(' → logprob: -16.875011444091797
    6. '():
' → logprob: -17.875011444091797
    7. '_' → logprob: -18.375011444091797
    8. '():

' → logprob: -19.125011444091797
    9. '(":' → logprob: -19.750011444091797
    10. '(:' → logprob: -19.875011444091797

Token 214: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10095329582691193
    2. 'x' → logprob: -2.9759533405303955
    3. ' x' → logprob: -3.1009533405303955
    4. '(x' → logprob: -12.350953102111816
    5. '()' → logprob: -13.100953102111816
    6. 'n' → logprob: -13.225953102111816
    7. '	x' → logprob: -13.225953102111816
    8. '    
' → logprob: -13.350953102111816
    9. '   ' → logprob: -13.350953102111816
    10. '```' → logprob: -13.725953102111816

Token 215: ' n' (ID: 297)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.002299182116985321
    2. ' x' → logprob: -6.2522993087768555
    3. '   ' → logprob: -8.002299308776855
    4. 'n' (adapté à ' n') → logprob: -10.502299308776855
    5. '
' → logprob: -12.252299308776855
    6. ' ' → logprob: -13.252299308776855
    7. '    
' → logprob: -14.627299308776855
    8. '#' → logprob: -15.377299308776855
    9. 'import' → logprob: -15.502299308776855
    10. ' n' → logprob: -15.627299308776855

Token 216: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.031786613166332245
    2. ',' → logprob: -3.5317866802215576
    3. '=' → logprob: -6.2817864418029785
    4. ' ,' → logprob: -8.906786918640137
    5. ' ' → logprob: -10.656786918640137
    6. ' =
' → logprob: -12.906786918640137
    7. ',x' → logprob: -14.656786918640137
    8. '=int' → logprob: -15.031786918640137
    9. ')' → logprob: -15.156786918640137
    10. '   ' → logprob: -15.281786918640137

Token 217: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.048588622361421585
    2. ' read' → logprob: -3.048588514328003
    3. 'int' → logprob: -14.423588752746582
    4. '   ' → logprob: -15.048588752746582
    5. ' int' → logprob: -15.923588752746582
    6. '	read' → logprob: -16.173587799072266
    7. '  ' → logprob: -16.673587799072266
    8. ' ' → logprob: -17.423587799072266
    9. '(read' → logprob: -17.673587799072266
    10. '_read' → logprob: -19.923587799072266

Token 218: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.004190586972981691
    2. '_' → logprob: -5.504190444946289
    3. '_list' → logprob: -10.379190444946289
    4. '_line' → logprob: -10.754190444946289
    5. '_in' → logprob: -11.379190444946289
    6. 'int' → logprob: -11.504190444946289
    7. '()' → logprob: -11.504190444946289
    8. '_input' → logprob: -12.254190444946289
    9. '_integer' → logprob: -12.254190444946289
    10. ' _' → logprob: -12.754190444946289

Token 219: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.1875571544806007e-05
    2. '()
' → logprob: -11.375011444091797
    3. '()

' → logprob: -15.625011444091797
    4. ' ()' → logprob: -16.250011444091797
    5. '()\' → logprob: -17.500011444091797
    6. '(' → logprob: -17.875011444091797
    7. '()"' → logprob: -18.500011444091797
    8. '()`' → logprob: -18.500011444091797
    9. '()
' → logprob: -18.625011444091797
    10. '(),' → logprob: -19.500011444091797

Token 220: '   ' (ID: 271)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7049591541290283
    2. '   ' → logprob: -0.7049591541290283
    3. ' x' → logprob: -4.454958915710449
    4. '
' → logprob: -10.07995891571045
    5. 'n' → logprob: -10.32995891571045
    6. ' ' → logprob: -10.82995891571045
    7. '	x' → logprob: -11.57995891571045
    8. '  ' → logprob: -12.70495891571045
    9. '    
' → logprob: -12.70495891571045
    10. '```' → logprob: -12.95495891571045

Token 221: ' a' (ID: 261)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.009144973941147327
    2. 'lst' → logprob: -4.7591447830200195
    3. 'arr' → logprob: -7.7591447830200195
    4. 'a' (adapté à ' a') → logprob: -9.50914478302002
    5. 'ai' → logprob: -11.88414478302002
    6. ' x' → logprob: -12.38414478302002
    7. '   ' → logprob: -12.75914478302002
    8. 'data' → logprob: -13.13414478302002
    9. 'xs' → logprob: -13.50914478302002
    10. '
' → logprob: -13.75914478302002

Token 222: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0067279222421348095
    2. '=' → logprob: -5.006727695465088
    3. ' ' → logprob: -12.381728172302246
    4. '_list' → logprob: -12.506728172302246
    5. 's' → logprob: -14.131728172302246
    6. '   ' → logprob: -14.131728172302246
    7. 'i' → logprob: -14.381728172302246
    8. '[' → logprob: -14.881728172302246
    9. ' =[' → logprob: -15.131728172302246
    10. '    ' → logprob: -15.381728172302246

Token 223: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.10020774602890015
    2. ' read' → logprob: -2.350207805633545
    3. '	read' → logprob: -14.100207328796387
    4. '(read' → logprob: -15.350207328796387
    5. '   ' → logprob: -17.225208282470703
    6. '  ' → logprob: -17.600208282470703
    7. '.read' → logprob: -17.850208282470703
    8. '_read' → logprob: -17.850208282470703
    9. '[]' → logprob: -18.225208282470703
    10. ' ' → logprob: -18.350208282470703

Token 224: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -4.751746746478602e-05
    2. '_' → logprob: -10.00004768371582
    3. 'list' → logprob: -14.75004768371582
    4. '()' → logprob: -14.87504768371582
    5. '_line' → logprob: -15.00004768371582
    6. '_lst' → logprob: -15.75004768371582
    7. ' _' → logprob: -15.75004768371582
    8. '_lists' → logprob: -16.25004768371582
    9. ')_' → logprob: -16.25004768371582
    10. ')' → logprob: -16.87504768371582

Token 225: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014167149551212788
    2. '()
' → logprob: -4.264167308807373
    3. '()
' → logprob: -13.639166831970215
    4. '()

' → logprob: -14.014166831970215
    5. ' ()' → logprob: -14.514166831970215
    6. '   ' → logprob: -14.764166831970215
    7. 'def' → logprob: -14.889166831970215
    8. '(' → logprob: -15.389166831970215
    9. '()`' → logprob: -16.63916778564453
    10. '()\' → logprob: -17.13916778564453

Token 226: '   ' (ID: 271)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.31350308656692505
    2. '   ' → logprob: -1.3135030269622803
    3. ' x' → logprob: -8.81350326538086
    4. '```' → logprob: -10.43850326538086
    5. '
' → logprob: -10.93850326538086
    6. '    
' → logprob: -11.18850326538086
    7. 'n' → logprob: -11.56350326538086
    8. 'i' → logprob: -12.43850326538086
    9. '	x' → logprob: -12.81350326538086
    10. 'for' → logprob: -13.31350326538086

Token 227: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.00031067515374161303
    2. 'ans' → logprob: -9.125310897827148
    3. 'a' → logprob: -9.625310897827148
    4. '   ' → logprob: -10.000310897827148
    5. 'i' → logprob: -11.125310897827148
    6. 'n' → logprob: -11.250310897827148
    7. 'for' → logprob: -11.375310897827148
    8. 'sum' → logprob: -11.500310897827148
    9. 's' → logprob: -11.750310897827148
    10. '
' → logprob: -11.875310897827148

Token 228: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016037417575716972
    2. '=' → logprob: -4.141037464141846
    3. ',' → logprob: -13.766036987304688
    4. '_' → logprob: -13.891036987304688
    5. ' ' → logprob: -14.641036987304688
    6. ' ' → logprob: -15.266036987304688
    7. ' =
' → logprob: -15.766036987304688
    8. '   ' → logprob: -16.391036987304688
    9. ' ,' → logprob: -17.016036987304688
    10. ' =
' → logprob: -17.266036987304688

Token 229: ' compute' (ID: 23864)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.14393192529678345
    2. ' compute' → logprob: -2.6439318656921387
    3. 'sum' → logprob: -3.0189318656921387
    4. 'compute' → logprob: -4.268931865692139
    5. ' read' → logprob: -10.268932342529297
    6. ' ' → logprob: -10.268932342529297
    7. ' a' → logprob: -11.268932342529297
    8. '0' → logprob: -11.268932342529297
    9. 'read' → logprob: -11.768932342529297
    10. '   ' → logprob: -12.268932342529297

Token 230: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.004192606080323458
    2. 'sum' → logprob: -5.50419282913208
    3. '_half' → logprob: -9.129192352294922
    4. '_' → logprob: -12.629192352294922
    5. '(sum' → logprob: -13.879192352294922
    6. ' sum' → logprob: -14.504192352294922
    7. 'half' → logprob: -15.004192352294922
    8. 'a' → logprob: -15.629192352294922
    9. '=sum' → logprob: -16.254192352294922
    10. '_max' → logprob: -17.129192352294922

Token 231: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -4.060365608893335e-05
    2. '(' → logprob: -10.125041007995605
    3. ' (' → logprob: -14.500041007995605
    4. '((' → logprob: -19.50004005432129
    5. '(A' → logprob: -19.62504005432129
    6. '(x' → logprob: -19.75004005432129
    7. '(ai' → logprob: -19.87504005432129
    8. '(lst' → logprob: -20.00004005432129
    9. '()' → logprob: -20.62504005432129
    10. ' ' → logprob: -20.62504005432129

Token 232: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018506382184568793
    2. ')
' → logprob: -8.625185012817383
    3. '())' → logprob: -13.000185012817383
    4. ')a' → logprob: -14.000185012817383
    5. '()' → logprob: -14.375185012817383
    6. ' )' → logprob: -14.500185012817383
    7. ')

' → logprob: -14.625185012817383
    8. '))' → logprob: -15.125185012817383
    9. ')
' → logprob: -15.500185012817383
    10. '(a' → logprob: -15.875185012817383

Token 233: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019960707053542137
    2. 'ans' → logprob: -4.019960880279541
    3. 'half' → logprob: -7.519960880279541
    4. '    
' → logprob: -7.894960880279541
    5. '
' → logprob: -8.394960403442383
    6. 'i' → logprob: -8.519960403442383
    7. ' ans' → logprob: -9.019960403442383
    8. '	ans' → logprob: -9.269960403442383
    9. '   ' → logprob: -9.519960403442383
    10. '```' → logprob: -10.644960403442383

Token 234: ' half' (ID: 6375)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.16970565915107727
    2. 'half' (adapté à ' half') → logprob: -1.9197056293487549
    3. 'i' → logprob: -5.294705867767334
    4. '   ' → logprob: -5.544705867767334
    5. ' half' → logprob: -8.919705390930176
    6. ' ans' → logprob: -9.169705390930176
    7. '
' → logprob: -9.794705390930176
    8. 'hal' → logprob: -9.919705390930176
    9. 'answer' → logprob: -10.044705390930176
    10. ' i' → logprob: -10.794705390930176

Token 235: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.0002694416616577655
    2. '_' → logprob: -8.250269889831543
    3. '_half' → logprob: -12.125269889831543
    4. ' _' → logprob: -14.250269889831543
    5. '=' → logprob: -14.500269889831543
    6. ' =' → logprob: -14.750269889831543
    7. '=_' → logprob: -14.750269889831543
    8. '_value' → logprob: -15.250269889831543
    9. '_a' → logprob: -15.750269889831543
    10. '_
' → logprob: -16.375268936157227

Token 236: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023245712742209435
    2. '=' → logprob: -3.7732458114624023
    3. ',' → logprob: -16.148244857788086
    4. ')' → logprob: -16.898244857788086
    5. '()' → logprob: -17.648244857788086
    6. ' ' → logprob: -17.648244857788086
    7. '(' → logprob: -17.898244857788086
    8. '_' → logprob: -18.148244857788086
    9. ' ' → logprob: -18.148244857788086
    10. ':' → logprob: -18.898244857788086

Token 237: ' compute' (ID: 23864)
  Prédit: ' compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.3868723213672638
    2. 'compute' → logprob: -1.1368722915649414
    3. ' x' → logprob: -14.011872291564941
    4. 'x' → logprob: -15.886872291564941
    5. ' ' → logprob: -16.011873245239258
    6. ' ' → logprob: -16.386873245239258
    7. '   ' → logprob: -17.136873245239258
    8. 'comput' → logprob: -17.261873245239258
    9. '.compute' → logprob: -17.886873245239258
    10. ' int' → logprob: -18.011873245239258

Token 238: '_half' (ID: 105284)
  Prédit: '_half'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_half' → logprob: -3.173704271830502e-06
    2. '_' → logprob: -13.25000286102295
    3. '_hal' → logprob: -13.87500286102295
    4. '_sum' → logprob: -15.25000286102295
    5. 'half' → logprob: -15.62500286102295
    6. '_HALF' → logprob: -18.125003814697266
    7. ' _' → logprob: -18.375003814697266
    8. ''_' → logprob: -18.750003814697266
    9. '"_' → logprob: -19.000003814697266
    10. '_value' → logprob: -19.000003814697266

Token 239: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0005555360112339258
    2. '(' → logprob: -7.500555515289307
    3. ' (' → logprob: -12.875555992126465
    4. '(
' → logprob: -18.12555503845215
    5. 'x' → logprob: -20.37555503845215
    6. ' ' → logprob: -20.87555503845215
    7. '(value' → logprob: -20.87555503845215
    8. '((' → logprob: -21.00055503845215
    9. '(

' → logprob: -21.37555503845215
    10. '(s' → logprob: -21.62555503845215

Token 240: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3080716346157715e-05
    2. ')
' → logprob: -10.750022888183594
    3. ' )' → logprob: -13.625022888183594
    4. ')

' → logprob: -15.125022888183594
    5. '   ' → logprob: -16.000022888183594
    6. ')
' → logprob: -17.375022888183594
    7. '),' → logprob: -18.000022888183594
    8. '()' → logprob: -18.500022888183594
    9. '))' → logprob: -18.500022888183594
    10. ')`' → logprob: -18.500022888183594

Token 241: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2842748165130615
    2. 'i' → logprob: -1.4092748165130615
    3. ' i' → logprob: -5.909275054931641
    4. 'ans' → logprob: -8.28427505493164
    5. '	i' → logprob: -10.03427505493164
    6. '```' → logprob: -10.15927505493164
    7. '    
' → logprob: -10.65927505493164
    8. '
' → logprob: -10.90927505493164
    9. ' ans' → logprob: -11.53427505493164
    10. '   ' → logprob: -12.40927505493164

Token 242: ' i' (ID: 575)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.03844834119081497
    2. 'i' (adapté à ' i') → logprob: -3.2884483337402344
    3. '   ' → logprob: -7.913448333740234
    4. ' ans' → logprob: -10.663448333740234
    5. 'n' → logprob: -12.038448333740234
    6. 'answer' → logprob: -12.663448333740234
    7. '
' → logprob: -13.288448333740234
    8. '	ans' → logprob: -13.663448333740234
    9. '(ans' → logprob: -13.913448333740234
    10. ' i' → logprob: -13.913448333740234

Token 243: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0005539863486774266
    2. '=' → logprob: -7.500554084777832
    3. ',' → logprob: -14.375554084777832
    4. ' ' → logprob: -16.125553131103516
    5. ' =
' → logprob: -16.875553131103516
    6. ' ,' → logprob: -17.000553131103516
    7. ' ' → logprob: -17.625553131103516
    8. ' =)' → logprob: -17.625553131103516
    9. ')' → logprob: -17.750553131103516
    10. '<|end|>' → logprob: -17.875553131103516

Token 244: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029756641015410423
    2. ' ' → logprob: -8.125297546386719
    3. '   ' → logprob: -14.500297546386719
    4. '1' → logprob: -14.812797546386719
    5. '۰' → logprob: -15.937797546386719
    6. 'increment' → logprob: -16.31279754638672
    7. '  ' → logprob: -16.81279754638672
    8. 'n' → logprob: -17.06279754638672
    9. 'def' → logprob: -17.43779754638672
    10. '[' → logprob: -17.50029754638672

Token 245: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00026848804554902017
    2. ' ' → logprob: -8.250268936157227
    3. '1' → logprob: -12.500268936157227
    4. 'increment' → logprob: -14.250268936157227
    5. '-' → logprob: -14.812768936157227
    6. ' -' → logprob: -14.875268936157227
    7. '   ' → logprob: -15.312768936157227
    8. 'n' → logprob: -15.687768936157227
    9. '000' → logprob: -16.187768936157227
    10. '(' → logprob: -16.187768936157227

Token 246: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1328611671924591
    2. '   ' → logprob: -2.1328611373901367
    3. '    
' → logprob: -6.007861137390137
    4. ' while' → logprob: -7.007861137390137
    5. 'while' → logprob: -7.257861137390137
    6. ' 
' → logprob: -8.007861137390137
    7. '  
' → logprob: -8.257861137390137
    8. '
' → logprob: -8.382861137390137
    9. '	while' → logprob: -8.507861137390137
    10. '	
' → logprob: -8.882861137390137

Token 247: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021410522982478142
    2. 'ans' → logprob: -4.7714104652404785
    3. '	ans' → logprob: -5.1464104652404785
    4. 'while' → logprob: -5.7714104652404785
    5. '	while' → logprob: -6.8964104652404785
    6. '
' → logprob: -7.3964104652404785
    7. '    
' → logprob: -7.5214104652404785
    8. ' while' → logprob: -7.6464104652404785
    9. ' ans' → logprob: -8.271410942077637
    10. '(ans' → logprob: -8.271410942077637

Token 248: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.00012701898231171072
    2. '   ' → logprob: -9.750126838684082
    3. 'j' → logprob: -10.000126838684082
    4. ' ans' → logprob: -11.625126838684082
    5. 'while' → logprob: -11.750126838684082
    6. '	ans' → logprob: -13.750126838684082
    7. 'answer' → logprob: -13.875126838684082
    8. '(ans' → logprob: -14.000126838684082
    9. 'i' → logprob: -14.250126838684082
    10. 'n' → logprob: -14.500126838684082

Token 249: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.024604277219623e-05
    2. ' =' → logprob: -11.000040054321289
    3. '_' → logprob: -11.250040054321289
    4. ' ' → logprob: -11.875040054321289
    5. ' _' → logprob: -13.000040054321289
    6. '   ' → logprob: -14.625040054321289
    7. '=' → logprob: -14.875040054321289
    8. '[' → logprob: -16.37504005432129
    9. '' → logprob: -17.00004005432129
    10. '_space' → logprob: -17.62504005432129

Token 250: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0076079354621469975
    2. '=' → logprob: -4.882607936859131
    3. ',' → logprob: -14.257607460021973
    4. ')' → logprob: -14.382607460021973
    5. ' ' → logprob: -15.757607460021973
    6. ' +=' → logprob: -16.25760841369629
    7. ' =)' → logprob: -16.25760841369629
    8. ' ,' → logprob: -17.00760841369629
    9. '_' → logprob: -17.25760841369629
    10. ' =
' → logprob: -17.38260841369629

Token 251: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.639096970204264e-05
    2. ' ' → logprob: -9.250096321105957
    3. 'a' → logprob: -15.250096321105957
    4. '   ' → logprob: -19.000097274780273
    5. '۰' → logprob: -19.875097274780273
    6. '00' → logprob: -20.250097274780273
    7. '```' → logprob: -20.375097274780273
    8. '<|end|>' → logprob: -20.625097274780273
    9. ' ' → logprob: -20.937597274780273
    10. 'i' → logprob: -21.000097274780273

Token 252: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.500006675720215
    3. 'a' → logprob: -12.875006675720215
    4. '۰' → logprob: -17.2500057220459
    5. '00' → logprob: -19.0625057220459
    6. '０' → logprob: -19.1875057220459
    7. '   ' → logprob: -19.1875057220459
    8. '(' → logprob: -19.3750057220459
    9. 'x' → logprob: -19.6875057220459
    10. '000' → logprob: -19.7500057220459

Token 253: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.29496368765830994
    2. '   ' → logprob: -1.4199637174606323
    3. '<|end|>' → logprob: -4.919963836669922
    4. '    
' → logprob: -5.544963836669922
    5. ' while' → logprob: -7.044963836669922
    6. '	while' → logprob: -8.169963836669922
    7. '	
' → logprob: -8.294963836669922
    8. '<|end|>' → logprob: -8.294963836669922
    9. ' 
' → logprob: -8.544963836669922
    10. 'while' → logprob: -8.544963836669922

Token 254: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5453187823295593
    2. '   ' → logprob: -0.9203187823295593
    3. '<|end|>' → logprob: -4.670318603515625
    4. '    
' → logprob: -5.670318603515625
    5. 'while' → logprob: -5.920318603515625
    6. ' while' → logprob: -6.170318603515625
    7. '	while' → logprob: -6.420318603515625
    8. '\n' → logprob: -7.670318603515625
    9. '	
' → logprob: -7.795318603515625
    10. '<|end|>' → logprob: -7.920318603515625

Token 255: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.060905952006578445
    2. '   ' → logprob: -3.310905933380127
    3. ' while' → logprob: -3.810905933380127
    4. '	while' → logprob: -7.685905933380127
    5. '
' → logprob: -12.185906410217285
    6. '```' → logprob: -12.435906410217285
    7. '    
' → logprob: -12.685906410217285
    8. 'def' → logprob: -14.185906410217285
    9. '<|end|>' → logprob: -14.435906410217285
    10. 'for' → logprob: -14.560906410217285

Token 256: ' loop' (ID: 11453)
  Prédit: ' loop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' loop' → logprob: -0.034193869680166245
    2. 'loop' → logprob: -3.409193754196167
    3. '(loop' → logprob: -7.534193992614746
    4. '   ' → logprob: -12.159193992614746
    5. ' (' → logprob: -12.409193992614746
    6. ' ' → logprob: -13.659193992614746
    7. ' not' → logprob: -14.159193992614746
    8. '(' → logprob: -14.409193992614746
    9. ' ' → logprob: -14.909193992614746
    10. '.loop' → logprob: -15.034193992614746

Token 257: '_condition' (ID: 64948)
  Prédit: '_condition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_condition' → logprob: -3.128163257315464e-07
    2. 'condition' → logprob: -15.5
    3. '_' → logprob: -17.5
    4. '(condition' → logprob: -17.875
    5. 'Condition' → logprob: -18.125
    6. '_cond' → logprob: -18.375
    7. '(' → logprob: -19.375
    8. ' condition' → logprob: -20.125
    9. '1' → logprob: -20.25
    10. ' _' → logprob: -20.875

Token 258: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -6.349075556499884e-05
    2. '(' → logprob: -9.7500638961792
    3. ' (' → logprob: -12.2500638961792
    4. '(answer' → logprob: -15.5000638961792
    5. 'ans' → logprob: -16.250062942504883
    6. '(
' → logprob: -17.750062942504883
    7. ' ans' → logprob: -18.750062942504883
    8. '	ans' → logprob: -19.125062942504883
    9. '(

' → logprob: -19.875062942504883
    10. '(ord' → logprob: -20.125062942504883

Token 259: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '   ' → logprob: -18.5
    3. '_' → logprob: -18.625
    4. '```' → logprob: -18.75
    5. '(i' → logprob: -19.25
    6. ',' → logprob: -19.375
    7. ' ' → logprob: -19.5
    8. ')' → logprob: -19.75
    9. 'def' → logprob: -19.875
    10. '...' → logprob: -20.0

Token 260: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014180023572407663
    2. ' ,' → logprob: -8.875142097473145
    3. ',
' → logprob: -13.500142097473145
    4. ')' → logprob: -15.375142097473145
    5. ',

' → logprob: -16.125141143798828
    6. ' ' → logprob: -16.875141143798828
    7. '

' → logprob: -17.500141143798828
    8. '(' → logprob: -17.500141143798828
    9. '‌,' → logprob: -17.500141143798828
    10. '   ' → logprob: -17.625141143798828

Token 261: ' half' (ID: 6375)
  Prédit: ' half'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' half' → logprob: -0.02975071594119072
    2. 'half' → logprob: -3.5297508239746094
    3. ' ' → logprob: -16.77975082397461
    4. 'hal' → logprob: -16.77975082397461
    5. '_half' → logprob: -17.15475082397461
    6. ',' → logprob: -18.77975082397461
    7. ' ' → logprob: -18.90475082397461
    8. 'Half' → logprob: -19.02975082397461
    9. ')' → logprob: -19.27975082397461
    10. ' hal' → logprob: -19.40475082397461

Token 262: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -5.512236498361744e-07
    2. ' _' → logprob: -15.875000953674316
    3. ',' → logprob: -16.375
    4. '_i' → logprob: -16.375
    5. 'x' → logprob: -16.5
    6. '   ' → logprob: -16.625
    7. '_' → logprob: -17.125
    8. '_,' → logprob: -18.0
    9. ',_' → logprob: -18.25
    10. ')' → logprob: -18.75

Token 263: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.803360495017841e-05
    2. ',i' → logprob: -9.750078201293945
    3. ' ,' → logprob: -10.875078201293945
    4. ',
' → logprob: -15.250078201293945
    5. '   ' → logprob: -15.375078201293945
    6. ')' → logprob: -17.250078201293945
    7. 'i' → logprob: -17.250078201293945
    8. '```' → logprob: -17.375078201293945
    9. ',n' → logprob: -17.625078201293945
    10. ',

' → logprob: -17.875078201293945

Token 264: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.018150296062231064
    2. ' i' → logprob: -4.018150329589844
    3. 'n' → logprob: -15.268150329589844
    4. '   ' → logprob: -16.018150329589844
    5. ')' → logprob: -17.143150329589844
    6. ' ' → logprob: -17.143150329589844
    7. '	i' → logprob: -17.643150329589844
    8. ' n' → logprob: -18.518150329589844
    9. ')i' → logprob: -18.518150329589844
    10. '[i' → logprob: -18.643150329589844

Token 265: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009561245678924024
    2. ',n' → logprob: -7.000956058502197
    3. ' ,' → logprob: -10.250956535339355
    4. ',
' → logprob: -12.375956535339355
    5. 'n' → logprob: -12.750956535339355
    6. '   ' → logprob: -14.000956535339355
    7. ')' → logprob: -15.000956535339355
    8. ',

' → logprob: -15.375956535339355
    9. '```' → logprob: -15.375956535339355
    10. '),' → logprob: -15.625956535339355

Token 266: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01815052703022957
    2. ' n' → logprob: -4.018150329589844
    3. '   ' → logprob: -14.518150329589844
    4. 'len' → logprob: -15.643150329589844
    5. ')n' → logprob: -16.893150329589844
    6. ')' → logprob: -17.018150329589844
    7. '	n' → logprob: -17.143150329589844
    8. '
' → logprob: -17.768150329589844
    9. '_n' → logprob: -18.018150329589844
    10. ' ' → logprob: -18.518150329589844

Token 267: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00307349837385118
    2. ')' → logprob: -6.003073692321777
    3. '):
' → logprob: -7.503073692321777
    4. ':' → logprob: -10.253073692321777
    5. '   ' → logprob: -12.128073692321777
    6. ' ):' → logprob: -12.503073692321777
    7. '):
' → logprob: -14.378073692321777
    8. ',' → logprob: -15.378073692321777
    9. '():' → logprob: -15.503073692321777
    10. '):

' → logprob: -15.753073692321777

Token 268: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010349531657993793
    2. '   ' → logprob: -7.251034736633301
    3. '        
' → logprob: -9.7510347366333
    4. '
' → logprob: -9.8760347366333
    5. '    
' → logprob: -10.2510347366333
    6. ' ans' → logprob: -10.5010347366333
    7. '    ' → logprob: -10.8760347366333
    8. ' ' → logprob: -11.1260347366333
    9. '     ' → logprob: -11.3760347366333
    10. '<|end|>' → logprob: -11.3760347366333

Token 269: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.2650345265865326
    2. '       ' → logprob: -1.515034556388855
    3. ' ans' → logprob: -4.8900346755981445
    4. '   ' → logprob: -5.2650346755981445
    5. 'ai' → logprob: -8.765034675598145
    6. '	ans' → logprob: -9.640034675598145
    7. '
' → logprob: -10.140034675598145
    8. ' ' → logprob: -10.515034675598145
    9. '           ' → logprob: -11.515034675598145
    10. '  ' → logprob: -12.140034675598145

Token 270: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. '=' → logprob: -15.625000953674316
    3. ' ' → logprob: -15.875000953674316
    4. ' =' → logprob: -16.0
    5. '```' → logprob: -16.625
    6. '_' → logprob: -17.0
    7. '   ' → logprob: -17.0
    8. '' → logprob: -17.375
    9. '
' → logprob: -18.8125
    10. ')' → logprob: -19.25

Token 271: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10037456452846527
    2. '=' → logprob: -2.350374460220337
    3. ' +=' → logprob: -8.725374221801758
    4. '+=' → logprob: -12.975374221801758
    5. ' ' → logprob: -14.100374221801758
    6. ',' → logprob: -14.100374221801758
    7. ')' → logprob: -14.475374221801758
    8. ' +' → logprob: -14.850374221801758
    9. ' ' → logprob: -15.350374221801758
    10. '+' → logprob: -15.600374221801758

Token 272: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.2519332468509674
    2. ' update' → logprob: -1.501933217048645
    3. 'increment' → logprob: -13.001933097839355
    4. '	update' → logprob: -13.876933097839355
    5. '   ' → logprob: -14.501933097839355
    6. '       ' → logprob: -16.001934051513672
    7. '(update' → logprob: -16.126934051513672
    8. '.update' → logprob: -16.251934051513672
    9. '    ' → logprob: -17.001934051513672
    10. '_update' → logprob: -17.126934051513672

Token 273: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0019085274543613195
    2. '(ans' → logprob: -6.876908302307129
    3. '_ans' → logprob: -7.126908302307129
    4. 'ans' → logprob: -9.876908302307129
    5. ' ans' → logprob: -11.001908302307129
    6. '1' → logprob: -13.376908302307129
    7. '_i' → logprob: -13.751908302307129
    8. '_' → logprob: -15.001908302307129
    9. 'c' → logprob: -15.126908302307129
    10. '```' → logprob: -15.251908302307129

Token 274: 'umsum' (ID: 197728)
  Prédit: 'umsum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umsum' → logprob: -0.08531037718057632
    2. 'ans' → logprob: -3.210310459136963
    3. 'sum' → logprob: -3.460310459136963
    4. '1' → logprob: -5.335310459136963
    5. 'ums' → logprob: -5.585310459136963
    6. 'um' → logprob: -7.460310459136963
    7. 's' → logprob: -7.835310459136963
    8. 'uns' → logprob: -9.585309982299805
    9. '(ans' → logprob: -9.835309982299805
    10. '_sum' → logprob: -9.835309982299805

Token 275: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -6.885492621222511e-05
    2. '(' → logprob: -9.625068664550781
    3. ' (' → logprob: -13.375068664550781
    4. 'ans' → logprob: -14.125068664550781
    5. '(answer' → logprob: -15.250068664550781
    6. ' ans' → logprob: -16.12506866455078
    7. '(
' → logprob: -16.75006866455078
    8. '	ans' → logprob: -17.62506866455078
    9. '```' → logprob: -19.25006866455078
    10. '(i' → logprob: -19.37506866455078

Token 276: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.500001907348633
    3. '_' → logprob: -15.750001907348633
    4. '   ' → logprob: -16.000001907348633
    5. '```' → logprob: -16.625001907348633
    6. ')' → logprob: -17.750001907348633
    7. 'i' → logprob: -18.250001907348633
    8. 'def' → logprob: -18.437501907348633
    9. ',' → logprob: -18.500001907348633
    10. '[' → logprob: -18.500001907348633

Token 277: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010783689096570015
    2. ',a' → logprob: -4.760783672332764
    3. 'a' → logprob: -6.510783672332764
    4. ' ,' → logprob: -7.385783672332764
    5. ' a' → logprob: -9.760784149169922
    6. '   ' → logprob: -13.885784149169922
    7. ')' → logprob: -14.760784149169922
    8. ' ' → logprob: -16.010784149169922
    9. '	a' → logprob: -16.135784149169922
    10. '```' → logprob: -16.635784149169922

Token 278: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.16022473573684692
    2. ' a' → logprob: -1.9102246761322021
    3. '	a' → logprob: -15.285224914550781
    4. ')' → logprob: -16.41022491455078
    5. '   ' → logprob: -16.53522491455078
    6. 'ai' → logprob: -17.03522491455078
    7. ')a' → logprob: -17.03522491455078
    8. ' ' → logprob: -17.28522491455078
    9. '_a' → logprob: -17.41022491455078
    10. '(a' → logprob: -17.91022491455078

Token 279: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.000263481488218531
    2. '[' → logprob: -8.250263214111328
    3. ' [' → logprob: -13.625263214111328
    4. ')' → logprob: -14.500263214111328
    5. 'i' → logprob: -15.375263214111328
    6. '[a' → logprob: -16.375263214111328
    7. '[
' → logprob: -17.125263214111328
    8. ' ' → logprob: -17.125263214111328
    9. '[j' → logprob: -17.375263214111328
    10. ')[' → logprob: -17.500263214111328

Token 280: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.034149281680583954
    2. ')' → logprob: -3.409149169921875
    3. '])
' → logprob: -8.034149169921875
    4. ')
' → logprob: -9.534149169921875
    5. ')]' → logprob: -10.409149169921875
    6. '))' → logprob: -10.784149169921875
    7. ']' → logprob: -11.159149169921875
    8. ' ])' → logprob: -11.159149169921875
    9. '[i' → logprob: -12.034149169921875
    10. ')])' → logprob: -12.409149169921875

Token 281: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005289019085466862
    2. '   ' → logprob: -5.380289077758789
    3. 'i' → logprob: -7.505289077758789
    4. ' i' → logprob: -9.130289077758789
    5. ' ' → logprob: -12.505289077758789
    6. '	i' → logprob: -13.005289077758789
    7. '  ' → logprob: -13.880289077758789
    8. '
' → logprob: -13.880289077758789
    9. '[i' → logprob: -14.880289077758789
    10. '```' → logprob: -15.005289077758789

Token 282: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.1801232099533081
    2. '   ' → logprob: -1.930123209953308
    3. ' i' → logprob: -3.9301233291625977
    4. '       ' → logprob: -9.930123329162598
    5. '	i' → logprob: -11.555123329162598
    6. '  ' → logprob: -13.805123329162598
    7. ' ' → logprob: -14.055123329162598
    8. '    ' → logprob: -14.305123329162598
    9. '     ' → logprob: -16.43012237548828
    10. '    
' → logprob: -16.68012237548828

Token 283: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25437310338020325
    2. ' =' → logprob: -1.5043730735778809
    3. ' +=' → logprob: -6.254373073577881
    4. '+=' → logprob: -7.629373073577881
    5. '+' → logprob: -10.879373550415039
    6. ' ' → logprob: -11.379373550415039
    7. ')' → logprob: -14.004373550415039
    8. ' +' → logprob: -14.879373550415039
    9. ' =)' → logprob: -15.129373550415039
    10. '(' → logprob: -15.379373550415039

Token 284: ' increment' (ID: 24032)
  Prédit: 'increment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'increment' → logprob: -0.07888978719711304
    2. ' increment' → logprob: -2.578889846801758
    3. ' incremental' → logprob: -17.328889846801758
    4. '.increment' → logprob: -18.703889846801758
    5. 'in' → logprob: -18.828889846801758
    6. 'i' → logprob: -19.203889846801758
    7. 'Increment' → logprob: -19.203889846801758
    8. '_increment' → logprob: -20.578889846801758
    9. 'increments' → logprob: -20.703889846801758
    10. ' i' → logprob: -20.703889846801758

Token 285: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0004338877333793789
    2. '(i' → logprob: -8.000433921813965
    3. 'i' → logprob: -9.250433921813965
    4. '(' → logprob: -14.375433921813965
    5. '```' → logprob: -14.500433921813965
    6. '   ' → logprob: -15.000433921813965
    7. '_(' → logprob: -15.250433921813965
    8. '_' → logprob: -15.500433921813965
    9. '(_' → logprob: -15.625433921813965
    10. '	i' → logprob: -16.37543296813965

Token 286: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -8.64970643306151e-05
    2. '(' → logprob: -9.625086784362793
    3. 'i' → logprob: -11.000086784362793
    4. '(
' → logprob: -12.625086784362793
    5. ' (' → logprob: -15.625086784362793
    6. ' i' → logprob: -16.750085830688477
    7. 's' → logprob: -18.000085830688477
    8. '(in' → logprob: -18.250085830688477
    9. '(n' → logprob: -18.750085830688477
    10. ' ' → logprob: -18.750085830688477

Token 287: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.051066520740278e-05
    2. ')
' → logprob: -9.750060081481934
    3. '   ' → logprob: -13.750060081481934
    4. '<|end|>' → logprob: -14.875060081481934
    5. ')

' → logprob: -15.125060081481934
    6. ' )' → logprob: -16.37506103515625
    7. ')return' → logprob: -16.75006103515625
    8. '))' → logprob: -17.12506103515625
    9. '())' → logprob: -17.62506103515625
    10. '),' → logprob: -17.62506103515625

Token 288: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019501789938658476
    2. 'ans' → logprob: -7.251950263977051
    3. 'i' → logprob: -7.876950263977051
    4. '
' → logprob: -8.87695026397705
    5. '    
' → logprob: -8.87695026397705
    6. ' i' → logprob: -9.00195026397705
    7. '```' → logprob: -9.00195026397705
    8. ' ans' → logprob: -9.12695026397705
    9. 'if' → logprob: -9.62695026397705
    10. 'while' → logprob: -10.12695026397705

Token 289: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9646533727645874
    2. 'if' → logprob: -1.0896533727645874
    3. 'ans' → logprob: -1.7146533727645874
    4. 'i' (adapté à ' i') → logprob: -2.339653491973877
    5. 'res' → logprob: -5.589653491973877
    6. 'diff' → logprob: -7.339653491973877
    7. ' if' → logprob: -7.839653491973877
    8. '#' → logprob: -8.089653015136719
    9. '```' → logprob: -8.589653015136719
    10. ' i' → logprob: -8.964653015136719

Token 290: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7396727800369263
    2. ' =' → logprob: -0.7396727800369263
    3. '<|end|>' → logprob: -3.7396726608276367
    4. ' ' → logprob: -4.739672660827637
    5. ' -=' → logprob: -5.864672660827637
    6. '-' → logprob: -5.989672660827637
    7. 'i' → logprob: -6.364672660827637
    8. ',' → logprob: -6.614672660827637
    9. ' -' → logprob: -7.364672660827637
    10. ')' → logprob: -7.614672660827637

Token 291: ' decrement' (ID: 121877)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.0006288022268563509
    2. ' decrement' → logprob: -7.37562894821167
    3. 'subtract' → logprob: -13.250628471374512
    4. 'increment' → logprob: -15.625628471374512
    5. '	de' → logprob: -16.625629425048828
    6. ' ' → logprob: -16.875629425048828
    7. 'i' → logprob: -17.250629425048828
    8. ' subtract' → logprob: -17.500629425048828
    9. '```' → logprob: -17.750629425048828
    10. ' de' → logprob: -17.875629425048828

Token 292: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -2.546478935983032e-05
    2. '(i' → logprob: -10.750025749206543
    3. 'i' → logprob: -12.500025749206543
    4. '(_' → logprob: -17.125024795532227
    5. '(' → logprob: -17.875024795532227
    6. 'I' → logprob: -18.375024795532227
    7. '_' → logprob: -18.500024795532227
    8. '\' → logprob: -18.500024795532227
    9. '_j' → logprob: -18.500024795532227
    10. '```' → logprob: -18.625024795532227

Token 293: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.000182921823579818
    2. '(' → logprob: -8.62518310546875
    3. 'i' → logprob: -12.75018310546875
    4. ' (' → logprob: -15.62518310546875
    5. '(I' → logprob: -16.37518310546875
    6. '()' → logprob: -16.50018310546875
    7. '(
' → logprob: -17.25018310546875
    8. '```' → logprob: -18.00018310546875
    9. '(int' → logprob: -18.50018310546875
    10. ' i' → logprob: -18.75018310546875

Token 294: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008061755215749145
    2. ')
' → logprob: -7.1258063316345215
    3. ' )' → logprob: -14.375805854797363
    4. ')

' → logprob: -14.500805854797363
    5. '   ' → logprob: -15.250805854797363
    6. ')i' → logprob: -16.25080680847168
    7. ')
' → logprob: -16.75080680847168
    8. '<|end|>' → logprob: -17.50080680847168
    9. ')#' → logprob: -17.62580680847168
    10. '),' → logprob: -17.87580680847168

Token 295: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5760983824729919
    2. 'ans' → logprob: -0.8260983824729919
    3. ' ans' → logprob: -9.201098442077637
    4. '
' → logprob: -10.951098442077637
    5. '```' → logprob: -11.326098442077637
    6. '	ans' → logprob: -11.451098442077637
    7. '    
' → logprob: -12.701098442077637
    8. '  ' → logprob: -12.826098442077637
    9. '(ans' → logprob: -12.951098442077637
    10. 'res' → logprob: -13.201098442077637

Token 296: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0013272607466205955
    2. '   ' → logprob: -6.876327037811279
    3. 'if' → logprob: -8.626327514648438
    4. 'res' → logprob: -9.751327514648438
    5. ' ans' → logprob: -10.876327514648438
    6. 'while' → logprob: -11.251327514648438
    7. '
' → logprob: -12.251327514648438
    8. 'ai' → logprob: -12.251327514648438
    9. '	ans' → logprob: -12.251327514648438
    10. '(ans' → logprob: -12.626327514648438

Token 297: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2014162540435791
    2. '2' → logprob: -1.701416254043579
    3. 'diff' → logprob: -14.576416015625
    4. '```' → logprob: -14.576416015625
    5. '_' → logprob: -14.701416015625
    6. 'result' → logprob: -15.076416015625
    7. 'print' → logprob: -15.326416015625
    8. 'ans' → logprob: -15.576416015625
    9. 'res' → logprob: -15.826416015625
    10. '   ' → logprob: -16.076416015625

Token 298: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0011703446507453918
    2. '=' → logprob: -6.7511701583862305
    3. ',' → logprob: -16.626171112060547
    4. ')' → logprob: -17.626171112060547
    5. ' =
' → logprob: -17.751171112060547
    6. ' ' → logprob: -18.001171112060547
    7. ' ' → logprob: -18.751171112060547
    8. ' =)' → logprob: -18.876171112060547
    9. '```' → logprob: -19.251171112060547
    10. '_' → logprob: -19.626171112060547

Token 299: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.25195977091789246
    2. ' compute' → logprob: -1.5019598007202148
    3. '   ' → logprob: -10.501959800720215
    4. 'subtract' → logprob: -13.251959800720215
    5. ' subtract' → logprob: -14.376959800720215
    6. ' ' → logprob: -15.501959800720215
    7. '.compute' → logprob: -15.626959800720215
    8. '_compute' → logprob: -16.0019588470459
    9. 'computer' → logprob: -16.8769588470459
    10. '  ' → logprob: -16.8769588470459

Token 300: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -1.3856492842023727e-06
    2. 'ans' → logprob: -14.125000953674316
    3. '_sub' → logprob: -15.250000953674316
    4. '_answer' → logprob: -16.250001907348633
    5. '_sum' → logprob: -16.375001907348633
    6. '(ans' → logprob: -16.500001907348633
    7. '	ans' → logprob: -18.125001907348633
    8. '_an' → logprob: -18.125001907348633
    9. '_ant' → logprob: -18.375001907348633
    10. 'Ans' → logprob: -18.625001907348633

Token 301: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '```' → logprob: -17.625
    3. 'sum' → logprob: -18.375
    4. '_' → logprob: -18.375
    5. 'er' → logprob: -18.5
    6. 'al' → logprob: -19.25
    7. '   ' → logprob: -19.25
    8. '[' → logprob: -19.5
    9. '₂' → logprob: -19.5
    10. '２' → logprob: -19.5

Token 302: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.005234952084720135
    2. '(' → logprob: -5.255234718322754
    3. '(
' → logprob: -13.880234718322754
    4. ' (' → logprob: -15.755234718322754
    5. 'x' → logprob: -17.00523567199707
    6. '(i' → logprob: -18.38023567199707
    7. '```' → logprob: -18.75523567199707
    8. '(
' → logprob: -19.38023567199707
    9. '(

' → logprob: -19.50523567199707
    10. '(X' → logprob: -19.63023567199707

Token 303: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.909333023941144e-05
    2. '(ans' → logprob: -9.875068664550781
    3. ' ,' → logprob: -11.875068664550781
    4. 'ans' → logprob: -12.250068664550781
    5. '   ' → logprob: -12.750068664550781
    6. '',' → logprob: -13.375068664550781
    7. ' ans' → logprob: -14.250068664550781
    8. ')' → logprob: -15.375068664550781
    9. '`,' → logprob: -15.750068664550781
    10. '",' → logprob: -16.50006866455078

Token 304: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.3306015716807451e-05
    2. ' ans' → logprob: -11.25001335144043
    3. '(ans' → logprob: -15.25001335144043
    4. '	ans' → logprob: -19.25001335144043
    5. '_ans' → logprob: -21.75001335144043
    6. 'answer' → logprob: -22.00001335144043
    7. '   ' → logprob: -22.12501335144043
    8. 'Ans' → logprob: -22.50001335144043
    9. ')' → logprob: -23.50001335144043
    10. 'ANS' → logprob: -23.62501335144043

Token 305: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -20.0
    3. '```' → logprob: -21.875
    4. '_' → logprob: -22.0
    5. '１' → logprob: -22.375
    6. '(' → logprob: -22.375
    7. ')' → logprob: -22.375
    8. '(ans' → logprob: -24.125
    9. '[' → logprob: -24.25
    10. 'ans' → logprob: -24.3125

Token 306: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004330532974563539
    2. ')
' → logprob: -7.750432968139648
    3. '   ' → logprob: -13.125432968139648
    4. ')

' → logprob: -15.625432968139648
    5. ' )' → logprob: -16.00043296813965
    6. ')i' → logprob: -17.25043296813965
    7. ')
' → logprob: -17.50043296813965
    8. ')`' → logprob: -18.87543296813965
    9. '),' → logprob: -19.00043296813965
    10. '))' → logprob: -19.25043296813965

Token 307: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7161639928817749
    2. 'res' → logprob: -1.341163992881775
    3. 'diff' → logprob: -1.466163992881775
    4. 'print' → logprob: -4.3411641120910645
    5. 'result' → logprob: -5.7161641120910645
    6. 'ans' → logprob: -6.0911641120910645
    7. ' res' → logprob: -9.341163635253906
    8. '```' → logprob: -9.341163635253906
    9. '    
' → logprob: -9.966163635253906
    10. '
' → logprob: -10.091163635253906

Token 308: ' ans' (ID: 3345)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.13574187457561493
    2. 'res' → logprob: -2.135741949081421
    3. 'ans' (adapté à ' ans') → logprob: -5.385741710662842
    4. 'result' → logprob: -6.135741710662842
    5. '   ' → logprob: -6.385741710662842
    6. 'print' → logprob: -9.0107421875
    7. 'difference' → logprob: -9.1357421875
    8. '```' → logprob: -11.0107421875
    9. ' diff' → logprob: -11.1357421875
    10. 'min' → logprob: -11.3857421875

Token 309: '1' (ID: 16)
  Prédit: '_diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_diff' → logprob: -0.4295695424079895
    2. 'diff' → logprob: -1.6795694828033447
    3. '2' → logprob: -2.4295694828033447
    4. ' =' → logprob: -3.0545694828033447
    5. '=' → logprob: -4.304569721221924
    6. '_' → logprob: -5.429569721221924
    7. '1' → logprob: -5.554569721221924
    8. '   ' → logprob: -6.429569721221924
    9. ' diff' → logprob: -7.054569721221924
    10. '	diff' → logprob: -7.179569721221924

Token 310: ' =' (ID: 314)
  Prédit: '_diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_diff' → logprob: -0.23994149267673492
    2. ',' → logprob: -1.9899414777755737
    3. 'diff' → logprob: -3.2399415969848633
    4. ' =' → logprob: -4.239941596984863
    5. '=' → logprob: -4.239941596984863
    6. ')' → logprob: -6.864941596984863
    7. '2' → logprob: -6.864941596984863
    8. '_abs' → logprob: -6.989941596984863
    9. '_difference' → logprob: -6.989941596984863
    10. '_' → logprob: -7.239941596984863

Token 311: ' subtract' (ID: 71973)
  Prédit: 'subtract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subtract' → logprob: -0.018444662913680077
    2. ' subtract' → logprob: -4.018444538116455
    3. 'sub' → logprob: -8.518445014953613
    4. 'de' → logprob: -9.893445014953613
    5. '   ' → logprob: -11.393445014953613
    6. ' decrement' → logprob: -11.518445014953613
    7. 'substr' → logprob: -11.643445014953613
    8. '	sub' → logprob: -12.393445014953613
    9. 'substring' → logprob: -12.518445014953613
    10. '=sub' → logprob: -13.393445014953613

Token 312: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -1.981667537620524e-06
    2. 'from' → logprob: -13.250001907348633
    3. '(ans' → logprob: -16.750001907348633
    4. 'From' → logprob: -18.000001907348633
    5. '_to' → logprob: -18.125001907348633
    6. '_FROM' → logprob: -18.750001907348633
    7. '_' → logprob: -19.000001907348633
    8. '(' → logprob: -19.125001907348633
    9. '```' → logprob: -19.375001907348633
    10. '   ' → logprob: -19.500001907348633

Token 313: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -0.20956486463546753
    2. 'ans' → logprob: -1.7095649242401123
    3. '(ans' → logprob: -4.834564685821533
    4. ' ans' → logprob: -9.084565162658691
    5. '	ans' → logprob: -10.334565162658691
    6. '_answer' → logprob: -11.209565162658691
    7. '```' → logprob: -12.834565162658691
    8. 'answer' → logprob: -13.334565162658691
    9. 'a' → logprob: -14.334565162658691
    10. '_answers' → logprob: -14.459565162658691

Token 314: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0033865992445498705
    2. '(ans' → logprob: -5.753386497497559
    3. 'ans' → logprob: -8.503386497497559
    4. '_ans' → logprob: -12.753386497497559
    5. '_' → logprob: -13.753386497497559
    6. ' ans' → logprob: -14.378386497497559
    7. '	ans' → logprob: -15.003386497497559
    8. 'a' → logprob: -15.128386497497559
    9. '   ' → logprob: -15.378386497497559
    10. '```' → logprob: -15.503386497497559

Token 315: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -3.128163257315464e-07
    2. 'ans' → logprob: -16.0
    3. '(' → logprob: -16.25
    4. '(answer' → logprob: -18.375
    5. '	ans' → logprob: -20.5
    6. ' (' → logprob: -20.75
    7. '(abs' → logprob: -21.125
    8. '(i' → logprob: -21.25
    9. '(ai' → logprob: -21.375
    10. '(an' → logprob: -21.875

Token 316: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '   ' → logprob: -16.0
    3. ' ' → logprob: -17.0
    4. 'def' → logprob: -18.5625
    5. '[' → logprob: -18.625
    6. '       ' → logprob: -18.875
    7. '_' → logprob: -19.0625
    8. '2' → logprob: -19.3125
    9. '１' → logprob: -19.3125
    10. ')' → logprob: -19.5

Token 317: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000585322268307209
    2. ',a' → logprob: -7.625585556030273
    3. ' ,' → logprob: -9.375585556030273
    4. 'a' → logprob: -11.625585556030273
    5. ' a' → logprob: -13.375585556030273
    6. '   ' → logprob: -14.625585556030273
    7. ',
' → logprob: -14.750585556030273
    8. '(a' → logprob: -14.750585556030273
    9. ')' → logprob: -15.125585556030273
    10. '),' → logprob: -15.375585556030273

Token 318: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -4.56102097814437e-05
    2. ' a' → logprob: -10.000045776367188
    3. '   ' → logprob: -16.000045776367188
    4. ')' → logprob: -17.750045776367188
    5. '0' → logprob: -18.125045776367188
    6. ')a' → logprob: -18.375045776367188
    7. ' ' → logprob: -19.000045776367188
    8. 'а' → logprob: -19.250045776367188
    9. '	a' → logprob: -19.375045776367188
    10. '(a' → logprob: -20.000045776367188

Token 319: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1994775377388578e-05
    2. 'i' → logprob: -11.625012397766113
    3. '[' → logprob: -12.750012397766113
    4. 'a' → logprob: -17.875011444091797
    5. '[
' → logprob: -18.750011444091797
    6. '[j' → logprob: -19.375011444091797
    7. '```' → logprob: -19.375011444091797
    8. '[a' → logprob: -19.750011444091797
    9. 's' → logprob: -20.000011444091797
    10. '
' → logprob: -20.125011444091797

Token 320: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018422940047457814
    2. ')
' → logprob: -8.625184059143066
    3. '))' → logprob: -13.250184059143066
    4. ')

' → logprob: -14.000184059143066
    5. ')`' → logprob: -14.250184059143066
    6. ' )' → logprob: -14.500184059143066
    7. ')i' → logprob: -15.500184059143066
    8. '   ' → logprob: -15.625184059143066
    9. ')a' → logprob: -15.750184059143066
    10. '[i' → logprob: -17.000185012817383

Token 321: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7072480320930481
    2. 'res' → logprob: -1.3322479724884033
    3. 'diff' → logprob: -1.5822479724884033
    4. 'print' → logprob: -4.207248210906982
    5. 'result' → logprob: -4.207248210906982
    6. 'ans' → logprob: -5.207248210906982
    7. '
' → logprob: -6.832248210906982
    8. ' res' → logprob: -7.957248210906982
    9. 'difference' → logprob: -8.707247734069824
    10. ' diff' → logprob: -9.082247734069824

Token 322: ' diff' (ID: 8868)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.627841055393219
    2. 'ans' → logprob: -1.2528409957885742
    3. 'diff' (adapté à ' diff') → logprob: -2.502840995788574
    4. '   ' → logprob: -2.627840995788574
    5. 'result' → logprob: -4.252840995788574
    6. 'print' → logprob: -4.752840995788574
    7. 'if' → logprob: -6.377840995788574
    8. 'i' → logprob: -7.502840995788574
    9. 'abs' → logprob: -7.627840995788574
    10. 'd' → logprob: -8.877840995788574

Token 323: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2097412794828415
    2. '_' → logprob: -1.709741234779358
    3. '=' → logprob: -4.959741115570068
    4. ')' → logprob: -6.834741115570068
    5. '(' → logprob: -10.084741592407227
    6. 's' → logprob: -10.334741592407227
    7. '_=' → logprob: -10.584741592407227
    8. ' _' → logprob: -10.834741592407227
    9. '_val' → logprob: -11.084741592407227
    10. '  ' → logprob: -11.334741592407227

Token 324: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.00861456897109747
    2. ' compute' → logprob: -4.758614540100098
    3. '   ' → logprob: -16.758615493774414
    4. 'abs' → logprob: -18.883615493774414
    5. '_compute' → logprob: -19.258615493774414
    6. '.compute' → logprob: -19.633615493774414
    7. ' ' → logprob: -21.133615493774414
    8. 'comput' → logprob: -21.508615493774414
    9. 'computer' → logprob: -21.758615493774414
    10. '  ' → logprob: -22.508615493774414

Token 325: '_diff' (ID: 41047)
  Prédit: '_diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_diff' → logprob: -2.1008713702030946e-06
    2. 'diff' → logprob: -13.125001907348633
    3. ' diff' → logprob: -18.125001907348633
    4. '_d' → logprob: -18.625001907348633
    5. '_ans' → logprob: -19.000001907348633
    6. '_val' → logprob: -19.375001907348633
    7. '_sum' → logprob: -19.375001907348633
    8. '_def' → logprob: -19.625001907348633
    9. '	diff' → logprob: -19.625001907348633
    10. '(diff' → logprob: -20.375001907348633

Token 326: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -6.704273118884885e-07
    2. 'ans' → logprob: -14.250000953674316
    3. '(answer' → logprob: -20.125
    4. ' (' → logprob: -20.875
    5. '(' → logprob: -21.375
    6. '	ans' → logprob: -21.75
    7. '(abs' → logprob: -22.0
    8. ' ans' → logprob: -22.125
    9. '(an' → logprob: -22.75
    10. '   ' → logprob: -23.375

Token 327: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. 's' → logprob: -15.75
    3. '   ' → logprob: -16.625
    4. ' ' → logprob: -16.75
    5. '```' → logprob: -17.125
    6. ',' → logprob: -17.75
    7. '(ans' → logprob: -18.0
    8. 'ser' → logprob: -18.4375
    9. ')' → logprob: -18.6875
    10. '2' → logprob: -18.8125

Token 328: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7729658540920354e-05
    2. ' ,' → logprob: -10.500027656555176
    3. ',
' → logprob: -16.750028610229492
    4. ' ans' → logprob: -18.000028610229492
    5. ')' → logprob: -18.500028610229492
    6. '   ' → logprob: -20.000028610229492
    7. ',

' → logprob: -20.375028610229492
    8. ',
' → logprob: -20.875028610229492
    9. '),' → logprob: -21.000028610229492
    10. '(ans' → logprob: -21.125028610229492

Token 329: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -6.682846287731081e-05
    2. ' ans' → logprob: -9.625066757202148
    3. '(ans' → logprob: -14.250066757202148
    4. '	ans' → logprob: -16.25006675720215
    5. 'Ans' → logprob: -18.25006675720215
    6. '   ' → logprob: -19.25006675720215
    7. 'a' → logprob: -19.62506675720215
    8. '_ans' → logprob: -20.00006675720215
    9. ' ' → logprob: -20.50006675720215
    10. 'ANS' → logprob: -20.50006675720215

Token 330: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. 's' → logprob: -16.75
    3. ' ' → logprob: -19.625
    4. '22' → logprob: -20.25
    5. '₂' → logprob: -21.25
    6. '۲' → logprob: -21.625
    7. 'z' → logprob: -21.875
    8. '２' → logprob: -22.25
    9. 'es' → logprob: -22.625
    10. ')' → logprob: -22.625

Token 331: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31346046924591064
    2. ')
' → logprob: -1.3134604692459106
    3. '   ' → logprob: -8.563460350036621
    4. ')
' → logprob: -12.563460350036621
    5. ')

' → logprob: -13.313460350036621
    6. ' )' → logprob: -13.813460350036621
    7. ' )
' → logprob: -13.813460350036621
    8. '
' → logprob: -14.938460350036621
    9. ' ' → logprob: -16.063461303710938
    10. ')#' → logprob: -17.188461303710938

Token 332: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5320495367050171
    2. '   ' → logprob: -0.9070495367050171
    3. 'res' → logprob: -6.157049655914307
    4. 'i' → logprob: -6.157049655914307
    5. 'min' → logprob: -6.907049655914307
    6. 'ans' → logprob: -7.407049655914307
    7. ' print' → logprob: -7.407049655914307
    8. 'while' → logprob: -7.532049655914307
    9. '```' → logprob: -7.782049655914307
    10. 'if' → logprob: -7.907049655914307

Token 333: ' res' (ID: 694)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.009294399060308933
    2. '   ' → logprob: -4.884294509887695
    3. 'if' → logprob: -7.884294509887695
    4. 'i' → logprob: -7.884294509887695
    5. 'while' → logprob: -8.634294509887695
    6. ' print' → logprob: -8.759294509887695
    7. 'res' (adapté à ' res') → logprob: -8.759294509887695
    8. 'result' → logprob: -9.134294509887695
    9. 'ans' → logprob: -9.634294509887695
    10. 'min' → logprob: -9.759294509887695

Token 334: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005391107406467199
    2. '=' → logprob: -5.2553911209106445
    3. 'ult' → logprob: -9.505391120910645
    4. 'ults' → logprob: -10.130391120910645
    5. ' ' → logprob: -11.630391120910645
    6. ',' → logprob: -12.005391120910645
    7. '_' → logprob: -12.255391120910645
    8. '   ' → logprob: -12.255391120910645
    9. 'ault' → logprob: -12.755391120910645
    10. ')' → logprob: -12.755391120910645

Token 335: ' subtract' (ID: 71973)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.031467504799366
    2. 'min' → logprob: -3.7814674377441406
    3. ' diff' → logprob: -5.531467437744141
    4. 'abs' → logprob: -6.156467437744141
    5. 'i' → logprob: -7.156467437744141
    6. 'str' → logprob: -8.53146743774414
    7. 'subtract' → logprob: -8.53146743774414
    8. 'a' → logprob: -8.53146743774414
    9. 'float' → logprob: -9.15646743774414
    10. 'ans' → logprob: -9.15646743774414

Token 336: '(a' (ID: 6271)
  Prédit: '(diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(diff' → logprob: -0.06804017722606659
    2. '(n' → logprob: -3.068040132522583
    3. '(x' → logprob: -4.443040370941162
    4. '(i' → logprob: -5.818040370941162
    5. '(' → logprob: -6.443040370941162
    6. '(ans' → logprob: -6.568040370941162
    7. '(res' → logprob: -6.943040370941162
    8. 'diff' → logprob: -8.943039894104004
    9. '(min' → logprob: -9.068039894104004
    10. '(a' → logprob: -9.068039894104004

Token 337: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003334393841214478
    2. '[' → logprob: -9.000333786010742
    3. '[n' → logprob: -9.000333786010742
    4. '[s' → logprob: -9.625333786010742
    5. 'i' → logprob: -12.500333786010742
    6. 's' → logprob: -12.500333786010742
    7. '[a' → logprob: -13.000333786010742
    8. 'a' → logprob: -13.875333786010742
    9. 'n' → logprob: -13.875333786010742
    10. ',i' → logprob: -14.125333786010742

Token 338: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01197420246899128
    2. ',d' → logprob: -4.636974334716797
    3. ' ,' → logprob: -6.261974334716797
    4. 'diff' → logprob: -8.761974334716797
    5. ',
' → logprob: -10.136974334716797
    6. ' diff' → logprob: -10.261974334716797
    7. ',res' → logprob: -11.136974334716797
    8. ',i' → logprob: -11.636974334716797
    9. '(diff' → logprob: -11.761974334716797
    10. '),' → logprob: -11.886974334716797

Token 339: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.00020413640595506877
    2. ' diff' → logprob: -8.500204086303711
    3. '	diff' → logprob: -14.750204086303711
    4. '
' → logprob: -15.375204086303711
    5. '(diff' → logprob: -17.25020408630371
    6. '   ' → logprob: -17.75020408630371
    7. '
' → logprob: -20.37520408630371
    8. '1' → logprob: -20.75020408630371
    9. 'd' → logprob: -21.25020408630371
    10. '```' → logprob: -21.37520408630371

Token 340: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12693797051906586
    2. ')
' → logprob: -2.1269378662109375
    3. ')
' → logprob: -12.001937866210938
    4. ')

' → logprob: -13.251937866210938
    5. ' )' → logprob: -14.001937866210938
    6. ' )
' → logprob: -15.376937866210938
    7. '   ' → logprob: -15.376937866210938
    8. '))' → logprob: -15.376937866210938
    9. '*' → logprob: -16.376937866210938
    10. ')`' → logprob: -16.626937866210938

Token 341: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008660659193992615
    2. '   ' → logprob: -4.758660793304443
    3. ' print' → logprob: -10.008660316467285
    4. '
' → logprob: -14.758660316467285
    5. '	print' → logprob: -15.258660316467285
    6. '```' → logprob: -15.633660316467285
    7. '(print' → logprob: -16.5086612701416
    8. '  ' → logprob: -16.8836612701416
    9. ' ' → logprob: -17.1336612701416
    10. '    
' → logprob: -17.3836612701416

Token 342: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.0280383548888494e-06
    2. ' print' → logprob: -14.125000953674316
    3. '   ' → logprob: -15.375000953674316
    4. '
' → logprob: -19.375001907348633
    5. '```' → logprob: -20.750001907348633
    6. '-print' → logprob: -20.875001907348633
    7. '(print' → logprob: -20.875001907348633
    8. 'res' → logprob: -21.125001907348633
    9. '	print' → logprob: -21.500001907348633
    10. '.print' → logprob: -21.625001907348633

Token 343: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.0021990251261740923
    2. '(' → logprob: -6.627199172973633
    3. '_res' → logprob: -8.127199172973633
    4. '(_' → logprob: -8.252199172973633
    5. '_' → logprob: -9.002199172973633
    6. '(res' → logprob: -9.502199172973633
    7. '(result' → logprob: -9.627199172973633
    8. '_(' → logprob: -10.127199172973633
    9. '_results' → logprob: -12.627199172973633
    10. ' (' → logprob: -13.752199172973633

Token 344: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -6.265633419388905e-05
    2. '(' → logprob: -10.375062942504883
    3. ' (' → logprob: -10.375062942504883
    4. 'res' → logprob: -16.125062942504883
    5. '(s' → logprob: -17.625062942504883
    6. '(re' → logprob: -17.750062942504883
    7. ' ' → logprob: -17.875062942504883
    8. '(result' → logprob: -18.375062942504883
    9. '(r' → logprob: -18.875062942504883
    10. '(
' → logprob: -18.875062942504883

Token 345: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ')
' → logprob: -13.625001907348633
    3. ' )' → logprob: -16.000001907348633
    4. '()' → logprob: -17.750001907348633
    5. ')i' → logprob: -18.125001907348633
    6. '))' → logprob: -18.125001907348633
    7. '())' → logprob: -18.250001907348633
    8. ')

' → logprob: -18.750001907348633
    9. ')`' → logprob: -19.625001907348633
    10. ')a' → logprob: -20.125001907348633

Token 346: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.016095371916890144
    2. '<|end|>' → logprob: -4.391095161437988
    3. '```' → logprob: -6.516095161437988
    4. '#' → logprob: -7.266095161437988
    5. 'main' → logprob: -7.766095161437988
    6. '
' → logprob: -7.891095161437988
    7. ' if' → logprob: -8.141095161437988
    8. ')' → logprob: -9.266095161437988
    9. '__' → logprob: -10.141095161437988
    10. '\n' → logprob: -10.391095161437988

Token 347: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4806663393974304
    2. '(' → logprob: -0.9806663393974304
    3. '#' → logprob: -6.105666160583496
    4. '```' → logprob: -6.480666160583496
    5. '(
' → logprob: -6.730666160583496
    6. '<|end|>' → logprob: -7.105666160583496
    7. '()
' → logprob: -8.105666160583496
    8. '
' → logprob: -8.230666160583496
    9. ')' → logprob: -9.730666160583496
    10. '[' → logprob: -10.855666160583496


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 345
Tokens correctement prédits (1ère position, stricte): 163
Tokens correctement prédits (1ère position, avec adaptation): 174
Tokens correctement prédits (top 10): 298
Précision stricte (1ère position): 47.25%
Précision adaptée (1ère position): 50.43%
Précision (top 10): 86.38%
================================================================================
