================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:41
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def is_rotation(x, y):
    if len(x) != len(y):
        return False
    i = 0
    while i < len(x):
        if x[i:] + x[:i] == y:
            return True
        i += 1
    return False

lmbd=lambda: [*input()]
A=lmbd()
B=lmbd()
result = None
if is_rotation(A,B):
    result = 'Yes'
else:
    result = 'No'
print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' is' (ID: 382)
  → Token d'amorce (pas de prédiction)

Token 2: '_rotation' (ID: 104748)
  → Token d'amorce (pas de prédiction)

Token 3: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0024203681387007236
    2. '_' → logprob: -6.127420425415039
    3. '(_' → logprob: -9.627420425415039
    4. '_(' → logprob: -10.127420425415039
    5. '(_:' → logprob: -10.127420425415039
    6. ' (' → logprob: -10.377420425415039
    7. '_of' → logprob: -11.627420425415039
    8. '(def' → logprob: -11.752420425415039
    9. '(s' → logprob: -12.002420425415039
    10. 's' → logprob: -12.252420425415039

Token 4: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.21344099938869476
    2. ',' → logprob: -1.838441014289856
    3. ')' → logprob: -3.8384408950805664
    4. '(' → logprob: -5.463440895080566
    5. 's' → logprob: -6.088440895080566
    6. ':' → logprob: -6.463440895080566
    7. '(x' → logprob: -6.713440895080566
    8. '[' → logprob: -7.088440895080566
    9. '_' → logprob: -8.088440895080566
    10. '.' → logprob: -8.213440895080566

Token 5: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.029756275936961174
    2. 'y' → logprob: -3.5297563076019287
    3. ' ' → logprob: -13.654756546020508
    4. ',' → logprob: -13.904756546020508
    5. '	y' → logprob: -14.154756546020508
    6. ' x' → logprob: -14.279756546020508
    7. ' s' → logprob: -14.529756546020508
    8. ',y' → logprob: -14.779756546020508
    9. '    ' → logprob: -15.529756546020508
    10. 'x' → logprob: -15.904756546020508

Token 6: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007839304395020008
    2. ':' → logprob: -5.382839202880859
    3. ')' → logprob: -5.757839202880859
    4. '```' → logprob: -11.13283920288086
    5. '):
' → logprob: -11.38283920288086
    6. ',' → logprob: -12.00783920288086
    7. ''):' → logprob: -12.63283920288086
    8. ' ):' → logprob: -12.75783920288086
    9. '(x' → logprob: -13.13283920288086
    10. '`:' → logprob: -13.38283920288086

Token 7: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.208653524518013
    2. '   ' → logprob: -2.208653450012207
    3. '(' → logprob: -2.583653450012207
    4. '():' → logprob: -6.833653450012207
    5. '```' → logprob: -7.708653450012207
    6. '(:' → logprob: -8.458653450012207
    7. ' (' → logprob: -8.708653450012207
    8. ':
' → logprob: -8.708653450012207
    9. '):' → logprob: -8.958653450012207
    10. ' ' → logprob: -9.083653450012207

Token 8: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014187362976372242
    2. ' if' → logprob: -5.389187335968018
    3. '```' → logprob: -6.264187335968018
    4. '#' → logprob: -6.639187335968018
    5. ' return' → logprob: -7.014187335968018
    6. 'if' (adapté à ' if') → logprob: -7.264187335968018
    7. 'return' → logprob: -7.389187335968018
    8. 'i' → logprob: -7.514187335968018
    9. ' ' → logprob: -7.764187335968018
    10. ' for' → logprob: -8.014187812805176

Token 9: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.5105414390563965
    2. ' x' → logprob: -1.0105414390563965
    3. 'len' → logprob: -3.6355414390563965
    4. 'x' → logprob: -4.8855414390563965
    5. ' ' → logprob: -6.3855414390563965
    6. ' not' → logprob: -8.635541915893555
    7. '(len' → logprob: -12.135541915893555
    8. '  ' → logprob: -12.260541915893555
    9. '   ' → logprob: -12.385541915893555
    10. '	len' → logprob: -13.260541915893555

Token 10: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.25212031602859497
    2. '(' → logprob: -1.5021202564239502
    3. ' (' → logprob: -9.252120018005371
    4. '(y' → logprob: -9.502120018005371
    5. '(s' → logprob: -11.252120018005371
    6. 'x' → logprob: -13.377120018005371
    7. ')' → logprob: -13.377120018005371
    8. 's' → logprob: -14.502120018005371
    9. '(len' → logprob: -14.502120018005371
    10. ' ' → logprob: -14.627120018005371

Token 11: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.225939872208983e-05
    2. ')==' → logprob: -11.125032424926758
    3. ' )' → logprob: -11.375032424926758
    4. ')!=' → logprob: -12.125032424926758
    5. '==' → logprob: -15.625032424926758
    6. '')' → logprob: -16.250032424926758
    7. '```' → logprob: -16.625032424926758
    8. '())' → logprob: -17.125032424926758
    9. '`)' → logprob: -17.375032424926758
    10. '!=' → logprob: -17.625032424926758

Token 12: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6489057540893555
    2. ' !=' → logprob: -1.0239057540893555
    3. '==' → logprob: -2.2739057540893555
    4. ')' → logprob: -4.6489057540893555
    5. '!=' → logprob: -5.2739057540893555
    6. ' )' → logprob: -8.398905754089355
    7. ')==' → logprob: -9.523905754089355
    8. '()' → logprob: -10.023905754089355
    9. ' ' → logprob: -10.023905754089355
    10. '```' → logprob: -10.023905754089355

Token 13: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.07889232039451599
    2. ' len' → logprob: -2.578892230987549
    3. '   ' → logprob: -13.953892707824707
    4. '	len' → logprob: -14.328892707824707
    5. '(len' → logprob: -14.578892707824707
    6. '=len' → logprob: -15.703892707824707
    7. '[len' → logprob: -16.07889175415039
    8. '<len' → logprob: -16.07889175415039
    9. '    ' → logprob: -16.82889175415039
    10. ' ' → logprob: -16.95389175415039

Token 14: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.008671184070408344
    2. '(' → logprob: -4.758671283721924
    3. '(x' → logprob: -10.508670806884766
    4. 'y' → logprob: -10.758670806884766
    5. ' (' → logprob: -12.008670806884766
    6. ')' → logprob: -14.008670806884766
    7. ' y' → logprob: -15.008670806884766
    8. '(
' → logprob: -15.383670806884766
    9. ')y' → logprob: -16.258670806884766
    10. '(len' → logprob: -16.383670806884766

Token 15: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003049723571166396
    2. ')' → logprob: -5.878049850463867
    3. '):
' → logprob: -8.378049850463867
    4. ':' → logprob: -12.003049850463867
    5. ''):' → logprob: -12.753049850463867
    6. ' ):' → logprob: -13.128049850463867
    7. '   ' → logprob: -13.753049850463867
    8. '):
' → logprob: -14.003049850463867
    9. '```' → logprob: -14.878049850463867
    10. ')):' → logprob: -15.003049850463867

Token 16: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2197161465883255
    2. ':' → logprob: -1.719716191291809
    3. ':return' → logprob: -4.5947160720825195
    4. ':
' → logprob: -5.0947160720825195
    5. '   ' → logprob: -6.9697160720825195
    6. ' return' → logprob: -8.21971607208252
    7. '):' → logprob: -8.71971607208252
    8. '):
' → logprob: -9.21971607208252
    9. ')' → logprob: -9.46971607208252
    10. ' :' → logprob: -9.59471607208252

Token 17: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24243488907814026
    2. ' return' → logprob: -1.6174348592758179
    3. 'return' (adapté à ' return') → logprob: -4.242434978485107
    4. '   ' → logprob: -6.742434978485107
    5. ':return' → logprob: -7.742434978485107
    6. '
' → logprob: -8.86743450164795
    7. '    ' → logprob: -8.86743450164795
    8. '```' → logprob: -8.99243450164795
    9. ' 
' → logprob: -9.11743450164795
    10. '\n' → logprob: -9.24243450164795

Token 18: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.10025595128536224
    2. 'False' → logprob: -2.3502559661865234
    3. ' True' → logprob: -9.975255966186523
    4. 'True' → logprob: -12.975255966186523
    5. ' None' → logprob: -14.975255966186523
    6. ' ' → logprob: -17.350255966186523
    7. 'None' → logprob: -17.475255966186523
    8. ' false' → logprob: -18.475255966186523
    9. ' ' → logprob: -19.725255966186523
    10. '(False' → logprob: -19.725255966186523

Token 19: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8320538997650146
    2. '    
' → logprob: -1.3320538997650146
    3. '   ' → logprob: -1.5820538997650146
    4. '  
' → logprob: -3.0820538997650146
    5. '\n' → logprob: -3.8320538997650146
    6. ' 
' → logprob: -4.207054138183594
    7. '   
' → logprob: -4.957054138183594
    8. '\' → logprob: -6.957054138183594
    9. '        
' → logprob: -7.332054138183594
    10. '     
' → logprob: -7.707054138183594

Token 20: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06875858455896378
    2. '    
' → logprob: -2.943758487701416
    3. '
' → logprob: -5.068758487701416
    4. '\n' → logprob: -6.193758487701416
    5. '  
' → logprob: -6.568758487701416
    6. ' 
' → logprob: -7.318758487701416
    7. ' return' → logprob: -7.943758487701416
    8. '   
' → logprob: -8.068758964538574
    9. '        
' → logprob: -8.318758964538574
    10. 'return' → logprob: -8.318758964538574

Token 21: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.664585292339325
    2. '\n' → logprob: -2.0395853519439697
    3. 'return' → logprob: -2.1645853519439697
    4. '    
' → logprob: -2.5395853519439697
    5. ' return' → logprob: -2.6645853519439697
    6. '
' → logprob: -3.4145853519439697
    7. ' if' → logprob: -4.289585113525391
    8. '  
' → logprob: -4.414585113525391
    9. 'x' → logprob: -4.789585113525391
    10. 'y' → logprob: -5.539585113525391

Token 22: ' =' (ID: 314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.34009504318237305
    2. 'f' → logprob: -1.715095043182373
    3. 'nd' → logprob: -2.340095043182373
    4. 's' → logprob: -5.715095043182373
    5. ' ' → logprob: -6.090095043182373
    6. 't' → logprob: -6.215095043182373
    7. 'nt' → logprob: -6.840095043182373
    8. '=' → logprob: -7.340095043182373
    9. '  ' → logprob: -7.340095043182373
    10. '+' → logprob: -7.590095043182373

Token 23: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16003113985061646
    2. ' ' → logprob: -2.0350310802459717
    3. ' y' → logprob: -4.285031318664551
    4. 'y' → logprob: -6.035031318664551
    5. 'x' → logprob: -7.535031318664551
    6. ' x' → logprob: -7.660031318664551
    7. '1' → logprob: -10.66003131866455
    8. '<|end|>' → logprob: -12.59753131866455
    9. ' (' → logprob: -13.91003131866455
    10. 'len' → logprob: -14.47253131866455

Token 24: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001156770158559084
    2. 'y' → logprob: -7.126156806945801
    3. 'x' → logprob: -8.5011568069458
    4. ' ' → logprob: -9.1261568069458
    5. '1' → logprob: -11.0011568069458
    6. ' y' → logprob: -11.3761568069458
    7. '-' → logprob: -12.2511568069458
    8. 'len' → logprob: -12.6261568069458
    9. '-y' → logprob: -14.0011568069458
    10. ' x' → logprob: -14.2511568069458

Token 25: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9957311153411865
    2. ' while' → logprob: -1.3707311153411865
    3. '
' → logprob: -2.1207311153411865
    4. 'while' → logprob: -2.3707311153411865
    5. '<|end|>' → logprob: -2.4957311153411865
    6. ' ' → logprob: -3.4957311153411865
    7. '    
' → logprob: -4.995731353759766
    8. '  ' → logprob: -5.120731353759766
    9. '	while' → logprob: -5.370731353759766
    10. ')' → logprob: -5.370731353759766

Token 27: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.28261739015579224
    2. ' while' → logprob: -1.4076173305511475
    3. '   ' → logprob: -7.532617568969727
    4. 'for' → logprob: -8.907617568969727
    5. 'if' → logprob: -9.032617568969727
    6. 'n' → logprob: -9.032617568969727
    7. '	while' → logprob: -9.157617568969727
    8. 'y' → logprob: -9.657617568969727
    9. 'While' → logprob: -10.032617568969727
    10. 'w' → logprob: -10.282617568969727

Token 28: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.06198292225599289
    2. 'i' → logprob: -2.8119828701019287
    3. ' True' → logprob: -12.561983108520508
    4. '	i' → logprob: -12.561983108520508
    5. '(i' → logprob: -13.061983108520508
    6. 'x' → logprob: -13.186983108520508
    7. '   ' → logprob: -13.436983108520508
    8. 'True' → logprob: -13.686983108520508
    9. ' x' → logprob: -14.186983108520508
    10. ' ' → logprob: -15.186983108520508

Token 29: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.07024139910936356
    2. '<' → logprob: -2.6952414512634277
    3. '<len' → logprob: -8.19524097442627
    4. '<n' → logprob: -11.57024097442627
    5. '<|end|>' → logprob: -11.94524097442627
    6. ' <=' → logprob: -13.07024097442627
    7. '<size' → logprob: -13.32024097442627
    8. '<x' → logprob: -13.32024097442627
    9. '<int' → logprob: -14.07024097442627
    10. 's' → logprob: -14.32024097442627

Token 30: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.11283327639102936
    2. 'len' → logprob: -2.237833261489868
    3. '(len' → logprob: -12.612833023071289
    4. '	len' → logprob: -12.612833023071289
    5. '<len' → logprob: -13.362833023071289
    6. '=len' → logprob: -14.487833023071289
    7. '[len' → logprob: -14.612833023071289
    8. '   ' → logprob: -14.862833023071289
    9. ' ' → logprob: -15.112833023071289
    10. '1' → logprob: -15.237833023071289

Token 31: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0047464873641729355
    2. '(y' → logprob: -5.879746437072754
    3. '(' → logprob: -6.254746437072754
    4. 'x' → logprob: -11.629746437072754
    5. ' (' → logprob: -12.379746437072754
    6. '(
' → logprob: -13.004746437072754
    7. '(s' → logprob: -13.504746437072754
    8. '(i' → logprob: -15.129746437072754
    9. 'y' → logprob: -15.254746437072754
    10. ')' → logprob: -15.254746437072754

Token 32: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.031592484563589096
    2. '):
' → logprob: -4.15659236907959
    3. ')' → logprob: -4.28159236907959
    4. ' ):' → logprob: -7.03159236907959
    5. ':' → logprob: -8.53159236907959
    6. ' and' → logprob: -8.65659236907959
    7. '   ' → logprob: -9.03159236907959
    8. '):

' → logprob: -9.15659236907959
    9. '):
' → logprob: -10.40659236907959
    10. ' )' → logprob: -10.53159236907959

Token 33: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09212848544120789
    2. '<|end|>' → logprob: -3.4671285152435303
    3. '   ' → logprob: -3.5921285152435303
    4. ' if' → logprob: -4.592128276824951
    5. ' ' → logprob: -4.967128276824951
    6. '    ' → logprob: -5.967128276824951
    7. 'if' → logprob: -6.467128276824951
    8. ':' → logprob: -6.717128276824951
    9. '<|end|>' → logprob: -6.717128276824951
    10. ' x' → logprob: -7.217128276824951

Token 34: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7016239166259766
    2. '       ' → logprob: -1.3266239166259766
    3. '<|end|>' → logprob: -2.4516239166259766
    4. 'if' (adapté à ' if') → logprob: -3.0766239166259766
    5. '   ' → logprob: -3.2016239166259766
    6. ' x' → logprob: -3.5766239166259766
    7. 'x' → logprob: -4.701623916625977
    8. ' ' → logprob: -5.201623916625977
    9. '    ' → logprob: -5.576623916625977
    10. '<|end|>' → logprob: -5.701623916625977

Token 35: ' x' (ID: 1215)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.11403056979179382
    2. ' x' → logprob: -2.364030599594116
    3. 'y' → logprob: -4.989030361175537
    4. 'x' → logprob: -4.989030361175537
    5. ' (' → logprob: -9.864030838012695
    6. '   ' → logprob: -11.239030838012695
    7. ' not' → logprob: -11.364030838012695
    8. '(x' → logprob: -11.364030838012695
    9. '(y' → logprob: -12.239030838012695
    10. ' ' → logprob: -12.739030838012695

Token 36: '[i' (ID: 1768)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -1.1467667818069458
    2. ' not' → logprob: -1.6467667818069458
    3. ' in' → logprob: -1.7717667818069458
    4. '!=' → logprob: -2.6467666625976562
    5. ' !=' → logprob: -2.7717666625976562
    6. ' ==' → logprob: -2.7717666625976562
    7. '+' → logprob: -3.0217666625976562
    8. '[i' → logprob: -3.1467666625976562
    9. '+i' → logprob: -3.7717666625976562
    10. ')' → logprob: -6.396766662597656

Token 37: ':]' (ID: 67377)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0041274381801486015
    2. ']!=' → logprob: -5.879127502441406
    3. ':]' → logprob: -6.754127502441406
    4. ']==' → logprob: -9.379127502441406
    5. '!=' → logprob: -10.379127502441406
    6. ' ]' → logprob: -10.504127502441406
    7. ':' → logprob: -12.754127502441406
    8. ' not' → logprob: -13.004127502441406
    9. ' :]' → logprob: -13.629127502441406
    10. '==' → logprob: -13.879127502441406

Token 38: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9001147150993347
    2. ' +' → logprob: -1.2751147747039795
    3. '+y' → logprob: -1.6501147747039795
    4. '+i' → logprob: -2.5251147747039795
    5. 'y' → logprob: -3.9001147747039795
    6. '+x' → logprob: -4.7751145362854
    7. ' in' → logprob: -5.1501145362854
    8. ' not' → logprob: -5.4001145362854
    9. '==' → logprob: -6.6501145362854
    10. 'x' → logprob: -8.025115013122559

Token 39: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0028049908578395844
    2. ' x' → logprob: -5.877804756164551
    3. '	x' → logprob: -16.877805709838867
    4. ' ' → logprob: -17.377805709838867
    5. 'y' → logprob: -17.877805709838867
    6. ')x' → logprob: -18.127805709838867
    7. ''x' → logprob: -18.127805709838867
    8. '+x' → logprob: -18.252805709838867
    9. '  ' → logprob: -18.502805709838867
    10. '(x' → logprob: -18.502805709838867

Token 40: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -7.517272024415433e-05
    2. '[:-' → logprob: -10.125075340270996
    3. '[' → logprob: -10.625075340270996
    4. '[:]' → logprob: -11.500075340270996
    5. '][:' → logprob: -15.000075340270996
    6. '[i' → logprob: -15.875075340270996
    7. ':' → logprob: -16.00007438659668
    8. ' [:' → logprob: -17.00007438659668
    9. ':i' → logprob: -18.00007438659668
    10. ' ' → logprob: -18.25007438659668

Token 41: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.320199877838604e-07
    2. ' i' → logprob: -14.75
    3. '<|end|>' → logprob: -19.625
    4. ' ' → logprob: -20.5
    5. '	i' → logprob: -21.0
    6. '   ' → logprob: -21.0
    7. '```' → logprob: -21.375
    8. ''i' → logprob: -21.5
    9. '<|end|>' → logprob: -22.25
    10. ')i' → logprob: -22.25

Token 42: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003178782993927598
    2. ' ]' → logprob: -6.253178596496582
    3. ']==' → logprob: -6.753178596496582
    4. ']!=' → logprob: -9.878178596496582
    5. '==' → logprob: -10.878178596496582
    6. ' ==' → logprob: -12.753178596496582
    7. ')' → logprob: -12.878178596496582
    8. ' not' → logprob: -13.503178596496582
    9. '']' → logprob: -14.003178596496582
    10. '!=' → logprob: -14.253178596496582

Token 43: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0792383998632431
    2. '==' → logprob: -2.5792384147644043
    3. ' !=' → logprob: -8.579237937927246
    4. ' ' → logprob: -9.204237937927246
    5. ')' → logprob: -11.079237937927246
    6. '=' → logprob: -11.329237937927246
    7. ')==' → logprob: -11.579237937927246
    8. ']==' → logprob: -11.579237937927246
    9. '!=' → logprob: -11.829237937927246
    10. ']' → logprob: -12.704237937927246

Token 44: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.04858794063329697
    2. 'y' → logprob: -3.0485880374908447
    3. '	y' → logprob: -15.173587799072266
    4. ' ' → logprob: -16.298587799072266
    5. ''y' → logprob: -17.048587799072266
    6. '(y' → logprob: -17.298587799072266
    7. ' ' → logprob: -17.423587799072266
    8. ')y' → logprob: -17.548587799072266
    9. '‘y' → logprob: -18.798587799072266
    10. '   ' → logprob: -18.923587799072266

Token 45: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0022803882602602243
    2. ':
' → logprob: -6.627280235290527
    3. ':return' → logprob: -7.252280235290527
    4. '       ' → logprob: -8.752280235290527
    5. '):' → logprob: -9.627280235290527
    6. ' :' → logprob: -11.127280235290527
    7. '   ' → logprob: -13.877280235290527
    8. '():' → logprob: -13.877280235290527
    9. '):
' → logprob: -14.127280235290527
    10. '           ' → logprob: -14.127280235290527

Token 46: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02933916263282299
    2. ':' → logprob: -4.02933931350708
    3. ':return' → logprob: -4.77933931350708
    4. ' return' → logprob: -6.65433931350708
    5. 'return' → logprob: -7.27933931350708
    6. '       ' → logprob: -7.77933931350708
    7. ':
' → logprob: -8.279338836669922
    8. '               ' → logprob: -10.904338836669922
    9. ' :' → logprob: -11.154338836669922
    10. '```' → logprob: -11.654338836669922

Token 47: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.9057567119598389
    2. 'return' (adapté à ' return') → logprob: -0.9057567119598389
    3. '               ' → logprob: -1.7807567119598389
    4. '           ' → logprob: -3.780756711959839
    5. ':return' → logprob: -9.280756950378418
    6. '   ' → logprob: -10.405756950378418
    7. '	return' → logprob: -10.405756950378418
    8. '       ' → logprob: -10.530756950378418
    9. ' ' → logprob: -12.030756950378418
    10. ' ' → logprob: -12.155756950378418

Token 48: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.10020667314529419
    2. ' True' → logprob: -2.3502066135406494
    3. '   ' → logprob: -16.97520637512207
    4. ' ' → logprob: -18.72520637512207
    5. '(True' → logprob: -19.10020637512207
    6. 'False' → logprob: -19.22520637512207
    7. '=True' → logprob: -20.35020637512207
    8. '  ' → logprob: -20.85020637512207
    9. '       ' → logprob: -21.22520637512207
    10. ' ' → logprob: -21.47520637512207

Token 49: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004354167729616165
    2. '
' → logprob: -5.504354000091553
    3. '   ' → logprob: -8.504354476928711
    4. '        
' → logprob: -10.129354476928711
    5. '
' → logprob: -12.004354476928711
    6. 'i' → logprob: -12.254354476928711
    7. '           ' → logprob: -12.879354476928711
    8. '\n' → logprob: -13.129354476928711
    9. '	' → logprob: -13.254354476928711
    10. '' → logprob: -13.254354476928711

Token 50: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00586704770103097
    2. '
' → logprob: -5.505867004394531
    3. '   ' → logprob: -6.505867004394531
    4. '        
' → logprob: -8.880867004394531
    5. '\n' → logprob: -10.255867004394531
    6. 'i' → logprob: -10.880867004394531
    7. '    
' → logprob: -11.255867004394531
    8. '	' → logprob: -11.505867004394531
    9. '\' → logprob: -11.755867004394531
    10. 'return' → logprob: -11.880867004394531

Token 51: ' i' (ID: 575)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08826851844787598
    2. '   ' → logprob: -2.588268518447876
    3. 'i' (adapté à ' i') → logprob: -4.713268280029297
    4. ' i' → logprob: -8.338268280029297
    5. '	i' → logprob: -9.963268280029297
    6. '```' → logprob: -11.213268280029297
    7. '	' → logprob: -11.338268280029297
    8. ' ' → logprob: -11.588268280029297
    9. '     ' → logprob: -11.838268280029297
    10. '
' → logprob: -11.963268280029297

Token 52: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.013213411904871464
    2. '+=' → logprob: -5.013213634490967
    3. ' +=' → logprob: -5.138213634490967
    4. ' +' → logprob: -7.513213634490967
    5. '++' → logprob: -9.888213157653809
    6. '=' → logprob: -12.763213157653809
    7. '<|end|>' → logprob: -13.138213157653809
    8. '   ' → logprob: -13.263213157653809
    9. '+++' → logprob: -13.638213157653809
    10. '1' → logprob: -13.763213157653809

Token 53: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.249780638725497e-05
    2. ' ' → logprob: -10.375032424926758
    3. '   ' → logprob: -13.875032424926758
    4. '```' → logprob: -15.625032424926758
    5. '       ' → logprob: -17.875032424926758
    6. '    ' → logprob: -18.437532424926758
    7. '  ' → logprob: -18.750032424926758
    8. '+' → logprob: -19.312532424926758
    9. '`' → logprob: -19.625032424926758
    10. ' ' → logprob: -19.812532424926758

Token 54: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.875000953674316
    3. '```' → logprob: -16.375001907348633
    4. '   ' → logprob: -17.750001907348633
    5. '`' → logprob: -19.750001907348633
    6. '+' → logprob: -20.500001907348633
    7. '  ' → logprob: -20.562501907348633
    8. '１' → logprob: -20.625001907348633
    9. '``' → logprob: -20.687501907348633
    10. '۱' → logprob: -20.875001907348633

Token 55: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02080181986093521
    2. 'return' → logprob: -4.020802021026611
    3. '```' → logprob: -6.520802021026611
    4. 'False' → logprob: -7.520802021026611
    5. ' return' → logprob: -7.520802021026611
    6. '       ' → logprob: -10.395801544189453
    7. ' ' → logprob: -11.395801544189453
    8. '  ' → logprob: -11.520801544189453
    9. 'Return' → logprob: -11.895801544189453
    10. '
' → logprob: -11.895801544189453

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.478954941034317
    2. 'return' → logprob: -0.9789549112319946
    3. 'False' → logprob: -5.978954792022705
    4. ' return' → logprob: -6.478954792022705
    5. '```' → logprob: -7.228954792022705
    6. '       ' → logprob: -10.978955268859863
    7. 'Return' → logprob: -11.103955268859863
    8. '  ' → logprob: -11.478955268859863
    9. ' ' → logprob: -11.603955268859863
    10. '	return' → logprob: -11.978955268859863

Token 57: ' return' (ID: 622)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.39156824350357056
    2. 'return' (adapté à ' return') → logprob: -1.1415681838989258
    3. '   ' → logprob: -6.016568183898926
    4. '```' → logprob: -6.391568183898926
    5. 'F' → logprob: -8.391568183898926
    6. 'r' → logprob: -9.016568183898926
    7. ' return' → logprob: -9.141568183898926
    8. 'Return' → logprob: -10.266568183898926
    9. '    
' → logprob: -10.391568183898926
    10. '
' → logprob: -11.641568183898926

Token 58: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0024756586644798517
    2. ' False' → logprob: -6.002475738525391
    3. '(False' → logprob: -19.37747573852539
    4. 'True' → logprob: -19.50247573852539
    5. '   ' → logprob: -19.75247573852539
    6. '_false' → logprob: -22.00247573852539
    7. 'false' → logprob: -22.25247573852539
    8. '=False' → logprob: -23.00247573852539
    9. '.False' → logprob: -23.25247573852539
    10. 'FALSE' → logprob: -24.50247573852539

Token 59: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: 'l' (ID: 75)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2940317392349243
    2. '<|end|>' → logprob: -1.6690317392349243
    3. '```' → logprob: -3.2940316200256348
    4. '\n' → logprob: -4.169031620025635
    5. '
' → logprob: -5.544031620025635
    6. ' ' → logprob: -5.794031620025635
    7. '\' → logprob: -6.044031620025635
    8. '<|end|>' → logprob: -6.919031620025635
    9. 'x' → logprob: -7.919031620025635
    10. '' → logprob: -7.919031620025635

Token 61: 'mb' (ID: 3294)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6769992709159851
    2. 'ist' → logprob: -1.5519993305206299
    3. 'en' → logprob: -1.8019993305206299
    4. 'i' → logprob: -2.80199933052063
    5. 'l' → logprob: -4.176999092102051
    6. 'is' → logprob: -4.426999092102051
    7. 'y' → logprob: -4.926999092102051
    8. 's' → logprob: -5.551999092102051
    9. 'ength' → logprob: -6.176999092102051
    10. '[' → logprob: -6.301999092102051

Token 62: 'd' (ID: 67)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8273249864578247
    2. 'da' → logprob: -1.3273249864578247
    3. 'd' → logprob: -1.8273249864578247
    4. ' =' → logprob: -2.952324867248535
    5. 'ambda' → logprob: -3.327324867248535
    6. '=' → logprob: -4.077324867248535
    7. 'b' → logprob: -4.077324867248535
    8. '=lambda' → logprob: -4.827324867248535
    9. '(lambda' → logprob: -6.327324867248535
    10. '(' → logprob: -7.202324867248535

Token 63: '=lambda' (ID: 64865)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00022094044834375381
    2. ' a' → logprob: -9.000221252441406
    3. 'b' → logprob: -10.625221252441406
    4. 'da' → logprob: -10.875221252441406
    5. 'ambda' → logprob: -11.375221252441406
    6. '```' → logprob: -11.750221252441406
    7. '(' → logprob: -12.000221252441406
    8. '   ' → logprob: -12.125221252441406
    9. '(a' → logprob: -12.375221252441406
    10. 'ab' → logprob: -12.625221252441406

Token 64: ':' (ID: 25)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.04653378576040268
    2. 'x' → logprob: -3.4215338230133057
    3. ' s' → logprob: -4.546533584594727
    4. ' a' → logprob: -6.546533584594727
    5. 's' → logprob: -7.796533584594727
    6. 'a' → logprob: -8.046533584594727
    7. ' y' → logprob: -11.046533584594727
    8. ' ' → logprob: -11.796533584594727
    9. ' l' → logprob: -12.671533584594727
    10. 'y' → logprob: -13.046533584594727

Token 65: ' [' (ID: 723)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.6687389612197876
    2. 'lambda' → logprob: -1.1687389612197876
    3. '0' → logprob: -3.293738842010498
    4. 'is' → logprob: -3.668738842010498
    5. ' False' → logprob: -3.668738842010498
    6. 'x' → logprob: -3.668738842010498
    7. ' lambda' → logprob: -4.168738842010498
    8. '(lambda' → logprob: -4.668738842010498
    9. 'True' → logprob: -5.043738842010498
    10. 'None' → logprob: -5.043738842010498

Token 66: '*' (ID: 9)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6681452989578247
    2. '0' → logprob: -0.9181452989578247
    3. 'int' → logprob: -2.918145179748535
    4. '[]' → logprob: -4.293145179748535
    5. '1' → logprob: -4.918145179748535
    6. 'x' → logprob: -5.918145179748535
    7. 'False' → logprob: -6.168145179748535
    8. ']int' → logprob: -6.168145179748535
    9. 'input' → logprob: -6.668145179748535
    10. 'i' → logprob: -6.793145179748535

Token 67: 'input' (ID: 2586)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0444440059363842
    2. 'input' → logprob: -4.1694440841674805
    3. 'x' → logprob: -4.4194440841674805
    4. 'map' → logprob: -4.5444440841674805
    5. '(range' → logprob: -6.6694440841674805
    6. '(x' → logprob: -7.2944440841674805
    7. ' range' → logprob: -7.5444440841674805
    8. 'str' → logprob: -7.5444440841674805
    9. '"' → logprob: -8.04444408416748
    10. 'filter' → logprob: -8.04444408416748

Token 68: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0012624947121366858
    2. '()' → logprob: -7.001262664794922
    3. '().' → logprob: -8.376262664794922
    4. '(' → logprob: -10.001262664794922
    5. '()].' → logprob: -11.126262664794922
    6. '('' → logprob: -11.126262664794922
    7. '()][' → logprob: -11.251262664794922
    8. ']()' → logprob: -11.501262664794922
    9. '())' → logprob: -11.876262664794922
    10. '()`' → logprob: -12.876262664794922

Token 69: 'A' (ID: 32)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.052308958023786545
    2. '<|end|>' → logprob: -3.802309036254883
    3. '#' → logprob: -5.177309036254883
    4. ')' → logprob: -5.427309036254883
    5. '\n' → logprob: -5.677309036254883
    6. '\' → logprob: -5.802309036254883
    7. '[' → logprob: -6.052309036254883
    8. '```' → logprob: -6.552309036254883
    9. ' ' → logprob: -6.552309036254883
    10. '(
' → logprob: -6.927309036254883

Token 70: '=l' (ID: 103670)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19467394053936005
    2. ' =' → logprob: -1.8196738958358765
    3. '=[]' → logprob: -5.569674015045166
    4. 'r' → logprob: -6.694674015045166
    5. 's' → logprob: -6.819674015045166
    6. 'ns' → logprob: -7.069674015045166
    7. 'l' → logprob: -7.069674015045166
    8. 'n' → logprob: -7.194674015045166
    9. '1' → logprob: -7.319674015045166
    10. '(' → logprob: -7.569674015045166

Token 71: 'mb' (ID: 3294)
  Prédit: 'mb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mb' → logprob: -0.00018220659694634378
    2. 'b' → logprob: -9.750182151794434
    3. 'ambda' → logprob: -10.250182151794434
    4. 'm' → logprob: -10.500182151794434
    5. 'st' → logprob: -10.625182151794434
    6. 'ist' → logprob: -11.375182151794434
    7. 'MB' → logprob: -12.125182151794434
    8. 'l' → logprob: -12.250182151794434
    9. 'md' → logprob: -12.500182151794434
    10. 'bd' → logprob: -13.125182151794434

Token 72: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.019117018207907677
    2. 'b' → logprob: -4.0191168785095215
    3. 'bd' → logprob: -7.1441168785095215
    4. 'da' → logprob: -9.14411735534668
    5. 'db' → logprob: -10.14411735534668
    6. 'ambda' → logprob: -11.01911735534668
    7. 'lambda' → logprob: -13.26911735534668
    8. 'mb' → logprob: -13.51911735534668
    9. 'dbl' → logprob: -13.51911735534668
    10. 'md' → logprob: -13.64411735534668

Token 73: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005982950329780579
    2. '(' → logprob: -5.130982875823975
    3. '()
' → logprob: -11.130983352661133
    4. '();' → logprob: -11.255983352661133
    5. '()

' → logprob: -12.505983352661133
    6. '()]' → logprob: -12.630983352661133
    7. '<|end|>' → logprob: -12.630983352661133
    8. '()[' → logprob: -12.755983352661133
    9. '()(' → logprob: -12.880983352661133
    10. ' ()' → logprob: -13.380983352661133

Token 74: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0005666146171279252
    2. 'b' → logprob: -8.375566482543945
    3. 'y' → logprob: -9.250566482543945
    4. 'l' → logprob: -9.750566482543945
    5. 'print' → logprob: -9.875566482543945
    6. 'for' → logprob: -10.500566482543945
    7. 'x' → logprob: -10.750566482543945
    8. 's' → logprob: -11.125566482543945
    9. 'a' → logprob: -11.125566482543945
    10. 'R' → logprob: -11.250566482543945

Token 75: '=l' (ID: 103670)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16494597494602203
    2. '=l' → logprob: -1.9149459600448608
    3. ' =' → logprob: -5.53994607925415
    4. '=input' → logprob: -7.41494607925415
    5. '=lambda' → logprob: -9.164945602416992
    6. '=A' → logprob: -10.664945602416992
    7. '()' → logprob: -11.539945602416992
    8. '=b' → logprob: -11.539945602416992
    9. '=a' → logprob: -11.664945602416992
    10. '=list' → logprob: -12.539945602416992

Token 76: 'mb' (ID: 3294)
  Prédit: 'mb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mb' → logprob: -0.005254983901977539
    2. 'b' → logprob: -5.255254745483398
    3. 'm' → logprob: -11.505254745483398
    4. 'bm' → logprob: -12.755254745483398
    5. 'bd' → logprob: -12.755254745483398
    6. 'mdb' → logprob: -13.005254745483398
    7. 'md' → logprob: -13.255254745483398
    8. 'ambda' → logprob: -13.755254745483398
    9. 'mba' → logprob: -16.5052547454834
    10. ' mb' → logprob: -17.0052547454834

Token 77: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -5.080963092041202e-06
    2. 'da' → logprob: -13.125004768371582
    3. 'b' → logprob: -13.375004768371582
    4. 'д' → logprob: -13.750004768371582
    5. 'د' → logprob: -16.1250057220459
    6. 'ambda' → logprob: -16.6250057220459
    7. '	d' → logprob: -17.0000057220459
    8. ' d' → logprob: -17.1250057220459
    9. '```' → logprob: -17.6250057220459
    10. 'dtype' → logprob: -17.7500057220459

Token 78: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00015050210640765727
    2. '(' → logprob: -8.875150680541992
    3. '()]' → logprob: -12.875150680541992
    4. ' ()' → logprob: -13.000150680541992
    5. '()
' → logprob: -13.625150680541992
    6. '`()' → logprob: -14.000150680541992
    7. '()`' → logprob: -14.125150680541992
    8. '()

' → logprob: -14.750150680541992
    9. '()(' → logprob: -14.875150680541992
    10. '();' → logprob: -15.000150680541992

Token 79: 'result' (ID: 2521)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.618001053633634e-05
    2. '
' → logprob: -10.625025749206543
    3. '```' → logprob: -13.750025749206543
    4. ' print' → logprob: -15.375025749206543
    5. '`
' → logprob: -16.12502670288086
    6. 'for' → logprob: -16.50002670288086
    7. 'if' → logprob: -16.50002670288086
    8. '    
' → logprob: -16.50002670288086
    9. '  
' → logprob: -16.87502670288086
    10. '``' → logprob: -17.12502670288086

Token 80: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.020245440304279327
    2. ' =' → logprob: -4.395245552062988
    3. '(' → logprob: -4.895245552062988
    4. '_' → logprob: -9.395245552062988
    5. '()' → logprob: -10.020245552062988
    6. '_=' → logprob: -10.770245552062988
    7. '("="' → logprob: -11.145245552062988
    8. ')' → logprob: -11.270245552062988
    9. '.' → logprob: -12.895245552062988
    10. '=(' → logprob: -13.020245552062988

Token 81: ' None' (ID: 4662)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.005235190503299236
    2. ' is' → logprob: -5.255235195159912
    3. '"is' → logprob: -13.880234718322754
    4. 'True' → logprob: -15.380234718322754
    5. '"' → logprob: -16.25523567199707
    6. ''is' → logprob: -17.00523567199707
    7. 'int' → logprob: -17.63023567199707
    8. '(is' → logprob: -18.50523567199707
    9. ' True' → logprob: -19.25523567199707
    10. '1' → logprob: -19.38023567199707

Token 82: '
' (ID: 198)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.006381148938089609
    2. 'if' → logprob: -5.256381034851074
    3. 'for' → logprob: -7.506381034851074
    4. 'print' → logprob: -7.881381034851074
    5. '=' → logprob: -9.256381034851074
    6. 'is' → logprob: -9.506381034851074
    7. 'True' → logprob: -10.381381034851074
    8. ' =' → logprob: -12.256381034851074
    9. '=
' → logprob: -12.506381034851074
    10. ' result' → logprob: -12.756381034851074

Token 83: 'if' (ID: 366)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.06388651579618454
    2. 'if' → logprob: -2.8138864040374756
    3. 'for' → logprob: -6.938886642456055
    4. 'is' → logprob: -7.688886642456055
    5. 'True' → logprob: -7.813886642456055
    6. '=' → logprob: -10.313886642456055
    7. '```' → logprob: -11.063886642456055
    8. ' if' → logprob: -11.438886642456055
    9. 'print' → logprob: -11.938886642456055
    10. ' result' → logprob: -12.563886642456055

Token 84: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.21784737706184387
    2. 'is' → logprob: -1.8428473472595215
    3. ' len' → logprob: -3.7178473472595215
    4. 'len' → logprob: -4.4678473472595215
    5. ' A' → logprob: -6.8428473472595215
    6. ' (' → logprob: -8.46784782409668
    7. 'A' → logprob: -8.71784782409668
    8. '(len' → logprob: -9.34284782409668
    9. ' ' → logprob: -9.96784782409668
    10. '(is' → logprob: -10.96784782409668

Token 85: '_rotation' (ID: 104748)
  Prédit: '_rotation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rotation' → logprob: -0.0009203928639180958
    2. '_' → logprob: -7.000920295715332
    3. '_rot' → logprob: -12.500920295715332
    4. '(A' → logprob: -12.750920295715332
    5. '_ro' → logprob: -14.125920295715332
    6. 'rotation' → logprob: -14.875920295715332
    7. ' _' → logprob: -15.000920295715332
    8. '(_' → logprob: -15.625920295715332
    9. '```' → logprob: -16.37592124938965
    10. '(rotation' → logprob: -16.75092124938965

Token 86: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.001063771080225706
    2. '(' → logprob: -7.001063823699951
    3. '(B' → logprob: -9.376063346862793
    4. ' (' → logprob: -9.626063346862793
    5. '(
' → logprob: -13.626063346862793
    6. '('' → logprob: -16.00106430053711
    7. '((' → logprob: -16.50106430053711
    8. '(a' → logprob: -16.50106430053711
    9. '(

' → logprob: -17.12606430053711
    10. 'A' → logprob: -17.75106430053711

Token 87: ',B' (ID: 19853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007015502545982599
    2. ',B' → logprob: -5.007015705108643
    3. ' ,' → logprob: -8.132015228271484
    4. ',
' → logprob: -13.257015228271484
    5. 'B' → logprob: -13.632015228271484
    6. '(B' → logprob: -13.757015228271484
    7. ',b' → logprob: -14.007015228271484
    8. '(' → logprob: -14.882015228271484
    9. ')' → logprob: -15.757015228271484
    10. ' B' → logprob: -16.007015228271484

Token 88: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01165375579148531
    2. '):
' → logprob: -4.511653900146484
    3. ':' → logprob: -7.886653900146484
    4. ')' → logprob: -8.386653900146484
    5. ':
' → logprob: -13.886653900146484
    6. '):
' → logprob: -14.636653900146484
    7. ')==' → logprob: -15.386653900146484
    8. ' ):' → logprob: -15.636653900146484
    9. ':)' → logprob: -16.136653900146484
    10. ')=' → logprob: -16.511653900146484

Token 89: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012403103522956371
    2. ' result' → logprob: -4.8874030113220215
    3. 'result' → logprob: -5.3874030113220215
    4. '
' → logprob: -9.13740348815918
    5. '	result' → logprob: -9.38740348815918
    6. '    
' → logprob: -11.38740348815918
    7. '       ' → logprob: -12.76240348815918
    8. ' 
' → logprob: -13.38740348815918
    9. '```' → logprob: -13.76240348815918
    10. ',result' → logprob: -14.26240348815918

Token 90: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.01882108487188816
    2. '   ' → logprob: -4.0188212394714355
    3. ' result' → logprob: -7.3938212394714355
    4. 'print' → logprob: -9.893820762634277
    5. '	result' → logprob: -13.143820762634277
    6. '
' → logprob: -13.643820762634277
    7. '```' → logprob: -13.893820762634277
    8. '    
' → logprob: -14.768820762634277
    9. ' ' → logprob: -15.393820762634277
    10. '       ' → logprob: -15.393820762634277

Token 91: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519313097000122
    2. ' =' → logprob: -1.5019313097000122
    3. '=True' → logprob: -13.376931190490723
    4. ' ' → logprob: -15.126931190490723
    5. '=
' → logprob: -16.25193214416504
    6. ' =
' → logprob: -16.37693214416504
    7. '=

' → logprob: -16.37693214416504
    8. '＝' → logprob: -16.62693214416504
    9. ' =)' → logprob: -17.25193214416504
    10. '=}' → logprob: -17.62693214416504

Token 92: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.16243304312229156
    2. 'True' → logprob: -1.9124330282211304
    3. ''' → logprob: -6.28743314743042
    4. ' True' → logprob: -8.162432670593262
    5. ' "' → logprob: -10.412432670593262
    6. ''T' → logprob: -11.662432670593262
    7. '   ' → logprob: -11.787432670593262
    8. '"T' → logprob: -12.412432670593262
    9. '(True' → logprob: -13.412432670593262
    10. 'print' → logprob: -13.412432670593262

Token 93: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.1886998564004898
    2. 'YES' → logprob: -2.063699960708618
    3. 'True' → logprob: -3.313699960708618
    4. 'yes' → logprob: -4.938699722290039
    5. 'Rotation' → logprob: -7.688699722290039
    6. 'true' → logprob: -7.938699722290039
    7. 'Rot' → logprob: -8.688699722290039
    8. ''' → logprob: -9.438699722290039
    9. '1' → logprob: -9.813699722290039
    10. 'Possible' → logprob: -9.813699722290039

Token 94: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0024854077491909266
    2. ''
' → logprob: -6.002485275268555
    3. ''
' → logprob: -12.502485275268555
    4. '"' → logprob: -13.002485275268555
    5. 'else' → logprob: -13.377485275268555
    6. ')'' → logprob: -14.627485275268555
    7. ''

' → logprob: -14.877485275268555
    8. '')' → logprob: -14.877485275268555
    9. ' '' → logprob: -16.002485275268555
    10. ')' → logprob: -16.127485275268555

Token 95: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -4.191489642835222e-05
    2. ' else' → logprob: -10.125041961669922
    3. '<|end|>' → logprob: -13.625041961669922
    4. '```' → logprob: -15.250041961669922
    5. 'elif' → logprob: -15.375041961669922
    6. '}else' → logprob: -16.750041961669922
    7. '_else' → logprob: -17.375041961669922
    8. 'e' → logprob: -17.500041961669922
    9. '   ' → logprob: -17.750041961669922
    10. 'elser' → logprob: -18.000041961669922

Token 96: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009965023025870323
    2. ':
' → logprob: -4.759964942932129
    3. '   ' → logprob: -6.759964942932129
    4. ' :' → logprob: -9.509964942932129
    5. '<|end|>' → logprob: -9.759964942932129
    6. '    ' → logprob: -11.259964942932129
    7. ':return' → logprob: -11.759964942932129
    8. ' :
' → logprob: -11.759964942932129
    9. '       ' → logprob: -12.009964942932129
    10. ':

' → logprob: -12.509964942932129

Token 97: '   ' (ID: 271)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5306439995765686
    2. '   ' → logprob: -0.9056439995765686
    3. ' '' → logprob: -5.030643939971924
    4. '    ' → logprob: -7.405643939971924
    5. '       ' → logprob: -9.030644416809082
    6. ' ' → logprob: -9.530644416809082
    7. '  ' → logprob: -10.030644416809082
    8. '"' → logprob: -10.280644416809082
    9. '<|end|>' → logprob: -10.655644416809082
    10. '    
' → logprob: -10.905644416809082

Token 98: ' result' (ID: 1534)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.033586230129003525
    2. '   ' → logprob: -3.783586263656616
    3. ' '' → logprob: -5.283586025238037
    4. ' result' → logprob: -5.658586025238037
    5. '    ' → logprob: -6.783586025238037
    6. 'result' (adapté à ' result') → logprob: -8.158586502075195
    7. ' ' → logprob: -8.908586502075195
    8. '"' → logprob: -9.908586502075195
    9. '  ' → logprob: -10.533586502075195
    10. '`' → logprob: -10.908586502075195

Token 99: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020893067121506
    2. ' =' → logprob: -2.3502089977264404
    3. '='' → logprob: -14.47520923614502
    4. '=
' → logprob: -14.72520923614502
    5. ' ='' → logprob: -14.97520923614502
    6. ' ' → logprob: -15.22520923614502
    7. '=

' → logprob: -15.47520923614502
    8. ' =
' → logprob: -15.72520923614502
    9. '<|end|>' → logprob: -15.72520923614502
    10. '==' → logprob: -16.475208282470703

Token 100: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.04862109199166298
    2. ' '' → logprob: -3.04862117767334
    3. '"' → logprob: -10.42362117767334
    4. ' ' → logprob: -12.79862117767334
    5. ' ' → logprob: -15.67362117767334
    6. '('' → logprob: -15.92362117767334
    7. ' "' → logprob: -16.048620223999023
    8. ''s' → logprob: -16.173620223999023
    9. ' 
' → logprob: -16.548620223999023
    10. '    ' → logprob: -16.673620223999023

Token 101: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.008615399710834026
    2. ''' → logprob: -4.758615493774414
    3. ''N' → logprob: -14.508615493774414
    4. '"No' → logprob: -15.258615493774414
    5. ' No' → logprob: -17.008615493774414
    6. '_No' → logprob: -18.633615493774414
    7. 'NO' → logprob: -19.008615493774414
    8. 'N' → logprob: -19.883615493774414
    9. '.No' → logprob: -21.133615493774414
    10. '>No' → logprob: -21.258615493774414

Token 102: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -5.200166469876422e-06
    2. ''
' → logprob: -12.625004768371582
    3. ')'' → logprob: -13.500004768371582
    4. '')' → logprob: -15.625004768371582
    5. '"' → logprob: -15.875004768371582
    6. ')' → logprob: -17.0000057220459
    7. ' '' → logprob: -17.3750057220459
    8. '"'' → logprob: -17.8750057220459
    9. ''''' → logprob: -18.2500057220459
    10. '```' → logprob: -18.3750057220459

Token 103: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. '
' → logprob: -16.0
    3. ' print' → logprob: -16.875
    4. '```' → logprob: -18.625
    5. '<|end|>' → logprob: -19.375
    6. '#print' → logprob: -19.5
    7. '(print' → logprob: -19.875
    8. 'pr' → logprob: -20.125
    9. '.print' → logprob: -21.375
    10. 'prin' → logprob: -21.625

Token 104: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5798836350440979
    2. '(result' → logprob: -0.8298836350440979
    3. '('' → logprob: -5.579883575439453
    4. '("("' → logprob: -8.829883575439453
    5. 'result' → logprob: -11.704883575439453
    6. '()' → logprob: -13.704883575439453
    7. '(results' → logprob: -13.954883575439453
    8. '(f' → logprob: -14.079883575439453
    9. ' (' → logprob: -14.079883575439453
    10. '(
' → logprob: -14.204883575439453

Token 105: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ' )' → logprob: -16.75
    3. '')' → logprob: -18.5
    4. ')`' → logprob: -18.5
    5. ')
' → logprob: -19.0
    6. '))' → logprob: -19.75
    7. '`)' → logprob: -20.375
    8. '")' → logprob: -20.625
    9. '()' → logprob: -20.875
    10. '）' → logprob: -21.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 103
Tokens correctement prédits (1ère position, stricte): 41
Tokens correctement prédits (1ère position, avec adaptation): 43
Tokens correctement prédits (top 10): 85
Précision stricte (1ère position): 39.81%
Précision adaptée (1ère position): 41.75%
Précision (top 10): 82.52%
================================================================================
