================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:41:11
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math
from functools import partial

def calc_factory(a, b):
    return lambda t: (a * a * b - a * a * a * math.tan(t) / 2
                      if a * math.tan(t) <= b
                      else b * b * a / (2 * math.tan(t)))

def binary_search(f, target, lo=0., hi=90., tol=1e-10, max_iter=50):
    for _ in range(max_iter):
        mid = (lo + hi) / 2
        v = f(math.radians(mid))
        if v < target:
            hi = mid
        else:
            lo = mid
        if abs(hi - lo) < tol:
            break
    return mid

a, b, x = map(int, input().split())
calc = calc_factory(a, b)
result = binary_search(calc, x)
print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0005792465526610613
    2. '```' → logprob: -8.750578880310059
    3. '\n' → logprob: -9.000578880310059
    4. '<|end|>' → logprob: -9.625578880310059
    5. '\' → logprob: -9.750578880310059
    6. 'import' → logprob: -10.250578880310059
    7. '.pi' → logprob: -10.625578880310059
    8. '.e' → logprob: -10.875578880310059
    9. 'def' → logprob: -11.375578880310059
    10. '.

' → logprob: -11.625578880310059

Token 4: ' functools' (ID: 142636)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.8069501519203186
    2. ' statistics' → logprob: -2.181950092315674
    3. ' numpy' → logprob: -2.181950092315674
    4. ' math' → logprob: -2.431950092315674
    5. ' collections' → logprob: -3.056950092315674
    6. ' sys' → logprob: -3.181950092315674
    7. 'cmath' → logprob: -3.181950092315674
    8. 'os' → logprob: -3.931950092315674
    9. ' random' → logprob: -4.306950092315674
    10. 'numpy' → logprob: -4.431950092315674

Token 5: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.292373925447464
    2. ' import' → logprob: -1.6673738956451416
    3. '.' → logprob: -2.7923738956451416
    4. '.import' → logprob: -5.917374134063721
    5. '_import' → logprob: -8.042373657226562
    6. '	import' → logprob: -8.667373657226562
    7. '```' → logprob: -9.417373657226562
    8. '._' → logprob: -9.792373657226562
    9. ' .' → logprob: -10.042373657226562
    10. '_' → logprob: -10.292373657226562

Token 6: ' partial' (ID: 13664)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.3974190950393677
    2. 'l' → logprob: -1.7724190950393677
    3. 'wrap' → logprob: -2.647418975830078
    4. 'partial' → logprob: -2.647418975830078
    5. ' wraps' → logprob: -4.897418975830078
    6. ' l' → logprob: -5.272418975830078
    7. ' reduce' → logprob: -6.772418975830078
    8. 'cache' → logprob: -6.897418975830078
    9. 'cmp' → logprob: -7.272418975830078
    10. 'cached' → logprob: -7.522418975830078

Token 7: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.051306407898664474
    2. '.' → logprob: -3.1763064861297607
    3. '\' → logprob: -5.801306247711182
    4. '\n' → logprob: -6.801306247711182
    5. '(
' → logprob: -6.801306247711182
    6. 'def' → logprob: -7.301306247711182
    7. '(

' → logprob: -7.426306247711182
    8. ',' → logprob: -7.676306247711182
    9. 'import' → logprob: -8.42630672454834
    10. '\(' → logprob: -8.55130672454834

Token 8: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06596221774816513
    2. '(' → logprob: -3.315962314605713
    3. '.' → logprob: -4.315962314605713
    4. 'import' → logprob: -5.565962314605713
    5. '@' → logprob: -6.315962314605713
    6. 'd' → logprob: -6.440962314605713
    7. '#' → logprob: -6.565962314605713
    8. 'm' → logprob: -7.065962314605713
    9. ',' → logprob: -7.190962314605713
    10. '\' → logprob: -7.315962314605713

Token 9: ' calc' (ID: 25691)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.057220589369535446
    2. ' calculate' → logprob: -3.807220697402954
    3. ' sqrt' → logprob: -4.432220458984375
    4. ' factorial' → logprob: -4.682220458984375
    5. '_' → logprob: -5.682220458984375
    6. ' math' → logprob: -5.932220458984375
    7. ' pow' → logprob: -5.932220458984375
    8. ' compute' → logprob: -7.432220458984375
    9. ' calc' → logprob: -8.057220458984375
    10. ' ceil' → logprob: -8.057220458984375

Token 10: '_factory' (ID: 57891)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.381040096282959
    2. 'ulate' → logprob: -1.506040096282959
    3. '(' → logprob: -4.006040096282959
    4. '_factor' → logprob: -4.006040096282959
    5. '_area' → logprob: -4.506040096282959
    6. 'ulator' → logprob: -4.631040096282959
    7. 'ulation' → logprob: -5.131040096282959
    8. 'ulating' → logprob: -5.756040096282959
    9. ' _' → logprob: -5.881040096282959
    10. '_mul' → logprob: -6.381040096282959

Token 11: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0025770862121134996
    2. '_' → logprob: -6.252577304840088
    3. '_factory' → logprob: -9.37757682800293
    4. ' (' → logprob: -9.50257682800293
    5. '(_' → logprob: -9.62757682800293
    6. '("("' → logprob: -9.62757682800293
    7. '_partial' → logprob: -10.00257682800293
    8. '```' → logprob: -10.25257682800293
    9. ':' → logprob: -10.37757682800293
    10. '(
' → logprob: -10.37757682800293

Token 12: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.32611194252967834
    2. ')' → logprob: -1.826111912727356
    3. '):' → logprob: -2.2011120319366455
    4. ',b' → logprob: -5.576111793518066
    5. 'b' → logprob: -7.326111793518066
    6. ' ,' → logprob: -7.951111793518066
    7. 'a' → logprob: -7.951111793518066
    8. '_' → logprob: -8.076111793518066
    9. 's' → logprob: -8.201111793518066
    10. 'd' → logprob: -8.826111793518066

Token 13: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5759432911872864
    2. ' b' → logprob: -0.8259432911872864
    3. ' ' → logprob: -13.700942993164062
    4. ')' → logprob: -13.825942993164062
    5. ')b' → logprob: -14.700942993164062
    6. 'x' → logprob: -15.575942993164062
    7. 'n' → logprob: -15.700942993164062
    8. ' ' → logprob: -15.825942993164062
    9. ' )' → logprob: -16.075942993164062
    10. ',' → logprob: -16.325942993164062

Token 14: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01223460491746664
    2. ')' → logprob: -4.762234687805176
    3. ',' → logprob: -5.637234687805176
    4. ':' → logprob: -10.262234687805176
    5. '):
' → logprob: -12.262234687805176
    6. ' ):' → logprob: -12.512234687805176
    7. '),' → logprob: -13.762234687805176
    8. '*' → logprob: -14.012234687805176
    9. '=' → logprob: -14.137234687805176
    10. ' ' → logprob: -14.512234687805176

Token 15: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3230537176132202
    2. ':' → logprob: -1.3230537176132202
    3. '```' → logprob: -5.69805383682251
    4. ':
' → logprob: -6.32305383682251
    5. ':return' → logprob: -6.69805383682251
    6. '    ' → logprob: -6.69805383682251
    7. '():' → logprob: -7.44805383682251
    8. '(' → logprob: -8.198053359985352
    9. ' return' → logprob: -8.573053359985352
    10. '    
' → logprob: -8.573053359985352

Token 16: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1491120606660843
    2. '    ' → logprob: -2.1491119861602783
    3. '       ' → logprob: -4.774112224578857
    4. ' return' → logprob: -5.024112224578857
    5. '    
' → logprob: -6.399112224578857
    6. 'def' → logprob: -6.649112224578857
    7. ' def' → logprob: -7.149112224578857
    8. '```' → logprob: -7.149112224578857
    9. '
' → logprob: -7.399112224578857
    10. 'return' (adapté à ' return') → logprob: -8.0241117477417

Token 17: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.044694941490888596
    2. ' partial' → logprob: -3.5446949005126953
    3. ' math' → logprob: -4.919694900512695
    4. 'lambda' → logprob: -5.419694900512695
    5. ' a' → logprob: -5.919694900512695
    6. 'a' → logprob: -9.044694900512695
    7. 'partial' → logprob: -9.044694900512695
    8. 'math' → logprob: -9.419694900512695
    9. '(lambda' → logprob: -10.294694900512695
    10. '   ' → logprob: -10.794694900512695

Token 18: ' t' (ID: 260)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.01842418499290943
    2. 'x' → logprob: -4.518424034118652
    3. ' ' → logprob: -5.018424034118652
    4. ' a' → logprob: -7.643424034118652
    5. ' (' → logprob: -9.643424034118652
    6. ' lambda' → logprob: -9.643424034118652
    7. ' math' → logprob: -9.643424034118652
    8. 'a' → logprob: -10.393424034118652
    9. '  ' → logprob: -12.018424034118652
    10. ' s' → logprob: -12.018424034118652

Token 19: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0036501993890851736
    2. ' :' → logprob: -5.753650188446045
    3. 'a' → logprob: -8.253650665283203
    4. ' a' → logprob: -9.878650665283203
    5. ',' → logprob: -10.378650665283203
    6. ':a' → logprob: -10.503650665283203
    7. 'math' → logprob: -10.628650665283203
    8. '   ' → logprob: -11.128650665283203
    9. ' math' → logprob: -11.253650665283203
    10. '**' → logprob: -11.503650665283203

Token 20: ' (' (ID: 350)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.10478535294532776
    2. 'a' → logprob: -2.604785442352295
    3. ' math' → logprob: -3.729785442352295
    4. 'math' → logprob: -6.979785442352295
    5. ' (' → logprob: -7.604785442352295
    6. ' t' → logprob: -9.979784965515137
    7. ' ' → logprob: -10.104784965515137
    8. '(a' → logprob: -10.979784965515137
    9. '(math' → logprob: -11.479784965515137
    10. '(' → logprob: -12.354784965515137

Token 21: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.37184739112854004
    2. ' a' → logprob: -1.24684739112854
    3. ' math' → logprob: -4.496847152709961
    4. 'math' → logprob: -4.621847152709961
    5. ' (' → logprob: -6.496847152709961
    6. '(a' → logprob: -8.996847152709961
    7. '   ' → logprob: -9.246847152709961
    8. '(math' → logprob: -9.246847152709961
    9. ' t' → logprob: -9.496847152709961
    10. ' ' → logprob: -9.871847152709961

Token 22: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.24854996800422668
    2. '*' → logprob: -1.7485499382019043
    3. ' +' → logprob: -3.6235499382019043
    4. '*t' → logprob: -4.373549938201904
    5. '+' → logprob: -5.123549938201904
    6. 't' → logprob: -7.998549938201904
    7. ' t' → logprob: -8.998550415039062
    8. '**' → logprob: -9.373550415039062
    9. '+t' → logprob: -9.373550415039062
    10. ' **' → logprob: -10.123550415039062

Token 23: ' a' (ID: 261)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.3821835517883301
    2. 't' → logprob: -1.25718355178833
    3. ' math' → logprob: -3.63218355178833
    4. 'math' → logprob: -5.13218355178833
    5. ' (' → logprob: -7.75718355178833
    6. ' ' → logprob: -8.507183074951172
    7. '(' → logprob: -9.507183074951172
    8. '(math' → logprob: -9.507183074951172
    9. ')' → logprob: -11.507183074951172
    10. '(t' → logprob: -12.257183074951172

Token 24: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.8804472088813782
    2. ' +' → logprob: -1.1304471492767334
    3. '*' → logprob: -2.0054471492767334
    4. ')' → logprob: -2.6304471492767334
    5. '+' → logprob: -3.1304471492767334
    6. '*t' → logprob: -5.0054473876953125
    7. ' t' → logprob: -6.0054473876953125
    8. ' ' → logprob: -6.8804473876953125
    9. ' -' → logprob: -7.3804473876953125
    10. ' )' → logprob: -7.7554473876953125

Token 25: ' b' (ID: 287)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.14757941663265228
    2. ' t' → logprob: -2.8975794315338135
    3. 'math' → logprob: -2.8975794315338135
    4. ' math' → logprob: -3.6475794315338135
    5. '(math' → logprob: -8.272579193115234
    6. ')' → logprob: -8.897579193115234
    7. '(' → logprob: -9.022579193115234
    8. ' (' → logprob: -9.522579193115234
    9. 'b' → logprob: -9.772579193115234
    10. 'cmath' → logprob: -10.022579193115234

Token 26: ' -' (ID: 533)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1773386150598526
    2. '*' → logprob: -2.4273386001586914
    3. ')' → logprob: -2.8023386001586914
    4. '**' → logprob: -4.677338600158691
    5. ' **' → logprob: -6.927338600158691
    6. ' ' → logprob: -7.177338600158691
    7. ' )' → logprob: -7.302338600158691
    8. ' +' → logprob: -7.427338600158691
    9. ' /' → logprob: -8.302338600158691
    10. '*t' → logprob: -8.302338600158691

Token 27: ' a' (ID: 261)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.5774965286254883
    2. ' math' → logprob: -1.5774965286254883
    3. 't' → logprob: -2.5774965286254883
    4. ' ' → logprob: -3.0774965286254883
    5. '2' → logprob: -3.5774965286254883
    6. 'math' → logprob: -3.7024965286254883
    7. ' b' → logprob: -4.077496528625488
    8. ' (' → logprob: -4.327496528625488
    9. '3' → logprob: -4.952496528625488
    10. ' a' → logprob: -5.202496528625488

Token 28: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.11248776316642761
    2. '*' → logprob: -2.48748779296875
    3. '**' → logprob: -4.36248779296875
    4. ')' → logprob: -5.11248779296875
    5. ' **' → logprob: -6.11248779296875
    6. '*t' → logprob: -6.48748779296875
    7. ' /' → logprob: -8.73748779296875
    8. ' ' → logprob: -8.98748779296875
    9. '*b' → logprob: -9.11248779296875
    10. 't' → logprob: -9.61248779296875

Token 29: ' a' (ID: 261)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -1.1559687852859497
    2. 't' → logprob: -1.2809687852859497
    3. 'b' → logprob: -1.6559687852859497
    4. ' b' → logprob: -2.40596866607666
    5. ' math' → logprob: -2.78096866607666
    6. 'math' → logprob: -3.15596866607666
    7. 'a' → logprob: -5.15596866607666
    8. ' a' → logprob: -5.40596866607666
    9. '*' → logprob: -5.65596866607666
    10. ' ' → logprob: -6.65596866607666

Token 30: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.02750624343752861
    2. '*' → logprob: -3.7775063514709473
    3. ')' → logprob: -5.777506351470947
    4. '*t' → logprob: -8.402505874633789
    5. ' ' → logprob: -8.902505874633789
    6. ' **' → logprob: -9.027505874633789
    7. '*b' → logprob: -9.152505874633789
    8. '**' → logprob: -9.277505874633789
    9. ' /' → logprob: -9.277505874633789
    10. ' t' → logprob: -9.527505874633789

Token 31: ' a' (ID: 261)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3927074670791626
    2. ' t' → logprob: -1.6427074670791626
    3. 'math' → logprob: -2.767707347869873
    4. ' math' → logprob: -3.142707347869873
    5. 'b' → logprob: -4.017707347869873
    6. ' b' → logprob: -5.642707347869873
    7. '(math' → logprob: -6.767707347869873
    8. ')' → logprob: -7.142707347869873
    9. ' ' → logprob: -8.142707824707031
    10. '(' → logprob: -8.142707824707031

Token 32: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.14534300565719604
    2. '*' → logprob: -2.645343065261841
    3. ')' → logprob: -3.020343065261841
    4. '*t' → logprob: -4.645342826843262
    5. ' /' → logprob: -6.270342826843262
    6. ' t' → logprob: -6.395342826843262
    7. 't' → logprob: -7.270342826843262
    8. '/' → logprob: -7.520342826843262
    9. ' )' → logprob: -8.395342826843262
    10. ' ' → logprob: -8.520342826843262

Token 33: ' math' (ID: 13324)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.25809067487716675
    2. ' t' → logprob: -1.6330907344818115
    3. 'math' → logprob: -3.8830907344818115
    4. ' math' → logprob: -4.508090496063232
    5. ')' → logprob: -9.25809097290039
    6. '(math' → logprob: -9.50809097290039
    7. ' ' → logprob: -9.63309097290039
    8. 'b' → logprob: -10.00809097290039
    9. '(' → logprob: -10.25809097290039
    10. ' (' → logprob: -10.69559097290039

Token 34: '.t' (ID: 1370)
  Prédit: '.sin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sin' → logprob: -0.4076271057128906
    2. '.cos' → logprob: -1.7826271057128906
    3. '.sqrt' → logprob: -2.0326271057128906
    4. '.exp' → logprob: -3.7826271057128906
    5. '.pow' → logprob: -5.157627105712891
    6. 'sin' → logprob: -6.032627105712891
    7. 'cos' → logprob: -6.407627105712891
    8. '.' → logprob: -7.032627105712891
    9. '*sin' → logprob: -7.157627105712891
    10. '.log' → logprob: -8.03262710571289

Token 35: 'an' (ID: 270)
  Prédit: 'an'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.2531506419181824
    2. 'anh' → logprob: -1.5031507015228271
    3. 'anw' → logprob: -8.128150939941406
    4. 'au' → logprob: -8.628150939941406
    5. 'sin' → logprob: -8.878150939941406
    6. 'anf' → logprob: -9.128150939941406
    7. '**' → logprob: -9.628150939941406
    8. 'erm' → logprob: -10.003150939941406
    9. '```' → logprob: -10.128150939941406
    10. '   ' → logprob: -10.253150939941406

Token 36: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.5284808278083801
    2. '(' → logprob: -0.9034808278083801
    3. ' (' → logprob: -6.1534810066223145
    4. ')' → logprob: -6.4034810066223145
    5. ' t' → logprob: -7.2784810066223145
    6. 't' → logprob: -7.6534810066223145
    7. '(math' → logprob: -9.278480529785156
    8. ')t' → logprob: -9.403480529785156
    9. '(
' → logprob: -9.528480529785156
    10. ' )' → logprob: -9.778480529785156

Token 37: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7281545996665955
    2. '))' → logprob: -0.7281545996665955
    3. ')**' → logprob: -4.10315465927124
    4. '(' → logprob: -5.35315465927124
    5. ' )' → logprob: -5.72815465927124
    6. ')))' → logprob: -5.85315465927124
    7. ' ))' → logprob: -5.97815465927124
    8. '(t' → logprob: -7.22815465927124
    9. '**' → logprob: -7.35315465927124
    10. '()))' → logprob: -7.47815465927124

Token 38: ' /' (ID: 820)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05678504332900047
    2. ' )' → logprob: -3.0567851066589355
    3. '))' → logprob: -5.3067851066589355
    4. ')/(' → logprob: -7.6817851066589355
    5. ')))' → logprob: -7.8067851066589355
    6. ')/' → logprob: -7.8067851066589355
    7. '**' → logprob: -7.8067851066589355
    8. ' ' → logprob: -8.056784629821777
    9. ')**' → logprob: -8.181784629821777
    10. ' /' → logprob: -8.306784629821777

Token 39: ' ' (ID: 220)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7269742488861084
    2. ' b' → logprob: -0.8519742488861084
    3. '(' → logprob: -2.9769742488861084
    4. ' (' → logprob: -3.6019742488861084
    5. '3' → logprob: -5.6019744873046875
    6. '(b' → logprob: -5.7269744873046875
    7. '2' → logprob: -6.3519744873046875
    8. ' math' → logprob: -6.4769744873046875
    9. ' ' → logprob: -7.3519744873046875
    10. ')' → logprob: -8.476974487304688

Token 40: '2' (ID: 17)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.036743734031915665
    2. '(' → logprob: -3.411743640899658
    3. '(b' → logprob: -6.661743640899658
    4. 'math' → logprob: -7.161743640899658
    5. '2' → logprob: -7.661743640899658
    6. ' b' → logprob: -8.786744117736816
    7. '(math' → logprob: -9.036744117736816
    8. ' (' → logprob: -9.411744117736816
    9. '3' → logprob: -10.036744117736816
    10. 'a' → logprob: -10.286744117736816

Token 41: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01055169478058815
    2. ' )' → logprob: -4.635551929473877
    3. '))' → logprob: -8.510551452636719
    4. ')**' → logprob: -8.635551452636719
    5. ')))' → logprob: -8.885551452636719
    6. ')/' → logprob: -9.510551452636719
    7. ' ' → logprob: -9.885551452636719
    8. '**' → logprob: -10.385551452636719
    9. '   ' → logprob: -10.510551452636719
    10. '  ' → logprob: -11.510551452636719

Token 42: '                     ' (ID: 4451)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013345159590244293
    2. ' )' → logprob: -4.388345241546631
    3. '))' → logprob: -8.263344764709473
    4. '   ' → logprob: -9.263344764709473
    5. ' *' → logprob: -9.263344764709473
    6. ')))' → logprob: -9.388344764709473
    7. ')**' → logprob: -10.138344764709473
    8. ' ' → logprob: -10.138344764709473
    9. ')*' → logprob: -10.388344764709473
    10. ')/' → logprob: -10.388344764709473

Token 43: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02168726734817028
    2. ' )' → logprob: -4.021687030792236
    3. ' *' → logprob: -7.021687030792236
    4. ' ' → logprob: -7.771687030792236
    5. '   ' → logprob: -8.021687507629395
    6. '))' → logprob: -8.271687507629395
    7. ')))' → logprob: -8.521687507629395
    8. ')**' → logprob: -8.521687507629395
    9. '    ' → logprob: -8.646687507629395
    10. ')/' → logprob: -8.896687507629395

Token 44: ' a' (ID: 261)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.2791215777397156
    2. 't' → logprob: -1.6541216373443604
    3. ' math' → logprob: -4.029121398925781
    4. 'math' → logprob: -4.904121398925781
    5. ' abs' → logprob: -5.029121398925781
    6. ' a' → logprob: -5.404121398925781
    7. ' ' → logprob: -5.654121398925781
    8. 'a' → logprob: -5.654121398925781
    9. '0' → logprob: -5.654121398925781
    10. 'abs' → logprob: -6.029121398925781

Token 45: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4996672570705414
    2. ' >' → logprob: -1.2496672868728638
    3. '*' → logprob: -3.624667167663574
    4. ' ' → logprob: -3.749667167663574
    5. ' <' → logprob: -3.749667167663574
    6. ' >=' → logprob: -4.499667167663574
    7. ' <=' → logprob: -4.749667167663574
    8. '>' → logprob: -4.874667167663574
    9. ' !=' → logprob: -7.249667167663574
    10. ')' → logprob: -7.374667167663574

Token 46: ' math' (ID: 13324)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3102286458015442
    2. ' a' → logprob: -1.4352285861968994
    3. ' math' → logprob: -4.1852288246154785
    4. 'math' → logprob: -4.9352288246154785
    5. 'b' → logprob: -5.9352288246154785
    6. '<|end|>' → logprob: -7.0602288246154785
    7. ' b' → logprob: -7.1852288246154785
    8. 't' → logprob: -7.3102288246154785
    9. ' t' → logprob: -7.4352288246154785
    10. ' ' → logprob: -7.9352288246154785

Token 47: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.23849110305309296
    2. '*t' → logprob: -2.4884910583496094
    3. '*' → logprob: -3.4884910583496094
    4. ' tan' → logprob: -3.7384910583496094
    5. 't' → logprob: -3.8634910583496094
    6. 'tan' → logprob: -3.8634910583496094
    7. '.cos' → logprob: -4.488491058349609
    8. '.' → logprob: -5.738491058349609
    9. ' *' → logprob: -5.738491058349609
    10. '>' → logprob: -5.863491058349609

Token 48: 'an' (ID: 270)
  Prédit: 'an'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.0001422770437784493
    2. 'a' → logprob: -9.125142097473145
    3. 'math' → logprob: -11.500142097473145
    4. 'anh' → logprob: -12.500142097473145
    5. '<|end|>' → logprob: -12.750142097473145
    6. ' math' → logprob: -13.000142097473145
    7. 'n' → logprob: -13.500142097473145
    8. 'tan' → logprob: -13.750142097473145
    9. '(math' → logprob: -13.875142097473145
    10. 'anw' → logprob: -13.875142097473145

Token 49: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.09680989384651184
    2. '(' → logprob: -2.4718098640441895
    3. '<|end|>' → logprob: -5.0968098640441895
    4. ' (' → logprob: -6.5968098640441895
    5. ' ' → logprob: -8.846810340881348
    6. '(s' → logprob: -9.596810340881348
    7. ' t' → logprob: -9.721810340881348
    8. '(token' → logprob: -10.721810340881348
    9. '<|end|>' → logprob: -10.721810340881348
    10. 't' → logprob: -10.846810340881348

Token 50: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014509581960737705
    2. ' )' → logprob: -4.264509677886963
    3. ')<' → logprob: -8.764509201049805
    4. ' <' → logprob: -9.639509201049805
    5. ' ' → logprob: -10.264509201049805
    6. ')>' → logprob: -10.889509201049805
    7. '()' → logprob: -11.139509201049805
    8. '())' → logprob: -11.889509201049805
    9. ')<=' → logprob: -11.889509201049805
    10. '/' → logprob: -12.139509201049805

Token 51: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0692821741104126
    2. ' <=' → logprob: -3.444282054901123
    3. '<' → logprob: -4.319282054901123
    4. ')' → logprob: -4.944282054901123
    5. ' ' → logprob: -4.944282054901123
    6. ' >' → logprob: -5.944282054901123
    7. '<=' → logprob: -7.069282054901123
    8. ' >=' → logprob: -7.069282054901123
    9. ' *' → logprob: -7.569282054901123
    10. '*' → logprob: -7.944282054901123

Token 52: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.42879924178123474
    2. ' b' → logprob: -1.0537992715835571
    3. ' ' → logprob: -9.928799629211426
    4. '2' → logprob: -10.053799629211426
    5. '3' → logprob: -12.928799629211426
    6. '(b' → logprob: -13.928799629211426
    7. '1' → logprob: -14.053799629211426
    8. ')b' → logprob: -14.428799629211426
    9. '6' → logprob: -14.928799629211426
    10. '0' → logprob: -14.928799629211426

Token 53: '
' (ID: 198)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.012566281482577324
    2. 'else' → logprob: -4.387566089630127
    3. ' and' → logprob: -10.637566566467285
    4. '    ' → logprob: -10.762566566467285
    5. '        ' → logprob: -12.637566566467285
    6. ' ' → logprob: -13.012566566467285
    7. '	else' → logprob: -13.637566566467285
    8. ')' → logprob: -13.762566566467285
    9. 'and' → logprob: -14.012566566467285
    10. '   ' → logprob: -14.762566566467285

Token 54: '                     ' (ID: 4451)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.016264738515019417
    2. 'else' → logprob: -4.141264915466309
    3. ')' → logprob: -9.141264915466309
    4. '    ' → logprob: -9.516264915466309
    5. '	else' → logprob: -11.641264915466309
    6. ' and' → logprob: -11.891264915466309
    7. ' ' → logprob: -11.891264915466309
    8. '   ' → logprob: -12.266264915466309
    9. '        ' → logprob: -12.391264915466309
    10. '  ' → logprob: -12.766264915466309

Token 55: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.0028783418238162994
    2. 'else' (adapté à ' else') → logprob: -5.877878189086914
    3. ')' → logprob: -10.252878189086914
    4. ' )' → logprob: -11.752878189086914
    5. '    ' → logprob: -12.002878189086914
    6. '	else' → logprob: -12.127878189086914
    7. ' ' → logprob: -12.627878189086914
    8. ' and' → logprob: -13.252878189086914
    9. '                    ' → logprob: -13.252878189086914
    10. '                     ' → logprob: -13.377878189086914

Token 56: ' b' (ID: 287)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.661700963973999
    2. ' ' → logprob: -1.661700963973999
    3. 'b' → logprob: -2.411700963973999
    4. ' b' → logprob: -2.411700963973999
    5. ' a' → logprob: -3.911700963973999
    6. 'a' → logprob: -4.036701202392578
    7. ' None' → logprob: -4.161701202392578
    8. ' math' → logprob: -4.286701202392578
    9. ' float' → logprob: -4.536701202392578
    10. ' (' → logprob: -4.786701202392578

Token 57: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15139752626419067
    2. '*' → logprob: -2.651397466659546
    3. ' *' → logprob: -3.026397466659546
    4. ' /' → logprob: -4.776397705078125
    5. '/' → logprob: -5.276397705078125
    6. '**' → logprob: -6.401397705078125
    7. ' -' → logprob: -6.901397705078125
    8. '-' → logprob: -6.901397705078125
    9. ' )' → logprob: -7.026397705078125
    10. '*)' → logprob: -7.526397705078125

Token 58: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1131926104426384
    2. 'a' → logprob: -2.613192558288574
    3. '(a' → logprob: -4.113192558288574
    4. '(' → logprob: -4.863192558288574
    5. '(b' → logprob: -5.488192558288574
    6. ' b' → logprob: -6.363192558288574
    7. ' (' → logprob: -6.863192558288574
    8. '(math' → logprob: -7.363192558288574
    9. 'math' → logprob: -7.363192558288574
    10. '2' → logprob: -7.863192558288574

Token 59: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18739080429077148
    2. ' /' → logprob: -2.3123908042907715
    3. ' *' → logprob: -3.3123908042907715
    4. '/' → logprob: -3.9373908042907715
    5. '*' → logprob: -4.9373908042907715
    6. ' )' → logprob: -5.1873908042907715
    7. '   ' → logprob: -7.0623908042907715
    8. '))' → logprob: -8.06239128112793
    9. ' ' → logprob: -8.18739128112793
    10. '*)' → logprob: -8.56239128112793

Token 60: ' a' (ID: 261)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -1.3832119703292847
    2. ' math' → logprob: -1.5082119703292847
    3. '(' → logprob: -2.008212089538574
    4. '/' → logprob: -2.508212089538574
    5. ' (' → logprob: -2.508212089538574
    6. 'a' → logprob: -2.883212089538574
    7. 't' → logprob: -3.383212089538574
    8. '(math' → logprob: -3.383212089538574
    9. '0' → logprob: -3.633212089538574
    10. '3' → logprob: -4.008212089538574

Token 61: ' /' (ID: 820)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.043592341244220734
    2. ' /' → logprob: -4.41859245300293
    3. ' *' → logprob: -4.41859245300293
    4. '*' → logprob: -4.54359245300293
    5. '/' → logprob: -5.79359245300293
    6. ' )' → logprob: -6.66859245300293
    7. '))' → logprob: -7.04359245300293
    8. ' ' → logprob: -7.54359245300293
    9. '**' → logprob: -7.91859245300293
    10. '   ' → logprob: -8.29359245300293

Token 62: ' (' (ID: 350)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.10347393155097961
    2. '3' → logprob: -2.7284739017486572
    3. '6' → logprob: -3.7284739017486572
    4. ' ' → logprob: -5.353474140167236
    5. '(' → logprob: -5.853474140167236
    6. '(math' → logprob: -7.728474140167236
    7. 'math' → logprob: -7.728474140167236
    8. ' math' → logprob: -8.478473663330078
    9. ' (' → logprob: -8.978473663330078
    10. '4' → logprob: -9.728473663330078

Token 63: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6466064453125
    2. '3' → logprob: -1.5216064453125
    3. 'math' → logprob: -2.1466064453125
    4. '(' → logprob: -2.8966064453125
    5. ' math' → logprob: -3.3966064453125
    6. '(math' → logprob: -3.7716064453125
    7. ' ' → logprob: -4.1466064453125
    8. '6' → logprob: -5.5216064453125
    9. 'a' → logprob: -5.6466064453125
    10. ' (' → logprob: -5.7716064453125

Token 64: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.9177923202514648
    2. ')' → logprob: -1.1677923202514648
    3. '*' → logprob: -1.4177923202514648
    4. '))' → logprob: -3.292792320251465
    5. ')))' → logprob: -5.292792320251465
    6. ' /' → logprob: -6.917792320251465
    7. 'a' → logprob: -7.042792320251465
    8. '*t' → logprob: -7.667792320251465
    9. '                      ' → logprob: -8.042792320251465
    10. ' )' → logprob: -8.417792320251465

Token 65: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.2026328295469284
    2. ' math' → logprob: -1.7026327848434448
    3. '(math' → logprob: -7.452632904052734
    4. 'a' → logprob: -8.327632904052734
    5. 'ma' → logprob: -9.452632904052734
    6. '   ' → logprob: -9.702632904052734
    7. 'b' → logprob: -9.827632904052734
    8. ' ' → logprob: -9.952632904052734
    9. 'mat' → logprob: -10.452632904052734
    10. ' a' → logprob: -10.952632904052734

Token 66: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.008126335218548775
    2. '.atan' → logprob: -6.008126258850098
    3. '.sin' → logprob: -6.133126258850098
    4. '.cos' → logprob: -6.508126258850098
    5. '.' → logprob: -7.383126258850098
    6. '.pi' → logprob: -7.508126258850098
    7. '.sqrt' → logprob: -7.633126258850098
    8. '.b' → logprob: -8.883126258850098
    9. '.h' → logprob: -10.008126258850098
    10. '.c' → logprob: -10.258126258850098

Token 67: 'an' (ID: 270)
  Prédit: 'an'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.00194279954303056
    2. 'tan' → logprob: -7.5019426345825195
    3. 'cos' → logprob: -7.8769426345825195
    4. 'a' → logprob: -7.8769426345825195
    5. '.atan' → logprob: -9.37694263458252
    6. '.cos' → logprob: -9.87694263458252
    7. 'c' → logprob: -9.87694263458252
    8. 'atan' → logprob: -10.00194263458252
    9. 'anw' → logprob: -10.00194263458252
    10. 'sin' → logprob: -10.00194263458252

Token 68: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.006238406989723444
    2. '(' → logprob: -5.1312384605407715
    3. ')' → logprob: -8.631237983703613
    4. 't' → logprob: -9.131237983703613
    5. ' (' → logprob: -11.756237983703613
    6. ')t' → logprob: -11.881237983703613
    7. ')(' → logprob: -12.506237983703613
    8. ' t' → logprob: -13.131237983703613
    9. '(
' → logprob: -14.256237983703613
    10. '(theta' → logprob: -14.506237983703613

Token 69: ')))

' (ID: 46526)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16295337677001953
    2. '))' → logprob: -2.0379533767700195
    3. ')))' → logprob: -3.9129533767700195
    4. '))))' → logprob: -10.16295337677002
    5. ' )' → logprob: -10.28795337677002
    6. ' ' → logprob: -12.66295337677002
    7. '   ' → logprob: -12.78795337677002
    8. ' ))' → logprob: -13.03795337677002
    9. '),' → logprob: -13.66295337677002
    10. ')
' → logprob: -13.78795337677002

Token 70: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.047695670276880264
    2. ':' → logprob: -3.7976956367492676
    3. '<|end|>' → logprob: -4.297695636749268
    4. '(' → logprob: -5.297695636749268
    5. '#' → logprob: -6.797695636749268
    6. ' ' → logprob: -6.922695636749268
    7. '[' → logprob: -7.422695636749268
    8. '```' → logprob: -7.672695636749268
    9. '
' → logprob: -8.047696113586426
    10. '\' → logprob: -8.047696113586426

Token 71: ' binary' (ID: 15600)
  Prédit: ' calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calc' → logprob: -0.01261278335005045
    2. ' partial' → logprob: -5.262612819671631
    3. 'calc' → logprob: -6.012612819671631
    4. ' calculate' → logprob: -6.137612819671631
    5. ' main' → logprob: -7.762612819671631
    6. ' apply' → logprob: -8.012612342834473
    7. ' compute' → logprob: -8.887612342834473
    8. ' convert' → logprob: -8.887612342834473
    9. ' _' → logprob: -9.012612342834473
    10. ' wrap' → logprob: -9.137612342834473

Token 72: '_search' (ID: 23642)
  Prédit: '_search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_search' → logprob: -0.00036275613820180297
    2. '_' → logprob: -8.000362396240234
    3. 'search' → logprob: -11.500362396240234
    4. '_find' → logprob: -12.500362396240234
    5. '_space' → logprob: -13.375362396240234
    6. '_predict' → logprob: -13.500362396240234
    7. '_method' → logprob: -13.750362396240234
    8. '_s' → logprob: -13.750362396240234
    9. '_split' → logprob: -13.875362396240234
    10. ' _' → logprob: -14.125362396240234

Token 73: '(f' (ID: 1526)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00016802136087790132
    2. ' (' → logprob: -9.625167846679688
    3. '(lambda' → logprob: -10.000167846679688
    4. '(func' → logprob: -12.000167846679688
    5. '(a' → logprob: -12.125167846679688
    6. '(t' → logprob: -12.250167846679688
    7. '(f' → logprob: -12.750167846679688
    8. '(
' → logprob: -12.875167846679688
    9. '(function' → logprob: -12.875167846679688
    10. '(target' → logprob: -12.875167846679688

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005625653429888189
    2. ')' → logprob: -8.37556266784668
    3. ' ,' → logprob: -9.87556266784668
    4. '<|end|>' → logprob: -9.87556266784668
    5. '_,' → logprob: -10.37556266784668
    6. '(' → logprob: -10.50056266784668
    7. '):' → logprob: -10.75056266784668
    8. '_' → logprob: -10.87556266784668
    9. 'unction' → logprob: -11.37556266784668
    10. ',a' → logprob: -11.62556266784668

Token 75: ' target' (ID: 3783)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.26687219738960266
    2. ' low' → logprob: -1.8918721675872803
    3. 'lo' → logprob: -3.0168721675872803
    4. 'left' → logprob: -4.391872406005859
    5. ' lo' → logprob: -4.641872406005859
    6. 'lower' → logprob: -5.266872406005859
    7. 'a' → logprob: -6.141872406005859
    8. 'start' → logprob: -6.391872406005859
    9. ' left' → logprob: -6.641872406005859
    10. '0' → logprob: -7.266872406005859

Token 76: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004642736748792231
    2. '):' → logprob: -7.75046443939209
    3. ' ,' → logprob: -11.00046443939209
    4. ')' → logprob: -12.00046443939209
    5. ',
' → logprob: -13.62546443939209
    6. ',b' → logprob: -13.75046443939209
    7. ':' → logprob: -14.25046443939209
    8. ' ' → logprob: -14.25046443939209
    9. ',a' → logprob: -14.37546443939209
    10. '=' → logprob: -14.37546443939209

Token 77: ' lo' (ID: 1445)
  Prédit: ' low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' low' → logprob: -0.5197833776473999
    2. 'low' → logprob: -1.1447833776474
    3. ' lo' → logprob: -3.5197834968566895
    4. ' left' → logprob: -4.0197834968566895
    5. 'lo' → logprob: -4.3947834968566895
    6. 'left' → logprob: -5.0197834968566895
    7. ' lower' → logprob: -5.1447834968566895
    8. 'lower' → logprob: -5.1447834968566895
    9. ' start' → logprob: -5.2697834968566895
    10. 'start' → logprob: -5.7697834968566895

Token 78: '=' (ID: 28)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001119976514019072
    2. '=' → logprob: -6.876120090484619
    3. ' ,' → logprob: -9.501119613647461
    4. '_,' → logprob: -12.376119613647461
    5. '=None' → logprob: -13.001119613647461
    6. ':' → logprob: -13.501119613647461
    7. ')' → logprob: -14.126119613647461
    8. ',int' → logprob: -14.626119613647461
    9. '):' → logprob: -15.001119613647461
    10. '<|end|>' → logprob: -15.001119613647461

Token 79: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.9795445849886164e-05
    2. ' ' → logprob: -9.750060081481934
    3. '1' → logprob: -13.625060081481934
    4. '-' → logprob: -15.625060081481934
    5. ' -' → logprob: -18.500059127807617
    6. '۰' → logprob: -19.000059127807617
    7. ')' → logprob: -19.500059127807617
    8. '<|end|>' → logprob: -20.250059127807617
    9. '```' → logprob: -20.625059127807617
    10. '=' → logprob: -20.625059127807617

Token 80: '.,' (ID: 4213)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005894903093576431
    2. '.' → logprob: -5.255895137786865
    3. ' ,' → logprob: -7.380895137786865
    4. '.,' → logprob: -10.755894660949707
    5. ')' → logprob: -11.380894660949707
    6. '0' → logprob: -14.005894660949707
    7. '<|end|>' → logprob: -14.005894660949707
    8. '‌,' → logprob: -14.755894660949707
    9. '),' → logprob: -14.880894660949707
    10. ' ' → logprob: -15.130894660949707

Token 81: ' hi' (ID: 5911)
  Prédit: 'hi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hi' → logprob: -0.2525065541267395
    2. ' hi' → logprob: -1.5025064945220947
    3. '1' → logprob: -8.002506256103516
    4. ' ' → logprob: -9.627506256103516
    5. ' up' → logprob: -9.877506256103516
    6. 'ho' → logprob: -10.002506256103516
    7. '_hi' → logprob: -10.377506256103516
    8. 'up' → logprob: -10.627506256103516
    9. 'Hi' → logprob: -11.752506256103516
    10. ' high' → logprob: -12.752506256103516

Token 82: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0009947025682777166
    2. ':' → logprob: -8.000994682312012
    3. '=None' → logprob: -8.875994682312012
    4. '=>' → logprob: -9.000994682312012
    5. '):' → logprob: -9.375994682312012
    6. '=:' → logprob: -9.375994682312012
    7. ',' → logprob: -9.625994682312012
    8. ')' → logprob: -10.625994682312012
    9. ')=' → logprob: -10.750994682312012
    10. '1' → logprob: -11.125994682312012

Token 83: '90' (ID: 2744)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05408415570855141
    2. 'math' → logprob: -3.179084062576294
    3. ' math' → logprob: -5.054084300994873
    4. ' ' → logprob: -6.054084300994873
    5. '90' → logprob: -7.179084300994873
    6. '0' → logprob: -7.304084300994873
    7. '3' → logprob: -7.429084300994873
    8. '2' → logprob: -8.554083824157715
    9. '(math' → logprob: -10.929083824157715
    10. '10' → logprob: -11.054083824157715

Token 84: '.,' (ID: 4213)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.015738477930426598
    2. '.' → logprob: -5.265738487243652
    3. '.):' → logprob: -5.390738487243652
    4. ')' → logprob: -5.765738487243652
    5. ',' → logprob: -6.140738487243652
    6. ' ):' → logprob: -8.140738487243652
    7. '):
' → logprob: -8.515738487243652
    8. ' ' → logprob: -10.890738487243652
    9. '.)' → logprob: -11.015738487243652
    10. '.,' → logprob: -11.140738487243652

Token 85: ' tol' (ID: 45444)
  Prédit: ' eps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' eps' → logprob: -0.8743445873260498
    2. 'eps' → logprob: -1.6243445873260498
    3. ' tol' → logprob: -1.6243445873260498
    4. ' steps' → logprob: -3.37434458732605
    5. ' tolerance' → logprob: -3.37434458732605
    6. 'tol' → logprob: -3.49934458732605
    7. 'epsilon' → logprob: -3.87434458732605
    8. ' epsilon' → logprob: -4.124344825744629
    9. 'steps' → logprob: -4.624344825744629
    10. ' ' → logprob: -5.249344825744629

Token 86: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0018526007188484073
    2. '):' → logprob: -6.501852512359619
    3. ':' → logprob: -9.001852989196777
    4. ')' → logprob: -9.751852989196777
    5. '=None' → logprob: -9.751852989196777
    6. '=:' → logprob: -10.251852989196777
    7. ' =' → logprob: -10.876852989196777
    8. ')=' → logprob: -11.126852989196777
    9. '_=' → logprob: -11.626852989196777
    10. '=_' → logprob: -11.751852989196777

Token 87: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014425676316022873
    2. ' ' → logprob: -4.389425754547119
    3. '0' → logprob: -6.264425754547119
    4. 'e' → logprob: -12.639425277709961
    5. '.' → logprob: -12.889425277709961
    6. '   ' → logprob: -13.639425277709961
    7. '-' → logprob: -13.764425277709961
    8. '10' → logprob: -14.139425277709961
    9. '  ' → logprob: -14.389425277709961
    10. '2' → logprob: -14.764425277709961

Token 88: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.00791500136256218
    2. '.e' → logprob: -4.882915019989014
    3. '.' → logprob: -8.507914543151855
    4. '-' → logprob: -9.382914543151855
    5. '.E' → logprob: -11.632914543151855
    6. '-e' → logprob: -11.882914543151855
    7. ')e' → logprob: -12.757914543151855
    8. 'E' → logprob: -13.757914543151855
    9. '```' → logprob: -14.882914543151855
    10. 'е' → logprob: -15.007914543151855

Token 89: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.0802738870552275e-05
    2. '4' → logprob: -12.75001049041748
    3. '6' → logprob: -13.37501049041748
    4. '3' → logprob: -13.50001049041748
    5. '5' → logprob: -13.75001049041748
    6. '7' → logprob: -14.25001049041748
    7. ' -' → logprob: -14.50001049041748
    8. '−' → logprob: -14.50001049041748
    9. 'e' → logprob: -14.87501049041748
    10. '2' → logprob: -15.12501049041748

Token 90: '10' (ID: 702)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -1.0129209756851196
    2. '7' → logprob: -1.2629209756851196
    3. '5' → logprob: -1.3879209756851196
    4. '4' → logprob: -2.88792085647583
    5. '3' → logprob: -4.26292085647583
    6. '8' → logprob: -4.38792085647583
    7. '9' → logprob: -4.88792085647583
    8. '06' → logprob: -5.38792085647583
    9. '10' → logprob: -5.76292085647583
    10. '05' → logprob: -5.88792085647583

Token 91: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0024423585273325443
    2. ',' → logprob: -6.752442359924316
    3. ')' → logprob: -7.002442359924316
    4. ' ):' → logprob: -8.002442359924316
    5. '):
' → logprob: -11.377442359924316
    6. ':' → logprob: -11.877442359924316
    7. '   ' → logprob: -12.877442359924316
    8. ' ' → logprob: -13.627442359924316
    9. ' ,' → logprob: -13.877442359924316
    10. ''):' → logprob: -14.252442359924316

Token 92: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.051187146455049515
    2. 'max' → logprob: -3.176187038421631
    3. ' step' → logprob: -6.051187038421631
    4. ')' → logprob: -6.176187038421631
    5. ' func' → logprob: -7.051187038421631
    6. ' steps' → logprob: -7.801187038421631
    7. ' mid' → logprob: -7.801187038421631
    8. ' key' → logprob: -8.051187515258789
    9. ' n' → logprob: -8.301187515258789
    10. ' )' → logprob: -8.926187515258789

Token 93: '_iter' (ID: 27043)
  Prédit: '_iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_iter' → logprob: -0.11974477022886276
    2. '_iters' → logprob: -2.6197447776794434
    3. '_' → logprob: -3.7447447776794434
    4. '_iterations' → logprob: -4.244744777679443
    5. '_steps' → logprob: -7.244744777679443
    6. '_depth' → logprob: -7.994744777679443
    7. '_val' → logprob: -8.369744300842285
    8. '_attempt' → logprob: -8.494744300842285
    9. '_iteration' → logprob: -9.494744300842285
    10. '_calls' → logprob: -9.619744300842285

Token 94: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00014895245840307325
    2. ')=' → logprob: -10.00014877319336
    3. '=None' → logprob: -10.12514877319336
    4. 's' → logprob: -10.37514877319336
    5. '):' → logprob: -11.37514877319336
    6. ')' → logprob: -11.87514877319336
    7. '=

' → logprob: -12.50014877319336
    8. '=int' → logprob: -12.62514877319336
    9. '=s' → logprob: -13.00014877319336
    10. '_=' → logprob: -13.62514877319336

Token 95: '50' (ID: 1434)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0022872837726026773
    2. ' ' → logprob: -6.1272873878479
    3. '50' → logprob: -10.127286911010742
    4. '500' → logprob: -10.252286911010742
    5. '10' → logprob: -11.002286911010742
    6. '200' → logprob: -12.502286911010742
    7. '1' → logprob: -12.627286911010742
    8. '20' → logprob: -14.002286911010742
    9. '300' → logprob: -14.377286911010742
    10. '   ' → logprob: -14.627286911010742

Token 96: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0002775438770186156
    2. ')' → logprob: -8.500277519226074
    3. '):
' → logprob: -9.875277519226074
    4. ':' → logprob: -11.000277519226074
    5. ' ):' → logprob: -12.625277519226074
    6. ',' → logprob: -13.875277519226074
    7. '   ' → logprob: -13.875277519226074
    8. ' ' → logprob: -16.00027847290039
    9. ''):' → logprob: -16.00027847290039
    10. '):
' → logprob: -16.12527847290039

Token 97: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6171640753746033
    2. ':' → logprob: -1.617164134979248
    3. ' ' → logprob: -1.617164134979248
    4. ' :' → logprob: -3.867164134979248
    5. '<|end|>' → logprob: -4.492164134979248
    6. ')' → logprob: -4.742164134979248
    7. '    ' → logprob: -4.867164134979248
    8. ' 
' → logprob: -5.367164134979248
    9. '):' → logprob: -5.992164134979248
    10. '  ' → logprob: -6.242164134979248

Token 98: ' for' (ID: 395)
  Prédit: ' mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.7722896337509155
    2. ' for' → logprob: -0.8972896337509155
    3. ' while' → logprob: -3.522289752960205
    4. '   ' → logprob: -3.522289752960205
    5. ' lo' → logprob: -3.897289752960205
    6. ' t' → logprob: -4.647289752960205
    7. 'for' (adapté à ' for') → logprob: -4.897289752960205
    8. 'mid' → logprob: -5.022289752960205
    9. ' ' → logprob: -5.647289752960205
    10. '    ' → logprob: -5.647289752960205

Token 99: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.1607767641544342
    2. ' i' → logprob: -1.9107767343521118
    3. '_' → logprob: -7.660776615142822
    4. ' ' → logprob: -9.78577709197998
    5. 'i' → logprob: -10.78577709197998
    6. '_i' → logprob: -13.41077709197998
    7. ' iteration' → logprob: -14.16077709197998
    8. ' iter' → logprob: -14.53577709197998
    9. '_iter' → logprob: -14.91077709197998
    10. '	i' → logprob: -15.03577709197998

Token 100: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0008372656302526593
    2. 'in' → logprob: -7.125837326049805
    3. ' ' → logprob: -10.625837326049805
    4. ' _' → logprob: -12.875837326049805
    5. '<|end|>' → logprob: -13.125837326049805
    6. '	in' → logprob: -13.625837326049805
    7. '_' → logprob: -13.750837326049805
    8. 'range' → logprob: -14.375837326049805
    9. '_in' → logprob: -15.500837326049805
    10. '  ' → logprob: -16.125837326049805

Token 101: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.47407791018486023
    2. ' range' → logprob: -0.9740779399871826
    3. '(range' → logprob: -14.349078178405762
    4. '	range' → logprob: -15.349078178405762
    5. ' xrange' → logprob: -16.849077224731445
    6. ' ' → logprob: -18.099077224731445
    7. '_range' → logprob: -18.474077224731445
    8. 'rang' → logprob: -19.224077224731445
    9. '.range' → logprob: -19.474077224731445
    10. '```' → logprob: -19.599077224731445

Token 102: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.09379123896360397
    2. 'max' → logprob: -2.9687912464141846
    3. ' max' → logprob: -3.3437912464141846
    4. '(' → logprob: -5.9687910079956055
    5. ' (' → logprob: -8.218791007995605
    6. '	max' → logprob: -11.343791007995605
    7. '_max' → logprob: -12.093791007995605
    8. ' ' → logprob: -12.843791007995605
    9. ':max' → logprob: -12.843791007995605
    10. '<|end|>' → logprob: -12.968791007995605

Token 103: '_iter' (ID: 27043)
  Prédit: '_iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_iter' → logprob: -3.225939872208983e-05
    2. '_iters' → logprob: -10.750032424926758
    3. 'iter' → logprob: -12.000032424926758
    4. '_iterations' → logprob: -13.000032424926758
    5. '_iteration' → logprob: -14.375032424926758
    6. '_it' → logprob: -14.625032424926758
    7. '_ITER' → logprob: -14.750032424926758
    8. '_itr' → logprob: -14.875032424926758
    9. '_' → logprob: -15.000032424926758
    10. 'Iter' → logprob: -16.000032424926758

Token 104: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0012832103529945016
    2. '):
' → logprob: -6.751283168792725
    3. ' ):' → logprob: -9.626283645629883
    4. ':' → logprob: -10.501283645629883
    5. ')' → logprob: -11.001283645629883
    6. '():' → logprob: -14.001283645629883
    7. '):
' → logprob: -14.626283645629883
    8. '   ' → logprob: -15.251283645629883
    9. ']:' → logprob: -15.251283645629883
    10. '}:' → logprob: -15.376283645629883

Token 105: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008604409173130989
    2. '<|end|>' → logprob: -5.258604526519775
    3. '   ' → logprob: -6.883604526519775
    4. ' ' → logprob: -7.633604526519775
    5. '    ' → logprob: -8.008604049682617
    6. '        
' → logprob: -8.508604049682617
    7. '<|end|>' → logprob: -8.633604049682617
    8. '      ' → logprob: -8.633604049682617
    9. ')' → logprob: -9.008604049682617
    10. '  ' → logprob: -9.008604049682617

Token 106: ' mid' (ID: 6959)
  Prédit: ' mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.03290634974837303
    2. 'mid' (adapté à ' mid') → logprob: -3.6579062938690186
    3. 'm' → logprob: -5.907906532287598
    4. ' midpoint' → logprob: -6.282906532287598
    5. ' m' → logprob: -6.657906532287598
    6. ' ' → logprob: -8.032906532287598
    7. ' mids' → logprob: -8.532906532287598
    8. '       ' → logprob: -9.532906532287598
    9. '        ' → logprob: -9.657906532287598
    10. '_mid' → logprob: -11.282906532287598

Token 107: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2255466878414154
    2. '=' → logprob: -1.6005467176437378
    3. '<|end|>' → logprob: -9.225546836853027
    4. ' ' → logprob: -11.225546836853027
    5. ')' → logprob: -11.725546836853027
    6. ',' → logprob: -12.475546836853027
    7. '<|end|>' → logprob: -13.100546836853027
    8. '_' → logprob: -13.225546836853027
    9. '	' → logprob: -14.350546836853027
    10. '.' → logprob: -14.475546836853027

Token 108: ' (' (ID: 350)
  Prédit: '(lo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lo' → logprob: -0.02999265119433403
    2. ' (' → logprob: -4.154992580413818
    3. '(' → logprob: -4.279992580413818
    4. 'lo' → logprob: -11.654993057250977
    5. ' lo' → logprob: -12.529993057250977
    6. '
' → logprob: -13.154993057250977
    7. ' ' → logprob: -14.279993057250977
    8. '(low' → logprob: -14.529993057250977
    9. '```' → logprob: -14.654993057250977
    10. '(loop' → logprob: -14.654993057250977

Token 109: 'lo' (ID: 746)
  Prédit: 'lo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lo' → logprob: -0.0008124859305098653
    2. ' lo' → logprob: -7.125812530517578
    3. 'hi' → logprob: -11.875812530517578
    4. '(lo' → logprob: -14.000812530517578
    5. '_lo' → logprob: -15.875812530517578
    6. 'li' → logprob: -17.000812530517578
    7. ' ' → logprob: -18.000812530517578
    8. 'ho' → logprob: -18.250812530517578
    9. 'loh' → logprob: -18.250812530517578
    10. '.lo' → logprob: -18.375812530517578

Token 110: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47407999634742737
    2. ' +' → logprob: -0.974079966545105
    3. '<|end|>' → logprob: -13.099080085754395
    4. ' plus' → logprob: -15.349080085754395
    5. ' ' → logprob: -15.599080085754395
    6. ' +
' → logprob: -15.849080085754395
    7. '+
' → logprob: -16.349079132080078
    8. '```' → logprob: -16.849079132080078
    9. '+xml' → logprob: -16.974079132080078
    10. '<|end|>' → logprob: -17.099079132080078

Token 111: ' hi' (ID: 5911)
  Prédit: 'hi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hi' → logprob: -0.01815052703022957
    2. ' hi' → logprob: -4.018150329589844
    3. '_hi' → logprob: -14.893150329589844
    4. ' ' → logprob: -16.393150329589844
    5. 'Hi' → logprob: -16.393150329589844
    6. '-hi' → logprob: -18.018150329589844
    7. ' Hi' → logprob: -18.393150329589844
    8. '
' → logprob: -18.643150329589844
    9. 'ho' → logprob: -18.768150329589844
    10. '   ' → logprob: -19.018150329589844

Token 112: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.5597102396423e-05
    2. ')/' → logprob: -10.375035285949707
    3. ' )' → logprob: -12.375035285949707
    4. '   ' → logprob: -17.375036239624023
    5. '）' → logprob: -17.875036239624023
    6. '0' → logprob: -18.750036239624023
    7. ')
' → logprob: -19.125036239624023
    8. '```' → logprob: -19.625036239624023
    9. '')' → logprob: -20.125036239624023
    10. ' ' → logprob: -20.125036239624023

Token 113: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.14627574384212494
    2. ' /' → logprob: -2.146275758743286
    3. ')' → logprob: -4.271275520324707
    4. ')/' → logprob: -5.271275520324707
    5. ' ' → logprob: -11.271275520324707
    6. '<|end|>' → logprob: -11.396275520324707
    7. '   ' → logprob: -11.896275520324707
    8. ' )' → logprob: -12.271275520324707
    9. '```' → logprob: -12.521275520324707
    10. ' ' → logprob: -12.521275520324707

Token 114: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02630157396197319
    2. ' ' → logprob: -3.651301622390747
    3. '   ' → logprob: -14.401301383972168
    4. '```' → logprob: -15.276301383972168
    5. '  ' → logprob: -16.151302337646484
    6. ' ' → logprob: -16.838802337646484
    7. '۲' → logprob: -17.026302337646484
    8. '<|end|>' → logprob: -17.338802337646484
    9. '    ' → logprob: -17.713802337646484
    10. '
' → logprob: -17.776302337646484

Token 115: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -16.625001907348633
    4. '```' → logprob: -16.875001907348633
    5. '۲' → logprob: -18.375001907348633
    6. '２' → logprob: -19.437501907348633
    7. '  ' → logprob: -19.937501907348633
    8. '    ' → logprob: -20.250001907348633
    9. '٢' → logprob: -20.312501907348633
    10. '(' → logprob: -20.500001907348633

Token 116: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 117: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032181181013584137
    2. '        
' → logprob: -6.503218173980713
    3. ')' → logprob: -7.878218173980713
    4. '<|end|>' → logprob: -7.878218173980713
    5. '        ' → logprob: -8.503217697143555
    6. '
' → logprob: -8.753217697143555
    7. ' if' → logprob: -9.253217697143555
    8. 't' → logprob: -9.378217697143555
    9. '      ' → logprob: -9.753217697143555
    10. ' ' → logprob: -9.878217697143555

Token 118: ' v' (ID: 323)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0625238418579102
    2. 'val' → logprob: -1.6875238418579102
    3. 'value' → logprob: -1.8125238418579102
    4. ' val' → logprob: -2.06252384185791
    5. ' value' → logprob: -2.31252384185791
    6. 'v' (adapté à ' v') → logprob: -3.93752384185791
    7. ' if' → logprob: -4.31252384185791
    8. 'mid' → logprob: -4.43752384185791
    9. 'result' → logprob: -4.56252384185791
    10. ' mid' → logprob: -4.81252384185791

Token 119: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6041702032089233
    2. 'al' → logprob: -1.4791702032089233
    3. ' =' → logprob: -1.6041702032089233
    4. 'alue' → logprob: -3.854170322418213
    5. 'alu' → logprob: -5.729170322418213
    6. 'ALUE' → logprob: -9.104169845581055
    7. 'l' → logprob: -11.729169845581055
    8. 'alc' → logprob: -11.854169845581055
    9. 'alse' → logprob: -12.604169845581055
    10. 'ale' → logprob: -13.479169845581055

Token 120: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.31341418623924255
    2. ' f' → logprob: -1.313414216041565
    3. ' math' → logprob: -9.313414573669434
    4. 'math' → logprob: -9.688414573669434
    5. '	f' → logprob: -15.438414573669434
    6. ' ' → logprob: -16.313413619995117
    7. ' ' → logprob: -17.813413619995117
    8. '(f' → logprob: -17.938413619995117
    9. 'import' → logprob: -18.063413619995117
    10. 'cmath' → logprob: -18.438413619995117

Token 121: '(math' (ID: 86464)
  Prédit: '(mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mid' → logprob: -5.264322317088954e-05
    2. '(' → logprob: -9.875052452087402
    3. '(m' → logprob: -14.375052452087402
    4. ' (' → logprob: -14.875052452087402
    5. '[mid' → logprob: -16.50005340576172
    6. '(math' → logprob: -17.00005340576172
    7. '(
' → logprob: -17.75005340576172
    8. '(mi' → logprob: -17.87505340576172
    9. '(s' → logprob: -18.12505340576172
    10. 'mid' → logprob: -18.37505340576172

Token 122: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.0022210339084267616
    2. '.' → logprob: -6.87722110748291
    3. '.t' → logprob: -7.00222110748291
    4. '.atan' → logprob: -8.75222110748291
    5. '.pi' → logprob: -9.25222110748291
    6. '.rad' → logprob: -12.00222110748291
    7. '.sin' → logprob: -12.25222110748291
    8. '.de' → logprob: -13.00222110748291
    9. 'r' → logprob: -13.25222110748291
    10. ' .' → logprob: -13.25222110748291

Token 123: 'adians' (ID: 45611)
  Prédit: 'adians'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adians' → logprob: -0.09921953827142715
    2. 'ads' → logprob: -2.474219560623169
    3. 'ad' → logprob: -4.59921932220459
    4. 'adi' → logprob: -8.97421932220459
    5. 'di' → logprob: -11.84921932220459
    6. 'adian' → logprob: -12.34921932220459
    7. 'a' → logprob: -12.34921932220459
    8. '```' → logprob: -12.97421932220459
    9. '**' → logprob: -13.22421932220459
    10. 'v' → logprob: -13.34921932220459

Token 124: '(mid' (ID: 121498)
  Prédit: '(mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mid' → logprob: -0.0005089493934065104
    2. '(' → logprob: -8.250509262084961
    3. ')(' → logprob: -8.875509262084961
    4. ')' → logprob: -9.750509262084961
    5. 'mid' → logprob: -10.250509262084961
    6. '[mid' → logprob: -11.750509262084961
    7. ' (' → logprob: -13.000509262084961
    8. '(
' → logprob: -13.125509262084961
    9. ')(
' → logprob: -14.500509262084961
    10. '(m' → logprob: -14.625509262084961

Token 125: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47427257895469666
    2. '))' → logprob: -0.974272608757019
    3. '))
' → logprob: -9.224272727966309
    4. ')
' → logprob: -9.349272727966309
    5. ')))' → logprob: -12.224272727966309
    6. ' )' → logprob: -13.474272727966309
    7. '))

' → logprob: -13.849272727966309
    8. ')

' → logprob: -13.974272727966309
    9. '()' → logprob: -14.474272727966309
    10. ' ))' → logprob: -14.974272727966309

Token 126: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024546677246689796
    2. '<|end|>' → logprob: -4.1495466232299805
    3. ' if' → logprob: -5.2745466232299805
    4. 'if' → logprob: -6.2745466232299805
    5. '
' → logprob: -7.0245466232299805
    6. ')' → logprob: -8.14954662322998
    7. '        
' → logprob: -9.02454662322998
    8. '<|end|>' → logprob: -9.52454662322998
    9. '  
' → logprob: -11.27454662322998
    10. '   ' → logprob: -11.64954662322998

Token 127: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4981426000595093
    2. ' if' → logprob: -0.9981426000595093
    3. '       ' → logprob: -3.748142719268799
    4. '
' → logprob: -8.87314224243164
    5. ')' → logprob: -10.87314224243164
    6. '   ' → logprob: -11.12314224243164
    7. '<|end|>' → logprob: -11.62314224243164
    8. ' ' → logprob: -11.99814224243164
    9. '        ' → logprob: -12.12314224243164
    10. 'If' → logprob: -12.49814224243164

Token 128: ' v' (ID: 323)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.4776446521282196
    2. ' abs' → logprob: -1.727644681930542
    3. 'v' → logprob: -1.852644681930542
    4. ' v' → logprob: -3.102644681930542
    5. 'math' → logprob: -9.102644920349121
    6. ' math' → logprob: -9.602644920349121
    7. '(abs' → logprob: -9.727644920349121
    8. '   ' → logprob: -10.352644920349121
    9. ' ' → logprob: -11.352644920349121
    10. 'fabs' → logprob: -11.977644920349121

Token 129: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.045690301805734634
    2. '<' → logprob: -3.1706902980804443
    3. ' >' → logprob: -6.545690536499023
    4. '>' → logprob: -7.045690536499023
    5. ' >=' → logprob: -8.795690536499023
    6. '<|end|>' → logprob: -9.795690536499023
    7. ' ' → logprob: -10.170690536499023
    8. '>=' → logprob: -10.795690536499023
    9. '<v' → logprob: -11.045690536499023
    10. '<float' → logprob: -11.420690536499023

Token 130: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.4740773141384125
    2. ' target' → logprob: -0.9740773439407349
    3. '(target' → logprob: -15.974077224731445
    4. '	target' → logprob: -16.224077224731445
    5. ' ' → logprob: -18.099077224731445
    6. '=' → logprob: -18.349077224731445
    7. 't' → logprob: -19.099077224731445
    8. '_target' → logprob: -19.349077224731445
    9. '[target' → logprob: -19.599077224731445
    10. 'taget' → logprob: -19.599077224731445

Token 131: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003023345780093223
    2. ':
' → logprob: -8.1253023147583
    3. ' :' → logprob: -12.3753023147583
    4. '):' → logprob: -13.3753023147583
    5. '<|end|>' → logprob: -16.125303268432617
    6. '+:' → logprob: -16.250303268432617
    7. ':return' → logprob: -16.500303268432617
    8. ':**' → logprob: -16.750303268432617
    9. '):
' → logprob: -17.125303268432617
    10. ':
' → logprob: -17.250303268432617

Token 132: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1700393110513687
    2. '       ' → logprob: -3.045039415359497
    3. ' ' → logprob: -3.420039415359497
    4. ' 
' → logprob: -3.795039415359497
    5. '
' → logprob: -4.045039176940918
    6. '            
' → logprob: -4.170039176940918
    7. ':' → logprob: -5.170039176940918
    8. '        ' → logprob: -5.420039176940918
    9. ' lo' → logprob: -6.420039176940918
    10. '        
' → logprob: -6.545039176940918

Token 133: ' hi' (ID: 5911)
  Prédit: 'lo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lo' → logprob: -0.38687366247177124
    2. ' lo' → logprob: -1.136873722076416
    3. '_lo' → logprob: -14.011873245239258
    4. 'hi' (adapté à ' hi') → logprob: -14.636873245239258
    5. '(lo' → logprob: -14.761873245239258
    6. '           ' → logprob: -14.761873245239258
    7. '.lo' → logprob: -15.761873245239258
    8. 'Lo' → logprob: -16.011873245239258
    9. 'li' → logprob: -16.761873245239258
    10. '               ' → logprob: -16.886873245239258

Token 134: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04859066382050514
    2. '=' → logprob: -3.048590660095215
    3. ' ' → logprob: -13.548590660095215
    4. ')' → logprob: -14.048590660095215
    5. ',' → logprob: -14.673590660095215
    6. ' =)' → logprob: -15.173590660095215
    7. ' =
' → logprob: -15.423590660095215
    8. '<|end|>' → logprob: -16.17359161376953
    9. '.' → logprob: -16.42359161376953
    10. ' -=' → logprob: -16.92359161376953

Token 135: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.008614926598966122
    2. ' mid' → logprob: -4.758615016937256
    3. '[mid' → logprob: -16.008615493774414
    4. '_mid' → logprob: -16.633615493774414
    5. ' midpoint' → logprob: -16.883615493774414
    6. '(mid' → logprob: -17.883615493774414
    7. 'midt' → logprob: -18.008615493774414
    8. 'middle' → logprob: -18.133615493774414
    9. 'mi' → logprob: -19.133615493774414
    10. 'm' → logprob: -19.758615493774414

Token 136: '
' (ID: 198)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.761224627494812
    2. '<|end|>' → logprob: -1.386224627494812
    3. 'else' → logprob: -1.636224627494812
    4. '
' → logprob: -2.5112247467041016
    5. ' 
' → logprob: -5.511224746704102
    6. '       ' → logprob: -6.386224746704102
    7. '  
' → logprob: -7.511224746704102
    8. ' ' → logprob: -8.511224746704102
    9. '<|end|>' → logprob: -8.636224746704102
    10. '#else' → logprob: -9.386224746704102

Token 137: '       ' (ID: 309)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.2818133533000946
    2. ' else' → logprob: -1.656813383102417
    3. '       ' → logprob: -2.906813383102417
    4. '<|end|>' → logprob: -9.156813621520996
    5. '
' → logprob: -9.656813621520996
    6. ' 
' → logprob: -12.406813621520996
    7. '#else' → logprob: -12.656813621520996
    8. 'elif' → logprob: -12.906813621520996
    9. '```' → logprob: -12.906813621520996
    10. '	else' → logprob: -13.281813621520996

Token 138: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.7035326361656189
    2. 'else' (adapté à ' else') → logprob: -0.7035326361656189
    3. '       ' → logprob: -4.578532695770264
    4. '<|end|>' → logprob: -10.578532218933105
    5. ' 
' → logprob: -11.578532218933105
    6. ' lo' → logprob: -12.078532218933105
    7. 'elif' → logprob: -12.328532218933105
    8. '
' → logprob: -12.578532218933105
    9. 'lo' → logprob: -13.328532218933105
    10. '	else' → logprob: -13.453532218933105

Token 139: ':
' (ID: 734)
  Prédit: ' lo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lo' → logprob: -0.6074021458625793
    2. '           ' → logprob: -0.8574021458625793
    3. 'lo' → logprob: -4.107402324676514
    4. '   ' → logprob: -5.107402324676514
    5. ':' → logprob: -5.732402324676514
    6. '       ' → logprob: -5.982402324676514
    7. '(lo' → logprob: -6.732402324676514
    8. '<|end|>' → logprob: -7.607402324676514
    9. '_lo' → logprob: -8.482401847839355
    10. '	       ' → logprob: -8.482401847839355

Token 140: '           ' (ID: 352)
  Prédit: ' lo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lo' → logprob: -0.6508182287216187
    2. 'lo' → logprob: -0.7758182287216187
    3. '       ' → logprob: -4.275818347930908
    4. '           ' → logprob: -5.525818347930908
    5. '   ' → logprob: -9.77581787109375
    6. '(lo' → logprob: -10.02581787109375
    7. '_lo' → logprob: -10.90081787109375
    8. '               ' → logprob: -11.40081787109375
    9. '```' → logprob: -11.77581787109375
    10. 'li' → logprob: -12.15081787109375

Token 141: ' lo' (ID: 1445)
  Prédit: ' lo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lo' → logprob: -0.5759435892105103
    2. 'lo' (adapté à ' lo') → logprob: -0.8259435892105103
    3. '_lo' → logprob: -13.200943946838379
    4. '(lo' → logprob: -13.700943946838379
    5. '           ' → logprob: -14.825943946838379
    6. '       ' → logprob: -15.450943946838379
    7. 'Lo' → logprob: -15.825943946838379
    8. '.lo' → logprob: -16.075942993164062
    9. ' loa' → logprob: -16.325942993164062
    10. '   ' → logprob: -16.450942993164062

Token 142: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005234475247561932
    2. '=' → logprob: -5.255234241485596
    3. '<|end|>' → logprob: -14.505234718322754
    4. ' ' → logprob: -16.130233764648438
    5. '=line' → logprob: -18.630233764648438
    6. '=end' → logprob: -18.880233764648438
    7. ' =
' → logprob: -19.005233764648438
    8. '        ' → logprob: -19.130233764648438
    9. ' =)' → logprob: -19.130233764648438
    10. ' ' → logprob: -19.255233764648438

Token 143: ' mid' (ID: 6959)
  Prédit: ' mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.693147599697113
    2. 'mid' → logprob: -0.693147599697113
    3. ' midpoint' → logprob: -15.193147659301758
    4. '(mid' → logprob: -16.318147659301758
    5. '[mid' → logprob: -16.818147659301758
    6. '_mid' → logprob: -17.443147659301758
    7. '.mid' → logprob: -19.818147659301758
    8. 'midt' → logprob: -19.943147659301758
    9. 'm' → logprob: -20.318147659301758
    10. ' ' → logprob: -20.318147659301758

Token 144: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 145: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0329243429005146
    2. '<|end|>' → logprob: -3.5329244136810303
    3. ')' → logprob: -6.657924175262451
    4. '        ' → logprob: -7.907924175262451
    5. '   ' → logprob: -8.53292465209961
    6. ' else' → logprob: -8.78292465209961
    7. ' return' → logprob: -9.15792465209961
    8. 'else' → logprob: -9.15792465209961
    9. '      ' → logprob: -9.15792465209961
    10. ',' → logprob: -9.53292465209961

Token 146: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7673633098602295
    2. '<|end|>' → logprob: -1.6423633098602295
    3. 'return' → logprob: -2.0173633098602295
    4. ')' → logprob: -2.3923633098602295
    5. 'else' → logprob: -3.8923633098602295
    6. '
' → logprob: -3.8923633098602295
    7. ' return' → logprob: -4.767363548278809
    8. '   ' → logprob: -5.017363548278809
    9. '\n' → logprob: -5.017363548278809
    10. 'if' (adapté à ' if') → logprob: -5.142363548278809

Token 147: ' abs' (ID: 8443)
  Prédit: 'hi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hi' → logprob: -0.49207600951194763
    2. ' hi' → logprob: -1.24207603931427
    3. ' abs' → logprob: -2.3670759201049805
    4. 'abs' → logprob: -5.1170759201049805
    5. ' (' → logprob: -10.24207592010498
    6. ' ' → logprob: -10.49207592010498
    7. '(abs' → logprob: -10.99207592010498
    8. '(' → logprob: -11.24207592010498
    9. ' ' → logprob: -11.99207592010498
    10. '   ' → logprob: -12.61707592010498

Token 148: '(' (ID: 7)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.015285050496459007
    2. '(lo' → logprob: -4.765285015106201
    3. '(' → logprob: -5.015285015106201
    4. '(f' → logprob: -12.01528549194336
    5. '(abs' → logprob: -13.51528549194336
    6. '(li' → logprob: -13.64028549194336
    7. '(mid' → logprob: -13.89028549194336
    8. '((' → logprob: -14.64028549194336
    9. 'lo' → logprob: -14.76528549194336
    10. 'v' → logprob: -14.89028549194336

Token 149: 'hi' (ID: 3686)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.013177761808037758
    2. 'v' → logprob: -4.388177871704102
    3. '(lo' → logprob: -7.763177871704102
    4. '(' → logprob: -8.888177871704102
    5. 'lo' → logprob: -9.513177871704102
    6. 'hi' → logprob: -11.513177871704102
    7. '(target' → logprob: -12.388177871704102
    8. ')v' → logprob: -12.513177871704102
    9. 'target' → logprob: -12.638177871704102
    10. ' v' → logprob: -12.888177871704102

Token 150: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1602427214384079
    2. '-' → logprob: -1.9102426767349243
    3. ' ' → logprob: -10.910243034362793
    4. '-lo' → logprob: -15.910243034362793
    5. ' ' → logprob: -16.535242080688477
    6. '   ' → logprob: -17.910242080688477
    7. ' –' → logprob: -17.910242080688477
    8. '  ' → logprob: -17.910242080688477
    9. '–' → logprob: -18.285242080688477
    10. '<|end|>' → logprob: -18.785242080688477

Token 151: ' lo' (ID: 1445)
  Prédit: 'lo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lo' → logprob: -0.007606747094541788
    2. ' lo' → logprob: -4.8826069831848145
    3. '(lo' → logprob: -15.132606506347656
    4. ' ' → logprob: -16.382606506347656
    5. 'los' → logprob: -16.882606506347656
    6. 'Lo' → logprob: -16.882606506347656
    7. 'low' → logprob: -17.132606506347656
    8. 'mid' → logprob: -17.132606506347656
    9. '_lo' → logprob: -17.257606506347656
    10. '   ' → logprob: -17.507606506347656

Token 152: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.861651490908116e-05
    2. ' )' → logprob: -10.000068664550781
    3. ')<' → logprob: -11.250068664550781
    4. ')<=' → logprob: -11.750068664550781
    5. ' <' → logprob: -13.750068664550781
    6. ' <=' → logprob: -14.375068664550781
    7. '<' → logprob: -15.000068664550781
    8. '<=' → logprob: -16.00006866455078
    9. ' ' → logprob: -17.12506866455078
    10. '<|end|>' → logprob: -17.12506866455078

Token 153: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6960477232933044
    2. ' <' → logprob: -0.6960477232933044
    3. ' <=' → logprob: -6.196047782897949
    4. '<=' → logprob: -7.071047782897949
    5. ' ' → logprob: -12.94604778289795
    6. '<|end|>' → logprob: -13.19604778289795
    7. '<T' → logprob: -13.82104778289795
    8. ')' → logprob: -14.32104778289795
    9. ')<' → logprob: -14.44604778289795
    10. ')<=' → logprob: -14.94604778289795

Token 154: ' tol' (ID: 45444)
  Prédit: 'tol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tol' → logprob: -0.34857451915740967
    2. ' tol' → logprob: -1.2235745191574097
    3. 't' → logprob: -9.0985746383667
    4. '_tol' → logprob: -11.2235746383667
    5. ' toll' → logprob: -13.9735746383667
    6. ' tolerance' → logprob: -14.2235746383667
    7. ' ' → logprob: -14.5985746383667
    8. '	t' → logprob: -14.8485746383667
    9. '
' → logprob: -14.8485746383667
    10. ' ' → logprob: -15.5985746383667

Token 155: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03399835154414177
    2. ':
' → logprob: -3.4089982509613037
    3. '       ' → logprob: -8.158998489379883
    4. ':return' → logprob: -10.158998489379883
    5. '           ' → logprob: -11.533998489379883
    6. '   ' → logprob: -11.658998489379883
    7. ',' → logprob: -13.158998489379883
    8. 'break' → logprob: -13.783998489379883
    9. ':

' → logprob: -14.158998489379883
    10. '):
' → logprob: -14.158998489379883

Token 156: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2309277057647705
    2. '           ' → logprob: -2.4809277057647705
    3. 'break' → logprob: -2.6059277057647705
    4. ' break' → logprob: -3.1059277057647705
    5. '	break' → logprob: -6.230927467346191
    6. '   ' → logprob: -6.355927467346191
    7. '	' → logprob: -9.230927467346191
    8. '		' → logprob: -10.480927467346191
    9. '_break' → logprob: -10.730927467346191
    10. '               ' → logprob: -11.230927467346191

Token 157: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.33290669322013855
    2. ' break' → logprob: -1.332906723022461
    3. 'return' → logprob: -4.082906723022461
    4. ' return' → logprob: -6.082906723022461
    5. '           ' → logprob: -8.332906723022461
    6. '	break' → logprob: -9.707906723022461
    7. '       ' → logprob: -12.582906723022461
    8. '               ' → logprob: -12.582906723022461
    9. '_break' → logprob: -12.957906723022461
    10. '
' → logprob: -13.957906723022461

Token 158: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2111213356256485
    2. '       ' → logprob: -1.8361213207244873
    3. ')' → logprob: -4.211121559143066
    4. ',' → logprob: -5.461121559143066
    5. 'return' → logprob: -5.586121559143066
    6. ' return' → logprob: -6.086121559143066
    7. ' ' → logprob: -6.586121559143066
    8. '<|end|>' → logprob: -6.961121559143066
    9. '	return' → logprob: -7.461121559143066
    10. '.' → logprob: -7.961121559143066

Token 159: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20445452630519867
    2. '       ' → logprob: -2.3294544219970703
    3. ')' → logprob: -3.2044544219970703
    4. 'return' → logprob: -4.07945442199707
    5. '<|end|>' → logprob: -4.95445442199707
    6. '\t' → logprob: -5.07945442199707
    7. ',' → logprob: -5.70445442199707
    8. ':return' → logprob: -5.95445442199707
    9. '	return' → logprob: -6.07945442199707
    10. ':' → logprob: -6.32945442199707

Token 160: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.014186544343829155
    2. '   ' → logprob: -4.514186382293701
    3. ' return' → logprob: -6.014186382293701
    4. '       ' → logprob: -7.514186382293701
    5. ':return' → logprob: -10.13918685913086
    6. '	return' → logprob: -10.26418685913086
    7. ' ' → logprob: -10.51418685913086
    8. ')' → logprob: -11.13918685913086
    9. '
' → logprob: -12.38918685913086
    10. '    
' → logprob: -12.51418685913086

Token 161: ' mid' (ID: 6959)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.9165307879447937
    2. '(math' → logprob: -1.1665308475494385
    3. ' math' → logprob: -2.0415308475494385
    4. ' (' → logprob: -2.6665308475494385
    5. '(lo' → logprob: -3.4165308475494385
    6. 'mid' → logprob: -3.7915308475494385
    7. 'lo' → logprob: -3.9165308475494385
    8. '(mid' → logprob: -4.666530609130859
    9. ' mid' → logprob: -6.041530609130859
    10. ' lo' → logprob: -6.791530609130859

Token 162: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 163: 'a' (ID: 64)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5257362723350525
    2. '<|end|>' → logprob: -1.0257363319396973
    3. ':' → logprob: -4.400736331939697
    4. ',' → logprob: -4.525736331939697
    5. '   ' → logprob: -4.525736331939697
    6. ' ' → logprob: -5.650736331939697
    7. '#' → logprob: -5.650736331939697
    8. ']' → logprob: -5.775736331939697
    9. '}' → logprob: -7.275736331939697
    10. '       ' → logprob: -7.400736331939697

Token 164: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04789694398641586
    2. ' ,' → logprob: -4.047896862030029
    3. ' =' → logprob: -4.797896862030029
    4. '=' → logprob: -5.047896862030029
    5. '<|end|>' → logprob: -5.047896862030029
    6. ' ' → logprob: -5.422896862030029
    7. ',b' → logprob: -6.547896862030029
    8. ')' → logprob: -7.047896862030029
    9. ' *' → logprob: -8.172897338867188
    10. ',a' → logprob: -8.172897338867188

Token 165: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.20149365067481995
    2. 'b' → logprob: -1.7014936208724976
    3. ' ' → logprob: -9.951493263244629
    4. '=' → logprob: -11.326493263244629
    5. ' ' → logprob: -11.701493263244629
    6. ' =' → logprob: -11.701493263244629
    7. '<|end|>' → logprob: -13.451493263244629
    8. '0' → logprob: -14.076493263244629
    9. '=b' → logprob: -14.701493263244629
    10. ',b' → logprob: -15.451493263244629

Token 166: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020653652027249336
    2. '=' → logprob: -3.89565372467041
    3. ',' → logprob: -9.14565372467041
    4. ' ' → logprob: -13.64565372467041
    5. ' ,' → logprob: -13.64565372467041
    6. ' =
' → logprob: -14.64565372467041
    7. ')' → logprob: -14.64565372467041
    8. '<|end|>' → logprob: -14.77065372467041
    9. ' ' → logprob: -14.89565372467041
    10. ' =[' → logprob: -15.39565372467041

Token 167: ' x' (ID: 1215)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.458178848028183
    2. 'c' → logprob: -1.3331788778305054
    3. ' target' → logprob: -2.583178758621216
    4. 't' → logprob: -4.208178997039795
    5. ' c' → logprob: -4.833178997039795
    6. '=' → logprob: -6.083178997039795
    7. ' =' → logprob: -6.833178997039795
    8. ' t' → logprob: -7.083178997039795
    9. 'T' → logprob: -8.333178520202637
    10. 'x' → logprob: -8.583178520202637

Token 168: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10029777884483337
    2. '=' → logprob: -2.350297689437866
    3. ',' → logprob: -9.350297927856445
    4. ' ' → logprob: -14.100297927856445
    5. '<|end|>' → logprob: -14.225297927856445
    6. ' ,' → logprob: -14.725297927856445
    7. ' =
' → logprob: -14.850297927856445
    8. ')' → logprob: -15.100297927856445
    9. '=input' → logprob: -15.350297927856445
    10. ' ' → logprob: -15.600297927856445

Token 169: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.7740000486373901
    2. '1' → logprob: -1.1490000486373901
    3. '3' → logprob: -2.7740001678466797
    4. ' map' → logprob: -3.0240001678466797
    5. '5' → logprob: -3.1490001678466797
    6. ' ' → logprob: -3.5240001678466797
    7. '10' → logprob: -3.6490001678466797
    8. '2' → logprob: -5.14900016784668
    9. '4' → logprob: -5.64900016784668
    10. '0' → logprob: -7.02400016784668

Token 170: '(int' (ID: 2742)
  Prédit: '(float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(float' → logprob: -0.03826306760311127
    2. '(int' → logprob: -3.2882630825042725
    3. 'float' → logprob: -9.038263320922852
    4. '(' → logprob: -9.413263320922852
    5. '(input' → logprob: -11.788263320922852
    6. '(str' → logprob: -12.288263320922852
    7. ',float' → logprob: -12.413263320922852
    8. 'int' → logprob: -13.163263320922852
    9. '<float' → logprob: -13.913263320922852
    10. '(lambda' → logprob: -15.038263320922852

Token 171: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.11505335569381714
    2. 'input' → logprob: -2.365053415298462
    3. ',input' → logprob: -4.490053176879883
    4. ')' → logprob: -5.865053176879883
    5. '(' → logprob: -7.990053176879883
    6. ' input' → logprob: -8.740053176879883
    7. ',' → logprob: -8.990053176879883
    8. '=input' → logprob: -10.240053176879883
    9. ')(' → logprob: -11.865053176879883
    10. '[input' → logprob: -12.990053176879883

Token 172: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.008615515194833279
    2. ' input' → logprob: -4.758615493774414
    3. 'open' → logprob: -14.633615493774414
    4. ',input' → logprob: -15.633615493774414
    5. '(input' → logprob: -16.008615493774414
    6. '=input' → logprob: -16.008615493774414
    7. ')' → logprob: -16.633615493774414
    8. '```' → logprob: -17.133615493774414
    9. ' ' → logprob: -17.758615493774414
    10. '[input' → logprob: -18.383615493774414

Token 173: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0002353640884393826
    2. '()' → logprob: -8.375235557556152
    3. '())' → logprob: -13.000235557556152
    4. ' ().' → logprob: -13.000235557556152
    5. '(' → logprob: -16.250234603881836
    6. ')' → logprob: -16.875234603881836
    7. '("").' → logprob: -17.750234603881836
    8. '()
' → logprob: -18.000234603881836
    9. ' ()' → logprob: -18.125234603881836
    10. '());' → logprob: -18.375234603881836

Token 174: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0002217748697148636
    2. 'strip' → logprob: -8.500222206115723
    3. ' split' → logprob: -11.250222206115723
    4. '().' → logprob: -12.375222206115723
    5. '(split' → logprob: -14.125222206115723
    6. 'rstrip' → logprob: -15.000222206115723
    7. 'spl' → logprob: -17.000221252441406
    8. '.split' → logprob: -17.875221252441406
    9. ' strip' → logprob: -18.000221252441406
    10. ' ' → logprob: -18.125221252441406

Token 175: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.017741775140166283
    2. ')' → logprob: -4.267741680145264
    3. '()' → logprob: -5.642741680145264
    4. '(' → logprob: -11.642742156982422
    5. '()))' → logprob: -12.017742156982422
    6. '());' → logprob: -12.892742156982422
    7. ' ())' → logprob: -12.892742156982422
    8. '())
' → logprob: -13.017742156982422
    9. '))' → logprob: -13.392742156982422
    10. '();)' → logprob: -13.517742156982422

Token 176: 'calc' (ID: 49633)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0011468871962279081
    2. 'func' → logprob: -7.5011467933654785
    3. 't' → logprob: -8.751147270202637
    4. 'target' → logprob: -8.876147270202637
    5. 'calc' → logprob: -9.001147270202637
    6. ' f' → logprob: -10.126147270202637
    7. '
' → logprob: -10.626147270202637
    8. 'if' → logprob: -10.876147270202637
    9. 'def' → logprob: -11.001147270202637
    10. '<|end|>' → logprob: -11.126147270202637

Token 177: ' =' (ID: 314)
  Prédit: '_factory'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factory' → logprob: -0.3930003345012665
    2. '_' → logprob: -1.8930003643035889
    3. '=' → logprob: -2.393000364303589
    4. ' =' → logprob: -3.018000364303589
    5. '_factor' → logprob: -3.643000364303589
    6. '=_' → logprob: -6.01800012588501
    7. '_fact' → logprob: -6.51800012588501
    8. '=f' → logprob: -6.64300012588501
    9. '_=' → logprob: -7.14300012588501
    10. ' _' → logprob: -7.76800012588501

Token 178: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.020060738548636436
    2. ' calc' → logprob: -4.3950605392456055
    3. 'partial' → logprob: -4.8950605392456055
    4. ' partial' → logprob: -10.645060539245605
    5. '(calc' → logprob: -11.395060539245605
    6. 'binary' → logprob: -13.770060539245605
    7. 'cal' → logprob: -13.770060539245605
    8. 'c' → logprob: -14.770060539245605
    9. 'part' → logprob: -14.895060539245605
    10. 'math' → logprob: -15.020060539245605

Token 179: '_factory' (ID: 57891)
  Prédit: '_factory'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factory' → logprob: -1.2664456789934775e-06
    2. 'factory' → logprob: -13.750000953674316
    3. '_factor' → logprob: -16.000001907348633
    4. 'Factory' → logprob: -17.250001907348633
    5. '_FACTORY' → logprob: -18.000001907348633
    6. '_fac' → logprob: -18.375001907348633
    7. '_fact' → logprob: -18.500001907348633
    8. ' factory' → logprob: -19.875001907348633
    9. '_' → logprob: -20.000001907348633
    10. 'a' → logprob: -20.750001907348633

Token 180: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -3.464347173576243e-05
    2. 'a' → logprob: -10.50003433227539
    3. '(' → logprob: -12.25003433227539
    4. '(b' → logprob: -14.00003433227539
    5. ' (' → logprob: -14.12503433227539
    6. '(x' → logprob: -15.37503433227539
    7. 'b' → logprob: -15.75003433227539
    8. '(
' → logprob: -16.50003433227539
    9. '<|end|>' → logprob: -16.50003433227539
    10. '((' → logprob: -17.75003433227539

Token 181: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023226479243021458
    2. ',b' → logprob: -8.625232696533203
    3. ' ,' → logprob: -9.875232696533203
    4. ',
' → logprob: -14.250232696533203
    5. ')' → logprob: -15.250232696533203
    6. 'b' → logprob: -16.000232696533203
    7. ' ' → logprob: -16.875232696533203
    8. ' b' → logprob: -16.875232696533203
    9. '```' → logprob: -17.500232696533203
    10. '=' → logprob: -18.000232696533203

Token 182: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0001234428636962548
    2. ' b' → logprob: -9.000123023986816
    3. ')b' → logprob: -17.750123977661133
    4. '   ' → logprob: -18.625123977661133
    5. ')' → logprob: -19.375123977661133
    6. '	b' → logprob: -20.125123977661133
    7. ' ' → logprob: -20.500123977661133
    8. '<|end|>' → logprob: -20.625123977661133
    9. 'x' → logprob: -21.625123977661133
    10. '```' → logprob: -22.000123977661133

Token 183: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010171088390052319
    2. ')' → logprob: -4.635170936584473
    3. ',x' → logprob: -8.260170936584473
    4. ' ,' → logprob: -9.260170936584473
    5. ')
' → logprob: -10.135170936584473
    6. 'x' → logprob: -11.510170936584473
    7. ',)' → logprob: -12.260170936584473
    8. ' )' → logprob: -13.635170936584473
    9. '(x' → logprob: -13.885170936584473
    10. ')x' → logprob: -14.010170936584473

Token 184: 'result' (ID: 2521)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.053719308227300644
    2. 'angle' → logprob: -3.4287192821502686
    3. 'ans' → logprob: -4.803719520568848
    4. 'theta' → logprob: -5.053719520568848
    5. 'res' → logprob: -6.053719520568848
    6. 'print' → logprob: -6.428719520568848
    7. 'result' → logprob: -7.053719520568848
    8. 'target' → logprob: -9.178719520568848
    9. 'answer' → logprob: -9.178719520568848
    10. 'r' → logprob: -9.678719520568848

Token 185: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0059363823384046555
    2. '=' → logprob: -5.130936145782471
    3. ' ' → logprob: -12.630936622619629
    4. '_' → logprob: -13.380936622619629
    5. ')' → logprob: -13.755936622619629
    6. ' =
' → logprob: -14.380936622619629
    7. ' =)' → logprob: -14.880936622619629
    8. ' ' → logprob: -15.005936622619629
    9. ',' → logprob: -15.505936622619629
    10. 'space' → logprob: -15.880936622619629

Token 186: ' binary' (ID: 15600)
  Prédit: 'binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binary' → logprob: -0.12710626423358917
    2. ' binary' → logprob: -2.127106189727783
    3. 'b' → logprob: -8.752106666564941
    4. 'math' → logprob: -12.002106666564941
    5. '(binary' → logprob: -12.627106666564941
    6. 'round' → logprob: -12.752106666564941
    7. 'bin' → logprob: -13.377106666564941
    8. ' b' → logprob: -13.752106666564941
    9. ' math' → logprob: -13.877106666564941
    10. ' ' → logprob: -14.127106666564941

Token 187: '_search' (ID: 23642)
  Prédit: '_search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_search' → logprob: -1.9361264946837764e-07
    2. 'search' → logprob: -16.125
    3. '_' → logprob: -17.125
    4. ' _' → logprob: -17.625
    5. '_Search' → logprob: -18.5
    6. '_s' → logprob: -19.0
    7. '_find' → logprob: -19.125
    8. '_se' → logprob: -19.375
    9. '_SEARCH' → logprob: -19.375
    10. '_result' → logprob: -19.875

Token 188: '(calc' (ID: 190074)
  Prédit: '(calc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(calc' → logprob: -0.00021271906734909862
    2. '(' → logprob: -9.625212669372559
    3. '(part' → logprob: -9.625212669372559
    4. '(cal' → logprob: -9.625212669372559
    5. '(lambda' → logprob: -11.625212669372559
    6. '(c' → logprob: -13.125212669372559
    7. ' (' → logprob: -13.500212669372559
    8. 'calc' → logprob: -14.000212669372559
    9. '(func' → logprob: -14.625212669372559
    10. ' calc' → logprob: -15.125212669372559

Token 189: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006972290575504303
    2. ',x' → logprob: -5.131972312927246
    3. ' ,' → logprob: -7.131972312927246
    4. 'x' → logprob: -8.756972312927246
    5. '(x' → logprob: -9.756972312927246
    6. ' x' → logprob: -10.881972312927246
    7. ')' → logprob: -12.506972312927246
    8. '(' → logprob: -12.631972312927246
    9. ',
' → logprob: -13.506972312927246
    10. ' (' → logprob: -14.756972312927246

Token 190: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0009125363430939615
    2. ' x' → logprob: -7.000912666320801
    3. 'a' → logprob: -15.1259126663208
    4. '   ' → logprob: -15.3759126663208
    5. ')' → logprob: -16.125911712646484
    6. 'float' → logprob: -16.250911712646484
    7. '(x' → logprob: -16.375911712646484
    8. ')x' → logprob: -16.500911712646484
    9. '	x' → logprob: -16.625911712646484
    10. '
' → logprob: -17.250911712646484

Token 191: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010136376367881894
    2. ' )' → logprob: -7.62601375579834
    3. ',' → logprob: -7.75101375579834
    4. ')
' → logprob: -9.62601375579834
    5. '+' → logprob: -11.37601375579834
    6. '))' → logprob: -12.37601375579834
    7. ',)' → logprob: -13.50101375579834
    8. '/' → logprob: -13.75101375579834
    9. ' +' → logprob: -13.87601375579834
    10. '*' → logprob: -13.87601375579834

Token 192: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.848420551046729e-05
    2. ' print' → logprob: -9.7500581741333
    3. '```' → logprob: -17.000059127807617
    4. '(print' → logprob: -17.500059127807617
    5. '#print' → logprob: -18.000059127807617
    6. 'result' → logprob: -18.500059127807617
    7. '.print' → logprob: -19.000059127807617
    8. ')' → logprob: -19.000059127807617
    9. '-print' → logprob: -19.125059127807617
    10. '
' → logprob: -19.500059127807617

Token 193: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.020865222439169884
    2. '(' → logprob: -5.020865440368652
    3. '(f' → logprob: -5.145865440368652
    4. '(round' → logprob: -5.520865440368652
    5. '(math' → logprob: -5.520865440368652
    6. 'result' → logprob: -10.020865440368652
    7. '((' → logprob: -10.270865440368652
    8. '(int' → logprob: -10.395865440368652
    9. '("("' → logprob: -10.520865440368652
    10. '(float' → logprob: -11.145865440368652

Token 194: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.29340603761375e-05
    2. '+' → logprob: -9.625092506408691
    3. ' )' → logprob: -10.875092506408691
    4. ' +' → logprob: -13.125092506408691
    5. '))' → logprob: -13.375092506408691
    6. '*' → logprob: -13.500092506408691
    7. ')
' → logprob: -14.500092506408691
    8. '()' → logprob: -14.625092506408691
    9. ',' → logprob: -14.875092506408691
    10. '+)' → logprob: -14.875092506408691


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 192
Tokens correctement prédits (1ère position, stricte): 79
Tokens correctement prédits (1ère position, avec adaptation): 82
Tokens correctement prédits (top 10): 163
Précision stricte (1ère position): 41.15%
Précision adaptée (1ère position): 42.71%
Précision (top 10): 84.90%
================================================================================
