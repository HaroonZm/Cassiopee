================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:51:06
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import mul
import sys

*[lambda x: sys.stdout.write(f"{reduce(mul, [int(x), int(x)], 1)*3}\n")],eval("input()")][0][0]([*(lambda a: (a,))[0](eval("input()")))]
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.6123510599136353
    2. 'wrap' → logprob: -0.8623510599136353
    3. 'reduce' → logprob: -3.4873509407043457
    4. 'l' → logprob: -6.112350940704346
    5. ' wraps' → logprob: -6.362350940704346
    6. 'cached' → logprob: -7.612350940704346
    7. 'cache' → logprob: -7.987350940704346
    8. 'cmp' → logprob: -9.112351417541504
    9. '```' → logprob: -9.237351417541504
    10. ' partial' → logprob: -9.487351417541504

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.026433013379573822
    2. 'def' → logprob: -4.651432991027832
    3. ' ' → logprob: -5.526432991027832
    4. ',' → logprob: -5.776432991027832
    5. '\' → logprob: -6.276432991027832
    6. '(lambda' → logprob: -6.526432991027832
    7. 'a' → logprob: -6.526432991027832
    8. ' (' → logprob: -6.901432991027832
    9. '_' → logprob: -7.276432991027832
    10. '(
' → logprob: -7.901432991027832

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.028644466772675514
    2. '\' → logprob: -4.153644561767578
    3. 'def' → logprob: -5.028644561767578
    4. '(
' → logprob: -6.028644561767578
    5. '(lambda' → logprob: -6.653644561767578
    6. ',' → logprob: -7.653644561767578
    7. '\n' → logprob: -7.778644561767578
    8. '```' → logprob: -7.903644561767578
    9. '\(' → logprob: -8.403644561767578
    10. '`' → logprob: -9.278644561767578

Token 6: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.8141523599624634
    2. ' math' → logprob: -0.9391523599624634
    3. 'operator' → logprob: -2.814152240753174
    4. ' itertools' → logprob: -2.814152240753174
    5. 'math' → logprob: -3.689152240753174
    6. ' collections' → logprob: -4.064152240753174
    7. 'collections' → logprob: -6.064152240753174
    8. ' os' → logprob: -6.814152240753174
    9. 'os' → logprob: -8.439152717590332
    10. 'it' → logprob: -9.439152717590332

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.022899029776453972
    2. 'import' → logprob: -3.8978989124298096
    3. ' ' → logprob: -6.397899150848389
    4. '.' → logprob: -7.522899150848389
    5. ' .' → logprob: -9.14789867401123
    6. '.import' → logprob: -10.64789867401123
    7. '	import' → logprob: -11.77289867401123
    8. '<|end|>' → logprob: -13.02289867401123
    9. '_import' → logprob: -13.39789867401123
    10. ' ' → logprob: -13.52289867401123

Token 8: ' mul' (ID: 9975)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.31903505325317383
    2. ' import' → logprob: -1.9440350532531738
    3. 'add' → logprob: -2.444035053253174
    4. ' ' → logprob: -4.069035053253174
    5. ' mul' → logprob: -4.194035053253174
    6. 'import' → logprob: -4.819035053253174
    7. 'mul' → logprob: -6.194035053253174
    8. ' item' → logprob: -8.694034576416016
    9. 'item' → logprob: -9.569034576416016
    10. ' ad' → logprob: -9.819034576416016

Token 9: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13796253502368927
    2. '*' → logprob: -2.762962579727173
    3. '\' → logprob: -3.512962579727173
    4. '\n' → logprob: -4.512962341308594
    5. '(
' → logprob: -4.762962341308594
    6. ',' → logprob: -5.137962341308594
    7. '`' → logprob: -6.012962341308594
    8. '#' → logprob: -6.512962341308594
    9. 'a' → logprob: -6.637962341308594
    10. '\(' → logprob: -6.762962341308594

Token 10: 'import' (ID: 561)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.27587926387786865
    2. '
' → logprob: -3.150879383087158
    3. '(' → logprob: -3.400879383087158
    4. 'a' → logprob: -3.525879383087158
    5. '(
' → logprob: -3.525879383087158
    6. '

' → logprob: -3.650879383087158
    7. '\' → logprob: -3.775879383087158
    8. 'd' → logprob: -4.650879383087158
    9. '\n' → logprob: -4.650879383087158
    10. '#' → logprob: -4.900879383087158

Token 11: ' sys' (ID: 12228)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.14807452261447906
    2. ' itertools' → logprob: -2.0230746269226074
    3. ' numpy' → logprob: -5.773074626922607
    4. ' functools' → logprob: -6.648074626922607
    5. ' os' → logprob: -7.273074626922607
    6. ' random' → logprob: -9.27307415008545
    7. ' operator' → logprob: -9.27307415008545
    8. ' collections' → logprob: -10.52307415008545
    9. ' sys' → logprob: -10.77307415008545
    10. 'math' → logprob: -11.14807415008545

Token 12: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.197440266609192
    2. '\' → logprob: -1.447440266609192
    3. 'def' → logprob: -1.697440266609192
    4. '\n' → logprob: -2.0724401473999023
    5. ',' → logprob: -2.6974401473999023
    6. '(' → logprob: -4.322440147399902
    7. '[' → logprob: -4.447440147399902
    8. '```' → logprob: -4.447440147399902
    9. '#' → logprob: -5.072440147399902
    10. '(
' → logprob: -5.572440147399902

Token 13: '*[' (ID: 126471)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09567433595657349
    2. 'data' → logprob: -3.9706742763519287
    3. 'n' → logprob: -4.470674514770508
    4. '```' → logprob: -4.595674514770508
    5. 'sys' → logprob: -4.970674514770508
    6. ',' → logprob: -5.095674514770508
    7. '`' → logprob: -5.095674514770508
    8. '.' → logprob: -5.470674514770508
    9. '[' → logprob: -5.595674514770508
    10. '\' → logprob: -5.595674514770508

Token 14: 'lambda' (ID: 35280)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4059058129787445
    2. 'sys' → logprob: -1.905905842781067
    3. 'n' → logprob: -2.6559057235717773
    4. 'int' → logprob: -3.4059057235717773
    5. 'i' → logprob: -3.9059057235717773
    6. 'map' → logprob: -4.530905723571777
    7. 'line' → logprob: -4.530905723571777
    8. 'print' → logprob: -4.780905723571777
    9. '*' → logprob: -5.405905723571777
    10. 'range' → logprob: -5.655905723571777

Token 15: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3629375994205475
    2. 'x' → logprob: -1.612937569618225
    3. ' n' → logprob: -2.6129376888275146
    4. 'n' → logprob: -5.3629374504089355
    5. 's' → logprob: -5.3629374504089355
    6. ' ' → logprob: -5.3629374504089355
    7. ' (' → logprob: -5.6129374504089355
    8. ' factorial' → logprob: -5.6129374504089355
    9. ' s' → logprob: -6.6129374504089355
    10. ' ,' → logprob: -6.7379374504089355

Token 16: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.30622318387031555
    2. ' :' → logprob: -1.5562231540679932
    3. ',' → logprob: -3.181223154067993
    4. ' ,' → logprob: -5.806223392486572
    5. ':x' → logprob: -5.806223392486572
    6. ' for' → logprob: -6.056223392486572
    7. ' x' → logprob: -7.181223392486572
    8. '**' → logprob: -7.556223392486572
    9. ',x' → logprob: -7.806223392486572
    10. ',:' → logprob: -8.806222915649414

Token 17: ' sys' (ID: 12228)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8887332081794739
    2. ' x' → logprob: -0.8887332081794739
    3. 'reduce' → logprob: -2.388733148574829
    4. ' reduce' → logprob: -2.763733148574829
    5. 'pow' → logprob: -5.388733386993408
    6. 'mul' → logprob: -6.013733386993408
    7. ' (' → logprob: -6.138733386993408
    8. ' sys' → logprob: -6.263733386993408
    9. 'int' → logprob: -6.388733386993408
    10. ' mul' → logprob: -6.388733386993408

Token 18: '.stdout' (ID: 59462)
  Prédit: '.exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -0.2380375862121582
    2. '.argv' → logprob: -2.613037586212158
    3. '.stdout' → logprob: -3.238037586212158
    4. '.' → logprob: -3.363037586212158
    5. '.path' → logprob: -3.738037586212158
    6. '.version' → logprob: -4.613037586212158
    7. '.stdin' → logprob: -4.613037586212158
    8. '.stderr' → logprob: -4.988037586212158
    9. '.get' → logprob: -5.488037586212158
    10. '.ex' → logprob: -5.488037586212158

Token 19: '.write' (ID: 6765)
  Prédit: '.write'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.write' → logprob: -0.0007800845778547227
    2. '.' → logprob: -7.25078010559082
    3. 'write' → logprob: -9.87578010559082
    4. '.w' → logprob: -11.75078010559082
    5. ' .' → logprob: -12.00078010559082
    6. ' write' → logprob: -14.00078010559082
    7. '.flush' → logprob: -14.25078010559082
    8. '.Write' → logprob: -14.75078010559082
    9. 'Write' → logprob: -14.87578010559082
    10. '_write' → logprob: -15.00078010559082

Token 20: '(f' (ID: 1526)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22387391328811646
    2. '(str' → logprob: -1.7238738536834717
    3. '('' → logprob: -4.223874092102051
    4. '(x' → logprob: -5.723874092102051
    5. '("("' → logprob: -5.848874092102051
    6. '(f' → logprob: -7.973874092102051
    7. '("' → logprob: -8.22387409210205
    8. '(chr' → logprob: -8.34887409210205
    9. '(*' → logprob: -9.22387409210205
    10. '('*' → logprob: -9.22387409210205

Token 21: '"{' (ID: 27510)
  Prédit: '"{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -0.08823218196630478
    2. ''{' → logprob: -2.5882322788238525
    3. '"' → logprob: -5.338232040405273
    4. '"*' → logprob: -6.463232040405273
    5. ''' → logprob: -6.713232040405273
    6. '{' → logprob: -7.338232040405273
    7. ''*' → logprob: -7.713232040405273
    8. 'str' → logprob: -8.338232040405273
    9. '"x' → logprob: -8.838232040405273
    10. '"%' → logprob: -10.713232040405273

Token 22: 'reduce' (ID: 49119)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.012362249195575714
    2. 'reduce' → logprob: -5.012362480163574
    3. ' x' → logprob: -6.387362480163574
    4. 'int' → logprob: -7.137362480163574
    5. 'pow' → logprob: -7.137362480163574
    6. 'len' → logprob: -7.887362480163574
    7. 'n' → logprob: -8.012362480163574
    8. 'mul' → logprob: -8.512362480163574
    9. 'i' → logprob: -8.637362480163574
    10. 'str' → logprob: -9.012362480163574

Token 23: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.5239395499229431
    2. '(' → logprob: -0.8989395499229431
    3. '(lambda' → logprob: -7.398939609527588
    4. '(mult' → logprob: -9.77393913269043
    5. '(operator' → logprob: -10.39893913269043
    6. ' (' → logprob: -10.64893913269043
    7. '(
' → logprob: -11.14893913269043
    8. '*' → logprob: -11.27393913269043
    9. '(*' → logprob: -11.27393913269043
    10. '(mu' → logprob: -11.39893913269043

Token 24: 'ul' (ID: 361)
  Prédit: 'ul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ul' → logprob: -1.1472419600977446e-06
    2. '<ul' → logprob: -14.375000953674316
    3. 'ult' → logprob: -15.250000953674316
    4. 'u' → logprob: -15.875000953674316
    5. ' ul' → logprob: -16.125001907348633
    6. 'mul' → logprob: -17.500001907348633
    7. '-ul' → logprob: -18.250001907348633
    8. 'l' → logprob: -18.500001907348633
    9. 'ultiply' → logprob: -18.500001907348633
    10. '*' → logprob: -18.500001907348633

Token 25: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004959543235599995
    2. ',x' → logprob: -5.879959583282471
    3. ' ,' → logprob: -6.754959583282471
    4. '(' → logprob: -8.379959106445312
    5. '*,' → logprob: -8.504959106445312
    6. ',[' → logprob: -8.754959106445312
    7. ',(' → logprob: -9.129959106445312
    8. '(x' → logprob: -9.504959106445312
    9. ',*' → logprob: -9.504959106445312
    10. ')' → logprob: -11.254959106445312

Token 26: ' [' (ID: 723)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4322378635406494
    2. ' x' → logprob: -1.0572378635406494
    3. '(x' → logprob: -6.68223762512207
    4. '[' → logprob: -7.30723762512207
    5. ' [' → logprob: -7.68223762512207
    6. ' (' → logprob: -8.68223762512207
    7. '[x' → logprob: -8.68223762512207
    8. ' ' → logprob: -8.80723762512207
    9. '(' → logprob: -9.18223762512207
    10. 'range' → logprob: -9.18223762512207

Token 27: 'int' (ID: 491)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.43382352590560913
    2. 'i' → logprob: -1.433823585510254
    3. 'str' → logprob: -3.308823585510254
    4. 'int' → logprob: -3.808823585510254
    5. ' x' → logprob: -3.808823585510254
    6. ' i' → logprob: -4.808823585510254
    7. '*' → logprob: -4.933823585510254
    8. 'n' → logprob: -5.558823585510254
    9. 'range' → logprob: -6.183823585510254
    10. ' str' → logprob: -6.308823585510254

Token 28: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.8017292022705078
    2. '(' → logprob: -1.4267292022705078
    3. '(i' → logprob: -1.4267292022705078
    4. '(char' → logprob: -4.301729202270508
    5. '(n' → logprob: -4.426729202270508
    6. '(a' → logprob: -4.551729202270508
    7. '(d' → logprob: -4.676729202270508
    8. '(c' → logprob: -4.676729202270508
    9. '(s' → logprob: -4.801729202270508
    10. '(num' → logprob: -6.301729202270508

Token 29: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.645456075668335
    2. ')])' → logprob: -1.770456075668335
    3. ')]' → logprob: -2.020456075668335
    4. '[i' → logprob: -3.145456075668335
    5. ')],' → logprob: -3.270456075668335
    6. '),' → logprob: -3.520456075668335
    7. ' for' → logprob: -4.145456314086914
    8. 'i' → logprob: -4.395456314086914
    9. '**' → logprob: -5.395456314086914
    10. ']' → logprob: -5.520456314086914

Token 30: ' int' (ID: 677)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.3892536163330078
    2. ' i' → logprob: -1.7642536163330078
    3. ' ' → logprob: -2.264253616333008
    4. '1' → logprob: -2.264253616333008
    5. 'int' → logprob: -2.389253616333008
    6. ' int' → logprob: -2.764253616333008
    7. 'x' → logprob: -2.889253616333008
    8. ' x' → logprob: -2.889253616333008
    9. '2' → logprob: -3.389253616333008
    10. ' y' → logprob: -3.514253616333008

Token 31: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.06007147580385208
    2. '(' → logprob: -3.6850714683532715
    3. '(y' → logprob: -3.9350714683532715
    4. '(i' → logprob: -5.5600714683532715
    5. '(a' → logprob: -5.5600714683532715
    6. '(s' → logprob: -5.9350714683532715
    7. '('' → logprob: -7.5600714683532715
    8. '(k' → logprob: -8.18507194519043
    9. '('*' → logprob: -8.43507194519043
    10. '(sys' → logprob: -8.68507194519043

Token 32: ')],' (ID: 60559)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.07057683169841766
    2. ')]' → logprob: -3.3205769062042236
    3. '])' → logprob: -4.4455766677856445
    4. ')],' → logprob: -4.9455766677856445
    5. '),' → logprob: -5.1955766677856445
    6. ')' → logprob: -5.3205766677856445
    7. '**' → logprob: -7.0705766677856445
    8. '],' → logprob: -7.8205766677856445
    9. '])]' → logprob: -8.320576667785645
    10. ' )' → logprob: -8.445576667785645

Token 33: ' ' (ID: 220)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.2661075592041016
    2. ')' → logprob: -1.3911075592041016
    3. 'x' → logprob: -2.1411075592041016
    4. ' ' → logprob: -2.1411075592041016
    5. ' )' → logprob: -2.7661075592041016
    6. '1' → logprob: -3.6411075592041016
    7. '")' → logprob: -3.8911075592041016
    8. '"' → logprob: -4.016107559204102
    9. ''' → logprob: -4.266107559204102
    10. '2' → logprob: -4.266107559204102

Token 34: '1' (ID: 16)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.12335394322872162
    2. ')' → logprob: -3.123353958129883
    3. 'int' → logprob: -3.123353958129883
    4. ' x' → logprob: -4.623353958129883
    5. '),' → logprob: -4.873353958129883
    6. '2' → logprob: -6.248353958129883
    7. ' int' → logprob: -6.748353958129883
    8. '')' → logprob: -7.123353958129883
    9. '")' → logprob: -7.123353958129883
    10. ' ' → logprob: -7.373353958129883

Token 35: ')*' (ID: 11043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.050476402044296265
    2. '))' → logprob: -4.050476551055908
    3. ')}' → logprob: -4.050476551055908
    4. ')**' → logprob: -5.925476551055908
    5. '**' → logprob: -6.050476551055908
    6. ' )' → logprob: -6.050476551055908
    7. '),' → logprob: -6.550476551055908
    8. ')])' → logprob: -6.550476551055908
    9. ',' → logprob: -7.050476551055908
    10. ')}}' → logprob: -7.175476551055908

Token 36: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0571982860565186
    2. ' x' → logprob: -1.8071982860565186
    3. 'x' → logprob: -2.1821982860565186
    4. '"' → logprob: -2.3071982860565186
    5. ' ' → logprob: -2.3071982860565186
    6. ''' → logprob: -2.8071982860565186
    7. '(x' → logprob: -4.182198524475098
    8. '"\' → logprob: -4.307198524475098
    9. '"x' → logprob: -4.682198524475098
    10. ' )' → logprob: -4.807198524475098

Token 37: '}\' (ID: 21170)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.43730428814888
    2. ')}' → logprob: -1.5623042583465576
    3. '}' → logprob: -2.5623042583465576
    4. '})' → logprob: -4.187304496765137
    5. '**' → logprob: -4.437304496765137
    6. '}")' → logprob: -4.687304496765137
    7. '))' → logprob: -5.187304496765137
    8. '}\' → logprob: -5.312304496765137
    9. '(x' → logprob: -5.812304496765137
    10. ')**' → logprob: -6.312304496765137

Token 38: 'n' (ID: 77)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.558048665523529
    2. ')")' → logprob: -1.3080487251281738
    3. '\n' → logprob: -2.683048725128174
    4. '")' → logprob: -3.183048725128174
    5. ')\' → logprob: -3.308048725128174
    6. '*' → logprob: -5.808048725128174
    7. '),' → logprob: -6.808048725128174
    8. '(' → logprob: -6.933048725128174
    9. '*\' → logprob: -7.058048725128174
    10. ')
' → logprob: -7.808048725128174

Token 39: '")' (ID: 1405)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.515596330165863
    2. ')]' → logprob: -1.7655963897705078
    3. ']' → logprob: -2.015596389770508
    4. ')])' → logprob: -3.015596389770508
    5. '),' → logprob: -4.015596389770508
    6. '")' → logprob: -5.265596389770508
    7. '])' → logprob: -5.515596389770508
    8. ')")' → logprob: -5.640596389770508
    9. ')],' → logprob: -5.765596389770508
    10. '*' → logprob: -5.890596389770508

Token 40: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05675891041755676
    2. '(' → logprob: -4.181758880615234
    3. ')]' → logprob: -4.681758880615234
    4. ')' → logprob: -4.931758880615234
    5. ']*' → logprob: -5.306758880615234
    6. ',' → logprob: -5.306758880615234
    7. ' for' → logprob: -5.681758880615234
    8. '()]' → logprob: -6.056758880615234
    9. '](' → logprob: -6.681758880615234
    10. ']()' → logprob: -6.681758880615234

Token 41: 'eval' (ID: 37679)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11724007874727249
    2. ')' → logprob: -3.1172401905059814
    3. '<|end|>' → logprob: -3.1172401905059814
    4. '*' → logprob: -5.117239952087402
    5. '[' → logprob: -5.117239952087402
    6. ' ' → logprob: -5.617239952087402
    7. ',' → logprob: -5.867239952087402
    8. ' (' → logprob: -6.867239952087402
    9. ']' → logprob: -7.367239952087402
    10. '(
' → logprob: -7.867239952087402

Token 42: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00443652831017971
    2. ' (' → logprob: -6.379436492919922
    3. '(
' → logprob: -7.254436492919922
    4. ' ' → logprob: -7.754436492919922
    5. '[' → logprob: -8.379436492919922
    6. ')' → logprob: -8.379436492919922
    7. '(*' → logprob: -9.004436492919922
    8. '*' → logprob: -9.004436492919922
    9. ',' → logprob: -9.254436492919922
    10. '<|end|>' → logprob: -9.254436492919922

Token 43: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.32436367869377136
    2. 'x' → logprob: -2.8243637084960938
    3. 'lambda' → logprob: -3.0743637084960938
    4. ''' → logprob: -3.1993637084960938
    5. '"' → logprob: -3.6993637084960938
    6. '(input' → logprob: -4.074363708496094
    7. '(lambda' → logprob: -4.449363708496094
    8. '(' → logprob: -4.449363708496094
    9. '__' → logprob: -5.074363708496094
    10. '*' → logprob: -5.199363708496094

Token 44: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.679452121257782
    2. ')' → logprob: -1.5544521808624268
    3. '())' → logprob: -2.3044521808624268
    4. '(' → logprob: -2.9294521808624268
    5. '")' → logprob: -3.0544521808624268
    6. '("' → logprob: -3.1794521808624268
    7. ')")' → logprob: -3.6794521808624268
    8. ')("' → logprob: -4.804451942443848
    9. '("")' → logprob: -6.429451942443848
    10. '(""))' → logprob: -7.304451942443848

Token 45: '")' (ID: 1405)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22048063576221466
    2. ')")' → logprob: -1.7204806804656982
    3. '))' → logprob: -4.595480442047119
    4. '")' → logprob: -5.595480442047119
    5. '())' → logprob: -5.720480442047119
    6. '()' → logprob: -7.095480442047119
    7. ')))' → logprob: -7.970480442047119
    8. ')**' → logprob: -9.220480918884277
    9. ' )' → logprob: -9.720480918884277
    10. '[' → logprob: -9.845480918884277

Token 46: '][' (ID: 2696)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3490012586116791
    2. ')' → logprob: -1.9740012884140015
    3. '[' → logprob: -1.9740012884140015
    4. '<|end|>' → logprob: -4.724001407623291
    5. ' ' → logprob: -5.349001407623291
    6. '(
' → logprob: -7.349001407623291
    7. '*' → logprob: -7.724001407623291
    8. ',' → logprob: -8.349000930786133
    9. ' (' → logprob: -8.974000930786133
    10. '#' → logprob: -8.974000930786133

Token 47: '0' (ID: 15)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5330755114555359
    2. '[' → logprob: -1.0330755710601807
    3. '0' → logprob: -3.6580755710601807
    4. ')' → logprob: -3.7830755710601807
    5. '([' → logprob: -6.158075332641602
    6. ']' → logprob: -6.658075332641602
    7. '<|end|>' → logprob: -6.908075332641602
    8. '(
' → logprob: -7.408075332641602
    9. ' ' → logprob: -7.408075332641602
    10. ')]' → logprob: -8.658075332641602

Token 48: '][' (ID: 2696)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001684228191152215
    2. ')' → logprob: -6.876684188842773
    3. '(
' → logprob: -8.626684188842773
    4. ']' → logprob: -9.376684188842773
    5. ' (' → logprob: -9.376684188842773
    6. '<|end|>' → logprob: -9.376684188842773
    7. '[' → logprob: -9.501684188842773
    8. ' ' → logprob: -10.001684188842773
    9. ',' → logprob: -10.626684188842773
    10. '(

' → logprob: -11.001684188842773

Token 49: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0536472350358963
    2. '(' → logprob: -3.55364727973938
    3. ')' → logprob: -4.803647041320801
    4. ' ' → logprob: -5.928647041320801
    5. ']' → logprob: -6.178647041320801
    6. '1' → logprob: -6.178647041320801
    7. ''' → logprob: -6.803647041320801
    8. ')]' → logprob: -7.053647041320801
    9. '40' → logprob: -7.053647041320801
    10. ')(' → logprob: -7.428647041320801

Token 50: ']' (ID: 60)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03838169202208519
    2. ')' → logprob: -3.288381576538086
    3. '(
' → logprob: -9.538381576538086
    4. ')(' → logprob: -9.663381576538086
    5. ' (' → logprob: -9.788381576538086
    6. ',' → logprob: -10.288381576538086
    7. ']' → logprob: -10.538381576538086
    8. '(x' → logprob: -11.163381576538086
    9. '(

' → logprob: -11.163381576538086
    10. ' )' → logprob: -11.288381576538086

Token 51: '([' (ID: 5194)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01884249597787857
    2. '[' → logprob: -4.393842697143555
    3. ')' → logprob: -5.518842697143555
    4. ' ' → logprob: -7.393842697143555
    5. ',' → logprob: -7.643842697143555
    6. ']' → logprob: -7.768842697143555
    7. '(
' → logprob: -8.143842697143555
    8. ' (' → logprob: -8.393842697143555
    9. '*' → logprob: -10.018842697143555
    10. '.' → logprob: -10.518842697143555

Token 52: '*(' (ID: 14793)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0372925996780396
    2. 'input' → logprob: -1.2872925996780396
    3. ')' → logprob: -1.5372925996780396
    4. ''' → logprob: -3.53729248046875
    5. '1' → logprob: -3.66229248046875
    6. ')])' → logprob: -4.03729248046875
    7. ' ' → logprob: -4.41229248046875
    8. '')' → logprob: -4.66229248046875
    9. ' input' → logprob: -4.66229248046875
    10. ')]' → logprob: -5.53729248046875

Token 53: 'lambda' (ID: 35280)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16863800585269928
    2. ')' → logprob: -2.418637990951538
    3. ''' → logprob: -3.918637990951538
    4. '"' → logprob: -4.418638229370117
    5. ''s' → logprob: -4.668638229370117
    6. 'sys' → logprob: -5.793638229370117
    7. '<|end|>' → logprob: -5.793638229370117
    8. ' input' → logprob: -6.043638229370117
    9. 'eval' → logprob: -6.793638229370117
    10. '(input' → logprob: -6.793638229370117

Token 54: ' a' (ID: 261)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.40696296095848083
    2. ' x' → logprob: -1.1569629907608032
    3. 'lambda' → logprob: -5.656962871551514
    4. 'y' → logprob: -5.781962871551514
    5. ' y' → logprob: -6.531962871551514
    6. 's' → logprob: -6.531962871551514
    7. 'a' → logprob: -6.656962871551514
    8. 'int' → logprob: -6.656962871551514
    9. ' lambda' → logprob: -6.656962871551514
    10. 'n' → logprob: -6.781962871551514

Token 55: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1461128145456314
    2. 'a' → logprob: -3.2711129188537598
    3. ' :' → logprob: -3.2711129188537598
    4. ',' → logprob: -3.3961129188537598
    5. ',a' → logprob: -4.27111291885376
    6. ':a' → logprob: -5.89611291885376
    7. ' a' → logprob: -6.14611291885376
    8. ':int' → logprob: -6.89611291885376
    9. '<|end|>' → logprob: -7.02111291885376
    10. ',b' → logprob: -7.27111291885376

Token 56: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.2186604738235474
    2. '[int' → logprob: -1.7186604738235474
    3. '[a' → logprob: -2.343660354614258
    4. 'range' → logprob: -2.468660354614258
    5. 'lambda' → logprob: -2.718660354614258
    6. 'int' → logprob: -2.968660354614258
    7. 'input' → logprob: -3.468660354614258
    8. 'sys' → logprob: -3.468660354614258
    9. 'x' → logprob: -3.468660354614258
    10. '[' → logprob: -3.718660354614258

Token 57: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3327186703681946
    2. 'int' → logprob: -2.70771861076355
    3. 'map' → logprob: -3.45771861076355
    4. 'str' → logprob: -3.58271861076355
    5. 'sys' → logprob: -3.70771861076355
    6. 'x' → logprob: -3.70771861076355
    7. '[int' → logprob: -3.70771861076355
    8. 'input' → logprob: -3.95771861076355
    9. 'range' → logprob: -4.082718849182129
    10. '[a' → logprob: -4.707718849182129

Token 58: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.40508008003234863
    2. '.split' → logprob: -2.5300800800323486
    3. '))' → logprob: -3.1550800800323486
    4. '[' → logprob: -3.5300800800323486
    5. '))(' → logprob: -3.6550800800323486
    6. ',a' → logprob: -3.7800800800323486
    7. '),' → logprob: -4.1550798416137695
    8. '*' → logprob: -4.2800798416137695
    9. ')' → logprob: -4.4050798416137695
    10. '+' → logprob: -4.4050798416137695

Token 59: '))[' (ID: 101036)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.39768800139427185
    2. ')' → logprob: -2.5226879119873047
    3. 'int' → logprob: -2.6476879119873047
    4. '))' → logprob: -2.8976879119873047
    5. ')))' → logprob: -3.2726879119873047
    6. '[int' → logprob: -4.147687911987305
    7. 'input' → logprob: -4.522687911987305
    8. ' a' → logprob: -4.772687911987305
    9. '0' → logprob: -4.897687911987305
    10. ')a' → logprob: -5.522687911987305

Token 60: '0' (ID: 15)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07222463935613632
    2. ' input' → logprob: -4.0722246170043945
    3. '0' → logprob: -4.1972246170043945
    4. 'int' → logprob: -4.4472246170043945
    5. '(input' → logprob: -5.3222246170043945
    6. 'eval' → logprob: -5.4472246170043945
    7. ')' → logprob: -5.8222246170043945
    8. '1' → logprob: -6.6972246170043945
    9. 'sys' → logprob: -6.6972246170043945
    10. '"' → logprob: -6.8222246170043945

Token 61: '](' (ID: 20614)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.7228167653083801
    2. '])' → logprob: -0.9728167653083801
    3. ')]' → logprob: -3.5978167057037354
    4. ')' → logprob: -3.7228167057037354
    5. '0' → logprob: -3.9728167057037354
    6. ']' → logprob: -4.2228169441223145
    7. '(' → logprob: -4.8478169441223145
    8. ']))' → logprob: -4.9728169441223145
    9. '])(' → logprob: -5.5978169441223145
    10. '])]' → logprob: -5.7228169441223145

Token 62: 'eval' (ID: 37679)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.42073893547058105
    2. ')' → logprob: -1.420738935470581
    3. ')))' → logprob: -3.545738935470581
    4. '(input' → logprob: -4.42073917388916
    5. '<|end|>' → logprob: -4.42073917388916
    6. '))' → logprob: -4.54573917388916
    7. '0' → logprob: -5.42073917388916
    8. ' input' → logprob: -5.67073917388916
    9. '1' → logprob: -5.67073917388916
    10. ''' → logprob: -5.92073917388916

Token 63: '("' (ID: 568)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.4750290811061859
    2. '('' → logprob: -1.7250291109085083
    3. '(' → logprob: -2.2250289916992188
    4. '("("' → logprob: -3.2250289916992188
    5. '("' → logprob: -3.9750289916992188
    6. 'input' → logprob: -4.850028991699219
    7. ')' → logprob: -5.100028991699219
    8. '(""))' → logprob: -5.725028991699219
    9. '("(' → logprob: -6.350028991699219
    10. '")' → logprob: -6.475028991699219

Token 64: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.007282526697963476
    2. '"' → logprob: -6.632282733917236
    3. '1' → logprob: -6.632282733917236
    4. '(input' → logprob: -6.882282733917236
    5. ' input' → logprob: -7.132282733917236
    6. ')' → logprob: -7.507282733917236
    7. ''' → logprob: -7.882282733917236
    8. ')))' → logprob: -8.007282257080078
    9. 'int' → logprob: -8.382282257080078
    10. '0' → logprob: -8.757282257080078

Token 65: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04098580777645111
    2. '()))' → logprob: -3.5409858226776123
    3. '())' → logprob: -4.790985584259033
    4. '())))' → logprob: -6.165985584259033
    5. '()"' → logprob: -8.415986061096191
    6. '"))' → logprob: -8.790986061096191
    7. ')' → logprob: -8.915986061096191
    8. '()))
' → logprob: -9.915986061096191
    9. '())))
' → logprob: -10.165986061096191
    10. '))' → logprob: -10.790986061096191

Token 66: '"))' (ID: 5063)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8768980503082275
    2. '"))' → logprob: -1.6268980503082275
    3. '))' → logprob: -1.7518980503082275
    4. ')))' → logprob: -2.1268980503082275
    5. '")))' → logprob: -2.8768980503082275
    6. '")' → logprob: -4.001897811889648
    7. ')")' → logprob: -4.126897811889648
    8. '))))' → logprob: -6.251897811889648
    9. ' "))' → logprob: -7.876897811889648
    10. ')"' → logprob: -8.251897811889648

Token 67: ')]' (ID: 15710)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013099048286676407
    2. ')])' → logprob: -4.638099193572998
    3. '])' → logprob: -6.513099193572998
    4. ' )' → logprob: -7.638099193572998
    5. '))' → logprob: -7.888099193572998
    6. ')]' → logprob: -8.51309871673584
    7. ']' → logprob: -9.01309871673584
    8. ')))' → logprob: -9.01309871673584
    9. ')
' → logprob: -9.13809871673584
    10. '[' → logprob: -9.51309871673584


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 65
Tokens correctement prédits (1ère position, stricte): 19
Tokens correctement prédits (1ère position, avec adaptation): 19
Tokens correctement prédits (top 10): 40
Précision stricte (1ère position): 29.23%
Précision adaptée (1ère position): 29.23%
Précision (top 10): 61.54%
================================================================================
