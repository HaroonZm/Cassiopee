================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:46:19
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math

a, b = map(int, input().split())
print(1 + math.ceil((b - a) / (a - 1)))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'a' (ID: 64)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00013834332639817148
    2. 'import' → logprob: -10.250138282775879
    3. '```' → logprob: -10.250138282775879
    4. '\' → logprob: -11.125138282775879
    5. '.pi' → logprob: -11.875138282775879
    6. '\n' → logprob: -12.125138282775879
    7. '.e' → logprob: -12.250138282775879
    8. '.import' → logprob: -12.500138282775879
    9. '.
' → logprob: -12.625138282775879
    10. '<|end|>' → logprob: -12.750138282775879

Token 4: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.14025276899337769
    2. '=' → logprob: -2.8902528285980225
    3. '+' → logprob: -3.3902528285980225
    4. '[' → logprob: -4.015252590179443
    5. 'd' → logprob: -5.140252590179443
    6. '*' → logprob: -5.265252590179443
    7. '_' → logprob: -5.765252590179443
    8. ')' → logprob: -6.140252590179443
    9. ' ' → logprob: -6.265252590179443
    10. ',' → logprob: -6.515252590179443

Token 5: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.38710257411003113
    2. 'b' → logprob: -1.1371026039123535
    3. ' ' → logprob: -8.387102127075195
    4. '_b' → logprob: -14.012102127075195
    5. 'space' → logprob: -14.137102127075195
    6. ' =' → logprob: -14.512102127075195
    7. '_' → logprob: -14.637102127075195
    8. 's' → logprob: -16.012102127075195
    9. '<|end|>' → logprob: -16.012102127075195
    10. ' ,' → logprob: -16.137102127075195

Token 6: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12259747833013535
    2. '=' → logprob: -2.2475974559783936
    3. ',' → logprob: -4.872597694396973
    4. ' ' → logprob: -6.872597694396973
    5. ' ,' → logprob: -7.247597694396973
    6. ')' → logprob: -8.872597694396973
    7. '<|end|>' → logprob: -9.122597694396973
    8. '  ' → logprob: -10.872597694396973
    9. ' =
' → logprob: -11.247597694396973
    10. '[' → logprob: -11.872597694396973

Token 7: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.050875626504421234
    2. '0' → logprob: -3.550875663757324
    3. ' math' → logprob: -4.425875663757324
    4. '1' → logprob: -5.425875663757324
    5. '5' → logprob: -6.425875663757324
    6. 'math' → logprob: -6.675875663757324
    7. ' map' → logprob: -7.175875663757324
    8. '10' → logprob: -7.800875663757324
    9. '3' → logprob: -8.425875663757324
    10. 'map' → logprob: -8.925875663757324

Token 8: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22819450497627258
    2. '<|end|>' → logprob: -1.8531944751739502
    3. '```' → logprob: -4.603194713592529
    4. '(lambda' → logprob: -4.853194713592529
    5. '(int' → logprob: -4.978194713592529
    6. '<|end|>' → logprob: -5.103194713592529
    7. '(user' → logprob: -5.853194713592529
    8. '(token' → logprob: -5.978194713592529
    9. '(range' → logprob: -6.728194713592529
    10. 'user' → logprob: -6.978194713592529

Token 9: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.40346208214759827
    2. '(input' → logprob: -1.4034620523452759
    3. '(' → logprob: -2.6534621715545654
    4. '`)' → logprob: -5.653461933135986
    5. ',' → logprob: -6.153461933135986
    6. '```' → logprob: -6.278461933135986
    7. 'input' → logprob: -6.653461933135986
    8. ')(' → logprob: -7.028461933135986
    9. '(math' → logprob: -7.278461933135986
    10. '`' → logprob: -7.528461933135986

Token 10: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2016512155532837
    2. ' input' → logprob: -1.7016512155532837
    3. ')' → logprob: -8.451651573181152
    4. '(input' → logprob: -10.951651573181152
    5. ' )' → logprob: -12.201651573181152
    6. ',input' → logprob: -14.076651573181152
    7. '=input' → logprob: -14.326651573181152
    8. '),' → logprob: -16.451650619506836
    9. '))' → logprob: -16.826650619506836
    10. '```' → logprob: -16.951650619506836

Token 11: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5194125771522522
    2. '())' → logprob: -1.1444125175476074
    3. '()' → logprob: -3.0194125175476074
    4. ')' → logprob: -3.7694125175476074
    5. '('' → logprob: -5.269412517547607
    6. '(()' → logprob: -6.519412517547607
    7. '(""))' → logprob: -6.769412517547607
    8. '`()' → logprob: -6.769412517547607
    9. '(token' → logprob: -7.269412517547607
    10. '```' → logprob: -7.394412517547607

Token 12: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00020663968462031335
    2. 'strip' → logprob: -8.50020694732666
    3. 'rstrip' → logprob: -13.37520694732666
    4. ' split' → logprob: -13.75020694732666
    5. 'read' → logprob: -15.00020694732666
    6. '(split' → logprob: -16.500205993652344
    7. 'spl' → logprob: -17.000205993652344
    8. ')' → logprob: -17.250205993652344
    9. '_split' → logprob: -19.125205993652344
    10. 'startswith' → logprob: -19.375205993652344

Token 13: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.176273375749588
    2. '))' → logprob: -1.9262733459472656
    3. '())' → logprob: -4.176273345947266
    4. '()))' → logprob: -8.051273345947266
    5. '()' → logprob: -8.676273345947266
    6. '`)' → logprob: -10.426273345947266
    7. ')))' → logprob: -11.676273345947266
    8. ')`' → logprob: -11.676273345947266
    9. '(' → logprob: -11.926273345947266
    10. '),' → logprob: -12.426273345947266

Token 14: 'print' (ID: 1598)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.1648644208908081
    2. 'result' → logprob: -2.2898645401000977
    3. 'sum' → logprob: -4.289864540100098
    4. 'if' → logprob: -4.664864540100098
    5. 's' → logprob: -4.914864540100098
    6. 'print' → logprob: -4.914864540100098
    7. 'area' → logprob: -5.914864540100098
    8. 'hyp' → logprob: -6.039864540100098
    9. 'x' → logprob: -6.414864540100098
    10. 'res' → logprob: -6.664864540100098

Token 15: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011145319789648056
    2. '(math' → logprob: -4.511145114898682
    3. '(a' → logprob: -10.26114559173584
    4. '(Math' → logprob: -10.51114559173584
    5. '("("' → logprob: -11.26114559173584
    6. '('' → logprob: -12.13614559173584
    7. '(round' → logprob: -12.88614559173584
    8. '((' → logprob: -13.01114559173584
    9. '(abs' → logprob: -13.13614559173584
    10. '(pow' → logprob: -13.51114559173584

Token 16: '1' (ID: 16)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.913595974445343
    2. '"' → logprob: -1.0385959148406982
    3. 'a' → logprob: -1.6635959148406982
    4. ''a' → logprob: -3.6635959148406982
    5. '"a' → logprob: -3.9135959148406982
    6. ''' → logprob: -5.788596153259277
    7. ''m' → logprob: -5.788596153259277
    8. '(math' → logprob: -6.163596153259277
    9. ''s' → logprob: -7.538596153259277
    10. ' math' → logprob: -8.663596153259277

Token 17: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05859803780913353
    2. ')' → logprob: -3.558598041534424
    3. ' +' → logprob: -3.808598041534424
    4. '+)' → logprob: -5.558598041534424
    5. ' )' → logprob: -7.058598041534424
    6. '*' → logprob: -7.433598041534424
    7. '/' → logprob: -7.933598041534424
    8. ' /' → logprob: -8.308597564697266
    9. '0' → logprob: -8.808597564697266
    10. '-' → logprob: -9.808597564697266

Token 18: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.6520202159881592
    2. ' max' → logprob: -1.2770202159881592
    3. ' min' → logprob: -2.652020215988159
    4. ' int' → logprob: -2.777020215988159
    5. 'math' → logprob: -3.902020215988159
    6. 'min' → logprob: -4.027020454406738
    7. 'max' → logprob: -4.652020454406738
    8. 'int' → logprob: -5.027020454406738
    9. ' a' → logprob: -5.402020454406738
    10. ' b' → logprob: -5.777020454406738

Token 19: '.ceil' (ID: 60295)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03198498114943504
    2. '.sqrt' → logprob: -3.53198504447937
    3. '.sin' → logprob: -7.781984806060791
    4. '.atan' → logprob: -7.906984806060791
    5. '.log' → logprob: -8.03198528289795
    6. '.pow' → logprob: -8.03198528289795
    7. '.exp' → logprob: -8.65698528289795
    8. '.ceil' → logprob: -8.65698528289795
    9. '.factor' → logprob: -9.03198528289795
    10. '.s' → logprob: -9.28198528289795

Token 20: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.055672891438007355
    2. '(' → logprob: -2.9306728839874268
    3. '(a' → logprob: -7.805673122406006
    4. '(((' → logprob: -8.430672645568848
    5. '(abs' → logprob: -9.430672645568848
    6. '(b' → logprob: -11.055672645568848
    7. ' (' → logprob: -11.430672645568848
    8. ' ((' → logprob: -11.680672645568848
    9. '(
' → logprob: -11.680672645568848
    10. '(math' → logprob: -11.805672645568848

Token 21: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5484685897827148
    2. 'a' → logprob: -1.9234685897827148
    3. 'abs' → logprob: -2.298468589782715
    4. ' abs' → logprob: -2.923468589782715
    5. 'max' → logprob: -3.423468589782715
    6. ' max' → logprob: -3.673468589782715
    7. 'math' → logprob: -3.923468589782715
    8. ' b' → logprob: -3.923468589782715
    9. ' math' → logprob: -4.673468589782715
    10. ' a' → logprob: -5.048468589782715

Token 22: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0555107407271862
    2. '-' → logprob: -2.9305107593536377
    3. '-a' → logprob: -7.555510520935059
    4. ' ' → logprob: -9.305510520935059
    5. 'a' → logprob: -11.930510520935059
    6. ' ' → logprob: -12.430510520935059
    7. ' /' → logprob: -13.805510520935059
    8. ' a' → logprob: -14.305510520935059
    9. '/' → logprob: -15.055510520935059
    10. ')' → logprob: -15.555510520935059

Token 23: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2811892330646515
    2. ' a' → logprob: -1.406189203262329
    3. ' ' → logprob: -10.53118896484375
    4. '	a' → logprob: -12.15618896484375
    5. ')' → logprob: -13.03118896484375
    6. ')a' → logprob: -13.78118896484375
    7. '1' → logprob: -13.90618896484375
    8. ''a' → logprob: -14.40618896484375
    9. 'а' → logprob: -14.90618896484375
    10. ' ' → logprob: -15.28118896484375

Token 24: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00871952436864376
    2. ' )' → logprob: -5.383719444274902
    3. ')/' → logprob: -5.508719444274902
    4. ')/(' → logprob: -10.758719444274902
    5. '-' → logprob: -12.258719444274902
    6. '+' → logprob: -12.383719444274902
    7. ' -' → logprob: -13.133719444274902
    8. ' /' → logprob: -13.508719444274902
    9. ' ' → logprob: -14.071219444274902
    10. ' +' → logprob: -14.071219444274902

Token 25: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.6638031601905823
    2. ' /' → logprob: -0.9138031601905823
    3. ')' → logprob: -2.5388031005859375
    4. ')/' → logprob: -5.5388031005859375
    5. ' )' → logprob: -7.5388031005859375
    6. '/math' → logprob: -8.288803100585938
    7. '))' → logprob: -8.913803100585938
    8. ' ' → logprob: -9.413803100585938
    9. '/)' → logprob: -10.288803100585938
    10. ')/(' → logprob: -10.288803100585938

Token 26: ' (' (ID: 350)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7117268443107605
    2. 'a' → logprob: -1.2117269039154053
    3. ' ' → logprob: -2.2117269039154053
    4. '3' → logprob: -3.4617269039154053
    5. '6' → logprob: -3.9617269039154053
    6. '10' → logprob: -3.9617269039154053
    7. '17' → logprob: -4.961726665496826
    8. '5' → logprob: -5.336726665496826
    9. ' a' → logprob: -5.711726665496826
    10. '7' → logprob: -5.711726665496826

Token 27: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6871486902236938
    2. '2' → logprob: -0.8121486902236938
    3. '7' → logprob: -3.6871485710144043
    4. '3' → logprob: -4.812148571014404
    5. '10' → logprob: -5.312148571014404
    6. '17' → logprob: -5.687148571014404
    7. '8' → logprob: -6.062148571014404
    8. '6' → logprob: -6.312148571014404
    9. 'abs' → logprob: -6.312148571014404
    10. '5' → logprob: -6.812148571014404

Token 28: ' -' (ID: 533)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.011949936859309673
    2. ')' → logprob: -4.7619500160217285
    3. '))' → logprob: -5.8869500160217285
    4. '+' → logprob: -8.51194953918457
    5. ' ' → logprob: -8.51194953918457
    6. ' +' → logprob: -10.01194953918457
    7. ')))
' → logprob: -10.13694953918457
    8. '))))' → logprob: -11.38694953918457
    9. ' )' → logprob: -11.63694953918457
    10. ' ))' → logprob: -11.88694953918457

Token 29: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009243488311767578
    2. ' ' → logprob: -4.759243488311768
    3. 'b' → logprob: -7.634243488311768
    4. ' b' → logprob: -9.25924301147461
    5. '2' → logprob: -11.00924301147461
    6. 'math' → logprob: -11.13424301147461
    7. ' math' → logprob: -11.38424301147461
    8. 'a' → logprob: -13.13424301147461
    9. ' a' → logprob: -13.75924301147461
    10. ' -' → logprob: -13.88424301147461

Token 30: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005262265913188457
    2. 'b' → logprob: -8.000526428222656
    3. ' ' → logprob: -9.250526428222656
    4. 'math' → logprob: -9.375526428222656
    5. '2' → logprob: -12.750526428222656
    6. ' math' → logprob: -13.250526428222656
    7. 'a' → logprob: -14.250526428222656
    8. ' b' → logprob: -14.563026428222656
    9. ')' → logprob: -14.625526428222656
    10. '-' → logprob: -14.688026428222656

Token 31: ')))' (ID: 15975)
  Prédit: ')))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.4886626899242401
    2. '))' → logprob: -0.9886627197265625
    3. ')' → logprob: -4.2386627197265625
    4. '))))' → logprob: -9.988662719726562
    5. ')))
' → logprob: -12.988662719726562
    6. ' ))' → logprob: -13.988662719726562
    7. '))
' → logprob: -13.988662719726562
    8. ' ' → logprob: -14.363662719726562
    9. '),' → logprob: -15.113662719726562
    10. '*' → logprob: -15.488662719726562


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 29
Tokens correctement prédits (1ère position, stricte): 12
Tokens correctement prédits (1ère position, avec adaptation): 12
Tokens correctement prédits (top 10): 23
Précision stricte (1ère position): 41.38%
Précision adaptée (1ère position): 41.38%
Précision (top 10): 79.31%
================================================================================
