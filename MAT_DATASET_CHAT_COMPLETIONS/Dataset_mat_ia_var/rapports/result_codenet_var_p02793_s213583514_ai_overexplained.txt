================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:29:27
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys  # Importe le module sys pour accéder à stdin et readline (lecture rapide des entrées standard)
from collections import deque  # Importe deque permettant de créer des files efficaces (non utilisé ici mais importé)
from heapq import heapify, heappop, heappush  # Fonctions pour manipuler des files de priorité (non utilisées mais importées)
from itertools import combinations, permutations  # Fonctions pour générer combinaisons et permutations (non utilisées)
from bisect import bisect, bisect_left  # Fonctions de recherche dichotomique (non utilisées)

# Définition d'une fonction pour calculer le plus grand commun diviseur (gcd = greatest common divisor)
def gcd(a, b):
    # Prend deux nombres 'a' et 'b' et va placer le plus grand dans a et le plus petit dans b
    a, b = max(a, b), min(a, b)
    # Multiplie a et b, valeur non utilisée dans le calcul ici (var 'c' redondante)
    c = a * b  
    # Boucle tant que le reste de la division de a par b n'est pas nul (méthode d'Euclide)
    while a % b > 0:
        # Met à jour a avec la valeur de b, met à jour b avec le reste de la division a par b
        a, b = b, a % b
    # Une fois que le reste est nul, b contient le pgcd
    return b

# Définition de la fonction principale appelée solve
def solve():
    # Assigne la fonction sys.stdin.readline à 'input' pour des lectures de lignes plus rapides
    input = sys.stdin.readline
    # Définit une constante 'mod' qui sera utilisée pour les opérations modulo (très utile pour éviter les grands nombres)
    mod = 7 + 10 ** 9  # mod vaut 1000000007, un grand nombre premier courant pour le modulo dans les concours de programmation
    # Lit une ligne de l'entrée standard, la convertit en entier, et l'assigne à N (taille de la liste)
    N = int(input())
    # Lit une autre ligne, la découpe selon les espaces, convertit chaque élément en entier et construit une liste A
    A = [int(a) for a in input().split()]
    # Si N vaut 1 (la liste n'a qu'un seul élément), on affiche simplement 1 (cas particulier)
    if N == 1:
        print(1)
    else:
        # On commence par définir lcm égale au premier élément de la liste A
        lcm = A[0]
        # Parcourt la liste à partir du deuxième élément (indice 1) jusqu'à la fin
        for i in range(1, N):
            # Calcule le pgcd entre lcm courant et A[i] en appelant la fonction gcd
            gcd_a = gcd(lcm, A[i])
            # Met à jour le ppcm (lcm = lowest common multiple) en utilisant la propriété : 
            # ppcm(a, b) = (a * b) // pgcd(a, b)
            lcm = lcm * A[i] // gcd_a
        # Applique le modulo à lcm (pour réduire la taille des nombres)
        lcm %= mod
        # Initialise la variable sumB à 0 (cette variable gardera le total recherché)
        sumB = 0
        # Parcourt avec la fonction enumerate la liste A (récupère à la fois l'indice et la valeur mais l'indice n'est pas utilisé)
        for i, a in enumerate(A):
            # Utilise pow pour calculer l'inverse modulaire de a modulo mod. pow(a, mod-2, mod) n'est valable que si mod est premier.
            # Multiplie lcm par cet inverse, puis l'additionne à sumB
            sumB += lcm * pow(a, mod - 2, mod)
            # Applique le modulo à sumB pour éviter qu'il ne devienne trop grand
            sumB %= mod
        # Après avoir parcouru tous les éléments, affiche la valeur finale de sumB
        print(sumB)
    # Retourne 0 (pas utile ici mais inclus tout de même, bonne pratique dans certaines fonctions principales)
    return 0

# Ceci vérifie si ce fichier est exécuté en tant que script principal
if __name__ == "__main__":
    # Appelle la fonction solve pour exécuter le programme
    solve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' ' (ID: 220)
  → Token d'amorce (pas de prédiction)

Token 3: ' #' (ID: 1069)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00017624642350710928
    2. '\' → logprob: -10.000176429748535
    3. '\n' → logprob: -10.375176429748535
    4. 'import' → logprob: -11.250176429748535
    5. '.readline' → logprob: -11.250176429748535
    6. '.\' → logprob: -11.500176429748535
    7. '[' → logprob: -11.625176429748535
    8. '<|end|>' → logprob: -11.625176429748535
    9. 'newline' → logprob: -12.125176429748535
    10. '.import' → logprob: -12.375176429748535

Token 4: ' Im' (ID: 3133)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.02292315661907196
    2. ' .' → logprob: -4.647922992706299
    3. '<|end|>' → logprob: -5.147922992706299
    4. ' ' → logprob: -6.147922992706299
    5. '<|end|>' → logprob: -6.647922992706299
    6. 'import' → logprob: -6.772922992706299
    7. '.import' → logprob: -7.272922992706299
    8. ',' → logprob: -7.772922992706299
    9. '.system' → logprob: -8.272923469543457
    10. '.e' → logprob: -8.647923469543457

Token 5: 'porte' (ID: 17761)
  Prédit: 'port'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'port' → logprob: -2.696889623621246e-06
    2. 'ported' → logprob: -13.37500286102295
    3. 'p' → logprob: -14.62500286102295
    4. 'ports' → logprob: -15.12500286102295
    5. 'porter' → logprob: -16.500001907348633
    6. 'plement' → logprob: -16.750001907348633
    7. 'por' → logprob: -16.750001907348633
    8. '```' → logprob: -17.625001907348633
    9. ' port' → logprob: -17.875001907348633
    10. 'порт' → logprob: -17.875001907348633

Token 6: ' le' (ID: 505)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.47804948687553406
    2. 'rt' → logprob: -0.9780495166778564
    3. ' ' → logprob: -6.353049278259277
    4. ' r' → logprob: -6.478049278259277
    5. 'ort' → logprob: -8.978049278259277
    6. ' rt' → logprob: -9.103049278259277
    7. 'nt' → logprob: -9.478049278259277
    8. 'port' → logprob: -9.728049278259277
    9. 'space' → logprob: -10.103049278259277
    10. 'rror' → logprob: -10.228049278259277

Token 7: ' module' (ID: 8827)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.9225286245346069
    2. ' ' → logprob: -1.297528624534607
    3. 's' → logprob: -1.422528624534607
    4. ' module' → logprob: -3.9225287437438965
    5. 'space' → logprob: -4.0475287437438965
    6. ' r' → logprob: -4.2975287437438965
    7. 'module' → logprob: -4.5475287437438965
    8. ' space' → logprob: -5.1725287437438965
    9. ' ' → logprob: -5.5475287437438965
    10. '```' → logprob: -5.9225287437438965

Token 8: ' sys' (ID: 12228)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.07835765928030014
    2. ' .' → logprob: -3.203357696533203
    3. ' ' → logprob: -4.203357696533203
    4. 'import' → logprob: -5.703357696533203
    5. '' → logprob: -5.953357696533203
    6. 'sys' → logprob: -6.078357696533203
    7. '\' → logprob: -6.203357696533203
    8. ',' → logprob: -6.203357696533203
    9. ' sys' → logprob: -6.703357696533203
    10. '\n' → logprob: -6.828357696533203

Token 9: ' pour' (ID: 1930)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0886109247803688
    2. '\n' → logprob: -3.213610887527466
    3. '\' → logprob: -4.338611125946045
    4. 'import' → logprob: -4.713611125946045
    5. '
' → logprob: -4.963611125946045
    6. ' ' → logprob: -5.088611125946045
    7. '' → logprob: -5.463611125946045
    8. '.import' → logprob: -6.838611125946045
    9. 'newline' → logprob: -7.088611125946045
    10. ',' → logprob: -7.463611125946045

Token 10: ' accéder' (ID: 120555)
  Prédit: ' manip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' manip' → logprob: -0.448956698179245
    2. ' gérer' → logprob: -1.4489567279815674
    3. ' permettre' → logprob: -3.5739567279815674
    4. 'l' → logprob: -4.198956489562988
    5. ' pouvoir' → logprob: -4.448956489562988
    6. ' l' → logprob: -4.448956489562988
    7. ' fournir' → logprob: -4.698956489562988
    8. ' la' → logprob: -4.823956489562988
    9. ' manipulation' → logprob: -5.073956489562988
    10. ' récupérer' → logprob: -5.198956489562988

Token 11: ' à' (ID: 1221)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5167562961578369
    2. ' .' → logprob: -1.016756296157837
    3. ' ' → logprob: -3.516756296157837
    4. '  ' → logprob: -5.641756057739258
    5. ' à' → logprob: -6.266756057739258
    6. 'space' → logprob: -7.141756057739258
    7. ' a' → logprob: -7.266756057739258
    8. 'es' → logprob: -7.766756057739258
    9. '<|end|>' → logprob: -7.891756057739258
    10. '```' → logprob: -7.891756057739258

Token 12: ' stdin' (ID: 75143)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -1.5628162622451782
    2. 'l' → logprob: -1.6878162622451782
    3. 'argv' → logprob: -1.9378162622451782
    4. ' l' → logprob: -2.1878161430358887
    5. 'sys' → logprob: -2.6878161430358887
    6. ' argv' → logprob: -2.6878161430358887
    7. ' la' → logprob: -3.0628161430358887
    8. ' sys' → logprob: -3.0628161430358887
    9. 'des' → logprob: -3.4378161430358887
    10. 'les' → logprob: -3.9378161430358887

Token 13: ' et' (ID: 859)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18335455656051636
    2. ',' → logprob: -3.183354616165161
    3. 'import' → logprob: -3.433354616165161
    4. '\n' → logprob: -3.433354616165161
    5. '' → logprob: -3.683354616165161
    6. '\' → logprob: -4.558354377746582
    7. '
' → logprob: -4.683354377746582
    8. ' ' → logprob: -5.058354377746582
    9. '.readline' → logprob: -5.433354377746582
    10. 'newline' → logprob: -6.933354377746582

Token 14: ' readline' (ID: 179561)
  Prédit: 'stdout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdout' → logprob: -0.0127951018512249
    2. ' stdout' → logprob: -4.3877949714660645
    3. 'stderr' → logprob: -8.387795448303223
    4. '(stdout' → logprob: -11.012795448303223
    5. '_stdout' → logprob: -11.012795448303223
    6. '.stdout' → logprob: -11.137795448303223
    7. 'argv' → logprob: -11.762795448303223
    8. 'print' → logprob: -14.387795448303223
    9. 'sys' → logprob: -14.512795448303223
    10. '```' → logprob: -15.387795448303223

Token 15: ' (' (ID: 350)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.24425829946994781
    2. '\n' → logprob: -2.494258403778076
    3. '
' → logprob: -3.119258403778076
    4. '\' → logprob: -3.744258403778076
    5. 'import' → logprob: -3.869258403778076
    6. ' ' → logprob: -4.119258403778076
    7. '' → logprob: -4.119258403778076
    8. ',' → logprob: -5.369258403778076
    9. 'newline' → logprob: -6.619258403778076
    10. '  
' → logprob: -6.994258403778076

Token 16: 'lecture' (ID: 136547)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019570598378777504
    2. '.' → logprob: -7.251956939697266
    3. ' )' → logprob: -7.626956939697266
    4. 'import' → logprob: -8.751956939697266
    5. '.)' → logprob: -8.876956939697266
    6. ').' → logprob: -9.501956939697266
    7. ')
' → logprob: -9.501956939697266
    8. ',' → logprob: -10.126956939697266
    9. '```' → logprob: -10.126956939697266
    10. '[' → logprob: -10.626956939697266

Token 17: ' rapide' (ID: 44887)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10190027952194214
    2. '()' → logprob: -3.601900339126587
    3. '(' → logprob: -3.726900339126587
    4. ' )' → logprob: -3.851900339126587
    5. '.' → logprob: -4.476900100708008
    6. '\n' → logprob: -6.101900100708008
    7. '\' → logprob: -6.226900100708008
    8. 's' → logprob: -6.601900100708008
    9. ' de' → logprob: -6.726900100708008
    10. ',' → logprob: -6.726900100708008

Token 18: ' des' (ID: 731)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008659643935970962
    2. ' )' → logprob: -8.000865936279297
    3. '.' → logprob: -8.625865936279297
    4. '()' → logprob: -8.750865936279297
    5. '```' → logprob: -10.125865936279297
    6. 'import' → logprob: -10.625865936279297
    7. '(' → logprob: -10.750865936279297
    8. ')
' → logprob: -10.750865936279297
    9. ',' → logprob: -11.125865936279297
    10. '`)' → logprob: -11.500865936279297

Token 19: ' entr' (ID: 7072)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.26560282707214355
    2. '_' → logprob: -2.5156028270721436
    3. '\' → logprob: -4.140603065490723
    4. ' \' → logprob: -4.140603065490723
    5. ' ' → logprob: -4.265603065490723
    6. ' lignes' → logprob: -4.265603065490723
    7. ' fichiers' → logprob: -4.390603065490723
    8. 'f' → logprob: -4.640603065490723
    9. ' )' → logprob: -4.890603065490723
    10. ' données' → logprob: -5.015603065490723

Token 20: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.0015902003506198525
    2. 'ée' → logprob: -7.126590251922607
    3. 'er' → logprob: -8.00158977508545
    4. 'êtes' → logprob: -8.00158977508545
    5. 'és' → logprob: -10.12658977508545
    6. 'é' → logprob: -11.12658977508545
    7. 'érées' → logprob: -11.87658977508545
    8. 'êt' → logprob: -12.00158977508545
    9. 'ê' → logprob: -12.12658977508545
    10. 'es' → logprob: -12.25158977508545

Token 21: ' standard' (ID: 7024)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00041243841405957937
    2. ')
' → logprob: -8.625411987304688
    3. '```' → logprob: -9.125411987304688
    4. 'import' → logprob: -10.375411987304688
    5. ' )' → logprob: -10.375411987304688
    6. ')
' → logprob: -11.250411987304688
    7. ')

' → logprob: -11.250411987304688
    8. ')

' → logprob: -12.250411987304688
    9. '`)' → logprob: -12.375411987304688
    10. ',' → logprob: -12.500411987304688

Token 22: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.599403423024341e-05
    2. ')
' → logprob: -10.250065803527832
    3. ' )' → logprob: -11.875065803527832
    4. '```' → logprob: -12.000065803527832
    5. '`)' → logprob: -12.750065803527832
    6. ')
' → logprob: -12.750065803527832
    7. ')

' → logprob: -12.875065803527832
    8. '#' → logprob: -13.000065803527832
    9. '')' → logprob: -13.375065803527832
    10. 'import' → logprob: -13.500065803527832

Token 23: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6744906902313232
    2. '\n' → logprob: -1.0494906902313232
    3. 'import' → logprob: -2.7994906902313232
    4. '

' → logprob: -2.9244906902313232
    5. '' → logprob: -4.299490928649902
    6. '```' → logprob: -5.924490928649902
    7. '\' → logprob: -6.049490928649902
    8. '
' → logprob: -6.049490928649902
    9. '.' → logprob: -6.674490928649902
    10. ',' → logprob: -7.549490928649902

Token 24: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.06369337439537048
    2. ' sys' → logprob: -3.0636932849884033
    3. 'collections' → logprob: -4.938693523406982
    4. ' math' → logprob: -5.563693523406982
    5. ' os' → logprob: -6.063693523406982
    6. 'sys' → logprob: -7.438693523406982
    7. ' typing' → logprob: -7.813693523406982
    8. ' itertools' → logprob: -8.313693046569824
    9. ' io' → logprob: -8.438693046569824
    10. 'os' → logprob: -9.563693046569824

Token 25: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.020592104643583298
    2. 'import' → logprob: -3.895592212677002
    3. ' ' → logprob: -10.145591735839844
    4. '<|end|>' → logprob: -13.520591735839844
    5. ' ' → logprob: -13.645591735839844
    6. ' Import' → logprob: -13.895591735839844
    7. ' defaultdict' → logprob: -13.895591735839844
    8. ' impor' → logprob: -14.145591735839844
    9. ' ```' → logprob: -14.270591735839844
    10. ' importar' → logprob: -14.395591735839844

Token 26: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.20316077768802643
    2. ' defaultdict' → logprob: -1.7031607627868652
    3. 'deque' → logprob: -6.703160762786865
    4. ' collections' → logprob: -7.703160762786865
    5. ' Counter' → logprob: -10.328161239624023
    6. ' counter' → logprob: -11.453161239624023
    7. ' abc' → logprob: -12.203161239624023
    8. ' import' → logprob: -12.203161239624023
    9. ' default' → logprob: -12.203161239624023
    10. ' named' → logprob: -13.203161239624023

Token 27: ' ' (ID: 220)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.04055066779255867
    2. '
' → logprob: -3.540550708770752
    3. 'import' → logprob: -5.665550708770752
    4. ' 

' → logprob: -5.915550708770752
    5. '<|end|>' → logprob: -6.165550708770752
    6. '


' → logprob: -6.540550708770752
    7. '<|end|>' → logprob: -8.540550231933594
    8. '```' → logprob: -8.790550231933594
    9. '  

' → logprob: -8.915550231933594
    10. '\n' → logprob: -9.165550231933594

Token 28: ' #' (ID: 1069)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.04440387710928917
    2. '
' → logprob: -3.6694037914276123
    3. 'import' → logprob: -5.044404029846191
    4. ' 

' → logprob: -5.294404029846191
    5. '


' → logprob: -6.919404029846191
    6. '```' → logprob: -7.044404029846191
    7. '  

' → logprob: -7.169404029846191
    8. '' → logprob: -7.294404029846191
    9. ' ' → logprob: -7.419404029846191
    10. '#' → logprob: -7.669404029846191

Token 29: ' Im' (ID: 3133)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.13995608687400818
    2. 'import' → logprob: -2.264955997467041
    3. ' ' → logprob: -4.514955997467041
    4. ' collections' → logprob: -5.389955997467041
    5. ' deque' → logprob: -5.514955997467041
    6. ' from' → logprob: -6.389955997467041
    7. 'deque' → logprob: -6.639955997467041
    8. 'from' → logprob: -6.639955997467041
    9. ' ' → logprob: -6.764955997467041
    10. 'collections' → logprob: -7.014955997467041

Token 30: 'porte' (ID: 17761)
  Prédit: 'port'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'port' → logprob: -4.417976379045285e-05
    2. 'porte' → logprob: -11.125043869018555
    3. 'import' → logprob: -11.750043869018555
    4. 'ports' → logprob: -11.875043869018555
    5. 'porter' → logprob: -12.250043869018555
    6. 'ort' → logprob: -12.500043869018555
    7. 'p' → logprob: -13.625043869018555
    8. 'ported' → logprob: -13.875043869018555
    9. '```' → logprob: -14.000043869018555
    10. 'порт' → logprob: -14.500043869018555

Token 31: ' deque' (ID: 90347)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.02390705794095993
    2. ' ' → logprob: -3.898906946182251
    3. 'collections' → logprob: -7.02390718460083
    4. ' deque' → logprob: -7.14890718460083
    5. ' ' → logprob: -7.77390718460083
    6. ' queue' → logprob: -8.273906707763672
    7. ' collection' → logprob: -8.523906707763672
    8. ' de' → logprob: -8.523906707763672
    9. ' itertools' → logprob: -9.023906707763672
    10. ' la' → logprob: -9.523906707763672

Token 32: ' permettant' (ID: 61092)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 33: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.35804471373558044
    2. ' une' → logprob: -1.9830447435379028
    3. 'd' → logprob: -2.4830446243286133
    4. ' de' → logprob: -3.4830446243286133
    5. ' la' → logprob: -4.233044624328613
    6. 'une' → logprob: -4.358044624328613
    7. 'de' → logprob: -4.608044624328613
    8. ' l' → logprob: -4.983044624328613
    9. 'l' → logprob: -6.233044624328613
    10. 'la' → logprob: -6.358044624328613

Token 34: ' créer' (ID: 40938)
  Prédit: ' manip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' manip' → logprob: -0.9713764190673828
    2. ' gérer' → logprob: -1.0963764190673828
    3. ' faire' → logprob: -2.971376419067383
    4. 'faire' → logprob: -3.096376419067383
    5. ' réaliser' → logprob: -3.346376419067383
    6. 'g' → logprob: -3.471376419067383
    7. 'man' → logprob: -4.096376419067383
    8. ' créer' → logprob: -4.096376419067383
    9. 'optim' → logprob: -4.596376419067383
    10. ' effectuer' → logprob: -4.721376419067383

Token 35: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.45031148195266724
    2. ' une' → logprob: -1.2003114223480225
    3. ' file' → logprob: -3.5753114223480225
    4. 'une' → logprob: -4.075311660766602
    5. 'des' → logprob: -4.200311660766602
    6. 'file' → logprob: -7.325311660766602
    7. ' files' → logprob: -8.200311660766602
    8. ' ' → logprob: -8.950311660766602
    9. '```' → logprob: -9.575311660766602
    10. ' un' → logprob: -10.200311660766602

Token 36: ' files' (ID: 6291)
  Prédit: ' file'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' file' → logprob: -0.6939212679862976
    2. ' files' → logprob: -0.9439212679862976
    3. ' structures' → logprob: -2.5689213275909424
    4. ' listes' → logprob: -3.9439213275909424
    5. 'file' → logprob: -5.818921089172363
    6. 'files' → logprob: -6.193921089172363
    7. 'structures' → logprob: -6.443921089172363
    8. ' queues' → logprob: -6.818921089172363
    9. ' collections' → logprob: -6.943921089172363
    10. ' structure' → logprob: -7.068921089172363

Token 37: ' efficaces' (ID: 140931)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.3895460367202759
    2. '(' → logprob: -1.7645460367202759
    3. '
' → logprob: -1.7645460367202759
    4. 'import' → logprob: -2.7645459175109863
    5. 'from' → logprob: -3.1395459175109863
    6. '

' → logprob: -3.2645459175109863
    7. '(
' → logprob: -3.3895459175109863
    8. '<|end|>' → logprob: -3.6395459175109863
    9. '\' → logprob: -3.7645459175109863
    10. ' ' → logprob: -3.8895459175109863

Token 38: ' (' (ID: 350)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.3231385350227356
    2. '
' → logprob: -1.3231384754180908
    3. '


' → logprob: -6.07313871383667
    4. 'import' → logprob: -6.19813871383667
    5. '' → logprob: -6.32313871383667
    6. '\n' → logprob: -7.07313871383667
    7. ' 

' → logprob: -7.44813871383667
    8. '```' → logprob: -7.57313871383667
    9. '



' → logprob: -7.94813871383667
    10. '#' → logprob: -8.198138236999512

Token 39: 'non' (ID: 11741)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11536729335784912
    2. ' )' → logprob: -2.7403674125671387
    3. ' pour' → logprob: -3.7403674125671387
    4. ' des' → logprob: -4.490367412567139
    5. ' de' → logprob: -6.740367412567139
    6. ' ' → logprob: -6.990367412567139
    7. ' la' → logprob: -6.990367412567139
    8. ' d' → logprob: -6.990367412567139
    9. ' double' → logprob: -6.990367412567139
    10. ' les' → logprob: -7.365367412567139

Token 40: ' utilisé' (ID: 53138)
  Prédit: ' blo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' blo' → logprob: -1.1399762630462646
    2. 'blo' → logprob: -1.7649762630462646
    3. '-block' → logprob: -3.0149762630462646
    4. ' mutable' → logprob: -3.3899762630462646
    5. 's' → logprob: -3.6399762630462646
    6. ' ordered' → logprob: -3.6399762630462646
    7. ')' → logprob: -3.7649762630462646
    8. 'linear' → logprob: -3.8899762630462646
    9. ' intrusive' → logprob: -4.139976501464844
    10. ' limité' → logprob: -4.327476501464844

Token 41: ' ici' (ID: 27994)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002169532235711813
    2. ' )' → logprob: -6.502169609069824
    3. 's' → logprob: -8.377169609069824
    4. ' pour' → logprob: -8.627169609069824
    5. 'pour' → logprob: -10.377169609069824
    6. 'import' → logprob: -10.377169609069824
    7. ',' → logprob: -10.377169609069824
    8. '.' → logprob: -10.752169609069824
    9. 'e' → logprob: -11.377169609069824
    10. ' dans' → logprob: -11.627169609069824

Token 42: ' mais' (ID: 2899)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00022284770966507494
    2. ' )' → logprob: -9.875223159790039
    3. '```' → logprob: -10.125223159790039
    4. '#' → logprob: -10.500223159790039
    5. ')
' → logprob: -10.875223159790039
    6. 'import' → logprob: -11.000223159790039
    7. '`)' → logprob: -11.500223159790039
    8. '')' → logprob: -11.500223159790039
    9. ',' → logprob: -11.625223159790039
    10. 's' → logprob: -11.750223159790039

Token 43: ' import' (ID: 1588)
  Prédit: ' utile'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' utile' → logprob: -0.8090713620185852
    2. 'utile' → logprob: -1.6840713024139404
    3. 'pr' → logprob: -2.1840713024139404
    4. 'util' → logprob: -2.8090713024139404
    5. ' souvent' → logprob: -3.0590713024139404
    6. ' pratique' → logprob: -3.4340713024139404
    7. 'sou' → logprob: -3.6840713024139404
    8. ' utiles' → logprob: -3.9340713024139404
    9. 'pot' → logprob: -4.0590715408325195
    10. ' parfois' → logprob: -4.5590715408325195

Token 44: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.001173917087726295
    2. 's' → logprob: -7.376173973083496
    3. 'és' → logprob: -8.376173973083496
    4. ')' → logprob: -8.751173973083496
    5. 'ée' → logprob: -10.626173973083496
    6. 'e' → logprob: -10.751173973083496
    7. 'ées' → logprob: -11.126173973083496
    8. '_' → logprob: -11.251173973083496
    9. 'er' → logprob: -11.251173973083496
    10. 'ation' → logprob: -11.501173973083496

Token 45: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002939905971288681
    2. ' )' → logprob: -5.877939701080322
    3. ' pour' → logprob: -10.00294017791748
    4. 'import' → logprob: -10.37794017791748
    5. ')
' → logprob: -11.37794017791748
    6. ',' → logprob: -11.75294017791748
    7. '```' → logprob: -11.87794017791748
    8. ')

' → logprob: -12.75294017791748
    9. '`)' → logprob: -12.75294017791748
    10. '')' → logprob: -12.87794017791748

Token 46: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.7759394645690918
    2. '
' → logprob: -1.0259394645690918
    3. '#' → logprob: -3.150939464569092
    4. '' → logprob: -3.400939464569092
    5. '\n' → logprob: -3.400939464569092
    6. '


' → logprob: -4.275939464569092
    7. 'import' → logprob: -4.525939464569092
    8. 'class' → logprob: -4.775939464569092
    9. ' 

' → logprob: -4.900939464569092
    10. 'n' → logprob: -5.525939464569092

Token 47: ' heap' (ID: 37237)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.8489013910293579
    2. ' math' → logprob: -1.973901391029358
    3. ' collections' → logprob: -1.973901391029358
    4. ' sys' → logprob: -2.0989012718200684
    5. ' queue' → logprob: -2.7239012718200684
    6. ' typing' → logprob: -2.8489012718200684
    7. ' heap' → logprob: -3.4739012718200684
    8. 'collections' → logprob: -5.348901271820068
    9. ' os' → logprob: -5.598901271820068
    10. ' copy' → logprob: -6.598901271820068

Token 48: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: 0.0
    2. 'queue' → logprob: -18.125
    3. 'i' → logprob: -18.25
    4. 'u' → logprob: -20.0
    5. ' ' → logprob: -20.0
    6. ' queue' → logprob: -20.25
    7. 'n' → logprob: -20.5
    8. 'a' → logprob: -20.625
    9. 'f' → logprob: -20.875
    10. 'o' → logprob: -21.0

Token 49: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.2835509479045868
    2. ' ' → logprob: -1.4085509777069092
    3. 'import' → logprob: -6.28355073928833
    4. '<|end|>' → logprob: -8.158551216125488
    5. '  ' → logprob: -8.533551216125488
    6. '	import' → logprob: -12.033551216125488
    7. ' ```' → logprob: -12.158551216125488
    8. ' ▁' → logprob: -12.158551216125488
    9. ' ‌' → logprob: -12.283551216125488
    10. 'space' → logprob: -12.783551216125488

Token 50: ' heap' (ID: 37237)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.027046991512179375
    2. ' he' → logprob: -3.6520469188690186
    3. 'he' → logprob: -8.152047157287598
    4. ' heap' → logprob: -8.527047157287598
    5. ' import' → logprob: -9.527047157287598
    6. ' ' → logprob: -9.777047157287598
    7. ' ​' → logprob: -10.402047157287598
    8. 'heap' → logprob: -11.152047157287598
    9. '  ' → logprob: -11.777047157287598
    10. ' ﻿' → logprob: -11.902047157287598

Token 51: 'ify' (ID: 1985)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.7696239352226257
    2. 'ify' → logprob: -1.0196239948272705
    3. 'p' → logprob: -2.2696239948272705
    4. 'push' → logprob: -3.1446239948272705
    5. 'replace' → logprob: -4.394623756408691
    6. 'op' → logprob: -5.144623756408691
    7. 'app' → logprob: -5.644623756408691
    8. 'pop' → logprob: -6.019623756408691
    9. 'ap' → logprob: -6.269623756408691
    10. 'u' → logprob: -7.394623756408691

Token 52: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09872846305370331
    2. ',' → logprob: -2.5987284183502197
    3. ' ,' → logprob: -4.223728656768799
    4. '  ' → logprob: -5.723728656768799
    5. '<|end|>' → logprob: -7.098728656768799
    6. 'import' → logprob: -7.973728656768799
    7. ' 
' → logprob: -8.47372817993164
    8. '  
' → logprob: -8.84872817993164
    9. ' import' → logprob: -9.09872817993164
    10. ' #' → logprob: -10.22372817993164

Token 53: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.52373206615448
    2. 'he' → logprob: -0.89873206615448
    3. '.he' → logprob: -7.7737321853637695
    4. 'heap' → logprob: -9.52373218536377
    5. ' ' → logprob: -9.89873218536377
    6. '_he' → logprob: -10.64873218536377
    7. '```' → logprob: -11.14873218536377
    8. ' heap' → logprob: -11.64873218536377
    9. 'merge' → logprob: -12.39873218536377
    10. '  ' → logprob: -13.64873218536377

Token 54: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0002637199067976326
    2. 'ap' → logprob: -8.250264167785645
    3. 'a' → logprob: -13.000264167785645
    4. ' app' → logprob: -17.250263214111328
    5. 'appen' → logprob: -17.875263214111328
    6. 'appa' → logprob: -18.000263214111328
    7. 'ап' → logprob: -18.250263214111328
    8. 'pp' → logprob: -18.375263214111328
    9. '	app' → logprob: -18.500263214111328
    10. '[' → logprob: -18.750263214111328

Token 55: 'op' (ID: 467)
  Prédit: 'ush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -2.816093228830141e-06
    2. 'op' → logprob: -12.87500286102295
    3. 'us' → logprob: -15.50000286102295
    4. 'USH' → logprob: -18.000001907348633
    5. 'u' → logprob: -18.500001907348633
    6. '

' → logprob: -19.875001907348633
    7. '   ' → logprob: -19.875001907348633
    8. 'osh' → logprob: -20.125001907348633
    9. 'o' → logprob: -20.500001907348633
    10. '```' → logprob: -20.625001907348633

Token 56: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5373703241348267
    2. ',' → logprob: -0.9123703241348267
    3. ' ,' → logprob: -4.412370204925537
    4. '  ' → logprob: -6.912370204925537
    5. '<|end|>' → logprob: -7.287370204925537
    6. ' 
' → logprob: -9.537370681762695
    7. '  
' → logprob: -9.912370681762695
    8. '
' → logprob: -10.287370681762695
    9. ' #' → logprob: -10.412370681762695
    10. ' 

' → logprob: -10.412370681762695

Token 57: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.1605263203382492
    2. 'he' → logprob: -1.9105262756347656
    3. 'heap' → logprob: -9.035526275634766
    4. ' heap' → logprob: -9.160526275634766
    5. ' ' → logprob: -9.910526275634766
    6. '.he' → logprob: -12.285526275634766
    7. '```' → logprob: -12.285526275634766
    8. '   ' → logprob: -12.848026275634766
    9. '  ' → logprob: -13.098026275634766
    10. ' heaps' → logprob: -13.410526275634766

Token 58: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.06201787292957306
    2. 'ap' → logprob: -2.8120179176330566
    3. 'a' → logprob: -10.312017440795898
    4. 'ап' → logprob: -11.187017440795898
    5. 'appen' → logprob: -14.562017440795898
    6. 'appa' → logprob: -14.687017440795898
    7. '```' → logprob: -15.062017440795898
    8. 'aps' → logprob: -15.312017440795898
    9. '	app' → logprob: -15.312017440795898
    10. ' app' → logprob: -15.937017440795898

Token 59: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -3.762356209335849e-05
    2. 'us' → logprob: -10.25003719329834
    3. 'u' → logprob: -13.25003719329834
    4. 'USH' → logprob: -15.50003719329834
    5. 'push' → logprob: -16.750038146972656
    6. 'ushi' → logprob: -17.625038146972656
    7. 'usho' → logprob: -17.750038146972656
    8. ' ush' → logprob: -18.000038146972656
    9. 'ushed' → logprob: -18.000038146972656
    10. 'ut' → logprob: -18.375038146972656

Token 60: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8590682148933411
    2. ' 

' → logprob: -1.1090681552886963
    3. '

' → logprob: -2.6090681552886963
    4. '
' → logprob: -2.9840681552886963
    5. '<|end|>' → logprob: -2.9840681552886963
    6. ' 
' → logprob: -3.4840681552886963
    7. '  

' → logprob: -4.484068393707275
    8. ' 
 
' → logprob: -5.484068393707275
    9. 'import' → logprob: -5.484068393707275
    10. '  ' → logprob: -5.609068393707275

Token 61: ' #' (ID: 1069)
  Prédit: ' 

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 

' → logprob: -0.8588186502456665
    2. '

' → logprob: -1.6088186502456665
    3. ' ' → logprob: -1.9838186502456665
    4. '
' → logprob: -2.233818531036377
    5. '<|end|>' → logprob: -2.358818531036377
    6. ' 
' → logprob: -4.233818531036377
    7. '#' → logprob: -5.358818531036377
    8. '<|end|>' → logprob: -5.608818531036377
    9. '' → logprob: -5.858818531036377
    10. '  

' → logprob: -5.858818531036377

Token 62: ' Fon' (ID: 83815)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08075680583715439
    2. ' import' → logprob: -2.830756902694702
    3. ' #' → logprob: -5.205756664276123
    4. 'import' → logprob: -5.580756664276123
    5. ' from' → logprob: -6.455756664276123
    6. ' ' → logprob: -6.455756664276123
    7. '#' → logprob: -6.580756664276123
    8. '<|end|>' → logprob: -7.080756664276123
    9. ' Import' → logprob: -7.080756664276123
    10. '<|end|>' → logprob: -7.455756664276123

Token 63: 'ctions' (ID: 2620)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.7808483839035034
    2. 'ction' → logprob: -0.9058483839035034
    3. 'c' → logprob: -2.530848503112793
    4. 'ctions' → logprob: -2.905848503112793
    5. 't' → logprob: -5.780848503112793
    6. 'cts' → logprob: -8.905848503112793
    7. 'ç' → logprob: -10.155848503112793
    8. 'tion' → logprob: -10.155848503112793
    9. 'cion' → logprob: -10.655848503112793
    10. 'cto' → logprob: -10.655848503112793

Token 64: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.37043553590774536
    2. '<|end|>' → logprob: -1.4954354763031006
    3. ' de' → logprob: -2.7454354763031006
    4. '  ' → logprob: -4.99543571472168
    5. '<|end|>' → logprob: -4.99543571472168
    6. ' from' → logprob: -5.99543571472168
    7. ' for' → logprob: -6.87043571472168
    8. ' )' → logprob: -7.87043571472168
    9. ' des' → logprob: -7.87043571472168
    10. ' d' → logprob: -7.99543571472168

Token 65: ' manip' (ID: 20526)
  Prédit: ' gérer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gérer' → logprob: -0.1704394817352295
    2. ' manip' → logprob: -2.7954394817352295
    3. ' la' → logprob: -3.4204394817352295
    4. ' l' → logprob: -3.7954394817352295
    5. ' g' → logprob: -4.670439720153809
    6. ' ' → logprob: -5.295439720153809
    7. ' utiliser' → logprob: -5.670439720153809
    8. 'g' → logprob: -5.920439720153809
    9. 'l' → logprob: -5.920439720153809
    10. ' les' → logprob: -5.920439720153809

Token 66: 'uler' (ID: 11802)
  Prédit: 'uler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uler' → logprob: -0.005216682329773903
    2. 'u' → logprob: -6.755216598510742
    3. 'ulation' → logprob: -6.755216598510742
    4. '```' → logprob: -7.255216598510742
    5. '#' → logprob: -7.505216598510742
    6. 'ul' → logprob: -8.005216598510742
    7. 'ule' → logprob: -8.380216598510742
    8. '\' → logprob: -9.130216598510742
    9. 'ulations' → logprob: -9.505216598510742
    10. 'ules' → logprob: -9.630216598510742

Token 67: ' des' (ID: 731)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.025458334013819695
    2. '  ' → logprob: -4.150458335876465
    3. 'he' → logprob: -5.400458335876465
    4. '<|end|>' → logprob: -6.525458335876465
    5. ' a' → logprob: -7.150458335876465
    6. ' ' → logprob: -7.900458335876465
    7. ' les' → logprob: -8.025458335876465
    8. 'les' → logprob: -8.525458335876465
    9. 'a' → logprob: -8.775458335876465
    10. 's' → logprob: -8.962958335876465

Token 68: ' files' (ID: 6291)
  Prédit: ' tas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tas' → logprob: -0.8371878862380981
    2. 'tas' → logprob: -1.8371878862380981
    3. ' ' → logprob: -2.3371877670288086
    4. ' file' → logprob: -2.7121877670288086
    5. ' files' → logprob: -2.8371877670288086
    6. 'p' → logprob: -3.5871877670288086
    7. ' espaces' → logprob: -3.7121877670288086
    8. '-' → logprob: -4.212187767028809
    9. ' heaps' → logprob: -4.337187767028809
    10. '_' → logprob: -4.462187767028809

Token 69: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.17737019062042236
    2. ' ' → logprob: -2.302370071411133
    3. '<|end|>' → logprob: -4.177370071411133
    4. '_priority' → logprob: -4.677370071411133
    5. ' _' → logprob: -5.052370071411133
    6. '  

' → logprob: -5.177370071411133
    7. ' de' → logprob: -5.427370071411133
    8. ' 

' → logprob: -5.677370071411133
    9. '  ' → logprob: -5.927370071411133
    10. 's' → logprob: -6.552370071411133

Token 70: ' priorité' (ID: 150252)
  Prédit: 'prior'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prior' → logprob: -0.021917518228292465
    2. ' prior' → logprob: -5.146917343139648
    3. ' priorité' → logprob: -5.146917343139648
    4. 'priority' → logprob: -5.146917343139648
    5. 'prio' → logprob: -6.146917343139648
    6. 'pri' → logprob: -6.771917343139648
    7. '```' → logprob: -8.146917343139648
    8. ' priority' → logprob: -8.896917343139648
    9. 'p' → logprob: -8.896917343139648
    10. '_prior' → logprob: -9.021917343139648

Token 71: ' (' (ID: 350)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.2666405737400055
    2. '
' → logprob: -1.516640543937683
    3. '


' → logprob: -4.766640663146973
    4. '



' → logprob: -6.266640663146973
    5. '' → logprob: -6.891640663146973
    6. ' 

' → logprob: -7.391640663146973
    7. 'import' → logprob: -7.391640663146973
    8. '<|end|>' → logprob: -8.016640663146973
    9. '\n' → logprob: -8.266640663146973
    10. '```' → logprob: -8.516640663146973

Token 72: 'non' (ID: 11741)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.121260643005371
    2. ' les' → logprob: -1.246260643005371
    3. ' des' → logprob: -1.996260643005371
    4. ')' → logprob: -2.371260643005371
    5. ' )' → logprob: -2.621260643005371
    6. 'les' → logprob: -3.371260643005371
    7. ' ' → logprob: -4.621260643005371
    8. 'des' → logprob: -4.746260643005371
    9. ' priority' → logprob: -5.246260643005371
    10. ',' → logprob: -5.621260643005371

Token 73: ' utilisées' (ID: 130009)
  Prédit: ' utilisées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisées' → logprob: -0.19347582757472992
    2. 'util' → logprob: -2.5684757232666016
    3. ' utilisé' → logprob: -3.4434757232666016
    4. ' utilisés' → logprob: -3.9434757232666016
    5. ' utilisée' → logprob: -4.318475723266602
    6. ' used' → logprob: -4.568475723266602
    7. ' ' → logprob: -4.693475723266602
    8. ' ut' → logprob: -5.818475723266602
    9. ' utilis' → logprob: -5.943475723266602
    10. ' utilizadas' → logprob: -6.193475723266602

Token 74: ' mais' (ID: 2899)
  Prédit: ' ici'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ici' → logprob: -0.08873386681079865
    2. ')' → logprob: -2.5887339115142822
    3. ' )' → logprob: -6.088733673095703
    4. ' ' → logprob: -6.588733673095703
    5. ' ' → logprob: -6.838733673095703
    6. ' here' → logprob: -6.963733673095703
    7. ' pour' → logprob: -6.963733673095703
    8. '<|end|>' → logprob: -7.338733673095703
    9. ' dans' → logprob: -7.588733673095703
    10. 'dans' → logprob: -7.963733673095703

Token 75: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -1.0924088954925537
    2. ' utiles' → logprob: -1.5924088954925537
    3. ' utilisées' → logprob: -1.8424088954925537
    4. 'import' → logprob: -2.0924088954925537
    5. ' souvent' → logprob: -2.4674088954925537
    6. ' présentes' → logprob: -3.4674088954925537
    7. ' parfois' → logprob: -4.092409133911133
    8. ' ' → logprob: -4.842409133911133
    9. 'pr' → logprob: -5.342409133911133
    10. 'util' → logprob: -5.342409133911133

Token 76: 'ées' (ID: 5161)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.577522337436676
    2. 'ées' → logprob: -0.827522337436676
    3. 'és' → logprob: -6.577522277832031
    4. 'ée' → logprob: -8.952522277832031
    5. 'éd' → logprob: -11.202522277832031
    6. 'nées' → logprob: -11.452522277832031
    7. 'es' → logprob: -12.452522277832031
    8. 'ed' → logprob: -12.577522277832031
    9. 'è' → logprob: -12.827522277832031
    10. ' ' → logprob: -13.202522277832031

Token 77: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004349179565906525
    2. '
' → logprob: -6.504349231719971
    3. ' )' → logprob: -6.754349231719971
    4. '\n' → logprob: -7.629349231719971
    5. '<|end|>' → logprob: -7.879349231719971
    6. '```' → logprob: -8.379348754882812
    7. '<|end|>' → logprob: -8.754348754882812
    8. '

' → logprob: -9.379348754882812
    9. 'import' → logprob: -9.504348754882812
    10. ')
' → logprob: -9.629348754882812

Token 78: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.6818350553512573
    2. '
' → logprob: -0.8068350553512573
    3. '<|end|>' → logprob: -3.306835174560547
    4. ' 

' → logprob: -5.681835174560547
    5. '


' → logprob: -6.556835174560547
    6. '' → logprob: -6.556835174560547
    7. '<|end|>' → logprob: -6.931835174560547
    8. '```' → logprob: -7.056835174560547
    9. ' ' → logprob: -7.431835174560547
    10. '#' → logprob: -7.556835174560547

Token 79: ' itertools' (ID: 103178)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.31132736802101135
    2. ' math' → logprob: -2.0613274574279785
    3. ' typing' → logprob: -2.6863274574279785
    4. ' itertools' → logprob: -3.0613274574279785
    5. ' sys' → logprob: -5.5613274574279785
    6. ' queue' → logprob: -5.5613274574279785
    7. ' ' → logprob: -5.6863274574279785
    8. ' os' → logprob: -6.0613274574279785
    9. ' random' → logprob: -6.0613274574279785
    10. ' space' → logprob: -6.1863274574279785

Token 80: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0046955798752605915
    2. ' ' → logprob: -5.754695415496826
    3. 'import' → logprob: -6.504695415496826
    4. '	import' → logprob: -12.004695892333984
    5. '.' → logprob: -12.379695892333984
    6. '<|end|>' → logprob: -12.879695892333984
    7. ' .' → logprob: -13.254695892333984
    8. ' itertools' → logprob: -13.754695892333984
    9. '_import' → logprob: -14.379695892333984
    10. ' im' → logprob: -14.379695892333984

Token 81: ' combinations' (ID: 43835)
  Prédit: ' permutations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -0.6358274817466736
    2. ' combinations' → logprob: -1.6358275413513184
    3. ' ' → logprob: -2.2608275413513184
    4. ' accumulate' → logprob: -3.2608275413513184
    5. 'com' → logprob: -3.3858275413513184
    6. ' product' → logprob: -3.3858275413513184
    7. ' cycle' → logprob: -3.6358275413513184
    8. ' group' → logprob: -4.135827541351318
    9. ' count' → logprob: -5.010827541351318
    10. ' chain' → logprob: -5.635827541351318

Token 82: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05206262320280075
    2. '<|end|>' → logprob: -3.302062511444092
    3. ' 
' → logprob: -5.552062511444092
    4. '(' → logprob: -5.927062511444092
    5. ',' → logprob: -6.052062511444092
    6. ' (' → logprob: -6.302062511444092
    7. ' ,' → logprob: -7.177062511444092
    8. '<|end|>' → logprob: -7.927062511444092
    9. '  ' → logprob: -8.17706298828125
    10. '(
' → logprob: -8.17706298828125

Token 83: ' permutations' (ID: 174595)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.41219258308410645
    2. 'product' → logprob: -1.5371925830841064
    3. ' permutations' → logprob: -2.4121925830841064
    4. 'chain' → logprob: -4.662192344665527
    5. ' product' → logprob: -4.912192344665527
    6. 'group' → logprob: -5.287192344665527
    7. 'com' → logprob: -5.537192344665527
    8. ' chain' → logprob: -6.287192344665527
    9. 'cycle' → logprob: -6.537192344665527
    10. 'is' → logprob: -6.537192344665527

Token 84: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.008608783595263958
    2. '<|end|>' → logprob: -5.508608818054199
    3. ' ,' → logprob: -6.383608818054199
    4. ',' → logprob: -6.883608818054199
    5. '  ' → logprob: -7.508608818054199
    6. ' import' → logprob: -7.633608818054199
    7. 'import' → logprob: -8.6336088180542
    8. ' 
' → logprob: -9.0086088180542
    9. '<|end|>' → logprob: -9.2586088180542
    10. ' (' → logprob: -9.6336088180542

Token 85: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.035579830408096313
    2. ' import' → logprob: -4.410579681396484
    3. 'import' → logprob: -4.910579681396484
    4. ',' → logprob: -5.160579681396484
    5. '<|end|>' → logprob: -5.660579681396484
    6. ' ,' → logprob: -6.785579681396484
    7. ' #' → logprob: -6.910579681396484
    8. ' (' → logprob: -7.160579681396484
    9. ' 
' → logprob: -7.160579681396484
    10. ' as' → logprob: -7.910579681396484

Token 86: ' Fon' (ID: 83815)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.30092790722846985
    2. 'import' → logprob: -1.6759278774261475
    3. ' Import' → logprob: -3.4259278774261475
    4. 'Import' → logprob: -4.300928115844727
    5. ' itertools' → logprob: -4.925928115844727
    6. ' Im' → logprob: -5.925928115844727
    7. ' importe' → logprob: -6.175928115844727
    8. ' permutations' → logprob: -6.300928115844727
    9. ' from' → logprob: -6.550928115844727
    10. 'Perm' → logprob: -6.675928115844727

Token 87: 'ctions' (ID: 2620)
  Prédit: 'ctions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ctions' → logprob: -0.008127043023705482
    2. 'ction' → logprob: -4.883127212524414
    3. 'ct' → logprob: -8.383127212524414
    4. 'import' → logprob: -8.883127212524414
    5. 't' → logprob: -9.133127212524414
    6. 'et' → logprob: -11.633127212524414
    7. 'c' → logprob: -12.008127212524414
    8. 'ections' → logprob: -12.508127212524414
    9. 'cts' → logprob: -13.008127212524414
    10. '```' → logprob: -13.008127212524414

Token 88: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 89: ' génér' (ID: 18939)
  Prédit: ' génér'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' génér' → logprob: -0.3625192940235138
    2. ' manip' → logprob: -1.8625192642211914
    3. ' créer' → logprob: -2.7375192642211914
    4. ' gérer' → logprob: -3.3625192642211914
    5. 'g' → logprob: -4.237519264221191
    6. ' travailler' → logprob: -4.237519264221191
    7. ' comb' → logprob: -5.362519264221191
    8. ' produire' → logprob: -5.987519264221191
    9. 'gener' → logprob: -6.487519264221191
    10. ' effectuer' → logprob: -6.612519264221191

Token 90: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.00020139472326263785
    2. 'érer' → logprob: -8.875201225280762
    3. 'ate' → logprob: -10.750201225280762
    4. 'ateur' → logprob: -11.500201225280762
    5. 'erer' → logprob: -11.625201225280762
    6. 'aler' → logprob: -12.500201225280762
    7. 'ator' → logprob: -12.500201225280762
    8. 'al' → logprob: -12.875201225280762
    9. 'ér' → logprob: -13.250201225280762
    10. 'ating' → logprob: -13.500201225280762

Token 91: ' comb' (ID: 4134)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.021737655624747276
    2. ' toutes' → logprob: -4.771737575531006
    3. 'des' → logprob: -5.146737575531006
    4. ' les' → logprob: -5.646737575531006
    5. ' ' → logprob: -6.146737575531006
    6. ' sequences' → logprob: -7.521737575531006
    7. ' all' → logprob: -8.271738052368164
    8. ' différentes' → logprob: -9.271738052368164
    9. ' permutations' → logprob: -9.646738052368164
    10. 's' → logprob: -9.771738052368164

Token 92: 'inais' (ID: 42744)
  Prédit: 'inations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inations' → logprob: -0.03392714262008667
    2. 'in' → logprob: -3.4089272022247314
    3. 'initions' → logprob: -9.533926963806152
    4. 'ination' → logprob: -9.783926963806152
    5. ' in' → logprob: -9.908926963806152
    6. 'inator' → logprob: -10.033926963806152
    7. '```' → logprob: -10.783926963806152
    8. 'inais' → logprob: -11.283926963806152
    9. 'ina' → logprob: -12.033926963806152
    10. 'inat' → logprob: -12.033926963806152

Token 93: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -1.3856492842023727e-06
    2. ' ons' → logprob: -14.375000953674316
    3. 'on' → logprob: -16.000001907348633
    4. 'ots' → logprob: -16.250001907348633
    5. 'os' → logprob: -16.875001907348633
    6. 'онс' → logprob: -16.875001907348633
    7. 'o' → logprob: -17.000001907348633
    8. 'sons' → logprob: -17.000001907348633
    9. '```' → logprob: -17.125001907348633
    10. '#' → logprob: -17.125001907348633

Token 94: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7569658160209656
    2. '<|end|>' → logprob: -0.7569658160209656
    3. ' ' → logprob: -3.6319658756256104
    4. ' ,' → logprob: -4.631965637207031
    5. 'et' → logprob: -5.006965637207031
    6. ' et' → logprob: -5.006965637207031
    7. ' and' → logprob: -5.881965637207031
    8. '<|end|>' → logprob: -6.131965637207031
    9. 'import' → logprob: -6.256965637207031
    10. 'from' → logprob: -6.756965637207031

Token 95: ' permutations' (ID: 174595)
  Prédit: ' product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' product' → logprob: -1.2479557991027832
    2. ' permutations' → logprob: -1.3729557991027832
    3. ' produits' → logprob: -1.7479557991027832
    4. ' ' → logprob: -2.247955799102783
    5. 'per' → logprob: -2.997955799102783
    6. 'product' → logprob: -2.997955799102783
    7. 'produ' → logprob: -2.997955799102783
    8. ' produit' → logprob: -4.122955799102783
    9. ' products' → logprob: -6.247955799102783
    10. ' arrangements' → logprob: -6.372955799102783

Token 96: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 97: 'non' (ID: 11741)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.30996209383010864
    2. ' ' → logprob: -1.6849620342254639
    3. ' utilisées' → logprob: -3.684962034225464
    4. ' non' → logprob: -4.559962272644043
    5. 'des' → logprob: -4.559962272644043
    6. ' utiles' → logprob: -4.684962272644043
    7. ' )' → logprob: -5.184962272644043
    8. ' utilisés' → logprob: -5.684962272644043
    9. ' ' → logprob: -5.934962272644043
    10. ')' → logprob: -5.934962272644043

Token 98: ' utilisées' (ID: 130009)
  Prédit: ' utilisées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisées' → logprob: -0.040515534579753876
    2. 'util' → logprob: -4.290515422821045
    3. ' utilisés' → logprob: -4.290515422821045
    4. ' utilisé' → logprob: -4.665515422821045
    5. ' utilisée' → logprob: -6.665515422821045
    6. ' used' → logprob: -7.165515422821045
    7. ' utilis' → logprob: -8.040515899658203
    8. ' utilizadas' → logprob: -8.665515899658203
    9. ' util' → logprob: -9.540515899658203
    10. ' ' → logprob: -9.915515899658203

Token 99: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0246520042419434
    2. ' ' → logprob: -1.6496520042419434
    3. ' )' → logprob: -1.6496520042419434
    4. ' ici' → logprob: -1.6496520042419434
    5. ' here' → logprob: -3.3996520042419434
    6. '<|end|>' → logprob: -4.274652004241943
    7. ' mais' → logprob: -5.399652004241943
    8. ' ' → logprob: -5.649652004241943
    9. 'here' → logprob: -6.524652004241943
    10. 'import' → logprob: -6.774652004241943

Token 100: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.37232547998428345
    2. '
' → logprob: -1.2473254203796387
    3. '<|end|>' → logprob: -5.247325420379639
    4. '


' → logprob: -5.622325420379639
    5. '#' → logprob: -5.747325420379639
    6. 'import' → logprob: -5.747325420379639
    7. '' → logprob: -6.122325420379639
    8. ' 

' → logprob: -6.622325420379639
    9. '



' → logprob: -7.372325420379639
    10. '
' → logprob: -7.497325420379639

Token 101: ' bis' (ID: 7204)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.004487919621169567
    2. 'math' → logprob: -6.004487991333008
    3. ' functools' → logprob: -7.004487991333008
    4. ' operator' → logprob: -8.004487991333008
    5. ' typing' → logprob: -8.004487991333008
    6. ' collections' → logprob: -9.129487991333008
    7. ' random' → logprob: -9.379487991333008
    8. ' bis' → logprob: -9.629487991333008
    9. ' copy' → logprob: -9.754487991333008
    10. ' os' → logprob: -10.629487991333008

Token 102: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.00011808603449026123
    2. 'import' → logprob: -9.875118255615234
    3. 't' → logprob: -11.000118255615234
    4. 'ector' → logprob: -11.875118255615234
    5. ' import' → logprob: -11.875118255615234
    6. 'ort' → logprob: -12.125118255615234
    7. 'ects' → logprob: -12.125118255615234
    8. 'e' → logprob: -12.250118255615234
    9. 'ected' → logprob: -12.500118255615234
    10. 'm' → logprob: -12.500118255615234

Token 103: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.00506048696115613
    2. ' ' → logprob: -5.50506067276001
    3. 'import' → logprob: -7.00506067276001
    4. '	import' → logprob: -9.755060195922852
    5. ' ' → logprob: -11.755060195922852
    6. '<|end|>' → logprob: -13.005060195922852
    7. ' ‌' → logprob: -13.505060195922852
    8. '_import' → logprob: -14.005060195922852
    9. ' importar' → logprob: -14.005060195922852
    10. ' ​' → logprob: -14.255060195922852

Token 104: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.07913168519735336
    2. ' ins' → logprob: -2.579131603240967
    3. 'bis' → logprob: -8.454132080078125
    4. 'ins' → logprob: -10.704132080078125
    5. ' ' → logprob: -12.704132080078125
    6. '_ins' → logprob: -13.454132080078125
    7. ' in' → logprob: -14.579132080078125
    8. ' binary' → logprob: -15.454132080078125
    9. '	b' → logprob: -15.579132080078125
    10. ' b' → logprob: -15.704132080078125

Token 105: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.0003550079127307981
    2. 'e' → logprob: -8.000354766845703
    3. 'ec' → logprob: -11.000354766845703
    4. 'ectl' → logprob: -13.375354766845703
    5. '```' → logprob: -15.375354766845703
    6. 'ecta' → logprob: -15.500354766845703
    7. '
' → logprob: -16.000354766845703
    8. 'ects' → logprob: -16.000354766845703
    9. 'c' → logprob: -16.375354766845703
    10. 'sect' → logprob: -16.500354766845703

Token 106: ',' (ID: 11)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.19939793646335602
    2. '_' → logprob: -1.8243979215621948
    3. '_right' → logprob: -3.9493980407714844
    4. '<|end|>' → logprob: -9.199398040771484
    5. ' _' → logprob: -10.074398040771484
    6. '_LEFT' → logprob: -10.824398040771484
    7. '_Left' → logprob: -11.949398040771484
    8. '_RIGHT' → logprob: -12.449398040771484
    9. ' ' → logprob: -12.824398040771484
    10. '_

' → logprob: -12.949398040771484

Token 107: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.8574212193489075
    2. ' bis' → logprob: -1.2324211597442627
    3. ' ins' → logprob: -1.7324211597442627
    4. 'ins' → logprob: -2.2324211597442627
    5. '_ins' → logprob: -10.982420921325684
    6. '```' → logprob: -11.607420921325684
    7. 'b' → logprob: -12.607420921325684
    8. '.ins' → logprob: -13.357420921325684
    9. ''ins' → logprob: -13.357420921325684
    10. '-ins' → logprob: -14.482420921325684

Token 108: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.000145137935760431
    2. 'e' → logprob: -8.875144958496094
    3. 'ec' → logprob: -12.500144958496094
    4. ' ect' → logprob: -15.250144958496094
    5. 'ct' → logprob: -15.375144958496094
    6. 't' → logprob: -15.500144958496094
    7. 'ext' → logprob: -15.625144958496094
    8. '
' → logprob: -16.125144958496094
    9. 'et' → logprob: -16.500144958496094
    10. 'n' → logprob: -16.500144958496094

Token 109: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.04028666391968727
    2. '_' → logprob: -3.4152867794036865
    3. '_right' → logprob: -5.040286540985107
    4. '_le' → logprob: -9.415287017822266
    5. '_

' → logprob: -10.665287017822266
    6. '_
' → logprob: -10.790287017822266
    7. ' _' → logprob: -12.540287017822266
    8. 'l' → logprob: -12.790287017822266
    9. 'r' → logprob: -13.040287017822266
    10. 'left' → logprob: -13.165287017822266

Token 110: ' ' (ID: 220)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09676042944192886
    2. ' ' → logprob: -2.4717605113983154
    3. '<|end|>' → logprob: -5.846760272979736
    4. ' ,' → logprob: -6.596760272979736
    5. ' #' → logprob: -6.721760272979736
    6. '#' → logprob: -7.471760272979736
    7. 'import' → logprob: -7.471760272979736
    8. '
' → logprob: -8.221760749816895
    9. '  ' → logprob: -8.471760749816895
    10. '<|end|>' → logprob: -8.971760749816895

Token 111: ' #' (ID: 1069)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02910228818655014
    2. ' ' → logprob: -3.904102325439453
    3. '<|end|>' → logprob: -5.529102325439453
    4. 'import' → logprob: -6.529102325439453
    5. ' ,' → logprob: -6.779102325439453
    6. ' #' → logprob: -7.529102325439453
    7. '
' → logprob: -7.904102325439453
    8. '#' → logprob: -8.154102325439453
    9. '  ' → logprob: -8.529102325439453
    10. '

' → logprob: -9.029102325439453

Token 112: ' Fon' (ID: 83815)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7023435831069946
    2. ' import' → logprob: -1.3273435831069946
    3. ' ins' → logprob: -1.8273435831069946
    4. ' bis' → logprob: -3.577343463897705
    5. 'bis' → logprob: -3.702343463897705
    6. 'ins' → logprob: -4.077343463897705
    7. ' importe' → logprob: -6.452343463897705
    8. ' functions' → logprob: -6.702343463897705
    9. ' ' → logprob: -6.827343463897705
    10. 'importe' → logprob: -7.077343463897705

Token 113: 'ctions' (ID: 2620)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.044346749782562256
    2. 'ction' → logprob: -3.669346809387207
    3. 'sect' → logprob: -4.294346809387207
    4. 'ctions' → logprob: -5.794346809387207
    5. 'ect' → logprob: -8.419346809387207
    6. 'cet' → logprob: -8.419346809387207
    7. 'c' → logprob: -8.794346809387207
    8. '```' → logprob: -8.794346809387207
    9. 'ce' → logprob: -9.169346809387207
    10. 'cte' → logprob: -9.544346809387207

Token 114: ' de' (ID: 334)
  Prédit: ' pour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pour' → logprob: -0.637292206287384
    2. ' for' → logprob: -1.6372921466827393
    3. ',' → logprob: -2.3872921466827393
    4. ' ' → logprob: -2.6372921466827393
    5. 'pour' → logprob: -2.7622921466827393
    6. 'import' → logprob: -4.262292385101318
    7. '<|end|>' → logprob: -4.762292385101318
    8. ' import' → logprob: -5.137292385101318
    9. ' from' → logprob: -5.762292385101318
    10. ' des' → logprob: -6.137292385101318

Token 115: ' recherche' (ID: 24975)
  Prédit: ' recherche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' recherche' → logprob: -0.06690502166748047
    2. ' bis' → logprob: -3.4419050216674805
    3. 'bis' → logprob: -4.4419050216674805
    4. 's' → logprob: -5.0669050216674805
    5. ' b' → logprob: -5.8169050216674805
    6. ' recherches' → logprob: -6.3169050216674805
    7. ' la' → logprob: -6.5669050216674805
    8. 'b' → logprob: -6.6919050216674805
    9. ' tri' → logprob: -6.9419050216674805
    10. 'ins' → logprob: -7.3169050216674805

Token 116: ' dich' (ID: 16637)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2359555959701538
    2. '_' → logprob: -1.2359555959701538
    3. '<|end|>' → logprob: -1.6109555959701538
    4. ' ' → logprob: -1.7359555959701538
    5. ' _' → logprob: -4.235955715179443
    6. 'import' → logprob: -4.860955715179443
    7. 's' → logprob: -5.610955715179443
    8. '_right' → logprob: -5.735955715179443
    9. ' ,' → logprob: -6.360955715179443
    10. '<|end|>' → logprob: -6.485955715179443

Token 117: 'otom' (ID: 195780)
  Prédit: 'ot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.04080832004547119
    2. 'otom' → logprob: -3.2908082008361816
    3. 'o' → logprob: -7.040808200836182
    4. 'ro' → logprob: -7.165808200836182
    5. 'otomy' → logprob: -8.29080867767334
    6. ' ot' → logprob: -8.29080867767334
    7. 'oto' → logprob: -9.16580867767334
    8. '_ot' → logprob: -9.16580867767334
    9. '	' → logprob: -9.54080867767334
    10. 'er' → logprob: -9.79080867767334

Token 118: 'ique' (ID: 2222)
  Prédit: 'ie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.3013928532600403
    2. 'ique' → logprob: -1.6763927936553955
    3. 'e' → logprob: -3.1763927936553955
    4. 'ale' → logprob: -3.9263927936553955
    5. 'que' → logprob: -5.551393032073975
    6. 'al' → logprob: -5.676393032073975
    7. 'gue' → logprob: -6.676393032073975
    8. 'alie' → logprob: -6.676393032073975
    9. 'gie' → logprob: -7.676393032073975
    10. 'aie' → logprob: -7.801393032073975

Token 119: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 120: 'non' (ID: 11741)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8486692905426025
    2. ' bis' → logprob: -1.2236692905426025
    3. ' ' → logprob: -3.0986692905426025
    4. ',' → logprob: -3.2236692905426025
    5. ' )' → logprob: -3.2236692905426025
    6. ')' → logprob: -3.3486692905426025
    7. ' non' → logprob: -3.8486692905426025
    8. 'import' → logprob: -3.8486692905426025
    9. 'bis' → logprob: -4.223669052124023
    10. ' utilisées' → logprob: -4.473669052124023

Token 121: ' utilisées' (ID: 130009)
  Prédit: ' utilisées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisées' → logprob: -0.04980519413948059
    2. 'util' → logprob: -3.299805164337158
    3. ' utilisés' → logprob: -5.174805164337158
    4. ' utilisé' → logprob: -6.424805164337158
    5. ' utilisée' → logprob: -6.549805164337158
    6. 'import' → logprob: -6.799805164337158
    7. ' import' → logprob: -7.549805164337158
    8. ' ' → logprob: -7.924805164337158
    9. ' utilizadas' → logprob: -8.924805641174316
    10. 'used' → logprob: -8.924805641174316

Token 122: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004963174578733742
    2. ' )' → logprob: -7.8754963874816895
    3. ')
' → logprob: -10.250495910644531
    4. 'import' → logprob: -10.750495910644531
    5. ')#' → logprob: -11.125495910644531
    6. ',' → logprob: -11.250495910644531
    7. '#' → logprob: -11.500495910644531
    8. ')

' → logprob: -11.500495910644531
    9. '```' → logprob: -12.625495910644531
    10. '`)' → logprob: -13.125495910644531

Token 123: '#' (ID: 2)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.49908289313316345
    2. '
' → logprob: -0.9990829229354858
    3. 'def' → logprob: -5.124083042144775
    4. 'class' → logprob: -5.124083042144775
    5. 'import' → logprob: -5.374083042144775
    6. '


' → logprob: -5.874083042144775
    7. '#' → logprob: -6.249083042144775
    8. '
 
' → logprob: -7.124083042144775
    9. '
    
' → logprob: -7.749083042144775
    10. '



' → logprob: -7.999083042144775

Token 124: ' Dé' (ID: 27247)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5324015617370605
    2. 'd' → logprob: -1.7824015617370605
    3. '#' → logprob: -2.9074015617370605
    4. ' def' → logprob: -3.1574015617370605
    5. ' ' → logprob: -3.6574015617370605
    6. ' class' → logprob: -3.6574015617370605
    7. 'class' → logprob: -3.9074015617370605
    8. ' input' → logprob: -3.9074015617370605
    9. ' d' → logprob: -4.0324015617370605
    10. 'input' → logprob: -4.9074015617370605

Token 125: 'fin' (ID: 6994)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.013053048402071
    2. 'fin' → logprob: -4.388052940368652
    3. '#' → logprob: -7.763052940368652
    4. 'fi' → logprob: -10.263052940368652
    5. 'def' → logprob: -11.013052940368652
    6. '
' → logprob: -11.138052940368652
    7. 'fine' → logprob: -11.263052940368652
    8. '```' → logprob: -11.513052940368652
    9. '' → logprob: -12.513052940368652
    10. 'ff' → logprob: -12.888052940368652

Token 126: 'ition' (ID: 868)
  Prédit: 'inition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inition' → logprob: -0.3008028566837311
    2. 'ition' → logprob: -2.0508029460906982
    3. 'inir' → logprob: -3.1758029460906982
    4. 'def' → logprob: -3.6758029460906982
    5. 'ine' → logprob: -3.6758029460906982
    6. 'ir' → logprob: -3.9258029460906982
    7. 'class' → logprob: -4.550802707672119
    8. 'er' → logprob: -6.300802707672119
    9. 'initions' → logprob: -6.550802707672119
    10. 'f' → logprob: -7.175802707672119

Token 127: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05485453084111214
    2. '_' → logprob: -4.054854393005371
    3. ' de' → logprob: -4.554854393005371
    4. ' class' → logprob: -4.554854393005371
    5. '<|end|>' → logprob: -5.429854393005371
    6. 'class' → logprob: -5.929854393005371
    7. ' ' → logprob: -6.429854393005371
    8. ' d' → logprob: -6.554854393005371
    9. ' a' → logprob: -7.179854393005371
    10. 'def' → logprob: -7.304854393005371

Token 128: ''une' (ID: 13337)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.3334029018878937
    2. ''une' → logprob: -1.8334028720855713
    3. ' ' → logprob: -3.5834028720855713
    4. ''' → logprob: -3.9584028720855713
    5. ''un' → logprob: -4.20840311050415
    6. ' e' → logprob: -4.45840311050415
    7. 'es' → logprob: -4.70840311050415
    8. ' une' → logprob: -4.95840311050415
    9. 'u' → logprob: -5.08340311050415
    10. ' a' → logprob: -5.20840311050415

Token 129: ' fonction' (ID: 17610)
  Prédit: ' class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' class' → logprob: -1.0227519273757935
    2. 'class' → logprob: -1.3977519273757935
    3. 'classe' → logprob: -1.3977519273757935
    4. ' classe' → logprob: -2.272751808166504
    5. ' fonction' → logprob: -4.272751808166504
    6. 'fonction' → logprob: -4.522751808166504
    7. ' function' → logprob: -5.772751808166504
    8. 'Classe' → logprob: -6.147751808166504
    9. ' liste' → logprob: -6.272751808166504
    10. ' ' → logprob: -6.522751808166504

Token 130: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4842589497566223
    2. ' def' → logprob: -0.9842589497566223
    3. ' de' → logprob: -5.734259128570557
    4. ' ' → logprob: -5.984259128570557
    5. 's' → logprob: -7.359259128570557
    6. ' d' → logprob: -7.609259128570557
    7. ' calculate' → logprob: -7.984259128570557
    8. ' solve' → logprob: -8.234258651733398
    9. 'de' → logprob: -8.359258651733398
    10. ' read' → logprob: -8.734258651733398

Token 131: ' calcul' (ID: 7559)
  Prédit: ' lire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lire' → logprob: -0.39398854970932007
    2. ' tr' → logprob: -1.5189886093139648
    3. ' calcul' → logprob: -3.518988609313965
    4. 'tr' → logprob: -4.143988609313965
    5. ' résoudre' → logprob: -4.393988609313965
    6. ' traiter' → logprob: -4.643988609313965
    7. 'l' → logprob: -5.143988609313965
    8. ' main' → logprob: -5.393988609313965
    9. ' read' → logprob: -5.518988609313965
    10. ' gérer' → logprob: -5.518988609313965

Token 132: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.042516738176345825
    2. 'ate' → logprob: -3.4175167083740234
    3. 'atrice' → logprob: -5.667516708374023
    4. 'ating' → logprob: -6.042516708374023
    5. 'def' → logprob: -6.292516708374023
    6. 'ateur' → logprob: -7.792516708374023
    7. '#' → logprob: -8.667516708374023
    8. 'a' → logprob: -9.542516708374023
    9. '<|end|>' → logprob: -9.542516708374023
    10. 'ation' → logprob: -9.792516708374023

Token 133: ' le' (ID: 505)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.897229790687561
    2. ' la' → logprob: -1.147229790687561
    3. ' ' → logprob: -1.772229790687561
    4. ' l' → logprob: -3.1472296714782715
    5. ' le' → logprob: -4.2722296714782715
    6. 'l' → logprob: -4.7722296714782715
    7. '_l' → logprob: -4.8972296714782715
    8. '_la' → logprob: -5.0222296714782715
    9. '_le' → logprob: -5.6472296714782715
    10. 's' → logprob: -5.8972296714782715

Token 134: ' plus' (ID: 2932)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.8853363990783691
    2. 'plus' → logprob: -1.6353363990783691
    3. ' plus' → logprob: -1.7603363990783691
    4. 'nombre' → logprob: -2.385336399078369
    5. 's' → logprob: -4.010336399078369
    6. ' maximum' → logprob: -4.385336399078369
    7. ' prochain' → logprob: -4.635336399078369
    8. ' chemin' → logprob: -4.760336399078369
    9. ' facteur' → logprob: -5.010336399078369
    10. ' score' → logprob: -5.135336399078369

Token 135: ' grand' (ID: 6363)
  Prédit: ' court'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' court' → logprob: -0.8003247976303101
    2. 'court' → logprob: -1.30032479763031
    3. ' long' → logprob: -1.42532479763031
    4. 'long' → logprob: -4.1753249168396
    5. ' grand' → logprob: -5.1753249168396
    6. '_' → logprob: -5.3003249168396
    7. 'grand' → logprob: -5.5503249168396
    8. '```' → logprob: -6.5503249168396
    9. '_long' → logprob: -7.0503249168396
    10. 's' → logprob: -7.1753249168396

Token 136: ' commun' (ID: 2797)
  Prédit: 'commun'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'commun' → logprob: -0.7918941378593445
    2. 'div' → logprob: -2.5418941974639893
    3. '_' → logprob: -2.6668941974639893
    4. '```' → logprob: -3.0418941974639893
    5. 'nombre' → logprob: -3.1668941974639893
    6. ' ' → logprob: -3.1668941974639893
    7. 'fact' → logprob: -3.4168941974639893
    8. 's' → logprob: -3.5418941974639893
    9. ' facteur' → logprob: -3.5418941974639893
    10. ' palindrome' → logprob: -3.7918941974639893

Token 137: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.0023249832447618246
    2. ' div' → logprob: -6.127325057983398
    3. '_div' → logprob: -9.877325057983398
    4. '<div' → logprob: -10.377325057983398
    5. '	div' → logprob: -10.627325057983398
    6. '(div' → logprob: -11.752325057983398
    7. '```' → logprob: -12.127325057983398
    8. 'd' → logprob: -12.752325057983398
    9. 'multiple' → logprob: -13.002325057983398
    10. 'fact' → logprob: -13.127325057983398

Token 138: 'iseur' (ID: 108637)
  Prédit: 'iseur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iseur' → logprob: -0.002246011747047305
    2. 'ise' → logprob: -6.252245903015137
    3. '```' → logprob: -9.127245903015137
    4. 'is' → logprob: -9.627245903015137
    5. 'isateur' → logprob: -10.377245903015137
    6. 'isible' → logprob: -10.877245903015137
    7. ' is' → logprob: -11.127245903015137
    8. 'i' → logprob: -11.377245903015137
    9. 'iseau' → logprob: -11.502245903015137
    10. '#' → logprob: -11.627245903015137

Token 139: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0303431749343872
    2. ' (' → logprob: -1.1553431749343872
    3. '(' → logprob: -1.7803431749343872
    4. '_' → logprob: -2.0303430557250977
    5. ' def' → logprob: -4.780343055725098
    6. ' ' → logprob: -5.155343055725098
    7. ',' → logprob: -5.530343055725098
    8. ' _' → logprob: -6.405343055725098
    9. '_def' → logprob: -6.905343055725098
    10. ' (
' → logprob: -7.030343055725098

Token 140: 'g' (ID: 70)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.034322768449783325
    2. ' def' → logprob: -4.034322738647461
    3. ')' → logprob: -4.659322738647461
    4. ' gcd' → logprob: -5.284322738647461
    5. 'g' → logprob: -7.534322738647461
    6. ' (' → logprob: -8.034322738647461
    7. ' )' → logprob: -8.159322738647461
    8. ',' → logprob: -8.909322738647461
    9. 'de' → logprob: -10.284322738647461
    10. ' de' → logprob: -10.909322738647461

Token 141: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.05255090817809105
    2. ')' → logprob: -3.927550792694092
    3. 'def' → logprob: -4.552550792694092
    4. 'CD' → logprob: -4.927550792694092
    5. 'reat' → logprob: -5.177550792694092
    6. 'u' → logprob: -6.052550792694092
    7. ' gcd' → logprob: -6.302550792694092
    8. 'c' → logprob: -7.177550792694092
    9. ' )' → logprob: -7.302550792694092
    10. 'a' → logprob: -7.927550792694092

Token 142: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08916247636079788
    2. 'def' → logprob: -3.089162588119507
    3. ' )' → logprob: -4.089162349700928
    4. '(' → logprob: -4.089162349700928
    5. '(
' → logprob: -6.214162349700928
    6. 'import' → logprob: -6.964162349700928
    7. '(a' → logprob: -7.089162349700928
    8. ',' → logprob: -7.339162349700928
    9. 'a' → logprob: -7.714162349700928
    10. '_' → logprob: -7.714162349700928

Token 143: ' greatest' (ID: 16983)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14432886242866516
    2. ' )' → logprob: -2.2693288326263428
    3. 'def' → logprob: -3.7693288326263428
    4. '(a' → logprob: -5.894329071044922
    5. 'a' → logprob: -6.519329071044922
    6. ' def' → logprob: -7.394329071044922
    7. ' ' → logprob: -7.519329071044922
    8. ' math' → logprob: -7.769329071044922
    9. ' a' → logprob: -8.144329071044922
    10. ' gcd' → logprob: -8.519329071044922

Token 144: ' common' (ID: 5355)
  Prédit: ' common'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' common' → logprob: -0.16903088986873627
    2. 'common' → logprob: -2.0440309047698975
    3. ' ' → logprob: -4.794030666351318
    4. '<|end|>' → logprob: -4.919030666351318
    5. '_common' → logprob: -5.169030666351318
    6. ' commun' → logprob: -6.294030666351318
    7. 'commun' → logprob: -6.544030666351318
    8. 'div' → logprob: -8.419031143188477
    9. '```' → logprob: -8.669031143188477
    10. 'comm' → logprob: -8.669031143188477

Token 145: ' divisor' (ID: 100482)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.05128873884677887
    2. ' divisor' → logprob: -3.6762888431549072
    3. '_div' → logprob: -4.551288604736328
    4. 'den' → logprob: -5.551288604736328
    5. ' div' → logprob: -5.551288604736328
    6. ' ' → logprob: -6.926288604736328
    7. 'factor' → logprob: -6.926288604736328
    8. '_' → logprob: -7.426288604736328
    9. ' divis' → logprob: -7.551288604736328
    10. '<|end|>' → logprob: -7.676288604736328

Token 146: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14406590163707733
    2. 'def' → logprob: -2.7690658569335938
    3. '(' → logprob: -3.0190658569335938
    4. ' )' → logprob: -4.144065856933594
    5. ' def' → logprob: -6.019065856933594
    6. '(
' → logprob: -6.394065856933594
    7. ',' → logprob: -7.144065856933594
    8. '_' → logprob: -7.394065856933594
    9. ' ' → logprob: -8.269065856933594
    10. ' (' → logprob: -8.394065856933594

Token 147: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.013929713517427444
    2. ' def' → logprob: -4.513929843902588
    3. '
' → logprob: -6.013929843902588
    4. ' 
' → logprob: -8.51392936706543
    5. '(
' → logprob: -9.38892936706543
    6. '(' → logprob: -10.76392936706543
    7. '

' → logprob: -11.13892936706543
    8. '\' → logprob: -11.26392936706543
    9. ' de' → logprob: -11.51392936706543
    10. 'de' → logprob: -11.51392936706543

Token 148: ' gcd' (ID: 106918)
  Prédit: ' gcd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gcd' → logprob: -0.00447616633027792
    2. 'g' → logprob: -5.504476070404053
    3. ' pg' → logprob: -8.254476547241211
    4. ' ' → logprob: -9.504476547241211
    5. ' g' → logprob: -10.504476547241211
    6. '	g' → logprob: -11.004476547241211
    7. '_g' → logprob: -11.629476547241211
    8. ' ' → logprob: -13.129476547241211
    9. ' math' → logprob: -13.379476547241211
    10. 'pg' → logprob: -13.379476547241211

Token 149: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2527848184108734
    2. '(a' → logprob: -1.5027848482131958
    3. '(x' → logprob: -7.377784729003906
    4. ' (' → logprob: -8.627784729003906
    5. '(n' → logprob: -10.752784729003906
    6. '(num' → logprob: -11.502784729003906
    7. '(
' → logprob: -12.377784729003906
    8. 'a' → logprob: -13.252784729003906
    9. '(

' → logprob: -13.752784729003906
    10. '(A' → logprob: -14.002784729003906

Token 150: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023977462842594832
    2. ' ,' → logprob: -8.625239372253418
    3. ',b' → logprob: -9.750239372253418
    4. ',
' → logprob: -14.000239372253418
    5. ',a' → logprob: -14.625239372253418
    6. '):' → logprob: -16.125240325927734
    7. ',n' → logprob: -16.375240325927734
    8. ',int' → logprob: -16.625240325927734
    9. ' ' → logprob: -16.750240325927734
    10. 'b' → logprob: -16.875240325927734

Token 151: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6931484341621399
    2. ' b' → logprob: -0.6931484341621399
    3. ' ' → logprob: -13.693148612976074
    4. ')b' → logprob: -17.568147659301758
    5. '	b' → logprob: -17.693147659301758
    6. ' ' → logprob: -17.943147659301758
    7. ',b' → logprob: -18.443147659301758
    8. '  ' → logprob: -18.943147659301758
    9. '   ' → logprob: -19.568147659301758
    10. ',' → logprob: -19.693147659301758

Token 152: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010409059468656778
    2. ')' → logprob: -7.251040935516357
    3. '):
' → logprob: -8.2510404586792
    4. ':' → logprob: -9.6260404586792
    5. ' ):' → logprob: -12.7510404586792
    6. '):
' → logprob: -14.2510404586792
    7. '):

' → logprob: -16.501041412353516
    8. '():' → logprob: -17.251041412353516
    9. ' :' → logprob: -17.376041412353516
    10. ')：' → logprob: -17.376041412353516

Token 153: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006393353454768658
    2. ' :' → logprob: -5.2563934326171875
    3. ':return' → logprob: -7.3813934326171875
    4. ':
' → logprob: -8.381393432617188
    5. '   ' → logprob: -8.881393432617188
    6. ' ' → logprob: -10.006393432617188
    7. '):' → logprob: -10.131393432617188
    8. ' :
' → logprob: -10.131393432617188
    9. ' return' → logprob: -11.631393432617188
    10. ',' → logprob: -12.131393432617188

Token 154: ' #' (ID: 1069)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.07308917492628098
    2. ' if' → logprob: -3.448089122772217
    3. ' return' → logprob: -3.573089122772217
    4. 'while' → logprob: -4.823089122772217
    5. '   ' → logprob: -6.948089122772217
    6. ' ' → logprob: -7.448089122772217
    7. 'if' → logprob: -7.448089122772217
    8. '    
' → logprob: -9.073089599609375
    9. 'return' → logprob: -9.198089599609375
    10. '    ' → logprob: -9.323089599609375

Token 155: ' Pr' (ID: 2284)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.11678462475538254
    2. 'while' → logprob: -2.6167845726013184
    3. ' return' → logprob: -3.3667845726013184
    4. 'return' → logprob: -6.616784572601318
    5. ' if' → logprob: -7.241784572601318
    6. '   ' → logprob: -7.866784572601318
    7. 'if' → logprob: -8.991785049438477
    8. '
' → logprob: -10.491785049438477
    9. ' """' → logprob: -10.491785049438477
    10. '    
' → logprob: -10.991785049438477

Token 156: 'end' (ID: 419)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8874095678329468
    2. 'es' → logprob: -1.7624095678329468
    3. 'eturn' → logprob: -1.7624095678329468
    4. 'é' → logprob: -2.3874096870422363
    5. '   ' → logprob: -2.6374096870422363
    6. 'int' → logprob: -3.6374096870422363
    7. 'ef' → logprob: -4.137409687042236
    8. 'em' → logprob: -4.887409687042236
    9. 'és' → logprob: -5.387409687042236
    10. 'ec' → logprob: -5.512409687042236

Token 157: ' deux' (ID: 10301)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02364419773221016
    2. '   ' → logprob: -4.523643970489502
    3. ' a' → logprob: -5.023643970489502
    4. ' while' → logprob: -5.898643970489502
    5. '  ' → logprob: -6.398643970489502
    6. 'a' → logprob: -7.398643970489502
    7. ' return' → logprob: -7.648643970489502
    8. 'while' → logprob: -8.89864444732666
    9. '    ' → logprob: -9.39864444732666
    10. ' un' → logprob: -10.39864444732666

Token 158: ' nombres' (ID: 76205)
  Prédit: ' nombres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.4561999440193176
    2. ' ent' → logprob: -1.9561998844146729
    3. ' integers' → logprob: -2.081199884414673
    4. ' ' → logprob: -2.581199884414673
    5. ' a' → logprob: -4.331200122833252
    6. ' nombre' → logprob: -5.831200122833252
    7. ' entier' → logprob: -5.831200122833252
    8. ' numbers' → logprob: -6.831200122833252
    9. ' valeurs' → logprob: -7.081200122833252
    10. 'a' → logprob: -7.206200122833252

Token 159: ' '' (ID: 461)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.041917674243450165
    2. ' a' → logprob: -4.16691780090332
    3. ',' → logprob: -4.54191780090332
    4. ' ,' → logprob: -5.04191780090332
    5. ' )' → logprob: -5.91691780090332
    6. 'a' → logprob: -6.41691780090332
    7. ')' → logprob: -6.54191780090332
    8. '  ' → logprob: -7.41691780090332
    9. ' et' → logprob: -7.91691780090332
    10. '<|end|>' → logprob: -8.04191780090332

Token 160: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2096288502216339
    2. ' a' → logprob: -1.8346288204193115
    3. ',' → logprob: -3.9596288204193115
    4. ' ' → logprob: -4.834629058837891
    5. ' ,' → logprob: -6.709629058837891
    6. ' integers' → logprob: -7.959629058837891
    7. '   ' → logprob: -8.95962905883789
    8. ' en' → logprob: -9.08462905883789
    9. ')' → logprob: -9.45962905883789
    10. ' )' → logprob: -9.83462905883789

Token 161: ''' (ID: 6)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06533939391374588
    2. ''' → logprob: -2.8153393268585205
    3. '',' → logprob: -6.5653395652771
    4. ' '' → logprob: -7.1903395652771
    5. ' ,' → logprob: -7.4403395652771
    6. ','' → logprob: -7.5653395652771
    7. '   ' → logprob: -9.940339088439941
    8. ' ,'' → logprob: -10.940339088439941
    9. ',b' → logprob: -11.065339088439941
    10. ' ',' → logprob: -12.065339088439941

Token 162: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07598548382520676
    2. '   ' → logprob: -3.0759854316711426
    3. ' ,' → logprob: -3.9509854316711426
    4. ' et' → logprob: -5.700985431671143
    5. ' ' → logprob: -5.950985431671143
    6. ')' → logprob: -8.0759859085083
    7. ' )' → logprob: -8.3259859085083
    8. ' %' → logprob: -8.3259859085083
    9. '%' → logprob: -8.5759859085083
    10. ' and' → logprob: -8.8259859085083

Token 163: ' '' (ID: 461)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.48877984285354614
    2. ' b' → logprob: -0.9887798428535461
    3. ' '' → logprob: -4.8637800216674805
    4. ''b' → logprob: -5.1137800216674805
    5. ''' → logprob: -7.6137800216674805
    6. ' ' → logprob: -8.23878002166748
    7. '   ' → logprob: -9.48878002166748
    8. '  ' → logprob: -11.48878002166748
    9. '    ' → logprob: -12.73878002166748
    10. ' ' → logprob: -12.86378002166748

Token 164: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.023246292024850845
    2. ' b' → logprob: -3.7732462882995605
    3. ' ' → logprob: -15.023246765136719
    4. ''b' → logprob: -15.023246765136719
    5. ''' → logprob: -16.89824676513672
    6. ' '' → logprob: -17.14824676513672
    7. '   ' → logprob: -18.77324676513672
    8. '  ' → logprob: -19.39824676513672
    9. ' ' → logprob: -19.89824676513672
    10. 'a' → logprob: -20.64824676513672

Token 165: ''' (ID: 6)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7653874754905701
    2. ''' → logprob: -1.6403875350952148
    3. ')' → logprob: -2.390387535095215
    4. ' '' → logprob: -2.515387535095215
    5. ':' → logprob: -2.640387535095215
    6. ',' → logprob: -3.390387535095215
    7. '):' → logprob: -3.640387535095215
    8. ' et' → logprob: -4.640387535095215
    9. ' ' → logprob: -5.015387535095215
    10. ' :' → logprob: -5.140387535095215

Token 166: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0035000499337911606
    2. ':' → logprob: -6.628499984741211
    3. ' while' → logprob: -6.628499984741211
    4. 'while' → logprob: -8.628499984741211
    5. ',' → logprob: -8.753499984741211
    6. ' :' → logprob: -8.878499984741211
    7. '    ' → logprob: -8.878499984741211
    8. '	while' → logprob: -9.878499984741211
    9. '    
' → logprob: -10.128499984741211
    10. '
' → logprob: -10.378499984741211

Token 167: ' va' (ID: 3423)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.7405374050140381
    2. '   ' → logprob: -1.365537405014038
    3. ' return' → logprob: -1.365537405014038
    4. 'while' → logprob: -4.990537643432617
    5. 'return' → logprob: -6.615537643432617
    6. '    
' → logprob: -6.740537643432617
    7. ' """' → logprob: -6.990537643432617
    8. ' returns' → logprob: -7.740537643432617
    9. ' retourne' → logprob: -7.990537643432617
    10. '    ' → logprob: -8.365537643432617

Token 168: ' placer' (ID: 55591)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6548818945884705
    2. '   ' → logprob: -1.0298819541931152
    3. ' while' → logprob: -2.5298819541931152
    4. 'return' → logprob: -4.404881954193115
    5. '    ' → logprob: -4.779881954193115
    6. ' ' → logprob: -5.029881954193115
    7. 'while' → logprob: -5.154881954193115
    8. ' calcul' → logprob: -5.779881954193115
    9. ' retourner' → logprob: -5.904881954193115
    10. '  ' → logprob: -6.279881954193115

Token 169: ' le' (ID: 505)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6791003346443176
    2. ' ' → logprob: -2.179100275039673
    3. 'a' → logprob: -2.429100275039673
    4. ' le' → logprob: -2.679100275039673
    5. ' un' → logprob: -2.929100275039673
    6. ' la' → logprob: -3.054100275039673
    7. '   ' → logprob: -3.554100275039673
    8. ' les' → logprob: -3.929100275039673
    9. ' une' → logprob: -4.054100513458252
    10. ' while' → logprob: -4.429100513458252

Token 170: ' plus' (ID: 2932)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.8739104866981506
    2. ' while' → logprob: -1.2489104270935059
    3. 'reste' → logprob: -2.248910427093506
    4. 'r' → logprob: -2.498910427093506
    5. ' reste' → logprob: -2.998910427093506
    6. 'if' → logprob: -4.998910427093506
    7. ' r' → logprob: -5.123910427093506
    8. '   ' → logprob: -5.248910427093506
    9. 'plus' → logprob: -5.248910427093506
    10. 'rest' → logprob: -5.498910427093506

Token 171: ' grand' (ID: 6363)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 172: ' dans' (ID: 2671)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5941386222839355
    2. '<|end|>' → logprob: -1.2191386222839355
    3. '  ' → logprob: -2.8441386222839355
    4. 'a' → logprob: -3.3441386222839355
    5. ' a' → logprob: -3.9691386222839355
    6. ' des' → logprob: -5.0941386222839355
    7. 'des' → logprob: -5.4691386222839355
    8. '    ' → logprob: -5.8441386222839355
    9. '<|end|>' → logprob: -6.0941386222839355
    10. ' "' → logprob: -6.3441386222839355

Token 173: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.46678683161735535
    2. 'b' → logprob: -1.2167868614196777
    3. ' b' → logprob: -3.0917868614196777
    4. ' a' → logprob: -3.4667868614196777
    5. '   ' → logprob: -9.71678638458252
    6. 'max' → logprob: -10.34178638458252
    7. ' ' → logprob: -10.71678638458252
    8. ' max' → logprob: -10.84178638458252
    9. 'if' → logprob: -11.71678638458252
    10. ' if' → logprob: -11.96678638458252

Token 174: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.158490851521492
    2. '   ' → logprob: -2.0334908962249756
    3. 'while' → logprob: -5.1584906578063965
    4. ' while' → logprob: -5.4084906578063965
    5. ' if' → logprob: -5.9084906578063965
    6. 'if' → logprob: -7.1584906578063965
    7. ' ,' → logprob: -7.2834906578063965
    8. ' =' → logprob: -8.158491134643555
    9. 'a' → logprob: -8.658491134643555
    10. 'def' → logprob: -8.908491134643555

Token 175: ' le' (ID: 505)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.31458669900894165
    2. 'b' → logprob: -1.3145866394042969
    3. '   ' → logprob: -6.814586639404297
    4. 'le' → logprob: -9.314586639404297
    5. ' le' → logprob: -9.439586639404297
    6. ' ' → logprob: -10.939586639404297
    7. ' the' → logprob: -11.189586639404297
    8. '  ' → logprob: -12.189586639404297
    9. ' while' → logprob: -12.314586639404297
    10. '    ' → logprob: -12.814586639404297

Token 176: ' plus' (ID: 2932)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.18455953896045685
    2. ' b' → logprob: -1.9345595836639404
    3. ' smaller' → logprob: -4.309559345245361
    4. ' next' → logprob: -5.309559345245361
    5. ' rest' → logprob: -7.059559345245361
    6. '<|end|>' → logprob: -7.059559345245361
    7. ' smallest' → logprob: -7.184559345245361
    8. ' remainder' → logprob: -7.309559345245361
    9. 'a' → logprob: -8.05955982208252
    10. ' second' → logprob: -8.30955982208252

Token 177: ' petit' (ID: 20577)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 178: ' dans' (ID: 2671)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 179: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3868725001811981
    2. ' b' → logprob: -1.1368725299835205
    3. ' ' → logprob: -14.511872291564941
    4. '<|end|>' → logprob: -15.136872291564941
    5. '	b' → logprob: -15.261872291564941
    6. '   ' → logprob: -15.261872291564941
    7. ' ' → logprob: -16.386873245239258
    8. '(b' → logprob: -17.261873245239258
    9. ' s' → logprob: -17.386873245239258
    10. ' the' → logprob: -17.511873245239258

Token 180: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001911265542730689
    2. '    
' → logprob: -6.501911163330078
    3. '
' → logprob: -8.126911163330078
    4. ',' → logprob: -10.001911163330078
    5. ' while' → logprob: -11.001911163330078
    6. '   
' → logprob: -11.126911163330078
    7. '  
' → logprob: -11.876911163330078
    8. '    ' → logprob: -11.876911163330078
    9. ' 
' → logprob: -12.001911163330078
    10. 'a' → logprob: -12.501911163330078

Token 181: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009360060095787048
    2. '
' → logprob: -5.509359836578369
    3. '    
' → logprob: -5.634359836578369
    4. ' while' → logprob: -7.259359836578369
    5. '<|end|>' → logprob: -8.384360313415527
    6. ' 
' → logprob: -8.884360313415527
    7. ',' → logprob: -9.009360313415527
    8. '  
' → logprob: -9.009360313415527
    9. ':' → logprob: -9.384360313415527
    10. '   
' → logprob: -9.509360313415527

Token 182: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19563592970371246
    2. ' while' → logprob: -2.570636034011841
    3. '    
' → logprob: -2.570636034011841
    4. ' 
' → logprob: -4.195635795593262
    5. '
' → logprob: -5.820635795593262
    6. 'while' → logprob: -6.445635795593262
    7. 'a' (adapté à ' a') → logprob: -6.445635795593262
    8. '    ' → logprob: -6.945635795593262
    9. '     
' → logprob: -7.195635795593262
    10. ' if' → logprob: -7.445635795593262

Token 183: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018911674851551652
    2. ' ,' → logprob: -9.125188827514648
    3. '=' → logprob: -10.250188827514648
    4. ',b' → logprob: -10.375188827514648
    5. ',a' → logprob: -12.000188827514648
    6. ' =' → logprob: -12.750188827514648
    7. 'a' → logprob: -13.875188827514648
    8. ',
' → logprob: -14.125188827514648
    9. 'b' → logprob: -14.625188827514648
    10. '>' → logprob: -14.625188827514648

Token 184: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.20141363143920898
    2. ' b' → logprob: -1.701413631439209
    3. ' ' → logprob: -15.451414108276367
    4. '    ' → logprob: -16.076414108276367
    5. '   ' → logprob: -16.951414108276367
    6. '	b' → logprob: -17.326414108276367
    7. '<|end|>' → logprob: -19.826414108276367
    8. '  ' → logprob: -20.201414108276367
    9. '=' → logprob: -20.326414108276367
    10. ' =' → logprob: -20.701414108276367

Token 185: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5761326551437378
    2. ' =' → logprob: -0.8261326551437378
    3. ',' → logprob: -8.576132774353027
    4. '=a' → logprob: -13.451132774353027
    5. ' =
' → logprob: -13.951132774353027
    6. '=
' → logprob: -14.576132774353027
    7. 'a' → logprob: -14.701132774353027
    8. ' ' → logprob: -14.826132774353027
    9. '=

' → logprob: -15.201132774353027
    10. '   ' → logprob: -15.951132774353027

Token 186: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.584700345993042
    2. '(max' → logprob: -0.834700345993042
    3. '(b' → logprob: -5.709700584411621
    4. ' max' → logprob: -5.834700584411621
    5. '(a' → logprob: -6.709700584411621
    6. 'b' → logprob: -6.834700584411621
    7. 'a' → logprob: -9.084700584411621
    8. ' (' → logprob: -9.959700584411621
    9. '(abs' → logprob: -11.084700584411621
    10. 'abs' → logprob: -12.709700584411621

Token 187: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -3.054500666621607e-06
    2. '(' → logprob: -12.87500286102295
    3. 'a' → logprob: -14.75000286102295
    4. '((' → logprob: -18.000003814697266
    5. '(A' → logprob: -18.750003814697266
    6. '(abs' → logprob: -19.250003814697266
    7. ' (' → logprob: -19.375003814697266
    8. '(
' → logprob: -20.125003814697266
    9. '(s' → logprob: -21.125003814697266
    10. '(ab' → logprob: -21.500003814697266

Token 188: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006796844303607941
    2. ' ,' → logprob: -5.256796836853027
    3. ',b' → logprob: -6.756796836853027
    4. '(a' → logprob: -8.881796836853027
    5. 'a' → logprob: -9.381796836853027
    6. '),' → logprob: -9.506796836853027
    7. ',a' → logprob: -10.381796836853027
    8. ')' → logprob: -10.631796836853027
    9. '(b' → logprob: -11.006796836853027
    10. ' ' → logprob: -11.256796836853027

Token 189: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.20142056047916412
    2. ' b' → logprob: -1.701420545578003
    3. ' ' → logprob: -11.951420783996582
    4. 'min' → logprob: -14.451420783996582
    5. ' min' → logprob: -15.951420783996582
    6. 'a' → logprob: -16.826419830322266
    7. ' ' → logprob: -17.576419830322266
    8. '  ' → logprob: -17.701419830322266
    9. '	b' → logprob: -17.701419830322266
    10. '   ' → logprob: -18.201419830322266

Token 190: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0006793115753680468
    2. ')' → logprob: -7.8756794929504395
    3. ' ),' → logprob: -8.750679016113281
    4. ',' → logprob: -8.875679016113281
    5. ' ,' → logprob: -14.750679016113281
    6. '),(' → logprob: -15.000679016113281
    7. ',),' → logprob: -16.50067901611328
    8. '),
' → logprob: -16.50067901611328
    9. ',b' → logprob: -16.62567901611328
    10. ' )' → logprob: -17.87567901611328

Token 191: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.20141352713108063
    2. ' min' → logprob: -1.7014135122299194
    3. '	min' → logprob: -15.95141315460205
    4. ' ' → logprob: -17.576414108276367
    5. ' abs' → logprob: -17.951414108276367
    6. 'max' → logprob: -18.201414108276367
    7. '   ' → logprob: -18.201414108276367
    8. 'abs' → logprob: -18.326414108276367
    9. '  ' → logprob: -18.826414108276367
    10. '(min' → logprob: -19.826414108276367

Token 192: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0004682073777075857
    2. '(' → logprob: -7.7504682540893555
    3. '(b' → logprob: -10.250468254089355
    4. '<|end|>' → logprob: -14.000468254089355
    5. 'a' → logprob: -14.625468254089355
    6. '(s' → logprob: -15.000468254089355
    7. ' (' → logprob: -15.500468254089355
    8. '(
' → logprob: -15.875468254089355
    9. '(i' → logprob: -17.00046730041504
    10. '(ab' → logprob: -17.25046730041504

Token 193: ',' (ID: 11)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0013173815095797181
    2. ',' → logprob: -7.126317501068115
    3. 'a' → logprob: -8.376317024230957
    4. '(' → logprob: -8.501317024230957
    5. ')' → logprob: -9.876317024230957
    6. ' (' → logprob: -11.251317024230957
    7. ',a' → logprob: -12.751317024230957
    8. ' a' → logprob: -12.876317024230957
    9. '   ' → logprob: -13.001317024230957
    10. ' ,' → logprob: -13.251317024230957

Token 194: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.08230848610401154
    2. 'a' → logprob: -2.707308530807495
    3. ' b' → logprob: -4.457308292388916
    4. ' a' → logprob: -7.332308292388916
    5. ' ' → logprob: -10.082308769226074
    6. ')' → logprob: -12.332308769226074
    7. ')b' → logprob: -14.207308769226074
    8. '<|end|>' → logprob: -15.082308769226074
    9. '(a' → logprob: -15.207308769226074
    10. 's' → logprob: -15.832308769226074

Token 195: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06353487074375153
    2. ')
' → logprob: -2.81353497505188
    3. '   ' → logprob: -6.563534736633301
    4. ' )' → logprob: -10.0635347366333
    5. ')
' → logprob: -10.4385347366333
    6. 'def' → logprob: -11.0635347366333
    7. '):
' → logprob: -11.3135347366333
    8. ' )
' → logprob: -11.6885347366333
    9. 'while' → logprob: -11.9385347366333
    10. '
' → logprob: -12.0635347366333

Token 196: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0510849803686142
    2. '
' → logprob: -3.5510849952697754
    3. '    
' → logprob: -3.9260849952697754
    4. ' while' → logprob: -7.676084995269775
    5. 'while' → logprob: -8.426084518432617
    6. '	while' → logprob: -8.551084518432617
    7. '   
' → logprob: -8.676084518432617
    8. '  
' → logprob: -8.801084518432617
    9. '	
' → logprob: -9.301084518432617
    10. ' 
' → logprob: -9.676084518432617

Token 197: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26570212841033936
    2. ' while' → logprob: -2.015702247619629
    3. 'while' → logprob: -2.515702247619629
    4. '    
' → logprob: -4.390702247619629
    5. '
' → logprob: -5.265702247619629
    6. ' 
' → logprob: -7.015702247619629
    7. '	while' → logprob: -7.265702247619629
    8. '	
' → logprob: -10.265702247619629
    9. '  
' → logprob: -10.390702247619629
    10. '   
' → logprob: -10.515702247619629

Token 198: ' Mult' (ID: 15431)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5785558223724365
    2. ' while' → logprob: -0.8285558223724365
    3. '   ' → logprob: -5.953556060791016
    4. 'While' → logprob: -12.078556060791016
    5. '	while' → logprob: -12.078556060791016
    6. '
' → logprob: -13.453556060791016
    7. '    
' → logprob: -13.578556060791016
    8. ' ' → logprob: -14.453556060791016
    9. '  ' → logprob: -14.828556060791016
    10. 'if' → logprob: -15.328556060791016

Token 199: 'ipl' (ID: 7840)
  Prédit: 'ipl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ipl' → logprob: -0.3869260847568512
    2. 'iple' → logprob: -1.2619260549545288
    3. 'iplier' → logprob: -4.011926174163818
    4. 'e' → logprob: -4.386926174163818
    5. 'iples' → logprob: -6.011926174163818
    6. 'ip' → logprob: -6.886926174163818
    7. 'pl' → logprob: -6.886926174163818
    8. 'ipe' → logprob: -7.761926174163818
    9. '
' → logprob: -8.26192569732666
    10. '   ' → logprob: -8.38692569732666

Token 200: 'ie' (ID: 396)
  Prédit: 'ier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.5009353160858154
    2. 'ie' → logprob: -1.6259353160858154
    3. 'ies' → logprob: -1.7509353160858154
    4. 'y' → logprob: -5.0009355545043945
    5. 'e' → logprob: -5.1259355545043945
    6. 'iez' → logprob: -6.2509355545043945
    7. 'er' → logprob: -6.3759355545043945
    8. 'iers' → logprob: -6.5009355545043945
    9. 'iquer' → logprob: -6.7509355545043945
    10. 'ieur' → logprob: -6.8759355545043945

Token 201: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.9545464515686035
    2. 'a' → logprob: -1.2045464515686035
    3. ' b' → logprob: -1.8295464515686035
    4. 'b' → logprob: -2.8295464515686035
    5. ' while' → logprob: -3.3295464515686035
    6. 'while' → logprob: -3.5795464515686035
    7. ' ' → logprob: -4.7045464515686035
    8. ' par' → logprob: -5.7045464515686035
    9. ' le' → logprob: -5.8295464515686035
    10. '(a' → logprob: -6.3295464515686035

Token 202: ' et' (ID: 859)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.42499029636383057
    2. '%' → logprob: -1.7999902963638306
    3. '%b' → logprob: -2.924990177154541
    4. ' b' → logprob: -3.299990177154541
    5. ' %=' → logprob: -3.424990177154541
    6. ' a' → logprob: -3.799990177154541
    7. 'a' → logprob: -4.299990177154541
    8. ',' → logprob: -4.674990177154541
    9. 'b' → logprob: -5.799990177154541
    10. '%=' → logprob: -6.174990177154541

Token 203: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5761909484863281
    2. ' b' → logprob: -0.8261909484863281
    3. '%b' → logprob: -9.451190948486328
    4. ' a' → logprob: -10.201190948486328
    5. ' mod' → logprob: -10.451190948486328
    6. 'a' → logprob: -10.451190948486328
    7. ' modulo' → logprob: -10.576190948486328
    8. ' ' → logprob: -10.951190948486328
    9. '%' → logprob: -11.951190948486328
    10. ',' → logprob: -12.326190948486328

Token 204: ',' (ID: 11)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -1.0124986171722412
    2. 'while' → logprob: -1.3874986171722412
    3. '%' → logprob: -1.7624986171722412
    4. ' %' → logprob: -2.012498617172241
    5. ' a' → logprob: -3.762498617172241
    6. ' if' → logprob: -4.38749885559082
    7. '%b' → logprob: -4.51249885559082
    8. '
' → logprob: -4.63749885559082
    9. ',' → logprob: -5.26249885559082
    10. 'if' → logprob: -5.76249885559082

Token 205: ' valeur' (ID: 41664)
  Prédit: ' puis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' puis' → logprob: -0.13326627016067505
    2. ' a' → logprob: -2.8832662105560303
    3. 'a' → logprob: -3.2582662105560303
    4. ' while' → logprob: -4.383266448974609
    5. 'while' → logprob: -5.258266448974609
    6. ' et' → logprob: -5.758266448974609
    7. ' mais' → logprob: -6.133266448974609
    8. '   ' → logprob: -6.758266448974609
    9. ' then' → logprob: -7.133266448974609
    10. 'p' → logprob: -7.633266448974609

Token 206: ' non' (ID: 2893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2937861680984497
    2. ' =' → logprob: -1.2937861680984497
    3. '%=' → logprob: -1.9187861680984497
    4. ' a' → logprob: -2.54378604888916
    5. ' %=' → logprob: -2.66878604888916
    6. '%' → logprob: -2.91878604888916
    7. 'a' → logprob: -3.29378604888916
    8. ' modulo' → logprob: -4.04378604888916
    9. '=a' → logprob: -4.41878604888916
    10. ' mod' → logprob: -4.79378604888916

Token 207: ' utilisée' (ID: 106548)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.10523857921361923
    2. 'n' → logprob: -2.355238676071167
    3. ' nul' → logprob: -6.855238437652588
    4. ' null' → logprob: -6.980238437652588
    5. 'null' → logprob: -7.105238437652588
    6. '0' → logprob: -7.480238437652588
    7. 'nul' → logprob: -7.605238437652588
    8. 'zero' → logprob: -7.980238437652588
    9. ' nulla' → logprob: -8.730238914489746
    10. '   ' → logprob: -8.855238914489746

Token 208: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08033633232116699
    2. '    
' → logprob: -3.455336332321167
    3. ' while' → logprob: -3.705336332321167
    4. 'while' → logprob: -4.955336570739746
    5. ',' → logprob: -5.330336570739746
    6. '
' → logprob: -5.455336570739746
    7. '.' → logprob: -6.955336570739746
    8. '  
' → logprob: -7.080336570739746
    9. '   
' → logprob: -7.330336570739746
    10. ' 
' → logprob: -7.705336570739746

Token 209: ' le' (ID: 505)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6147649884223938
    2. ' la' → logprob: -0.9897649884223938
    3. ' a' → logprob: -3.739764928817749
    4. ' le' → logprob: -3.864764928817749
    5. ' l' → logprob: -4.489765167236328
    6. 'la' → logprob: -4.864765167236328
    7. 'l' → logprob: -5.239765167236328
    8. '_' → logprob: -5.364765167236328
    9. ' cette' → logprob: -5.614765167236328
    10. 'return' → logprob: -6.364765167236328

Token 210: ' calcul' (ID: 7559)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2859877347946167
    2. 'return' → logprob: -2.6609878540039062
    3. ' while' → logprob: -3.2859878540039062
    4. 'code' → logprob: -3.5359878540039062
    5. 'a' → logprob: -4.035987854003906
    6. 'g' → logprob: -4.035987854003906
    7. '#' → logprob: -4.285987854003906
    8. 'def' → logprob: -4.285987854003906
    9. ' return' → logprob: -4.660987854003906
    10. 'process' → logprob: -4.660987854003906

Token 211: ' ici' (ID: 27994)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08647458255290985
    2. '    
' → logprob: -2.961474657058716
    3. ' while' → logprob: -4.336474418640137
    4. '
' → logprob: -5.086474418640137
    5. 'while' → logprob: -5.461474418640137
    6. ',' → logprob: -5.711474418640137
    7. '  
' → logprob: -6.586474418640137
    8. '   
' → logprob: -6.836474418640137
    9. '.' → logprob: -7.711474418640137
    10. ' 
' → logprob: -8.086474418640137

Token 212: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16100561618804932
    2. '<|end|>' → logprob: -2.5360054969787598
    3. '*' → logprob: -3.5360054969787598
    4. ' ' → logprob: -4.41100549697876
    5. '    
' → logprob: -4.53600549697876
    6. ',' → logprob: -5.41100549697876
    7. ' 
' → logprob: -5.91100549697876
    8. '
' → logprob: -6.41100549697876
    9. '  
' → logprob: -6.41100549697876
    10. '  ' → logprob: -6.53600549697876

Token 213: 'var' (ID: 1465)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8211186528205872
    2. '   ' → logprob: -1.1961185932159424
    3. ' )' → logprob: -2.1961185932159424
    4. '#' → logprob: -2.6961185932159424
    5. ' ' → logprob: -4.1961188316345215
    6. 'return' → logprob: -4.4461188316345215
    7. ' return' → logprob: -4.8211188316345215
    8. 'a' → logprob: -5.0711188316345215
    9. ' #' → logprob: -5.0711188316345215
    10. ' a' → logprob: -5.3211188316345215

Token 214: ' '' (ID: 461)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38114750385284424
    2. '=' → logprob: -1.3811475038528442
    3. '   ' → logprob: -3.8811473846435547
    4. ' ' → logprob: -4.131147384643555
    5. 'a' → logprob: -4.506147384643555
    6. ' a' → logprob: -4.881147384643555
    7. ')' → logprob: -6.256147384643555
    8. ',' → logprob: -6.381147384643555
    9. 'al' → logprob: -6.506147384643555
    10. '  ' → logprob: -7.131147384643555

Token 215: 'c' (ID: 66)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -1.3529785871505737
    2. '_' → logprob: -1.9779785871505737
    3. 'c' → logprob: -2.2279787063598633
    4. 'product' → logprob: -2.3529787063598633
    5. 'tmp' → logprob: -2.6029787063598633
    6. ' product' → logprob: -2.7279787063598633
    7. 'prod' → logprob: -3.1029787063598633
    8. ' _' → logprob: -3.3529787063598633
    9. 'a' → logprob: -3.7279787063598633
    10. ' temp' → logprob: -3.8529787063598633

Token 216: ''' (ID: 6)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23714366555213928
    2. '=' → logprob: -2.6121437549591064
    3. '')' → logprob: -3.2371437549591064
    4. ',' → logprob: -3.2371437549591064
    5. ')' → logprob: -3.6121437549591064
    6. 'a' → logprob: -4.487143516540527
    7. ''' → logprob: -4.862143516540527
    8. ' )' → logprob: -5.487143516540527
    9. ' ' → logprob: -5.737143516540527
    10. ' ')' → logprob: -6.612143516540527

Token 217: ' red' (ID: 3592)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2303210347890854
    2. '=' → logprob: -1.6053210496902466
    3. ')' → logprob: -5.730320930480957
    4. '   ' → logprob: -6.605320930480957
    5. ',' → logprob: -9.480320930480957
    6. '=c' → logprob: -9.855320930480957
    7. ' =
' → logprob: -10.230320930480957
    8. '=None' → logprob: -10.355320930480957
    9. 'c' → logprob: -10.480320930480957
    10. ' ' → logprob: -10.855320930480957

Token 218: 'ond' (ID: 1415)
  Prédit: 'éf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éf' → logprob: -0.34014391899108887
    2. 'é' → logprob: -1.4651439189910889
    3. '=' → logprob: -3.465143918991089
    4. 'efined' → logprob: -4.465144157409668
    5. 'ond' → logprob: -5.215144157409668
    6. '=None' → logprob: -6.590144157409668
    7. 'ef' → logprob: -6.840144157409668
    8. 'undant' → logprob: -6.840144157409668
    9. 'ir' → logprob: -7.215144157409668
    10. ' =' → logprob: -7.340144157409668

Token 219: 'ante' (ID: 2116)
  Prédit: 'ond'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ond' → logprob: -0.6670769453048706
    2. 'uite' → logprob: -2.04207706451416
    3. 'undant' → logprob: -2.16707706451416
    4. 'onnée' → logprob: -2.91707706451416
    5. 'und' → logprob: -3.54207706451416
    6. 'uct' → logprob: -3.66707706451416
    7. 'on' → logprob: -3.91707706451416
    8. ')' → logprob: -4.04207706451416
    9. '=' → logprob: -4.66707706451416
    10. 'ante' → logprob: -4.91707706451416

Token 220: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5909259915351868
    2. '   ' → logprob: -0.8409259915351868
    3. '<|end|>' → logprob: -4.715926170349121
    4. ')
' → logprob: -6.465926170349121
    5. ',' → logprob: -6.840926170349121
    6. '<|end|>' → logprob: -7.340926170349121
    7. '    
' → logprob: -7.465926170349121
    8. '
' → logprob: -7.590926170349121
    9. '  ' → logprob: -8.215926170349121
    10. '')' → logprob: -8.340926170349121

Token 221: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01531064324080944
    2. '<|end|>' → logprob: -4.765310764312744
    3. 'c' → logprob: -5.890310764312744
    4. '    
' → logprob: -6.640310764312744
    5. ' while' → logprob: -6.765310764312744
    6. ' c' → logprob: -7.390310764312744
    7. 'while' → logprob: -8.390310287475586
    8. '<|end|>' → logprob: -8.765310287475586
    9. '    ' → logprob: -9.515310287475586
    10. '
' → logprob: -9.890310287475586

Token 222: ' c' (ID: 274)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6496008038520813
    2. 'c' (adapté à ' c') → logprob: -0.8996008038520813
    3. ' c' → logprob: -2.6496007442474365
    4. '#' → logprob: -9.274600982666016
    5. '	c' → logprob: -9.774600982666016
    6. '    
' → logprob: -10.149600982666016
    7. ' ' → logprob: -10.149600982666016
    8. '
' → logprob: -10.149600982666016
    9. '    ' → logprob: -10.899600982666016
    10. '  ' → logprob: -11.149600982666016

Token 223: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.474912166595459
    2. '=' → logprob: -0.974912166595459
    3. ',' → logprob: -7.099912166595459
    4. '=a' → logprob: -13.224912643432617
    5. '   ' → logprob: -13.349912643432617
    6. ' =
' → logprob: -13.724912643432617
    7. ' ' → logprob: -13.974912643432617
    8. 'a' → logprob: -14.224912643432617
    9. '=
' → logprob: -14.349912643432617
    10. '  ' → logprob: -14.474912643432617

Token 224: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.007620468270033598
    2. ' a' → logprob: -4.882620334625244
    3. ' ' → logprob: -12.132620811462402
    4. '0' → logprob: -12.632620811462402
    5. '   ' → logprob: -13.007620811462402
    6. '1' → logprob: -13.632620811462402
    7. '  ' → logprob: -13.882620811462402
    8. '	a' → logprob: -14.507620811462402
    9. '(a' → logprob: -15.382620811462402
    10. '_a' → logprob: -15.507620811462402

Token 225: ' *' (ID: 425)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.4745967388153076
    2. '%' → logprob: -0.9745967388153076
    3. '%b' → logprob: -7.724596977233887
    4. ',' → logprob: -9.974596977233887
    5. '%c' → logprob: -11.474596977233887
    6. ' ,' → logprob: -11.849596977233887
    7. ' ' → logprob: -12.349596977233887
    8. '%e' → logprob: -13.349596977233887
    9. ' %=' → logprob: -13.474596977233887
    10. '%i' → logprob: -13.599596977233887

Token 226: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.006715967319905758
    2. ' b' → logprob: -5.006715774536133
    3. ' ' → logprob: -14.631715774536133
    4. '   ' → logprob: -17.006715774536133
    5. '	b' → logprob: -17.131715774536133
    6. '  ' → logprob: -18.131715774536133
    7. '0' → logprob: -19.256715774536133
    8. ',' → logprob: -19.756715774536133
    9. ' ' → logprob: -19.756715774536133
    10. '(b' → logprob: -19.881715774536133

Token 227: '  
' (ID: 4066)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019461967051029205
    2. '    
' → logprob: -4.3944621086120605
    3. '
' → logprob: -5.8944621086120605
    4. ' while' → logprob: -6.3944621086120605
    5. '<|end|>' → logprob: -6.7694621086120605
    6. 'while' → logprob: -7.2694621086120605
    7. '  
' → logprob: -8.769461631774902
    8. '   
' → logprob: -8.894461631774902
    9. '	while' → logprob: -9.269461631774902
    10. '<|end|>' → logprob: -9.769461631774902

Token 228: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0391218364238739
    2. 'while' → logprob: -4.039121627807617
    3. ' while' → logprob: -4.164121627807617
    4. '    
' → logprob: -6.039121627807617
    5. '
' → logprob: -6.414121627807617
    6. '	while' → logprob: -7.539121627807617
    7. '<|end|>' → logprob: -7.914121627807617
    8. '<|end|>' → logprob: -9.539121627807617
    9. '  
' → logprob: -9.789121627807617
    10. '#' → logprob: -10.664121627807617

Token 229: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5921571850776672
    2. '   ' → logprob: -0.9671571850776672
    3. ' while' → logprob: -2.7171571254730225
    4. '    
' → logprob: -7.717157363891602
    5. '	while' → logprob: -9.342157363891602
    6. '
' → logprob: -9.842157363891602
    7. '#' (adapté à ' #') → logprob: -11.217157363891602
    8. 'if' → logprob: -11.467157363891602
    9. '   
' → logprob: -11.717157363891602
    10. '  ' → logprob: -11.842157363891602

Token 230: ' Bou' (ID: 33816)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0015684263780713081
    2. ' while' → logprob: -6.50156831741333
    3. '   ' → logprob: -10.501568794250488
    4. '#' → logprob: -10.876568794250488
    5. 'if' → logprob: -11.001568794250488
    6. '	while' → logprob: -13.626568794250488
    7. 'r' → logprob: -14.501568794250488
    8. 'b' → logprob: -14.751568794250488
    9. 'While' → logprob: -15.251568794250488
    10. 'return' → logprob: -15.376568794250488

Token 231: 'cle' (ID: 3170)
  Prédit: 'cle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cle' → logprob: -0.00577401602640748
    2. '   ' → logprob: -5.880774021148682
    3. 'c' → logprob: -6.005774021148682
    4. 'cl' → logprob: -9.255773544311523
    5. ' ' → logprob: -9.255773544311523
    6. 'clé' → logprob: -9.505773544311523
    7. 'cles' → logprob: -9.755773544311523
    8. 'while' → logprob: -10.005773544311523
    9. 'cler' → logprob: -10.130773544311523
    10. ' while' → logprob: -10.755773544311523

Token 232: ' tant' (ID: 16235)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.29505857825279236
    2. 'while' → logprob: -1.4200586080551147
    3. '   ' → logprob: -4.295058727264404
    4. '	while' → logprob: -8.795058250427246
    5. ' for' → logprob: -11.420058250427246
    6. '  ' → logprob: -12.670058250427246
    7. ' ' → logprob: -13.295058250427246
    8. '    ' → logprob: -13.420058250427246
    9. ':' → logprob: -13.670058250427246
    10. 'for' → logprob: -14.045058250427246

Token 233: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.00042983482126146555
    2. 'que' → logprob: -7.875429630279541
    3. ' qu' → logprob: -10.6254301071167
    4. '   ' → logprob: -10.7504301071167
    5. ' ' → logprob: -13.6254301071167
    6. ' while' → logprob: -13.8754301071167
    7. ' not' → logprob: -14.2504301071167
    8. ' a' → logprob: -15.0004301071167
    9. 'qu' → logprob: -15.3754301071167
    10. ' q' → logprob: -16.000429153442383

Token 234: ' le' (ID: 505)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6931503415107727
    2. ' b' → logprob: -0.6931503415107727
    3. ' ' → logprob: -13.193150520324707
    4. '	b' → logprob: -14.193150520324707
    5. '   ' → logprob: -15.318150520324707
    6. '(b' → logprob: -15.818150520324707
    7. 'a' → logprob: -16.81814956665039
    8. '_b' → logprob: -16.81814956665039
    9. ' ' → logprob: -16.94314956665039
    10. ' (' → logprob: -17.81814956665039

Token 235: ' reste' (ID: 26769)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.47409966588020325
    2. 'b' → logprob: -0.9740996360778809
    3. '   ' → logprob: -11.599100112915039
    4. ' ' → logprob: -12.349100112915039
    5. 'a' → logprob: -12.599100112915039
    6. '>b' → logprob: -13.724100112915039
    7. '>' → logprob: -13.849100112915039
    8. '	b' → logprob: -14.599100112915039
    9. '_b' → logprob: -14.786600112915039
    10. ' a' → logprob: -15.036600112915039

Token 236: ' de' (ID: 334)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.9020764827728271
    2. ' b' → logprob: -1.0270764827728271
    3. 'a' → logprob: -1.6520764827728271
    4. ' a' → logprob: -3.652076482772827
    5. ' de' → logprob: -4.777076721191406
    6. 'r' → logprob: -5.402076721191406
    7. ' ' → logprob: -6.277076721191406
    8. '<|end|>' → logprob: -6.652076721191406
    9. ' !=' → logprob: -8.152076721191406
    10. 'de' → logprob: -8.652076721191406

Token 237: ' la' (ID: 557)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7159011960029602
    2. 'a' → logprob: -0.9659011960029602
    3. ' b' → logprob: -2.2159011363983154
    4. 'b' → logprob: -3.8409011363983154
    5. ' ' → logprob: -9.715901374816895
    6. '	a' → logprob: -11.715901374816895
    7. '(a' → logprob: -13.465901374816895
    8. '>a' → logprob: -13.590901374816895
    9. ' à' → logprob: -13.965901374816895
    10. '   ' → logprob: -14.090901374816895

Token 238: ' division' (ID: 21629)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.14975319802761078
    2. ' b' → logprob: -2.0247530937194824
    3. 'a' → logprob: -5.024753093719482
    4. ' a' → logprob: -7.649753093719482
    5. ' ' → logprob: -13.27475357055664
    6. '	b' → logprob: -14.27475357055664
    7. '%b' → logprob: -14.52475357055664
    8. '   ' → logprob: -15.39975357055664
    9. 'r' → logprob: -15.39975357055664
    10. '_b' → logprob: -16.39975357055664

Token 239: ' de' (ID: 334)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.28454911708831787
    2. 'b' → logprob: -1.9095491170883179
    3. 'a' → logprob: -2.7845492362976074
    4. ' a' → logprob: -3.2845492362976074
    5. ' de' → logprob: -9.03454875946045
    6. '   ' → logprob: -9.78454875946045
    7. ' ' → logprob: -10.03454875946045
    8. ' entre' → logprob: -11.40954875946045
    9. ' à' → logprob: -11.78454875946045
    10. ' between' → logprob: -12.40954875946045

Token 240: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10045434534549713
    2. ' a' → logprob: -2.350454330444336
    3. 'b' → logprob: -8.600454330444336
    4. ' b' → logprob: -9.725454330444336
    5. '	a' → logprob: -13.350454330444336
    6. ' ' → logprob: -13.600454330444336
    7. '   ' → logprob: -14.350454330444336
    8. '_a' → logprob: -16.350454330444336
    9. '(a' → logprob: -16.600454330444336
    10. '#a' → logprob: -16.600454330444336

Token 241: ' par' (ID: 686)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.4844260811805725
    2. '%b' → logprob: -1.3594260215759277
    3. ' par' → logprob: -2.9844260215759277
    4. ' %' → logprob: -3.3594260215759277
    5. ' b' → logprob: -3.8594260215759277
    6. 'b' → logprob: -5.109426021575928
    7. ' ' → logprob: -5.359426021575928
    8. '%n' → logprob: -6.109426021575928
    9. 'par' → logprob: -6.234426021575928
    10. ' by' → logprob: -6.609426021575928

Token 242: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.10020667314529419
    2. ' b' → logprob: -2.3502066135406494
    3. ' ' → logprob: -17.35020637512207
    4. 'a' → logprob: -18.10020637512207
    5. ' ' → logprob: -19.10020637512207
    6. '	b' → logprob: -19.85020637512207
    7. ' б' → logprob: -20.72520637512207
    8. ')b' → logprob: -21.10020637512207
    9. ',' → logprob: -21.22520637512207
    10. 'the' → logprob: -21.35020637512207

Token 243: ' n' (ID: 297)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.07228529453277588
    2. '!=' → logprob: -2.9472851753234863
    3. '   ' → logprob: -4.572285175323486
    4. '>' → logprob: -6.322285175323486
    5. ' >' → logprob: -7.072285175323486
    6. '%' → logprob: -7.072285175323486
    7. ' %' → logprob: -7.322285175323486
    8. ' n' → logprob: -7.322285175323486
    9. ' est' → logprob: -7.697285175323486
    10. ':' → logprob: -7.822285175323486

Token 244: ''est' (ID: 6616)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -1.3175265789031982
    2. ' !=' → logprob: -1.6925265789031982
    3. '<|end|>' → logprob: -1.8175265789031982
    4. ''est' → logprob: -2.1925265789031982
    5. ' est' → logprob: -2.8175265789031982
    6. '>' → logprob: -3.0675265789031982
    7. '=' → logprob: -3.4425265789031982
    8. ')' → logprob: -3.6925265789031982
    9. '%' → logprob: -4.442526817321777
    10. 'a' → logprob: -5.067526817321777

Token 245: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.4580984115600586
    2. '0' → logprob: -1.5830984115600586
    3. 'pas' → logprob: -2.0830984115600586
    4. ' not' → logprob: -3.5830984115600586
    5. 'not' → logprob: -4.708098411560059
    6. '>' → logprob: -7.833098411560059
    7. '1' → logprob: -8.458098411560059
    8. 'Pas' → logprob: -9.458098411560059
    9. 'b' → logprob: -10.958098411560059
    10. '_pas' → logprob: -10.958098411560059

Token 246: ' nul' (ID: 64435)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.038178738206624985
    2. ' ' → logprob: -3.2881786823272705
    3. ' différent' → logprob: -9.538178443908691
    4. ' zero' → logprob: -10.538178443908691
    5. ' different' → logprob: -11.288178443908691
    6. ' zéro' → logprob: -11.538178443908691
    7. 'zero' → logprob: -12.538178443908691
    8. '=' → logprob: -13.163178443908691
    9. ' None' → logprob: -13.538178443908691
    10. '>' → logprob: -13.663178443908691

Token 247: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02105281874537468
    2. ' while' → logprob: -3.896052837371826
    3. 'while' → logprob: -8.021052360534668
    4. '    
' → logprob: -9.271052360534668
    5. '	while' → logprob: -10.396052360534668
    6. ':' → logprob: -10.646052360534668
    7. ',' → logprob: -11.646052360534668
    8. '
' → logprob: -12.021052360534668
    9. '<|end|>' → logprob: -12.146052360534668
    10. '```' → logprob: -12.646052360534668

Token 248: 'mé' (ID: 35328)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.4251662790775299
    2. '   ' → logprob: -1.9251662492752075
    3. ' while' → logprob: -2.425166368484497
    4. 'b' → logprob: -2.425166368484497
    5. ')' → logprob: -4.925166130065918
    6. ' )' → logprob: -4.925166130065918
    7. 'while' → logprob: -5.675166130065918
    8. ' a' → logprob: -6.800166130065918
    9. '    ' → logprob: -6.800166130065918
    10. ' ):
' → logprob: -7.175166130065918

Token 249: 'th' (ID: 404)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.148370385169983
    2. 'a' → logprob: -1.398370385169983
    3. 't' → logprob: -1.523370385169983
    4. '   ' → logprob: -2.6483702659606934
    5. 'th' → logprob: -3.6483702659606934
    6. ' while' → logprob: -3.7733702659606934
    7. 'tant' → logprob: -4.273370265960693
    8. ')' → logprob: -4.523370265960693
    9. ' a' → logprob: -4.898370265960693
    10. 'def' → logprob: -5.023370265960693

Token 250: 'ode' (ID: 676)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026241084560751915
    2. 'while' → logprob: -4.776241302490234
    3. ' while' → logprob: -5.026241302490234
    4. 'oque' → logprob: -6.526241302490234
    5. '       ' → logprob: -7.026241302490234
    6. 'a' → logprob: -7.151241302490234
    7. '  ' → logprob: -7.151241302490234
    8. 'odes' → logprob: -7.276241302490234
    9. 'ique' → logprob: -7.651241302490234
    10. 'oyer' → logprob: -7.838741302490234

Token 251: ' d' (ID: 272)
  Prédit: ' Eu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Eu' → logprob: -0.4558914005756378
    2. ' eu' → logprob: -1.0808913707733154
    3. ' while' → logprob: -4.8308916091918945
    4. 'Eu' → logprob: -4.8308916091918945
    5. 'eu' → logprob: -5.2058916091918945
    6. ' de' → logprob: -5.9558916091918945
    7. '   ' → logprob: -6.8308916091918945
    8. 'while' → logprob: -7.2058916091918945
    9. ' a' → logprob: -7.8308916091918945
    10. 'a' → logprob: -8.955891609191895

Token 252: ''' (ID: 6)
  Prédit: ' Eu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Eu' → logprob: -0.8864215016365051
    2. ' b' → logprob: -1.5114214420318604
    3. ' a' → logprob: -2.1364214420318604
    4. ' eu' → logprob: -2.6364214420318604
    5. 'Eu' → logprob: -2.6364214420318604
    6. 'b' → logprob: -2.8864214420318604
    7. 'a' → logprob: -3.1364214420318604
    8. 'eu' → logprob: -5.6364216804504395
    9. ' ' → logprob: -6.3864216804504395
    10. ' while' → logprob: -8.011421203613281

Token 253: 'Eu' (ID: 29824)
  Prédit: ' Eu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Eu' → logprob: -0.8415287733078003
    2. 'Eu' → logprob: -0.8415287733078003
    3. 'a' → logprob: -2.34152889251709
    4. ' eu' → logprob: -3.96652889251709
    5. ' a' → logprob: -4.46652889251709
    6. 'eu' → logprob: -4.71652889251709
    7. 'e' → logprob: -6.96652889251709
    8. ' b' → logprob: -7.84152889251709
    9. 'b' → logprob: -8.21652889251709
    10. ' division' → logprob: -9.09152889251709

Token 254: 'cl' (ID: 565)
  Prédit: 'clid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clid' → logprob: -0.6462584733963013
    2. 'clidean' → logprob: -1.2712584733963013
    3. 'cl' → logprob: -1.6462584733963013
    4. ')' → logprob: -7.146258354187012
    5. '   ' → logprob: -7.771258354187012
    6. 'c' → logprob: -8.396258354187012
    7. ' ' → logprob: -8.396258354187012
    8. '  ' → logprob: -8.646258354187012
    9. '}' → logprob: -9.021258354187012
    10. '```' → logprob: -9.271258354187012

Token 255: 'ide' (ID: 617)
  Prédit: 'ide'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ide' → logprob: -0.7242720127105713
    2. 'e' → logprob: -1.4742720127105713
    3. 'ène' → logprob: -2.7242720127105713
    4. 'de' → logprob: -2.8492720127105713
    5. 'ene' → logprob: -3.3492720127105713
    6. 'es' → logprob: -4.224271774291992
    7. 'or' → logprob: -4.349271774291992
    8. 'ore' → logprob: -4.349271774291992
    9. ')' → logprob: -4.349271774291992
    10. 'o' → logprob: -4.599271774291992

Token 256: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5600021481513977
    2. '):' → logprob: -1.810002088546753
    3. '   ' → logprob: -1.935002088546753
    4. '):
' → logprob: -2.685002088546753
    5. ' )' → logprob: -3.435002088546753
    6. ' ):
' → logprob: -4.935002326965332
    7. ' ):' → logprob: -5.185002326965332
    8. ')
' → logprob: -5.185002326965332
    9. ' )
' → logprob: -7.060002326965332
    10. '):

' → logprob: -7.685002326965332

Token 257: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04867434501647949
    2. '    
' → logprob: -3.2986743450164795
    3. '
' → logprob: -5.048674583435059
    4. ' while' → logprob: -6.423674583435059
    5. '<|end|>' → logprob: -7.298674583435059
    6. ' 
' → logprob: -7.423674583435059
    7. '  
' → logprob: -7.923674583435059
    8. '	while' → logprob: -8.798674583435059
    9. '   
' → logprob: -8.923674583435059
    10. '\n' → logprob: -8.923674583435059

Token 258: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.5861949920654297
    2. 'while' (adapté à ' while') → logprob: -0.8361949920654297
    3. '   ' → logprob: -4.58619499206543
    4. '	while' → logprob: -11.46119499206543
    5. 'While' → logprob: -14.96119499206543
    6. '    
' → logprob: -15.71119499206543
    7. ' a' → logprob: -15.83619499206543
    8. ' ' → logprob: -16.08619499206543
    9. ' b' → logprob: -16.33619499206543
    10. 'a' → logprob: -16.33619499206543

Token 259: ' a' (ID: 261)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.22541499137878418
    2. 'b' → logprob: -1.6004149913787842
    3. ' ' → logprob: -14.225415229797363
    4. '(b' → logprob: -14.350415229797363
    5. '	b' → logprob: -14.350415229797363
    6. '   ' → logprob: -15.100415229797363
    7. ' (' → logprob: -17.100414276123047
    8. '_b' → logprob: -17.100414276123047
    9. ' ' → logprob: -17.350414276123047
    10. ' not' → logprob: -17.537914276123047

Token 260: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.1270444542169571
    2. '%' → logprob: -2.127044439315796
    3. '%b' → logprob: -9.502044677734375
    4. ' ' → logprob: -10.502044677734375
    5. ' %
' → logprob: -11.752044677734375
    6. ' %=' → logprob: -13.002044677734375
    7. '%c' → logprob: -13.377044677734375
    8. '%i' → logprob: -14.252044677734375
    9. ' !=' → logprob: -15.127044677734375
    10. '%s' → logprob: -15.252044677734375

Token 261: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.005233763717114925
    2. ' b' → logprob: -5.2552337646484375
    3. ' ' → logprob: -17.255233764648438
    4. '	b' → logprob: -19.755233764648438
    5. '   ' → logprob: -21.380233764648438
    6. ' 
' → logprob: -21.630233764648438
    7. '  ' → logprob: -21.755233764648438
    8. '>b' → logprob: -22.005233764648438
    9. ',' → logprob: -22.130233764648438
    10. '2' → logprob: -22.505233764648438

Token 262: ' >' (ID: 1424)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.5276793241500854
    2. '!=' → logprob: -0.9026793241500854
    3. ':' → logprob: -5.527679443359375
    4. '>' → logprob: -7.652679443359375
    5. ')!=' → logprob: -10.152679443359375
    6. '!="' → logprob: -10.652679443359375
    7. ' >' → logprob: -11.277679443359375
    8. '!==' → logprob: -12.027679443359375
    9. '!='' → logprob: -12.152679443359375
    10. ':
' → logprob: -13.027679443359375

Token 263: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005233763717114925
    2. ' ' → logprob: -5.2552337646484375
    3. '۰' → logprob: -19.630233764648438
    4. '  ' → logprob: -19.755233764648438
    5. 'b' → logprob: -20.130233764648438
    6. '   ' → logprob: -20.880233764648438
    7. '<|end|>' → logprob: -21.755233764648438
    8. '1' → logprob: -22.130233764648438
    9. '00' → logprob: -22.192733764648438
    10. ' ' → logprob: -22.380233764648438

Token 264: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '۰' → logprob: -19.37502098083496
    4. 'b' → logprob: -20.62502098083496
    5. '   ' → logprob: -21.12502098083496
    6. '  ' → logprob: -21.50002098083496
    7. '00' → logprob: -22.06252098083496
    8. 'zero' → logprob: -22.06252098083496
    9. '000' → logprob: -22.18752098083496
    10. '٠' → logprob: -22.18752098083496

Token 265: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12886470556259155
    2. ':
' → logprob: -2.1288647651672363
    3. ' :' → logprob: -7.128864765167236
    4. '   ' → logprob: -7.503864765167236
    5. ' :
' → logprob: -7.628864765167236
    6. '       ' → logprob: -10.753864288330078
    7. '):
' → logprob: -10.753864288330078
    8. 'a' → logprob: -11.128864288330078
    9. ',' → logprob: -11.253864288330078
    10. '):' → logprob: -11.753864288330078

Token 266: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07755832374095917
    2. 'a' → logprob: -2.8275582790374756
    3. ' a' → logprob: -4.702558517456055
    4. '<|end|>' → logprob: -5.952558517456055
    5. '
' → logprob: -6.202558517456055
    6. '        
' → logprob: -6.827558517456055
    7. ',' → logprob: -8.452558517456055
    8. '   ' → logprob: -8.952558517456055
    9. ' 
' → logprob: -9.577558517456055
    10. '<|end|>' → logprob: -10.077558517456055

Token 267: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0007245833403430879
    2. ' a' → logprob: -7.375724792480469
    3. '       ' → logprob: -10.000724792480469
    4. 'temp' → logprob: -10.250724792480469
    5. '   ' → logprob: -12.125724792480469
    6. 'tmp' → logprob: -12.625724792480469
    7. 'r' → logprob: -12.750724792480469
    8. '	a' → logprob: -13.250724792480469
    9. 't' → logprob: -13.625724792480469
    10. '        
' → logprob: -13.875724792480469

Token 268: ' Met' (ID: 7227)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00012284684635233134
    2. ' a' → logprob: -9.375123023986816
    3. '   ' → logprob: -11.000123023986816
    4. 'r' → logprob: -11.375123023986816
    5. 'temp' → logprob: -12.250123023986816
    6. 'tmp' → logprob: -13.375123023986816
    7. '	a' → logprob: -14.000123023986816
    8. ' ' → logprob: -14.625123023986816
    9. '    
' → logprob: -15.000123023986816
    10. 't' → logprob: -15.250123023986816

Token 269: ' à' (ID: 1221)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.01660526916384697
    2. ' a' → logprob: -4.141605377197266
    3. 'temp' → logprob: -7.891605377197266
    4. '	a' → logprob: -10.016605377197266
    5. '   ' → logprob: -10.141605377197266
    6. ' temp' → logprob: -10.141605377197266
    7. 'tmp' → logprob: -10.641605377197266
    8. 'r' → logprob: -11.391605377197266
    9. '       ' → logprob: -11.641605377197266
    10. '_a' → logprob: -12.391605377197266

Token 270: ' jour' (ID: 8379)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6336812973022461
    2. 'b' → logprob: -0.7586812973022461
    3. 'tmp' → logprob: -8.008681297302246
    4. 'temp' → logprob: -8.383681297302246
    5. ' a' → logprob: -8.508681297302246
    6. ' b' → logprob: -8.508681297302246
    7. '   ' → logprob: -9.508681297302246
    8. 'c' → logprob: -11.383681297302246
    9. 'temps' → logprob: -12.133681297302246
    10. ' temp' → logprob: -12.758681297302246

Token 271: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0059568872675299644
    2. ' a' → logprob: -5.130956649780273
    3. '   ' → logprob: -11.130956649780273
    4. '	a' → logprob: -11.880956649780273
    5. 'temp' → logprob: -12.255956649780273
    6. '       ' → logprob: -14.505956649780273
    7. 'tmp' → logprob: -15.255956649780273
    8. '    ' → logprob: -15.380956649780273
    9. '  ' → logprob: -15.505956649780273
    10. ',' → logprob: -15.505956649780273

Token 272: ' avec' (ID: 3937)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004729991778731346
    2. 'a' → logprob: -5.379730224609375
    3. ',a' → logprob: -9.754730224609375
    4. ' ,' → logprob: -10.879730224609375
    5. 'b' → logprob: -11.254730224609375
    6. ' a' → logprob: -11.754730224609375
    7. ',b' → logprob: -12.254730224609375
    8. ',
' → logprob: -12.629730224609375
    9. '=' → logprob: -13.629730224609375
    10. 'temp' → logprob: -13.879730224609375

Token 273: ' la' (ID: 557)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0006372620700858533
    2. ' b' → logprob: -7.375637054443359
    3. 'a' → logprob: -11.50063705444336
    4. '(b' → logprob: -14.75063705444336
    5. '	b' → logprob: -16.00063705444336
    6. ' a' → logprob: -17.12563705444336
    7. ' ' → logprob: -17.62563705444336
    8. '   ' → logprob: -18.12563705444336
    9. '_b' → logprob: -18.25063705444336
    10. ',' → logprob: -18.37563705444336

Token 274: ' valeur' (ID: 41664)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0008503671269863844
    2. ' b' → logprob: -7.125850200653076
    3. 'a' → logprob: -10.000850677490234
    4. '(b' → logprob: -15.500850677490234
    5. ' a' → logprob: -15.875850677490234
    6. ',' → logprob: -16.250850677490234
    7. '	b' → logprob: -17.375850677490234
    8. ' ' → logprob: -17.625850677490234
    9. '
' → logprob: -17.750850677490234
    10. '_b' → logprob: -17.875850677490234

Token 275: ' de' (ID: 334)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.002493968466296792
    2. ' b' → logprob: -6.002493858337402
    3. '   ' → logprob: -11.752493858337402
    4. 'a' → logprob: -11.877493858337402
    5. ',' → logprob: -13.252493858337402
    6. '	b' → logprob: -13.752493858337402
    7. '    ' → logprob: -14.877493858337402
    8. ' ' → logprob: -16.37749481201172
    9. '=' → logprob: -16.62749481201172
    10. '  ' → logprob: -17.25249481201172

Token 276: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -6.73052782076411e-05
    2. ' b' → logprob: -9.625067710876465
    3. 'a' → logprob: -13.625067710876465
    4. '	b' → logprob: -18.62506675720215
    5. ' ' → logprob: -19.00006675720215
    6. '_b' → logprob: -19.37506675720215
    7. '(b' → logprob: -19.50006675720215
    8. ' a' → logprob: -19.50006675720215
    9. '(' → logprob: -20.12506675720215
    10. '   ' → logprob: -20.25006675720215

Token 277: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11006215959787369
    2. '       ' → logprob: -2.3600621223449707
    3. ' ,' → logprob: -5.485062122344971
    4. 'a' → logprob: -5.610062122344971
    5. ',a' → logprob: -6.610062122344971
    6. ',
' → logprob: -7.985062122344971
    7. ' a' → logprob: -8.860062599182129
    8. '   ' → logprob: -9.360062599182129
    9. 'b' → logprob: -10.985062599182129
    10. 'temp' → logprob: -10.985062599182129

Token 278: ' met' (ID: 1421)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6871680021286011
    2. 'b' → logprob: -0.9371680021286011
    3. '       ' → logprob: -2.6871681213378906
    4. ' b' → logprob: -3.9371681213378906
    5. ' a' → logprob: -4.062168121337891
    6. '   ' → logprob: -8.18716812133789
    7. 'temp' → logprob: -9.18716812133789
    8. 'tmp' → logprob: -10.31216812133789
    9. ' temp' → logprob: -11.31216812133789
    10. ' ' → logprob: -11.31216812133789

Token 279: ' à' (ID: 1221)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.029303861781954765
    2. ' b' → logprob: -3.654303789138794
    3. 'a' → logprob: -5.904304027557373
    4. ' a' → logprob: -9.154303550720215
    5. '   ' → logprob: -9.654303550720215
    6. '    ' → logprob: -10.029303550720215
    7. ' ' → logprob: -11.029303550720215
    8. '	b' → logprob: -11.654303550720215
    9. '       ' → logprob: -11.904303550720215
    10. '=' → logprob: -12.154303550720215

Token 280: ' jour' (ID: 8379)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.03095761314034462
    2. ' b' → logprob: -3.5309576988220215
    3. 'a' → logprob: -6.7809576988220215
    4. ' a' → logprob: -9.780957221984863
    5. ' ' → logprob: -12.280957221984863
    6. 'c' → logprob: -13.780957221984863
    7. '	b' → logprob: -14.030957221984863
    8. '<|end|>' → logprob: -14.030957221984863
    9. '```' → logprob: -14.405957221984863
    10. '#' → logprob: -14.593457221984863

Token 281: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.005960560403764248
    2. ' b' → logprob: -5.130960464477539
    3. 'a' → logprob: -10.380960464477539
    4. ' a' → logprob: -14.255960464477539
    5. '	b' → logprob: -16.13096046447754
    6. '    ' → logprob: -16.38096046447754
    7. ' ' → logprob: -17.38096046447754
    8. ',' → logprob: -17.88096046447754
    9. '#' → logprob: -18.63096046447754
    10. '   ' → logprob: -18.75596046447754

Token 282: ' avec' (ID: 3937)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7690079212188721
    2. ' a' → logprob: -0.7690079212188721
    3. ',' → logprob: -3.144007921218872
    4. ' with' → logprob: -3.894007921218872
    5. ' avec' → logprob: -5.644007682800293
    6. ' ,' → logprob: -5.894007682800293
    7. 'with' → logprob: -6.019007682800293
    8. '=' → logprob: -8.394007682800293
    9. ' b' → logprob: -8.769007682800293
    10. ' =' → logprob: -9.144007682800293

Token 283: ' le' (ID: 505)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.012511059641838074
    2. ' a' → logprob: -4.387511253356934
    3. ' ' → logprob: -14.262511253356934
    4. ' the' → logprob: -14.387511253356934
    5. 'the' → logprob: -15.637511253356934
    6. '	a' → logprob: -16.137510299682617
    7. '(a' → logprob: -16.887510299682617
    8. 'b' → logprob: -18.012510299682617
    9. 'l' → logprob: -18.012510299682617
    10. '  ' → logprob: -18.137510299682617

Token 284: ' reste' (ID: 26769)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0006324975984171033
    2. ' a' → logprob: -7.375632286071777
    3. ' remainder' → logprob: -12.750632286071777
    4. 'reste' → logprob: -14.000632286071777
    5. 'rest' → logprob: -14.125632286071777
    6. 're' → logprob: -14.250632286071777
    7. 'r' → logprob: -14.250632286071777
    8. ' rest' → logprob: -16.375633239746094
    9. ' reste' → logprob: -16.500633239746094
    10. 'b' → logprob: -17.000633239746094

Token 285: ' de' (ID: 334)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.20167295634746552
    2. ' a' → logprob: -1.701672911643982
    3. '   ' → logprob: -9.826672554016113
    4. ' (' → logprob: -10.076672554016113
    5. ' of' → logprob: -10.201672554016113
    6. '	a' → logprob: -10.326672554016113
    7. '    ' → logprob: -11.076672554016113
    8. '(' → logprob: -11.201672554016113
    9. 'b' → logprob: -11.326672554016113
    10. '=' → logprob: -11.576672554016113

Token 286: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10020925104618073
    2. ' a' → logprob: -2.3502092361450195
    3. ' ' → logprob: -13.47520923614502
    4. '	a' → logprob: -14.97520923614502
    5. ' the' → logprob: -15.10020923614502
    6. '(a' → logprob: -16.350210189819336
    7. 'the' → logprob: -16.475210189819336
    8. ''a' → logprob: -16.725210189819336
    9. '```' → logprob: -16.850210189819336
    10. 'l' → logprob: -17.100210189819336

Token 287: ' division' (ID: 21629)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0026528246235102415
    2. ' a' → logprob: -6.002652645111084
    3. 'division' → logprob: -8.877653121948242
    4. ' division' → logprob: -10.627653121948242
    5. 'div' → logprob: -11.252653121948242
    6. ' ' → logprob: -15.377653121948242
    7. 'mod' → logprob: -16.127653121948242
    8. '	a' → logprob: -17.252653121948242
    9. 'r' → logprob: -17.252653121948242
    10. 'à' → logprob: -17.377653121948242

Token 288: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7957578301429749
    2. 'b' → logprob: -1.42075777053833
    3. ' a' → logprob: -1.79575777053833
    4. ' b' → logprob: -2.04575777053833
    5. ',' → logprob: -5.79575777053833
    6. '       ' → logprob: -6.04575777053833
    7. ' (' → logprob: -6.29575777053833
    8. ' =' → logprob: -6.42075777053833
    9. '   ' → logprob: -6.54575777053833
    10. '=' → logprob: -7.54575777053833

Token 289: ' par' (ID: 686)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.22709670662879944
    2. ' %' → logprob: -1.602096676826477
    3. 'a' → logprob: -7.2270965576171875
    4. ' ' → logprob: -7.3520965576171875
    5. '%b' → logprob: -8.477096557617188
    6. ' a' → logprob: -9.852096557617188
    7. ' by' → logprob: -11.102096557617188
    8. 'b' → logprob: -11.477096557617188
    9. '%s' → logprob: -12.602096557617188
    10. '%i' → logprob: -12.602096557617188

Token 290: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.026300758123397827
    2. ' b' → logprob: -3.6513006687164307
    3. ' ' → logprob: -15.401300430297852
    4. 'a' → logprob: -15.901300430297852
    5. ' a' → logprob: -16.40130043029785
    6. ' ' → logprob: -18.15130043029785
    7. '	b' → logprob: -18.77630043029785
    8. '```' → logprob: -18.96380043029785
    9. 's' → logprob: -19.77630043029785
    10. '`' → logprob: -19.77630043029785

Token 291: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7210007905960083
    2. 'a' → logprob: -0.8460007905960083
    3. ',' → logprob: -3.0960006713867188
    4. ' a' → logprob: -3.3460006713867188
    5. '        
' → logprob: -6.846000671386719
    6. ',a' → logprob: -6.846000671386719
    7. ' ,' → logprob: -7.096000671386719
    8. '   ' → logprob: -7.721000671386719
    9. '(a' → logprob: -9.471000671386719
    10. ' (' → logprob: -9.596000671386719

Token 292: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10285645723342896
    2. 'a' → logprob: -2.477856397628784
    3. ' a' → logprob: -4.477856636047363
    4. '        
' → logprob: -6.352856636047363
    5. ',' → logprob: -8.352856636047363
    6. '
' → logprob: -8.977856636047363
    7. '   ' → logprob: -8.977856636047363
    8. ' 
' → logprob: -9.852856636047363
    9. ',a' → logprob: -9.977856636047363
    10. '    
' → logprob: -10.727856636047363

Token 293: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.0029675960540771484
    2. 'b' → logprob: -6.627967834472656
    3. ' a' → logprob: -6.627967834472656
    4. '   ' → logprob: -8.627967834472656
    5. '       ' → logprob: -9.377967834472656
    6. 'temp' → logprob: -10.127967834472656
    7. ' b' → logprob: -11.752967834472656
    8. 'tmp' → logprob: -13.377967834472656
    9. '	a' → logprob: -13.502967834472656
    10. ' ' → logprob: -14.127967834472656

Token 294: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0074765984900295734
    2. '=' → logprob: -5.632476806640625
    3. '%' → logprob: -6.257476806640625
    4. ',b' → logprob: -7.382476806640625
    5. '%b' → logprob: -7.882476806640625
    6. '%=' → logprob: -8.007476806640625
    7. ' ,' → logprob: -8.007476806640625
    8. ' =' → logprob: -9.132476806640625
    9. 'b' → logprob: -9.882476806640625
    10. ' b' → logprob: -9.882476806640625

Token 295: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.16022665798664093
    2. ' b' → logprob: -1.9102267026901245
    3. ' ' → logprob: -13.535226821899414
    4. '    ' → logprob: -14.785226821899414
    5. '<|end|>' → logprob: -14.785226821899414
    6. '   ' → logprob: -15.035226821899414
    7. '  ' → logprob: -16.535226821899414
    8. '%b' → logprob: -16.910226821899414
    9. '	b' → logprob: -17.535226821899414
    10. 'a' → logprob: -17.910226821899414

Token 296: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759665369987488
    2. ' =' → logprob: -0.8259665369987488
    3. ',' → logprob: -10.575966835021973
    4. 'b' → logprob: -14.450966835021973
    5. ' =
' → logprob: -15.200966835021973
    6. '=
' → logprob: -15.325966835021973
    7. ' b' → logprob: -15.575966835021973
    8. '=b' → logprob: -15.825966835021973
    9. ' ,' → logprob: -16.075965881347656
    10. ' ' → logprob: -16.575965881347656

Token 297: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0181526318192482
    2. ' b' → logprob: -4.018152713775635
    3. '   ' → logprob: -13.018152236938477
    4. ' ' → logprob: -15.143152236938477
    5. '	b' → logprob: -16.018152236938477
    6. '    ' → logprob: -16.518152236938477
    7. '  ' → logprob: -16.893152236938477
    8. '(b' → logprob: -17.143152236938477
    9. '       ' → logprob: -18.018152236938477
    10. ')b' → logprob: -18.830652236938477

Token 298: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005688794772140682
    2. 'a' → logprob: -7.875568866729736
    3. ' ,' → logprob: -8.625569343566895
    4. ',a' → logprob: -11.750569343566895
    5. ' a' → logprob: -14.125569343566895
    6. ',
' → logprob: -14.500569343566895
    7. ' ' → logprob: -16.750568389892578
    8. 's' → logprob: -17.750568389892578
    9. '   ' → logprob: -18.000568389892578
    10. '0' → logprob: -18.250568389892578

Token 299: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.011047814972698689
    2. ' a' → logprob: -4.511047840118408
    3. ' ' → logprob: -17.63604736328125
    4. '	a' → logprob: -18.76104736328125
    5. '   ' → logprob: -20.38604736328125
    6. '(a' → logprob: -21.26104736328125
    7. '_a' → logprob: -21.38604736328125
    8. '#a' → logprob: -21.51104736328125
    9. 'A' → logprob: -21.76104736328125
    10. '  ' → logprob: -22.01104736328125

Token 300: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.25195789337158203
    2. ' %' → logprob: -1.501957893371582
    3. '%b' → logprob: -11.001957893371582
    4. 'a' → logprob: -12.001957893371582
    5. '%c' → logprob: -12.626957893371582
    6. ' ' → logprob: -13.626957893371582
    7. '%i' → logprob: -14.376957893371582
    8. ' ' → logprob: -14.751957893371582
    9. ' a' → logprob: -15.376957893371582
    10. '%d' → logprob: -16.001956939697266

Token 301: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0024756586644798517
    2. ' b' → logprob: -6.002475738525391
    3. '<|end|>' → logprob: -21.12747573852539
    4. ' ' → logprob: -21.25247573852539
    5. '	b' → logprob: -22.50247573852539
    6. '_b' → logprob: -23.75247573852539
    7. ')b' → logprob: -24.00247573852539
    8. 's' → logprob: -24.75247573852539
    9. '>b' → logprob: -24.87747573852539
    10. '   ' → logprob: -25.12747573852539

Token 302: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002170839812606573
    2. 'b' → logprob: -6.377171039581299
    3. 'return' → logprob: -7.877171039581299
    4. '    
' → logprob: -10.12717056274414
    5. ' return' → logprob: -10.62717056274414
    6. '<|end|>' → logprob: -11.37717056274414
    7. 'a' → logprob: -12.87717056274414
    8. ' b' → logprob: -13.12717056274414
    9. '
' → logprob: -13.75217056274414
    10. '       ' → logprob: -13.75217056274414

Token 303: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009376663947477937
    2. 'return' → logprob: -7.000937461853027
    3. ' return' → logprob: -11.000937461853027
    4. '    
' → logprob: -11.750937461853027
    5. '	return' → logprob: -14.250937461853027
    6. '
' → logprob: -15.125937461853027
    7. '       ' → logprob: -16.125938415527344
    8. ':return' → logprob: -16.250938415527344
    9. '        
' → logprob: -16.500938415527344
    10. '  
' → logprob: -16.750938415527344

Token 304: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.023946745321154594
    2. '   ' → logprob: -3.773946762084961
    3. ' return' → logprob: -7.273946762084961
    4. '    
' → logprob: -13.148946762084961
    5. ' ' → logprob: -13.398946762084961
    6. '	return' → logprob: -13.398946762084961
    7. ':return' → logprob: -13.398946762084961
    8. '
' → logprob: -15.398946762084961
    9. '```' → logprob: -15.398946762084961
    10. '@return' → logprob: -15.648946762084961

Token 305: ' Une' (ID: 19758)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.002478985348716378
    2. ' return' → logprob: -6.002479076385498
    3. 'Return' → logprob: -13.50247859954834
    4. 'ret' → logprob: -13.62747859954834
    5. 'Retour' → logprob: -15.25247859954834
    6. '#' → logprob: -15.50247859954834
    7. 'b' → logprob: -16.252479553222656
    8. '
' → logprob: -16.252479553222656
    9. '   ' → logprob: -16.627479553222656
    10. ' 
' → logprob: -17.127479553222656

Token 306: ' fois' (ID: 14697)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.606638491153717
    2. 'return' → logprob: -0.856638491153717
    3. '   ' → logprob: -3.9816384315490723
    4. 'eturn' → logprob: -5.106638431549072
    5. ' ' → logprob: -6.981638431549072
    6. 'b' → logprob: -7.106638431549072
    7. ' b' → logprob: -7.231638431549072
    8. ':return' → logprob: -7.606638431549072
    9. '  ' → logprob: -7.981638431549072
    10. 'def' → logprob: -8.48163890838623

Token 307: ' que' (ID: 661)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.12723538279533386
    2. ' b' → logprob: -2.1272354125976562
    3. '   ' → logprob: -8.377235412597656
    4. ' le' → logprob: -9.877235412597656
    5. ' ' → logprob: -11.502235412597656
    6. ' la' → logprob: -11.627235412597656
    7. 'le' → logprob: -12.877235412597656
    8. '  ' → logprob: -13.252235412597656
    9. '	b' → logprob: -14.252235412597656
    10. ' les' → logprob: -14.627235412597656

Token 308: ' le' (ID: 505)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0007114782347343862
    2. ' b' → logprob: -7.250711441040039
    3. '   ' → logprob: -14.125711441040039
    4. 'a' → logprob: -14.375711441040039
    5. 'return' → logprob: -16.12571144104004
    6. '#' → logprob: -16.75071144104004
    7. ' ' → logprob: -17.12571144104004
    8. '  ' → logprob: -18.00071144104004
    9. '	b' → logprob: -18.00071144104004
    10. ' a' → logprob: -18.37571144104004

Token 309: ' reste' (ID: 26769)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.17326274514198303
    2. 'a' → logprob: -2.29826283454895
    3. 'reste' → logprob: -3.79826283454895
    4. 're' → logprob: -4.548262596130371
    5. ' reste' → logprob: -4.673262596130371
    6. ' b' → logprob: -4.798262596130371
    7. ' remainder' → logprob: -5.423262596130371
    8. ' a' → logprob: -5.923262596130371
    9. 'while' → logprob: -7.923262596130371
    10. 'r' → logprob: -8.423262596130371

Token 310: ' est' (ID: 893)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.9958564639091492
    2. ' est' → logprob: -1.495856523513794
    3. '==' → logprob: -1.745856523513794
    4. 'est' → logprob: -2.495856523513794
    5. 'de' → logprob: -3.120856523513794
    6. ' b' → logprob: -3.370856523513794
    7. ' ==' → logprob: -3.495856523513794
    8. '   ' → logprob: -4.370856285095215
    9. ' de' → logprob: -4.495856285095215
    10. ' ' → logprob: -5.245856285095215

Token 311: ' nul' (ID: 64435)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0035603928845375776
    2. 'nul' → logprob: -6.128560543060303
    3. ' ' → logprob: -6.753560543060303
    4. 'z' → logprob: -8.878560066223145
    5. 'zero' → logprob: -10.753560066223145
    6. 'n' → logprob: -10.878560066223145
    7. ' zéro' → logprob: -12.003560066223145
    8. 'b' → logprob: -12.003560066223145
    9. ' nul' → logprob: -12.128560066223145
    10. '=' → logprob: -12.878560066223145

Token 312: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20189371705055237
    2. 'return' → logprob: -1.95189368724823
    3. ' return' → logprob: -3.2018938064575195
    4. ',' → logprob: -9.07689380645752
    5. ':return' → logprob: -11.82689380645752
    6. ' ' → logprob: -13.45189380645752
    7. '	return' → logprob: -13.57689380645752
    8. '    
' → logprob: -13.70189380645752
    9. '  ' → logprob: -14.20189380645752
    10. ' retour' → logprob: -14.70189380645752

Token 313: ' b' (ID: 287)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0016211456386372447
    2. ' return' → logprob: -7.001621246337891
    3. '   ' → logprob: -7.251621246337891
    4. '	return' → logprob: -14.87662124633789
    5. 'ret' → logprob: -17.87662124633789
    6. ' ' → logprob: -18.12662124633789
    7. '  ' → logprob: -18.37662124633789
    8. ':return' → logprob: -19.62662124633789
    9. '       ' → logprob: -20.50162124633789
    10. '#' → logprob: -20.87662124633789

Token 314: ' contient' (ID: 89067)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2678256034851074
    2. ' is' → logprob: -2.3928256034851074
    3. '<|end|>' → logprob: -2.5178256034851074
    4. ' return' → logprob: -3.2678256034851074
    5. ' est' → logprob: -4.392825603485107
    6. ' ' → logprob: -5.642825603485107
    7. 'est' → logprob: -5.767825603485107
    8. ':return' → logprob: -6.392825603485107
    9. '   ' → logprob: -7.267825603485107
    10. 'is' → logprob: -7.267825603485107

Token 315: ' le' (ID: 505)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.3691154420375824
    2. 'the' → logprob: -1.7441154718399048
    3. ' la' → logprob: -2.2441153526306152
    4. 'la' → logprob: -4.244115352630615
    5. ' le' → logprob: -4.994115352630615
    6. 'le' → logprob: -5.744115352630615
    7. 'l' → logprob: -6.369115352630615
    8. ' l' → logprob: -7.369115352630615
    9. 'b' → logprob: -7.494115352630615
    10. 'a' → logprob: -8.119115829467773

Token 316: ' pg' (ID: 32259)
  Prédit: 'pg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pg' → logprob: -0.4382728040218353
    2. 'g' → logprob: -1.9382728338241577
    3. 'plus' → logprob: -2.563272714614868
    4. ' gcd' → logprob: -2.563272714614868
    5. ' pg' → logprob: -3.438272714614868
    6. ' plus' → logprob: -3.938272714614868
    7. ' PG' → logprob: -6.188272953033447
    8. 'PG' → logprob: -7.188272953033447
    9. 'pp' → logprob: -7.313272953033447
    10. '_pg' → logprob: -7.688272953033447

Token 317: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -5.300083648762666e-05
    2. 'c' → logprob: -9.875053405761719
    3. 'cm' → logprob: -14.125053405761719
    4. 'dc' → logprob: -14.375053405761719
    5. 'd' → logprob: -15.625053405761719
    6. 'cp' → logprob: -17.25005340576172
    7. 'cc' → logprob: -17.62505340576172
    8. 'cs' → logprob: -17.62505340576172
    9. 'CD' → logprob: -19.25005340576172
    10. 'cdr' → logprob: -19.25005340576172

Token 318: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.180930033326149
    2. 'return' → logprob: -1.9309300184249878
    3. ' return' → logprob: -3.9309301376342773
    4. '
' → logprob: -8.055930137634277
    5. '    
' → logprob: -8.305930137634277
    6. '	return' → logprob: -9.180930137634277
    7. ':return' → logprob: -9.555930137634277
    8. '.' → logprob: -10.180930137634277
    9. '<|end|>' → logprob: -10.805930137634277
    10. '  ' → logprob: -10.930930137634277

Token 319: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25440287590026855
    2. 'return' → logprob: -1.5044028759002686
    3. ' return' → logprob: -6.004403114318848
    4. '	return' → logprob: -13.129403114318848
    5. ':return' → logprob: -14.879403114318848
    6. ' ' → logprob: -16.12940216064453
    7. '  ' → logprob: -16.37940216064453
    8. '{return' → logprob: -16.62940216064453
    9. 'b' → logprob: -16.75440216064453
    10. 'eturn' → logprob: -16.87940216064453

Token 320: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.007271283306181431
    2. ' return' → logprob: -5.5072712898254395
    3. '   ' → logprob: -5.7572712898254395
    4. 'b' → logprob: -10.632270812988281
    5. '	return' → logprob: -12.757270812988281
    6. ' ' → logprob: -14.757270812988281
    7. ':return' → logprob: -16.13227081298828
    8. 'Return' → logprob: -16.25727081298828
    9. ' b' → logprob: -16.38227081298828
    10. 'ret' → logprob: -16.63227081298828

Token 321: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00861456897109747
    2. ' b' → logprob: -4.758614540100098
    3. '	b' → logprob: -16.883615493774414
    4. '   ' → logprob: -17.258615493774414
    5. ' ' → logprob: -17.883615493774414
    6. ' ' → logprob: -18.508615493774414
    7. '_b' → logprob: -19.633615493774414
    8. '  ' → logprob: -21.008615493774414
    9. '\b' → logprob: -22.196115493774414
    10. '(b' → logprob: -22.383615493774414

Token 322: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 323: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8726730346679688
    2. '<|end|>' → logprob: -0.9976730346679688
    3. '#' → logprob: -1.8726730346679688
    4. '<|end|>' → logprob: -3.9976730346679688
    5. 'def' → logprob: -4.122673034667969
    6. ')' → logprob: -4.747673034667969
    7. ' ' → logprob: -5.497673034667969
    8. 'a' → logprob: -5.997673034667969
    9. ',' → logprob: -6.497673034667969
    10. '

' → logprob: -6.622673034667969

Token 324: ' Dé' (ID: 27247)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12197668850421906
    2. '#' → logprob: -2.246976613998413
    3. 'if' → logprob: -4.996976852416992
    4. 'import' → logprob: -6.621976852416992
    5. 'class' → logprob: -8.246976852416992
    6. 'from' → logprob: -8.746976852416992
    7. ' def' → logprob: -8.871976852416992
    8. ' #' → logprob: -9.496976852416992
    9. 'input' → logprob: -9.621976852416992
    10. ' if' → logprob: -9.746976852416992

Token 325: 'fin' (ID: 6994)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.00032044618274085224
    2. 'fin' → logprob: -9.000320434570312
    3. 'fi' → logprob: -9.250320434570312
    4. '#' → logprob: -9.625320434570312
    5. 'def' → logprob: -11.375320434570312
    6. 'fn' → logprob: -11.500320434570312
    7. 'fen' → logprob: -12.875320434570312
    8. 'ff' → logprob: -12.875320434570312
    9. 'fl' → logprob: -13.625320434570312
    10. '```' → logprob: -13.750320434570312

Token 326: 'ition' (ID: 868)
  Prédit: ' g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' g' → logprob: -0.8309470415115356
    2. ' def' → logprob: -0.9559470415115356
    3. ' gcd' → logprob: -1.9559470415115356
    4. 'inition' → logprob: -4.205946922302246
    5. 'g' → logprob: -4.455946922302246
    6. ' ' → logprob: -6.330946922302246
    7. ' f' → logprob: -6.705946922302246
    8. ' a' → logprob: -6.830946922302246
    9. ' code' → logprob: -7.205946922302246
    10. ' function' → logprob: -7.330946922302246

Token 327: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.33038291335105896
    2. ' def' → logprob: -1.7053829431533813
    3. ' (' → logprob: -3.455382823944092
    4. '_' → logprob: -3.455382823944092
    5. ' ' → logprob: -4.705382823944092
    6. ' d' → logprob: -4.955382823944092
    7. 'def' → logprob: -5.330382823944092
    8. '  ' → logprob: -5.330382823944092
    9. ' de' → logprob: -5.705382823944092
    10. ' _' → logprob: -6.330382823944092

Token 328: ' la' (ID: 557)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0018508200300857425
    2. ' def' → logprob: -7.376850605010986
    3. 'g' → logprob: -7.501850605010986
    4. 'a' → logprob: -8.501851081848145
    5. 'the' → logprob: -9.376851081848145
    6. 'l' → logprob: -9.501851081848145
    7. '#' → logprob: -9.751851081848145
    8. ' la' → logprob: -10.126851081848145
    9. ' a' → logprob: -10.501851081848145
    10. 'div' → logprob: -10.626851081848145

Token 329: ' fonction' (ID: 17610)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.020392976701259613
    2. ' def' → logprob: -4.770392894744873
    3. 'factor' → logprob: -5.645392894744873
    4. ' main' → logprob: -6.770392894744873
    5. 'l' → logprob: -6.895392894744873
    6. 'f' → logprob: -7.270392894744873
    7. '#' → logprob: -7.270392894744873
    8. 'class' → logprob: -7.270392894744873
    9. ' factorial' → logprob: -7.395392894744873
    10. 's' → logprob: -7.520392894744873

Token 330: ' principale' (ID: 68926)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07022863626480103
    2. ' def' → logprob: -3.6952285766601562
    3. 'solve' → logprob: -5.195228576660156
    4. ' main' → logprob: -5.445228576660156
    5. ' gcd' → logprob: -5.445228576660156
    6. '#' → logprob: -5.570228576660156
    7. ' l' → logprob: -5.945228576660156
    8. 'l' → logprob: -6.195228576660156
    9. ' solve' → logprob: -6.320228576660156
    10. 'find' → logprob: -6.320228576660156

Token 331: ' appelée' (ID: 179130)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01309751346707344
    2. ' def' → logprob: -4.388097286224365
    3. ':def' → logprob: -8.138097763061523
    4. ':' → logprob: -9.013097763061523
    5. '
' → logprob: -9.263097763061523
    6. '(def' → logprob: -10.388097763061523
    7. '(' → logprob: -11.263097763061523
    8. '(
' → logprob: -11.638097763061523
    9. ' 
' → logprob: -12.263097763061523
    10. 'de' → logprob: -12.638097763061523

Token 332: ' solve' (ID: 17722)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5637653470039368
    2. ' main' → logprob: -0.9387653470039368
    3. ' def' → logprob: -3.938765287399292
    4. 'main' → logprob: -3.938765287399292
    5. ' solve' → logprob: -8.063765525817871
    6. ' principale' → logprob: -9.188765525817871
    7. '(main' → logprob: -9.313765525817871
    8. '():' → logprob: -9.563765525817871
    9. 'solve' → logprob: -9.813765525817871
    10. '()' → logprob: -9.813765525817871

Token 333: '
' (ID: 198)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.003996596205979586
    2. '(' → logprob: -6.0039963722229
    3. ':' → logprob: -7.2539963722229
    4. '()' → logprob: -7.3789963722229
    5. 'def' → logprob: -8.753996849060059
    6. '():
' → logprob: -11.003996849060059
    7. '_' → logprob: -13.003996849060059
    8. '(:' → logprob: -13.003996849060059
    9. '(def' → logprob: -13.003996849060059
    10. ' ():' → logprob: -13.503996849060059

Token 334: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2546103596687317
    2. '():' → logprob: -1.504610300064087
    3. ':' → logprob: -6.754610538482666
    4. ':def' → logprob: -7.129610538482666
    5. '()' → logprob: -8.254610061645508
    6. ' def' → logprob: -8.379610061645508
    7. '():
' → logprob: -8.754610061645508
    8. '(' → logprob: -10.379610061645508
    9. '(def' → logprob: -10.504610061645508
    10. 'de' → logprob: -13.004610061645508

Token 335: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.03804194927215576
    2. ' solve' → logprob: -3.2880420684814453
    3. 's' → logprob: -15.163042068481445
    4. 'sol' → logprob: -15.413042068481445
    5. '.solve' → logprob: -17.163042068481445
    6. 'resolve' → logprob: -19.538042068481445
    7. ' ' → logprob: -19.663042068481445
    8. 'solution' → logprob: -19.663042068481445
    9. 'def' → logprob: -19.663042068481445
    10. 'so' → logprob: -19.788042068481445

Token 336: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00016420685278717428
    2. ' ():' → logprob: -8.750164031982422
    3. '():
' → logprob: -12.125164031982422
    4. '()' → logprob: -15.125164031982422
    5. '():
' → logprob: -18.500164031982422
    6. ' ()' → logprob: -18.750164031982422
    7. '()>' → logprob: -20.375164031982422
    8. '(' → logprob: -20.875164031982422
    9. '(":' → logprob: -21.250164031982422
    10. '(input' → logprob: -22.000164031982422

Token 337: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41129589080810547
    2. ':' → logprob: -1.2862958908081055
    3. '():' → logprob: -3.0362958908081055
    4. '(' → logprob: -5.4112958908081055
    5. ':
' → logprob: -5.9112958908081055
    6. '()' → logprob: -6.7862958908081055
    7. '    
' → logprob: -6.9112958908081055
    8. '():
' → logprob: -7.2862958908081055
    9. '
' → logprob: -7.6612958908081055
    10. '\n' → logprob: -7.9112958908081055

Token 338: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08790382742881775
    2. ' n' → logprob: -2.5879037380218506
    3. '   ' → logprob: -5.33790397644043
    4. ' input' → logprob: -6.08790397644043
    5. 'input' → logprob: -6.33790397644043
    6. 't' → logprob: -9.83790397644043
    7. 'import' → logprob: -10.21290397644043
    8. ' t' → logprob: -11.71290397644043
    9. '	n' → logprob: -11.83790397644043
    10. 'N' → logprob: -12.08790397644043

Token 339: ' Ass' (ID: 4744)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.19393931329250336
    2. 'n' → logprob: -1.8189393281936646
    3. ' input' → logprob: -4.443939208984375
    4. ' n' → logprob: -7.318939208984375
    5. '   ' → logprob: -7.443939208984375
    6. 'import' → logprob: -7.568939208984375
    7. '#' → logprob: -8.443939208984375
    8. 'N' → logprob: -8.818939208984375
    9. 'nb' → logprob: -10.068939208984375
    10. 't' → logprob: -10.443939208984375

Token 340: 'igne' (ID: 24120)
  Prédit: 'ert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ert' → logprob: -0.20391228795051575
    2. 'ign' → logprob: -1.7039122581481934
    3. 'e' → logprob: -7.328912258148193
    4. 'er' → logprob: -7.328912258148193
    5. 'ing' → logprob: -8.078912734985352
    6. 'ig' → logprob: -8.703912734985352
    7. '   ' → logprob: -8.953912734985352
    8. 'ist' → logprob: -9.578912734985352
    9. 'emb' → logprob: -9.953912734985352
    10. 'i' → logprob: -10.203912734985352

Token 341: ' la' (ID: 557)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.1343124955892563
    2. 'n' → logprob: -2.384312391281128
    3. '   ' → logprob: -4.009312629699707
    4. ' =' → logprob: -5.259312629699707
    5. ' input' → logprob: -5.384312629699707
    6. ' N' → logprob: -6.634312629699707
    7. '()' → logprob: -7.259312629699707
    8. ' line' → logprob: -7.259312629699707
    9. 'input' → logprob: -7.884312629699707
    10. 'N' → logprob: -8.134312629699707

Token 342: ' fonction' (ID: 17610)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7400935292243958
    2. 'n' → logprob: -0.9900935292243958
    3. 'ligne' → logprob: -2.990093469619751
    4. 'line' → logprob: -3.365093469619751
    5. 'int' → logprob: -4.86509370803833
    6. ' input' → logprob: -4.86509370803833
    7. ' =' → logprob: -4.86509370803833
    8. 'l' → logprob: -4.99009370803833
    9. ' n' → logprob: -4.99009370803833
    10. 'stdin' → logprob: -5.61509370803833

Token 343: ' sys' (ID: 12228)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8874383568763733
    2. 'input' → logprob: -1.6374382972717285
    3. '=sys' → logprob: -1.8874382972717285
    4. ' =' → logprob: -2.1374382972717285
    5. 'sys' → logprob: -2.3874382972717285
    6. ' sys' → logprob: -4.3874382972717285
    7. ' input' → logprob: -5.1374382972717285
    8. '=input' → logprob: -5.2624382972717285
    9. '(sys' → logprob: -5.3874382972717285
    10. '   ' → logprob: -6.1374382972717285

Token 344: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -4.537180211627856e-05
    2. '.' → logprob: -10.375045776367188
    3. '.stdout' → logprob: -11.750045776367188
    4. '.argv' → logprob: -12.750045776367188
    5. '.readline' → logprob: -13.375045776367188
    6. 'stdin' → logprob: -14.500045776367188
    7. ' .' → logprob: -15.125045776367188
    8. '.st' → logprob: -15.125045776367188
    9. '(stdin' → logprob: -15.375045776367188
    10. '.std' → logprob: -15.375045776367188

Token 345: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -8.41866585687967e-06
    2. '.' → logprob: -11.750008583068848
    3. '.read' → logprob: -15.125008583068848
    4. '.stdin' → logprob: -16.75000762939453
    5. '.readlines' → logprob: -17.00000762939453
    6. ' readline' → logprob: -18.50000762939453
    7. '.\' → logprob: -18.62500762939453
    8. '.buffer' → logprob: -19.25000762939453
    9. ' .' → logprob: -20.62500762939453
    10. '.__' → logprob: -20.62500762939453

Token 346: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39099058508872986
    2. '=sys' → logprob: -1.6409906148910522
    3. '=' → logprob: -2.5159904956817627
    4. '()' → logprob: -3.7659904956817627
    5. '   ' → logprob: -4.390990734100342
    6. 'sys' → logprob: -5.265990734100342
    7. '(sys' → logprob: -5.765990734100342
    8. ' sys' → logprob: -6.515990734100342
    9. ' ' → logprob: -7.140990734100342
    10. ' to' → logprob: -7.265990734100342

Token 347: ' '' (ID: 461)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.21049360930919647
    2. 'sys' → logprob: -1.710493564605713
    3. ' input' → logprob: -5.335493564605713
    4. ' sys' → logprob: -5.710493564605713
    5. 'read' → logprob: -7.210493564605713
    6. 'stdin' → logprob: -9.085494041442871
    7. '   ' → logprob: -11.335494041442871
    8. '=sys' → logprob: -11.460494041442871
    9. 'reader' → logprob: -11.835494041442871
    10. 'r' → logprob: -11.960494041442871

Token 348: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00048715711454860866
    2. 'read' → logprob: -7.875487327575684
    3. ' input' → logprob: -9.500487327575684
    4. 'stdin' → logprob: -11.000487327575684
    5. 'sys' → logprob: -11.750487327575684
    6. 'inp' → logprob: -12.625487327575684
    7. 'reader' → logprob: -13.375487327575684
    8. 'r' → logprob: -13.750487327575684
    9. 'in' → logprob: -14.500487327575684
    10. 'rl' → logprob: -15.000487327575684

Token 349: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.009497169405221939
    2. ')'' → logprob: -5.009497165679932
    3. '()' → logprob: -6.384497165679932
    4. '_input' → logprob: -8.13449764251709
    5. ''
' → logprob: -8.63449764251709
    6. ')' → logprob: -8.75949764251709
    7. ' =' → logprob: -8.88449764251709
    8. ' '' → logprob: -9.00949764251709
    9. '_line' → logprob: -10.25949764251709
    10. '   ' → logprob: -10.50949764251709

Token 350: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04397525638341904
    2. '=' → logprob: -3.293975353240967
    3. '   ' → logprob: -5.543975353240967
    4. '=input' → logprob: -6.293975353240967
    5. ' =
' → logprob: -9.293974876403809
    6. 'input' → logprob: -10.293974876403809
    7. '=
' → logprob: -11.043974876403809
    8. '=sys' → logprob: -12.168974876403809
    9. '
' → logprob: -12.293974876403809
    10. ' ' → logprob: -13.168974876403809

Token 351: ' des' (ID: 731)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.22826063632965088
    2. 'input' → logprob: -1.6032606363296509
    3. '_' → logprob: -6.228260517120361
    4. ' sys' → logprob: -7.603260517120361
    5. 'sys' → logprob: -9.35326099395752
    6. '_input' → logprob: -9.47826099395752
    7. ' _' → logprob: -9.72826099395752
    8. ' read' → logprob: -10.60326099395752
    9. '   ' → logprob: -10.60326099395752
    10. '    ' → logprob: -10.72826099395752

Token 352: ' lectures' (ID: 54066)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -1.0565199851989746
    2. 'input' → logprob: -1.9315199851989746
    3. '_' → logprob: -2.1815199851989746
    4. ' sys' → logprob: -2.3065199851989746
    5. ' readline' → logprob: -2.3065199851989746
    6. ' fast' → logprob: -2.9315199851989746
    7. ' stdin' → logprob: -4.431519985198975
    8. 'stdin' → logprob: -4.556519985198975
    9. '=sys' → logprob: -4.556519985198975
    10. ' rapides' → logprob: -4.681519985198975

Token 353: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.15503212809562683
    2. ' rapide' → logprob: -2.655032157897949
    3. '=' → logprob: -3.405032157897949
    4. ' rapides' → logprob: -4.155032157897949
    5. ' =' → logprob: -4.905032157897949
    6. '=sys' → logprob: -5.030032157897949
    7. 'rapid' → logprob: -5.280032157897949
    8. ' faster' → logprob: -7.155032157897949
    9. 'rap' → logprob: -7.155032157897949
    10. ' rápidas' → logprob: -7.155032157897949

Token 354: ' lignes' (ID: 81687)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.9470410943031311
    2. 'l' → logprob: -1.5720410346984863
    3. '=sys' → logprob: -1.9470410346984863
    4. 'input' → logprob: -2.4470410346984863
    5. 'stdin' → logprob: -2.9470410346984863
    6. ' sys' → logprob: -2.9470410346984863
    7. 'ligne' → logprob: -3.4470410346984863
    8. ' input' → logprob: -4.572041034698486
    9. ' stdin' → logprob: -5.572041034698486
    10. '()' → logprob: -5.822041034698486

Token 355: ' plus' (ID: 2932)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5804809927940369
    2. ' =' → logprob: -0.8304809927940369
    3. '=sys' → logprob: -5.830481052398682
    4. '(' → logprob: -7.330481052398682
    5. '=input' → logprob: -7.830481052398682
    6. '()' → logprob: -8.705480575561523
    7. '   ' → logprob: -8.955480575561523
    8. '_' → logprob: -8.955480575561523
    9. '(sys' → logprob: -10.705480575561523
    10. '_=' → logprob: -10.955480575561523

Token 356: ' rapides' (ID: 163697)
  Prédit: ' rapides'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rapides' → logprob: -0.10162775963544846
    2. 'rap' → logprob: -2.476627826690674
    3. ' rapide' → logprob: -4.476627826690674
    4. ' efficaces' → logprob: -7.976627826690674
    5. ' rápidas' → logprob: -8.226627349853516
    6. ' rap' → logprob: -8.726627349853516
    7. 'rapid' → logprob: -9.101627349853516
    8. ' rapid' → logprob: -9.226627349853516
    9. 'vel' → logprob: -9.601627349853516
    10. ' optim' → logprob: -10.476627349853516

Token 357: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.395567923784256
    2. 'input' → logprob: -1.5205678939819336
    3. '=input' → logprob: -2.6455678939819336
    4. ' input' → logprob: -3.7705678939819336
    5. ' =' → logprob: -4.645567893981934
    6. '=' → logprob: -5.895567893981934
    7. '(input' → logprob: -6.770567893981934
    8. '
' → logprob: -8.520567893981934
    9. '	input' → logprob: -9.020567893981934
    10. '    
' → logprob: -9.770567893981934

Token 358: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08101385831832886
    2. ' =' → logprob: -3.0810139179229736
    3. 'input' → logprob: -4.0810136795043945
    4. '=input' → logprob: -4.8310136795043945
    5. '=' → logprob: -5.5810136795043945
    6. ' input' → logprob: -6.3310136795043945
    7. '(input' → logprob: -7.0810136795043945
    8. '    
' → logprob: -8.581013679504395
    9. '
' → logprob: -8.831013679504395
    10. '()' → logprob: -9.706013679504395

Token 359: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.07890443503856659
    2. ' input' → logprob: -2.578904390335083
    3. '   ' → logprob: -11.203904151916504
    4. 'import' → logprob: -13.953904151916504
    5. '	input' → logprob: -15.828904151916504
    6. '=input' → logprob: -17.95390510559082
    7. '<input' → logprob: -18.07890510559082
    8. '_input' → logprob: -18.70390510559082
    9. 'Input' → logprob: -18.95390510559082
    10. ' ' → logprob: -19.20390510559082

Token 360: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25227537751197815
    2. ' =' → logprob: -1.5022753477096558
    3. '=sys' → logprob: -8.252275466918945
    4. '()' → logprob: -9.752275466918945
    5. ' ' → logprob: -11.377275466918945
    6. '=lambda' → logprob: -12.127275466918945
    7. '   ' → logprob: -12.627275466918945
    8. '＝' → logprob: -12.752275466918945
    9. '=input' → logprob: -14.252275466918945
    10. '=line' → logprob: -14.377275466918945

Token 361: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.008614926598966122
    2. ' sys' → logprob: -4.758615016937256
    3. '	sys' → logprob: -15.383614540100098
    4. '=sys' → logprob: -16.258615493774414
    5. '(sys' → logprob: -17.008615493774414
    6. '_sys' → logprob: -20.508615493774414
    7. '   ' → logprob: -21.258615493774414
    8. 'Sys' → logprob: -21.258615493774414
    9. 'lambda' → logprob: -21.508615493774414
    10. 'sy' → logprob: -22.008615493774414

Token 362: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0020430791191756725
    2. '.' → logprob: -6.2520432472229
    3. '.readline' → logprob: -9.252042770385742
    4. '.stdout' → logprob: -11.502042770385742
    5. '.std' → logprob: -12.502042770385742
    6. '(stdin' → logprob: -13.502042770385742
    7. 'stdin' → logprob: -13.627042770385742
    8. ' .' → logprob: -14.127042770385742
    9. '.st' → logprob: -14.627042770385742
    10. '.​' → logprob: -15.127042770385742

Token 363: '.readline' (ID: 74673)
  Prédit: '.stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.5760146379470825
    2. '.readline' → logprob: -0.8260146379470825
    3. '.' → logprob: -9.826014518737793
    4. '.stdout' → logprob: -11.451014518737793
    5. ' .' → logprob: -11.826014518737793
    6. '.read' → logprob: -13.451014518737793
    7. '.readlines' → logprob: -14.576014518737793
    8. '.std' → logprob: -14.576014518737793
    9. 'stdin' → logprob: -15.326014518737793
    10. '.argv' → logprob: -15.451014518737793

Token 364: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02109425887465477
    2. '    
' → logprob: -3.89609432220459
    3. '   
' → logprob: -8.64609432220459
    4. '
' → logprob: -8.77109432220459
    5. '  
' → logprob: -9.27109432220459
    6. '()' → logprob: -10.14609432220459
    7. '  ' → logprob: -11.02109432220459
    8. '    ' → logprob: -11.02109432220459
    9. ' 
' → logprob: -11.14609432220459
    10. '     
' → logprob: -12.02109432220459

Token 365: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018558884039521217
    2. '    
' → logprob: -4.018558979034424
    3. 'n' → logprob: -8.768558502197266
    4. '   
' → logprob: -9.518558502197266
    5. '
' → logprob: -9.643558502197266
    6. '  
' → logprob: -10.143558502197266
    7. ' 
' → logprob: -11.268558502197266
    8. '    ' → logprob: -11.268558502197266
    9. 'a' → logprob: -11.643558502197266
    10. '     
' → logprob: -11.893558502197266

Token 366: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.25414198637008667
    2. '   ' → logprob: -1.5041420459747314
    3. ' n' → logprob: -7.129141807556152
    4. '    
' → logprob: -7.254141807556152
    5. '
' → logprob: -8.129141807556152
    6. ' 
' → logprob: -9.629141807556152
    7. 'a' → logprob: -10.129141807556152
    8. '#' (adapté à ' #') → logprob: -10.129141807556152
    9. '   
' → logprob: -10.129141807556152
    10. '	n' → logprob: -10.129141807556152

Token 367: ' Déf' (ID: 180635)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1328587681055069
    2. 't' → logprob: -2.3828587532043457
    3. '   ' → logprob: -4.007858753204346
    4. 'T' → logprob: -5.007858753204346
    5. ' n' → logprob: -5.757858753204346
    6. '#' → logprob: -6.382858753204346
    7. ' t' → logprob: -7.007858753204346
    8. 'nb' → logprob: -7.257858753204346
    9. 'N' → logprob: -7.632858753204346
    10. ' T' → logprob: -8.882859230041504

Token 368: 'init' (ID: 3287)
  Prédit: 'inir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inir' → logprob: -0.17411765456199646
    2. 'init' → logprob: -2.5491175651550293
    3. 'inis' → logprob: -3.4241175651550293
    4. 'ine' → logprob: -3.9241175651550293
    5. 'inition' → logprob: -4.424117565155029
    6. '   ' → logprob: -4.674117565155029
    7. 'inie' → logprob: -5.674117565155029
    8. 'ini' → logprob: -6.174117565155029
    9. 'initial' → logprob: -7.299117565155029
    10. ' init' → logprob: -7.549117565155029

Token 369: ' une' (ID: 2463)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.18456853926181793
    2. 'n' → logprob: -1.9345685243606567
    3. ' t' → logprob: -4.309568405151367
    4. '   ' → logprob: -5.434568405151367
    5. 't' → logprob: -5.434568405151367
    6. ' T' → logprob: -7.934568405151367
    7. ' un' → logprob: -8.309568405151367
    8. '()' → logprob: -8.434568405151367
    9. ' N' → logprob: -8.684568405151367
    10. ' la' → logprob: -8.809568405151367

Token 370: ' constante' (ID: 49652)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.1236497163772583
    2. ' ' → logprob: -1.3736497163772583
    3. ' =' → logprob: -2.1236495971679688
    4. ' n' → logprob: -2.1236495971679688
    5. 't' → logprob: -2.9986495971679688
    6. '()' → logprob: -3.7486495971679688
    7. ' t' → logprob: -4.248649597167969
    8. '=' → logprob: -4.373649597167969
    9. 'int' → logprob: -4.373649597167969
    10. ' variable' → logprob: -4.498649597167969

Token 371: ' '' (ID: 461)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' N' → logprob: -1.0438570976257324
    2. ' MAX' → logprob: -1.4188570976257324
    3. ' =' → logprob: -1.7938570976257324
    4. ' n' → logprob: -2.5438570976257324
    5. 'N' → logprob: -3.1688570976257324
    6. ' INF' → logprob: -3.1688570976257324
    7. 'MAX' → logprob: -3.7938570976257324
    8. ' MOD' → logprob: -3.9188570976257324
    9. 'n' → logprob: -5.043857097625732
    10. ' K' → logprob: -5.168857097625732

Token 372: 'mod' (ID: 4847)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.3238167464733124
    2. 'INF' → logprob: -2.1988167762756348
    3. 'MAX' → logprob: -2.5738167762756348
    4. 'N' → logprob: -3.3238167762756348
    5. 'T' → logprob: -3.4488167762756348
    6. 't' → logprob: -5.198816776275635
    7. 'M' → logprob: -5.198816776275635
    8. 'NB' → logprob: -6.448816776275635
    9. ' MOD' → logprob: -6.448816776275635
    10. 'n' → logprob: -6.698816776275635

Token 373: ''' (ID: 6)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.040987636893987656
    2. '=' → logprob: -3.540987730026245
    3. ''' → logprob: -4.665987491607666
    4. ' ='' → logprob: -7.165987491607666
    5. 'ULO' → logprob: -7.915987491607666
    6. 'ule' → logprob: -8.040987968444824
    7. 'ulus' → logprob: -9.040987968444824
    8. 'ulo' → logprob: -9.540987968444824
    9. '='' → logprob: -10.665987968444824
    10. '')' → logprob: -11.040987968444824

Token 374: ' qui' (ID: 2780)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141538977622986
    2. '=' → logprob: -1.7014154195785522
    3. ' ' → logprob: -13.576415061950684
    4. '   ' → logprob: -14.826415061950684
    5. ' =
' → logprob: -15.576415061950684
    6. ',' → logprob: -15.951415061950684
    7. '  ' → logprob: -17.076416015625
    8. ' ,' → logprob: -17.826416015625
    9. '=int' → logprob: -17.951416015625
    10. '    ' → logprob: -18.201416015625

Token 375: ' sera' (ID: 15511)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141558349132538
    2. ' =' → logprob: -1.7014155387878418
    3. ' ' → logprob: -13.701416015625
    4. ',' → logprob: -15.076416015625
    5. '=
' → logprob: -15.326416015625
    6. ' =
' → logprob: -15.576416015625
    7. '=int' → logprob: -15.701416015625
    8. '=

' → logprob: -16.076416015625
    9. '=}' → logprob: -17.326416015625
    10. '.' → logprob: -17.326416015625

Token 376: ' utilisée' (ID: 106548)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.22969593107700348
    2. ' ' → logprob: -1.6046959161758423
    3. '100' → logprob: -5.479695796966553
    4. '1' → logprob: -9.979696273803711
    5. 'int' → logprob: -10.104696273803711
    6. ' int' → logprob: -12.229696273803711
    7. '=' → logprob: -13.104696273803711
    8. '109' → logprob: -13.354696273803711
    9. ' =' → logprob: -13.729696273803711
    10. '998' → logprob: -13.979696273803711

Token 377: ' pour' (ID: 1930)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34852874279022217
    2. ' =' → logprob: -1.2235287427902222
    3. ' ' → logprob: -10.348528861999512
    4. '   ' → logprob: -10.473528861999512
    5. ' =
' → logprob: -11.973528861999512
    6. ',' → logprob: -12.223528861999512
    7. '=
' → logprob: -12.723528861999512
    8. '=int' → logprob: -13.348528861999512
    9. '0' → logprob: -14.098528861999512
    10. '1' → logprob: -14.223528861999512

Token 378: ' les' (ID: 1341)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3831179141998291
    2. '10' → logprob: -1.258117914199829
    3. '100' → logprob: -3.383117914199829
    4. '998' → logprob: -10.00811767578125
    5. 'int' → logprob: -10.38311767578125
    6. ' (' → logprob: -10.75811767578125
    7. ' int' → logprob: -10.88311767578125
    8. '1' → logprob: -11.88311767578125
    9. '(' → logprob: -12.25811767578125
    10. ' ' → logprob: -13.50811767578125

Token 379: ' opérations' (ID: 102793)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.05287390202283859
    2. ' ' → logprob: -3.6778738498687744
    3. '100' → logprob: -4.0528740882873535
    4. ' modulo' → logprob: -6.5528740882873535
    5. ' (' → logprob: -6.6778740882873535
    6. '998' → logprob: -7.1778740882873535
    7. '(' → logprob: -7.3028740882873535
    8. 'int' → logprob: -7.4278740882873535
    9. 'mod' → logprob: -7.6778740882873535
    10. ' =' → logprob: -7.8028740882873535

Token 380: ' modulo' (ID: 112372)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04708004370331764
    2. '=' → logprob: -3.4220800399780273
    3. '10' → logprob: -4.672080039978027
    4. ' ' → logprob: -6.047080039978027
    5. '100' → logprob: -8.047080039978027
    6. ' %=' → logprob: -8.047080039978027
    7. ' mod' → logprob: -8.422080039978027
    8. ' modulo' → logprob: -9.047080039978027
    9. 'mod' → logprob: -9.172080039978027
    10. '_' → logprob: -9.422080039978027

Token 381: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.27406519651412964
    2. '=' → logprob: -1.7740652561187744
    3. ' ' → logprob: -2.8990652561187744
    4. '   ' → logprob: -4.399065017700195
    5. '10' → logprob: -7.399065017700195
    6. ',' → logprob: -7.774065017700195
    7. '100' → logprob: -8.024065017700195
    8. ':' → logprob: -8.274065017700195
    9. '  ' → logprob: -8.649065017700195
    10. ' :' → logprob: -8.899065017700195

Token 382: 'tr' (ID: 371)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0008551205391995609
    2. ' ' → logprob: -7.250854969024658
    3. '100' → logprob: -9.250855445861816
    4. '1' → logprob: -10.750855445861816
    5. '   ' → logprob: -11.125855445861816
    6. '=' → logprob: -12.375855445861816
    7. 'int' → logprob: -12.875855445861816
    8. ')' → logprob: -13.125855445861816
    9. '998' → logprob: -13.125855445861816
    10. '```' → logprob: -14.500855445861816

Token 383: 'ès' (ID: 4119)
  Prédit: 'ue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.5980265736579895
    2. ' =' → logprob: -1.9730265140533447
    3. 'e' → logprob: -2.3480265140533447
    4. '=' → logprob: -3.2230265140533447
    5. ' mod' → logprob: -3.2230265140533447
    6. 'mod' → logprob: -3.7230265140533447
    7. 'em' → logprob: -3.9730265140533447
    8. 'ès' → logprob: -4.223026752471924
    9. 'es' → logprob: -4.598026752471924
    10. 'ans' → logprob: -4.848026752471924

Token 384: ' utile' (ID: 68237)
  Prédit: ' large'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' large' → logprob: -0.07164478302001953
    2. ')' → logprob: -3.6966447830200195
    3. ' ' → logprob: -3.9466447830200195
    4. ' =' → logprob: -5.4466447830200195
    5. ' )' → logprob: -5.4466447830200195
    6. '=' → logprob: -5.6966447830200195
    7. '_' → logprob: -6.1966447830200195
    8. ' common' → logprob: -6.8216447830200195
    9. ',' → logprob: -7.4466447830200195
    10. '999' → logprob: -7.4466447830200195

Token 385: ' pour' (ID: 1930)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.3950265944004059
    2. ')' → logprob: -1.2700265645980835
    3. ' en' → logprob: -3.270026683807373
    4. ' dans' → logprob: -5.145026683807373
    5. ' pour' → logprob: -7.145026683807373
    6. ' in' → logprob: -8.145026206970215
    7. 'dans' → logprob: -9.395026206970215
    8. ' for' → logprob: -9.520026206970215
    9. ' )
' → logprob: -9.645026206970215
    10. 'pour' → logprob: -9.895026206970215

Token 386: ' éviter' (ID: 64013)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6663348078727722
    2. '10' → logprob: -0.7913348078727722
    3. ' les' → logprob: -3.666334867477417
    4. '100' → logprob: -6.041334629058838
    5. ' l' → logprob: -7.041334629058838
    6. ' le' → logprob: -7.166334629058838
    7. '998' → logprob: -7.291334629058838
    8. ' int' → logprob: -7.541334629058838
    9. ' la' → logprob: -7.916334629058838
    10. ' ' → logprob: -8.166335105895996

Token 387: ' les' (ID: 1341)
  Prédit: ' overflow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' overflow' → logprob: -0.3500989079475403
    2. ' les' → logprob: -1.7250988483428955
    3. ' l' → logprob: -3.1000988483428955
    4. ' ' → logprob: -3.8500988483428955
    5. ' integer' → logprob: -3.8500988483428955
    6. ' des' → logprob: -4.350099086761475
    7. ' la' → logprob: -5.350099086761475
    8. ' le' → logprob: -5.475099086761475
    9. ' int' → logprob: -5.850099086761475
    10. ' une' → logprob: -6.600099086761475

Token 388: ' grands' (ID: 43085)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9621549248695374
    2. ' overflow' → logprob: -1.7121548652648926
    3. ' integer' → logprob: -1.7121548652648926
    4. ' integers' → logprob: -1.9621548652648926
    5. ' modulo' → logprob: -2.9621548652648926
    6. ' large' → logprob: -4.212154865264893
    7. ' mod' → logprob: -5.087154865264893
    8. ' modulus' → logprob: -5.337154865264893
    9. 'overflow' → logprob: -5.462154865264893
    10. ' int' → logprob: -5.587154865264893

Token 389: ' nombres' (ID: 76205)
  Prédit: ' nombres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.05497436597943306
    2. ' integers' → logprob: -3.554974317550659
    3. ' numbers' → logprob: -4.179974555969238
    4. ' ent' → logprob: -5.179974555969238
    5. ' nombre' → logprob: -6.554974555969238
    6. ' espaces' → logprob: -6.679974555969238
    7. ' integer' → logprob: -8.054974555969238
    8. 'numbers' → logprob: -8.554974555969238
    9. 's' → logprob: -8.929974555969238
    10. 'inte' → logprob: -8.929974555969238

Token 390: ')
' (ID: 446)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.35019153356552124
    2. ')' → logprob: -1.225191593170166
    3. ',' → logprob: -7.975191593170166
    4. ' ' → logprob: -8.350191116333008
    5. ' de' → logprob: -8.350191116333008
    6. ' )
' → logprob: -8.725191116333008
    7. ' modulo' → logprob: -8.725191116333008
    8. ' ,' → logprob: -8.850191116333008
    9. ' ).' → logprob: -9.975191116333008
    10. ')\' → logprob: -10.100191116333008

Token 391: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10786614567041397
    2. '=' → logprob: -2.732866048812866
    3. 'mod' → logprob: -3.857866048812866
    4. '   ' → logprob: -4.857866287231445
    5. ' mod' → logprob: -5.107866287231445
    6. ' =
' → logprob: -7.107866287231445
    7. ' ' → logprob: -7.107866287231445
    8. '10' → logprob: -7.982866287231445
    9. '=
' → logprob: -9.607866287231445
    10. '100' → logprob: -9.982866287231445

Token 392: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' (adapté à ' mod') → logprob: -0.16104266047477722
    2. ' mod' → logprob: -1.9110426902770996
    3. '10' → logprob: -7.4110426902771
    4. '100' → logprob: -9.036042213439941
    5. ' ' → logprob: -9.536042213439941
    6. 'MOD' → logprob: -11.536042213439941
    7. ' MOD' → logprob: -12.536042213439941
    8. '   ' → logprob: -13.036042213439941
    9. '	mod' → logprob: -13.411042213439941
    10. '1' → logprob: -13.411042213439941

Token 393: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1002088338136673
    2. '=' → logprob: -2.3502087593078613
    3. ' ' → logprob: -13.60020923614502
    4. ',' → logprob: -14.60020923614502
    5. '=int' → logprob: -15.72520923614502
    6. ' =
' → logprob: -15.85020923614502
    7. '  ' → logprob: -16.475208282470703
    8. ')' → logprob: -17.225208282470703
    9. '   ' → logprob: -17.225208282470703
    10. ' ,' → logprob: -17.350208282470703

Token 394: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.021402588114142418
    2. '100' → logprob: -4.021402359008789
    3. ' ' → logprob: -5.771402359008789
    4. '998' → logprob: -9.271402359008789
    5. '1' → logprob: -10.271402359008789
    6. 'int' → logprob: -13.396402359008789
    7. '123' → logprob: -15.021402359008789
    8. '999' → logprob: -15.021402359008789
    9. '109' → logprob: -15.021402359008789
    10. '   ' → logprob: -15.396402359008789

Token 395: '7' (ID: 22)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.038088537752628326
    2. '100' → logprob: -3.28808856010437
    3. '1' → logprob: -10.66308879852295
    4. 'int' → logprob: -11.28808879852295
    5. '998' → logprob: -11.53808879852295
    6. '(' → logprob: -14.41308879852295
    7. ' ' → logprob: -14.66308879852295
    8. '123' → logprob: -16.163087844848633
    9. '109' → logprob: -16.538087844848633
    10. '999' → logprob: -16.663087844848633

Token 396: ' +' (ID: 659)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '000' → logprob: -0.33382320404052734
    2. '10' → logprob: -1.5838232040405273
    3. '17' → logprob: -2.8338232040405273
    4. '100' → logprob: -5.583823204040527
    5. '1' → logprob: -6.083823204040527
    6. '_' → logprob: -6.458823204040527
    7. '7' → logprob: -7.208823204040527
    8. '998' → logprob: -7.208823204040527
    9. '173' → logprob: -7.208823204040527
    10. '19' → logprob: -7.333823204040527

Token 397: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0013058334589004517
    2. '000' → logprob: -7.501306056976318
    3. '100' → logprob: -8.00130558013916
    4. '19' → logprob: -9.25130558013916
    5. '109' → logprob: -9.37630558013916
    6. '2' → logprob: -10.25130558013916
    7. '_' → logprob: -10.37630558013916
    8. '1' → logprob: -10.50130558013916
    9. ' ' → logprob: -10.87630558013916
    10. '998' → logprob: -11.25130558013916

Token 398: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -3.5954712075181305e-05
    2. '100' → logprob: -10.750036239624023
    3. '1' → logprob: -11.875036239624023
    4. '109' → logprob: -13.125036239624023
    5. 'int' → logprob: -13.625036239624023
    6. '19' → logprob: -13.875036239624023
    7. '(' → logprob: -14.000036239624023
    8. '998' → logprob: -14.125036239624023
    9. ' ' → logprob: -15.375036239624023
    10. '2' → logprob: -15.750036239624023

Token 399: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.31401169300079346
    2. '9' → logprob: -1.3140116930007935
    3. '7' → logprob: -8.189011573791504
    4. '*' → logprob: -8.564011573791504
    5. '6' → logprob: -9.064011573791504
    6. '^' → logprob: -9.939011573791504
    7. '8' → logprob: -10.314011573791504
    8. '4' → logprob: -10.439011573791504
    9. '```' → logprob: -10.939011573791504
    10. '000' → logprob: -11.314011573791504

Token 400: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -7.896309739408025e-07
    2. '8' → logprob: -14.750000953674316
    3. '09' → logprob: -15.375000953674316
    4. '+' → logprob: -16.5
    5. '
' → logprob: -17.625
    6. ' ' → logprob: -17.875
    7. '**' → logprob: -18.25
    8. '```' → logprob: -18.25
    9. '6' → logprob: -19.875
    10. '7' → logprob: -20.25

Token 401: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.00023119196703191847
    2. '8' → logprob: -8.37523078918457
    3. ' ' → logprob: -15.62523078918457
    4. '+' → logprob: -15.75023078918457
    5. '
' → logprob: -15.87523078918457
    6. '7' → logprob: -16.75023078918457
    7. '**' → logprob: -17.25023078918457
    8. '

' → logprob: -17.75023078918457
    9. '09' → logprob: -18.00023078918457
    10. '10' → logprob: -18.00023078918457

Token 402: ' ' (ID: 220)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2374437153339386
    2. '9' → logprob: -1.7374436855316162
    3. '<|end|>' → logprob: -3.362443685531616
    4. ' ' → logprob: -8.862443923950195
    5. ' +' → logprob: -8.987443923950195
    6. '```' → logprob: -9.112443923950195
    7. '7' → logprob: -9.487443923950195
    8. '**' → logprob: -10.112443923950195
    9. '=' → logprob: -10.237443923950195
    10. '%' → logprob: -10.362443923950195

Token 403: ' #' (ID: 1069)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03307602182030678
    2. '9' → logprob: -4.15807580947876
    3. '<|end|>' → logprob: -4.15807580947876
    4. '7' → logprob: -6.90807580947876
    5. ' +' → logprob: -8.908076286315918
    6. ' ' → logprob: -10.533076286315918
    7. '```' → logprob: -10.658076286315918
    8. '<|end|>' → logprob: -11.658076286315918
    9. '#' → logprob: -11.783076286315918
    10. '=' → logprob: -11.908076286315918

Token 404: ' mod' (ID: 1812)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.03405642509460449
    2. '<|end|>' → logprob: -3.6590564250946045
    3. ' ' → logprob: -5.659056663513184
    4. '+' → logprob: -5.659056663513184
    5. '7' → logprob: -8.159056663513184
    6. '```' → logprob: -8.909056663513184
    7. '<|end|>' → logprob: -9.409056663513184
    8. '09' → logprob: -10.534056663513184
    9. ')' → logprob: -10.534056663513184
    10. 'mod' → logprob: -10.909056663513184

Token 405: ' vaut' (ID: 83004)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03307728469371796
    2. '<|end|>' → logprob: -3.6580772399902344
    3. ')' → logprob: -5.908077239990234
    4. '**' → logprob: -6.033077239990234
    5. ' +' → logprob: -6.783077239990234
    6. '#' → logprob: -9.408077239990234
    7. '<|end|>' → logprob: -9.658077239990234
    8. ' ' → logprob: -9.658077239990234
    9. '%' → logprob: -10.033077239990234
    10. '9' → logprob: -10.158077239990234

Token 406: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.017257755622267723
    2. ' ' → logprob: -4.1422576904296875
    3. '10' → logprob: -6.7672576904296875
    4. '1' → logprob: -9.642257690429688
    5. '0' → logprob: -12.767257690429688
    6. '=' → logprob: -13.517257690429688
    7. '7' → logprob: -14.267257690429688
    8. '(' → logprob: -14.267257690429688
    9. '000' → logprob: -14.767257690429688
    10. '+' → logprob: -15.017257690429688

Token 407: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0001278534036828205
    2. '10' → logprob: -9.125127792358398
    3. ' ' → logprob: -11.750127792358398
    4. '7' → logprob: -11.875127792358398
    5. '1' → logprob: -13.000127792358398
    6. '(' → logprob: -14.750127792358398
    7. '9' → logprob: -14.875127792358398
    8. '+' → logprob: -14.875127792358398
    9. '000' → logprob: -15.500127792358398
    10. '=' → logprob: -15.625127792358398

Token 408: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.16123361885547638
    2. '9' → logprob: -1.91123366355896
    3. '+' → logprob: -7.411233425140381
    4. '**' → logprob: -8.536233901977539
    5. '09' → logprob: -9.161233901977539
    6. ' ' → logprob: -9.286233901977539
    7. '009' → logprob: -12.786233901977539
    8. '900' → logprob: -13.411233901977539
    9. '*' → logprob: -13.661233901977539
    10. '7' → logprob: -13.786233901977539

Token 409: '000' (ID: 1302)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.136921226978302
    2. '000' → logprob: -2.2619211673736572
    3. '+' → logprob: -3.8869211673736572
    4. '9' → logprob: -6.011921405792236
    5. ' ' → logprob: -7.511921405792236
    6. '07' → logprob: -8.761920928955078
    7. '007' → logprob: -9.011920928955078
    8. ' +' → logprob: -11.261920928955078
    9. '0' → logprob: -12.136920928955078
    10. ' ' → logprob: -13.011920928955078

Token 410: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -2.45848218582978e-06
    2. '+' → logprob: -13.25000286102295
    3. '07' → logprob: -14.87500286102295
    4. '9' → logprob: -15.25000286102295
    5. '```' → logprob: -18.000001907348633
    6. ' ' → logprob: -18.250001907348633
    7. '0' → logprob: -19.500001907348633
    8. '007' → logprob: -19.875001907348633
    9. '
' → logprob: -20.000001907348633
    10. ' ' → logprob: -20.500001907348633

Token 411: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.029828354716300964
    2. '   ' → logprob: -4.5298285484313965
    3. '+' → logprob: -4.7798285484313965
    4. '    
' → logprob: -4.7798285484313965
    5. '
' → logprob: -7.2798285484313965
    6. '

' → logprob: -7.9048285484313965
    7. '
    
' → logprob: -8.654828071594238
    8. ' 
' → logprob: -8.904828071594238
    9. '  
' → logprob: -9.404828071594238
    10. ' +' → logprob: -9.404828071594238

Token 412: ' un' (ID: 537)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5378289222717285
    2. '
' → logprob: -1.1628289222717285
    3. '    
' → logprob: -3.2878289222717285
    4. ' 
' → logprob: -3.9128289222717285
    5. ' ' → logprob: -4.4128289222717285
    6. '<|end|>' → logprob: -4.4128289222717285
    7. ')' → logprob: -5.2878289222717285
    8. '  
' → logprob: -5.2878289222717285
    9. '   
' → logprob: -5.9128289222717285
    10. '  ' → logprob: -6.2878289222717285

Token 413: ' grand' (ID: 6363)
  Prédit: ' space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' space' → logprob: -0.6445527076721191
    2. '<|end|>' → logprob: -1.5195527076721191
    3. '+' → logprob: -3.019552707672119
    4. 'space' → logprob: -3.144552707672119
    5. ',' → logprob: -3.894552707672119
    6. ')' → logprob: -4.019552707672119
    7. ' )' → logprob: -4.019552707672119
    8. ' ' → logprob: -4.144552707672119
    9. '7' → logprob: -4.144552707672119
    10. '9' → logprob: -4.394552707672119

Token 414: ' nombre' (ID: 9733)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 415: ' premier' (ID: 15506)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.014045154675841331
    2. '<|end|>' → logprob: -4.889045238494873
    3. ' +' → logprob: -5.514045238494873
    4. '
' → logprob: -6.389045238494873
    5. '<|end|>' → logprob: -7.764045238494873
    6. '+
' → logprob: -9.014044761657715
    7. '   ' → logprob: -9.639044761657715
    8. ' ' → logprob: -10.639044761657715
    9. ')' → logprob: -11.264044761657715
    10. ' +
' → logprob: -11.764044761657715

Token 416: ' courant' (ID: 74694)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5376871228218079
    2. '+' → logprob: -0.9126871228218079
    3. '   ' → logprob: -5.162687301635742
    4. '    
' → logprob: -5.912687301635742
    5. ' +' → logprob: -6.287687301635742
    6. '
' → logprob: -6.662687301635742
    7. '<|end|>' → logprob: -7.787687301635742
    8. '+
' → logprob: -7.912687301635742
    9. ' 
' → logprob: -8.162687301635742
    10. '

' → logprob: -8.287687301635742

Token 417: ' pour' (ID: 1930)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09501425176858902
    2. '+' → logprob: -3.2200143337249756
    3. '   ' → logprob: -3.2200143337249756
    4. '    
' → logprob: -5.3450140953063965
    5. '
' → logprob: -6.2200140953063965
    6. '\n' → logprob: -7.0950140953063965
    7. ' +' → logprob: -7.4700140953063965
    8. '

' → logprob: -7.5950140953063965
    9. '<|end|>' → logprob: -8.095014572143555
    10. '
    
' → logprob: -8.470014572143555

Token 418: ' le' (ID: 505)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.20992411673069
    2. 'les' → logprob: -1.8349241018295288
    3. ' la' → logprob: -4.959924221038818
    4. ' le' → logprob: -5.209924221038818
    5. ' modulo' → logprob: -5.334924221038818
    6. 'mod' → logprob: -5.459924221038818
    7. ' mod' → logprob: -5.584924221038818
    8. 'le' → logprob: -6.834924221038818
    9. 'la' → logprob: -7.209924221038818
    10. ' l' → logprob: -7.209924221038818

Token 419: ' modulo' (ID: 112372)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.1959298849105835
    2. ' modulo' → logprob: -2.195930004119873
    3. ' modulus' → logprob: -3.570930004119873
    4. ' mod' → logprob: -4.070930004119873
    5. 'calcul' → logprob: -4.320930004119873
    6. ' module' → logprob: -6.070930004119873
    7. 'module' → logprob: -6.320930004119873
    8. 'int' → logprob: -7.195930004119873
    9. '```' → logprob: -7.320930004119873
    10. '10' → logprob: -7.570930004119873

Token 420: ' dans' (ID: 2671)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.028797252103686333
    2. '   ' → logprob: -4.028797149658203
    3. '    
' → logprob: -5.153797149658203
    4. '+' → logprob: -5.903797149658203
    5. '
' → logprob: -6.653797149658203
    6. '  
' → logprob: -8.778797149658203
    7. '<|end|>' → logprob: -9.028797149658203
    8. '

' → logprob: -9.278797149658203
    9. ' 
' → logprob: -9.278797149658203
    10. '
    
' → logprob: -9.653797149658203

Token 421: ' les' (ID: 1341)
  Prédit: 'competitive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'competitive' → logprob: -1.35451340675354
    2. ' les' → logprob: -1.60451340675354
    3. 'program' → logprob: -1.72951340675354
    4. ' programming' → logprob: -1.85451340675354
    5. 'les' → logprob: -2.22951340675354
    6. ' competitive' → logprob: -2.47951340675354
    7. 'code' → logprob: -5.729513168334961
    8. 'coding' → logprob: -5.979513168334961
    9. 'compet' → logprob: -6.104513168334961
    10. ' coding' → logprob: -6.104513168334961

Token 422: ' concours' (ID: 79362)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.6208747029304504
    2. 'pro' → logprob: -1.8708746433258057
    3. 'competitive' → logprob: -2.2458746433258057
    4. 'program' → logprob: -2.7458746433258057
    5. 'calcul' → logprob: -3.3708746433258057
    6. 'programm' → logprob: -3.9958746433258057
    7. ' code' → logprob: -4.495874881744385
    8. 'alg' → logprob: -4.495874881744385
    9. 'compet' → logprob: -4.995874881744385
    10. 'programme' → logprob: -5.245874881744385

Token 423: ' de' (ID: 334)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09726601094007492
    2. '   ' → logprob: -3.0972659587860107
    3. '<|end|>' → logprob: -4.34726619720459
    4. '    
' → logprob: -5.22226619720459
    5. '\n' → logprob: -5.34726619720459
    6. '+' → logprob: -5.34726619720459
    7. '
' → logprob: -5.59726619720459
    8. '<|end|>' → logprob: -5.59726619720459
    9. ' ' → logprob: -6.09726619720459
    10. '

' → logprob: -6.34726619720459

Token 424: ' programmation' (ID: 166376)
  Prédit: 'program'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'program' → logprob: -0.6607521176338196
    2. 'programm' → logprob: -1.0357520580291748
    3. 'code' → logprob: -2.285752058029175
    4. 'prog' → logprob: -4.285752296447754
    5. 'programme' → logprob: -5.535752296447754
    6. 'pro' → logprob: -6.035752296447754
    7. ' programmation' → logprob: -6.410752296447754
    8. 'coding' → logprob: -6.535752296447754
    9. 'comp' → logprob: -7.035752296447754
    10. 'cod' → logprob: -7.785752296447754

Token 425: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6564527750015259
    2. '   ' → logprob: -0.7814527750015259
    3. '    
' → logprob: -4.531452655792236
    4. '+' → logprob: -5.406452655792236
    5. '
' → logprob: -5.531452655792236
    6. '<|end|>' → logprob: -6.906452655792236
    7. ')' → logprob: -7.031452655792236
    8. '

' → logprob: -8.281453132629395
    9. '\n' → logprob: -8.531453132629395
    10. '**' → logprob: -8.656453132629395

Token 426: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.017931943759322166
    2. '   ' → logprob: -4.642931938171387
    3. '    
' → logprob: -5.142931938171387
    4. '
' → logprob: -7.017931938171387
    5. '  
' → logprob: -7.892931938171387
    6. '

' → logprob: -8.017931938171387
    7. '\n' → logprob: -9.017931938171387
    8. ' 
' → logprob: -9.017931938171387
    9. '
    
' → logprob: -9.392931938171387
    10. 'def' → logprob: -9.392931938171387

Token 427: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2730269730091095
    2. 'n' → logprob: -1.773026943206787
    3. 't' → logprob: -2.898026943206787
    4. 'T' → logprob: -5.148026943206787
    5. '#' (adapté à ' #') → logprob: -5.773026943206787
    6. ' n' → logprob: -6.523026943206787
    7. 'N' → logprob: -6.773026943206787
    8. '
' → logprob: -7.273026943206787
    9. ' t' → logprob: -7.773026943206787
    10. '    
' → logprob: -7.773026943206787

Token 428: ' Lit' (ID: 45595)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1007598489522934
    2. 't' → logprob: -2.600759744644165
    3. 'N' → logprob: -4.475759983062744
    4. 'T' → logprob: -5.600759983062744
    5. '#' → logprob: -5.600759983062744
    6. '   ' → logprob: -6.100759983062744
    7. 'nb' → logprob: -8.225759506225586
    8. 'num' → logprob: -9.475759506225586
    9. ' n' → logprob: -9.725759506225586
    10. 'a' → logprob: -10.225759506225586

Token 429: ' une' (ID: 2463)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5831108689308167
    2. '()' → logprob: -1.7081108093261719
    3. 'n' → logprob: -1.9581108093261719
    4. ' t' → logprob: -2.583110809326172
    5. 't' → logprob: -3.708110809326172
    6. '   ' → logprob: -4.458110809326172
    7. ' ' → logprob: -6.333110809326172
    8. ' T' → logprob: -6.833110809326172
    9. ' un' → logprob: -7.333110809326172
    10. ' q' → logprob: -7.458110809326172

Token 430: ' ligne' (ID: 19583)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.32206544280052185
    2. 'n' → logprob: -1.4470654726028442
    3. 'int' → logprob: -4.447065353393555
    4. '()\' → logprob: -4.697065353393555
    5. '\n' → logprob: -5.572065353393555
    6. '()
' → logprob: -5.697065353393555
    7. 'line' → logprob: -5.822065353393555
    8. '(int' → logprob: -5.947065353393555
    9. '(' → logprob: -6.947065353393555
    10. 'nombre' → logprob: -7.322065353393555

Token 431: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01006841566413641
    2. '=' → logprob: -5.135068416595459
    3. ' =' → logprob: -6.385068416595459
    4. '().' → logprob: -6.635068416595459
    5. '()
' → logprob: -7.635068416595459
    6. '   ' → logprob: -7.760068416595459
    7. 'n' → logprob: -10.8850679397583
    8. 'line' → logprob: -11.1350679397583
    9. '(' → logprob: -11.2600679397583
    10. 'rstrip' → logprob: -11.2600679397583

Token 432: ' l' (ID: 305)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.008650264702737331
    2. ' input' → logprob: -4.758650302886963
    3. 'code' → logprob: -11.008649826049805
    4. 'sys' → logprob: -12.008649826049805
    5. 'stdin' → logprob: -12.258649826049805
    6. 'int' → logprob: -12.508649826049805
    7. 'entrée' → logprob: -13.133649826049805
    8. '=input' → logprob: -14.508649826049805
    9. 'l' → logprob: -14.758649826049805
    10. ' code' → logprob: -15.008649826049805

Token 433: ''entrée' (ID: 115820)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06575919687747955
    2. 'stdin' → logprob: -3.3157591819763184
    3. ''entrée' → logprob: -4.065759181976318
    4. ' input' → logprob: -5.065759181976318
    5. 'entrée' → logprob: -6.565759181976318
    6. 'e' → logprob: -7.565759181976318
    7. ' stdin' → logprob: -7.690759181976318
    8. '=input' → logprob: -8.065759658813477
    9. '(stdin' → logprob: -8.315759658813477
    10. '=sys' → logprob: -8.690759658813477

Token 434: ' standard' (ID: 7024)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42923563718795776
    2. 'n' → logprob: -2.1792356967926025
    3. '()
' → logprob: -2.6792356967926025
    4. '()' → logprob: -2.8042356967926025
    5. '().' → logprob: -2.8042356967926025
    6. ' =' → logprob: -4.054235458374023
    7. 'input' → logprob: -4.679235458374023
    8. '=' → logprob: -5.429235458374023
    9. '
' → logprob: -6.179235458374023
    10. '=input' → logprob: -6.429235458374023

Token 435: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23327374458312988
    2. 'n' → logprob: -1.6082737445831299
    3. ' n' → logprob: -5.983273506164551
    4. 'line' → logprob: -6.858273506164551
    5. '
' → logprob: -7.358273506164551
    6. 'a' → logprob: -7.483273506164551
    7. '    
' → logprob: -7.608273506164551
    8. '(n' → logprob: -7.733273506164551
    9. 'num' → logprob: -7.858273506164551
    10. ',' → logprob: -8.35827350616455

Token 436: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.09433974325656891
    2. ' n' → logprob: -2.4693398475646973
    3. 't' → logprob: -5.469339847564697
    4. ' t' → logprob: -7.094339847564697
    5. '   ' → logprob: -8.594339370727539
    6. 'N' → logprob: -10.094339370727539
    7. 'q' → logprob: -10.219339370727539
    8. ' ' → logprob: -10.844339370727539
    9. 'T' → logprob: -11.719339370727539
    10. 's' → logprob: -12.344339370727539

Token 437: ' convert' (ID: 8452)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.03842437267303467
    2. 'rstrip' → logprob: -3.288424491882324
    3. '=' → logprob: -8.788424491882324
    4. 'split' → logprob: -9.288424491882324
    5. '_strip' → logprob: -9.913424491882324
    6. 'n' → logprob: -11.038424491882324
    7. ' strip' → logprob: -11.038424491882324
    8. '.strip' → logprob: -11.288424491882324
    9. 'r' → logprob: -11.288424491882324
    10. ' =' → logprob: -11.538424491882324

Token 438: 'it' (ID: 278)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0943114757537842
    2. 'it' → logprob: -1.0943114757537842
    3. '=int' → logprob: -1.3443114757537842
    4. 'ir' → logprob: -3.219311475753784
    5. ' =' → logprob: -4.719311714172363
    6. 'int' → logprob: -4.719311714172363
    7. 'i' → logprob: -5.094311714172363
    8. 'is' → logprob: -6.469311714172363
    9. 'e' → logprob: -6.969311714172363
    10. 'ie' → logprob: -7.219311714172363

Token 439: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.032795727252960205
    2. ' en' → logprob: -4.1577959060668945
    3. '().' → logprob: -4.4077959060668945
    4. 'int' → logprob: -5.7827959060668945
    5. 'en' → logprob: -7.9077959060668945
    6. ' ()' → logprob: -9.032795906066895
    7. '(int' → logprob: -9.282795906066895
    8. '()
' → logprob: -9.282795906066895
    9. '=int' → logprob: -9.282795906066895
    10. '   ' → logprob: -9.657795906066895

Token 440: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0709516704082489
    2. 'ent' → logprob: -2.6959517002105713
    3. 'integer' → logprob: -7.445951461791992
    4. ' entier' → logprob: -8.445951461791992
    5. 'nombre' → logprob: -9.195951461791992
    6. ' int' → logprob: -9.320951461791992
    7. ' integer' → logprob: -11.695951461791992
    8. 'un' → logprob: -12.445951461791992
    9. 'n' → logprob: -12.945951461791992
    10. ' ent' → logprob: -13.320951461791992

Token 441: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14380782842636108
    2. 'n' → logprob: -2.018807888031006
    3. ' n' → logprob: -6.893807888031006
    4. 'N' → logprob: -9.893807411193848
    5. '    
' → logprob: -11.268807411193848
    6. ',' → logprob: -11.393807411193848
    7. '	n' → logprob: -11.393807411193848
    8. '  ' → logprob: -12.268807411193848
    9. '(n' → logprob: -12.518807411193848
    10. ':' → logprob: -12.518807411193848

Token 442: ' et' (ID: 859)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16860325634479523
    2. ' n' → logprob: -1.9186033010482788
    3. '   ' → logprob: -5.043603420257568
    4. '    ' → logprob: -6.793603420257568
    5. '  ' → logprob: -8.41860294342041
    6. 'N' → logprob: -9.41860294342041
    7. ' ' → logprob: -9.66860294342041
    8. '    
' → logprob: -9.66860294342041
    9. 't' → logprob: -9.91860294342041
    10. '	n' → logprob: -9.91860294342041

Token 443: ' l' (ID: 305)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5078042149543762
    2. 'rstrip' → logprob: -2.3828041553497314
    3. 'range' → logprob: -2.6328041553497314
    4. 'n' → logprob: -2.6328041553497314
    5. 'strip' → logprob: -3.2578041553497314
    6. ' range' → logprob: -4.0078043937683105
    7. ' strip' → logprob: -4.2578043937683105
    8. 'split' → logprob: -4.2578043937683105
    9. ' split' → logprob: -4.5078043937683105
    10. 't' → logprob: -4.6328043937683105

Token 444: ''ass' (ID: 43919)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01894204504787922
    2. ' =' → logprob: -4.393941879272461
    3. '=int' → logprob: -5.268941879272461
    4. 'n' → logprob: -7.893941879272461
    5. '=
' → logprob: -9.143941879272461
    6. 'strip' → logprob: -9.643941879272461
    7. 'rstrip' → logprob: -9.768941879272461
    8. '=n' → logprob: -9.893941879272461
    9. '_' → logprob: -10.143941879272461
    10. '.' → logprob: -10.143941879272461

Token 445: 'igne' (ID: 24120)
  Prédit: 'igne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igne' → logprob: -0.0013901159400120378
    2. 'ign' → logprob: -6.876389980316162
    3. '#' → logprob: -8.25139045715332
    4. 'ing' → logprob: -10.25139045715332
    5. '
' → logprob: -11.87639045715332
    6. '{' → logprob: -12.12639045715332
    7. 'ert' → logprob: -12.12639045715332
    8. '

' → logprob: -12.37639045715332
    9. 'ig' → logprob: -12.37639045715332
    10. 'ignes' → logprob: -12.62639045715332

Token 446: ' à' (ID: 1221)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.47746413946151733
    2. '   ' → logprob: -1.102464199066162
    3. '(n' → logprob: -3.852464199066162
    4. ' n' → logprob: -3.852464199066162
    5. '()' → logprob: -5.977464199066162
    6. 'N' → logprob: -6.727464199066162
    7. 't' → logprob: -7.852464199066162
    8. '	n' → logprob: -8.477463722229004
    9. '(' → logprob: -8.727463722229004
    10. 'num' → logprob: -8.977463722229004

Token 447: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.015615020878612995
    2. 't' → logprob: -4.890614986419678
    3. 'N' → logprob: -5.015614986419678
    4. ' n' → logprob: -7.140614986419678
    5. 'T' → logprob: -8.765615463256836
    6. 'q' → logprob: -9.140615463256836
    7. 'x' → logprob: -9.390615463256836
    8. 'k' → logprob: -9.640615463256836
    9. '   ' → logprob: -10.015615463256836
    10. 'a' → logprob: -10.515615463256836

Token 448: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020969010889530182
    2. 'N' → logprob: -4.395968914031982
    3. ' =' → logprob: -5.020968914031982
    4. '=' → logprob: -6.645968914031982
    5. '(N' → logprob: -9.27096939086914
    6. '=N' → logprob: -9.39596939086914
    7. '
' → logprob: -9.64596939086914
    8. '    
' → logprob: -9.64596939086914
    9. ' N' → logprob: -9.77096939086914
    10. '	N' → logprob: -10.14596939086914

Token 449: 'tail' (ID: 20472)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006253334693610668
    2. '   ' → logprob: -5.506253242492676
    3. ' )' → logprob: -6.756253242492676
    4. 'N' → logprob: -7.131253242492676
    5. 'n' → logprob: -9.381253242492676
    6. 'int' → logprob: -10.256253242492676
    7. ')n' → logprob: -10.756253242492676
    8. ' N' → logprob: -10.881253242492676
    9. ')
' → logprob: -11.131253242492676
    10. '  ' → logprob: -11.631253242492676

Token 450: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.259514719247818
    2. 'e' → logprob: -1.5095146894454956
    3. ' N' → logprob: -6.259514808654785
    4. 'N' → logprob: -6.884514808654785
    5. ')' → logprob: -7.134514808654785
    6. '#' → logprob: -7.134514808654785
    7. 'ength' → logprob: -8.009514808654785
    8. '   ' → logprob: -8.134514808654785
    9. 'd' → logprob: -8.259514808654785
    10. 'ent' → logprob: -8.384514808654785

Token 451: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19109715521335602
    2. ' =' → logprob: -2.3160972595214844
    3. ' )' → logprob: -3.6910972595214844
    4. '=' → logprob: -3.8160972595214844
    5. '   ' → logprob: -3.9410972595214844
    6. 'de' → logprob: -6.441097259521484
    7. '_input' → logprob: -6.691097259521484
    8. '_' → logprob: -7.066097259521484
    9. '_n' → logprob: -7.191097259521484
    10. ',' → logprob: -7.691097259521484

Token 452: ' la' (ID: 557)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07218049466609955
    2. ' input' → logprob: -2.8221805095672607
    3. ')' → logprob: -5.197180271148682
    4. 'l' → logprob: -5.697180271148682
    5. 's' → logprob: -8.57218074798584
    6. 'int' → logprob: -8.82218074798584
    7. 'la' → logprob: -9.32218074798584
    8. 't' → logprob: -9.32218074798584
    9. ' ' → logprob: -9.44718074798584
    10. 'n' → logprob: -9.69718074798584

Token 453: ' liste' (ID: 31719)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.6497995257377625
    2. 'input' → logprob: -1.6497995853424072
    3. ')' → logprob: -2.6497995853424072
    4. 'N' → logprob: -2.8997995853424072
    5. 'int' → logprob: -3.1497995853424072
    6. 'liste' → logprob: -3.7747995853424072
    7. 'n' → logprob: -4.149799346923828
    8. ' array' → logprob: -4.524799346923828
    9. 'chaine' → logprob: -4.774799346923828
    10. 'list' → logprob: -4.774799346923828

Token 454: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0052572377026081085
    2. ' )' → logprob: -5.8802571296691895
    3. '   ' → logprob: -6.1302571296691895
    4. ')
' → logprob: -8.380257606506348
    5. ')n' → logprob: -12.005257606506348
    6. ' )
' → logprob: -12.130257606506348
    7. 'n' → logprob: -12.505257606506348
    8. ' ' → logprob: -12.880257606506348
    9. 'def' → logprob: -13.005257606506348
    10. 'input' → logprob: -13.255257606506348

Token 455: '   ' (ID: 271)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.014604615978896618
    2. '   ' → logprob: -4.264604568481445
    3. ' N' → logprob: -7.889604568481445
    4. 'n' → logprob: -9.889604568481445
    5. '	N' → logprob: -11.889604568481445
    6. '    
' → logprob: -12.389604568481445
    7. '
' → logprob: -13.639604568481445
    8. '  
' → logprob: -13.889604568481445
    9. '\n' → logprob: -14.514604568481445
    10. '[N' → logprob: -14.889604568481445

Token 456: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.00013512482109945267
    2. ' N' → logprob: -9.62513542175293
    3. '   ' → logprob: -9.62513542175293
    4. 'n' → logprob: -12.75013542175293
    5. '	N' → logprob: -16.12513542175293
    6. ' ' → logprob: -17.75013542175293
    7. '  ' → logprob: -18.50013542175293
    8. '    
' → logprob: -18.62513542175293
    9. '
' → logprob: -19.50013542175293
    10. '```' → logprob: -20.12513542175293

Token 457: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31334754824638367
    2. ' =' → logprob: -1.313347578048706
    3. '=int' → logprob: -9.438347816467285
    4. '   ' → logprob: -12.938347816467285
    5. ' ' → logprob: -13.563347816467285
    6. ',' → logprob: -13.563347816467285
    7. '＝' → logprob: -15.563347816467285
    8. ' =
' → logprob: -15.563347816467285
    9. '=

' → logprob: -15.563347816467285
    10. ')' → logprob: -15.938347816467285

Token 458: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03804263845086098
    2. ' int' → logprob: -3.2880425453186035
    3. ' ' → logprob: -14.788043022155762
    4. 'input' → logprob: -14.913043022155762
    5. '	int' → logprob: -15.413043022155762
    6. '   ' → logprob: -16.413042068481445
    7. '  ' → logprob: -16.413042068481445
    8. ' input' → logprob: -17.288042068481445
    9. 'in' → logprob: -17.913042068481445
    10. '(int' → logprob: -18.663042068481445

Token 459: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00034869377850554883
    2. '(' → logprob: -8.000349044799805
    3. 'input' → logprob: -11.250349044799805
    4. '(
' → logprob: -15.500349044799805
    5. ' input' → logprob: -18.375349044799805
    6. ' (' → logprob: -19.250349044799805
    7. '(inp' → logprob: -19.500349044799805
    8. '(in' → logprob: -19.625349044799805
    9. '=input' → logprob: -19.625349044799805
    10. ',input' → logprob: -19.750349044799805

Token 460: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.08267291635274887
    2. '().' → logprob: -2.5826728343963623
    3. '()' → logprob: -5.582673072814941
    4. ' ())' → logprob: -11.707673072814941
    5. '()
' → logprob: -12.957673072814941
    6. '())
' → logprob: -13.707673072814941
    7. '();)' → logprob: -14.332673072814941
    8. '(' → logprob: -14.582673072814941
    9. ')' → logprob: -14.832673072814941
    10. '())

' → logprob: -16.207672119140625

Token 461: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015906770713627338
    2. 'a' → logprob: -7.251590728759766
    3. '    
' → logprob: -8.251590728759766
    4. 'data' → logprob: -9.001590728759766
    5. 'arr' → logprob: -9.001590728759766
    6. 'A' → logprob: -9.626590728759766
    7. 'list' → logprob: -10.001590728759766
    8. ')' → logprob: -10.126590728759766
    9. 'lst' → logprob: -10.126590728759766
    10. '
' → logprob: -10.501590728759766

Token 462: ' #' (ID: 1069)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.1400032043457031
    2. '   ' → logprob: -1.1400032043457031
    3. 'arr' → logprob: -2.140003204345703
    4. 'lst' → logprob: -2.515003204345703
    5. 'a' → logprob: -2.765003204345703
    6. 'numbers' → logprob: -3.015003204345703
    7. ' A' → logprob: -4.390003204345703
    8. 'data' → logprob: -5.015003204345703
    9. 'L' → logprob: -5.015003204345703
    10. 'values' → logprob: -5.515003204345703

Token 463: ' Lit' (ID: 45595)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.47919294238090515
    2. 'arr' → logprob: -1.3541929721832275
    3. 'A' → logprob: -2.8541929721832275
    4. 'L' → logprob: -3.6041929721832275
    5. 'a' → logprob: -4.854192733764648
    6. 'data' → logprob: -4.979192733764648
    7. 'l' → logprob: -4.979192733764648
    8. 'numbers' → logprob: -5.229192733764648
    9. 'nums' → logprob: -5.354192733764648
    10. 'values' → logprob: -5.604192733764648

Token 464: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008501344360411167
    2. 'input' → logprob: -6.5085015296936035
    3. '()
' → logprob: -7.1335015296936035
    4. '()[' → logprob: -7.1335015296936035
    5. ' une' → logprob: -7.2585015296936035
    6. '[]' → logprob: -7.3835015296936035
    7. '(' → logprob: -7.3835015296936035
    8. ' la' → logprob: -7.6335015296936035
    9. '().' → logprob: -8.008501052856445
    10. 'a' → logprob: -8.008501052856445

Token 465: ' autre' (ID: 20278)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5341266989707947
    2. 'line' → logprob: -2.6591267585754395
    3. 'list' → logprob: -3.1591267585754395
    4. '_list' → logprob: -3.1591267585754395
    5. 'l' → logprob: -3.4091267585754395
    6. 'liste' → logprob: -3.4091267585754395
    7. 'lst' → logprob: -3.4091267585754395
    8. '=' → logprob: -3.9091267585754395
    9. '_line' → logprob: -4.1591267585754395
    10. 's' → logprob: -4.2841267585754395

Token 466: ' ligne' (ID: 19583)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014641853980720043
    2. '()
' → logprob: -4.264641761779785
    3. ' ()' → logprob: -8.514641761779785
    4. '()\' → logprob: -9.514641761779785
    5. '(N' → logprob: -9.639641761779785
    6. '(' → logprob: -10.264641761779785
    7. ' line' → logprob: -10.889641761779785
    8. ' N' → logprob: -11.389641761779785
    9. 'line' → logprob: -11.514641761779785
    10. ' ()
' → logprob: -11.639641761779785

Token 467: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.009171795099973679
    2. '()
' → logprob: -4.759171962738037
    3. '   ' → logprob: -8.384171485900879
    4. ' =' → logprob: -9.009171485900879
    5. '().' → logprob: -9.384171485900879
    6. '<|end|>' → logprob: -10.259171485900879
    7. '=' → logprob: -11.759171485900879
    8. '()

' → logprob: -11.759171485900879
    9. '()\' → logprob: -12.009171485900879
    10. '<|end|>' → logprob: -12.009171485900879

Token 468: ' la' (ID: 557)
  Prédit: ' lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lst' → logprob: -1.1428712606430054
    2. ' map' → logprob: -1.5178712606430054
    3. ' list' → logprob: -2.017871379852295
    4. 'list' → logprob: -2.392871379852295
    5. 's' → logprob: -3.767871379852295
    6. 'split' → logprob: -3.767871379852295
    7. ' l' → logprob: -4.017871379852295
    8. 'map' → logprob: -4.142871379852295
    9. ' la' → logprob: -4.267871379852295
    10. ' strip' → logprob: -4.392871379852295

Token 469: ' décou' (ID: 68302)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.26076412200927734
    2. 'split' → logprob: -1.5107641220092773
    3. 'rstrip' → logprob: -4.885764122009277
    4. ' strip' → logprob: -7.260764122009277
    5. ' split' → logprob: -8.760764122009277
    6. '=' → logprob: -9.260764122009277
    7. 's' → logprob: -9.635764122009277
    8. '.strip' → logprob: -9.760764122009277
    9. 'list' → logprob: -10.010764122009277
    10. 'lst' → logprob: -10.635764122009277

Token 470: 'pe' (ID: 424)
  Prédit: 'pe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.03203393891453743
    2. 'p' → logprob: -4.032033920288086
    3. 'page' → logprob: -4.907033920288086
    4. 'per' → logprob: -5.407033920288086
    5. 'pé' → logprob: -6.532033920288086
    6. 'pa' → logprob: -8.657033920288086
    7. 'pte' → logprob: -9.157033920288086
    8. 'pez' → logprob: -9.532033920288086
    9. 'ppe' → logprob: -10.532033920288086
    10. 'pre' → logprob: -12.032033920288086

Token 471: ' selon' (ID: 27571)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.009309991262853146
    2. '().' → logprob: -4.759309768676758
    3. '()[' → logprob: -7.759309768676758
    4. '()
' → logprob: -8.759309768676758
    5. 'input' → logprob: -10.634309768676758
    6. '(),' → logprob: -11.384309768676758
    7. '())' → logprob: -11.384309768676758
    8. '[]' → logprob: -11.509309768676758
    9. ' ()' → logprob: -11.509309768676758
    10. '(' → logprob: -11.884309768676758

Token 472: ' les' (ID: 1341)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16400133073329926
    2. ''' → logprob: -2.289001226425171
    3. ' '' → logprob: -4.28900146484375
    4. ' l' → logprob: -4.28900146484375
    5. ' la' → logprob: -5.03900146484375
    6. '('' → logprob: -5.78900146484375
    7. ' ' → logprob: -6.03900146484375
    8. '"' → logprob: -6.16400146484375
    9. 'space' → logprob: -6.78900146484375
    10. ' space' → logprob: -7.03900146484375

Token 473: ' espaces' (ID: 98361)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6172158122062683
    2. ''' → logprob: -1.617215871810913
    3. ' espaces' → logprob: -1.992215871810913
    4. 'esp' → logprob: -3.492215871810913
    5. 'spaces' → logprob: -3.617215871810913
    6. 'space' → logprob: -3.867215871810913
    7. ' spaces' → logprob: -4.367215633392334
    8. ' ' → logprob: -5.117215633392334
    9. '"' → logprob: -5.242215633392334
    10. ')' → logprob: -5.492215633392334

Token 474: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0357180833816528
    2. '().' → logprob: -1.0357180833816528
    3. '()' → logprob: -2.5357179641723633
    4. '.split' → logprob: -3.1607179641723633
    5. 'tokens' → logprob: -3.4107179641723633
    6. 'input' → logprob: -3.6607179641723633
    7. ',' → logprob: -4.035717964172363
    8. ')' → logprob: -4.035717964172363
    9. 'split' → logprob: -4.160717964172363
    10. ' =' → logprob: -4.160717964172363

Token 475: ' convert' (ID: 8452)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.904777467250824
    2. '   ' → logprob: -1.1547775268554688
    3. 'map' → logprob: -2.9047775268554688
    4. ' et' → logprob: -3.6547775268554688
    5. ' lst' → logprob: -3.9047775268554688
    6. ' puis' → logprob: -4.029777526855469
    7. ' arr' → logprob: -4.154777526855469
    8. 'tokens' → logprob: -4.154777526855469
    9. ' la' → logprob: -4.279777526855469
    10. ' and' → logprob: -4.279777526855469

Token 476: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.8035008311271667
    2. 'e' → logprob: -2.0535008907318115
    3. 'ie' → logprob: -2.0535008907318115
    4. '=' → logprob: -2.3035008907318115
    5. '()' → logprob: -2.4285008907318115
    6. 'i' → logprob: -3.0535008907318115
    7. '   ' → logprob: -4.053500652313232
    8. 't' → logprob: -4.428500652313232
    9. ' =' → logprob: -5.053500652313232
    10. 'ir' → logprob: -5.178500652313232

Token 477: ' chaque' (ID: 21194)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.2766287326812744
    2. 'en' → logprob: -2.0266287326812744
    3. 'la' → logprob: -3.5266287326812744
    4. '()' → logprob: -3.6516287326812744
    5. ' les' → logprob: -3.9016287326812744
    6. ' la' → logprob: -4.151628494262695
    7. '   ' → logprob: -5.276628494262695
    8. 'les' → logprob: -5.651628494262695
    9. ' chaque' → logprob: -5.776628494262695
    10. 'list' → logprob: -6.401628494262695

Token 478: ' élément' (ID: 99627)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7262617945671082
    2. 'élé' → logprob: -0.7262617945671082
    3. 'x' → logprob: -4.726261615753174
    4. 'token' → logprob: -5.101261615753174
    5. 'element' → logprob: -5.601261615753174
    6. 'elem' → logprob: -5.851261615753174
    7. 'val' → logprob: -5.976261615753174
    8. ' élément' → logprob: -5.976261615753174
    9. '(int' → logprob: -6.351261615753174
    10. '(x' → logprob: -6.351261615753174

Token 479: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11728926748037338
    2. ' en' → logprob: -2.8672893047332764
    3. '(' → logprob: -3.6172893047332764
    4. '(int' → logprob: -3.8672893047332764
    5. 'int' → logprob: -5.492289066314697
    6. ')' → logprob: -7.617289066314697
    7. '(),' → logprob: -8.492289543151855
    8. '(en' → logprob: -9.117289543151855
    9. '=' → logprob: -9.367289543151855
    10. 'en' → logprob: -9.367289543151855

Token 480: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0003820524725597352
    2. ' int' → logprob: -7.875381946563721
    3. 'ent' → logprob: -13.500382423400879
    4. 'ints' → logprob: -16.125381469726562
    5. '```' → logprob: -16.250381469726562
    6. '=int' → logprob: -16.375381469726562
    7. '(int' → logprob: -16.500381469726562
    8. '	int' → logprob: -17.125381469726562
    9. '<int' → logprob: -17.250381469726562
    10. 'inte' → logprob: -17.375381469726562

Token 481: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24037587642669678
    2. '   ' → logprob: -1.9903758764266968
    3. 'arr' → logprob: -3.8653759956359863
    4. 'lst' → logprob: -3.9903759956359863
    5. 'numbers' → logprob: -4.115375995635986
    6. ' lst' → logprob: -5.615375995635986
    7. 'L' → logprob: -5.865375995635986
    8. 'a' → logprob: -5.865375995635986
    9. 'nums' → logprob: -5.990375995635986
    10. 'l' → logprob: -6.490375995635986

Token 482: ' construit' (ID: 119882)
  Prédit: ' lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lst' → logprob: -0.6740526556968689
    2. 'lst' → logprob: -1.4240527153015137
    3. ' list' → logprob: -2.4240527153015137
    4. 'list' → logprob: -3.1740527153015137
    5. 'arr' → logprob: -3.5490527153015137
    6. 'l' → logprob: -4.299052715301514
    7. ' map' → logprob: -4.299052715301514
    8. ' liste' → logprob: -4.424052715301514
    9. 'liste' → logprob: -4.924052715301514
    10. ' l' → logprob: -5.049052715301514

Token 483: ' une' (ID: 2463)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7259349226951599
    2. ' une' → logprob: -0.9759349226951599
    3. 'une' → logprob: -2.6009349822998047
    4. 'la' → logprob: -3.2259349822998047
    5. 'a' → logprob: -4.350934982299805
    6. ' a' → logprob: -5.850934982299805
    7. '   ' → logprob: -5.975934982299805
    8. 'l' → logprob: -6.100934982299805
    9. '[]' → logprob: -6.850934982299805
    10. 'list' → logprob: -7.350934982299805

Token 484: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0893978476524353
    2. ' list' → logprob: -2.96439790725708
    3. 'lst' → logprob: -3.58939790725708
    4. 'liste' → logprob: -5.21439790725708
    5. 'arr' → logprob: -8.089397430419922
    6. 'l' → logprob: -8.964397430419922
    7. ' lst' → logprob: -8.964397430419922
    8. 'a' → logprob: -9.714397430419922
    9. ' liste' → logprob: -9.839397430419922
    10. 's' → logprob: -10.214397430419922

Token 485: ' A' (ID: 355)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8248687982559204
    2. 'a' → logprob: -1.0748687982559204
    3. 'A' → logprob: -2.074868679046631
    4. 'arr' → logprob: -3.199868679046631
    5. 'lst' → logprob: -4.574868679046631
    6. '(a' → logprob: -4.699868679046631
    7. ' A' → logprob: -4.949868679046631
    8. '(arr' → logprob: -4.949868679046631
    9. '(A' → logprob: -5.824868679046631
    10. 'L' → logprob: -5.824868679046631

Token 486: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6710419058799744
    2. '=' → logprob: -0.7960419058799744
    3. '   ' → logprob: -3.296041965484619
    4. '()' → logprob: -7.546041965484619
    5. '(' → logprob: -9.921041488647461
    6. '=input' → logprob: -10.296041488647461
    7. '=A' → logprob: -10.921041488647461
    8. ' ' → logprob: -11.921041488647461
    9. 'A' → logprob: -12.046041488647461
    10. ')' → logprob: -12.046041488647461

Token 487: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12981253862380981
    2. ' =' → logprob: -2.504812479019165
    3. '=' → logprob: -3.254812479019165
    4. 'A' → logprob: -7.004812717437744
    5. ' A' → logprob: -8.879812240600586
    6. '=A' → logprob: -9.004812240600586
    7. '(' → logprob: -9.254812240600586
    8. '()' → logprob: -9.629812240600586
    9. ' ' → logprob: -10.629812240600586
    10. '  ' → logprob: -10.879812240600586

Token 488: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.0022812189999967813
    2. ' A' → logprob: -6.127281188964844
    3. '   ' → logprob: -9.252281188964844
    4. 'a' → logprob: -16.252281188964844
    5. '	A' → logprob: -16.252281188964844
    6. ' ' → logprob: -17.377281188964844
    7. 'list' → logprob: -17.627281188964844
    8. '[' → logprob: -17.752281188964844
    9. '  ' → logprob: -18.127281188964844
    10. '=' → logprob: -18.877281188964844

Token 489: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0380416102707386
    2. ' =' → logprob: -3.288041591644287
    3. '＝' → logprob: -16.163042068481445
    4. '[' → logprob: -17.538042068481445
    5. '=A' → logprob: -17.538042068481445
    6. ',' → logprob: -17.663042068481445
    7. ' ' → logprob: -17.788042068481445
    8. '=[' → logprob: -18.038042068481445
    9. ')' → logprob: -18.163042068481445
    10. '=list' → logprob: -18.288042068481445

Token 490: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0067154900170862675
    2. ' list' → logprob: -5.006715297698975
    3. '[list' → logprob: -16.131715774536133
    4. '	list' → logprob: -19.131715774536133
    5. 'lis' → logprob: -20.506715774536133
    6. '(list' → logprob: -20.631715774536133
    7. '=list' → logprob: -20.631715774536133
    8. '[' → logprob: -20.756715774536133
    9. 'List' → logprob: -22.006715774536133
    10. 'l' → logprob: -22.256715774536133

Token 491: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -6.704273118884885e-07
    2. '*' → logprob: -14.750000953674316
    3. ' int' → logprob: -15.625000953674316
    4. '   ' → logprob: -17.0
    5. '```' → logprob: -17.875
    6. '
' → logprob: -18.0
    7. '  ' → logprob: -18.0
    8. ']int' → logprob: -19.0
    9. '<int' → logprob: -19.125
    10. '	int' → logprob: -19.25

Token 492: '(a' (ID: 6271)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.010620344430208206
    2. 'x' → logprob: -5.1356201171875
    3. '(i' → logprob: -5.3856201171875
    4. '(' → logprob: -9.5106201171875
    5. '(s' → logprob: -12.1356201171875
    6. '(token' → logprob: -12.2606201171875
    7. '(a' → logprob: -12.7606201171875
    8. 'i' → logprob: -12.8856201171875
    9. '(num' → logprob: -13.0106201171875
    10. ']' → logprob: -13.2606201171875

Token 493: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004907939117401838
    2. '()' → logprob: -5.504908084869385
    3. 'in' → logprob: -8.504907608032227
    4. '(' → logprob: -8.754907608032227
    5. '(x' → logprob: -8.754907608032227
    6. '())' → logprob: -9.004907608032227
    7. 'for' → logprob: -9.629907608032227
    8. '(i' → logprob: -9.754907608032227
    9. ' )' → logprob: -10.254907608032227
    10. 'input' → logprob: -12.254907608032227

Token 494: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5937693119049072
    2. ' for' → logprob: -0.8437693119049072
    3. ')' → logprob: -4.468769073486328
    4. '()' → logprob: -5.093769073486328
    5. 'in' → logprob: -10.093769073486328
    6. ' in' → logprob: -11.718769073486328
    7. ' ' → logprob: -12.343769073486328
    8. 'x' → logprob: -12.593769073486328
    9. 'i' → logprob: -12.843769073486328
    10. ']' → logprob: -13.218769073486328

Token 495: ' a' (ID: 261)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5759426951408386
    2. ' input' → logprob: -0.8259426951408386
    3. 'a' → logprob: -13.450942993164062
    4. '(input' → logprob: -14.575942993164062
    5. 'in' → logprob: -14.825942993164062
    6. '_' → logprob: -15.325942993164062
    7. ' ' → logprob: -15.700942993164062
    8. ' a' → logprob: -15.825942993164062
    9. '_input' → logprob: -15.825942993164062
    10. '=input' → logprob: -15.825942993164062

Token 496: ' in' (ID: 306)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4521690607070923
    2. ' input' → logprob: -1.0771690607070923
    3. ' in' → logprob: -4.327168941497803
    4. 'in' → logprob: -5.327168941497803
    5. '(input' → logprob: -5.827168941497803
    6. '=input' → logprob: -6.327168941497803
    7. ',input' → logprob: -8.577169418334961
    8. '	input' → logprob: -9.577169418334961
    9. '(' → logprob: -10.452169418334961
    10. 'import' → logprob: -10.702169418334961

Token 497: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.005234356038272381
    2. ' input' → logprob: -5.255234241485596
    3. 'sys' → logprob: -15.130234718322754
    4. '(input' → logprob: -15.630234718322754
    5. '
' → logprob: -16.755233764648438
    6. ' ' → logprob: -17.005233764648438
    7. '<input' → logprob: -17.880233764648438
    8. ' sys' → logprob: -18.130233764648438
    9. '	input' → logprob: -18.255233764648438
    10. '   ' → logprob: -18.505233764648438

Token 498: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.438573680294212e-06
    2. '()' → logprob: -12.125005722045898
    3. ' ().' → logprob: -18.3750057220459
    4. '(' → logprob: -19.6250057220459
    5. '()].' → logprob: -20.6250057220459
    6. '()]' → logprob: -21.0000057220459
    7. '()
' → logprob: -21.0000057220459
    8. '.strip' → logprob: -22.3750057220459
    9. '()?.' → logprob: -22.5000057220459
    10. ')' → logprob: -22.6250057220459

Token 499: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.16082973778247833
    2. 'strip' → logprob: -1.910829782485962
    3. 'rstrip' → logprob: -7.410829544067383
    4. ' split' → logprob: -14.785829544067383
    5. ' strip' → logprob: -15.285829544067383
    6. '(split' → logprob: -16.035829544067383
    7. 'spl' → logprob: -16.410829544067383
    8. 'decode' → logprob: -19.035829544067383
    9. 'read' → logprob: -19.160829544067383
    10. '(strip' → logprob: -19.160829544067383

Token 500: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0003741887048818171
    2. '()' → logprob: -8.000373840332031
    3. '())' → logprob: -10.375373840332031
    4. ']' → logprob: -12.625373840332031
    5. '(' → logprob: -12.875373840332031
    6. ')]' → logprob: -13.750373840332031
    7. '()]
' → logprob: -14.500373840332031
    8. '()][' → logprob: -16.87537384033203
    9. ']()' → logprob: -17.00037384033203
    10. ' ()' → logprob: -17.00037384033203

Token 501: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.356946736574173
    2. '<|end|>' → logprob: -1.3569467067718506
    3. '#' → logprob: -3.8569467067718506
    4. '
' → logprob: -4.23194694519043
    5. '    
' → logprob: -6.48194694519043
    6. '```' → logprob: -6.60694694519043
    7. '  
' → logprob: -7.48194694519043
    8. '<|end|>' → logprob: -7.85694694519043
    9. '  ' → logprob: -8.10694694519043
    10. 'def' → logprob: -8.10694694519043

Token 502: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8610547184944153
    2. '#' (adapté à ' #') → logprob: -2.1110546588897705
    3. 'result' → logprob: -2.4860546588897705
    4. 's' → logprob: -2.4860546588897705
    5. 'sum' → logprob: -2.8610546588897705
    6. 'total' → logprob: -2.9860546588897705
    7. 'max' → logprob: -3.4860546588897705
    8. ' 
' → logprob: -4.11105489730835
    9. '
' → logprob: -4.11105489730835
    10. '    
' → logprob: -4.23605489730835

Token 503: ' Si' (ID: 7832)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7099245190620422
    2. '#' → logprob: -2.3349244594573975
    3. 'count' → logprob: -2.5849244594573975
    4. 'A' → logprob: -2.8349244594573975
    5. 'g' → logprob: -2.8349244594573975
    6. 'result' → logprob: -2.8349244594573975
    7. 'max' → logprob: -2.9599244594573975
    8. 'from' → logprob: -4.209924697875977
    9. 'freq' → logprob: -4.209924697875977
    10. 'counts' → logprob: -4.334924697875977

Token 504: ' N' (ID: 478)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.46415165066719055
    2. ' N' → logprob: -1.0891516208648682
    3. ' not' → logprob: -4.214151859283447
    4. ' ' → logprob: -4.964151859283447
    5. 'len' → logprob: -4.964151859283447
    6. 'N' → logprob: -5.339151859283447
    7. ' A' → logprob: -7.839151859283447
    8. ' sum' → logprob: -8.464151382446289
    9. ' all' → logprob: -9.089151382446289
    10. 'not' → logprob: -9.214151382446289

Token 505: ' vaut' (ID: 83004)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.9116076827049255
    2. ' ==' → logprob: -1.1616077423095703
    3. ' <=' → logprob: -1.9116077423095703
    4. ' >' → logprob: -2.6616077423095703
    5. '<' → logprob: -3.7866077423095703
    6. '==' → logprob: -3.7866077423095703
    7. '<=' → logprob: -5.03660774230957
    8. '>' → logprob: -5.16160774230957
    9. ' !=' → logprob: -5.53660774230957
    10. ' >=' → logprob: -6.03660774230957

Token 506: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5702953934669495
    2. '0' → logprob: -1.0702953338623047
    3. ' ' → logprob: -2.4452953338623047
    4. '2' → logprob: -5.445295333862305
    5. '3' → logprob: -7.445295333862305
    6. '5' → logprob: -9.945295333862305
    7. '4' → logprob: -10.445295333862305
    8. '>' → logprob: -11.945295333862305
    9. '10' → logprob: -11.945295333862305
    10. '(' → logprob: -12.070295333862305

Token 507: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5803560614585876
    2. '1' → logprob: -0.8303560614585876
    3. ' ' → logprob: -5.455356121063232
    4. '2' → logprob: -9.080355644226074
    5. '=' → logprob: -12.080355644226074
    6. '3' → logprob: -12.767855644226074
    7. '   ' → logprob: -13.142855644226074
    8. '  ' → logprob: -13.392855644226074
    9. '5' → logprob: -14.205355644226074
    10. '10' → logprob: -14.455355644226074

Token 508: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026426399126648903
    2. ':
' → logprob: -3.651426315307617
    3. ' :' → logprob: -10.026426315307617
    4. ':return' → logprob: -10.276426315307617
    5. ',' → logprob: -10.651426315307617
    6. '   ' → logprob: -11.401426315307617
    7. ' :
' → logprob: -12.026426315307617
    8. ' and' → logprob: -12.151426315307617
    9. ':

' → logprob: -15.151426315307617
    10. 'and' → logprob: -15.276426315307617

Token 509: 'la' (ID: 1675)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7544287443161011
    2. '   ' → logprob: -1.254428744316101
    3. ':
' → logprob: -2.3794288635253906
    4. ':return' → logprob: -2.6294288635253906
    5. '):' → logprob: -3.7544288635253906
    6. ' return' → logprob: -3.8794288635253906
    7. 'return' → logprob: -4.379428863525391
    8. '):
' → logprob: -4.754428863525391
    9. ')' → logprob: -4.879428863525391
    10. ' :' → logprob: -6.254428863525391

Token 510: ' liste' (ID: 31719)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.10084424167871475
    2. 'return' → logprob: -2.475844144821167
    3. ':return' → logprob: -5.225844383239746
    4. '   ' → logprob: -6.725844383239746
    5. 'len' → logprob: -6.850844383239746
    6. ':' → logprob: -6.975844383239746
    7. '#' → logprob: -7.600844383239746
    8. ' ' → logprob: -7.850844383239746
    9. 'prem' → logprob: -7.975844383239746
    10. '  ' → logprob: -8.475844383239746

Token 511: ' n' (ID: 297)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14149408042430878
    2. ' ==' → logprob: -2.891494035720825
    3. ':' → logprob: -3.891494035720825
    4. ')' → logprob: -3.891494035720825
    5. '==' → logprob: -4.141494274139404
    6. '):' → logprob: -5.391494274139404
    7. ' )' → logprob: -6.141494274139404
    8. ' ' → logprob: -6.641494274139404
    9. '),' → logprob: -6.641494274139404
    10. ' est' → logprob: -6.641494274139404

Token 512: ''a' (ID: 10443)
  Prédit: ''est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.5496076941490173
    2. '[' → logprob: -1.799607753753662
    3. '==' → logprob: -2.299607753753662
    4. ''' → logprob: -3.549607753753662
    5. ' ==' → logprob: -3.674607753753662
    6. ''a' → logprob: -4.049607753753662
    7. 'est' → logprob: -4.799607753753662
    8. '#' → logprob: -4.799607753753662
    9. 'e' → logprob: -4.799607753753662
    10. 'a' → logprob: -5.299607753753662

Token 513: ' qu' (ID: 474)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.7365322709083557
    2. 'pas' → logprob: -1.486532211303711
    3. ')' → logprob: -2.236532211303711
    4. '_pas' → logprob: -3.111532211303711
    5. '<|end|>' → logprob: -3.986532211303711
    6. 'se' → logprob: -4.611532211303711
    7. ' ' → logprob: -4.986532211303711
    8. 'length' → logprob: -4.986532211303711
    9. '')' → logprob: -5.236532211303711
    10. '#' → logprob: -5.236532211303711

Token 514: ''un' (ID: 9788)
  Prédit: ''un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''un' → logprob: -1.3825492858886719
    2. '=' → logprob: -1.5075492858886719
    3. 'u' → logprob: -2.257549285888672
    4. ''' → logprob: -2.257549285888672
    5. 'e' → logprob: -2.507549285888672
    6. 'a' → logprob: -2.882549285888672
    7. ''une' → logprob: -3.132549285888672
    8. '==' → logprob: -3.882549285888672
    9. 'ue' → logprob: -3.882549285888672
    10. ' ==' → logprob: -4.132549285888672

Token 515: ' seul' (ID: 33041)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.6955979466438293
    2. ')' → logprob: -1.4455978870391846
    3. ' élément' → logprob: -1.5705978870391846
    4. ' seul' → logprob: -3.3205978870391846
    5. 'element' → logprob: -4.445598125457764
    6. ']' → logprob: -5.820598125457764
    7. ' element' → logprob: -5.945598125457764
    8. ' )' → logprob: -6.945598125457764
    9. 'se' → logprob: -7.320598125457764
    10. ' unique' → logprob: -7.445598125457764

Token 516: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.711142897605896
    2. ' élément' → logprob: -0.961142897605896
    3. ')' → logprob: -2.4611430168151855
    4. 'element' → logprob: -3.5861430168151855
    5. ' ' → logprob: -4.9611430168151855
    6. ' )' → logprob: -5.5861430168151855
    7. ' element' → logprob: -6.5861430168151855
    8. ' ' → logprob: -8.086142539978027
    9. 'elem' → logprob: -8.461142539978027
    10. '),' → logprob: -8.711142539978027

Token 517: '),' (ID: 936)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1555984616279602
    2. '):' → logprob: -2.1555984020233154
    3. '):
' → logprob: -4.9055986404418945
    4. ':
' → logprob: -4.9055986404418945
    5. '   ' → logprob: -5.4055986404418945
    6. ')' → logprob: -5.9055986404418945
    7. ',' → logprob: -6.0305986404418945
    8. '),' → logprob: -6.4055986404418945
    9. ':return' → logprob: -6.4055986404418945
    10. ' :' → logprob: -7.9055986404418945

Token 518: ' on' (ID: 402)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6650506258010864
    2. ' return' → logprob: -0.9150506258010864
    3. '   ' → logprob: -2.540050506591797
    4. '       ' → logprob: -5.665050506591797
    5. 'print' → logprob: -6.415050506591797
    6. ' print' → logprob: -7.415050506591797
    7. '	return' → logprob: -8.165050506591797
    8. '#' → logprob: -9.290050506591797
    9. '    ' → logprob: -9.290050506591797
    10. '    
' → logprob: -9.915050506591797

Token 519: ' affiche' (ID: 127479)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2915913164615631
    2. ' return' → logprob: -2.1665914058685303
    3. 'return' → logprob: -2.2915914058685303
    4. '       ' → logprob: -3.9165914058685303
    5. '    ' → logprob: -5.416591167449951
    6. '	return' → logprob: -5.916591167449951
    7. 'print' → logprob: -6.166591167449951
    8. ':return' → logprob: -6.416591167449951
    9. '    
' → logprob: -6.541591167449951
    10. ':' → logprob: -7.166591167449951

Token 520: ' simplement' (ID: 45065)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.5791230797767639
    2. 'A' → logprob: -0.8291230797767639
    3. 'print' → logprob: -6.454123020172119
    4. '0' → logprob: -7.454123020172119
    5. '(' → logprob: -7.704123020172119
    6. '   ' → logprob: -8.204123497009277
    7. ' A' → logprob: -8.954123497009277
    8. 'return' → logprob: -9.454123497009277
    9. 'a' → logprob: -11.329123497009277
    10. '1' → logprob: -11.329123497009277

Token 521: ' ' (ID: 220)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.06226937472820282
    2. '(A' → logprob: -2.812269449234009
    3. ' A' → logprob: -8.81226921081543
    4. '0' → logprob: -9.18726921081543
    5. '(' → logprob: -10.68726921081543
    6. 'print' → logprob: -10.93726921081543
    7. 'a' → logprob: -12.81226921081543
    8. '   ' → logprob: -12.81226921081543
    9. '1' → logprob: -13.31226921081543
    10. 'return' → logprob: -13.93726921081543

Token 522: '1' (ID: 16)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00599219324067235
    2. 'print' → logprob: -5.505992412567139
    3. '(A' → logprob: -6.505992412567139
    4. ' A' → logprob: -8.13099193572998
    5. '0' → logprob: -9.13099193572998
    6. '(' → logprob: -12.25599193572998
    7. ' print' → logprob: -12.38099193572998
    8. '   ' → logprob: -12.88099193572998
    9. 'a' → logprob: -14.63099193572998
    10. 'l' → logprob: -14.63099193572998

Token 523: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0297836996614933
    2. '
' → logprob: -4.279783725738525
    3. '\n' → logprob: -4.904783725738525
    4. '    
' → logprob: -5.779783725738525
    5. '       ' → logprob: -6.029783725738525
    6. ':' → logprob: -7.279783725738525
    7. '(' → logprob: -8.029783248901367
    8. '   
' → logprob: -8.029783248901367
    9. 'if' → logprob: -8.529783248901367
    10. ' if' → logprob: -8.654783248901367

Token 524: 'cas' (ID: 14617)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03643251955509186
    2. 'return' → logprob: -4.16143274307251
    3. '       ' → logprob: -4.16143274307251
    4. ')' → logprob: -5.66143274307251
    5. ' return' → logprob: -7.28643274307251
    6. '	return' → logprob: -9.286432266235352
    7. '
' → logprob: -9.286432266235352
    8. '\n' → logprob: -9.286432266235352
    9. '    
' → logprob: -10.661432266235352
    10. ')
' → logprob: -10.911432266235352

Token 525: ' particulier' (ID: 47842)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27288100123405457
    2. '
' → logprob: -2.272881031036377
    3. '    
' → logprob: -2.772881031036377
    4. ' return' → logprob: -3.647881031036377
    5. 'return' → logprob: -4.022881031036377
    6. '\n' → logprob: -5.147881031036377
    7. '```' → logprob: -5.522881031036377
    8. 'if' → logprob: -5.647881031036377
    9. ')
' → logprob: -6.022881031036377
    10. ')' → logprob: -6.022881031036377

Token 526: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07881388068199158
    2. ')' → logprob: -3.0788137912750244
    3. '\n' → logprob: -4.5788140296936035
    4. '
' → logprob: -4.7038140296936035
    5. '    
' → logprob: -5.8288140296936035
    6. ':' → logprob: -6.7038140296936035
    7. '       ' → logprob: -6.8288140296936035
    8. '<|end|>' → logprob: -6.8288140296936035
    9. ' )' → logprob: -7.5788140296936035
    10. ')
' → logprob: -7.9538140296936035

Token 527: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010141143575310707
    2. '       ' → logprob: -7.126014232635498
    3. 'if' → logprob: -9.25101375579834
    4. '    
' → logprob: -10.25101375579834
    5. ' if' → logprob: -10.37601375579834
    6. ':' → logprob: -10.50101375579834
    7. ',' → logprob: -12.50101375579834
    8. '\n' → logprob: -12.87601375579834
    9. '```' → logprob: -12.87601375579834
    10. '.' → logprob: -13.75101375579834

Token 528: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03836609050631523
    2. '   ' → logprob: -3.2883660793304443
    3. ' if' → logprob: -8.038366317749023
    4. '```' → logprob: -13.538366317749023
    5. '	if' → logprob: -15.538366317749023
    6. 'print' → logprob: -16.538366317749023
    7. '1' → logprob: -17.413366317749023
    8. '       ' → logprob: -17.913366317749023
    9. ' ' → logprob: -18.413366317749023
    10. 'return' → logprob: -19.413366317749023

Token 529: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.25193020701408386
    2. 'N' → logprob: -1.5019302368164062
    3. '   ' → logprob: -14.626930236816406
    4. '	N' → logprob: -15.001930236816406
    5. ' ' → logprob: -15.501930236816406
    6. ' ' → logprob: -15.501930236816406
    7. '  ' → logprob: -17.501930236816406
    8. '(N' → logprob: -18.501930236816406
    9. '    ' → logprob: -19.001930236816406
    10. ' len' → logprob: -19.126930236816406

Token 530: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.31331703066825867
    2. '==' → logprob: -1.313317060470581
    3. ' <=' → logprob: -10.56331729888916
    4. '<=' → logprob: -10.93831729888916
    5. '=' → logprob: -11.93831729888916
    6. ' ' → logprob: -12.93831729888916
    7. '==
' → logprob: -13.93831729888916
    8. ' =' → logprob: -14.68831729888916
    9. '1' → logprob: -14.81331729888916
    10. ')==' → logprob: -15.43831729888916

Token 531: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018150877207517624
    2. ' ' → logprob: -4.018150806427002
    3. '=' → logprob: -15.14315128326416
    4. '   ' → logprob: -15.14315128326416
    5. '
' → logprob: -15.89315128326416
    6. '  ' → logprob: -16.393150329589844
    7. '0' → logprob: -16.705650329589844
    8. ' 
' → logprob: -16.893150329589844
    9. '```' → logprob: -17.268150329589844
    10. ' ' → logprob: -17.643150329589844

Token 532: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.584861744660884e-05
    2. ' ' → logprob: -10.000045776367188
    3. '=' → logprob: -15.875045776367188
    4. '   ' → logprob: -16.750045776367188
    5. '```' → logprob: -17.000045776367188
    6. '0' → logprob: -17.375045776367188
    7. '
' → logprob: -17.500045776367188
    8. '۱' → logprob: -18.437545776367188
    9. '(' → logprob: -18.500045776367188
    10. '[' → logprob: -18.750045776367188

Token 533: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014228733256459236
    2. ':
' → logprob: -4.264228820800781
    3. ':return' → logprob: -9.889228820800781
    4. '   ' → logprob: -11.639228820800781
    5. '       ' → logprob: -13.014228820800781
    6. ' :' → logprob: -13.764228820800781
    7. ':

' → logprob: -14.014228820800781
    8. ':
' → logprob: -14.889228820800781
    9. '):' → logprob: -15.014228820800781
    10. '():' → logprob: -15.764228820800781

Token 534: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2584645748138428
    2. '       ' → logprob: -1.5084645748138428
    3. ':
' → logprob: -5.133464813232422
    4. '   ' → logprob: -7.633464813232422
    5. ':return' → logprob: -10.008464813232422
    6. ' :' → logprob: -10.008464813232422
    7. ',' → logprob: -11.008464813232422
    8. '):' → logprob: -12.883464813232422
    9. ' :
' → logprob: -12.883464813232422
    10. '():' → logprob: -13.008464813232422

Token 535: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.002640937454998493
    2. '   ' → logprob: -6.002640724182129
    3. ' print' → logprob: -9.002640724182129
    4. '       ' → logprob: -10.252640724182129
    5. 'return' → logprob: -12.127640724182129
    6. 'pr' → logprob: -14.252640724182129
    7. '	print' → logprob: -14.877640724182129
    8. '```' → logprob: -15.627640724182129
    9. '    ' → logprob: -16.252641677856445
    10. '           ' → logprob: -16.877641677856445

Token 536: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009122979827225208
    2. '1' → logprob: -7.000912189483643
    3. '(
' → logprob: -14.3759126663208
    4. ' (' → logprob: -16.500911712646484
    5. '("' → logprob: -17.750911712646484
    6. ' ' → logprob: -17.875911712646484
    7. '()' → logprob: -18.000911712646484
    8. '('' → logprob: -18.375911712646484
    9. '(

' → logprob: -19.375911712646484
    10. '((' → logprob: -19.750911712646484

Token 537: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.125
    3. '(' → logprob: -16.625
    4. '   ' → logprob: -18.5
    5. '"' → logprob: -18.75
    6. '```' → logprob: -20.5625
    7. '`' → logprob: -20.9375
    8. '۱' → logprob: -21.4375
    9. '１' → logprob: -21.5
    10. '१' → logprob: -21.8125

Token 538: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05469020828604698
    2. '       ' → logprob: -3.67969012260437
    3. ')
' → logprob: -3.92969012260437
    4. ')return' → logprob: -5.429690361022949
    5. '   ' → logprob: -5.554690361022949
    6. ' )' → logprob: -10.42969036102295
    7. '
' → logprob: -11.42969036102295
    8. 'return' → logprob: -11.55469036102295
    9. ')
' → logprob: -12.17969036102295
    10. '           ' → logprob: -12.55469036102295

Token 539: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2259518802165985
    2. '       ' → logprob: -1.600951910018921
    3. '<|end|>' → logprob: -8.6009521484375
    4. '    ' → logprob: -9.4759521484375
    5. '    
' → logprob: -9.7259521484375
    6. '	return' → logprob: -9.8509521484375
    7. '	' → logprob: -9.9759521484375
    8. '  ' → logprob: -10.6009521484375
    9. 'return' → logprob: -10.8509521484375
    10. '           ' → logprob: -11.7259521484375

Token 540: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0037585131358355284
    2. 'else' (adapté à ' else') → logprob: -5.628758430480957
    3. ' else' → logprob: -9.753758430480957
    4. 'return' → logprob: -9.878758430480957
    5. 'elif' → logprob: -10.128758430480957
    6. '    
' → logprob: -12.753758430480957
    7. '       ' → logprob: -12.878758430480957
    8. '	else' → logprob: -14.253758430480957
    9. '    ' → logprob: -14.503758430480957
    10. ')' → logprob: -14.753758430480957

Token 541: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009362359414808452
    2. ':
' → logprob: -7.000936031341553
    3. '       ' → logprob: -11.625936508178711
    4. ' :' → logprob: -11.625936508178711
    5. '   ' → logprob: -12.500936508178711
    6. ',' → logprob: -13.125936508178711
    7. ':

' → logprob: -15.750936508178711
    8. ' :
' → logprob: -15.750936508178711
    9. ')' → logprob: -16.12593650817871
    10. ':def' → logprob: -16.25093650817871

Token 542: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00046832661610096693
    2. '        
' → logprob: -9.000468254089355
    3. '    ' → logprob: -9.125468254089355
    4. '   ' → logprob: -9.875468254089355
    5. '#' → logprob: -10.000468254089355
    6. '<|end|>' → logprob: -10.500468254089355
    7. '      ' → logprob: -11.125468254089355
    8. 'pass' → logprob: -11.125468254089355
    9. '        ' → logprob: -11.625468254089355
    10. 'result' → logprob: -11.875468254089355

Token 543: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9755673408508301
    2. '       ' → logprob: -1.10056734085083
    3. 'result' → logprob: -2.85056734085083
    4. 'res' → logprob: -3.22556734085083
    5. 'g' → logprob: -3.22556734085083
    6. '#' (adapté à ' #') → logprob: -3.47556734085083
    7. 'print' → logprob: -3.97556734085083
    8. 'max' → logprob: -3.97556734085083
    9. 'pass' → logprob: -4.22556734085083
    10. '   ' → logprob: -4.35056734085083

Token 544: ' On' (ID: 2160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4839926064014435
    2. '       ' → logprob: -1.733992576599121
    3. 'g' → logprob: -3.108992576599121
    4. 'max' → logprob: -3.358992576599121
    5. '#' → logprob: -3.483992576599121
    6. 'res' → logprob: -4.233992576599121
    7. 'result' → logprob: -4.358992576599121
    8. 'count' → logprob: -4.608992576599121
    9. 's' → logprob: -4.858992576599121
    10. 'freq' → logprob: -4.858992576599121

Token 545: ' commence' (ID: 44755)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4946439564228058
    2. '   ' → logprob: -1.1196439266204834
    3. '    ' → logprob: -4.2446441650390625
    4. ' =' → logprob: -4.3696441650390625
    5. '=' → logprob: -4.7446441650390625
    6. ':' → logprob: -5.2446441650390625
    7. '#' → logprob: -5.3696441650390625
    8. 'for' → logprob: -5.4946441650390625
    9. '        ' → logprob: -5.9946441650390625
    10. '           ' → logprob: -6.4946441650390625

Token 546: ' par' (ID: 686)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9079667329788208
    2. '    ' → logprob: -1.5329667329788208
    3. '   ' → logprob: -1.5329667329788208
    4. '        ' → logprob: -3.2829666137695312
    5. ' by' → logprob: -3.7829666137695312
    6. ' par' → logprob: -4.407966613769531
    7. '        
' → logprob: -4.407966613769531
    8. ' a' → logprob: -5.032966613769531
    9. 'from' → logprob: -5.282966613769531
    10. 'par' → logprob: -5.532966613769531

Token 547: ' définir' (ID: 131502)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.5099070072174072
    2. ' res' → logprob: -2.1349070072174072
    3. ' A' → logprob: -2.1349070072174072
    4. '   ' → logprob: -2.2599070072174072
    5. ' gcd' → logprob: -2.6349070072174072
    6. '#' → logprob: -3.1349070072174072
    7. 'a' → logprob: -3.1349070072174072
    8. 'A' → logprob: -3.2599070072174072
    9. '       ' → logprob: -3.2599070072174072
    10. 'res' → logprob: -3.5099070072174072

Token 548: ' l' (ID: 305)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4512096345424652
    2. 'res' → logprob: -2.576209545135498
    3. '       ' → logprob: -2.826209545135498
    4. 'result' → logprob: -3.201209545135498
    5. 'ans' → logprob: -3.701209545135498
    6. '   ' → logprob: -3.826209545135498
    7. 'count' → logprob: -4.201209545135498
    8. 'max' → logprob: -4.201209545135498
    9. 'answer' → logprob: -4.326209545135498
    10. 'g' → logprob: -4.451209545135498

Token 549: 'cm' (ID: 7871)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07525800913572311
    2. 'e' → logprob: -3.9502580165863037
    3. 'cm' → logprob: -4.200257778167725
    4. 'en' → logprob: -4.575257778167725
    5. 'g' → logprob: -5.075257778167725
    6. 'max' → logprob: -5.325257778167725
    7. 'ast' → logprob: -5.575257778167725
    8. 'ength' → logprob: -6.325257778167725
    9. '#' → logprob: -6.700257778167725
    10. 'et' → logprob: -6.700257778167725

Token 550: ' ég' (ID: 33150)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15927806496620178
    2. '_val' → logprob: -2.034278154373169
    3. '=' → logprob: -4.53427791595459
    4. '_value' → logprob: -6.15927791595459
    5. 's' → logprob: -7.28427791595459
    6. '_' → logprob: -7.65927791595459
    7. '_vals' → logprob: -7.78427791595459
    8. '_list' → logprob: -8.03427791595459
    9. '_values' → logprob: -8.03427791595459
    10. '_a' → logprob: -8.15927791595459

Token 551: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.6802597045898438
    2. 'al' → logprob: -1.0552597045898438
    3. 'aux' → logprob: -2.9302597045898438
    4. '=' → logprob: -3.5552597045898438
    5. ' =' → logprob: -3.5552597045898438
    6. 'ard' → logprob: -4.555259704589844
    7. 'u' → logprob: -5.305259704589844
    8. 'ual' → logprob: -5.305259704589844
    9. 'ault' → logprob: -5.805259704589844
    10. 'a' → logprob: -5.805259704589844

Token 552: ' au' (ID: 2791)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.7202765941619873
    2. '1' → logprob: -0.9702765941619873
    3. '   ' → logprob: -2.9702765941619873
    4. '=' → logprob: -3.0952765941619873
    5. '(' → logprob: -4.720276832580566
    6. '(A' → logprob: -4.720276832580566
    7. '       ' → logprob: -5.095276832580566
    8. 'g' → logprob: -5.720276832580566
    9. 'à' → logprob: -5.970276832580566
    10. ' =' → logprob: -6.095276832580566

Token 553: ' premier' (ID: 15506)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.024665432050824165
    2. '1' → logprob: -3.774665355682373
    3. 'g' → logprob: -6.899665355682373
    4. ' A' → logprob: -8.899665832519531
    5. 'l' → logprob: -9.399665832519531
    6. 'a' → logprob: -9.399665832519531
    7. '0' → logprob: -10.774665832519531
    8. '(' → logprob: -11.024665832519531
    9. 'max' → logprob: -11.024665832519531
    10. ' ' → logprob: -11.024665832519531

Token 554: ' élément' (ID: 99627)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.3692242205142975
    2. '(A' → logprob: -2.1192243099212646
    3. ' A' → logprob: -2.4942243099212646
    4. '(' → logprob: -2.9942243099212646
    5. 'element' → logprob: -3.8692243099212646
    6. 'a' → logprob: -5.3692240715026855
    7. '*' → logprob: -5.3692240715026855
    8. ')' → logprob: -5.6192240715026855
    9. ' element' → logprob: -5.6192240715026855
    10. ' ' → logprob: -5.8692240715026855

Token 555: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33478134870529175
    2. '(A' → logprob: -1.4597814083099365
    3. ' =' → logprob: -3.7097814083099365
    4. 'A' → logprob: -4.959781169891357
    5. ',' → logprob: -5.334781169891357
    6. '        ' → logprob: -5.834781169891357
    7. '   ' → logprob: -6.084781169891357
    8. '(' → logprob: -6.209781169891357
    9. ' (' → logprob: -6.459781169891357
    10. ' A' → logprob: -6.709781169891357

Token 556: ' la' (ID: 557)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.026303084567189217
    2. ' A' → logprob: -3.6513030529022217
    3. ' ' → logprob: -14.1513032913208
    4. '(A' → logprob: -14.2763032913208
    5. '   ' → logprob: -14.6513032913208
    6. 'a' → logprob: -15.0263032913208
    7. '	A' → logprob: -15.1513032913208
    8. 'l' → logprob: -16.526302337646484
    9. ' ' → logprob: -16.776302337646484
    10. '```' → logprob: -16.901302337646484

Token 557: ' liste' (ID: 31719)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.06199648603796959
    2. ' A' → logprob: -2.8119964599609375
    3. ' ' → logprob: -11.811996459960938
    4. 'a' → logprob: -12.186996459960938
    5. 's' → logprob: -13.561996459960938
    6. ' list' → logprob: -13.561996459960938
    7. '```' → logprob: -13.686996459960938
    8. '`' → logprob: -14.186996459960938
    9. ' ' → logprob: -14.186996459960938
    10. '   ' → logprob: -14.186996459960938

Token 558: ' A' (ID: 355)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010305367410182953
    2. '        
' → logprob: -5.760305404663086
    3. ' =' → logprob: -6.385305404663086
    4. ',' → logprob: -6.385305404663086
    5. 'A' → logprob: -7.135305404663086
    6. '        ' → logprob: -7.635305404663086
    7. '(' → logprob: -7.885305404663086
    8. ' (' → logprob: -8.260305404663086
    9. 'l' → logprob: -8.260305404663086
    10. 'a' → logprob: -8.510305404663086

Token 559: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0205302145332098
    2. 'l' → logprob: -4.8955302238464355
    3. ' l' → logprob: -5.0205302238464355
    4. ' =' → logprob: -5.5205302238464355
    5. '        
' → logprob: -6.6455302238464355
    6. '=' → logprob: -8.020529747009277
    7. ',' → logprob: -9.145529747009277
    8. 'a' → logprob: -9.270529747009277
    9. '_l' → logprob: -9.520529747009277
    10. '   ' → logprob: -9.770529747009277

Token 560: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013778525404632092
    2. ' l' → logprob: -4.6387786865234375
    3. 'l' → logprob: -6.5137786865234375
    4. '        
' → logprob: -6.8887786865234375
    5. ' =' → logprob: -8.013778686523438
    6. ',' → logprob: -8.388778686523438
    7. '	' → logprob: -8.513778686523438
    8. '   ' → logprob: -8.888778686523438
    9. '        ' → logprob: -9.138778686523438
    10. '_l' → logprob: -10.013778686523438

Token 561: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.00842769630253315
    2. 'A' → logprob: -5.758427619934082
    3. ' l' → logprob: -6.258427619934082
    4. 'a' → logprob: -6.508427619934082
    5. '       ' → logprob: -6.758427619934082
    6. 'lc' → logprob: -7.758427619934082
    7. ' A' → logprob: -8.758427619934082
    8. '   ' → logprob: -9.633427619934082
    9. '	l' → logprob: -12.258427619934082
    10. ' a' → logprob: -12.258427619934082

Token 562: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.0039927964098751545
    2. 'CM' → logprob: -6.378993034362793
    3. ' =' → logprob: -6.378993034362793
    4. '=' → logprob: -8.253993034362793
    5. 'c' → logprob: -8.503993034362793
    6. 'cms' → logprob: -10.253993034362793
    7. '   ' → logprob: -10.378993034362793
    8. 'C' → logprob: -10.503993034362793
    9. 'm' → logprob: -11.128993034362793
    10. '_cm' → logprob: -12.378993034362793

Token 563: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018153570592403412
    2. '=' → logprob: -4.018153667449951
    3. ' ' → logprob: -13.393153190612793
    4. '=A' → logprob: -13.643153190612793
    5. ',' → logprob: -14.518153190612793
    6. ' ' → logprob: -15.893153190612793
    7. 'A' → logprob: -16.51815414428711
    8. '   ' → logprob: -16.64315414428711
    9. '    ' → logprob: -17.64315414428711
    10. 's' → logprob: -17.89315414428711

Token 564: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.01252730842679739
    2. ' A' → logprob: -4.3875274658203125
    3. '   ' → logprob: -11.012527465820312
    4. ' ' → logprob: -15.012527465820312
    5. '	A' → logprob: -15.137527465820312
    6. '  ' → logprob: -15.887527465820312
    7. '1' → logprob: -16.137527465820312
    8. 'a' → logprob: -16.262527465820312
    9. '       ' → logprob: -16.512527465820312
    10. '    ' → logprob: -17.137527465820312

Token 565: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00012558852904476225
    2. '0' → logprob: -9.000125885009766
    3. ' [' → logprob: -14.250125885009766
    4. '[
' → logprob: -15.000125885009766
    5. '   ' → logprob: -15.250125885009766
    6. 's' → logprob: -15.375125885009766
    7. '#' → logprob: -16.000125885009766
    8. '][' → logprob: -16.500125885009766
    9. 'def' → logprob: -16.562625885009766
    10. '```' → logprob: -16.687625885009766

Token 566: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.875
    3. ' ' → logprob: -16.625
    4. '۰' → logprob: -19.25
    5. '   ' → logprob: -20.0
    6. '০' → logprob: -21.75
    7. '
' → logprob: -21.75
    8. '#' → logprob: -21.8125
    9. '٠' → logprob: -21.875
    10. '０' → logprob: -22.125

Token 567: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006836376152932644
    2. '   ' → logprob: -6.006836414337158
    3. ' )' → logprob: -6.131836414337158
    4. ')
' → logprob: -6.381836414337158
    5. ']' → logprob: -8.1318359375
    6. '<|end|>' → logprob: -9.2568359375
    7. ' ' → logprob: -10.8818359375
    8. '       ' → logprob: -11.0068359375
    9. ' )
' → logprob: -11.3818359375
    10. '
' → logprob: -11.5068359375

Token 568: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7107713222503662
    2. '
' → logprob: -0.8357713222503662
    3. '   ' → logprob: -3.710771322250366
    4. '<|end|>' → logprob: -3.710771322250366
    5. '        
' → logprob: -4.835771560668945
    6. '    
' → logprob: -5.585771560668945
    7. '  
' → logprob: -5.585771560668945
    8. ' 
' → logprob: -5.585771560668945
    9. '    ' → logprob: -6.835771560668945
    10. '\n' → logprob: -7.085771560668945

Token 569: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0105173587799072
    2. 'for' → logprob: -1.1355173587799072
    3. '       ' → logprob: -1.3855173587799072
    4. ' for' → logprob: -2.7605173587799072
    5. '
' → logprob: -7.385517120361328
    6. '    ' → logprob: -8.760517120361328
    7. '	for' → logprob: -9.010517120361328
    8. '    
' → logprob: -9.135517120361328
    9. '        
' → logprob: -9.635517120361328
    10. '  ' → logprob: -9.635517120361328

Token 570: ' Parc' (ID: 68618)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16463884711265564
    2. '   ' → logprob: -2.4146387577056885
    3. ' for' → logprob: -2.7896387577056885
    4. '	for' → logprob: -7.164638996124268
    5. '       ' → logprob: -8.91463851928711
    6. ' ' → logprob: -11.16463851928711
    7. '    ' → logprob: -11.66463851928711
    8. '  ' → logprob: -12.41463851928711
    9. '   ' → logprob: -12.53963851928711
    10. '
' → logprob: -12.66463851928711

Token 571: 'ourt' (ID: 38600)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6529479026794434
    2. ' for' → logprob: -0.9029479026794434
    3. 'our' → logprob: -3.5279479026794434
    4. '   ' → logprob: -3.9029479026794434
    5. '       ' → logprob: -4.777947902679443
    6. 'ours' → logprob: -5.652947902679443
    7. 'r' → logprob: -5.902947902679443
    8. 'er' → logprob: -6.027947902679443
    9. 'es' → logprob: -6.277947902679443
    10. 'ourt' → logprob: -6.527947902679443

Token 572: ' la' (ID: 557)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2763698697090149
    2. ' A' → logprob: -1.7763698101043701
    3. ' i' → logprob: -3.65136981010437
    4. 'range' → logprob: -4.026370048522949
    5. '   ' → logprob: -4.276370048522949
    6. 'A' → logprob: -4.901370048522949
    7. ' ' → logprob: -5.526370048522949
    8. ' for' → logprob: -7.151370048522949
    9. ' _' → logprob: -7.776370048522949
    10. ' the' → logprob: -7.776370048522949

Token 573: ' liste' (ID: 31719)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.49184292554855347
    2. ' range' → logprob: -1.4918429851531982
    3. 'range' → logprob: -1.9918429851531982
    4. ' A' → logprob: -3.6168429851531982
    5. '   ' → logprob: -9.866843223571777
    6. 'for' → logprob: -9.991843223571777
    7. ' ' → logprob: -10.116843223571777
    8. 'i' → logprob: -10.616843223571777
    9. ' for' → logprob: -10.991843223571777
    10. '(range' → logprob: -11.491843223571777

Token 574: ' à' (ID: 1221)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4538190960884094
    2. ' A' → logprob: -1.4538190364837646
    3. '   ' → logprob: -3.0788190364837646
    4. ' range' → logprob: -3.3288190364837646
    5. 'A' → logprob: -4.078819274902344
    6. ' in' → logprob: -4.453819274902344
    7. '       ' → logprob: -4.703819274902344
    8. ' for' → logprob: -5.828819274902344
    9. '(' → logprob: -6.078819274902344
    10. 'range' → logprob: -6.953819274902344

Token 575: ' partir' (ID: 12100)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4762451946735382
    2. ' range' → logprob: -1.2262451648712158
    3. ' partir' → logprob: -2.601245164871216
    4. '[' → logprob: -4.976245403289795
    5. '1' → logprob: -5.601245403289795
    6. 'A' → logprob: -8.601244926452637
    7. 'i' → logprob: -9.101244926452637
    8. ' A' → logprob: -9.351244926452637
    9. 'part' → logprob: -9.726244926452637
    10. 'from' → logprob: -10.226244926452637

Token 576: ' du' (ID: 1462)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15667331218719482
    2. '1' → logprob: -2.0316734313964844
    3. ' range' → logprob: -4.531673431396484
    4. ' i' → logprob: -6.656673431396484
    5. 'range' → logprob: -6.656673431396484
    6. '   ' → logprob: -8.906673431396484
    7. 'i' → logprob: -9.031673431396484
    8. '[' → logprob: -9.031673431396484
    9. ' ' → logprob: -9.531673431396484
    10. ' de' → logprob: -10.656673431396484

Token 577: ' deuxième' (ID: 51664)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2127087504486553e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -14.875021934509277
    4. 'import' → logprob: -16.625022888183594
    5. '```' → logprob: -17.125022888183594
    6. 'index' → logprob: -17.375022888183594
    7. '  ' → logprob: -17.500022888183594
    8. 'for' → logprob: -18.562522888183594
    9. 'from' → logprob: -18.812522888183594
    10. 'i' → logprob: -18.937522888183594

Token 578: ' élément' (ID: 99627)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07357039302587509
    2. ' A' → logprob: -4.073570251464844
    3. 'élé' → logprob: -4.198570251464844
    4. ' élément' → logprob: -4.823570251464844
    5. ' token' → logprob: -5.323570251464844
    6. '  ' → logprob: -5.448570251464844
    7. 'A' → logprob: -5.823570251464844
    8. ' ,' → logprob: -5.823570251464844
    9. 'token' → logprob: -5.948570251464844
    10. 'element' → logprob: -6.198570251464844

Token 579: ' (' (ID: 350)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1208571270108223
    2. 'for' → logprob: -2.7458572387695312
    3. ',' → logprob: -4.120857238769531
    4. ':' → logprob: -4.245857238769531
    5. '   ' → logprob: -4.495857238769531
    6. ' (' → logprob: -5.745857238769531
    7. '       ' → logprob: -7.120857238769531
    8. '<|end|>' → logprob: -7.120857238769531
    9. ' in' → logprob: -7.370857238769531
    10. ' ,' → logprob: -7.870857238769531

Token 580: 'indice' (ID: 176697)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00021343429398257285
    2. ' ' → logprob: -8.875213623046875
    3. '   ' → logprob: -10.250213623046875
    4. 'i' → logprob: -11.750213623046875
    5. 'for' → logprob: -11.750213623046875
    6. ' for' → logprob: -11.875213623046875
    7. ' i' → logprob: -11.875213623046875
    8. ')' → logprob: -12.750213623046875
    9. ' range' → logprob: -13.375213623046875
    10. 'range' → logprob: -13.375213623046875

Token 581: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010580566013231874
    2. '=' → logprob: -7.126058101654053
    3. ' i' → logprob: -9.251057624816895
    4. ' ' → logprob: -9.376057624816895
    5. 'i' → logprob: -10.376057624816895
    6. ' =' → logprob: -10.501057624816895
    7. ':' → logprob: -12.251057624816895
    8. 's' → logprob: -13.126057624816895
    9. ')' → logprob: -13.376057624816895
    10. '   ' → logprob: -14.251057624816895

Token 582: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.700132997939363e-05
    2. ' ' → logprob: -11.250017166137695
    3. '=' → logprob: -13.250017166137695
    4. '```' → logprob: -14.625017166137695
    5. '   ' → logprob: -15.000017166137695
    6. ':' → logprob: -15.625017166137695
    7. '>' → logprob: -15.875017166137695
    8. ')' → logprob: -16.062517166137695
    9. '<|end|>' → logprob: -16.125017166137695
    10. '0' → logprob: -16.437517166137695

Token 583: ')' (ID: 8)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6212130188941956
    2. '   ' → logprob: -2.121212959289551
    3. '       ' → logprob: -2.246212959289551
    4. ',' → logprob: -2.246212959289551
    5. '):' → logprob: -2.871212959289551
    6. '):
' → logprob: -3.121212959289551
    7. ')' → logprob: -4.871212959289551
    8. ' for' → logprob: -4.996212959289551
    9. ':
' → logprob: -5.121212959289551
    10. ' :' → logprob: -6.121212959289551

Token 584: ' jusqu' (ID: 21961)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.09941694885492325
    2. '   ' → logprob: -2.974416971206665
    3. ':' → logprob: -3.849416971206665
    4. 'for' → logprob: -4.099416732788086
    5. '       ' → logprob: -5.724416732788086
    6. '	for' → logprob: -7.724416732788086
    7. '<|end|>' → logprob: -7.974416732788086
    8. ',' → logprob: -7.974416732788086
    9. ' in' → logprob: -8.224416732788086
    10. ' ' → logprob: -8.474416732788086

Token 585: ''à' (ID: 33688)
  Prédit: '’à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '’à' → logprob: -1.5585274696350098
    2. ''à' → logprob: -1.5585274696350098
    3. '=' → logprob: -2.0585274696350098
    4. '<|end|>' → logprob: -2.0585274696350098
    5. ' à' → logprob: -2.9335274696350098
    6. '   ' → logprob: -3.3085274696350098
    7. '(' → logprob: -3.6835274696350098
    8. '+' → logprob: -4.05852746963501
    9. ')' → logprob: -4.18352746963501
    10. '(len' → logprob: -4.30852746963501

Token 586: ' la' (ID: 557)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.005829730071127415
    2. ' N' → logprob: -5.505829811096191
    3. 'len' → logprob: -6.380829811096191
    4. ' len' → logprob: -9.880829811096191
    5. '   ' → logprob: -13.255829811096191
    6. '	N' → logprob: -13.880829811096191
    7. ' range' → logprob: -14.130829811096191
    8. 'n' → logprob: -14.255829811096191
    9. 'range' → logprob: -14.880829811096191
    10. ' ' → logprob: -15.380829811096191

Token 587: ' fin' (ID: 2131)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.136649027466774
    2. 'len' → logprob: -2.1366491317749023
    3. ' end' → logprob: -5.761649131774902
    4. ' N' → logprob: -6.011649131774902
    5. 'end' → logprob: -6.261649131774902
    6. ' len' → logprob: -6.761649131774902
    7. ':' → logprob: -7.386649131774902
    8. 'n' → logprob: -8.511649131774902
    9. 'length' → logprob: -9.386649131774902
    10. ' length' → logprob: -11.011649131774902

Token 588: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10372412949800491
    2. '   ' → logprob: -3.353724241256714
    3. 'for' → logprob: -3.603724241256714
    4. '       ' → logprob: -3.853724241256714
    5. ',' → logprob: -4.853724002838135
    6. ':' → logprob: -5.228724002838135
    7. ' in' → logprob: -7.103724002838135
    8. ' range' → logprob: -8.478724479675293
    9. '	for' → logprob: -8.728724479675293
    10. ':
' → logprob: -8.728724479675293

Token 589: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2269163876771927
    2. '   ' → logprob: -1.8519164323806763
    3. 'for' → logprob: -3.6019163131713867
    4. '       ' → logprob: -4.101916313171387
    5. ':' → logprob: -6.726916313171387
    6. ',' → logprob: -8.101916313171387
    7. '	for' → logprob: -8.476916313171387
    8. '    ' → logprob: -8.851916313171387
    9. ' ' → logprob: -9.601916313171387
    10. ':
' → logprob: -9.726916313171387

Token 590: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0933610200881958
    2. 'range' → logprob: -3.0933609008789062
    3. ' for' → logprob: -3.8433609008789062
    4. ' range' → logprob: -3.8433609008789062
    5. '   ' → logprob: -6.968360900878906
    6. '_range' → logprob: -14.343360900878906
    7. '	for' → logprob: -15.343360900878906
    8. 'i' → logprob: -15.843360900878906
    9. 'Range' → logprob: -15.843360900878906
    10. '       ' → logprob: -15.843360900878906

Token 591: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.13809834420681
    2. ' i' → logprob: -2.1380982398986816
    3. 'a' → logprob: -4.638098239898682
    4. ' a' → logprob: -7.263098239898682
    5. 'x' → logprob: -7.513098239898682
    6. 'num' → logprob: -9.51309871673584
    7. ' x' → logprob: -9.76309871673584
    8. ' ' → logprob: -10.88809871673584
    9. '   ' → logprob: -11.63809871673584
    10. ' num' → logprob: -12.01309871673584

Token 592: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012572633102536201
    2. 'in' → logprob: -4.387572765350342
    3. ' ' → logprob: -10.637572288513184
    4. '1' → logprob: -10.887572288513184
    5. ',' → logprob: -12.387572288513184
    6. ' i' → logprob: -12.512572288513184
    7. '   ' → logprob: -13.012572288513184
    8. 'i' → logprob: -13.637572288513184
    9. '[' → logprob: -13.887572288513184
    10. '	in' → logprob: -13.887572288513184

Token 593: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.20141363143920898
    2. 'range' → logprob: -1.701413631439209
    3. '	range' → logprob: -15.826414108276367
    4. '(range' → logprob: -15.951414108276367
    5. ' ' → logprob: -16.326414108276367
    6. ' xrange' → logprob: -17.951414108276367
    7. '   ' → logprob: -19.076414108276367
    8. '  ' → logprob: -19.951414108276367
    9. '_range' → logprob: -20.201414108276367
    10. ' rang' → logprob: -20.201414108276367

Token 594: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6931953430175781
    2. '1' → logprob: -0.6931953430175781
    3. ' ' → logprob: -10.568195343017578
    4. '   ' → logprob: -11.193195343017578
    5. ' (' → logprob: -11.818195343017578
    6. '(
' → logprob: -14.568195343017578
    7. ',' → logprob: -15.068195343017578
    8. '	' → logprob: -15.943195343017578
    9. '[' → logprob: -16.318195343017578
    10. 'len' → logprob: -16.443195343017578

Token 595: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -14.250001907348633
    4. '(' → logprob: -18.250001907348633
    5. '       ' → logprob: -18.500001907348633
    6. '2' → logprob: -19.250001907348633
    7. 'len' → logprob: -19.625001907348633
    8. '۱' → logprob: -20.125001907348633
    9. '```' → logprob: -20.312501907348633
    10. '	' → logprob: -20.437501907348633

Token 596: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0031121151987463236
    2. ' ,' → logprob: -6.128112316131592
    3. ',N' → logprob: -7.003112316131592
    4. ',len' → logprob: -11.128111839294434
    5. '   ' → logprob: -13.628111839294434
    6. 'N' → logprob: -14.503111839294434
    7. ' N' → logprob: -15.003111839294434
    8. '(N' → logprob: -15.503111839294434
    9. ',n' → logprob: -15.878111839294434
    10. ',
' → logprob: -16.37811279296875

Token 597: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -9.686778503237292e-05
    2. ' N' → logprob: -9.250097274780273
    3. 'len' → logprob: -14.875097274780273
    4. '   ' → logprob: -15.125097274780273
    5. '	N' → logprob: -18.500097274780273
    6. ' len' → logprob: -19.125097274780273
    7. '       ' → logprob: -19.625097274780273
    8. 'n' → logprob: -20.125097274780273
    9. ' ' → logprob: -21.375097274780273
    10. ')' → logprob: -21.375097274780273

Token 598: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3869517743587494
    2. '):' → logprob: -1.1369518041610718
    3. '   ' → logprob: -10.386951446533203
    4. '):
' → logprob: -10.386951446533203
    5. ':' → logprob: -11.636951446533203
    6. ' ):' → logprob: -12.761951446533203
    7. ' ):
' → logprob: -13.011951446533203
    8. '       ' → logprob: -13.136951446533203
    9. ')' → logprob: -13.636951446533203
    10. ':
' → logprob: -14.761951446533203

Token 599: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030320312827825546
    2. ':
' → logprob: -4.780320167541504
    3. '           ' → logprob: -4.780320167541504
    4. ':' → logprob: -5.655320167541504
    5. '        
' → logprob: -6.530320167541504
    6. '   ' → logprob: -6.655320167541504
    7. 'l' → logprob: -6.655320167541504
    8. ' l' → logprob: -7.280320167541504
    9. '<|end|>' → logprob: -7.405320167541504
    10. ',' → logprob: -7.530320167541504

Token 600: ' #' (ID: 1069)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.03124776855111122
    2. '           ' → logprob: -3.906247854232788
    3. 'l' → logprob: -5.281247615814209
    4. ' g' → logprob: -6.281247615814209
    5. 'a' → logprob: -7.031247615814209
    6. '_g' → logprob: -7.281247615814209
    7. 'd' → logprob: -7.406247615814209
    8. ' gcd' → logprob: -7.656247615814209
    9. 'b' → logprob: -8.656248092651367
    10. ' l' → logprob: -9.156248092651367

Token 601: ' Cal' (ID: 4453)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0678350180387497
    2. 'l' → logprob: -2.9428350925445557
    3. '           ' → logprob: -5.067834854125977
    4. '_g' → logprob: -6.067834854125977
    5. 'def' → logprob: -6.817834854125977
    6. 'current' → logprob: -7.067834854125977
    7. '_l' → logprob: -7.817834854125977
    8. 'd' → logprob: -8.067834854125977
    9. 'a' → logprob: -8.192834854125977
    10. 'b' → logprob: -8.692834854125977

Token 602: 'cule' (ID: 45017)
  Prédit: 'culate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'culate' → logprob: -1.1542494297027588
    2. 'cule' → logprob: -1.1542494297027588
    3. 'c' → logprob: -1.9042494297027588
    4. 'l' → logprob: -2.029249429702759
    5. 'cul' → logprob: -2.654249429702759
    6. '   ' → logprob: -4.77924919128418
    7. 'cl' → logprob: -5.15424919128418
    8. '       ' → logprob: -7.40424919128418
    9. 'cula' → logprob: -7.40424919128418
    10. 'lc' → logprob: -7.65424919128418

Token 603: ' le' (ID: 505)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6926664710044861
    2. ' l' → logprob: -1.1926665306091309
    3. '           ' → logprob: -2.192666530609131
    4. 'g' → logprob: -2.567666530609131
    5. ' gcd' → logprob: -5.817666530609131
    6. '(l' → logprob: -6.942666530609131
    7. '            ' → logprob: -7.317666530609131
    8. ' g' → logprob: -7.817666530609131
    9. '   ' → logprob: -7.942666530609131
    10. '(' → logprob: -7.942666530609131

Token 604: ' pg' (ID: 32259)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.06909472495317459
    2. 'l' → logprob: -2.819094657897949
    3. ' gcd' → logprob: -5.819094657897949
    4. '   ' → logprob: -6.694094657897949
    5. 'current' → logprob: -6.819094657897949
    6. '_g' → logprob: -7.819094657897949
    7. 'new' → logprob: -7.819094657897949
    8. 'lc' → logprob: -8.44409465789795
    9. ' l' → logprob: -8.56909465789795
    10. 'gc' → logprob: -9.06909465789795

Token 605: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.00013572083844337612
    2. 'c' → logprob: -9.37513542175293
    3. 'cm' → logprob: -10.00013542175293
    4. '   ' → logprob: -12.87513542175293
    5. 'l' → logprob: -14.37513542175293
    6. '=' → logprob: -14.62513542175293
    7. 'd' → logprob: -14.75013542175293
    8. '```' → logprob: -15.37513542175293
    9. 'cdn' → logprob: -15.50013542175293
    10. '       ' → logprob: -15.62513542175293

Token 606: ' entre' (ID: 3853)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.493242472410202
    2. '_val' → logprob: -1.4932425022125244
    3. '=' → logprob: -2.7432425022125244
    4. '_value' → logprob: -3.1182425022125244
    5. '_l' → logprob: -3.7432425022125244
    6. '(l' → logprob: -4.618242263793945
    7. '_result' → logprob: -5.493242263793945
    8. '_' → logprob: -5.618242263793945
    9. '           ' → logprob: -5.868242263793945
    10. '=l' → logprob: -5.868242263793945

Token 607: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.0445127372804563e-05
    2. ' l' → logprob: -11.50001049041748
    3. 'lc' → logprob: -16.375009536743164
    4. '(l' → logprob: -16.625009536743164
    5. '   ' → logprob: -17.000009536743164
    6. '           ' → logprob: -17.500009536743164
    7. '	l' → logprob: -17.750009536743164
    8. '```' → logprob: -18.500009536743164
    9. 'lcd' → logprob: -19.375009536743164
    10. 'll' → logprob: -20.125009536743164

Token 608: 'cm' (ID: 7871)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.05084492266178131
    2. ' l' → logprob: -3.05084490776062
    3. 'cm' → logprob: -6.675845146179199
    4. 'lc' → logprob: -7.425845146179199
    5. '(l' → logprob: -8.1758451461792
    6. 'c' → logprob: -9.6758451461792
    7. 'lm' → logprob: -11.4258451461792
    8. 'm' → logprob: -11.9258451461792
    9. 'mc' → logprob: -12.3008451461792
    10. '	l' → logprob: -12.4258451461792

Token 609: ' courant' (ID: 74694)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18823857605457306
    2. 'et' → logprob: -2.8132386207580566
    3. 'l' → logprob: -3.1882386207580566
    4. 'and' → logprob: -3.3132386207580566
    5. ' and' → logprob: -4.188238620758057
    6. ' et' → logprob: -4.438238620758057
    7. '(l' → logprob: -5.938238620758057
    8. ',l' → logprob: -5.938238620758057
    9. '```' → logprob: -7.188238620758057
    10. ')' → logprob: -8.313238143920898

Token 610: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24364669620990753
    2. ' and' → logprob: -2.4936466217041016
    3. 'l' → logprob: -2.8686466217041016
    4. '           ' → logprob: -3.6186466217041016
    5. 'et' → logprob: -4.243646621704102
    6. 'and' → logprob: -4.368646621704102
    7. ' et' → logprob: -4.493646621704102
    8. '(l' → logprob: -5.743646621704102
    9. ',l' → logprob: -5.868646621704102
    10. ' ,' → logprob: -6.243646621704102

Token 611: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.03804803267121315
    2. ' A' → logprob: -3.288048028945923
    3. '   ' → logprob: -12.413047790527344
    4. '(A' → logprob: -13.413047790527344
    5. '           ' → logprob: -14.788047790527344
    6. '       ' → logprob: -15.163047790527344
    7. '	A' → logprob: -15.413047790527344
    8. ' ' → logprob: -15.788047790527344
    9. '[A' → logprob: -16.913047790527344
    10. '_A' → logprob: -17.413047790527344

Token 612: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.25
    3. '```' → logprob: -17.625
    4. '[
' → logprob: -17.75
    5. ' [' → logprob: -18.0
    6. '[A' → logprob: -18.75
    7. '[I' → logprob: -19.0
    8. '   ' → logprob: -19.5
    9. 'A' → logprob: -19.75
    10. '
' → logprob: -20.25

Token 613: ']' (ID: 60)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.7305503487586975
    2. '])
' → logprob: -0.7305503487586975
    3. ')
' → logprob: -4.105550289154053
    4. ')' → logprob: -4.480550289154053
    5. ']' → logprob: -5.105550289154053
    6. ']
' → logprob: -6.730550289154053
    7. '])
' → logprob: -7.355550289154053
    8. '           ' → logprob: -7.855550289154053
    9. ' ])
' → logprob: -8.855550765991211
    10. ' ])' → logprob: -9.355550765991211

Token 614: ' en' (ID: 469)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4530366063117981
    2. ' =' → logprob: -1.0780365467071533
    3. '=' → logprob: -3.9530365467071533
    4. ',' → logprob: -6.828036785125732
    5. '
' → logprob: -6.953036785125732
    6. '               ' → logprob: -7.328036785125732
    7. ')' → logprob: -7.953036785125732
    8. '=g' → logprob: -7.953036785125732
    9. 'g' → logprob: -8.078036308288574
    10. '            
' → logprob: -8.203036308288574

Token 615: ' appel' (ID: 34642)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.009454065933823586
    2. 'l' → logprob: -5.009454250335693
    3. ' gcd' → logprob: -6.884454250335693
    4. 'A' → logprob: -7.009454250335693
    5. '   ' → logprob: -8.634453773498535
    6. 'b' → logprob: -8.884453773498535
    7. 'a' → logprob: -9.009453773498535
    8. ')' → logprob: -9.134453773498535
    9. '           ' → logprob: -9.759453773498535
    10. '       ' → logprob: -10.759453773498535

Token 616: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.16369733214378357
    2. 'çant' → logprob: -2.9136972427368164
    3. 'ement' → logprob: -3.0386972427368164
    4. 'g' → logprob: -3.5386972427368164
    5. 't' → logprob: -5.288697242736816
    6. '=' → logprob: -5.788697242736816
    7. 'ment' → logprob: -6.413697242736816
    8. '   ' → logprob: -6.663697242736816
    9. 'gant' → logprob: -6.788697242736816
    10. 'ément' → logprob: -7.163697242736816

Token 617: ' la' (ID: 557)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0015949610387906432
    2. '(g' → logprob: -7.3765950202941895
    3. ' gcd' → logprob: -7.3765950202941895
    4. 'l' → logprob: -8.001594543457031
    5. '   ' → logprob: -12.501594543457031
    6. 'the' → logprob: -14.376594543457031
    7. '           ' → logprob: -14.501594543457031
    8. '       ' → logprob: -14.751594543457031
    9. '	g' → logprob: -14.751594543457031
    10. 'gc' → logprob: -15.251594543457031

Token 618: ' fonction' (ID: 17610)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -8.180258191714529e-06
    2. ' gcd' → logprob: -11.750008583068848
    3. '(g' → logprob: -15.750008583068848
    4. '   ' → logprob: -16.87500762939453
    5. 'gcc' → logprob: -17.25000762939453
    6. 'l' → logprob: -17.75000762939453
    7. '
' → logprob: -17.87500762939453
    8. ')' → logprob: -18.12500762939453
    9. ' ' → logprob: -18.25000762939453
    10. '	g' → logprob: -18.25000762939453

Token 619: ' gcd' (ID: 106918)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -3.8889261304575484e-06
    2. ' gcd' → logprob: -12.500003814697266
    3. '(g' → logprob: -16.625003814697266
    4. '   ' → logprob: -18.750003814697266
    5. '_g' → logprob: -19.125003814697266
    6. ''g' → logprob: -19.250003814697266
    7. 'gcc' → logprob: -19.875003814697266
    8. ' ' → logprob: -20.000003814697266
    9. 'l' → logprob: -20.000003814697266
    10. '```' → logprob: -20.125003814697266

Token 620: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0034126094542443752
    2. ',' → logprob: -6.62841272354126
    3. '<|end|>' → logprob: -7.75341272354126
    4. '       ' → logprob: -8.128412246704102
    5. '               ' → logprob: -8.253412246704102
    6. '            
' → logprob: -8.878412246704102
    7. ')' → logprob: -9.003412246704102
    8. '(l' → logprob: -9.003412246704102
    9. '   ' → logprob: -9.378412246704102
    10. '(' → logprob: -9.378412246704102

Token 621: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0025106200482696295
    2. ',' → logprob: -7.3775105476379395
    3. '       ' → logprob: -7.3775105476379395
    4. '            
' → logprob: -8.127511024475098
    5. ' l' → logprob: -8.627511024475098
    6. '
' → logprob: -8.877511024475098
    7. '   ' → logprob: -9.127511024475098
    8. '<|end|>' → logprob: -9.252511024475098
    9. '               ' → logprob: -9.377511024475098
    10. 'l' → logprob: -9.877511024475098

Token 622: ' gcd' (ID: 106918)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5499311685562134
    2. 'g' → logprob: -0.9249311685562134
    3. '           ' → logprob: -4.049931049346924
    4. ' l' → logprob: -5.424931049346924
    5. 'pg' → logprob: -6.424931049346924
    6. 'tmp' → logprob: -7.424931049346924
    7. ' gcd' → logprob: -7.424931049346924
    8. ' g' → logprob: -7.799931049346924
    9. 'temp' → logprob: -8.174931526184082
    10. 'lc' → logprob: -8.799931526184082

Token 623: '_a' (ID: 10852)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(l' → logprob: -1.0087525844573975
    2. '_val' → logprob: -1.0087525844573975
    3. '_value' → logprob: -1.7587525844573975
    4. '(' → logprob: -2.5087525844573975
    5. '_l' → logprob: -4.633752822875977
    6. '_' → logprob: -6.383752822875977
    7. '=' → logprob: -6.758752822875977
    8. ' =' → logprob: -6.758752822875977
    9. '_result' → logprob: -7.133752822875977
    10. ',' → logprob: -7.883752822875977

Token 624: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.21737901866436005
    2. '(l' → logprob: -1.9673789739608765
    3. '_' → logprob: -4.592379093170166
    4. ')' → logprob: -4.592379093170166
    5. '=' → logprob: -4.967379093170166
    6. ' =' → logprob: -5.092379093170166
    7. '_l' → logprob: -5.217379093170166
    8. ',' → logprob: -5.342379093170166
    9. ' (' → logprob: -5.342379093170166
    10. '(a' → logprob: -5.467379093170166

Token 625: ' gcd' (ID: 106918)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -9.996708104154095e-05
    2. ' gcd' → logprob: -9.250100135803223
    3. 'l' → logprob: -13.250100135803223
    4. '   ' → logprob: -13.625100135803223
    5. '(g' → logprob: -15.125100135803223
    6. 'gc' → logprob: -16.125099182128906
    7. '	g' → logprob: -16.250099182128906
    8. 'gcc' → logprob: -16.375099182128906
    9. '       ' → logprob: -16.625099182128906
    10. 'gd' → logprob: -16.750099182128906

Token 626: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -1.1472419600977446e-06
    2. 'l' → logprob: -14.125000953674316
    3. '(' → logprob: -14.750000953674316
    4. '(
' → logprob: -17.250001907348633
    5. '	l' → logprob: -18.250001907348633
    6. ' (' → logprob: -18.875001907348633
    7. '```' → logprob: -19.000001907348633
    8. ' l' → logprob: -19.625001907348633
    9. '(L' → logprob: -20.250001907348633
    10. '(ls' → logprob: -20.375001907348633

Token 627: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.00017505438881926239
    2. 'c' → logprob: -9.750175476074219
    3. 'm' → logprob: -10.250175476074219
    4. 'cms' → logprob: -10.750175476074219
    5. ' cm' → logprob: -11.500175476074219
    6. '   ' → logprob: -11.750175476074219
    7. 'mc' → logprob: -12.125175476074219
    8. '(cm' → logprob: -12.125175476074219
    9. 'l' → logprob: -12.375175476074219
    10. '(' → logprob: -12.500175476074219

Token 628: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004436587623786181
    2. ' ,' → logprob: -8.000443458557129
    3. ',A' → logprob: -9.375443458557129
    4. 'A' → logprob: -11.375443458557129
    5. ',
' → logprob: -12.625443458557129
    6. '           ' → logprob: -13.250443458557129
    7. ',l' → logprob: -13.500443458557129
    8. ' A' → logprob: -14.125443458557129
    9. '   ' → logprob: -14.250443458557129
    10. 's' → logprob: -14.750443458557129

Token 629: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.25193095207214355
    2. ' A' → logprob: -1.5019309520721436
    3. ' ' → logprob: -14.501931190490723
    4. ')' → logprob: -14.751931190490723
    5. '	A' → logprob: -14.876931190490723
    6. '   ' → logprob: -15.001931190490723
    7. 'a' → logprob: -15.751931190490723
    8. '(A' → logprob: -16.751930236816406
    9. ' ' → logprob: -16.876930236816406
    10. '    ' → logprob: -17.501930236816406

Token 630: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -14.250000953674316
    3. '[
' → logprob: -15.750000953674316
    4. ')' → logprob: -18.5
    5. '[A' → logprob: -18.75
    6. '[I' → logprob: -18.75
    7. ')[' → logprob: -19.25
    8. '[a' → logprob: -19.875
    9. ' [' → logprob: -19.875
    10. '[j' → logprob: -20.375

Token 631: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04327138140797615
    2. ')
' → logprob: -3.16827130317688
    3. ')
' → logprob: -8.2932710647583
    4. ')`' → logprob: -11.6682710647583
    5. ')`
' → logprob: -12.0432710647583
    6. ')

' → logprob: -13.0432710647583
    7. ' )' → logprob: -13.5432710647583
    8. '   ' → logprob: -14.4182710647583
    9. '))' → logprob: -14.6682710647583
    10. ']' → logprob: -14.7932710647583

Token 632: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006636502221226692
    2. '       ' → logprob: -6.006636619567871
    3. '<|end|>' → logprob: -7.256636619567871
    4. '            ' → logprob: -7.381636619567871
    5. '            
' → logprob: -7.631636619567871
    6. ' ' → logprob: -7.881636619567871
    7. ' l' → logprob: -7.881636619567871
    8. '               ' → logprob: -8.006636619567871
    9. ' 
' → logprob: -8.131636619567871
    10. '   ' → logprob: -8.881636619567871

Token 633: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02567911334335804
    2. 'l' → logprob: -4.275679111480713
    3. ' l' → logprob: -4.525679111480713
    4. '            ' → logprob: -8.025679588317871
    5. '               ' → logprob: -9.025679588317871
    6. '       ' → logprob: -9.275679588317871
    7. '          ' → logprob: -10.775679588317871
    8. '            
' → logprob: -11.400679588317871
    9. '   ' → logprob: -11.900679588317871
    10. ' ' → logprob: -12.150679588317871

Token 634: ' Met' (ID: 7227)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.001556759118102491
    2. '           ' → logprob: -6.626556873321533
    3. '#' → logprob: -8.501556396484375
    4. ' l' → logprob: -10.626556396484375
    5. '       ' → logprob: -13.376556396484375
    6. '   ' → logprob: -14.376556396484375
    7. 'lc' → logprob: -14.626556396484375
    8. ' #' → logprob: -15.126556396484375
    9. '```' → logprob: -15.751556396484375
    10. '               ' → logprob: -16.251556396484375

Token 635: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.5073112845420837
    2. ' l' → logprob: -1.5073113441467285
    3. '           ' → logprob: -2.7573113441467285
    4. '   ' → logprob: -3.0073113441467285
    5. 'l' → logprob: -3.5073113441467285
    6. '_l' → logprob: -5.2573113441467285
    7. 'à' → logprob: -5.3823113441467285
    8. '    ' → logprob: -5.6323113441467285
    9. '       ' → logprob: -5.7573113441467285
    10. '               ' → logprob: -6.1323113441467285

Token 636: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.3218758702278137
    2. ' jour' → logprob: -1.321875810623169
    3. 'l' → logprob: -4.946876049041748
    4. 'Jour' → logprob: -7.571876049041748
    5. 'jours' → logprob: -7.696876049041748
    6. 'day' → logprob: -8.44687557220459
    7. ' jours' → logprob: -8.82187557220459
    8. '```' → logprob: -10.19687557220459
    9. 'j' → logprob: -10.69687557220459
    10. 'g' → logprob: -10.94687557220459

Token 637: ' le' (ID: 505)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.029949376359581947
    2. ' l' → logprob: -3.529949426651001
    3. '           ' → logprob: -8.529949188232422
    4. '            ' → logprob: -14.779949188232422
    5. '	l' → logprob: -15.154949188232422
    6. '               ' → logprob: -15.404949188232422
    7. '   ' → logprob: -15.404949188232422
    8. '_l' → logprob: -16.404949188232422
    9. '```' → logprob: -16.529949188232422
    10. '       ' → logprob: -17.154949188232422

Token 638: ' p' (ID: 275)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00024144348572008312
    2. ' l' → logprob: -8.37524127960205
    3. 'lc' → logprob: -12.00024127960205
    4. '```' → logprob: -12.87524127960205
    5. ' ' → logprob: -14.25024127960205
    6. '   ' → logprob: -14.37524127960205
    7. '	l' → logprob: -15.50024127960205
    8. '       ' → logprob: -16.000242233276367
    9. 'space' → logprob: -16.125242233276367
    10. '  ' → logprob: -16.250242233276367

Token 639: 'pcm' (ID: 159410)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0026766068767756224
    2. '_l' → logprob: -7.127676486968994
    3. 'ython' → logprob: -7.627676486968994
    4. 'lc' → logprob: -7.627676486968994
    5. 'lus' → logprob: -8.752676963806152
    6. 'cm' → logprob: -8.752676963806152
    7. 'rod' → logprob: -9.627676963806152
    8. 'ro' → logprob: -9.627676963806152
    9. 'LC' → logprob: -9.752676963806152
    10. 'r' → logprob: -10.002676963806152

Token 640: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02346419170498848
    2. '=' → logprob: -3.7734642028808594
    3. '           ' → logprob: -9.64846420288086
    4. 'l' → logprob: -9.77346420288086
    5. ' ' → logprob: -10.39846420288086
    6. ' l' → logprob: -10.77346420288086
    7. '            ' → logprob: -10.77346420288086
    8. '    ' → logprob: -12.14846420288086
    9. '=l' → logprob: -12.39846420288086
    10. '   ' → logprob: -12.64846420288086

Token 641: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.04529961198568344
    2. ' l' → logprob: -3.795299530029297
    3. ' =' → logprob: -4.170299530029297
    4. '=' → logprob: -5.295299530029297
    5. '           ' → logprob: -7.795299530029297
    6. '   ' → logprob: -7.920299530029297
    7. ')' → logprob: -8.545299530029297
    8. '       ' → logprob: -9.420299530029297
    9. '=l' → logprob: -9.545299530029297
    10. 'lc' → logprob: -10.420299530029297

Token 642: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.0002382249804213643
    2. 'l' → logprob: -8.375238418579102
    3. 'c' → logprob: -13.000238418579102
    4. '   ' → logprob: -13.250238418579102
    5. 'cms' → logprob: -13.375238418579102
    6. '```' → logprob: -15.000238418579102
    7. 'pcm' → logprob: -15.250238418579102
    8. 'm' → logprob: -15.250238418579102
    9. ' l' → logprob: -15.500238418579102
    10. ' cm' → logprob: -15.500238418579102

Token 643: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06005552038550377
    2. ' ' → logprob: -3.5600554943084717
    3. '=' → logprob: -3.6850554943084717
    4. ')' → logprob: -6.185055732727051
    5. ' *' → logprob: -6.560055732727051
    6. ' )' → logprob: -7.435055732727051
    7. ' *=' → logprob: -8.06005573272705
    8. '*' → logprob: -8.81005573272705
    9. '   ' → logprob: -10.06005573272705
    10. ' ' → logprob: -10.18505573272705

Token 644: ' lowest' (ID: 23120)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.10763924568891525
    2. ' l' → logprob: -2.6076393127441406
    3. '(l' → logprob: -3.8576393127441406
    4. ' (' → logprob: -4.982639312744141
    5. '   ' → logprob: -8.60763931274414
    6. '(' → logprob: -9.35763931274414
    7. ' ' → logprob: -10.23263931274414
    8. '	l' → logprob: -11.10763931274414
    9. '```' → logprob: -11.54513931274414
    10. '  ' → logprob: -11.92013931274414

Token 645: ' common' (ID: 5355)
  Prédit: '_common'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_common' → logprob: -0.013629775494337082
    2. '_' → logprob: -5.263629913330078
    3. ' _' → logprob: -5.763629913330078
    4. '_com' → logprob: -6.263629913330078
    5. ' common' → logprob: -7.513629913330078
    6. '_c' → logprob: -7.888629913330078
    7. '*' → logprob: -8.013629913330078
    8. ' *' → logprob: -8.263629913330078
    9. 'common' → logprob: -8.388629913330078
    10. ' ' → logprob: -8.513629913330078

Token 646: ' multiple' (ID: 7598)
  Prédit: 'multiple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multiple' → logprob: -0.12723077833652496
    2. ' multiple' → logprob: -2.1272308826446533
    3. '_multiple' → logprob: -8.502230644226074
    4. 'mult' → logprob: -9.877230644226074
    5. ' ' → logprob: -11.127230644226074
    6. ' múlt' → logprob: -11.627230644226074
    7. 'multip' → logprob: -12.002230644226074
    8. 'Multiple' → logprob: -12.252230644226074
    9. '  ' → logprob: -12.502230644226074
    10. 'm' → logprob: -12.502230644226074

Token 647: ')' (ID: 8)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.05600500851869583
    2. ')' → logprob: -3.6810050010681152
    3. ' ' → logprob: -4.181005001068115
    4. ' )' → logprob: -4.431005001068115
    5. '*' → logprob: -6.431005001068115
    6. '   ' → logprob: -9.181005477905273
    7. ',' → logprob: -9.681005477905273
    8. ' =' → logprob: -9.806005477905273
    9. ' //' → logprob: -9.806005477905273
    10. ' ,' → logprob: -10.431005477905273

Token 648: ' en' (ID: 469)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11570139974355698
    2. '=' → logprob: -2.24070143699646
    3. '           ' → logprob: -6.865701198577881
    4. ' *' → logprob: -7.365701198577881
    5. ' *=' → logprob: -7.740701198577881
    6. '*' → logprob: -8.115701675415039
    7. '   ' → logprob: -8.865701675415039
    8. ' ' → logprob: -9.240701675415039
    9. '       ' → logprob: -9.615701675415039
    10. ')' → logprob: -10.490701675415039

Token 649: ' utilisant' (ID: 92474)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.9831729531288147
    2. 'l' → logprob: -1.10817289352417
    3. ' (' → logprob: -1.60817289352417
    4. ' l' → logprob: -2.35817289352417
    5. '(' → logprob: -7.23317289352417
    6. '   ' → logprob: -9.608173370361328
    7. ' ' → logprob: -10.483173370361328
    8. '	l' → logprob: -11.983173370361328
    9. '    ' → logprob: -12.233173370361328
    10. '  ' → logprob: -12.358173370361328

Token 650: ' la' (ID: 557)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.2962668538093567
    2. 'l' → logprob: -1.671266794204712
    3. ' (' → logprob: -2.921266794204712
    4. '(l' → logprob: -4.921267032623291
    5. '(' → logprob: -5.421267032623291
    6. ''' → logprob: -7.046267032623291
    7. '   ' → logprob: -7.421267032623291
    8. '"' → logprob: -7.796267032623291
    9. ' '' → logprob: -8.296266555786133
    10. ' ' → logprob: -8.546266555786133

Token 651: ' propriété' (ID: 87730)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.37372028827667236
    2. ' *' → logprob: -2.123720169067383
    3. ' l' → logprob: -2.248720169067383
    4. ' (' → logprob: -3.248720169067383
    5. '*' → logprob: -3.748720169067383
    6. '(' → logprob: -5.123720169067383
    7. '(l' → logprob: -5.123720169067383
    8. '*l' → logprob: -5.248720169067383
    9. ' #' → logprob: -6.123720169067383
    10. ' //' → logprob: -6.123720169067383

Token 652: ' :' (ID: 712)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.3577236831188202
    2. 'l' → logprob: -1.2327237129211426
    3. '           ' → logprob: -5.732723712921143
    4. ' =' → logprob: -6.732723712921143
    5. ' *' → logprob: -6.982723712921143
    6. '   ' → logprob: -7.482723712921143
    7. ' (' → logprob: -7.607723712921143
    8. '    ' → logprob: -7.732723712921143
    9. '*' → logprob: -7.982723712921143
    10. '=' → logprob: -8.107723236083984

Token 653: ' 
' (ID: 793)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3175446689128876
    2. ' l' → logprob: -1.31754469871521
    3. '           ' → logprob: -6.192544460296631
    4. '(l' → logprob: -6.442544460296631
    5. ' (' → logprob: -8.067544937133789
    6. '   ' → logprob: -8.317544937133789
    7. '       ' → logprob: -10.817544937133789
    8. '(' → logprob: -11.567544937133789
    9. ' ' → logprob: -11.817544937133789
    10. '               ' → logprob: -11.942544937133789

Token 654: '           ' (ID: 352)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.3930252492427826
    2. 'l' → logprob: -1.143025279045105
    3. '           ' → logprob: -6.1430253982543945
    4. '   ' → logprob: -6.7680253982543945
    5. '_l' → logprob: -7.6430253982543945
    6. ' (' → logprob: -7.7680253982543945
    7. '    ' → logprob: -7.7680253982543945
    8. ' ' → logprob: -7.8930253982543945
    9. '       ' → logprob: -8.643025398254395
    10. ' _' → logprob: -8.893025398254395

Token 655: ' #' (ID: 1069)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.15691636502742767
    2. 'l' → logprob: -2.156916379928589
    3. '           ' → logprob: -3.531916379928589
    4. '               ' → logprob: -8.906916618347168
    5. '            ' → logprob: -9.781916618347168
    6. '                   ' → logprob: -10.281916618347168
    7. '       ' → logprob: -10.656916618347168
    8. '            
' → logprob: -11.406916618347168
    9. '   ' → logprob: -11.531916618347168
    10. '                       ' → logprob: -12.781916618347168

Token 656: ' p' (ID: 275)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.1614265739917755
    2. ' l' → logprob: -1.9114265441894531
    3. '           ' → logprob: -7.286426544189453
    4. ' (' → logprob: -8.161426544189453
    5. '(l' → logprob: -9.036426544189453
    6. '   ' → logprob: -10.161426544189453
    7. '       ' → logprob: -10.786426544189453
    8. '(' → logprob: -11.161426544189453
    9. '            ' → logprob: -11.786426544189453
    10. '               ' → logprob: -12.411426544189453

Token 657: 'pcm' (ID: 159410)
  Prédit: 'pcm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pcm' → logprob: -0.12594178318977356
    2. 'p' → logprob: -2.500941753387451
    3. 'l' → logprob: -4.250941753387451
    4. '   ' → logprob: -5.250941753387451
    5. 'pm' → logprob: -5.250941753387451
    6. 'pc' → logprob: -5.500941753387451
    7. ' =' → logprob: -6.250941753387451
    8. 'cm' → logprob: -6.375941753387451
    9. 'ppm' → logprob: -7.625941753387451
    10. 'lc' → logprob: -7.750941753387451

Token 658: '(a' (ID: 6271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00594610208645463
    2. '=' → logprob: -5.130946159362793
    3. ' *=' → logprob: -11.880946159362793
    4. ' *' → logprob: -12.255946159362793
    5. ' ' → logprob: -12.630946159362793
    6. '*' → logprob: -13.630946159362793
    7. '   ' → logprob: -14.880946159362793
    8. '	' → logprob: -15.380946159362793
    9. '*=' → logprob: -15.380946159362793
    10. ' ' → logprob: -16.005945205688477

Token 659: ',' (ID: 11)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5390616655349731
    2. '*' → logprob: -1.5390616655349731
    3. ' =' → logprob: -2.2890615463256836
    4. ')' → logprob: -3.1640615463256836
    5. '=' → logprob: -3.4140615463256836
    6. '*l' → logprob: -3.9140615463256836
    7. ',' → logprob: -6.039061546325684
    8. ' ' → logprob: -7.539061546325684
    9. '//' → logprob: -7.789061546325684
    10. ' *=' → logprob: -7.914061546325684

Token 660: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0006921819876879454
    2. 'l' → logprob: -8.125692367553711
    3. ' b' → logprob: -8.250692367553711
    4. 'A' → logprob: -9.000692367553711
    5. ')' → logprob: -12.375692367553711
    6. ' A' → logprob: -13.125692367553711
    7. ' l' → logprob: -13.750692367553711
    8. ' ' → logprob: -13.875692367553711
    9. '=' → logprob: -14.875692367553711
    10. 'B' → logprob: -14.875692367553711

Token 661: ')' (ID: 8)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7834506034851074
    2. ' *' → logprob: -1.0334506034851074
    3. ')' → logprob: -2.0334506034851074
    4. '*' → logprob: -3.5334506034851074
    5. '=' → logprob: -3.7834506034851074
    6. ' ' → logprob: -6.033450603485107
    7. ' )' → logprob: -7.033450603485107
    8. '*l' → logprob: -7.033450603485107
    9. '   ' → logprob: -8.783451080322266
    10. 's' → logprob: -9.908451080322266

Token 662: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011294789612293243
    2. ' *' → logprob: -4.636294841766357
    3. '=' → logprob: -6.761294841766357
    4. '*' → logprob: -8.7612943649292
    5. ')' → logprob: -9.2612943649292
    6. ' ' → logprob: -9.7612943649292
    7. ' *=' → logprob: -10.2612943649292
    8. '   ' → logprob: -11.5112943649292
    9. ',' → logprob: -11.8862943649292
    10. ' )' → logprob: -12.3862943649292

Token 663: ' (' (ID: 350)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3650486171245575
    2. '(l' → logprob: -1.7400486469268799
    3. ' (' → logprob: -2.74004864692688
    4. ' l' → logprob: -2.74004864692688
    5. '   ' → logprob: -7.240048408508301
    6. '(' → logprob: -9.1150484085083
    7. ' ' → logprob: -9.1150484085083
    8. '	l' → logprob: -10.1150484085083
    9. '(a' → logprob: -10.2400484085083
    10. '  ' → logprob: -10.2400484085083

Token 664: 'a' (ID: 64)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.006926477886736393
    2. '(l' → logprob: -5.256926536560059
    3. ' l' → logprob: -6.631926536560059
    4. '   ' → logprob: -8.881926536560059
    5. 'pp' → logprob: -9.756926536560059
    6. '(pp' → logprob: -9.756926536560059
    7. ' (' → logprob: -9.881926536560059
    8. 'lc' → logprob: -10.006926536560059
    9. '(' → logprob: -12.006926536560059
    10. 'lp' → logprob: -12.881926536560059

Token 665: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.020986171439290047
    2. '*' → logprob: -3.8959860801696777
    3. ' //' → logprob: -8.395986557006836
    4. '*l' → logprob: -8.895986557006836
    5. ' ' → logprob: -10.020986557006836
    6. '//' → logprob: -10.520986557006836
    7. '*b' → logprob: -12.270986557006836
    8. ' ' → logprob: -13.395986557006836
    9. '   ' → logprob: -14.020986557006836
    10. ')' → logprob: -14.145986557006836

Token 666: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.002514539286494255
    2. ' b' → logprob: -6.002514362335205
    3. '   ' → logprob: -11.127514839172363
    4. 'A' → logprob: -11.377514839172363
    5. ' ' → logprob: -12.502514839172363
    6. '    ' → logprob: -13.002514839172363
    7. '  ' → logprob: -13.127514839172363
    8. ' A' → logprob: -13.877514839172363
    9. '(b' → logprob: -14.377514839172363
    10. '//' → logprob: -14.502514839172363

Token 667: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007947172038257122
    2. ' )' → logprob: -5.132946968078613
    3. ')//' → logprob: -6.382946968078613
    4. ' //' → logprob: -8.132946968078613
    5. '//' → logprob: -10.382946968078613
    6. '   ' → logprob: -14.382946968078613
    7. ' ' → logprob: -14.507946968078613
    8. ' ' → logprob: -15.507946968078613
    9. ')
' → logprob: -16.63294792175293
    10. ']' → logprob: -16.75794792175293

Token 668: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.005719862412661314
    2. '//' → logprob: -5.2557196617126465
    3. ')' → logprob: -7.7557196617126465
    4. ' ' → logprob: -10.505720138549805
    5. ' )' → logprob: -11.380720138549805
    6. ' /' → logprob: -12.130720138549805
    7. ' ' → logprob: -12.130720138549805
    8. '   ' → logprob: -13.255720138549805
    9. ')//' → logprob: -13.630720138549805
    10. '```' → logprob: -14.130720138549805

Token 669: ' pg' (ID: 32259)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -2.4868770196917467e-05
    2. ' gcd' → logprob: -10.625024795532227
    3. '(g' → logprob: -16.000024795532227
    4. ' ' → logprob: -16.250024795532227
    5. '	g' → logprob: -16.500024795532227
    6. '   ' → logprob: -17.000024795532227
    7. '_g' → logprob: -17.375024795532227
    8. 'gcc' → logprob: -17.500024795532227
    9. ''g' → logprob: -18.000024795532227
    10. '  ' → logprob: -18.125024795532227

Token 670: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -2.629921436891891e-05
    2. 'c' → logprob: -11.12502670288086
    3. 'g' → logprob: -11.62502670288086
    4. 'cdn' → logprob: -14.12502670288086
    5. 'cm' → logprob: -14.75002670288086
    6. '_cd' → logprob: -14.75002670288086
    7. '```' → logprob: -15.00002670288086
    8. ' gcd' → logprob: -15.87502670288086
    9. 'cdf' → logprob: -16.00002670288086
    10. '	cd' → logprob: -16.12502670288086

Token 671: '(a' (ID: 6271)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.1676260530948639
    2. '           ' → logprob: -3.167626142501831
    3. '_l' → logprob: -3.292626142501831
    4. ' (' → logprob: -3.667626142501831
    5. 'l' → logprob: -4.042625904083252
    6. ' l' → logprob: -4.417625904083252
    7. ')' → logprob: -5.292625904083252
    8. '(' → logprob: -5.542625904083252
    9. ',' → logprob: -6.417625904083252
    10. ' ' → logprob: -6.667625904083252

Token 672: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04026765748858452
    2. ',' → logprob: -4.290267467498779
    3. '(a' → logprob: -4.915267467498779
    4. '(l' → logprob: -5.165267467498779
    5. 'g' → logprob: -6.165267467498779
    6. '(g' → logprob: -6.290267467498779
    7. '(' → logprob: -6.290267467498779
    8. 'a' → logprob: -6.665267467498779
    9. '),' → logprob: -6.665267467498779
    10. 'b' → logprob: -7.290267467498779

Token 673: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.007478733081370592
    2. 'g' → logprob: -5.007478713989258
    3. ' gcd' → logprob: -7.382478713989258
    4. ' b' → logprob: -9.132478713989258
    5. ')' → logprob: -11.382478713989258
    6. ' ' → logprob: -12.382478713989258
    7. ' g' → logprob: -12.632478713989258
    8. '   ' → logprob: -13.132478713989258
    9. '```' → logprob: -13.257478713989258
    10. 'gb' → logprob: -13.632478713989258

Token 674: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009626734536141157
    2. ' )' → logprob: -7.250962734222412
    3. ')
' → logprob: -8.875962257385254
    4. '           ' → logprob: -9.875962257385254
    5. '<|end|>' → logprob: -10.750962257385254
    6. '       ' → logprob: -12.000962257385254
    7. '   ' → logprob: -12.500962257385254
    8. '),' → logprob: -12.625962257385254
    9. '')' → logprob: -13.000962257385254
    10. ' )
' → logprob: -13.125962257385254

Token 675: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.2145665884017944
    2. ' l' → logprob: -1.3395665884017944
    3. 'l' → logprob: -1.9645665884017944
    4. ' 
' → logprob: -2.339566707611084
    5. '<|end|>' → logprob: -2.964566707611084
    6. '*' → logprob: -3.589566707611084
    7. ' ' → logprob: -3.839566707611084
    8. '       ' → logprob: -4.214566707611084
    9. '            
' → logprob: -4.714566707611084
    10. ' he' → logprob: -4.839566707611084

Token 676: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.003804949577897787
    2. ' l' → logprob: -5.753805160522461
    3. '           ' → logprob: -7.378805160522461
    4. '   ' → logprob: -13.503805160522461
    5. '       ' → logprob: -13.878805160522461
    6. '	l' → logprob: -16.00380516052246
    7. '               ' → logprob: -16.62880516052246
    8. 'lc' → logprob: -17.12880516052246
    9. '          ' → logprob: -17.25380516052246
    10. '            
' → logprob: -17.50380516052246

Token 677: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -3.869639476761222e-05
    2. 'c' → logprob: -10.250039100646973
    3. 'cms' → logprob: -13.125039100646973
    4. ' =' → logprob: -14.875039100646973
    5. '   ' → logprob: -15.375039100646973
    6. ' cm' → logprob: -15.625039100646973
    7. '=' → logprob: -15.625039100646973
    8. 'm' → logprob: -15.875039100646973
    9. 'cmb' → logprob: -16.125038146972656
    10. 'cmp' → logprob: -16.750038146972656

Token 678: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048633236438035965
    2. '=' → logprob: -3.048633337020874
    3. ' *=' → logprob: -10.048633575439453
    4. ' ' → logprob: -13.548633575439453
    5. '*=' → logprob: -13.673633575439453
    6. ' ' → logprob: -16.798633575439453
    7. '＝' → logprob: -16.798633575439453
    8. '	' → logprob: -17.048633575439453
    9. '   ' → logprob: -17.673633575439453
    10. '    ' → logprob: -18.173633575439453

Token 679: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5015217065811157
    2. '(l' → logprob: -1.0015217065811157
    3. ' (' → logprob: -4.251521587371826
    4. ' l' → logprob: -4.376521587371826
    5. '   ' → logprob: -8.876522064208984
    6. '(' → logprob: -10.001522064208984
    7. ' ' → logprob: -10.501522064208984
    8. '  ' → logprob: -11.001522064208984
    9. '	l' → logprob: -11.126522064208984
    10. '((' → logprob: -13.189022064208984

Token 680: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -6.392202976712724e-06
    2. '   ' → logprob: -12.875006675720215
    3. 'm' → logprob: -13.875006675720215
    4. '*' → logprob: -14.125006675720215
    5. 'cms' → logprob: -14.125006675720215
    6. ' *' → logprob: -14.625006675720215
    7. ' cm' → logprob: -14.750006675720215
    8. 'c' → logprob: -15.250006675720215
    9. 'CM' → logprob: -16.2500057220459
    10. 'cmb' → logprob: -16.8750057220459

Token 681: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0181526318192482
    2. '*' → logprob: -4.018152713775635
    3. ' ' → logprob: -13.518152236938477
    4. ' ' → logprob: -13.643152236938477
    5. '**' → logprob: -16.518152236938477
    6. '*l' → logprob: -17.518152236938477
    7. '*A' → logprob: -17.893152236938477
    8. ' **' → logprob: -17.893152236938477
    9. '```' → logprob: -18.018152236938477
    10. '  ' → logprob: -18.143152236938477

Token 682: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.10024776309728622
    2. ' A' → logprob: -2.350247859954834
    3. ' (' → logprob: -10.475247383117676
    4. '(A' → logprob: -11.475247383117676
    5. ' ' → logprob: -13.100247383117676
    6. '   ' → logprob: -15.225247383117676
    7. '  ' → logprob: -16.100248336791992
    8. '(' → logprob: -16.475248336791992
    9. '	A' → logprob: -17.350248336791992
    10. '    ' → logprob: -18.850248336791992

Token 683: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2664456789934775e-06
    2. '[' → logprob: -13.625000953674316
    3. '[
' → logprob: -16.875001907348633
    4. 'i' → logprob: -18.000001907348633
    5. '[I' → logprob: -19.375001907348633
    6. '```' → logprob: -19.625001907348633
    7. '[A' → logprob: -20.250001907348633
    8. ' [' → logprob: -20.250001907348633
    9. '[user' → logprob: -20.875001907348633
    10. '(i' → logprob: -21.500001907348633

Token 684: ']' (ID: 60)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.030062397941946983
    2. '//' → logprob: -3.530062437057495
    3. ')' → logprob: -8.155062675476074
    4. ']' → logprob: -11.655062675476074
    5. ' ' → logprob: -12.280062675476074
    6. '#' → logprob: -12.655062675476074
    7. ')//' → logprob: -13.030062675476074
    8. '   ' → logprob: -13.530062675476074
    9. ' )' → logprob: -13.905062675476074
    10. '}' → logprob: -13.905062675476074

Token 685: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.012518009170889854
    2. '//' → logprob: -4.387517929077148
    3. ' ' → logprob: -13.137517929077148
    4. '   ' → logprob: -13.262517929077148
    5. '           ' → logprob: -13.762517929077148
    6. ')' → logprob: -13.887517929077148
    7. ' ' → logprob: -13.887517929077148
    8. '#' → logprob: -15.137517929077148
    9. '       ' → logprob: -15.262517929077148
    10. '    ' → logprob: -15.262517929077148

Token 686: ' gcd' (ID: 106918)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -3.4121114822482923e-06
    2. ' gcd' → logprob: -12.625003814697266
    3. 'gcc' → logprob: -17.500003814697266
    4. '	g' → logprob: -18.750003814697266
    5. 'gc' → logprob: -18.875003814697266
    6. ' ' → logprob: -20.250003814697266
    7. '   ' → logprob: -20.375003814697266
    8. '(g' → logprob: -20.375003814697266
    9. '_g' → logprob: -20.500003814697266
    10. '[g' → logprob: -21.375003814697266

Token 687: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -2.141186450899113e-05
    2. 'a' → logprob: -10.875020980834961
    3. '_g' → logprob: -13.375020980834961
    4. 'g' → logprob: -15.125020980834961
    5. '(a' → logprob: -15.375020980834961
    6. '(g' → logprob: -15.500020980834961
    7. '(' → logprob: -15.875020980834961
    8. '(l' → logprob: -18.00002098083496
    9. '[g' → logprob: -19.00002098083496
    10. '_' → logprob: -19.25002098083496

Token 688: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 689: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 690: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10694984346628189
    2. '       ' → logprob: -2.356949806213379
    3. '
' → logprob: -6.106949806213379
    4. '   ' → logprob: -6.231949806213379
    5. ' print' → logprob: -6.731949806213379
    6. 'if' → logprob: -7.606949806213379
    7. '        
' → logprob: -8.231949806213379
    8. ' if' → logprob: -8.856949806213379
    9. 'l' → logprob: -9.731949806213379
    10. 'result' → logprob: -10.231949806213379

Token 691: ' Ap' (ID: 6537)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0016463837819173932
    2. '       ' → logprob: -7.376646518707275
    3. 'result' → logprob: -7.876646518707275
    4. 'if' → logprob: -8.251646041870117
    5. 'l' → logprob: -8.626646041870117
    6. '#' → logprob: -9.126646041870117
    7. 'while' → logprob: -10.751646041870117
    8. ' print' → logprob: -10.751646041870117
    9. 'for' → logprob: -11.126646041870117
    10. 'ans' → logprob: -12.626646041870117

Token 692: 'plique' (ID: 71193)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5074976086616516
    2. 'print' → logprob: -1.2574975490570068
    3. 'pend' → logprob: -3.132497549057007
    4. 'pr' → logprob: -3.632497549057007
    5. 'p' → logprob: -4.507497787475586
    6. 'ri' → logprob: -5.132497787475586
    7. 'pel' → logprob: -5.382497787475586
    8. 'pe' → logprob: -6.132497787475586
    9. 'ply' → logprob: -6.257497787475586
    10. 'pl' → logprob: -6.632497787475586

Token 693: ' le' (ID: 505)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.06151144951581955
    2. ' %' → logprob: -3.311511516571045
    3. ' %=' → logprob: -4.686511516571045
    4. ' ' → logprob: -4.936511516571045
    5. '%' → logprob: -5.686511516571045
    6. 'l' → logprob: -6.436511516571045
    7. ' modulo' → logprob: -7.561511516571045
    8. 'mod' → logprob: -7.811511516571045
    9. ' mod' → logprob: -8.186511039733887
    10. ' (' → logprob: -8.436511039733887

Token 694: ' modulo' (ID: 112372)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5458955764770508
    2. 'mod' → logprob: -1.0458955764770508
    3. ' l' → logprob: -3.045895576477051
    4. 'print' → logprob: -4.420895576477051
    5. '%' → logprob: -5.295895576477051
    6. '%=' → logprob: -5.795895576477051
    7. ' %=' → logprob: -7.045895576477051
    8. ' mod' → logprob: -7.920895576477051
    9. ' modulo' → logprob: -8.17089557647705
    10. ' print' → logprob: -9.42089557647705

Token 695: ' à' (ID: 1221)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.6283431649208069
    2. '=' → logprob: -1.128343105316162
    3. ' =' → logprob: -2.753343105316162
    4. 'l' → logprob: -2.878343105316162
    5. ' %=' → logprob: -4.503343105316162
    6. '%=' → logprob: -4.753343105316162
    7. '   ' → logprob: -6.628343105316162
    8. '       ' → logprob: -7.128343105316162
    9. '(l' → logprob: -7.878343105316162
    10. '=l' → logprob: -8.37834358215332

Token 696: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3868820369243622
    2. ' l' → logprob: -1.1368820667266846
    3. '(l' → logprob: -12.011881828308105
    4. 'print' → logprob: -13.511881828308105
    5. '   ' → logprob: -14.011881828308105
    6. 'lc' → logprob: -14.011881828308105
    7. ' (' → logprob: -14.511881828308105
    8. '	l' → logprob: -14.761881828308105
    9. ' =' → logprob: -15.886881828308105
    10. '(' → logprob: -16.136882781982422

Token 697: 'cm' (ID: 7871)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.2560783624649048
    2. ' l' → logprob: -1.5060783624649048
    3. 'lc' → logprob: -5.506078243255615
    4. 'lm' → logprob: -10.006078720092773
    5. 'ls' → logprob: -11.756078720092773
    6. '	l' → logprob: -12.006078720092773
    7. 'c' → logprob: -12.131078720092773
    8. '   ' → logprob: -12.506078720092773
    9. 'pp' → logprob: -12.631078720092773
    10. 'cm' → logprob: -13.506078720092773

Token 698: ' (' (ID: 350)
  Prédit: ' %='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.5655844807624817
    2. '%=' → logprob: -1.065584421157837
    3. '=' → logprob: -2.815584421157837
    4. ' =' → logprob: -4.190584659576416
    5. '%' → logprob: -4.440584659576416
    6. ' %' → logprob: -7.940584659576416
    7. ' l' → logprob: -8.440584182739258
    8. '   ' → logprob: -10.565584182739258
    9. '%
' → logprob: -10.815584182739258
    10. 'l' → logprob: -11.440584182739258

Token 699: 'pour' (ID: 52723)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.01612035185098648
    2. ' l' → logprob: -4.266120433807373
    3. '%=' → logprob: -6.766120433807373
    4. ' %=' → logprob: -7.391120433807373
    5. '=' → logprob: -9.141119956970215
    6. '%' → logprob: -10.266119956970215
    7. ' =' → logprob: -11.016119956970215
    8. '       ' → logprob: -11.016119956970215
    9. '=l' → logprob: -13.016119956970215
    10. '   ' → logprob: -13.391119956970215

Token 700: ' réduire' (ID: 78295)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.1279747039079666
    2. 'l' → logprob: -2.25297474861145
    3. ' éviter' → logprob: -4.502974510192871
    4. 'print' → logprob: -5.752974510192871
    5. 'r' → logprob: -8.877974510192871
    6. ' garantir' → logprob: -9.502974510192871
    7. ' garder' → logprob: -9.627974510192871
    8. ' le' → logprob: -9.627974510192871
    9. 'le' → logprob: -9.752974510192871
    10. ' evitar' → logprob: -10.127974510192871

Token 701: ' la' (ID: 557)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.02203051932156086
    2. 'l' → logprob: -3.8970305919647217
    3. ')' → logprob: -7.397030353546143
    4. ' )' → logprob: -7.897030353546143
    5. ' le' → logprob: -9.3970308303833
    6. ' mod' → logprob: -9.5220308303833
    7. ' %=' → logprob: -9.6470308303833
    8. ' ' → logprob: -10.0220308303833
    9. '%' → logprob: -10.0220308303833
    10. 'mod' → logprob: -10.3970308303833

Token 702: ' taille' (ID: 41644)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7248606085777283
    2. ' l' → logprob: -0.8498606085777283
    3. 'val' → logprob: -3.474860668182373
    4. ' valeur' → logprob: -3.474860668182373
    5. ' value' → logprob: -4.599860668182373
    6. 'value' → logprob: -5.099860668182373
    7. ' result' → logprob: -5.349860668182373
    8. ' val' → logprob: -5.974860668182373
    9. 'result' → logprob: -6.849860668182373
    10. ' taille' → logprob: -7.349860668182373

Token 703: ' des' (ID: 731)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2659409046173096
    2. ' l' → logprob: -1.5159409046173096
    3. 'l' → logprob: -1.6409409046173096
    4. ' %=' → logprob: -2.2659409046173096
    5. '%' → logprob: -2.8909409046173096
    6. '(l' → logprob: -3.1409409046173096
    7. '%=' → logprob: -3.3909409046173096
    8. ' =' → logprob: -3.3909409046173096
    9. '   ' → logprob: -4.7659406661987305
    10. '=l' → logprob: -5.0159406661987305

Token 704: ' nombres' (ID: 76205)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.14558860659599304
    2. ' l' → logprob: -2.0205886363983154
    3. 'result' → logprob: -7.145588397979736
    4. ' result' → logprob: -7.895588397979736
    5. ' résultats' → logprob: -8.020588874816895
    6. ' numbers' → logprob: -8.020588874816895
    7. 'rés' → logprob: -8.520588874816895
    8. ' valeurs' → logprob: -8.520588874816895
    9. ' nombres' → logprob: -8.645588874816895
    10. 'val' → logprob: -9.145588874816895

Token 705: ')
' (ID: 446)
  Prédit: ' %='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.608485996723175
    2. '%' → logprob: -1.1084859371185303
    3. '%=' → logprob: -2.4834859371185303
    4. ')' → logprob: -3.9834859371185303
    5. ' %' → logprob: -4.108486175537109
    6. '=' → logprob: -6.108486175537109
    7. ' =' → logprob: -6.108486175537109
    8. ')%' → logprob: -6.858486175537109
    9. '       ' → logprob: -7.358486175537109
    10. '%
' → logprob: -7.733486175537109

Token 706: '       ' (ID: 309)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.2201071977615356
    2. '       ' → logprob: -1.2201071977615356
    3. '=' → logprob: -1.7201071977615356
    4. 'l' → logprob: -1.8451071977615356
    5. ' =' → logprob: -3.220107078552246
    6. '%=' → logprob: -4.720107078552246
    7. ' %=' → logprob: -4.720107078552246
    8. '   ' → logprob: -5.220107078552246
    9. '	l' → logprob: -5.595107078552246
    10. '%' → logprob: -6.470107078552246

Token 707: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.03836195915937424
    2. ' l' → logprob: -3.2883620262145996
    3. '       ' → logprob: -8.163361549377441
    4. 'print' → logprob: -10.663361549377441
    5. '   ' → logprob: -11.663361549377441
    6. ' print' → logprob: -13.288361549377441
    7. '	l' → logprob: -13.663361549377441
    8. 'lc' → logprob: -14.913361549377441
    9. ' =' → logprob: -15.663361549377441
    10. '```' → logprob: -16.413362503051758

Token 708: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -1.2233183042553719e-05
    2. 'c' → logprob: -11.375012397766113
    3. 'm' → logprob: -14.500012397766113
    4. ' cm' → logprob: -16.625011444091797
    5. 'mc' → logprob: -16.875011444091797
    6. 'cms' → logprob: -17.875011444091797
    7. '```' → logprob: -18.250011444091797
    8. '   ' → logprob: -19.000011444091797
    9. ' =' → logprob: -19.000011444091797
    10. '=' → logprob: -19.125011444091797

Token 709: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.7033499479293823
    2. ' %=' → logprob: -0.7033499479293823
    3. '=' → logprob: -4.703350067138672
    4. ' =' → logprob: -6.953350067138672
    5. '%' → logprob: -8.953350067138672
    6. ' ' → logprob: -14.703350067138672
    7. '	' → logprob: -14.703350067138672
    8. ' %' → logprob: -15.203350067138672
    9. '   ' → logprob: -16.453350067138672
    10. '```' → logprob: -17.078350067138672

Token 710: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: 0.0
    2. ' mod' → logprob: -20.0
    3. '(mod' → logprob: -22.875
    4. '100' → logprob: -23.125
    5. 'MOD' → logprob: -24.75
    6. '	mod' → logprob: -25.125
    7. 'moder' → logprob: -26.125
    8. 'mo' → logprob: -26.5
    9. ' мод' → logprob: -27.0
    10. '_mod' → logprob: -27.125

Token 711: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.059576865285634995
    2. 'print' → logprob: -3.0595767498016357
    3. '   ' → logprob: -4.559576988220215
    4. '<|end|>' → logprob: -8.059576988220215
    5. '
' → logprob: -9.434576988220215
    6. ' print' → logprob: -10.184576988220215
    7. '#' → logprob: -12.059576988220215
    8. '        
' → logprob: -12.184576988220215
    9. '```' → logprob: -12.309576988220215
    10. '    
' → logprob: -12.434576988220215

Token 712: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31826186180114746
    2. 'print' → logprob: -1.3182618618011475
    3. '       ' → logprob: -5.318262100219727
    4. '	print' → logprob: -10.568262100219727
    5. ' print' → logprob: -10.693262100219727
    6. '<|end|>' → logprob: -11.318262100219727
    7. '
' → logprob: -11.443262100219727
    8. '    
' → logprob: -11.693262100219727
    9. '```' → logprob: -12.568262100219727
    10. '	' → logprob: -14.318262100219727

Token 713: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1472419600977446e-06
    2. '       ' → logprob: -14.250000953674316
    3. ' print' → logprob: -15.500000953674316
    4. '   ' → logprob: -15.625000953674316
    5. '```' → logprob: -19.375001907348633
    6. '	print' → logprob: -20.000001907348633
    7. '#print' → logprob: -20.500001907348633
    8. '#' (adapté à ' #') → logprob: -22.875001907348633
    9. '.print' → logprob: -23.375001907348633
    10. '``' → logprob: -24.000001907348633

Token 714: ' Initialise' (ID: 179601)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. '       ' → logprob: -17.125
    3. ' print' → logprob: -17.125
    4. '   ' → logprob: -17.5
    5. '#' → logprob: -18.0
    6. 'for' → logprob: -18.375
    7. '#print' → logprob: -20.25
    8. 'count' → logprob: -20.625
    9. 'result' → logprob: -20.875
    10. '
' → logprob: -20.875

Token 715: ' la' (ID: 557)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.8140118718147278
    2. 'result' → logprob: -0.8140118718147278
    3. 'count' → logprob: -2.439011812210083
    4. 'ans' → logprob: -4.189012050628662
    5. 'answer' → logprob: -5.439012050628662
    6. 'total' → logprob: -6.314012050628662
    7. 'dp' → logprob: -6.939012050628662
    8. ' res' → logprob: -6.939012050628662
    9. 'print' → logprob: -7.314012050628662
    10. ' result' → logprob: -7.439012050628662

Token 716: ' variable' (ID: 11076)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.38948044180870056
    2. 'res' → logprob: -1.264480471611023
    3. 'count' → logprob: -4.0144805908203125
    4. 'ans' → logprob: -4.2644805908203125
    5. 'answer' → logprob: -5.2644805908203125
    6. 'total' → logprob: -6.5144805908203125
    7. 's' → logprob: -7.6394805908203125
    8. 'prod' → logprob: -8.389480590820312
    9. 'rés' → logprob: -8.889480590820312
    10. 'product' → logprob: -9.264480590820312

Token 717: ' sum' (ID: 4215)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5152877569198608
    2. 'res' → logprob: -1.5152877569198608
    3. 'count' → logprob: -2.3902878761291504
    4. 'ans' → logprob: -3.1402878761291504
    5. 'answer' → logprob: -3.5152878761291504
    6. ' result' → logprob: -4.76528787612915
    7. 'total' → logprob: -6.26528787612915
    8. ' res' → logprob: -6.39028787612915
    9. ' ans' → logprob: -6.64028787612915
    10. ' answer' → logprob: -6.76528787612915

Token 718: 'B' (ID: 33)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.18687690794467926
    2. 'ma' → logprob: -1.936876893043518
    3. ' =' → logprob: -4.1868767738342285
    4. '_val' → logprob: -5.5618767738342285
    5. '_sum' → logprob: -5.8118767738342285
    6. '_=' → logprob: -6.5618767738342285
    7. 'me' → logprob: -7.1868767738342285
    8. '=' → logprob: -8.061877250671387
    9. '_of' → logprob: -8.186877250671387
    10. '_result' → logprob: -8.436877250671387

Token 719: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002485765377059579
    2. '=' → logprob: -6.002485752105713
    3. '   ' → logprob: -12.377486228942871
    4. '       ' → logprob: -13.002486228942871
    5. ' ' → logprob: -13.502486228942871
    6. ',' → logprob: -14.627486228942871
    7. '    ' → logprob: -15.127486228942871
    8. '=sum' → logprob: -15.377486228942871
    9. 'sum' → logprob: -15.752486228942871
    10. '	' → logprob: -15.752486228942871

Token 720: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003831252979580313
    2. ' ' → logprob: -8.000383377075195
    3. '1' → logprob: -10.125383377075195
    4. 'sum' → logprob: -12.500383377075195
    5. 'l' → logprob: -13.125383377075195
    6. '(' → logprob: -14.000383377075195
    7. ' (' → logprob: -15.125383377075195
    8. ' sum' → logprob: -15.750383377075195
    9. '(sum' → logprob: -16.000383377075195
    10. ' l' → logprob: -16.250383377075195

Token 721: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5776860184123507e-06
    2. '1' → logprob: -13.37500286102295
    3. ' ' → logprob: -14.00000286102295
    4. 'sum' → logprob: -15.62500286102295
    5. '(' → logprob: -17.250001907348633
    6. 'l' → logprob: -18.875001907348633
    7. '۰' → logprob: -19.250001907348633
    8. 'pow' → logprob: -19.375001907348633
    9. '   ' → logprob: -19.937501907348633
    10. '(sum' → logprob: -19.937501907348633

Token 722: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.038390640169382095
    2. '
' → logprob: -3.413390636444092
    3. '        
' → logprob: -6.288390636444092
    4. 'sum' → logprob: -6.788390636444092
    5. '   ' → logprob: -7.413390636444092
    6. ' 
' → logprob: -7.913390636444092
    7. '\n' → logprob: -8.28839111328125
    8. '    
' → logprob: -8.91339111328125
    9. ' sum' → logprob: -9.41339111328125
    10. '  
' → logprob: -9.78839111328125

Token 723: 'c' (ID: 66)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006162108853459358
    2. 'sum' → logprob: -5.256162166595459
    3. ' sum' → logprob: -7.381162166595459
    4. '       ' → logprob: -9.1311616897583
    5. ' ' → logprob: -9.5061616897583
    6. '   ' → logprob: -9.8811616897583
    7. ')' → logprob: -10.2561616897583
    8. '
' → logprob: -11.1311616897583
    9. ')
' → logprob: -12.0061616897583
    10. '    ' → logprob: -12.8811616897583

Token 724: 'ette' (ID: 3769)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9905756115913391
    2. 'umul' → logprob: -1.8655755519866943
    3. 'sum' → logprob: -1.9905755519866943
    4. ' =' → logprob: -2.6155755519866943
    5. 'umsum' → logprob: -2.7405755519866943
    6. '=' → logprob: -3.2405755519866943
    7. 'um' → logprob: -3.4905755519866943
    8. '  ' → logprob: -3.9905755519866943
    9. ' ' → logprob: -4.240575790405273
    10. 'omme' → logprob: -4.490575790405273

Token 725: ' variable' (ID: 11076)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0707592964172363
    2. ' +=' → logprob: -1.1957592964172363
    3. '=' → logprob: -1.6957592964172363
    4. ' ' → logprob: -3.1957592964172363
    5. ' sum' → logprob: -3.5707592964172363
    6. ' space' → logprob: -3.5707592964172363
    7. '+=' → logprob: -4.195759296417236
    8. '<|end|>' → logprob: -4.195759296417236
    9. '
' → logprob: -4.445759296417236
    10. 'space' → logprob: -4.945759296417236

Token 726: ' gard' (ID: 18283)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03321913257241249
    2. ' =' → logprob: -3.7832190990448
    3. '+=' → logprob: -4.783219337463379
    4. ' +=' → logprob: -6.533219337463379
    5. '
' → logprob: -9.783219337463379
    6. '=
' → logprob: -11.158219337463379
    7. ')' → logprob: -11.533219337463379
    8. '=sum' → logprob: -11.908219337463379
    9. ' ' → logprob: -12.783219337463379
    10. ' 
' → logprob: -13.158219337463379

Token 727: 'era' (ID: 2060)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0551241897046566
    2. 'era' → logprob: -3.055124282836914
    3. 'er' → logprob: -5.805124282836914
    4. 'ée' → logprob: -5.930124282836914
    5. 'é' → logprob: -8.930124282836914
    6. 'iene' → logprob: -9.055124282836914
    7. 'erie' → logprob: -9.430124282836914
    8. '=' → logprob: -9.680124282836914
    9. 'ee' → logprob: -9.680124282836914
    10. 'u' → logprob: -10.180124282836914

Token 728: ' le' (ID: 505)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015286672860383987
    2. ' ' → logprob: -6.501528739929199
    3. 'sum' → logprob: -11.5015287399292
    4. '   ' → logprob: -11.6265287399292
    5. ' sum' → logprob: -12.5015287399292
    6. '=' → logprob: -14.2515287399292
    7. '1' → logprob: -14.3765287399292
    8. ')' → logprob: -14.6265287399292
    9. ' la' → logprob: -14.8765287399292
    10. '    ' → logprob: -15.2515287399292

Token 729: ' total' (ID: 3609)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.39180687069892883
    2. 's' → logprob: -1.5168068408966064
    3. 'sum' → logprob: -3.0168068408966064
    4. 'total' → logprob: -3.6418068408966064
    5. 'result' → logprob: -4.2668070793151855
    6. 'som' → logprob: -4.3918070793151855
    7. 'val' → logprob: -6.7668070793151855
    8. ' total' → logprob: -7.1418070793151855
    9. 'value' → logprob: -8.016806602478027
    10. ' sum' → logprob: -8.891806602478027

Token 730: ' recher' (ID: 19259)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.13564945757389069
    2. ' de' → logprob: -2.8856494426727295
    3. ' =' → logprob: -4.010649681091309
    4. '   ' → logprob: -4.260649681091309
    5. 'sum' → logprob: -4.510649681091309
    6. ')' → logprob: -4.635649681091309
    7. '=' → logprob: -5.510649681091309
    8. 'des' → logprob: -5.760649681091309
    9. 'de' → logprob: -6.010649681091309
    10. ' sum' → logprob: -6.260649681091309

Token 731: 'ché' (ID: 27299)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.15257515013217926
    2. 'é' → logprob: -2.1525752544403076
    3. 'e' → logprob: -4.5275750160217285
    4. 'er' → logprob: -4.9025750160217285
    5. '=' → logprob: -5.9025750160217285
    6. '   ' → logprob: -7.2775750160217285
    7. 'u' → logprob: -7.6525750160217285
    8. 'erie' → logprob: -7.9025750160217285
    9. ' ' → logprob: -8.027575492858887
    10. 'ation' → logprob: -8.277575492858887

Token 732: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6187942624092102
    2. '
' → logprob: -1.3687942028045654
    3. ')' → logprob: -1.9937942028045654
    4. '<|end|>' → logprob: -3.4937942028045654
    5. '   ' → logprob: -3.9937942028045654
    6. ')
' → logprob: -4.6187944412231445
    7. '        
' → logprob: -5.3687944412231445
    8. '    
' → logprob: -5.8687944412231445
    9. '  
' → logprob: -6.3687944412231445
    10. ',' → logprob: -6.9937944412231445

Token 733: '       ' (ID: 309)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.30046555399894714
    2. ' sum' → logprob: -1.5504655838012695
    3. '
' → logprob: -3.4254655838012695
    4. '   ' → logprob: -4.4254655838012695
    5. '       ' → logprob: -5.9254655838012695
    6. '	sum' → logprob: -9.05046558380127
    7. '```' → logprob: -10.42546558380127
    8. '    
' → logprob: -11.17546558380127
    9. '_sum' → logprob: -11.80046558380127
    10. '        
' → logprob: -11.92546558380127

Token 734: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' (adapté à ' sum') → logprob: -0.001502717612311244
    2. ' sum' → logprob: -6.501502513885498
    3. '   ' → logprob: -15.626502990722656
    4. '
' → logprob: -16.876502990722656
    5. 's' → logprob: -17.126502990722656
    6. '	sum' → logprob: -17.251502990722656
    7. '0' → logprob: -17.376502990722656
    8. '_sum' → logprob: -17.501502990722656
    9. '```' → logprob: -18.001502990722656
    10. 'Sum' → logprob: -18.251502990722656

Token 735: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -3.7697225252486533e-06
    2. '_B' → logprob: -12.750003814697266
    3. '=' → logprob: -14.625003814697266
    4. '=B' → logprob: -15.750003814697266
    5. ' B' → logprob: -16.125003814697266
    6. ' =' → logprob: -16.750003814697266
    7. '	B' → logprob: -17.000003814697266
    8. '_' → logprob: -17.250003814697266
    9. 'Β' → logprob: -18.000003814697266
    10. 'Б' → logprob: -18.125003814697266

Token 736: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061970602720975876
    2. '=' → logprob: -2.8119707107543945
    3. ' ' → logprob: -12.936970710754395
    4. ',' → logprob: -15.436970710754395
    5. ')' → logprob: -16.561969757080078
    6. '  ' → logprob: -16.686969757080078
    7. ' ' → logprob: -17.186969757080078
    8. '   ' → logprob: -17.811969757080078
    9. ' ,' → logprob: -18.186969757080078
    10. ' +=' → logprob: -18.186969757080078

Token 737: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00033665422233752906
    2. ' ' → logprob: -8.000336647033691
    3. '   ' → logprob: -14.625336647033691
    4. '(' → logprob: -15.500336647033691
    5. '1' → logprob: -16.187837600708008
    6. 'sum' → logprob: -16.375337600708008
    7. '۰' → logprob: -17.437837600708008
    8. 'pow' → logprob: -17.687837600708008
    9. '  ' → logprob: -17.875337600708008
    10. '```' → logprob: -17.937837600708008

Token 738: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.625001907348633
    3. '1' → logprob: -15.625001907348633
    4. '(' → logprob: -16.000001907348633
    5. 'sum' → logprob: -16.375001907348633
    6. 'pow' → logprob: -17.812501907348633
    7. '۰' → logprob: -18.187501907348633
    8. 'int' → logprob: -18.875001907348633
    9. '０' → logprob: -19.437501907348633
    10. '```' → logprob: -19.625001907348633

Token 739: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3046171963214874
    2. '
' → logprob: -1.429617166519165
    3. '   ' → logprob: -4.929617404937744
    4. '<|end|>' → logprob: -4.929617404937744
    5. '        
' → logprob: -6.179617404937744
    6. '  
' → logprob: -6.304617404937744
    7. '	' → logprob: -6.804617404937744
    8. '    
' → logprob: -6.804617404937744
    9. ' for' → logprob: -7.679617404937744
    10. '\n' → logprob: -8.179616928100586

Token 740: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8098533749580383
    2. '       ' → logprob: -1.4348533153533936
    3. ' for' → logprob: -1.8098533153533936
    4. 'for' → logprob: -2.6848533153533936
    5. '
' → logprob: -2.9348533153533936
    6. '<|end|>' → logprob: -4.309853553771973
    7. '	for' → logprob: -4.934853553771973
    8. '    
' → logprob: -5.184853553771973
    9. '        
' → logprob: -6.434853553771973
    10. '  
' → logprob: -6.434853553771973

Token 741: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47805002331733704
    2. '       ' → logprob: -0.9780499935150146
    3. ' for' → logprob: -5.853050231933594
    4. '   ' → logprob: -6.853050231933594
    5. '	for' → logprob: -10.728050231933594
    6. '#' (adapté à ' #') → logprob: -11.978050231933594
    7. '```' → logprob: -13.103050231933594
    8. '	' → logprob: -13.478050231933594
    9. '      ' → logprob: -13.978050231933594
    10. '
' → logprob: -14.228050231933594

Token 742: ' Parc' (ID: 68618)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.264322317088954e-05
    2. '#' → logprob: -10.000052452087402
    3. '       ' → logprob: -12.000052452087402
    4. ' for' → logprob: -14.375052452087402
    5. '   ' → logprob: -14.875052452087402
    6. 'pour' → logprob: -16.37505340576172
    7. '
' → logprob: -16.87505340576172
    8. '	for' → logprob: -18.25005340576172
    9. '```' → logprob: -19.87505340576172
    10. 'For' → logprob: -20.37505340576172

Token 743: 'ourt' (ID: 38600)
  Prédit: 'ourt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ourt' → logprob: -0.0022875219583511353
    2. 'ours' → logprob: -6.2522873878479
    3. 'our' → logprob: -8.002287864685059
    4. 'ourse' → logprob: -11.002287864685059
    5. 'oure' → logprob: -13.002287864685059
    6. 'ort' → logprob: -13.377287864685059
    7. 'for' → logprob: -13.502287864685059
    8. 't' → logprob: -14.502287864685059
    9. 'out' → logprob: -14.752287864685059
    10. 'court' → logprob: -15.502287864685059

Token 744: ' avec' (ID: 3937)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.9093818068504333
    2. 'A' → logprob: -1.4093818664550781
    3. ' range' → logprob: -1.4093818664550781
    4. '(A' → logprob: -2.284381866455078
    5. ' A' → logprob: -5.534381866455078
    6. '(range' → logprob: -6.034381866455078
    7. '(' → logprob: -8.909381866455078
    8. 'for' → logprob: -9.159381866455078
    9. 'i' → logprob: -10.034381866455078
    10. '   ' → logprob: -10.284381866455078

Token 745: ' la' (ID: 557)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.39963096380233765
    2. 'i' → logprob: -1.6496310234069824
    3. 'a' → logprob: -2.2746310234069824
    4. 'A' → logprob: -3.8996310234069824
    5. ' range' → logprob: -4.524631023406982
    6. 'for' → logprob: -7.149631023406982
    7. ' i' → logprob: -7.149631023406982
    8. 'value' → logprob: -7.524631023406982
    9. 'val' → logprob: -7.774631023406982
    10. 'x' → logprob: -8.524630546569824

Token 746: ' fonction' (ID: 17610)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5751909613609314
    2. 'for' → logprob: -1.0751910209655762
    3. ' range' → logprob: -2.825191020965576
    4. 'i' → logprob: -3.825191020965576
    5. ' for' → logprob: -4.700191020965576
    6. 'A' → logprob: -6.075191020965576
    7. 'in' → logprob: -6.200191020965576
    8. ' in' → logprob: -6.950191020965576
    9. ' i' → logprob: -8.075190544128418
    10. ' A' → logprob: -9.200190544128418

Token 747: ' enumerate' (ID: 29671)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.41174647212028503
    2. 'range' → logprob: -1.6617465019226074
    3. 'A' → logprob: -2.0367465019226074
    4. 'a' → logprob: -4.911746501922607
    5. ' for' → logprob: -5.536746501922607
    6. 'i' → logprob: -5.786746501922607
    7. ' range' → logprob: -6.036746501922607
    8. ' A' → logprob: -9.03674602508545
    9. '   ' → logprob: -9.41174602508545
    10. 'l' → logprob: -9.78674602508545

Token 748: ' la' (ID: 557)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0015669959830120206
    2. '(en' → logprob: -7.3765668869018555
    3. ',' → logprob: -7.8765668869018555
    4. '(' → logprob: -8.251566886901855
    5. '(range' → logprob: -9.876566886901855
    6. 'A' → logprob: -10.251566886901855
    7. '   ' → logprob: -10.501566886901855
    8. '(l' → logprob: -10.876566886901855
    9. 'enumer' → logprob: -10.876566886901855
    10. ' (' → logprob: -11.001566886901855

Token 749: ' liste' (ID: 31719)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.25465527176856995
    2. 'range' → logprob: -2.254655361175537
    3. ' range' → logprob: -3.254655361175537
    4. 'for' → logprob: -3.504655361175537
    5. ' A' → logprob: -3.879655361175537
    6. ' for' → logprob: -4.004655361175537
    7. 'enumer' → logprob: -4.754655361175537
    8. '(A' → logprob: -7.004655361175537
    9. '(range' → logprob: -7.379655361175537
    10. ' enumerate' → logprob: -7.504655361175537

Token 750: ' A' (ID: 355)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.006951930467039347
    2. 'A' → logprob: -5.006951808929443
    3. ',' → logprob: -9.881952285766602
    4. '(' → logprob: -10.006952285766602
    5. 'enumer' → logprob: -10.006952285766602
    6. ' A' → logprob: -10.381952285766602
    7. '(en' → logprob: -10.506952285766602
    8. '(
' → logprob: -12.006952285766602
    9. '(range' → logprob: -12.256952285766602
    10. '(B' → logprob: -12.256952285766602

Token 751: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2522190809249878
    2. ':' → logprob: -1.8772190809249878
    3. 'for' → logprob: -3.6272192001342773
    4. '       ' → logprob: -4.252219200134277
    5. ' for' → logprob: -4.627219200134277
    6. '   ' → logprob: -5.002219200134277
    7. '(' → logprob: -5.502219200134277
    8. ':
' → logprob: -5.627219200134277
    9. ' ,' → logprob: -6.877219200134277
    10. '(A' → logprob: -7.377219200134277

Token 752: 'r' (ID: 81)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05308916047215462
    2. ' for' → logprob: -3.053089141845703
    3. ',' → logprob: -5.553089141845703
    4. ')' → logprob: -8.178089141845703
    5. '),' → logprob: -9.053089141845703
    6. '
' → logprob: -9.928089141845703
    7. 'i' → logprob: -10.553089141845703
    8. ' ,' → logprob: -10.678089141845703
    9. '0' → logprob: -11.178089141845703
    10. '):
' → logprob: -11.178089141845703

Token 753: 'éc' (ID: 5675)
  Prédit: 'ange'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ange' → logprob: -0.0024055044632405043
    2. 'for' → logprob: -6.377405643463135
    3. ' for' → logprob: -8.627405166625977
    4. '   ' → logprob: -9.502405166625977
    5. 'range' → logprob: -9.502405166625977
    6. ',' → logprob: -9.627405166625977
    7. 'ang' → logprob: -10.002405166625977
    8. '       ' → logprob: -10.127405166625977
    9. 'anged' → logprob: -10.252405166625977
    10. ')' → logprob: -10.252405166625977

Token 754: 'up' (ID: 817)
  Prédit: 'ange'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ange' → logprob: -0.7646123766899109
    2. 'for' → logprob: -0.8896123766899109
    3. ' for' → logprob: -3.0146124362945557
    4. '   ' → logprob: -3.6396124362945557
    5. 'enumer' → logprob: -4.389612197875977
    6. '       ' → logprob: -5.014612197875977
    7. 'up' → logprob: -5.139612197875977
    8. 'ur' → logprob: -5.264612197875977
    9. 'anged' → logprob: -6.014612197875977
    10. 'ang' → logprob: -6.389612197875977

Token 755: 'ère' (ID: 4346)
  Prédit: 'érant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érant' → logprob: -0.09136130660772324
    2. 'ère' → logprob: -3.3413612842559814
    3. '   ' → logprob: -4.4663615226745605
    4. '       ' → logprob: -4.4663615226745605
    5. 'er' → logprob: -4.5913615226745605
    6. '(' → logprob: -5.8413615226745605
    7. ',' → logprob: -5.9663615226745605
    8. 'èr' → logprob: -6.2163615226745605
    9. 'èrent' → logprob: -6.3413615226745605
    10. '[' → logprob: -6.8413615226745605

Token 756: ' à' (ID: 1221)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.699529230594635
    2. ' ,' → logprob: -1.5745291709899902
    3. ' index' → logprob: -2.1995291709899902
    4. 'i' → logprob: -2.9495291709899902
    5. 'index' → logprob: -3.1995291709899902
    6. ' _,' → logprob: -3.3245291709899902
    7. ',' → logprob: -3.5745291709899902
    8. ' idx' → logprob: -4.57452917098999
    9. '_,' → logprob: -4.69952917098999
    10. 'idx' → logprob: -5.69952917098999

Token 757: ' la' (ID: 557)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.19225218892097473
    2. ' i' → logprob: -2.9422521591186523
    3. 'index' → logprob: -3.0672521591186523
    4. '_,' → logprob: -3.3172521591186523
    5. '0' → logprob: -4.442252159118652
    6. ',' → logprob: -4.942252159118652
    7. 'idx' → logprob: -5.817252159118652
    8. ' ' → logprob: -5.942252159118652
    9. ' index' → logprob: -6.067252159118652
    10. ' _,' → logprob: -6.192252159118652

Token 758: ' fois' (ID: 14697)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07245450466871262
    2. ' i' → logprob: -3.3224544525146484
    3. ' ' → logprob: -4.197454452514648
    4. 'for' → logprob: -4.572454452514648
    5. '   ' → logprob: -6.197454452514648
    6. '  ' → logprob: -6.697454452514648
    7. 'range' → logprob: -6.947454452514648
    8. '0' → logprob: -7.072454452514648
    9. '```' → logprob: -7.447454452514648
    10. '_' → logprob: -7.947454452514648

Token 759: ' l' (ID: 305)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.6797580122947693
    2. ' index' → logprob: -2.054758071899414
    3. '_,' → logprob: -2.179758071899414
    4. 'i' → logprob: -2.429758071899414
    5. ' i' → logprob: -2.429758071899414
    6. ' _,' → logprob: -3.679758071899414
    7. 'idx' → logprob: -4.429758071899414
    8. ' idx' → logprob: -4.554758071899414
    9. '_' → logprob: -5.054758071899414
    10. 'indice' → logprob: -5.179758071899414

Token 760: ''ind' (ID: 82245)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02637798711657524
    2. ' i' → logprob: -3.9013779163360596
    3. 'index' → logprob: -5.901378154754639
    4. ' index' → logprob: -7.776378154754639
    5. 'x' → logprob: -7.901378154754639
    6. 'a' → logprob: -7.901378154754639
    7. 'e' → logprob: -7.901378154754639
    8. '   ' → logprob: -8.15137767791748
    9. ',' → logprob: -8.77637767791748
    10. 'indice' → logprob: -8.77637767791748

Token 761: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.07094422727823257
    2. 'ice' → logprob: -2.695944309234619
    3. 'e' → logprob: -7.070944309234619
    4. '#' → logprob: -9.695943832397461
    5. '   ' → logprob: -10.070943832397461
    6. '```' → logprob: -11.445943832397461
    7. 'exe' → logprob: -11.945943832397461
    8. '
' → logprob: -12.195943832397461
    9. 'é' → logprob: -12.320943832397461
    10. ',' → logprob: -12.445943832397461

Token 762: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013663081917911768
    2. ' ,' → logprob: -6.626366138458252
    3. ' and' → logprob: -11.62636661529541
    4. ' et' → logprob: -12.25136661529541
    5. 's' → logprob: -12.62636661529541
    6. 'and' → logprob: -12.75136661529541
    7. ',
' → logprob: -12.87636661529541
    8. '(' → logprob: -12.87636661529541
    9. '0' → logprob: -13.12636661529541
    10. 'et' → logprob: -13.12636661529541

Token 763: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.4334823489189148
    2. '_' → logprob: -2.3084824085235596
    3. 'la' → logprob: -2.3084824085235596
    4. 'val' → logprob: -2.9334824085235596
    5. ' _' → logprob: -4.0584821701049805
    6. ' le' → logprob: -4.3084821701049805
    7. 'value' → logprob: -4.3084821701049805
    8. 'le' → logprob: -4.5584821701049805
    9. ' l' → logprob: -4.6834821701049805
    10. 'l' → logprob: -4.8084821701049805

Token 764: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.2795264720916748
    2. 'value' → logprob: -1.5295264720916748
    3. ' valeur' → logprob: -4.779526710510254
    4. 'element' → logprob: -5.029526710510254
    5. ',' → logprob: -5.779526710510254
    6. ' val' → logprob: -5.904526710510254
    7. ' value' → logprob: -5.904526710510254
    8. 'élé' → logprob: -6.154526710510254
    9. ' ' → logprob: -7.529526710510254
    10. 'elem' → logprob: -7.779526710510254

Token 765: ' mais' (ID: 2899)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007541903294622898
    2. ')' → logprob: -5.382542133331299
    3. ' ,' → logprob: -7.257542133331299
    4. 'i' → logprob: -7.757542133331299
    5. '),' → logprob: -7.757542133331299
    6. ',i' → logprob: -8.00754165649414
    7. '(i' → logprob: -8.50754165649414
    8. ' i' → logprob: -9.00754165649414
    9. 'for' → logprob: -9.25754165649414
    10. ',)' → logprob: -9.75754165649414

Token 766: ' l' (ID: 305)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.7083137631416321
    2. 'not' → logprob: -0.7083137631416321
    3. ' only' → logprob: -4.958313941955566
    4. 'only' → logprob: -6.083313941955566
    5. 'value' → logprob: -6.583313941955566
    6. 'A' → logprob: -7.333313941955566
    7. ' pas' → logprob: -7.458313941955566
    8. 'pas' → logprob: -7.458313941955566
    9. '_' → logprob: -7.583313941955566
    10. ' value' → logprob: -8.083313941955566

Token 767: ''ind' (ID: 82245)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1690264642238617
    2. 'for' → logprob: -2.5440263748168945
    3. ' for' → logprob: -3.1690263748168945
    4. ' ,' → logprob: -4.4190263748168945
    5. 'A' → logprob: -5.4190263748168945
    6. 'a' → logprob: -5.6690263748168945
    7. '=' → logprob: -5.9190263748168945
    8. '#' → logprob: -6.0440263748168945
    9. 'or' → logprob: -6.6690263748168945
    10. ' in' → logprob: -6.7940263748168945

Token 768: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.20158261060714722
    2. 'ex' → logprob: -1.701582670211792
    3. 'i' → logprob: -10.076582908630371
    4. 'e' → logprob: -10.576582908630371
    5. 'ic' → logprob: -10.701582908630371
    6. 'ices' → logprob: -11.076582908630371
    7. 'exe' → logprob: -11.326582908630371
    8. 'ce' → logprob: -11.576582908630371
    9. 'ixe' → logprob: -11.951582908630371
    10. '   ' → logprob: -12.326582908630371

Token 769: ' n' (ID: 297)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018846115563064814
    2. ' ,' → logprob: -6.626884460449219
    3. ',_' → logprob: -8.751884460449219
    4. 'n' → logprob: -9.001884460449219
    5. '_' → logprob: -9.501884460449219
    6. '_,' → logprob: -10.251884460449219
    7. ' n' → logprob: -10.626884460449219
    8. ',n' → logprob: -10.751884460449219
    9. ' ' → logprob: -11.001884460449219
    10. ')' → logprob: -11.126884460449219

Token 770: ''est' (ID: 6616)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006996439304202795
    2. 'n' → logprob: -5.7569966316223145
    3. '_,' → logprob: -7.0069966316223145
    4. ',_' → logprob: -7.1319966316223145
    5. ',n' → logprob: -7.5069966316223145
    6. 'e' → logprob: -8.256996154785156
    7. '_' → logprob: -8.631996154785156
    8. ' n' → logprob: -8.756996154785156
    9. 'a' → logprob: -8.881996154785156
    10. ' ,' → logprob: -8.881996154785156

Token 771: ' pas' (ID: 2173)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5220377445220947
    2. ',' → logprob: -1.5220377445220947
    3. 'pas' → logprob: -1.8970377445220947
    4. 'not' → logprob: -4.397037506103516
    5. ' pas' → logprob: -4.647037506103516
    6. '_pas' → logprob: -5.522037506103516
    7. ' not' → logprob: -6.147037506103516
    8. 'in' → logprob: -6.147037506103516
    9. '0' → logprob: -6.147037506103516
    10. '_,' → logprob: -6.397037506103516

Token 772: ' utilisé' (ID: 53138)
  Prédit: ' used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.7182782888412476
    2. 'used' → logprob: -1.3432782888412476
    3. '_used' → logprob: -1.8432782888412476
    4. '_' → logprob: -3.093278408050537
    5. ' utilisé' → logprob: -4.093278408050537
    6. 'needed' → logprob: -5.218278408050537
    7. ',' → logprob: -5.593278408050537
    8. 'unused' → logprob: -6.093278408050537
    9. ')' → logprob: -6.343278408050537
    10. ' utilisée' → logprob: -6.593278408050537

Token 773: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0036048211622983217
    2. 'for' → logprob: -5.878604888916016
    3. ' ,' → logprob: -7.878604888916016
    4. '_,' → logprob: -9.128604888916016
    5. '),' → logprob: -9.253604888916016
    6. ' for' → logprob: -9.378604888916016
    7. '   ' → logprob: -10.628604888916016
    8. ')' → logprob: -10.628604888916016
    9. '       ' → logprob: -11.628604888916016
    10. 'pour' → logprob: -11.753604888916016

Token 774: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08006744086742401
    2. ' for' → logprob: -2.8300673961639404
    3. '       ' → logprob: -4.5800676345825195
    4. '   ' → logprob: -4.9550676345825195
    5. ',' → logprob: -7.7050676345825195
    6. '_,' → logprob: -9.70506763458252
    7. '```' → logprob: -10.33006763458252
    8. ' ,' → logprob: -10.95506763458252
    9. ' ' → logprob: -11.20506763458252
    10. '	for' → logprob: -11.45506763458252

Token 775: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0006460758158937097
    2. ' for' → logprob: -7.375646114349365
    3. '   ' → logprob: -11.000645637512207
    4. '       ' → logprob: -13.125645637512207
    5. '
' → logprob: -15.125645637512207
    6. '	for' → logprob: -15.125645637512207
    7. 'from' → logprob: -16.250646591186523
    8. '```' → logprob: -16.375646591186523
    9. '0' → logprob: -17.375646591186523
    10. '    
' → logprob: -17.625646591186523

Token 776: ' i' (ID: 575)
  Prédit: '_,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.005229136906564236
    2. ' _,' → logprob: -5.8802289962768555
    3. '_' → logprob: -6.7552289962768555
    4. 'i' → logprob: -7.0052289962768555
    5. '__,' → logprob: -8.880228996276855
    6. ' i' → logprob: -10.255228996276855
    7. '(_,' → logprob: -10.380228996276855
    8. '_i' → logprob: -10.630228996276855
    9. ',' → logprob: -10.630228996276855
    10. ' _' → logprob: -10.755228996276855

Token 777: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017910730093717575
    2. ' ,' → logprob: -9.000179290771484
    3. ',a' → logprob: -11.250179290771484
    4. ',b' → logprob: -11.375179290771484
    5. ',v' → logprob: -12.000179290771484
    6. ',value' → logprob: -12.000179290771484
    7. ' in' → logprob: -12.500179290771484
    8. ',[' → logprob: -12.500179290771484
    9. 'in' → logprob: -12.625179290771484
    10. ',(' → logprob: -13.375179290771484

Token 778: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.009021054953336716
    2. 'val' → logprob: -5.384021282196045
    3. 'value' → logprob: -6.634021282196045
    4. 'num' → logprob: -6.884021282196045
    5. 'b' → logprob: -7.009021282196045
    6. 'x' → logprob: -7.509021282196045
    7. 'v' → logprob: -8.009020805358887
    8. 'ai' → logprob: -8.884020805358887
    9. 'Ai' → logprob: -9.759020805358887
    10. 'A' → logprob: -10.509020805358887

Token 779: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3485732972621918
    2. 'in' → logprob: -1.2235733270645142
    3. ' ' → logprob: -10.098573684692383
    4. 'a' → logprob: -10.598573684692383
    5. ',' → logprob: -10.723573684692383
    6. ')' → logprob: -11.223573684692383
    7. 's' → logprob: -12.598573684692383
    8. 'i' → logprob: -13.223573684692383
    9. 'import' → logprob: -13.223573684692383
    10. 'n' → logprob: -13.473573684692383

Token 780: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.16022484004497528
    2. ' enumerate' → logprob: -1.9102247953414917
    3. 'in' → logprob: -15.660224914550781
    4. 'en' → logprob: -15.785224914550781
    5. '(en' → logprob: -16.03522491455078
    6. 'A' → logprob: -16.03522491455078
    7. 'enum' → logprob: -17.16022491455078
    8. '```' → logprob: -17.53522491455078
    9. '.enumer' → logprob: -17.91022491455078
    10. ' enumer' → logprob: -17.91022491455078

Token 781: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.5761838555335999
    2. 'A' → logprob: -0.8261838555335999
    3. ' A' → logprob: -9.201184272766113
    4. '(' → logprob: -9.326184272766113
    5. 'enumer' → logprob: -10.201184272766113
    6. '(en' → logprob: -12.451184272766113
    7. ',' → logprob: -12.701184272766113
    8. '((' → logprob: -12.826184272766113
    9. ',A' → logprob: -12.951184272766113
    10. '	A' → logprob: -13.326184272766113

Token 782: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01636900007724762
    2. '):
' → logprob: -4.141368865966797
    3. ':' → logprob: -8.141368865966797
    4. '):
' → logprob: -10.266368865966797
    5. ' ):' → logprob: -12.641368865966797
    6. '   ' → logprob: -13.266368865966797
    7. ',' → logprob: -13.516368865966797
    8. ')' → logprob: -13.641368865966797
    9. '):

' → logprob: -14.891368865966797
    10. '       ' → logprob: -15.516368865966797

Token 783: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33343884348869324
    2. '           ' → logprob: -1.5834388732910156
    3. '<|end|>' → logprob: -2.7084388732910156
    4. ':' → logprob: -5.583438873291016
    5. ' sum' → logprob: -6.333438873291016
    6. '   ' → logprob: -6.958438873291016
    7. '):
' → logprob: -7.333438873291016
    8. ')' → logprob: -7.333438873291016
    9. 'sum' → logprob: -7.458438873291016
    10. ':
' → logprob: -7.458438873291016

Token 784: ' #' (ID: 1069)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.3344562351703644
    2. ' sum' → logprob: -1.834456205368042
    3. '           ' → logprob: -2.084456205368042
    4. '       ' → logprob: -9.209456443786621
    5. '   ' → logprob: -10.459456443786621
    6. '               ' → logprob: -11.084456443786621
    7. '	sum' → logprob: -11.209456443786621
    8. '(sum' → logprob: -11.959456443786621
    9. '#' (adapté à ' #') → logprob: -12.209456443786621
    10. '          ' → logprob: -12.584456443786621

Token 785: ' Util' (ID: 13564)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0030689798295497894
    2. '           ' → logprob: -5.878068923950195
    3. '#' → logprob: -8.503068923950195
    4. 'inv' → logprob: -10.503068923950195
    5. 'b' → logprob: -10.878068923950195
    6. ' sum' → logprob: -12.128068923950195
    7. 'B' → logprob: -12.378068923950195
    8. '       ' → logprob: -13.878068923950195
    9. '   ' → logprob: -14.253068923950195
    10. 'val' → logprob: -14.628068923950195

Token 786: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.00014096579980105162
    2. '#' → logprob: -10.375141143798828
    3. '```' → logprob: -10.750141143798828
    4. '   ' → logprob: -11.125141143798828
    5. 'se' → logprob: -11.125141143798828
    6. 'is' → logprob: -11.375141143798828
    7. 'e' → logprob: -11.625141143798828
    8. 'ize' → logprob: -11.875141143798828
    9. 'aise' → logprob: -12.250141143798828
    10. '       ' → logprob: -12.750141143798828

Token 787: ' pow' (ID: 9779)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.12074767053127289
    2. 'l' → logprob: -2.9957475662231445
    3. 'pow' → logprob: -3.8707475662231445
    4. '(sum' → logprob: -3.8707475662231445
    5. ' sum' → logprob: -4.2457475662231445
    6. ' l' → logprob: -5.4957475662231445
    7. 'a' → logprob: -6.2457475662231445
    8. '(' → logprob: -7.2457475662231445
    9. 'the' → logprob: -8.620747566223145
    10. 'b' → logprob: -8.870747566223145

Token 788: ' pour' (ID: 1930)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.8239316344261169
    2. '(' → logprob: -1.1989316940307617
    3. '(pow' → logprob: -1.4489316940307617
    4. '(sum' → logprob: -4.198931694030762
    5. 'pow' → logprob: -5.573931694030762
    6. '(power' → logprob: -5.823931694030762
    7. '(
' → logprob: -6.948931694030762
    8. '           ' → logprob: -7.198931694030762
    9. ')' → logprob: -7.823931694030762
    10. ' (' → logprob: -8.573931694030762

Token 789: ' calcul' (ID: 7559)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.13530808687210083
    2. 'sum' → logprob: -2.135308027267456
    3. '           ' → logprob: -5.135308265686035
    4. ' pow' → logprob: -7.385308265686035
    5. '(sum' → logprob: -7.635308265686035
    6. 'print' → logprob: -7.885308265686035
    7. 'calculate' → logprob: -8.385308265686035
    8. '(pow' → logprob: -8.385308265686035
    9. ' sum' → logprob: -8.635308265686035
    10. 'add' → logprob: -9.260308265686035

Token 790: 'er' (ID: 259)
  Prédit: 'ate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.34837526082992554
    2. 'er' → logprob: -1.3483753204345703
    3. 'pow' → logprob: -4.84837532043457
    4. '(a' → logprob: -5.09837532043457
    5. '(pow' → logprob: -5.34837532043457
    6. 'a' → logprob: -5.59837532043457
    7. 'e' → logprob: -5.72337532043457
    8. '(l' → logprob: -5.84837532043457
    9. 'l' → logprob: -5.84837532043457
    10. '(' → logprob: -6.72337532043457

Token 791: ' l' (ID: 305)
  Prédit: '(pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(pow' → logprob: -0.7352120876312256
    2. 'pow' → logprob: -0.9852120876312256
    3. '(l' → logprob: -1.9852120876312256
    4. '(sum' → logprob: -4.985212326049805
    5. '(' → logprob: -6.360212326049805
    6. 'l' → logprob: -6.985212326049805
    7. ' pow' → logprob: -8.610212326049805
    8. 'sum' → logprob: -8.985212326049805
    9. '           ' → logprob: -10.735212326049805
    10. '(power' → logprob: -10.735212326049805

Token 792: ''in' (ID: 17942)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.030990783125162125
    2. 'cm' → logprob: -3.5309908390045166
    3. '(a' → logprob: -7.7809906005859375
    4. '(sum' → logprob: -7.9059906005859375
    5. '(' → logprob: -8.655990600585938
    6. '(c' → logprob: -9.155990600585938
    7. '(cm' → logprob: -9.655990600585938
    8. 'c' → logprob: -10.280990600585938
    9. 'pow' → logprob: -11.280990600585938
    10. '(pow' → logprob: -11.280990600585938

Token 793: 'verse' (ID: 7093)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.4647581875324249
    2. 'verse' → logprob: -1.3397581577301025
    3. 't' → logprob: -2.9647581577301025
    4. 'v' → logprob: -3.0897581577301025
    5. '(pow' → logprob: -5.214758396148682
    6. ' pow' → logprob: -6.089758396148682
    7. 'l' → logprob: -6.714758396148682
    8. '(l' → logprob: -7.464758396148682
    9. 'put' → logprob: -7.589758396148682
    10. 'vert' → logprob: -7.714758396148682

Token 794: ' mod' (ID: 1812)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.7040637135505676
    2. 'a' → logprob: -1.9540636539459229
    3. '(' → logprob: -2.079063653945923
    4. 'pow' → logprob: -2.454063653945923
    5. 'mod' → logprob: -3.454063653945923
    6. '(l' → logprob: -3.579063653945923
    7. 'B' → logprob: -3.704063653945923
    8. '(pow' → logprob: -3.704063653945923
    9. 'l' → logprob: -3.829063653945923
    10. '_mod' → logprob: -4.704063892364502

Token 795: 'ulaire' (ID: 48584)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.7752276659011841
    2. 'pow' → logprob: -1.150227665901184
    3. 'a' → logprob: -1.775227665901184
    4. 'inv' → logprob: -3.6502275466918945
    5. 'ular' → logprob: -4.9002275466918945
    6. '(pow' → logprob: -5.2752275466918945
    7. 'ulo' → logprob: -6.0252275466918945
    8. 'ulaire' → logprob: -6.0252275466918945
    9. 'inverse' → logprob: -6.4002275466918945
    10. ' a' → logprob: -6.5252275466918945

Token 796: ' de' (ID: 334)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.3350241482257843
    2. '(' → logprob: -1.585024118423462
    3. '(pow' → logprob: -3.585024118423462
    4. '(a' → logprob: -3.710024118423462
    5. ' (' → logprob: -3.960024118423462
    6. '           ' → logprob: -5.835024356842041
    7. ',' → logprob: -6.585024356842041
    8. 'pow' → logprob: -6.585024356842041
    9. '(sum' → logprob: -7.335024356842041
    10. 'a' → logprob: -7.335024356842041

Token 797: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0008021225803531706
    2. ' a' → logprob: -7.750802040100098
    3. 'l' → logprob: -8.500802040100098
    4. '(a' → logprob: -8.750802040100098
    5. '(' → logprob: -12.625802040100098
    6. 'pow' → logprob: -13.125802040100098
    7. '(l' → logprob: -13.875802040100098
    8. '(pow' → logprob: -14.125802040100098
    9. ' (' → logprob: -14.625802040100098
    10. '<|end|>' → logprob: -14.750802040100098

Token 798: ' modulo' (ID: 112372)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3303716778755188
    2. '(' → logprob: -1.830371618270874
    3. ' ,' → logprob: -2.705371618270874
    4. ' (' → logprob: -3.830371618270874
    5. '(a' → logprob: -4.205371856689453
    6. '           ' → logprob: -5.080371856689453
    7. '(pow' → logprob: -5.080371856689453
    8. 'a' → logprob: -5.955371856689453
    9. ',a' → logprob: -7.330371856689453
    10. 'pow' → logprob: -7.455371856689453

Token 799: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.3880590498447418
    2. 'a' → logprob: -1.5130590200424194
    3. '(mod' → logprob: -2.638059139251709
    4. ' a' → logprob: -4.388059139251709
    5. ' mod' → logprob: -4.763059139251709
    6. 'l' → logprob: -5.763059139251709
    7. ' (' → logprob: -6.263059139251709
    8. '(' → logprob: -6.513059139251709
    9. '(a' → logprob: -6.763059139251709
    10. 'pow' → logprob: -7.138059139251709

Token 800: '.' (ID: 13)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.719384491443634
    2. ',' → logprob: -0.969384491443634
    3. '(' → logprob: -2.2193844318389893
    4. ' (' → logprob: -4.344384670257568
    5. '(pow' → logprob: -5.469384670257568
    6. ' ,' → logprob: -5.844384670257568
    7. ')' → logprob: -6.594384670257568
    8. 'pow' → logprob: -7.094384670257568
    9. '       ' → logprob: -7.844384670257568
    10. '(l' → logprob: -8.09438419342041

Token 801: ' pow' (ID: 9779)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.20425629615783691
    2. '           ' → logprob: -2.454256296157837
    3. 'pow' → logprob: -2.954256296157837
    4. ' sum' → logprob: -3.454256296157837
    5. 'inverse' → logprob: -5.079256057739258
    6. ')' → logprob: -6.329256057739258
    7. ',' → logprob: -6.454256057739258
    8. 'inv' → logprob: -6.704256057739258
    9. 'Inverse' → logprob: -6.954256057739258
    10. ' inverse' → logprob: -7.704256057739258

Token 802: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.007125119213014841
    2. '(' → logprob: -5.007124900817871
    3. '(l' → logprob: -8.632124900817871
    4. '(pow' → logprob: -8.757124900817871
    5. 'a' → logprob: -10.257124900817871
    6. 'pow' → logprob: -11.132124900817871
    7. '(`' → logprob: -12.382124900817871
    8. '(
' → logprob: -12.507124900817871
    9. 'l' → logprob: -13.257124900817871
    10. '```' → logprob: -13.382124900817871

Token 803: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.184812031686306e-05
    2. ',
' → logprob: -10.000082015991211
    3. ' ,' → logprob: -11.125082015991211
    4. '-' → logprob: -11.500082015991211
    5. 'a' → logprob: -12.125082015991211
    6. ',-' → logprob: -13.375082015991211
    7. ')' → logprob: -13.875082015991211
    8. '```' → logprob: -14.000082015991211
    9. '),' → logprob: -14.875082015991211
    10. ' -' → logprob: -15.000082015991211

Token 804: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.00024168188974726945
    2. ' mod' → logprob: -8.50024127960205
    3. '-' → logprob: -10.50024127960205
    4. '-mod' → logprob: -11.62524127960205
    5. '(mod' → logprob: -14.00024127960205
    6. '	mod' → logprob: -14.37524127960205
    7. ' -' → logprob: -16.125242233276367
    8. '.mod' → logprob: -16.125242233276367
    9. '_mod' → logprob: -17.500242233276367
    10. ' ' → logprob: -18.375242233276367

Token 805: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.014163863845169544
    2. ' -' → logprob: -4.264163970947266
    3. '```' → logprob: -15.514163970947266
    4. ' ' → logprob: -16.389163970947266
    5. '−' → logprob: -17.139163970947266
    6. '   ' → logprob: -17.139163970947266
    7. ')' → logprob: -17.514163970947266
    8. '–' → logprob: -17.639163970947266
    9. '
' → logprob: -17.889163970947266
    10. ' ' → logprob: -18.451663970947266

Token 806: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -13.125004768371582
    3. '-' → logprob: -14.187504768371582
    4. '```' → logprob: -14.687504768371582
    5. '
' → logprob: -15.062504768371582
    6. '۲' → logprob: -15.375004768371582
    7. '

' → logprob: -16.125003814697266
    8. '٢' → logprob: -16.187503814697266
    9. '２' → logprob: -16.562503814697266
    10. ' -' → logprob: -16.687503814697266

Token 807: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47685161232948303
    2. ',' → logprob: -0.9768515825271606
    3. ' )' → logprob: -6.351851463317871
    4. ' ,' → logprob: -7.101851463317871
    5. '   ' → logprob: -9.476851463317871
    6. '           ' → logprob: -10.601851463317871
    7. ' ' → logprob: -10.976851463317871
    8. '```' → logprob: -11.101851463317871
    9. ')`' → logprob: -11.851851463317871
    10. '),' → logprob: -11.851851463317871

Token 808: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0232466422021389
    2. ' mod' → logprob: -3.7732465267181396
    3. ')' → logprob: -13.898246765136719
    4. '	mod' → logprob: -15.773246765136719
    5. '   ' → logprob: -17.77324676513672
    6. ' ' → logprob: -17.89824676513672
    7. '(mod' → logprob: -18.02324676513672
    8. ' ' → logprob: -18.77324676513672
    9. 'm' → logprob: -20.02324676513672
    10. '_mod' → logprob: -20.14824676513672

Token 809: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010139751975657418
    2. ' )' → logprob: -9.875101089477539
    3. ')
' → logprob: -10.125101089477539
    4. ')
' → logprob: -13.125101089477539
    5. '))' → logprob: -13.375101089477539
    6. '),' → logprob: -13.500101089477539
    7. ')`' → logprob: -14.000101089477539
    8. ')

' → logprob: -14.125101089477539
    9. '   ' → logprob: -14.750101089477539
    10. ')**' → logprob: -15.000101089477539

Token 810: ' n' (ID: 297)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4698079824447632
    2. '           ' → logprob: -1.7198079824447632
    3. ':' → logprob: -2.5948081016540527
    4. ',' → logprob: -3.3448081016540527
    5. '):' → logprob: -3.9698081016540527
    6. ':
' → logprob: -4.344808101654053
    7. '):
' → logprob: -4.344808101654053
    8. '
' → logprob: -4.719808101654053
    9. 'sum' → logprob: -4.719808101654053
    10. '),' → logprob: -5.219808101654053

Token 811: ''est' (ID: 6616)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012752608396112919
    2. ',' → logprob: -4.887752532958984
    3. '<|end|>' → logprob: -6.262752532958984
    4. ' )' → logprob: -7.137752532958984
    5. '**' → logprob: -7.387752532958984
    6. '),' → logprob: -7.762752532958984
    7. ''' → logprob: -8.887752532958984
    8. '*' → logprob: -8.887752532958984
    9. '<|end|>' → logprob: -9.012752532958984
    10. '%' → logprob: -9.262752532958984

Token 812: ' valable' (ID: 198296)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.4803413152694702
    2. ' pas' → logprob: -1.9803413152694702
    3. 'not' → logprob: -2.9803414344787598
    4. '...' → logprob: -2.9803414344787598
    5. '#' → logprob: -3.2303414344787598
    6. '<|end|>' → logprob: -3.3553414344787598
    7. ')' → logprob: -3.8553414344787598
    8. 'a' → logprob: -4.35534143447876
    9. ' not' → logprob: -4.85534143447876
    10. '```' → logprob: -5.23034143447876

Token 813: ' que' (ID: 661)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23458833992481232
    2. ' )' → logprob: -1.734588384628296
    3. ' ' → logprob: -4.109588146209717
    4. '<|end|>' → logprob: -4.734588146209717
    5. ' for' → logprob: -5.984588146209717
    6. ',' → logprob: -6.359588146209717
    7. ' ),' → logprob: -6.984588146209717
    8. ' if' → logprob: -8.234588623046875
    9. ' only' → logprob: -8.359588623046875
    10. '),' → logprob: -8.359588623046875

Token 814: ' si' (ID: 1784)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9397217035293579
    2. ' lorsque' → logprob: -2.0647215843200684
    3. 'if' → logprob: -2.1897215843200684
    4. ' ' → logprob: -2.8147215843200684
    5. ' if' → logprob: -2.8147215843200684
    6. ' when' → logprob: -2.8147215843200684
    7. ' si' → logprob: -3.3147215843200684
    8. ' dans' → logprob: -3.4397215843200684
    9. ' lorsqu' → logprob: -3.4397215843200684
    10. 'when' → logprob: -3.8147215843200684

Token 815: ' mod' (ID: 1812)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02933291532099247
    2. ' a' → logprob: -3.9043328762054443
    3. ' gcd' → logprob: -5.529333114624023
    4. 'g' → logprob: -5.654333114624023
    5. 'mod' → logprob: -6.904333114624023
    6. 'pow' → logprob: -9.654333114624023
    7. ' mod' → logprob: -9.654333114624023
    8. ' ' → logprob: -10.029333114624023
    9. 'm' → logprob: -10.904333114624023
    10. '```' → logprob: -11.029333114624023

Token 816: ' est' (ID: 893)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6900120973587036
    2. ' is' → logprob: -0.8150120973587036
    3. '<|end|>' → logprob: -4.815011978149414
    4. ' )' → logprob: -4.940011978149414
    5. ' !=' → logprob: -4.940011978149414
    6. '-' → logprob: -5.190011978149414
    7. ' -' → logprob: -5.190011978149414
    8. '>' → logprob: -5.565011978149414
    9. ' est' → logprob: -5.815011978149414
    10. ',' → logprob: -6.190011978149414

Token 817: ' premier' (ID: 15506)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.2882560193538666
    2. 'prime' → logprob: -1.788256049156189
    3. ' premier' → logprob: -3.7882559299468994
    4. 'prima' → logprob: -3.9132559299468994
    5. ' un' → logprob: -4.5382561683654785
    6. ' prime' → logprob: -4.9132561683654785
    7. 'un' → logprob: -5.1632561683654785
    8. 'a' → logprob: -5.5382561683654785
    9. 'pr' → logprob: -5.5382561683654785
    10. '_prime' → logprob: -5.7882561683654785

Token 818: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06040334701538086
    2. ')' → logprob: -3.560403347015381
    3. ',' → logprob: -4.185403347015381
    4. '):' → logprob: -4.685403347015381
    5. ':' → logprob: -6.060403347015381
    6. '):
' → logprob: -6.685403347015381
    7. '       ' → logprob: -7.060403347015381
    8. '          ' → logprob: -8.310403823852539
    9. '),' → logprob: -8.935403823852539
    10. '            
' → logprob: -9.310403823852539

Token 819: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0028084407094866037
    2. 'sum' → logprob: -6.002808570861816
    3. ' sum' → logprob: -8.627808570861816
    4. ',' → logprob: -10.002808570861816
    5. ')' → logprob: -10.127808570861816
    6. '       ' → logprob: -10.502808570861816
    7. '          ' → logprob: -11.752808570861816
    8. 'pow' → logprob: -12.002808570861816
    9. '   ' → logprob: -12.502808570861816
    10. '               ' → logprob: -12.627808570861816

Token 820: ' #' (ID: 1069)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0014704647473990917
    2. '           ' → logprob: -6.751470565795898
    3. ' sum' → logprob: -8.876470565795898
    4. 'inv' → logprob: -9.126470565795898
    5. 'pow' → logprob: -10.001470565795898
    6. 'inverse' → logprob: -12.876470565795898
    7. '       ' → logprob: -13.626470565795898
    8. 'b' → logprob: -13.626470565795898
    9. '   ' → logprob: -14.251470565795898
    10. '               ' → logprob: -15.626470565795898

Token 821: ' Mult' (ID: 15431)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.00386135489679873
    2. 'inv' → logprob: -5.628861427307129
    3. ' sum' → logprob: -8.628861427307129
    4. 'inverse' → logprob: -10.003861427307129
    5. 'pow' → logprob: -10.628861427307129
    6. '           ' → logprob: -12.003861427307129
    7. 'b' → logprob: -13.378861427307129
    8. ' inv' → logprob: -14.003861427307129
    9. '   ' → logprob: -14.128861427307129
    10. '       ' → logprob: -14.378861427307129

Token 822: 'ipl' (ID: 7840)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.47930723428726196
    2. '=' → logprob: -1.9793071746826172
    3. '       ' → logprob: -2.854307174682617
    4. 'ultiply' → logprob: -2.854307174682617
    5. 'ultip' → logprob: -3.479307174682617
    6. '            
' → logprob: -3.604307174682617
    7. ' =' → logprob: -3.979307174682617
    8. 'sum' → logprob: -4.604307174682617
    9. '   ' → logprob: -5.729307174682617
    10. 'um' → logprob: -6.229307174682617

Token 823: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.1452639400959015
    2. 'e' → logprob: -2.395263910293579
    3. 'ies' → logprob: -4.395264148712158
    4. 'iez' → logprob: -4.770264148712158
    5. 'ier' → logprob: -5.020264148712158
    6. 'ipl' → logprob: -5.520264148712158
    7. 'y' → logprob: -5.895264148712158
    8. 'es' → logprob: -6.395264148712158
    9. 'ié' → logprob: -7.020264148712158
    10. 'iye' → logprob: -7.520264148712158

Token 824: ' l' (ID: 305)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.08230716735124588
    2. 'l' → logprob: -3.4573071002960205
    3. '(sum' → logprob: -3.5823071002960205
    4. '(l' → logprob: -4.5823073387146
    5. ' sum' → logprob: -5.2073073387146
    6. ' l' → logprob: -6.0823073387146
    7. '           ' → logprob: -7.3323073387146
    8. ' (' → logprob: -7.8323073387146
    9. 'le' → logprob: -8.457306861877441
    10. '(' → logprob: -8.832306861877441

Token 825: 'cm' (ID: 7871)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.8246974349021912
    2. ' sum' → logprob: -1.949697494506836
    3. '(sum' → logprob: -1.949697494506836
    4. '=' → logprob: -2.074697494506836
    5. '=sum' → logprob: -3.824697494506836
    6. ' ' → logprob: -4.074697494506836
    7. 'l' → logprob: -4.074697494506836
    8. 'space' → logprob: -4.574697494506836
    9. ' +=' → logprob: -4.824697494506836
    10. 'B' → logprob: -4.824697494506836

Token 826: ' par' (ID: 686)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.20318152010440826
    2. '*' → logprob: -1.703181505203247
    3. ',' → logprob: -7.078181743621826
    4. ' ' → logprob: -7.578181743621826
    5. 'sum' → logprob: -9.078181266784668
    6. ' ' → logprob: -9.328181266784668
    7. ' ,' → logprob: -9.953181266784668
    8. '   ' → logprob: -10.203181266784668
    9. '  ' → logprob: -10.453181266784668
    10. ')' → logprob: -11.078181266784668

Token 827: ' cet' (ID: 19505)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.31328463554382324
    2. ' pow' → logprob: -1.3132846355438232
    3. '(pow' → logprob: -11.063284873962402
    4. 'a' → logprob: -12.188284873962402
    5. ' a' → logprob: -14.438284873962402
    6. '   ' → logprob: -14.563284873962402
    7. 'p' → logprob: -15.438284873962402
    8. '_pow' → logprob: -16.063283920288086
    9. ' ' → logprob: -16.188283920288086
    10. '.pow' → logprob: -16.188283920288086

Token 828: ' inverse' (ID: 53743)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.6314189434051514
    2. ' inverse' → logprob: -1.7564189434051514
    3. ' pow' → logprob: -2.0064189434051514
    4. 'inverse' → logprob: -2.1314189434051514
    5. 'a' → logprob: -3.8814189434051514
    6. '(pow' → logprob: -4.6314191818237305
    7. ' a' → logprob: -6.0064191818237305
    8. ')' → logprob: -6.2564191818237305
    9. '_inverse' → logprob: -6.3814191818237305
    10. ' (' → logprob: -6.5064191818237305

Token 829: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3942473828792572
    2. 'and' → logprob: -2.26924729347229
    3. ' and' → logprob: -2.76924729347229
    4. 'a' → logprob: -3.51924729347229
    5. '(' → logprob: -3.64424729347229
    6. ')' → logprob: -4.019247531890869
    7. ' (' → logprob: -4.144247531890869
    8. 'l' → logprob: -4.394247531890869
    9. ' ,' → logprob: -4.644247531890869
    10. '*' → logprob: -4.769247531890869

Token 830: ' puis' (ID: 18766)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24075771868228912
    2. 'sum' → logprob: -1.990757703781128
    3. ' sum' → logprob: -2.615757703781128
    4. ')' → logprob: -6.115757942199707
    5. '            ' → logprob: -7.740757942199707
    6. '(sum' → logprob: -8.615757942199707
    7. ' and' → logprob: -8.740757942199707
    8. '       ' → logprob: -9.115757942199707
    9. ' puis' → logprob: -9.115757942199707
    10. 'pow' → logprob: -9.365757942199707

Token 831: ' l' (ID: 305)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.2498764842748642
    2. 'add' → logprob: -2.3748764991760254
    3. 'adds' → logprob: -2.8748764991760254
    4. '+=' → logprob: -3.7498764991760254
    5. ' sum' → logprob: -3.8748764991760254
    6. ' add' → logprob: -4.874876499176025
    7. 'aj' → logprob: -5.749876499176025
    8. 'addition' → logprob: -5.874876499176025
    9. ' +=' → logprob: -6.124876499176025
    10. ' ajoute' → logprob: -6.249876499176025

Token 832: ''' (ID: 6)
  Prédit: 'cm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.20850759744644165
    2. 'sum' → logprob: -2.458507537841797
    3. 'c' → logprob: -2.708507537841797
    4. ' %=' → logprob: -4.583507537841797
    5. '%=' → logprob: -4.833507537841797
    6. '#' → logprob: -5.333507537841797
    7. 'mod' → logprob: -6.208507537841797
    8. '%' → logprob: -6.333507537841797
    9. 'mc' → logprob: -6.708507537841797
    10. 'a' → logprob: -7.083507537841797

Token 833: 'addition' (ID: 198155)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6605008244514465
    2. 'sum' → logprob: -0.9105008244514465
    3. 'cm' → logprob: -4.035501003265381
    4. '%' → logprob: -4.035501003265381
    5. 'pow' → logprob: -4.160501003265381
    6. '%=' → logprob: -4.910501003265381
    7. 'div' → logprob: -5.410501003265381
    8. 'c' → logprob: -5.785501003265381
    9. 'mod' → logprob: -5.910501003265381
    10. 'in' → logprob: -6.035501003265381

Token 834: 'ne' (ID: 611)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.33808633685112
    2. ' +=' → logprob: -1.7130863666534424
    3. '=' → logprob: -3.0880863666534424
    4. 'ne' → logprob: -3.3380863666534424
    5. '   ' → logprob: -4.463086128234863
    6. 'ner' → logprob: -5.213086128234863
    7. 'né' → logprob: -5.838086128234863
    8. 'n' → logprob: -6.963086128234863
    9. ',' → logprob: -7.088086128234863
    10. ' =' → logprob: -7.088086128234863

Token 835: ' à' (ID: 1221)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -1.2271441221237183
    2. '           ' → logprob: -1.3521441221237183
    3. '+=' → logprob: -1.8521441221237183
    4. '<|end|>' → logprob: -2.477144241333008
    5. ')' → logprob: -2.852144241333008
    6. ',' → logprob: -3.227144241333008
    7. ' à' → logprob: -3.352144241333008
    8. 'sum' → logprob: -4.102144241333008
    9. '=' → logprob: -4.227144241333008
    10. ' to' → logprob: -4.977144241333008

Token 836: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.3868715465068817
    2. ' sum' → logprob: -1.136871576309204
    3. '(sum' → logprob: -15.261871337890625
    4. '	sum' → logprob: -16.011871337890625
    5. '=sum' → logprob: -16.386871337890625
    6. ',sum' → logprob: -18.136871337890625
    7. ' suma' → logprob: -18.261871337890625
    8. '_sum' → logprob: -18.886871337890625
    9. ' ' → logprob: -18.886871337890625
    10. 'space' → logprob: -19.011871337890625

Token 837: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -1.7432603272027336e-06
    2. ' B' → logprob: -13.375001907348633
    3. 'sum' → logprob: -16.000001907348633
    4. '_B' → logprob: -17.375001907348633
    5. '	B' → logprob: -17.625001907348633
    6. '(B' → logprob: -17.625001907348633
    7. 'b' → logprob: -18.250001907348633
    8. '   ' → logprob: -18.375001907348633
    9. '+B' → logprob: -18.500001907348633
    10. ' ' → logprob: -18.875001907348633

Token 838: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010022972710430622
    2. ' +=' → logprob: -5.26002311706543
    3. 'sum' → logprob: -6.38502311706543
    4. ',' → logprob: -6.76002311706543
    5. '+=' → logprob: -7.63502311706543
    6. ' sum' → logprob: -8.38502311706543
    7. '       ' → logprob: -8.88502311706543
    8. '               ' → logprob: -9.01002311706543
    9. '          ' → logprob: -9.01002311706543
    10. '   ' → logprob: -9.01002311706543

Token 839: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03446364402770996
    2. 'sum' → logprob: -4.659463882446289
    3. '   ' → logprob: -4.784463882446289
    4. ' 
' → logprob: -5.159463882446289
    5. '(sum' → logprob: -6.659463882446289
    6. '       ' → logprob: -6.659463882446289
    7. ' sum' → logprob: -6.784463882446289
    8. '
' → logprob: -7.034463882446289
    9. '            
' → logprob: -7.159463882446289
    10. ',' → logprob: -7.284463882446289

Token 840: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' (adapté à ' sum') → logprob: -0.05927390977740288
    2. ' sum' → logprob: -3.0592739582061768
    3. '           ' → logprob: -4.559273719787598
    4. '   ' → logprob: -9.184273719787598
    5. '       ' → logprob: -9.809273719787598
    6. '	sum' → logprob: -13.934273719787598
    7. '(sum' → logprob: -14.184273719787598
    8. ' ' → logprob: -15.809273719787598
    9. '               ' → logprob: -16.059274673461914
    10. '  ' → logprob: -16.309274673461914

Token 841: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: 0.0
    2. '(B' → logprob: -17.75
    3. 'sum' → logprob: -18.5
    4. '_B' → logprob: -19.125
    5. ' B' → logprob: -19.25
    6. '=' → logprob: -19.5
    7. '	B' → logprob: -19.625
    8. '=B' → logprob: -20.25
    9. 'b' → logprob: -20.375
    10. '(sum' → logprob: -20.5

Token 842: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.38697221875190735
    2. '+=' → logprob: -1.136972188949585
    3. '=' → logprob: -10.136972427368164
    4. '+=(' → logprob: -10.261972427368164
    5. '+' → logprob: -10.886972427368164
    6. ' =' → logprob: -12.636972427368164
    7. ']+=' → logprob: -12.761972427368164
    8. '+='' → logprob: -14.136972427368164
    9. '+="' → logprob: -14.761972427368164
    10. ' +' → logprob: -15.511972427368164

Token 843: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3139462172985077
    2. '(l' → logprob: -1.31394624710083
    3. ' l' → logprob: -7.93894624710083
    4. ' (' → logprob: -8.313945770263672
    5. '(' → logprob: -10.313945770263672
    6. '   ' → logprob: -10.813945770263672
    7. '	l' → logprob: -11.938945770263672
    8. 'lm' → logprob: -12.313945770263672
    9. '((' → logprob: -12.563945770263672
    10. 'pow' → logprob: -12.813945770263672

Token 844: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -6.2729995988775045e-06
    2. ' cm' → logprob: -12.750006675720215
    3. '   ' → logprob: -13.375006675720215
    4. 'c' → logprob: -14.125006675720215
    5. 'cms' → logprob: -14.625006675720215
    6. 'cmb' → logprob: -15.625006675720215
    7. 'cmp' → logprob: -16.0000057220459
    8. 'CM' → logprob: -16.6250057220459
    9. 'm' → logprob: -16.6250057220459
    10. '%' → logprob: -17.6250057220459

Token 845: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.575996458530426
    2. ' *' → logprob: -0.825996458530426
    3. ' ' → logprob: -9.950996398925781
    4. '   ' → logprob: -12.325996398925781
    5. ' ' → logprob: -12.700996398925781
    6. '**' → logprob: -15.075996398925781
    7. ')' → logprob: -15.075996398925781
    8. '  ' → logprob: -15.200996398925781
    9. '    ' → logprob: -15.200996398925781
    10. '#' → logprob: -15.825996398925781

Token 846: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -2.339278580620885e-06
    2. ' pow' → logprob: -13.000001907348633
    3. '(pow' → logprob: -20.500001907348633
    4. 'power' → logprob: -21.750001907348633
    5. '_pow' → logprob: -23.000001907348633
    6. 'pw' → logprob: -23.625001907348633
    7. '   ' → logprob: -24.000001907348633
    8. 'Pow' → logprob: -24.375001907348633
    9. 'p' → logprob: -24.500001907348633
    10. '.pow' → logprob: -25.250001907348633

Token 847: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.029781386256217957
    2. '(' → logprob: -3.5297813415527344
    3. 'a' → logprob: -10.404781341552734
    4. '(
' → logprob: -14.529781341552734
    5. '(A' → logprob: -16.529781341552734
    6. ' (' → logprob: -17.029781341552734
    7. '(ai' → logprob: -17.654781341552734
    8. '<|end|>' → logprob: -18.404781341552734
    9. '(

' → logprob: -18.529781341552734
    10. '(abs' → logprob: -18.904781341552734

Token 848: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026062061078846455
    2. ' ,' → logprob: -8.625260353088379
    3. ',-' → logprob: -9.875260353088379
    4. '-' → logprob: -11.000260353088379
    5. ')' → logprob: -12.750260353088379
    6. ' -' → logprob: -13.000260353088379
    7. ',
' → logprob: -13.125260353088379
    8. ' ,-' → logprob: -13.375260353088379
    9. ',a' → logprob: -14.125260353088379
    10. 'a' → logprob: -14.125260353088379

Token 849: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -6.034592388459714e-06
    2. ' mod' → logprob: -12.625005722045898
    3. '(mod' → logprob: -12.875005722045898
    4. '-mod' → logprob: -16.1250057220459
    5. '-' → logprob: -17.5000057220459
    6. '	mod' → logprob: -17.5000057220459
    7. '.mod' → logprob: -18.3750057220459
    8. 'MOD' → logprob: -19.2500057220459
    9. '_mod' → logprob: -19.3750057220459
    10. 'modal' → logprob: -19.3750057220459

Token 850: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.003191970521584153
    2. ' -' → logprob: -5.753191947937012
    3. '(-' → logprob: -12.753191947937012
    4. 'b' → logprob: -13.253191947937012
    5. ',' → logprob: -13.378191947937012
    6. '{-' → logprob: -13.378191947937012
    7. '(' → logprob: -13.628191947937012
    8. '```' → logprob: -14.253191947937012
    9. '<|end|>' → logprob: -14.753191947937012
    10. 'mod' → logprob: -14.878191947937012

Token 851: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5094070477061905e-05
    2. ' ' → logprob: -11.125015258789062
    3. '۲' → logprob: -16.375015258789062
    4. '   ' → logprob: -16.625015258789062
    5. '```' → logprob: -17.250015258789062
    6. '２' → logprob: -17.437515258789062
    7. '٢' → logprob: -17.562515258789062
    8. '-' → logprob: -17.625015258789062
    9. '  ' → logprob: -17.937515258789062
    10. '
' → logprob: -18.562515258789062

Token 852: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.875000953674316
    3. '۲' → logprob: -16.937501907348633
    4. '```' → logprob: -17.437501907348633
    5. '٢' → logprob: -17.687501907348633
    6. '२' → logprob: -18.000001907348633
    7. '-' → logprob: -18.250001907348633
    8. '২' → logprob: -18.312501907348633
    9. '２' → logprob: -18.375001907348633
    10. '   ' → logprob: -18.562501907348633

Token 853: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.546478935983032e-05
    2. ' ,' → logprob: -10.625025749206543
    3. ')' → logprob: -14.000025749206543
    4. ',
' → logprob: -15.625025749206543
    5. '   ' → logprob: -17.250024795532227
    6. 'mod' → logprob: -18.250024795532227
    7. '<|end|>' → logprob: -18.250024795532227
    8. '```' → logprob: -18.500024795532227
    9. '‌,' → logprob: -18.625024795532227
    10. '[' → logprob: -19.250024795532227

Token 854: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.03804149478673935
    2. ' mod' → logprob: -3.288041591644287
    3. '	mod' → logprob: -17.788042068481445
    4. '(mod' → logprob: -19.163042068481445
    5. ' ' → logprob: -21.038042068481445
    6. '_mod' → logprob: -21.413042068481445
    7. ')' → logprob: -21.538042068481445
    8. ' ' → logprob: -21.913042068481445
    9. ' modul' → logprob: -22.413042068481445
    10. '.mod' → logprob: -22.538042068481445

Token 855: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015718759968876839
    2. ')' → logprob: -6.5015716552734375
    3. ' ,' → logprob: -9.751571655273438
    4. '   ' → logprob: -11.751571655273438
    5. ',
' → logprob: -13.126571655273438
    6. ' )' → logprob: -14.001571655273438
    7. '       ' → logprob: -16.376571655273438
    8. '<|end|>' → logprob: -16.376571655273438
    9. '    ' → logprob: -16.501571655273438
    10. 'mod' → logprob: -16.751571655273438

Token 856: '           ' (ID: 352)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3080405592918396
    2. ' 
' → logprob: -2.8080406188964844
    3. '<|end|>' → logprob: -2.9330406188964844
    4. '           ' → logprob: -3.3080406188964844
    5. ')' → logprob: -3.4330406188964844
    6. ' %' → logprob: -3.9330406188964844
    7. '%' → logprob: -4.808040618896484
    8. ' )' → logprob: -4.808040618896484
    9. '    ' → logprob: -5.183040618896484
    10. '   ' → logprob: -5.183040618896484

Token 857: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.462450623512268
    2. '       ' → logprob: -1.712450623512268
    3. '<|end|>' → logprob: -1.712450623512268
    4. ' 
' → logprob: -2.0874505043029785
    5. '
' → logprob: -2.3374505043029785
    6. ')' → logprob: -3.0874505043029785
    7. ' ' → logprob: -3.3374505043029785
    8. ' sum' → logprob: -3.4624505043029785
    9. 'sum' → logprob: -3.5874505043029785
    10. '   ' → logprob: -4.2124505043029785

Token 858: ' Ap' (ID: 6537)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -6.909333023941144e-05
    2. ' sum' → logprob: -9.875068664550781
    3. '           ' → logprob: -11.500068664550781
    4. '       ' → logprob: -11.875068664550781
    5. '   ' → logprob: -15.375068664550781
    6. '	sum' → logprob: -16.25006866455078
    7. '
' → logprob: -17.12506866455078
    8. '#' → logprob: -17.62506866455078
    9. '(sum' → logprob: -18.37506866455078
    10. '            
' → logprob: -19.00006866455078

Token 859: 'plique' (ID: 71193)
  Prédit: 'ss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ss' → logprob: -0.8277619481086731
    2. 'r' → logprob: -1.2027618885040283
    3. 'sum' → logprob: -2.3277618885040283
    4. 's' → logprob: -3.2027618885040283
    5. 'pend' → logprob: -3.5777618885040283
    6. 'p' → logprob: -3.5777618885040283
    7. 'pl' → logprob: -4.077762126922607
    8. 'ply' → logprob: -4.327762126922607
    9. 'pel' → logprob: -4.577762126922607
    10. 'pp' → logprob: -5.577762126922607

Token 860: ' le' (ID: 505)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.7323782444000244
    2. 'sum' → logprob: -1.2323782444000244
    3. 'mod' → logprob: -1.8573782444000244
    4. ' %=' → logprob: -3.6073782444000244
    5. ' mod' → logprob: -4.107378005981445
    6. ' %' → logprob: -4.232378005981445
    7. '%' → logprob: -5.107378005981445
    8. ' ' → logprob: -5.482378005981445
    9. ')' → logprob: -7.357378005981445
    10. ' modulo' → logprob: -7.482378005981445

Token 861: ' modulo' (ID: 112372)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.2451869547367096
    2. '%' → logprob: -1.7451869249343872
    3. ' %' → logprob: -3.2451870441436768
    4. ' mod' → logprob: -5.745186805725098
    5. 'sum' → logprob: -8.120186805725098
    6. ' %=' → logprob: -8.245186805725098
    7. ' modulo' → logprob: -10.245186805725098
    8. ' sum' → logprob: -10.745186805725098
    9. '`' → logprob: -10.995186805725098
    10. '_mod' → logprob: -11.745186805725098

Token 862: ' à' (ID: 1221)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.3707900643348694
    2. ' sum' → logprob: -1.7457900047302246
    3. '(sum' → logprob: -2.4957900047302246
    4. '(' → logprob: -3.8707900047302246
    5. '=' → logprob: -4.120790004730225
    6. ' %=' → logprob: -5.620790004730225
    7. ')' → logprob: -5.870790004730225
    8. ' ' → logprob: -5.995790004730225
    9. 'mod' → logprob: -6.495790004730225
    10. '%' → logprob: -7.245790004730225

Token 863: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.00016897499153856188
    2. ' sum' → logprob: -9.000168800354004
    3. 'mod' → logprob: -10.000168800354004
    4. '(sum' → logprob: -16.50016975402832
    5. '7' → logprob: -17.37516975402832
    6. '   ' → logprob: -17.87516975402832
    7. '	sum' → logprob: -18.37516975402832
    8. 'summ' → logprob: -18.87516975402832
    9. '100' → logprob: -19.12516975402832
    10. '10' → logprob: -19.25016975402832

Token 864: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -4.417976379045285e-05
    2. 'sum' → logprob: -10.250043869018555
    3. '(sum' → logprob: -12.125043869018555
    4. ' B' → logprob: -13.125043869018555
    5. '=sum' → logprob: -15.000043869018555
    6. '	B' → logprob: -15.125043869018555
    7. '(B' → logprob: -15.250043869018555
    8. '(' → logprob: -16.250043869018555
    9. '_B' → logprob: -16.375043869018555
    10. '%B' → logprob: -16.875043869018555

Token 865: ' pour' (ID: 1930)
  Prédit: ' %='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.5798466801643372
    2. '%' → logprob: -1.3298466205596924
    3. ' %' → logprob: -2.5798466205596924
    4. '%=' → logprob: -3.4548466205596924
    5. '=' → logprob: -4.0798468589782715
    6. ' sum' → logprob: -4.8298468589782715
    7. ')' → logprob: -4.9548468589782715
    8. ' 
' → logprob: -5.0798468589782715
    9. '
' → logprob: -5.3298468589782715
    10. '<|end|>' → logprob: -5.4548468589782715

Token 866: ' éviter' (ID: 64013)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.10022931545972824
    2. ' sum' → logprob: -2.350229263305664
    3. '(sum' → logprob: -11.350229263305664
    4. 'summ' → logprob: -12.725229263305664
    5. '=sum' → logprob: -13.225229263305664
    6. '   ' → logprob: -13.600229263305664
    7. '           ' → logprob: -13.850229263305664
    8. '_sum' → logprob: -14.225229263305664
    9. '       ' → logprob: -14.850229263305664
    10. ' suma' → logprob: -14.975229263305664

Token 867: ' qu' (ID: 474)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.7301660776138306
    2. 'sum' → logprob: -0.8551660776138306
    3. 'mod' → logprob: -2.730165958404541
    4. ' mod' → logprob: -4.480165958404541
    5. '=' → logprob: -4.855165958404541
    6. '=sum' → logprob: -5.480165958404541
    7. '(sum' → logprob: -6.855165958404541
    8. '<|end|>' → logprob: -6.980165958404541
    9. ' %=' → logprob: -7.230165958404541
    10. ' =' → logprob: -7.355165958404541

Token 868: ''il' (ID: 14683)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.09606707096099854
    2. 'sum' → logprob: -2.596066951751709
    3. ' overflow' → logprob: -4.596066951751709
    4. '(sum' → logprob: -6.721066951751709
    5. ' que' → logprob: -6.846066951751709
    6. 'e' → logprob: -6.846066951751709
    7. '   ' → logprob: -6.971066951751709
    8. ' it' → logprob: -7.346066951751709
    9. 'er' → logprob: -7.971066951751709
    10. ' la' → logprob: -8.346067428588867

Token 869: ' ne' (ID: 453)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.6005815863609314
    2. ' >=' → logprob: -0.8505815863609314
    3. ' continue' → logprob: -5.350581645965576
    4. ' not' → logprob: -5.975581645965576
    5. ' exceed' → logprob: -6.100581645965576
    6. 'continue' → logprob: -6.350581645965576
    7. '<|end|>' → logprob: -6.350581645965576
    8. '>' → logprob: -6.725581645965576
    9. ' dépasse' → logprob: -6.725581645965576
    10. ' %=' → logprob: -6.850581645965576

Token 870: ' dev' (ID: 3947)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.764006495475769
    2. ' exceed' → logprob: -1.014006495475769
    3. ' >=' → logprob: -2.2640066146850586
    4. ' dépasse' → logprob: -3.2640066146850586
    5. 'ex' → logprob: -5.014006614685059
    6. ' exceeds' → logprob: -5.264006614685059
    7. 's' → logprob: -5.889006614685059
    8. ' dépass' → logprob: -6.014006614685059
    9. 'overflow' → logprob: -6.264006614685059
    10. '>' → logprob: -6.389006614685059

Token 871: 'ienne' (ID: 18387)
  Prédit: 'ienne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ienne' → logprob: -0.009271602146327496
    2. 'alue' → logprob: -6.009271621704102
    3. 'p' → logprob: -6.384271621704102
    4. 'ale' → logprob: -7.259271621704102
    5. 'ient' → logprob: -7.509271621704102
    6. 'aille' → logprob: -7.759271621704102
    7. 'iente' → logprob: -8.134271621704102
    8. 'enue' → logprob: -8.509271621704102
    9. '#' → logprob: -8.634271621704102
    10. '>' → logprob: -8.759271621704102

Token 872: ' trop' (ID: 14765)
  Prédit: ' trop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trop' → logprob: -0.00070397206582129
    2. 'sum' → logprob: -8.250703811645508
    3. 't' → logprob: -8.500703811645508
    4. ' sum' → logprob: -9.125703811645508
    5. 'too' → logprob: -9.750703811645508
    6. ' too' → logprob: -10.750703811645508
    7. 'mod' → logprob: -10.875703811645508
    8. ' mod' → logprob: -11.500703811645508
    9. '   ' → logprob: -12.875703811645508
    10. ' demasiado' → logprob: -12.875703811645508

Token 873: ' grand' (ID: 6363)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.18891632556915283
    2. ' sum' → logprob: -2.6889162063598633
    3. 'mod' → logprob: -2.9389162063598633
    4. '=' → logprob: -3.9389162063598633
    5. '%' → logprob: -4.188916206359863
    6. ' %=' → logprob: -4.438916206359863
    7. '%=' → logprob: -6.688916206359863
    8. ' mod' → logprob: -7.063916206359863
    9. '=sum' → logprob: -7.438916206359863
    10. '+=' → logprob: -7.688916206359863

Token 874: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20837965607643127
    2. '
' → logprob: -1.8333796262741089
    3. ' 
' → logprob: -4.333379745483398
    4. ' sum' → logprob: -5.208379745483398
    5. 'sum' → logprob: -5.833379745483398
    6. '            
' → logprob: -6.708379745483398
    7. '\n' → logprob: -6.958379745483398
    8. '    
' → logprob: -7.333379745483398
    9. '=' → logprob: -7.458379745483398
    10. '  
' → logprob: -7.458379745483398

Token 875: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00037132782745175064
    2. ' 
' → logprob: -9.125370979309082
    3. '
' → logprob: -9.250370979309082
    4. '=' → logprob: -9.625370979309082
    5. '            
' → logprob: -10.250370979309082
    6. ' =' → logprob: -10.875370979309082
    7. '    
' → logprob: -11.750370979309082
    8. '		' → logprob: -12.000370979309082
    9. '```' → logprob: -12.250370979309082
    10. '       ' → logprob: -12.250370979309082

Token 876: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' (adapté à ' sum') → logprob: -0.10024958848953247
    2. ' sum' → logprob: -2.3502495288848877
    3. '(sum' → logprob: -11.225249290466309
    4. '=sum' → logprob: -11.350249290466309
    5. '
' → logprob: -11.975249290466309
    6. '=' → logprob: -12.225249290466309
    7. ' 
' → logprob: -12.975249290466309
    8. '`' → logprob: -13.725249290466309
    9. '	sum' → logprob: -13.725249290466309
    10. '```' → logprob: -14.850249290466309

Token 877: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -3.128163257315464e-07
    2. '=' → logprob: -16.125
    3. ' B' → logprob: -16.625
    4. '%B' → logprob: -17.375
    5. '=B' → logprob: -17.75
    6. 'b' → logprob: -18.25
    7. '_B' → logprob: -18.25
    8. '	B' → logprob: -18.625
    9. 'sum' → logprob: -19.0
    10. '(B' → logprob: -19.125

Token 878: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.004316060803830624
    2. ' %=' → logprob: -5.5043158531188965
    3. '%' → logprob: -8.379316329956055
    4. '=' → logprob: -11.754316329956055
    5. '```' → logprob: -16.504316329956055
    6. ' %' → logprob: -17.754316329956055
    7. ')' → logprob: -17.879316329956055
    8. ' ' → logprob: -17.879316329956055
    9. '#' → logprob: -18.129316329956055
    10. '//=' → logprob: -18.254316329956055

Token 879: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.9361264946837764e-07
    2. ' mod' → logprob: -16.0
    3. '(mod' → logprob: -19.5
    4. '	mod' → logprob: -22.125
    5. 'MOD' → logprob: -25.5
    6. '7' → logprob: -25.625
    7. '100' → logprob: -25.75
    8. ' мод' → logprob: -26.125
    9. 'moder' → logprob: -26.125
    10. 'mods' → logprob: -26.375

Token 880: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013240472413599491
    2. 'print' → logprob: -4.763240337371826
    3. '   ' → logprob: -5.388240337371826
    4. '```' → logprob: -10.888240814208984
    5. '<|end|>' → logprob: -11.888240814208984
    6. ' print' → logprob: -12.013240814208984
    7. '        
' → logprob: -12.513240814208984
    8. '
' → logprob: -12.638240814208984
    9. '#' → logprob: -12.888240814208984
    10. '#print' → logprob: -13.763240814208984

Token 881: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08709026128053665
    2. '   ' → logprob: -2.712090253829956
    3. '<|end|>' → logprob: -4.462090492248535
    4. '
' → logprob: -6.087090492248535
    5. 'print' → logprob: -6.212090492248535
    6. '```' → logprob: -6.962090492248535
    7. '        
' → logprob: -9.837090492248535
    8. '    
' → logprob: -10.087090492248535
    9. '	print' → logprob: -10.837090492248535
    10. '	' → logprob: -11.087090492248535

Token 882: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.7968066206085496e-05
    2. '   ' → logprob: -10.750027656555176
    3. '       ' → logprob: -12.250027656555176
    4. ' print' → logprob: -13.750027656555176
    5. '```' → logprob: -15.000027656555176
    6. '	print' → logprob: -15.250027656555176
    7. '#print' → logprob: -17.750028610229492
    8. '#' (adapté à ' #') → logprob: -18.375028610229492
    9. '
' → logprob: -18.625028610229492
    10. 'printf' → logprob: -19.125028610229492

Token 883: ' Après' (ID: 47562)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. '   ' → logprob: -16.0
    3. ' print' → logprob: -17.75
    4. '#' → logprob: -18.0
    5. '       ' → logprob: -19.875
    6. '```' → logprob: -20.375
    7. '#print' → logprob: -21.125
    8. '	print' → logprob: -21.625
    9. '
' → logprob: -22.625
    10. 'printf' → logprob: -23.25

Token 884: ' avoir' (ID: 16595)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0001847062085289508
    2. '   ' → logprob: -9.000185012817383
    3. ' print' → logprob: -10.250185012817383
    4. '       ' → logprob: -10.875185012817383
    5. '```' → logprob: -12.750185012817383
    6. '#' → logprob: -13.375185012817383
    7. '	print' → logprob: -14.500185012817383
    8. '(print' → logprob: -14.625185012817383
    9. 'pr' → logprob: -14.750185012817383
    10. 'la' → logprob: -15.125185012817383

Token 885: ' parcour' (ID: 130642)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.5941604690160602e-05
    2. '   ' → logprob: -10.750025749206543
    3. ' print' → logprob: -12.375025749206543
    4. '       ' → logprob: -16.37502670288086
    5. '#' → logprob: -16.75002670288086
    6. '	print' → logprob: -17.37502670288086
    7. '#print' → logprob: -17.75002670288086
    8. '```' → logprob: -17.75002670288086
    9. '  ' → logprob: -19.25002670288086
    10. 'import' → logprob: -20.75002670288086

Token 886: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -3.1782583391759545e-05
    2. '   ' → logprob: -11.875031471252441
    3. '#' → logprob: -12.000031471252441
    4. 'ru' → logprob: -12.125031471252441
    5. 'sum' → logprob: -13.125031471252441
    6. 'ue' → logprob: -13.125031471252441
    7. '       ' → logprob: -13.125031471252441
    8. 'çu' → logprob: -13.875031471252441
    9. '```' → logprob: -14.000031471252441
    10. '(u' → logprob: -14.500031471252441

Token 887: ' tous' (ID: 10688)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.5676403641700745
    2. 'sum' → logprob: -1.1926403045654297
    3. 'range' → logprob: -2.3176403045654297
    4. 'print' → logprob: -4.31764030456543
    5. 'A' → logprob: -4.81764030456543
    6. '(sum' → logprob: -5.56764030456543
    7. 'for' → logprob: -6.44264030456543
    8. 'le' → logprob: -6.44264030456543
    9. '   ' → logprob: -6.94264030456543
    10. '#' → logprob: -7.44264030456543

Token 888: ' les' (ID: 1341)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.22611401975154877
    2. 'A' → logprob: -1.72611403465271
    3. '(sum' → logprob: -4.851113796234131
    4. '(B' → logprob: -5.101113796234131
    5. 'sum' → logprob: -5.101113796234131
    6. '(' → logprob: -6.601113796234131
    7. 'les' → logprob: -6.976113796234131
    8. 'la' → logprob: -7.476113796234131
    9. 'B' → logprob: -7.726113796234131
    10. '()' → logprob: -7.851113796234131

Token 889: ' éléments' (ID: 57375)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.024602625519037247
    2. 'a' → logprob: -3.8996026515960693
    3. 'elements' → logprob: -5.77460241317749
    4. ' éléments' → logprob: -7.39960241317749
    5. 'A' → logprob: -8.524602890014648
    6. 'él' → logprob: -9.649602890014648
    7. 'é' → logprob: -10.149602890014648
    8. 'elem' → logprob: -11.524602890014648
    9. 'element' → logprob: -12.399602890014648
    10. 'ele' → logprob: -12.399602890014648

Token 890: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6270861625671387
    2. 'print' → logprob: -1.0020861625671387
    3. '   ' → logprob: -2.8770861625671387
    4. ',' → logprob: -3.2520861625671387
    5. ' print' → logprob: -5.627086162567139
    6. '	print' → logprob: -9.502086639404297
    7. '<|end|>' → logprob: -11.002086639404297
    8. '(print' → logprob: -11.252086639404297
    9. ' ,' → logprob: -12.002086639404297
    10. '        
' → logprob: -12.252086639404297

Token 891: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005975929088890553
    2. ' print' → logprob: -7.7505974769592285
    3. '       ' → logprob: -8.750597953796387
    4. '   ' → logprob: -11.750597953796387
    5. '	print' → logprob: -14.500597953796387
    6. '```' → logprob: -16.12559700012207
    7. '#print' → logprob: -17.75059700012207
    8. '(print' → logprob: -18.87559700012207
    9. '  ' → logprob: -19.62559700012207
    10. 'printf' → logprob: -19.75059700012207

Token 892: ' la' (ID: 557)
  Prédit: '(sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sum' → logprob: -0.07889056205749512
    2. 'sum' → logprob: -2.578890562057495
    3. ' sum' → logprob: -15.203890800476074
    4. '(' → logprob: -15.578890800476074
    5. '=sum' → logprob: -15.828890800476074
    6. '	sum' → logprob: -16.953889846801758
    7. 'the' → logprob: -17.078889846801758
    8. 'la' → logprob: -17.203889846801758
    9. '   ' → logprob: -17.203889846801758
    10. 'le' → logprob: -17.578889846801758

Token 893: ' valeur' (ID: 41664)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.002621789462864399
    2. '(sum' → logprob: -6.002621650695801
    3. 'result' → logprob: -8.8776216506958
    4. ' sum' → logprob: -12.5026216506958
    5. 'int' → logprob: -13.7526216506958
    6. 'final' → logprob: -13.8776216506958
    7. 'print' → logprob: -15.3776216506958
    8. 's' → logprob: -15.7526216506958
    9. 'value' → logprob: -16.002622604370117
    10. 'res' → logprob: -16.377622604370117

Token 894: ' finale' (ID: 37759)
  Prédit: '(sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sum' → logprob: -0.2519432604312897
    2. 'sum' → logprob: -1.5019432306289673
    3. '   ' → logprob: -12.126943588256836
    4. '(' → logprob: -12.376943588256836
    5. 'of' → logprob: -13.251943588256836
    6. 'de' → logprob: -14.126943588256836
    7. 'print' → logprob: -14.251943588256836
    8. ' sum' → logprob: -14.501943588256836
    9. '=sum' → logprob: -15.126943588256836
    10. '       ' → logprob: -15.501943588256836

Token 895: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7254495620727539
    2. '(sum' → logprob: -0.9754495620727539
    3. 'sum' → logprob: -1.975449562072754
    4. '(print' → logprob: -8.725449562072754
    5. '       ' → logprob: -11.850449562072754
    6. ' sum' → logprob: -14.100449562072754
    7. '   ' → logprob: -14.600449562072754
    8. '(' → logprob: -15.350449562072754
    9. ' print' → logprob: -15.475449562072754
    10. '=sum' → logprob: -16.600448608398438

Token 896: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -2.1008713702030946e-06
    2. ' sum' → logprob: -13.250001907348633
    3. '(sum' → logprob: -15.500001907348633
    4. 'print' → logprob: -22.875001907348633
    5. 's' → logprob: -23.125001907348633
    6. '	sum' → logprob: -24.125001907348633
    7. '=sum' → logprob: -24.250001907348633
    8. 'summ' → logprob: -24.375001907348633
    9. '_sum' → logprob: -25.750001907348633
    10. '   ' → logprob: -26.375001907348633

Token 897: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -6.749814019713085e-06
    2. 'sum' → logprob: -12.250006675720215
    3. '(sum' → logprob: -13.375006675720215
    4. 'print' → logprob: -14.875006675720215
    5. 'b' → logprob: -19.37500762939453
    6. '_B' → logprob: -20.75000762939453
    7. ' B' → logprob: -21.50000762939453
    8. '=sum' → logprob: -21.87500762939453
    9. ' sum' → logprob: -22.12500762939453
    10. '(' → logprob: -22.87500762939453

Token 898: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04885997623205185
    2. '       ' → logprob: -3.0488600730895996
    3. '   ' → logprob: -8.298859596252441
    4. ' print' → logprob: -10.798859596252441
    5. '```' → logprob: -13.298859596252441
    6. '	print' → logprob: -13.423859596252441
    7. '(print' → logprob: -16.173860549926758
    8. '.print' → logprob: -17.048860549926758
    9. '           ' → logprob: -17.298860549926758
    10. '#print' → logprob: -17.798860549926758

Token 899: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03712918609380722
    2. '   ' → logprob: -3.7871291637420654
    3. '       ' → logprob: -4.2871294021606445
    4. ' print' → logprob: -10.287129402160645
    5. '```' → logprob: -11.912129402160645
    6. '	print' → logprob: -12.912129402160645
    7. '(print' → logprob: -16.537128448486328
    8. '           ' → logprob: -17.412128448486328
    9. '``' → logprob: -18.162128448486328
    10. '.print' → logprob: -18.162128448486328

Token 900: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -5.512236498361744e-07
    2. ' print' → logprob: -15.000000953674316
    3. '   ' → logprob: -16.5
    4. '	print' → logprob: -19.0
    5. '```' → logprob: -21.0
    6. '       ' → logprob: -21.5
    7. 'pr' → logprob: -23.875
    8. 'printf' → logprob: -24.875
    9. '.print' → logprob: -24.875
    10. '(print' → logprob: -25.125

Token 901: '(sum' (ID: 45528)
  Prédit: '(sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sum' → logprob: -0.00015991552209015936
    2. '(' → logprob: -8.750160217285156
    3. 'sum' → logprob: -13.625160217285156
    4. ' (' → logprob: -16.375160217285156
    5. '()' → logprob: -17.250160217285156
    6. '((' → logprob: -18.125160217285156
    7. ' sum' → logprob: -18.375160217285156
    8. '(round' → logprob: -18.750160217285156
    9. ',sum' → logprob: -18.750160217285156
    10. '(s' → logprob: -18.875160217285156

Token 902: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: 0.0
    2. ')' → logprob: -18.375
    3. 'b' → logprob: -19.125
    4. '_B' → logprob: -19.125
    5. '(B' → logprob: -19.25
    6. ' B' → logprob: -19.25
    7. '(' → logprob: -20.25
    8. '(sum' → logprob: -20.375
    9. '	B' → logprob: -21.125
    10. 'Β' → logprob: -21.125

Token 903: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1041145626222715e-05
    2. ' )' → logprob: -12.000011444091797
    3. '())' → logprob: -13.500011444091797
    4. '()' → logprob: -13.750011444091797
    5. ')
' → logprob: -13.875011444091797
    6. '   ' → logprob: -14.000011444091797
    7. ')`' → logprob: -15.375011444091797
    8. '))' → logprob: -16.500011444091797
    9. ')}' → logprob: -16.500011444091797
    10. '`)' → logprob: -16.625011444091797

Token 904: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 905: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 906: ' Retour' (ID: 146830)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 907: 'ne' (ID: 611)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.5552968978881836
    2. '<|end|>' → logprob: -1.3052968978881836
    3. ' ' → logprob: -2.0552968978881836
    4. 'None' → logprob: -3.6802968978881836
    5. ' 
' → logprob: -7.930296897888184
    6. ' return' → logprob: -8.555296897888184
    7. '<|end|>' → logprob: -8.930296897888184
    8. '(None' → logprob: -8.930296897888184
    9. '    ' → logprob: -9.180296897888184
    10. '   ' → logprob: -9.305296897888184

Token 908: ' ' (ID: 220)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.04582282528281212
    2. '<|end|>' → logprob: -3.420822858810425
    3. ' None' → logprob: -4.545822620391846
    4. '0' → logprob: -6.795822620391846
    5. '
' → logprob: -8.670823097229004
    6. '(None' → logprob: -9.795823097229004
    7. '```' → logprob: -10.295823097229004
    8. '_None' → logprob: -10.295823097229004
    9. 'return' → logprob: -10.545823097229004
    10. '<|end|>' → logprob: -11.545823097229004

Token 909: '0' (ID: 15)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.001265355502255261
    2. '0' → logprob: -6.751265525817871
    3. ' None' → logprob: -9.376265525817871
    4. 'return' → logprob: -11.876265525817871
    5. '<|end|>' → logprob: -14.001265525817871
    6. 'False' → logprob: -14.376265525817871
    7. '```' → logprob: -14.376265525817871
    8. 'True' → logprob: -14.501265525817871
    9. '(None' → logprob: -14.626265525817871
    10. '_None' → logprob: -15.001265525817871

Token 910: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 911: 'pas' (ID: 21122)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6720155477523804
    2. ')' → logprob: -1.7970155477523804
    3. '<|end|>' → logprob: -1.7970155477523804
    4. 'return' → logprob: -1.9220155477523804
    5. ')return' → logprob: -5.54701566696167
    6. '   ' → logprob: -5.67201566696167
    7. ' return' → logprob: -5.79701566696167
    8. '
' → logprob: -7.79701566696167
    9. '<|end|>' → logprob: -8.922015190124512
    10. '	return' → logprob: -8.922015190124512

Token 912: ' utile' (ID: 68237)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 913: ' ici' (ID: 27994)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 914: ' mais' (ID: 2899)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44970616698265076
    2. '<|end|>' → logprob: -1.1997061967849731
    3. '
' → logprob: -2.8247060775756836
    4. '\n' → logprob: -7.949706077575684
    5. ' )' → logprob: -8.074706077575684
    6. '   ' → logprob: -8.324706077575684
    7. ')return' → logprob: -8.449706077575684
    8. '<|end|>' → logprob: -8.949706077575684
    9. '```' → logprob: -9.699706077575684
    10. '    
' → logprob: -9.699706077575684

Token 915: ' inclus' (ID: 11891)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 916: ' tout' (ID: 5501)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 917: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04691990092396736
    2. '<|end|>' → logprob: -3.796919822692871
    3. ' )' → logprob: -4.296919822692871
    4. '   ' → logprob: -6.171919822692871
    5. '<|end|>' → logprob: -6.546919822692871
    6. 'return' → logprob: -6.546919822692871
    7. ')return' → logprob: -6.671919822692871
    8. ' return' → logprob: -6.921919822692871
    9. ')
' → logprob: -7.796919822692871
    10. '()' → logprob: -7.921919822692871

Token 918: ' même' (ID: 9679)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8661024570465088
    2. 'code' → logprob: -1.8661024570465088
    3. 'la' → logprob: -2.241102457046509
    4. 'tout' → logprob: -2.991102457046509
    5. 'suite' → logprob: -3.116102457046509
    6. ')' → logprob: -3.366102457046509
    7. 'fin' → logprob: -3.616102457046509
    8. 'f' → logprob: -3.991102457046509
    9. 't' → logprob: -4.11610221862793
    10. 'if' → logprob: -4.86610221862793

Token 919: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0034619139041751623
    2. '<|end|>' → logprob: -6.378461837768555
    3. ')return' → logprob: -7.003461837768555
    4. '   ' → logprob: -8.003461837768555
    5. ')
' → logprob: -8.628461837768555
    6. ' )' → logprob: -8.753461837768555
    7. 'return' → logprob: -9.628461837768555
    8. '
' → logprob: -10.628461837768555
    9. ' return' → logprob: -11.003461837768555
    10. '()' → logprob: -11.503461837768555

Token 920: ' bonne' (ID: 24450)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3100612461566925
    2. '0' → logprob: -1.6850612163543701
    3. ')' → logprob: -2.93506121635437
    4. ' return' → logprob: -4.185061454772949
    5. ' ' → logprob: -5.060061454772949
    6. ' )' → logprob: -6.185061454772949
    7. 'return' → logprob: -6.435061454772949
    8. '<|end|>' → logprob: -7.435061454772949
    9. '\n' → logprob: -7.935061454772949
    10. ' 
' → logprob: -8.06006145477295

Token 921: ' pratique' (ID: 42780)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.656143069267273
    2. ' practice' → logprob: -1.156143069267273
    3. ')' → logprob: -2.6561431884765625
    4. ' )' → logprob: -3.1561431884765625
    5. 'return' → logprob: -4.2811431884765625
    6. ' ' → logprob: -4.6561431884765625
    7. '_return' → logprob: -5.1561431884765625
    8. '<|end|>' → logprob: -5.1561431884765625
    9. 'practice' → logprob: -5.5311431884765625
    10. ' token' → logprob: -5.6561431884765625

Token 922: ' dans' (ID: 2671)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07525447756052017
    2. '<|end|>' → logprob: -2.700254440307617
    3. ')return' → logprob: -6.325254440307617
    4. '   ' → logprob: -6.700254440307617
    5. '
' → logprob: -7.200254440307617
    6. '()' → logprob: -7.825254440307617
    7. ' )' → logprob: -8.075254440307617
    8. '<|end|>' → logprob: -8.450254440307617
    9. 'return' → logprob: -8.950254440307617
    10. '	return' → logprob: -9.575254440307617

Token 923: ' certaines' (ID: 46662)
  Prédit: 'python'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'python' → logprob: -0.5084654092788696
    2. 'Python' → logprob: -1.1334654092788696
    3. ' Python' → logprob: -3.00846529006958
    4. ')' → logprob: -5.25846529006958
    5. 'code' → logprob: -5.25846529006958
    6. 'def' → logprob: -5.38346529006958
    7. ' python' → logprob: -5.63346529006958
    8. ' )' → logprob: -6.00846529006958
    9. ' code' → logprob: -6.75846529006958
    10. 'ython' → logprob: -7.38346529006958

Token 924: ' fonctions' (ID: 87283)
  Prédit: 'python'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'python' → logprob: -0.33968669176101685
    2. 'Python' → logprob: -2.589686632156372
    3. ' Python' → logprob: -2.714686632156372
    4. 'def' → logprob: -3.589686632156372
    5. ' python' → logprob: -3.589686632156372
    6. ' cases' → logprob: -3.714686632156372
    7. ' situations' → logprob: -4.839686870574951
    8. 'cases' → logprob: -4.839686870574951
    9. 'program' → logprob: -4.839686870574951
    10. ' scripts' → logprob: -5.089686870574951

Token 925: ' principales' (ID: 37058)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08393119275569916
    2. '()' → logprob: -2.7089312076568604
    3. '<|end|>' → logprob: -4.708930969238281
    4. '())' → logprob: -6.083930969238281
    5. '   ' → logprob: -6.708930969238281
    6. '()
' → logprob: -7.958930969238281
    7. ')return' → logprob: -8.333930969238281
    8. ')
' → logprob: -8.458930969238281
    9. ' )' → logprob: -8.958930969238281
    10. '<|end|>' → logprob: -9.708930969238281

Token 926: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017509164288640022
    2. '<|end|>' → logprob: -4.3925089836120605
    3. '   ' → logprob: -6.0175089836120605
    4. ')
' → logprob: -7.0175089836120605
    5. ')return' → logprob: -7.0175089836120605
    6. '
' → logprob: -8.142509460449219
    7. '()' → logprob: -8.892509460449219
    8. 'return' → logprob: -9.517509460449219
    9. '<|end|>' → logprob: -10.142509460449219
    10. ' return' → logprob: -10.267509460449219

Token 927: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23014208674430847
    2. '<|end|>' → logprob: -2.355142116546631
    3. '	return' → logprob: -2.480142116546631
    4. 'return' → logprob: -4.980142116546631
    5. '
' → logprob: -4.980142116546631
    6. ' return' → logprob: -5.355142116546631
    7. '```' → logprob: -5.980142116546631
    8. '\' → logprob: -6.230142116546631
    9. '    
' → logprob: -6.730142116546631
    10. ' ' → logprob: -7.480142116546631

Token 928: ' return' (ID: 622)
  Prédit: '	return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	return' → logprob: -0.08356491476297379
    2. '   ' → logprob: -2.8335649967193604
    3. '\t' → logprob: -4.583564758300781
    4. 'return' (adapté à ' return') → logprob: -4.833564758300781
    5. ' return' → logprob: -6.708564758300781
    6. '\' → logprob: -7.083564758300781
    7. '<|end|>' → logprob: -8.208564758300781
    8. '```' → logprob: -8.958564758300781
    9. '\x' → logprob: -9.208564758300781
    10. '0' → logprob: -9.208564758300781

Token 929: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.615255839889869e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -22.25009536743164
    4. ' ' → logprob: -22.87509536743164
    5. ' ' → logprob: -24.12509536743164
    6. '	' → logprob: -24.12509536743164
    7. '۰' → logprob: -24.50009536743164
    8. '<|end|>' → logprob: -25.00009536743164
    9. '000' → logprob: -25.12509536743164
    10. '  ' → logprob: -25.12509536743164

Token 930: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -19.875
    3. '۰' → logprob: -23.875
    4. ' ' → logprob: -25.75
    5. '```' → logprob: -26.0
    6. '०' → logprob: -26.25
    7. '   ' → logprob: -26.375
    8. '000' → logprob: -26.375
    9. 'None' → logprob: -26.5
    10. '০' → logprob: -26.5

Token 931: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 932: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 933: ' Ceci' (ID: 144699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 934: ' vér' (ID: 42524)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 935: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.02676929347217083
    2. 'if' → logprob: -3.6517693996429443
    3. 'ify' → logprob: -8.526769638061523
    4. 'ifier' → logprob: -8.901769638061523
    5. 'ifiez' → logprob: -9.776769638061523
    6. 'ification' → logprob: -10.651769638061523
    7. 'ifi' → logprob: -11.026769638061523
    8. '#' → logprob: -11.901769638061523
    9. 'ifies' → logprob: -11.901769638061523
    10. 'f' → logprob: -12.276769638061523

Token 936: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.37328386306762695
    2. ' if' → logprob: -1.248283863067627
    3. '__' → logprob: -3.873283863067627
    4. ' __' → logprob: -5.623283863067627
    5. '_' → logprob: -10.498283386230469
    6. '```' → logprob: -10.873283386230469
    7. '_if' → logprob: -10.998283386230469
    8. ' ' → logprob: -11.123283386230469
    9. '<|end|>' → logprob: -11.498283386230469
    10. ' ' → logprob: -11.623283386230469

Token 937: ' ce' (ID: 2357)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.018150994554162025
    2. ' __' → logprob: -4.018150806427002
    3. 'name' → logprob: -14.14315128326416
    4. '_name' → logprob: -16.143150329589844
    5. ' "__' → logprob: -16.518150329589844
    6. ''' → logprob: -16.768150329589844
    7. '.__' → logprob: -17.018150329589844
    8. '/__' → logprob: -17.143150329589844
    9. '___' → logprob: -17.643150329589844
    10. ' ' → logprob: -17.768150329589844

Token 938: ' fichier' (ID: 69637)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.09660222381353378
    2. ' __' → logprob: -2.471602201461792
    3. 'if' → logprob: -5.221602439880371
    4. ' ==' → logprob: -7.846602439880371
    5. '_name' → logprob: -7.971602439880371
    6. '_' → logprob: -8.471602439880371
    7. '.__' → logprob: -8.596602439880371
    8. 'name' → logprob: -8.596602439880371
    9. '(__' → logprob: -8.971602439880371
    10. '==' → logprob: -9.096602439880371

Token 939: ' est' (ID: 893)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.027887621894478798
    2. '.__' → logprob: -4.40288782119751
    3. ' __' → logprob: -4.90288782119751
    4. 'name' → logprob: -6.40288782119751
    5. '==' → logprob: -6.52788782119751
    6. ' ==' → logprob: -6.65288782119751
    7. 'if' → logprob: -6.77788782119751
    8. ' is' → logprob: -7.15288782119751
    9. '[' → logprob: -7.77788782119751
    10. '.py' → logprob: -7.77788782119751

Token 940: ' exécut' (ID: 165350)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0009576742304489017
    2. ' __' → logprob: -7.250957489013672
    3. '_name' → logprob: -9.375957489013672
    4. '"' → logprob: -9.875957489013672
    5. ''' → logprob: -10.125957489013672
    6. '_le' → logprob: -10.875957489013672
    7. '_' → logprob: -11.125957489013672
    8. 'name' → logprob: -11.625957489013672
    9. '___' → logprob: -11.625957489013672
    10. ' "__' → logprob: -11.875957489013672

Token 941: 'é' (ID: 377)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.020692652091383934
    2. ' en' → logprob: -4.520692825317383
    3. 'é' → logprob: -4.895692825317383
    4. ' __' → logprob: -6.770692825317383
    5. '_' → logprob: -8.145692825317383
    6. 'e' → logprob: -8.270692825317383
    7. '_en' → logprob: -9.145692825317383
    8. 'd' → logprob: -10.145692825317383
    9. 'if' → logprob: -10.520692825317383
    10. '_name' → logprob: -10.645692825317383

Token 942: ' en' (ID: 469)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.37029287219047546
    2. ' __' → logprob: -1.3702929019927979
    3. ' en' → logprob: -3.870292901992798
    4. ' as' → logprob: -4.870292663574219
    5. '_name' → logprob: -4.995292663574219
    6. ' if' → logprob: -5.495292663574219
    7. ' ==' → logprob: -6.370292663574219
    8. 'dans' → logprob: -6.370292663574219
    9. '_en' → logprob: -6.370292663574219
    10. 'if' → logprob: -6.745292663574219

Token 943: ' tant' (ID: 16235)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.008795027621090412
    2. ' __' → logprob: -4.883795261383057
    3. '```' → logprob: -6.883795261383057
    4. ''' → logprob: -9.758794784545898
    5. 'main' → logprob: -10.508794784545898
    6. 'name' → logprob: -10.883794784545898
    7. ' "__' → logprob: -11.258794784545898
    8. '"' → logprob: -11.258794784545898
    9. 'python' → logprob: -11.633794784545898
    10. '_main' → logprob: -12.633794784545898

Token 944: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.2465677708387375
    2. '__' → logprob: -2.246567726135254
    3. ' que' → logprob: -2.996567726135254
    4. 'qu' → logprob: -3.246567726135254
    5. ' qu' → logprob: -3.746567726135254
    6. '_qu' → logprob: -9.371567726135254
    7. '#' → logprob: -9.746567726135254
    8. '(qu' → logprob: -10.121567726135254
    9. 'Que' → logprob: -10.246567726135254
    10. '```' → logprob: -11.371567726135254

Token 945: ' script' (ID: 11713)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.020995503291487694
    2. 'principal' → logprob: -4.770995616912842
    3. 'main' → logprob: -4.895995616912842
    4. ''' → logprob: -5.770995616912842
    5. '"' → logprob: -6.770995616912842
    6. 'script' → logprob: -8.770995140075684
    7. 'le' → logprob: -9.270995140075684
    8. ' __' → logprob: -9.395995140075684
    9. '_main' → logprob: -9.645995140075684
    10. ' main' → logprob: -9.770995140075684

Token 946: ' principal' (ID: 10589)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.21048328280448914
    2. '
' → logprob: -1.7104833126068115
    3. ' if' → logprob: -5.210483074188232
    4. '\n' → logprob: -6.460483074188232
    5. '```' → logprob: -7.585483074188232
    6. '  
' → logprob: -7.835483074188232
    7. '

' → logprob: -7.960483074188232
    8. ':
' → logprob: -7.960483074188232
    9. ':' → logprob: -8.71048355102539
    10. ' 
' → logprob: -9.21048355102539

Token 947: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09172137081623077
    2. '
' → logprob: -2.466721296310425
    3. ' if' → logprob: -6.591721534729004
    4. ':
' → logprob: -7.091721534729004
    5. ':' → logprob: -8.591721534729004
    6. '\n' → logprob: -8.966721534729004
    7. '  
' → logprob: -9.341721534729004
    8. '```' → logprob: -9.591721534729004
    9. ' 
' → logprob: -10.341721534729004
    10. '

' → logprob: -10.591721534729004

Token 948: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -6.034592388459714e-06
    2. '```' → logprob: -12.625005722045898
    3. ' if' → logprob: -12.875005722045898
    4. '
' → logprob: -17.0000057220459
    5. '``' → logprob: -18.7500057220459
    6. '@if' → logprob: -21.2500057220459
    7. '	if' → logprob: -21.5000057220459
    8. '__' → logprob: -22.2500057220459
    9. 'If' → logprob: -22.3750057220459
    10. '#if' → logprob: -22.5000057220459

Token 949: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2523568272590637
    2. ' __' → logprob: -1.502356767654419
    3. ' ' → logprob: -8.25235652923584
    4. '_' → logprob: -9.25235652923584
    5. ' ' → logprob: -10.37735652923584
    6. '​' → logprob: -11.12735652923584
    7. '_name' → logprob: -11.87735652923584
    8. '___' → logprob: -12.12735652923584
    9. '﻿' → logprob: -12.62735652923584
    10. 'name' → logprob: -13.37735652923584

Token 950: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.9149976968765259
    2. '==' → logprob: -1.0399976968765259
    3. ' ==' → logprob: -1.4149976968765259
    4. '=='' → logprob: -6.664997577667236
    5. '=="' → logprob: -6.914997577667236
    6. '=' → logprob: -8.039998054504395
    7. '_' → logprob: -8.414998054504395
    8. ' __' → logprob: -8.664998054504395
    9. 'name' → logprob: -11.039998054504395
    10. ' =' → logprob: -11.414998054504395

Token 951: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.963691804325208e-05
    2. '==' → logprob: -10.500029563903809
    3. '_' → logprob: -14.625029563903809
    4. '__.__' → logprob: -14.625029563903809
    5. '=="' → logprob: -15.250029563903809
    6. '____' → logprob: -15.500029563903809
    7. '___' → logprob: -15.500029563903809
    8. '__('' → logprob: -16.000030517578125
    9. '__
' → logprob: -16.125030517578125
    10. ' ==' → logprob: -16.250030517578125

Token 952: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4842875599861145
    2. '__' → logprob: -0.9842875599861145
    3. ' ==' → logprob: -4.859287738800049
    4. '=="' → logprob: -6.734287738800049
    5. '=='' → logprob: -7.234287738800049
    6. '=' → logprob: -7.859287738800049
    7. '===' → logprob: -9.98428726196289
    8. '==
' → logprob: -10.48428726196289
    9. '_' → logprob: -11.35928726196289
    10. '"' → logprob: -12.73428726196289

Token 953: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0297652967274189
    2. ''' → logprob: -3.5297653675079346
    3. ' "__' → logprob: -11.529765129089355
    4. '__' → logprob: -12.279765129089355
    5. ' '__' → logprob: -15.654765129089355
    6. ''"' → logprob: -16.779766082763672
    7. '"'' → logprob: -16.904766082763672
    8. '("__' → logprob: -16.904766082763672
    9. '"name' → logprob: -17.029766082763672
    10. '"user' → logprob: -17.404766082763672

Token 954: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: 0.0
    2. 'name' → logprob: -17.25
    3. ' main' → logprob: -17.875
    4. '_main' → logprob: -18.5
    5. '"' → logprob: -18.75
    6. 'm' → logprob: -19.375
    7. '	main' → logprob: -19.75
    8. '__' → logprob: -20.0
    9. 'ma' → logprob: -20.625
    10. 'maine' → logprob: -21.375

Token 955: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.00319304340519011
    2. '__' → logprob: -5.753192901611328
    3. '__':
' → logprob: -11.128192901611328
    4. '__:' → logprob: -14.378192901611328
    5. '__["' → logprob: -17.753192901611328
    6. '```' → logprob: -18.628192901611328
    7. '":' → logprob: -18.753192901611328
    8. '":
' → logprob: -18.878192901611328
    9. '__("' → logprob: -19.503192901611328
    10. '__",' → logprob: -19.753192901611328

Token 956: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09070436656475067
    2. '():
' → logprob: -3.7157044410705566
    3. '():' → logprob: -3.8407044410705566
    4. ':
' → logprob: -3.9657044410705566
    5. '   ' → logprob: -4.340704441070557
    6. '<|end|>' → logprob: -6.340704441070557
    7. 'solve' → logprob: -6.465704441070557
    8. ' :' → logprob: -6.715704441070557
    9. ' solve' → logprob: -6.715704441070557
    10. '()' → logprob: -7.340704441070557

Token 957: ' #' (ID: 1069)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -1.8624639324116288e-06
    2. ' solve' → logprob: -13.250001907348633
    3. '   ' → logprob: -19.250001907348633
    4. '.solve' → logprob: -19.625001907348633
    5. 'save' → logprob: -20.000001907348633
    6. 'resolve' → logprob: -20.625001907348633
    7. '  ' → logprob: -23.375001907348633
    8. 's' → logprob: -23.625001907348633
    9. '0' → logprob: -23.625001907348633
    10. 'validate' → logprob: -23.875001907348633

Token 958: ' App' (ID: 2583)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -4.320199877838604e-07
    2. ' solve' → logprob: -14.875
    3. 'sys' → logprob: -17.125
    4. 'resolve' → logprob: -18.875
    5. 'exit' → logprob: -18.875
    6. '   ' → logprob: -19.375
    7. 'save' → logprob: -20.5
    8. 's' → logprob: -21.75
    9. '.solve' → logprob: -22.125
    10. '  ' → logprob: -22.75

Token 959: 'elle' (ID: 3486)
  Prédit: 'el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.002199263544753194
    2. 'eler' → logprob: -6.252199172973633
    3. 'elé' → logprob: -9.002199172973633
    4. 'elle' → logprob: -9.127199172973633
    5. 'ell' → logprob: -11.377199172973633
    6. 'le' → logprob: -11.752199172973633
    7. '   ' → logprob: -12.752199172973633
    8. 'ely' → logprob: -12.752199172973633
    9. 'elve' → logprob: -12.752199172973633
    10. 'e' → logprob: -13.002199172973633

Token 960: ' la' (ID: 557)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -2.15310683415737e-05
    2. ' solve' → logprob: -10.750021934509277
    3. 'save' → logprob: -18.25002098083496
    4. '.solve' → logprob: -19.25002098083496
    5. '(s' → logprob: -20.50002098083496
    6. '   ' → logprob: -20.87502098083496
    7. 'solver' → logprob: -20.87502098083496
    8. 'resolve' → logprob: -21.12502098083496
    9. 'sol' → logprob: -21.25002098083496
    10. 's' → logprob: -22.25002098083496

Token 961: ' fonction' (ID: 17610)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -5.512236498361744e-07
    2. ' solve' → logprob: -14.500000953674316
    3. 'save' → logprob: -19.375
    4. 'def' → logprob: -19.75
    5. 'solution' → logprob: -21.375
    6. '.solve' → logprob: -21.375
    7. 'solver' → logprob: -21.875
    8. 'resolve' → logprob: -23.0
    9. 'sol' → logprob: -24.625
    10. 's' → logprob: -25.25

Token 962: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.006716079078614712
    2. ' solve' → logprob: -5.006716251373291
    3. '(s' → logprob: -14.881715774536133
    4. 'save' → logprob: -15.631715774536133
    5. '.solve' → logprob: -15.631715774536133
    6. 's' → logprob: -17.006715774536133
    7. 'solver' → logprob: -17.381715774536133
    8. 'sol' → logprob: -18.006715774536133
    9. '()' → logprob: -18.256715774536133
    10. 'resolve' → logprob: -18.631715774536133

Token 963: ' pour' (ID: 1930)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.1041145626222715e-05
    2. '()
' → logprob: -11.625011444091797
    3. '()<' → logprob: -14.750011444091797
    4. '()\' → logprob: -14.750011444091797
    5. ' ()' → logprob: -15.125011444091797
    6. '()`' → logprob: -15.500011444091797
    7. '()">' → logprob: -15.875011444091797
    8. '()
' → logprob: -16.000011444091797
    9. '()>' → logprob: -16.250011444091797
    10. '()

' → logprob: -16.375011444091797

Token 964: ' ex' (ID: 513)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -4.739826181321405e-05
    2. ' solve' → logprob: -10.00004768371582
    3. '.solve' → logprob: -14.12504768371582
    4. '()' → logprob: -14.50004768371582
    5. '   ' → logprob: -15.00004768371582
    6. 'execute' → logprob: -16.12504768371582
    7. 'resolve' → logprob: -16.37504768371582
    8. 'run' → logprob: -16.62504768371582
    9. 'solver' → logprob: -16.75004768371582
    10. 'olve' → logprob: -17.50004768371582

Token 965: 'éc' (ID: 5675)
  Prédit: 'ecute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ecute' → logprob: -0.0019479141337797046
    2. 'ec' → logprob: -6.75194787979126
    3. 'éc' → logprob: -7.37694787979126
    4. 'ecut' → logprob: -8.876948356628418
    5. 'ecu' → logprob: -12.126948356628418
    6. 'e' → logprob: -12.751948356628418
    7. 'ece' → logprob: -13.376948356628418
    8. 'cute' → logprob: -14.376948356628418
    9. 'é' → logprob: -14.626948356628418
    10. 'ect' → logprob: -15.251948356628418

Token 966: 'uter' (ID: 23469)
  Prédit: 'uter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uter' → logprob: -0.0015058133285492659
    2. 'ute' → logprob: -7.0015058517456055
    3. 'ecut' → logprob: -8.001505851745605
    4. 'ut' → logprob: -9.126505851745605
    5. 'ecute' → logprob: -9.501505851745605
    6. 'cut' → logprob: -11.251505851745605
    7. 'éc' → logprob: -11.376505851745605
    8. 'user' → logprob: -11.501505851745605
    9. 'urer' → logprob: -12.501505851745605
    10. 'uc' → logprob: -12.626505851745605

Token 967: ' le' (ID: 505)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0060086678713560104
    2. 'solve' → logprob: -5.131008625030518
    3. '()
' → logprob: -9.631009101867676
    4. '()%' → logprob: -12.381009101867676
    5. '()\' → logprob: -12.881009101867676
    6. '();' → logprob: -13.131009101867676
    7. '()<' → logprob: -13.631009101867676
    8. '()?' → logprob: -14.006009101867676
    9. '())' → logprob: -14.256009101867676
    10. '()

' → logprob: -14.631009101867676

Token 968: ' programme' (ID: 18190)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.002532736863940954
    2. 'programme' → logprob: -6.627532958984375
    3. 'code' → logprob: -6.877532958984375
    4. 'program' → logprob: -9.377532958984375
    5. 'solution' → logprob: -10.127532958984375
    6. ' solve' → logprob: -10.877532958984375
    7. '```' → logprob: -12.002532958984375
    8. 'script' → logprob: -12.002532958984375
    9. 'pro' → logprob: -12.127532958984375
    10. 'main' → logprob: -12.752532958984375

Token 969: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05215824022889137
    2. '()
' → logprob: -3.3021583557128906
    3. 'solve' → logprob: -4.302158355712891
    4. '   ' → logprob: -8.42715835571289
    5. '();' → logprob: -8.92715835571289
    6. '.solve' → logprob: -10.05215835571289
    7. '():
' → logprob: -10.92715835571289
    8. '()\' → logprob: -11.17715835571289
    9. ' solve' → logprob: -11.42715835571289
    10. '()

' → logprob: -11.92715835571289

Token 970: '   ' (ID: 271)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.0680515319108963
    2. '   ' → logprob: -2.94305157661438
    3. '()' → logprob: -4.568051338195801
    4. '.solve' → logprob: -6.943051338195801
    5. ' solve' → logprob: -7.318051338195801
    6. '()
' → logprob: -7.568051338195801
    7. '():
' → logprob: -7.818051338195801
    8. '```' → logprob: -9.6930513381958
    9. '():' → logprob: -10.8180513381958
    10. '();' → logprob: -11.3180513381958

Token 971: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' (adapté à ' solve') → logprob: -4.320199877838604e-07
    2. ' solve' → logprob: -15.0
    3. '.solve' → logprob: -20.125
    4. 'resolve' → logprob: -21.75
    5. 'save' → logprob: -23.125
    6. '   ' → logprob: -24.5
    7. 'solver' → logprob: -25.5
    8. 's' → logprob: -26.25
    9. '```' → logprob: -26.25
    10. 'run' → logprob: -26.5

Token 972: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 970
Tokens correctement prédits (1ère position, stricte): 197
Tokens correctement prédits (1ère position, avec adaptation): 215
Tokens correctement prédits (top 10): 551
Précision stricte (1ère position): 20.31%
Précision adaptée (1ère position): 22.16%
Précision (top 10): 56.80%
================================================================================
