================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:28:50
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from bisect import bisect_left

def get_input():
    return sys.stdin.read()

def set_recursion_limit():
    sys.setrecursionlimit(10 ** 9)

def get_inf():
    return 1 << 60

def get_mod():
    return 1000000007

def parse_input_data(raw_data):
    data = list(map(int, raw_data.split()))
    N, D, A = data[0], data[1], data[2]
    XH = data[3:]
    return N, D, A, XH

def chunk_pairs(XH):
    length = len(XH)
    return [ (XH[i], XH[i+1]) for i in range(0, length, 2) ]

def ceil_division(h, A):
    return (h + A - 1) // A

def prepare_monster_list(XH_pairs, A, N):
    monster = [ None ] * N
    for i, (x, h) in enumerate(XH_pairs):
        monster[i] = (x, ceil_division(h, A))
    return monster

def sort_monsters(monster):
    monster.sort()
    return monster

def initialize_position_damage():
    return [], []

def initialize_indices():
    return 0, 0

def process_monsters(monster, D):
    pos, damage = initialize_position_damage()
    idx, cur_damage = initialize_indices()
    ans = 0
    for x, h in monster:
        idx, cur_damage = update_damage_index(pos, damage, idx, cur_damage, x)
        if needs_attack(h, cur_damage):
            attack_amt = h - cur_damage
            record_attack(pos, damage, x, D, attack_amt)
            ans, cur_damage = update_ans_cur_damage(ans, cur_damage, attack_amt)
    return ans

def update_damage_index(pos, damage, idx, cur_damage, x):
    while idx < len(pos) and pos[idx] < x:
        cur_damage -= damage[idx]
        idx += 1
    return idx, cur_damage

def needs_attack(h, cur_damage):
    return h > cur_damage

def record_attack(pos, damage, x, D, attack_amt):
    pos.append(x + 2 * D)
    damage.append(attack_amt)

def update_ans_cur_damage(ans, cur_damage, attack_amt):
    ans += attack_amt
    cur_damage += attack_amt
    return ans, cur_damage

def print_output(ans):
    print(ans)

def main():
    set_recursion_limit()
    INF = get_inf()
    MOD = get_mod()
    raw_data = get_input()
    N, D, A, XH = parse_input_data(raw_data)
    XH_pairs = chunk_pairs(XH)
    monster = prepare_monster_list(XH_pairs, A, N)
    monster = sort_monsters(monster)
    ans = process_monsters(monster, D)
    print_output(ans)

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6975938677787781
    2. '\n' → logprob: -0.8225938677787781
    3. '<|end|>' → logprob: -3.572593927383423
    4. '\' → logprob: -4.322593688964844
    5. 'newline' → logprob: -5.072593688964844
    6. 'import' → logprob: -5.322593688964844
    7. '<|end|>' → logprob: -5.947593688964844
    8. '```' → logprob: -6.572593688964844
    9. '' → logprob: -6.697593688964844
    10. '
' → logprob: -6.947593688964844

Token 4: ' bis' (ID: 7204)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.01821877807378769
    2. 'os' → logprob: -4.143218994140625
    3. ' Py' → logprob: -7.768218994140625
    4. ' pathlib' → logprob: -7.768218994140625
    5. ' collections' → logprob: -7.893218994140625
    6. ' math' → logprob: -8.768218994140625
    7. 'collections' → logprob: -9.018218994140625
    8. ' ' → logprob: -9.143218994140625
    9. ' typing' → logprob: -9.643218994140625
    10. ' datetime' → logprob: -9.768218994140625

Token 5: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -5.676981345459353e-06
    2. 'e' → logprob: -13.125005722045898
    3. 'ectl' → logprob: -13.500005722045898
    4. 'ector' → logprob: -14.375005722045898
    5. 'ected' → logprob: -14.375005722045898
    6. 'ec' → logprob: -15.375005722045898
    7. 'ection' → logprob: -15.500005722045898
    8. 'ecta' → logprob: -15.750005722045898
    9. '>' → logprob: -16.1250057220459
    10. 't' → logprob: -16.1250057220459

Token 6: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.033666446805000305
    2. 'import' → logprob: -3.4086663722991943
    3. '	import' → logprob: -11.283666610717773
    4. '_import' → logprob: -12.283666610717773
    5. ' ' → logprob: -13.533666610717773
    6. ' ' → logprob: -13.783666610717773
    7. ' importar' → logprob: -15.658666610717773
    8. 'ort' → logprob: -15.908666610717773
    9. '<|end|>' → logprob: -15.908666610717773
    10. ' imports' → logprob: -16.283666610717773

Token 7: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.4887765347957611
    2. ' bis' → logprob: -0.9887765645980835
    3. 'ins' → logprob: -4.238776683807373
    4. ' ins' → logprob: -8.738776206970215
    5. 'b' → logprob: -12.738776206970215
    6. '_ins' → logprob: -13.863776206970215
    7. 'is' → logprob: -14.238776206970215
    8. '*' → logprob: -14.488776206970215
    9. 'in' → logprob: -15.238776206970215
    10. '```' → logprob: -15.363776206970215

Token 8: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.00011212585377506912
    2. 'e' → logprob: -9.125112533569336
    3. 'ec' → logprob: -12.750112533569336
    4. 'ectl' → logprob: -16.000112533569336
    5. 'ected' → logprob: -17.125112533569336
    6. 'ects' → logprob: -18.000112533569336
    7. 'earch' → logprob: -18.125112533569336
    8. '```' → logprob: -18.125112533569336
    9. 'ecta' → logprob: -18.125112533569336
    10. 'sect' → logprob: -18.250112533569336

Token 9: '_left' (ID: 22189)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4511723518371582
    2. '(' → logprob: -1.5761723518371582
    3. '.' → logprob: -2.451172351837158
    4. ' ' → logprob: -3.326172351837158
    5. 'import' → logprob: -4.451172351837158
    6. ',' → logprob: -5.951172351837158
    7. '' → logprob: -5.951172351837158
    8. ' (' → logprob: -6.076172351837158
    9. '_left' → logprob: -6.326172351837158
    10. '```' → logprob: -6.451172351837158

Token 10: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.26221519708633423
    2. '
' → logprob: -1.6372151374816895
    3. 'import' → logprob: -5.0122151374816895
    4. '\' → logprob: -5.0122151374816895
    5. '\n' → logprob: -5.0122151374816895
    6. '```' → logprob: -5.0122151374816895
    7. '' → logprob: -6.5122151374816895
    8. ',' → logprob: -6.5122151374816895
    9. '


' → logprob: -6.7622151374816895
    10. '
' → logprob: -6.7622151374816895

Token 11: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6582282781600952
    2. '

' → logprob: -1.2832282781600952
    3. '
' → logprob: -3.2832283973693848
    4. '\' → logprob: -3.2832283973693848
    5. '```' → logprob: -3.4082283973693848
    6. '(' → logprob: -3.5332283973693848
    7. '\n' → logprob: -3.9082283973693848
    8. 'import' → logprob: -4.283228397369385
    9. '(
' → logprob: -4.908228397369385
    10. ',' → logprob: -5.283228397369385

Token 12: ' get' (ID: 717)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11872541904449463
    2. ' find' → logprob: -3.368725299835205
    3. '_' → logprob: -3.618725299835205
    4. ' binary' → logprob: -3.618725299835205
    5. ' space' → logprob: -6.118725299835205
    6. ' predict' → logprob: -6.243725299835205
    7. ' process' → logprob: -6.368725299835205
    8. '_find' → logprob: -6.493725299835205
    9. ' search' → logprob: -6.618725299835205
    10. ' _' → logprob: -6.618725299835205

Token 13: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.19662238657474518
    2. ' _' → logprob: -3.696622371673584
    3. '_max' → logprob: -3.696622371673584
    4. '_target' → logprob: -4.071622371673584
    5. '_cl' → logprob: -4.321622371673584
    6. '_index' → logprob: -4.571622371673584
    7. '_insert' → logprob: -4.696622371673584
    8. '_position' → logprob: -4.696622371673584
    9. '_next' → logprob: -5.196622371673584
    10. '_positions' → logprob: -5.196622371673584

Token 14: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.23407520353794098
    2. '(' → logprob: -1.6090751886367798
    3. '()' → logprob: -5.23407506942749
    4. '_' → logprob: -6.35907506942749
    5. '("("' → logprob: -8.484075546264648
    6. ' ():' → logprob: -8.984075546264648
    7. '(_' → logprob: -9.109075546264648
    8. '_line' → logprob: -9.109075546264648
    9. '_token' → logprob: -9.234075546264648
    10. '```' → logprob: -9.484075546264648

Token 15: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08719164878129959
    2. ' return' → logprob: -3.212191581726074
    3. '    
' → logprob: -4.087191581726074
    4. '\n' → logprob: -5.087191581726074
    5. '<|end|>' → logprob: -5.462191581726074
    6. ' 
' → logprob: -5.712191581726074
    7. 'return' → logprob: -5.962191581726074
    8. '    ' → logprob: -6.087191581726074
    9. '\' → logprob: -6.337191581726074
    10. ' ' → logprob: -6.587191581726074

Token 16: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6712946891784668
    2. 'return' (adapté à ' return') → logprob: -0.7962946891784668
    3. '   ' → logprob: -3.296294689178467
    4. ' line' → logprob: -7.921294689178467
    5. 'input' → logprob: -8.546295166015625
    6. ' input' → logprob: -9.046295166015625
    7. 'data' → logprob: -9.171295166015625
    8. '    
' → logprob: -9.671295166015625
    9. '    ' → logprob: -11.171295166015625
    10. ' data' → logprob: -11.171295166015625

Token 17: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.19474926590919495
    2. ' ' → logprob: -1.8197492361068726
    3. ' input' → logprob: -4.569749355316162
    4. 'sys' → logprob: -6.194749355316162
    5. 'input' → logprob: -6.819749355316162
    6. ' list' → logprob: -7.194749355316162
    7. ' int' → logprob: -8.069748878479004
    8. '  ' → logprob: -8.694748878479004
    9. ' []' → logprob: -9.819748878479004
    10. 'int' → logprob: -11.069748878479004

Token 18: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.04421308636665344
    2. '.' → logprob: -3.169213056564331
    3. '.argv' → logprob: -7.16921329498291
    4. '.stdout' → logprob: -8.16921329498291
    5. '.std' → logprob: -9.79421329498291
    6. '.readline' → logprob: -10.04421329498291
    7. ' .' → logprob: -10.29421329498291
    8. '.input' → logprob: -11.79421329498291
    9. 'stdin' → logprob: -12.41921329498291
    10. '.exit' → logprob: -12.91921329498291

Token 19: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.005866220686584711
    2. '.' → logprob: -5.380866050720215
    3. '.read' → logprob: -6.755866050720215
    4. '.readlines' → logprob: -9.755866050720215
    5. 'read' → logprob: -11.505866050720215
    6. '().' → logprob: -12.505866050720215
    7. ' readline' → logprob: -12.880866050720215
    8. ' .' → logprob: -13.505866050720215
    9. '```' → logprob: -13.630866050720215
    10. ')' → logprob: -13.630866050720215

Token 20: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03296275809407234
    2. '().' → logprob: -3.9079627990722656
    3. '(' → logprob: -4.407962799072266
    4. ' ()' → logprob: -9.907962799072266
    5. '()\' → logprob: -10.532962799072266
    6. '()

' → logprob: -10.657962799072266
    7. '()`' → logprob: -11.407962799072266
    8. '()+' → logprob: -11.782962799072266
    9. '（）' → logprob: -11.907962799072266
    10. '()
' → logprob: -11.907962799072266

Token 21: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04045622795820236
    2. '

' → logprob: -3.6654562950134277
    3. '
' → logprob: -4.540456295013428
    4. 'data' → logprob: -6.290456295013428
    5. '\n' → logprob: -7.540456295013428
    6. '\' → logprob: -7.915456295013428
    7. '


' → logprob: -9.04045581817627
    8. '```' → logprob: -9.04045581817627
    9. '()

' → logprob: -9.41545581817627
    10. '()' → logprob: -10.41545581817627

Token 22: ' set' (ID: 920)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.12925751507282257
    2. ' parse' → logprob: -2.7542574405670166
    3. ' split' → logprob: -4.004257678985596
    4. ' process' → logprob: -4.879257678985596
    5. ' get' → logprob: -5.004257678985596
    6. ' find' → logprob: -5.004257678985596
    7. ' sort' → logprob: -5.129257678985596
    8. '_' → logprob: -5.754257678985596
    9. ' solve' → logprob: -6.379257678985596
    10. ' tokenize' → logprob: -7.129257678985596

Token 23: '_rec' (ID: 35314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.18752670288085938
    2. '_input' → logprob: -2.3125267028808594
    3. '_output' → logprob: -2.9375267028808594
    4. '_stdout' → logprob: -5.312526702880859
    5. ' _' → logprob: -5.437526702880859
    6. '_data' → logprob: -6.187526702880859
    7. '_trace' → logprob: -6.312526702880859
    8. 'uptools' → logprob: -6.437526702880859
    9. '_value' → logprob: -7.937526702880859
    10. '_up' → logprob: -7.937526702880859

Token 24: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0001669485354796052
    2. 'ursive' → logprob: -8.875166893005371
    3. '_' → logprob: -11.250166893005371
    4. '(' → logprob: -12.000166893005371
    5. '```' → logprob: -13.500166893005371
    6. '[' → logprob: -14.000166893005371
    7. '**' → logprob: -14.250166893005371
    8. 'urs' → logprob: -14.375166893005371
    9. 'ur' → logprob: -14.500166893005371
    10. '   ' → logprob: -14.625166893005371

Token 25: '_limit' (ID: 34361)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.0001589618914294988
    2. '_limit' → logprob: -8.75015926361084
    3. ' limit' → logprob: -14.75015926361084
    4. 'lim' → logprob: -16.750158309936523
    5. '-limit' → logprob: -17.875158309936523
    6. 'depth' → logprob: -18.125158309936523
    7. 'Limit' → logprob: -18.250158309936523
    8. 'limits' → logprob: -18.750158309936523
    9. '(limit' → logprob: -18.750158309936523
    10. 'stack' → logprob: -19.000158309936523

Token 26: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002453662164043635
    2. ' (' → logprob: -9.125245094299316
    3. '():' → logprob: -9.750245094299316
    4. '(n' → logprob: -11.000245094299316
    5. '(limit' → logprob: -11.000245094299316
    6. '()' → logprob: -11.625245094299316
    7. '(depth' → logprob: -12.000245094299316
    8. '((' → logprob: -12.375245094299316
    9. '```' → logprob: -12.500245094299316
    10. '(:' → logprob: -12.625245094299316

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004584872629493475
    2. '(' → logprob: -5.629584789276123
    3. ':' → logprob: -7.504584789276123
    4. '():' → logprob: -8.504585266113281
    5. '    
' → logprob: -9.754585266113281
    6. '       ' → logprob: -10.129585266113281
    7. '    ' → logprob: -10.379585266113281
    8. '()' → logprob: -11.129585266113281
    9. '  ' → logprob: -11.254585266113281
    10. ' (' → logprob: -11.254585266113281

Token 28: ' sys' (ID: 12228)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00967287179082632
    2. 'import' → logprob: -5.00967264175415
    3. ' sys' → logprob: -6.13467264175415
    4. 'sys' (adapté à ' sys') → logprob: -7.50967264175415
    5. ' import' → logprob: -8.509673118591309
    6. '```' → logprob: -11.134673118591309
    7. ' ' → logprob: -11.509673118591309
    8. '	sys' → logprob: -13.384673118591309
    9. '  ' → logprob: -13.509673118591309
    10. '    
' → logprob: -13.509673118591309

Token 29: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.36186930537223816
    2. '.set' → logprob: -1.3618693351745605
    3. '.setdefault' → logprob: -3.1118693351745605
    4. '.argv' → logprob: -7.6118693351745605
    5. '.exit' → logprob: -7.9868693351745605
    6. ' .' → logprob: -8.111868858337402
    7. '.stdin' → logprob: -8.361868858337402
    8. '.max' → logprob: -8.486868858337402
    9. '.get' → logprob: -8.486868858337402
    10. '.stdout' → logprob: -9.111868858337402

Token 30: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.37669894099235535
    2. 'ursion' → logprob: -1.6266989707946777
    3. '_rec' → logprob: -2.3766989707946777
    4. 'set' → logprob: -4.376698970794678
    5. ' recursion' → logprob: -5.001698970794678
    6. '_limit' → logprob: -6.126698970794678
    7. 'limit' → logprob: -7.001698970794678
    8. '_' → logprob: -7.501698970794678
    9. '_set' → logprob: -8.62669849395752
    10. '_max' → logprob: -9.00169849395752

Token 31: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -1.1875571544806007e-05
    2. 'urs' → logprob: -11.625011444091797
    3. 'ur' → logprob: -13.750011444091797
    4. 'ursive' → logprob: -13.875011444091797
    5. 'usion' → logprob: -15.000011444091797
    6. 'ursor' → logprob: -15.125011444091797
    7. 'limit' → logprob: -15.500011444091797
    8. '_' → logprob: -17.750011444091797
    9. '_limit' → logprob: -18.125011444091797
    10. 'urse' → logprob: -18.375011444091797

Token 32: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.0005121642025187612
    2. '_limit' → logprob: -7.62551212310791
    3. 'imit' → logprob: -11.87551212310791
    4. 't' → logprob: -12.00051212310791
    5. 'lim' → logprob: -12.37551212310791
    6. 'ursion' → logprob: -12.75051212310791
    7. 'depth' → logprob: -14.37551212310791
    8. 'l' → logprob: -14.62551212310791
    9. ' limit' → logprob: -14.75051212310791
    10. '_' → logprob: -14.87551212310791

Token 33: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.8889261304575484e-06
    2. ' (' → logprob: -13.125003814697266
    3. '((' → logprob: -13.625003814697266
    4. '(int' → logprob: -15.375003814697266
    5. '()' → logprob: -15.875003814697266
    6. '(
' → logprob: -16.500003814697266
    7. '(

' → logprob: -16.625003814697266
    8. '('' → logprob: -16.875003814697266
    9. '40' → logprob: -17.875003814697266
    10. '100' → logprob: -18.250003814697266

Token 34: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.018178507685661316
    2. '100' → logprob: -4.018178462982178
    3. ' ' → logprob: -11.518178939819336
    4. '500' → logprob: -12.018178939819336
    5. '300' → logprob: -12.143178939819336
    6. '200' → logprob: -12.393178939819336
    7. '400' → logprob: -13.768178939819336
    8. '250' → logprob: -13.893178939819336
    9. '150' → logprob: -15.143178939819336
    10. '(' → logprob: -15.643178939819336

Token 35: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.9106950163841248
    2. '000' → logprob: -0.9106950163841248
    3. '00' → logprob: -1.7856950759887695
    4. '6' → logprob: -3.7856950759887695
    5. '7' → logprob: -5.4106950759887695
    6. '0' → logprob: -7.6606950759887695
    7. '8' → logprob: -9.78569507598877
    8. '06' → logprob: -10.28569507598877
    9. '07' → logprob: -10.41069507598877
    10. '007' → logprob: -10.66069507598877

Token 36: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.004102146718651056
    2. '9' → logprob: -5.5041022300720215
    3. '8' → logprob: -10.879101753234863
    4. '6' → logprob: -12.254101753234863
    5. '**' → logprob: -15.754101753234863
    6. '```' → logprob: -18.12910270690918
    7. '

' → logprob: -19.87910270690918
    8. '``' → logprob: -20.75410270690918
    9. ' ' → logprob: -21.00410270690918
    10. '７' → logprob: -21.37910270690918

Token 37: '9' (ID: 24)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.008650383912026882
    2. '9' → logprob: -4.758650302886963
    3. '8' → logprob: -10.633650779724121
    4. '6' → logprob: -11.383650779724121
    5. '**' → logprob: -15.383650779724121
    6. '```' → logprob: -16.758649826049805
    7. '

' → logprob: -17.758649826049805
    8. '``' → logprob: -18.508649826049805
    9. '}' → logprob: -19.008649826049805
    10. '​' → logprob: -19.133649826049805

Token 38: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.438573680294212e-06
    2. '))' → logprob: -12.750005722045898
    3. ')
' → logprob: -13.750005722045898
    4. ' )' → logprob: -14.125005722045898
    5. '   ' → logprob: -14.875005722045898
    6. ')))' → logprob: -16.0000057220459
    7. ')}' → logprob: -16.6250057220459
    8. '`)' → logprob: -16.8750057220459
    9. '```' → logprob: -17.8750057220459
    10. ')`' → logprob: -18.1250057220459

Token 39: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16275189816951752
    2. '
' → logprob: -2.0377519130706787
    3. '

' → logprob: -4.1627516746521
    4. '#' → logprob: -6.1627516746521
    5. '```' → logprob: -7.4127516746521
    6. 'd' → logprob: -7.5377516746521
    7. '\' → logprob: -7.7877516746521
    8. 'class' → logprob: -8.912752151489258
    9. '' → logprob: -9.162752151489258
    10. '
' → logprob: -9.537752151489258

Token 40: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.364053875207901
    2. ' solve' → logprob: -1.2390538454055786
    3. ' binary' → logprob: -5.489053726196289
    4. ' find' → logprob: -5.989053726196289
    5. ' dfs' → logprob: -5.989053726196289
    6. ' process' → logprob: -6.239053726196289
    7. ' max' → logprob: -7.114053726196289
    8. ' calculate' → logprob: -7.114053726196289
    9. 'solve' → logprob: -7.239053726196289
    10. ' compute' → logprob: -8.114053726196289

Token 41: '_inf' (ID: 107309)
  Prédit: '_data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_data' → logprob: -1.1608679294586182
    2. '_array' → logprob: -1.2858679294586182
    3. '_input' → logprob: -2.410867929458618
    4. '_output' → logprob: -2.785867929458618
    5. '_max' → logprob: -2.785867929458618
    6. '_' → logprob: -3.160867929458618
    7. '_numbers' → logprob: -3.910867929458618
    8. '_number' → logprob: -4.160867691040039
    9. '_indices' → logprob: -4.410867691040039
    10. '_n' → logprob: -4.785867691040039

Token 42: '():
' (ID: 8595)
  Prédit: 'inity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inity' → logprob: -0.017517713829874992
    2. '():' → logprob: -5.017517566680908
    3. 'ity' → logprob: -5.517517566680908
    4. 'inty' → logprob: -6.267517566680908
    5. '```' → logprob: -6.517517566680908
    6. '()' → logprob: -6.642517566680908
    7. 'inite' → logprob: -7.142517566680908
    8. 'finity' → logprob: -7.767517566680908
    9. 'init' → logprob: -8.892518043518066
    10. '():
' → logprob: -9.017518043518066

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021539688110351562
    2. 'return' → logprob: -4.521539688110352
    3. ' return' → logprob: -4.646539688110352
    4. ' float' → logprob: -7.771539688110352
    5. 'float' → logprob: -7.896539688110352
    6. 'inf' → logprob: -11.396539688110352
    7. 'import' → logprob: -11.896539688110352
    8. '	return' → logprob: -12.521539688110352
    9. '=float' → logprob: -12.646539688110352
    10. '   ' → logprob: -12.771539688110352

Token 44: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7048887610435486
    2. ' return' → logprob: -0.9548887610435486
    3. ' float' → logprob: -2.7048888206481934
    4. 'return' (adapté à ' return') → logprob: -3.3298888206481934
    5. 'float' → logprob: -4.579888820648193
    6. ' ' → logprob: -5.829888820648193
    7. '10' → logprob: -5.829888820648193
    8. '    ' → logprob: -7.079888820648193
    9. '  ' → logprob: -8.204888343811035
    10. 'int' → logprob: -8.454888343811035

Token 45: ' ' (ID: 220)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.6358686089515686
    2. 'float' → logprob: -0.7608686089515686
    3. '10' → logprob: -5.760868549346924
    4. ' ' → logprob: -9.510869026184082
    5. '1' → logprob: -11.010869026184082
    6. 'int' → logprob: -11.385869026184082
    7. ' int' → logprob: -12.510869026184082
    8. '   ' → logprob: -13.010869026184082
    9. '(float' → logprob: -13.010869026184082
    10. '	float' → logprob: -13.260869026184082

Token 46: '1' (ID: 16)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.006897355429828167
    2. '10' → logprob: -5.006897449493408
    3. ' float' → logprob: -9.13189697265625
    4. 'int' → logprob: -9.63189697265625
    5. '1' → logprob: -12.13189697265625
    6. '(float' → logprob: -14.38189697265625
    7. ' ' → logprob: -14.38189697265625
    8. '   ' → logprob: -14.50689697265625
    9. '100' → logprob: -15.00689697265625
    10. '	float' → logprob: -15.25689697265625

Token 47: ' <<' (ID: 2256)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '000' → logprob: -0.2900616526603699
    2. '0' → logprob: -2.5400617122650146
    3. '8' → logprob: -2.6650617122650146
    4. '018' → logprob: -3.2900617122650146
    5. '012' → logprob: -3.9150617122650146
    6. '08' → logprob: -4.0400614738464355
    7. '00' → logprob: -4.0400614738464355
    8. '09' → logprob: -5.2900614738464355
    9. '010' → logprob: -6.2900614738464355
    10. '008' → logprob: -6.4150614738464355

Token 48: ' ' (ID: 220)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '60' → logprob: -0.09176595509052277
    2. '63' → logprob: -2.591765880584717
    3. '62' → logprob: -4.466765880584717
    4. '61' → logprob: -6.716765880584717
    5. '30' → logprob: -10.091766357421875
    6. '31' → logprob: -10.341766357421875
    7. '64' → logprob: -11.591766357421875
    8. '50' → logprob: -11.591766357421875
    9. '59' → logprob: -12.466766357421875
    10. '55' → logprob: -13.966766357421875

Token 49: '60' (ID: 1910)
  Prédit: '60'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.028271272778511047
    2. '63' → logprob: -3.778271198272705
    3. '62' → logprob: -5.528271198272705
    4. '61' → logprob: -7.778271198272705
    5. '30' → logprob: -7.903271198272705
    6. '31' → logprob: -8.528271675109863
    7. '50' → logprob: -10.778271675109863
    8. '64' → logprob: -10.903271675109863
    9. '59' → logprob: -12.278271675109863
    10. '29' → logprob: -12.403271675109863

Token 50: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.197420358657837
    2. '\n' → logprob: -1.447420358657837
    3. 'def' → logprob: -1.447420358657837
    4. '\' → logprob: -2.197420358657837
    5. '

' → logprob: -2.572420358657837
    6. '#' → logprob: -4.447420120239258
    7. 'd' → logprob: -4.947420120239258
    8. '' → logprob: -5.322420120239258
    9. '```' → logprob: -5.572420120239258
    10. 'n' → logprob: -5.697420120239258

Token 51: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1750154048204422
    2. '
' → logprob: -2.425015449523926
    3. '

' → logprob: -2.800015449523926
    4. '```' → logprob: -5.925015449523926
    5. 'class' → logprob: -6.300015449523926
    6. '<|end|>' → logprob: -6.300015449523926
    7. '\' → logprob: -6.675015449523926
    8. '#' → logprob: -6.675015449523926
    9. '\n' → logprob: -7.300015449523926
    10. 'd' → logprob: -7.925015449523926

Token 52: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.19709154963493347
    2. ' solve' → logprob: -2.197091579437256
    3. ' max' → logprob: -3.447091579437256
    4. ' binary' → logprob: -3.697091579437256
    5. ' count' → logprob: -5.947091579437256
    6. ' find' → logprob: -6.572091579437256
    7. ' get' → logprob: -6.947091579437256
    8. ' is' → logprob: -6.947091579437256
    9. ' calculate' → logprob: -7.447091579437256
    10. ' min' → logprob: -7.572091579437256

Token 53: '_mod' (ID: 15325)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.8910307288169861
    2. '_mod' → logprob: -1.5160307884216309
    3. '_prime' → logprob: -2.516030788421631
    4. '_min' → logprob: -2.891030788421631
    5. '_input' → logprob: -2.891030788421631
    6. '_array' → logprob: -3.891030788421631
    7. '_dp' → logprob: -4.141030788421631
    8. '_answer' → logprob: -4.516030788421631
    9. '_int' → logprob: -4.891030788421631
    10. '_m' → logprob: -4.891030788421631

Token 54: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00013929695705883205
    2. '():
' → logprob: -9.500139236450195
    3. ' ():' → logprob: -10.375139236450195
    4. '()' → logprob: -10.375139236450195
    5. '<|end|>' → logprob: -15.375139236450195
    6. '(' → logprob: -15.500139236450195
    7. '()(' → logprob: -15.500139236450195
    8. ':' → logprob: -15.750139236450195
    9. '):' → logprob: -15.875139236450195
    10. '():

' → logprob: -16.000139236450195

Token 55: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.16961853206157684
    2. '()' → logprob: -2.294618606567383
    3. '():
' → logprob: -2.919618606567383
    4. '(' → logprob: -7.919618606567383
    5. '   ' → logprob: -8.419618606567383
    6. '()
' → logprob: -8.544618606567383
    7. ' ():' → logprob: -8.794618606567383
    8. ':' → logprob: -9.544618606567383
    9. 'return' → logprob: -9.669618606567383
    10. ' return' → logprob: -10.294618606567383

Token 56: ' return' (ID: 622)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.32678136229515076
    2. '100' → logprob: -1.5767813920974731
    3. ' ' → logprob: -2.7017812728881836
    4. 'return' (adapté à ' return') → logprob: -5.701781272888184
    5. ' return' → logprob: -6.576781272888184
    6. '   ' → logprob: -8.326781272888184
    7. '1' → logprob: -10.576781272888184
    8. '(' → logprob: -11.951781272888184
    9. '104' → logprob: -12.076781272888184
    10. '101' → logprob: -12.451781272888184

Token 57: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.35092097520828247
    2. '10' → logprob: -1.8509209156036377
    3. '100' → logprob: -1.9759209156036377
    4. '1' → logprob: -8.850920677185059
    5. '(' → logprob: -10.350920677185059
    6. '998' → logprob: -10.350920677185059
    7. ' (' → logprob: -11.475920677185059
    8. '109' → logprob: -11.975920677185059
    9. ' int' → logprob: -13.225920677185059
    10. '123' → logprob: -13.350920677185059

Token 58: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.2541577219963074
    2. '100' → logprob: -1.5041577816009521
    3. '(' → logprob: -6.379157543182373
    4. '998' → logprob: -7.629157543182373
    5. '1' → logprob: -10.754158020019531
    6. 'int' → logprob: -11.504158020019531
    7. ' ' → logprob: -11.629158020019531
    8. '(int' → logprob: -13.254158020019531
    9. '999' → logprob: -14.629158020019531
    10. ' (' → logprob: -15.254158020019531

Token 59: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.002264090348035097
    2. '9' → logprob: -6.127264022827148
    3. '007' → logprob: -9.877264022827148
    4. '00' → logprob: -12.127264022827148
    5. '0' → logprob: -12.252264022827148
    6. '7' → logprob: -12.502264022827148
    7. '07' → logprob: -12.627264022827148
    8. '09' → logprob: -12.627264022827148
    9. '009' → logprob: -12.627264022827148
    10. '003' → logprob: -13.252264022827148

Token 60: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.000600572966504842
    2. '7' → logprob: -7.625600337982178
    3. '007' → logprob: -9.250600814819336
    4. '19' → logprob: -11.750600814819336
    5. '0' → logprob: -12.500600814819336
    6. '9' → logprob: -13.500600814819336
    7. '```' → logprob: -13.625600814819336
    8. '+' → logprob: -14.000600814819336
    9. '07' → logprob: -14.250600814819336
    10. '00' → logprob: -15.375600814819336

Token 61: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -6.392202976712724e-06
    2. '9' → logprob: -12.000006675720215
    3. '+' → logprob: -16.3750057220459
    4. '07' → logprob: -17.5000057220459
    5. '```' → logprob: -18.1250057220459
    6. ' ' → logprob: -18.7500057220459
    7. '0' → logprob: -18.8750057220459
    8. '   ' → logprob: -20.5000057220459
    9. '79' → logprob: -21.0000057220459
    10. '10' → logprob: -21.2500057220459

Token 62: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4832755923271179
    2. '

' → logprob: -1.7332756519317627
    3. '\n' → logprob: -1.8582756519317627
    4. '\' → logprob: -3.9832756519317627
    5. 'def' → logprob: -4.608275413513184
    6. '<|end|>' → logprob: -4.608275413513184
    7. '#' → logprob: -5.608275413513184
    8. '' → logprob: -5.733275413513184
    9. '```' → logprob: -6.233275413513184
    10. 'newline' → logprob: -7.483275413513184

Token 63: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.048653677105903625
    2. '
' → logprob: -3.5486536026000977
    3. '

' → logprob: -4.673653602600098
    4. 'class' → logprob: -5.298653602600098
    5. '<|end|>' → logprob: -6.298653602600098
    6. '```' → logprob: -6.673653602600098
    7. '\' → logprob: -7.798653602600098
    8. '#' → logprob: -8.298653602600098
    9. '\n' → logprob: -8.423653602600098
    10. '<|end|>' → logprob: -9.048653602600098

Token 64: ' parse' (ID: 8420)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.00909702479839325
    2. ' solve' → logprob: -5.009097099304199
    3. ' binary' → logprob: -6.634097099304199
    4. ' max' → logprob: -8.0090970993042
    5. 'main' → logprob: -8.7590970993042
    6. ' factorial' → logprob: -9.0090970993042
    7. ' count' → logprob: -9.2590970993042
    8. ' input' → logprob: -10.2590970993042
    9. ' dfs' → logprob: -10.7590970993042
    10. ' read' → logprob: -10.7590970993042

Token 65: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.2004362791776657
    2. '_' → logprob: -1.9504362344741821
    3. '_line' → logprob: -3.8254363536834717
    4. '_code' → logprob: -5.075436115264893
    5. '(' → logprob: -5.825436115264893
    6. '_data' → logprob: -6.325436115264893
    7. '_tokens' → logprob: -7.325436115264893
    8. '_array' → logprob: -7.450436115264893
    9. '_token' → logprob: -7.450436115264893
    10. '_query' → logprob: -7.575436115264893

Token 66: '_data' (ID: 3537)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.07072822004556656
    2. '(' → logprob: -3.695728302001953
    3. '(line' → logprob: -3.695728302001953
    4. '(input' → logprob: -4.320728302001953
    5. '(data' → logprob: -5.945728302001953
    6. '(s' → logprob: -7.320728302001953
    7. '()' → logprob: -7.820728302001953
    8. '(text' → logprob: -8.320728302001953
    9. '(prompt' → logprob: -8.320728302001953
    10. '():
' → logprob: -8.570728302001953

Token 67: '(raw' (ID: 46707)
  Prédit: '(data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -0.4349006116390228
    2. '():' → logprob: -1.4349006414413452
    3. '(' → logprob: -2.5599005222320557
    4. '(line' → logprob: -3.8099005222320557
    5. '(input' → logprob: -4.434900760650635
    6. '(s' → logprob: -6.559900760650635
    7. '(code' → logprob: -8.309900283813477
    8. '(text' → logprob: -8.309900283813477
    9. '(raw' → logprob: -8.434900283813477
    10. '()' → logprob: -8.809900283813477

Token 68: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.10432901978492737
    2. '_input' → logprob: -2.4793291091918945
    3. '_' → logprob: -4.4793291091918945
    4. ')' → logprob: -6.1043291091918945
    5. '_text' → logprob: -7.3543291091918945
    6. ')_' → logprob: -7.6043291091918945
    7. '_raw' → logprob: -9.104329109191895
    8. ' _' → logprob: -9.229329109191895
    9. 'data' → logprob: -9.854329109191895
    10. '_s' → logprob: -9.979329109191895

Token 69: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0018966291099786758
    2. '):
' → logprob: -6.376896858215332
    3. ')' → logprob: -9.376896858215332
    4. ':' → logprob: -10.001896858215332
    5. ' ):' → logprob: -10.001896858215332
    6. ',' → logprob: -11.001896858215332
    7. '():' → logprob: -14.626896858215332
    8. '):
' → logprob: -14.626896858215332
    9. '):

' → logprob: -14.751896858215332
    10. ' :' → logprob: -15.376896858215332

Token 70: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000533732702024281
    2. '    
' → logprob: -8.625534057617188
    3. ' lines' → logprob: -9.125534057617188
    4. ' raw' → logprob: -9.375534057617188
    5. '    ' → logprob: -10.125534057617188
    6. 'data' → logprob: -10.750534057617188
    7. '(' → logprob: -11.500534057617188
    8. '(raw' → logprob: -11.625534057617188
    9. '```' → logprob: -11.625534057617188
    10. ' data' → logprob: -11.750534057617188

Token 71: ' data' (ID: 1238)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.26110130548477173
    2. ' raw' → logprob: -2.136101245880127
    3. ' return' → logprob: -3.261101245880127
    4. ' data' → logprob: -3.386101245880127
    5. 'data' (adapté à ' data') → logprob: -3.886101245880127
    6. '   ' → logprob: -4.886101245880127
    7. 'raw' → logprob: -4.886101245880127
    8. 'return' → logprob: -6.261101245880127
    9. 'lines' → logprob: -6.511101245880127
    10. '_lines' → logprob: -9.136101722717285

Token 72: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38693806529045105
    2. ' =' → logprob: -1.1369380950927734
    3. '.' → logprob: -10.761938095092773
    4. 'split' → logprob: -11.136938095092773
    5. '.split' → logprob: -11.636938095092773
    6. '_' → logprob: -12.386938095092773
    7. 's' → logprob: -13.011938095092773
    8. ')' → logprob: -13.011938095092773
    9. '.=' → logprob: -13.136938095092773
    10. '   ' → logprob: -13.261938095092773

Token 73: ' list' (ID: 1562)
  Prédit: ' raw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raw' → logprob: -0.03460228443145752
    2. 'raw' → logprob: -3.409602165222168
    3. ' list' → logprob: -7.034602165222168
    4. 'list' → logprob: -9.909602165222168
    5. '	raw' → logprob: -11.409602165222168
    6. '_raw' → logprob: -12.284602165222168
    7. '(raw' → logprob: -12.784602165222168
    8. '.raw' → logprob: -13.284602165222168
    9. ' map' → logprob: -13.534602165222168
    10. ' [' → logprob: -14.034602165222168

Token 74: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0005395700572989881
    2. '(' → logprob: -7.875539779663086
    3. '(raw' → logprob: -8.750539779663086
    4. '(filter' → logprob: -14.625539779663086
    5. '(int' → logprob: -15.500539779663086
    6. 'map' → logprob: -16.125539779663086
    7. ',map' → logprob: -16.750539779663086
    8. '(
' → logprob: -17.125539779663086
    9. '()' → logprob: -17.500539779663086
    10. '	map' → logprob: -17.750539779663086

Token 75: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0014083284186199307
    2. '(' → logprob: -6.751408100128174
    3. '(str' → logprob: -8.376408576965332
    4. 'int' → logprob: -12.501408576965332
    5. 'str' → logprob: -13.751408576965332
    6. ',int' → logprob: -14.001408576965332
    7. ' int' → logprob: -14.126408576965332
    8. '=int' → logprob: -14.751408576965332
    9. '	int' → logprob: -15.001408576965332
    10. ')' → logprob: -15.251408576965332

Token 76: ',' (ID: 11)
  Prédit: '(raw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(raw' → logprob: -0.03770403191447258
    2. ',' → logprob: -3.4127039909362793
    3. '(' → logprob: -5.787703990936279
    4. 'raw' → logprob: -7.662703990936279
    5. ' raw' → logprob: -7.912703990936279
    6. ' ,' → logprob: -9.912704467773438
    7. ' (' → logprob: -10.037704467773438
    8. '	raw' → logprob: -10.287704467773438
    9. ',(' → logprob: -12.412704467773438
    10. '),' → logprob: -12.412704467773438

Token 77: ' raw' (ID: 11428)
  Prédit: ' raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raw' → logprob: -0.02975662797689438
    2. 'raw' → logprob: -3.529756546020508
    3. '	raw' → logprob: -12.654756546020508
    4. '(raw' → logprob: -12.779756546020508
    5. '_raw' → logprob: -16.154756546020508
    6. ' ' → logprob: -17.654756546020508
    7. '/raw' → logprob: -17.904756546020508
    8. '.raw' → logprob: -18.029756546020508
    9. '   ' → logprob: -18.779756546020508
    10. ' raws' → logprob: -19.779756546020508

Token 78: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.00026169343618676066
    2. 'data' → logprob: -8.875261306762695
    3. 'split' → logprob: -9.375261306762695
    4. 'token' → logprob: -11.625261306762695
    5. '_' → logprob: -11.875261306762695
    6. '_tokens' → logprob: -12.375261306762695
    7. '_token' → logprob: -12.500261306762695
    8. '.split' → logprob: -12.500261306762695
    9. 'Data' → logprob: -12.625261306762695
    10. '   ' → logprob: -13.625261306762695

Token 79: '.split' (ID: 10347)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.6388912200927734
    2. '.split' → logprob: -1.1388912200927734
    3. '().' → logprob: -2.0138912200927734
    4. '.' → logprob: -4.138891220092773
    5. 'split' → logprob: -6.388891220092773
    6. 'strip' → logprob: -7.388891220092773
    7. ' .' → logprob: -8.513891220092773
    8. '   ' → logprob: -10.888891220092773
    9. '.replace' → logprob: -11.888891220092773
    10. '()' → logprob: -12.013891220092773

Token 80: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.04271288216114044
    2. '()' → logprob: -3.292712926864624
    3. '())' → logprob: -5.417712688446045
    4. '('' → logprob: -9.417713165283203
    5. '()))
' → logprob: -10.167713165283203
    6. '()));' → logprob: -10.292713165283203
    7. '())))' → logprob: -10.417713165283203
    8. '(' → logprob: -11.042713165283203
    9. '()))

' → logprob: -11.917713165283203
    10. '()),' → logprob: -12.667713165283203

Token 81: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09854365140199661
    2. '    
' → logprob: -2.473543643951416
    3. '<|end|>' → logprob: -5.598543643951416
    4. 'return' → logprob: -6.848543643951416
    5. '    ' → logprob: -6.848543643951416
    6. ')' → logprob: -7.473543643951416
    7. '[' → logprob: -7.598543643951416
    8. '
' → logprob: -7.973543643951416
    9. '	return' → logprob: -7.973543643951416
    10. '```' → logprob: -8.098544120788574

Token 82: ' N' (ID: 478)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006204884499311447
    2. ' return' → logprob: -5.506205081939697
    3. '    
' → logprob: -7.381205081939697
    4. '    ' → logprob: -7.756205081939697
    5. 'return' → logprob: -8.131204605102539
    6. ' n' → logprob: -8.131204605102539
    7. 'n' → logprob: -8.381204605102539
    8. '
' → logprob: -9.881204605102539
    9. '   ' → logprob: -10.631204605102539
    10. ' 
' → logprob: -10.881204605102539

Token 83: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005109833553433418
    2. ',' → logprob: -5.755109786987305
    3. '=' → logprob: -6.380109786987305
    4. ' ,' → logprob: -8.630109786987305
    5. ' ' → logprob: -10.255109786987305
    6. ' =
' → logprob: -11.755109786987305
    7. ' =)' → logprob: -12.380109786987305
    8. ')' → logprob: -12.880109786987305
    9. '  ' → logprob: -13.380109786987305
    10. '    ' → logprob: -14.130109786987305

Token 84: ' D' (ID: 415)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.5206171870231628
    2. 'data' → logprob: -1.6456172466278076
    3. 'M' → logprob: -2.3956172466278076
    4. 'K' → logprob: -2.5206172466278076
    5. ' data' → logprob: -4.2706170082092285
    6. ' Q' → logprob: -4.5206170082092285
    7. 'N' → logprob: -4.8956170082092285
    8. ' M' → logprob: -5.5206170082092285
    9. ' K' → logprob: -5.7706170082092285
    10. 'rest' → logprob: -7.1456170082092285

Token 85: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14516019821166992
    2. ',' → logprob: -2.14516019821167
    3. '=' → logprob: -4.02016019821167
    4. ' ,' → logprob: -9.645160675048828
    5. ' ' → logprob: -10.770160675048828
    6. '   ' → logprob: -11.145160675048828
    7. '  ' → logprob: -12.270160675048828
    8. ' =)' → logprob: -13.020160675048828
    9. ')' → logprob: -13.145160675048828
    10. '    ' → logprob: -13.332660675048828

Token 86: ' A' (ID: 355)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.8575846552848816
    2. 'M' → logprob: -1.7325847148895264
    3. 'Q' → logprob: -1.9825847148895264
    4. 'X' → logprob: -2.3575847148895264
    5. 'A' → logprob: -3.2325847148895264
    6. 'C' → logprob: -3.7325847148895264
    7. 'H' → logprob: -3.8575847148895264
    8. 'L' → logprob: -3.8575847148895264
    9. 'T' → logprob: -4.107584476470947
    10. ' K' → logprob: -4.482584476470947

Token 87: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14852716028690338
    2. '=' → logprob: -2.023527145385742
    3. ',' → logprob: -5.148527145385742
    4. ' ' → logprob: -11.148527145385742
    5. ')' → logprob: -13.023527145385742
    6. '   ' → logprob: -13.148527145385742
    7. ' ,' → logprob: -13.273527145385742
    8. '  ' → logprob: -13.398527145385742
    9. 's' → logprob: -14.461027145385742
    10. '```' → logprob: -14.586027145385742

Token 88: ' data' (ID: 1238)
  Prédit: ' data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.47408080101013184
    2. 'data' → logprob: -0.9740808010101318
    3. '   ' → logprob: -13.349081039428711
    4. ' ' → logprob: -13.474081039428711
    5. '	data' → logprob: -14.724081039428711
    6. '    ' → logprob: -16.09908103942871
    7. '(data' → logprob: -16.34908103942871
    8. '  ' → logprob: -16.84908103942871
    9. ')data' → logprob: -16.84908103942871
    10. '<data' → logprob: -17.59908103942871

Token 89: '[' (ID: 58)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2845440208911896
    2. ' =' → logprob: -1.6595439910888672
    3. '[' → logprob: -3.284543991088867
    4. '=' → logprob: -4.034543991088867
    5. ' ,' → logprob: -7.409543991088867
    6. ' ' → logprob: -7.659543991088867
    7. '[:]' → logprob: -7.784543991088867
    8. '[:' → logprob: -8.409543991088867
    9. '  ' → logprob: -8.784543991088867
    10. '<|end|>' → logprob: -9.284543991088867

Token 90: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.347765181795694e-05
    2. ' ' → logprob: -9.875053405761719
    3. ':' → logprob: -13.875053405761719
    4. '   ' → logprob: -14.250053405761719
    5. ' :' → logprob: -15.375053405761719
    6. '  ' → logprob: -16.50005340576172
    7. '2' → logprob: -17.50005340576172
    8. '1' → logprob: -17.87505340576172
    9. '[' → logprob: -18.87505340576172
    10. ']' → logprob: -18.87505340576172

Token 91: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2289508581161499
    2. '],' → logprob: -1.60395085811615
    3. ',' → logprob: -5.8539509773254395
    4. '1' → logprob: -7.6039509773254395
    5. ' ]' → logprob: -10.103950500488281
    6. '2' → logprob: -10.228950500488281
    7. ' ],' → logprob: -10.478950500488281
    8. ':' → logprob: -11.228950500488281
    9. '+' → logprob: -11.853950500488281
    10. '3' → logprob: -11.978950500488281

Token 92: ' data' (ID: 1238)
  Prédit: ' data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.003178782993927598
    2. 'data' → logprob: -5.753178596496582
    3. ' ' → logprob: -14.003178596496582
    4. '	data' → logprob: -15.878178596496582
    5. '<|end|>' → logprob: -17.0031795501709
    6. '<data' → logprob: -18.3781795501709
    7. ')data' → logprob: -18.6281795501709
    8. '(data' → logprob: -18.8781795501709
    9. '1' → logprob: -18.8781795501709
    10. ' ' → logprob: -18.8781795501709

Token 93: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0029347948729991913
    2. '1' → logprob: -5.87793493270874
    3. ',' → logprob: -9.502934455871582
    4. '2' → logprob: -10.252934455871582
    5. ' [' → logprob: -12.377934455871582
    6. '<|end|>' → logprob: -12.502934455871582
    7. '<|end|>' → logprob: -12.752934455871582
    8. '```' → logprob: -13.127934455871582
    9. '[
' → logprob: -13.377934455871582
    10. '[...,' → logprob: -14.127934455871582

Token 94: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004892880679108202
    2. ' ' → logprob: -8.125489234924316
    3. '2' → logprob: -8.625489234924316
    4. '   ' → logprob: -12.625489234924316
    5. ']' → logprob: -12.750489234924316
    6. '  ' → logprob: -13.250489234924316
    7. '```' → logprob: -13.375489234924316
    8. '3' → logprob: -13.500489234924316
    9. '     ' → logprob: -14.812989234924316
    10. '4' → logprob: -14.937989234924316

Token 95: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0008065330912359059
    2. ']' → logprob: -7.2508063316345215
    3. ' ],' → logprob: -9.50080680847168
    4. ',' → logprob: -11.50080680847168
    5. ':],' → logprob: -11.62580680847168
    6. ':' → logprob: -14.00080680847168
    7. '],
' → logprob: -15.25080680847168
    8. '2' → logprob: -15.37580680847168
    9. '),' → logprob: -15.62580680847168
    10. ' ,' → logprob: -15.75080680847168

Token 96: ' data' (ID: 1238)
  Prédit: ' data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.12693051993846893
    2. 'data' → logprob: -2.1269304752349854
    3. '	data' → logprob: -14.001930236816406
    4. ' ' → logprob: -14.126930236816406
    5. '<|end|>' → logprob: -14.626930236816406
    6. '2' → logprob: -16.876930236816406
    7. '   ' → logprob: -17.001930236816406
    8. '<data' → logprob: -17.126930236816406
    9. '  ' → logprob: -17.501930236816406
    10. '_data' → logprob: -17.501930236816406

Token 97: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2533480226993561
    2. '2' → logprob: -1.5033479928970337
    3. ']' → logprob: -6.878347873687744
    4. ' ' → logprob: -9.253348350524902
    5. '```' → logprob: -9.253348350524902
    6. ',' → logprob: -9.753348350524902
    7. '][' → logprob: -9.878348350524902
    8. '],' → logprob: -10.628348350524902
    9. ' [' → logprob: -11.003348350524902
    10. '(' → logprob: -11.628348350524902

Token 98: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.754368223482743e-05
    2. ' ' → logprob: -9.750067710876465
    3. '   ' → logprob: -12.750067710876465
    4. ']' → logprob: -13.437567710876465
    5. '  ' → logprob: -13.500067710876465
    6. '3' → logprob: -14.437567710876465
    7. '```' → logprob: -14.562567710876465
    8. '1' → logprob: -15.375067710876465
    9. '     ' → logprob: -15.812567710876465
    10. '0' → logprob: -15.937567710876465

Token 99: ']
' (ID: 1592)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.1018616184592247
    2. ']' → logprob: -2.3518617153167725
    3. ',' → logprob: -6.601861476898193
    4. ' ],' → logprob: -8.976861953735352
    5. '),' → logprob: -9.351861953735352
    6. ')' → logprob: -10.726861953735352
    7. 'def' → logprob: -11.351861953735352
    8. ' ]' → logprob: -11.476861953735352
    9. '},' → logprob: -11.726861953735352
    10. ']
' → logprob: -12.476861953735352

Token 100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3201373815536499
    2. 'positions' → logprob: -2.5701375007629395
    3. ',' → logprob: -2.8201375007629395
    4. 'points' → logprob: -3.1951375007629395
    5. 'targets' → logprob: -3.9451375007629395
    6. ' points' → logprob: -5.3201375007629395
    7. 'dist' → logprob: -5.4451375007629395
    8. ' positions' → logprob: -5.5701375007629395
    9. ' enemies' → logprob: -5.5701375007629395
    10. 'idx' → logprob: -5.5701375007629395

Token 101: ' X' (ID: 2127)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.9521244168281555
    2. 'mon' → logprob: -1.5771243572235107
    3. 'x' → logprob: -2.2021243572235107
    4. '   ' → logprob: -2.4521243572235107
    5. 'X' (adapté à ' X') → logprob: -3.4521243572235107
    6. ' positions' → logprob: -3.4521243572235107
    7. 'targets' → logprob: -3.8271243572235107
    8. 'points' → logprob: -4.07712459564209
    9. ' monsters' → logprob: -4.57712459564209
    10. 'h' → logprob: -4.82712459564209

Token 102: 'H' (ID: 39)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5838109850883484
    2. ',' → logprob: -0.8338109850883484
    3. 's' → logprob: -5.458810806274414
    4. '=' → logprob: -6.333810806274414
    5. ' ,' → logprob: -6.583810806274414
    6. '  ' → logprob: -8.708810806274414
    7. '```' → logprob: -9.958810806274414
    8. ' ' → logprob: -10.333810806274414
    9. '<|end|>' → logprob: -10.583810806274414
    10. '<|end|>' → logprob: -10.708810806274414

Token 103: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35901573300361633
    2. '=' → logprob: -1.234015703201294
    3. 's' → logprob: -5.234015941619873
    4. ',' → logprob: -6.234015941619873
    5. ' ' → logprob: -7.234015941619873
    6. '   ' → logprob: -7.484015941619873
    7. '  ' → logprob: -7.859015941619873
    8. '=[]' → logprob: -7.984015941619873
    9. '=data' → logprob: -8.234015464782715
    10. 'I' → logprob: -8.609015464782715

Token 104: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.20196452736854553
    2. ' data' → logprob: -1.7019644975662231
    3. '[data' → logprob: -7.826964378356934
    4. '[]' → logprob: -9.451964378356934
    5. '[' → logprob: -10.701964378356934
    6. '[(' → logprob: -10.826964378356934
    7. 'list' → logprob: -11.951964378356934
    8. ' [' → logprob: -11.951964378356934
    9. '   ' → logprob: -12.201964378356934
    10. '	data' → logprob: -12.951964378356934

Token 105: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.3358446166384965e-05
    2. '3' → logprob: -10.000053405761719
    3. '4' → logprob: -12.875053405761719
    4. 'from' → logprob: -14.000053405761719
    5. ' [' → logprob: -14.125053405761719
    6. '(' → logprob: -14.500053405761719
    7. '```' → logprob: -14.625053405761719
    8. '<|end|>' → logprob: -14.625053405761719
    9. 'def' → logprob: -14.750053405761719
    10. '[
' → logprob: -15.250053405761719

Token 106: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.60414821645827e-06
    2. ' ' → logprob: -12.625004768371582
    3. '   ' → logprob: -15.000004768371582
    4. '[' → logprob: -15.250004768371582
    5. '(' → logprob: -15.625004768371582
    6. '```' → logprob: -15.875004768371582
    7. '  ' → logprob: -16.000003814697266
    8. '３' → logprob: -16.625003814697266
    9. ':' → logprob: -17.000003814697266
    10. ']' → logprob: -17.125003814697266

Token 107: ':]
' (ID: 61598)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.06212420016527176
    2. ':' → logprob: -2.812124252319336
    3. ':],' → logprob: -8.812124252319336
    4. ':]

' → logprob: -13.062124252319336
    5. '::' → logprob: -13.312124252319336
    6. ' :]' → logprob: -13.812124252319336
    7. ']' → logprob: -14.062124252319336
    8. ':]
' → logprob: -14.562124252319336
    9. ' :' → logprob: -14.812124252319336
    10. ':,' → logprob: -14.937124252319336

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006057844031602144
    2. '
' → logprob: -5.5060577392578125
    3. '    
' → logprob: -7.1310577392578125
    4. 'return' → logprob: -7.2560577392578125
    5. '<|end|>' → logprob: -8.256057739257812
    6. ' return' → logprob: -8.756057739257812
    7. '	return' → logprob: -10.756057739257812
    8. '<|end|>' → logprob: -11.506057739257812
    9. '  
' → logprob: -12.256057739257812
    10. 'def' → logprob: -12.256057739257812

Token 109: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.8140608072280884
    2. '   ' → logprob: -1.0640608072280884
    3. ' return' → logprob: -2.439060688018799
    4. 'pairs' → logprob: -3.189060688018799
    5. 'positions' → logprob: -3.689060688018799
    6. 'points' → logprob: -3.939060688018799
    7. ' points' → logprob: -4.689060688018799
    8. ' pairs' → logprob: -4.814060688018799
    9. ' positions' → logprob: -5.064060688018799
    10. 'locations' → logprob: -5.939060688018799

Token 110: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.005501729901880026
    2. ' N' → logprob: -5.255501747131348
    3. '(N' → logprob: -8.380501747131348
    4. '   ' → logprob: -10.880501747131348
    5. ' (' → logprob: -11.005501747131348
    6. '[N' → logprob: -13.130501747131348
    7. ' ' → logprob: -14.505501747131348
    8. '	N' → logprob: -15.130501747131348
    9. '(' → logprob: -15.630501747131348
    10. '  ' → logprob: -16.00550079345703

Token 111: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.006006828509271e-05
    2. ',D' → logprob: -9.875080108642578
    3. ' ,' → logprob: -10.500080108642578
    4. ',N' → logprob: -14.250080108642578
    5. 'D' → logprob: -16.000080108642578
    6. ',X' → logprob: -16.000080108642578
    7. ',
' → logprob: -16.625080108642578
    8. 'N' → logprob: -17.875080108642578
    9. 'X' → logprob: -18.500080108642578
    10. ',d' → logprob: -18.625080108642578

Token 112: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.10020710527896881
    2. ' D' → logprob: -2.3502070903778076
    3. '   ' → logprob: -15.475207328796387
    4. ' ' → logprob: -15.725207328796387
    5. '	D' → logprob: -16.47520637512207
    6. '  ' → logprob: -17.22520637512207
    7. 'd' → logprob: -17.22520637512207
    8. 'X' → logprob: -17.85020637512207
    9. '    ' → logprob: -18.22520637512207
    10. ' ' → logprob: -18.66270637512207

Token 113: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03893197700381279
    2. 'A' → logprob: -3.7889320850372314
    3. ' A' → logprob: -5.038931846618652
    4. ' ,' → logprob: -5.288931846618652
    5. ',A' → logprob: -5.538931846618652
    6. ' ' → logprob: -10.288931846618652
    7. '   ' → logprob: -10.788931846618652
    8. '```' → logprob: -11.288931846618652
    9. '`,' → logprob: -11.788931846618652
    10. ',
' → logprob: -11.788931846618652

Token 114: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.06196970492601395
    2. ' A' → logprob: -2.811969757080078
    3. ' ' → logprob: -13.686969757080078
    4. 'X' → logprob: -14.811969757080078
    5. '   ' → logprob: -15.686969757080078
    6. '  ' → logprob: -16.061969757080078
    7. '	A' → logprob: -16.124469757080078
    8. ',' → logprob: -17.249469757080078
    9. ',A' → logprob: -17.436969757080078
    10. 'a' → logprob: -17.749469757080078

Token 115: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7087597846984863
    2. 'X' → logprob: -0.7087597846984863
    3. ',X' → logprob: -4.458759784698486
    4. '<|end|>' → logprob: -6.583759784698486
    5. '   ' → logprob: -6.833759784698486
    6. ' ,' → logprob: -7.333759784698486
    7. ' X' → logprob: -7.708759784698486
    8. 'def' → logprob: -9.833759307861328
    9. '	X' → logprob: -10.083759307861328
    10. ' ' → logprob: -10.333759307861328

Token 116: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.06196970492601395
    2. ' X' → logprob: -2.811969757080078
    3. ' ' → logprob: -14.186969757080078
    4. '   ' → logprob: -14.436969757080078
    5. '[' → logprob: -15.186969757080078
    6. '  ' → logprob: -15.811969757080078
    7. '[X' → logprob: -15.811969757080078
    8. '	X' → logprob: -16.186969757080078
    9. '    ' → logprob: -16.936969757080078
    10. ' [' → logprob: -17.186969757080078

Token 117: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.00014180023572407663
    2. 'X' → logprob: -8.875142097473145
    3. 'HX' → logprob: -13.625142097473145
    4. '<|end|>' → logprob: -16.250141143798828
    5. ' ' → logprob: -16.375141143798828
    6. '```' → logprob: -16.625141143798828
    7. 'Hs' → logprob: -16.625141143798828
    8. 'HJ' → logprob: -17.000141143798828
    9. '_H' → logprob: -17.000141143798828
    10. '  ' → logprob: -17.000141143798828

Token 118: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 119: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07622399181127548
    2. '
' → logprob: -2.8262240886688232
    3. '<|end|>' → logprob: -4.826223850250244
    4. '

' → logprob: -5.576223850250244
    5. '```' → logprob: -7.451223850250244
    6. '<|end|>' → logprob: -8.076224327087402
    7. '_' → logprob: -8.326224327087402
    8. '[' → logprob: -8.701224327087402
    9. '\' → logprob: -8.701224327087402
    10. '#' → logprob: -9.076224327087402

Token 120: ' chunk' (ID: 23958)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.19631807506084442
    2. ' solve' → logprob: -1.9463180303573608
    3. 'main' → logprob: -4.32131814956665
    4. 'solve' → logprob: -4.57131814956665
    5. ' process' → logprob: -6.07131814956665
    6. ' find' → logprob: -6.19631814956665
    7. ' max' → logprob: -6.32131814956665
    8. 'def' → logprob: -7.19631814956665
    9. ' binary' → logprob: -7.19631814956665
    10. ' calculate' → logprob: -7.44631814956665

Token 121: '_pairs' (ID: 90005)
  Prédit: '_data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.97306227684021
    2. '_list' → logprob: -1.09806227684021
    3. '_size' → logprob: -3.22306227684021
    4. '_split' → logprob: -3.22306227684021
    5. 'ed' → logprob: -3.34806227684021
    6. '_by' → logprob: -3.34806227684021
    7. '_(' → logprob: -3.59806227684021
    8. '_' → logprob: -3.72306227684021
    9. 'ify' → logprob: -3.84806227684021
    10. '_array' → logprob: -3.97306227684021

Token 122: '(X' (ID: 17061)
  Prédit: '(data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -0.731189489364624
    2. '(lst' → logprob: -0.981189489364624
    3. '(raw' → logprob: -2.731189489364624
    4. '(' → logprob: -3.106189489364624
    5. '(X' → logprob: -4.481189727783203
    6. '(chunk' → logprob: -5.231189727783203
    7. '(iter' → logprob: -5.231189727783203
    8. '(x' → logprob: -6.356189727783203
    9. '(list' → logprob: -6.356189727783203
    10. '(array' → logprob: -6.731189727783203

Token 123: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.001133189769461751
    2. ',' → logprob: -7.001132965087891
    3. '_H' → logprob: -9.00113296508789
    4. ',H' → logprob: -9.75113296508789
    5. ')' → logprob: -12.00113296508789
    6. '_,' → logprob: -12.12613296508789
    7. 'Hs' → logprob: -12.37613296508789
    8. ' ,' → logprob: -12.37613296508789
    9. ' H' → logprob: -12.75113296508789
    10. '_' → logprob: -12.87613296508789

Token 124: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.475472629070282
    2. ',' → logprob: -0.975472629070282
    3. '):
' → logprob: -7.225472450256348
    4. ' ,' → logprob: -8.350472450256348
    5. ' ):' → logprob: -8.600472450256348
    6. ')' → logprob: -8.850472450256348
    7. ',n' → logprob: -9.975472450256348
    8. '   ' → logprob: -11.600472450256348
    9. ':' → logprob: -11.725472450256348
    10. ',index' → logprob: -11.975472450256348

Token 125: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00024251631111837924
    2. ':' → logprob: -8.625242233276367
    3. 'for' → logprob: -10.625242233276367
    4. ' for' → logprob: -11.250242233276367
    5. ':
' → logprob: -11.250242233276367
    6. '   ' → logprob: -12.375242233276367
    7. '
' → logprob: -12.875242233276367
    8. '=' → logprob: -13.875242233276367
    9. 'n' → logprob: -14.250242233276367
    10. 'return' → logprob: -14.375242233276367

Token 126: ' length' (ID: 5517)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.49730098247528076
    2. '   ' → logprob: -1.2473009824752808
    3. 'for' → logprob: -2.4973011016845703
    4. ' return' → logprob: -4.12230110168457
    5. ' for' → logprob: -5.24730110168457
    6. '[(' → logprob: -7.37230110168457
    7. 'yield' → logprob: -9.87230110168457
    8. 'range' → logprob: -10.37230110168457
    9. 'pairs' → logprob: -11.12230110168457
    10. ' [(' → logprob: -11.49730110168457

Token 127: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12701578438282013
    2. '=' → logprob: -2.1270158290863037
    3. '(X' → logprob: -9.877016067504883
    4. 's' → logprob: -11.002016067504883
    5. '   ' → logprob: -11.877016067504883
    6. '_pairs' → logprob: -12.752016067504883
    7. '(' → logprob: -13.377016067504883
    8. '=len' → logprob: -13.377016067504883
    9. ' ' → logprob: -13.502016067504883
    10. ')' → logprob: -13.752016067504883

Token 128: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.029762065038084984
    2. ' len' → logprob: -3.529762029647827
    3. '(len' → logprob: -11.404762268066406
    4. '	len' → logprob: -15.529762268066406
    5. '[len' → logprob: -16.404762268066406
    6. '=len' → logprob: -16.654762268066406
    7. ' ' → logprob: -17.154762268066406
    8. ',len' → logprob: -18.029762268066406
    9. '   ' → logprob: -18.154762268066406
    10. '
' → logprob: -18.904762268066406

Token 129: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.0005574395763687789
    2. '(' → logprob: -7.5005574226379395
    3. 'X' → logprob: -12.375557899475098
    4. '(x' → logprob: -16.87555694580078
    5. 's' → logprob: -17.25055694580078
    6. ' (' → logprob: -17.75055694580078
    7. '(
' → logprob: -17.87555694580078
    8. '((' → logprob: -18.00055694580078
    9. '(Q' → logprob: -19.50055694580078
    10. '	X' → logprob: -19.62555694580078

Token 130: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.00201333686709404
    2. 'X' → logprob: -6.502013206481934
    3. ')' → logprob: -8.002013206481934
    4. '(X' → logprob: -9.752013206481934
    5. '(' → logprob: -10.502013206481934
    6. '(H' → logprob: -11.252013206481934
    7. ' ' → logprob: -11.252013206481934
    8. '_pairs' → logprob: -11.377013206481934
    9. '[' → logprob: -11.877013206481934
    10. 'def' → logprob: -12.252013206481934

Token 131: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22830596566200256
    2. ')
' → logprob: -1.6033059358596802
    3. ')//' → logprob: -6.103305816650391
    4. '//' → logprob: -8.47830581665039
    5. ' )' → logprob: -8.72830581665039
    6. '   ' → logprob: -9.10330581665039
    7. ' )
' → logprob: -9.47830581665039
    8. ' //' → logprob: -10.85330581665039
    9. ' ' → logprob: -10.97830581665039
    10. '()' → logprob: -11.22830581665039

Token 132: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04830809310078621
    2. ' for' → logprob: -3.7983081340789795
    3. 'for' → logprob: -3.7983081340789795
    4. 'pairs' → logprob: -6.5483078956604
    5. ' pairs' → logprob: -7.2983078956604
    6. 'chunks' → logprob: -9.298308372497559
    7. '    
' → logprob: -9.798308372497559
    8. '
' → logprob: -11.173308372497559
    9. 'result' → logprob: -11.298308372497559
    10. '_pairs' → logprob: -11.423308372497559

Token 133: ' return' (ID: 622)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.40264734625816345
    2. 'for' → logprob: -2.1526472568511963
    3. '   ' → logprob: -2.5276472568511963
    4. ' pairs' → logprob: -2.9026472568511963
    5. ' for' → logprob: -3.5276472568511963
    6. 'result' → logprob: -4.027647495269775
    7. 'chunks' → logprob: -4.777647495269775
    8. 'return' (adapté à ' return') → logprob: -4.902647495269775
    9. ' result' → logprob: -5.527647495269775
    10. 'res' → logprob: -5.652647495269775

Token 134: ' [' (ID: 723)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0015539054293185472
    2. ' [(' → logprob: -6.751554012298584
    3. '[X' → logprob: -8.376553535461426
    4. '[[' → logprob: -9.626553535461426
    5. '[((' → logprob: -9.751553535461426
    6. '[' → logprob: -10.876553535461426
    7. '(X' → logprob: -11.876553535461426
    8. '([(' → logprob: -13.501553535461426
    9. '((' → logprob: -14.001553535461426
    10. '[
' → logprob: -14.501553535461426

Token 135: ' (' (ID: 350)
  Prédit: '(X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.008012812584638596
    2. 'X' → logprob: -5.383012771606445
    3. ' (' → logprob: -5.883012771606445
    4. '(
' → logprob: -8.508012771606445
    5. '(' → logprob: -8.633012771606445
    6. '[X' → logprob: -9.008012771606445
    7. 'tuple' → logprob: -10.633012771606445
    8. '(x' → logprob: -10.883012771606445
    9. '(tuple' → logprob: -10.883012771606445
    10. '((' → logprob: -11.883012771606445

Token 136: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.000781634240411222
    2. ' X' → logprob: -7.375781536102295
    3. '(X' → logprob: -8.875782012939453
    4. '(' → logprob: -11.750782012939453
    5. ' (' → logprob: -12.625782012939453
    6. ')' → logprob: -12.875782012939453
    7. ' ' → logprob: -14.625782012939453
    8. '   ' → logprob: -14.625782012939453
    9. '	X' → logprob: -15.125782012939453
    10. '  ' → logprob: -15.375782012939453

Token 137: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.01635562814772129
    2. ',' → logprob: -4.516355514526367
    3. '[' → logprob: -5.891355514526367
    4. 'X' → logprob: -7.641355514526367
    5. '[i' → logprob: -7.766355514526367
    6. '-' → logprob: -8.516355514526367
    7. ' ' → logprob: -8.641355514526367
    8. ')' → logprob: -8.891355514526367
    9. '][' → logprob: -8.891355514526367
    10. ']' → logprob: -8.891355514526367

Token 138: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005975929088890553
    2. '[' → logprob: -7.7505974769592285
    3. 'i' → logprob: -8.750597953796387
    4. ',i' → logprob: -12.500597953796387
    5. ' [' → logprob: -13.125597953796387
    6. '2' → logprob: -14.750597953796387
    7. '   ' → logprob: -14.875597953796387
    8. ',' → logprob: -15.000597953796387
    9. ' i' → logprob: -15.250597953796387
    10. ' ' → logprob: -15.375597953796387

Token 139: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.00022451656695920974
    2. ']' → logprob: -9.000224113464355
    3. ' ' → logprob: -10.125224113464355
    4. ' ],' → logprob: -11.250224113464355
    5. '   ' → logprob: -11.375224113464355
    6. '*' → logprob: -11.500224113464355
    7. ':i' → logprob: -12.000224113464355
    8. '],
' → logprob: -12.125224113464355
    9. 'i' → logprob: -12.375224113464355
    10. '][' → logprob: -13.000224113464355

Token 140: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.01258864440023899
    2. ' X' → logprob: -4.3875885009765625
    3. ')' → logprob: -10.262588500976562
    4. ' ' → logprob: -10.637588500976562
    5. '   ' → logprob: -11.637588500976562
    6. '  ' → logprob: -12.012588500976562
    7. '	X' → logprob: -13.262588500976562
    8. '    ' → logprob: -13.637588500976562
    9. '
' → logprob: -14.387588500976562
    10. 'i' → logprob: -14.887588500976562

Token 141: 'H' (ID: 39)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00206818338483572
    2. ' +' → logprob: -6.377068042755127
    3. 'i' → logprob: -8.377068519592285
    4. '+i' → logprob: -9.127068519592285
    5. ']' → logprob: -11.877068519592285
    6. '])' → logprob: -12.127068519592285
    7. ' i' → logprob: -12.502068519592285
    8. '   ' → logprob: -13.127068519592285
    9. ' ' → logprob: -13.127068519592285
    10. '+]' → logprob: -13.627068519592285

Token 142: '[i' (ID: 1768)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.037235889583826065
    2. '],' → logprob: -4.162235736846924
    3. ' +' → logprob: -4.912235736846924
    4. '+i' → logprob: -5.662235736846924
    5. ':i' → logprob: -5.787235736846924
    6. 'i' → logprob: -5.912235736846924
    7. '   ' → logprob: -6.412235736846924
    8. ' ' → logprob: -6.787235736846924
    9. ',i' → logprob: -7.912235736846924
    10. '),' → logprob: -8.162236213684082

Token 143: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00989160779863596
    2. ' +' → logprob: -4.634891510009766
    3. '])' → logprob: -10.009891510009766
    4. '1' → logprob: -10.259891510009766
    5. '],' → logprob: -10.384891510009766
    6. '*' → logprob: -12.134891510009766
    7. ' ' → logprob: -12.384891510009766
    8. ']' → logprob: -12.634891510009766
    9. '2' → logprob: -12.884891510009766
    10. ']+' → logprob: -13.259891510009766

Token 144: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.27099974633893e-05
    2. ' ' → logprob: -11.375012397766113
    3. '0' → logprob: -14.875012397766113
    4. ')' → logprob: -15.750012397766113
    5. '   ' → logprob: -15.937512397766113
    6. '+' → logprob: -16.31251335144043
    7. '2' → logprob: -16.37501335144043
    8. '  ' → logprob: -16.37501335144043
    9. '3' → logprob: -17.56251335144043
    10. '```' → logprob: -17.56251335144043

Token 145: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005514653865247965
    2. '])' → logprob: -5.255514621734619
    3. ' )' → logprob: -8.380515098571777
    4. '))' → logprob: -10.630515098571777
    5. ')]' → logprob: -11.505515098571777
    6. '})' → logprob: -12.255515098571777
    7. '),' → logprob: -12.505515098571777
    8. ')
' → logprob: -13.005515098571777
    9. ' ' → logprob: -13.630515098571777
    10. ',' → logprob: -13.755515098571777

Token 146: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07149097323417664
    2. 'for' → logprob: -2.696491003036499
    3. '   ' → logprob: -6.69649076461792
    4. '    ' → logprob: -9.196491241455078
    5. '	for' → logprob: -9.196491241455078
    6. ' ' → logprob: -10.196491241455078
    7. '       ' → logprob: -10.446491241455078
    8. ' if' → logprob: -11.071491241455078
    9. '           ' → logprob: -11.696491241455078
    10. '  ' → logprob: -11.946491241455078

Token 147: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07889319956302643
    2. ' i' → logprob: -2.5788931846618652
    3. 'range' → logprob: -13.203893661499023
    4. ' range' → logprob: -13.453893661499023
    5. '	i' → logprob: -16.203893661499023
    6. ' ' → logprob: -17.703893661499023
    7. ' in' → logprob: -17.828893661499023
    8. 'in' → logprob: -18.328893661499023
    9. '(i' → logprob: -19.828893661499023
    10. ')i' → logprob: -20.078893661499023

Token 148: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11327618360519409
    2. 'in' → logprob: -2.238276243209839
    3. ' ' → logprob: -8.238276481628418
    4. 'range' → logprob: -8.988276481628418
    5. '0' → logprob: -10.988276481628418
    6. 'i' → logprob: -11.113276481628418
    7. ' range' → logprob: -11.613276481628418
    8. ',' → logprob: -11.988276481628418
    9. ' i' → logprob: -12.238276481628418
    10. 'n' → logprob: -12.863276481628418

Token 149: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014164221473038197
    2. ' range' → logprob: -4.264164447784424
    3. '	range' → logprob: -14.639163970947266
    4. ' xrange' → logprob: -16.139163970947266
    5. '(range' → logprob: -16.264163970947266
    6. ' ' → logprob: -16.764163970947266
    7. '  ' → logprob: -19.639163970947266
    8. '_range' → logprob: -20.889163970947266
    9. '   ' → logprob: -20.889163970947266
    10. 'rang' → logprob: -21.014163970947266

Token 150: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00013393278641160578
    2. '0' → logprob: -9.000133514404297
    3. '(length' → logprob: -11.625133514404297
    4. 'length' → logprob: -14.375133514404297
    5. ' (' → logprob: -14.500133514404297
    6. ' ' → logprob: -15.375133514404297
    7. '(
' → logprob: -15.500133514404297
    8. '(len' → logprob: -16.625133514404297
    9. '(

' → logprob: -18.625133514404297
    10. '
' → logprob: -19.250133514404297

Token 151: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010390079842181876
    2. 'length' → logprob: -9.250103950500488
    3. ' ' → logprob: -11.875103950500488
    4. 'len' → logprob: -14.375103950500488
    5. ' length' → logprob: -16.125102996826172
    6. '1' → logprob: -16.250102996826172
    7. '(' → logprob: -18.000102996826172
    8. '(length' → logprob: -18.375102996826172
    9. '```' → logprob: -18.750102996826172
    10. '00' → logprob: -19.125102996826172

Token 152: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005150742828845978
    2. 'length' → logprob: -5.75515079498291
    3. ',length' → logprob: -6.75515079498291
    4. '0' → logprob: -7.25515079498291
    5. 'len' → logprob: -10.50515079498291
    6. ' ' → logprob: -10.88015079498291
    7. ' length' → logprob: -11.13015079498291
    8. '1' → logprob: -11.25515079498291
    9. ',len' → logprob: -12.00515079498291
    10. ' ,' → logprob: -12.13015079498291

Token 153: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.008635842241346836
    2. ' length' → logprob: -4.758635997772217
    3. 'len' → logprob: -10.758635520935059
    4. '(length' → logprob: -16.758636474609375
    5. ' len' → logprob: -17.133636474609375
    6. '	length' → logprob: -17.758636474609375
    7. ',length' → logprob: -18.258636474609375
    8. 'leng' → logprob: -19.133636474609375
    9. '[length' → logprob: -19.133636474609375
    10. ' ' → logprob: -19.133636474609375

Token 154: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08946913480758667
    2. '-' → logprob: -2.5894691944122314
    3. ' -' → logprob: -4.589468955993652
    4. ' ,' → logprob: -7.964468955993652
    5. ' ' → logprob: -10.964468955993652
    6. ')' → logprob: -15.339468955993652
    7. ',
' → logprob: -16.58946990966797
    8. '```' → logprob: -16.71446990966797
    9. '   ' → logprob: -16.96446990966797
    10. '2' → logprob: -17.08946990966797

Token 155: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.1928003813372925e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -15.125051498413086
    4. '  ' → logprob: -17.500051498413086
    5. ')' → logprob: -18.875051498413086
    6. '
' → logprob: -19.000051498413086
    7. '```' → logprob: -19.000051498413086
    8. '２' → logprob: -19.250051498413086
    9. '۲' → logprob: -19.250051498413086
    10. '    ' → logprob: -20.937551498413086

Token 156: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.1424973713001236e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -16.000030517578125
    4. '```' → logprob: -19.375030517578125
    5. '２' → logprob: -19.500030517578125
    6. '  ' → logprob: -19.875030517578125
    7. '
' → logprob: -19.875030517578125
    8. '۲' → logprob: -20.250030517578125
    9. ')' → logprob: -20.750030517578125
    10. ' ' → logprob: -21.437530517578125

Token 157: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5766897797584534
    2. ')]' → logprob: -0.8266897797584534
    3. ' )' → logprob: -7.326689720153809
    4. ']' → logprob: -9.451689720153809
    5. ',' → logprob: -12.201689720153809
    6. '   ' → logprob: -12.701689720153809
    7. ' ' → logprob: -13.701689720153809
    8. ' ]' → logprob: -13.701689720153809
    9. '))' → logprob: -13.951689720153809
    10. ')])' → logprob: -14.201689720153809

Token 158: ' ]

' (ID: 32229)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.3207596242427826
    2. ')' → logprob: -1.320759654045105
    3. ']' → logprob: -4.9457597732543945
    4. ' )' → logprob: -8.070759773254395
    5. '   ' → logprob: -10.945759773254395
    6. ' ]' → logprob: -11.070759773254395
    7. ')])' → logprob: -12.195759773254395
    8. ' ' → logprob: -13.445759773254395
    9. ')}' → logprob: -14.195759773254395
    10. ')
' → logprob: -14.445759773254395

Token 159: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04817938804626465
    2. '<|end|>' → logprob: -3.2981793880462646
    3. '```' → logprob: -5.173179626464844
    4. ')' → logprob: -6.798179626464844
    5. '
' → logprob: -7.423179626464844
    6. '<|end|>' → logprob: -7.548179626464844
    7. ':' → logprob: -7.673179626464844
    8. '[' → logprob: -7.923179626464844
    9. '#' → logprob: -8.173179626464844
    10. '(' → logprob: -8.423179626464844

Token 160: ' ceil' (ID: 35964)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.14618583023548126
    2. 'main' → logprob: -2.146185874938965
    3. ' solve' → logprob: -4.521185874938965
    4. 'solve' → logprob: -5.021185874938965
    5. ' max' → logprob: -8.146185874938965
    6. 'max' → logprob: -8.646185874938965
    7. 'calculate' → logprob: -9.396185874938965
    8. ' process' → logprob: -9.396185874938965
    9. 'distance' → logprob: -9.521185874938965
    10. ' binary' → logprob: -9.521185874938965

Token 161: '_div' (ID: 36926)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07759759575128555
    2. '_div' → logprob: -2.8275976181030273
    3. '_' → logprob: -4.952597618103027
    4. 'div' → logprob: -5.452597618103027
    5. ' (' → logprob: -6.077597618103027
    6. '(n' → logprob: -8.202597618103027
    7. '(x' → logprob: -8.202597618103027
    8. '<|end|>' → logprob: -8.702597618103027
    9. '(value' → logprob: -8.827597618103027
    10. '_s' → logprob: -9.327597618103027

Token 162: 'ision' (ID: 3625)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0017136165406554937
    2. '(a' → logprob: -6.626713752746582
    3. ' (' → logprob: -8.751713752746582
    4. '(x' → logprob: -8.876713752746582
    5. '(n' → logprob: -9.626713752746582
    6. 'a' → logprob: -12.001713752746582
    7. '(
' → logprob: -12.376713752746582
    8. '(i' → logprob: -13.376713752746582
    9. 'def' → logprob: -13.501713752746582
    10. '(value' → logprob: -13.501713752746582

Token 163: '(h' (ID: 8120)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.4069799482822418
    2. '(' → logprob: -1.1569799184799194
    3. '(x' → logprob: -4.031980037689209
    4. '(n' → logprob: -6.406980037689209
    5. '(num' → logprob: -8.40697956085205
    6. ' (' → logprob: -8.78197956085205
    7. '(div' → logprob: -9.90697956085205
    8. '(number' → logprob: -10.53197956085205
    9. '():' → logprob: -10.65697956085205
    10. '(value' → logprob: -11.03197956085205

Token 164: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08915069699287415
    2. ')' → logprob: -2.9641506671905518
    3. ',' → logprob: -4.339150905609131
    4. '):
' → logprob: -4.839150905609131
    5. 'a' → logprob: -5.214150905609131
    6. 'e' → logprob: -6.339150905609131
    7. 'ero' → logprob: -6.714150905609131
    8. '_' → logprob: -6.964150905609131
    9. '(' → logprob: -7.339150905609131
    10. 'er' → logprob: -7.714150905609131

Token 165: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.08093613386154175
    2. ' A' → logprob: -2.5809361934661865
    3. 'a' → logprob: -6.705935955047607
    4. 'D' → logprob: -7.455935955047607
    5. 'd' → logprob: -9.330936431884766
    6. ' a' → logprob: -10.205936431884766
    7. ' ' → logprob: -10.330936431884766
    8. ' D' → logprob: -10.330936431884766
    9. 'b' → logprob: -10.955936431884766
    10. ')' → logprob: -12.080936431884766

Token 166: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001078302855603397
    2. '):
' → logprob: -6.876078128814697
    3. ')' → logprob: -10.501078605651855
    4. ' ):' → logprob: -11.751078605651855
    5. ',' → logprob: -12.001078605651855
    6. '):
' → logprob: -12.751078605651855
    7. '):

' → logprob: -14.876078605651855
    8. ':' → logprob: -15.501078605651855
    9. '   ' → logprob: -16.12607765197754
    10. '}:' → logprob: -16.25107765197754

Token 167: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003622404532507062
    2. '(h' → logprob: -6.503622531890869
    3. 'return' → logprob: -6.878622531890869
    4. ' return' → logprob: -7.503622531890869
    5. '(' → logprob: -8.253622055053711
    6. ':' → logprob: -8.628622055053711
    7. '    ' → logprob: -10.503622055053711
    8. ' (' → logprob: -10.628622055053711
    9. '	return' → logprob: -11.878622055053711
    10. ':
' → logprob: -12.003622055053711

Token 168: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0445374250411987
    2. '(h' → logprob: -1.0445374250411987
    3. 'return' (adapté à ' return') → logprob: -1.2945374250411987
    4. ' return' → logprob: -3.9195375442504883
    5. ' (' → logprob: -6.169537544250488
    6. ' ' → logprob: -9.044537544250488
    7. '(' → logprob: -9.544537544250488
    8. '  ' → logprob: -10.169537544250488
    9. 'import' → logprob: -10.669537544250488
    10. '	return' → logprob: -11.294537544250488

Token 169: ' (' (ID: 350)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.002506578341126442
    2. ' (' → logprob: -6.002506732940674
    3. '-' → logprob: -10.877506256103516
    4. ' -' → logprob: -12.377506256103516
    5. '(H' → logprob: -12.877506256103516
    6. '(' → logprob: -13.377506256103516
    7. '   ' → logprob: -13.502506256103516
    8. ' ' → logprob: -13.877506256103516
    9. '((' → logprob: -14.127506256103516
    10. '-(' → logprob: -14.752506256103516

Token 170: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.00019293125660624355
    2. ' h' → logprob: -8.625192642211914
    3. '(h' → logprob: -11.250192642211914
    4. '-' → logprob: -16.125192642211914
    5. '	h' → logprob: -16.750192642211914
    6. '-h' → logprob: -17.500192642211914
    7. ' -' → logprob: -17.750192642211914
    8. '<h' → logprob: -17.875192642211914
    9. '   ' → logprob: -18.125192642211914
    10. ' (' → logprob: -18.375192642211914

Token 171: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6326186060905457
    2. '+' → logprob: -0.7576186060905457
    3. '-' → logprob: -11.75761890411377
    4. '+h' → logprob: -12.13261890411377
    5. ' ' → logprob: -13.50761890411377
    6. '+A' → logprob: -14.00761890411377
    7. ')' → logprob: -14.13261890411377
    8. ' ' → logprob: -14.50761890411377
    9. ' -' → logprob: -14.88261890411377
    10. '+k' → logprob: -15.13261890411377

Token 172: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.3133285641670227
    2. ' A' → logprob: -1.313328504562378
    3. ' (' → logprob: -9.938328742980957
    4. '(A' → logprob: -11.063328742980957
    5. ' ' → logprob: -13.813328742980957
    6. '(' → logprob: -13.813328742980957
    7. '	A' → logprob: -15.063328742980957
    8. '   ' → logprob: -15.438328742980957
    9. ' ' → logprob: -15.438328742980957
    10. '
' → logprob: -16.43832778930664

Token 173: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1002068892121315
    2. '-' → logprob: -2.3502068519592285
    3. ' ' → logprob: -15.600207328796387
    4. ')' → logprob: -16.85020637512207
    5. '1' → logprob: -17.85020637512207
    6. '```' → logprob: -18.47520637512207
    7. ' ' → logprob: -18.85020637512207
    8. '   ' → logprob: -19.35020637512207
    9. '−' → logprob: -19.35020637512207
    10. '–' → logprob: -19.60020637512207

Token 174: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '-' → logprob: -19.375009536743164
    4. '１' → logprob: -20.000009536743164
    5. '   ' → logprob: -20.000009536743164
    6. '```' → logprob: -20.375009536743164
    7. ')' → logprob: -20.750009536743164
    8. '۱' → logprob: -21.250009536743164
    9. '  ' → logprob: -22.000009536743164
    10. '
' → logprob: -22.750009536743164

Token 175: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '```' → logprob: -20.000003814697266
    4. '１' → logprob: -20.500003814697266
    5. ')' → logprob: -20.625003814697266
    6. '   ' → logprob: -20.875003814697266
    7. '۱' → logprob: -21.250003814697266
    8. '-' → logprob: -21.375003814697266
    9. '

' → logprob: -22.000003814697266
    10. '  ' → logprob: -22.312503814697266

Token 176: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003218766360078007
    2. ')//' → logprob: -8.625322341918945
    3. ' )' → logprob: -8.875322341918945
    4. '//' → logprob: -13.875322341918945
    5. '-' → logprob: -14.250322341918945
    6. ' //' → logprob: -15.000322341918945
    7. ')
' → logprob: -15.750322341918945
    8. '")' → logprob: -15.750322341918945
    9. '）' → logprob: -16.500322341918945
    10. '')' → logprob: -17.000322341918945

Token 177: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.47415879368782043
    2. '//' → logprob: -0.974158763885498
    3. ' ' → logprob: -10.849159240722656
    4. ' ' → logprob: -10.849159240722656
    5. ')' → logprob: -10.974159240722656
    6. '#' → logprob: -11.599159240722656
    7. '   ' → logprob: -11.724159240722656
    8. ')//' → logprob: -12.724159240722656
    9. '```' → logprob: -13.224159240722656
    10. '	' → logprob: -13.599159240722656

Token 178: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.002476135268807411
    2. ' A' → logprob: -6.002476215362549
    3. ' ' → logprob: -15.50247573852539
    4. '   ' → logprob: -15.87747573852539
    5. '  ' → logprob: -17.12747573852539
    6. '	A' → logprob: -18.00247573852539
    7. 'a' → logprob: -19.87747573852539
    8. '
' → logprob: -20.50247573852539
    9. '```' → logprob: -20.62747573852539
    10. '_A' → logprob: -20.75247573852539

Token 179: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.027585798874497414
    2. '<|end|>' → logprob: -3.652585744857788
    3. '
' → logprob: -7.277585983276367
    4. '<|end|>' → logprob: -8.277585983276367
    5. '  
' → logprob: -9.527585983276367
    6. '

' → logprob: -10.152585983276367
    7. 'import' → logprob: -10.402585983276367
    8. ')' → logprob: -10.652585983276367
    9. '```' → logprob: -10.652585983276367
    10. '(' → logprob: -10.902585983276367

Token 180: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04374411702156067
    2. '<|end|>' → logprob: -3.4187440872192383
    3. '
' → logprob: -4.918744087219238
    4. '```' → logprob: -6.793744087219238
    5. '

' → logprob: -7.668744087219238
    6. 'import' → logprob: -7.793744087219238
    7. 'class' → logprob: -8.418744087219238
    8. '<|end|>' → logprob: -8.793744087219238
    9. '#' → logprob: -9.543744087219238
    10. '\' → logprob: -9.793744087219238

Token 181: ' prepare' (ID: 13708)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.40758901834487915
    2. ' main' → logprob: -1.1575889587402344
    3. 'solve' → logprob: -4.157588958740234
    4. ' solve' → logprob: -5.407588958740234
    5. 'def' → logprob: -9.157588958740234
    6. 'damage' → logprob: -10.032588958740234
    7. 'calculate' → logprob: -10.407588958740234
    8. 'attack' → logprob: -10.657588958740234
    9. 'process' → logprob: -10.782588958740234
    10. 'get' → logprob: -10.907588958740234

Token 182: '_mon' (ID: 80615)
  Prédit: '_data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_data' → logprob: -1.3547768592834473
    2. '_positions' → logprob: -1.7297768592834473
    3. '_segments' → logprob: -2.2297768592834473
    4. '_segment' → logprob: -2.3547768592834473
    5. '_targets' → logprob: -3.2297768592834473
    6. '(X' → logprob: -3.2297768592834473
    7. '_' → logprob: -3.3547768592834473
    8. '_attack' → logprob: -3.4797768592834473
    9. '_inter' → logprob: -3.7297768592834473
    10. '(' → logprob: -4.104776859283447

Token 183: 'ster' (ID: 3968)
  Prédit: 'ster'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ster' → logprob: -0.3201337456703186
    2. 'sters' → logprob: -2.195133686065674
    3. 'ot' → logprob: -2.445133686065674
    4. 'ey' → logprob: -3.445133686065674
    5. 'st' → logprob: -4.320133686065674
    6. 'ument' → logprob: -5.195133686065674
    7. 'g' → logprob: -5.695133686065674
    8. 'eys' → logprob: -6.445133686065674
    9. 'uments' → logprob: -6.570133686065674
    10. 'e' → logprob: -6.695133686065674

Token 184: '_list' (ID: 4162)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8683887720108032
    2. '_positions' → logprob: -1.2433887720108032
    3. '_list' → logprob: -1.3683887720108032
    4. '_data' → logprob: -4.368388652801514
    5. '_pairs' → logprob: -4.618388652801514
    6. 'list' → logprob: -5.868388652801514
    7. '_locations' → logprob: -6.243388652801514
    8. 'data' → logprob: -6.243388652801514
    9. '_' → logprob: -6.368388652801514
    10. 'positions' → logprob: -6.368388652801514

Token 185: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.07937770336866379
    2. '(N' → logprob: -2.7043776512145996
    3. '(' → logprob: -5.0793776512146
    4. '(mon' → logprob: -6.2043776512146
    5. '(M' → logprob: -7.5793776512146
    6. '((' → logprob: -8.829378128051758
    7. '(x' → logprob: -9.204378128051758
    8. '(m' → logprob: -9.329378128051758
    9. ' (' → logprob: -9.454378128051758
    10. '(chunk' → logprob: -10.079378128051758

Token 186: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0004195906512904912
    2. ')' → logprob: -8.125419616699219
    3. '_H' → logprob: -10.500419616699219
    4. ',' → logprob: -10.625419616699219
    5. '_' → logprob: -10.625419616699219
    6. 'Hs' → logprob: -11.000419616699219
    7. '(' → logprob: -12.750419616699219
    8. '_list' → logprob: -12.875419616699219
    9. ' H' → logprob: -13.125419616699219
    10. '[' → logprob: -13.312919616699219

Token 187: '_pairs' (ID: 90005)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0099047115072608
    2. '):
' → logprob: -4.634904861450195
    3. ')' → logprob: -9.009904861450195
    4. ' ):' → logprob: -11.134904861450195
    5. '):
' → logprob: -12.509904861450195
    6. ',' → logprob: -13.134904861450195
    7. '):

' → logprob: -13.509904861450195
    8. ':' → logprob: -13.634904861450195
    9. '[]):' → logprob: -14.259904861450195
    10. '_list' → logprob: -14.384904861450195

Token 188: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006026087794452906
    2. '):
' → logprob: -5.131026268005371
    3. ')' → logprob: -9.631026268005371
    4. ',' → logprob: -11.131026268005371
    5. ':' → logprob: -12.131026268005371
    6. '):
' → logprob: -12.131026268005371
    7. ' ):' → logprob: -12.256026268005371
    8. '   ' → logprob: -15.006026268005371
    9. '():' → logprob: -15.256026268005371
    10. '):

' → logprob: -15.506026268005371

Token 189: ' A' (ID: 355)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.4748525619506836
    2. ' D' → logprob: -0.9748525619506836
    3. 'N' → logprob: -8.099852561950684
    4. ' N' → logprob: -8.849852561950684
    5. ')' → logprob: -9.099852561950684
    6. '   ' → logprob: -9.599852561950684
    7. '):
' → logprob: -10.474852561950684
    8. ' ' → logprob: -11.037352561950684
    9. '):' → logprob: -11.224852561950684
    10. '	D' → logprob: -11.412352561950684

Token 190: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18022137880325317
    2. '):
' → logprob: -1.9302213191986084
    3. ',' → logprob: -3.9302213191986084
    4. '):
' → logprob: -9.180221557617188
    5. ')' → logprob: -10.305221557617188
    6. '   ' → logprob: -12.055221557617188
    7. ' ):' → logprob: -12.430221557617188
    8. '):

' → logprob: -12.680221557617188
    9. ':' → logprob: -12.805221557617188
    10. ',
' → logprob: -13.555221557617188

Token 191: ' N' (ID: 478)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.00676700659096241
    2. ' D' → logprob: -5.0067667961120605
    3. ')' → logprob: -10.506767272949219
    4. '   ' → logprob: -11.756767272949219
    5. 'N' → logprob: -12.006767272949219
    6. ' ' → logprob: -13.131767272949219
    7. '	D' → logprob: -13.569267272949219
    8. '):
' → logprob: -13.694267272949219
    9. '):' → logprob: -13.944267272949219
    10. '),' → logprob: -14.506767272949219

Token 192: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11585110425949097
    2. '):
' → logprob: -2.2408511638641357
    3. ',' → logprob: -5.865850925445557
    4. ')' → logprob: -9.115851402282715
    5. '):
' → logprob: -9.615851402282715
    6. '   ' → logprob: -12.490851402282715
    7. ':' → logprob: -12.615851402282715
    8. ' ):' → logprob: -12.990851402282715
    9. '):

' → logprob: -13.115851402282715
    10. '=' → logprob: -14.990851402282715

Token 193: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016716759651899338
    2. ':' → logprob: -4.266716957092285
    3. ':
' → logprob: -7.266716957092285
    4. '):' → logprob: -8.016716957092285
    5. '):
' → logprob: -8.016716957092285
    6. '    
' → logprob: -8.266716957092285
    7. ',' → logprob: -8.266716957092285
    8. 'mon' → logprob: -8.766716957092285
    9. ')' → logprob: -9.516716957092285
    10. '```' → logprob: -9.641716957092285

Token 194: ' monster' (ID: 36286)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.795081377029419
    2. 'X' → logprob: -1.420081377029419
    3. ' X' → logprob: -1.545081377029419
    4. 'mon' → logprob: -3.295081377029419
    5. 'sorted' → logprob: -3.795081377029419
    6. ' sorted' → logprob: -3.920081377029419
    7. ' monsters' → logprob: -5.04508113861084
    8. 'monster' (adapté à ' monster') → logprob: -6.04508113861084
    9. ' monster' → logprob: -6.54508113861084
    10. ' return' → logprob: -6.67008113861084

Token 195: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06239639222621918
    2. '_list' → logprob: -2.812396287918091
    3. ' =' → logprob: -8.437396049499512
    4. '=' → logprob: -8.812396049499512
    5. 'list' → logprob: -10.312396049499512
    6. 'List' → logprob: -11.312396049499512
    7. '_' → logprob: -11.937396049499512
    8. '_s' → logprob: -12.437396049499512
    9. '_lst' → logprob: -13.062396049499512
    10. '_positions' → logprob: -13.187396049499512

Token 196: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.1040663942694664
    2. '[(' → logprob: -2.6040663719177246
    3. '[' → logprob: -4.229066371917725
    4. 'sorted' → logprob: -4.729066371917725
    5. ' []' → logprob: -7.354066371917725
    6. ' [(' → logprob: -8.104066848754883
    7. '[]
' → logprob: -8.354066848754883
    8. ' sorted' → logprob: -9.104066848754883
    9. ' [' → logprob: -9.479066848754883
    10. '[[' → logprob: -10.604066848754883

Token 197: ' None' (ID: 4662)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4813494384288788
    2. '0' → logprob: -1.6063494682312012
    3. ']' → logprob: -2.606349468231201
    4. '(x' → logprob: -2.856349468231201
    5. 'x' → logprob: -4.481349468231201
    6. '[' → logprob: -4.856349468231201
    7. 'None' → logprob: -4.856349468231201
    8. '()]' → logprob: -5.106349468231201
    9. '(h' → logprob: -5.481349468231201
    10. '(X' → logprob: -5.856349468231201

Token 198: ' ]' (ID: 6045)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0014936764491721988
    2. ' for' → logprob: -7.626493453979492
    3. ' ]' → logprob: -7.751493453979492
    4. ']*' → logprob: -7.751493453979492
    5. 'for' → logprob: -9.001493453979492
    6. ']*(' → logprob: -11.001493453979492
    7. 'None' → logprob: -12.626493453979492
    8. ',' → logprob: -14.626493453979492
    9. '   ' → logprob: -15.001493453979492
    10. ']+' → logprob: -15.126493453979492

Token 199: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.20765359699726105
    2. 'for' → logprob: -2.457653522491455
    3. ' for' → logprob: -2.457653522491455
    4. ']' → logprob: -4.582653522491455
    5. ' *' → logprob: -5.332653522491455
    6. ']*' → logprob: -7.832653522491455
    7. ')' → logprob: -7.957653522491455
    8. '   ' → logprob: -9.207653999328613
    9. '*N' → logprob: -9.207653999328613
    10. '+' → logprob: -9.582653999328613

Token 200: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0002681304467841983
    2. '(N' → logprob: -8.25026798248291
    3. ' N' → logprob: -12.12526798248291
    4. '(' → logprob: -13.62526798248291
    5. ' (' → logprob: -15.37526798248291
    6. '   ' → logprob: -18.625268936157227
    7. '	N' → logprob: -19.375268936157227
    8. '
' → logprob: -19.875268936157227
    9. '[N' → logprob: -20.250268936157227
    10. '_N' → logprob: -21.000268936157227

Token 201: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.005687257274985313
    2. 'for' → logprob: -6.005687236785889
    3. ' for' → logprob: -6.630687236785889
    4. '<|end|>' → logprob: -7.130687236785889
    5. '    
' → logprob: -7.505687236785889
    6. ' 
' → logprob: -8.755687713623047
    7. '
' → logprob: -9.380687713623047
    8. '  
' → logprob: -9.505687713623047
    9. '

' → logprob: -9.630687713623047
    10. '   ' → logprob: -10.130687713623047

Token 202: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5625068545341492
    2. 'for' → logprob: -1.062506914138794
    3. '   ' → logprob: -2.562506914138794
    4. '<|end|>' → logprob: -5.937506675720215
    5. '
' → logprob: -6.187506675720215
    6. '	for' → logprob: -6.312506675720215
    7. '    
' → logprob: -7.687506675720215
    8. 'def' → logprob: -8.562506675720215
    9. ' ' → logprob: -9.062506675720215
    10. ' 
' → logprob: -10.187506675720215

Token 203: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.01160510815680027
    2. ' for' → logprob: -4.511605262756348
    3. '   ' → logprob: -7.511605262756348
    4. 'mon' → logprob: -12.886605262756348
    5. 'X' → logprob: -13.386605262756348
    6. '	for' → logprob: -13.886605262756348
    7. 'indices' → logprob: -14.011605262756348
    8. 'idx' → logprob: -14.011605262756348
    9. 'sorted' → logprob: -14.011605262756348
    10. 'pairs' → logprob: -14.261605262756348

Token 204: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.038062144070863724
    2. ' i' → logprob: -3.28806209564209
    3. 'idx' → logprob: -11.03806209564209
    4. 'index' → logprob: -13.53806209564209
    5. '	i' → logprob: -13.78806209564209
    6. ' idx' → logprob: -13.78806209564209
    7. '_i' → logprob: -14.41306209564209
    8. ' ' → logprob: -15.16306209564209
    9. '   ' → logprob: -16.163063049316406
    10. 'ii' → logprob: -16.288063049316406

Token 205: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008072054013609886
    2. 'in' → logprob: -5.6330718994140625
    3. ',' → logprob: -6.0080718994140625
    4. ' ' → logprob: -6.2580718994140625
    5. '  ' → logprob: -10.883071899414062
    6. ' ,' → logprob: -11.133071899414062
    7. '_' → logprob: -11.258071899414062
    8. ')' → logprob: -11.508071899414062
    9. '<|end|>' → logprob: -11.883071899414062
    10. ' i' → logprob: -12.508071899414062

Token 206: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.1160469576716423
    2. ' (' → logprob: -2.616046905517578
    3. '(h' → logprob: -3.491046905517578
    4. '(' → logprob: -6.116046905517578
    5. '(pair' → logprob: -6.366046905517578
    6. '(X' → logprob: -7.616046905517578
    7. '(ph' → logprob: -7.741046905517578
    8. '(p' → logprob: -8.241046905517578
    9. '(i' → logprob: -9.116046905517578
    10. '(H' → logprob: -9.241046905517578

Token 207: 'x' (ID: 87)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.31513869762420654
    2. 'x' → logprob: -1.3151386976242065
    3. 'xh' → logprob: -7.440138816833496
    4. ' X' → logprob: -8.065138816833496
    5. 'i' → logprob: -8.065138816833496
    6. ')' → logprob: -9.315138816833496
    7. 'pos' → logprob: -9.690138816833496
    8. 'p' → logprob: -9.815138816833496
    9. ' x' → logprob: -9.940138816833496
    10. 'b' → logprob: -9.940138816833496

Token 208: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004343645414337516
    2. ',h' → logprob: -7.875434398651123
    3. ',H' → logprob: -10.875433921813965
    4. ' ,' → logprob: -11.125433921813965
    5. 'h' → logprob: -11.875433921813965
    6. 'H' → logprob: -12.625433921813965
    7. 's' → logprob: -13.000433921813965
    8. ',
' → logprob: -13.000433921813965
    9. '_,' → logprob: -13.750433921813965
    10. ',x' → logprob: -14.000433921813965

Token 209: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0005543439765460789
    2. ' h' → logprob: -7.50055456161499
    3. '	h' → logprob: -14.625554084777832
    4. 'hpp' → logprob: -14.750554084777832
    5. 'hp' → logprob: -15.500554084777832
    6. ')' → logprob: -16.12555503845215
    7. '```' → logprob: -17.25055503845215
    8. '   ' → logprob: -17.37555503845215
    9. ' ' → logprob: -17.37555503845215
    10. '_h' → logprob: -17.87555503845215

Token 210: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2200749754119897e-06
    2. ' )' → logprob: -13.750001907348633
    3. ' in' → logprob: -15.250001907348633
    4. 'in' → logprob: -15.250001907348633
    5. ')=' → logprob: -15.375001907348633
    6. '   ' → logprob: -16.375001907348633
    7. ')
' → logprob: -16.500001907348633
    8. '_)' → logprob: -16.625001907348633
    9. '_' → logprob: -17.250001907348633
    10. 's' → logprob: -17.500001907348633

Token 211: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5782879590988159
    2. ' in' → logprob: -0.8282879590988159
    3. ')' → logprob: -6.0782880783081055
    4. ',' → logprob: -10.953288078308105
    5. ' ' → logprob: -11.703288078308105
    6. '=' → logprob: -12.328288078308105
    7. '	in' → logprob: -12.328288078308105
    8. 'n' → logprob: -13.078288078308105
    9. '
' → logprob: -13.078288078308105
    10. ' )' → logprob: -13.078288078308105

Token 212: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.00020389800192788243
    2. ' enumerate' → logprob: -8.500204086303711
    3. 'enum' → logprob: -15.625204086303711
    4. 'range' → logprob: -15.750204086303711
    5. 'en' → logprob: -17.75020408630371
    6. '```' → logprob: -18.37520408630371
    7. '
' → logprob: -18.75020408630371
    8. 'import' → logprob: -19.62520408630371
    9. 'Enumer' → logprob: -19.87520408630371
    10. 'x' → logprob: -19.87520408630371

Token 213: '(X' (ID: 17061)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.006038173567503691
    2. '(X' → logprob: -5.381038188934326
    3. ' X' → logprob: -6.631038188934326
    4. ')' → logprob: -9.506037712097168
    5. 'enumer' → logprob: -11.381037712097168
    6. ',' → logprob: -12.506037712097168
    7. ',X' → logprob: -12.756037712097168
    8. '   ' → logprob: -13.006037712097168
    9. ' ' → logprob: -14.131037712097168
    10. '	X' → logprob: -14.131037712097168

Token 214: 'H' (ID: 39)
  Prédit: '_pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.0962955430150032
    2. 'H' → logprob: -2.4712955951690674
    3. 'X' → logprob: -5.846295356750488
    4. 'pairs' → logprob: -6.471295356750488
    5. ')' → logprob: -6.846295356750488
    6. 'mon' → logprob: -8.096295356750488
    7. 'Pairs' → logprob: -8.346295356750488
    8. '_mon' → logprob: -8.471295356750488
    9. '   ' → logprob: -9.346295356750488
    10. ')]' → logprob: -9.721295356750488

Token 215: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.0059523796662688255
    2. '):' → logprob: -5.25595235824585
    3. '):
' → logprob: -7.88095235824585
    4. 'pairs' → logprob: -8.130952835083008
    5. ')' → logprob: -10.630952835083008
    6. 's' → logprob: -12.505952835083008
    7. '):

' → logprob: -12.505952835083008
    8. 'Pairs' → logprob: -12.755952835083008
    9. '):
' → logprob: -13.005952835083008
    10. ' pairs' → logprob: -13.255952835083008

Token 216: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003048378275707364
    2. '):
' → logprob: -8.25030517578125
    3. ':' → logprob: -10.75030517578125
    4. ' ):' → logprob: -11.25030517578125
    5. ')' → logprob: -11.75030517578125
    6. '   ' → logprob: -14.87530517578125
    7. '):
' → logprob: -15.00030517578125
    8. ']:' → logprob: -15.50030517578125
    9. '}:' → logprob: -16.50030517578125
    10. '():' → logprob: -16.50030517578125

Token 217: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010816368740051985
    2. 'monster' → logprob: -7.126081466674805
    3. ' monster' → logprob: -8.376081466674805
    4. 'mon' → logprob: -10.751081466674805
    5. '   ' → logprob: -11.251081466674805
    6. ',' → logprob: -13.251081466674805
    7. '           ' → logprob: -13.501081466674805
    8. '        
' → logprob: -13.626081466674805
    9. '(mon' → logprob: -13.626081466674805
    10. '```' → logprob: -14.001081466674805

Token 218: ' monster' (ID: 36286)
  Prédit: 'monster'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'monster' (adapté à ' monster') → logprob: -0.3141551911830902
    2. '   ' → logprob: -1.4391552209854126
    3. ' monster' → logprob: -3.564155101776123
    4. '       ' → logprob: -5.564155101776123
    5. 'mon' → logprob: -8.939155578613281
    6. 'x' → logprob: -9.314155578613281
    7. ' ' → logprob: -10.564155578613281
    8. ' x' → logprob: -11.689155578613281
    9. '   ' → logprob: -11.689155578613281
    10. '  ' → logprob: -11.814155578613281

Token 219: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.09157603979110718
    2. '=' → logprob: -2.591576099395752
    3. ' =' → logprob: -4.466576099395752
    4. '[' → logprob: -6.966576099395752
    5. ' [' → logprob: -9.841575622558594
    6. '[
' → logprob: -10.591575622558594
    7. '=[' → logprob: -10.716575622558594
    8. '   ' → logprob: -11.091575622558594
    9. '=
' → logprob: -11.216575622558594
    10. '=i' → logprob: -11.841575622558594

Token 220: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.476622998714447
    2. ' =' → logprob: -1.2266230583190918
    3. ']' → logprob: -2.476623058319092
    4. ']=' → logprob: -6.851623058319092
    5. ')' → logprob: -7.351623058319092
    6. ']=(' → logprob: -9.976622581481934
    7. '   ' → logprob: -10.726622581481934
    8. ')=' → logprob: -10.851622581481934
    9. '=(' → logprob: -11.726622581481934
    10. ' ]' → logprob: -11.851622581481934

Token 221: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889033854007721
    2. ' =' → logprob: -2.578890323638916
    3. '=
' → logprob: -15.203890800476074
    4. '=(' → logprob: -15.953890800476074
    5. '＝' → logprob: -16.703889846801758
    6. ' =(' → logprob: -16.703889846801758
    7. ')' → logprob: -17.203889846801758
    8. ']=' → logprob: -17.578889846801758
    9. ')=' → logprob: -17.578889846801758
    10. ',' → logprob: -17.828889846801758

Token 222: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.056905996054410934
    2. '[x' → logprob: -3.30690598487854
    3. ' (' → logprob: -4.431906223297119
    4. '[' → logprob: -5.806906223297119
    5. '(' → logprob: -6.431906223297119
    6. ' [' → logprob: -7.056906223297119
    7. '{x' → logprob: -7.056906223297119
    8. '{'' → logprob: -8.431905746459961
    9. '{"' → logprob: -9.681905746459961
    10. '[(' → logprob: -9.931905746459961

Token 223: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -7.465036105713807e-06
    2. ' x' → logprob: -11.875007629394531
    3. ')x' → logprob: -15.375007629394531
    4. ')' → logprob: -15.625007629394531
    5. 'int' → logprob: -16.62500762939453
    6. '(x' → logprob: -17.62500762939453
    7. '<|end|>' → logprob: -17.62500762939453
    8. '	x' → logprob: -18.25000762939453
    9. '   ' → logprob: -18.25000762939453
    10. '
' → logprob: -18.50000762939453

Token 224: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009361166739836335
    2. ' ,' → logprob: -7.750936031341553
    3. ',
' → logprob: -8.250936508178711
    4. ',h' → logprob: -8.750936508178711
    5. '+' → logprob: -10.750936508178711
    6. '),' → logprob: -11.250936508178711
    7. ' +' → logprob: -11.250936508178711
    8. ' -' → logprob: -11.750936508178711
    9. '-' → logprob: -12.000936508178711
    10. '
' → logprob: -12.875936508178711

Token 225: ' ceil' (ID: 35964)
  Prédit: 'ceil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ceil' → logprob: -0.23276881873607635
    2. 'h' → logprob: -1.8577687740325928
    3. ' ceil' → logprob: -3.3577687740325928
    4. ' h' → logprob: -4.857769012451172
    5. '(' → logprob: -5.357769012451172
    6. ' (' → logprob: -6.732769012451172
    7. '(h' → logprob: -7.232769012451172
    8. '   ' → logprob: -7.482769012451172
    9. ' ' → logprob: -8.232769012451172
    10. 'max' → logprob: -8.295269012451172

Token 226: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -0.00025942857610061765
    2. 'division' → logprob: -8.750259399414062
    3. 'div' → logprob: -9.375259399414062
    4. '(h' → logprob: -11.500259399414062
    5. 'h' → logprob: -12.500259399414062
    6. '_' → logprob: -13.750259399414062
    7. '_DIV' → logprob: -14.750259399414062
    8. '_def' → logprob: -15.250259399414062
    9. '_h' → logprob: -16.250259399414062
    10. 'Division' → logprob: -16.500259399414062

Token 227: 'ision' (ID: 3625)
  Prédit: 'ision'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ision' → logprob: -0.012198803946375847
    2. 'division' → logprob: -4.5121989250183105
    3. 'vision' → logprob: -7.3871989250183105
    4. 'iv' → logprob: -8.262198448181152
    5. '_div' → logprob: -8.637198448181152
    6. 'div' → logprob: -9.387198448181152
    7. 'Division' → logprob: -12.762198448181152
    8. 'ivation' → logprob: -13.387198448181152
    9. 'isions' → logprob: -13.512198448181152
    10. ' division' → logprob: -14.012198448181152

Token 228: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0014108279719948769
    2. '(' → logprob: -6.751410961151123
    3. 'h' → logprob: -9.001410484313965
    4. ' (' → logprob: -9.626410484313965
    5. ')' → logprob: -10.126410484313965
    6. ' h' → logprob: -12.126410484313965
    7. ',' → logprob: -13.376410484313965
    8. ')(' → logprob: -13.626410484313965
    9. '(
' → logprob: -13.751410484313965
    10. ',h' → logprob: -14.126410484313965

Token 229: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009118633344769478
    2. ',h' → logprob: -4.884118556976318
    3. ' ,' → logprob: -6.884118556976318
    4. ',A' → logprob: -8.134119033813477
    5. ',H' → logprob: -9.009119033813477
    6. 'h' → logprob: -10.509119033813477
    7. 'A' → logprob: -11.759119033813477
    8. '),' → logprob: -12.009119033813477
    9. ')' → logprob: -12.134119033813477
    10. ',
' → logprob: -12.259119033813477

Token 230: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.25193750858306885
    2. 'A' → logprob: -1.5019375085830688
    3. ' ' → logprob: -12.376937866210938
    4. ')' → logprob: -13.126937866210938
    5. ' ' → logprob: -13.626937866210938
    6. '	A' → logprob: -15.126937866210938
    7. '_A' → logprob: -15.751937866210938
    8. ' 
' → logprob: -15.876937866210938
    9. '(A' → logprob: -16.251937866210938
    10. '=A' → logprob: -16.751937866210938

Token 231: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.002991962945088744
    2. '))
' → logprob: -6.002992153167725
    3. ')' → logprob: -7.627992153167725
    4. '))

' → logprob: -11.502991676330566
    5. ' ))' → logprob: -11.627991676330566
    6. ')))' → logprob: -12.627991676330566
    7. ')
' → logprob: -13.002991676330566
    8. '),' → logprob: -13.002991676330566
    9. '))
' → logprob: -14.002991676330566
    10. '   ' → logprob: -14.127991676330566

Token 232: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022637327201664448
    2. ' return' → logprob: -6.75226354598999
    3. 'return' → logprob: -6.87726354598999
    4. '	return' → logprob: -10.377264022827148
    5. '    
' → logprob: -11.502264022827148
    6. '```' → logprob: -12.252264022827148
    7. ':return' → logprob: -12.627264022827148
    8. '<|end|>' → logprob: -12.627264022827148
    9. '
' → logprob: -12.752264022827148
    10. ',' → logprob: -13.627264022827148

Token 233: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7803494930267334
    2. 'return' (adapté à ' return') → logprob: -0.9053494930267334
    3. ' return' → logprob: -2.0303494930267334
    4. '	return' → logprob: -5.4053497314453125
    5. '<|end|>' → logprob: -7.4053497314453125
    6. 'mon' → logprob: -7.9053497314453125
    7. ' ' → logprob: -8.905349731445312
    8. 'def' → logprob: -9.030349731445312
    9. '```' → logprob: -9.280349731445312
    10. 'monster' → logprob: -10.030349731445312

Token 234: ' monster' (ID: 36286)
  Prédit: 'monster'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'monster' → logprob: -0.016580771654844284
    2. ' monster' → logprob: -4.141580581665039
    3. 'mon' → logprob: -7.516580581665039
    4. '[' → logprob: -14.516580581665039
    5. '   ' → logprob: -14.766580581665039
    6. ' ' → logprob: -15.016580581665039
    7. ' ' → logprob: -15.141580581665039
    8. 'tuple' → logprob: -15.266580581665039
    9. 'mo' → logprob: -15.516580581665039
    10. 'm' → logprob: -16.39158058166504

Token 235: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 236: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00044532763422466815
    2. '<|end|>' → logprob: -8.500445365905762
    3. '```' → logprob: -9.000445365905762
    4. '
' → logprob: -10.250445365905762
    5. '#' → logprob: -10.625445365905762
    6. 'import' → logprob: -10.875445365905762
    7. '\' → logprob: -12.125445365905762
    8. '<|end|>' → logprob: -12.125445365905762
    9. '[' → logprob: -12.250445365905762
    10. '

' → logprob: -12.750445365905762

Token 237: ' sort' (ID: 4506)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.20309151709079742
    2. ' solve' → logprob: -2.703091621398926
    3. 'main' → logprob: -2.828091621398926
    4. ' sort' → logprob: -3.578091621398926
    5. 'solve' → logprob: -4.328091621398926
    6. 'sort' → logprob: -4.578091621398926
    7. 'def' → logprob: -6.453091621398926
    8. ' binary' → logprob: -7.703091621398926
    9. ' monster' → logprob: -7.703091621398926
    10. ' damage' → logprob: -8.203091621398926

Token 238: '_mon' (ID: 80615)
  Prédit: '_mon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mon' → logprob: -0.0018293926259502769
    2. '(mon' → logprob: -6.751829624176025
    3. 'mon' → logprob: -8.126829147338867
    4. '_' → logprob: -8.251829147338867
    5. '(' → logprob: -10.001829147338867
    6. '_(' → logprob: -11.501829147338867
    7. '```' → logprob: -11.501829147338867
    8. '_by' → logprob: -11.751829147338867
    9. '_list' → logprob: -12.126829147338867
    10. '_m' → logprob: -12.251829147338867

Token 239: 'sters' (ID: 17541)
  Prédit: 'ster'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ster' → logprob: -4.5014188799541444e-05
    2. 'sters' → logprob: -10.250044822692871
    3. 's' → logprob: -12.875044822692871
    4. 'STER' → logprob: -13.500044822692871
    5. '[' → logprob: -13.875044822692871
    6. '_' → logprob: -14.250044822692871
    7. '(' → logprob: -14.750044822692871
    8. '```' → logprob: -14.875044822692871
    9. 'Ster' → logprob: -15.000044822692871
    10. 'st' → logprob: -15.250044822692871

Token 240: '(mon' (ID: 142845)
  Prédit: '(mon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mon' → logprob: -9.829823102336377e-05
    2. '(' → logprob: -9.62509822845459
    3. '():' → logprob: -11.12509822845459
    4. '(m' → logprob: -11.87509822845459
    5. '_by' → logprob: -13.12509822845459
    6. '_mon' → logprob: -13.25009822845459
    7. ' (' → logprob: -13.87509822845459
    8. 'mon' → logprob: -14.00009822845459
    9. 'by' → logprob: -14.12509822845459
    10. 'def' → logprob: -14.62509822845459

Token 241: 'ster' (ID: 3968)
  Prédit: 'ster'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ster' → logprob: -0.02326492965221405
    2. 'sters' → logprob: -3.7732648849487305
    3. 'st' → logprob: -11.52326488494873
    4. 'STER' → logprob: -12.52326488494873
    5. '[' → logprob: -13.52326488494873
    6. 's' → logprob: -14.52326488494873
    7. ')' → logprob: -14.64826488494873
    8. 'stered' → logprob: -14.64826488494873
    9. '=' → logprob: -14.77326488494873
    10. 'star' → logprob: -14.89826488494873

Token 242: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04873690754175186
    2. '):
' → logprob: -3.048736810684204
    3. ')' → logprob: -9.173736572265625
    4. ' ):' → logprob: -10.923736572265625
    5. '):
' → logprob: -11.673736572265625
    6. ',' → logprob: -11.798736572265625
    7. '   ' → logprob: -12.548736572265625
    8. '():' → logprob: -13.673736572265625
    9. '):

' → logprob: -13.673736572265625
    10. ':' → logprob: -13.923736572265625

Token 243: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5860602259635925
    2. 'monster' → logprob: -1.2110602855682373
    3. ' monster' → logprob: -1.9610602855682373
    4. 'mon' → logprob: -5.961060047149658
    5. ' return' → logprob: -6.211060047149658
    6. 'return' → logprob: -8.461060523986816
    7. '    
' → logprob: -10.461060523986816
    8. '
' → logprob: -10.961060523986816
    9. '```' → logprob: -10.961060523986816
    10. '  ' → logprob: -11.586060523986816

Token 244: ' monster' (ID: 36286)
  Prédit: 'monster'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'monster' (adapté à ' monster') → logprob: -0.0020665181800723076
    2. ' monster' → logprob: -7.002066612243652
    3. 'return' → logprob: -7.127066612243652
    4. '   ' → logprob: -8.252066612243652
    5. 'mon' → logprob: -9.752066612243652
    6. ' return' → logprob: -10.377066612243652
    7. '```' → logprob: -14.377066612243652
    8. '    
' → logprob: -15.377066612243652
    9. '
' → logprob: -15.877066612243652
    10. '  ' → logprob: -16.502065658569336

Token 245: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.00020354038861114532
    2. '.' → logprob: -8.500203132629395
    3. ' .' → logprob: -17.62520408630371
    4. '=' → logprob: -17.87520408630371
    5. 'sort' → logprob: -18.75020408630371
    6. '   ' → logprob: -18.87520408630371
    7. '.sorted' → logprob: -19.00020408630371
    8. '.s' → logprob: -19.37520408630371
    9. '.=' → logprob: -19.50020408630371
    10. ' =' → logprob: -19.87520408630371

Token 246: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.56102097814437e-05
    2. '()
' → logprob: -10.125045776367188
    3. '()\' → logprob: -13.875045776367188
    4. '(' → logprob: -14.125045776367188
    5. '()

' → logprob: -14.250045776367188
    6. '();' → logprob: -14.250045776367188
    7. '<|end|>' → logprob: -14.875045776367188
    8. '()`' → logprob: -15.000045776367188
    9. '()<' → logprob: -15.375045776367188
    10. ' ()' → logprob: -15.500045776367188

Token 247: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 248: ' return' (ID: 622)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.30525562167167664
    2. '<|end|>' → logprob: -1.430255651473999
    3. 'return' (adapté à ' return') → logprob: -3.805255651473999
    4. '```' → logprob: -7.43025541305542
    5. 'import' → logprob: -8.430255889892578
    6. '
' → logprob: -8.555255889892578
    7. '<|end|>' → logprob: -8.680255889892578
    8. '   ' → logprob: -9.055255889892578
    9. '#' → logprob: -9.680255889892578
    10. ' return' → logprob: -9.805255889892578

Token 249: ' monster' (ID: 36286)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.551376223564148
    2. 'None' → logprob: -0.926376223564148
    3. ' monster' → logprob: -4.3013763427734375
    4. 'monster' → logprob: -4.3013763427734375
    5. 'mon' → logprob: -7.3013763427734375
    6. '<|end|>' → logprob: -10.676376342773438
    7. 'none' → logprob: -11.301376342773438
    8. '(None' → logprob: -11.426376342773438
    9. '_None' → logprob: -11.676376342773438
    10. '_none' → logprob: -12.051376342773438

Token 250: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 251: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003553385380655527
    2. '
' → logprob: -6.12855339050293
    3. '<|end|>' → logprob: -7.00355339050293
    4. '```' → logprob: -7.87855339050293
    5. '

' → logprob: -10.50355339050293
    6. '#' → logprob: -11.25355339050293
    7. '<|end|>' → logprob: -11.50355339050293
    8. 'import' → logprob: -12.25355339050293
    9. '\n' → logprob: -12.37855339050293
    10. '\' → logprob: -12.50355339050293

Token 252: ' initialize' (ID: 18400)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.16368518769741058
    2. 'main' → logprob: -2.6636850833892822
    3. ' solve' → logprob: -4.038685321807861
    4. ' apply' → logprob: -4.663685321807861
    5. 'solve' → logprob: -4.788685321807861
    6. ' process' → logprob: -4.913685321807861
    7. ' attack' → logprob: -5.163685321807861
    8. 'def' → logprob: -5.163685321807861
    9. 'attack' → logprob: -5.288685321807861
    10. ' calculate' → logprob: -5.788685321807861

Token 253: '_position' (ID: 23739)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.9692505598068237
    2. '_mon' → logprob: -1.9692505598068237
    3. 'damage' → logprob: -2.0942506790161133
    4. 'segment' → logprob: -2.7192506790161133
    5. '_segment' → logprob: -2.9692506790161133
    6. 'mon' → logprob: -3.0942506790161133
    7. 'visited' → logprob: -3.2192506790161133
    8. '(mon' → logprob: -3.2192506790161133
    9. 'queue' → logprob: -3.5942506790161133
    10. '_damage' → logprob: -3.8442506790161133

Token 254: '_damage' (ID: 124305)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07124966382980347
    2. '()' → logprob: -3.5712497234344482
    3. '_list' → logprob: -4.071249485015869
    4. ' =' → logprob: -4.946249485015869
    5. '_array' → logprob: -5.696249485015869
    6. '_map' → logprob: -6.321249485015869
    7. '[]' → logprob: -6.446249485015869
    8. '=[]' → logprob: -6.446249485015869
    9. '_indices' → logprob: -6.446249485015869
    10. '=' → logprob: -6.696249485015869

Token 255: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.26430827379226685
    2. '():
' → logprob: -1.889308214187622
    3. 's' → logprob: -3.264308214187622
    4. '_list' → logprob: -3.889308214187622
    5. '()' → logprob: -4.889308452606201
    6. '_map' → logprob: -5.139308452606201
    7. '_array' → logprob: -5.514308452606201
    8. '_stack' → logprob: -7.139308452606201
    9. '_arrays' → logprob: -7.639308452606201
    10. '_pairs' → logprob: -7.764308452606201

Token 256: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6168965101242065
    2. 'return' → logprob: -1.3668965101242065
    3. ' return' → logprob: -1.6168965101242065
    4. '[]' → logprob: -5.366896629333496
    5. ' []' → logprob: -7.741896629333496
    6. 'position' → logprob: -7.741896629333496
    7. '()' → logprob: -8.241896629333496
    8. 'pos' → logprob: -8.366896629333496
    9. '	return' → logprob: -8.366896629333496
    10. '([],' → logprob: -8.491896629333496

Token 257: ' return' (ID: 622)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.2080538272857666
    2. 'position' → logprob: -2.5830538272857666
    3. '([],' → logprob: -3.0830538272857666
    4. 'pos' → logprob: -3.2080538272857666
    5. '{}' → logprob: -4.8330535888671875
    6. 'positions' → logprob: -4.9580535888671875
    7. 'return' (adapté à ' return') → logprob: -5.7080535888671875
    8. '[],' → logprob: -6.2080535888671875
    9. '(' → logprob: -6.8330535888671875
    10. 'dict' → logprob: -7.2080535888671875

Token 258: ' [],' (ID: 22188)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.15176694095134735
    2. '[],' → logprob: -2.4017670154571533
    3. '([],' → logprob: -3.4017670154571533
    4. '{}' → logprob: -4.526766777038574
    5. '([]' → logprob: -6.276766777038574
    6. 'dict' → logprob: -6.526766777038574
    7. '{},' → logprob: -6.526766777038574
    8. '({},' → logprob: -7.401766777038574
    9. '(' → logprob: -8.901766777038574
    10. '[]
' → logprob: -9.026766777038574

Token 259: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.089060939848423
    2. ' []' → logprob: -2.5890610218048096
    3. '0' → logprob: -5.2140607833862305
    4. '[' → logprob: -6.2140607833862305
    5. '<|end|>' → logprob: -7.3390607833862305
    6. ' ' → logprob: -7.8390607833862305
    7. '[]}' → logprob: -7.9640607833862305
    8. '[],' → logprob: -8.21406078338623
    9. '{}' → logprob: -8.58906078338623
    10. '[]
' → logprob: -8.71406078338623

Token 260: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.044184572994709015
    2. 'damage' → logprob: -3.669184684753418
    3. 'positions' → logprob: -5.169184684753418
    4. 'pos' → logprob: -5.544184684753418
    5. 'return' → logprob: -5.544184684753418
    6. 'position' → logprob: -6.669184684753418
    7. 'bomb' → logprob: -8.044184684753418
    8. 'attack' → logprob: -8.419184684753418
    9. 'arr' → logprob: -8.544184684753418
    10. 'events' → logprob: -8.669184684753418

Token 261: ' initialize' (ID: 18400)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.42622488737106323
    2. 'def' → logprob: -1.801224946975708
    3. 'main' → logprob: -2.926224946975708
    4. ' process' → logprob: -3.301224946975708
    5. ' def' → logprob: -3.426224946975708
    6. ' initialize' → logprob: -4.551224708557129
    7. ' apply' → logprob: -4.676224708557129
    8. 'process' → logprob: -4.801224708557129
    9. 'apply' → logprob: -5.926224708557129
    10. 'initialize' → logprob: -5.926224708557129

Token 262: '_indices' (ID: 43508)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.7353866100311279
    2. 'heap' → logprob: -1.985386610031128
    3. 'attack' → logprob: -2.485386610031128
    4. 'queue' → logprob: -2.735386610031128
    5. 'damage' → logprob: -3.485386610031128
    6. 'mon' → logprob: -3.860386610031128
    7. 'dp' → logprob: -3.985386610031128
    8. 'segment' → logprob: -4.110386848449707
    9. 'stack' → logprob: -4.110386848449707
    10. 'bit' → logprob: -4.360386848449707

Token 263: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.02905203029513359
    2. '():
' → logprob: -3.6540520191192627
    3. '()' → logprob: -6.029052257537842
    4. ' ():' → logprob: -8.654051780700684
    5. '(),' → logprob: -9.779051780700684
    6. 'def' → logprob: -10.154051780700684
    7. ' ()' → logprob: -10.904051780700684
    8. '():

' → logprob: -11.029051780700684
    9. '():
' → logprob: -12.029051780700684
    10. '   ' → logprob: -12.279051780700684

Token 264: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7638449668884277
    2. 'return' → logprob: -1.1388449668884277
    3. '0' → logprob: -2.3888449668884277
    4. ' return' → logprob: -3.1388449668884277
    5. '[]' → logprob: -3.6388449668884277
    6. '[],' → logprob: -3.6388449668884277
    7. '([],' → logprob: -3.8888449668884277
    8. ' [],' → logprob: -6.013844966888428
    9. '()' → logprob: -7.638844966888428
    10. ' ' → logprob: -7.763844966888428

Token 265: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.22417795658111572
    2. 'left' → logprob: -3.099177837371826
    3. '0' → logprob: -3.349177837371826
    4. 'l' → logprob: -3.474177837371826
    5. '[],' → logprob: -3.599177837371826
    6. '[]' → logprob: -4.099177837371826
    7. 'i' → logprob: -4.349177837371826
    8. 'start' → logprob: -4.599177837371826
    9. ' return' → logprob: -4.849177837371826
    10. '   ' → logprob: -5.599177837371826

Token 266: ' ' (ID: 220)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5856360793113708
    2. '0' → logprob: -1.4606361389160156
    3. '[],' → logprob: -1.5856361389160156
    4. '[' → logprob: -6.210636138916016
    5. ' []' → logprob: -6.835636138916016
    6. '{}' → logprob: -7.085636138916016
    7. '[]
' → logprob: -7.210636138916016
    8. '([],' → logprob: -8.085636138916016
    9. ' [],' → logprob: -8.335636138916016
    10. '[]}' → logprob: -8.460636138916016

Token 267: '0' (ID: 15)
  Prédit: '[],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[],' → logprob: -0.9844695329666138
    2. '[]' → logprob: -1.1094695329666138
    3. '0' → logprob: -1.2344695329666138
    4. '[' → logprob: -6.234469413757324
    5. 'set' → logprob: -7.234469413757324
    6. '{}' → logprob: -7.359469413757324
    7. '{},' → logprob: -7.484469413757324
    8. 'dict' → logprob: -7.859469413757324
    9. '[]}' → logprob: -7.859469413757324
    10. '([],' → logprob: -8.359469413757324

Token 268: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 269: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1800772100687027
    2. ' ' → logprob: -1.8050771951675415
    3. '[]' → logprob: -8.43007755279541
    4. ' []' → logprob: -10.18007755279541
    5. ' -' → logprob: -10.80507755279541
    6. '1' → logprob: -10.80507755279541
    7. '-' → logprob: -11.68007755279541
    8. '  ' → logprob: -11.99257755279541
    9. '{}' → logprob: -13.18007755279541
    10. ' None' → logprob: -13.18007755279541

Token 270: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003439222928136587
    2. '-' → logprob: -5.753439426422119
    3. 'len' → logprob: -9.003438949584961
    4. ' ' → logprob: -9.378438949584961
    5. '[]' → logprob: -10.503438949584961
    6. '1' → logprob: -11.878438949584961
    7. ' -' → logprob: -12.003438949584961
    8. '{}' → logprob: -12.503438949584961
    9. 'None' → logprob: -13.253438949584961
    10. '   ' → logprob: -13.378438949584961

Token 271: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0029547621961683035
    2. 'damage' → logprob: -6.627954959869385
    3. '<|end|>' → logprob: -7.252954959869385
    4. 'import' → logprob: -8.627954483032227
    5. '```' → logprob: -8.627954483032227
    6. '<|end|>' → logprob: -9.377954483032227
    7. 'current' → logprob: -9.377954483032227
    8. 'max' → logprob: -9.752954483032227
    9. ',' → logprob: -10.002954483032227
    10. 'prev' → logprob: -10.127954483032227

Token 272: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0011264061322435737
    2. 'damage' → logprob: -7.751126289367676
    3. 'import' → logprob: -8.751126289367676
    4. 'from' → logprob: -9.626126289367676
    5. '[]' → logprob: -9.626126289367676
    6. '#' → logprob: -9.626126289367676
    7. 'max' → logprob: -10.376126289367676
    8. ')' → logprob: -10.626126289367676
    9. '```' → logprob: -10.626126289367676
    10. 'deque' → logprob: -10.751126289367676

Token 273: ' process' (ID: 2273)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.4542405605316162
    2. ' main' → logprob: -1.4542405605316162
    3. 'main' → logprob: -1.7042405605316162
    4. 'process' → logprob: -2.079240560531616
    5. ' process' → logprob: -2.329240560531616
    6. 'initialize' → logprob: -3.829240560531616
    7. 'solve' → logprob: -3.954240560531616
    8. 'import' → logprob: -4.454240798950195
    9. 'simulate' → logprob: -4.454240798950195
    10. ' initialize' → logprob: -4.579240798950195

Token 274: '_mon' (ID: 80615)
  Prédit: '_mon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mon' → logprob: -0.05730096623301506
    2. '(mon' → logprob: -3.4323010444641113
    3. '_attack' → logprob: -4.932301044464111
    4. '_damage' → logprob: -5.682301044464111
    5. '_att' → logprob: -5.932301044464111
    6. '_positions' → logprob: -6.057301044464111
    7. '_events' → logprob: -6.182301044464111
    8. '()' → logprob: -6.432301044464111
    9. 'mon' → logprob: -7.057301044464111
    10. '_queries' → logprob: -7.307301044464111

Token 275: 'sters' (ID: 17541)
  Prédit: 'ster'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ster' → logprob: -0.04890674725174904
    2. 'sters' → logprob: -3.0489068031311035
    3. 'st' → logprob: -8.923906326293945
    4. 's' → logprob: -9.173906326293945
    5. '```' → logprob: -11.048906326293945
    6. 'stre' → logprob: -11.548906326293945
    7. '[' → logprob: -12.173906326293945
    8. 'STER' → logprob: -12.423906326293945
    9. '_' → logprob: -12.923906326293945
    10. 'str' → logprob: -12.923906326293945

Token 276: '(mon' (ID: 142845)
  Prédit: '(mon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mon' → logprob: -0.0018060837173834443
    2. '(' → logprob: -6.501806259155273
    3. '():' → logprob: -8.251806259155273
    4. '(m' → logprob: -10.876806259155273
    5. '(N' → logprob: -10.876806259155273
    6. '(def' → logprob: -13.251806259155273
    7. '(n' → logprob: -13.501806259155273
    8. '(M' → logprob: -15.001806259155273
    9. '(man' → logprob: -15.001806259155273
    10. '(
' → logprob: -15.251806259155273

Token 277: 'ster' (ID: 3968)
  Prédit: 'ster'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ster' → logprob: -0.0011983246076852083
    2. 'sters' → logprob: -6.7511982917785645
    3. 's' → logprob: -12.001198768615723
    4. ',' → logprob: -12.501198768615723
    5. '=' → logprob: -12.876198768615723
    6. '[' → logprob: -13.251198768615723
    7. '```' → logprob: -13.251198768615723
    8. 'st' → logprob: -13.501198768615723
    9. ')' → logprob: -13.501198768615723
    10. 'STER' → logprob: -14.126198768615723

Token 278: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009897632524371147
    2. '):' → logprob: -4.634897708892822
    3. '):
' → logprob: -9.134897232055664
    4. ')' → logprob: -11.509897232055664
    5. ',
' → logprob: -11.884897232055664
    6. ' ,' → logprob: -12.134897232055664
    7. '   ' → logprob: -13.009897232055664
    8. ':' → logprob: -13.134897232055664
    9. 's' → logprob: -13.384897232055664
    10. '[' → logprob: -14.134897232055664

Token 279: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.05207337439060211
    2. 'N' → logprob: -3.5520734786987305
    3. ' D' → logprob: -4.3020734786987305
    4. 'damage' → logprob: -5.6770734786987305
    5. 'mon' → logprob: -7.1770734786987305
    6. 'positions' → logprob: -7.1770734786987305
    7. 'pos' → logprob: -7.3020734786987305
    8. ' N' → logprob: -7.8020734786987305
    9. 'A' → logprob: -7.9270734786987305
    10. 'position' → logprob: -8.17707347869873

Token 280: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03893563896417618
    2. '):' → logprob: -3.538935661315918
    3. '):
' → logprob: -5.413935661315918
    4. ',A' → logprob: -6.538935661315918
    5. '   ' → logprob: -6.788935661315918
    6. '+' → logprob: -7.538935661315918
    7. '//' → logprob: -7.663935661315918
    8. ')' → logprob: -8.913935661315918
    9. ' ,' → logprob: -9.038935661315918
    10. 'A' → logprob: -9.163935661315918

Token 281: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24522770941257477
    2. '   ' → logprob: -1.9952276945114136
    3. '<|end|>' → logprob: -3.120227813720703
    4. ',' → logprob: -3.995227813720703
    5. '():' → logprob: -5.120227813720703
    6. '):' → logprob: -5.620227813720703
    7. '<|end|>' → logprob: -5.620227813720703
    8. 'def' → logprob: -6.495227813720703
    9. ':
' → logprob: -7.370227813720703
    10. ':def' → logprob: -7.495227813720703

Token 282: ' pos' (ID: 1253)
  Prédit: 'damage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'damage' → logprob: -0.7499097585678101
    2. 'n' → logprob: -2.3749098777770996
    3. 'pos' (adapté à ' pos') → logprob: -2.9999098777770996
    4. '   ' → logprob: -3.1249098777770996
    5. 'res' → logprob: -3.3749098777770996
    6. 'N' → logprob: -3.4999098777770996
    7. 'from' → logprob: -3.4999098777770996
    8. ' damage' → logprob: -3.6249098777770996
    9. 'events' → logprob: -3.8749098777770996
    10. 'positions' → logprob: -3.8749098777770996

Token 283: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.060478419065475464
    2. 'ition' → logprob: -4.060478210449219
    3. 's' → logprob: -4.435478210449219
    4. ' =' → logprob: -4.560478210449219
    5. 'itions' → logprob: -4.935478210449219
    6. '=' → logprob: -5.435478210449219
    7. '_list' → logprob: -7.185478210449219
    8. '   ' → logprob: -7.310478210449219
    9. 'list' → logprob: -7.435478210449219
    10. 'damage' → logprob: -7.435478210449219

Token 284: ' damage' (ID: 10364)
  Prédit: 'damage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'damage' → logprob: -0.08545102179050446
    2. 'dam' → logprob: -3.710451126098633
    3. 'd' → logprob: -4.460451126098633
    4. 'acc' → logprob: -4.710451126098633
    5. ' damage' → logprob: -5.460451126098633
    6. 'dp' → logprob: -5.585451126098633
    7. '   ' → logprob: -5.710451126098633
    8. 'diff' → logprob: -5.710451126098633
    9. 'end' → logprob: -6.335451126098633
    10. 'c' → logprob: -6.585451126098633

Token 285: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.32502812147140503
    2. '=' → logprob: -1.3250281810760498
    3. ',' → logprob: -4.450027942657471
    4. '   ' → logprob: -11.575028419494629
    5. ' ,' → logprob: -12.825028419494629
    6. '=[],' → logprob: -13.325028419494629
    7. 's' → logprob: -13.950028419494629
    8. '```' → logprob: -14.200028419494629
    9. '=[]' → logprob: -14.325028419494629
    10. '    ' → logprob: -14.575028419494629

Token 286: ' initialize' (ID: 18400)
  Prédit: '[],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[],' → logprob: -0.010562080889940262
    2. '[]' → logprob: -5.135561943054199
    3. '([],' → logprob: -6.260561943054199
    4. 'initialize' → logprob: -6.510561943054199
    5. ' [],' → logprob: -6.760561943054199
    6. '   ' → logprob: -10.1355619430542
    7. '[' → logprob: -11.6355619430542
    8. '[]
' → logprob: -11.6355619430542
    9. '[],
' → logprob: -12.6355619430542
    10. ',' → logprob: -13.8855619430542

Token 287: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -6.420598219847307e-05
    2. 'position' → logprob: -9.7500638961792
    3. '_damage' → logprob: -13.2500638961792
    4. '_positions' → logprob: -13.3750638961792
    5. '_pos' → logprob: -13.7500638961792
    6. '_' → logprob: -14.8750638961792
    7. '```' → logprob: -15.6250638961792
    8. '(position' → logprob: -16.000064849853516
    9. '   ' → logprob: -16.125064849853516
    10. 's' → logprob: -16.500064849853516

Token 288: '_damage' (ID: 124305)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02659345418214798
    2. ',' → logprob: -3.6515934467315674
    3. '_damage' → logprob: -9.026593208312988
    4. ',s' → logprob: -9.651593208312988
    5. ' ,' → logprob: -10.651593208312988
    6. '_,' → logprob: -10.901593208312988
    7. '_list' → logprob: -10.901593208312988
    8. 'es' → logprob: -11.151593208312988
    9. 'damage' → logprob: -11.776593208312988
    10. '_s' → logprob: -11.901593208312988

Token 289: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00023524489370174706
    2. '()
' → logprob: -8.375235557556152
    3. ' ()' → logprob: -12.625235557556152
    4. '()

' → logprob: -14.375235557556152
    5. '(),' → logprob: -15.250235557556152
    6. '()]' → logprob: -15.750235557556152
    7. '()
' → logprob: -15.750235557556152
    8. '()`' → logprob: -16.750234603881836
    9. '[]' → logprob: -17.625234603881836
    10. '()\' → logprob: -17.625234603881836

Token 290: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.058982230722904205
    2. ',' → logprob: -3.3089821338653564
    3. '
' → logprob: -5.3089823722839355
    4. ' i' → logprob: -5.5589823722839355
    5. 'i' → logprob: -5.9339823722839355
    6. '    
' → logprob: -5.9339823722839355
    7. 'indices' → logprob: -7.4339823722839355
    8. ' indices' → logprob: -7.5589823722839355
    9. '```' → logprob: -7.5589823722839355
    10. ',i' → logprob: -7.8089823722839355

Token 291: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.5522133111953735
    2. 'right' → logprob: -2.052213191986084
    3. 'j' → logprob: -2.677213191986084
    4. 'i' → logprob: -2.927213191986084
    5. 'acc' → logprob: -3.677213191986084
    6. 'res' → logprob: -3.802213191986084
    7. 'ans' → logprob: -4.177213191986084
    8. 'ind' → logprob: -4.427213191986084
    9. 'left' → logprob: -4.427213191986084
    10. 'damage' → logprob: -4.552213191986084

Token 292: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.264639288187027
    2. ' =' → logprob: -2.014639377593994
    3. '1' → logprob: -2.514639377593994
    4. '=' → logprob: -5.514639377593994
    5. '_pos' → logprob: -5.639639377593994
    6. ' ,' → logprob: -5.764639377593994
    7. 'pos' → logprob: -6.014639377593994
    8. '0' → logprob: -6.514639377593994
    9. '_' → logprob: -7.264639377593994
    10. '_x' → logprob: -7.639639377593994

Token 293: ' cur' (ID: 4396)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5459320545196533
    2. 'right' → logprob: -2.4209320545196533
    3. 'len' → logprob: -2.5459320545196533
    4. 'j' → logprob: -2.7959320545196533
    5. 'end' → logprob: -2.7959320545196533
    6. 'res' → logprob: -3.2959320545196533
    7. 'acc' → logprob: -3.5459320545196533
    8. 'stack' → logprob: -3.5459320545196533
    9. 'attack' → logprob: -3.6709320545196533
    10. 'length' → logprob: -3.9209320545196533

Token 294: '_damage' (ID: 124305)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.3126116096973419
    2. '_damage' → logprob: -1.5626115798950195
    3. 'r' → logprob: -4.1876115798950195
    4. '=' → logprob: -4.6876115798950195
    5. 'idx' → logprob: -4.9376115798950195
    6. '_d' → logprob: -5.3126115798950195
    7. ' =' → logprob: -5.6876115798950195
    8. '_pos' → logprob: -5.6876115798950195
    9. 'damage' → logprob: -5.6876115798950195
    10. '_count' → logprob: -6.4376115798950195

Token 295: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759788155555725
    2. '=' → logprob: -0.8259788155555725
    3. ',' → logprob: -10.200979232788086
    4. ' ' → logprob: -13.575979232788086
    5. '   ' → logprob: -14.450979232788086
    6. ' ,' → logprob: -15.950979232788086
    7. '```' → logprob: -16.325979232788086
    8. '  ' → logprob: -16.450979232788086
    9. ')' → logprob: -17.075979232788086
    10. '    ' → logprob: -17.075979232788086

Token 296: ' initialize' (ID: 18400)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011366341263055801
    2. ' ' → logprob: -4.511366367340088
    3. 'initialize' → logprob: -8.26136589050293
    4. ' initialize' → logprob: -9.88636589050293
    5. '   ' → logprob: -12.01136589050293
    6. '  ' → logprob: -13.51136589050293
    7. '(' → logprob: -14.94886589050293
    8. '    ' → logprob: -15.19886589050293
    9. '=' → logprob: -15.76136589050293
    10. ',' → logprob: -16.01136589050293

Token 297: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.00023500648967456073
    2. 'indices' → logprob: -9.000234603881836
    3. '0' → logprob: -9.375234603881836
    4. '_positions' → logprob: -11.875234603881836
    5. '(indices' → logprob: -12.625234603881836
    6. ' indices' → logprob: -13.125234603881836
    7. '_position' → logprob: -13.125234603881836
    8. '   ' → logprob: -13.125234603881836
    9. ' ' → logprob: -13.500234603881836
    10. '(' → logprob: -13.500234603881836

Token 298: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0004206634475849569
    2. '()
' → logprob: -8.000420570373535
    3. '(),' → logprob: -9.500420570373535
    4. '()

' → logprob: -12.875420570373535
    5. ' ()' → logprob: -13.375420570373535
    6. '()]' → logprob: -13.500420570373535
    7. '(' → logprob: -13.625420570373535
    8. '()\' → logprob: -14.000420570373535
    9. '(),
' → logprob: -14.500420570373535
    10. ',' → logprob: -14.750420570373535

Token 299: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19155839085578918
    2. '
' → logprob: -1.8165583610534668
    3. '    
' → logprob: -5.191558361053467
    4. ' for' → logprob: -5.941558361053467
    5. ',' → logprob: -6.691558361053467
    6. 'for' → logprob: -7.441558361053467
    7. ' while' → logprob: -8.441558837890625
    8. 'def' → logprob: -8.441558837890625
    9. ' 
' → logprob: -9.691558837890625
    10. 'result' → logprob: -9.691558837890625

Token 300: ' ans' (ID: 3345)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6168971657752991
    2. '   ' → logprob: -1.2418971061706543
    3. ' for' → logprob: -3.4918971061706543
    4. 'res' → logprob: -3.4918971061706543
    5. 'acc' → logprob: -3.6168971061706543
    6. 'n' → logprob: -3.6168971061706543
    7. 'N' → logprob: -4.741897106170654
    8. 'events' → logprob: -5.116897106170654
    9. 'ans' (adapté à ' ans') → logprob: -5.241897106170654
    10. 'result' → logprob: -5.366897106170654

Token 301: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023276345804333687
    2. '=' → logprob: -3.7732763290405273
    3. ' ' → logprob: -10.648276329040527
    4. ',' → logprob: -12.398276329040527
    5. '  ' → logprob: -13.648276329040527
    6. '   ' → logprob: -14.148276329040527
    7. '_' → logprob: -14.898276329040527
    8. ' ,' → logprob: -15.648276329040527
    9. ' ' → logprob: -15.648276329040527
    10. ')' → logprob: -16.023277282714844

Token 302: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010331686353310943
    2. ' ' → logprob: -6.876033306121826
    3. '   ' → logprob: -14.876032829284668
    4. ' ' → logprob: -17.001033782958984
    5. '  ' → logprob: -18.626033782958984
    6. '```' → logprob: -18.938533782958984
    7. '۰' → logprob: -19.126033782958984
    8. '[]' → logprob: -19.251033782958984
    9. 'int' → logprob: -19.376033782958984
    10. '1' → logprob: -19.813533782958984

Token 303: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. 'int' → logprob: -17.750003814697266
    4. '[]' → logprob: -18.500003814697266
    5. '000' → logprob: -19.750003814697266
    6. 'float' → logprob: -20.187503814697266
    7. ' ' → logprob: -20.250003814697266
    8. '   ' → logprob: -20.250003814697266
    9. '۰' → logprob: -20.750003814697266
    10. '[]
' → logprob: -20.812503814697266

Token 304: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2551729083061218
    2. '
' → logprob: -1.5051729679107666
    3. '<|end|>' → logprob: -6.3801727294921875
    4. '    
' → logprob: -6.8801727294921875
    5. ' for' → logprob: -8.130172729492188
    6. 'for' → logprob: -9.755172729492188
    7. '<|end|>' → logprob: -10.380172729492188
    8. '
' → logprob: -10.505172729492188
    9. ',' → logprob: -10.630172729492188
    10. 'def' → logprob: -11.130172729492188

Token 305: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02113301493227482
    2. '
' → logprob: -4.771132946014404
    3. ' for' → logprob: -5.146132946014404
    4. '    
' → logprob: -5.521132946014404
    5. '<|end|>' → logprob: -6.521132946014404
    6. ' 
' → logprob: -8.271133422851562
    7. ',' → logprob: -8.396133422851562
    8. '  
' → logprob: -9.146133422851562
    9. 'for' → logprob: -9.146133422851562
    10. ':' → logprob: -9.521133422851562

Token 306: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.11844410747289658
    2. '   ' → logprob: -2.6184442043304443
    3. ' for' → logprob: -4.493443965911865
    4. 'attack' → logprob: -5.743443965911865
    5. 'while' → logprob: -5.868443965911865
    6. 'n' → logprob: -5.868443965911865
    7. 'right' → logprob: -6.243443965911865
    8. 'end' → logprob: -6.618443965911865
    9. 'range' → logprob: -6.618443965911865
    10. 'events' → logprob: -6.743443965911865

Token 307: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.33636239171028137
    2. ' x' → logprob: -1.711362361907959
    3. 'i' → logprob: -2.961362361907959
    4. '(x' → logprob: -3.711362361907959
    5. ' i' → logprob: -3.711362361907959
    6. ' (' → logprob: -6.336362361907959
    7. 'pos' → logprob: -7.086362361907959
    8. '(i' → logprob: -7.961362361907959
    9. ' pos' → logprob: -8.086362838745117
    10. '   ' → logprob: -8.461362838745117

Token 308: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021784115233458579
    2. ' in' → logprob: -9.37521743774414
    3. ' ,' → logprob: -9.50021743774414
    4. ',y' → logprob: -10.62521743774414
    5. 'in' → logprob: -11.50021743774414
    6. ',_' → logprob: -12.62521743774414
    7. ',pos' → logprob: -12.75021743774414
    8. ',d' → logprob: -13.37521743774414
    9. ',x' → logprob: -13.50021743774414
    10. ',m' → logprob: -13.75021743774414

Token 309: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.2460368871688843
    2. 'a' → logprob: -1.6210368871688843
    3. 'cnt' → logprob: -1.6210368871688843
    4. 'need' → logprob: -2.996037006378174
    5. 'c' → logprob: -3.246037006378174
    6. 't' → logprob: -3.371037006378174
    7. 'num' → logprob: -3.496037006378174
    8. ' cnt' → logprob: -3.996037006378174
    9. 'count' → logprob: -3.996037006378174
    10. 'd' → logprob: -4.121037006378174

Token 310: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.027768433094024658
    2. 'in' → logprob: -3.65276837348938
    3. ',' → logprob: -6.652768611907959
    4. ' ' → logprob: -9.6527681350708
    5. '   ' → logprob: -9.7777681350708
    6. '_in' → logprob: -11.2777681350708
    7. ')' → logprob: -11.4027681350708
    8. 's' → logprob: -12.1527681350708
    9. '  ' → logprob: -12.2777681350708
    10. '```' → logprob: -12.4027681350708

Token 311: ' monster' (ID: 36286)
  Prédit: 'monster'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'monster' → logprob: -0.0002422779070911929
    2. 'mon' → logprob: -8.500242233276367
    3. ' monster' → logprob: -10.375242233276367
    4. '   ' → logprob: -13.125242233276367
    5. 'enumer' → logprob: -13.250242233276367
    6. '[' → logprob: -14.250242233276367
    7. '  ' → logprob: -14.750242233276367
    8. '    ' → logprob: -14.875242233276367
    9. ' ' → logprob: -15.375242233276367
    10. 'mons' → logprob: -15.375242233276367

Token 312: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010069658746942878
    2. ':
' → logprob: -7.001007080078125
    3. ',' → logprob: -9.376007080078125
    4. '):' → logprob: -12.001007080078125
    5. '):
' → logprob: -13.376007080078125
    6. '   ' → logprob: -14.126007080078125
    7. ' :' → logprob: -14.251007080078125
    8. ':
' → logprob: -14.876007080078125
    9. ':

' → logprob: -15.501007080078125
    10. ':**' → logprob: -15.626007080078125

Token 313: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014216977171599865
    2. '        ' → logprob: -4.639216899871826
    3. '        
' → logprob: -6.764216899871826
    4. '    ' → logprob: -7.014216899871826
    5. '<|end|>' → logprob: -7.264216899871826
    6. ' ' → logprob: -7.639216899871826
    7. ' 
' → logprob: -8.014217376708984
    8. ',' → logprob: -8.514217376708984
    9. ' ' → logprob: -8.764217376708984
    10. '      ' → logprob: -9.389217376708984

Token 314: ' idx' (ID: 14016)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5751092433929443
    2. ' while' → logprob: -1.0751092433929443
    3. 'if' → logprob: -3.0751092433929443
    4. ' if' → logprob: -3.2001092433929443
    5. '       ' → logprob: -5.200109481811523
    6. '   ' → logprob: -5.700109481811523
    7. 'import' → logprob: -9.325109481811523
    8. '```' → logprob: -9.825109481811523
    9. '	while' → logprob: -9.950109481811523
    10. '        
' → logprob: -11.200109481811523

Token 315: ',' (ID: 11)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1534150242805481
    2. '<' → logprob: -3.0284149646759033
    3. ' <=' → logprob: -3.9034149646759033
    4. '=' → logprob: -3.9034149646759033
    5. ' =' → logprob: -4.028415203094482
    6. ' >=' → logprob: -4.778415203094482
    7. ' +=' → logprob: -5.278415203094482
    8. ',' → logprob: -5.528415203094482
    9. '<=' → logprob: -5.653415203094482
    10. '>=' → logprob: -5.903415203094482

Token 316: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.2325545847415924
    2. 'while' → logprob: -2.7325546741485596
    3. 'pos' → logprob: -2.9825546741485596
    4. ' cur' → logprob: -3.4825546741485596
    5. ' while' → logprob: -4.1075544357299805
    6. 'bis' → logprob: -4.1075544357299805
    7. 'ans' → logprob: -4.8575544357299805
    8. ' pos' → logprob: -5.9825544357299805
    9. 'idx' → logprob: -6.1075544357299805
    10. 'import' → logprob: -6.1075544357299805

Token 317: '_damage' (ID: 124305)
  Prédit: '_damage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_damage' → logprob: -0.0007338665891438723
    2. 'damage' → logprob: -8.125734329223633
    3. '_' → logprob: -8.250734329223633
    4. ' _' → logprob: -9.750734329223633
    5. '   ' → logprob: -10.625734329223633
    6. ' =' → logprob: -10.875734329223633
    7. '```' → logprob: -11.125734329223633
    8. '=' → logprob: -11.375734329223633
    9. ' damage' → logprob: -11.500734329223633
    10. 'Damage' → logprob: -11.750734329223633

Token 318: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4556511640548706
    2. '=' → logprob: -1.0806511640548706
    3. ',' → logprob: -3.70565128326416
    4. ' +=' → logprob: -6.70565128326416
    5. '+=' → logprob: -7.70565128326416
    6. ' ,' → logprob: -8.83065128326416
    7. ' -=' → logprob: -9.95565128326416
    8. '+' → logprob: -10.33065128326416
    9. ' ' → logprob: -10.83065128326416
    10. '-=' → logprob: -11.33065128326416

Token 319: ' update' (ID: 4027)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -1.0351940393447876
    2. 'update' → logprob: -1.6601940393447876
    3. 'advance' → logprob: -1.6601940393447876
    4. 'apply' → logprob: -3.160193920135498
    5. 'idx' → logprob: -3.410193920135498
    6. 'move' → logprob: -3.660193920135498
    7. ' update' → logprob: -3.660193920135498
    8. ' bis' → logprob: -3.910193920135498
    9. ' advance' → logprob: -4.035193920135498
    10. 'process' → logprob: -4.160193920135498

Token 320: '_damage' (ID: 124305)
  Prédit: '(idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.11852224916219711
    2. 'idx' → logprob: -2.8685221672058105
    3. 'pos' → logprob: -3.6185221672058105
    4. '(pos' → logprob: -4.6185221672058105
    5. 'damage' → logprob: -4.7435221672058105
    6. '(' → logprob: -6.2435221672058105
    7. 'cur' → logprob: -6.9935221672058105
    8. '_idx' → logprob: -7.1185221672058105
    9. 'indices' → logprob: -7.2435221672058105
    10. ' idx' → logprob: -7.2435221672058105

Token 321: '_index' (ID: 7748)
  Prédit: '(idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.32399800419807434
    2. '(pos' → logprob: -1.323997974395752
    3. '(' → logprob: -5.573997974395752
    4. 'pos' → logprob: -5.698997974395752
    5. 'idx' → logprob: -6.573997974395752
    6. ' (' → logprob: -6.948997974395752
    7. '(x' → logprob: -8.07399845123291
    8. '   ' → logprob: -8.57399845123291
    9. ',' → logprob: -8.57399845123291
    10. ' idx' → logprob: -9.44899845123291

Token 322: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.7156893610954285
    2. '(idx' → logprob: -0.7156893610954285
    3. '(' → logprob: -3.9656894207000732
    4. 'pos' → logprob: -6.965689182281494
    5. ' (' → logprob: -7.090689182281494
    6. '(x' → logprob: -7.340689182281494
    7. '(
' → logprob: -8.340689659118652
    8. 'idx' → logprob: -9.215689659118652
    9. ' pos' → logprob: -9.465689659118652
    10. ',' → logprob: -9.590689659118652

Token 323: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019841869361698627
    2. ' ,' → logprob: -6.376984119415283
    3. ',d' → logprob: -8.501984596252441
    4. 'damage' → logprob: -10.751984596252441
    5. '   ' → logprob: -11.126984596252441
    6. ',
' → logprob: -12.001984596252441
    7. 's' → logprob: -12.126984596252441
    8. ',x' → logprob: -13.001984596252441
    9. ' and' → logprob: -13.251984596252441
    10. '[' → logprob: -13.251984596252441

Token 324: ' damage' (ID: 10364)
  Prédit: 'damage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'damage' → logprob: -0.04380664601922035
    2. 'idx' → logprob: -3.668806552886963
    3. ' damage' → logprob: -4.668806552886963
    4. 'cur' → logprob: -5.168806552886963
    5. ' idx' → logprob: -7.418806552886963
    6. '   ' → logprob: -7.668806552886963
    7. 'pos' → logprob: -8.418807029724121
    8. 'x' → logprob: -8.668807029724121
    9. '	damage' → logprob: -8.918807029724121
    10. 'ans' → logprob: -9.043807029724121

Token 325: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003265255654696375
    2. ' ,' → logprob: -8.125326156616211
    3. '   ' → logprob: -10.750326156616211
    4. '[idx' → logprob: -12.625326156616211
    5. '       ' → logprob: -13.750326156616211
    6. ',
' → logprob: -14.000326156616211
    7. 'idx' → logprob: -14.125326156616211
    8. ',x' → logprob: -14.500326156616211
    9. '[],' → logprob: -14.750326156616211
    10. '    ' → logprob: -15.375326156616211

Token 326: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.29818063974380493
    2. 'x' → logprob: -2.04818058013916
    3. ' idx' → logprob: -2.42318058013916
    4. 'D' → logprob: -3.54818058013916
    5. ' x' → logprob: -5.29818058013916
    6. ' D' → logprob: -5.92318058013916
    7. '   ' → logprob: -6.29818058013916
    8. 'cur' → logprob: -7.92318058013916
    9. 'pos' → logprob: -8.04818058013916
    10. '    ' → logprob: -8.54818058013916

Token 327: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001158211671281606
    2. ' ,' → logprob: -9.250115394592285
    3. ',
' → logprob: -11.625115394592285
    4. '   ' → logprob: -13.125115394592285
    5. ')' → logprob: -13.250115394592285
    6. '+' → logprob: -13.375115394592285
    7. ',x' → logprob: -13.625115394592285
    8. 'import' → logprob: -14.375115394592285
    9. '```' → logprob: -14.750115394592285
    10. '),' → logprob: -15.000115394592285

Token 328: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.2258896827697754
    2. ' cur' → logprob: -1.6008896827697754
    3. 'x' → logprob: -7.975889682769775
    4. ' x' → logprob: -9.475889205932617
    5. 'h' → logprob: -10.975889205932617
    6. '   ' → logprob: -11.850889205932617
    7. ' h' → logprob: -11.850889205932617
    8. ' ' → logprob: -12.350889205932617
    9. '	cur' → logprob: -12.600889205932617
    10. 'D' → logprob: -12.850889205932617

Token 329: '_damage' (ID: 124305)
  Prédit: '_damage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_damage' → logprob: -2.975612187583465e-05
    2. 'damage' → logprob: -10.625029563903809
    3. '_DAMAGE' → logprob: -13.375029563903809
    4. 'amage' → logprob: -14.000029563903809
    5. '	damage' → logprob: -14.500029563903809
    6. 'Damage' → logprob: -14.500029563903809
    7. '_' → logprob: -14.875029563903809
    8. '_attack' → logprob: -15.000029563903809
    9. '_d' → logprob: -15.250029563903809
    10. '_distance' → logprob: -15.625029563903809

Token 330: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007391115068458021
    2. ')' → logprob: -7.625739097595215
    3. ' ,' → logprob: -9.250739097595215
    4. '       ' → logprob: -9.875739097595215
    5. ',x' → logprob: -9.875739097595215
    6. ')
' → logprob: -10.750739097595215
    7. '   ' → logprob: -11.250739097595215
    8. ',
' → logprob: -12.125739097595215
    9. '+' → logprob: -12.875739097595215
    10. ' +' → logprob: -13.250739097595215

Token 331: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.20150454342365265
    2. ' x' → logprob: -1.7015045881271362
    3. '   ' → logprob: -10.576504707336426
    4. 'D' → logprob: -10.826504707336426
    5. ' ' → logprob: -11.451504707336426
    6. ')' → logprob: -11.701504707336426
    7. '	x' → logprob: -12.076504707336426
    8. '(x' → logprob: -12.826504707336426
    9. ' D' → logprob: -12.951504707336426
    10. ',' → logprob: -13.201504707336426

Token 332: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08329205960035324
    2. ')' → logprob: -2.583292007446289
    3. '+' → logprob: -6.458292007446289
    4. ' -' → logprob: -6.833292007446289
    5. '-' → logprob: -7.083292007446289
    6. ' +' → logprob: -8.458292007446289
    7. '   ' → logprob: -8.583292007446289
    8. ')
' → logprob: -8.583292007446289
    9. '-D' → logprob: -9.333292007446289
    10. ',D' → logprob: -9.333292007446289

Token 333: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10175837576389313
    2. ',' → logprob: -3.4767584800720215
    3. '<|end|>' → logprob: -3.4767584800720215
    4. ' if' → logprob: -3.9767584800720215
    5. '        
' → logprob: -5.1017584800720215
    6. '```' → logprob: -6.3517584800720215
    7. '        ' → logprob: -6.9767584800720215
    8. '   ' → logprob: -7.1017584800720215
    9. '+' → logprob: -7.1017584800720215
    10. 'if' → logprob: -7.1017584800720215

Token 334: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.31702128052711487
    2. ' if' → logprob: -1.6920212507247925
    3. '       ' → logprob: -2.817021369934082
    4. 'while' → logprob: -4.567021369934082
    5. 'needed' → logprob: -5.192021369934082
    6. ' while' → logprob: -6.192021369934082
    7. 'need' → logprob: -6.317021369934082
    8. 'att' → logprob: -6.567021369934082
    9. 'attack' → logprob: -6.942021369934082
    10. 'required' → logprob: -7.192021369934082

Token 335: ' needs' (ID: 4414)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.05342292785644531
    2. ' cur' → logprob: -3.3034229278564453
    3. 'h' → logprob: -4.303422927856445
    4. 'cur' → logprob: -6.428422927856445
    5. ' ' → logprob: -9.803422927856445
    6. '	h' → logprob: -11.178422927856445
    7. '(cur' → logprob: -11.240922927856445
    8. '   ' → logprob: -11.740922927856445
    9. '	cur' → logprob: -12.553422927856445
    10. ' not' → logprob: -12.678422927856445

Token 336: '_attack' (ID: 118945)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -1.6743627786636353
    2. '_damage' → logprob: -1.6743627786636353
    3. '_to' → logprob: -1.7993627786636353
    4. 'h' → logprob: -1.7993627786636353
    5. 'damage' → logprob: -2.1743626594543457
    6. ' to' → logprob: -2.2993626594543457
    7. 'def' → logprob: -3.1743626594543457
    8. '_attack' → logprob: -5.174362659454346
    9. '=' → logprob: -5.299362659454346
    10. ' =' → logprob: -5.549362659454346

Token 337: '(h' (ID: 8120)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5305497646331787
    2. '=' → logprob: -1.6555497646331787
    3. '(h' → logprob: -1.9055497646331787
    4. ':' → logprob: -2.9055497646331787
    5. '=h' → logprob: -5.155550003051758
    6. 'h' → logprob: -5.905550003051758
    7. ' h' → logprob: -5.905550003051758
    8. ':
' → logprob: -6.280550003051758
    9. ' ' → logprob: -7.405550003051758
    10. ',' → logprob: -7.780550003051758

Token 338: ',' (ID: 11)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -1.0455982685089111
    2. '>' → logprob: -1.2955982685089111
    3. ' >' → logprob: -2.170598268508911
    4. ',' → logprob: -2.420598268508911
    5. '):' → logprob: -2.420598268508911
    6. '-' → logprob: -2.795598268508911
    7. ':' → logprob: -5.045598030090332
    8. '):
' → logprob: -5.420598030090332
    9. ')' → logprob: -5.795598030090332
    10. '-h' → logprob: -6.545598030090332

Token 339: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.18405817449092865
    2. ' cur' → logprob: -1.9340581893920898
    3. '0' → logprob: -4.43405818939209
    4. 'A' → logprob: -6.05905818939209
    5. 'pos' → logprob: -6.18405818939209
    6. 'damage' → logprob: -6.68405818939209
    7. 'x' → logprob: -6.93405818939209
    8. 'h' → logprob: -6.93405818939209
    9. ' ' → logprob: -7.30905818939209
    10. ' A' → logprob: -7.43405818939209

Token 340: '_damage' (ID: 124305)
  Prédit: '_damage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_damage' → logprob: -0.00029029499273747206
    2. 'damage' → logprob: -9.000289916992188
    3. '   ' → logprob: -9.375289916992188
    4. '_DAMAGE' → logprob: -11.125289916992188
    5. '_attack' → logprob: -11.375289916992188
    6. '_' → logprob: -11.500289916992188
    7. 'Damage' → logprob: -12.250289916992188
    8. ',' → logprob: -12.375289916992188
    9. '	damage' → logprob: -12.500289916992188
    10. '```' → logprob: -12.625289916992188

Token 341: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.8691579699516296
    2. ' -' → logprob: -1.1191580295562744
    3. '):
' → logprob: -2.2441580295562744
    4. ',' → logprob: -2.7441580295562744
    5. ' >' → logprob: -3.2441580295562744
    6. '>' → logprob: -3.9941580295562744
    7. '-' → logprob: -4.494157791137695
    8. ' ):' → logprob: -5.369157791137695
    9. ':' → logprob: -6.494157791137695
    10. ' ,' → logprob: -6.619157791137695

Token 342: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05728476122021675
    2. '       ' → logprob: -3.3072848320007324
    3. ',' → logprob: -4.807284832000732
    4. ' ans' → logprob: -5.557284832000732
    5. ':' → logprob: -5.932284832000732
    6. ':
' → logprob: -6.807284832000732
    7. '
' → logprob: -7.557284832000732
    8. '               ' → logprob: -7.932284832000732
    9. '            
' → logprob: -8.307284355163574
    10. '):
' → logprob: -8.432284355163574

Token 343: ' attack' (ID: 10192)
  Prédit: 'attack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'attack' (adapté à ' attack') → logprob: -0.4744369685649872
    2. ' attack' → logprob: -1.7244369983673096
    3. ' attacks' → logprob: -2.5994369983673096
    4. '           ' → logprob: -3.5994369983673096
    5. 'att' → logprob: -4.2244367599487305
    6. 'num' → logprob: -4.4744367599487305
    7. ' atk' → logprob: -4.4744367599487305
    8. '       ' → logprob: -4.5994367599487305
    9. 'times' → logprob: -4.9744367599487305
    10. ' num' → logprob: -5.0994367599487305

Token 344: '_amt' (ID: 114610)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.5394036769866943
    2. '_times' → logprob: -2.0394036769866943
    3. 's' → logprob: -2.2894036769866943
    4. '_num' → logprob: -2.5394036769866943
    5. '_range' → logprob: -2.9144036769866943
    6. '_cnt' → logprob: -3.1644036769866943
    7. '_needed' → logprob: -5.914403915405273
    8. '_damage' → logprob: -6.289403915405273
    9. '_len' → logprob: -6.539403915405273
    10. '_points' → logprob: -7.539403915405273

Token 345: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22068649530410767
    2. 's' → logprob: -1.720686435699463
    3. '=' → logprob: -3.970686435699463
    4. '   ' → logprob: -9.095686912536621
    5. ',' → logprob: -9.595686912536621
    6. ' ' → logprob: -10.845686912536621
    7. ' s' → logprob: -11.345686912536621
    8. '_tokens' → logprob: -12.470686912536621
    9. '  ' → logprob: -12.720686912536621
    10. ')' → logprob: -13.470686912536621

Token 346: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.033613771200180054
    2. ' h' → logprob: -3.783613681793213
    3. 'ceil' → logprob: -4.658613681793213
    4. '(h' → logprob: -8.033614158630371
    5. ' ceil' → logprob: -8.533614158630371
    6. '(' → logprob: -8.658614158630371
    7. ' (' → logprob: -9.533614158630371
    8. '	h' → logprob: -11.033614158630371
    9. '   ' → logprob: -11.158614158630371
    10. ' ' → logprob: -11.783614158630371

Token 347: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2519479990005493
    2. '-' → logprob: -1.5019479990005493
    3. '<|end|>' → logprob: -12.001948356628418
    4. ' ' → logprob: -12.126948356628418
    5. ',' → logprob: -13.501948356628418
    6. '
' → logprob: -13.626948356628418
    7. '  ' → logprob: -13.626948356628418
    8. ' -=' → logprob: -13.876948356628418
    9. '<|end|>' → logprob: -14.001948356628418
    10. ' ' → logprob: -14.751948356628418

Token 348: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.00023059594968799502
    2. ' cur' → logprob: -8.37523078918457
    3. '	cur' → logprob: -17.75023078918457
    4. '0' → logprob: -18.25023078918457
    5. '   ' → logprob: -19.00023078918457
    6. '(cur' → logprob: -19.37523078918457
    7. ' ' → logprob: -19.37523078918457
    8. '_cur' → logprob: -19.37523078918457
    9. '[cur' → logprob: -19.37523078918457
    10. 'curr' → logprob: -19.62523078918457

Token 349: '_damage' (ID: 124305)
  Prédit: '_damage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_damage' → logprob: -1.27099974633893e-05
    2. 'damage' → logprob: -11.625012397766113
    3. '_attack' → logprob: -13.375012397766113
    4. 'amage' → logprob: -13.750012397766113
    5. '_DAMAGE' → logprob: -14.250012397766113
    6. '	damage' → logprob: -15.375012397766113
    7. 'Damage' → logprob: -16.25001335144043
    8. '.damage' → logprob: -16.62501335144043
    9. ' damage' → logprob: -16.75001335144043
    10. '_d' → logprob: -17.00001335144043

Token 350: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.055463146418333054
    2. '
' → logprob: -3.0554630756378174
    3. '<|end|>' → logprob: -5.5554633140563965
    4. ',' → logprob: -7.1804633140563965
    5. '            
' → logprob: -7.6804633140563965
    6. '       ' → logprob: -7.9304633140563965
    7. '<|end|>' → logprob: -8.055462837219238
    8. ')' → logprob: -8.180462837219238
    9. 'pos' → logprob: -9.055462837219238
    10. '               ' → logprob: -9.180462837219238

Token 351: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7365775108337402
    2. '           ' → logprob: -0.7365775108337402
    3. ',' → logprob: -3.7365775108337402
    4. '       ' → logprob: -5.36157751083374
    5. '            
' → logprob: -5.48657751083374
    6. 'pos' → logprob: -6.36157751083374
    7. ',
' → logprob: -6.61157751083374
    8. '        
' → logprob: -6.98657751083374
    9. '```' → logprob: -7.11157751083374
    10. ',pos' → logprob: -7.48657751083374

Token 352: ' record' (ID: 3704)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.30776721239089966
    2. 'ans' → logprob: -1.4327671527862549
    3. 'attack' → logprob: -4.057767391204834
    4. '   ' → logprob: -6.807767391204834
    5. 'start' → logprob: -6.807767391204834
    6. ' ans' → logprob: -6.932767391204834
    7. ' pos' → logprob: -7.057767391204834
    8. 'damage' → logprob: -7.182767391204834
    9. 'att' → logprob: -7.307767391204834
    10. 'x' → logprob: -7.682767391204834

Token 353: '_attack' (ID: 118945)
  Prédit: '_attack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_attack' → logprob: -0.1324339658021927
    2. '_pos' → logprob: -3.2574338912963867
    3. '_damage' → logprob: -3.2574338912963867
    4. '(pos' → logprob: -3.8824338912963867
    5. '_positions' → logprob: -4.257433891296387
    6. '_position' → logprob: -5.507433891296387
    7. 'ed' → logprob: -6.882433891296387
    8. 's' → logprob: -7.007433891296387
    9. ' =' → logprob: -7.132433891296387
    10. '_att' → logprob: -7.257433891296387

Token 354: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.12255044281482697
    2. '_pos' → logprob: -2.9975504875183105
    3. '_amount' → logprob: -3.8725504875183105
    4. 's' → logprob: -3.8725504875183105
    5. 'pos' → logprob: -3.9975504875183105
    6. '(' → logprob: -5.8725504875183105
    7. '_positions' → logprob: -7.1225504875183105
    8. '_amt' → logprob: -8.122550010681152
    9. ',pos' → logprob: -8.622550010681152
    10. '(position' → logprob: -8.622550010681152

Token 355: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017982252757064998
    2. '.append' → logprob: -9.3751802444458
    3. ' ,' → logprob: -10.1251802444458
    4. '<|end|>' → logprob: -10.3751802444458
    5. ',d' → logprob: -11.3751802444458
    6. 'append' → logprob: -12.6251802444458
    7. ')' → logprob: -13.2501802444458
    8. '<|end|>' → logprob: -13.7501802444458
    9. ',
' → logprob: -14.1251802444458
    10. ',p' → logprob: -14.3751802444458

Token 356: ' damage' (ID: 10364)
  Prédit: 'damage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'damage' → logprob: -0.0855223760008812
    2. ' damage' → logprob: -2.710522413253784
    3. 'attack' → logprob: -4.210522174835205
    4. ' attack' → logprob: -7.835522174835205
    5. '	damage' → logprob: -9.210522651672363
    6. 'dam' → logprob: -9.835522651672363
    7. '   ' → logprob: -11.210522651672363
    8. 'd' → logprob: -11.335522651672363
    9. ' ' → logprob: -11.585522651672363
    10. 'distance' → logprob: -12.335522651672363

Token 357: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.44443862256594e-05
    2. ' ,' → logprob: -9.750064849853516
    3. '.append' → logprob: -12.875064849853516
    4. ',
' → logprob: -13.500064849853516
    5. '   ' → logprob: -15.375064849853516
    6. ',x' → logprob: -15.625064849853516
    7. '),' → logprob: -15.750064849853516
    8. '‌,' → logprob: -15.875064849853516
    9. ')' → logprob: -16.250064849853516
    10. ',index' → logprob: -16.250064849853516

Token 358: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.09495928883552551
    2. ' x' → logprob: -2.844959259033203
    3. 'attack' → logprob: -3.594959259033203
    4. 'idx' → logprob: -5.844959259033203
    5. ' attack' → logprob: -7.219959259033203
    6. ' idx' → logprob: -7.969959259033203
    7. 'D' → logprob: -8.469959259033203
    8. 'ans' → logprob: -8.594959259033203
    9. 'len' → logprob: -8.719959259033203
    10. '   ' → logprob: -8.719959259033203

Token 359: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.049830254167318344
    2. '+' → logprob: -3.549830198287964
    3. ' +' → logprob: -3.924830198287964
    4. ' ,' → logprob: -10.299830436706543
    5. '+,' → logprob: -10.924830436706543
    6. ')' → logprob: -11.049830436706543
    7. '   ' → logprob: -11.174830436706543
    8. 'attack' → logprob: -11.299830436706543
    9. '),' → logprob: -12.174830436706543
    10. ',
' → logprob: -12.174830436706543

Token 360: ' D' (ID: 415)
  Prédit: 'attack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'attack' → logprob: -0.11014192551374435
    2. 'D' → logprob: -2.3601419925689697
    3. ' attack' → logprob: -5.235141754150391
    4. ' D' → logprob: -5.985141754150391
    5. 'x' → logprob: -6.610141754150391
    6. '2' → logprob: -8.11014175415039
    7. ' ' → logprob: -9.86014175415039
    8. '1' → logprob: -10.23514175415039
    9. ' x' → logprob: -10.23514175415039
    10. '   ' → logprob: -10.23514175415039

Token 361: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009072208777070045
    2. '*' → logprob: -5.509072303771973
    3. ' *' → logprob: -5.509072303771973
    4. '//' → logprob: -8.134072303771973
    5. '+' → logprob: -8.634072303771973
    6. ' +' → logprob: -8.884072303771973
    7. ' ,' → logprob: -9.009072303771973
    8. ' //' → logprob: -9.634072303771973
    9. '   ' → logprob: -10.009072303771973
    10. ')' → logprob: -10.009072303771973

Token 362: ' attack' (ID: 10192)
  Prédit: 'attack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'attack' → logprob: -0.001704102149233222
    2. ' attack' → logprob: -6.376704216003418
    3. 'att' → logprob: -13.751704216003418
    4. 'answer' → logprob: -15.376704216003418
    5. '   ' → logprob: -15.501704216003418
    6. ' ' → logprob: -16.6267032623291
    7. ' ' → logprob: -16.7517032623291
    8. '.attack' → logprob: -16.8767032623291
    9. 'attaque' → logprob: -17.5017032623291
    10. ')' → logprob: -17.8767032623291

Token 363: '_amt' (ID: 114610)
  Prédit: '_amt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_amt' → logprob: -4.320199877838604e-07
    2. 'amt' → logprob: -14.875
    3. '_amount' → logprob: -17.625
    4. '_amp' → logprob: -17.75
    5. 'Amt' → logprob: -18.25
    6. '_' → logprob: -19.5
    7. '_qty' → logprob: -19.5
    8. '_cnt' → logprob: -19.625
    9. 'a' → logprob: -19.875
    10. ')' → logprob: -20.125

Token 364: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020862653851509094
    2. ')
' → logprob: -3.895862579345703
    3. ',' → logprob: -8.270862579345703
    4. ' )' → logprob: -10.770862579345703
    5. '           ' → logprob: -11.020862579345703
    6. '       ' → logprob: -11.645862579345703
    7. '   ' → logprob: -11.770862579345703
    8. ')

' → logprob: -12.270862579345703
    9. ')
' → logprob: -12.770862579345703
    10. ' )
' → logprob: -13.645862579345703

Token 365: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00026622318546287715
    2. '       ' → logprob: -8.750266075134277
    3. ',' → logprob: -10.375266075134277
    4. ' ans' → logprob: -11.000266075134277
    5. '               ' → logprob: -11.125266075134277
    6. '   ' → logprob: -11.125266075134277
    7. '
' → logprob: -11.375266075134277
    8. '          ' → logprob: -11.500266075134277
    9. 'ans' → logprob: -13.375266075134277
    10. '<|end|>' → logprob: -13.375266075134277

Token 366: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0665028840303421
    2. ' ans' → logprob: -2.941502809524536
    3. '           ' → logprob: -4.816503047943115
    4. 'cur' → logprob: -5.941503047943115
    5. '   ' → logprob: -7.566503047943115
    6. ' cur' → logprob: -8.941502571105957
    7. '       ' → logprob: -9.441502571105957
    8. '	ans' → logprob: -10.066502571105957
    9. 'answer' → logprob: -11.441502571105957
    10. '
' → logprob: -11.691502571105957

Token 367: ',' (ID: 11)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.002805821830406785
    2. '+=' → logprob: -5.877805709838867
    3. '+' → logprob: -14.502805709838867
    4. ' =' → logprob: -16.002805709838867
    5. ' +' → logprob: -16.377805709838867
    6. ']+=' → logprob: -16.752805709838867
    7. ' ' → logprob: -16.877805709838867
    8. '    ' → logprob: -17.127805709838867
    9. ' ' → logprob: -17.627805709838867
    10. '=' → logprob: -18.002805709838867

Token 368: ' cur' (ID: 4396)
  Prédit: ' cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cur' → logprob: -0.020690780133008957
    2. 'cur' → logprob: -3.895690679550171
    3. ' ans' → logprob: -9.14569091796875
    4. ' ' → logprob: -11.89569091796875
    5. '_cur' → logprob: -11.89569091796875
    6. ' pos' → logprob: -12.27069091796875
    7. '(cur' → logprob: -12.52069091796875
    8. ' continue' → logprob: -12.89569091796875
    9. ' curr' → logprob: -13.14569091796875
    10. '
' → logprob: -13.52069091796875

Token 369: '_damage' (ID: 124305)
  Prédit: '_damage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_damage' → logprob: -5.676981345459353e-06
    2. '_' → logprob: -13.000005722045898
    3. 'damage' → logprob: -13.500005722045898
    4. '_attack' → logprob: -13.625005722045898
    5. '_DAMAGE' → logprob: -14.625005722045898
    6. '	damage' → logprob: -16.0000057220459
    7. '_d' → logprob: -16.1250057220459
    8. 'Damage' → logprob: -16.5000057220459
    9. ' _' → logprob: -17.5000057220459
    10. ' damage' → logprob: -17.6250057220459

Token 370: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2520975172519684
    2. '+=' → logprob: -1.502097487449646
    3. '=' → logprob: -9.377097129821777
    4. ' =' → logprob: -10.002097129821777
    5. '+' → logprob: -10.377097129821777
    6. ' ' → logprob: -12.127097129821777
    7. ']+=' → logprob: -13.752097129821777
    8. '   ' → logprob: -14.877097129821777
    9. ' +' → logprob: -15.877097129821777
    10. '  ' → logprob: -16.377098083496094

Token 371: ' update' (ID: 4027)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.47449085116386414
    2. 'ans' → logprob: -0.9744908809661865
    3. '(ans' → logprob: -7.849490642547607
    4. '	ans' → logprob: -11.474491119384766
    5. '   ' → logprob: -12.849491119384766
    6. '           ' → logprob: -13.224491119384766
    7. 'att' → logprob: -13.349491119384766
    8. 'add' → logprob: -13.849491119384766
    9. 'update' → logprob: -14.349491119384766
    10. '_ans' → logprob: -14.349491119384766

Token 372: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -1.2157570123672485
    2. '(ans' → logprob: -1.4657570123672485
    3. '_answer' → logprob: -1.5907570123672485
    4. '_acc' → logprob: -2.215756893157959
    5. '_attack' → logprob: -2.965756893157959
    6. ' ans' → logprob: -3.215756893157959
    7. '_damage' → logprob: -4.090756893157959
    8. '_count' → logprob: -4.340756893157959
    9. 'ans' → logprob: -4.340756893157959
    10. '_total' → logprob: -4.965756893157959

Token 373: '_cur' (ID: 46382)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0023083386477082968
    2. '(' → logprob: -6.377308368682861
    3. ',' → logprob: -8.627307891845703
    4. ' (' → logprob: -8.752307891845703
    5. '_and' → logprob: -9.252307891845703
    6. 'ans' → logprob: -9.752307891845703
    7. '(answer' → logprob: -10.627307891845703
    8. '   ' → logprob: -11.127307891845703
    9. '(acc' → logprob: -11.377307891845703
    10. '_ans' → logprob: -11.377307891845703

Token 374: '_damage' (ID: 124305)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.04710585996508598
    2. '_damage' → logprob: -3.4221057891845703
    3. 'damage' → logprob: -5.17210578918457
    4. 'ans' → logprob: -5.67210578918457
    5. '(' → logprob: -5.79710578918457
    6. '(answer' → logprob: -7.79710578918457
    7. '   ' → logprob: -8.29710578918457
    8. '(
' → logprob: -9.79710578918457
    9. '_ans' → logprob: -10.17210578918457
    10. '	ans' → logprob: -10.29710578918457

Token 375: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.000217006730963476
    2. '(' → logprob: -8.75021743774414
    3. ' (' → logprob: -9.87521743774414
    4. '   ' → logprob: -13.25021743774414
    5. '(
' → logprob: -13.25021743774414
    6. '(answer' → logprob: -14.00021743774414
    7. 'ans' → logprob: -14.25021743774414
    8. '           ' → logprob: -14.25021743774414
    9. ' ans' → logprob: -14.75021743774414
    10. ',' → logprob: -15.25021743774414

Token 376: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013711919309571385
    2. ' ,' → logprob: -6.751371383666992
    3. ' +' → logprob: -9.001371383666992
    4. '+' → logprob: -9.626371383666992
    5. '+,' → logprob: -11.626371383666992
    6. ',
' → logprob: -13.626371383666992
    7. '‌,' → logprob: -15.251371383666992
    8. ',+' → logprob: -15.251371383666992
    9. ',

' → logprob: -15.626371383666992
    10. '   ' → logprob: -16.001371383666992

Token 377: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.1797403246164322
    2. ' cur' → logprob: -2.0547404289245605
    3. 'attack' → logprob: -3.4297404289245605
    4. ' attack' → logprob: -5.5547404289245605
    5. '	cur' → logprob: -10.554739952087402
    6. ' ' → logprob: -10.679739952087402
    7. '   ' → logprob: -10.804739952087402
    8. 'curr' → logprob: -11.867239952087402
    9. 'att' → logprob: -11.929739952087402
    10. '```' → logprob: -12.242239952087402

Token 378: '_damage' (ID: 124305)
  Prédit: '_damage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_damage' → logprob: -7.362307223957032e-05
    2. 'damage' → logprob: -10.000073432922363
    3. '_attack' → logprob: -11.500073432922363
    4. 'Damage' → logprob: -11.875073432922363
    5. '_DAMAGE' → logprob: -12.000073432922363
    6. '	damage' → logprob: -13.500073432922363
    7. '_amount' → logprob: -13.875073432922363
    8. 'amage' → logprob: -14.125073432922363
    9. ' damage' → logprob: -15.000073432922363
    10. ',' → logprob: -15.500073432922363

Token 379: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001293808571062982
    2. ' ,' → logprob: -6.751293659210205
    3. '+' → logprob: -9.751294136047363
    4. ' +' → logprob: -9.876294136047363
    5. '+,' → logprob: -11.626294136047363
    6. ',
' → logprob: -12.501294136047363
    7. ')' → logprob: -15.626294136047363
    8. 'attack' → logprob: -16.001293182373047
    9. '‌,' → logprob: -16.001293182373047
    10. 'import' → logprob: -16.251293182373047

Token 380: ' attack' (ID: 10192)
  Prédit: 'attack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'attack' → logprob: -0.018150994554162025
    2. ' attack' → logprob: -4.018150806427002
    3. 'att' → logprob: -14.14315128326416
    4. '.attack' → logprob: -15.89315128326416
    5. '_attack' → logprob: -17.393150329589844
    6. '   ' → logprob: -17.893150329589844
    7. ' ' → logprob: -18.018150329589844
    8. ' ataque' → logprob: -18.018150329589844
    9. '           ' → logprob: -18.018150329589844
    10. '    ' → logprob: -18.143150329589844

Token 381: '_amt' (ID: 114610)
  Prédit: '_amt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_amt' → logprob: 0.0
    2. '_amp' → logprob: -17.125
    3. 'amt' → logprob: -17.5
    4. '_amount' → logprob: -18.25
    5. 'Amt' → logprob: -18.75
    6. ' Amt' → logprob: -20.75
    7. '_cnt' → logprob: -20.75
    8. 'ment' → logprob: -21.625
    9. '_' → logprob: -21.875
    10. '_qty' → logprob: -22.0

Token 382: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.042532045394182205
    2. ')
' → logprob: -3.542531967163086
    3. ',' → logprob: -4.417531967163086
    4. '   ' → logprob: -8.417531967163086
    5. '           ' → logprob: -9.167531967163086
    6. '       ' → logprob: -9.292531967163086
    7. '<|end|>' → logprob: -9.792531967163086
    8. ' )' → logprob: -10.292531967163086
    9. ')return' → logprob: -10.417531967163086
    10. '),' → logprob: -10.667531967163086

Token 383: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10848283022642136
    2. '<|end|>' → logprob: -2.608482837677002
    3. '       ' → logprob: -3.858482837677002
    4. 'return' → logprob: -5.733482837677002
    5. ' return' → logprob: -6.233482837677002
    6. 'def' → logprob: -6.858482837677002
    7. '<|end|>' → logprob: -7.608482837677002
    8. '
' → logprob: -8.233482360839844
    9. '	return' → logprob: -8.483482360839844
    10. ',' → logprob: -8.483482360839844

Token 384: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.049610771238803864
    2. ' return' → logprob: -3.2996108531951904
    3. 'return' (adapté à ' return') → logprob: -4.799610614776611
    4. '<|end|>' → logprob: -6.674610614776611
    5. '	return' → logprob: -6.924610614776611
    6. '
' → logprob: -7.674610614776611
    7. '       ' → logprob: -8.54961109161377
    8. '    
' → logprob: -9.29961109161377
    9. ' ' → logprob: -9.67461109161377
    10. 'def' → logprob: -9.79961109161377

Token 385: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.04859872907400131
    2. ' ans' → logprob: -3.0485987663269043
    3. '(ans' → logprob: -11.798598289489746
    4. 'pos' → logprob: -12.923598289489746
    5. '	ans' → logprob: -13.673598289489746
    6. ' pos' → logprob: -15.423598289489746
    7. '   ' → logprob: -17.673599243164062
    8. ' ' → logprob: -18.173599243164062
    9. '_ans' → logprob: -18.798599243164062
    10. ' ' → logprob: -19.048599243164062

Token 386: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011522850021719933
    2. '
' → logprob: -4.7615227699279785
    3. '<|end|>' → logprob: -6.3865227699279785
    4. ' def' → logprob: -8.136523246765137
    5. ':def' → logprob: -8.511523246765137
    6. '_def' → logprob: -8.636523246765137
    7. ':' → logprob: -8.761523246765137
    8. '```' → logprob: -8.886523246765137
    9. ',' → logprob: -10.011523246765137
    10. '_' → logprob: -10.136523246765137

Token 387: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.019197948276996613
    2. '(' → logprob: -4.894197940826416
    3. ':' → logprob: -5.894197940826416
    4. ',' → logprob: -5.894197940826416
    5. '(
' → logprob: -7.019197940826416
    6. '_' → logprob: -7.019197940826416
    7. '<|end|>' → logprob: -7.019197940826416
    8. '[' → logprob: -7.144197940826416
    9. ' def' → logprob: -7.269197940826416
    10. '   ' → logprob: -7.394197940826416

Token 388: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.17994020879268646
    2. ' update' → logprob: -1.8049402236938477
    3. ' needs' → logprob: -9.054940223693848
    4. 'needs' → logprob: -9.554940223693848
    5. '	update' → logprob: -13.804940223693848
    6. 'def' → logprob: -13.804940223693848
    7. 'record' → logprob: -14.554940223693848
    8. ' ' → logprob: -14.554940223693848
    9. 'up' → logprob: -14.867440223693848
    10. 'u' → logprob: -14.992440223693848

Token 389: '_damage' (ID: 124305)
  Prédit: '_damage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_damage' → logprob: -0.00011248346709180623
    2. 'damage' → logprob: -9.375112533569336
    3. '_' → logprob: -11.875112533569336
    4. '_attack' → logprob: -11.875112533569336
    5. '_positions' → logprob: -12.250112533569336
    6. '_position' → logprob: -12.500112533569336
    7. '_pos' → logprob: -13.750112533569336
    8. '_d' → logprob: -13.875112533569336
    9. '_indices' → logprob: -14.625112533569336
    10. '_def' → logprob: -14.750112533569336

Token 390: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0006452414090745151
    2. '_idx' → logprob: -7.375645160675049
    3. '_' → logprob: -12.375645637512207
    4. '_indices' → logprob: -12.625645637512207
    5. 'index' → logprob: -13.000645637512207
    6. '_amount' → logprob: -13.250645637512207
    7. '_at' → logprob: -13.500645637512207
    8. '_indexes' → logprob: -13.625645637512207
    9. ',' → logprob: -14.250645637512207
    10. '_and' → logprob: -14.625645637512207

Token 391: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -3.2020991056924686e-05
    2. '(' → logprob: -10.375032424926758
    3. ' (' → logprob: -14.750032424926758
    4. '(position' → logprob: -16.250032424926758
    5. ',pos' → logprob: -16.250032424926758
    6. '(p' → logprob: -16.750032424926758
    7. '(Pos' → logprob: -17.250032424926758
    8. '[pos' → logprob: -17.500032424926758
    9. ' pos' → logprob: -18.375032424926758
    10. '(po' → logprob: -18.375032424926758

Token 392: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.816093228830141e-06
    2. ' ,' → logprob: -12.87500286102295
    3. ',d' → logprob: -16.250001907348633
    4. '   ' → logprob: -17.375001907348633
    5. ',pos' → logprob: -17.625001907348633
    6. ',
' → logprob: -17.875001907348633
    7. '‌,' → logprob: -19.375001907348633
    8. '[],' → logprob: -19.875001907348633
    9. 'def' → logprob: -20.000001907348633
    10. ',int' → logprob: -20.125001907348633

Token 393: ' damage' (ID: 10364)
  Prédit: 'damage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'damage' → logprob: -0.03804665803909302
    2. ' damage' → logprob: -3.2880465984344482
    3. '	damage' → logprob: -12.788046836853027
    4. '.damage' → logprob: -13.788046836853027
    5. 'dam' → logprob: -14.038046836853027
    6. '_damage' → logprob: -16.03804588317871
    7. 'd' → logprob: -16.16304588317871
    8. 'def' → logprob: -16.28804588317871
    9. 'Damage' → logprob: -16.66304588317871
    10. ' ' → logprob: -17.16304588317871

Token 394: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.590104698669165e-05
    2. ' ,' → logprob: -9.375085830688477
    3. '   ' → logprob: -14.125085830688477
    4. ',
' → logprob: -15.875085830688477
    5. ',int' → logprob: -17.500085830688477
    6. ',index' → logprob: -17.625085830688477
    7. '‌,' → logprob: -18.000085830688477
    8. '_,' → logprob: -18.250085830688477
    9. ',pos' → logprob: -18.500085830688477
    10. '```' → logprob: -18.875085830688477

Token 395: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.006715967319905758
    2. ' idx' → logprob: -5.006715774536133
    3. '	idx' → logprob: -14.881715774536133
    4. 'index' → logprob: -15.506715774536133
    5. '   ' → logprob: -17.256715774536133
    6. ' ' → logprob: -17.506715774536133
    7. '_idx' → logprob: -18.006715774536133
    8. '```' → logprob: -18.631715774536133
    9. 'i' → logprob: -19.506715774536133
    10. '  ' → logprob: -19.881715774536133

Token 396: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.541112427134067e-05
    2. ' ,' → logprob: -9.500075340270996
    3. ',
' → logprob: -15.500075340270996
    4. ',x' → logprob: -15.750075340270996
    5. '   ' → logprob: -16.000076293945312
    6. '_,' → logprob: -17.625076293945312
    7. '```' → logprob: -17.625076293945312
    8. ',current' → logprob: -17.875076293945312
    9. '‌,' → logprob: -18.625076293945312
    10. '`,' → logprob: -19.125076293945312

Token 397: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -7.493430894101039e-05
    2. ' cur' → logprob: -9.500075340270996
    3. '	cur' → logprob: -17.12507438659668
    4. '(cur' → logprob: -19.50007438659668
    5. '_cur' → logprob: -20.12507438659668
    6. '[cur' → logprob: -20.25007438659668
    7. '```' → logprob: -20.25007438659668
    8. ' ' → logprob: -20.37507438659668
    9. 'curr' → logprob: -20.50007438659668
    10. '   ' → logprob: -20.62507438659668

Token 398: '_damage' (ID: 124305)
  Prédit: '_damage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_damage' → logprob: -1.0683535037969705e-05
    2. 'damage' → logprob: -12.25001049041748
    3. '_idx' → logprob: -13.37501049041748
    4. ',' → logprob: -13.50001049041748
    5. '_d' → logprob: -14.12501049041748
    6. '_DAMAGE' → logprob: -14.25001049041748
    7. '_' → logprob: -14.75001049041748
    8. ' _' → logprob: -15.37501049041748
    9. '```' → logprob: -15.62501049041748
    10. '	damage' → logprob: -15.75001049041748

Token 399: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.1054253011243418e-05
    2. ' ,' → logprob: -10.875020980834961
    3. '   ' → logprob: -13.750020980834961
    4. ',x' → logprob: -14.250020980834961
    5. ',
' → logprob: -15.375020980834961
    6. '```' → logprob: -17.75002098083496
    7. '_,' → logprob: -18.00002098083496
    8. 'def' → logprob: -18.75002098083496
    9. '):
' → logprob: -18.87502098083496
    10. '):' → logprob: -18.87502098083496

Token 400: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.005894545465707779
    2. ' x' → logprob: -5.505894660949707
    3. 'target' → logprob: -7.505894660949707
    4. 'cur' → logprob: -8.005894660949707
    5. 'current' → logprob: -8.130894660949707
    6. 'now' → logprob: -8.755894660949707
    7. 'attack' → logprob: -9.630894660949707
    8. 'pos' → logprob: -9.880894660949707
    9. '   ' → logprob: -10.005894660949707
    10. 'X' → logprob: -10.255894660949707

Token 401: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004638861399143934
    2. '):
' → logprob: -5.379638671875
    3. '):
' → logprob: -11.629638671875
    4. ')' → logprob: -12.254638671875
    5. ' ):' → logprob: -13.379638671875
    6. '   ' → logprob: -13.379638671875
    7. ':' → logprob: -14.004638671875
    8. '):

' → logprob: -14.254638671875
    9. ',' → logprob: -15.004638671875
    10. '}:' → logprob: -17.629638671875

Token 402: '   ' (ID: 271)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.25408992171287537
    2. 'while' → logprob: -1.6290899515151978
    3. '   ' → logprob: -4.129089832305908
    4. '<|end|>' → logprob: -5.004089832305908
    5. ' 
' → logprob: -6.379089832305908
    6. '	while' → logprob: -6.504089832305908
    7. ' ' → logprob: -6.879089832305908
    8. '    ' → logprob: -8.129090309143066
    9. '
' → logprob: -8.379090309143066
    10. '    
' → logprob: -8.504090309143066

Token 403: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.2822400629520416
    2. ' while' → logprob: -1.4072400331497192
    3. '   ' → logprob: -7.03223991394043
    4. '	while' → logprob: -8.65723991394043
    5. 'import' → logprob: -12.03223991394043
    6. ' 
' → logprob: -12.03223991394043
    7. '```' → logprob: -12.15723991394043
    8. 'if' → logprob: -13.03223991394043
    9. 'for' → logprob: -13.03223991394043
    10. '
' → logprob: -13.28223991394043

Token 404: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.014320865273475647
    2. ' idx' → logprob: -4.2643208503723145
    3. '	idx' → logprob: -8.889321327209473
    4. '(idx' → logprob: -11.139321327209473
    5. 'pos' → logprob: -12.889321327209473
    6. '   ' → logprob: -14.014321327209473
    7. 'len' → logprob: -14.014321327209473
    8. '_idx' → logprob: -15.389321327209473
    9. ' ' → logprob: -15.889321327209473
    10. ' pos' → logprob: -16.389320373535156

Token 405: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.32841217517852783
    2. '<len' → logprob: -1.3284121751785278
    3. ' <' → logprob: -4.203412055969238
    4. '<size' → logprob: -9.953412055969238
    5. 'len' → logprob: -11.078412055969238
    6. '[' → logprob: -11.453412055969238
    7. '<num' → logprob: -12.078412055969238
    8. '<ll' → logprob: -12.953412055969238
    9. '<n' → logprob: -13.453412055969238
    10. '<data' → logprob: -13.703412055969238

Token 406: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.1472419600977446e-06
    2. ' len' → logprob: -13.750000953674316
    3. '(len' → logprob: -17.875001907348633
    4. '   ' → logprob: -18.250001907348633
    5. '	len' → logprob: -20.375001907348633
    6. '
' → logprob: -20.500001907348633
    7. '=len' → logprob: -21.875001907348633
    8. '[len' → logprob: -22.000001907348633
    9. '<len' → logprob: -22.125001907348633
    10. ' ' → logprob: -22.875001907348633

Token 407: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.003323865123093128
    2. 'pos' → logprob: -5.753324031829834
    3. '(' → logprob: -9.378323554992676
    4. 'damage' → logprob: -10.003323554992676
    5. '(d' → logprob: -11.628323554992676
    6. ' pos' → logprob: -12.378323554992676
    7. '(position' → logprob: -14.378323554992676
    8. '[pos' → logprob: -14.628323554992676
    9. '	pos' → logprob: -14.753323554992676
    10. ' (' → logprob: -14.753323554992676

Token 408: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009973214473575354
    2. 'and' → logprob: -7.500997543334961
    3. ' )' → logprob: -8.250997543334961
    4. ' and' → logprob: -8.625997543334961
    5. '')' → logprob: -14.250997543334961
    6. '[' → logprob: -14.250997543334961
    7. '   ' → logprob: -14.500997543334961
    8. '")' → logprob: -15.250997543334961
    9. '）' → logprob: -15.500997543334961
    10. '    ' → logprob: -15.500997543334961

Token 409: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.029754074290394783
    2. ' and' → logprob: -3.529754161834717
    3. '   ' → logprob: -13.154753684997559
    4. '    ' → logprob: -14.904753684997559
    5. ' ' → logprob: -15.154753684997559
    6. '	and' → logprob: -15.154753684997559
    7. '  ' → logprob: -15.779753684997559
    8. '
' → logprob: -16.154754638671875
    9. '          ' → logprob: -16.279754638671875
    10. '      ' → logprob: -16.529754638671875

Token 410: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.02056220732629299
    2. ' pos' → logprob: -3.895562171936035
    3. 'x' → logprob: -11.145562171936035
    4. '(pos' → logprob: -13.145562171936035
    5. '	pos' → logprob: -13.395562171936035
    6. '   ' → logprob: -13.520562171936035
    7. ' x' → logprob: -14.145562171936035
    8. '[pos' → logprob: -16.27056312561035
    9. ' ' → logprob: -16.27056312561035
    10. '  ' → logprob: -17.14556312561035

Token 411: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.00025645215646363795
    2. '[' → logprob: -8.750256538391113
    3. 'idx' → logprob: -10.250256538391113
    4. ' [' → logprob: -10.375256538391113
    5. '   ' → logprob: -11.875256538391113
    6. '```' → logprob: -12.000256538391113
    7. '[i' → logprob: -12.750256538391113
    8. ' idx' → logprob: -13.000256538391113
    9. '[
' → logprob: -13.125256538391113
    10. '[index' → logprob: -13.500256538391113

Token 412: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8783096671104431
    2. '[' → logprob: -1.378309726715088
    3. '<=' → logprob: -1.628309726715088
    4. ' <=' → logprob: -2.628309726715088
    5. ')' → logprob: -3.503309726715088
    6. ']<=' → logprob: -3.753309726715088
    7. ')<=' → logprob: -5.003309726715088
    8. ' ]' → logprob: -6.253309726715088
    9. ' ' → logprob: -8.00330924987793
    10. '<' → logprob: -8.12830924987793

Token 413: ' <' (ID: 464)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.005946221761405468
    2. ' <=' → logprob: -5.130946159362793
    3. '[' → logprob: -11.630946159362793
    4. '<' → logprob: -11.880946159362793
    5. ')<=' → logprob: -14.130946159362793
    6. ']<=' → logprob: -14.755946159362793
    7. '>' → logprob: -15.380946159362793
    8. '≤' → logprob: -16.13094711303711
    9. ' ' → logprob: -16.13094711303711
    10. ' <' → logprob: -16.38094711303711

Token 414: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.002527149161323905
    2. ' x' → logprob: -6.002527236938477
    3. '=' → logprob: -10.002527236938477
    4. '=x' → logprob: -12.127527236938477
    5. '	x' → logprob: -15.127527236938477
    6. '
' → logprob: -16.252527236938477
    7. ' =' → logprob: -16.627527236938477
    8. ')x' → logprob: -16.752527236938477
    9. ' ' → logprob: -17.377527236938477
    10. '>x' → logprob: -17.377527236938477

Token 415: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.06588800251483917
    2. ':' → logprob: -2.815887928009033
    3. '):
' → logprob: -6.690887928009033
    4. '   ' → logprob: -6.815887928009033
    5. ' :
' → logprob: -7.440887928009033
    6. '       ' → logprob: -8.065888404846191
    7. ' :' → logprob: -8.565888404846191
    8. ' and' → logprob: -8.690888404846191
    9. '):' → logprob: -9.940888404846191
    10. ')' → logprob: -10.065888404846191

Token 416: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15589851140975952
    2. 'cur' → logprob: -2.0308985710144043
    3. '	' → logprob: -5.530898571014404
    4. '
' → logprob: -5.655898571014404
    5. '	cur' → logprob: -6.280898571014404
    6. ' cur' → logprob: -6.530898571014404
    7. '[cur' → logprob: -7.405898571014404
    8. ':
' → logprob: -7.655898571014404
    9. '   ' → logprob: -8.030898094177246
    10. '	   ' → logprob: -8.405898094177246

Token 417: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' (adapté à ' cur') → logprob: -0.0009868424385786057
    2. '	cur' → logprob: -7.7509870529174805
    3. '   ' → logprob: -8.00098705291748
    4. ' cur' → logprob: -8.62598705291748
    5. '       ' → logprob: -10.25098705291748
    6. '_cur' → logprob: -12.75098705291748
    7. '           ' → logprob: -14.25098705291748
    8. ' ' → logprob: -14.37598705291748
    9. '	   ' → logprob: -14.62598705291748
    10. '    ' → logprob: -15.00098705291748

Token 418: '_damage' (ID: 124305)
  Prédit: '_damage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_damage' → logprob: -0.0009588662651367486
    2. 'damage' → logprob: -7.0009589195251465
    3. 'Damage' → logprob: -10.875958442687988
    4. '	damage' → logprob: -11.750958442687988
    5. '_DAMAGE' → logprob: -12.125958442687988
    6. '_' → logprob: -12.125958442687988
    7. '_cur' → logprob: -13.250958442687988
    8. ' damage' → logprob: -13.500958442687988
    9. '-=' → logprob: -14.625958442687988
    10. '=' → logprob: -14.625958442687988

Token 419: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.022235620766878128
    2. ' -=' → logprob: -4.02223539352417
    3. '+=' → logprob: -5.52223539352417
    4. '-' → logprob: -10.022235870361328
    5. ' +=' → logprob: -10.272235870361328
    6. '=' → logprob: -13.647235870361328
    7. '	' → logprob: -16.022235870361328
    8. ' -' → logprob: -16.397235870361328
    9. '   ' → logprob: -16.897235870361328
    10. '*=' → logprob: -17.522235870361328

Token 420: ' damage' (ID: 10364)
  Prédit: 'damage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'damage' → logprob: -0.0004342453321442008
    2. ' damage' → logprob: -7.750434398651123
    3. '	damage' → logprob: -12.625433921813965
    4. 'dam' → logprob: -15.750433921813965
    5. '   ' → logprob: -16.00043487548828
    6. '.damage' → logprob: -17.00043487548828
    7. 'd' → logprob: -18.00043487548828
    8. '       ' → logprob: -18.37543487548828
    9. '_damage' → logprob: -18.75043487548828
    10. 'Damage' → logprob: -18.87543487548828

Token 421: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -3.7385154428193346e-05
    2. '[' → logprob: -10.25003719329834
    3. 'idx' → logprob: -13.62503719329834
    4. '```' → logprob: -15.00003719329834
    5. ' [' → logprob: -15.62503719329834
    6. '[
' → logprob: -16.750038146972656
    7. ' idx' → logprob: -16.875038146972656
    8. '
' → logprob: -17.125038146972656
    9. '(idx' → logprob: -17.250038146972656
    10. '[pos' → logprob: -17.250038146972656

Token 422: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.06234665587544441
    2. ']' → logprob: -2.8123466968536377
    3. ']
' → logprob: -7.937346458435059
    4. '[idx' → logprob: -11.812346458435059
    5. ')
' → logprob: -12.687346458435059
    6. '   ' → logprob: -12.812346458435059
    7. 'idx' → logprob: -12.937346458435059
    8. '       ' → logprob: -13.187346458435059
    9. ']

' → logprob: -13.687346458435059
    10. ')' → logprob: -14.062346458435059

Token 423: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033797146752476692
    2. 'idx' → logprob: -5.753379821777344
    3. ' idx' → logprob: -9.128379821777344
    4. '	' → logprob: -10.128379821777344
    5. ',' → logprob: -10.628379821777344
    6. '   ' → logprob: -11.378379821777344
    7. '	idx' → logprob: -11.878379821777344
    8. '[idx' → logprob: -12.878379821777344
    9. '```' → logprob: -13.128379821777344
    10. '
' → logprob: -13.378379821777344

Token 424: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.0002099773846566677
    2. '       ' → logprob: -8.50020980834961
    3. ' idx' → logprob: -12.12520980834961
    4. '	idx' → logprob: -14.37520980834961
    5. '   ' → logprob: -15.00020980834961
    6. '           ' → logprob: -16.12520980834961
    7. '
' → logprob: -16.62520980834961
    8. '[idx' → logprob: -17.37520980834961
    9. '_idx' → logprob: -18.00020980834961
    10. '```' → logprob: -18.12520980834961

Token 425: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0008285674848593771
    2. ' +=' → logprob: -7.625828742980957
    3. '+' → logprob: -8.000828742980957
    4. '=' → logprob: -12.375828742980957
    5. ']+=' → logprob: -14.250828742980957
    6. '```' → logprob: -15.750828742980957
    7. '++' → logprob: -16.37582778930664
    8. '+
' → logprob: -17.00082778930664
    9. '   ' → logprob: -17.50082778930664
    10. '1' → logprob: -17.50082778930664

Token 426: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '   ' → logprob: -17.75
    4. '```' → logprob: -19.0
    5. '<|end|>' → logprob: -19.875
    6. '
' → logprob: -21.5
    7. '  ' → logprob: -22.0
    8. '۱' → logprob: -22.125
    9. '１' → logprob: -22.5
    10. '       ' → logprob: -22.875

Token 427: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '   ' → logprob: -17.625
    4. '```' → logprob: -18.125
    5. '<|end|>' → logprob: -19.0
    6. '۱' → logprob: -20.6875
    7. '0' → logprob: -20.75
    8. '  ' → logprob: -21.0
    9. '১' → logprob: -21.1875
    10. '१' → logprob: -21.25

Token 428: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19631493091583252
    2. '
' → logprob: -2.446314811706543
    3. ' 
' → logprob: -2.946314811706543
    4. ' return' → logprob: -4.446314811706543
    5. '    
' → logprob: -4.571314811706543
    6. 'return' → logprob: -4.821314811706543
    7. '  
' → logprob: -6.196314811706543
    8. '\n' → logprob: -6.196314811706543
    9. '       ' → logprob: -6.446314811706543
    10. '<|end|>' → logprob: -6.821314811706543

Token 429: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0029824525117874146
    2. ' return' → logprob: -6.2529826164245605
    3. 'return' → logprob: -7.7529826164245605
    4. ' 
' → logprob: -8.627982139587402
    5. '    
' → logprob: -8.627982139587402
    6. '
' → logprob: -8.877982139587402
    7. '	return' → logprob: -10.377982139587402
    8. '       ' → logprob: -10.627982139587402
    9. '```' → logprob: -10.752982139587402
    10. ' ' → logprob: -11.127982139587402

Token 430: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4358976483345032
    2. ' return' → logprob: -1.1858975887298584
    3. 'return' (adapté à ' return') → logprob: -3.0608975887298584
    4. '	return' → logprob: -6.9358978271484375
    5. '    
' → logprob: -12.060897827148438
    6. ' 
' → logprob: -12.185897827148438
    7. '       ' → logprob: -12.310897827148438
    8. '```' → logprob: -13.185897827148438
    9. ' ' → logprob: -13.310897827148438
    10. '    ' → logprob: -13.435897827148438

Token 431: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0024819616228342056
    2. ' idx' → logprob: -6.002481937408447
    3. '(idx' → logprob: -12.002482414245605
    4. '	idx' → logprob: -16.12748146057129
    5. '   ' → logprob: -19.50248146057129
    6. ' (' → logprob: -20.25248146057129
    7. '[idx' → logprob: -20.37748146057129
    8. '_idx' → logprob: -21.62748146057129
    9. 'ix' → logprob: -22.00248146057129
    10. '(' → logprob: -22.12748146057129

Token 432: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.338466093642637e-05
    2. ' ,' → logprob: -10.250073432922363
    3. 'cur' → logprob: -10.500073432922363
    4. ' cur' → logprob: -12.625073432922363
    5. '```' → logprob: -12.750073432922363
    6. '[cur' → logprob: -12.875073432922363
    7. ',
' → logprob: -14.500073432922363
    8. '(cur' → logprob: -15.125073432922363
    9. '`,' → logprob: -15.625073432922363
    10. '	cur' → logprob: -15.875073432922363

Token 433: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.011047935113310814
    2. ' cur' → logprob: -4.511047840118408
    3. '	cur' → logprob: -16.63604736328125
    4. '(cur' → logprob: -17.26104736328125
    5. ' ' → logprob: -18.13604736328125
    6. ' ' → logprob: -18.26104736328125
    7. '_cur' → logprob: -19.26104736328125
    8. '[cur' → logprob: -19.26104736328125
    9. 'Cur' → logprob: -19.88604736328125
    10. 'c' → logprob: -20.51104736328125

Token 434: '_damage' (ID: 124305)
  Prédit: '_damage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_damage' → logprob: -2.2127087504486553e-05
    2. '_' → logprob: -11.500021934509277
    3. ' _' → logprob: -12.250021934509277
    4. '_d' → logprob: -12.250021934509277
    5. '_DAMAGE' → logprob: -13.250021934509277
    6. 'damage' → logprob: -15.250021934509277
    7. 'Damage' → logprob: -16.125022888183594
    8. '	damage' → logprob: -16.250022888183594
    9. '```' → logprob: -16.625022888183594
    10. '_distance' → logprob: -17.125022888183594

Token 435: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0028908250387758017
    2. '(' → logprob: -6.877890586853027
    3. '<|end|>' → logprob: -7.627890586853027
    4. '```' → logprob: -7.752890586853027
    5. ' def' → logprob: -8.127890586853027
    6. 'if' → logprob: -8.627890586853027
    7. ' if' → logprob: -9.002890586853027
    8. '(
' → logprob: -9.252890586853027
    9. '   ' → logprob: -9.627890586853027
    10. '(def' → logprob: -9.877890586853027

Token 436: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.8497312895488e-05
    2. '```' → logprob: -10.000068664550781
    3. ' def' → logprob: -10.750068664550781
    4. 'if' → logprob: -14.000068664550781
    5. '   ' → logprob: -15.875068664550781
    6. '<|end|>' → logprob: -16.12506866455078
    7. ':def' → logprob: -16.25006866455078
    8. '       ' → logprob: -16.62506866455078
    9. '-def' → logprob: -16.87506866455078
    10. ' if' → logprob: -17.25006866455078

Token 437: ' needs' (ID: 4414)
  Prédit: 'needs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'needs' → logprob: -0.00013381359167397022
    2. ' needs' → logprob: -9.000133514404297
    3. 'def' → logprob: -11.500133514404297
    4. 'need' → logprob: -15.750133514404297
    5. 'Needs' → logprob: -17.625133514404297
    6. 'requires' → logprob: -17.750133514404297
    7. 'needed' → logprob: -18.375133514404297
    8. '```' → logprob: -18.500133514404297
    9. '#' → logprob: -19.125133514404297
    10. 'is' → logprob: -19.500133514404297

Token 438: '_attack' (ID: 118945)
  Prédit: '_attack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_attack' → logprob: -0.00011439072113716975
    2. '_' → logprob: -9.375114440917969
    3. '_att' → logprob: -11.375114440917969
    4. '_attention' → logprob: -12.250114440917969
    5. '_need' → logprob: -12.375114440917969
    6. '_ne' → logprob: -13.125114440917969
    7. ' _' → logprob: -13.250114440917969
    8. '```' → logprob: -13.875114440917969
    9. '_ATTACK' → logprob: -14.750114440917969
    10. '_def' → logprob: -15.000114440917969

Token 439: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.029761260375380516
    2. '(' → logprob: -3.52976131439209
    3. ' (' → logprob: -12.15476131439209
    4. '(x' → logprob: -13.02976131439209
    5. '(
' → logprob: -13.77976131439209
    6. '((' → logprob: -14.90476131439209
    7. '(H' → logprob: -15.15476131439209
    8. '(s' → logprob: -15.27976131439209
    9. '(def' → logprob: -15.52976131439209
    10. '(a' → logprob: -15.65476131439209

Token 440: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020747410599142313
    2. ' ,' → logprob: -9.250207901000977
    3. ',h' → logprob: -9.750207901000977
    4. ',
' → logprob: -10.000207901000977
    5. ',

' → logprob: -13.125207901000977
    6. ')' → logprob: -13.250207901000977
    7. '):' → logprob: -13.875207901000977
    8. ',int' → logprob: -14.375207901000977
    9. ')>' → logprob: -15.125207901000977
    10. '_,' → logprob: -15.250207901000977

Token 441: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.01815006136894226
    2. ' cur' → logprob: -4.0181498527526855
    3. '	cur' → logprob: -16.268150329589844
    4. ' ' → logprob: -16.893150329589844
    5. '(cur' → logprob: -16.893150329589844
    6. '_cur' → logprob: -17.893150329589844
    7. '   ' → logprob: -18.143150329589844
    8. '-cur' → logprob: -19.143150329589844
    9. '[cur' → logprob: -19.268150329589844
    10. '.cur' → logprob: -19.768150329589844

Token 442: '_damage' (ID: 124305)
  Prédit: '_damage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_damage' → logprob: -0.00040636269841343164
    2. '_' → logprob: -8.250406265258789
    3. '_d' → logprob: -9.625406265258789
    4. '_cur' → logprob: -9.875406265258789
    5. ' _' → logprob: -10.750406265258789
    6. '```' → logprob: -13.125406265258789
    7. '_DAMAGE' → logprob: -13.625406265258789
    8. 'damage' → logprob: -14.500406265258789
    9. '_distance' → logprob: -15.375406265258789
    10. '_attack' → logprob: -15.500406265258789

Token 443: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06317233294248581
    2. '):
' → logprob: -2.8131723403930664
    3. ',' → logprob: -6.813172340393066
    4. '):

' → logprob: -10.313172340393066
    5. ')' → logprob: -10.438172340393066
    6. ':' → logprob: -10.813172340393066
    7. ' ):' → logprob: -11.563172340393066
    8. '):
' → logprob: -12.438172340393066
    9. '   ' → logprob: -13.188172340393066
    10. '>):' → logprob: -13.313172340393066

Token 444: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6404090523719788
    2. ' return' → logprob: -1.140408992767334
    3. '   ' → logprob: -1.890408992767334
    4. '(h' → logprob: -6.890408992767334
    5. 'h' → logprob: -8.015409469604492
    6. ' h' → logprob: -8.515409469604492
    7. '    ' → logprob: -8.515409469604492
    8. '	return' → logprob: -8.765409469604492
    9. 'if' → logprob: -8.765409469604492
    10. ' if' → logprob: -9.640409469604492

Token 445: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.05044965818524361
    2. ' return' → logprob: -3.0504496097564697
    3. '   ' → logprob: -6.300449848175049
    4. 'if' → logprob: -11.17544937133789
    5. '	return' → logprob: -11.67544937133789
    6. '    ' → logprob: -13.67544937133789
    7. 'h' → logprob: -14.55044937133789
    8. ' if' → logprob: -14.92544937133789
    9. '  ' → logprob: -15.55044937133789
    10. ' ' → logprob: -16.17544937133789

Token 446: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.4883486330509186
    2. ' h' → logprob: -1.7383486032485962
    3. 'cur' → logprob: -1.7383486032485962
    4. ' cur' → logprob: -3.3633487224578857
    5. '(cur' → logprob: -9.988348960876465
    6. '(h' → logprob: -10.238348960876465
    7. ' ' → logprob: -11.488348960876465
    8. '   ' → logprob: -11.988348960876465
    9. '	h' → logprob: -12.238348960876465
    10. ' ' → logprob: -12.863348960876465

Token 447: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.17976415157318115
    2. ' >' → logprob: -1.8047641515731812
    3. '-' → logprob: -11.554763793945312
    4. ' ' → logprob: -13.179763793945312
    5. ' ' → logprob: -13.554763793945312
    6. '">' → logprob: -13.679763793945312
    7. '   ' → logprob: -14.054763793945312
    8. '>
' → logprob: -14.304763793945312
    9. '>

' → logprob: -14.304763793945312
    10. ' -' → logprob: -14.304763793945312

Token 448: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.01815076172351837
    2. ' cur' → logprob: -4.018150806427002
    3. '	cur' → logprob: -14.643150329589844
    4. '   ' → logprob: -16.018150329589844
    5. ' ' → logprob: -16.518150329589844
    6. '_cur' → logprob: -16.518150329589844
    7. '(cur' → logprob: -16.643150329589844
    8. '0' → logprob: -17.143150329589844
    9. ' ' → logprob: -17.768150329589844
    10. '[cur' → logprob: -17.893150329589844

Token 449: '_damage' (ID: 124305)
  Prédit: '_damage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_damage' → logprob: -8.661626634420827e-05
    2. ' _' → logprob: -10.000086784362793
    3. '_d' → logprob: -10.875086784362793
    4. '_' → logprob: -11.125086784362793
    5. 'damage' → logprob: -12.250086784362793
    6. 'amage' → logprob: -14.125086784362793
    7. '_DAMAGE' → logprob: -14.625086784362793
    8. '_cur' → logprob: -14.875086784362793
    9. ' damage' → logprob: -15.875086784362793
    10. '_data' → logprob: -16.000085830688477

Token 450: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -9.088346359931165e-07
    2. ' def' → logprob: -14.250000953674316
    3. '```' → logprob: -15.750000953674316
    4. '<|end|>' → logprob: -17.75
    5. ':def' → logprob: -17.875
    6. '_def' → logprob: -18.625
    7. '(def' → logprob: -18.625
    8. '[' → logprob: -19.125
    9. '	def' → logprob: -19.25
    10. '-def' → logprob: -19.25

Token 451: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0015406885650008917
    2. '(' → logprob: -7.626540660858154
    3. ' def' → logprob: -7.751540660858154
    4. '```' → logprob: -7.876540660858154
    5. '[' → logprob: -9.251541137695312
    6. '   ' → logprob: -9.751541137695312
    7. '<|end|>' → logprob: -10.251541137695312
    8. '(def' → logprob: -11.251541137695312
    9. ')' → logprob: -11.876541137695312
    10. ' (' → logprob: -12.001541137695312

Token 452: ' record' (ID: 3704)
  Prédit: 'record'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'record' → logprob: -0.005466644186526537
    2. ' record' → logprob: -5.255466461181641
    3. 'def' → logprob: -8.50546646118164
    4. 'update' → logprob: -10.50546646118164
    5. 'return' → logprob: -14.50546646118164
    6. 'define' → logprob: -14.88046646118164
    7. ' update' → logprob: -14.88046646118164
    8. ' def' → logprob: -15.38046646118164
    9. 'report' → logprob: -15.38046646118164
    10. '	record' → logprob: -15.75546646118164

Token 453: '_attack' (ID: 118945)
  Prédit: '_attack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_attack' → logprob: -0.000133098365040496
    2. 'attack' → logprob: -9.125133514404297
    3. '_att' → logprob: -11.125133514404297
    4. '_damage' → logprob: -12.250133514404297
    5. '(' → logprob: -13.125133514404297
    6. 'Attack' → logprob: -14.750133514404297
    7. '_ATTACK' → logprob: -15.000133514404297
    8. 'def' → logprob: -15.000133514404297
    9. '```' → logprob: -15.000133514404297
    10. ' _' → logprob: -15.500133514404297

Token 454: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.0028926096856594086
    2. '(' → logprob: -5.87789249420166
    3. '(position' → logprob: -10.12789249420166
    4. ' (' → logprob: -10.12789249420166
    5. ',pos' → logprob: -12.75289249420166
    6. '[pos' → logprob: -13.75289249420166
    7. '(Pos' → logprob: -13.87789249420166
    8. 'pos' → logprob: -14.75289249420166
    9. '(
' → logprob: -14.87789249420166
    10. '_pos' → logprob: -14.87789249420166

Token 455: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04902922362089157
    2. '.append' → logprob: -3.0490291118621826
    3. 'append' → logprob: -8.549029350280762
    4. ',p' → logprob: -9.674029350280762
    5. ')' → logprob: -9.924029350280762
    6. ',
' → logprob: -10.049029350280762
    7. ' ,' → logprob: -10.549029350280762
    8. '   ' → logprob: -10.924029350280762
    9. ',d' → logprob: -11.924029350280762
    10. ').' → logprob: -12.674029350280762

Token 456: ' damage' (ID: 10364)
  Prédit: 'damage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'damage' → logprob: -0.4741041660308838
    2. ' damage' → logprob: -0.9741041660308838
    3. '	damage' → logprob: -10.974103927612305
    4. '.damage' → logprob: -12.974103927612305
    5. 'd' → logprob: -13.724103927612305
    6. '   ' → logprob: -13.724103927612305
    7. '[' → logprob: -13.974103927612305
    8. 'dam' → logprob: -14.349103927612305
    9. '_damage' → logprob: -14.349103927612305
    10. ' ' → logprob: -14.474103927612305

Token 457: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00027182576013728976
    2. ',pos' → logprob: -8.625271797180176
    3. ',p' → logprob: -10.125271797180176
    4. ' ,' → logprob: -10.625271797180176
    5. ',
' → logprob: -11.250271797180176
    6. '   ' → logprob: -12.875271797180176
    7. ',value' → logprob: -13.500271797180176
    8. '.append' → logprob: -13.625271797180176
    9. ',user' → logprob: -13.750271797180176
    10. ')' → logprob: -14.125271797180176

Token 458: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.02200241945683956
    2. 'pos' → logprob: -4.022002220153809
    3. ' x' → logprob: -5.647002220153809
    4. ' pos' → logprob: -8.272002220153809
    5. '<|end|>' → logprob: -10.397002220153809
    6. '(x' → logprob: -11.522002220153809
    7. ' ' → logprob: -12.272002220153809
    8. ')' → logprob: -12.272002220153809
    9. '   ' → logprob: -12.772002220153809
    10. '<|end|>' → logprob: -13.522002220153809

Token 459: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00611270172521472
    2. '+' → logprob: -5.631112575531006
    3. ' ,' → logprob: -6.756112575531006
    4. ')' → logprob: -7.256112575531006
    5. '   ' → logprob: -8.506113052368164
    6. ' +' → logprob: -8.756113052368164
    7. ',
' → logprob: -9.381113052368164
    8. '+,' → logprob: -10.131113052368164
    9. '):
' → logprob: -10.756113052368164
    10. '[' → logprob: -11.006113052368164

Token 460: ' D' (ID: 415)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7776511311531067
    2. 'D' → logprob: -1.027651071548462
    3. ' D' → logprob: -2.277651071548462
    4. ' ' → logprob: -2.527651071548462
    5. '(' → logprob: -9.027650833129883
    6. '1' → logprob: -10.652650833129883
    7. '	D' → logprob: -10.777650833129883
    8. ')' → logprob: -10.902650833129883
    9. '```' → logprob: -11.152650833129883
    10. '(D' → logprob: -11.277650833129883

Token 461: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.29278188943862915
    2. '+' → logprob: -1.4177818298339844
    3. ' +' → logprob: -4.667781829833984
    4. '):
' → logprob: -7.542781829833984
    5. ')' → logprob: -7.667781829833984
    6. ',
' → logprob: -8.167781829833984
    7. '):' → logprob: -8.292781829833984
    8. '   ' → logprob: -9.042781829833984
    9. '+,' → logprob: -9.167781829833984
    10. ' ,' → logprob: -9.667781829833984

Token 462: ' attack' (ID: 10192)
  Prédit: 'attack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'attack' → logprob: -0.011884682811796665
    2. ' attack' → logprob: -4.511884689331055
    3. 'A' → logprob: -8.261884689331055
    4. 'att' → logprob: -8.636884689331055
    5. 'amount' → logprob: -8.636884689331055
    6. '(' → logprob: -10.261884689331055
    7. ')' → logprob: -10.386884689331055
    8. 'atk' → logprob: -10.386884689331055
    9. ' A' → logprob: -10.511884689331055
    10. 'amt' → logprob: -11.136884689331055

Token 463: '_amt' (ID: 114610)
  Prédit: '_amt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_amt' → logprob: -1.9504606825648807e-05
    2. '_amount' → logprob: -11.250019073486328
    3. '_amp' → logprob: -12.500019073486328
    4. '_' → logprob: -13.875019073486328
    5. '_am' → logprob: -14.250019073486328
    6. ')' → logprob: -15.000019073486328
    7. '```' → logprob: -15.750019073486328
    8. ' _' → logprob: -16.500019073486328
    9. 'Amt' → logprob: -16.500019073486328
    10. 'amt' → logprob: -16.625019073486328

Token 464: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2263089120388031
    2. '):' → logprob: -1.6013089418411255
    3. '   ' → logprob: -7.976308822631836
    4. ',' → logprob: -8.101308822631836
    5. '):
' → logprob: -8.476308822631836
    6. ')' → logprob: -11.476308822631836
    7. '):

' → logprob: -11.601308822631836
    8. ':' → logprob: -12.101308822631836
    9. ' ):
' → logprob: -12.851308822631836
    10. ':
' → logprob: -13.226308822631836

Token 465: '   ' (ID: 271)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.15256564319133759
    2. '   ' → logprob: -2.4025657176971436
    3. ' pos' → logprob: -3.0275657176971436
    4. 'end' → logprob: -6.4025654792785645
    5. 'attack' → logprob: -7.6525654792785645
    6. 'r' → logprob: -9.277565956115723
    7. '```' → logprob: -9.652565956115723
    8. '	pos' → logprob: -9.777565956115723
    9. 'import' → logprob: -10.152565956115723
    10. ' end' → logprob: -10.527565956115723

Token 466: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.005861359182745218
    2. ' pos' → logprob: -5.255861282348633
    3. '   ' → logprob: -7.755861282348633
    4. 'end' → logprob: -9.505861282348633
    5. 'attack' → logprob: -9.505861282348633
    6. 'import' → logprob: -10.630861282348633
    7. '```' → logprob: -11.755861282348633
    8. 'r' → logprob: -12.130861282348633
    9. 'right' → logprob: -12.880861282348633
    10. 'from' → logprob: -13.005861282348633

Token 467: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00036846695002168417
    2. '.' → logprob: -8.000368118286133
    3. '.app' → logprob: -10.500368118286133
    4. 'append' → logprob: -13.375368118286133
    5. ' .' → logprob: -13.750368118286133
    6. '.ap' → logprob: -13.875368118286133
    7. '.insert' → logprob: -14.375368118286133
    8. '.extend' → logprob: -15.125368118286133
    9. 'Append' → logprob: -15.250368118286133
    10. '.Append' → logprob: -15.375368118286133

Token 468: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0145009970292449
    2. 'x' → logprob: -4.264501094818115
    3. '(' → logprob: -8.014500617980957
    4. '((' → logprob: -13.139500617980957
    5. ',' → logprob: -13.639500617980957
    6. ' x' → logprob: -14.139500617980957
    7. '   ' → logprob: -14.264500617980957
    8. ' (' → logprob: -15.139500617980957
    9. '(
' → logprob: -15.139500617980957
    10. '```' → logprob: -15.264500617980957

Token 469: ' +' (ID: 659)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.7049604058265686
    2. '+' → logprob: -0.9549604058265686
    3. ')' → logprob: -2.204960346221924
    4. ' +' → logprob: -4.704960346221924
    5. '+D' → logprob: -7.079960346221924
    6. '   ' → logprob: -7.579960346221924
    7. '+d' → logprob: -8.204960823059082
    8. ')
' → logprob: -9.954960823059082
    9. ' )
' → logprob: -10.454960823059082
    10. '),' → logprob: -12.204960823059082

Token 470: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0029119811952114105
    2. '(' → logprob: -6.7529120445251465
    3. ' ' → logprob: -7.0029120445251465
    4. 'D' → logprob: -7.2529120445251465
    5. '(D' → logprob: -9.627911567687988
    6. '   ' → logprob: -10.877911567687988
    7. '1' → logprob: -11.127911567687988
    8. ' (' → logprob: -11.252911567687988
    9. ' D' → logprob: -13.252911567687988
    10. '  ' → logprob: -13.502911567687988

Token 471: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.023469893261790276
    2. 'D' → logprob: -4.148469924926758
    3. '(' → logprob: -5.023469924926758
    4. '(D' → logprob: -7.523469924926758
    5. ' ' → logprob: -8.523469924926758
    6. '1' → logprob: -10.773469924926758
    7. ' (' → logprob: -10.898469924926758
    8. ' D' → logprob: -10.898469924926758
    9. '   ' → logprob: -11.398469924926758
    10. '  ' → logprob: -12.835969924926758

Token 472: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.011403941549360752
    2. ' *' → logprob: -4.761404037475586
    3. 'D' → logprob: -5.886404037475586
    4. '*(' → logprob: -12.261404037475586
    5. ' D' → logprob: -13.386404037475586
    6. ' ' → logprob: -14.011404037475586
    7. '*d' → logprob: -15.136404037475586
    8. '(D' → logprob: -15.261404037475586
    9. '   ' → logprob: -16.011404037475586
    10. '**' → logprob: -16.011404037475586

Token 473: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0011703446507453918
    2. ' D' → logprob: -6.7511701583862305
    3. '	D' → logprob: -16.876171112060547
    4. '(D' → logprob: -17.001171112060547
    5. ' ' → logprob: -17.376171112060547
    6. '
' → logprob: -18.376171112060547
    7. '_D' → logprob: -18.501171112060547
    8. '*' → logprob: -18.626171112060547
    9. '(' → logprob: -18.751171112060547
    10. '>D' → logprob: -19.126171112060547

Token 474: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.11991714686155319
    2. ')' → logprob: -2.244917154312134
    3. '   ' → logprob: -5.744916915893555
    4. ',' → logprob: -5.869916915893555
    5. 'damage' → logprob: -7.619916915893555
    6. ')
' → logprob: -8.494916915893555
    7. '	damage' → logprob: -8.744916915893555
    8. ' damage' → logprob: -9.244916915893555
    9. ' )
' → logprob: -10.744916915893555
    10. '),' → logprob: -11.244916915893555

Token 475: '   ' (ID: 271)
  Prédit: 'damage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'damage' → logprob: -0.07465890049934387
    2. '   ' → logprob: -3.4496588706970215
    3. '	damage' → logprob: -3.5746588706970215
    4. ' damage' → logprob: -4.4496588706970215
    5. ',' → logprob: -8.07465934753418
    6. '.damage' → logprob: -9.57465934753418
    7. '```' → logprob: -10.94965934753418
    8. '_damage' → logprob: -10.94965934753418
    9. 'def' → logprob: -11.57465934753418
    10. '    
' → logprob: -11.69965934753418

Token 476: ' damage' (ID: 10364)
  Prédit: 'damage'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'damage' (adapté à ' damage') → logprob: -6.825890159234405e-05
    2. ' damage' → logprob: -9.875068664550781
    3. '   ' → logprob: -12.000068664550781
    4. 'if' → logprob: -12.000068664550781
    5. 'attack' → logprob: -12.875068664550781
    6. '	damage' → logprob: -13.500068664550781
    7. 'dam' → logprob: -16.12506866455078
    8. 'import' → logprob: -16.62506866455078
    9. ' ' → logprob: -17.12506866455078
    10. 'Damage' → logprob: -17.50006866455078

Token 477: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.0087516784551553e-05
    2. '.' → logprob: -11.75001049041748
    3. '.extend' → logprob: -13.62501049041748
    4. '.app' → logprob: -14.50001049041748
    5. 'append' → logprob: -15.12501049041748
    6. '.ap' → logprob: -16.625009536743164
    7. ' .' → logprob: -18.250009536743164
    8. 'Append' → logprob: -19.500009536743164
    9. '.Append' → logprob: -19.625009536743164
    10. '.push' → logprob: -20.000009536743164

Token 478: '(' (ID: 7)
  Prédit: 'attack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'attack' → logprob: -0.00091217877343297
    2. ' attack' → logprob: -7.000912189483643
    3. '   ' → logprob: -14.875911712646484
    4. '(' → logprob: -15.375911712646484
    5. 'att' → logprob: -17.625911712646484
    6. '.attack' → logprob: -17.875911712646484
    7. '_attack' → logprob: -18.375911712646484
    8. '-' → logprob: -19.250911712646484
    9. 'Attack' → logprob: -19.625911712646484
    10. 'attaque' → logprob: -19.875911712646484

Token 479: 'attack' (ID: 43104)
  Prédit: 'attack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'attack' → logprob: -0.0009151478880085051
    2. ' attack' → logprob: -7.000915050506592
    3. '   ' → logprob: -13.12591552734375
    4. '-' → logprob: -14.50091552734375
    5. 'att' → logprob: -15.12591552734375
    6. '.attack' → logprob: -15.37591552734375
    7. 'attaque' → logprob: -15.50091552734375
    8. '_attack' → logprob: -15.87591552734375
    9. ' -' → logprob: -16.75091552734375
    10. ' ' → logprob: -16.87591552734375

Token 480: '_amt' (ID: 114610)
  Prédit: '_amt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_amt' → logprob: 0.0
    2. 'amt' → logprob: -17.375
    3. '_amp' → logprob: -17.625
    4. '_amount' → logprob: -19.25
    5. ' _' → logprob: -19.625
    6. '_' → logprob: -19.625
    7. 'Amt' → logprob: -20.625
    8. '_at' → logprob: -20.875
    9. '_am' → logprob: -21.0
    10. '[' → logprob: -21.5

Token 481: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018685187387745827
    2. '<|end|>' → logprob: -9.000186920166016
    3. ')
' → logprob: -9.750186920166016
    4. ' )' → logprob: -12.750186920166016
    5. ')

' → logprob: -14.375186920166016
    6. ')return' → logprob: -14.375186920166016
    7. '   ' → logprob: -14.875186920166016
    8. '<|end|>' → logprob: -15.500186920166016
    9. '
' → logprob: -16.000186920166016
    10. ')#' → logprob: -16.000186920166016

Token 482: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.26190581917762756
    2. '<|end|>' → logprob: -1.5119057893753052
    3. '```' → logprob: -5.636905670166016
    4. ' ' → logprob: -6.636905670166016
    5. ' def' → logprob: -7.011905670166016
    6. '   ' → logprob: -7.136905670166016
    7. '<|end|>' → logprob: -7.261905670166016
    8. '    ' → logprob: -7.386905670166016
    9. 'return' → logprob: -8.011905670166016
    10. ' 
' → logprob: -8.136905670166016

Token 483: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.3640201687812805
    2. ' update' → logprob: -1.4890201091766357
    3. 'def' → logprob: -3.2390201091766357
    4. 'append' → logprob: -5.364020347595215
    5. 'main' → logprob: -5.489020347595215
    6. 'reverse' → logprob: -5.614020347595215
    7. ' main' → logprob: -5.739020347595215
    8. 'initialize' → logprob: -5.989020347595215
    9. 'sort' → logprob: -6.114020347595215
    10. 'record' → logprob: -6.114020347595215

Token 484: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -2.1008713702030946e-06
    2. 'ans' → logprob: -13.500001907348633
    3. '_answer' → logprob: -14.875001907348633
    4. '_' → logprob: -17.375001907348633
    5. '_ann' → logprob: -17.375001907348633
    6. '_ass' → logprob: -17.750001907348633
    7. '_def' → logprob: -17.875001907348633
    8. '_answers' → logprob: -18.125001907348633
    9. '(ans' → logprob: -18.250001907348633
    10. '	ans' → logprob: -18.250001907348633

Token 485: '_cur' (ID: 46382)
  Prédit: '_ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -0.20304150879383087
    2. '(ans' → logprob: -1.9530415534973145
    3. ',' → logprob: -3.3280415534973145
    4. '_cur' → logprob: -5.7030415534973145
    5. 'ans' → logprob: -6.9530415534973145
    6. 'def' → logprob: -7.4530415534973145
    7. '```' → logprob: -7.9530415534973145
    8. '(' → logprob: -9.078041076660156
    9. ' ' → logprob: -9.203041076660156
    10. '_answer' → logprob: -9.203041076660156

Token 486: '_damage' (ID: 124305)
  Prédit: '_damage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_damage' → logprob: -0.0022944211959838867
    2. '_d' → logprob: -6.627294540405273
    3. '_ans' → logprob: -7.127294540405273
    4. '_' → logprob: -9.877294540405273
    5. 'damage' → logprob: -10.377294540405273
    6. '(ans' → logprob: -10.627294540405273
    7. '_amount' → logprob: -11.502294540405273
    8. '_amt' → logprob: -11.502294540405273
    9. 'Damage' → logprob: -11.627294540405273
    10. '_data' → logprob: -12.502294540405273

Token 487: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -2.5776860184123507e-06
    2. '(' → logprob: -13.00000286102295
    3. '(answer' → logprob: -16.375001907348633
    4. ' (' → logprob: -16.500001907348633
    5. ' ans' → logprob: -18.625001907348633
    6. '(def' → logprob: -18.750001907348633
    7. '	ans' → logprob: -19.375001907348633
    8. '(
' → logprob: -20.250001907348633
    9. '   ' → logprob: -20.500001907348633
    10. 'ans' → logprob: -20.625001907348633

Token 488: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2113979209971149e-05
    2. ' ,' → logprob: -11.375012397766113
    3. '<|end|>' → logprob: -15.250012397766113
    4. ',
' → logprob: -15.625012397766113
    5. ',int' → logprob: -16.375011444091797
    6. '‌,' → logprob: -17.500011444091797
    7. '   ' → logprob: -17.750011444091797
    8. 'def' → logprob: -18.125011444091797
    9. '<|end|>' → logprob: -18.875011444091797
    10. ',current' → logprob: -19.500011444091797

Token 489: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.05537201464176178
    2. ' cur' → logprob: -2.9303719997406006
    3. 'attack' → logprob: -7.68037223815918
    4. ' attack' → logprob: -10.68037223815918
    5. '	cur' → logprob: -13.18037223815918
    6. '_cur' → logprob: -13.55537223815918
    7. ' ' → logprob: -14.68037223815918
    8. '   ' → logprob: -14.93037223815918
    9. '(cur' → logprob: -15.55537223815918
    10. '```' → logprob: -15.68037223815918

Token 490: '_damage' (ID: 124305)
  Prédit: '_damage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_damage' → logprob: -2.463036435074173e-05
    2. '_d' → logprob: -11.500024795532227
    3. 'damage' → logprob: -12.125024795532227
    4. '_' → logprob: -12.375024795532227
    5. '_DAMAGE' → logprob: -13.000024795532227
    6. ' _' → logprob: -13.875024795532227
    7. '	damage' → logprob: -15.000024795532227
    8. '_amount' → logprob: -15.125024795532227
    9. '```' → logprob: -15.375024795532227
    10. 'Damage' → logprob: -15.375024795532227

Token 491: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.696889623621246e-06
    2. ' ,' → logprob: -13.00000286102295
    3. ',
' → logprob: -15.12500286102295
    4. '   ' → logprob: -17.500001907348633
    5. '‌,' → logprob: -18.375001907348633
    6. 'def' → logprob: -18.625001907348633
    7. '```' → logprob: -18.750001907348633
    8. ',int' → logprob: -18.875001907348633
    9. ',

' → logprob: -19.000001907348633
    10. '`,' → logprob: -19.125001907348633

Token 492: ' attack' (ID: 10192)
  Prédit: 'attack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'attack' → logprob: -0.2519349455833435
    2. ' attack' → logprob: -1.5019350051879883
    3. '   ' → logprob: -13.626935005187988
    4. ' ' → logprob: -14.001935005187988
    5. '.attack' → logprob: -14.001935005187988
    6. '_attack' → logprob: -14.251935005187988
    7. 'answer' → logprob: -14.626935005187988
    8. 'att' → logprob: -15.001935005187988
    9. 'ans' → logprob: -15.001935005187988
    10. '```' → logprob: -15.376935005187988

Token 493: '_amt' (ID: 114610)
  Prédit: '_amt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_amt' → logprob: -5.512236498361744e-07
    2. '_amount' → logprob: -14.875000953674316
    3. ' _' → logprob: -17.125
    4. '_amp' → logprob: -17.125
    5. '```' → logprob: -17.875
    6. 'amt' → logprob: -19.125
    7. ',_' → logprob: -19.125
    8. ',' → logprob: -19.375
    9. '   ' → logprob: -19.75
    10. 'Amt' → logprob: -19.875

Token 494: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.35757195949554443
    2. '):
' → logprob: -2.107572078704834
    3. ':' → logprob: -2.232572078704834
    4. ':
' → logprob: -3.607572078704834
    5. '   ' → logprob: -3.857572078704834
    6. '):' → logprob: -3.857572078704834
    7. ',
' → logprob: -6.357572078704834
    8. '():
' → logprob: -8.732571601867676
    9. '+' → logprob: -8.982571601867676
    10. 'def' → logprob: -9.107571601867676

Token 495: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05434929206967354
    2. 'return' → logprob: -3.304349184036255
    3. '(ans' → logprob: -5.179349422454834
    4. ' return' → logprob: -5.304349422454834
    5. 'ans' → logprob: -5.554349422454834
    6. ' ans' → logprob: -6.554349422454834
    7. ' (' → logprob: -9.054348945617676
    8. '(' → logprob: -9.304348945617676
    9. '	ans' → logprob: -10.554348945617676
    10. '_ans' → logprob: -10.929348945617676

Token 496: ' ans' (ID: 3345)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.34728139638900757
    2. 'ans' (adapté à ' ans') → logprob: -1.3472814559936523
    3. '   ' → logprob: -4.097281455993652
    4. '(ans' → logprob: -4.347281455993652
    5. ' return' → logprob: -5.847281455993652
    6. ' ans' → logprob: -6.972281455993652
    7. '(' → logprob: -10.347281455993652
    8. ' (' → logprob: -11.097281455993652
    9. '	ans' → logprob: -12.472281455993652
    10. '_ans' → logprob: -12.847281455993652

Token 497: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.7071470022201538
    2. '+=' → logprob: -0.7071470022201538
    3. '+' → logprob: -4.332147121429443
    4. ',' → logprob: -7.582147121429443
    5. '=' → logprob: -9.332146644592285
    6. '+,' → logprob: -9.457146644592285
    7. '   ' → logprob: -10.082146644592285
    8. ' +' → logprob: -10.207146644592285
    9. ' =' → logprob: -12.832146644592285
    10. ' ,' → logprob: -13.457146644592285

Token 498: ' attack' (ID: 10192)
  Prédit: 'attack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'attack' → logprob: -0.03804183006286621
    2. ' attack' → logprob: -3.288041830062866
    3. 'att' → logprob: -14.913042068481445
    4. '.attack' → logprob: -16.413042068481445
    5. '_attack' → logprob: -17.538042068481445
    6. ' ' → logprob: -17.913042068481445
    7. '   ' → logprob: -18.538042068481445
    8. ' ' → logprob: -18.663042068481445
    9. 'answer' → logprob: -18.788042068481445
    10. '1' → logprob: -18.913042068481445

Token 499: '_amt' (ID: 114610)
  Prédit: '_amt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_amt' → logprob: -3.128163257315464e-07
    2. 'amt' → logprob: -15.375
    3. '_amp' → logprob: -17.875
    4. '_amount' → logprob: -18.125
    5. '_' → logprob: -18.625
    6. 'Amt' → logprob: -18.875
    7. '[' → logprob: -19.25
    8. '_cnt' → logprob: -19.375
    9. ' Amt' → logprob: -20.25
    10. 'amount' → logprob: -20.625

Token 500: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02385782264173031
    2. '   ' → logprob: -4.398857593536377
    3. ',
' → logprob: -5.023857593536377
    4. '
' → logprob: -5.648857593536377
    5. 'cur' → logprob: -7.523857593536377
    6. ' ,' → logprob: -8.648858070373535
    7. ' cur' → logprob: -8.773858070373535
    8. '[cur' → logprob: -8.773858070373535
    9. '    
' → logprob: -9.648858070373535
    10. ' 
' → logprob: -11.023858070373535

Token 501: '   ' (ID: 271)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.00444246269762516
    2. ' cur' → logprob: -6.0044426918029785
    3. '   ' → logprob: -6.6294426918029785
    4. ',' → logprob: -7.3794426918029785
    5. '	cur' → logprob: -11.87944221496582
    6. '_cur' → logprob: -12.25444221496582
    7. '(cur' → logprob: -13.00444221496582
    8. '[cur' → logprob: -13.25444221496582
    9. 'return' → logprob: -13.37944221496582
    10. '+' → logprob: -14.25444221496582

Token 502: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' (adapté à ' cur') → logprob: -1.9361264946837764e-07
    2. ' cur' → logprob: -16.0
    3. '   ' → logprob: -18.5
    4. 'return' → logprob: -19.375
    5. '_cur' → logprob: -22.875
    6. '```' → logprob: -23.625
    7. '	cur' → logprob: -23.875
    8. '(cur' → logprob: -24.5
    9. '-cur' → logprob: -24.625
    10. '[cur' → logprob: -25.5

Token 503: '_damage' (ID: 124305)
  Prédit: '_damage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_damage' → logprob: -5.438573680294212e-06
    2. '_d' → logprob: -13.500005722045898
    3. 'damage' → logprob: -13.500005722045898
    4. '_' → logprob: -13.750005722045898
    5. ' _' → logprob: -14.250005722045898
    6. '```' → logprob: -14.750005722045898
    7. '_DAMAGE' → logprob: -15.250005722045898
    8. '_distance' → logprob: -16.2500057220459
    9. '	damage' → logprob: -16.5000057220459
    10. 'Damage' → logprob: -16.5000057220459

Token 504: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.01815931126475334
    2. ' +=' → logprob: -4.01815938949585
    3. '+' → logprob: -11.643158912658691
    4. '   ' → logprob: -14.893158912658691
    5. '=' → logprob: -16.643159866333008
    6. ']+=' → logprob: -16.768159866333008
    7. '+=(' → logprob: -17.018159866333008
    8. '```' → logprob: -17.143159866333008
    9. '+='' → logprob: -18.518159866333008
    10. '+="' → logprob: -18.643159866333008

Token 505: ' attack' (ID: 10192)
  Prédit: 'attack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'attack' → logprob: -0.00015920029545668513
    2. ' attack' → logprob: -8.75015926361084
    3. 'att' → logprob: -14.50015926361084
    4. '   ' → logprob: -15.75015926361084
    5. '.attack' → logprob: -18.125158309936523
    6. 'answer' → logprob: -19.000158309936523
    7. ' ' → logprob: -19.000158309936523
    8. '_attack' → logprob: -19.125158309936523
    9. '  ' → logprob: -19.750158309936523
    10. 'Attack' → logprob: -20.250158309936523

Token 506: '_amt' (ID: 114610)
  Prédit: '_amt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_amt' → logprob: -2.45848218582978e-06
    2. 'amt' → logprob: -13.00000286102295
    3. 'Amt' → logprob: -16.375001907348633
    4. '_amount' → logprob: -17.125001907348633
    5. '_at' → logprob: -17.875001907348633
    6. '_amp' → logprob: -18.125001907348633
    7. '_att' → logprob: -19.500001907348633
    8. '```' → logprob: -19.750001907348633
    9. ' Amt' → logprob: -20.250001907348633
    10. '_' → logprob: -20.375001907348633

Token 507: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007188673131167889
    2. 'return' → logprob: -5.25718879699707
    3. ' return' → logprob: -6.25718879699707
    4. '	return' → logprob: -10.25718879699707
    5. '   ' → logprob: -14.13218879699707
    6. ':return' → logprob: -16.00718879699707
    7. '{return' → logprob: -16.63218879699707
    8. '       ' → logprob: -16.63218879699707
    9. ',' → logprob: -17.13218879699707
    10. '
' → logprob: -17.38218879699707

Token 508: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020587847102433443
    2. 'return' → logprob: -6.252058982849121
    3. ' return' → logprob: -9.002058982849121
    4. '	return' → logprob: -11.877058982849121
    5. '   ' → logprob: -16.627058029174805
    6. '{return' → logprob: -17.627058029174805
    7. '       ' → logprob: -18.377058029174805
    8. '```' → logprob: -18.752058029174805
    9. ':return' → logprob: -18.752058029174805
    10. '  ' → logprob: -19.627058029174805

Token 509: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.334362268447876
    2. '   ' → logprob: -1.834362268447876
    3. ' return' → logprob: -2.084362268447876
    4. '	return' → logprob: -9.709362030029297
    5. ',' → logprob: -10.084362030029297
    6. '   ' → logprob: -14.834362030029297
    7. ' ,' → logprob: -14.959362030029297
    8. '    
' → logprob: -16.084362030029297
    9. '       ' → logprob: -16.209362030029297
    10. ':return' → logprob: -16.334362030029297

Token 510: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.8074162653647363e-05
    2. ' ans' → logprob: -11.500018119812012
    3. '(ans' → logprob: -11.750018119812012
    4. '	ans' → logprob: -20.000017166137695
    5. '   ' → logprob: -22.000017166137695
    6. '_ans' → logprob: -23.625017166137695
    7. '(' → logprob: -24.125017166137695
    8. 'ann' → logprob: -25.000017166137695
    9. ' (' → logprob: -25.250017166137695
    10. 'Ans' → logprob: -25.750017166137695

Token 511: ',' (ID: 11)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.20300287008285522
    2. ',' → logprob: -1.7030029296875
    3. ' cur' → logprob: -6.4530029296875
    4. '   ' → logprob: -11.9530029296875
    5. ' ,' → logprob: -12.9530029296875
    6. '[cur' → logprob: -13.5780029296875
    7. '(cur' → logprob: -13.7030029296875
    8. '	cur' → logprob: -14.7030029296875
    9. '```' → logprob: -15.0780029296875
    10. ',c' → logprob: -15.8280029296875

Token 512: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -1.676292231422849e-05
    2. ' cur' → logprob: -11.000017166137695
    3. '(cur' → logprob: -21.750017166137695
    4. '	cur' → logprob: -22.000017166137695
    5. '[cur' → logprob: -22.250017166137695
    6. 'c' → logprob: -24.000017166137695
    7. '_cur' → logprob: -24.000017166137695
    8. '   ' → logprob: -24.500017166137695
    9. ' ' → logprob: -25.250017166137695
    10. 'Cur' → logprob: -25.250017166137695

Token 513: '_damage' (ID: 124305)
  Prédit: '_damage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_damage' → logprob: -1.7432603272027336e-06
    2. '_DAMAGE' → logprob: -14.375001907348633
    3. 'damage' → logprob: -14.625001907348633
    4. '_d' → logprob: -14.625001907348633
    5. 'Damage' → logprob: -16.250001907348633
    6. '	damage' → logprob: -16.500001907348633
    7. 'amage' → logprob: -17.750001907348633
    8. '_distance' → logprob: -18.250001907348633
    9. '_attack' → logprob: -18.375001907348633
    10. '_' → logprob: -18.625001907348633

Token 514: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014219447039067745
    2. 'if' → logprob: -4.264219284057617
    3. '```' → logprob: -10.014219284057617
    4. 'import' → logprob: -12.139219284057617
    5. '<|end|>' → logprob: -12.764219284057617
    6. ' if' → logprob: -14.014219284057617
    7. '#' → logprob: -14.264219284057617
    8. ' def' → logprob: -15.014219284057617
    9. '
' → logprob: -15.514219284057617
    10. '  
' → logprob: -15.639219284057617

Token 515: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03804768621921539
    2. 'if' → logprob: -3.2880477905273438
    3. 'import' → logprob: -12.538047790527344
    4. '```' → logprob: -13.163047790527344
    5. '#' → logprob: -15.038047790527344
    6. ' if' → logprob: -15.288047790527344
    7. 'for' → logprob: -16.663047790527344
    8. 'raw' → logprob: -16.913047790527344
    9. 'print' → logprob: -17.288047790527344
    10. 'data' → logprob: -17.413047790527344

Token 516: ' print' (ID: 2123)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.18007494509220123
    2. ' main' → logprob: -1.93007493019104
    3. 'def' → logprob: -3.93007493019104
    4. ' def' → logprob: -11.555074691772461
    5. 'if' → logprob: -13.430074691772461
    6. '_main' → logprob: -14.305074691772461
    7. 'solve' → logprob: -14.430074691772461
    8. 'run' → logprob: -15.680074691772461
    9. '	main' → logprob: -15.805074691772461
    10. ' solve' → logprob: -16.55507469177246

Token 517: '_output' (ID: 16732)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4782837927341461
    2. '()' → logprob: -1.4782837629318237
    3. '(ans' → logprob: -2.2282838821411133
    4. '_result' → logprob: -3.9782838821411133
    5. '_ans' → logprob: -4.603283882141113
    6. '_answer' → logprob: -4.853283882141113
    7. '_results' → logprob: -5.853283882141113
    8. '("' → logprob: -7.478283882141113
    9. '(answer' → logprob: -7.478283882141113
    10. '_output' → logprob: -7.478283882141113

Token 518: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.04975869134068489
    2. '(' → logprob: -3.2997586727142334
    3. '():' → logprob: -4.6747589111328125
    4. '(answer' → logprob: -6.6747589111328125
    5. '(output' → logprob: -7.5497589111328125
    6. '()' → logprob: -7.9247589111328125
    7. ' (' → logprob: -9.924758911132812
    8. '(result' → logprob: -9.924758911132812
    9. '(def' → logprob: -11.549758911132812
    10. '(value' → logprob: -11.799758911132812

Token 519: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.27865374088287354
    2. '):' → logprob: -1.5286537408828735
    3. ')' → logprob: -3.653653621673584
    4. ')
' → logprob: -7.778653621673584
    5. '):
' → logprob: -9.903654098510742
    6. '):

' → logprob: -13.403654098510742
    7. '():
' → logprob: -13.528654098510742
    8. ':' → logprob: -13.778654098510742
    9. ':
' → logprob: -14.153654098510742
    10. '(' → logprob: -15.278654098510742

Token 520: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00014239625306800008
    2. '```' → logprob: -9.250142097473145
    3. '   ' → logprob: -10.000142097473145
    4. ' print' → logprob: -14.375142097473145
    5. '``' → logprob: -15.500142097473145
    6. '`' → logprob: -16.87514305114746
    7. '
' → logprob: -18.75014305114746
    8. '	print' → logprob: -19.37514305114746
    9. 'def' → logprob: -19.50014305114746
    10. '(print' → logprob: -19.87514305114746

Token 521: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: 0.0
    2. '   ' → logprob: -17.25
    3. ' print' → logprob: -17.75
    4. '```' → logprob: -19.0
    5. '
' → logprob: -22.75
    6. '`' → logprob: -24.25
    7. '	print' → logprob: -24.875
    8. '``' → logprob: -25.375
    9. '    
' → logprob: -26.0
    10. 'import' → logprob: -26.25

Token 522: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.04858759790658951
    2. 'ans' → logprob: -3.0485875606536865
    3. '	ans' → logprob: -15.673587799072266
    4. '(' → logprob: -16.798587799072266
    5. ' ans' → logprob: -17.423587799072266
    6. '_ans' → logprob: -17.548587799072266
    7. 'ANS' → logprob: -19.048587799072266
    8. '```' → logprob: -19.173587799072266
    9. '(answer' → logprob: -20.173587799072266
    10. 'answer' → logprob: -20.423587799072266

Token 523: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ')
' → logprob: -15.5
    3. ' )' → logprob: -17.25
    4. ')`' → logprob: -17.375
    5. '())' → logprob: -17.75
    6. '()' → logprob: -18.625
    7. ')#' → logprob: -19.25
    8. '))' → logprob: -19.25
    9. '),' → logprob: -19.375
    10. '')' → logprob: -19.375

Token 524: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5765607953071594
    2. 'if' → logprob: -0.8265607953071594
    3. 'import' → logprob: -7.576560974121094
    4. '```' → logprob: -9.201560974121094
    5. ' if' → logprob: -12.076560974121094
    6. '#' → logprob: -13.951560974121094
    7. 'for' → logprob: -14.451560974121094
    8. 'raw' → logprob: -14.826560974121094
    9. ' def' → logprob: -15.326560974121094
    10. '!' → logprob: -16.076560974121094

Token 525: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.024261416867375374
    2. 'def' → logprob: -3.774261474609375
    3. ' main' → logprob: -7.024261474609375
    4. 'if' → logprob: -9.024261474609375
    5. '__' → logprob: -13.024261474609375
    6. ' def' → logprob: -13.649261474609375
    7. 'run' → logprob: -14.274261474609375
    8. 'solve' → logprob: -14.774261474609375
    9. '_main' → logprob: -15.899261474609375
    10. '	main' → logprob: -16.399261474609375

Token 526: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -2.3438327843905427e-05
    2. '():
' → logprob: -11.00002384185791
    3. ' ():' → logprob: -12.00002384185791
    4. '()' → logprob: -14.87502384185791
    5. '_' → logprob: -16.750022888183594
    6. '():
' → logprob: -17.000022888183594
    7. '(' → logprob: -17.875022888183594
    8. '()>' → logprob: -18.500022888183594
    9. '():

' → logprob: -18.500022888183594
    10. '().' → logprob: -19.000022888183594

Token 527: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2606154978275299
    2. 'raw' → logprob: -1.5106154680252075
    3. ' raw' → logprob: -4.760615348815918
    4. '	raw' → logprob: -10.010615348815918
    5. 'import' → logprob: -10.135615348815918
    6. '_raw' → logprob: -13.135615348815918
    7. '(raw' → logprob: -14.135615348815918
    8. '   ' → logprob: -15.260615348815918
    9. '```' → logprob: -15.260615348815918
    10. 'def' → logprob: -15.385615348815918

Token 528: ' set' (ID: 920)
  Prédit: 'raw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raw' → logprob: -0.018228022381663322
    2. ' raw' → logprob: -4.018228054046631
    3. '   ' → logprob: -9.518227577209473
    4. '	raw' → logprob: -12.893227577209473
    5. 'import' → logprob: -13.393227577209473
    6. 'set' (adapté à ' set') → logprob: -15.018227577209473
    7. '_raw' → logprob: -15.393227577209473
    8. '(raw' → logprob: -17.51822853088379
    9. 'Raw' → logprob: -18.51822853088379
    10. ' ' → logprob: -18.51822853088379

Token 529: '_rec' (ID: 35314)
  Prédit: '_rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rec' → logprob: -1.9361264946837764e-07
    2. 'rec' → logprob: -16.25
    3. '_' → logprob: -16.375
    4. '_recursive' → logprob: -18.25
    5. '_rep' → logprob: -19.25
    6. '_ref' → logprob: -20.125
    7. ' recursion' → logprob: -20.125
    8. '_def' → logprob: -20.25
    9. '_re' → logprob: -20.375
    10. '_reg' → logprob: -20.5

Token 530: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -1.0564331205387134e-05
    2. 'urs' → logprob: -11.62501049041748
    3. '_' → logprob: -13.75001049041748
    4. 'ur' → logprob: -15.12501049041748
    5. 'ursor' → logprob: -16.750011444091797
    6. 'ursive' → logprob: -17.000011444091797
    7. '```' → logprob: -17.000011444091797
    8. 'usr' → logprob: -17.250011444091797
    9. 'usion' → logprob: -17.500011444091797
    10. '_set' → logprob: -18.000011444091797

Token 531: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.0004307884373702109
    2. 'limit' → logprob: -7.750430583953857
    3. 'imit' → logprob: -16.250431060791016
    4. '_lim' → logprob: -17.750431060791016
    5. '_limits' → logprob: -18.125431060791016
    6. '_LIMIT' → logprob: -18.125431060791016
    7. ' limit' → logprob: -18.125431060791016
    8. 'Limit' → logprob: -18.500431060791016
    9. 'lim' → logprob: -19.625431060791016
    10. '(limit' → logprob: -20.625431060791016

Token 532: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.306760805164231e-05
    2. '()
' → logprob: -11.37501335144043
    3. ' ()' → logprob: -13.75001335144043
    4. '(' → logprob: -15.87501335144043
    5. '()

' → logprob: -15.87501335144043
    6. '()`' → logprob: -16.37501335144043
    7. '();' → logprob: -16.50001335144043
    8. '()
' → logprob: -18.12501335144043
    9. '()"' → logprob: -18.75001335144043
    10. '()<' → logprob: -18.87501335144043

Token 533: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47494256496429443
    2. 'raw' → logprob: -1.2249425649642944
    3. ' raw' → logprob: -2.474942684173584
    4. '	raw' → logprob: -8.974942207336426
    5. 'data' → logprob: -12.599942207336426
    6. '
' → logprob: -13.099942207336426
    7. '_raw' → logprob: -13.099942207336426
    8. '(raw' → logprob: -14.224942207336426
    9. '    
' → logprob: -14.724942207336426
    10. '   ' → logprob: -14.724942207336426

Token 534: ' INF' (ID: 69196)
  Prédit: 'raw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raw' → logprob: -0.0002637199067976326
    2. ' raw' → logprob: -8.250264167785645
    3. '   ' → logprob: -13.000264167785645
    4. '	raw' → logprob: -15.750264167785645
    5. 'data' → logprob: -16.750263214111328
    6. '_raw' → logprob: -18.750263214111328
    7. '(raw' → logprob: -18.750263214111328
    8. '    
' → logprob: -20.375263214111328
    9. 'Raw' → logprob: -20.500263214111328
    10. '.raw' → logprob: -20.625263214111328

Token 535: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38690683245658875
    2. '=' → logprob: -1.1369068622589111
    3. '_INF' → logprob: -11.261906623840332
    4. '_' → logprob: -11.386906623840332
    5. '   ' → logprob: -12.261906623840332
    6. ',' → logprob: -12.761906623840332
    7. 'INF' → logprob: -13.636906623840332
    8. '＝' → logprob: -14.136906623840332
    9. '	' → logprob: -14.636906623840332
    10. '```' → logprob: -15.261906623840332

Token 536: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -4.572941179503687e-05
    2. ' get' → logprob: -10.000045776367188
    3. '1' → logprob: -15.500045776367188
    4. ' ' → logprob: -20.250045776367188
    5. '	get' → logprob: -20.250045776367188
    6. '10' → logprob: -20.500045776367188
    7. '(get' → logprob: -20.500045776367188
    8. '_get' → logprob: -21.000045776367188
    9. '   ' → logprob: -21.500045776367188
    10. '=get' → logprob: -21.750045776367188

Token 537: '_inf' (ID: 107309)
  Prédit: '_inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inf' → logprob: -1.4259644558478612e-05
    2. 'inf' → logprob: -11.250014305114746
    3. '_INF' → logprob: -14.875014305114746
    4. '_in' → logprob: -14.875014305114746
    5. '_mod' → logprob: -15.375014305114746
    6. 'Inf' → logprob: -16.00001335144043
    7. '\' → logprob: -16.62501335144043
    8. '```' → logprob: -18.00001335144043
    9. '_inv' → logprob: -18.12501335144043
    10. '_' → logprob: -18.37501335144043

Token 538: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.06307373940944672
    2. '()' → logprob: -2.8130736351013184
    3. '()

' → logprob: -7.188073635101318
    4. '()
' → logprob: -8.063074111938477
    5. 'raw' → logprob: -10.938074111938477
    6. 'def' → logprob: -12.188074111938477
    7. '   ' → logprob: -12.438074111938477
    8. 'data' → logprob: -13.063074111938477
    9. '()

' → logprob: -13.313074111938477
    10. '
' → logprob: -13.438074111938477

Token 539: '   ' (ID: 271)
  Prédit: 'raw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raw' → logprob: -0.20979364216327667
    2. '   ' → logprob: -1.7097936868667603
    3. ' raw' → logprob: -4.834793567657471
    4. '	raw' → logprob: -8.209794044494629
    5. '
' → logprob: -9.584794044494629
    6. 'data' → logprob: -10.584794044494629
    7. '    
' → logprob: -11.209794044494629
    8. '_raw' → logprob: -12.084794044494629
    9. '(raw' → logprob: -12.834794044494629
    10. '  ' → logprob: -12.959794044494629

Token 540: ' MOD' (ID: 32868)
  Prédit: 'raw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raw' → logprob: -1.0206720617134124e-05
    2. ' raw' → logprob: -11.75001049041748
    3. '   ' → logprob: -13.25001049041748
    4. 'A' → logprob: -15.37501049041748
    5. '    
' → logprob: -16.625009536743164
    6. 'data' → logprob: -16.625009536743164
    7. 'RAW' → logprob: -17.750009536743164
    8. '
' → logprob: -17.875009536743164
    9. '	raw' → logprob: -17.875009536743164
    10. '_raw' → logprob: -18.250009536743164

Token 541: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2257182002067566
    2. ' =' → logprob: -1.6007182598114014
    3. '()' → logprob: -8.60071849822998
    4. '_' → logprob: -9.35071849822998
    5. ',' → logprob: -10.85071849822998
    6. '   ' → logprob: -11.72571849822998
    7. ')' → logprob: -13.10071849822998
    8. '(' → logprob: -13.97571849822998
    9. 'import' → logprob: -13.97571849822998
    10. '```' → logprob: -14.47571849822998

Token 542: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -4.727905979962088e-05
    2. ' get' → logprob: -10.00004768371582
    3. '100' → logprob: -13.25004768371582
    4. '(get' → logprob: -21.12504768371582
    5. ' ' → logprob: -21.25004768371582
    6. '	get' → logprob: -21.62504768371582
    7. '=get' → logprob: -22.75004768371582
    8. '_get' → logprob: -23.12504768371582
    9. '[get' → logprob: -23.87504768371582
    10. ',get' → logprob: -24.37504768371582

Token 543: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -1.0280383548888494e-06
    2. 'mod' → logprob: -13.875000953674316
    3. '_inf' → logprob: -17.125001907348633
    4. '_MOD' → logprob: -20.000001907348633
    5. '\' → logprob: -20.125001907348633
    6. 'omod' → logprob: -20.750001907348633
    7. '_def' → logprob: -20.875001907348633
    8. '_mode' → logprob: -20.875001907348633
    9. ' мод' → logprob: -21.125001907348633
    10. '	mod' → logprob: -21.250001907348633

Token 544: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6265394687652588
    2. '   ' → logprob: -1.0015394687652588
    3. 'raw' → logprob: -2.376539468765259
    4. '    
' → logprob: -5.87653923034668
    5. 'data' → logprob: -7.12653923034668
    6. ' raw' → logprob: -7.12653923034668
    7. '```' → logprob: -8.25153923034668
    8. '	raw' → logprob: -8.50153923034668
    9. '(raw' → logprob: -8.75153923034668
    10. '_raw' → logprob: -9.25153923034668

Token 545: '   ' (ID: 271)
  Prédit: 'raw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raw' → logprob: -0.5367558002471924
    2. '   ' → logprob: -1.0367558002471924
    3. ' raw' → logprob: -3.4117558002471924
    4. '
' → logprob: -3.6617558002471924
    5. '    
' → logprob: -6.661755561828613
    6. '	raw' → logprob: -7.661755561828613
    7. 'data' → logprob: -8.786755561828613
    8. '_raw' → logprob: -9.786755561828613
    9. '```' → logprob: -9.786755561828613
    10. '(raw' → logprob: -10.286755561828613

Token 546: ' raw' (ID: 11428)
  Prédit: 'raw'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raw' (adapté à ' raw') → logprob: -9.722539834911004e-05
    2. ' raw' → logprob: -9.250097274780273
    3. '   ' → logprob: -13.750097274780273
    4. '	raw' → logprob: -17.875097274780273
    5. 'data' → logprob: -19.000097274780273
    6. '    
' → logprob: -19.250097274780273
    7. '_raw' → logprob: -19.250097274780273
    8. '(raw' → logprob: -21.000097274780273
    9. 'Raw' → logprob: -21.125097274780273
    10. 'RAW' → logprob: -21.375097274780273

Token 547: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.0012820183765143156
    2. '_' → logprob: -7.001282215118408
    3. '_input' → logprob: -8.12628173828125
    4. '_raw' → logprob: -10.25128173828125
    5. '_code' → logprob: -10.50128173828125
    6. 'data' → logprob: -11.75128173828125
    7. ' _' → logprob: -13.50128173828125
    8. '_Data' → logprob: -14.50128173828125
    9. '_d' → logprob: -14.62628173828125
    10. '_dat' → logprob: -15.12628173828125

Token 548: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868762254714966
    2. '=' → logprob: -1.1368762254714966
    3. '=sys' → logprob: -12.511876106262207
    4. '_' → logprob: -14.761876106262207
    5. '()' → logprob: -15.011876106262207
    6. '=input' → logprob: -15.511876106262207
    7. '(' → logprob: -16.011877059936523
    8. ' ' → logprob: -16.011877059936523
    9. '   ' → logprob: -16.261877059936523
    10. ',' → logprob: -16.386877059936523

Token 549: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.01815076172351837
    2. ' get' → logprob: -4.018150806427002
    3. 'sys' → logprob: -14.393150329589844
    4. ' sys' → logprob: -15.893150329589844
    5. 'input' → logprob: -16.393150329589844
    6. '	get' → logprob: -18.143150329589844
    7. '(get' → logprob: -19.018150329589844
    8. ' input' → logprob: -19.268150329589844
    9. '=get' → logprob: -19.768150329589844
    10. '   ' → logprob: -20.768150329589844

Token 550: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -3.650518920039758e-06
    2. '_' → logprob: -13.250003814697266
    3. 'input' → logprob: -13.750003814697266
    4. '_raw' → logprob: -15.250003814697266
    5. '_inputs' → logprob: -15.875003814697266
    6. '_data' → logprob: -16.500003814697266
    7. '```' → logprob: -16.625003814697266
    8. '_line' → logprob: -16.750003814697266
    9. '_in' → logprob: -16.750003814697266
    10. '()' → logprob: -17.000003814697266

Token 551: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.9153885558771435e-06
    2. '()
' → logprob: -13.000005722045898
    3. '().' → logprob: -13.625005722045898
    4. ' ()' → logprob: -14.000005722045898
    5. '()`' → logprob: -14.750005722045898
    6. '())' → logprob: -15.250005722045898
    7. '()

' → logprob: -15.375005722045898
    8. '(' → logprob: -15.500005722045898
    9. '();' → logprob: -16.3750057220459
    10. '(),' → logprob: -16.3750057220459

Token 552: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013498765183612704
    2. 'N' → logprob: -6.626349925994873
    3. '    
' → logprob: -11.501349449157715
    4. '
' → logprob: -11.751349449157715
    5. '```' → logprob: -12.876349449157715
    6. ' N' → logprob: -13.126349449157715
    7. '	N' → logprob: -14.876349449157715
    8. 'n' → logprob: -14.876349449157715
    9. '       ' → logprob: -15.876349449157715
    10. '`' → logprob: -16.00135040283203

Token 553: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -2.248469718324486e-05
    2. 'data' → logprob: -11.125022888183594
    3. '   ' → logprob: -12.375022888183594
    4. ' N' → logprob: -12.625022888183594
    5. '```' → logprob: -15.875022888183594
    6. '    
' → logprob: -18.125022888183594
    7. '`' → logprob: -18.375022888183594
    8. '
' → logprob: -18.375022888183594
    9. 'n' → logprob: -18.375022888183594
    10. '	N' → logprob: -18.500022888183594

Token 554: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.137130498653278e-05
    2. ',D' → logprob: -9.625081062316895
    3. ',
' → logprob: -12.000081062316895
    4. ' ,' → logprob: -12.375081062316895
    5. ',N' → logprob: -12.875081062316895
    6. '=' → logprob: -14.250081062316895
    7. '   ' → logprob: -15.625081062316895
    8. ',data' → logprob: -15.625081062316895
    9. '‌,' → logprob: -15.625081062316895
    10. 'data' → logprob: -16.00008201599121

Token 555: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.3133549392223358
    2. ' D' → logprob: -1.3133549690246582
    3. ' ' → logprob: -10.1883544921875
    4. '<|end|>' → logprob: -10.8133544921875
    5. 'raw' → logprob: -11.0633544921875
    6. ' raw' → logprob: -11.5633544921875
    7. '  ' → logprob: -12.8133544921875
    8. ' 
' → logprob: -13.1883544921875
    9. '    ' → logprob: -13.9383544921875
    10. '*' → logprob: -13.9383544921875

Token 556: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7610454708337784e-05
    2. ',A' → logprob: -10.625027656555176
    3. ' ,' → logprob: -12.750027656555176
    4. 'A' → logprob: -15.250027656555176
    5. '_,' → logprob: -18.25002670288086
    6. '‌,' → logprob: -18.87502670288086
    7. ',
' → logprob: -18.87502670288086
    8. '<|end|>' → logprob: -18.87502670288086
    9. '=' → logprob: -19.00002670288086
    10. ' A' → logprob: -19.37502670288086

Token 557: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0002036595979006961
    2. ' A' → logprob: -8.500204086303711
    3. '   ' → logprob: -16.12520408630371
    4. '  ' → logprob: -17.50020408630371
    5. ' ' → logprob: -17.62520408630371
    6. '    ' → logprob: -20.00020408630371
    7. '	A' → logprob: -20.00020408630371
    8. '```' → logprob: -21.75020408630371
    9. ',' → logprob: -22.25020408630371
    10. ',A' → logprob: -22.62520408630371

Token 558: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00060307263629511
    2. '=' → logprob: -7.625603199005127
    3. ' =' → logprob: -9.125602722167969
    4. ' ,' → logprob: -12.125602722167969
    5. '_,' → logprob: -15.000602722167969
    6. '   ' → logprob: -15.375602722167969
    7. ',
' → logprob: -17.62560272216797
    8. '```' → logprob: -17.62560272216797
    9. ',_' → logprob: -17.75060272216797
    10. ' ' → logprob: -17.87560272216797

Token 559: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.003669436788186431
    2. ' X' → logprob: -6.003669261932373
    3. '*' → logprob: -7.003669261932373
    4. 'raw' → logprob: -8.253669738769531
    5. ' raw' → logprob: -11.503669738769531
    6. 'data' → logprob: -12.503669738769531
    7. 'parse' → logprob: -13.128669738769531
    8. ' *' → logprob: -13.378669738769531
    9. ' ' → logprob: -13.878669738769531
    10. '_X' → logprob: -14.003669738769531

Token 560: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -5.455048449221067e-05
    2. ',' → logprob: -10.000054359436035
    3. '=' → logprob: -12.625054359436035
    4. ',H' → logprob: -13.000054359436035
    5. '_H' → logprob: -13.500054359436035
    6. ' H' → logprob: -14.125054359436035
    7. ' =' → logprob: -14.750054359436035
    8. '_' → logprob: -16.25005531311035
    9. '_,' → logprob: -16.25005531311035
    10. ' ' → logprob: -16.37505531311035

Token 561: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00821075402200222
    2. ' =' → logprob: -5.3832106590271
    3. '_pairs' → logprob: -5.6332106590271
    4. 'pairs' → logprob: -12.258211135864258
    5. '_' → logprob: -14.008211135864258
    6. '_=' → logprob: -15.008211135864258
    7. '   ' → logprob: -15.258211135864258
    8. '=_' → logprob: -15.383211135864258
    9. ')' → logprob: -15.383211135864258
    10. '```' → logprob: -16.383211135864258

Token 562: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.47407716512680054
    2. ' parse' → logprob: -0.9740771651268005
    3. '	parse' → logprob: -16.724077224731445
    4. '=parse' → logprob: -16.724077224731445
    5. '   ' → logprob: -17.724077224731445
    6. '(parse' → logprob: -18.599077224731445
    7. '_parse' → logprob: -18.974077224731445
    8. '.parse' → logprob: -19.849077224731445
    9. ' ' → logprob: -20.599077224731445
    10. 'parsed' → logprob: -21.099077224731445

Token 563: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.05955822020769119
    2. 'raw' → logprob: -3.059558153152466
    3. '_raw' → logprob: -5.184558391571045
    4. 'input' → logprob: -5.809558391571045
    5. '(raw' → logprob: -6.184558391571045
    6. '_data' → logprob: -8.434557914733887
    7. 'data' → logprob: -11.934557914733887
    8. ' raw' → logprob: -12.059557914733887
    9. '```' → logprob: -12.059557914733887
    10. 'Input' → logprob: -12.559557914733887

Token 564: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -2.0219828002154827e-05
    2. 'data' → logprob: -11.000020027160645
    3. '_raw' → logprob: -13.375020027160645
    4. 'raw' → logprob: -13.625020027160645
    5. '(raw' → logprob: -15.125020027160645
    6. 'Data' → logprob: -16.00002098083496
    7. '```' → logprob: -16.50002098083496
    8. '(data' → logprob: -17.00002098083496
    9. '_DATA' → logprob: -17.37502098083496
    10. '_code' → logprob: -17.62502098083496

Token 565: '(raw' (ID: 46707)
  Prédit: '(raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(raw' → logprob: 0.0
    2. '(' → logprob: -17.0
    3. ' (' → logprob: -18.25
    4. 'raw' → logprob: -18.5
    5. ' raw' → logprob: -20.375
    6. '(
' → logprob: -21.625
    7. '	raw' → logprob: -22.0
    8. '/raw' → logprob: -22.0
    9. '.raw' → logprob: -22.5
    10. '```' → logprob: -23.75

Token 566: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.00010270876373397186
    2. 'data' → logprob: -9.250102996826172
    3. 'Data' → logprob: -13.375102996826172
    4. '```' → logprob: -13.875102996826172
    5. ' data' → logprob: -14.000102996826172
    6. '_DATA' → logprob: -14.375102996826172
    7. 'ata' → logprob: -15.062602996826172
    8. ')' → logprob: -15.437602996826172
    9. '=' → logprob: -15.687602996826172
    10. '-data' → logprob: -15.875102996826172

Token 567: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001843801699578762
    2. ')
' → logprob: -6.3768439292907715
    3. '   ' → logprob: -8.876843452453613
    4. ' )' → logprob: -14.001843452453613
    5. '[' → logprob: -14.501843452453613
    6. ')

' → logprob: -16.25184440612793
    7. ')
' → logprob: -16.37684440612793
    8. ')#' → logprob: -16.50184440612793
    9. '
' → logprob: -16.62684440612793
    10. ')[' → logprob: -16.87684440612793

Token 568: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027922984212636948
    2. 'X' → logprob: -4.402923107147217
    3. 'monster' → logprob: -4.402923107147217
    4. 'mon' → logprob: -6.152923107147217
    5. ' monster' → logprob: -7.777923107147217
    6. '  ' → logprob: -9.027922630310059
    7. '```' → logprob: -9.152922630310059
    8. ' X' → logprob: -9.152922630310059
    9. '
' → logprob: -10.527922630310059
    10. '    
' → logprob: -10.527922630310059

Token 569: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' (adapté à ' X') → logprob: -0.007914643734693527
    2. 'monster' → logprob: -5.0079145431518555
    3. 'mon' → logprob: -7.5079145431518555
    4. '   ' → logprob: -7.8829145431518555
    5. ' X' → logprob: -8.257914543151855
    6. '```' → logprob: -12.007914543151855
    7. ' monster' → logprob: -12.382914543151855
    8. '
' → logprob: -14.632914543151855
    9. '	X' → logprob: -15.007914543151855
    10. 'x' → logprob: -15.132914543151855

Token 570: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0014770099660381675
    2. ',' → logprob: -6.751477241516113
    3. '_pairs' → logprob: -8.376477241516113
    4. '=' → logprob: -10.251477241516113
    5. ' =' → logprob: -11.251477241516113
    6. ',H' → logprob: -11.376477241516113
    7. '_mon' → logprob: -13.001477241516113
    8. '_H' → logprob: -13.126477241516113
    9. '_,' → logprob: -13.501477241516113
    10. '```' → logprob: -13.501477241516113

Token 571: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.00011439072113716975
    2. '=' → logprob: -10.000114440917969
    3. ' =' → logprob: -10.250114440917969
    4. 'pairs' → logprob: -10.375114440917969
    5. '=_' → logprob: -14.125114440917969
    6. '_' → logprob: -14.500114440917969
    7. '```' → logprob: -15.125114440917969
    8. 'Pairs' → logprob: -15.125114440917969
    9. '_chunks' → logprob: -15.250114440917969
    10. '_=' → logprob: -16.37511444091797

Token 572: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020667314529419
    2. '=' → logprob: -2.3502066135406494
    3. '＝' → logprob: -17.97520637512207
    4. ' ' → logprob: -18.22520637512207
    5. ',' → logprob: -18.22520637512207
    6. '.' → logprob: -19.22520637512207
    7. ' =
' → logprob: -19.60020637512207
    8. ')' → logprob: -19.60020637512207
    9. '   ' → logprob: -19.85020637512207
    10. '=
' → logprob: -19.85020637512207

Token 573: ' chunk' (ID: 23958)
  Prédit: 'chunk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chunk' → logprob: -0.0007099286303855479
    2. ' chunk' → logprob: -7.2507100105285645
    3. '(chunk' → logprob: -19.500709533691406
    4. '.chunk' → logprob: -20.500709533691406
    5. 'ch' → logprob: -22.750709533691406
    6. 'chunks' → logprob: -23.250709533691406
    7. 'chip' → logprob: -23.625709533691406
    8. '_chunk' → logprob: -23.750709533691406
    9. 'Chunk' → logprob: -23.750709533691406
    10. ' ' → logprob: -24.000709533691406

Token 574: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -9.615255839889869e-05
    2. 'pairs' → logprob: -10.000096321105957
    3. '(X' → logprob: -10.250096321105957
    4. 'Pairs' → logprob: -11.125096321105957
    5. 's' → logprob: -15.375096321105957
    6. 'X' → logprob: -16.00009536743164
    7. '```' → logprob: -16.12509536743164
    8. '`' → logprob: -17.25009536743164
    9. '(_' → logprob: -17.50009536743164
    10. '[X' → logprob: -17.75009536743164

Token 575: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -17.125
    3. '((' → logprob: -17.125
    4. ' (' → logprob: -17.5
    5. '(x' → logprob: -19.125
    6. 'X' → logprob: -20.25
    7. '(
' → logprob: -20.5
    8. '```' → logprob: -20.5
    9. '(Q' → logprob: -20.625
    10. '[X' → logprob: -21.0

Token 576: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.3994392156600952
    2. '(X' → logprob: -2.1494393348693848
    3. ')' → logprob: -2.5244393348693848
    4. 'X' → logprob: -2.6494393348693848
    5. '_pairs' → logprob: -3.1494393348693848
    6. '[' → logprob: -4.774439334869385
    7. '(H' → logprob: -6.149439334869385
    8. '(' → logprob: -6.274439334869385
    9. 'pairs' → logprob: -6.274439334869385
    10. '[X' → logprob: -6.899439334869385

Token 577: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006782504729926586
    2. ')
' → logprob: -5.006782531738281
    3. '   ' → logprob: -9.631782531738281
    4. ')
' → logprob: -13.881782531738281
    5. ' )' → logprob: -15.506782531738281
    6. ')

' → logprob: -16.13178253173828
    7. ' ' → logprob: -16.50678253173828
    8. ')`' → logprob: -17.13178253173828
    9. ')`
' → logprob: -17.13178253173828
    10. ')#' → logprob: -17.38178253173828

Token 578: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12070562690496445
    2. 'monster' → logprob: -2.3707056045532227
    3. ' monster' → logprob: -4.495705604553223
    4. 'mon' → logprob: -4.870705604553223
    5. '```' → logprob: -6.620705604553223
    6. '
' → logprob: -10.370705604553223
    7. '``' → logprob: -10.870705604553223
    8. '   ' → logprob: -10.870705604553223
    9. '(mon' → logprob: -11.745705604553223
    10. ' mon' → logprob: -11.995705604553223

Token 579: ' monster' (ID: 36286)
  Prédit: 'monster'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'monster' (adapté à ' monster') → logprob: -0.03971800208091736
    2. ' monster' → logprob: -3.41471791267395
    3. 'mon' → logprob: -5.289718151092529
    4. '   ' → logprob: -6.914718151092529
    5. '```' → logprob: -12.414717674255371
    6. ' ' → logprob: -13.289717674255371
    7. 'Monster' → logprob: -13.414717674255371
    8. ' monsters' → logprob: -13.914717674255371
    9. 'mons' → logprob: -14.164717674255371
    10. '  ' → logprob: -14.164717674255371

Token 580: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5235050916671753
    2. '=' → logprob: -0.8985050916671753
    3. 's' → logprob: -7.898505210876465
    4. ')' → logprob: -12.648505210876465
    5. '_sorted' → logprob: -13.148505210876465
    6. ',' → logprob: -13.648505210876465
    7. '<|end|>' → logprob: -14.273505210876465
    8. '```' → logprob: -14.898505210876465
    9. '.sort' → logprob: -15.023505210876465
    10. '[' → logprob: -15.023505210876465

Token 581: ' prepare' (ID: 13708)
  Prédit: 'prepare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prepare' → logprob: -0.008655465207993984
    2. ' prepare' → logprob: -4.758655548095703
    3. 'sort' → logprob: -10.133655548095703
    4. ' sort' → logprob: -14.633655548095703
    5. '   ' → logprob: -15.133655548095703
    6. '.prepare' → logprob: -15.758655548095703
    7. '_prepare' → logprob: -16.133655548095703
    8. 'Prepare' → logprob: -16.633655548095703
    9. ' ' → logprob: -16.883655548095703
    10. 'prep' → logprob: -17.133655548095703

Token 582: '_mon' (ID: 80615)
  Prédit: '_mon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mon' → logprob: -1.580929347255733e-05
    2. 'mon' → logprob: -11.125016212463379
    3. '(mon' → logprob: -14.125016212463379
    4. 'monster' → logprob: -15.250016212463379
    5. '_list' → logprob: -18.250015258789062
    6. '```' → logprob: -18.500015258789062
    7. '_m' → logprob: -18.750015258789062
    8. 'Mon' → logprob: -18.875015258789062
    9. '_MON' → logprob: -19.625015258789062
    10. '-mon' → logprob: -19.875015258789062

Token 583: 'ster' (ID: 3968)
  Prédit: 'ster'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ster' → logprob: -0.000399091251892969
    2. 'sters' → logprob: -8.000398635864258
    3. '_list' → logprob: -10.875398635864258
    4. 'STER' → logprob: -11.750398635864258
    5. 'st' → logprob: -12.250398635864258
    6. '```' → logprob: -12.500398635864258
    7. '(' → logprob: -12.625398635864258
    8. '_' → logprob: -13.000398635864258
    9. 's' → logprob: -13.000398635864258
    10. '\' → logprob: -13.250398635864258

Token 584: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.000639169302303344
    2. 'list' → logprob: -7.375638961791992
    3. 'List' → logprob: -12.500638961791992
    4. 'mon' → logprob: -12.500638961791992
    5. 'pairs' → logprob: -12.875638961791992
    6. '_pairs' → logprob: -13.750638961791992
    7. 'monster' → logprob: -15.250638961791992
    8. 's' → logprob: -15.250638961791992
    9. '(mon' → logprob: -15.250638961791992
    10. 'pair' → logprob: -15.500638961791992

Token 585: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -1.5928495486150496e-05
    2. '(mon' → logprob: -11.250016212463379
    3. '(' → logprob: -13.375016212463379
    4. '(x' → logprob: -15.375016212463379
    5. 'mon' → logprob: -15.375016212463379
    6. '(sorted' → logprob: -15.625016212463379
    7. '((' → logprob: -15.875016212463379
    8. '```' → logprob: -16.125015258789062
    9. '(
' → logprob: -16.250015258789062
    10. ' (' → logprob: -16.375015258789062

Token 586: 'H' (ID: 39)
  Prédit: '_pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.0003422567679081112
    2. 'pairs' → logprob: -8.25034236907959
    3. 'airs' → logprob: -9.50034236907959
    4. 'Pairs' → logprob: -12.87534236907959
    5. 'H' → logprob: -13.00034236907959
    6. 'X' → logprob: -15.00034236907959
    7. ' pairs' → logprob: -16.000341415405273
    8. '
' → logprob: -16.250341415405273
    9. 'h' → logprob: -16.375341415405273
    10. '```' → logprob: -16.750341415405273

Token 587: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -5.56233171664644e-05
    2. ',' → logprob: -10.625055313110352
    3. 'pairs' → logprob: -10.625055313110352
    4. '),' → logprob: -13.250055313110352
    5. ',_' → logprob: -13.500055313110352
    6. ')' → logprob: -14.125055313110352
    7. '
' → logprob: -14.250055313110352
    8. 'Pairs' → logprob: -14.625055313110352
    9. '_,' → logprob: -14.625055313110352
    10. 's' → logprob: -14.625055313110352

Token 588: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001564586127642542
    2. ',A' → logprob: -8.87515640258789
    3. ' ,' → logprob: -11.25015640258789
    4. 'A' → logprob: -12.75015640258789
    5. ' A' → logprob: -15.50015640258789
    6. ',
' → logprob: -16.00015640258789
    7. 'import' → logprob: -16.37515640258789
    8. ')' → logprob: -16.75015640258789
    9. '<|end|>' → logprob: -16.87515640258789
    10. '   ' → logprob: -17.37515640258789

Token 589: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -6.611323624383658e-05
    2. ' A' → logprob: -9.625065803527832
    3. '
' → logprob: -19.00006675720215
    4. '   ' → logprob: -19.37506675720215
    5. '	A' → logprob: -19.37506675720215
    6. 'a' → logprob: -20.62506675720215
    7. '>A' → logprob: -21.75006675720215
    8. ' ' → logprob: -21.87506675720215
    9. 'Ａ' → logprob: -21.87506675720215
    10. '```' → logprob: -22.00006675720215

Token 590: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016778295685071498
    2. ',N' → logprob: -8.750167846679688
    3. ' ,' → logprob: -12.125167846679688
    4. ')' → logprob: -13.125167846679688
    5. ',n' → logprob: -14.000167846679688
    6. '   ' → logprob: -14.500167846679688
    7. 'import' → logprob: -15.625167846679688
    8. '```' → logprob: -15.875167846679688
    9. ',len' → logprob: -16.500167846679688
    10. ',
' → logprob: -17.250167846679688

Token 591: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -2.1008713702030946e-06
    2. ' N' → logprob: -13.125001907348633
    3. '   ' → logprob: -17.375001907348633
    4. 'len' → logprob: -20.125001907348633
    5. '	N' → logprob: -21.125001907348633
    6. 'Ｎ' → logprob: -22.375001907348633
    7. '```' → logprob: -23.000001907348633
    8. ')' → logprob: -23.125001907348633
    9. '[N' → logprob: -23.750001907348633
    10. '<N' → logprob: -23.750001907348633

Token 592: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10032495856285095
    2. ')
' → logprob: -2.350324869155884
    3. '   ' → logprob: -9.100324630737305
    4. ')

' → logprob: -13.100324630737305
    5. ')
' → logprob: -13.350324630737305
    6. ')m' → logprob: -14.850324630737305
    7. '),' → logprob: -14.975324630737305
    8. ')#' → logprob: -15.100324630737305
    9. ').' → logprob: -15.475324630737305
    10. '
' → logprob: -15.600324630737305

Token 593: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.042707618325948715
    2. 'monster' → logprob: -3.292707681655884
    3. 'mon' → logprob: -5.917707443237305
    4. ' monster' → logprob: -6.542707443237305
    5. '```' → logprob: -7.667707443237305
    6. '(mon' → logprob: -10.792707443237305
    7. '
' → logprob: -11.792707443237305
    8. 'sorted' → logprob: -12.167707443237305
    9. '    
' → logprob: -12.417707443237305
    10. 'def' → logprob: -12.917707443237305

Token 594: ' monster' (ID: 36286)
  Prédit: 'monster'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'monster' (adapté à ' monster') → logprob: -0.00039980647852644324
    2. 'sort' → logprob: -8.750399589538574
    3. 'sorted' → logprob: -9.000399589538574
    4. ' monster' → logprob: -10.000399589538574
    5. 'mon' → logprob: -10.000399589538574
    6. '   ' → logprob: -10.625399589538574
    7. '
' → logprob: -13.750399589538574
    8. '```' → logprob: -14.000399589538574
    9. '    
' → logprob: -15.375399589538574
    10. '  ' → logprob: -16.25040054321289

Token 595: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47409728169441223
    2. ' =' → logprob: -0.9740972518920898
    3. '_sorted' → logprob: -11.09909725189209
    4. 'sorted' → logprob: -12.84909725189209
    5. '.sort' → logprob: -13.34909725189209
    6. 'sort' → logprob: -15.34909725189209
    7. ')' → logprob: -15.34909725189209
    8. ',' → logprob: -15.84909725189209
    9. 'Sorted' → logprob: -16.349098205566406
    10. '(sorted' → logprob: -16.849098205566406

Token 596: ' sort' (ID: 4506)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.029750484973192215
    2. ' sort' → logprob: -3.5297505855560303
    3. '(sort' → logprob: -17.27975082397461
    4. 'sorted' → logprob: -17.40475082397461
    5. '	sort' → logprob: -19.52975082397461
    6. '.sort' → logprob: -20.52975082397461
    7. ' sorted' → logprob: -21.02975082397461
    8. '_sort' → logprob: -21.27975082397461
    9. 's' → logprob: -21.40475082397461
    10. ' ' → logprob: -22.15475082397461

Token 597: '_mon' (ID: 80615)
  Prédit: '_mon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mon' → logprob: -8.602024900028482e-05
    2. '(mon' → logprob: -9.750085830688477
    3. 'mon' → logprob: -10.500085830688477
    4. '_m' → logprob: -17.125085830688477
    5. 's' → logprob: -17.375085830688477
    6. 'monster' → logprob: -17.625085830688477
    7. '```' → logprob: -18.875085830688477
    8. ' мон' → logprob: -18.875085830688477
    9. '_MON' → logprob: -19.125085830688477
    10. '-mon' → logprob: -19.250085830688477

Token 598: 'sters' (ID: 17541)
  Prédit: 'sters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sters' → logprob: -0.026519153267145157
    2. 'ster' → logprob: -3.6515190601348877
    3. 'st' → logprob: -9.651518821716309
    4. 'mon' → logprob: -10.151518821716309
    5. '_mon' → logprob: -10.276518821716309
    6. 'monster' → logprob: -10.401518821716309
    7. '[' → logprob: -11.401518821716309
    8. 'ters' → logprob: -11.651518821716309
    9. 's' → logprob: -11.651518821716309
    10. '```' → logprob: -12.401518821716309

Token 599: '(mon' (ID: 142845)
  Prédit: '(mon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mon' → logprob: -1.2664456789934775e-06
    2. '(m' → logprob: -14.625000953674316
    3. 'monster' → logprob: -14.875000953674316
    4. 'mon' → logprob: -15.000000953674316
    5. '```' → logprob: -17.625001907348633
    6. '(' → logprob: -18.000001907348633
    7. '(
' → logprob: -19.375001907348633
    8. '_mon' → logprob: -20.375001907348633
    9. '.mon' → logprob: -21.000001907348633
    10. ' (' → logprob: -21.000001907348633

Token 600: 'ster' (ID: 3968)
  Prédit: 'ster'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ster' → logprob: -4.537180211627856e-05
    2. 'st' → logprob: -11.250045776367188
    3. 'sters' → logprob: -11.875045776367188
    4. '```' → logprob: -12.125045776367188
    5. 'monster' → logprob: -12.500045776367188
    6. '[' → logprob: -12.500045776367188
    7. ')' → logprob: -12.625045776367188
    8. 'ester' → logprob: -13.625045776367188
    9. 'er' → logprob: -13.750045776367188
    10. 'STER' → logprob: -13.750045776367188

Token 601: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007469143718481064
    2. ')
' → logprob: -5.257469177246094
    3. '   ' → logprob: -6.632469177246094
    4. '()' → logprob: -7.382469177246094
    5. '())' → logprob: -8.382469177246094
    6. '()
' → logprob: -10.257469177246094
    7. '
' → logprob: -12.132469177246094
    8. ' )' → logprob: -12.132469177246094
    9. '())
' → logprob: -12.132469177246094
    10. ')

' → logprob: -12.507469177246094

Token 602: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.355623722076416
    2. '   ' → logprob: -1.230623722076416
    3. ' ans' → logprob: -5.730623722076416
    4. '	ans' → logprob: -6.355623722076416
    5. '```' → logprob: -6.480623722076416
    6. 'result' → logprob: -8.230623245239258
    7. 'answer' → logprob: -9.105623245239258
    8. '(ans' → logprob: -9.105623245239258
    9. '
' → logprob: -9.480623245239258
    10. '_ans' → logprob: -10.605623245239258

Token 603: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.00026062061078846455
    2. 'result' → logprob: -9.500260353088379
    3. 'answer' → logprob: -9.500260353088379
    4. 'print' → logprob: -9.750260353088379
    5. '   ' → logprob: -10.000260353088379
    6. ' ans' → logprob: -12.125260353088379
    7. 'attack' → logprob: -13.875260353088379
    8. '```' → logprob: -15.000260353088379
    9. 'res' → logprob: -15.625260353088379
    10. '	ans' → logprob: -15.750260353088379

Token 604: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03406725451350212
    2. '=' → logprob: -3.409067153930664
    3. ',' → logprob: -7.784067153930664
    4. ' ' → logprob: -13.784067153930664
    5. ' +=' → logprob: -14.034067153930664
    6. '   ' → logprob: -14.159067153930664
    7. ')' → logprob: -14.534067153930664
    8. ' =
' → logprob: -14.909067153930664
    9. '  ' → logprob: -14.909067153930664
    10. ' =)' → logprob: -15.034067153930664

Token 605: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.16022412478923798
    2. ' process' → logprob: -1.9102240800857544
    3. '(process' → logprob: -17.66022491455078
    4. '	process' → logprob: -20.53522491455078
    5. '.process' → logprob: -20.91022491455078
    6. ' proces' → logprob: -22.66022491455078
    7. '_process' → logprob: -23.03522491455078
    8. '   ' → logprob: -23.66022491455078
    9. 'proces' → logprob: -24.78522491455078
    10. '/process' → logprob: -25.16022491455078

Token 606: '_mon' (ID: 80615)
  Prédit: '_mon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mon' → logprob: -3.690834273584187e-05
    2. '(mon' → logprob: -10.25003719329834
    3. 'mon' → logprob: -13.50003719329834
    4. '```' → logprob: -16.500036239624023
    5. ' мон' → logprob: -17.250036239624023
    6. '_m' → logprob: -17.750036239624023
    7. '(' → logprob: -18.625036239624023
    8. '\' → logprob: -18.750036239624023
    9. '_MON' → logprob: -18.875036239624023
    10. '
' → logprob: -19.375036239624023

Token 607: 'sters' (ID: 17541)
  Prédit: 'sters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sters' → logprob: -0.18213985860347748
    2. 'ster' → logprob: -1.8071398735046387
    3. 'ers' → logprob: -7.307139873504639
    4. 'ors' → logprob: -7.557139873504639
    5. 'on' → logprob: -8.55713939666748
    6. 'monster' → logprob: -8.80713939666748
    7. 'ters' → logprob: -9.05713939666748
    8. '```' → logprob: -9.05713939666748
    9. 's' → logprob: -9.43213939666748
    10. '[' → logprob: -9.68213939666748

Token 608: '(mon' (ID: 142845)
  Prédit: '(mon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mon' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.875
    3. '(m' → logprob: -16.125
    4. '```' → logprob: -16.75
    5. 'mon' → logprob: -17.125
    6. '(
' → logprob: -18.125
    7. ' (' → logprob: -18.625
    8. 'monster' → logprob: -19.125
    9. '(ma' → logprob: -20.0
    10. '_mon' → logprob: -20.5

Token 609: 'ster' (ID: 3968)
  Prédit: 'ster'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ster' → logprob: -7.703443770878948e-06
    2. 'er' → logprob: -12.625007629394531
    3. 'monster' → logprob: -13.750007629394531
    4. 'sters' → logprob: -14.125007629394531
    5. 'ester' → logprob: -14.125007629394531
    6. 'st' → logprob: -14.500007629394531
    7. '[' → logprob: -15.125007629394531
    8. 'ter' → logprob: -15.250007629394531
    9. '```' → logprob: -15.375007629394531
    10. 'STER' → logprob: -15.875007629394531

Token 610: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.4849443838757e-06
    2. ' ,' → logprob: -13.750004768371582
    3. '   ' → logprob: -13.750004768371582
    4. ')' → logprob: -14.000004768371582
    5. ',
' → logprob: -14.375004768371582
    6. ',D' → logprob: -14.375004768371582
    7. '(' → logprob: -15.125004768371582
    8. 'import' → logprob: -17.250003814697266
    9. '```' → logprob: -17.750003814697266
    10. '=' → logprob: -17.875003814697266

Token 611: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0003348698082845658
    2. '2' → logprob: -8.500334739685059
    3. ')' → logprob: -9.375334739685059
    4. ' D' → logprob: -10.375334739685059
    5. 'A' → logprob: -11.500334739685059
    6. '1' → logprob: -13.625334739685059
    7. '(' → logprob: -13.875334739685059
    8. '10' → logprob: -14.000334739685059
    9. ' ' → logprob: -14.375334739685059
    10. '<|end|>' → logprob: -15.125334739685059

Token 612: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.10020817816257477
    2. ')' → logprob: -2.350208282470703
    3. ')
' → logprob: -13.850208282470703
    4. '   ' → logprob: -14.850208282470703
    5. ' )
' → logprob: -16.100208282470703
    6. ')`
' → logprob: -16.350208282470703
    7. ')

' → logprob: -16.975208282470703
    8. ' )' → logprob: -18.475208282470703
    9. ' ' → logprob: -19.600208282470703
    10. ')`' → logprob: -19.600208282470703

Token 613: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16833271086215973
    2. '
' → logprob: -1.9183326959609985
    3. 'print' → logprob: -4.918332576751709
    4. ' print' → logprob: -7.793332576751709
    5. '```' → logprob: -8.668333053588867
    6. '    
' → logprob: -9.293333053588867
    7. '(print' → logprob: -10.293333053588867
    8. '
' → logprob: -10.918333053588867
    9. '	print' → logprob: -11.168333053588867
    10. '<|end|>' → logprob: -11.668333053588867

Token 614: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -7.159660890465602e-05
    2. '   ' → logprob: -10.25007152557373
    3. ' print' → logprob: -10.25007152557373
    4. '
' → logprob: -14.12507152557373
    5. '	print' → logprob: -17.500072479248047
    6. '```' → logprob: -17.750072479248047
    7. '(print' → logprob: -17.875072479248047
    8. '_print' → logprob: -19.375072479248047
    9. '#print' → logprob: -19.625072479248047
    10. '.print' → logprob: -19.625072479248047

Token 615: '_output' (ID: 16732)
  Prédit: '_output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_output' → logprob: -0.03612486645579338
    2. '(ans' → logprob: -3.4111249446868896
    3. '(' → logprob: -6.5361247062683105
    4. '(output' → logprob: -6.9111247062683105
    5. 'Output' → logprob: -11.786125183105469
    6. '_(' → logprob: -12.411125183105469
    7. 'output' → logprob: -12.661125183105469
    8. ' (' → logprob: -12.661125183105469
    9. '_out' → logprob: -13.286125183105469
    10. '(_' → logprob: -13.661125183105469

Token 616: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -3.128163257315464e-07
    2. '(answer' → logprob: -15.625
    3. '(' → logprob: -16.875
    4. ' (' → logprob: -17.75
    5. '(an' → logprob: -19.625
    6. 'ans' → logprob: -20.125
    7. '(
' → logprob: -20.625
    8. '(ord' → logprob: -20.75
    9. '(op' → logprob: -21.0
    10. '	ans' → logprob: -21.375

Token 617: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9504606825648807e-05
    2. '())' → logprob: -11.250019073486328
    3. ')
' → logprob: -12.625019073486328
    4. '()' → logprob: -12.875019073486328
    5. ' )' → logprob: -14.625019073486328
    6. '))' → logprob: -18.000019073486328
    7. ')`' → logprob: -18.000019073486328
    8. '   ' → logprob: -18.625019073486328
    9. '[])' → logprob: -18.625019073486328
    10. ')

' → logprob: -19.125019073486328

Token 618: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00046844579628668725
    2. '```' → logprob: -7.8754682540893555
    3. ' if' → logprob: -9.875468254089355
    4. '
' → logprob: -10.750468254089355
    5. '<|end|>' → logprob: -12.375468254089355
    6. 'main' → logprob: -12.375468254089355
    7. '#' → logprob: -12.625468254089355
    8. '\' → logprob: -14.000468254089355
    9. '__' → logprob: -15.000468254089355
    10. '``' → logprob: -15.125468254089355

Token 619: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.5759487152099609
    2. '__' → logprob: -0.8259487152099609
    3. '_' → logprob: -12.700948715209961
    4. '_name' → logprob: -12.950948715209961
    5. '___' → logprob: -13.200948715209961
    6. 'name' → logprob: -13.950948715209961
    7. ' ' → logprob: -14.450948715209961
    8. ' ' → logprob: -15.575948715209961
    9. '/__' → logprob: -15.700948715209961
    10. 'Name' → logprob: -16.70094871520996

Token 620: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.03237780183553696
    2. ' ==' → logprob: -3.7823777198791504
    3. '==' → logprob: -5.15737771987915
    4. '.__' → logprob: -6.65737771987915
    5. 'name' → logprob: -6.90737771987915
    6. ' __' → logprob: -8.032378196716309
    7. '__.__' → logprob: -8.157378196716309
    8. '=="' → logprob: -9.282378196716309
    9. '=='' → logprob: -10.032378196716309
    10. 'if' → logprob: -10.157378196716309

Token 621: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.000555416801944375
    2. '__.__' → logprob: -7.750555515289307
    3. '==' → logprob: -9.250555038452148
    4. '=="' → logprob: -10.750555038452148
    5. '__.' → logprob: -12.875555038452148
    6. '__["' → logprob: -13.500555038452148
    7. ' ==' → logprob: -14.250555038452148
    8. '=='' → logprob: -14.250555038452148
    9. '___' → logprob: -14.375555038452148
    10. '__('' → logprob: -14.625555038452148

Token 622: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.07789450138807297
    2. '==' → logprob: -2.702894449234009
    3. ' ==' → logprob: -5.327894687652588
    4. '=="' → logprob: -5.952894687652588
    5. '=='' → logprob: -8.32789421081543
    6. '__.__' → logprob: -8.57789421081543
    7. '___' → logprob: -11.45289421081543
    8. '.__' → logprob: -11.70289421081543
    9. '===' → logprob: -12.07789421081543
    10. '_' → logprob: -12.57789421081543

Token 623: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.04859725013375282
    2. ''' → logprob: -3.0485973358154297
    3. '__' → logprob: -12.04859733581543
    4. ' "__' → logprob: -12.54859733581543
    5. '"user' → logprob: -15.67359733581543
    6. ' '__' → logprob: -15.79859733581543
    7. '"name' → logprob: -16.92359733581543
    8. '("__' → logprob: -17.79859733581543
    9. '('__' → logprob: -17.79859733581543
    10. '"class' → logprob: -18.04859733581543

Token 624: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0011706985533237457
    2. 'name' → logprob: -6.751170635223389
    3. 'built' → logprob: -15.876171112060547
    4. '__' → logprob: -16.001171112060547
    5. 'py' → logprob: -16.126171112060547
    6. 'if' → logprob: -16.376171112060547
    7. 'm' → logprob: -17.751171112060547
    8. 'python' → logprob: -17.751171112060547
    9. 'code' → logprob: -17.876171112060547
    10. ' main' → logprob: -18.126171112060547

Token 625: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.023304525762796402
    2. '__' → logprob: -3.7733044624328613
    3. '__":
' → logprob: -9.89830493927002
    4. '__:' → logprob: -11.77330493927002
    5. '__.' → logprob: -14.77330493927002
    6. '('__' → logprob: -15.52330493927002
    7. '_' → logprob: -15.77330493927002
    8. '__
' → logprob: -16.273303985595703
    9. '__.__' → logprob: -16.523303985595703
    10. '__('' → logprob: -16.523303985595703

Token 626: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -6.511406809295295e-06
    2. ' main' → logprob: -12.250006675720215
    3. '	main' → logprob: -13.875006675720215
    4. '   ' → logprob: -14.375006675720215
    5. '
' → logprob: -16.3750057220459
    6. '_main' → logprob: -18.1250057220459
    7. '```' → logprob: -18.6250057220459
    8. '(main' → logprob: -19.2500057220459
    9. '__' → logprob: -19.3750057220459
    10. '    
' → logprob: -20.1250057220459

Token 627: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.75
    3. '	main' → logprob: -23.0
    4. '   ' → logprob: -25.5
    5. '_main' → logprob: -26.125
    6. '.main' → logprob: -26.625
    7. 'import' → logprob: -28.625
    8. '(main' → logprob: -28.625
    9. 'Main' → logprob: -28.875
    10. '__' → logprob: -29.875

Token 628: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 626
Tokens correctement prédits (1ère position, stricte): 284
Tokens correctement prédits (1ère position, avec adaptation): 311
Tokens correctement prédits (top 10): 555
Précision stricte (1ère position): 45.37%
Précision adaptée (1ère position): 49.68%
Précision (top 10): 88.66%
================================================================================
