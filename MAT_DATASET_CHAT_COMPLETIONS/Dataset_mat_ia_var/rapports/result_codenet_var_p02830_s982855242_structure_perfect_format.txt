================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:34:11
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
s, t = map(str, input().split())
final_str = ""
for i in range(n):
    final_str += s[i] + t[i]
print(final_str)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00038134094211272895
    2. '(n' → logprob: -9.000381469726562
    3. ''' → logprob: -9.500381469726562
    4. '('' → logprob: -10.125381469726562
    5. '```' → logprob: -10.125381469726562
    6. '`' → logprob: -10.750381469726562
    7. '("("' → logprob: -10.750381469726562
    8. '()' → logprob: -11.250381469726562
    9. 'n' → logprob: -11.625381469726562
    10. ')' → logprob: -12.000381469726562

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7192649245262146
    2. ')' → logprob: -0.7192649245262146
    3. '()' → logprob: -3.9692649841308594
    4. '())' → logprob: -5.219264984130859
    5. '(
' → logprob: -8.09426498413086
    6. '```' → logprob: -8.71926498413086
    7. '[' → logprob: -9.21926498413086
    8. '))' → logprob: -9.34426498413086
    9. '(()' → logprob: -9.34426498413086
    10. '")' → logprob: -9.46926498413086

Token 5: 's' (ID: 82)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6515942215919495
    2. 'for' → logprob: -1.4015941619873047
    3. 'i' → logprob: -2.1515941619873047
    4. 's' → logprob: -2.7765941619873047
    5. 'x' → logprob: -4.651594161987305
    6. ')' → logprob: -5.151594161987305
    7. 'a' → logprob: -5.401594161987305
    8. '*' → logprob: -5.401594161987305
    9. ' ' → logprob: -5.651594161987305
    10. 'f' → logprob: -5.901594161987305

Token 6: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7856029868125916
    2. '.' → logprob: -1.4106030464172363
    3. 'um' → logprob: -2.1606030464172363
    4. ' =' → logprob: -2.6606030464172363
    5. 'u' → logprob: -4.035603046417236
    6. '=' → logprob: -4.160603046417236
    7. 't' → logprob: -4.285603046417236
    8. 'tr' → logprob: -4.410603046417236
    9. '[i' → logprob: -4.910603046417236
    10. '+' → logprob: -5.035603046417236

Token 7: ' t' (ID: 260)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4387992024421692
    2. ' =' → logprob: -1.1887991428375244
    3. ' ' → logprob: -3.9387991428375244
    4. '_' → logprob: -4.3137993812561035
    5. 's' → logprob: -5.5637993812561035
    6. 't' → logprob: -5.6887993812561035
    7. ' []' → logprob: -6.5637993812561035
    8. ',' → logprob: -6.5637993812561035
    9. '"' → logprob: -6.9387993812561035
    10. 'i' → logprob: -7.3137993812561035

Token 8: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4289054572582245
    2. '=' → logprob: -1.0539054870605469
    3. ',' → logprob: -8.678905487060547
    4. ' ' → logprob: -11.303905487060547
    5. '_' → logprob: -11.678905487060547
    6. ' ,' → logprob: -12.303905487060547
    7. 's' → logprob: -13.178905487060547
    8. ')' → logprob: -13.303905487060547
    9. '[' → logprob: -13.678905487060547
    10. '  ' → logprob: -14.178905487060547

Token 9: ' map' (ID: 4014)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3861967921257019
    2. ' input' → logprob: -1.3861968517303467
    3. 'map' → logprob: -3.6361968517303467
    4. ' map' → logprob: -3.6361968517303467
    5. ' ' → logprob: -5.136196613311768
    6. '0' → logprob: -5.261196613311768
    7. ' '',' → logprob: -7.136196613311768
    8. '"' → logprob: -7.261196613311768
    9. '(input' → logprob: -7.636196613311768
    10. '''' → logprob: -7.636196613311768

Token 10: '(str' (ID: 7946)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.23974154889583588
    2. '(' → logprob: -1.864741563796997
    3. '(input' → logprob: -3.614741563796997
    4. '(str' → logprob: -3.864741563796997
    5. '(lambda' → logprob: -4.739741325378418
    6. '(eval' → logprob: -7.989741325378418
    7. 'int' → logprob: -8.364741325378418
    8. '```' → logprob: -8.864741325378418
    9. '[int' → logprob: -8.989741325378418
    10. '(list' → logprob: -9.364741325378418

Token 11: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1143765076994896
    2. ',input' → logprob: -2.8643765449523926
    3. ')' → logprob: -3.4893765449523926
    4. '(input' → logprob: -3.9893765449523926
    5. '(' → logprob: -7.739376544952393
    6. '(),' → logprob: -7.989376544952393
    7. ',int' → logprob: -8.364376068115234
    8. '[input' → logprob: -8.739376068115234
    9. '),' → logprob: -9.114376068115234
    10. '`,' → logprob: -9.239376068115234

Token 12: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.016062874346971512
    2. ' input' → logprob: -4.1410627365112305
    3. '(input' → logprob: -10.89106273651123
    4. ')' → logprob: -12.01606273651123
    5. '[input' → logprob: -14.01606273651123
    6. ' ' → logprob: -14.26606273651123
    7. ',input' → logprob: -14.26606273651123
    8. '<input' → logprob: -14.39106273651123
    9. 'range' → logprob: -14.64106273651123
    10. '=input' → logprob: -14.89106273651123

Token 13: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.015070192515850067
    2. '()' → logprob: -4.265069961547852
    3. ')' → logprob: -7.640069961547852
    4. '().' → logprob: -7.890069961547852
    5. '()))' → logprob: -10.390069961547852
    6. '())
' → logprob: -12.390069961547852
    7. ' ())' → logprob: -12.640069961547852
    8. '());' → logprob: -12.765069961547852
    9. '();)' → logprob: -12.890069961547852
    10. '()),' → logprob: -13.515069961547852

Token 14: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005732863210141659
    2. 'strip' → logprob: -7.50057315826416
    3. ')' → logprob: -11.62557315826416
    4. ' split' → logprob: -11.87557315826416
    5. 'rstrip' → logprob: -12.50057315826416
    6. '(split' → logprob: -14.62557315826416
    7. '.split' → logprob: -16.375574111938477
    8. '```' → logprob: -16.625574111938477
    9. 'spl' → logprob: -17.250574111938477
    10. 's' → logprob: -17.500574111938477

Token 15: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.06015992537140846
    2. ')' → logprob: -3.310159921646118
    3. '()' → logprob: -4.310160160064697
    4. '()))' → logprob: -5.185160160064697
    5. '))' → logprob: -5.935160160064697
    6. '('' → logprob: -9.435159683227539
    7. '(' → logprob: -9.935159683227539
    8. '`)' → logprob: -11.060159683227539
    9. '')' → logprob: -11.185159683227539
    10. '())
' → logprob: -11.435159683227539

Token 16: 'final' (ID: 17196)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11395526677370071
    2. 'result' → logprob: -3.11395525932312
    3. 'if' → logprob: -4.113955497741699
    4. 'count' → logprob: -4.238955497741699
    5. 'i' → logprob: -4.488955497741699
    6. 's' → logprob: -4.988955497741699
    7. 'a' → logprob: -6.113955497741699
    8. 'ans' → logprob: -6.238955497741699
    9. 'print' → logprob: -6.363955497741699
    10. 'n' → logprob: -6.488955497741699

Token 17: '_str' (ID: 6182)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.24090255796909332
    2. '_s' → logprob: -1.8659025430679321
    3. '_string' → logprob: -3.3659026622772217
    4. '_str' → logprob: -4.865902423858643
    5. 's' → logprob: -5.115902423858643
    6. '(' → logprob: -5.740902423858643
    7. '_result' → logprob: -6.365902423858643
    8. '_sum' → logprob: -6.615902423858643
    9. '_output' → logprob: -6.740902423858643
    10. '_count' → logprob: -7.615902423858643

Token 18: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4374370872974396
    2. '(' → logprob: -1.1874370574951172
    3. '_' → logprob: -3.687437057495117
    4. ' =' → logprob: -3.937437057495117
    5. 's' → logprob: -6.312437057495117
    6. '()' → logprob: -6.937437057495117
    7. '[' → logprob: -7.062437057495117
    8. ')' → logprob: -7.812437057495117
    9. '_=' → logprob: -9.187437057495117
    10. '"' → logprob: -9.312437057495117

Token 19: ' ""
' (ID: 18061)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.49885907769203186
    2. 's' → logprob: -1.6238590478897095
    3. '''' → logprob: -2.123859167098999
    4. ' ""' → logprob: -3.498859167098999
    5. ' s' → logprob: -3.873859167098999
    6. 't' → logprob: -4.74885892868042
    7. '"' → logprob: -4.87385892868042
    8. ' ''' → logprob: -5.37385892868042
    9. ''s' → logprob: -6.49885892868042
    10. '"s' → logprob: -6.99885892868042

Token 20: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00778879364952445
    2. 'f' → logprob: -4.88278865814209
    3. 'i' → logprob: -9.13278865814209
    4. ' for' → logprob: -9.88278865814209
    5. '\n' → logprob: -11.38278865814209
    6. '```' → logprob: -13.00778865814209
    7. 'a' → logprob: -13.75778865814209
    8. 'F' → logprob: -14.00778865814209
    9. 'r' → logprob: -14.00778865814209
    10. 'if' → logprob: -14.00778865814209

Token 21: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23562633991241455
    2. ' i' → logprob: -1.6106263399124146
    3. '_' → logprob: -5.110626220703125
    4. ' _' → logprob: -5.610626220703125
    5. 'i' → logprob: -8.110626220703125
    6. ' ‌' → logprob: -9.735626220703125
    7. '  ' → logprob: -9.985626220703125
    8. ' ' → logprob: -10.110626220703125
    9. '_i' → logprob: -12.610626220703125
    10. ' ​' → logprob: -12.735626220703125

Token 22: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12723864614963531
    2. 'in' → logprob: -2.1272387504577637
    3. ' ' → logprob: -8.377238273620605
    4. '  ' → logprob: -10.377238273620605
    5. '	in' → logprob: -11.752238273620605
    6. '<|end|>' → logprob: -12.002238273620605
    7. 'range' → logprob: -12.252238273620605
    8. 'import' → logprob: -12.752238273620605
    9. ' <' → logprob: -12.752238273620605
    10. ')' → logprob: -13.002238273620605

Token 23: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20141558349132538
    2. ' range' → logprob: -1.7014155387878418
    3. '(range' → logprob: -14.326416015625
    4. '	range' → logprob: -14.326416015625
    5. 'n' → logprob: -15.076416015625
    6. ' xrange' → logprob: -15.451416015625
    7. ' ' → logprob: -15.576416015625
    8. ')' → logprob: -16.451416015625
    9. 's' → logprob: -16.576416015625
    10. 'ange' → logprob: -16.826416015625

Token 24: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.484256774187088
    2. '(' → logprob: -0.9842567443847656
    3. ' (' → logprob: -4.609256744384766
    4. ' n' → logprob: -8.984256744384766
    5. '(i' → logprob: -11.109256744384766
    6. 'n' → logprob: -11.609256744384766
    7. '(len' → logprob: -12.109256744384766
    8. '(
' → logprob: -12.234256744384766
    9. ' ' → logprob: -12.359256744384766
    10. '(range' → logprob: -13.609256744384766

Token 25: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008110555354505777
    2. ')' → logprob: -7.3758111000061035
    3. ':' → logprob: -9.000810623168945
    4. '+' → logprob: -10.375810623168945
    5. ' ):' → logprob: -10.625810623168945
    6. '):
' → logprob: -12.750810623168945
    7. '():' → logprob: -15.000810623168945
    8. ']:' → logprob: -15.375810623168945
    9. '-' → logprob: -15.375810623168945
    10. ',' → logprob: -15.625810623168945

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43755877017974854
    2. ' final' → logprob: -1.6875587701797485
    3. 'final' → logprob: -2.437558650970459
    4. ' ' → logprob: -3.062558650970459
    5. ' if' → logprob: -3.937558650970459
    6. '    
' → logprob: -5.812558650970459
    7. '<|end|>' → logprob: -6.187558650970459
    8. '    ' → logprob: -6.312558650970459
    9. ' s' → logprob: -6.562558650970459
    10. 's' → logprob: -6.687558650970459

Token 27: ' final' (ID: 1721)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2620958983898163
    2. 'final' (adapté à ' final') → logprob: -1.7620959281921387
    3. ' if' → logprob: -2.8870959281921387
    4. ' final' → logprob: -5.887095928192139
    5. ' ' → logprob: -8.88709545135498
    6. 'f' → logprob: -9.01209545135498
    7. '   ' → logprob: -9.63709545135498
    8. 's' → logprob: -11.01209545135498
    9. '```' → logprob: -12.13709545135498
    10. 'i' → logprob: -13.13709545135498

Token 28: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -1.3856492842023727e-06
    2. 'str' → logprob: -14.250000953674316
    3. '_' → logprob: -15.000000953674316
    4. '_s' → logprob: -15.375000953674316
    5. 'Str' → logprob: -17.375001907348633
    6. '_STR' → logprob: -17.750001907348633
    7. '```' → logprob: -18.250001907348633
    8. ' _' → logprob: -18.375001907348633
    9. '_string' → logprob: -18.500001907348633
    10. 's' → logprob: -18.625001907348633

Token 29: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5563099980354309
    2. '+=' → logprob: -0.9313099980354309
    3. '+' → logprob: -3.431309938430786
    4. ' +' → logprob: -8.931309700012207
    5. '+='' → logprob: -9.181309700012207
    6. '+="' → logprob: -10.056309700012207
    7. ' ' → logprob: -11.931309700012207
    8. '+=(' → logprob: -12.181309700012207
    9. ']+=' → logprob: -12.306309700012207
    10. '.append' → logprob: -14.431309700012207

Token 30: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6596746444702148
    2. 't' → logprob: -0.9096746444702148
    3. ' t' → logprob: -3.159674644470215
    4. ' s' → logprob: -3.284674644470215
    5. '"s' → logprob: -9.284674644470215
    6. ' ' → logprob: -9.534674644470215
    7. '   ' → logprob: -10.034674644470215
    8. '"' → logprob: -10.034674644470215
    9. 'str' → logprob: -10.284674644470215
    10. ''s' → logprob: -10.534674644470215

Token 31: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00279323011636734
    2. '[' → logprob: -6.002793312072754
    3. '[t' → logprob: -8.752793312072754
    4. 'i' → logprob: -9.127793312072754
    5. 't' → logprob: -11.002793312072754
    6. 's' → logprob: -11.752793312072754
    7. '[int' → logprob: -12.127793312072754
    8. '\[' → logprob: -12.252793312072754
    9. '[
' → logprob: -12.502793312072754
    10. ' i' → logprob: -13.502793312072754

Token 32: ']' (ID: 60)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5638189315795898
    2. ']' → logprob: -1.1888189315795898
    3. ' if' → logprob: -2.43881893157959
    4. 't' → logprob: -3.81381893157959
    5. '+t' → logprob: -4.68881893157959
    6. ']+' → logprob: -6.31381893157959
    7. '+' → logprob: -6.93881893157959
    8. ')' → logprob: -7.31381893157959
    9. ' ' → logprob: -7.93881893157959
    10. ',t' → logprob: -8.06381893157959

Token 33: ' +' (ID: 659)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.025001389905810356
    2. '+t' → logprob: -3.900001287460327
    3. '+' → logprob: -6.275001525878906
    4. ' ' → logprob: -6.775001525878906
    5. ' +' → logprob: -7.775001525878906
    6. ' t' → logprob: -8.275001525878906
    7. '<|end|>' → logprob: -8.400001525878906
    8. '   ' → logprob: -9.025001525878906
    9. '`t' → logprob: -9.275001525878906
    10. ''t' → logprob: -9.650001525878906

Token 34: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.25195056200027466
    2. ' t' → logprob: -1.5019505023956299
    3. ' ' → logprob: -10.87695026397705
    4. '	t' → logprob: -13.87695026397705
    5. '   ' → logprob: -14.62695026397705
    6. '  ' → logprob: -14.62695026397705
    7. '`t' → logprob: -15.37695026397705
    8. '<|end|>' → logprob: -15.50195026397705
    9. '_t' → logprob: -15.87695026397705
    10. 's' → logprob: -16.251951217651367

Token 35: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0006376196397468448
    2. '[' → logprob: -7.375637531280518
    3. 'i' → logprob: -11.625638008117676
    4. '\[' → logprob: -14.625638008117676
    5. '[
' → logprob: -15.125638008117676
    6. '[I' → logprob: -15.125638008117676
    7. '```' → logprob: -15.625638008117676
    8. ' i' → logprob: -15.750638008117676
    9. '<|end|>' → logprob: -16.00063705444336
    10. '[int' → logprob: -16.25063705444336

Token 36: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11364313215017319
    2. ')' → logprob: -2.238643169403076
    3. '}' → logprob: -7.238643169403076
    4. '<|end|>' → logprob: -10.613642692565918
    5. '])' → logprob: -10.738642692565918
    6. '']' → logprob: -11.238642692565918
    7. '```' → logprob: -11.488642692565918
    8. ')]' → logprob: -11.863642692565918
    9. '"]' → logprob: -12.113642692565918
    10. '）' → logprob: -12.113642692565918

Token 37: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.000158842682139948
    2. '<|end|>' → logprob: -9.50015926361084
    3. '\n' → logprob: -10.87515926361084
    4. '#' → logprob: -10.87515926361084
    5. ' print' → logprob: -11.12515926361084
    6. '```' → logprob: -11.25015926361084
    7. '#print' → logprob: -11.37515926361084
    8. '\' → logprob: -13.12515926361084
    9. ')' → logprob: -13.50015926361084
    10. '
' → logprob: -13.75015926361084

Token 38: '(final' (ID: 14111)
  Prédit: '(final'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(final' → logprob: -0.3869136571884155
    2. '(' → logprob: -1.1369136571884155
    3. '("("' → logprob: -10.886913299560547
    4. '()' → logprob: -11.011913299560547
    5. '('' → logprob: -13.011913299560547
    6. '(`' → logprob: -13.636913299560547
    7. '(fin' → logprob: -13.886913299560547
    8. '(f' → logprob: -13.886913299560547
    9. 'final' → logprob: -14.261913299560547
    10. ' (' → logprob: -14.761913299560547

Token 39: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -6.110668618930504e-05
    2. '_' → logprob: -10.25006103515625
    3. '_s' → logprob: -10.75006103515625
    4. ')_' → logprob: -13.50006103515625
    5. ')' → logprob: -14.25006103515625
    6. '_st' → logprob: -14.37506103515625
    7. '_string' → logprob: -15.00006103515625
    8. '_sn' → logprob: -15.50006103515625
    9. '_Str' → logprob: -15.62506103515625
    10. '_STR' → logprob: -15.75006103515625

Token 40: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -15.75
    3. '))' → logprob: -16.75
    4. '')' → logprob: -17.25
    5. '`)' → logprob: -18.0
    6. '")' → logprob: -18.375
    7. ')`' → logprob: -18.875
    8. ')
' → logprob: -19.375
    9. '）' → logprob: -20.625
    10. '#' → logprob: -20.875


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 38
Tokens correctement prédits (1ère position, stricte): 15
Tokens correctement prédits (1ère position, avec adaptation): 15
Tokens correctement prédits (top 10): 31
Précision stricte (1ère position): 39.47%
Précision adaptée (1ère position): 39.47%
Précision (top 10): 81.58%
================================================================================
