================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:51:24
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def read_input():
    n = int(raw_input())
    return n

def is_end(n):
    return n == 0

def read_points(n):
    points = []
    for _ in xrange(n):
        point = parse_point(raw_input())
        points.append(point)
    return points

def parse_point(line):
    return map(float, line.split(","))

def sort_points_by_y(points):
    return sorted(points, key=lambda x: x[1])

def subtract_points(a, b):
    return [a[0] - b[0], a[1] - b[1]]

def vector_length(v):
    return (v[0]**2 + v[1]**2) ** 0.5

def cosine_of_vector(v):
    length = vector_length(v)
    if length == 0:
        return 0
    return v[0] / length

def should_continue(point, p):
    return point[1] < p[1] or point == p

def compare_cosine(c, maxcos, direction):
    if direction == "r":
        return c >= maxcos
    elif direction == "l":
        return c <= maxcos
    return False

def update_maxcos(c, direction):
    return c

def next_point(d, p, maxcos, direction):
    q = None
    for i in xrange(1, len(d)):
        if should_continue(d[i], p):
            continue
        v = subtract_points(d[i], p)
        c = cosine_of_vector(v)
        if compare_cosine(c, maxcos[0], direction):
            maxcos[0] = update_maxcos(c, direction)
            q = d[i]
    return q

def add_to_hull(hull, q):
    hull.append(q)

def is_hull_end(q, d):
    return q == d[-1]

def calc_hull(d, direction):
    maxcos0 = {"r": -1.0, "l": 1.0}
    hull = [d[0]]
    p = d[0]
    while True:
        maxcos = [maxcos0[direction]]
        q = next_point(d, p, maxcos, direction)
        p = q
        add_to_hull(hull, q)
        if is_hull_end(q, d):
            break
    return hull

def compute_result(d):
    return len(d) - (len(calc_hull(d, "r") + calc_hull(d, "l")) - 2)

def main_loop():
    while True:
        n = read_input()
        if is_end(n):
            break
        d = read_points(n)
        d = sort_points_by_y(d)
        result = compute_result(d)
        print result

main_loop()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.19661454856395721
    2. 'os' → logprob: -1.9466145038604736
    3. 'import' → logprob: -3.6966145038604736
    4. 'print' → logprob: -5.696614742279053
    5. 'from' → logprob: -5.821614742279053
    6. 'sys' → logprob: -5.946614742279053
    7. '```' → logprob: -6.946614742279053
    8. 'numpy' → logprob: -8.196614265441895
    9. ' as' → logprob: -8.946614265441895
    10. '#' → logprob: -9.446614265441895

Token 4: ' read' (ID: 1729)
  Prédit: ' my'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' my' → logprob: -0.15282882750034332
    2. 'my' → logprob: -3.1528289318084717
    3. ' foo' → logprob: -3.9028289318084717
    4. '(' → logprob: -4.652828693389893
    5. ' ' → logprob: -4.777828693389893
    6. ' func' → logprob: -5.027828693389893
    7. ' calculate' → logprob: -5.152828693389893
    8. '   ' → logprob: -5.152828693389893
    9. 'def' → logprob: -5.402828693389893
    10. ' main' → logprob: -5.402828693389893

Token 5: '_input' (ID: 12507)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.18495869636535645
    2. '_file' → logprob: -1.9349586963653564
    3. '_input' → logprob: -4.934958457946777
    4. '_data' → logprob: -5.434958457946777
    5. '_csv' → logprob: -6.559958457946777
    6. '_from' → logprob: -6.559958457946777
    7. '_' → logprob: -6.684958457946777
    8. '_files' → logprob: -6.934958457946777
    9. '():
' → logprob: -7.059958457946777
    10. '_lines' → logprob: -7.434958457946777

Token 6: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.2263571172952652
    2. '(:' → logprob: -1.601357102394104
    3. '()' → logprob: -7.7263569831848145
    4. '(' → logprob: -8.476357460021973
    5. '(_:' → logprob: -9.476357460021973
    6. '(':' → logprob: -10.101357460021973
    7. '(":' → logprob: -10.226357460021973
    8. '(::' → logprob: -10.226357460021973
    9. ' ():' → logprob: -10.351357460021973
    10. '():
' → logprob: -10.851357460021973

Token 7: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00019197762594558299
    2. 'return' → logprob: -9.250191688537598
    3. 'pass' → logprob: -9.500191688537598
    4. '  ' → logprob: -11.500191688537598
    5. '```' → logprob: -12.375191688537598
    6. ' ' → logprob: -13.000191688537598
    7. '   ' → logprob: -13.625191688537598
    8. '    ' → logprob: -13.750191688537598
    9. '   ' → logprob: -15.000191688537598
    10. '\t' → logprob: -15.375191688537598

Token 8: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006127156782895327
    2. 'pass' → logprob: -5.13112735748291
    3. 'return' → logprob: -8.63112735748291
    4. '  ' → logprob: -11.63112735748291
    5. '	pass' → logprob: -12.50612735748291
    6. '   ' → logprob: -12.88112735748291
    7. ' ' → logprob: -13.63112735748291
    8. '```' → logprob: -14.00612735748291
    9. ' pass' → logprob: -14.13112735748291
    10. 'sys' → logprob: -14.63112735748291

Token 9: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5836209058761597
    2. ' =' → logprob: -0.8336209058761597
    3. '=int' → logprob: -5.583621025085449
    4. ':' → logprob: -6.333621025085449
    5. '   ' → logprob: -6.708621025085449
    6. 'def' → logprob: -7.583621025085449
    7. ':int' → logprob: -8.45862102508545
    8. '=input' → logprob: -9.95862102508545
    9. ':=' → logprob: -10.70862102508545
    10. ' ' → logprob: -11.08362102508545

Token 10: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.007165716029703617
    2. 'input' → logprob: -5.007165908813477
    3. 'sys' → logprob: -7.757165908813477
    4. ' int' → logprob: -11.007165908813477
    5. ' ' → logprob: -12.257165908813477
    6. '   ' → logprob: -14.007165908813477
    7. ' input' → logprob: -15.882165908813477
    8. '(int' → logprob: -16.632165908813477
    9. ''int' → logprob: -16.757165908813477
    10. 'ints' → logprob: -17.382165908813477

Token 11: '(raw' (ID: 46707)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6349887251853943
    2. '(' → logprob: -0.8849887251853943
    3. '(input' → logprob: -3.384988784790039
    4. '(sys' → logprob: -4.134988784790039
    5. '()(' → logprob: -6.384988784790039
    6. '("' → logprob: -6.759988784790039
    7. '('' → logprob: -7.009988784790039
    8. '(`' → logprob: -7.384988784790039
    9. '("("' → logprob: -7.509988784790039
    10. '(()' → logprob: -7.759988784790039

Token 12: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -2.816093228830141e-06
    2. '_INPUT' → logprob: -13.87500286102295
    3. 'input' → logprob: -14.12500286102295
    4. '_in' → logprob: -15.50000286102295
    5. '_inputs' → logprob: -15.62500286102295
    6. '.input' → logprob: -15.62500286102295
    7. '(input' → logprob: -15.87500286102295
    8. '	input' → logprob: -16.625001907348633
    9. 'Input' → logprob: -16.750001907348633
    10. '_' → logprob: -16.750001907348633

Token 13: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03876398876309395
    2. '(' → logprob: -3.538763999938965
    3. '('' → logprob: -5.288763999938965
    4. '())' → logprob: -6.288763999938965
    5. '("' → logprob: -6.788763999938965
    6. '()(' → logprob: -8.163763999938965
    7. '(`' → logprob: -8.163763999938965
    8. '(()' → logprob: -9.163763999938965
    9. '("("' → logprob: -9.288763999938965
    10. '().' → logprob: -10.038763999938965

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007547161658294499
    2. 'n' → logprob: -7.6257548332214355
    3. 'return' → logprob: -8.375754356384277
    4. '  ' → logprob: -11.750754356384277
    5. 'pass' → logprob: -11.875754356384277
    6. '```' → logprob: -12.375754356384277
    7. ' ' → logprob: -12.750754356384277
    8. 'print' → logprob: -13.000754356384277
    9. 'sys' → logprob: -13.125754356384277
    10. '    ' → logprob: -13.375754356384277

Token 15: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33876851201057434
    2. 'return' (adapté à ' return') → logprob: -1.338768482208252
    3. 'n' → logprob: -4.588768482208252
    4. 'm' → logprob: -4.838768482208252
    5. 'pass' → logprob: -5.213768482208252
    6. 'x' → logprob: -7.338768482208252
    7. 'a' → logprob: -8.08876895904541
    8. 'data' → logprob: -8.83876895904541
    9. 'print' → logprob: -8.96376895904541
    10. 'num' → logprob: -9.08876895904541

Token 16: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.023420169949531555
    2. 'sys' → logprob: -4.148420333862305
    3. 'None' → logprob: -5.773420333862305
    4. '()' → logprob: -6.398420333862305
    5. ' n' → logprob: -6.773420333862305
    6. '(n' → logprob: -7.273420333862305
    7. '   ' → logprob: -8.023420333862305
    8. ' ' → logprob: -8.898420333862305
    9. '(sys' → logprob: -10.023420333862305
    10. 'int' → logprob: -10.023420333862305

Token 17: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6207247376441956
    2. '   ' → logprob: -1.6207246780395508
    3. 'def' → logprob: -2.370724678039551
    4. 'n' → logprob: -2.620724678039551
    5. 'sys' → logprob: -3.620724678039551
    6. ')' → logprob: -3.995724678039551
    7. ':' → logprob: -4.370724678039551
    8. 'print' → logprob: -4.745724678039551
    9. '(n' → logprob: -5.245724678039551
    10. '(' → logprob: -5.245724678039551

Token 18: 'def' (ID: 1314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7007627487182617
    2. '()' → logprob: -1.4507627487182617
    3. 'def' → logprob: -1.9507627487182617
    4. 'n' → logprob: -2.9507627487182617
    5. ':' → logprob: -3.4507627487182617
    6. 'sys' → logprob: -4.450762748718262
    7. 'print' → logprob: -4.700762748718262
    8. ')' → logprob: -4.825762748718262
    9. '```' → logprob: -6.075762748718262
    10. 'return' → logprob: -6.200762748718262

Token 19: ' is' (ID: 382)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.07392572611570358
    2. 'calculate' → logprob: -3.323925733566284
    3. ' process' → logprob: -4.573925495147705
    4. 'main' → logprob: -4.948925495147705
    5. 'compute' → logprob: -5.448925495147705
    6. 'read' → logprob: -5.823925495147705
    7. 'write' → logprob: -6.198925495147705
    8. 'execute' → logprob: -6.198925495147705
    9. 'my' → logprob: -6.323925495147705
    10. 'test' → logprob: -7.573925495147705

Token 20: '_end' (ID: 13707)
  Prédit: '_prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.9254999756813049
    2. '_' → logprob: -1.0504999160766602
    3. '_even' → logprob: -2.92549991607666
    4. '_valid' → logprob: -3.05049991607666
    5. '_pal' → logprob: -3.80049991607666
    6. '_def' → logprob: -4.17549991607666
    7. '_is' → logprob: -4.42549991607666
    8. '_equal' → logprob: -4.80049991607666
    9. '_integer' → logprob: -5.05049991607666
    10. '_zero' → logprob: -5.05049991607666

Token 21: '(n' (ID: 2406)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00032283025211654603
    2. '()' → logprob: -9.000323295593262
    3. ':' → logprob: -9.250323295593262
    4. '():
' → logprob: -9.625323295593262
    5. '_' → logprob: -11.000323295593262
    6. '_:' → logprob: -12.125323295593262
    7. 'def' → logprob: -12.625323295593262
    8. ' ():' → logprob: -13.000323295593262
    9. '():

' → logprob: -13.125323295593262
    10. ':def' → logprob: -14.000323295593262

Token 22: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0023747002705931664
    2. '):
' → logprob: -6.127374649047852
    3. ':' → logprob: -8.752374649047852
    4. '):

' → logprob: -11.002374649047852
    5. ')' → logprob: -11.877374649047852
    6. '   ' → logprob: -12.502374649047852
    7. '):
' → logprob: -13.502374649047852
    8. ''):' → logprob: -14.127374649047852
    9. ')):' → logprob: -14.377374649047852
    10. ',' → logprob: -14.627374649047852

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.319370302458992e-06
    2. '  ' → logprob: -12.875005722045898
    3. 'return' → logprob: -13.000005722045898
    4. ' ' → logprob: -15.750005722045898
    5. '	return' → logprob: -16.6250057220459
    6. ' return' → logprob: -17.0000057220459
    7. '    ' → logprob: -17.0000057220459
    8. '       ' → logprob: -18.6250057220459
    9. '   ' → logprob: -18.7500057220459
    10. '\t' → logprob: -19.1250057220459

Token 24: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0007523320964537561
    2. '   ' → logprob: -7.6257524490356445
    3. 'n' → logprob: -8.250752449035645
    4. 'if' → logprob: -13.125752449035645
    5. ' return' → logprob: -14.250752449035645
    6. 'pass' → logprob: -15.875752449035645
    7. '	return' → logprob: -15.875752449035645
    8. 'returns' → logprob: -16.125751495361328
    9. 'ret' → logprob: -16.250751495361328
    10. 'print' → logprob: -16.875751495361328

Token 25: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12713630497455597
    2. ' n' → logprob: -2.12713623046875
    3. 'True' → logprob: -9.62713623046875
    4. ' ' → logprob: -9.75213623046875
    5. '   ' → logprob: -10.00213623046875
    6. ' True' → logprob: -11.00213623046875
    7. '(n' → logprob: -11.75213623046875
    8. '  ' → logprob: -12.12713623046875
    9. 'False' → logprob: -12.87713623046875
    10. '	n' → logprob: -12.87713623046875

Token 26: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0035298748407512903
    2. ' ==' → logprob: -6.003530025482178
    3. '<=' → logprob: -7.003530025482178
    4. '<' → logprob: -9.62852954864502
    5. '>=' → logprob: -9.87852954864502
    6. '!=' → logprob: -11.37852954864502
    7. '==-' → logprob: -12.00352954864502
    8. '>' → logprob: -12.25352954864502
    9. '0' → logprob: -13.50352954864502
    10. ' <=' → logprob: -13.50352954864502

Token 27: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11429878324270248
    2. '-' → logprob: -2.2392988204956055
    3. '"' → logprob: -6.9892988204956055
    4. ''' → logprob: -8.614298820495605
    5. '1' → logprob: -8.614298820495605
    6. ''end' → logprob: -9.989298820495605
    7. 'EOF' → logprob: -10.114298820495605
    8. '10' → logprob: -10.489298820495605
    9. '42' → logprob: -11.364298820495605
    10. 'sys' → logprob: -11.489298820495605

Token 28: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011961483396589756
    2. '-' → logprob: -4.511961460113525
    3. '1' → logprob: -7.886961460113525
    4. '"' → logprob: -8.261961936950684
    5. ''' → logprob: -8.636961936950684
    6. '10' → logprob: -10.261961936950684
    7. 'EOF' → logprob: -10.886961936950684
    8. ''end' → logprob: -11.386961936950684
    9. 'end' → logprob: -11.511961936950684
    10. 'sys' → logprob: -12.136961936950684

Token 29: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.24177132546901703
    2. '   ' → logprob: -2.1167712211608887
    3. '<|end|>' → logprob: -3.1167712211608887
    4. 'print' → logprob: -4.491771221160889
    5. ':' → logprob: -4.491771221160889
    6. '\n' → logprob: -4.741771221160889
    7. '#' → logprob: -5.366771221160889
    8. '```' → logprob: -5.491771221160889
    9. '<|end|>' → logprob: -6.116771221160889
    10. 'n' → logprob: -6.241771221160889

Token 30: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1862223595380783
    2. '   ' → logprob: -1.9362223148345947
    3. 'if' → logprob: -4.436222553253174
    4. 'n' → logprob: -4.811222553253174
    5. 'print' → logprob: -5.436222553253174
    6. '#' → logprob: -7.436222553253174
    7. 'sys' → logprob: -8.311222076416016
    8. 'pass' → logprob: -8.811222076416016
    9. '```' → logprob: -9.936222076416016
    10. 'return' → logprob: -10.061222076416016

Token 31: ' read' (ID: 1729)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.04209358990192413
    2. 'main' → logprob: -4.042093753814697
    3. 'is' → logprob: -5.042093753814697
    4. 'check' → logprob: -5.667093753814697
    5. ' process' → logprob: -6.042093753814697
    6. 'calculate' → logprob: -6.042093753814697
    7. 'read' → logprob: -6.167093753814697
    8. 'execute' → logprob: -6.292093753814697
    9. 'handle' → logprob: -6.917093753814697
    10. 'print' → logprob: -7.417093753814697

Token 32: '_points' (ID: 30070)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.01002840418368578
    2. '_output' → logprob: -4.76002836227417
    3. '_' → logprob: -7.01002836227417
    4. '_inputs' → logprob: -9.510028839111328
    5. '_file' → logprob: -9.885028839111328
    6. '_in' → logprob: -10.260028839111328
    7. '_INPUT' → logprob: -10.385028839111328
    8. '_line' → logprob: -11.260028839111328
    9. '_next' → logprob: -11.385028839111328
    10. '_data' → logprob: -11.510028839111328

Token 33: '(n' (ID: 2406)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0014451147289946675
    2. '(:' → logprob: -6.626445293426514
    3. '():
' → logprob: -10.251444816589355
    4. '()' → logprob: -10.376444816589355
    5. '(' → logprob: -11.251444816589355
    6. ' ():' → logprob: -11.251444816589355
    7. '(_:' → logprob: -11.751444816589355
    8. '(":' → logprob: -12.376444816589355
    9. '():

' → logprob: -12.376444816589355
    10. '(':' → logprob: -12.501444816589355

Token 34: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.100545234978199
    2. '):
' → logprob: -2.3505451679229736
    3. '   ' → logprob: -8.975544929504395
    4. '):

' → logprob: -8.975544929504395
    5. ',' → logprob: -10.100544929504395
    6. '):
' → logprob: -10.475544929504395
    7. ':' → logprob: -12.100544929504395
    8. ')' → logprob: -12.850544929504395
    9. ''):' → logprob: -13.225544929504395
    10. ')):' → logprob: -13.350544929504395

Token 35: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.4849443838757e-06
    2. '  ' → logprob: -12.625004768371582
    3. 'points' → logprob: -14.875004768371582
    4. ' ' → logprob: -15.125004768371582
    5. 'pass' → logprob: -15.375004768371582
    6. '    ' → logprob: -15.750004768371582
    7. '	points' → logprob: -16.125003814697266
    8. '       ' → logprob: -17.375003814697266
    9. '	' → logprob: -18.250003814697266
    10. '	pass' → logprob: -18.250003814697266

Token 36: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' (adapté à ' points') → logprob: -0.06231698393821716
    2. '   ' → logprob: -2.81231689453125
    3. 'point' → logprob: -8.81231689453125
    4. 'pass' → logprob: -9.31231689453125
    5. 'return' → logprob: -9.43731689453125
    6. ' points' → logprob: -11.93731689453125
    7. '	points' → logprob: -11.93731689453125
    8. 'list' → logprob: -12.43731689453125
    9. 'pts' → logprob: -12.56231689453125
    10. '  ' → logprob: -13.43731689453125

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018868107348680496
    2. '=' → logprob: -4.0188679695129395
    3. '   ' → logprob: -8.143868446350098
    4. '=[]' → logprob: -8.268868446350098
    5. '[]' → logprob: -10.143868446350098
    6. '_list' → logprob: -10.268868446350098
    7. ' ' → logprob: -10.518868446350098
    8. ':' → logprob: -11.018868446350098
    9. '[:]' → logprob: -11.268868446350098
    10. '_' → logprob: -11.393868446350098

Token 38: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00024870390188880265
    2. ' []' → logprob: -8.375248908996582
    3. 'list' → logprob: -11.750248908996582
    4. '[]
' → logprob: -12.250248908996582
    5. 'sys' → logprob: -13.250248908996582
    6. '   ' → logprob: -13.500248908996582
    7. '[]}' → logprob: -13.625248908996582
    8. '[' → logprob: -15.375248908996582
    9. '([]' → logprob: -15.375248908996582
    10. '[]

' → logprob: -15.625248908996582

Token 39: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.935296834039036e-06
    2. '  ' → logprob: -13.75000286102295
    3. '    
' → logprob: -14.37500286102295
    4. '       ' → logprob: -15.50000286102295
    5. '    ' → logprob: -15.62500286102295
    6. '	' → logprob: -15.75000286102295
    7. 'points' → logprob: -15.75000286102295
    8. ' ' → logprob: -16.125003814697266
    9. 'for' → logprob: -16.125003814697266
    10. '	for' → logprob: -16.250003814697266

Token 40: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1614745557308197
    2. 'for' (adapté à ' for') → logprob: -1.911474585533142
    3. 'while' → logprob: -7.661474704742432
    4. 'points' → logprob: -7.661474704742432
    5. 'return' → logprob: -8.911474227905273
    6. 'point' → logprob: -9.036474227905273
    7. '#' → logprob: -10.786474227905273
    8. ' for' → logprob: -11.786474227905273
    9. '  ' → logprob: -12.036474227905273
    10. ' ' → logprob: -12.161474227905273

Token 41: ' _' (ID: 1175)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5868355631828308
    2. ' i' → logprob: -0.8368355631828308
    3. 'i' → logprob: -6.0868353843688965
    4. 'in' → logprob: -6.0868353843688965
    5. ' ' → logprob: -6.2118353843688965
    6. ' range' → logprob: -6.4618353843688965
    7. ' _' → logprob: -6.5868353843688965
    8. '   ' → logprob: -8.336835861206055
    9. 'range' → logprob: -8.336835861206055
    10. ' point' → logprob: -8.586835861206055

Token 42: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.006157847121357918
    2. 'range' → logprob: -5.381157875061035
    3. ' in' → logprob: -6.756157875061035
    4. ':' → logprob: -8.381157875061035
    5. 'for' → logprob: -10.006157875061035
    6. '   ' → logprob: -10.381157875061035
    7. 'points' → logprob: -10.881157875061035
    8. 'import' → logprob: -11.256157875061035
    9. '=' → logprob: -11.881157875061035
    10. 'ind' → logprob: -12.131157875061035

Token 43: ' xrange' (ID: 92050)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.584861744660884e-05
    2. ' range' → logprob: -10.000045776367188
    3. '	range' → logprob: -15.625045776367188
    4. '(range' → logprob: -15.875045776367188
    5. 'rang' → logprob: -17.375045776367188
    6. '.range' → logprob: -17.750045776367188
    7. '_range' → logprob: -18.000045776367188
    8. '   ' → logprob: -18.250045776367188
    9. 'Range' → logprob: -19.000045776367188
    10. '-range' → logprob: -19.750045776367188

Token 44: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.383808970451355
    2. '(:' → logprob: -1.383808970451355
    3. '(range' → logprob: -3.1338090896606445
    4. '(":' → logprob: -4.5088090896606445
    5. '(':' → logprob: -5.0088090896606445
    6. '():' → logprob: -6.3838090896606445
    7. '(`' → logprob: -6.8838090896606445
    8. '(len' → logprob: -7.7588090896606445
    9. '("' → logprob: -7.8838090896606445
    10. '('' → logprob: -8.008809089660645

Token 45: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03809909150004387
    2. '):
' → logprob: -3.2880990505218506
    3. '):

' → logprob: -10.28809928894043
    4. '):
' → logprob: -11.53809928894043
    5. ')):' → logprob: -11.91309928894043
    6. ')' → logprob: -12.66309928894043
    7. '   ' → logprob: -12.78809928894043
    8. ')):
' → logprob: -14.53809928894043
    9. ''):' → logprob: -15.78809928894043
    10. '):(' → logprob: -16.53809928894043

Token 46: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2471589798224159e-05
    2. '   ' → logprob: -11.625012397766113
    3. '      ' → logprob: -13.625012397766113
    4. '     ' → logprob: -14.000012397766113
    5. 'points' → logprob: -14.375012397766113
    6. '        ' → logprob: -14.625012397766113
    7. 'point' → logprob: -15.875012397766113
    8. '    ' → logprob: -16.00001335144043
    9. '           ' → logprob: -16.37501335144043
    10. '         ' → logprob: -17.75001335144043

Token 47: ' point' (ID: 2438)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.24673208594322205
    2. 'point' (adapté à ' point') → logprob: -1.9967321157455444
    3. 'line' → logprob: -2.996731996536255
    4. '       ' → logprob: -3.621731996536255
    5. '           ' → logprob: -5.246732234954834
    6. '   ' → logprob: -7.371732234954834
    7. 'x' → logprob: -9.121731758117676
    8. 'input' → logprob: -9.871731758117676
    9. '         ' → logprob: -10.371731758117676
    10. 'pt' → logprob: -10.996731758117676

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009120525792241096
    2. 's' → logprob: -4.759120464324951
    3. '=' → logprob: -7.634120464324951
    4. ' ' → logprob: -11.63412094116211
    5. '   ' → logprob: -12.88412094116211
    6. '  ' → logprob: -13.63412094116211
    7. '=(' → logprob: -13.63412094116211
    8. '=int' → logprob: -13.75912094116211
    9. '=line' → logprob: -14.13412094116211
    10. '=input' → logprob: -14.25912094116211

Token 49: ' parse' (ID: 8420)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.945578396320343
    2. 'raw' → logprob: -1.1955783367156982
    3. 'sys' → logprob: -1.1955783367156982
    4. '   ' → logprob: -5.695578575134277
    5. 'tuple' → logprob: -6.320578575134277
    6. 'list' → logprob: -6.820578575134277
    7. 'input' → logprob: -9.195578575134277
    8. ' ' → logprob: -10.070578575134277
    9. ' sys' → logprob: -10.820578575134277
    10. '       ' → logprob: -11.070578575134277

Token 50: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.0707896500825882
    2. '_input' → logprob: -2.6957895755767822
    3. '_line' → logprob: -7.320789813995361
    4. '_points' → logprob: -9.195789337158203
    5. 'Point' → logprob: -10.945789337158203
    6. '_POINT' → logprob: -11.445789337158203
    7. '_coordinates' → logprob: -11.945789337158203
    8. '_coordinate' → logprob: -12.070789337158203
    9. '_raw' → logprob: -12.195789337158203
    10. '_Point' → logprob: -12.320789337158203

Token 51: '(raw' (ID: 46707)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004135037772357464
    2. '()
' → logprob: -5.5041351318359375
    3. '()`' → logprob: -10.504135131835938
    4. '().' → logprob: -11.129135131835938
    5. '()\' → logprob: -12.004135131835938
    6. '(' → logprob: -13.004135131835938
    7. '()

' → logprob: -13.504135131835938
    8. '();' → logprob: -13.879135131835938
    9. '()(' → logprob: -14.004135131835938
    10. '()
' → logprob: -14.129135131835938

Token 52: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.7432603272027336e-06
    2. '_INPUT' → logprob: -13.750001907348633
    3. '_inputs' → logprob: -15.625001907348633
    4. '_in' → logprob: -15.625001907348633
    5. 'Input' → logprob: -15.875001907348633
    6. '_Input' → logprob: -16.000001907348633
    7. 'input' → logprob: -17.125001907348633
    8. '_output' → logprob: -18.000001907348633
    9. '输入' → logprob: -18.125001907348633
    10. '_import' → logprob: -18.250001907348633

Token 53: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08266710489988327
    2. '())' → logprob: -2.582667112350464
    3. '().' → logprob: -6.082666873931885
    4. '())
' → logprob: -6.707666873931885
    5. '()).' → logprob: -9.707667350769043
    6. '()`' → logprob: -9.957667350769043
    7. '(' → logprob: -10.082667350769043
    8. '()
' → logprob: -10.707667350769043
    9. '())

' → logprob: -10.832667350769043
    10. '()(' → logprob: -11.332667350769043

Token 54: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018152983859181404
    2. '   ' → logprob: -4.018153190612793
    3. '      ' → logprob: -14.143153190612793
    4. '     ' → logprob: -14.268153190612793
    5. 'points' → logprob: -14.393153190612793
    6. '           ' → logprob: -14.768153190612793
    7. 'return' → logprob: -15.393153190612793
    8. '        ' → logprob: -15.643153190612793
    9. '    ' → logprob: -15.893153190612793
    10. '  ' → logprob: -16.643152236938477

Token 55: ' points' (ID: 5571)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06198964640498161
    2. 'points' (adapté à ' points') → logprob: -2.8119895458221436
    3. '   ' → logprob: -10.936989784240723
    4. ' points' → logprob: -13.186989784240723
    5. '      ' → logprob: -14.186989784240723
    6. 'point' → logprob: -14.561989784240723
    7. '     ' → logprob: -14.811989784240723
    8. '           ' → logprob: -15.186989784240723
    9. '	points' → logprob: -15.561989784240723
    10. '        ' → logprob: -15.811989784240723

Token 56: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.001068654702976346
    2. '.' → logprob: -6.876068592071533
    3. 'append' → logprob: -10.876069068908691
    4. '.add' → logprob: -12.001069068908691
    5. '.ap' → logprob: -12.251069068908691
    6. '.push' → logprob: -13.376069068908691
    7. '.app' → logprob: -14.001069068908691
    8. ' =' → logprob: -14.126069068908691
    9. '.extend' → logprob: -14.126069068908691
    10. '.a' → logprob: -14.376069068908691

Token 57: '(point' (ID: 46989)
  Prédit: '(point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(point' → logprob: -0.00020187153131701052
    2. '(' → logprob: -8.750202178955078
    3. '(points' → logprob: -10.375202178955078
    4. '(Point' → logprob: -11.875202178955078
    5. '(parse' → logprob: -14.375202178955078
    6. '(prompt' → logprob: -14.750202178955078
    7. '(p' → logprob: -14.875202178955078
    8. '((' → logprob: -15.500202178955078
    9. '(po' → logprob: -15.500202178955078
    10. '()' → logprob: -15.625202178955078

Token 58: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.41317063570022583
    2. ')' → logprob: -1.413170576095581
    3. '       ' → logprob: -2.538170576095581
    4. '   ' → logprob: -4.16317081451416
    5. '))
' → logprob: -8.66317081451416
    6. ')

' → logprob: -9.53817081451416
    7. '           ' → logprob: -9.91317081451416
    8. '     ' → logprob: -10.16317081451416
    9. '())
' → logprob: -10.41317081451416
    10. '))' → logprob: -10.41317081451416

Token 59: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -7.896309739408025e-07
    2. '       ' → logprob: -14.125000953674316
    3. 'def' → logprob: -17.0
    4. 'return' → logprob: -17.375
    5. '  ' → logprob: -17.5
    6. '    
' → logprob: -19.25
    7. '    ' → logprob: -19.625
    8. ' ' → logprob: -20.625
    9. '   ' → logprob: -20.75
    10. '     ' → logprob: -21.375

Token 60: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00318163656629622
    2. 'return' (adapté à ' return') → logprob: -5.753181457519531
    3. '       ' → logprob: -13.003181457519531
    4. ' return' → logprob: -14.253181457519531
    5. 'def' → logprob: -14.753181457519531
    6. '	return' → logprob: -15.253181457519531
    7. '  ' → logprob: -15.628181457519531
    8. '    
' → logprob: -16.37818145751953
    9. '    ' → logprob: -17.62818145751953
    10. 'pass' → logprob: -17.87818145751953

Token 61: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.3876889944076538
    2. ' points' → logprob: -1.1376889944076538
    3. '	points' → logprob: -7.887689113616943
    4. '_points' → logprob: -8.387688636779785
    5. '.points' → logprob: -9.512688636779785
    6. '(points' → logprob: -9.637688636779785
    7. '   ' → logprob: -9.637688636779785
    8. 'point' → logprob: -12.887688636779785
    9. ' ' → logprob: -13.262688636779785
    10. '    ' → logprob: -13.512688636779785

Token 62: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14287997782230377
    2. '   ' → logprob: -2.0178799629211426
    3. 'points' → logprob: -10.1428804397583
    4. '```' → logprob: -10.1428804397583
    5. '       ' → logprob: -10.7678804397583
    6. ':def' → logprob: -10.8928804397583
    7. '<|end|>' → logprob: -11.1428804397583
    8. 'return' → logprob: -11.6428804397583
    9. 'import' → logprob: -11.7678804397583
    10. ':' → logprob: -11.7678804397583

Token 63: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011094861663877964
    2. '   ' → logprob: -4.51109504699707
    3. 'points' → logprob: -10.88609504699707
    4. 'return' → logprob: -12.26109504699707
    5. 'point' → logprob: -12.51109504699707
    6. ':def' → logprob: -12.63609504699707
    7. '```' → logprob: -12.76109504699707
    8. 'import' → logprob: -13.13609504699707
    9. ' def' → logprob: -13.13609504699707
    10. '#' → logprob: -13.26109504699707

Token 64: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.022192252799868584
    2. 'read' → logprob: -4.397192478179932
    3. ' parse' → logprob: -5.022192478179932
    4. 'write' → logprob: -6.397192478179932
    5. 'process' → logprob: -7.147192478179932
    6. ' read' → logprob: -8.647192001342773
    7. 'calculate' → logprob: -9.147192001342773
    8. 'get' → logprob: -9.272192001342773
    9. 'is' → logprob: -9.397192001342773
    10. 'print' → logprob: -10.522192001342773

Token 65: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -1.2113979209971149e-05
    2. '_POINT' → logprob: -12.250012397766113
    3. '_points' → logprob: -12.500012397766113
    4. '_Point' → logprob: -13.250012397766113
    5. '_pointer' → logprob: -15.750012397766113
    6. '_line' → logprob: -15.750012397766113
    7. '_' → logprob: -15.750012397766113
    8. ' Point' → logprob: -16.125011444091797
    9. '_input' → logprob: -16.125011444091797
    10. 'Point' → logprob: -16.125011444091797

Token 66: '(line' (ID: 18178)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00595202948898077
    2. '(:' → logprob: -5.255951881408691
    3. '(' → logprob: -8.380951881408691
    4. '(':' → logprob: -9.130951881408691
    5. '(":' → logprob: -9.255951881408691
    6. '():
' → logprob: -9.380951881408691
    7. '(_:' → logprob: -9.755951881408691
    8. '()' → logprob: -10.255951881408691
    9. ' ():' → logprob: -10.505951881408691
    10. '(...' → logprob: -11.005951881408691

Token 67: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008883645758032799
    2. '):
' → logprob: -4.758883476257324
    3. '   ' → logprob: -8.633883476257324
    4. '):

' → logprob: -10.258883476257324
    5. ':' → logprob: -10.633883476257324
    6. '():' → logprob: -11.508883476257324
    7. ''):' → logprob: -12.008883476257324
    8. ')' → logprob: -12.383883476257324
    9. '):
' → logprob: -12.508883476257324
    10. '"):' → logprob: -13.383883476257324

Token 68: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3856492842023727e-06
    2. '  ' → logprob: -13.750000953674316
    3. '    ' → logprob: -16.375001907348633
    4. ' ' → logprob: -16.375001907348633
    5. '       ' → logprob: -17.000001907348633
    6. 'return' → logprob: -17.125001907348633
    7. '	return' → logprob: -18.625001907348633
    8. '     ' → logprob: -19.625001907348633
    9. 'pass' → logprob: -19.750001907348633
    10. ' return' → logprob: -20.125001907348633

Token 69: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10246757417917252
    2. 'return' (adapté à ' return') → logprob: -2.3524675369262695
    3. 'point' → logprob: -6.3524675369262695
    4. 'coords' → logprob: -8.47746753692627
    5. 'x' → logprob: -8.60246753692627
    6. 'split' → logprob: -10.60246753692627
    7. 'line' → logprob: -11.35246753692627
    8. '#' → logprob: -11.35246753692627
    9. '  ' → logprob: -11.35246753692627
    10. 'points' → logprob: -11.72746753692627

Token 70: ' map' (ID: 4014)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.7151088714599609
    2. 'line' → logprob: -0.9651088714599609
    3. '   ' → logprob: -2.215108871459961
    4. '(line' → logprob: -4.590108871459961
    5. 'list' → logprob: -5.590108871459961
    6. ' line' → logprob: -6.340108871459961
    7. ' tuple' → logprob: -6.465108871459961
    8. '(tuple' → logprob: -7.090108871459961
    9. 'eval' → logprob: -7.215108871459961
    10. '[line' → logprob: -7.590108871459961

Token 71: '(float' (ID: 17830)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.8783360123634338
    2. '(lambda' → logprob: -0.8783360123634338
    3. '(' → logprob: -2.003335952758789
    4. '(float' → logprob: -3.628335952758789
    5. '(eval' → logprob: -5.753335952758789
    6. '(parse' → logprob: -6.753335952758789
    7. '(list' → logprob: -6.878335952758789
    8. '(None' → logprob: -8.128335952758789
    9. '(str' → logprob: -8.253335952758789
    10. '   ' → logprob: -8.253335952758789

Token 72: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0029515549540519714
    2. '(' → logprob: -6.877951622009277
    3. '(parse' → logprob: -7.252951622009277
    4. '(eval' → logprob: -7.877951622009277
    5. '(map' → logprob: -8.377951622009277
    6. '(point' → logprob: -9.127951622009277
    7. ')(' → logprob: -9.252951622009277
    8. '   ' → logprob: -9.502951622009277
    9. '(tuple' → logprob: -9.627951622009277
    10. ')' → logprob: -10.377951622009277

Token 73: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -1.2471589798224159e-05
    2. 'split' → logprob: -12.375012397766113
    3. ' line' → logprob: -12.500012397766113
    4. '(line' → logprob: -12.875012397766113
    5. '	line' → logprob: -14.125012397766113
    6. 'list' → logprob: -15.125012397766113
    7. 'map' → logprob: -15.125012397766113
    8. 'strip' → logprob: -16.00001335144043
    9. 'sys' → logprob: -16.12501335144043
    10. 'str' → logprob: -17.00001335144043

Token 74: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.161016583442688
    2. '.strip' → logprob: -1.911016583442688
    3. ').' → logprob: -7.536016464233398
    4. '.rstrip' → logprob: -8.911016464233398
    5. '.' → logprob: -9.411016464233398
    6. '.replace' → logprob: -10.286016464233398
    7. '.trim' → logprob: -13.036016464233398
    8. '.decode' → logprob: -13.661016464233398
    9. '().' → logprob: -13.786016464233398
    10. '[:-' → logprob: -13.911016464233398

Token 75: '(","' (ID: 111331)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00903606228530407
    2. '()' → logprob: -5.134036064147949
    3. '('' → logprob: -6.134036064147949
    4. '(' → logprob: -7.759036064147949
    5. '("("' → logprob: -8.75903606414795
    6. '("' → logprob: -8.88403606414795
    7. '(()' → logprob: -9.38403606414795
    8. '();)' → logprob: -11.13403606414795
    9. '())

' → logprob: -11.25903606414795
    10. '(','' → logprob: -11.25903606414795

Token 76: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0005816269549541175
    2. ')' → logprob: -7.875581741333008
    3. '   ' → logprob: -8.625581741333008
    4. '))
' → logprob: -11.125581741333008
    5. '))

' → logprob: -12.875581741333008
    6. ')))' → logprob: -13.750581741333008
    7. ').' → logprob: -14.000581741333008
    8. ')).' → logprob: -14.250581741333008
    9. '))


' → logprob: -14.625581741333008
    10. '       ' → logprob: -14.875581741333008

Token 77: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.23128391802310944
    2. '   ' → logprob: -1.6062839031219482
    3. 'if' → logprob: -5.856284141540527
    4. 'return' → logprob: -6.731284141540527
    5. '#' → logprob: -7.106284141540527
    6. '```' → logprob: -8.231284141540527
    7. 'print' → logprob: -8.356284141540527
    8. 'sys' → logprob: -9.356284141540527
    9. 'points' → logprob: -10.231284141540527
    10. 'n' → logprob: -10.356284141540527

Token 78: ' sort' (ID: 4506)
  Prédit: 'write'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'write' → logprob: -0.9272066354751587
    2. 'process' → logprob: -1.5522066354751587
    3. 'main' → logprob: -2.052206516265869
    4. 'parse' → logprob: -2.302206516265869
    5. 'calculate' → logprob: -2.677206516265869
    6. 'read' → logprob: -3.552206516265869
    7. 'print' → logprob: -3.927206516265869
    8. 'is' → logprob: -4.052206516265869
    9. 'get' → logprob: -4.552206516265869
    10. 'compute' → logprob: -5.427206516265869

Token 79: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.0014045176794752479
    2. '_' → logprob: -7.251404285430908
    3. '_pts' → logprob: -8.376404762268066
    4. '_e' → logprob: -9.501404762268066
    5. '_by' → logprob: -9.626404762268066
    6. '_POINTS' → logprob: -9.876404762268066
    7. '_items' → logprob: -10.501404762268066
    8. '_point' → logprob: -11.001404762268066
    9. '_key' → logprob: -11.001404762268066
    10. '_lines' → logprob: -11.126404762268066

Token 80: '_by' (ID: 8214)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00316726416349411
    2. '(:' → logprob: -6.003167152404785
    3. '(points' → logprob: -8.753167152404785
    4. '(_:' → logprob: -9.003167152404785
    5. '(n' → logprob: -9.128167152404785
    6. '(' → logprob: -9.503167152404785
    7. '():
' → logprob: -9.878167152404785
    8. '(":' → logprob: -10.253167152404785
    9. 'def' → logprob: -10.378167152404785
    10. '()' → logprob: -11.003167152404785

Token 81: '_y' (ID: 9410)
  Prédit: '_distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.9450048804283142
    2. '_x' → logprob: -1.445004940032959
    3. '_key' → logprob: -2.320004940032959
    4. '_y' → logprob: -2.445004940032959
    5. '_angle' → logprob: -3.195004940032959
    6. '_position' → logprob: -3.445004940032959
    7. '_z' → logprob: -3.820004940032959
    8. '_coordinates' → logprob: -4.070004940032959
    9. '_xy' → logprob: -5.195004940032959
    10. '_length' → logprob: -5.195004940032959

Token 82: '(points' (ID: 72131)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00027945113833993673
    2. 'def' → logprob: -9.250279426574707
    3. '(:' → logprob: -9.625279426574707
    4. ':' → logprob: -10.250279426574707
    5. '():
' → logprob: -10.375279426574707
    6. '(_:' → logprob: -11.250279426574707
    7. '()' → logprob: -11.500279426574707
    8. '(' → logprob: -11.625279426574707
    9. ':def' → logprob: -12.125279426574707
    10. ' ():' → logprob: -12.875279426574707

Token 83: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.043848518282175064
    2. '):
' → logprob: -3.1688485145568848
    3. '   ' → logprob: -7.543848514556885
    4. '):

' → logprob: -8.168848991394043
    5. '):
' → logprob: -11.543848991394043
    6. 'def' → logprob: -12.043848991394043
    7. '"):' → logprob: -12.543848991394043
    8. ''):' → logprob: -12.668848991394043
    9. ')' → logprob: -12.793848991394043
    10. ')):' → logprob: -13.293848991394043

Token 84: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015324745327234268
    2. 'points' → logprob: -6.501532554626465
    3. '	points' → logprob: -10.876532554626465
    4. '  ' → logprob: -12.626532554626465
    5. 'return' → logprob: -12.876532554626465
    6. ' points' → logprob: -13.251532554626465
    7. '(points' → logprob: -13.501532554626465
    8. 'sorted' → logprob: -14.251532554626465
    9. 'pass' → logprob: -14.626532554626465
    10. '.points' → logprob: -15.001532554626465

Token 85: ' return' (ID: 622)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.13807614147663116
    2. 'return' (adapté à ' return') → logprob: -2.138076066970825
    3. '   ' → logprob: -4.638076305389404
    4. 'sorted' → logprob: -6.638076305389404
    5. ' points' → logprob: -10.013075828552246
    6. 'sort' → logprob: -10.138075828552246
    7. '	points' → logprob: -12.138075828552246
    8. '.points' → logprob: -12.888075828552246
    9. 'returns' → logprob: -13.138075828552246
    10. '(points' → logprob: -13.513075828552246

Token 86: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -9.014684110297821e-06
    2. ' sorted' → logprob: -11.750008583068848
    3. '(sorted' → logprob: -14.250008583068848
    4. 'sort' → logprob: -15.000008583068848
    5. '.sorted' → logprob: -16.250009536743164
    6. '_sorted' → logprob: -17.750009536743164
    7. '   ' → logprob: -19.250009536743164
    8. 'Sorted' → logprob: -19.500009536743164
    9. 'sorting' → logprob: -20.750009536743164
    10. 's' → logprob: -21.875009536743164

Token 87: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -0.0025699487887322903
    2. '_points' → logprob: -6.002570152282715
    3. '_by' → logprob: -10.377570152282715
    4. '(' → logprob: -10.877570152282715
    5. '(lambda' → logprob: -11.127570152282715
    6. '	points' → logprob: -11.752570152282715
    7. '(_' → logprob: -12.377570152282715
    8. '.points' → logprob: -12.502570152282715
    9. '(point' → logprob: -13.127570152282715
    10. ' points' → logprob: -13.127570152282715

Token 88: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.896309739408025e-07
    2. ',key' → logprob: -14.500000953674316
    3. ')' → logprob: -16.125
    4. ' ,' → logprob: -16.5
    5. '),' → logprob: -17.0
    6. '，' → logprob: -17.75
    7. 'key' → logprob: -18.375
    8. ',
' → logprob: -18.375
    9. 'Key' → logprob: -19.0
    10. ' key' → logprob: -20.25

Token 89: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -1.0206720617134124e-05
    2. ' key' → logprob: -11.50001049041748
    3. '	key' → logprob: -17.375009536743164
    4. '_key' → logprob: -18.000009536743164
    5. 'Key' → logprob: -18.250009536743164
    6. ' ключ' → logprob: -18.750009536743164
    7. '-key' → logprob: -19.000009536743164
    8. 'lambda' → logprob: -20.000009536743164
    9. 'ke' → logprob: -20.125009536743164
    10. ',key' → logprob: -21.125009536743164

Token 90: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.0004689226043410599
    2. '=' → logprob: -7.750468730926514
    3. '=item' → logprob: -11.000469207763672
    4. '=len' → logprob: -11.625469207763672
    5. '=list' → logprob: -12.125469207763672
    6. '=dict' → logprob: -13.875469207763672
    7. '=l' → logprob: -13.875469207763672
    8. '=float' → logprob: -14.000469207763672
    9. '=str' → logprob: -14.625469207763672
    10. '=y' → logprob: -14.750469207763672

Token 91: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.22683192789554596
    2. ':' → logprob: -1.6018319129943848
    3. 'point' → logprob: -7.351831912994385
    4. 'p' → logprob: -7.476831912994385
    5. ':x' → logprob: -8.976832389831543
    6. ':p' → logprob: -10.351832389831543
    7. ' x' → logprob: -11.476832389831543
    8. ':item' → logprob: -11.851832389831543
    9. '_:' → logprob: -12.101832389831543
    10. 'points' → logprob: -12.476832389831543

Token 92: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007681751740165055
    2. '=lambda' → logprob: -8.000767707824707
    3. ':key' → logprob: -8.875767707824707
    4. '[' → logprob: -9.125767707824707
    5. ':y' → logprob: -9.500767707824707
    6. ':[' → logprob: -10.875767707824707
    7. ':return' → logprob: -10.875767707824707
    8. ':x' → logprob: -11.000767707824707
    9. ':Y' → logprob: -11.250767707824707
    10. ':get' → logprob: -12.125767707824707

Token 93: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.320199877838604e-07
    2. ' x' → logprob: -14.75
    3. '   ' → logprob: -19.75
    4. '	x' → logprob: -20.375
    5. '_x' → logprob: -22.5
    6. '(x' → logprob: -22.875
    7. '"x' → logprob: -22.875
    8. '-x' → logprob: -23.25
    9. '.x' → logprob: -23.625
    10. ')x' → logprob: -24.125

Token 94: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '[y' → logprob: -16.75
    3. '(' → logprob: -17.625
    4. '[Y' → logprob: -17.75
    5. '\[' → logprob: -19.25
    6. '.y' → logprob: -20.875
    7. '【' → logprob: -21.0
    8. '[i' → logprob: -21.875
    9. 'Y' → logprob: -21.9375
    10. '```' → logprob: -22.125

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. '[' → logprob: -12.250005722045898
    3. ' ' → logprob: -15.250005722045898
    4. '0' → logprob: -15.750005722045898
    5. '```' → logprob: -17.1250057220459
    6. '   ' → logprob: -17.3750057220459
    7. '2' → logprob: -17.3750057220459
    8. '(' → logprob: -17.8750057220459
    9. '`' → logprob: -17.8750057220459
    10. '１' → logprob: -18.6250057220459

Token 96: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -5.598092684522271e-05
    2. ')])' → logprob: -10.750056266784668
    3. ']' → logprob: -11.250056266784668
    4. '])
' → logprob: -12.125056266784668
    5. ']])' → logprob: -12.375056266784668
    6. ')' → logprob: -12.375056266784668
    7. '])

' → logprob: -13.625056266784668
    8. '})' → logprob: -13.625056266784668
    9. ')]' → logprob: -13.875056266784668
    10. '],' → logprob: -13.875056266784668

Token 97: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008890385739505291
    2. '   ' → logprob: -5.258890151977539
    3. 'if' → logprob: -6.133890151977539
    4. '#' → logprob: -7.258890151977539
    5. 'print' → logprob: -7.633890151977539
    6. '```' → logprob: -9.133890151977539
    7. 'sys' → logprob: -9.758890151977539
    8. '<|end|>' → logprob: -10.258890151977539
    9. 'return' → logprob: -10.508890151977539
    10. '<|end|>' → logprob: -11.133890151977539

Token 98: ' subtract' (ID: 71973)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.39495667815208435
    2. 'calculate' → logprob: -1.8949567079544067
    3. 'process' → logprob: -2.769956588745117
    4. 'find' → logprob: -3.769956588745117
    5. 'main' → logprob: -3.894956588745117
    6. 'compute' → logprob: -4.019956588745117
    7. 'get' → logprob: -4.144956588745117
    8. 'is' → logprob: -5.019956588745117
    9. 'read' → logprob: -5.269956588745117
    10. 'filter' → logprob: -5.394956588745117

Token 99: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.09126587957143784
    2. '(points' → logprob: -2.466265916824341
    3. '_pts' → logprob: -7.716265678405762
    4. '_POINTS' → logprob: -8.216265678405762
    5. '_' → logprob: -8.591265678405762
    6. '(point' → logprob: -8.716265678405762
    7. '_vectors' → logprob: -8.841265678405762
    8. '_point' → logprob: -9.091265678405762
    9. '	points' → logprob: -9.216265678405762
    10. '(_' → logprob: -9.216265678405762

Token 100: '(a' (ID: 6271)
  Prédit: '(points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(points' → logprob: -0.12139689177274704
    2. '():' → logprob: -2.371396780014038
    3. '(:' → logprob: -5.371397018432617
    4. '(' → logprob: -5.621397018432617
    5. '(point' → logprob: -5.621397018432617
    6. '(_:' → logprob: -5.871397018432617
    7. '(_' → logprob: -6.246397018432617
    8. '(":' → logprob: -7.621397018432617
    9. '(x' → logprob: -7.871397018432617
    10. '(':' → logprob: -8.371397018432617

Token 101: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004429524298757315
    2. '[' → logprob: -5.629429340362549
    3. ',a' → logprob: -8.254429817199707
    4. ',b' → logprob: -8.754429817199707
    5. '-' → logprob: -9.004429817199707
    6. 'nd' → logprob: -9.254429817199707
    7. 'nt' → logprob: -10.254429817199707
    8. '[a' → logprob: -10.629429817199707
    9. '1' → logprob: -10.879429817199707
    10. '-a' → logprob: -11.004429817199707

Token 102: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.700132997939363e-05
    2. ' b' → logprob: -11.000017166137695
    3. '   ' → logprob: -15.375017166137695
    4. '	b' → logprob: -17.625017166137695
    5. 'a' → logprob: -18.125017166137695
    6. '_b' → logprob: -18.500017166137695
    7. ' б' → logprob: -18.625017166137695
    8. ' ' → logprob: -18.875017166137695
    9. '  ' → logprob: -19.000017166137695
    10. ',b' → logprob: -19.625017166137695

Token 103: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.47510993480682373
    2. '):
' → logprob: -0.9751099348068237
    3. '):

' → logprob: -7.600110054016113
    4. '   ' → logprob: -7.850110054016113
    5. '):
' → logprob: -9.600110054016113
    6. ')' → logprob: -9.975110054016113
    7. ')):' → logprob: -11.100110054016113
    8. ')):
' → logprob: -12.350110054016113
    9. ''):' → logprob: -12.975110054016113
    10. '"):' → logprob: -13.600110054016113

Token 104: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.704273118884885e-07
    2. 'return' → logprob: -15.000000953674316
    3. '  ' → logprob: -15.500000953674316
    4. '	return' → logprob: -18.125
    5. ' return' → logprob: -19.125
    6. '    ' → logprob: -19.625
    7. '       ' → logprob: -20.5
    8. ' ' → logprob: -20.625
    9. '   ' → logprob: -20.625
    10. '   ' → logprob: -20.75

Token 105: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.008618827909231186
    2. '   ' → logprob: -4.7586188316345215
    3. ' return' → logprob: -12.633618354797363
    4. '	return' → logprob: -14.008618354797363
    5. 'returns' → logprob: -15.883618354797363
    6. '  ' → logprob: -17.88361930847168
    7. '返回' → logprob: -18.00861930847168
    8. '{return' → logprob: -18.63361930847168
    9. ':return' → logprob: -18.88361930847168
    10. 'result' → logprob: -19.00861930847168

Token 106: ' [' (ID: 723)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.08378254622220993
    2. ' [' → logprob: -3.333782434463501
    3. '   ' → logprob: -3.958782434463501
    4. '(a' → logprob: -4.33378267288208
    5. '[' → logprob: -5.20878267288208
    6. 'a' → logprob: -5.33378267288208
    7. ' (' → logprob: -6.45878267288208
    8. ' a' → logprob: -8.708782196044922
    9. 'tuple' → logprob: -8.833782196044922
    10. '[(' → logprob: -8.958782196044922

Token 107: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.843177233240567e-05
    2. '   ' → logprob: -11.000018119812012
    3. ' a' → logprob: -13.750018119812012
    4. '(a' → logprob: -15.125018119812012
    5. 'x' → logprob: -16.125019073486328
    6. 'c' → logprob: -16.125019073486328
    7. ' ' → logprob: -16.250019073486328
    8. '	a' → logprob: -17.125019073486328
    9. 'b' → logprob: -17.250019073486328
    10. '  ' → logprob: -18.500019073486328

Token 108: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07892768830060959
    2. '[i' → logprob: -2.578927755355835
    3. '[x' → logprob: -10.703927993774414
    4. '[j' → logprob: -11.828927993774414
    5. '[a' → logprob: -12.078927993774414
    6. '[b' → logprob: -14.328927993774414
    7. '-' → logprob: -14.453927993774414
    8. '[k' → logprob: -14.703927993774414
    9. '[n' → logprob: -15.828927993774414
    10. '[index' → logprob: -15.953927993774414

Token 109: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.157039049663581e-05
    2. 'i' → logprob: -9.875051498413086
    3. '1' → logprob: -18.500051498413086
    4. ' ' → logprob: -18.875051498413086
    5. ' i' → logprob: -19.000051498413086
    6. '[' → logprob: -20.375051498413086
    7. 'x' → logprob: -20.500051498413086
    8. '[i' → logprob: -20.750051498413086
    9. '   ' → logprob: -21.000051498413086
    10. '０' → logprob: -21.000051498413086

Token 110: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0013296448159962893
    2. ']-' → logprob: -6.62632942199707
    3. '],' → logprob: -13.50132942199707
    4. '-' → logprob: -13.87632942199707
    5. '][' → logprob: -14.37632942199707
    6. ')' → logprob: -15.00132942199707
    7. '}' → logprob: -15.87632942199707
    8. '`' → logprob: -16.12632942199707
    9. '   ' → logprob: -17.12632942199707
    10. '].' → logprob: -17.62632942199707

Token 111: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -6.873571692267433e-05
    2. '-b' → logprob: -10.250068664550781
    3. '-a' → logprob: -10.625068664550781
    4. ' -' → logprob: -11.625068664550781
    5. '−' → logprob: -17.12506866455078
    6. '–' → logprob: -18.50006866455078
    7. '-c' → logprob: -19.37506866455078
    8. '-,' → logprob: -19.62506866455078
    9. '-sub' → logprob: -19.75006866455078
    10. '-B' → logprob: -19.75006866455078

Token 112: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -7.896309739408025e-07
    2. ' b' → logprob: -14.125000953674316
    3. '	b' → logprob: -21.5
    4. '(b' → logprob: -22.5
    5. ' б' → logprob: -23.125
    6. '.b' → logprob: -23.5
    7. 'a' → logprob: -23.625
    8. '_b' → logprob: -23.875
    9. ')b' → logprob: -24.375
    10. 'б' → logprob: -24.625

Token 113: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '\[' → logprob: -17.75
    3. '[a' → logprob: -18.0
    4. '   ' → logprob: -20.0
    5. ' [' → logprob: -20.0
    6. '0' → logprob: -20.25
    7. '[i' → logprob: -20.5
    8. '_[' → logprob: -20.5
    9. '[
' → logprob: -20.625
    10. '(' → logprob: -20.75

Token 114: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.0
    3. '０' → logprob: -19.25
    4. '۰' → logprob: -19.5
    5. '[' → logprob: -20.25
    6. '०' → logprob: -20.25
    7. '০' → logprob: -20.5
    8. '1' → logprob: -21.5
    9. '٠' → logprob: -21.75
    10. '   ' → logprob: -22.125

Token 115: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.00024370834580622613
    2. '),' → logprob: -9.250244140625
    3. '},' → logprob: -9.375244140625
    4. ']' → logprob: -10.625244140625
    5. '][' → logprob: -11.375244140625
    6. '],[' → logprob: -11.625244140625
    7. '],
' → logprob: -11.875244140625
    8. ']]' → logprob: -13.250244140625
    9. ''],' → logprob: -13.500244140625
    10. '`,' → logprob: -13.500244140625

Token 116: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0021995019633322954
    2. ' a' → logprob: -6.127199649810791
    3. '           ' → logprob: -12.127199172973633
    4. '   ' → logprob: -12.877199172973633
    5. '               ' → logprob: -13.252199172973633
    6. '	a' → logprob: -13.752199172973633
    7. '             ' → logprob: -14.252199172973633
    8. '              ' → logprob: -14.877199172973633
    9. '                ' → logprob: -15.252199172973633
    10. '(a' → logprob: -15.377199172973633

Token 117: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '\[' → logprob: -18.375
    3. '   ' → logprob: -19.375
    4. ''[' → logprob: -20.75
    5. '[a' → logprob: -20.875
    6. ' [' → logprob: -21.125
    7. '[
' → logprob: -21.25
    8. '(' → logprob: -21.25
    9. '[i' → logprob: -21.5
    10. '()[' → logprob: -21.625

Token 118: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -20.375
    3. '0' → logprob: -21.0
    4. '   ' → logprob: -21.125
    5. '１' → logprob: -21.5
    6. '2' → logprob: -22.625
    7. '१' → logprob: -23.125
    8. '১' → logprob: -24.125
    9. '[' → logprob: -24.25
    10. '       ' → logprob: -24.5

Token 119: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -5.7292167184641585e-05
    2. ']-' → logprob: -9.875057220458984
    3. '][' → logprob: -12.125057220458984
    4. '   ' → logprob: -16.250057220458984
    5. '}' → logprob: -16.500057220458984
    6. '[' → logprob: -16.875057220458984
    7. '].' → logprob: -17.000057220458984
    8. ' ]' → logprob: -17.250057220458984
    9. '],' → logprob: -17.375057220458984
    10. '']' → logprob: -17.500057220458984

Token 120: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0009114635176956654
    2. ' -' → logprob: -7.000911235809326
    3. '-b' → logprob: -17.250911712646484
    4. '   ' → logprob: -18.750911712646484
    5. ' ' → logprob: -19.125911712646484
    6. '−' → logprob: -19.750911712646484
    7. '–' → logprob: -20.750911712646484
    8. '-a' → logprob: -21.000911712646484
    9. '=' → logprob: -21.750911712646484
    10. '```' → logprob: -21.875911712646484

Token 121: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: 0.0
    2. ' b' → logprob: -16.875
    3. '	b' → logprob: -22.25
    4. '(b' → logprob: -24.625
    5. '.b' → logprob: -24.75
    6. '_b' → logprob: -25.0
    7. ' б' → logprob: -25.0
    8. 'б' → logprob: -25.5
    9. 'a' → logprob: -25.875
    10. '-b' → logprob: -26.125

Token 122: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.8624639324116288e-06
    2. '][' → logprob: -14.000001907348633
    3. '\[' → logprob: -15.250001907348633
    4. '1' → logprob: -15.375001907348633
    5. ' [' → logprob: -16.000001907348633
    6. ''[' → logprob: -16.125001907348633
    7. '()[' → logprob: -16.500001907348633
    8. '   ' → logprob: -17.125001907348633
    9. ''][' → logprob: -17.500001907348633
    10. '_[' → logprob: -17.500001907348633

Token 123: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '１' → logprob: -21.625
    3. '   ' → logprob: -22.125
    4. ' ' → logprob: -22.375
    5. '१' → logprob: -23.625
    6. '```' → logprob: -24.125
    7. '۱' → logprob: -24.5
    8. '১' → logprob: -24.625
    9. '       ' → logprob: -24.875
    10. '`' → logprob: -25.125

Token 124: ']]

' (ID: 84024)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.00015229015843942761
    2. '])]' → logprob: -9.750152587890625
    3. '],' → logprob: -10.125152587890625
    4. ']' → logprob: -10.750152587890625
    5. ')]' → logprob: -10.875152587890625
    6. ']]]' → logprob: -12.250152587890625
    7. ']}' → logprob: -12.500152587890625
    8. '])' → logprob: -12.875152587890625
    9. ']]

' → logprob: -14.375152587890625
    10. ']])' → logprob: -14.500152587890625

Token 125: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0012782112462446094
    2. 'if' → logprob: -7.126278400421143
    3. '   ' → logprob: -8.126277923583984
    4. '#' → logprob: -9.251277923583984
    5. 'print' → logprob: -9.626277923583984
    6. '```' → logprob: -11.751277923583984
    7. 'sys' → logprob: -13.126277923583984
    8. 'return' → logprob: -13.501277923583984
    9. ' def' → logprob: -13.751277923583984
    10. 'import' → logprob: -14.751277923583984

Token 126: ' vector' (ID: 9727)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'add' → logprob: -1.0187159776687622
    2. 'calculate' → logprob: -1.5187159776687622
    3. 'multiply' → logprob: -2.0187158584594727
    4. 'dot' → logprob: -2.5187158584594727
    5. 'divide' → logprob: -2.7687158584594727
    6. 'normalize' → logprob: -3.5187158584594727
    7. 'compute' → logprob: -3.6437158584594727
    8. 'cross' → logprob: -3.7687158584594727
    9. 'scale' → logprob: -4.393715858459473
    10. 'distance' → logprob: -4.893715858459473

Token 127: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.3671867847442627
    2. '_sub' → logprob: -3.2421867847442627
    3. '_' → logprob: -3.3671867847442627
    4. '_def' → logprob: -3.3671867847442627
    5. '_add' → logprob: -3.4921867847442627
    6. '_operations' → logprob: -3.6171867847442627
    7. '_m' → logprob: -3.9921867847442627
    8. '_cross' → logprob: -4.242186546325684
    9. '_normal' → logprob: -4.617186546325684
    10. '_to' → logprob: -4.742186546325684

Token 128: '(v' (ID: 6932)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.005764184053987265
    2. '()' → logprob: -5.255764007568359
    3. '(' → logprob: -8.63076400756836
    4. '(a' → logprob: -9.75576400756836
    5. '():
' → logprob: -9.75576400756836
    6. ' ():' → logprob: -10.13076400756836
    7. '(_:' → logprob: -10.38076400756836
    8. '(":' → logprob: -10.38076400756836
    9. '(:' → logprob: -10.63076400756836
    10. '(':' → logprob: -10.63076400756836

Token 129: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3193413019180298
    2. '):
' → logprob: -1.3193413019180298
    3. ')' → logprob: -6.19434118270874
    4. 'ector' → logprob: -6.31934118270874
    5. '):

' → logprob: -7.19434118270874
    6. 'ect' → logprob: -7.69434118270874
    7. '[' → logprob: -8.819341659545898
    8. '   ' → logprob: -8.944341659545898
    9. 'ectors' → logprob: -8.944341659545898
    10. 'ecto' → logprob: -8.944341659545898

Token 130: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.6240566083070007e-06
    2. 'return' → logprob: -13.625001907348633
    3. '  ' → logprob: -14.875001907348633
    4. '    ' → logprob: -17.750001907348633
    5. '	return' → logprob: -18.375001907348633
    6. '       ' → logprob: -18.500001907348633
    7. ' return' → logprob: -19.000001907348633
    8. ' ' → logprob: -19.750001907348633
    9. ':return' → logprob: -20.875001907348633
    10. '```' → logprob: -21.000001907348633

Token 131: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.01611436903476715
    2. '   ' → logprob: -4.141114234924316
    3. 'import' → logprob: -10.016114234924316
    4. ' return' → logprob: -10.391114234924316
    5. '	return' → logprob: -13.391114234924316
    6. '=' → logprob: -14.016114234924316
    7. 'sqrt' → logprob: -14.141114234924316
    8. 'returns' → logprob: -14.641114234924316
    9. '  ' → logprob: -14.891114234924316
    10. 'math' → logprob: -15.516114234924316

Token 132: ' (' (ID: 350)
  Prédit: '(math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(math' → logprob: -0.9625892043113708
    2. '(v' → logprob: -1.2125892639160156
    3. 'math' → logprob: -1.7125892639160156
    4. '(' → logprob: -3.0875892639160156
    5. '((' → logprob: -3.2125892639160156
    6. '(sum' → logprob: -3.9625892639160156
    7. ' (' → logprob: -4.837589263916016
    8. '(float' → logprob: -4.962589263916016
    9. '(len' → logprob: -5.087589263916016
    10. '   ' → logprob: -5.337589263916016

Token 133: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0007152927573770285
    2. '(v' → logprob: -7.375715255737305
    3. '   ' → logprob: -9.625715255737305
    4. ' v' → logprob: -11.000715255737305
    5. 'sum' → logprob: -13.125715255737305
    6. ')v' → logprob: -13.375715255737305
    7. '*v' → logprob: -14.250715255737305
    8. '	v' → logprob: -14.250715255737305
    9. '_v' → logprob: -15.625715255737305
    10. '.v' → logprob: -15.875715255737305

Token 134: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0010490043787285686
    2. '**' → logprob: -6.876049041748047
    3. '```' → logprob: -11.876049041748047
    4. '\[' → logprob: -13.001049041748047
    5. ')' → logprob: -13.376049041748047
    6. '   ' → logprob: -13.501049041748047
    7. ')**' → logprob: -13.626049041748047
    8. '0' → logprob: -14.501049041748047
    9. '*' → logprob: -14.626049041748047
    10. ' **' → logprob: -14.751049041748047

Token 135: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ']' → logprob: -13.875001907348633
    3. '1' → logprob: -15.500001907348633
    4. ' ' → logprob: -15.500001907348633
    5. '[' → logprob: -16.875001907348633
    6. '   ' → logprob: -17.125001907348633
    7. '][' → logprob: -17.875001907348633
    8. '**' → logprob: -18.250001907348633
    9. '```' → logprob: -18.375001907348633
    10. '０' → logprob: -18.625001907348633

Token 136: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0013735649408772588
    2. '**' → logprob: -6.751373767852783
    3. ']*' → logprob: -8.751373291015625
    4. ')**' → logprob: -11.001373291015625
    5. '][' → logprob: -12.001373291015625
    6. ']^' → logprob: -12.001373291015625
    7. ']*(' → logprob: -12.251373291015625
    8. ')' → logprob: -12.751373291015625
    9. '])' → logprob: -12.751373291015625
    10. '}' → logprob: -13.626373291015625

Token 137: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -1.843177233240567e-05
    2. '*' → logprob: -11.000018119812012
    3. ' **' → logprob: -13.375018119812012
    4. '***' → logprob: -16.125019073486328
    5. ' *' → logprob: -18.500019073486328
    6. ')**' → logprob: -19.500019073486328
    7. '*v' → logprob: -19.500019073486328
    8. '**
' → logprob: -19.750019073486328
    9. '**,' → logprob: -19.750019073486328
    10. '**)' → logprob: -19.875019073486328

Token 138: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. '0' → logprob: -16.625
    3. ' ' → logprob: -21.875
    4. '²' → logprob: -22.25
    5. '   ' → logprob: -22.625
    6. '1' → logprob: -23.125
    7. '₂' → logprob: -23.5
    8. '(' → logprob: -24.125
    9. '3' → logprob: -24.25
    10. '２' → logprob: -24.5

Token 139: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.020695921033620834
    2. '+' → logprob: -3.895695924758911
    3. ')' → logprob: -8.895695686340332
    4. '   ' → logprob: -12.270695686340332
    5. '+)' → logprob: -12.770695686340332
    6. '+b' → logprob: -13.145695686340332
    7. '+y' → logprob: -13.395695686340332
    8. ')**' → logprob: -14.145695686340332
    9. '+self' → logprob: -14.270695686340332
    10. '+a' → logprob: -14.645695686340332

Token 140: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -3.4121114822482923e-06
    2. ' v' → logprob: -12.625003814697266
    3. '   ' → logprob: -18.625003814697266
    4. '	v' → logprob: -18.750003814697266
    5. '$v' → logprob: -21.250003814697266
    6. ')v' → logprob: -21.500003814697266
    7. '(v' → logprob: -21.750003814697266
    8. '.v' → logprob: -22.000003814697266
    9. '_v' → logprob: -22.250003814697266
    10. '  ' → logprob: -22.750003814697266

Token 141: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '\[' → logprob: -16.25
    3. '(' → logprob: -18.375
    4. ' [' → logprob: -18.5
    5. '```' → logprob: -19.5
    6. '[y' → logprob: -19.5
    7. '1' → logprob: -20.0
    8. '   ' → logprob: -20.125
    9. ''[' → logprob: -20.25
    10. '[i' → logprob: -20.375

Token 142: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '   ' → logprob: -22.0
    3. ' ' → logprob: -22.25
    4. '１' → logprob: -23.25
    5. '১' → logprob: -25.25
    6. '       ' → logprob: -25.375
    7. '  ' → logprob: -25.5
    8. '१' → logprob: -25.5
    9. '۱' → logprob: -25.625
    10. '0' → logprob: -25.625

Token 143: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001600347168277949
    2. '**' → logprob: -9.375160217285156
    3. ']^' → logprob: -10.000160217285156
    4. ']*' → logprob: -11.000160217285156
    5. '}' → logprob: -12.750160217285156
    6. '][]' → logprob: -13.687660217285156
    7. '])' → logprob: -13.812660217285156
    8. '']' → logprob: -13.875160217285156
    9. '】' → logprob: -13.937660217285156
    10. '][' → logprob: -14.062660217285156

Token 144: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -3.054500666621607e-06
    2. ' **' → logprob: -12.87500286102295
    3. '**
' → logprob: -16.250003814697266
    4. ')**' → logprob: -16.500003814697266
    5. '**)' → logprob: -16.500003814697266
    6. '**

' → logprob: -17.375003814697266
    7. '***' → logprob: -17.375003814697266
    8. '`' → logprob: -17.875003814697266
    9. '/**' → logprob: -17.937503814697266
    10. '(**' → logprob: -18.062503814697266

Token 145: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0015029559144750237
    2. '0' → logprob: -6.501502990722656
    3. '1' → logprob: -14.376502990722656
    4. '(' → logprob: -16.626502990722656
    5. ' ' → logprob: -17.126502990722656
    6. '3' → logprob: -18.126502990722656
    7. '   ' → logprob: -19.376502990722656
    8. '22' → logprob: -19.501502990722656
    9. '4' → logprob: -20.001502990722656
    10. '21' → logprob: -21.126502990722656

Token 146: ')' (ID: 8)
  Prédit: ')**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.03806180879473686
    2. ')' → logprob: -3.2880618572235107
    3. ')^' → logprob: -11.53806209564209
    4. '**' → logprob: -11.66306209564209
    5. '**)' → logprob: -14.16306209564209
    6. ' )' → logprob: -14.78806209564209
    7. ')`' → logprob: -15.66306209564209
    8. '）' → logprob: -16.038061141967773
    9. ').' → logprob: -16.038061141967773
    10. '```' → logprob: -16.413061141967773

Token 147: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -6.635164754698053e-05
    2. ' **' → logprob: -9.875066757202148
    3. '```' → logprob: -11.750066757202148
    4. '   ' → logprob: -12.500066757202148
    5. '<|end|>' → logprob: -13.750066757202148
    6. '``' → logprob: -14.250066757202148
    7. 'import' → logprob: -14.875066757202148
    8. ')**' → logprob: -14.875066757202148
    9. '**)' → logprob: -16.12506675720215
    10. '**

' → logprob: -16.25006675720215

Token 148: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.375
    3. '.' → logprob: -20.75
    4. '(' → logprob: -21.125
    5. '1' → logprob: -23.75
    6. '۰' → logprob: -24.75
    7. '00' → logprob: -24.875
    8. '   ' → logprob: -25.0
    9. '`' → logprob: -25.0
    10. '2' → logprob: -25.25

Token 149: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '.' → logprob: -22.0
    3. ' ' → logprob: -22.0
    4. '(' → logprob: -23.625
    5. '1' → logprob: -24.25
    6. '۰' → logprob: -25.25
    7. '5' → logprob: -25.625
    8. '`' → logprob: -25.625
    9. '00' → logprob: -25.625
    10. '０' → logprob: -25.875

Token 150: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -4.320199877838604e-07
    2. '   ' → logprob: -16.875
    3. '.
' → logprob: -17.125
    4. '.

' → logprob: -17.875
    5. '.sqrt' → logprob: -17.875
    6. '.x' → logprob: -18.0
    7. '.`' → logprob: -18.0
    8. '..' → logprob: -18.125
    9. '**' → logprob: -18.25
    10. '0' → logprob: -18.25

Token 151: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.9361264946837764e-07
    2. '500' → logprob: -15.875
    3. '五' → logprob: -17.875
    4. 'five' → logprob: -17.875
    5. 'sqrt' → logprob: -18.25
    6. '50' → logprob: -18.875
    7. ' пят' → logprob: -19.625
    8. ' ' → logprob: -20.0
    9. ' Fifth' → logprob: -20.125
    10. '５' → logprob: -20.25

Token 152: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.022959616035223007
    2. '<|end|>' → logprob: -4.2729597091674805
    3. '```' → logprob: -5.0229597091674805
    4. '   ' → logprob: -6.8979597091674805
    5. '<|end|>' → logprob: -7.1479597091674805
    6. 'if' → logprob: -9.14795970916748
    7. ' def' → logprob: -9.27295970916748
    8. 'print' → logprob: -9.77295970916748
    9. '#' → logprob: -10.52295970916748
    10. '###' → logprob: -10.89795970916748

Token 153: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00019007037917617708
    2. 'if' → logprob: -9.625189781188965
    3. '```' → logprob: -9.750189781188965
    4. '   ' → logprob: -10.125189781188965
    5. 'print' → logprob: -11.375189781188965
    6. '<|end|>' → logprob: -12.500189781188965
    7. '#' → logprob: -12.875189781188965
    8. ' def' → logprob: -13.125189781188965
    9. '<|end|>' → logprob: -13.750189781188965
    10. 'sys' → logprob: -13.875189781188965

Token 154: ' cosine' (ID: 185421)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.6623099446296692
    2. 'normalize' → logprob: -2.2873098850250244
    3. 'compute' → logprob: -2.9123098850250244
    4. 'process' → logprob: -3.0373098850250244
    5. 'dot' → logprob: -3.0373098850250244
    6. 'vector' → logprob: -3.4123098850250244
    7. 'main' → logprob: -3.6623098850250244
    8. 'cross' → logprob: -3.6623098850250244
    9. 'angle' → logprob: -4.0373101234436035
    10. 'is' → logprob: -4.0373101234436035

Token 155: '_of' (ID: 8023)
  Prédit: '_similarity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_similarity' → logprob: -0.11003119498491287
    2. '_angle' → logprob: -2.4850311279296875
    3. '_' → logprob: -4.8600311279296875
    4. '(theta' → logprob: -6.2350311279296875
    5. '(angle' → logprob: -6.2350311279296875
    6. '_theta' → logprob: -6.3600311279296875
    7. '_sim' → logprob: -6.7350311279296875
    8. '_distance' → logprob: -7.1100311279296875
    9. '_angles' → logprob: -7.2350311279296875
    10. '_import' → logprob: -7.4850311279296875

Token 156: '_vector' (ID: 29530)
  Prédit: '_angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_angle' → logprob: -0.0365540012717247
    2. '(angle' → logprob: -3.9115540981292725
    3. '_angles' → logprob: -5.161553859710693
    4. '_vector' → logprob: -5.661553859710693
    5. '(vector' → logprob: -6.036553859710693
    6. 'angle' → logprob: -6.161553859710693
    7. '(v' → logprob: -7.536553859710693
    8. '_similarity' → logprob: -7.786553859710693
    9. '(theta' → logprob: -7.911553859710693
    10. '_theta' → logprob: -8.536554336547852

Token 157: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.0042536272667348385
    2. '(a' → logprob: -6.12925386428833
    3. '(length' → logprob: -7.50425386428833
    4. '(vector' → logprob: -7.50425386428833
    5. '(n' → logprob: -7.75425386428833
    6. '(' → logprob: -8.879253387451172
    7. '_length' → logprob: -9.004253387451172
    8. '(x' → logprob: -9.379253387451172
    9. '(angle' → logprob: -9.879253387451172
    10. '(vec' → logprob: -10.379253387451172

Token 158: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25210466980934143
    2. '):
' → logprob: -1.502104640007019
    3. '):

' → logprob: -9.252104759216309
    4. ')' → logprob: -9.877104759216309
    5. '):
' → logprob: -11.127104759216309
    6. '[' → logprob: -11.627104759216309
    7. ':' → logprob: -13.377104759216309
    8. ')):' → logprob: -14.252104759216309
    9. '[]):' → logprob: -14.877104759216309
    10. ').' → logprob: -15.377104759216309

Token 159: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3856492842023727e-06
    2. 'return' → logprob: -13.750000953674316
    3. '  ' → logprob: -15.500000953674316
    4. '    ' → logprob: -17.875001907348633
    5. '	return' → logprob: -18.000001907348633
    6. ' return' → logprob: -18.500001907348633
    7. '       ' → logprob: -19.250001907348633
    8. ' ' → logprob: -19.750001907348633
    9. '```' → logprob: -20.000001907348633
    10. '     ' → logprob: -21.125001907348633

Token 160: ' length' (ID: 5517)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.04160075634717941
    2. '   ' → logprob: -3.2916007041931152
    3. 'v' → logprob: -5.666600704193115
    4. 'import' → logprob: -9.916601181030273
    5. ' return' → logprob: -10.166601181030273
    6. '	return' → logprob: -13.166601181030273
    7. '  ' → logprob: -13.666601181030273
    8. 'if' → logprob: -14.541601181030273
    9. '       ' → logprob: -14.666601181030273
    10. 'x' → logprob: -15.166601181030273

Token 161: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12590636312961578
    2. '   ' → logprob: -2.500906467437744
    3. '(v' → logprob: -3.625906467437744
    4. '=' → logprob: -5.625906467437744
    5. 'def' → logprob: -5.750906467437744
    6. 's' → logprob: -7.125906467437744
    7. ' ' → logprob: -8.125905990600586
    8. '  ' → logprob: -8.125905990600586
    9. '=v' → logprob: -8.125905990600586
    10. '_' → logprob: -8.250905990600586

Token 162: ' vector' (ID: 9727)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vector' → logprob: -1.9504606825648807e-05
    2. ' vector' → logprob: -10.875019073486328
    3. '.vector' → logprob: -15.875019073486328
    4. 'v' → logprob: -16.125019073486328
    5. '_vector' → logprob: -16.625019073486328
    6. '(vector' → logprob: -17.000019073486328
    7. '   ' → logprob: -17.750019073486328
    8. '	vector' → logprob: -17.750019073486328
    9. 'vec' → logprob: -18.625019073486328
    10. 'Vector' → logprob: -19.250019073486328

Token 163: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.00015109812375158072
    2. '_len' → logprob: -9.500150680541992
    3. '_lengths' → logprob: -10.375150680541992
    4. '_LENGTH' → logprob: -10.750150680541992
    5. '_angle' → logprob: -12.375150680541992
    6. 'length' → logprob: -12.875150680541992
    7. '_Length' → logprob: -13.125150680541992
    8. '_' → logprob: -13.375150680541992
    9. '长度' → logprob: -13.500150680541992
    10. ' length' → logprob: -13.750150680541992

Token 164: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -14.625000953674316
    3. '(n' → logprob: -18.875
    4. '()' → logprob: -19.25
    5. '(u' → logprob: -19.25
    6. '(vm' → logprob: -19.625
    7. '(vector' → logprob: -19.75
    8. '(length' → logprob: -20.0
    9. 'v' → logprob: -20.0
    10. '(a' → logprob: -20.25

Token 165: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.014424151740968227
    2. ')' → logprob: -4.2644243240356445
    3. '   ' → logprob: -8.389424324035645
    4. ')

' → logprob: -10.389424324035645
    5. ')
' → logprob: -13.889424324035645
    6. '[' → logprob: -14.264424324035645
    7. ').' → logprob: -15.639424324035645
    8. '):
' → logprob: -15.889424324035645
    9. '))
' → logprob: -16.014423370361328
    10. ');
' → logprob: -16.014423370361328

Token 166: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.9361264946837764e-07
    2. 'return' → logprob: -16.0
    3. '  ' → logprob: -17.125
    4. '       ' → logprob: -18.5
    5. '    ' → logprob: -19.875
    6. ' ' → logprob: -21.0
    7. '	return' → logprob: -22.125
    8. '     ' → logprob: -22.375
    9. 'if' → logprob: -22.625
    10. 'def' → logprob: -22.625

Token 167: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.24621649086475372
    2. 'if' (adapté à ' if') → logprob: -1.9962165355682373
    3. '   ' → logprob: -2.4962165355682373
    4. ' return' → logprob: -13.121216773986816
    5. '	return' → logprob: -15.121216773986816
    6. '  ' → logprob: -16.4962158203125
    7. '       ' → logprob: -16.4962158203125
    8. ' if' → logprob: -16.8712158203125
    9. 'returns' → logprob: -17.6212158203125
    10. 'print' → logprob: -17.8712158203125

Token 168: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.31415626406669617
    2. ' length' → logprob: -1.3141562938690186
    3. '   ' → logprob: -7.0641560554504395
    4. '(length' → logprob: -11.189156532287598
    5. '	length' → logprob: -11.314156532287598
    6. '  ' → logprob: -12.189156532287598
    7. ' ' → logprob: -13.064156532287598
    8. ' len' → logprob: -13.439156532287598
    9. '_length' → logprob: -13.689156532287598
    10. '    ' → logprob: -14.064156532287598

Token 169: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.04300617426633835
    2. ' ==' → logprob: -3.168006181716919
    3. '!=' → logprob: -12.91800594329834
    4. '<=' → logprob: -13.29300594329834
    5. '>' → logprob: -13.41800594329834
    6. ' !=' → logprob: -14.04300594329834
    7. '=' → logprob: -16.168006896972656
    8. ' <=' → logprob: -16.168006896972656
    9. '   ' → logprob: -16.793006896972656
    10. '0' → logprob: -16.918006896972656

Token 170: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.625000953674316
    3. '   ' → logprob: -16.5
    4. '  ' → logprob: -21.25
    5. '       ' → logprob: -21.375
    6. '1' → logprob: -21.625
    7. 'zero' → logprob: -21.625
    8. '０' → logprob: -22.5
    9. '۰' → logprob: -23.0
    10. '    ' → logprob: -23.0

Token 171: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.625
    3. '1' → logprob: -21.5
    4. '   ' → logprob: -22.0
    5. 'zero' → logprob: -23.0
    6. '０' → logprob: -24.25
    7. '۰' → logprob: -25.0
    8. '2' → logprob: -25.5
    9. '       ' → logprob: -25.75
    10. '  ' → logprob: -26.0

Token 172: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03408176451921463
    2. ':
' → logprob: -3.4090816974639893
    3. '   ' → logprob: -8.15908145904541
    4. '       ' → logprob: -9.03408145904541
    5. ':return' → logprob: -10.65908145904541
    6. ':

' → logprob: -12.53408145904541
    7. '     ' → logprob: -13.65908145904541
    8. ':\' → logprob: -14.15908145904541
    9. 'return' → logprob: -15.15908145904541
    10. ':`' → logprob: -15.28408145904541

Token 173: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006706207641400397
    2. '   ' → logprob: -7.500670433044434
    3. 'return' → logprob: -9.250670433044434
    4. '     ' → logprob: -11.375670433044434
    5. '      ' → logprob: -11.750670433044434
    6. '           ' → logprob: -13.875670433044434
    7. '        ' → logprob: -14.500670433044434
    8. '    ' → logprob: -14.750670433044434
    9. '         ' → logprob: -16.37567138671875
    10. '  ' → logprob: -16.37567138671875

Token 174: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02351205237209797
    2. 'return' (adapté à ' return') → logprob: -3.773512125015259
    3. '   ' → logprob: -8.27351188659668
    4. '           ' → logprob: -12.14851188659668
    5. ' return' → logprob: -13.14851188659668
    6. '     ' → logprob: -13.27351188659668
    7. '      ' → logprob: -13.52351188659668
    8. '        ' → logprob: -15.14851188659668
    9. '0' → logprob: -15.39851188659668
    10. '	return' → logprob: -15.64851188659668

Token 175: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.515961285913363e-05
    2. 'None' → logprob: -9.750064849853516
    3. 'float' → logprob: -12.875064849853516
    4. '   ' → logprob: -13.250064849853516
    5. '1' → logprob: -13.750064849853516
    6. ' ' → logprob: -14.375064849853516
    7. '       ' → logprob: -14.500064849853516
    8. ' None' → logprob: -15.375064849853516
    9. '               ' → logprob: -17.875064849853516
    10. 'Na' → logprob: -18.000064849853516

Token 176: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.184812031686306e-05
    2. 'None' → logprob: -9.500082015991211
    3. '1' → logprob: -12.000082015991211
    4. 'float' → logprob: -14.250082015991211
    5. ' None' → logprob: -17.37508201599121
    6. 'Na' → logprob: -17.62508201599121
    7. 'undefined' → logprob: -18.50008201599121
    8. ' ' → logprob: -18.75008201599121
    9. '   ' → logprob: -18.75008201599121
    10. 'nan' → logprob: -19.00008201599121

Token 177: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.8828707804204896e-05
    2. '       ' → logprob: -10.000048637390137
    3. 'return' → logprob: -13.375048637390137
    4. '  ' → logprob: -14.125048637390137
    5. '    
' → logprob: -14.500048637390137
    6. '     ' → logprob: -15.250048637390137
    7. '    ' → logprob: -15.250048637390137
    8. ' ' → logprob: -16.875049591064453
    9. '1' → logprob: -17.250049591064453
    10. '0' → logprob: -17.375049591064453

Token 178: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -7.465036105713807e-06
    2. '       ' → logprob: -11.875007629394531
    3. 'def' → logprob: -15.500007629394531
    4. 'return' → logprob: -16.50000762939453
    5. '  ' → logprob: -17.00000762939453
    6. '     ' → logprob: -18.00000762939453
    7. '    ' → logprob: -18.37500762939453
    8. '    
' → logprob: -20.25000762939453
    9. ' ' → logprob: -20.87500762939453
    10. '           ' → logprob: -21.00000762939453

Token 179: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003361774142831564
    2. 'return' (adapté à ' return') → logprob: -8.000336647033691
    3. '       ' → logprob: -14.750336647033691
    4. '  ' → logprob: -15.000336647033691
    5. '	return' → logprob: -17.250335693359375
    6. ' return' → logprob: -17.250335693359375
    7. '    ' → logprob: -17.875335693359375
    8. '     ' → logprob: -19.125335693359375
    9. ' ' → logprob: -19.375335693359375
    10. 'else' → logprob: -19.375335693359375

Token 180: ' v' (ID: 323)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12186715006828308
    2. 'v' → logprob: -2.2468671798706055
    3. '0' → logprob: -5.2468671798706055
    4. 'length' → logprob: -5.7468671798706055
    5. '   ' → logprob: -7.7468671798706055
    6. 'float' → logprob: -10.496867179870605
    7. ' v' → logprob: -10.621867179870605
    8. ' ' → logprob: -10.996867179870605
    9. '       ' → logprob: -11.496867179870605
    10. 'cos' → logprob: -11.871867179870605

Token 181: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02079925313591957
    2. '/' → logprob: -3.895799160003662
    3. '   ' → logprob: -9.52079963684082
    4. ' /' → logprob: -9.52079963684082
    5. '.normalize' → logprob: -11.27079963684082
    6. '```' → logprob: -11.27079963684082
    7. '/n' → logprob: -11.39579963684082
    8. '[len' → logprob: -11.39579963684082
    9. 'norm' → logprob: -12.02079963684082
    10. '.length' → logprob: -12.14579963684082

Token 182: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. '1' → logprob: -16.375
    3. '[' → logprob: -17.25
    4. ' ' → logprob: -17.375
    5. '   ' → logprob: -18.25
    6. ']' → logprob: -19.5
    7. '```' → logprob: -20.25
    8. ']/' → logprob: -20.5
    9. '  ' → logprob: -20.75
    10. '０' → logprob: -20.75

Token 183: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0013272607466205955
    2. ']/' → logprob: -6.626327037811279
    3. ')' → logprob: -14.751327514648438
    4. '}' → logprob: -15.626327514648438
    5. '   ' → logprob: -15.751327514648438
    6. '][' → logprob: -15.876327514648438
    7. '].' → logprob: -16.001327514648438
    8. '],' → logprob: -16.126327514648438
    9. '/' → logprob: -16.751327514648438
    10. '']' → logprob: -17.126327514648438

Token 184: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.006724722217768431
    2. ' /' → logprob: -5.006724834442139
    3. 'length' → logprob: -12.13172435760498
    4. '/l' → logprob: -13.63172435760498
    5. '   ' → logprob: -14.00672435760498
    6. '/(' → logprob: -14.63172435760498
    7. '[length' → logprob: -15.50672435760498
    8. '/or' → logprob: -16.006725311279297
    9. '(length' → logprob: -16.131725311279297
    10. '/m' → logprob: -16.256725311279297

Token 185: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -1.9361264946837764e-07
    2. ' length' → logprob: -16.125
    3. '(length' → logprob: -19.5
    4. '_length' → logprob: -19.875
    5. '	length' → logprob: -19.875
    6. 'Length' → logprob: -22.125
    7. '.length' → logprob: -22.375
    8. '-length' → logprob: -22.375
    9. '[length' → logprob: -22.75
    10. '长度' → logprob: -22.75

Token 186: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0036100437864661217
    2. '   ' → logprob: -6.253610134124756
    3. '```' → logprob: -6.628610134124756
    4. '<|end|>' → logprob: -8.128609657287598
    5. '<|end|>' → logprob: -11.003609657287598
    6. ' def' → logprob: -11.128609657287598
    7. 'import' → logprob: -12.378609657287598
    8. '}' → logprob: -12.628609657287598
    9. '`' → logprob: -12.753609657287598
    10. 'return' → logprob: -12.753609657287598

Token 187: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0025299990084022284
    2. '   ' → logprob: -6.502530097961426
    3. '```' → logprob: -7.377530097961426
    4. 'if' → logprob: -8.877530097961426
    5. 'return' → logprob: -9.002530097961426
    6. '#' → logprob: -10.377530097961426
    7. 'print' → logprob: -10.377530097961426
    8. 'import' → logprob: -10.877530097961426
    9. 'sys' → logprob: -11.002530097961426
    10. '<|end|>' → logprob: -11.752530097961426

Token 188: ' should' (ID: 1757)
  Prédit: 'cos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cos' → logprob: -1.402077555656433
    2. 'normalize' → logprob: -1.902077555656433
    3. 'dot' → logprob: -2.0270776748657227
    4. 'sin' → logprob: -2.1520776748657227
    5. 'calculate' → logprob: -2.6520776748657227
    6. 'sort' → logprob: -2.6520776748657227
    7. 'cross' → logprob: -2.9020776748657227
    8. 'parse' → logprob: -3.4020776748657227
    9. 'vector' → logprob: -3.5270776748657227
    10. 'angle' → logprob: -3.9020776748657227

Token 189: '_continue' (ID: 188911)
  Prédit: '_continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_continue' → logprob: -0.6325459480285645
    2. '_sort' → logprob: -2.3825459480285645
    3. '_filter' → logprob: -2.8825459480285645
    4. '_process' → logprob: -3.3825459480285645
    5. '_stop' → logprob: -3.7575459480285645
    6. '_return' → logprob: -3.7575459480285645
    7. '_compute' → logprob: -4.1325459480285645
    8. '_cut' → logprob: -4.2575459480285645
    9. '_be' → logprob: -4.6325459480285645
    10. '_end' → logprob: -4.7575459480285645

Token 190: '(point' (ID: 46989)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.09010343998670578
    2. '(n' → logprob: -2.4651033878326416
    3. '():
' → logprob: -7.840103626251221
    4. '(:' → logprob: -8.090103149414062
    5. '(' → logprob: -8.965103149414062
    6. '(_:' → logprob: -9.340103149414062
    7. '()' → logprob: -9.715103149414062
    8. '(_' → logprob: -10.840103149414062
    9. 'def' → logprob: -10.840103149414062
    10. '(v' → logprob: -10.965103149414062

Token 191: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.26888853311538696
    2. '):
' → logprob: -1.5188884735107422
    3. 's' → logprob: -4.768888473510742
    4. ',' → logprob: -4.893888473510742
    5. '):

' → logprob: -7.518888473510742
    6. ')' → logprob: -8.893888473510742
    7. '):
' → logprob: -9.268888473510742
    8. 'def' → logprob: -10.643888473510742
    9. ':' → logprob: -11.643888473510742
    10. '   ' → logprob: -12.018888473510742

Token 192: ' p' (ID: 275)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.38010677695274353
    2. 'points' → logprob: -1.880106806755066
    3. 'previous' → logprob: -2.7551066875457764
    4. 'threshold' → logprob: -3.1301066875457764
    5. 'prev' → logprob: -3.8801066875457764
    6. 'end' → logprob: -4.3801069259643555
    7. 'line' → logprob: -5.2551069259643555
    8. 'next' → logprob: -5.3801069259643555
    9. 'point' → logprob: -5.8801069259643555
    10. 'last' → logprob: -6.1301069259643555

Token 193: '):
' (ID: 1883)
  Prédit: 'oints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'oints' → logprob: -0.1418737918138504
    2. 'rev' → logprob: -2.766873836517334
    3. 're' → logprob: -2.891873836517334
    4. 'oint' → logprob: -4.391873836517334
    5. '1' → logprob: -7.516873836517334
    6. 'olygon' → logprob: -9.141873359680176
    7. 'rocess' → logprob: -9.141873359680176
    8. 'r' → logprob: -9.266873359680176
    9. 'ro' → logprob: -9.766873359680176
    10. 'oin' → logprob: -9.766873359680176

Token 194: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.13388703338569e-06
    2. 'return' → logprob: -11.750009536743164
    3. '  ' → logprob: -14.000009536743164
    4. '	return' → logprob: -16.125009536743164
    5. '    ' → logprob: -16.875009536743164
    6. '       ' → logprob: -17.125009536743164
    7. ' ' → logprob: -17.500009536743164
    8. ' return' → logprob: -17.750009536743164
    9. 'def' → logprob: -18.125009536743164
    10. '```' → logprob: -18.375009536743164

Token 195: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0015089125372469425
    2. '   ' → logprob: -6.501508712768555
    3. ' return' → logprob: -12.876508712768555
    4. '#' → logprob: -13.626508712768555
    5. 'distance' → logprob: -14.251508712768555
    6. '	return' → logprob: -14.751508712768555
    7. 'returns' → logprob: -14.751508712768555
    8. 'if' → logprob: -14.876508712768555
    9. 'point' → logprob: -15.126508712768555
    10. 'p' → logprob: -15.376508712768555

Token 196: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.020574118942022324
    2. 'not' → logprob: -4.89557409286499
    3. 'len' → logprob: -5.39557409286499
    4. '   ' → logprob: -5.64557409286499
    5. ' point' → logprob: -6.52057409286499
    6. 'p' → logprob: -6.64557409286499
    7. 'abs' → logprob: -7.27057409286499
    8. '(point' → logprob: -7.27057409286499
    9. 'cos' → logprob: -8.770574569702148
    10. ' ' → logprob: -9.520574569702148

Token 197: '[' (ID: 58)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.23026782274246216
    2. '!=' → logprob: -2.1052677631378174
    3. '[' → logprob: -2.7302677631378174
    4. 'in' → logprob: -5.2302680015563965
    5. '>' → logprob: -5.3552680015563965
    6. ' ==' → logprob: -6.2302680015563965
    7. ' !=' → logprob: -6.3552680015563965
    8. '<' → logprob: -6.4802680015563965
    9. 'is' → logprob: -6.6052680015563965
    10. 'not' → logprob: -7.2302680015563965

Token 198: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16022686660289764
    2. '0' → logprob: -1.910226821899414
    3. '2' → logprob: -13.035226821899414
    4. '[' → logprob: -14.535226821899414
    5. '3' → logprob: -17.035226821899414
    6. '==' → logprob: -17.285226821899414
    7. '<' → logprob: -17.535226821899414
    8. ']' → logprob: -17.785226821899414
    9. ':' → logprob: -18.035226821899414
    10. ' ' → logprob: -18.160226821899414

Token 199: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005151443183422089
    2. ']>' → logprob: -7.625514984130859
    3. '>' → logprob: -11.25051498413086
    4. ']<' → logprob: -12.00051498413086
    5. ']>=' → logprob: -12.37551498413086
    6. '][' → logprob: -13.37551498413086
    7. '].' → logprob: -13.50051498413086
    8. ']==' → logprob: -15.12551498413086
    9. ']<=' → logprob: -15.12551498413086
    10. '}' → logprob: -16.25051498413086

Token 200: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.006604883354157209
    2. '>=' → logprob: -5.6316046714782715
    3. '<' → logprob: -5.8816046714782715
    4. '<=' → logprob: -8.50660514831543
    5. ' >' → logprob: -12.88160514831543
    6. '==' → logprob: -13.00660514831543
    7. '>`' → logprob: -13.25660514831543
    8. '≥' → logprob: -14.88160514831543
    9. '<p' → logprob: -15.50660514831543
    10. '!=' → logprob: -15.50660514831543

Token 201: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00017159747949335724
    2. ' p' → logprob: -8.750171661376953
    3. '=' → logprob: -12.000171661376953
    4. '=p' → logprob: -12.500171661376953
    5. '   ' → logprob: -13.125171661376953
    6. '0' → logprob: -14.625171661376953
    7. '	p' → logprob: -15.625171661376953
    8. 'point' → logprob: -15.625171661376953
    9. ' ' → logprob: -15.875171661376953
    10. '(p' → logprob: -17.250171661376953

Token 202: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001234399271197617
    2. '<|end|>' → logprob: -7.501234531402588
    3. 'def' → logprob: -8.75123405456543
    4. '```' → logprob: -8.87623405456543
    5. '0' → logprob: -9.00123405456543
    6. '   ' → logprob: -10.00123405456543
    7. '#' → logprob: -10.12623405456543
    8. '<|end|>' → logprob: -10.50123405456543
    9. 'return' → logprob: -10.87623405456543
    10. '**' → logprob: -11.25123405456543

Token 203: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. '0' → logprob: -12.625003814697266
    3. '2' → logprob: -18.250003814697266
    4. '[' → logprob: -19.000003814697266
    5. '１' → logprob: -20.125003814697266
    6. ' ' → logprob: -21.000003814697266
    7. '3' → logprob: -21.250003814697266
    8. '```' → logprob: -21.375003814697266
    9. 'y' → logprob: -21.500003814697266
    10. '۱' → logprob: -22.000003814697266

Token 204: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006914991419762373
    2. ']:' → logprob: -5.506915092468262
    3. '])' → logprob: -6.506915092468262
    4. ']}' → logprob: -7.006915092468262
    5. ']]' → logprob: -9.256915092468262
    6. ']+' → logprob: -9.381915092468262
    7. '].' → logprob: -10.256915092468262
    8. '   ' → logprob: -10.506915092468262
    9. ']):' → logprob: -10.506915092468262
    10. '];' → logprob: -10.631915092468262

Token 205: ' or' (ID: 503)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04573197662830353
    2. '   ' → logprob: -3.170732021331787
    3. ':def' → logprob: -6.795732021331787
    4. '```' → logprob: -7.420732021331787
    5. '<|end|>' → logprob: -8.045731544494629
    6. 'return' → logprob: -8.795731544494629
    7. ' def' → logprob: -9.045731544494629
    8. ':return' → logprob: -9.045731544494629
    9. ':' → logprob: -9.545731544494629
    10. '       ' → logprob: -9.795731544494629

Token 206: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.002075194614008069
    2. '(point' → logprob: -6.5020751953125
    3. ' point' → logprob: -7.5020751953125
    4. '	point' → logprob: -11.2520751953125
    5. '.point' → logprob: -12.8770751953125
    6. 'p' → logprob: -13.1270751953125
    7. '(' → logprob: -14.1270751953125
    8. '   ' → logprob: -14.2520751953125
    9. ' (' → logprob: -14.3770751953125
    10. '_point' → logprob: -15.1270751953125

Token 207: ' ==' (ID: 951)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.173704271830502e-06
    2. '==' → logprob: -12.75000286102295
    3. ' ==' → logprob: -16.875003814697266
    4. '<' → logprob: -17.750003814697266
    5. '[p' → logprob: -18.375003814697266
    6. '```' → logprob: -18.625003814697266
    7. '   ' → logprob: -18.750003814697266
    8. '>' → logprob: -19.250003814697266
    9. '[i' → logprob: -19.375003814697266
    10. '`' → logprob: -19.500003814697266

Token 208: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -7.896309739408025e-07
    2. ' p' → logprob: -14.125000953674316
    3. '	p' → logprob: -22.0
    4. '<p' → logprob: -22.25
    5. 'point' → logprob: -22.375
    6. '   ' → logprob: -22.5
    7. '(p' → logprob: -22.5
    8. '$p' → logprob: -23.625
    9. ' п' → logprob: -23.75
    10. 'pp' → logprob: -23.75

Token 209: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.048076923936605453
    2. '   ' → logprob: -3.298076868057251
    3. '<|end|>' → logprob: -4.79807710647583
    4. ':def' → logprob: -7.29807710647583
    5. '```' → logprob: -8.048076629638672
    6. '<|end|>' → logprob: -8.173076629638672
    7. '#' → logprob: -9.548076629638672
    8. ' def' → logprob: -9.798076629638672
    9. ':' → logprob: -9.798076629638672
    10. 'return' → logprob: -10.298076629638672

Token 210: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5775901079177856
    2. '   ' → logprob: -0.8275901079177856
    3. 'return' → logprob: -7.327589988708496
    4. '```' → logprob: -7.577589988708496
    5. 'if' → logprob: -8.577589988708496
    6. 'print' → logprob: -9.452589988708496
    7. 'sys' → logprob: -9.952589988708496
    8. '#' → logprob: -10.327589988708496
    9. '       ' → logprob: -10.327589988708496
    10. 'pass' → logprob: -10.452589988708496

Token 211: ' compare' (ID: 12221)
  Prédit: 'should'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'should' → logprob: -1.1183143854141235
    2. 'is' → logprob: -1.9933143854141235
    3. 'parse' → logprob: -1.9933143854141235
    4. 'sort' → logprob: -2.118314266204834
    5. 'read' → logprob: -2.618314266204834
    6. 'find' → logprob: -2.868314266204834
    7. 'get' → logprob: -2.993314266204834
    8. 'process' → logprob: -4.118314266204834
    9. 'filter' → logprob: -4.743314266204834
    10. 'calculate' → logprob: -4.743314266204834

Token 212: '_cos' (ID: 152313)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.0005809116992168128
    2. '_function' → logprob: -8.875580787658691
    3. '_POINTS' → logprob: -9.500580787658691
    4. '_functions' → logprob: -9.875580787658691
    5. '_pts' → logprob: -10.125580787658691
    6. '_point' → logprob: -10.125580787658691
    7. '_e' → logprob: -10.375580787658691
    8. '(points' → logprob: -10.375580787658691
    9. '_' → logprob: -10.750580787658691
    10. '_p' → logprob: -10.875580787658691

Token 213: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -3.15441757265944e-05
    2. 'ines' → logprob: -11.250031471252441
    3. 'inue' → logprob: -12.500031471252441
    4. 'in' → logprob: -12.875031471252441
    5. 'i' → logprob: -13.125031471252441
    6. 'inine' → logprob: -13.250031471252441
    7. 'INE' → logprob: -13.750031471252441
    8. 'inee' → logprob: -13.750031471252441
    9. 'hine' → logprob: -13.875031471252441
    10. ' ine' → logprob: -14.625031471252441

Token 214: '(c' (ID: 2410)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.093527913093567
    2. '_of' → logprob: -1.468527913093567
    3. 'def' → logprob: -1.718527913093567
    4. '(v' → logprob: -2.0935277938842773
    5. '_' → logprob: -3.7185277938842773
    6. '_def' → logprob: -3.9685277938842773
    7. '(s' → logprob: -4.343527793884277
    8. '(c' → logprob: -4.718527793884277
    9. '(def' → logprob: -4.718527793884277
    10. '(x' → logprob: -4.968527793884277

Token 215: ',' (ID: 11)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.0251725185662508
    2. 'om' → logprob: -3.900172472000122
    3. 'omp' → logprob: -5.525172710418701
    4. 'osm' → logprob: -8.275172233581543
    5. 'mp' → logprob: -9.025172233581543
    6. '(os' → logprob: -10.025172233581543
    7. 'o' → logprob: -10.525172233581543
    8. 'oss' → logprob: -10.650172233581543
    9. 'osen' → logprob: -10.650172233581543
    10. 'def' → logprob: -11.275172233581543

Token 216: ' max' (ID: 2999)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.1228087991476059
    2. 'p' → logprob: -2.3728086948394775
    3. 'd' → logprob: -4.997808933258057
    4. 'om' → logprob: -5.622808933258057
    5. 'omp' → logprob: -5.747808933258057
    6. 'o' → logprob: -5.872808933258057
    7. 'osm' → logprob: -6.747808933258057
    8. 'c' → logprob: -6.997808933258057
    9. 'l' → logprob: -6.997808933258057
    10. 'oss' → logprob: -7.872808933258057

Token 217: 'cos' (ID: 10732)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.6182724237442017
    2. '_cos' → logprob: -0.8682724237442017
    3. ')' → logprob: -3.868272304534912
    4. '_' → logprob: -5.118272304534912
    5. '_angle' → logprob: -6.118272304534912
    6. '_score' → logprob: -6.493272304534912
    7. '_length' → logprob: -6.618272304534912
    8. ',' → logprob: -6.868272304534912
    9. ')_' → logprob: -7.243272304534912
    10. '_value' → logprob: -7.243272304534912

Token 218: ',' (ID: 11)
  Prédit: 'ine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.0043460913002491
    2. ')**' → logprob: -6.379345893859863
    3. ')' → logprob: -6.629345893859863
    4. 'in' → logprob: -7.504345893859863
    5. '):' → logprob: -8.504345893859863
    6. '),' → logprob: -9.004345893859863
    7. ').' → logprob: -9.254345893859863
    8. 'i' → logprob: -9.629345893859863
    9. ')}' → logprob: -10.129345893859863
    10. '(c' → logprob: -10.129345893859863

Token 219: ' direction' (ID: 9262)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.47492727637290955
    2. 'point' → logprob: -1.099927306175232
    3. 'points' → logprob: -3.3499271869659424
    4. 'c' → logprob: -4.9749274253845215
    5. 'min' → logprob: -6.8499274253845215
    6. 'n' → logprob: -7.2249274253845215
    7. 'max' → logprob: -7.8499274253845215
    8. 'new' → logprob: -8.724926948547363
    9. 'next' → logprob: -8.974926948547363
    10. 'threshold' → logprob: -9.349926948547363

Token 220: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.040764711797237396
    2. '):
' → logprob: -3.415764808654785
    3. ')' → logprob: -5.165764808654785
    4. '):

' → logprob: -8.040764808654785
    5. '==' → logprob: -8.290764808654785
    6. '   ' → logprob: -8.915764808654785
    7. '):
' → logprob: -9.165764808654785
    8. ',' → logprob: -9.415764808654785
    9. ')==' → logprob: -9.665764808654785
    10. '>' → logprob: -9.915764808654785

Token 221: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -7.111979357432574e-05
    2. 'return' → logprob: -10.25007152557373
    3. ':' → logprob: -10.62507152557373
    4. '       ' → logprob: -12.12507152557373
    5. '  ' → logprob: -13.00007152557373
    6. ':return' → logprob: -13.87507152557373
    7. 'def' → logprob: -14.12507152557373
    8. '    ' → logprob: -14.37507152557373
    9. ' ' → logprob: -14.75007152557373
    10. 'if' → logprob: -15.00007152557373

Token 222: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2140004187822342
    2. '   ' → logprob: -1.9640004634857178
    3. 'if' (adapté à ' if') → logprob: -2.9640004634857178
    4. 'pass' → logprob: -7.589000225067139
    5. '#' → logprob: -9.214000701904297
    6. 'max' → logprob: -9.714000701904297
    7. 'c' → logprob: -9.839000701904297
    8. 'direction' → logprob: -12.089000701904297
    9. 'def' → logprob: -12.464000701904297
    10. '```' → logprob: -12.839000701904297

Token 223: ' direction' (ID: 9262)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6972157955169678
    2. ' c' → logprob: -0.6972157955169678
    3. '   ' → logprob: -5.822216033935547
    4. 'direction' → logprob: -7.572216033935547
    5. '  ' → logprob: -8.822216033935547
    6. 'max' → logprob: -9.197216033935547
    7. ' direction' → logprob: -9.572216033935547
    8. ' max' → logprob: -9.697216033935547
    9. 'not' → logprob: -9.822216033935547
    10. ' ' → logprob: -9.947216033935547

Token 224: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0017885866109281778
    2. ':' → logprob: -7.00178861618042
    3. '>' → logprob: -7.62678861618042
    4. ' ==' → logprob: -8.376788139343262
    5. '>=' → logprob: -9.376788139343262
    6. '!=' → logprob: -10.376788139343262
    7. 'not' → logprob: -11.126788139343262
    8. '<' → logprob: -11.876788139343262
    9. '==-' → logprob: -12.001788139343262
    10. '=='' → logprob: -12.126788139343262

Token 225: ' "' (ID: 392)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5645925998687744
    2. ''' → logprob: -1.3145925998687744
    3. '"' → logprob: -2.4395925998687744
    4. '0' → logprob: -2.6895925998687744
    5. '-' → logprob: -5.189592361450195
    6. '">' → logprob: -7.189592361450195
    7. ''>' → logprob: -8.189592361450195
    8. ''+' → logprob: -8.564592361450195
    9. ''<' → logprob: -8.814592361450195
    10. '"+"' → logprob: -8.814592361450195

Token 226: 'r' (ID: 81)
  Prédit: 'up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.7566866278648376
    2. 'asc' → logprob: -1.1316866874694824
    3. 'clock' → logprob: -3.0066866874694824
    4. 'counter' → logprob: -3.0066866874694824
    5. 'ascending' → logprob: -3.5066866874694824
    6. 'down' → logprob: -4.131686687469482
    7. 'cw' → logprob: -4.256686687469482
    8. 'cc' → logprob: -4.631686687469482
    9. '1' → logprob: -4.631686687469482
    10. 'desc' → logprob: -4.881686687469482

Token 227: '":
' (ID: 9213)
  Prédit: 'ight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ight' → logprob: -0.29239270091056824
    2. '"' → logprob: -2.0423927307128906
    3. '":' → logprob: -2.4173927307128906
    4. 'ound' → logprob: -4.167392730712891
    5. 'eturn' → logprob: -4.292392730712891
    6. 'e' → logprob: -6.917392730712891
    7. '":
' → logprob: -7.667392730712891
    8. '">' → logprob: -7.667392730712891
    9. 'ef' → logprob: -8.29239273071289
    10. 'ange' → logprob: -8.41739273071289

Token 228: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35258936882019043
    2. '   ' → logprob: -1.2275893688201904
    3. ':' → logprob: -5.6025896072387695
    4. '     ' → logprob: -8.85258960723877
    5. '           ' → logprob: -9.22758960723877
    6. '      ' → logprob: -9.97758960723877
    7. ':return' → logprob: -9.97758960723877
    8. 'return' → logprob: -10.60258960723877
    9. '    ' → logprob: -10.85258960723877
    10. ':
' → logprob: -11.22758960723877

Token 229: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.095365971326828
    2. '           ' → logprob: -2.9703660011291504
    3. '   ' → logprob: -3.8453660011291504
    4. '       ' → logprob: -4.09536600112915
    5. 'if' → logprob: -7.22036600112915
    6. 'c' → logprob: -7.59536600112915
    7. 'max' → logprob: -7.84536600112915
    8. '         ' → logprob: -11.845365524291992
    9. ' return' → logprob: -12.845365524291992
    10. 'compare' → logprob: -12.970365524291992

Token 230: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0004946522531099617
    2. 'max' → logprob: -7.625494480133057
    3. '(c' → logprob: -12.500494956970215
    4. ' c' → logprob: -13.250494956970215
    5. '   ' → logprob: -14.375494956970215
    6. 'cos' → logprob: -15.250494956970215
    7. 'compare' → logprob: -16.7504940032959
    8. 'True' → logprob: -16.7504940032959
    9. 'False' → logprob: -17.0004940032959
    10. 'min' → logprob: -17.2504940032959

Token 231: ' >=' (ID: 5064)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0010359067237004638
    2. '>=' → logprob: -7.376035690307617
    3. '<' → logprob: -8.251035690307617
    4. '<=' → logprob: -9.001035690307617
    5. 'max' → logprob: -11.626035690307617
    6. ' >' → logprob: -12.126035690307617
    7. '>`' → logprob: -12.376035690307617
    8. '>
' → logprob: -13.501035690307617
    9. 'if' → logprob: -14.501035690307617
    10. '>a' → logprob: -14.501035690307617

Token 232: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0007263714214786887
    2. '0' → logprob: -7.250726222991943
    3. ' max' → logprob: -11.375726699829102
    4. 'cos' → logprob: -12.375726699829102
    5. 'c' → logprob: -15.625726699829102
    6. '	max' → logprob: -16.1257266998291
    7. '.max' → logprob: -16.3757266998291
    8. '-' → logprob: -16.7507266998291
    9. ' ' → logprob: -17.0007266998291
    10. '   ' → logprob: -17.5007266998291

Token 233: 'cos' (ID: 10732)
  Prédit: 'cos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cos' → logprob: -0.0001916200271807611
    2. '.cos' → logprob: -8.625191688537598
    3. '_cos' → logprob: -11.875191688537598
    4. '*cos' → logprob: -13.500191688537598
    5. 'co' → logprob: -13.750191688537598
    6. ' cos' → logprob: -13.875191688537598
    7. 'c' → logprob: -14.250191688537598
    8. 'cost' → logprob: -15.250191688537598
    9. '   ' → logprob: -15.375191688537598
    10. '       ' → logprob: -15.750191688537598

Token 234: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00019138160860165954
    2. '       ' → logprob: -8.875191688537598
    3. ':return' → logprob: -10.875191688537598
    4. ':' → logprob: -11.375191688537598
    5. '  ' → logprob: -12.250191688537598
    6. '           ' → logprob: -12.625191688537598
    7. 'return' → logprob: -12.750191688537598
    8. 'else' → logprob: -12.750191688537598
    9. '```' → logprob: -12.750191688537598
    10. 'def' → logprob: -14.125191688537598

Token 235: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006072447285987437
    2. 'def' → logprob: -7.500607013702393
    3. '```' → logprob: -10.25060749053955
    4. '       ' → logprob: -11.25060749053955
    5. '  ' → logprob: -13.75060749053955
    6. 'else' → logprob: -13.87560749053955
    7. '<|end|>' → logprob: -13.87560749053955
    8. '<|end|>' → logprob: -14.25060749053955
    9. 'return' → logprob: -14.62560749053955
    10. '``' → logprob: -14.87560749053955

Token 236: ' elif' (ID: 9497)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006670377682894468
    2. 'else' → logprob: -5.5066704750061035
    3. 'elif' (adapté à ' elif') → logprob: -6.2566704750061035
    4. 'return' → logprob: -7.7566704750061035
    5. '       ' → logprob: -8.506669998168945
    6. 'if' → logprob: -10.256669998168945
    7. 'elseif' → logprob: -13.131669998168945
    8. '  ' → logprob: -13.881669998168945
    9. '     ' → logprob: -14.131669998168945
    10. '    ' → logprob: -14.881669998168945

Token 237: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.00038288687937892973
    2. ' direction' → logprob: -7.875382900238037
    3. '(direction' → logprob: -14.000382423400879
    4. '   ' → logprob: -14.000382423400879
    5. '.direction' → logprob: -14.125382423400879
    6. '_direction' → logprob: -15.125382423400879
    7. '  ' → logprob: -16.750383377075195
    8. 'directive' → logprob: -17.750383377075195
    9. 'c' → logprob: -18.500383377075195
    10. ' ' → logprob: -18.625383377075195

Token 238: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.04310161620378494
    2. ' ==' → logprob: -3.1681015491485596
    3. '=="' → logprob: -9.29310131072998
    4. '=='' → logprob: -11.66810131072998
    5. '   ' → logprob: -14.54310131072998
    6. ' ' → logprob: -14.91810131072998
    7. '==
' → logprob: -15.04310131072998
    8. '  ' → logprob: -15.29310131072998
    9. '==-' → logprob: -15.66810131072998
    10. '.startswith' → logprob: -16.418102264404297

Token 239: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -4.5491004129871726e-05
    2. '"L' → logprob: -10.250045776367188
    3. '“' → logprob: -12.750045776367188
    4. ' "' → logprob: -13.500045776367188
    5. ''l' → logprob: -13.500045776367188
    6. '"d' → logprob: -13.625045776367188
    7. '"x' → logprob: -13.625045776367188
    8. '""' → logprob: -14.500045776367188
    9. '"a' → logprob: -14.750045776367188
    10. '   ' → logprob: -15.125045776367188

Token 240: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -2.935296834039036e-06
    2. '"' → logprob: -12.87500286102295
    3. ' l' → logprob: -16.000003814697266
    4. 'g' → logprob: -16.500003814697266
    5. 'r' → logprob: -17.000003814697266
    6. 'c' → logprob: -18.500003814697266
    7. 'b' → logprob: -18.625003814697266
    8. '"<' → logprob: -18.625003814697266
    9. '"L' → logprob: -19.000003814697266
    10. 's' → logprob: -19.000003814697266

Token 241: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.7937039136886597
    2. '       ' → logprob: -1.5437039136886597
    3. '":
' → logprob: -1.5437039136886597
    4. ':
' → logprob: -3.168704032897949
    5. '   ' → logprob: -3.918704032897949
    6. ':' → logprob: -4.293704032897949
    7. '':
' → logprob: -4.293704032897949
    8. '':' → logprob: -4.293704032897949
    9. '           ' → logprob: -5.043704032897949
    10. '<' → logprob: -5.793704032897949

Token 242: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030468814074993134
    2. 'return' → logprob: -5.878046989440918
    3. '   ' → logprob: -8.378046989440918
    4. '     ' → logprob: -12.503046989440918
    5. '      ' → logprob: -12.503046989440918
    6. '           ' → logprob: -12.753046989440918
    7. '        ' → logprob: -14.628046989440918
    8. ' return' → logprob: -14.753046989440918
    9. ':return' → logprob: -15.378046989440918
    10. '```' → logprob: -15.503046989440918

Token 243: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.07987650483846664
    2. '       ' → logprob: -2.57987642288208
    3. '   ' → logprob: -6.95487642288208
    4. 'c' → logprob: -10.954876899719238
    5. ' return' → logprob: -11.579876899719238
    6. '     ' → logprob: -12.954876899719238
    7. '      ' → logprob: -13.704876899719238
    8. '           ' → logprob: -14.204876899719238
    9. '	return' → logprob: -14.829876899719238
    10. ':return' → logprob: -15.579876899719238

Token 244: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -5.512236498361744e-07
    2. ' c' → logprob: -14.500000953674316
    3. 'not' → logprob: -17.875
    4. '   ' → logprob: -19.875
    5. '	c' → logprob: -20.875
    6. '(c' → logprob: -21.375
    7. '       ' → logprob: -23.375
    8. '_c' → logprob: -23.375
    9. '.c' → logprob: -24.0
    10. 'd' → logprob: -24.0

Token 245: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.16025732457637787
    2. '<' → logprob: -1.910257339477539
    3. '>=' → logprob: -11.160257339477539
    4. ' <=' → logprob: -11.785257339477539
    5. '>' → logprob: -12.160257339477539
    6. '<a' → logprob: -13.285257339477539
    7. '<<' → logprob: -13.535257339477539
    8. '≤' → logprob: -14.285257339477539
    9. ' <' → logprob: -15.160257339477539
    10. '<
' → logprob: -15.285257339477539

Token 246: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -7.584239938296378e-06
    2. '-' → logprob: -12.500007629394531
    3. '-max' → logprob: -12.625007629394531
    4. ' max' → logprob: -14.500007629394531
    5. '.max' → logprob: -17.87500762939453
    6. '	max' → logprob: -18.00000762939453
    7. 'min' → logprob: -18.12500762939453
    8. '0' → logprob: -19.00000762939453
    9. '(max' → logprob: -19.75000762939453
    10. '-m' → logprob: -20.50000762939453

Token 247: 'cos' (ID: 10732)
  Prédit: 'cos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cos' → logprob: -2.4391956685576588e-05
    2. '.cos' → logprob: -11.000024795532227
    3. '_cos' → logprob: -12.500024795532227
    4. 'co' → logprob: -13.500024795532227
    5. ' cos' → logprob: -13.750024795532227
    6. '*cos' → logprob: -15.000024795532227
    7. 'cost' → logprob: -15.625024795532227
    8. 'os' → logprob: -16.000024795532227
    9. '   ' → logprob: -16.000024795532227
    10. 'Cos' → logprob: -16.125024795532227

Token 248: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006859870045445859
    2. '```' → logprob: -8.250685691833496
    3. '<|end|>' → logprob: -8.625685691833496
    4. '  ' → logprob: -9.625685691833496
    5. '       ' → logprob: -9.625685691833496
    6. '<|end|>' → logprob: -10.375685691833496
    7. 'def' → logprob: -10.750685691833496
    8. '    
' → logprob: -11.375685691833496
    9. '    ' → logprob: -11.375685691833496
    10. 'else' → logprob: -12.000685691833496

Token 249: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010900551453232765
    2. 'def' → logprob: -4.635900497436523
    3. '```' → logprob: -7.010900497436523
    4. '       ' → logprob: -8.760900497436523
    5. '<|end|>' → logprob: -10.760900497436523
    6. '  ' → logprob: -11.385900497436523
    7. '    
' → logprob: -11.385900497436523
    8. 'return' → logprob: -12.010900497436523
    9. 'else' → logprob: -12.135900497436523
    10. '<|end|>' → logprob: -12.260900497436523

Token 250: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002187256934121251
    2. '```' → logprob: -7.377187252044678
    3. 'return' (adapté à ' return') → logprob: -7.877187252044678
    4. '       ' → logprob: -7.877187252044678
    5. 'else' → logprob: -8.127187728881836
    6. 'def' → logprob: -8.377187728881836
    7. 'elif' → logprob: -9.627187728881836
    8. '<|end|>' → logprob: -9.877187728881836
    9. '  ' → logprob: -10.127187728881836
    10. ':return' → logprob: -10.252187728881836

Token 251: ' False' (ID: 7983)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.045581307262182236
    2. ' None' → logprob: -3.295581340789795
    3. '0' → logprob: -5.420581340789795
    4. 'c' → logprob: -6.670581340789795
    5. ' ' → logprob: -6.795581340789795
    6. 'False' → logprob: -7.545581340789795
    7. 'none' → logprob: -10.045580863952637
    8. '_none' → logprob: -10.295580863952637
    9. ' c' → logprob: -10.545580863952637
    10. ' False' → logprob: -10.920580863952637

Token 252: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.381237655878067
    2. '   ' → logprob: -1.5062376260757446
    3. '```' → logprob: -2.381237745285034
    4. '<|end|>' → logprob: -6.631237506866455
    5. 'return' → logprob: -7.506237506866455
    6. ':def' → logprob: -9.006237983703613
    7. '`' → logprob: -9.131237983703613
    8. '#' → logprob: -9.131237983703613
    9. '<|end|>' → logprob: -9.381237983703613
    10. '       ' → logprob: -9.756237983703613

Token 253: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4098013639450073
    2. '   ' → logprob: -1.1598013639450073
    3. '```' → logprob: -4.534801483154297
    4. '#' → logprob: -5.284801483154297
    5. 'return' → logprob: -5.534801483154297
    6. 'pass' → logprob: -6.659801483154297
    7. 'if' → logprob: -8.284801483154297
    8. 'print' → logprob: -8.409801483154297
    9. 'sys' → logprob: -8.784801483154297
    10. 'import' → logprob: -8.909801483154297

Token 254: ' update' (ID: 4027)
  Prédit: 'compare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compare' → logprob: -0.20324252545833588
    2. 'get' → logprob: -3.328242540359497
    3. 'find' → logprob: -3.453242540359497
    4. 'calculate' → logprob: -3.828242540359497
    5. 'is' → logprob: -4.078242301940918
    6. 'sort' → logprob: -4.453242301940918
    7. 'main' → logprob: -4.703242301940918
    8. 'process' → logprob: -4.703242301940918
    9. 'parse' → logprob: -4.953242301940918
    10. 'read' → logprob: -4.953242301940918

Token 255: '_max' (ID: 13731)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.08192073553800583
    2. '_max' → logprob: -3.081920623779297
    3. '_direction' → logprob: -4.331920623779297
    4. '_cos' → logprob: -5.081920623779297
    5. '_point' → logprob: -5.456920623779297
    6. '_' → logprob: -5.956920623779297
    7. '_angle' → logprob: -7.081920623779297
    8. '_state' → logprob: -7.206920623779297
    9. '_vector' → logprob: -7.331920623779297
    10. '_update' → logprob: -7.456920623779297

Token 256: 'cos' (ID: 10732)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.0384431816637516
    2. '_cos' → logprob: -3.913443088531494
    3. 'max' → logprob: -4.413443088531494
    4. 'cos' → logprob: -5.788443088531494
    5. '_' → logprob: -6.913443088531494
    6. '(max' → logprob: -8.163443565368652
    7. '_m' → logprob: -8.413443565368652
    8. '<|end|>' → logprob: -8.538443565368652
    9. '_MAX' → logprob: -8.663443565368652
    10. ' max' → logprob: -9.413443565368652

Token 257: '(c' (ID: 2410)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.4189106225967407
    2. '(c' → logprob: -1.9189106225967407
    3. '(max' → logprob: -1.9189106225967407
    4. '(' → logprob: -3.293910503387451
    5. '()' → logprob: -5.543910503387451
    6. '(:' → logprob: -5.918910503387451
    7. '(*' → logprob: -6.418910503387451
    8. '(n' → logprob: -7.418910503387451
    9. '(...' → logprob: -7.793910503387451
    10. '(_:' → logprob: -7.918910503387451

Token 258: ',' (ID: 11)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.052146926522254944
    2. ',' → logprob: -3.1771469116210938
    3. '):' → logprob: -5.427146911621094
    4. '):
' → logprob: -6.052146911621094
    5. '   ' → logprob: -6.802146911621094
    6. ',max' → logprob: -8.677146911621094
    7. 'osm' → logprob: -8.802146911621094
    8. 'osen' → logprob: -8.927146911621094
    9. 'oso' → logprob: -9.802146911621094
    10. 'om' → logprob: -9.802146911621094

Token 259: ' direction' (ID: 9262)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -5.512236498361744e-07
    2. ' max' → logprob: -15.000000953674316
    3. 'current' → logprob: -16.75
    4. 'maximum' → logprob: -17.875
    5. ',max' → logprob: -18.5
    6. 'c' → logprob: -18.5
    7. '	max' → logprob: -19.125
    8. 'direction' → logprob: -19.625
    9. 'm' → logprob: -20.0
    10. '_max' → logprob: -20.125

Token 260: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.319595068693161
    2. '):
' → logprob: -1.3195950984954834
    3. '   ' → logprob: -5.444594860076904
    4. ',' → logprob: -6.819594860076904
    5. '):

' → logprob: -7.319594860076904
    6. ')' → logprob: -8.944595336914062
    7. '):
' → logprob: -9.319595336914062
    8. '       ' → logprob: -11.694595336914062
    9. ''):' → logprob: -13.069595336914062
    10. '"):' → logprob: -13.319595336914062

Token 261: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.676981345459353e-06
    2. 'return' → logprob: -12.750005722045898
    3. '  ' → logprob: -13.750005722045898
    4. 'if' → logprob: -13.875005722045898
    5. '       ' → logprob: -15.750005722045898
    6. '```' → logprob: -16.0000057220459
    7. 'def' → logprob: -16.1250057220459
    8. ' ' → logprob: -16.7500057220459
    9. 'pass' → logprob: -16.7500057220459
    10. '    ' → logprob: -16.8750057220459

Token 262: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07610811293125153
    2. 'if' → logprob: -3.32610821723938
    3. 'return' (adapté à ' return') → logprob: -3.45110821723938
    4. 'global' → logprob: -5.826107978820801
    5. 'max' → logprob: -5.951107978820801
    6. 'pass' → logprob: -9.4511079788208
    7. '#' → logprob: -13.0761079788208
    8. '  ' → logprob: -13.2011079788208
    9. '```' → logprob: -13.3261079788208
    10. 'print' → logprob: -14.5761079788208

Token 263: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.008906804025173187
    2. 'max' → logprob: -4.758906841278076
    3. '(c' → logprob: -8.383906364440918
    4. '0' → logprob: -10.133906364440918
    5. '1' → logprob: -12.133906364440918
    6. '-' → logprob: -12.383906364440918
    7. ' c' → logprob: -12.508906364440918
    8. '   ' → logprob: -12.758906364440918
    9. 'cos' → logprob: -13.133906364440918
    10. '{"' → logprob: -13.633906364440918

Token 264: '

' (ID: 279)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01465208176523447
    2. ' if' → logprob: -4.764652252197266
    3. 'max' → logprob: -6.389652252197266
    4. '   ' → logprob: -6.514652252197266
    5. 'def' → logprob: -7.014652252197266
    6. '*' → logprob: -7.139652252197266
    7. '**' → logprob: -8.014652252197266
    8. '<|end|>' → logprob: -8.389652252197266
    9. '<|end|>' → logprob: -9.014652252197266
    10. '如果' → logprob: -9.139652252197266

Token 265: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.050837788730859756
    2. '   ' → logprob: -3.050837755203247
    3. '```' → logprob: -6.550837993621826
    4. 'c' → logprob: -8.175837516784668
    5. 'return' → logprob: -8.925837516784668
    6. '#' → logprob: -8.925837516784668
    7. 'max' → logprob: -9.925837516784668
    8. '`' → logprob: -10.300837516784668
    9. 'if' → logprob: -10.550837516784668
    10. '<|end|>' → logprob: -10.800837516784668

Token 266: ' next' (ID: 2613)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.0004299540014471859
    2. 'max' → logprob: -8.0004301071167
    3. 'compare' → logprob: -10.1254301071167
    4. ' update' → logprob: -11.2504301071167
    5. 'return' → logprob: -11.3754301071167
    6. 'calculate' → logprob: -12.5004301071167
    7. 'get' → logprob: -12.6254301071167
    8. '   ' → logprob: -13.1254301071167
    9. 'increment' → logprob: -13.6254301071167
    10. 'parse' → logprob: -13.7504301071167

Token 267: '_point' (ID: 15466)
  Prédit: '_token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_token' → logprob: -0.004126842133700848
    2. '_point' → logprob: -6.004127025604248
    3. '_def' → logprob: -8.12912654876709
    4. 'token' → logprob: -8.25412654876709
    5. '()' → logprob: -8.37912654876709
    6. '_function' → logprob: -8.75412654876709
    7. '_tokens' → logprob: -8.75412654876709
    8. '_' → logprob: -9.00412654876709
    9. '_max' → logprob: -9.62912654876709
    10. 'Token' → logprob: -9.62912654876709

Token 268: '(d' (ID: 2572)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.033366844058036804
    2. '(:' → logprob: -4.408366680145264
    3. '()' → logprob: -4.533366680145264
    4. '(' → logprob: -4.783366680145264
    5. 'def' → logprob: -7.908366680145264
    6. '(":' → logprob: -8.158367156982422
    7. '(':' → logprob: -8.283367156982422
    8. '(_:' → logprob: -8.908367156982422
    9. '(`' → logprob: -9.658367156982422
    10. ':' → logprob: -10.033367156982422

Token 269: ',' (ID: 11)
  Prédit: 'irection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irection' → logprob: -0.04866514727473259
    2. 'ef' → logprob: -3.0486650466918945
    3. '):' → logprob: -10.798665046691895
    4. 'irect' → logprob: -11.048665046691895
    5. 'irectional' → logprob: -11.298665046691895
    6. 'irections' → logprob: -11.548665046691895
    7. 'IRECTION' → logprob: -12.798665046691895
    8. 'irectory' → logprob: -12.923665046691895
    9. ',' → logprob: -13.173665046691895
    10. 'def' → logprob: -13.173665046691895

Token 270: ' p' (ID: 275)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.12203207612037659
    2. 'p' → logprob: -2.8720321655273438
    3. 'point' → logprob: -3.4970321655273438
    4. 'points' → logprob: -3.8720321655273438
    5. 'n' → logprob: -5.122032165527344
    6. 'max' → logprob: -7.997032165527344
    7. 'c' → logprob: -8.122032165527344
    8. 'd' → logprob: -8.122032165527344
    9. 'irection' → logprob: -9.872032165527344
    10. 'e' → logprob: -10.372032165527344

Token 271: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3998253345489502
    2. ',' → logprob: -1.1498253345489502
    3. '):
' → logprob: -4.524825096130371
    4. ')' → logprob: -6.524825096130371
    5. '   ' → logprob: -8.024825096130371
    6. '):

' → logprob: -9.274825096130371
    7. '),' → logprob: -10.524825096130371
    8. '):
' → logprob: -11.024825096130371
    9. ',)' → logprob: -11.274825096130371
    10. ',p' → logprob: -11.274825096130371

Token 272: ' max' (ID: 2999)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.12919162213802338
    2. 'max' → logprob: -3.0041916370391846
    3. 'n' → logprob: -3.2541916370391846
    4. 'c' → logprob: -4.2541913986206055
    5. 'd' → logprob: -4.7541913986206055
    6. 'points' → logprob: -5.1291913986206055
    7. 'q' → logprob: -7.0041913986206055
    8. 'p' → logprob: -7.3791913986206055
    9. 'next' → logprob: -7.5041913986206055
    10. 'point' → logprob: -7.7541913986206055

Token 273: 'cos' (ID: 10732)
  Prédit: 'cos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cos' → logprob: -2.8325677703833207e-05
    2. 'c' → logprob: -11.125028610229492
    3. 'co' → logprob: -12.000028610229492
    4. '_cos' → logprob: -12.625028610229492
    5. '.cos' → logprob: -12.875028610229492
    6. ' cos' → logprob: -14.500028610229492
    7. 'max' → logprob: -15.000028610229492
    8. 'cost' → logprob: -15.625028610229492
    9. '*cos' → logprob: -16.125028610229492
    10. '```' → logprob: -16.625028610229492

Token 274: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23427583277225494
    2. '):' → logprob: -1.6092758178710938
    3. '):
' → logprob: -4.859275817871094
    4. '   ' → logprob: -7.234275817871094
    5. '):

' → logprob: -8.734275817871094
    6. ')' → logprob: -8.734275817871094
    7. ',c' → logprob: -11.859275817871094
    8. '):
' → logprob: -11.859275817871094
    9. '),' → logprob: -12.609275817871094
    10. ')):' → logprob: -13.109275817871094

Token 275: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -2.6895233531831764e-05
    2. 'c' → logprob: -10.87502670288086
    3. 'd' → logprob: -12.75002670288086
    4. ' direction' → logprob: -12.87502670288086
    5. 'dir' → logprob: -13.50002670288086
    6. '   ' → logprob: -14.25002670288086
    7. 'dire' → logprob: -16.50002670288086
    8. '.direction' → logprob: -16.75002670288086
    9. '_direction' → logprob: -16.87502670288086
    10. 'n' → logprob: -17.62502670288086

Token 276: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.025377558544278145
    2. '):
' → logprob: -3.7753775119781494
    3. '   ' → logprob: -6.2753777503967285
    4. ',' → logprob: -9.02537727355957
    5. '):

' → logprob: -9.27537727355957
    6. ')' → logprob: -10.65037727355957
    7. '):
' → logprob: -12.15037727355957
    8. ''):' → logprob: -14.02537727355957
    9. '"):' → logprob: -14.02537727355957
    10. ':' → logprob: -14.15037727355957

Token 277: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.7133641196996905e-05
    2. '```' → logprob: -11.62502670288086
    3. 'return' → logprob: -12.00002670288086
    4. 'pass' → logprob: -12.00002670288086
    5. '  ' → logprob: -12.50002670288086
    6. 'def' → logprob: -14.50002670288086
    7. '       ' → logprob: -14.62502670288086
    8. '    ' → logprob: -14.87502670288086
    9. '    
' → logprob: -15.00002670288086
    10. ' ' → logprob: -16.00002670288086

Token 278: ' q' (ID: 2335)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6772857904434204
    2. 'return' → logprob: -0.9272857904434204
    3. 'pass' → logprob: -3.302285671234131
    4. 'c' → logprob: -3.552285671234131
    5. 'if' → logprob: -3.677285671234131
    6. '#' → logprob: -6.052285671234131
    7. 'max' → logprob: -6.302285671234131
    8. 'point' → logprob: -7.052285671234131
    9. 'p' → logprob: -9.302286148071289
    10. 'update' → logprob: -9.302286148071289

Token 279: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7315811514854431
    2. '=' → logprob: -1.106581211090088
    3. ' =' → logprob: -1.731581211090088
    4. 'return' → logprob: -5.356581211090088
    5. 'u' → logprob: -6.356581211090088
    6. '  ' → logprob: -6.981581211090088
    7. '    ' → logprob: -7.231581211090088
    8. '=q' → logprob: -7.481581211090088
    9. ',' → logprob: -7.606581211090088
    10. 'def' → logprob: -7.856581211090088

Token 280: ' None' (ID: 4662)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.4938211739063263
    2. '[]' → logprob: -2.118821144104004
    3. 'read' → logprob: -2.618821144104004
    4. 'subtract' → logprob: -2.618821144104004
    5. 'p' → logprob: -3.243821144104004
    6. 'parse' → logprob: -3.368821144104004
    7. 'sorted' → logprob: -4.493821144104004
    8. 'd' → logprob: -4.493821144104004
    9. '   ' → logprob: -4.618821144104004
    10. 'point' → logprob: -5.743821144104004

Token 281: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001457139616832137
    2. 'q' → logprob: -7.376457214355469
    3. 'if' → logprob: -8.126457214355469
    4. '    
' → logprob: -8.626457214355469
    5. 'def' → logprob: -9.251457214355469
    6. '```' → logprob: -9.251457214355469
    7. 'return' → logprob: -9.876457214355469
    8. '       ' → logprob: -10.376457214355469
    9. '  ' → logprob: -11.126457214355469
    10. '#' → logprob: -11.251457214355469

Token 282: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00017529279284644872
    2. '```' → logprob: -9.250175476074219
    3. '    
' → logprob: -10.500175476074219
    4. 'q' → logprob: -11.125175476074219
    5. '       ' → logprob: -11.750175476074219
    6. 'return' → logprob: -12.000175476074219
    7. '    ' → logprob: -12.250175476074219
    8. 'if' → logprob: -12.250175476074219
    9. '  ' → logprob: -12.250175476074219
    10. 'def' → logprob: -12.625175476074219

Token 283: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009493976831436157
    2. 'if' → logprob: -5.384493827819824
    3. '#' → logprob: -6.009493827819824
    4. 'return' → logprob: -6.634493827819824
    5. 'q' → logprob: -7.009493827819824
    6. '```' → logprob: -9.634493827819824
    7. 'c' → logprob: -10.509493827819824
    8. '  ' → logprob: -11.009493827819824
    9. 'for' (adapté à ' for') → logprob: -11.134493827819824
    10. 'while' → logprob: -11.259493827819824

Token 284: ' i' (ID: 575)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.14320585131645203
    2. ' point' → logprob: -2.2682058811187744
    3. '_' → logprob: -3.8932058811187744
    4. ' _' → logprob: -5.768205642700195
    5. '_point' → logprob: -5.768205642700195
    6. '   ' → logprob: -7.018205642700195
    7. 'p' → logprob: -7.268205642700195
    8. ' p' → logprob: -7.893205642700195
    9. ' in' → logprob: -7.893205642700195
    10. 'in' → logprob: -8.518205642700195

Token 285: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26012349128723145
    2. 'in' → logprob: -1.5101234912872314
    3. ' in' → logprob: -5.010123252868652
    4. ':' → logprob: -6.760123252868652
    5. '       ' → logprob: -8.760123252868652
    6. '    ' → logprob: -10.385123252868652
    7. 'def' → logprob: -10.385123252868652
    8. '_in' → logprob: -10.385123252868652
    9. '  ' → logprob: -11.010123252868652
    10. 'In' → logprob: -11.135123252868652

Token 286: ' xrange' (ID: 92050)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.000954694114625454
    2. ' xrange' → logprob: -7.500954627990723
    3. 'points' → logprob: -8.250954627990723
    4. 'x' → logprob: -9.500954627990723
    5. ' range' → logprob: -10.625954627990723
    6. 'sorted' → logprob: -11.125954627990723
    7. 'read' → logprob: -11.250954627990723
    8. '	range' → logprob: -12.125954627990723
    9. 'rang' → logprob: -13.250954627990723
    10. 'enumer' → logprob: -13.250954627990723

Token 287: '(' (ID: 7)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5770807862281799
    2. '(points' → logprob: -1.2020807266235352
    3. '(' → logprob: -2.202080726623535
    4. '(d' → logprob: -4.952080726623535
    5. '(len' → logprob: -5.577080726623535
    6. '(range' → logprob: -5.702080726623535
    7. '(point' → logprob: -5.952080726623535
    8. '(":' → logprob: -6.077080726623535
    9. '(`' → logprob: -6.577080726623535
    10. '(':' → logprob: -6.827080726623535

Token 288: '1' (ID: 16)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.02236153744161129
    2. 'range' → logprob: -4.897361755371094
    3. 'd' → logprob: -5.022361755371094
    4. 'n' → logprob: -5.147361755371094
    5. 'points' → logprob: -6.147361755371094
    6. '(len' → logprob: -10.147361755371094
    7. '   ' → logprob: -10.522361755371094
    8. '0' → logprob: -10.897361755371094
    9. ' len' → logprob: -12.022361755371094
    10. 'sorted' → logprob: -12.772361755371094

Token 289: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1809418648481369
    2. '   ' → logprob: -2.0559418201446533
    3. '):' → logprob: -3.4309418201446533
    4. '       ' → logprob: -6.055942058563232
    5. '):
' → logprob: -7.055942058563232
    6. 'import' → logprob: -7.805942058563232
    7. '           ' → logprob: -8.305941581726074
    8. '    ' → logprob: -8.305941581726074
    9. ':' → logprob: -8.430941581726074
    10. '0' → logprob: -8.555941581726074

Token 290: ' len' (ID: 4631)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.12701503932476044
    2. 'n' → logprob: -2.1270151138305664
    3. 'len' → logprob: -9.377015113830566
    4. ' d' → logprob: -13.627015113830566
    5. ' n' → logprob: -14.377015113830566
    6. '100' → logprob: -15.877015113830566
    7. '10' → logprob: -16.25201416015625
    8. 'max' → logprob: -16.37701416015625
    9. 'int' → logprob: -16.62701416015625
    10. 'min' → logprob: -17.12701416015625

Token 291: '(d' (ID: 2572)
  Prédit: '(points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(points' → logprob: -1.0280383548888494e-06
    2. '(point' → logprob: -14.375000953674316
    3. '(p' → logprob: -15.250000953674316
    4. '(' → logprob: -16.250001907348633
    5. '(range' → logprob: -16.875001907348633
    6. '(po' → logprob: -18.250001907348633
    7. '(sorted' → logprob: -18.375001907348633
    8. '(pe' → logprob: -18.500001907348633
    9. '(pr' → logprob: -18.625001907348633
    10. '(scores' → logprob: -18.625001907348633

Token 292: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.04396510496735573
    2. ')):
' → logprob: -3.1689651012420654
    3. '))' → logprob: -7.7939653396606445
    4. ')):
' → logprob: -7.7939653396606445
    5. ')' → logprob: -9.543965339660645
    6. '):' → logprob: -10.168965339660645
    7. '));' → logprob: -11.918965339660645
    8. ')-' → logprob: -11.918965339660645
    9. ')+' → logprob: -12.418965339660645
    10. '))+' → logprob: -12.668965339660645

Token 293: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002191660227254033
    2. '   ' → logprob: -6.127191543579102
    3. '     ' → logprob: -13.127191543579102
    4. '           ' → logprob: -13.627191543579102
    5. 'q' → logprob: -13.752191543579102
    6. '      ' → logprob: -14.002191543579102
    7. 'if' → logprob: -14.877191543579102
    8. '    ' → logprob: -15.127191543579102
    9. '        ' → logprob: -15.252191543579102
    10. '```' → logprob: -15.502191543579102

Token 294: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04783216491341591
    2. 'point' → logprob: -3.5478322505950928
    3. 'if' (adapté à ' if') → logprob: -4.047832012176514
    4. '           ' → logprob: -8.172832489013672
    5. 'd' → logprob: -9.047832489013672
    6. 'q' → logprob: -10.672832489013672
    7. 'c' → logprob: -11.297832489013672
    8. '   ' → logprob: -11.547832489013672
    9. 'points' → logprob: -12.047832489013672
    10. 'p' → logprob: -12.797832489013672

Token 295: ' should' (ID: 1757)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09274742752313614
    2. 'should' → logprob: -3.092747449874878
    3. '           ' → logprob: -3.592747449874878
    4. 'compare' → logprob: -4.467747211456299
    5. '   ' → logprob: -6.592747211456299
    6. '         ' → logprob: -6.967747211456299
    7. '        ' → logprob: -7.217747211456299
    8. 'd' → logprob: -7.592747211456299
    9. ' should' → logprob: -8.342747688293457
    10. '          ' → logprob: -9.217747688293457

Token 296: '_continue' (ID: 188911)
  Prédit: '_continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_continue' → logprob: -0.281632661819458
    2. 'continue' → logprob: -1.406632661819458
    3. '   ' → logprob: -8.531632423400879
    4. '	continue' → logprob: -9.281632423400879
    5. 'Continue' → logprob: -9.531632423400879
    6. ' continue' → logprob: -9.656632423400879
    7. '       ' → logprob: -10.906632423400879
    8. '继续' → logprob: -11.031632423400879
    9. '_cont' → logprob: -11.406632423400879
    10. '     ' → logprob: -13.531632423400879

Token 297: '(d' (ID: 2572)
  Prédit: '(point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(point' → logprob: -0.1603226214647293
    2. '(d' → logprob: -1.910322666168213
    3. '(' → logprob: -9.660322189331055
    4. '(points' → logprob: -11.035322189331055
    5. '(p' → logprob: -12.535322189331055
    6. '(line' → logprob: -12.785322189331055
    7. '(q' → logprob: -13.285322189331055
    8. '   ' → logprob: -13.910322189331055
    9. '(Point' → logprob: -14.160322189331055
    10. '(dp' → logprob: -14.410322189331055

Token 298: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00017159747949335724
    2. '[' → logprob: -9.375171661376953
    3. ',' → logprob: -9.750171661376953
    4. '[d' → logprob: -11.250171661376953
    5. '[j' → logprob: -12.250171661376953
    6. '):
' → logprob: -12.500171661376953
    7. '):' → logprob: -12.625171661376953
    8. '[p' → logprob: -14.000171661376953
    9. '[index' → logprob: -14.375171661376953
    10. '[q' → logprob: -15.250171661376953

Token 299: '],' (ID: 2155)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.5765169262886047
    2. ']):
' → logprob: -0.9515169262886047
    3. '][' → logprob: -4.076517105102539
    4. '])[' → logprob: -4.076517105102539
    5. '])):
' → logprob: -4.201517105102539
    6. '])' → logprob: -7.326517105102539
    7. '],' → logprob: -7.326517105102539
    8. ']);' → logprob: -7.951517105102539
    9. ']' → logprob: -7.951517105102539
    10. '-' → logprob: -8.576517105102539

Token 300: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: 0.0
    2. ' p' → logprob: -17.5
    3. '	p' → logprob: -19.875
    4. '   ' → logprob: -21.125
    5. 'q' → logprob: -22.875
    6. '(p' → logprob: -23.5
    7. 'd' → logprob: -23.75
    8. 'point' → logprob: -23.75
    9. ')p' → logprob: -23.75
    10. '<p' → logprob: -23.875

Token 301: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.47643566131591797
    2. '):' → logprob: -0.976435661315918
    3. '):

' → logprob: -6.851435661315918
    4. ')' → logprob: -7.476435661315918
    5. '[' → logprob: -8.226435661315918
    6. ')):' → logprob: -8.476435661315918
    7. ')):
' → logprob: -8.976435661315918
    8. '):
' → logprob: -9.101435661315918
    9. '[]):' → logprob: -12.601435661315918
    10. ']):' → logprob: -12.976435661315918

Token 302: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -9.968312951968983e-06
    2. '       ' → logprob: -12.125009536743164
    3. '         ' → logprob: -13.375009536743164
    4. '          ' → logprob: -13.500009536743164
    5. '               ' → logprob: -13.750009536743164
    6. '            ' → logprob: -15.375009536743164
    7. '             ' → logprob: -16.375009536743164
    8. '   ' → logprob: -16.625009536743164
    9. '        ' → logprob: -17.500009536743164
    10. '		' → logprob: -18.125009536743164

Token 303: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001640546484850347
    2. '               ' → logprob: -7.126640319824219
    3. 'q' → logprob: -7.751640319824219
    4. 'continue' (adapté à ' continue') → logprob: -7.876640319824219
    5. '       ' → logprob: -11.251640319824219
    6. 'return' → logprob: -12.376640319824219
    7. 'c' → logprob: -12.751640319824219
    8. '             ' → logprob: -13.376640319824219
    9. 'if' → logprob: -14.126640319824219
    10. '         ' → logprob: -14.251640319824219

Token 304: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00020270596724003553
    2. '   ' → logprob: -8.625203132629395
    3. '           ' → logprob: -11.000203132629395
    4. '        
' → logprob: -12.875203132629395
    5. '
' → logprob: -13.125203132629395
    6. '      ' → logprob: -14.750203132629395
    7. '               ' → logprob: -15.125203132629395
    8. '     ' → logprob: -15.125203132629395
    9. '         ' → logprob: -15.750203132629395
    10. '        ' → logprob: -15.750203132629395

Token 305: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.625866030342877e-05
    2. '   ' → logprob: -9.375085830688477
    3. '           ' → logprob: -13.625085830688477
    4. '     ' → logprob: -16.500085830688477
    5. '      ' → logprob: -16.750085830688477
    6. '        ' → logprob: -18.125085830688477
    7. '               ' → logprob: -18.250085830688477
    8. '         ' → logprob: -18.500085830688477
    9. '        
' → logprob: -19.125085830688477
    10. '    ' → logprob: -20.000085830688477

Token 306: ' v' (ID: 323)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2352385965641588e-05
    2. '   ' → logprob: -12.000012397766113
    3. 'c' → logprob: -12.875012397766113
    4. '           ' → logprob: -13.125012397766113
    5. 'q' → logprob: -14.500012397766113
    6. 'if' → logprob: -14.750012397766113
    7. '      ' → logprob: -15.375012397766113
    8. '     ' → logprob: -15.625012397766113
    9. '        
' → logprob: -16.000011444091797
    10. '        ' → logprob: -16.375011444091797

Token 307: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10256645083427429
    2. ' =' → logprob: -2.8525664806365967
    3. '   ' → logprob: -4.227566242218018
    4. 'ector' → logprob: -4.352566242218018
    5. '       ' → logprob: -4.977566242218018
    6. '     ' → logprob: -6.227566242218018
    7. '         ' → logprob: -7.102566242218018
    8. '           ' → logprob: -7.477566242218018
    9. '    ' → logprob: -7.852566242218018
    10. '      ' → logprob: -7.977566242218018

Token 308: ' subtract' (ID: 71973)
  Prédit: 'subtract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subtract' → logprob: -0.00010926496179308742
    2. ' subtract' → logprob: -9.500109672546387
    3. '   ' → logprob: -11.250109672546387
    4. 'sub' → logprob: -11.375109672546387
    5. 'vector' → logprob: -11.875109672546387
    6. '.subtract' → logprob: -14.125109672546387
    7. '  ' → logprob: -14.500109672546387
    8. 'Subtract' → logprob: -14.625109672546387
    9. 'd' → logprob: -15.375109672546387
    10. '       ' → logprob: -15.625109672546387

Token 309: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -6.392202976712724e-06
    2. '_POINTS' → logprob: -12.500006675720215
    3. '_pts' → logprob: -13.625006675720215
    4. 'Points' → logprob: -14.250006675720215
    5. '	points' → logprob: -16.3750057220459
    6. '_lines' → logprob: -16.7500057220459
    7. '_point' → logprob: -16.8750057220459
    8. '_particles' → logprob: -16.8750057220459
    9. '_vectors' → logprob: -17.0000057220459
    10. ' Points' → logprob: -17.0000057220459

Token 310: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -1.981667537620524e-06
    2. '(' → logprob: -14.000001907348633
    3. '(a' → logprob: -14.625001907348633
    4. '(p' → logprob: -15.875001907348633
    5. '(v' → logprob: -16.000001907348633
    6. '(c' → logprob: -16.000001907348633
    7. '(b' → logprob: -16.250001907348633
    8. '(q' → logprob: -16.750001907348633
    9. '(e' → logprob: -17.500001907348633
    10. '(f' → logprob: -18.750001907348633

Token 311: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -14.750000953674316
    3. '[j' → logprob: -15.000000953674316
    4. ',' → logprob: -15.750000953674316
    5. '[I' → logprob: -18.375001907348633
    6. '(i' → logprob: -18.875001907348633
    7. '[d' → logprob: -18.875001907348633
    8. '[len' → logprob: -19.250001907348633
    9. '[int' → logprob: -20.250001907348633
    10. '[-' → logprob: -20.500001907348633

Token 312: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0006902746972627938
    2. '][' → logprob: -7.375690460205078
    3. '-' → logprob: -10.250690460205078
    4. '],[' → logprob: -11.125690460205078
    5. '),' → logprob: -12.375690460205078
    6. '],
' → logprob: -12.875690460205078
    7. '},' → logprob: -13.250690460205078
    8. '[' → logprob: -13.375690460205078
    9. ']' → logprob: -14.250690460205078
    10. '`,' → logprob: -14.500690460205078

Token 313: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -6.704273118884885e-07
    2. ' p' → logprob: -14.250000953674316
    3. 'd' → logprob: -18.75
    4. '	p' → logprob: -19.875
    5. 'q' → logprob: -20.125
    6. '(p' → logprob: -21.625
    7. '   ' → logprob: -22.375
    8. '.p' → logprob: -22.375
    9. '<p' → logprob: -23.0
    10. '$p' → logprob: -23.375

Token 314: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.38692334294319153
    2. ')' → logprob: -1.1369233131408691
    3. ')

' → logprob: -10.136923789978027
    4. ')
' → logprob: -12.011923789978027
    5. '[' → logprob: -12.886923789978027
    6. '   ' → logprob: -13.761923789978027
    7. '))
' → logprob: -14.886923789978027
    8. ').' → logprob: -15.011923789978027
    9. ')`' → logprob: -15.136923789978027
    10. ');
' → logprob: -15.386923789978027

Token 315: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.1782583391759545e-05
    2. '           ' → logprob: -10.375031471252441
    3. '   ' → logprob: -14.625031471252441
    4. '         ' → logprob: -17.625032424926758
    5. '      ' → logprob: -18.125032424926758
    6. '     ' → logprob: -18.125032424926758
    7. '        ' → logprob: -18.125032424926758
    8. '               ' → logprob: -19.000032424926758
    9. '        
' → logprob: -19.625032424926758
    10. 'c' → logprob: -19.750032424926758

Token 316: ' c' (ID: 274)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00865286123007536
    2. 'c' (adapté à ' c') → logprob: -4.758652687072754
    3. '           ' → logprob: -11.008652687072754
    4. 'cos' → logprob: -11.008652687072754
    5. '   ' → logprob: -12.383652687072754
    6. '      ' → logprob: -14.758652687072754
    7. '     ' → logprob: -14.883652687072754
    8. '        ' → logprob: -16.25865364074707
    9. '         ' → logprob: -16.88365364074707
    10. 'max' → logprob: -17.13365364074707

Token 317: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018041064962744713
    2. ' =' → logprob: -4.143041133880615
    3. '   ' → logprob: -6.643041133880615
    4. '=os' → logprob: -7.768041133880615
    5. 'os' → logprob: -8.518040657043457
    6. '=c' → logprob: -11.268040657043457
    7. '  ' → logprob: -11.518040657043457
    8. '       ' → logprob: -11.643040657043457
    9. '=o' → logprob: -12.143040657043457
    10. '    ' → logprob: -12.393040657043457

Token 318: ' cosine' (ID: 185421)
  Prédit: 'cos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cos' → logprob: -1.0445127372804563e-05
    2. ' cosine' → logprob: -11.50001049041748
    3. '   ' → logprob: -16.625009536743164
    4. 'c' → logprob: -17.125009536743164
    5. ' cos' → logprob: -17.500009536743164
    6. 'co' → logprob: -17.875009536743164
    7. '.cos' → logprob: -18.000009536743164
    8. '_cos' → logprob: -18.250009536743164
    9. 'vector' → logprob: -18.875009536743164
    10. '*cos' → logprob: -19.625009536743164

Token 319: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.0027166646905243397
    2. '_' → logprob: -7.377716541290283
    3. 'of' → logprob: -7.377716541290283
    4. ' of' → logprob: -8.377717018127441
    5. '_OF' → logprob: -8.502717018127441
    6. '```' → logprob: -8.627717018127441
    7. '<|end|>' → logprob: -8.877717018127441
    8. '   ' → logprob: -9.127717018127441
    9. 'def' → logprob: -9.252717018127441
    10. 'Of' → logprob: -9.377717018127441

Token 320: '_vector' (ID: 29530)
  Prédit: '_vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vector' → logprob: -0.0006384541047737002
    2. 'vector' → logprob: -7.375638484954834
    3. '_point' → logprob: -12.000638008117676
    4. '_VECTOR' → logprob: -13.125638008117676
    5. '.vector' → logprob: -14.375638008117676
    6. ' vector' → logprob: -14.375638008117676
    7. '_vect' → logprob: -14.625638008117676
    8. 'Vector' → logprob: -14.750638008117676
    9. '_vectors' → logprob: -14.750638008117676
    10. '_vec' → logprob: -15.000638008117676

Token 321: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: 0.0
    2. '(' → logprob: -17.75
    3. '(u' → logprob: -21.0
    4. '(n' → logprob: -21.0
    5. '(d' → logprob: -21.25
    6. '(V' → logprob: -21.625
    7. '(e' → logprob: -21.875
    8. '(c' → logprob: -22.125
    9. '(vector' → logprob: -22.125
    10. '(vm' → logprob: -22.125

Token 322: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47438326478004456
    2. ')
' → logprob: -0.9743832349777222
    3. ')

' → logprob: -8.474383354187012
    4. '   ' → logprob: -9.849383354187012
    5. '       ' → logprob: -10.474383354187012
    6. ')
' → logprob: -11.974383354187012
    7. ').' → logprob: -11.974383354187012
    8. '           ' → logprob: -13.599383354187012
    9. '```' → logprob: -14.474383354187012
    10. '         ' → logprob: -15.599383354187012

Token 323: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.1080467781284824e-05
    2. '   ' → logprob: -10.125041007995605
    3. '           ' → logprob: -13.875041007995605
    4. '     ' → logprob: -17.250041961669922
    5. '      ' → logprob: -17.625041961669922
    6. '        ' → logprob: -18.625041961669922
    7. 'if' → logprob: -19.250041961669922
    8. '               ' → logprob: -19.250041961669922
    9. '        
' → logprob: -19.250041961669922
    10. '         ' → logprob: -19.375041961669922

Token 324: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00675551313906908
    2. 'if' (adapté à ' if') → logprob: -5.006755352020264
    3. '   ' → logprob: -10.256755828857422
    4. '           ' → logprob: -13.256755828857422
    5. 'c' → logprob: -14.131755828857422
    6. 'q' → logprob: -14.256755828857422
    7. '     ' → logprob: -14.381755828857422
    8. '      ' → logprob: -14.381755828857422
    9. 'return' → logprob: -14.881755828857422
    10. 'max' → logprob: -15.756755828857422

Token 325: ' compare' (ID: 12221)
  Prédit: 'compare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compare' → logprob: -0.1911870539188385
    2. 'c' → logprob: -2.3161871433258057
    3. ' compare' → logprob: -2.6911871433258057
    4. '       ' → logprob: -5.691186904907227
    5. ' c' → logprob: -6.066186904907227
    6. '   ' → logprob: -6.566186904907227
    7. '           ' → logprob: -8.691186904907227
    8. '_compare' → logprob: -10.066186904907227
    9. 'comparison' → logprob: -10.066186904907227
    10. '.compare' → logprob: -10.191186904907227

Token 326: '_cos' (ID: 152313)
  Prédit: '_cos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cos' → logprob: -2.975612187583465e-05
    2. '_c' → logprob: -10.500029563903809
    3. '_max' → logprob: -14.500029563903809
    4. '_co' → logprob: -15.125029563903809
    5. '.cos' → logprob: -16.250030517578125
    6. '_cost' → logprob: -16.375030517578125
    7. '_cov' → logprob: -16.750030517578125
    8. '_cl' → logprob: -17.000030517578125
    9. '_cod' → logprob: -17.125030517578125
    10. 'cos' → logprob: -17.250030517578125

Token 327: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -2.3915141355246305e-05
    2. 'in' → logprob: -11.50002384185791
    3. 'INE' → logprob: -12.87502384185791
    4. ' ine' → logprob: -13.37502384185791
    5. 'inee' → logprob: -13.50002384185791
    6. '(c' → logprob: -13.62502384185791
    7. ' Ine' → logprob: -13.62502384185791
    8. 'ines' → logprob: -13.75002384185791
    9. 'inine' → logprob: -13.75002384185791
    10. 'ине' → logprob: -14.37502384185791

Token 328: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -15.75
    3. '(C' → logprob: -19.875
    4. '(a' → logprob: -20.875
    5. '©' → logprob: -21.125
    6. '(v' → logprob: -21.25
    7. '(max' → logprob: -21.25
    8. '(d' → logprob: -21.625
    9. '(b' → logprob: -21.875
    10. '	c' → logprob: -22.125

Token 329: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6240566083070007e-06
    2. ',max' → logprob: -13.375001907348633
    3. ',c' → logprob: -17.250001907348633
    4. ' ,' → logprob: -18.250001907348633
    5. 'max' → logprob: -19.250001907348633
    6. '，' → logprob: -20.125001907348633
    7. ',m' → logprob: -20.750001907348633
    8. ',d' → logprob: -21.000001907348633
    9. ',,' → logprob: -21.000001907348633
    10. '   ' → logprob: -21.125001907348633

Token 330: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -9.088346359931165e-07
    2. ' max' → logprob: -14.000000953674316
    3. '.max' → logprob: -19.5
    4. '	max' → logprob: -19.625
    5. '(max' → logprob: -20.125
    6. ',max' → logprob: -21.375
    7. '   ' → logprob: -21.625
    8. '=max' → logprob: -21.75
    9. '[max' → logprob: -23.125
    10. '_max' → logprob: -23.25

Token 331: 'cos' (ID: 10732)
  Prédit: 'cos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cos' → logprob: -2.816093228830141e-06
    2. '.cos' → logprob: -13.25000286102295
    3. 'c' → logprob: -15.12500286102295
    4. 'co' → logprob: -15.12500286102295
    5. '_cos' → logprob: -15.25000286102295
    6. ' cos' → logprob: -15.75000286102295
    7. 'cost' → logprob: -17.000001907348633
    8. 'cor' → logprob: -17.750001907348633
    9. 'cas' → logprob: -18.125001907348633
    10. 'com' → logprob: -18.250001907348633

Token 332: '[' (ID: 58)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -3.6312321753939614e-05
    2. '       ' → logprob: -11.625036239624023
    3. '           ' → logprob: -11.750036239624023
    4. '),' → logprob: -11.875036239624023
    5. '   ' → logprob: -12.625036239624023
    6. '):' → logprob: -12.750036239624023
    7. '               ' → logprob: -13.500036239624023
    8. '):
' → logprob: -13.625036239624023
    9. '`,' → logprob: -14.000036239624023
    10. ' ,' → logprob: -14.000036239624023

Token 333: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006912748795002699
    2. 'i' → logprob: -5.381912708282471
    3. '1' → logprob: -6.881912708282471
    4. '],' → logprob: -7.006912708282471
    5. '   ' → logprob: -9.381913185119629
    6. 'index' → logprob: -9.756913185119629
    7. '```' → logprob: -9.881913185119629
    8. '``' → logprob: -10.006913185119629
    9. '-' → logprob: -10.631913185119629
    10. '),' → logprob: -11.006913185119629

Token 334: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.00026729601086117327
    2. '),' → logprob: -9.000267028808594
    3. '   ' → logprob: -10.250267028808594
    4. '       ' → logprob: -10.750267028808594
    5. '][' → logprob: -10.750267028808594
    6. ']' → logprob: -11.125267028808594
    7. '},' → logprob: -11.875267028808594
    8. '```' → logprob: -12.000267028808594
    9. '``' → logprob: -12.125267028808594
    10. '],[' → logprob: -12.125267028808594

Token 335: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -1.676292231422849e-05
    2. ' direction' → logprob: -11.000017166137695
    3. '.direction' → logprob: -17.125017166137695
    4. '_direction' → logprob: -18.500017166137695
    5. '   ' → logprob: -19.000017166137695
    6. '(direction' → logprob: -19.375017166137695
    7. 'dire' → logprob: -19.625017166137695
    8. 'directory' → logprob: -20.000017166137695
    9. '方向' → logprob: -20.125017166137695
    10. '  ' → logprob: -20.750017166137695

Token 336: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5242491364479065
    2. '):
' → logprob: -0.8992491364479065
    3. '):

' → logprob: -7.399249076843262
    4. ')' → logprob: -8.399249076843262
    5. '):
' → logprob: -8.899249076843262
    6. '       ' → logprob: -9.524249076843262
    7. '   ' → logprob: -10.024249076843262
    8. '           ' → logprob: -11.149249076843262
    9. ')):' → logprob: -11.899249076843262
    10. ')):
' → logprob: -12.149249076843262

Token 337: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.5776860184123507e-06
    2. '       ' → logprob: -13.75000286102295
    3. '               ' → logprob: -14.00000286102295
    4. '         ' → logprob: -15.12500286102295
    5. '          ' → logprob: -15.12500286102295
    6. '            ' → logprob: -16.750001907348633
    7. '             ' → logprob: -17.625001907348633
    8. '		' → logprob: -18.125001907348633
    9. '   ' → logprob: -18.125001907348633
    10. 'return' → logprob: -18.875001907348633

Token 338: ' max' (ID: 2999)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004334102850407362
    2. 'max' (adapté à ' max') → logprob: -5.754333972930908
    3. 'q' → logprob: -6.879333972930908
    4. '       ' → logprob: -9.754334449768066
    5. '               ' → logprob: -9.879334449768066
    6. 'return' → logprob: -11.379334449768066
    7. '         ' → logprob: -13.629334449768066
    8. '   ' → logprob: -13.629334449768066
    9. 'update' → logprob: -13.629334449768066
    10. 'continue' → logprob: -14.004334449768066

Token 339: 'cos' (ID: 10732)
  Prédit: 'cos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cos' → logprob: -1.981667537620524e-06
    2. 'co' → logprob: -13.500001907348633
    3. 'max' → logprob: -15.000001907348633
    4. '_cos' → logprob: -17.000001907348633
    5. '.cos' → logprob: -17.000001907348633
    6. 'cas' → logprob: -17.125001907348633
    7. 'c' → logprob: -17.125001907348633
    8. 'cost' → logprob: -17.500001907348633
    9. 'com' → logprob: -17.875001907348633
    10. ' cos' → logprob: -18.125001907348633

Token 340: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.682846287731081e-05
    2. '.append' → logprob: -10.375066757202148
    3. ' =' → logprob: -10.625066757202148
    4. '=' → logprob: -11.625066757202148
    5. '   ' → logprob: -14.375066757202148
    6. '.update' → logprob: -15.375066757202148
    7. '           ' → logprob: -15.500066757202148
    8. '=[' → logprob: -15.500066757202148
    9. '```' → logprob: -15.625066757202148
    10. '       ' → logprob: -15.875066757202148

Token 341: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.029750484973192215
    2. '0' → logprob: -3.5297505855560303
    3. '2' → logprob: -16.77975082397461
    4. '   ' → logprob: -18.40475082397461
    5. '       ' → logprob: -18.90475082397461
    6. '-' → logprob: -19.77975082397461
    7. ' ' → logprob: -20.02975082397461
    8. '               ' → logprob: -20.27975082397461
    9. '3' → logprob: -20.52975082397461
    10. '           ' → logprob: -20.90475082397461

Token 342: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0033655737061053514
    2. ']=' → logprob: -6.253365516662598
    3. '           ' → logprob: -7.628365516662598
    4. '][' → logprob: -8.128365516662598
    5. '].' → logprob: -8.253365516662598
    6. ']:' → logprob: -8.878365516662598
    7. '   ' → logprob: -9.628365516662598
    8. '       ' → logprob: -9.878365516662598
    9. '],' → logprob: -10.003365516662598
    10. ']]' → logprob: -11.378365516662598

Token 343: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00026383911608718336
    2. ' =' → logprob: -8.625264167785645
    3. '           ' → logprob: -10.125264167785645
    4. '=max' → logprob: -11.125264167785645
    5. '+=' → logprob: -11.375264167785645
    6. '=c' → logprob: -11.625264167785645
    7. '   ' → logprob: -12.375264167785645
    8. '=`' → logprob: -13.375264167785645
    9. '       ' → logprob: -14.125264167785645
    10. 'return' → logprob: -15.000264167785645

Token 344: ' update' (ID: 4027)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.981667537620524e-06
    2. '           ' → logprob: -13.500001907348633
    3. 'update' → logprob: -14.625001907348633
    4. '   ' → logprob: -16.750001907348633
    5. ' c' → logprob: -16.750001907348633
    6. '               ' → logprob: -18.125001907348633
    7. 'max' → logprob: -18.625001907348633
    8. '       ' → logprob: -18.875001907348633
    9. '(c' → logprob: -20.375001907348633
    10. '            ' → logprob: -20.875001907348633

Token 345: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.0006223689415492117
    2. '_cos' → logprob: -7.750622272491455
    3. 'max' → logprob: -8.875622749328613
    4. '_mac' → logprob: -11.250622749328613
    5. '_MAX' → logprob: -11.500622749328613
    6. '	max' → logprob: -12.250622749328613
    7. ' max' → logprob: -12.625622749328613
    8. '_m' → logprob: -12.750622749328613
    9. '   ' → logprob: -13.250622749328613
    10. 'Max' → logprob: -13.375622749328613

Token 346: 'cos' (ID: 10732)
  Prédit: 'cos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cos' → logprob: -1.2664456789934775e-06
    2. 'c' → logprob: -14.625000953674316
    3. 'co' → logprob: -14.875000953674316
    4. '_cos' → logprob: -15.500000953674316
    5. ' cos' → logprob: -15.875000953674316
    6. '.cos' → logprob: -16.875001907348633
    7. 'cost' → logprob: -17.250001907348633
    8. 'cas' → logprob: -17.375001907348633
    9. '*cos' → logprob: -18.750001907348633
    10. 'kos' → logprob: -18.875001907348633

Token 347: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.00023357603640761226
    2. '(max' → logprob: -8.37523365020752
    3. '(' → logprob: -12.87523365020752
    4. '(C' → logprob: -16.250232696533203
    5. '           ' → logprob: -16.500232696533203
    6. '(m' → logprob: -16.625232696533203
    7. '               ' → logprob: -17.750232696533203
    8. '   ' → logprob: -17.875232696533203
    9. 'max' → logprob: -18.625232696533203
    10. '((' → logprob: -18.625232696533203

Token 348: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005114490049891174
    2. ')' → logprob: -8.000511169433594
    3. '           ' → logprob: -8.875511169433594
    4. '               ' → logprob: -11.250511169433594
    5. '       ' → logprob: -12.500511169433594
    6. '   ' → logprob: -12.625511169433594
    7. ',c' → logprob: -12.750511169433594
    8. '[' → logprob: -12.875511169433594
    9. '),' → logprob: -13.250511169433594
    10. ',)' → logprob: -13.250511169433594

Token 349: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -1.9361264946837764e-07
    2. ' direction' → logprob: -16.625
    3. '.direction' → logprob: -18.375
    4. 'max' → logprob: -19.25
    5. '(direction' → logprob: -19.25
    6. 'directory' → logprob: -19.25
    7. 'd' → logprob: -19.375
    8. 'dir' → logprob: -19.625
    9. 'dire' → logprob: -19.625
    10. '_direction' → logprob: -19.875

Token 350: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03736865147948265
    2. '           ' → logprob: -3.9123685359954834
    3. ')
' → logprob: -4.1623687744140625
    4. '       ' → logprob: -6.9123687744140625
    5. '   ' → logprob: -10.412368774414062
    6. ')

' → logprob: -10.662368774414062
    7. '               ' → logprob: -11.037368774414062
    8. '         ' → logprob: -11.287368774414062
    9. ')
' → logprob: -11.787368774414062
    10. '):
' → logprob: -11.912368774414062

Token 351: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3890325427055359
    2. '   ' → logprob: -1.1390326023101807
    3. '       ' → logprob: -6.139032363891602
    4. '               ' → logprob: -14.014032363891602
    5. '         ' → logprob: -14.514032363891602
    6. 'return' → logprob: -15.514032363891602
    7. '     ' → logprob: -15.639032363891602
    8. '          ' → logprob: -15.639032363891602
    9. '  ' → logprob: -16.0140323638916
    10. '             ' → logprob: -17.1390323638916

Token 352: ' q' (ID: 2335)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.130576806142926e-05
    2. 'q' (adapté à ' q') → logprob: -10.625031471252441
    3. '       ' → logprob: -12.000031471252441
    4. '         ' → logprob: -14.875031471252441
    5. '          ' → logprob: -15.625031471252441
    6. '   ' → logprob: -16.250030517578125
    7. '               ' → logprob: -16.375030517578125
    8. '            ' → logprob: -17.375030517578125
    9. '             ' → logprob: -18.500030517578125
    10. '		' → logprob: -19.125030517578125

Token 353: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23731271922588348
    2. '           ' → logprob: -2.2373127937316895
    3. ' =' → logprob: -3.1123127937316895
    4. '   ' → logprob: -3.1123127937316895
    5. '       ' → logprob: -4.2373127937316895
    6. '=None' → logprob: -7.7373127937316895
    7. '         ' → logprob: -7.9873127937316895
    8. '               ' → logprob: -9.362312316894531
    9. '          ' → logprob: -10.112312316894531
    10. '     ' → logprob: -10.362312316894531

Token 354: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.8624639324116288e-06
    2. ' d' → logprob: -13.625001907348633
    3. '   ' → logprob: -14.500001907348633
    4. '       ' → logprob: -17.500001907348633
    5. '	d' → logprob: -18.125001907348633
    6. '    ' → logprob: -18.500001907348633
    7. '     ' → logprob: -18.750001907348633
    8. '  ' → logprob: -18.750001907348633
    9. '           ' → logprob: -19.250001907348633
    10. '(d' → logprob: -19.625001907348633

Token 355: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0073353140614926815
    2. '       ' → logprob: -6.007335186004639
    3. '[d' → logprob: -6.132335186004639
    4. '           ' → logprob: -7.132335186004639
    5. '[n' → logprob: -7.507335186004639
    6. '   ' → logprob: -7.757335186004639
    7. '[' → logprob: -8.132335662841797
    8. '         ' → logprob: -8.882335662841797
    9. 'd' → logprob: -9.132335662841797
    10. '        ' → logprob: -9.507335662841797

Token 356: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002520607551559806
    2. ']
' → logprob: -6.502520561218262
    3. '])' → logprob: -7.127520561218262
    4. '   ' → logprob: -9.502520561218262
    5. ')' → logprob: -10.002520561218262
    6. '])
' → logprob: -10.627520561218262
    7. ']}' → logprob: -11.127520561218262
    8. '       ' → logprob: -11.502520561218262
    9. ')]' → logprob: -11.627520561218262
    10. ']

' → logprob: -11.627520561218262

Token 357: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.790129555156454e-05
    2. '           ' → logprob: -9.625067710876465
    3. 'return' → logprob: -13.750067710876465
    4. '       ' → logprob: -14.250067710876465
    5. '  ' → logprob: -17.12506866455078
    6. '    
' → logprob: -18.87506866455078
    7. '	return' → logprob: -19.37506866455078
    8. '    ' → logprob: -19.75006866455078
    9. ' return' → logprob: -20.12506866455078
    10. '     ' → logprob: -20.12506866455078

Token 358: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001503790495917201
    2. 'return' (adapté à ' return') → logprob: -6.501503944396973
    3. '       ' → logprob: -14.376503944396973
    4. '	return' → logprob: -14.501503944396973
    5. ' return' → logprob: -15.376503944396973
    6. '  ' → logprob: -16.626502990722656
    7. '           ' → logprob: -16.751502990722656
    8. '```' → logprob: -17.876502990722656
    9. '    
' → logprob: -18.251502990722656
    10. '    ' → logprob: -19.501502990722656

Token 359: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0008360736537724733
    2. ' q' → logprob: -7.12583589553833
    3. 'None' → logprob: -10.750836372375488
    4. '(q' → logprob: -12.000836372375488
    5. '	q' → logprob: -12.750836372375488
    6. '   ' → logprob: -14.500836372375488
    7. '.q' → logprob: -15.625836372375488
    8. '_q' → logprob: -15.750836372375488
    9. '[q' → logprob: -16.375835418701172
    10. '=q' → logprob: -17.000835418701172

Token 360: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43359315395355225
    2. '```' → logprob: -1.0585931539535522
    3. 'return' → logprob: -6.433593273162842
    4. '`' → logprob: -6.683593273162842
    5. '<|end|>' → logprob: -7.308593273162842
    6. '       ' → logprob: -7.808593273162842
    7. 'def' → logprob: -8.058592796325684
    8. '``' → logprob: -9.183592796325684
    9. 'q' → logprob: -9.308592796325684
    10. 'None' → logprob: -9.558592796325684

Token 361: 'def' (ID: 1314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08946237713098526
    2. 'q' → logprob: -3.5894622802734375
    3. 'return' → logprob: -3.5894622802734375
    4. '```' → logprob: -3.9644622802734375
    5. 'None' → logprob: -5.5894622802734375
    6. 'def' → logprob: -5.9644622802734375
    7. '       ' → logprob: -6.7144622802734375
    8. 'd' → logprob: -6.8394622802734375
    9. 'p' → logprob: -6.9644622802734375
    10. '#' → logprob: -8.089462280273438

Token 362: ' add' (ID: 1147)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0034282929264009
    2. 'read' → logprob: -7.1284284591674805
    3. 'find' → logprob: -7.8784284591674805
    4. 'get' → logprob: -7.8784284591674805
    5. 'main' → logprob: -8.00342845916748
    6. 'process' → logprob: -8.00342845916748
    7. 'update' → logprob: -8.12842845916748
    8. 'calculate' → logprob: -8.75342845916748
    9. 'is' → logprob: -9.00342845916748
    10. 'sort' → logprob: -9.12842845916748

Token 363: '_to' (ID: 5089)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.005307873710989952
    2. '_point' → logprob: -5.630307674407959
    3. '_' → logprob: -6.880307674407959
    4. '_pts' → logprob: -8.880308151245117
    5. '_e' → logprob: -10.130308151245117
    6. '_vectors' → logprob: -10.755308151245117
    7. '_POINTS' → logprob: -10.755308151245117
    8. '_t' → logprob: -10.880308151245117
    9. '_items' → logprob: -10.880308151245117
    10. '_lines' → logprob: -11.130308151245117

Token 364: '_h' (ID: 3434)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.14865116775035858
    2. '_list' → logprob: -2.148651123046875
    3. '_max' → logprob: -4.648651123046875
    4. '_point' → logprob: -5.523651123046875
    5. '_queue' → logprob: -5.898651123046875
    6. 'points' → logprob: -5.898651123046875
    7. 'list' → logprob: -7.148651123046875
    8. '_result' → logprob: -8.898651123046875
    9. '_history' → logprob: -8.898651123046875
    10. 'max' → logprob: -9.023651123046875

Token 365: 'ull' (ID: 754)
  Prédit: 'elper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elper' → logprob: -1.0390788316726685
    2. 'istory' → logprob: -1.4140788316726685
    3. 'e' → logprob: -2.039078712463379
    4. 'and' → logprob: -2.289078712463379
    5. 'andler' → logprob: -2.289078712463379
    6. 'elp' → logprob: -3.414078712463379
    7. 'andle' → logprob: -3.664078712463379
    8. 'el' → logprob: -6.164078712463379
    9. 'ist' → logprob: -6.914078712463379
    10. '```' → logprob: -6.914078712463379

Token 366: '(h' (ID: 8120)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.045632217079401016
    2. '(' → logprob: -3.7956321239471436
    3. '(:' → logprob: -5.045632362365723
    4. '()' → logprob: -5.295632362365723
    5. '(points' → logprob: -5.420632362365723
    6. '(d' → logprob: -6.420632362365723
    7. '(p' → logprob: -6.670632362365723
    8. '(point' → logprob: -7.295632362365723
    9. '(_:' → logprob: -7.670632362365723
    10. '(c' → logprob: -8.170632362365723

Token 367: 'ull' (ID: 754)
  Prédit: 'ull'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ull' → logprob: -0.0016385273775085807
    2. '```' → logprob: -7.626638412475586
    3. '   ' → logprob: -8.251638412475586
    4. 'u' → logprob: -9.126638412475586
    5. '    ' → logprob: -9.751638412475586
    6. '`' → logprob: -10.251638412475586
    7. '.append' → logprob: -10.314138412475586
    8. '  ' → logprob: -10.376638412475586
    9. 'ul' → logprob: -10.689138412475586
    10. 'ulk' → logprob: -10.876638412475586

Token 368: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03029015101492405
    2. '):' → logprob: -3.530290126800537
    3. '):
' → logprob: -7.905290126800537
    4. '   ' → logprob: -9.780290603637695
    5. ')' → logprob: -11.030290603637695
    6. '=[]' → logprob: -11.280290603637695
    7. '):

' → logprob: -11.280290603637695
    8. '.append' → logprob: -11.280290603637695
    9. '[]):' → logprob: -11.280290603637695
    10. ':' → logprob: -12.280290603637695

Token 369: ' q' (ID: 2335)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.06907805055379868
    2. 'h' → logprob: -2.819077968597412
    3. 'points' → logprob: -5.444077968597412
    4. 'p' → logprob: -6.319077968597412
    5. 'new' → logprob: -8.06907844543457
    6. 'q' → logprob: -8.31907844543457
    7. 'd' → logprob: -8.44407844543457
    8. '):' → logprob: -9.44407844543457
    9. '   ' → logprob: -10.06907844543457
    10. ')' → logprob: -10.69407844543457

Token 370: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.7015369534492493
    2. '):' → logprob: -0.7015369534492493
    3. ',' → logprob: -5.201537132263184
    4. '   ' → logprob: -6.701537132263184
    5. '):

' → logprob: -6.701537132263184
    6. ')' → logprob: -8.076537132263184
    7. '):
' → logprob: -9.826537132263184
    8. '),' → logprob: -11.701537132263184
    9. '       ' → logprob: -12.826537132263184
    10. ')):' → logprob: -12.951537132263184

Token 371: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0280383548888494e-06
    2. 'h' → logprob: -14.125000953674316
    3. '  ' → logprob: -16.000001907348633
    4. '	h' → logprob: -16.500001907348633
    5. '       ' → logprob: -18.750001907348633
    6. '    ' → logprob: -19.375001907348633
    7. ' ' → logprob: -21.250001907348633
    8. '   ' → logprob: -21.375001907348633
    9. '   ' → logprob: -21.750001907348633
    10. 'hul' → logprob: -22.000001907348633

Token 372: ' hull' (ID: 74912)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.25193527340888977
    2. '   ' → logprob: -1.5019352436065674
    3. 'hul' → logprob: -12.126935005187988
    4. '	h' → logprob: -15.501935005187988
    5. ' hull' → logprob: -15.751935005187988
    6. 'return' → logprob: -16.126935958862305
    7. '  ' → logprob: -16.501935958862305
    8. 'hound' → logprob: -16.626935958862305
    9. 'hail' → logprob: -17.001935958862305
    10. '       ' → logprob: -17.376935958862305

Token 373: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007163656409829855
    2. '.' → logprob: -7.750716209411621
    3. '.extend' → logprob: -9.000716209411621
    4. '.add' → logprob: -9.500716209411621
    5. '.push' → logprob: -9.750716209411621
    6. 'append' → logprob: -11.125716209411621
    7. '.pop' → logprob: -12.500716209411621
    8. '.Append' → logprob: -13.000716209411621
    9. '.ap' → logprob: -13.500716209411621
    10. '   ' → logprob: -13.625716209411621

Token 374: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.030065754428505898
    2. '(' → logprob: -3.6550657749176025
    3. '()' → logprob: -6.655065536499023
    4. '(`' → logprob: -7.655065536499023
    5. '("("' → logprob: -7.780065536499023
    6. '('' → logprob: -8.030065536499023
    7. '(h' → logprob: -8.030065536499023
    8. '(...)' → logprob: -8.280065536499023
    9. '((' → logprob: -9.405065536499023
    10. '("' → logprob: -9.655065536499023

Token 375: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0445127372804563e-05
    2. '   ' → logprob: -12.37501049041748
    3. ')
' → logprob: -13.12501049041748
    4. ')`' → logprob: -13.25001049041748
    5. ')

' → logprob: -13.50001049041748
    6. '```' → logprob: -15.00001049041748
    7. '))' → logprob: -16.000009536743164
    8. '})' → logprob: -16.000009536743164
    9. ' )' → logprob: -16.000009536743164
    10. '`)' → logprob: -16.250009536743164

Token 376: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007227851077914238
    2. '   ' → logprob: -5.507227897644043
    3. 'h' → logprob: -6.382227897644043
    4. 'return' → logprob: -7.507227897644043
    5. '```' → logprob: -7.507227897644043
    6. '#' → logprob: -8.507227897644043
    7. '<|end|>' → logprob: -10.132227897644043
    8. 'q' → logprob: -10.257227897644043
    9. 'print' → logprob: -11.007227897644043
    10. '<|end|>' → logprob: -11.257227897644043

Token 377: ' is' (ID: 382)
  Prédit: 'remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'remove' → logprob: -0.1826043277978897
    2. 'final' → logprob: -3.4326043128967285
    3. 'build' → logprob: -3.5576043128967285
    4. 'finish' → logprob: -4.0576043128967285
    5. 'clear' → logprob: -4.3076043128967285
    6. 'compute' → logprob: -4.4326043128967285
    7. 'find' → logprob: -4.6826043128967285
    8. 'calculate' → logprob: -4.6826043128967285
    9. 'create' → logprob: -4.9326043128967285
    10. 'complete' → logprob: -5.4326043128967285

Token 378: '_h' (ID: 3434)
  Prédit: '_end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.3009994626045227
    2. '_h' → logprob: -1.550999402999878
    3. '_full' → logprob: -3.550999402999878
    4. '_empty' → logprob: -4.675999641418457
    5. '_valid' → logprob: -5.925999641418457
    6. '_complete' → logprob: -6.050999641418457
    7. '_point' → logprob: -6.800999641418457
    8. '_done' → logprob: -7.300999641418457
    9. '_conv' → logprob: -7.675999641418457
    10. '_finished' → logprob: -8.175999641418457

Token 379: 'ull' (ID: 754)
  Prédit: 'ull'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ull' → logprob: -7.3458322731312364e-06
    2. 'u' → logprob: -12.750007629394531
    3. 'ul' → logprob: -14.000007629394531
    4. '```' → logprob: -14.250007629394531
    5. 'ulk' → logprob: -14.375007629394531
    6. 'all' → logprob: -15.250007629394531
    7. 'null' → logprob: -15.250007629394531
    8. 'ell' → logprob: -15.500007629394531
    9. '...' → logprob: -15.750007629394531
    10. 'ill' → logprob: -16.00000762939453

Token 380: '_end' (ID: 13707)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0015796130755916238
    2. '(' → logprob: -7.126579761505127
    3. 'def' → logprob: -9.001579284667969
    4. '()' → logprob: -9.251579284667969
    5. '():' → logprob: -9.376579284667969
    6. '_h' → logprob: -9.376579284667969
    7. '_' → logprob: -9.626579284667969
    8. '(n' → logprob: -9.751579284667969
    9. 'h' → logprob: -10.001579284667969
    10. '(d' → logprob: -10.626579284667969

Token 381: '(q' (ID: 21479)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.05783676356077194
    2. '(n' → logprob: -3.5578367710113525
    3. '(h' → logprob: -3.6828367710113525
    4. '(' → logprob: -7.432836532592773
    5. '(p' → logprob: -7.807836532592773
    6. 'def' → logprob: -8.182836532592773
    7. '(def' → logprob: -8.432836532592773
    8. '()' → logprob: -8.557836532592773
    9. '():
' → logprob: -8.682836532592773
    10. '(:' → logprob: -8.932836532592773

Token 382: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.253041535615921
    2. '):
' → logprob: -1.5030415058135986
    3. '):

' → logprob: -7.378041744232178
    4. ',' → logprob: -8.62804126739502
    5. '   ' → logprob: -9.00304126739502
    6. '):
' → logprob: -9.37804126739502
    7. ')' → logprob: -9.37804126739502
    8. 'def' → logprob: -11.87804126739502
    9. ''):' → logprob: -13.12804126739502
    10. ':' → logprob: -13.50304126739502

Token 383: ' d' (ID: 272)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.5761739015579224
    2. 'p' → logprob: -0.8261739015579224
    3. 'point' → logprob: -9.451173782348633
    4. 'points' → logprob: -9.701173782348633
    5. 'd' → logprob: -9.951173782348633
    6. 'n' → logprob: -10.451173782348633
    7. 'direction' → logprob: -11.951173782348633
    8. '   ' → logprob: -13.451173782348633
    9. 'q' → logprob: -13.576173782348633
    10. 'None' → logprob: -13.826173782348633

Token 384: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.34516850113868713
    2. '):' → logprob: -1.3451684713363647
    3. '):
' → logprob: -3.4701685905456543
    4. '):

' → logprob: -9.470168113708496
    5. ',d' → logprob: -9.720168113708496
    6. '[d' → logprob: -9.970168113708496
    7. '   ' → logprob: -10.845168113708496
    8. ')' → logprob: -10.845168113708496
    9. '):
' → logprob: -10.970168113708496
    10. '[' → logprob: -11.345168113708496

Token 385: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.816093228830141e-06
    2. 'return' → logprob: -12.87500286102295
    3. '  ' → logprob: -15.75000286102295
    4. '       ' → logprob: -18.375001907348633
    5. '	return' → logprob: -18.625001907348633
    6. '    ' → logprob: -18.875001907348633
    7. ' return' → logprob: -19.500001907348633
    8. ' ' → logprob: -21.000001907348633
    9. '```' → logprob: -21.875001907348633
    10. '     ' → logprob: -22.000001907348633

Token 386: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.006719163153320551
    2. '   ' → logprob: -5.00671911239624
    3. ' return' → logprob: -13.131719589233398
    4. 'if' → logprob: -13.631719589233398
    5. '	return' → logprob: -14.631719589233398
    6. 'returns' → logprob: -16.6317195892334
    7. 'for' → logprob: -17.3817195892334
    8. '  ' → logprob: -18.0067195892334
    9. '       ' → logprob: -18.7567195892334
    10. 'Return' → logprob: -19.3817195892334

Token 387: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.07341122627258301
    2. 'len' → logprob: -2.698411226272583
    3. '   ' → logprob: -6.448410987854004
    4. 'not' → logprob: -7.073410987854004
    5. ' q' → logprob: -7.448410987854004
    6. 'd' → logprob: -8.323410987854004
    7. ' len' → logprob: -9.323410987854004
    8. '(q' → logprob: -9.698410987854004
    9. '    ' → logprob: -11.323410987854004
    10. '(len' → logprob: -11.448410987854004

Token 388: ' ==' (ID: 951)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.4351162612438202
    2. ' is' → logprob: -1.8101162910461426
    3. '==' → logprob: -2.0601162910461426
    4. 'in' → logprob: -3.6851162910461426
    5. ' in' → logprob: -4.185116291046143
    6. ' not' → logprob: -4.685116291046143
    7. 'not' → logprob: -4.810116291046143
    8. ' ==' → logprob: -5.560116291046143
    9. '   ' → logprob: -9.310115814208984
    10. '[' → logprob: -10.310115814208984

Token 389: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.38721928000450134
    2. 'None' → logprob: -1.1372193098068237
    3. '[]' → logprob: -9.012219429016113
    4. ' None' → logprob: -9.262219429016113
    5. '   ' → logprob: -9.387219429016113
    6. 'none' → logprob: -10.762219429016113
    7. ' d' → logprob: -11.887219429016113
    8. 'null' → logprob: -12.262219429016113
    9. '0' → logprob: -13.262219429016113
    10. '[d' → logprob: -13.512219429016113

Token 390: '[-' (ID: 17503)
  Prédit: '[len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[len' → logprob: -0.6242411732673645
    2. '[i' → logprob: -1.4992411136627197
    3. '[' → logprob: -1.6242411136627197
    4. 'len' → logprob: -3.7492411136627197
    5. '   ' → logprob: -5.249241352081299
    6. '```' → logprob: -5.624241352081299
    7. 'def' → logprob: -6.124241352081299
    8. '#' → logprob: -6.874241352081299
    9. '[:-' → logprob: -7.374241352081299
    10. '[-' → logprob: -7.374241352081299

Token 391: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '2' → logprob: -15.25
    3. ' ' → logprob: -21.0
    4. '１' → logprob: -21.375
    5. '   ' → logprob: -22.625
    6. '0' → logprob: -23.625
    7. '3' → logprob: -24.0
    8. '१' → logprob: -24.125
    9. 'len' → logprob: -24.25
    10. 'def' → logprob: -24.5

Token 392: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00037085101939737797
    2. '])' → logprob: -8.875370979309082
    3. ')]' → logprob: -9.125370979309082
    4. ']}' → logprob: -10.375370979309082
    5. ')' → logprob: -10.500370979309082
    6. ']]' → logprob: -10.500370979309082
    7. '].' → logprob: -11.750370979309082
    8. '```' → logprob: -11.750370979309082
    9. ']:' → logprob: -13.000370979309082
    10. '])]' → logprob: -13.000370979309082

Token 393: 'def' (ID: 1314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10439623892307281
    2. 'return' → logprob: -3.104396343231201
    3. 'def' → logprob: -3.229396343231201
    4. '```' → logprob: -4.604396343231201
    5. 'q' → logprob: -6.979396343231201
    6. 'h' → logprob: -6.979396343231201
    7. 'd' → logprob: -7.104396343231201
    8. 'pass' → logprob: -7.604396343231201
    9. '       ' → logprob: -7.854396343231201
    10. 'print' → logprob: -8.229395866394043

Token 394: ' calc' (ID: 25691)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -1.4790078401565552
    2. 'find' → logprob: -1.9790078401565552
    3. 'read' → logprob: -2.2290077209472656
    4. 'process' → logprob: -2.6040077209472656
    5. 'remove' → logprob: -2.7290077209472656
    6. 'get' → logprob: -2.8540077209472656
    7. 'build' → logprob: -3.1040077209472656
    8. 'h' → logprob: -3.2290077209472656
    9. 'compute' → logprob: -3.3540077209472656
    10. 'update' → logprob: -3.6040077209472656

Token 395: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.022809423506259918
    2. '_area' → logprob: -4.2728095054626465
    3. '_' → logprob: -5.7728095054626465
    4. '_points' → logprob: -6.3978095054626465
    5. 'ulate' → logprob: -6.6478095054626465
    6. '_angle' → logprob: -7.3978095054626465
    7. '_polygon' → logprob: -7.8978095054626465
    8. '_point' → logprob: -8.397809028625488
    9. '_a' → logprob: -9.022809028625488
    10. '_u' → logprob: -9.397809028625488

Token 396: 'ull' (ID: 754)
  Prédit: 'ull'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ull' → logprob: -2.4272752852994017e-05
    2. '   ' → logprob: -12.00002384185791
    3. 'u' → logprob: -12.37502384185791
    4. 'ulk' → logprob: -13.12502384185791
    5. '```' → logprob: -13.25002384185791
    6. 'all' → logprob: -13.62502384185791
    7. 'ul' → logprob: -13.75002384185791
    8. 'e' → logprob: -14.12502384185791
    9. 'ill' → logprob: -14.37502384185791
    10. 'ULL' → logprob: -14.50002384185791

Token 397: '(d' (ID: 2572)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.15136341750621796
    2. '(h' → logprob: -2.2763633728027344
    3. '(' → logprob: -4.401363372802734
    4. '()' → logprob: -5.401363372802734
    5. '(q' → logprob: -5.651363372802734
    6. '(_' → logprob: -5.651363372802734
    7. '(:' → logprob: -5.901363372802734
    8. '(_:' → logprob: -6.651363372802734
    9. '_h' → logprob: -6.776363372802734
    10. '(d' → logprob: -6.776363372802734

Token 398: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2422083020210266
    2. '):
' → logprob: -1.7422082424163818
    3. ',' → logprob: -3.242208242416382
    4. '   ' → logprob: -7.867208480834961
    5. '):

' → logprob: -7.992208480834961
    6. ')' → logprob: -9.617208480834961
    7. '):
' → logprob: -10.242208480834961
    8. ',d' → logprob: -10.492208480834961
    9. 'def' → logprob: -11.242208480834961
    10. ')):' → logprob: -11.867208480834961

Token 399: ' direction' (ID: 9262)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.47417065501213074
    2. 'p' → logprob: -0.9741706848144531
    3. 'd' → logprob: -9.849170684814453
    4. 'q' → logprob: -10.349170684814453
    5. 'n' → logprob: -13.224170684814453
    6. '   ' → logprob: -13.349170684814453
    7. 'c' → logprob: -14.099170684814453
    8. 'points' → logprob: -14.224170684814453
    9. 'max' → logprob: -14.724170684814453
    10. 'hul' → logprob: -14.724170684814453

Token 400: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12990571558475494
    2. '):
' → logprob: -2.1299057006835938
    3. '   ' → logprob: -6.129905700683594
    4. ',' → logprob: -7.504905700683594
    5. '):

' → logprob: -8.754905700683594
    6. ')' → logprob: -9.754905700683594
    7. '):
' → logprob: -10.629905700683594
    8. '"):' → logprob: -13.004905700683594
    9. ''):' → logprob: -13.629905700683594
    10. '),' → logprob: -14.504905700683594

Token 401: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.153795766294934e-06
    2. '  ' → logprob: -12.875005722045898
    3. '```' → logprob: -13.250005722045898
    4. 'h' → logprob: -14.125005722045898
    5. 'pass' → logprob: -14.750005722045898
    6. 'def' → logprob: -15.125005722045898
    7. '    ' → logprob: -16.0000057220459
    8. '       ' → logprob: -16.0000057220459
    9. ' ' → logprob: -16.7500057220459
    10. 'return' → logprob: -17.7500057220459

Token 402: ' max' (ID: 2999)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.06199547275900841
    2. '   ' → logprob: -2.811995506286621
    3. 'q' → logprob: -11.561995506286621
    4. 'pass' → logprob: -12.061995506286621
    5. 'points' → logprob: -12.561995506286621
    6. 'hul' → logprob: -13.436995506286621
    7. 'if' → logprob: -13.436995506286621
    8. ' hull' → logprob: -13.436995506286621
    9. 'return' → logprob: -14.061995506286621
    10. '  ' → logprob: -14.186995506286621

Token 403: 'cos' (ID: 10732)
  Prédit: 'cos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cos' → logprob: -2.45848218582978e-06
    2. 'co' → logprob: -13.62500286102295
    3. '.cos' → logprob: -14.37500286102295
    4. 'c' → logprob: -15.87500286102295
    5. 'max' → logprob: -16.250001907348633
    6. '_cos' → logprob: -16.250001907348633
    7. 'cost' → logprob: -17.250001907348633
    8. ' cos' → logprob: -17.375001907348633
    9. 'cas' → logprob: -17.375001907348633
    10. 'cov' → logprob: -17.375001907348633

Token 404: '0' (ID: 15)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.916733980178833
    2. '   ' → logprob: -1.041733980178833
    3. '[' → logprob: -2.041733980178833
    4. '=' → logprob: -2.166733980178833
    5. '=max' → logprob: -6.666733741760254
    6. '[max' → logprob: -7.916733741760254
    7. ',' → logprob: -8.166733741760254
    8. '[]' → logprob: -8.666733741760254
    9. 'def' → logprob: -8.666733741760254
    10. '```' → logprob: -8.791733741760254

Token 405: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11090797930955887
    2. '=' → logprob: -2.485908031463623
    3. ' =' → logprob: -4.485908031463623
    4. ',' → logprob: -4.985908031463623
    5. 'def' → logprob: -5.985908031463623
    6. '=max' → logprob: -7.735908031463623
    7. '       ' → logprob: -7.860908031463623
    8. 'max' → logprob: -9.735907554626465
    9. '```' → logprob: -9.985907554626465
    10. '  ' → logprob: -10.360907554626465

Token 406: ' {"' (ID: 10494)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04133404418826103
    2. '0' → logprob: -3.2913341522216797
    3. '[-' → logprob: -6.79133415222168
    4. 'None' → logprob: -7.16633415222168
    5. '[]' → logprob: -7.29133415222168
    6. 'float' → logprob: -7.29133415222168
    7. '-' → logprob: -11.54133415222168
    8. '[max' → logprob: -12.54133415222168
    9. ' [' → logprob: -12.79133415222168
    10. '[n' → logprob: -12.91633415222168

Token 407: 'r' (ID: 81)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.10293570905923843
    2. '0' → logprob: -2.352935791015625
    3. 'cos' → logprob: -6.227935791015625
    4. 'key' → logprob: -8.102935791015625
    5. 'value' → logprob: -8.977935791015625
    6. 'type' → logprob: -9.727935791015625
    7. 'x' → logprob: -10.102935791015625
    8. 'val' → logprob: -10.227935791015625
    9. 'first' → logprob: -10.352935791015625
    10. 'direction' → logprob: -10.852935791015625

Token 408: '":' (ID: 1243)
  Prédit: '":'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.0013223844580352306
    2. '"}' → logprob: -7.001322269439697
    3. '"' → logprob: -8.126322746276855
    4. '":"' → logprob: -9.626322746276855
    5. '}' → logprob: -11.376322746276855
    6. ':' → logprob: -12.001322746276855
    7. '   ' → logprob: -12.126322746276855
    8. '0' → logprob: -12.626322746276855
    9. 'max' → logprob: -12.626322746276855
    10. '':' → logprob: -12.751322746276855

Token 409: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002987567102536559
    2. 'None' → logprob: -6.877987384796143
    3. 'float' → logprob: -6.877987384796143
    4. '-' → logprob: -7.002987384796143
    5. '1' → logprob: -12.1279878616333
    6. ' ' → logprob: -12.7529878616333
    7. 'max' → logprob: -13.3779878616333
    8. '{"' → logprob: -13.5029878616333
    9. ' None' → logprob: -13.8779878616333
    10. '   ' → logprob: -15.1279878616333

Token 410: '1' (ID: 16)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.002076505683362484
    2. 'inf' → logprob: -6.377076625823975
    3. '1' → logprob: -8.127076148986816
    4. 'in' → logprob: -10.127076148986816
    5. 'sys' → logprob: -11.002076148986816
    6. ' float' → logprob: -11.502076148986816
    7. '100' → logprob: -12.502076148986816
    8. 'math' → logprob: -12.502076148986816
    9. '999' → logprob: -12.877076148986816
    10. 'Infinity' → logprob: -13.627076148986816

Token 411: '.' (ID: 13)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.27094289660453796
    2. '},' → logprob: -2.0209429264068604
    3. '}' → logprob: -2.2709429264068604
    4. '   ' → logprob: -8.020942687988281
    5. '           ' → logprob: -8.395942687988281
    6. '.' → logprob: -8.520942687988281
    7. '}
' → logprob: -8.895942687988281
    8. '       ' → logprob: -9.020942687988281
    9. '}.' → logprob: -9.145942687988281
    10. ',"' → logprob: -9.270942687988281

Token 412: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008760636672377586
    2. '1' → logprob: -5.258760452270508
    3. '}' → logprob: -6.133760452270508
    4. 'e' → logprob: -8.133760452270508
    5. 'float' → logprob: -8.383760452270508
    6. '000' → logprob: -8.883760452270508
    7. '5' → logprob: -9.633760452270508
    8. '   ' → logprob: -9.633760452270508
    9. 'max' → logprob: -9.883760452270508
    10. 'if' → logprob: -9.883760452270508

Token 413: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017006490379571915
    2. '},' → logprob: -7.0017008781433105
    3. '}' → logprob: -7.5017008781433105
    4. ',"' → logprob: -8.501700401306152
    5. '}
' → logprob: -12.001700401306152
    6. '   ' → logprob: -12.251700401306152
    7. '",' → logprob: -12.501700401306152
    8. ',
' → logprob: -12.751700401306152
    9. '           ' → logprob: -13.251700401306152
    10. '}{' → logprob: -13.251700401306152

Token 414: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.005064164288341999
    2. '"L' → logprob: -7.255064010620117
    3. '"user' → logprob: -7.880064010620117
    4. '"text' → logprob: -7.880064010620117
    5. ' "' → logprob: -8.005064010620117
    6. '                                   ' → logprob: -8.130064010620117
    7. '   ' → logprob: -8.505064010620117
    8. '"value' → logprob: -8.630064010620117
    9. '"default' → logprob: -8.630064010620117
    10. '                               ' → logprob: -8.755064010620117

Token 415: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00011367550177965313
    2. '":' → logprob: -10.000113487243652
    3. '"' → logprob: -10.125113487243652
    4. '1' → logprob: -11.250113487243652
    5. 'r' → logprob: -11.750113487243652
    6. 'inf' → logprob: -12.875113487243652
    7. '-' → logprob: -13.125113487243652
    8. '0' → logprob: -13.750113487243652
    9. '":"' → logprob: -15.250113487243652
    10. ' l' → logprob: -15.625113487243652

Token 416: '":' (ID: 1243)
  Prédit: '":'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -6.392202976712724e-06
    2. '"' → logprob: -12.250006675720215
    3. '":"' → logprob: -13.500006675720215
    4. '":
' → logprob: -16.5000057220459
    5. ':' → logprob: -17.0000057220459
    6. '0' → logprob: -18.2500057220459
    7. '”:' → logprob: -18.7500057220459
    8. '"":' → logprob: -18.7500057220459
    9. '"}' → logprob: -19.0000057220459
    10. '"]:' → logprob: -19.1250057220459

Token 417: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.143808109802194e-05
    2. '-' → logprob: -10.250041007995605
    3. 'float' → logprob: -12.125041007995605
    4. '0' → logprob: -14.500041007995605
    5. ' ' → logprob: -17.125041961669922
    6. '+' → logprob: -18.625041961669922
    7. '2' → logprob: -19.375041961669922
    8. 'None' → logprob: -19.750041961669922
    9. ' float' → logprob: -19.750041961669922
    10. '100' → logprob: -19.875041961669922

Token 418: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3902033970225602e-05
    2. '-' → logprob: -11.625014305114746
    3. 'float' → logprob: -12.250014305114746
    4. '0' → logprob: -16.37501335144043
    5. 'inf' → logprob: -18.00001335144043
    6. '999' → logprob: -18.75001335144043
    7. ' ' → logprob: -18.75001335144043
    8. '2' → logprob: -18.87501335144043
    9. '100' → logprob: -18.87501335144043
    10. '+' → logprob: -19.62501335144043

Token 419: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00014454191841650754
    2. '}.' → logprob: -9.250144958496094
    3. '}' → logprob: -10.000144958496094
    4. '   ' → logprob: -13.875144958496094
    5. '0' → logprob: -14.375144958496094
    6. '}.{' → logprob: -15.250144958496094
    7. '       ' → logprob: -15.375144958496094
    8. '1' → logprob: -15.500144958496094
    9. '."' → logprob: -15.875144958496094
    10. '           ' → logprob: -16.250144958496094

Token 420: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.941850526549388e-06
    2. '   ' → logprob: -12.750007629394531
    3. '1' → logprob: -13.000007629394531
    4. '}' → logprob: -13.750007629394531
    5. ' ' → logprob: -14.875007629394531
    6. '5' → logprob: -15.500007629394531
    7. '-' → logprob: -15.500007629394531
    8. '```' → logprob: -15.500007629394531
    9. '       ' → logprob: -15.625007629394531
    10. '  ' → logprob: -16.00000762939453

Token 421: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.10116006433963776
    2. '}
' → logprob: -2.3511600494384766
    3. '   ' → logprob: -7.726160049438477
    4. '},' → logprob: -8.601160049438477
    5. '}

' → logprob: -8.851160049438477
    6. ',' → logprob: -9.851160049438477
    7. '       ' → logprob: -10.226160049438477
    8. '}
' → logprob: -10.851160049438477
    9. '};' → logprob: -10.976160049438477
    10. '}.' → logprob: -11.101160049438477

Token 422: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.8444881536415778e-05
    2. 'def' → logprob: -10.750028610229492
    3. 'max' → logprob: -12.375028610229492
    4. '       ' → logprob: -13.875028610229492
    5. '    
' → logprob: -14.125028610229492
    6. 'h' → logprob: -14.250028610229492
    7. '  ' → logprob: -15.000028610229492
    8. '    ' → logprob: -17.500028610229492
    9. '```' → logprob: -17.500028610229492
    10. '           ' → logprob: -17.625028610229492

Token 423: ' hull' (ID: 74912)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.4986923336982727
    2. '   ' → logprob: -1.248692274093628
    3. 'h' → logprob: -2.248692274093628
    4. 'return' → logprob: -8.623692512512207
    5. 'for' → logprob: -10.998692512512207
    6. '    
' → logprob: -10.998692512512207
    7. 'points' → logprob: -11.623692512512207
    8. 'if' → logprob: -11.998692512512207
    9. 'p' → logprob: -12.248692512512207
    10. '  ' → logprob: -12.373692512512207

Token 424: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.36863231658935547
    2. '=' → logprob: -1.3686323165893555
    3. '.append' → logprob: -3.3686323165893555
    4. '   ' → logprob: -4.6186323165893555
    5. '=[]' → logprob: -4.7436323165893555
    6. ' ' → logprob: -8.243632316589355
    7. '.extend' → logprob: -8.618632316589355
    8. 'append' → logprob: -9.618632316589355
    9. '  ' → logprob: -9.743632316589355
    10. 'def' → logprob: -10.368632316589355

Token 425: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.7954958821064793e-05
    2. ' []' → logprob: -11.500018119812012
    3. '[]}' → logprob: -12.000018119812012
    4. '   ' → logprob: -13.625018119812012
    5. '([]' → logprob: -15.375018119812012
    6. '[]
' → logprob: -15.500018119812012
    7. '=[]' → logprob: -17.625017166137695
    8. '[][]' → logprob: -17.750017166137695
    9. '[]

' → logprob: -17.875017166137695
    10. '[]>' → logprob: -18.250017166137695

Token 426: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.06125864014029503
    2. 'None' → logprob: -3.436258554458618
    3. ']' → logprob: -4.311258792877197
    4. '   ' → logprob: -4.561258792877197
    5. '       ' → logprob: -6.936258792877197
    6. 'q' → logprob: -7.061258792877197
    7. '0' → logprob: -7.811258792877197
    8. '           ' → logprob: -8.311258316040039
    9. '               ' → logprob: -8.936258316040039
    10. 'max' → logprob: -9.436258316040039

Token 427: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '[len' → logprob: -19.125
    3. '.pop' → logprob: -19.25
    4. '(' → logprob: -19.75
    5. '[-' → logprob: -20.375
    6. '0' → logprob: -21.125
    7. '[i' → logprob: -21.875
    8. '\[' → logprob: -21.875
    9. '[int' → logprob: -22.375
    10. ']' → logprob: -22.625

Token 428: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. '1' → logprob: -15.375
    3. ' ' → logprob: -21.375
    4. '2' → logprob: -22.125
    5. '   ' → logprob: -23.25
    6. '０' → logprob: -24.125
    7. '```' → logprob: -24.125
    8. '  ' → logprob: -24.875
    9. '-' → logprob: -25.625
    10. 'len' → logprob: -25.75

Token 429: ']]
' (ID: 29446)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.000595447258092463
    2. ']' → logprob: -8.000595092773438
    3. '],' → logprob: -8.750595092773438
    4. ']][' → logprob: -10.375595092773438
    5. ']]
' → logprob: -10.375595092773438
    6. ']}' → logprob: -11.000595092773438
    7. ']]

' → logprob: -11.750595092773438
    8. ')]' → logprob: -12.000595092773438
    9. ']]]' → logprob: -13.250595092773438
    10. '][' → logprob: -13.375595092773438

Token 430: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.512236498361744e-07
    2. '    
' → logprob: -14.625000953674316
    3. '  ' → logprob: -16.875
    4. 'h' → logprob: -18.0
    5. '       ' → logprob: -18.875
    6. 'for' → logprob: -19.625
    7. '    ' → logprob: -20.0
    8. 'def' → logprob: -21.0
    9. ' ' → logprob: -21.125
    10. 'while' → logprob: -21.125

Token 431: ' p' (ID: 275)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09093504399061203
    2. 'for' → logprob: -2.590934991836548
    3. 'q' → logprob: -5.590935230255127
    4. 'direction' → logprob: -5.590935230255127
    5. 'max' → logprob: -6.590935230255127
    6. 'p' (adapté à ' p') → logprob: -6.965935230255127
    7. 'while' → logprob: -6.965935230255127
    8. 'return' → logprob: -7.715935230255127
    9. 'd' → logprob: -7.840935230255127
    10. 'next' → logprob: -9.090934753417969

Token 432: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47886961698532104
    2. ' =' → logprob: -1.1038696765899658
    3. '   ' → logprob: -3.353869676589966
    4. '=d' → logprob: -5.228869438171387
    5. '=h' → logprob: -6.228869438171387
    6. 'oints' → logprob: -6.728869438171387
    7. 'oint' → logprob: -6.728869438171387
    8. 'h' → logprob: -7.228869438171387
    9. '=p' → logprob: -7.603869438171387
    10. '  ' → logprob: -7.603869438171387

Token 433: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.023246755823493004
    2. 'h' → logprob: -3.7732467651367188
    3. '   ' → logprob: -14.148246765136719
    4. ' d' → logprob: -14.773246765136719
    5. '  ' → logprob: -17.02324676513672
    6. 'sorted' → logprob: -17.39824676513672
    7. 'hul' → logprob: -17.52324676513672
    8. '	d' → logprob: -17.64824676513672
    9. '    ' → logprob: -18.02324676513672
    10. 'dll' → logprob: -18.52324676513672

Token 434: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002353640884393826
    2. '.pop' → logprob: -8.625235557556152
    3. '[len' → logprob: -10.500235557556152
    4. '   ' → logprob: -11.250235557556152
    5. '.copy' → logprob: -12.500235557556152
    6. '[:' → logprob: -13.000235557556152
    7. '.sort' → logprob: -13.125235557556152
    8. '[-' → logprob: -13.375235557556152
    9. '[:-' → logprob: -13.875235557556152
    10. '[d' → logprob: -14.250235557556152

Token 435: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020354038861114532
    2. '0' → logprob: -8.500203132629395
    3. '2' → logprob: -18.87520408630371
    4. ' ' → logprob: -21.25020408630371
    5. 'len' → logprob: -22.50020408630371
    6. '-' → logprob: -23.00020408630371
    7. '3' → logprob: -23.12520408630371
    8. '01' → logprob: -23.62520408630371
    9. '   ' → logprob: -23.87520408630371
    10. 'i' → logprob: -24.12520408630371

Token 436: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.017649488523602486
    2. '][' → logprob: -4.1426496505737305
    3. ']
' → logprob: -6.8926496505737305
    4. ']]' → logprob: -8.01764965057373
    5. ']}' → logprob: -8.76764965057373
    6. ']

' → logprob: -10.64264965057373
    7. ')]' → logprob: -10.89264965057373
    8. '].' → logprob: -11.01764965057373
    9. ']][' → logprob: -11.01764965057373
    10. '][-' → logprob: -12.14264965057373

Token 437: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.128163257315464e-07
    2. '  ' → logprob: -16.375
    3. 'p' → logprob: -16.625
    4. '    
' → logprob: -16.75
    5. '       ' → logprob: -19.125
    6. 'for' → logprob: -19.5
    7. '    ' → logprob: -19.75
    8. 'while' → logprob: -20.375
    9. 'q' → logprob: -20.5
    10. 'd' → logprob: -20.75

Token 438: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005113153252750635
    2. 'direction' → logprob: -5.755113124847412
    3. 'd' → logprob: -7.130113124847412
    4. 'p' → logprob: -7.255113124847412
    5. 'max' → logprob: -8.25511360168457
    6. 'q' → logprob: -9.50511360168457
    7. 'for' → logprob: -9.63011360168457
    8. '  ' → logprob: -12.25511360168457
    9. 'while' (adapté à ' while') → logprob: -12.38011360168457
    10. '```' → logprob: -12.50511360168457

Token 439: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.2526701092720032
    2. ' True' → logprob: -1.6276700496673584
    3. 'p' → logprob: -3.8776700496673584
    4. ' p' → logprob: -5.6276702880859375
    5. '(True' → logprob: -7.0026702880859375
    6. ' ' → logprob: -8.002670288085938
    7. '1' → logprob: -8.002670288085938
    8. '   ' → logprob: -8.502670288085938
    9. 'not' → logprob: -8.502670288085938
    10. '(' → logprob: -9.127670288085938

Token 440: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0647875964641571
    2. ':
' → logprob: -2.9397876262664795
    3. '   ' → logprob: -4.6897873878479
    4. '       ' → logprob: -8.439787864685059
    5. ':\' → logprob: -8.689787864685059
    6. ':

' → logprob: -9.189787864685059
    7. ':`' → logprob: -9.814787864685059
    8. '":' → logprob: -10.314787864685059
    9. '":"' → logprob: -11.689787864685059
    10. ':<' → logprob: -12.064787864685059

Token 441: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01435847021639347
    2. '   ' → logprob: -4.2643585205078125
    3. 'p' → logprob: -9.514358520507812
    4. '     ' → logprob: -9.639358520507812
    5. '      ' → logprob: -11.139358520507812
    6. '    ' → logprob: -11.264358520507812
    7. '```' → logprob: -11.264358520507812
    8. 'if' → logprob: -12.514358520507812
    9. '  ' → logprob: -13.014358520507812
    10. '        ' → logprob: -13.139358520507812

Token 442: ' max' (ID: 2999)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03811435401439667
    2. 'q' → logprob: -3.288114309310913
    3. '   ' → logprob: -10.038114547729492
    4. '           ' → logprob: -11.038114547729492
    5. 'next' → logprob: -12.038114547729492
    6. 'p' → logprob: -12.788114547729492
    7. '     ' → logprob: -13.538114547729492
    8. '      ' → logprob: -13.663114547729492
    9. 'point' → logprob: -14.413114547729492
    10. ' q' → logprob: -15.038114547729492

Token 443: 'cos' (ID: 10732)
  Prédit: 'cos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cos' → logprob: -1.0280383548888494e-06
    2. '.cos' → logprob: -14.375000953674316
    3. 'co' → logprob: -16.000001907348633
    4. 'max' → logprob: -16.000001907348633
    5. 'c' → logprob: -16.500001907348633
    6. 'cas' → logprob: -17.000001907348633
    7. 'cov' → logprob: -17.625001907348633
    8. '_cos' → logprob: -17.750001907348633
    9. '   ' → logprob: -18.000001907348633
    10. ' cos' → logprob: -18.125001907348633

Token 444: ' =' (ID: 314)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7410972714424133
    2. '[' → logprob: -0.9910972714424133
    3. '=' → logprob: -2.7410972118377686
    4. ' =' → logprob: -2.7410972118377686
    5. '   ' → logprob: -3.8660972118377686
    6. '       ' → logprob: -6.491097450256348
    7. '    ' → logprob: -7.866097450256348
    8. ' ' → logprob: -9.366097450256348
    9. '     ' → logprob: -9.366097450256348
    10. '=max' → logprob: -10.241097450256348

Token 445: ' [' (ID: 723)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.47512662410736084
    2. '[max' → logprob: -0.9751266241073608
    3. '[' → logprob: -6.97512674331665
    4. '(max' → logprob: -9.350126266479492
    5. '{' → logprob: -11.475126266479492
    6. '{"' → logprob: -11.475126266479492
    7. 'copy' → logprob: -12.600126266479492
    8. '.max' → logprob: -13.975126266479492
    9. ' max' → logprob: -14.100126266479492
    10. '[m' → logprob: -14.350126266479492

Token 446: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -4.60414821645827e-06
    2. '-' → logprob: -12.500004768371582
    3. ' max' → logprob: -15.000004768371582
    4. '0' → logprob: -15.500004768371582
    5. '-max' → logprob: -15.625004768371582
    6. '(max' → logprob: -16.875003814697266
    7. '	max' → logprob: -17.125003814697266
    8. '.max' → logprob: -17.375003814697266
    9. 'None' → logprob: -17.625003814697266
    10. 'float' → logprob: -18.125003814697266

Token 447: 'cos' (ID: 10732)
  Prédit: 'cos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cos' → logprob: -7.896309739408025e-07
    2. 'co' → logprob: -14.750000953674316
    3. '.cos' → logprob: -15.875000953674316
    4. 'cas' → logprob: -16.625
    5. 'cost' → logprob: -18.5
    6. ' cos' → logprob: -18.5
    7. '_cos' → logprob: -18.5
    8. 'max' → logprob: -18.75
    9. 'COS' → logprob: -18.75
    10. 'cor' → logprob: -19.5

Token 448: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001170460251159966
    2. '0' → logprob: -6.751170635223389
    3. '[max' → logprob: -15.37617015838623
    4. '   ' → logprob: -18.126171112060547
    5. 'max' → logprob: -18.501171112060547
    6. '(' → logprob: -19.001171112060547
    7. '       ' → logprob: -19.626171112060547
    8. '\[' → logprob: -20.126171112060547
    9. '[p' → logprob: -20.251171112060547
    10. '[-' → logprob: -20.251171112060547

Token 449: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002632611431181431
    2. '[p' → logprob: -6.8776326179504395
    3. '["' → logprob: -7.2526326179504395
    4. '][' → logprob: -7.7526326179504395
    5. '[d' → logprob: -7.8776326179504395
    6. '.get' → logprob: -9.877632141113281
    7. '['' → logprob: -12.002632141113281
    8. '[get' → logprob: -12.377632141113281
    9. '[color' → logprob: -12.502632141113281
    10. '(direction' → logprob: -12.752632141113281

Token 450: 'direction' (ID: 43278)
  Prédit: 'direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -1.9361264946837764e-07
    2. ' direction' → logprob: -16.625
    3. '.direction' → logprob: -17.375
    4. '(direction' → logprob: -17.5
    5. 'dire' → logprob: -18.625
    6. '_direction' → logprob: -19.125
    7. '方向' → logprob: -21.125
    8. 'directive' → logprob: -21.5
    9. 'Direction' → logprob: -21.625
    10. '-direction' → logprob: -21.75

Token 451: ']]
' (ID: 29446)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.015101661905646324
    2. ']][' → logprob: -4.890101432800293
    3. ']]
' → logprob: -6.015101432800293
    4. '][' → logprob: -6.515101432800293
    5. ']["' → logprob: -6.640101432800293
    6. '],' → logprob: -6.890101432800293
    7. ']}' → logprob: -7.390101432800293
    8. ']' → logprob: -8.140101432800293
    9. ']]

' → logprob: -8.765101432800293
    10. ']].' → logprob: -10.265101432800293

Token 452: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.747814349073451e-05
    2. '   ' → logprob: -11.125017166137695
    3. '           ' → logprob: -13.125017166137695
    4. '      ' → logprob: -15.625017166137695
    5. '        
' → logprob: -15.750017166137695
    6. '     ' → logprob: -15.750017166137695
    7. '        ' → logprob: -16.125017166137695
    8. 'max' → logprob: -17.500017166137695
    9. '         ' → logprob: -18.000017166137695
    10. '               ' → logprob: -18.000017166137695

Token 453: ' q' (ID: 2335)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006723891478031874
    2. 'q' (adapté à ' q') → logprob: -5.006723880767822
    3. '   ' → logprob: -11.88172435760498
    4. 'next' → logprob: -14.50672435760498
    5. '     ' → logprob: -15.00672435760498
    6. '      ' → logprob: -15.25672435760498
    7. '           ' → logprob: -15.75672435760498
    8. 'p' → logprob: -16.006723403930664
    9. ' q' → logprob: -16.631723403930664
    10. '        ' → logprob: -16.756723403930664

Token 454: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06651805341243744
    2. '=' → logprob: -2.9415180683135986
    3. ' =' → logprob: -4.6915178298950195
    4. '       ' → logprob: -6.0665178298950195
    5. '=None' → logprob: -10.94151782989502
    6. '    ' → logprob: -11.19151782989502
    7. '=q' → logprob: -11.31651782989502
    8. '     ' → logprob: -11.69151782989502
    9. '           ' → logprob: -11.69151782989502
    10. '  ' → logprob: -11.94151782989502

Token 455: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.00043591417488642037
    2. 'None' → logprob: -7.875435829162598
    3. ' next' → logprob: -10.125435829162598
    4. 'none' → logprob: -11.500435829162598
    5. '   ' → logprob: -13.125435829162598
    6. ' None' → logprob: -13.250435829162598
    7. '	next' → logprob: -13.500435829162598
    8. '.next' → logprob: -15.875435829162598
    9. 'Next' → logprob: -15.875435829162598
    10. '_next' → logprob: -16.750436782836914

Token 456: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -7.624555291840807e-05
    2. '_POINT' → logprob: -10.000076293945312
    3. '_points' → logprob: -12.125076293945312
    4. 'Point' → logprob: -12.250076293945312
    5. '_token' → logprob: -12.250076293945312
    6. '_Point' → logprob: -12.875076293945312
    7. '_line' → logprob: -13.125076293945312
    8. '   ' → logprob: -13.875076293945312
    9. '       ' → logprob: -14.000076293945312
    10. '```' → logprob: -14.000076293945312

Token 457: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.003641288261860609
    2. '(' → logprob: -5.878641128540039
    3. '   ' → logprob: -7.253641128540039
    4. '(`' → logprob: -10.253641128540039
    5. '(...)' → logprob: -11.003641128540039
    6. '(
' → logprob: -11.128641128540039
    7. '((' → logprob: -12.128641128540039
    8. '       ' → logprob: -12.378641128540039
    9. '(e' → logprob: -12.503641128540039
    10. '(b' → logprob: -12.628641128540039

Token 458: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.014684110297821e-06
    2. '[d' → logprob: -12.500008583068848
    3. '[i' → logprob: -13.125008583068848
    4. '[' → logprob: -13.250008583068848
    5. ',d' → logprob: -14.125008583068848
    6. '[],' → logprob: -15.375008583068848
    7. '[q' → logprob: -15.750008583068848
    8. ' ,' → logprob: -16.000009536743164
    9. '，' → logprob: -16.875009536743164
    10. ',
' → logprob: -17.000009536743164

Token 459: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.9361264946837764e-07
    2. ' p' → logprob: -15.875
    3. '   ' → logprob: -19.75
    4. '	p' → logprob: -19.75
    5. '       ' → logprob: -21.375
    6. '           ' → logprob: -21.875
    7. '(p' → logprob: -22.25
    8. 'q' → logprob: -22.625
    9. '               ' → logprob: -22.875
    10. '  ' → logprob: -23.375

Token 460: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5332478142227046e-05
    2. '   ' → logprob: -12.000015258789062
    3. ',)' → logprob: -12.625015258789062
    4. '),' → logprob: -13.750015258789062
    5. ',q' → logprob: -13.875015258789062
    6. ')' → logprob: -14.250015258789062
    7. '，' → logprob: -14.500015258789062
    8. '`,' → logprob: -14.500015258789062
    9. '```' → logprob: -14.625015258789062
    10. ' ,' → logprob: -14.750015258789062

Token 461: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -3.128163257315464e-07
    2. ' max' → logprob: -15.25
    3. '   ' → logprob: -18.0
    4. '	max' → logprob: -18.375
    5. '.max' → logprob: -19.5
    6. '(max' → logprob: -20.625
    7. '           ' → logprob: -21.375
    8. '       ' → logprob: -21.5
    9. ',max' → logprob: -21.5
    10. '=max' → logprob: -21.5

Token 462: 'cos' (ID: 10732)
  Prédit: 'cos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cos' → logprob: -1.8624639324116288e-06
    2. '.cos' → logprob: -13.625001907348633
    3. 'co' → logprob: -14.875001907348633
    4. 'cas' → logprob: -16.625001907348633
    5. '_cos' → logprob: -16.625001907348633
    6. ' cos' → logprob: -17.500001907348633
    7. 'com' → logprob: -18.000001907348633
    8. 'kos' → logprob: -18.250001907348633
    9. '*cos' → logprob: -18.250001907348633
    10. '```' → logprob: -18.250001907348633

Token 463: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.990154047845863e-05
    2. '           ' → logprob: -10.500049591064453
    3. '[' → logprob: -12.250049591064453
    4. '       ' → logprob: -12.625049591064453
    5. '               ' → logprob: -13.000049591064453
    6. '```' → logprob: -13.000049591064453
    7. '),' → logprob: -13.375049591064453
    8. ')' → logprob: -13.500049591064453
    9. ' ,' → logprob: -13.625049591064453
    10. '`,' → logprob: -13.750049591064453

Token 464: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -3.4121114822482923e-06
    2. ' direction' → logprob: -12.625003814697266
    3. '.direction' → logprob: -17.000003814697266
    4. '(direction' → logprob: -18.375003814697266
    5. '_direction' → logprob: -19.000003814697266
    6. 'directory' → logprob: -19.500003814697266
    7. 'dire' → logprob: -19.750003814697266
    8. '   ' → logprob: -20.000003814697266
    9. '           ' → logprob: -21.000003814697266
    10. 'directive' → logprob: -21.250003814697266

Token 465: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5963025093078613
    2. '       ' → logprob: -1.0963025093078613
    3. '   ' → logprob: -2.8463025093078613
    4. ')' → logprob: -2.9713025093078613
    5. '           ' → logprob: -5.471302509307861
    6. '):
' → logprob: -6.721302509307861
    7. ')

' → logprob: -8.846302032470703
    8. '     ' → logprob: -9.596302032470703
    9. '):' → logprob: -10.346302032470703
    10. '         ' → logprob: -10.596302032470703

Token 466: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.7697225252486533e-06
    2. '   ' → logprob: -12.625003814697266
    3. '           ' → logprob: -15.375003814697266
    4. 'if' → logprob: -16.875003814697266
    5. '      ' → logprob: -17.000003814697266
    6. '     ' → logprob: -17.000003814697266
    7. '        
' → logprob: -17.000003814697266
    8. '        ' → logprob: -18.375003814697266
    9. '               ' → logprob: -19.375003814697266
    10. '```' → logprob: -19.750003814697266

Token 467: ' p' (ID: 275)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.474225252866745
    2. '       ' → logprob: -0.9742252826690674
    3. 'add' → logprob: -9.349225044250488
    4. '   ' → logprob: -10.224225044250488
    5. 'p' (adapté à ' p') → logprob: -11.099225044250488
    6. 'print' → logprob: -12.599225044250488
    7. 'return' → logprob: -13.224225044250488
    8. '     ' → logprob: -13.724225044250488
    9. ' if' → logprob: -14.224225044250488
    10. '      ' → logprob: -14.224225044250488

Token 468: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.053746309131383896
    2. ' =' → logprob: -3.303746223449707
    3. '   ' → logprob: -4.178746223449707
    4. '       ' → logprob: -8.428746223449707
    5. '=q' → logprob: -11.928746223449707
    6. '==' → logprob: -12.178746223449707
    7. '=p' → logprob: -12.428746223449707
    8. '=d' → logprob: -12.553746223449707
    9. '=`' → logprob: -12.678746223449707
    10. '=None' → logprob: -12.803746223449707

Token 469: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.128163257315464e-07
    2. ' q' → logprob: -15.25
    3. '(q' → logprob: -17.25
    4. '	q' → logprob: -17.625
    5. '   ' → logprob: -20.25
    6. '.q' → logprob: -21.25
    7. 'qx' → logprob: -21.25
    8. '$q' → logprob: -21.625
    9. 'None' → logprob: -22.0
    10. '*q' → logprob: -22.125

Token 470: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010197168216109276
    2. '   ' → logprob: -4.635197162628174
    3. '
' → logprob: -8.385197639465332
    4. 'if' → logprob: -9.010197639465332
    5. '        
' → logprob: -9.885197639465332
    6. '     ' → logprob: -11.510197639465332
    7. '           ' → logprob: -12.135197639465332
    8. ';' → logprob: -12.135197639465332
    9. '    
' → logprob: -12.260197639465332
    10. 'return' → logprob: -12.385197639465332

Token 471: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.417976379045285e-05
    2. 'if' → logprob: -10.125043869018555
    3. '   ' → logprob: -12.625043869018555
    4. '      ' → logprob: -15.250043869018555
    5. '           ' → logprob: -15.375043869018555
    6. '     ' → logprob: -15.625043869018555
    7. '        ' → logprob: -17.375043869018555
    8. 'return' → logprob: -18.000043869018555
    9. '        
' → logprob: -18.250043869018555
    10. 'print' → logprob: -18.500043869018555

Token 472: ' add' (ID: 1147)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.005363010335713625
    2. '       ' → logprob: -5.2553629875183105
    3. 'add' (adapté à ' add') → logprob: -9.005363464355469
    4. 'h' → logprob: -12.755363464355469
    5. '   ' → logprob: -13.380363464355469
    6. 'return' → logprob: -14.505363464355469
    7. ' if' → logprob: -14.630363464355469
    8. '      ' → logprob: -15.630363464355469
    9. '     ' → logprob: -15.630363464355469
    10. '           ' → logprob: -15.755363464355469

Token 473: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -2.7610454708337784e-05
    2. '_TO' → logprob: -11.875027656555176
    3. '   ' → logprob: -12.000027656555176
    4. 'to' → logprob: -12.125027656555176
    5. 'To' → logprob: -12.500027656555176
    6. '_h' → logprob: -13.125027656555176
    7. ' to' → logprob: -14.125027656555176
    8. '_To' → logprob: -15.000027656555176
    9. '_in' → logprob: -15.125027656555176
    10. '_def' → logprob: -15.750027656555176

Token 474: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -1.9361264946837764e-07
    2. 'h' → logprob: -16.125
    3. '_H' → logprob: -17.75
    4. '-h' → logprob: -18.25
    5. '	h' → logprob: -18.375
    6. '_' → logprob: -18.5
    7. 'Hull' → logprob: -18.5
    8. '_hdl' → logprob: -18.75
    9. '.h' → logprob: -19.0
    10. '   ' → logprob: -19.25

Token 475: 'ull' (ID: 754)
  Prédit: 'ull'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ull' → logprob: -3.650518920039758e-06
    2. 'ul' → logprob: -13.375003814697266
    3. ' ull' → logprob: -13.375003814697266
    4. 'ulk' → logprob: -15.750003814697266
    5. 'ULL' → logprob: -16.250003814697266
    6. 'u' → logprob: -16.375003814697266
    7. '```' → logprob: -16.875003814697266
    8. 'ulf' → logprob: -17.125003814697266
    9. 'uller' → logprob: -17.625003814697266
    10. '`' → logprob: -17.750003814697266

Token 476: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -2.546478935983032e-05
    2. '(' → logprob: -11.000025749206543
    3. '(d' → logprob: -13.875025749206543
    4. '(q' → logprob: -13.875025749206543
    5. '(b' → logprob: -14.250025749206543
    6. '(f' → logprob: -14.875025749206543
    7. '(a' → logprob: -14.937525749206543
    8. '(c' → logprob: -15.062525749206543
    9. '(H' → logprob: -15.375025749206543
    10. '(`' → logprob: -15.500025749206543

Token 477: 'ull' (ID: 754)
  Prédit: 'ull'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ull' → logprob: -3.7697225252486533e-06
    2. ' ull' → logprob: -13.375003814697266
    3. 'ULL' → logprob: -14.125003814697266
    4. 'ul' → logprob: -14.750003814697266
    5. 'u' → logprob: -15.375003814697266
    6. 'ulk' → logprob: -16.000003814697266
    7. 'ulf' → logprob: -16.625003814697266
    8. 'uller' → logprob: -16.625003814697266
    9. 'ulla' → logprob: -16.750003814697266
    10. '[' → logprob: -17.250003814697266

Token 478: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006475062109529972
    2. ')' → logprob: -7.37564754486084
    3. ',)' → logprob: -12.25064754486084
    4. '   ' → logprob: -12.50064754486084
    5. '),' → logprob: -12.75064754486084
    6. ')
' → logprob: -13.25064754486084
    7. ')

' → logprob: -13.62564754486084
    8. ' ,' → logprob: -14.12564754486084
    9. '.append' → logprob: -14.25064754486084
    10. ').' → logprob: -14.25064754486084

Token 479: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -6.704273118884885e-07
    2. 'p' → logprob: -15.000000953674316
    3. ' q' → logprob: -15.125000953674316
    4. '	q' → logprob: -19.375
    5. '(q' → logprob: -19.875
    6. '$q' → logprob: -20.25
    7. '.q' → logprob: -20.375
    8. '*q' → logprob: -21.25
    9. '=q' → logprob: -21.375
    10. '       ' → logprob: -21.625

Token 480: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004757984541356564
    2. ')
' → logprob: -5.379757881164551
    3. '       ' → logprob: -9.50475788116455
    4. '   ' → logprob: -10.25475788116455
    5. ')

' → logprob: -10.75475788116455
    6. ')
' → logprob: -13.25475788116455
    7. ')`' → logprob: -13.25475788116455
    8. '```' → logprob: -13.87975788116455
    9. ').' → logprob: -14.62975788116455
    10. '           ' → logprob: -14.75475788116455

Token 481: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.1008713702030946e-06
    2. '   ' → logprob: -13.375001907348633
    3. '      ' → logprob: -15.375001907348633
    4. '     ' → logprob: -15.750001907348633
    5. '           ' → logprob: -16.250001907348633
    6. '        ' → logprob: -17.000001907348633
    7. '        
' → logprob: -17.750001907348633
    8. 'if' → logprob: -18.250001907348633
    9. '         ' → logprob: -18.500001907348633
    10. '               ' → logprob: -18.875001907348633

Token 482: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.25194308161735535
    2. '       ' → logprob: -1.5019431114196777
    3. '   ' → logprob: -11.50194263458252
    4. '     ' → logprob: -13.62694263458252
    5. '      ' → logprob: -13.75194263458252
    6. ' if' → logprob: -14.75194263458252
    7. '           ' → logprob: -14.87694263458252
    8. '	if' → logprob: -15.00194263458252
    9. '```' → logprob: -15.75194263458252
    10. '        ' → logprob: -16.251943588256836

Token 483: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -2.451116051815916e-05
    2. ' is' → logprob: -10.625024795532227
    3. '	is' → logprob: -17.125024795532227
    4. 'q' → logprob: -17.750024795532227
    5. '.is' → logprob: -18.125024795532227
    6. '   ' → logprob: -20.000024795532227
    7. 'not' → logprob: -21.000024795532227
    8. '_is' → logprob: -21.125024795532227
    9. '$is' → logprob: -21.125024795532227
    10. '       ' → logprob: -22.125024795532227

Token 484: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: 0.0
    2. '_end' → logprob: -17.875
    3. '_H' → logprob: -19.5
    4. '.h' → logprob: -20.375
    5. '-h' → logprob: -20.625
    6. '	h' → logprob: -20.875
    7. '_b' → logprob: -22.75
    8. 'Hull' → logprob: -22.875
    9. '_n' → logprob: -23.0
    10. '(h' → logprob: -23.125

Token 485: 'ull' (ID: 754)
  Prédit: 'ull'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ull' → logprob: -8.65707261255011e-06
    2. ' ull' → logprob: -12.500008583068848
    3. 'ul' → logprob: -12.750008583068848
    4. 'ULL' → logprob: -14.250008583068848
    5. 'u' → logprob: -14.375008583068848
    6. '   ' → logprob: -16.500009536743164
    7. 'ulk' → logprob: -16.750009536743164
    8. '#' → logprob: -17.000009536743164
    9. '...' → logprob: -17.000009536743164
    10. 'ill' → logprob: -17.000009536743164

Token 486: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.00023500648967456073
    2. 'end' → logprob: -8.750234603881836
    3. '_END' → logprob: -9.750234603881836
    4. '.end' → logprob: -11.875234603881836
    5. '-end' → logprob: -13.000234603881836
    6. 'End' → logprob: -13.250234603881836
    7. '_' → logprob: -13.625234603881836
    8. 'END' → logprob: -13.750234603881836
    9. '	end' → logprob: -14.000234603881836
    10. ' end' → logprob: -14.000234603881836

Token 487: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -5.512236498361744e-07
    2. '(p' → logprob: -14.625000953674316
    3. '(' → logprob: -18.375
    4. '(h' → logprob: -19.375
    5. '(v' → logprob: -19.625
    6. '(k' → logprob: -19.875
    7. '(z' → logprob: -20.0
    8. '(u' → logprob: -20.0
    9. '(Q' → logprob: -20.125
    10. '	q' → logprob: -20.75

Token 488: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: 0.0
    2. ' ,' → logprob: -18.25
    3. ',q' → logprob: -19.125
    4. ',d' → logprob: -19.25
    5. '，' → logprob: -19.875
    6. '`,' → logprob: -20.625
    7. ',,' → logprob: -20.875
    8. ',
' → logprob: -21.5
    9. ',<' → logprob: -22.0
    10. ',p' → logprob: -22.125

Token 489: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: 0.0
    2. ' d' → logprob: -17.625
    3. '	d' → logprob: -23.25
    4. '_d' → logprob: -23.625
    5. '.d' → logprob: -23.875
    6. '   ' → logprob: -23.875
    7. '(d' → logprob: -23.875
    8. 'h' → logprob: -24.25
    9. ' д' → logprob: -25.125
    10. 'de' → logprob: -25.375

Token 490: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.38764217495918274
    2. '):
' → logprob: -1.1376421451568604
    3. '):

' → logprob: -7.3876423835754395
    4. '):
' → logprob: -9.387641906738281
    5. ')' → logprob: -9.762641906738281
    6. ')):' → logprob: -11.887641906738281
    7. ')):
' → logprob: -13.387641906738281
    8. '   ' → logprob: -14.762641906738281
    9. '[]):' → logprob: -14.887641906738281
    10. ']):' → logprob: -15.512641906738281

Token 491: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015919883735477924
    2. 'break' → logprob: -6.50159215927124
    3. 'return' → logprob: -9.501591682434082
    4. '       ' → logprob: -11.751591682434082
    5. '         ' → logprob: -12.626591682434082
    6. '               ' → logprob: -13.751591682434082
    7. '          ' → logprob: -13.751591682434082
    8. ' break' → logprob: -14.251591682434082
    9. '            ' → logprob: -14.751591682434082
    10. '   ' → logprob: -15.126591682434082

Token 492: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.06913244724273682
    2. '           ' → logprob: -2.8191323280334473
    3. 'return' → logprob: -4.944132328033447
    4. ' break' → logprob: -11.694132804870605
    5. 'print' → logprob: -12.694132804870605
    6. '               ' → logprob: -14.194132804870605
    7. '            ' → logprob: -14.694132804870605
    8. '       ' → logprob: -14.819132804870605
    9. 'bre' → logprob: -15.569132804870605
    10. '         ' → logprob: -15.569132804870605

Token 493: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4334403872489929
    2. '   ' → logprob: -1.0584404468536377
    3. '```' → logprob: -5.433440208435059
    4. 'return' → logprob: -8.933440208435059
    5. '     ' → logprob: -9.433440208435059
    6. '           ' → logprob: -9.808440208435059
    7. 'def' → logprob: -10.558440208435059
    8. '  ' → logprob: -11.558440208435059
    9. '      ' → logprob: -11.933440208435059
    10. ' ' → logprob: -12.058440208435059

Token 494: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4757040739059448
    2. '       ' → logprob: -0.9757040739059448
    3. 'def' → logprob: -7.100704193115234
    4. '```' → logprob: -7.475704193115234
    5. 'return' → logprob: -8.850704193115234
    6. '           ' → logprob: -10.350704193115234
    7. '     ' → logprob: -10.850704193115234
    8. '  ' → logprob: -11.850704193115234
    9. 'if' → logprob: -12.600704193115234
    10. ' ' → logprob: -12.600704193115234

Token 495: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1632070541381836
    2. '   ' → logprob: -1.9132070541381836
    3. '       ' → logprob: -6.538207054138184
    4. '```' → logprob: -6.913207054138184
    5. 'def' → logprob: -8.538207054138184
    6. 'p' → logprob: -9.913207054138184
    7. ' return' → logprob: -9.913207054138184
    8. 'print' → logprob: -10.538207054138184
    9. 'pass' → logprob: -10.663207054138184
    10. 'if' → logprob: -10.788207054138184

Token 496: ' hull' (ID: 74912)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -2.5776860184123507e-06
    2. ' hull' → logprob: -13.50000286102295
    3. 'hul' → logprob: -14.00000286102295
    4. 'hound' → logprob: -16.750001907348633
    5. 'hill' → logprob: -17.250001907348633
    6. '<h' → logprob: -17.375001907348633
    7. '	h' → logprob: -17.625001907348633
    8. 'hud' → logprob: -17.625001907348633
    9. 'horn' → logprob: -17.875001907348633
    10. 'hall' → logprob: -18.000001907348633

Token 497: '

' (ID: 279)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.47384950518608093
    2. '   ' → logprob: -1.7238495349884033
    3. '<|end|>' → logprob: -1.7238495349884033
    4. 'def' → logprob: -4.473849296569824
    5. '<|end|>' → logprob: -5.723849296569824
    6. '`' → logprob: -6.348849296569824
    7. 'return' → logprob: -7.098849296569824
    8. '       ' → logprob: -7.348849296569824
    9. '``' → logprob: -7.848849296569824
    10. '  ' → logprob: -7.973849296569824

Token 498: 'def' (ID: 1314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04834967106580734
    2. 'def' → logprob: -4.173349857330322
    3. 'h' → logprob: -4.423349857330322
    4. '```' → logprob: -4.673349857330322
    5. '       ' → logprob: -5.298349857330322
    6. 'return' → logprob: -5.923349857330322
    7. 'print' → logprob: -7.298349857330322
    8. 'd' → logprob: -7.548349857330322
    9. '#' → logprob: -8.048349380493164
    10. 'q' → logprob: -9.173349380493164

Token 499: ' compute' (ID: 23864)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.02741079591214657
    2. 'main' → logprob: -4.652410984039307
    3. 'calculate' → logprob: -5.277410984039307
    4. 'read' → logprob: -5.402410984039307
    5. 'get' → logprob: -6.402410984039307
    6. 'parse' → logprob: -6.777410984039307
    7. 'is' → logprob: -7.152410984039307
    8. 'process' → logprob: -7.402410984039307
    9. 'sort' → logprob: -7.527410984039307
    10. 'conv' → logprob: -7.902410984039307

Token 500: '_result' (ID: 11623)
  Prédit: '_h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.00010783452307805419
    2. '_conv' → logprob: -9.250107765197754
    3. '_polygon' → logprob: -12.625107765197754
    4. 'Hull' → logprob: -13.625107765197754
    5. '_' → logprob: -13.875107765197754
    6. 'h' → logprob: -14.250107765197754
    7. '_g' → logprob: -14.875107765197754
    8. ' hull' → logprob: -15.000107765197754
    9. '_c' → logprob: -15.125107765197754
    10. '_con' → logprob: -15.250107765197754

Token 501: '(d' (ID: 2572)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0012657057959586382
    2. '()' → logprob: -6.751265525817871
    3. '():
' → logprob: -9.751265525817871
    4. '(' → logprob: -11.376265525817871
    5. ' ():' → logprob: -11.376265525817871
    6. '(:' → logprob: -12.376265525817871
    7. '(":' → logprob: -13.251265525817871
    8. '(_:' → logprob: -13.376265525817871
    9. '_' → logprob: -13.876265525817871
    10. '(':' → logprob: -14.001265525817871

Token 502: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3256521224975586
    2. ',' → logprob: -1.4506521224975586
    3. '):
' → logprob: -3.2006521224975586
    4. '   ' → logprob: -6.200652122497559
    5. ')' → logprob: -8.075652122497559
    6. '):

' → logprob: -8.450652122497559
    7. ',d' → logprob: -9.075652122497559
    8. '),' → logprob: -10.325652122497559
    9. '):
' → logprob: -10.575652122497559
    10. 'def' → logprob: -11.575652122497559

Token 503: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3782830137643032e-05
    2. 'pass' → logprob: -12.12501335144043
    3. 'return' → logprob: -12.37501335144043
    4. '  ' → logprob: -12.75001335144043
    5. '```' → logprob: -13.87501335144043
    6. '    ' → logprob: -16.25001335144043
    7. ' ' → logprob: -16.37501335144043
    8. '       ' → logprob: -17.00001335144043
    9. '	return' → logprob: -17.87501335144043
    10. ' return' → logprob: -18.00001335144043

Token 504: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44175300002098083
    2. 'return' (adapté à ' return') → logprob: -1.5667530298233032
    3. 'h' → logprob: -2.1917529106140137
    4. 'pass' → logprob: -3.5667529106140137
    5. 'result' → logprob: -4.941752910614014
    6. '#' → logprob: -7.566752910614014
    7. 'n' → logprob: -7.941752910614014
    8. 'sorted' → logprob: -9.191753387451172
    9. 'results' → logprob: -10.066753387451172
    10. 'points' → logprob: -10.191753387451172

Token 505: ' len' (ID: 4631)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7235875129699707
    2. 'len' → logprob: -1.2235875129699707
    3. '[]' → logprob: -2.0985875129699707
    4. 'sorted' → logprob: -2.8485875129699707
    5. 'h' → logprob: -3.9735875129699707
    6. '0' → logprob: -5.598587512969971
    7. 'list' → logprob: -5.723587512969971
    8. 'None' → logprob: -6.223587512969971
    9. '[d' → logprob: -6.223587512969971
    10. '[len' → logprob: -6.473587512969971

Token 506: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.20958556234836578
    2. '()' → logprob: -1.8345855474472046
    3. '(_)' → logprob: -4.584585666656494
    4. '(' → logprob: -5.334585666656494
    5. '_' → logprob: -5.459585666656494
    6. 'def' → logprob: -6.084585666656494
    7. '   ' → logprob: -6.459585666656494
    8. 'd' → logprob: -6.959585666656494
    9. '(h' → logprob: -7.584585666656494
    10. '(def' → logprob: -7.709585666656494

Token 507: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8193366486229934e-05
    2. '))' → logprob: -11.875018119812012
    3. ')`' → logprob: -12.625018119812012
    4. '),' → logprob: -12.750018119812012
    5. ')
' → logprob: -13.375018119812012
    6. ')

' → logprob: -14.125018119812012
    7. ')d' → logprob: -14.125018119812012
    8. ')}' → logprob: -14.250018119812012
    9. ')**' → logprob: -15.375018119812012
    10. ')-' → logprob: -15.500018119812012

Token 508: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12827947735786438
    2. '   ' → logprob: -2.628279447555542
    3. '<|end|>' → logprob: -3.253279447555542
    4. '```' → logprob: -5.378279685974121
    5. '<|end|>' → logprob: -6.753279685974121
    6. 'if' → logprob: -7.003279685974121
    7. '0' → logprob: -7.253279685974121
    8. '#' → logprob: -7.253279685974121
    9. 'd' → logprob: -8.753279685974121
    10. '  ' → logprob: -9.003279685974121

Token 509: ' (' (ID: 350)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.10037661343812943
    2. '1' → logprob: -2.350376605987549
    3. '2' → logprob: -9.100377082824707
    4. '(len' → logprob: -10.600377082824707
    5. ' len' → logprob: -10.725377082824707
    6. '=len' → logprob: -12.100377082824707
    7. '	len' → logprob: -13.350377082824707
    8. 'h' → logprob: -14.100377082824707
    9. '3' → logprob: -14.225377082824707
    10. '   ' → logprob: -14.350377082824707

Token 510: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0007697248365730047
    2. '1' → logprob: -7.25076961517334
    3. '2' → logprob: -9.87576961517334
    4. '(len' → logprob: -12.25076961517334
    5. ' len' → logprob: -13.00076961517334
    6. 'd' → logprob: -14.12576961517334
    7. '3' → logprob: -15.50076961517334
    8. '   ' → logprob: -15.75076961517334
    9. '=len' → logprob: -16.125770568847656
    10. '	len' → logprob: -16.250770568847656

Token 511: '(calc' (ID: 190074)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.2255009114742279
    2. '(h' → logprob: -1.6005009412765503
    3. '_h' → logprob: -10.97550106048584
    4. '(' → logprob: -11.10050106048584
    5. '   ' → logprob: -11.60050106048584
    6. '(def' → logprob: -11.97550106048584
    7. '(c' → logprob: -12.60050106048584
    8. 'h' → logprob: -12.60050106048584
    9. '(b' → logprob: -12.85050106048584
    10. '(max' → logprob: -13.10050106048584

Token 512: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -9.088346359931165e-07
    2. '_H' → logprob: -15.250000953674316
    3. ')_' → logprob: -15.875000953674316
    4. '"_' → logprob: -16.75
    5. '}_' → logprob: -16.875
    6. '_' → logprob: -16.875
    7. ''_' → logprob: -17.125
    8. '_b' → logprob: -17.125
    9. '	h' → logprob: -18.0
    10. '_hdl' → logprob: -18.25

Token 513: 'ull' (ID: 754)
  Prédit: 'ull'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ull' → logprob: -1.2664456789934775e-06
    2. 'ul' → logprob: -14.125000953674316
    3. 'ulk' → logprob: -15.875000953674316
    4. ' ull' → logprob: -16.250001907348633
    5. 'u' → logprob: -16.500001907348633
    6. 'ULL' → logprob: -16.750001907348633
    7. 'ulls' → logprob: -16.875001907348633
    8. '```' → logprob: -17.750001907348633
    9. '`' → logprob: -18.500001907348633
    10. 'ulla' → logprob: -18.500001907348633

Token 514: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -1.3856492842023727e-06
    2. '(' → logprob: -14.750000953674316
    3. '(c' → logprob: -15.500000953674316
    4. '(b' → logprob: -15.625000953674316
    5. '(e' → logprob: -16.125001907348633
    6. '(a' → logprob: -17.000001907348633
    7. '(f' → logprob: -17.375001907348633
    8. ' (' → logprob: -17.500001907348633
    9. '(dp' → logprob: -17.500001907348633
    10. '(de' → logprob: -17.500001907348633

Token 515: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10024657100439072
    2. '))' → logprob: -2.3502466678619385
    3. ',' → logprob: -10.47524642944336
    4. ')`' → logprob: -12.10024642944336
    5. ')))' → logprob: -13.47524642944336
    6. ')}' → logprob: -13.97524642944336
    7. '```' → logprob: -14.47524642944336
    8. ')+' → logprob: -14.60024642944336
    9. ')d' → logprob: -14.60024642944336
    10. '),' → logprob: -14.72524642944336

Token 516: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0031153298914432526
    2. ''r' → logprob: -5.878115177154541
    3. ''l' → logprob: -9.5031156539917
    4. '"x' → logprob: -10.0031156539917
    5. ''' → logprob: -10.1281156539917
    6. ''re' → logprob: -10.2531156539917
    7. ' "' → logprob: -11.1281156539917
    8. '"path' → logprob: -11.5031156539917
    9. '"text' → logprob: -11.5031156539917
    10. '"user' → logprob: -11.7531156539917

Token 517: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.005234002135694027
    2. 'l' → logprob: -5.2552337646484375
    3. ' r' → logprob: -15.380233764648438
    4. 'R' → logprob: -20.130233764648438
    5. ' l' → logprob: -20.255233764648438
    6. 'right' → logprob: -21.130233764648438
    7. 'h' → logprob: -21.380233764648438
    8. 'left' → logprob: -21.755233764648438
    9. 'rl' → logprob: -21.880233764648438
    10. 'L' → logprob: -21.880233764648438

Token 518: '")' (ID: 1405)
  Prédit: '"))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"))' → logprob: -0.16032536327838898
    2. '")' → logprob: -1.9103254079818726
    3. '")))' → logprob: -9.285325050354004
    4. '))' → logprob: -12.410325050354004
    5. '"' → logprob: -13.660325050354004
    6. ')")' → logprob: -14.160325050354004
    7. ')' → logprob: -14.410325050354004
    8. '"))
' → logprob: -15.035325050354004
    9. ' "))' → logprob: -15.160325050354004
    10. '"]))' → logprob: -15.285325050354004

Token 519: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016108740121126175
    2. '))' → logprob: -4.141108512878418
    3. ')+' → logprob: -10.016108512878418
    4. ')-' → logprob: -10.766108512878418
    5. ')`' → logprob: -12.891108512878418
    6. '`)' → logprob: -13.516108512878418
    7. '   ' → logprob: -14.141108512878418
    8. '))
' → logprob: -14.391108512878418
    9. '))+' → logprob: -14.516108512878418
    10. '```' → logprob: -14.766108512878418

Token 520: ' calc' (ID: 25691)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.5763106942176819
    2. 'calc' → logprob: -0.8263106942176819
    3. ' len' → logprob: -8.326311111450195
    4. ' calc' → logprob: -9.076311111450195
    5. 'cal' → logprob: -12.076311111450195
    6. '	len' → logprob: -13.076311111450195
    7. '(len' → logprob: -13.576311111450195
    8. '[len' → logprob: -13.701311111450195
    9. '.calc' → logprob: -13.826311111450195
    10. 'calculate' → logprob: -14.076311111450195

Token 521: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -1.9361264946837764e-07
    2. '_H' → logprob: -17.75
    3. '_' → logprob: -17.875
    4. '_hdl' → logprob: -18.25
    5. '_b' → logprob: -18.375
    6. ')_' → logprob: -18.5
    7. '"_' → logprob: -18.5
    8. 'h' → logprob: -18.875
    9. '_l' → logprob: -19.0
    10. '   ' → logprob: -19.375

Token 522: 'ull' (ID: 754)
  Prédit: 'ull'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ull' → logprob: -5.512236498361744e-07
    2. 'ul' → logprob: -15.125000953674316
    3. 'u' → logprob: -16.125
    4. 'ULL' → logprob: -16.625
    5. ' ull' → logprob: -17.125
    6. 'ulk' → logprob: -17.625
    7. 'ulls' → logprob: -17.875
    8. 'all' → logprob: -18.375
    9. 'ullen' → logprob: -18.75
    10. 'ill' → logprob: -18.875

Token 523: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: 0.0
    2. '(' → logprob: -19.5
    3. '(b' → logprob: -20.0
    4. '(e' → logprob: -20.875
    5. '(c' → logprob: -21.0
    6. ' (' → logprob: -21.25
    7. '(de' → logprob: -21.375
    8. '(a' → logprob: -21.5
    9. '(f' → logprob: -21.875
    10. '   ' → logprob: -22.25

Token 524: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.204720582696609e-05
    2. ',"' → logprob: -9.875052452087402
    3. '[::-' → logprob: -15.875052452087402
    4. '))' → logprob: -16.125051498413086
    5. ',",' → logprob: -16.250051498413086
    6. '",' → logprob: -16.625051498413086
    7. ' ,' → logprob: -17.500051498413086
    8. ',)' → logprob: -17.625051498413086
    9. ',
' → logprob: -17.625051498413086
    10. ',d' → logprob: -17.750051498413086

Token 525: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0004896456957794726
    2. '"L' → logprob: -7.875489711761475
    3. '“' → logprob: -9.625489234924316
    4. ' "' → logprob: -10.750489234924316
    5. '"h' → logprob: -11.750489234924316
    6. 'l' → logprob: -12.375489234924316
    7. '"d' → logprob: -12.875489234924316
    8. '"I' → logprob: -14.000489234924316
    9. '"class' → logprob: -14.000489234924316
    10. '"log' → logprob: -14.500489234924316

Token 526: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: 0.0
    2. ' l' → logprob: -18.25
    3. 'r' → logprob: -20.875
    4. '"' → logprob: -21.25
    5. '	l' → logprob: -22.625
    6. 'h' → logprob: -23.125
    7. 'left' → logprob: -24.0
    8. 'g' → logprob: -24.625
    9. ' л' → logprob: -24.875
    10. '_l' → logprob: -25.0

Token 527: '"))' (ID: 5063)
  Prédit: '"))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"))' → logprob: -0.4750841557979584
    2. '")' → logprob: -0.9750841856002808
    3. ')' → logprob: -7.47508430480957
    4. '"' → logprob: -8.22508430480957
    5. '")))' → logprob: -10.10008430480957
    6. '))' → logprob: -10.47508430480957
    7. ')")' → logprob: -10.47508430480957
    8. '())' → logprob: -11.22508430480957
    9. '()))' → logprob: -11.22508430480957
    10. '   ' → logprob: -11.35008430480957

Token 528: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.452426608419046e-05
    2. ')`' → logprob: -11.62503433227539
    3. ')
' → logprob: -11.87503433227539
    4. '))' → logprob: -11.87503433227539
    5. '```' → logprob: -12.37503433227539
    6. ')

' → logprob: -13.75003433227539
    7. '})' → logprob: -14.00003433227539
    8. ')}' → logprob: -14.37503433227539
    9. '`)' → logprob: -14.62503433227539
    10. ' )' → logprob: -14.62503433227539

Token 529: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5812610983848572
    2. 'len' → logprob: -0.8312610983848572
    3. '2' → logprob: -5.331261157989502
    4. ' len' → logprob: -8.456260681152344
    5. '(len' → logprob: -8.706260681152344
    6. ' ' → logprob: -10.706260681152344
    7. 'd' → logprob: -10.831260681152344
    8. 'calc' → logprob: -10.831260681152344
    9. '`' → logprob: -12.331260681152344
    10. '   ' → logprob: -12.456260681152344

Token 530: '2' (ID: 17)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.46556556224823
    2. '1' → logprob: -1.21556556224823
    3. '2' → logprob: -2.5905656814575195
    4. 'calc' → logprob: -7.9655656814575195
    5. 'd' → logprob: -8.59056568145752
    6. '(len' → logprob: -9.59056568145752
    7. 'compute' → logprob: -10.21556568145752
    8. ' len' → logprob: -10.96556568145752
    9. '3' → logprob: -11.46556568145752
    10. '0' → logprob: -12.21556568145752

Token 531: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017582408618181944
    2. '))' → logprob: -6.376758098602295
    3. '   ' → logprob: -10.376758575439453
    4. ')`' → logprob: -11.001758575439453
    5. '})' → logprob: -12.626758575439453
    6. ')}' → logprob: -12.876758575439453
    7. '       ' → logprob: -14.376758575439453
    8. ')")' → logprob: -14.626758575439453
    9. ')
' → logprob: -15.376758575439453
    10. '```' → logprob: -15.376758575439453

Token 532: 'def' (ID: 1314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26659390330314636
    2. 'if' → logprob: -1.6415939331054688
    3. 'def' → logprob: -3.6415939331054688
    4. 'return' → logprob: -5.266593933105469
    5. 'print' → logprob: -5.641593933105469
    6. '```' → logprob: -6.016593933105469
    7. 'sys' → logprob: -6.891593933105469
    8. 'n' → logprob: -7.516593933105469
    9. 'd' → logprob: -8.641593933105469
    10. '`' → logprob: -8.641593933105469

Token 533: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.5796148180961609
    2. 'read' → logprob: -0.8296148180961609
    3. 'compute' → logprob: -5.829614639282227
    4. 'run' → logprob: -8.329614639282227
    5. 'is' → logprob: -9.079614639282227
    6. 'calculate' → logprob: -9.204614639282227
    7. 'parse' → logprob: -9.954614639282227
    8. 'process' → logprob: -10.079614639282227
    9. 'write' → logprob: -10.204614639282227
    10. 'execute' → logprob: -10.329614639282227

Token 534: '_loop' (ID: 40621)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00020663968462031335
    2. '()' → logprob: -9.25020694732666
    3. '(:' → logprob: -9.87520694732666
    4. ' ():' → logprob: -10.37520694732666
    5. '():
' → logprob: -11.62520694732666
    6. ':' → logprob: -12.37520694732666
    7. '(":' → logprob: -12.37520694732666
    8. '   ' → logprob: -13.00020694732666
    9. '(':' → logprob: -13.25020694732666
    10. '(_:' → logprob: -13.50020694732666

Token 535: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -5.56233171664644e-05
    2. '()' → logprob: -10.875055313110352
    3. '():
' → logprob: -11.125055313110352
    4. ':' → logprob: -11.375055313110352
    5. ' ():' → logprob: -12.000055313110352
    6. '   ' → logprob: -13.500055313110352
    7. '(:' → logprob: -13.500055313110352
    8. '(":' → logprob: -15.000055313110352
    9. '(' → logprob: -15.125055313110352
    10. '(':' → logprob: -15.750055313110352

Token 536: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.319370302458992e-06
    2. 'n' → logprob: -12.875005722045898
    3. '  ' → logprob: -12.875005722045898
    4. '    ' → logprob: -16.5000057220459
    5. ' ' → logprob: -16.8750057220459
    6. '	n' → logprob: -17.2500057220459
    7. 'while' → logprob: -17.5000057220459
    8. '```' → logprob: -17.5000057220459
    9. ' n' → logprob: -18.2500057220459
    10. '       ' → logprob: -18.3750057220459

Token 537: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5768358111381531
    2. 'n' → logprob: -0.8268358111381531
    3. 'while' (adapté à ' while') → logprob: -7.076835632324219
    4. 'if' → logprob: -11.576835632324219
    5. 'input' → logprob: -11.701835632324219
    6. 'pass' → logprob: -11.701835632324219
    7. ' n' → logprob: -11.826835632324219
    8. 'data' → logprob: -12.701835632324219
    9. '  ' → logprob: -12.826835632324219
    10. 'd' → logprob: -12.951835632324219

Token 538: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.004136103205382824
    2. ' True' → logprob: -5.504136085510254
    3. '   ' → logprob: -10.504136085510254
    4. '1' → logprob: -11.004136085510254
    5. '(True' → logprob: -11.879136085510254
    6. 'true' → logprob: -12.129136085510254
    7. 'sys' → logprob: -15.379136085510254
    8. '       ' → logprob: -15.754136085510254
    9. 'not' → logprob: -15.754136085510254
    10. '=True' → logprob: -15.879136085510254

Token 539: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010822608135640621
    2. ':
' → logprob: -4.760822772979736
    3. '   ' → logprob: -6.260822772979736
    4. '       ' → logprob: -8.385822296142578
    5. ':

' → logprob: -10.760822296142578
    6. ':`' → logprob: -11.135822296142578
    7. ':\' → logprob: -11.385822296142578
    8. '::' → logprob: -13.260822296142578
    9. '():' → logprob: -13.260822296142578
    10. ' :' → logprob: -13.510822296142578

Token 540: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004878723411820829
    2. '   ' → logprob: -7.750487804412842
    3. 'n' → logprob: -10.37548828125
    4. '```' → logprob: -11.37548828125
    5. '     ' → logprob: -11.62548828125
    6. '      ' → logprob: -12.87548828125
    7. '        ' → logprob: -14.00048828125
    8. '    ' → logprob: -14.12548828125
    9. '``' → logprob: -15.00048828125
    10. '  ' → logprob: -15.12548828125

Token 541: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.6950425505638123
    2. '       ' → logprob: -0.6950425505638123
    3. '           ' → logprob: -6.570042610168457
    4. '   ' → logprob: -7.695042610168457
    5. 'if' → logprob: -11.320042610168457
    6. 'line' → logprob: -11.695042610168457
    7. ' n' → logprob: -12.195042610168457
    8. '         ' → logprob: -12.945042610168457
    9. '        ' → logprob: -13.320042610168457
    10. '     ' → logprob: -13.320042610168457

Token 542: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3398204743862152
    2. '=' → logprob: -1.5898205041885376
    3. '   ' → logprob: -3.339820384979248
    4. ':' → logprob: -3.589820384979248
    5. '       ' → logprob: -3.964820384979248
    6. '=int' → logprob: -6.839820384979248
    7. ':int' → logprob: -8.214820861816406
    8. ' ' → logprob: -8.964820861816406
    9. '           ' → logprob: -9.464820861816406
    10. '==' → logprob: -9.589820861816406

Token 543: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.014248007908463478
    2. 'int' → logprob: -4.264247894287109
    3. ' read' → logprob: -10.01424789428711
    4. 'raw' → logprob: -10.76424789428711
    5. '   ' → logprob: -11.63924789428711
    6. '       ' → logprob: -12.26424789428711
    7. ' int' → logprob: -13.26424789428711
    8. 'sys' → logprob: -13.63924789428711
    9. '.read' → logprob: -13.88924789428711
    10. 'input' → logprob: -14.51424789428711

Token 544: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -5.955703818472102e-05
    2. 'input' → logprob: -10.875059127807617
    3. '_INPUT' → logprob: -11.375059127807617
    4. '_inputs' → logprob: -11.500059127807617
    5. '_' → logprob: -12.750059127807617
    6. '_output' → logprob: -12.875059127807617
    7. '_in' → logprob: -13.000059127807617
    8. '_points' → logprob: -13.375059127807617
    9. '       ' → logprob: -13.625059127807617
    10. '_n' → logprob: -13.750059127807617

Token 545: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005300374468788505
    2. '()
' → logprob: -7.875530242919922
    3. '       ' → logprob: -9.625530242919922
    4. '   ' → logprob: -10.000530242919922
    5. '()`' → logprob: -10.875530242919922
    6. '()

' → logprob: -12.250530242919922
    7. '()\' → logprob: -13.000530242919922
    8. '().' → logprob: -13.125530242919922
    9. '(' → logprob: -13.500530242919922
    10. '`()' → logprob: -13.875530242919922

Token 546: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0280383548888494e-06
    2. '   ' → logprob: -14.250000953674316
    3. 'if' → logprob: -15.375000953674316
    4. '      ' → logprob: -16.375001907348633
    5. '     ' → logprob: -16.750001907348633
    6. '        ' → logprob: -16.875001907348633
    7. '           ' → logprob: -17.000001907348633
    8. '```' → logprob: -19.125001907348633
    9. '         ' → logprob: -19.500001907348633
    10. '               ' → logprob: -20.250001907348633

Token 547: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005954395048320293
    2. 'if' (adapté à ' if') → logprob: -5.130954265594482
    3. '   ' → logprob: -10.63095474243164
    4. '     ' → logprob: -14.13095474243164
    5. '      ' → logprob: -15.25595474243164
    6. '           ' → logprob: -15.50595474243164
    7. '```' → logprob: -16.13095474243164
    8. '        ' → logprob: -16.38095474243164
    9. 'print' → logprob: -16.75595474243164
    10. 'If' → logprob: -17.00595474243164

Token 548: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0003550079127307981
    2. ' is' → logprob: -8.125354766845703
    3. '   ' → logprob: -9.750354766845703
    4. '	is' → logprob: -14.375354766845703
    5. '       ' → logprob: -16.500354766845703
    6. '.is' → logprob: -16.750354766845703
    7. '_is' → logprob: -19.125354766845703
    8. '  ' → logprob: -19.750354766845703
    9. '$is' → logprob: -20.000354766845703
    10. '    ' → logprob: -20.375354766845703

Token 549: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -7.85104202805087e-05
    2. '_END' → logprob: -9.750078201293945
    3. 'end' → logprob: -12.000078201293945
    4. '   ' → logprob: -12.375078201293945
    5. '	end' → logprob: -12.625078201293945
    6. '.end' → logprob: -13.250078201293945
    7. '_End' → logprob: -14.125078201293945
    8. '-end' → logprob: -14.375078201293945
    9. '@end' → logprob: -14.625078201293945
    10. ' end' → logprob: -14.750078201293945

Token 550: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.7697225252486533e-06
    2. '(' → logprob: -12.625003814697266
    3. 'n' → logprob: -16.250003814697266
    4. '(num' → logprob: -16.750003814697266
    5. '(m' → logprob: -17.250003814697266
    6. '(np' → logprob: -17.562503814697266
    7. '(nn' → logprob: -17.687503814697266
    8. '(nt' → logprob: -17.687503814697266
    9. '(nx' → logprob: -17.750003814697266
    10. '(N' → logprob: -17.937503814697266

Token 551: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.014252123422920704
    2. '):' → logprob: -4.264252185821533
    3. '):

' → logprob: -10.014251708984375
    4. '):
' → logprob: -10.514251708984375
    5. ')' → logprob: -12.014251708984375
    6. '       ' → logprob: -12.264251708984375
    7. '   ' → logprob: -13.139251708984375
    8. '0' → logprob: -13.514251708984375
    9. ')):
' → logprob: -13.764251708984375
    10. '()):
' → logprob: -15.014251708984375

Token 552: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.465036105713807e-06
    2. 'break' → logprob: -12.375007629394531
    3. '         ' → logprob: -13.500007629394531
    4. '          ' → logprob: -13.875007629394531
    5. '       ' → logprob: -14.750007629394531
    6. '               ' → logprob: -15.250007629394531
    7. '            ' → logprob: -15.875007629394531
    8. 'return' → logprob: -16.12500762939453
    9. '             ' → logprob: -17.37500762939453
    10. '		' → logprob: -18.00000762939453

Token 553: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.006740357726812363
    2. '           ' → logprob: -5.006740570068359
    3. 'return' → logprob: -11.00674057006836
    4. ' break' → logprob: -11.75674057006836
    5. 'print' → logprob: -15.50674057006836
    6. '       ' → logprob: -15.75674057006836
    7. 'Break' → logprob: -16.25674057006836
    8. '               ' → logprob: -16.50674057006836
    9. 'bre' → logprob: -17.00674057006836
    10. '         ' → logprob: -17.00674057006836

Token 554: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3663626305060461e-05
    2. '   ' → logprob: -11.37501335144043
    3. '           ' → logprob: -13.50001335144043
    4. '     ' → logprob: -15.25001335144043
    5. '      ' → logprob: -15.37501335144043
    6. '        ' → logprob: -16.12501335144043
    7. '               ' → logprob: -16.87501335144043
    8. '         ' → logprob: -17.12501335144043
    9. 'def' → logprob: -18.12501335144043
    10. '    ' → logprob: -18.62501335144043

Token 555: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024799390230327845
    2. '   ' → logprob: -6.0024800300598145
    3. '           ' → logprob: -12.627479553222656
    4. '     ' → logprob: -14.877479553222656
    5. '      ' → logprob: -15.627479553222656
    6. 'def' → logprob: -15.877479553222656
    7. '        ' → logprob: -16.502479553222656
    8. '               ' → logprob: -16.752479553222656
    9. 'if' → logprob: -17.252479553222656
    10. '         ' → logprob: -17.252479553222656

Token 556: ' d' (ID: 272)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.2378600735682994e-05
    2. 'points' → logprob: -10.625032424926758
    3. '   ' → logprob: -12.500032424926758
    4. 'd' (adapté à ' d') → logprob: -12.500032424926758
    5. '      ' → logprob: -15.625032424926758
    6. '     ' → logprob: -16.000032424926758
    7. '           ' → logprob: -16.125032424926758
    8. '        ' → logprob: -16.500032424926758
    9. 'print' → logprob: -18.125032424926758
    10. '    ' → logprob: -18.750032424926758

Token 557: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09707583487033844
    2. ' =' → logprob: -2.847075939178467
    3. '       ' → logprob: -3.972075939178467
    4. '   ' → logprob: -4.222075939178467
    5. '=d' → logprob: -7.597075939178467
    6. '     ' → logprob: -9.347075462341309
    7. '           ' → logprob: -9.472075462341309
    8. '         ' → logprob: -9.472075462341309
    9. '        ' → logprob: -9.597075462341309
    10. ' ' → logprob: -9.972075462341309

Token 558: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -2.8206473871250637e-05
    2. ' read' → logprob: -10.500028610229492
    3. '	read' → logprob: -14.875028610229492
    4. '   ' → logprob: -16.000028610229492
    5. '       ' → logprob: -16.375028610229492
    6. '.read' → logprob: -17.875028610229492
    7. '_read' → logprob: -19.875028610229492
    8. 'raw' → logprob: -19.875028610229492
    9. '           ' → logprob: -20.000028610229492
    10. 'list' → logprob: -21.250028610229492

Token 559: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -3.643152740551159e-05
    2. '_POINTS' → logprob: -11.000036239624023
    3. 'points' → logprob: -11.750036239624023
    4. '_pts' → logprob: -12.750036239624023
    5. '_input' → logprob: -13.375036239624023
    6. '_point' → logprob: -13.375036239624023
    7. '	points' → logprob: -13.500036239624023
    8. '_lines' → logprob: -13.500036239624023
    9. 'Points' → logprob: -13.875036239624023
    10. '.points' → logprob: -14.875036239624023

Token 560: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -6.73052782076411e-05
    2. '(' → logprob: -10.000067710876465
    3. '()' → logprob: -11.125067710876465
    4. '(_)' → logprob: -13.625067710876465
    5. 'n' → logprob: -14.125067710876465
    6. '(num' → logprob: -14.250067710876465
    7. '(`' → logprob: -14.375067710876465
    8. '(int' → logprob: -14.750067710876465
    9. '(...)' → logprob: -15.000067710876465
    10. '(np' → logprob: -15.125067710876465

Token 561: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6397709846496582
    2. '       ' → logprob: -1.2647709846496582
    3. '())' → logprob: -2.014770984649658
    4. '())
' → logprob: -3.389770984649658
    5. '   ' → logprob: -4.389770984649658
    6. ')
' → logprob: -4.889770984649658
    7. '()' → logprob: -5.889770984649658
    8. '           ' → logprob: -8.5147705078125
    9. '```' → logprob: -9.0147705078125
    10. '     ' → logprob: -9.3897705078125

Token 562: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.9743012671824545e-05
    2. '   ' → logprob: -10.875020027160645
    3. '           ' → logprob: -15.500020027160645
    4. '      ' → logprob: -15.500020027160645
    5. '     ' → logprob: -15.500020027160645
    6. '        ' → logprob: -16.625019073486328
    7. '         ' → logprob: -18.250019073486328
    8. '               ' → logprob: -18.250019073486328
    9. '    ' → logprob: -18.750019073486328
    10. '```' → logprob: -19.125019073486328

Token 563: ' d' (ID: 272)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16139990091323853
    2. 'result' → logprob: -1.9113998413085938
    3. 'print' → logprob: -6.786399841308594
    4. 'results' → logprob: -10.661399841308594
    5. '   ' → logprob: -11.911399841308594
    6. 'h' → logprob: -12.161399841308594
    7. 'output' → logprob: -12.786399841308594
    8. 'compute' → logprob: -13.161399841308594
    9. 'res' → logprob: -13.411399841308594
    10. '      ' → logprob: -14.161399841308594

Token 564: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06774767488241196
    2. '.sort' → logprob: -3.1927475929260254
    3. ' =' → logprob: -3.9427475929260254
    4. '.' → logprob: -6.442747592926025
    5. '=[]' → logprob: -6.442747592926025
    6. '.append' → logprob: -7.067747592926025
    7. '=.' → logprob: -8.317748069763184
    8. '.copy' → logprob: -8.942748069763184
    9. '.clear' → logprob: -8.942748069763184
    10. '   ' → logprob: -9.567748069763184

Token 565: ' sort' (ID: 4506)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -1.7432603272027336e-06
    2. 'sorted' → logprob: -13.750001907348633
    3. ' sort' → logprob: -14.625001907348633
    4. '	sort' → logprob: -16.375001907348633
    5. '.sort' → logprob: -18.125001907348633
    6. '   ' → logprob: -19.250001907348633
    7. '_sort' → logprob: -20.375001907348633
    8. '       ' → logprob: -21.125001907348633
    9. 'sortable' → logprob: -21.375001907348633
    10. 'sorting' → logprob: -21.625001907348633

Token 566: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.004421455319970846
    2. '_d' → logprob: -5.879421234130859
    3. '_pts' → logprob: -8.00442123413086
    4. '_' → logprob: -8.12942123413086
    5. '_POINTS' → logprob: -9.25442123413086
    6. '_lines' → logprob: -9.37942123413086
    7. '_by' → logprob: -9.75442123413086
    8. '_def' → logprob: -9.87942123413086
    9. 'd' → logprob: -10.25442123413086
    10. '_items' → logprob: -10.75442123413086

Token 567: '_by' (ID: 8214)
  Prédit: '_by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_by' → logprob: -0.019661981612443924
    2. '   ' → logprob: -4.394661903381348
    3. '_' → logprob: -5.394661903381348
    4. 'by' → logprob: -6.519661903381348
    5. '       ' → logprob: -8.269661903381348
    6. '_b' → logprob: -9.019661903381348
    7. '_BY' → logprob: -9.394661903381348
    8. 'By' → logprob: -9.644661903381348
    9. '               ' → logprob: -9.894661903381348
    10. '           ' → logprob: -10.644661903381348

Token 568: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.003392663784325123
    2. '_' → logprob: -6.128392696380615
    3. '_d' → logprob: -7.503392696380615
    4. '_Y' → logprob: -9.503392219543457
    5. '_h' → logprob: -10.003392219543457
    6. '_n' → logprob: -10.378392219543457
    7. '_x' → logprob: -10.503392219543457
    8. '_b' → logprob: -10.628392219543457
    9. '   ' → logprob: -10.628392219543457
    10. '_yaml' → logprob: -10.753392219543457

Token 569: '(d' (ID: 2572)
  Prédit: '(points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -0.014356354251503944
    2. '(d' → logprob: -4.7643561363220215
    3. '()' → logprob: -5.8893561363220215
    4. '(' → logprob: -5.8893561363220215
    5. '(...)' → logprob: -9.88935661315918
    6. '(_)' → logprob: -10.01435661315918
    7. 'points' → logprob: -10.13935661315918
    8. ' points' → logprob: -12.13935661315918
    9. '	points' → logprob: -12.63935661315918
    10. '(point' → logprob: -12.63935661315918

Token 570: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002795703476294875
    2. ')
' → logprob: -8.625279426574707
    3. '   ' → logprob: -9.625279426574707
    4. '       ' → logprob: -10.625279426574707
    5. '())' → logprob: -12.250279426574707
    6. ')

' → logprob: -13.625279426574707
    7. ')d' → logprob: -14.000279426574707
    8. ').' → logprob: -14.125279426574707
    9. '```' → logprob: -14.250279426574707
    10. ' )' → logprob: -15.125279426574707

Token 571: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.650518920039758e-06
    2. '   ' → logprob: -12.875003814697266
    3. '      ' → logprob: -15.000003814697266
    4. '           ' → logprob: -15.375003814697266
    5. '     ' → logprob: -15.375003814697266
    6. '        ' → logprob: -15.875003814697266
    7. '               ' → logprob: -17.250003814697266
    8. '         ' → logprob: -17.625003814697266
    9. 'print' → logprob: -17.750003814697266
    10. '```' → logprob: -18.250003814697266

Token 572: ' result' (ID: 1534)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003787184541579336
    2. 'h' → logprob: -9.000378608703613
    3. 'print' → logprob: -9.250378608703613
    4. 'result' (adapté à ' result') → logprob: -9.375378608703613
    5. '   ' → logprob: -11.000378608703613
    6. 'd' → logprob: -11.000378608703613
    7. '     ' → logprob: -11.625378608703613
    8. '      ' → logprob: -11.625378608703613
    9. 'compute' → logprob: -12.000378608703613
    10. '        ' → logprob: -12.375378608703613

Token 573: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3603547215461731
    2. ' =' → logprob: -1.3603546619415283
    3. '       ' → logprob: -3.2353546619415283
    4. '   ' → logprob: -5.110354900360107
    5. ' ' → logprob: -8.86035442352295
    6. '        ' → logprob: -9.61035442352295
    7. '     ' → logprob: -9.61035442352295
    8. '```' → logprob: -9.61035442352295
    9. '  ' → logprob: -9.73535442352295
    10. '    ' → logprob: -10.11035442352295

Token 574: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -9.088346359931165e-07
    2. '       ' → logprob: -14.625000953674316
    3. ' compute' → logprob: -14.750000953674316
    4. 'calculate' → logprob: -17.25
    5. 'comput' → logprob: -17.5
    6. 'computer' → logprob: -17.875
    7. '.compute' → logprob: -18.0
    8. 'computed' → logprob: -18.0
    9. 'com' → logprob: -19.375
    10. '   ' → logprob: -20.5

Token 575: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.00016194197814911604
    2. '_' → logprob: -9.875162124633789
    3. 'result' → logprob: -10.250162124633789
    4. '_results' → logprob: -10.875162124633789
    5. '       ' → logprob: -11.500162124633789
    6. '_output' → logprob: -11.875162124633789
    7. '_RESULT' → logprob: -12.000162124633789
    8. '"_' → logprob: -12.750162124633789
    9. '_res' → logprob: -12.875162124633789
    10. '   ' → logprob: -13.000162124633789

Token 576: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -6.790129555156454e-05
    2. '(' → logprob: -10.000067710876465
    3. '()' → logprob: -11.625067710876465
    4. '   ' → logprob: -12.500067710876465
    5. '       ' → logprob: -12.625067710876465
    6. 'd' → logprob: -14.500067710876465
    7. '(b' → logprob: -14.500067710876465
    8. '(n' → logprob: -14.625067710876465
    9. '()(' → logprob: -14.750067710876465
    10. '     ' → logprob: -14.875067710876465

Token 577: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004348586779087782
    2. ')
' → logprob: -5.5043487548828125
    3. '       ' → logprob: -8.379348754882812
    4. '   ' → logprob: -10.629348754882812
    5. ')d' → logprob: -11.879348754882812
    6. ')

' → logprob: -12.379348754882812
    7. '     ' → logprob: -13.379348754882812
    8. ')
' → logprob: -13.879348754882812
    9. ')`' → logprob: -14.129348754882812
    10. '```' → logprob: -14.504348754882812

Token 578: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.847109812544659e-05
    2. '   ' → logprob: -10.125048637390137
    3. 'print' → logprob: -11.875048637390137
    4. '           ' → logprob: -14.500048637390137
    5. '     ' → logprob: -14.875048637390137
    6. '      ' → logprob: -15.125048637390137
    7. '               ' → logprob: -16.25004768371582
    8. '        ' → logprob: -16.62504768371582
    9. '         ' → logprob: -18.12504768371582
    10. '    ' → logprob: -18.50004768371582

Token 579: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.12693104147911072
    2. '       ' → logprob: -2.1269309520721436
    3. '   ' → logprob: -13.501931190490723
    4. 'sys' → logprob: -14.376931190490723
    5. '           ' → logprob: -14.501931190490723
    6. ' print' → logprob: -15.501931190490723
    7. '               ' → logprob: -16.001930236816406
    8. '     ' → logprob: -16.751930236816406
    9. 'println' → logprob: -16.751930236816406
    10. '      ' → logprob: -17.501930236816406

Token 580: ' result' (ID: 1534)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -9.066919301403686e-05
    2. '("' → logprob: -9.500090599060059
    3. '(' → logprob: -12.000090599060059
    4. 'result' → logprob: -12.625090599060059
    5. '(f' → logprob: -13.500090599060059
    6. '('' → logprob: -13.625090599060059
    7. '()' → logprob: -13.750090599060059
    8. ' result' → logprob: -14.000090599060059
    9. '("")' → logprob: -14.250090599060059
    10. '(resultado' → logprob: -15.125090599060059

Token 581: '

' (ID: 279)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.05024730786681175
    2. 'print' → logprob: -3.9252471923828125
    3. '`' → logprob: -4.4252471923828125
    4. '   ' → logprob: -4.6752471923828125
    5. '<|end|>' → logprob: -6.0502471923828125
    6. 'return' → logprob: -6.5502471923828125
    7. '``' → logprob: -7.1752471923828125
    8. 'result' → logprob: -7.3002471923828125
    9. '<|end|>' → logprob: -7.6752471923828125
    10. 'import' → logprob: -7.8002471923828125

Token 582: 'main' (ID: 7731)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.4524349868297577
    2. 'print' → logprob: -2.07743501663208
    3. '   ' → logprob: -2.20243501663208
    4. 'def' → logprob: -3.20243501663208
    5. '`' → logprob: -3.57743501663208
    6. 'return' → logprob: -4.07743501663208
    7. 'sys' → logprob: -4.32743501663208
    8. 'result' → logprob: -5.32743501663208
    9. 'import' → logprob: -5.32743501663208
    10. 'if' → logprob: -5.57743501663208

Token 583: '_loop' (ID: 40621)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0667031854391098
    2. '_' → logprob: -3.8167030811309814
    3. '_loop' → logprob: -4.0667033195495605
    4. '```' → logprob: -4.6917033195495605
    5. '<|end|>' → logprob: -5.5667033195495605
    6. 'loop' → logprob: -5.5667033195495605
    7. '   ' → logprob: -5.8167033195495605
    8. '__' → logprob: -6.5667033195495605
    9. '<|end|>' → logprob: -7.5667033195495605
    10. '()`' → logprob: -7.9417033195495605

Token 584: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00015467056073248386
    2. '(' → logprob: -9.500154495239258
    3. '()`' → logprob: -10.000154495239258
    4. '():' → logprob: -10.625154495239258
    5. '```' → logprob: -12.250154495239258
    6. '())' → logprob: -13.875154495239258
    7. '()(' → logprob: -14.000154495239258
    8. '().' → logprob: -14.500154495239258
    9. ':' → logprob: -15.000154495239258
    10. '()
' → logprob: -15.000154495239258


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 582
Tokens correctement prédits (1ère position, stricte): 235
Tokens correctement prédits (1ère position, avec adaptation): 249
Tokens correctement prédits (top 10): 467
Précision stricte (1ère position): 40.38%
Précision adaptée (1ère position): 42.78%
Précision (top 10): 80.24%
================================================================================
