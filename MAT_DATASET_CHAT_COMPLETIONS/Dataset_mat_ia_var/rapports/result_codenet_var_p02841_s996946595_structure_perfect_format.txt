================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:35:38
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
m1, d1 = map(int, input().split())
m2, d2 = map(int, input().split())
if m1 != m2:
    print("1")
else:
    print("0")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'm' (ID: 76)
  → Token d'amorce (pas de prédiction)

Token 1: '1' (ID: 16)
  → Token d'amorce (pas de prédiction)

Token 2: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 3: ' d' (ID: 272)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.1620766818523407
    2. 'm' → logprob: -2.287076711654663
    3. ' ' → logprob: -3.287076711654663
    4. '.' → logprob: -5.662076473236084
    5. '_' → logprob: -6.287076473236084
    6. ' =' → logprob: -6.662076473236084
    7. ',' → logprob: -7.412076473236084
    8. '=' → logprob: -7.662076473236084
    9. '  ' → logprob: -7.787076473236084
    10. '[' → logprob: -7.912076473236084

Token 4: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3662845194339752
    2. ',' → logprob: -1.2412844896316528
    3. '_' → logprob: -4.991284370422363
    4. ' =' → logprob: -5.116284370422363
    5. '.' → logprob: -5.866284370422363
    6. ')' → logprob: -7.491284370422363
    7. '+' → logprob: -7.866284370422363
    8. '[' → logprob: -8.116284370422363
    9. '*' → logprob: -8.866284370422363
    10. '```' → logprob: -9.491284370422363

Token 5: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18268218636512756
    2. ',' → logprob: -2.0576822757720947
    3. ' =' → logprob: -3.8076822757720947
    4. '*' → logprob: -5.057682037353516
    5. '+' → logprob: -5.432682037353516
    6. ')' → logprob: -5.932682037353516
    7. '.' → logprob: -6.307682037353516
    8. '_' → logprob: -8.182682037353516
    9. '[' → logprob: -8.557682037353516
    10. ':' → logprob: -8.682682037353516

Token 6: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.933829665184021
    2. 'm' → logprob: -1.683829665184021
    3. ' map' → logprob: -2.3088297843933105
    4. '0' → logprob: -2.8088297843933105
    5. 'x' → logprob: -2.8088297843933105
    6. 'data' → logprob: -2.8088297843933105
    7. ' m' → logprob: -3.4338297843933105
    8. 'input' → logprob: -4.4338297843933105
    9. 'np' → logprob: -4.6838297843933105
    10. '1' → logprob: -4.8088297843933105

Token 7: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.24724163115024567
    2. '(lambda' → logprob: -1.6222416162490845
    3. '```' → logprob: -4.247241497039795
    4. '(int' → logprob: -6.247241497039795
    5. '<|end|>' → logprob: -6.622241497039795
    6. '((' → logprob: -7.497241497039795
    7. '(token' → logprob: -8.247241973876953
    8. '(func' → logprob: -8.372241973876953
    9. '(user' → logprob: -8.372241973876953
    10. '("("' → logprob: -8.497241973876953

Token 8: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.21538671851158142
    2. ')' → logprob: -2.0903866291046143
    3. '(' → logprob: -2.7153866291046143
    4. 'input' → logprob: -6.340386867523193
    5. '<|end|>' → logprob: -7.590386867523193
    6. '(user' → logprob: -7.840386867523193
    7. '())' → logprob: -8.090386390686035
    8. '(raw' → logprob: -8.840386390686035
    9. '()' → logprob: -9.090386390686035
    10. '<|end|>' → logprob: -9.590386390686035

Token 9: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16033613681793213
    2. ' input' → logprob: -1.9103361368179321
    3. '(input' → logprob: -9.7853364944458
    4. ')' → logprob: -9.9103364944458
    5. 'str' → logprob: -13.5353364944458
    6. ',input' → logprob: -13.5353364944458
    7. 'raw' → logprob: -14.5353364944458
    8. ' )' → logprob: -14.6603364944458
    9. '[input' → logprob: -15.1603364944458
    10. 'm' → logprob: -15.1603364944458

Token 10: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3246229887008667
    2. '()' → logprob: -1.5746229887008667
    3. '().' → logprob: -3.5746231079101562
    4. ')' → logprob: -4.699623107910156
    5. '(' → logprob: -4.824623107910156
    6. '());' → logprob: -5.199623107910156
    7. '(()' → logprob: -5.574623107910156
    8. '(),' → logprob: -5.824623107910156
    9. '();)' → logprob: -6.074623107910156
    10. '`()' → logprob: -6.574623107910156

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005558936391025782
    2. 'strip' → logprob: -7.500555992126465
    3. 'rstrip' → logprob: -13.125555992126465
    4. ' split' → logprob: -14.375555992126465
    5. '(split' → logprob: -15.875555992126465
    6. ')' → logprob: -16.87555503845215
    7. '```' → logprob: -16.87555503845215
    8. 'replace' → logprob: -17.12555503845215
    9. 'startswith' → logprob: -17.12555503845215
    10. 'read' → logprob: -17.25055503845215

Token 12: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.010981560684740543
    2. ')' → logprob: -5.260981559753418
    3. '()))' → logprob: -5.510981559753418
    4. '))' → logprob: -7.010981559753418
    5. '()' → logprob: -7.260981559753418
    6. '`)' → logprob: -10.510981559753418
    7. ' ())' → logprob: -11.260981559753418
    8. '`()' → logprob: -11.510981559753418
    9. '()),' → logprob: -11.885981559753418
    10. '(),' → logprob: -12.635981559753418

Token 13: 'm' (ID: 76)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16659854352474213
    2. '#' → logprob: -3.6665985584259033
    3. 'm' → logprob: -3.6665985584259033
    4. '\n' → logprob: -3.9165985584259033
    5. '+
' → logprob: -4.541598320007324
    6. '```' → logprob: -4.541598320007324
    7. ',' → logprob: -4.666598320007324
    8. '
' → logprob: -4.791598320007324
    9. ')' → logprob: -5.041598320007324
    10. 'if' → logprob: -5.291598320007324

Token 14: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011701062321662903
    2. '2' → logprob: -7.5011701583862305
    3. ',' → logprob: -7.7511701583862305
    4. '.' → logprob: -9.25117015838623
    5. '+' → logprob: -10.62617015838623
    6. 'm' → logprob: -11.50117015838623
    7. '[' → logprob: -11.75117015838623
    8. ' ' → logprob: -11.87617015838623
    9. ')' → logprob: -12.25117015838623
    10. ',m' → logprob: -12.25117015838623

Token 15: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011844364780699834
    2. ' ,' → logprob: -9.250118255615234
    3. '<|end|>' → logprob: -11.625118255615234
    4. '`,' → logprob: -12.500118255615234
    5. '```' → logprob: -13.000118255615234
    6. ',m' → logprob: -13.125118255615234
    7. '',' → logprob: -13.625118255615234
    8. ',d' → logprob: -13.750118255615234
    9. '‌,' → logprob: -15.000118255615234
    10. '<|end|>' → logprob: -15.250118255615234

Token 16: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6328156590461731
    2. ' d' → logprob: -0.7578156590461731
    3. ' ' → logprob: -8.75781536102295
    4. '<|end|>' → logprob: -11.00781536102295
    5. '_d' → logprob: -11.63281536102295
    6. ' ' → logprob: -11.88281536102295
    7. 'space' → logprob: -12.00781536102295
    8. 'input' → logprob: -12.50781536102295
    9. '  ' → logprob: -12.63281536102295
    10. '`' → logprob: -13.13281536102295

Token 17: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.029964769259095192
    2. '2' → logprob: -3.7799646854400635
    3. '=' → logprob: -5.279964923858643
    4. ',' → logprob: -6.654964923858643
    5. ' =' → logprob: -8.154964447021484
    6. '```' → logprob: -11.404964447021484
    7. '=int' → logprob: -12.279964447021484
    8. ' ' → logprob: -12.404964447021484
    9. '[' → logprob: -12.904964447021484
    10. ' ,' → logprob: -13.279964447021484

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10061066597700119
    2. '=' → logprob: -2.4756107330322266
    3. ',' → logprob: -4.475610733032227
    4. '<|end|>' → logprob: -8.975610733032227
    5. ' ,' → logprob: -9.475610733032227
    6. ' ' → logprob: -11.975610733032227
    7. ')' → logprob: -12.350610733032227
    8. '<|end|>' → logprob: -13.225610733032227
    9. '```' → logprob: -14.225610733032227
    10. ' =",' → logprob: -14.975610733032227

Token 19: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.03804344683885574
    2. 'map' → logprob: -3.28804349899292
    3. ' ' → logprob: -13.788043022155762
    4. '	map' → logprob: -14.788043022155762
    5. 'm' → logprob: -15.788043022155762
    6. '(map' → logprob: -16.038043975830078
    7. ',map' → logprob: -16.038043975830078
    8. 'int' → logprob: -16.913043975830078
    9. ' mapa' → logprob: -17.163043975830078
    10. '.map' → logprob: -17.288043975830078

Token 20: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.008831776678562164
    2. '(' → logprob: -4.758831977844238
    3. '<int' → logprob: -8.883831977844238
    4. '```' → logprob: -10.758831977844238
    5. '[int' → logprob: -11.133831977844238
    6. 'int' → logprob: -11.508831977844238
    7. ' (' → logprob: -11.758831977844238
    8. '<|end|>' → logprob: -12.258831977844238
    9. '(str' → logprob: -12.508831977844238
    10. '=int' → logprob: -12.758831977844238

Token 21: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029748640954494476
    2. '(),' → logprob: -4.279748439788818
    3. ',input' → logprob: -4.279748439788818
    4. ',int' → logprob: -6.779748439788818
    5. '(input' → logprob: -9.154748916625977
    6. ' ,' → logprob: -9.529748916625977
    7. '`,' → logprob: -9.904748916625977
    8. '```' → logprob: -10.029748916625977
    9. '',' → logprob: -10.404748916625977
    10. '(' → logprob: -10.529748916625977

Token 22: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.25208085775375366
    2. 'input' → logprob: -2.0020809173583984
    3. ' input' → logprob: -3.1270809173583984
    4. ' int' → logprob: -3.1270809173583984
    5. '(int' → logprob: -10.127080917358398
    6. '[int' → logprob: -11.377080917358398
    7. '<int' → logprob: -12.002080917358398
    8. '(input' → logprob: -12.127080917358398
    9. ',int' → logprob: -13.002080917358398
    10. 'map' → logprob: -13.502080917358398

Token 23: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.8193366486229934e-05
    2. '()' → logprob: -11.000018119812012
    3. '()).' → logprob: -14.375018119812012
    4. ').' → logprob: -15.125018119812012
    5. ' ().' → logprob: -15.375018119812012
    6. '>().' → logprob: -15.375018119812012
    7. '(' → logprob: -17.250019073486328
    8. '()].' → logprob: -17.875019073486328
    9. '().__' → logprob: -18.250019073486328
    10. ')' → logprob: -18.250019073486328

Token 24: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.512236498361744e-07
    2. '(split' → logprob: -15.750000953674316
    3. ')' → logprob: -15.875000953674316
    4. ' split' → logprob: -16.0
    5. 'strip' → logprob: -16.375
    6. 'spl' → logprob: -18.375
    7. '```' → logprob: -18.625
    8. 'plit' → logprob: -19.375
    9. '.split' → logprob: -19.375
    10. 'rstrip' → logprob: -20.0

Token 25: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.07378100603818893
    2. '()' → logprob: -2.8237810134887695
    3. ')' → logprob: -4.4487810134887695
    4. '()))' → logprob: -11.07378101348877
    5. ' ())' → logprob: -11.94878101348877
    6. '())
' → logprob: -12.07378101348877
    7. '`)' → logprob: -12.32378101348877
    8. '();)' → logprob: -12.69878101348877
    9. '().' → logprob: -12.94878101348877
    10. '()]' → logprob: -12.94878101348877

Token 26: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.021721912547945976
    2. 'days' → logprob: -4.521721839904785
    3. ' if' → logprob: -5.646721839904785
    4. '```' → logprob: -6.521721839904785
    5. 'day' → logprob: -7.146721839904785
    6. 'n' → logprob: -7.146721839904785
    7. '`' → logprob: -7.271721839904785
    8. 'print' → logprob: -7.646721839904785
    9. '``' → logprob: -7.646721839904785
    10. 'months' → logprob: -7.896721839904785

Token 27: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.05644800886511803
    2. ' (' → logprob: -3.056447982788086
    3. 'm' → logprob: -5.431447982788086
    4. '(m' → logprob: -6.306447982788086
    5. ' ' → logprob: -6.931447982788086
    6. '(' → logprob: -7.556447982788086
    7. '  ' → logprob: -9.431447982788086
    8. ' d' → logprob: -10.681447982788086
    9. ' ' → logprob: -11.431447982788086
    10. ' ((' → logprob: -12.806447982788086

Token 28: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001860174525063485
    2. ' ' → logprob: -9.3751859664917
    3. ' ==' → logprob: -9.7501859664917
    4. '==' → logprob: -10.5001859664917
    5. '2' → logprob: -12.0001859664917
    6. '```' → logprob: -12.6251859664917
    7. '  ' → logprob: -13.6251859664917
    8. '_' → logprob: -13.9376859664917
    9. '=' → logprob: -14.5001859664917
    10. ')' → logprob: -14.6251859664917

Token 29: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0909891352057457
    2. ' <' → logprob: -2.715989112854004
    3. '==' → logprob: -4.590989112854004
    4. ' <=' → logprob: -4.715989112854004
    5. ' >' → logprob: -6.840989112854004
    6. '<' → logprob: -7.840989112854004
    7. ' !=' → logprob: -9.090989112854004
    8. '=' → logprob: -9.965989112854004
    9. ' ' → logprob: -10.340989112854004
    10. '<=' → logprob: -10.465989112854004

Token 30: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.386895090341568
    2. ' m' → logprob: -1.1368950605392456
    3. ' ' → logprob: -11.136895179748535
    4. '1' → logprob: -12.011895179748535
    5. '2' → logprob: -14.136895179748535
    6. '=' → logprob: -14.886895179748535
    7. '=m' → logprob: -14.886895179748535
    8. '	m' → logprob: -15.011895179748535
    9. '12' → logprob: -15.261895179748535
    10. '6' → logprob: -15.386895179748535

Token 31: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0160469189286232
    2. '2' → logprob: -4.14104700088501
    3. ' ' → logprob: -12.141046524047852
    4. '```' → logprob: -12.766046524047852
    5. '3' → logprob: -13.766046524047852
    6. 'and' → logprob: -14.953546524047852
    7. '12' → logprob: -15.078546524047852
    8. ''' → logprob: -15.141046524047852
    9. '   ' → logprob: -15.266046524047852
    10. '_' → logprob: -15.391046524047852

Token 32: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026711612939834595
    2. ' :' → logprob: -3.6517117023468018
    3. ' or' → logprob: -8.151711463928223
    4. ' and' → logprob: -9.151711463928223
    5. '>' → logprob: -12.526711463928223
    6. ':
' → logprob: -12.651711463928223
    7. 'or' → logprob: -12.901711463928223
    8. 'and' → logprob: -13.526711463928223
    9. '>:' → logprob: -13.651711463928223
    10. '):' → logprob: -14.151711463928223

Token 33: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5837567448616028
    2. ' print' → logprob: -0.8337567448616028
    3. ':' → logprob: -5.833756923675537
    4. '   ' → logprob: -5.958756923675537
    5. ' if' → logprob: -7.708756923675537
    6. ':
' → logprob: -7.958756923675537
    7. '```' → logprob: -8.208756446838379
    8. '\n' → logprob: -8.333756446838379
    9. ' or' → logprob: -8.583756446838379
    10. '\' → logprob: -8.833756446838379

Token 34: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.03057679533958435
    2. ' print' → logprob: -3.530576705932617
    3. 'pr' → logprob: -7.905576705932617
    4. 'if' → logprob: -8.780576705932617
    5. ' if' → logprob: -9.655576705932617
    6. '   ' → logprob: -10.280576705932617
    7. 'prin' → logprob: -10.530576705932617
    8. ' ' → logprob: -10.655576705932617
    9. 'pri' → logprob: -11.155576705932617
    10. 'p' → logprob: -11.405576705932617

Token 35: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08830900490283966
    2. '("' → logprob: -2.7133090496063232
    3. '('' → logprob: -4.338308811187744
    4. '("("' → logprob: -5.838308811187744
    5. '((' → logprob: -7.338308811187744
    6. '(-' → logprob: -7.963308811187744
    7. '(">' → logprob: -8.338309288024902
    8. '()' → logprob: -8.338309288024902
    9. '(max' → logprob: -8.588309288024902
    10. '(abs' → logprob: -8.838309288024902

Token 36: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4162887930870056
    2. 'No' → logprob: -2.6662888526916504
    3. 'Yes' → logprob: -2.9162888526916504
    4. '-' → logprob: -3.0412888526916504
    5. 'Happy' → logprob: -3.2912888526916504
    6. 'Wrong' → logprob: -3.9162888526916504
    7. 'different' → logprob: -4.16628885269165
    8. 'Different' → logprob: -4.41628885269165
    9. '0' → logprob: -4.79128885269165
    10. '\' → logprob: -4.91628885269165

Token 37: '")
' (ID: 1896)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1639800071716309
    2. '0' → logprob: -1.4139800071716309
    3. '5' → logprob: -2.288980007171631
    4. '1' → logprob: -2.538980007171631
    5. '")' → logprob: -2.663980007171631
    6. '3' → logprob: -3.163980007171631
    7. '9' → logprob: -3.288980007171631
    8. '2' → logprob: -3.538980007171631
    9. '23' → logprob: -4.413980007171631
    10. '7' → logprob: -4.788980007171631

Token 38: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.06858628988265991
    2. ' else' → logprob: -3.6935863494873047
    3. 'elif' → logprob: -3.8185863494873047
    4. ')' → logprob: -4.443586349487305
    5. '<|end|>' → logprob: -5.443586349487305
    6. '```' → logprob: -7.443586349487305
    7. ':' → logprob: -7.693586349487305
    8. '0' → logprob: -7.943586349487305
    9. '
' → logprob: -8.193586349487305
    10. '\n' → logprob: -8.318586349487305

Token 39: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00022117885237094015
    2. '   ' → logprob: -8.625221252441406
    3. ':
' → logprob: -10.125221252441406
    4. '.' → logprob: -15.250221252441406
    5. 'if' → logprob: -15.500221252441406
    6. ',' → logprob: -15.625221252441406
    7. '  ' → logprob: -15.625221252441406
    8. '{' → logprob: -16.250221252441406
    9. '>' → logprob: -16.250221252441406
    10. '<|end|>' → logprob: -16.500221252441406

Token 40: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.027609802782535553
    2. 'if' → logprob: -4.527609825134277
    3. '1' → logprob: -5.152609825134277
    4. '   ' → logprob: -5.277609825134277
    5. '0' → logprob: -5.402609825134277
    6. ' print' → logprob: -7.402609825134277
    7. '2' → logprob: -9.152609825134277
    8. 'max' → logprob: -9.527609825134277
    9. 'd' → logprob: -9.902609825134277
    10. 'abs' → logprob: -10.277609825134277

Token 41: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.023403525352478027
    2. 'if' → logprob: -3.7734036445617676
    3. '0' → logprob: -9.64840316772461
    4. '1' → logprob: -9.77340316772461
    5. '   ' → logprob: -11.14840316772461
    6. ' print' → logprob: -11.52340316772461
    7. ' if' → logprob: -12.39840316772461
    8. '2' → logprob: -13.27340316772461
    9. '3' → logprob: -14.02340316772461
    10. 'max' → logprob: -14.14840316772461

Token 42: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.204252690076828
    2. '(' → logprob: -1.9542527198791504
    3. '((' → logprob: -3.9542527198791504
    4. '(d' → logprob: -4.32925271987915
    5. '(max' → logprob: -5.07925271987915
    6. '(abs' → logprob: -5.70425271987915
    7. '("("' → logprob: -7.95425271987915
    8. '(int' → logprob: -8.954252243041992
    9. '("")' → logprob: -8.954252243041992
    10. '("(' → logprob: -9.079252243041992

Token 43: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16459707915782928
    2. '1' → logprob: -2.0395970344543457
    3. '(' → logprob: -5.039597034454346
    4. 'd' → logprob: -5.289597034454346
    5. 'abs' → logprob: -6.039597034454346
    6. '"' → logprob: -6.164597034454346
    7. '31' → logprob: -6.539597034454346
    8. '(d' → logprob: -7.539597034454346
    9. 'max' → logprob: -7.664597034454346
    10. '-' → logprob: -7.789597034454346

Token 44: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.5797246694564819
    2. ')' → logprob: -0.8297246694564819
    3. ')")' → logprob: -5.5797247886657715
    4. '"' → logprob: -13.329724311828613
    5. '}")' → logprob: -14.579724311828613
    6. '0' → logprob: -14.704724311828613
    7. '')' → logprob: -14.829724311828613
    8. ')
' → logprob: -15.329724311828613
    9. '`)' → logprob: -15.329724311828613
    10. '")
' → logprob: -15.329724311828613


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 42
Tokens correctement prédits (1ère position, stricte): 16
Tokens correctement prédits (1ère position, avec adaptation): 18
Tokens correctement prédits (top 10): 37
Précision stricte (1ère position): 38.10%
Précision adaptée (1ère position): 42.86%
Précision (top 10): 88.10%
================================================================================
