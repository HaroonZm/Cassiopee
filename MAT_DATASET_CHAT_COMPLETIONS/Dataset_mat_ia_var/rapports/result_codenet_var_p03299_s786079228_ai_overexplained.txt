================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:30
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Définition de la constante 'mod' qui servira à prendre tous les résultats du problème modulo (10^9 + 7).
# Cela permet d'éviter les débordements d'entier et de répondre aux contraintes classiques des problèmes de programmation.
mod = 10 ** 9 + 7

# Lecture d'un entier 'n' qui représente probablement le nombre d'éléments dans une séquence.
# La fonction input() lit une ligne du standard input sous forme de chaîne, puis int() convertit cette chaîne en entier.
n = int(input())

# Lecture d'une séquence de n entiers sur une seule ligne séparés par des espaces.
# input() lit la ligne, .split() découpe la chaîne selon les espaces, map(int, ...) convertit chacun des morceaux en entier.
# list() convertit enfin l'objet map en liste, assignée à 'H' qui contiendra les hauteurs ou valeurs analysées par le problème.
H = list(map(int, input().split()))

# Définition de la fonction 'solve' recevant une liste d'entiers 'h'.
def solve(h):
    # Si la liste des hauteurs est vide (cas de base, aucune hauteur à traiter) :
    if not h:
        return 1  # Il n'y a qu'une seule façon triviale de traiter une liste vide.

    # Si la liste ne contient qu'un seul élément :
    elif len(h) == 1:
        # Le résultat est 2 puissance la hauteur de cet unique élément, modulo mod.
        # pow(x, y, mod) calcule (x^y) % mod de façon efficace.
        return pow(2, h[0], mod)

    # Calcul de la taille effective (nombre d'éléments) de la liste 'h'.
    N = len(h)

    # Création d'une liste 'a' qui copie, via compréhension de liste, tous les éléments de 'h'.
    a = [h[i] for i in range(N)]

    # Conversion de la liste 'a' en ensemble (set) pour ne retenir que les valeurs uniques (élimination des doublons).
    a = list(set(a))

    # Tri de la liste 'a' afin de traiter les valeurs dans l'ordre croissant.
    a.sort()

    # Construction d'un dictionnaire de compression 'comp':
    # Chaque valeur unique trouvée dans 'a' se voit attribuer une position unique et croissante en partant de 1.
    comp = {i: e + 1 for e, i in enumerate(a)}

    # Construction d'un dictionnaire 'data' pour retrouver la valeur initiale à partir de la valeur compressée.
    # Parcourt toutes les clés de 'comp', et associe la clé comp[e] à la valeur originelle e.
    data = {comp[e]: e for e in comp.keys()}

    # Initialisation manuelle du dictionnaire 'data' pour deux clés : 
    # data[0] = 0 (initialisé puis écrasé par la ligne suivante), puis data[0] = 1.
    # ATTENTION : seule la dernière affectation est prise en compte et donc data[0] == 1 à la fin.
    # Cela semble être une astuce de code ou un héritage d'une version précédente.
    data[0] = 0
    data[0] = 1

    # AFFICHAGE COMMENTÉ = print(comp)
    # Il s'agit d'un débogage optionnel pour observer l'association valeur initiale <-> compacte.


    # Création et initialisation de la table de programmation dynamique 'dp'.
    # Il s'agit d'une liste à deux dimensions (matrice) de taille [N][len(a)+1], remplie de zéros.
    # Chaque dp[i][j] représente habituellement le nombre de façons d'atteindre une configuration donnée
    # à la position 'i' (indice de la hauteur h) et état compressé 'j' (hauteur compressée de l'étape).
    dp = [[0 for i in range(len(a) + 1)] for j in range(N)]

    # Traitement de la première transition de la séquence :
    # On commence avec l'indice i=0 qui correspond au premier élément de 'h',
    i = 0

    # Si la deuxième hauteur est supérieure ou égale à la première :
    if h[i + 1] >= h[i]:
        # On obtient les indices compressés id pour h[i] et id2 pour h[i+1].
        id = comp[h[i]]
        id2 = comp[h[i + 1]]

        # Pour toutes les valeurs entre id et id2 (compris) :
        # On considère qu'il existe 2 façons d'obtenir ces états à la prochaine étape.
        for j in range(id, id2 + 1):
            dp[i][j] = 2

        # Pour tous les indices inférieurs à id :
        # On ne peut obtenir cet état que d'une unique façon.
        for j in range(0, id):
            dp[i][j] = 1

    # Si au contraire la deuxième hauteur est inférieure à la première :
    else:
        # On obtient l'indice compressé correspondant à h[i+1].
        id = comp[h[i + 1]]

        # Pour tous les indices strictement inférieurs à id :
        # On élève 2 à la différence h[i] - h[i+1], modulo mod et on affecte la valeur dans la table dp.
        for j in range(0, id):
            dp[i][j] = pow(2, h[i] - h[i + 1], mod)

        # Calcul de la valeur dp[i][id] en multipliant 2 par (2^(différence) - 1), puis prise modulo mod.
        dp[i][id] = 2 * (pow(2, h[i] - h[i + 1], mod) - 1)
        dp[i][id] %= mod

        # On obtient l'indice compressé correspondant à h[i].
        id2 = comp[h[i]]

        # On ajoute 2 à la valeur dp[i][id], puis prise modulo mod.
        dp[i][id] += 2
        dp[i][id] %= mod

    # Boucle principale pour remplir la table dp pour les étapes suivantes :
    # On commence à la deuxième transition (i=1) et on termine à l'avant-dernière (N-2),
    # car la dernière hauteur h[N-1] sera traitée après.
    for i in range(1, N - 1):

        # Si la prochaine hauteur est au moins aussi grande que la courante :
        if h[i + 1] >= h[i]:
            id = comp[h[i]]
            id2 = comp[h[i + 1]]

            # Pour chaque j entre id et id2 :
            # Multiplie l'état dp précédemment atteint à h[i] par 2 pour chaque possibilité.
            for j in range(id, id2 + 1):
                dp[i][j] = (2 * dp[i - 1][id]) % mod

            # Pour les états en-deçà, on garde le même compte que précédemment.
            for j in range(0, id):
                dp[i][j] = dp[i - 1][j]

        # Si la prochaine hauteur est strictement plus basse :
        else:
            id = comp[h[i + 1]]
            id2 = comp[h[i]]

            # Pour chaque état inférieur à id :
            # On multiplie le nombre de façons de parvenir à chaque état plus bas par 2^(différence), modulo mod.
            for j in range(0, id):
                dp[i][j] = (pow(2, h[i] - h[i + 1], mod) * dp[i - 1][j]) % mod

            # Pour chaque état intermédiaire entre id (inclus) et id2 (exclu) :
            for j in range(id, id2):
                # Récupère la hauteur basse correspondante à l'index j, et la prochaine hauteur haute.
                low = data[j]
                up = data[j + 1] - 1

                # On additionne au nombre de manières d'atteindre l'état 'id', toutes les combinaisons issues de j.
                # La formule utilise les puissances pour compter les combinaisons, et soustrait les impossibles.
                dp[i][id] += dp[i - 1][j] * pow(2, h[i] - up, mod) * (pow(2, up - low + 1, mod) - 1)

            # Prise du modulo pour rester dans les limites.
            dp[i][id] %= mod

            # On ajoute 2 fois dp[i-1][id2] à dp[i][id], mod mod.
            dp[i][id] += 2 * dp[i - 1][id2]
            dp[i][id] %= mod

    # Calcul du résultat final 'ans'.
    ans = 0

    # Récupération de l'indice compressé de la dernière hauteur de la séquence.
    id = comp[h[-1]]

    # Pour chaque état antérieur à id :
    for i in range(0, id):
        # Récupération des bornes basse et haute correspondantes à la compression courante.
        low = data[i]
        up = data[i + 1] - 1

        # On ajoute au résultat toutes les combinaisons possibles à partir de ces états,
        # c'est-à-dire le nombre de façons d'être arrivé à ce stade multiplié par les options en hauteur finale.
        ans += dp[N - 2][i] * pow(2, h[-1] - up, mod) * (pow(2, up - low + 1, mod) - 1)
        ans %= mod

    # On ajoute 2 fois la valeur dp[N-2][id] pour les états correspondant à la plus grande hauteur.
    ans += 2 * dp[N - 2][id]
    ans %= mod

    # On retourne le résultat calculé pour la séquence h.
    return ans

# Calcul initial : pow(2, nombre de 1 dans la liste H, mod)
# Cela signifie que pour chaque 1 dans H, il y a deux possibilités (probablement à cause d'une séparation dans la logique du problème).
ans = pow(2, H.count(1), mod)

# On crée une liste 'check' contenant tous les indices i tels que H[i] == 1 :
# Cette liste repère tous les emplacements de 1 dans la séquence H.
check = [i for i in range(n) if H[i] == 1]

# On étend cette liste en rajoutant artificiellement aux extrémités -1 (avant le début) et n (après la fin) :
# Cela servira à gérer les intervalles de découpe de H sans cas particulier pour les bords.
check = [-1] + check + [n]

# On parcourt tous les intervalles entre des 1 dans la séquence :
for i in range(len(check) - 1):
    # Définition des bornes d'intervalle [l+1 : r], c'est-à-dire entre deux 1 consécutifs (ou au début/fin de la liste).
    l, r = check[i], check[i + 1]
    # On multiplie ans par le résultat de solve appliqué à la sous-séquence H[l+1:r].
    ans *= solve(H[l + 1:r])
    # On prend le résultat modulo 'mod'.
    ans %= mod

# Affichage du résultat final sur la sortie standard.
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dé' (ID: 27247)
  → Token d'amorce (pas de prédiction)

Token 2: 'fin' (ID: 6994)
  → Token d'amorce (pas de prédiction)

Token 3: 'ition' (ID: 868)
  Prédit: 'inition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inition' → logprob: -0.02890322357416153
    2. 'i' → logprob: -4.403903007507324
    3. 'ition' → logprob: -5.153903007507324
    4. 't' → logprob: -6.528903007507324
    5. 'ini' → logprob: -6.528903007507324
    6. 'ine' → logprob: -6.528903007507324
    7. '#' → logprob: -6.778903007507324
    8. 'in' → logprob: -7.403903007507324
    9. 'init' → logprob: -7.653903007507324
    10. '```' → logprob: -7.778903007507324

Token 4: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8412037491798401
    2. ' ' → logprob: -1.8412036895751953
    3. ' de' → logprob: -2.3412036895751953
    4. ' d' → logprob: -2.4662036895751953
    5. ' :' → logprob: -2.4662036895751953
    6. '_' → logprob: -2.5912036895751953
    7. 's' → logprob: -3.2162036895751953
    8. ' =' → logprob: -5.216203689575195
    9. '```' → logprob: -5.341203689575195
    10. 'd' → logprob: -5.466203689575195

Token 5: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.2920582592487335
    2. 'la' → logprob: -2.542058229446411
    3. 'l' → logprob: -2.917058229446411
    4. 'une' → logprob: -3.792058229446411
    5. ' ' → logprob: -4.16705846786499
    6. 'class' → logprob: -4.29205846786499
    7. 'classe' → logprob: -4.29205846786499
    8. ' l' → logprob: -4.54205846786499
    9. ' ' → logprob: -4.91705846786499
    10. '_' → logprob: -4.91705846786499

Token 6: ' constante' (ID: 49652)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.3959960341453552
    2. 'classe' → logprob: -1.64599609375
    3. 'class' → logprob: -2.89599609375
    4. 'f' → logprob: -3.02099609375
    5. ' ' → logprob: -4.77099609375
    6. 'function' → logprob: -5.02099609375
    7. ' fonction' → logprob: -6.02099609375
    8. 'c' → logprob: -6.39599609375
    9. 'fon' → logprob: -6.52099609375
    10. ' ' → logprob: -6.64599609375

Token 7: ' '' (ID: 461)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.7793920636177063
    2. '_' → logprob: -0.7793920636177063
    3. 'CON' → logprob: -3.4043920040130615
    4. 'E' → logprob: -4.779392242431641
    5. 'S' → logprob: -4.779392242431641
    6. '=' → logprob: -5.154392242431641
    7. '#' → logprob: -5.404392242431641
    8. 'M' → logprob: -6.154392242431641
    9. '```' → logprob: -6.154392242431641
    10. ':' → logprob: -6.279392242431641

Token 8: 'mod' (ID: 4847)
  Prédit: 'PI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'PI' → logprob: -0.045251425355672836
    2. 'MAX' → logprob: -3.9202513694763184
    3. 'VA' → logprob: -4.545251369476318
    4. 'API' → logprob: -6.045251369476318
    5. 'VERSION' → logprob: -6.420251369476318
    6. 'pi' → logprob: -7.045251369476318
    7. 'TA' → logprob: -7.420251369476318
    8. 'TAIL' → logprob: -7.670251369476318
    9. '_PI' → logprob: -7.670251369476318
    10. 'T' → logprob: -7.795251369476318

Token 9: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.06701907515525818
    2. 'ule' → logprob: -2.942018985748291
    3. '_e' → logprob: -4.942018985748291
    4. 'u' → logprob: -6.192018985748291
    5. ''' → logprob: -7.317018985748291
    6. '```' → logprob: -7.317018985748291
    7. '_' → logprob: -7.442018985748291
    8. '`' → logprob: -7.817018985748291
    9. ''e' → logprob: -9.06701946258545
    10. ' e' → logprob: -9.31701946258545

Token 10: ' qui' (ID: 2780)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.539112389087677
    2. '=' → logprob: -0.914112389087677
    3. '```' → logprob: -4.789112567901611
    4. 'mod' → logprob: -5.164112567901611
    5. ':' → logprob: -7.289112567901611
    6. '_mod' → logprob: -7.539112567901611
    7. '`' → logprob: -8.539112091064453
    8. ' mod' → logprob: -9.039112091064453
    9. ',' → logprob: -9.789112091064453
    10. ' ' → logprob: -10.039112091064453

Token 11: ' serv' (ID: 2096)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5850595235824585
    2. ' =' → logprob: -0.8350595235824585
    3. ' ' → logprob: -6.335059642791748
    4. 's' → logprob: -6.460059642791748
    5. 'est' → logprob: -6.460059642791748
    6. ' sera' → logprob: -7.085059642791748
    7. ' vaut' → logprob: -7.210059642791748
    8. ' est' → logprob: -7.210059642791748
    9. ' s' → logprob: -8.08505916595459
    10. '_' → logprob: -8.08505916595459

Token 12: 'ira' (ID: 2633)
  Prédit: 'ira'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ira' → logprob: -8.029847231227905e-05
    2. 'era' → logprob: -10.125080108642578
    3. 'ir' → logprob: -10.250080108642578
    4. 'ra' → logprob: -12.625080108642578
    5. 'irà' → logprob: -14.250080108642578
    6. '#' → logprob: -15.250080108642578
    7. 'it' → logprob: -15.625080108642578
    8. 'irá' → logprob: -16.000080108642578
    9. 'a' → logprob: -16.625080108642578
    10. 'e' → logprob: -16.750080108642578

Token 13: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.1443713754415512
    2. ' a' → logprob: -2.894371271133423
    3. ' =' → logprob: -4.144371509552002
    4. ' ' → logprob: -4.269371509552002
    5. '=' → logprob: -4.519371509552002
    6. ' as' → logprob: -4.894371509552002
    7. ' au' → logprob: -5.019371509552002
    8. 'à' → logprob: -5.144371509552002
    9. 'au' → logprob: -5.644371509552002
    10. 'a' → logprob: -5.769371509552002

Token 14: ' prendre' (ID: 24257)
  Prédit: ' modulo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' modulo' → logprob: -0.5802742838859558
    2. ' la' → logprob: -2.2052743434906006
    3. ' effectuer' → logprob: -2.5802743434906006
    4. ' modular' → logprob: -3.2052743434906006
    5. ' mod' → logprob: -3.2052743434906006
    6. ' ' → logprob: -3.4552743434906006
    7. 'mod' → logprob: -3.4552743434906006
    8. ' modulus' → logprob: -3.8302743434906006
    9. 'la' → logprob: -4.2052741050720215
    10. ' l' → logprob: -4.7052741050720215

Token 15: ' tous' (ID: 10688)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3059735596179962
    2. ' modulo' → logprob: -1.8059735298156738
    3. '```' → logprob: -3.930973529815674
    4. ' la' → logprob: -3.930973529815674
    5. ' le' → logprob: -4.180973529815674
    6. '_' → logprob: -4.680973529815674
    7. ' modulus' → logprob: -5.055973529815674
    8. ' en' → logprob: -5.680973529815674
    9. 'mod' → logprob: -5.680973529815674
    10. 'le' → logprob: -5.805973529815674

Token 16: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.08856390416622162
    2. 'les' → logprob: -2.838563919067383
    3. ' ' → logprob: -4.463563919067383
    4. 's' → logprob: -4.963563919067383
    5. '```' → logprob: -5.463563919067383
    6. '  ' → logprob: -7.088563919067383
    7. 'es' → logprob: -7.088563919067383
    8. '_' → logprob: -7.713563919067383
    9. ' l' → logprob: -7.963563919067383
    10. 'le' → logprob: -8.713563919067383

Token 17: ' résultats' (ID: 48985)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7091083526611328
    2. ' caractères' → logprob: -2.084108352661133
    3. ' \' → logprob: -2.209108352661133
    4. '\n' → logprob: -2.584108352661133
    5. ' espaces' → logprob: -2.834108352661133
    6. '\' → logprob: -2.959108352661133
    7. ' modulo' → logprob: -4.084108352661133
    8. ' résultats' → logprob: -4.834108352661133
    9. 'car' → logprob: -4.834108352661133
    10. '_' → logprob: -5.209108352661133

Token 18: ' du' (ID: 1462)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42143934965133667
    2. ' =' → logprob: -1.4214394092559814
    3. ':' → logprob: -2.6714394092559814
    4. 'mod' → logprob: -4.796439170837402
    5. '_' → logprob: -4.921439170837402
    6. '```' → logprob: -5.296439170837402
    7. ',' → logprob: -5.546439170837402
    8. ' :' → logprob: -6.421439170837402
    9. '_mod' → logprob: -6.546439170837402
    10. '.' → logprob: -6.546439170837402

Token 19: ' problème' (ID: 35630)
  Prédit: ' modulo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' modulo' → logprob: -0.581260621547699
    2. ' calcul' → logprob: -1.9562606811523438
    3. ' code' → logprob: -2.0812606811523438
    4. '```' → logprob: -2.5812606811523438
    5. ' module' → logprob: -3.7062606811523438
    6. ' modulus' → logprob: -4.081260681152344
    7. ' programme' → logprob: -4.331260681152344
    8. 'calcul' → logprob: -4.331260681152344
    9. 'mod' → logprob: -5.081260681152344
    10. ' mod' → logprob: -5.206260681152344

Token 20: ' modulo' (ID: 112372)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7517938613891602
    2. '=' → logprob: -1.5017938613891602
    3. 'mod' → logprob: -2.25179386138916
    4. ':' → logprob: -2.75179386138916
    5. '```' → logprob: -2.87679386138916
    6. ',' → logprob: -4.12679386138916
    7. 'm' → logprob: -4.50179386138916
    8. ' :' → logprob: -4.87679386138916
    9. ' ' → logprob: -4.87679386138916
    10. '`' → logprob: -4.87679386138916

Token 21: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2490556240081787
    2. '_' → logprob: -1.8740556240081787
    3. ' _' → logprob: -3.8740556240081787
    4. '32' → logprob: -4.874055862426758
    5. '10' → logprob: -5.624055862426758
    6. ' ,' → logprob: -5.749055862426758
    7. ' =' → logprob: -5.749055862426758
    8. '`' → logprob: -5.874055862426758
    9. ' '' → logprob: -5.874055862426758
    10. ' `' → logprob: -5.874055862426758

Token 22: '10' (ID: 702)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5829652547836304
    2. '10' → logprob: -0.9579652547836304
    3. ')' → logprob: -3.08296537399292
    4. ' )' → logprob: -4.83296537399292
    5. '100' → logprob: -5.58296537399292
    6. '1' → logprob: -8.082964897155762
    7. ' ' → logprob: -9.332964897155762
    8. '998' → logprob: -9.957964897155762
    9. '```' → logprob: -10.582964897155762
    10. ' \(' → logprob: -10.832964897155762

Token 23: '^' (ID: 61)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.6370337009429932
    2. '**' → logprob: -0.7620337009429932
    3. ' **' → logprob: -6.262033462524414
    4. ' ' → logprob: -6.387033462524414
    5. '^' → logprob: -7.387033462524414
    6. '09' → logprob: -9.262033462524414
    7. '7' → logprob: -10.387033462524414
    8. '**)' → logprob: -11.137033462524414
    9. '```' → logprob: -11.262033462524414
    10. '\xe2\x81' → logprob: -11.387033462524414

Token 24: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -7.827200897736475e-05
    2. ' ' → logprob: -9.500078201293945
    3. '```' → logprob: -13.250078201293945
    4. '09' → logprob: -14.125078201293945
    5. ')' → logprob: -14.750078201293945
    6. '^' → logprob: -15.625078201293945
    7. '2' → logprob: -16.875078201293945
    8. '6' → logprob: -16.875078201293945
    9. '**' → logprob: -17.125078201293945
    10. '+' → logprob: -17.125078201293945

Token 25: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0061164903454482555
    2. ' +' → logprob: -5.1311163902282715
    3. ')+' → logprob: -9.13111686706543
    4. ')' → logprob: -10.00611686706543
    5. ' )' → logprob: -11.13111686706543
    6. '7' → logprob: -12.00611686706543
    7. ' ' → logprob: -13.00611686706543
    8. ' ' → logprob: -13.00611686706543
    9. '+)' → logprob: -13.00611686706543
    10. '```' → logprob: -13.50611686706543

Token 26: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.012513063848018646
    2. ' ' → logprob: -4.387513160705566
    3. ' ' → logprob: -13.762513160705566
    4. ')' → logprob: -14.387513160705566
    5. '```' → logprob: -14.637513160705566
    6. '9' → logprob: -15.012513160705566
    7. '+' → logprob: -15.012513160705566
    8. '  ' → logprob: -15.950013160705566
    9. '   ' → logprob: -16.26251220703125
    10. '07' → logprob: -16.26251220703125

Token 27: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00029744720086455345
    2. ' ' → logprob: -8.125297546386719
    3. '9' → logprob: -15.000297546386719
    4. '```' → logprob: -15.000297546386719
    5. '+' → logprob: -15.125297546386719
    6. ')' → logprob: -15.375297546386719
    7. ' ' → logprob: -15.937797546386719
    8. '   ' → logprob: -16.12529754638672
    9. '  ' → logprob: -17.06279754638672
    10. '07' → logprob: -17.06279754638672

Token 28: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00021105022460687906
    2. ')`' → logprob: -9.250210762023926
    3. ').' → logprob: -10.750210762023926
    4. ')#' → logprob: -10.875210762023926
    5. '```' → logprob: -10.875210762023926
    6. ' )' → logprob: -11.125210762023926
    7. '')' → logprob: -12.125210762023926
    8. ')
' → logprob: -12.375210762023926
    9. ')**' → logprob: -12.375210762023926
    10. '),' → logprob: -12.875210762023926

Token 29: '#' (ID: 2)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.3896509110927582
    2. ' =' → logprob: -2.139650821685791
    3. ' ' → logprob: -3.014650821685791
    4. 'm' → logprob: -3.139650821685791
    5. '```' → logprob: -3.139650821685791
    6. '=' → logprob: -3.389650821685791
    7. ' ```' → logprob: -5.139650821685791
    8. ',' → logprob: -5.139650821685791
    9. ':' → logprob: -5.264650821685791
    10. ' mod' → logprob: -5.514650821685791

Token 30: ' Cela' (ID: 44403)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18103119730949402
    2. 'mod' → logprob: -2.1810312271118164
    3. ' mod' → logprob: -3.0560312271118164
    4. 'm' → logprob: -6.306031227111816
    5. ' m' → logprob: -7.056031227111816
    6. ' ```' → logprob: -7.056031227111816
    7. ' )' → logprob: -7.931031227111816
    8. '10' → logprob: -8.306031227111816
    9. ' `' → logprob: -8.431031227111816
    10. '0' → logprob: -8.681031227111816

Token 31: ' permet' (ID: 11798)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2011569738388062
    2. ' vaut' → logprob: -1.9511569738388062
    3. ' sera' → logprob: -2.3261570930480957
    4. 'mod' → logprob: -2.4511570930480957
    5. ' permet' → logprob: -2.8261570930480957
    6. ' serv' → logprob: -3.2011570930480957
    7. 's' → logprob: -3.2011570930480957
    8. ' permettra' → logprob: -3.3261570930480957
    9. ' mod' → logprob: -3.4511570930480957
    10. ' s' → logprob: -3.7011570930480957

Token 32: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.7440577745437622
    2. ' de' → logprob: -0.7440577745437622
    3. 'd' → logprob: -3.4940576553344727
    4. 'de' → logprob: -4.244057655334473
    5. ' ' → logprob: -5.869057655334473
    6. ' à' → logprob: -7.869057655334473
    7. ' ' → logprob: -7.994057655334473
    8. '_' → logprob: -8.744057655334473
    9. ' au' → logprob: -8.869057655334473
    10. 't' → logprob: -9.119057655334473

Token 33: ''év' (ID: 114425)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.2147349119186401
    2. ''' → logprob: -1.4647349119186401
    3. ''év' → logprob: -1.5897349119186401
    4. ''avoir' → logprob: -2.5897350311279297
    5. ''assurer' → logprob: -2.5897350311279297
    6. 'a' → logprob: -3.4647350311279297
    7. '’éviter' → logprob: -3.8397350311279297
    8. ''effect' → logprob: -3.9647350311279297
    9. ''a' → logprob: -4.71473503112793
    10. ''emp' → logprob: -4.96473503112793

Token 34: 'iter' (ID: 2340)
  Prédit: 'iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.00419296370819211
    2. '#' → logprob: -6.75419282913208
    3. 'érer' → logprob: -7.50419282913208
    4. ' iter' → logprob: -7.62919282913208
    5. 'itant' → logprob: -7.75419282913208
    6. '```' → logprob: -8.004193305969238
    7. 'it' → logprob: -8.504193305969238
    8. 'al' → logprob: -8.504193305969238
    9. '|' → logprob: -9.504193305969238
    10. '%' → logprob: -9.754193305969238

Token 35: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.11351010948419571
    2. ' des' → logprob: -2.4885101318359375
    3. 'les' → logprob: -4.8635101318359375
    4. ' overflow' → logprob: -5.8635101318359375
    5. 'des' → logprob: -5.9885101318359375
    6. ' l' → logprob: -6.1135101318359375
    7. ' d' → logprob: -6.2385101318359375
    8. 's' → logprob: -6.4885101318359375
    9. ' ' → logprob: -6.7385101318359375
    10. ' la' → logprob: -6.9885101318359375

Token 36: ' déb' (ID: 37874)
  Prédit: ' déb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' déb' → logprob: -0.2616642415523529
    2. ' overflow' → logprob: -2.0116641521453857
    3. ' dépasse' → logprob: -2.5116641521453857
    4. 'overflow' → logprob: -5.761664390563965
    5. ' problèmes' → logprob: -5.886664390563965
    6. ' over' → logprob: -6.011664390563965
    7. ' erreurs' → logprob: -6.261664390563965
    8. ' integer' → logprob: -6.511664390563965
    9. 'dé' → logprob: -7.011664390563965
    10. 'd' → logprob: -7.261664390563965

Token 37: 'ord' (ID: 604)
  Prédit: 'uts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uts' → logprob: -0.7958260178565979
    2. 'ug' → logprob: -1.5458259582519531
    3. 'ut' → logprob: -2.045825958251953
    4. ']' → logprob: -2.795825958251953
    5. 'ord' → logprob: -3.295825958251953
    6. ' ut' → logprob: -4.545825958251953
    7. '^' → logprob: -5.045825958251953
    8. '``' → logprob: -5.045825958251953
    9. 'û' → logprob: -5.545825958251953
    10. '%' → logprob: -5.670825958251953

Token 38: 'ements' (ID: 4507)
  Prédit: 'ements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ements' → logprob: -0.10664784163236618
    2. 'ement' → logprob: -2.3566477298736572
    3. 'lements' → logprob: -6.606647968292236
    4. '```' → logprob: -6.731647968292236
    5. 'e' → logprob: -6.856647968292236
    6. 'éments' → logprob: -7.231647968292236
    7. 'emen' → logprob: -7.981647968292236
    8. 'er' → logprob: -8.606647491455078
    9. 'em' → logprob: -8.731647491455078
    10. 'lement' → logprob: -9.106647491455078

Token 39: ' d' (ID: 272)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.10068439692258835
    2. '_mod' → logprob: -3.600684404373169
    3. 'MOD' → logprob: -3.600684404373169
    4. '.' → logprob: -3.725684404373169
    5. ' mod' → logprob: -4.72568416595459
    6. ',' → logprob: -5.97568416595459
    7. '```' → logprob: -7.22568416595459
    8. ' MOD' → logprob: -7.22568416595459
    9. ' )' → logprob: -7.35068416595459
    10. ')' → logprob: -7.47568416595459

Token 40: ''ent' (ID: 53422)
  Prédit: ''ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ent' → logprob: -0.06619878113269806
    2. 'ent' → logprob: -2.9411988258361816
    3. 'e' → logprob: -4.941198825836182
    4. '’ent' → logprob: -6.191198825836182
    5. ''' → logprob: -7.191198825836182
    6. ' ent' → logprob: -8.316198348999023
    7. ' entier' → logprob: -8.691198348999023
    8. ''espace' → logprob: -8.691198348999023
    9. 'es' → logprob: -8.941198348999023
    10. ''int' → logprob: -9.441198348999023

Token 41: 'ier' (ID: 905)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.6017565131187439
    2. 'iers' → logprob: -1.9767565727233887
    3. 'ières' → logprob: -2.4767565727233887
    4. 'ier' → logprob: -3.2267565727233887
    5. 're' → logprob: -3.3517565727233887
    6. 'ière' → logprob: -3.7267565727233887
    7. '```' → logprob: -4.226756572723389
    8. 'e' → logprob: -4.351756572723389
    9. 'ers' → logprob: -4.601756572723389
    10. 't' → logprob: -4.601756572723389

Token 42: ' et' (ID: 859)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.19847111403942108
    2. '_mod' → logprob: -2.5734710693359375
    3. ' ' → logprob: -3.5734710693359375
    4. '.' → logprob: -3.9484710693359375
    5. ' mod' → logprob: -4.0734710693359375
    6. ',' → logprob: -4.9484710693359375
    7. '\' → logprob: -5.1984710693359375
    8. '```' → logprob: -5.3234710693359375
    9. '
' → logprob: -5.4484710693359375
    10. ' 

' → logprob: -5.6984710693359375

Token 43: ' de' (ID: 334)
  Prédit: ' garantit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' garantit' → logprob: -1.435755968093872
    2. ' d' → logprob: -1.560755968093872
    3. '#' → logprob: -1.685755968093872
    4. ' de' → logprob: -1.935755968093872
    5. 'd' → logprob: -2.435755968093872
    6. ' assure' → logprob: -3.185755968093872
    7. ' #' → logprob: -4.185755729675293
    8. 'de' → logprob: -4.185755729675293
    9. ' garantir' → logprob: -4.435755729675293
    10. ' garant' → logprob: -4.685755729675293

Token 44: ' répondre' (ID: 53201)
  Prédit: ' garder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' garder' → logprob: -0.42377275228500366
    2. ' garantir' → logprob: -1.9237728118896484
    3. ' gérer' → logprob: -2.2987728118896484
    4. ' conserver' → logprob: -3.5487728118896484
    5. ' assurer' → logprob: -3.7987728118896484
    6. ' faciliter' → logprob: -4.173772811889648
    7. ' rester' → logprob: -4.548772811889648
    8. ' préserver' → logprob: -5.673772811889648
    9. ' rendre' → logprob: -5.798772811889648
    10. 's' → logprob: -6.423772811889648

Token 45: ' aux' (ID: 5850)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -1.1295595169067383
    2. ' au' → logprob: -1.2545595169067383
    3. ' aux' → logprob: -1.3795595169067383
    4. ' ' → logprob: -2.3795595169067383
    5. 's' → logprob: -3.8795595169067383
    6. 'au' → logprob: -5.254559516906738
    7. ' correctement' → logprob: -5.254559516906738
    8. '  ' → logprob: -5.629559516906738
    9. 'aux' → logprob: -5.879559516906738
    10. '```' → logprob: -6.129559516906738

Token 46: ' contraintes' (ID: 167366)
  Prédit: ' problèmes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problèmes' → logprob: -0.8227867484092712
    2. ' cas' → logprob: -1.822786808013916
    3. ' calcul' → logprob: -1.822786808013916
    4. ' problème' → logprob: -2.697786808013916
    5. ' résultats' → logprob: -3.447786808013916
    6. ' probl' → logprob: -3.447786808013916
    7. ' ' → logprob: -3.947786808013916
    8. ' contraintes' → logprob: -4.447786808013916
    9. 'pro' → logprob: -4.572786808013916
    10. ' modulo' → logprob: -4.947786808013916

Token 47: ' classiques' (ID: 136037)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.6211115121841431
    2. ' mod' → logprob: -2.3711113929748535
    3. '_mod' → logprob: -2.7461113929748535
    4. ' :' → logprob: -2.8711113929748535
    5. '```' → logprob: -2.8711113929748535
    6. ' =' → logprob: -2.9961113929748535
    7. ' ' → logprob: -3.6211113929748535
    8. '.' → logprob: -3.6211113929748535
    9. ' modulo' → logprob: -3.9961113929748535
    10. ' de' → logprob: -4.3711113929748535

Token 48: ' des' (ID: 731)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.14176808297634125
    2. '_mod' → logprob: -2.516767978668213
    3. 'MOD' → logprob: -4.141767978668213
    4. ' ' → logprob: -5.016767978668213
    5. '```' → logprob: -5.016767978668213
    6. ' =' → logprob: -5.141767978668213
    7. ' mod' → logprob: -5.266767978668213
    8. ':' → logprob: -6.016767978668213
    9. ' :' → logprob: -6.141767978668213
    10. '=' → logprob: -6.141767978668213

Token 49: ' problèmes' (ID: 49822)
  Prédit: ' problèmes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problèmes' → logprob: -0.41371724009513855
    2. ' compét' → logprob: -2.288717269897461
    3. ' ' → logprob: -2.913717269897461
    4. ' probl' → logprob: -3.163717269897461
    5. ' problème' → logprob: -3.913717269897461
    6. ' proble' → logprob: -4.038717269897461
    7. ' comp' → logprob: -4.163717269897461
    8. ' problems' → logprob: -4.288717269897461
    9. 'pro' → logprob: -4.913717269897461
    10. ' nombres' → logprob: -5.038717269897461

Token 50: ' de' (ID: 334)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.7275699973106384
    2. '_mod' → logprob: -1.6025700569152832
    3. ' =' → logprob: -2.227570056915283
    4. '```' → logprob: -2.602570056915283
    5. '=' → logprob: -3.852570056915283
    6. ' ' → logprob: -4.102570056915283
    7. ' )' → logprob: -4.227570056915283
    8. ' mod' → logprob: -4.352570056915283
    9. ' modulo' → logprob: -4.352570056915283
    10. ' de' → logprob: -4.477570056915283

Token 51: ' programmation' (ID: 166376)
  Prédit: ' programmation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' programmation' → logprob: -0.22331227362155914
    2. ' algorithm' → logprob: -1.973312258720398
    3. ' compét' → logprob: -3.9733123779296875
    4. 'programm' → logprob: -4.3483123779296875
    5. ' compétition' → logprob: -4.4733123779296875
    6. 'algorithm' → logprob: -4.9733123779296875
    7. ' concours' → logprob: -5.3483123779296875
    8. 'comp' → logprob: -6.8483123779296875
    9. 'com' → logprob: -6.8483123779296875
    10. ' alg' → logprob: -7.2233123779296875

Token 52: '.
' (ID: 558)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.32238784432411194
    2. '_mod' → logprob: -1.5723878145217896
    3. 'mod' → logprob: -2.947387933731079
    4. ' ' → logprob: -5.4473876953125
    5. ' _' → logprob: -5.8223876953125
    6. ' =' → logprob: -5.9473876953125
    7. '_m' → logprob: -7.0723876953125
    8. 'm' → logprob: -7.3223876953125
    9. '=' → logprob: -7.5723876953125
    10. '```' → logprob: -7.5723876953125

Token 53: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.001537715899758041
    2. '_mod' → logprob: -7.751537799835205
    3. '```' → logprob: -8.001537322998047
    4. ' mod' → logprob: -8.126537322998047
    5. 'MOD' → logprob: -8.876537322998047
    6. '=' → logprob: -9.626537322998047
    7. 'm' → logprob: -9.626537322998047
    8. ' ' → logprob: -9.876537322998047
    9. ' =' → logprob: -10.001537322998047
    10. '_' → logprob: -10.751537322998047

Token 54: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0015948419459164143
    2. '=' → logprob: -6.5015950202941895
    3. ' ' → logprob: -9.376594543457031
    4. ' =)' → logprob: -13.001594543457031
    5. ' =
' → logprob: -14.001594543457031
    6. 'space' → logprob: -14.251594543457031
    7. '  ' → logprob: -14.751594543457031
    8. ' ' → logprob: -14.751594543457031
    9. ' ==' → logprob: -15.001594543457031
    10. '<|end|>' → logprob: -15.126594543457031

Token 55: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0046285344287753105
    2. '10' → logprob: -5.379628658294678
    3. '100' → logprob: -11.87962818145752
    4. '1' → logprob: -14.37962818145752
    5. ' int' → logprob: -15.12962818145752
    6. ' ' → logprob: -15.25462818145752
    7. 'int' → logprob: -15.50462818145752
    8. ' (' → logprob: -16.254629135131836
    9. '109' → logprob: -18.879629135131836
    10. ' ' → logprob: -18.879629135131836

Token 56: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.03804516792297363
    2. '100' → logprob: -3.2880451679229736
    3. ' ' → logprob: -13.038044929504395
    4. 'int' → logprob: -13.913044929504395
    5. '1' → logprob: -14.663044929504395
    6. '(' → logprob: -15.663044929504395
    7. '```' → logprob: -19.03804588317871
    8. '(int' → logprob: -20.53804588317871
    9. '109' → logprob: -21.28804588317871
    10. ' ' → logprob: -21.41304588317871

Token 57: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0021896373946219683
    2. ' **' → logprob: -6.252189636230469
    3. '9' → logprob: -8.377189636230469
    4. '^' → logprob: -10.502189636230469
    5. '+' → logprob: -13.877189636230469
    6. ' ' → logprob: -14.252189636230469
    7. '%' → logprob: -14.252189636230469
    8. '\xe2\x81' → logprob: -15.127189636230469
    9. '*' → logprob: -15.252189636230469
    10. '000' → logprob: -15.377189636230469

Token 58: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '09' → logprob: -19.5
    4. '```' → logprob: -21.875
    5. '９' → logprob: -23.0
    6. '   ' → logprob: -23.75
    7. '  ' → logprob: -23.875
    8. '۹' → logprob: -25.0
    9. ' ' → logprob: -25.25
    10. '}' → logprob: -25.5

Token 59: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '09' → logprob: -19.5
    3. '```' → logprob: -20.875
    4. ' ' → logprob: -21.75
    5. '９' → logprob: -23.125
    6. '۹' → logprob: -24.625
    7. '९' → logprob: -25.375
    8. '009' → logprob: -25.5
    9. '٩' → logprob: -25.625
    10. '10' → logprob: -25.625

Token 60: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.575942873954773
    2. '+' → logprob: -0.825942873954773
    3. ' ' → logprob: -13.325942993164062
    4. ' ' → logprob: -13.450942993164062
    5. ' plus' → logprob: -16.325942993164062
    6. ' +
' → logprob: -16.325942993164062
    7. '7' → logprob: -17.200942993164062
    8. ')' → logprob: -17.450942993164062
    9. ' +
' → logprob: -17.700942993164062
    10. '＋' → logprob: -18.075942993164062

Token 61: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. '```' → logprob: -19.25007438659668
    4. ' ' → logprob: -19.50007438659668
    5. '07' → logprob: -20.25007438659668
    6. '   ' → logprob: -20.62507438659668
    7. '' → logprob: -21.37507438659668
    8. '  ' → logprob: -21.37507438659668
    9. '007' → logprob: -21.87507438659668
    10. '`' → logprob: -22.00007438659668

Token 62: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '```' → logprob: -21.0
    3. ' ' → logprob: -21.5
    4. '07' → logprob: -21.875
    5. '۷' → logprob: -22.875
    6. '' → logprob: -23.0
    7. '７' → logprob: -23.0
    8. '७' → logprob: -24.125
    9. '27' → logprob: -24.125
    10. '٧' → logprob: -24.125

Token 63: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1524820178747177
    2. '' → logprob: -3.027482032775879
    3. '<|end|>' → logprob: -3.652482032775879
    4. ' 
' → logprob: -3.777482032775879
    5. '\n' → logprob: -4.402482032775879
    6. '\' → logprob: -4.402482032775879
    7. ' ' → logprob: -5.027482032775879
    8. '

' → logprob: -5.277482032775879
    9. '
' → logprob: -5.652482032775879
    10. '```' → logprob: -7.152482032775879

Token 64: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.30832821130752563
    2. '\n' → logprob: -2.058328151702881
    3. '' → logprob: -2.683328151702881
    4. '\' → logprob: -3.183328151702881
    5. ' 
' → logprob: -4.683328151702881
    6. '
' → logprob: -5.058328151702881
    7. '

' → logprob: -5.433328151702881
    8. ' ' → logprob: -5.683328151702881
    9. ',' → logprob: -7.058328151702881
    10. '#' → logprob: -7.308328151702881

Token 65: ' Lecture' (ID: 106534)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9732885956764221
    2. 'def' → logprob: -0.9732885956764221
    3. 'n' → logprob: -1.7232885360717773
    4. 'a' → logprob: -3.3482885360717773
    5. ' n' → logprob: -4.848288536071777
    6. ' def' → logprob: -5.223288536071777
    7. '#' → logprob: -5.598288536071777
    8. ' )' → logprob: -6.098288536071777
    9. ' #' → logprob: -6.223288536071777
    10. 's' → logprob: -6.473288536071777

Token 66: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.004514854401350021
    2. ' )' → logprob: -6.879514694213867
    3. ' (' → logprob: -7.379514694213867
    4. '_' → logprob: -7.379514694213867
    5. '<|end|>' → logprob: -7.754514694213867
    6. '<|end|>' → logprob: -8.379514694213867
    7. 'u' → logprob: -8.879514694213867
    8. '()' → logprob: -8.879514694213867
    9. '(' → logprob: -9.004514694213867
    10. 's' → logprob: -9.129514694213867

Token 67: ''un' (ID: 9788)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04480152204632759
    2. 'e' → logprob: -3.6698014736175537
    3. ' l' → logprob: -5.419801712036133
    4. ' input' → logprob: -5.544801712036133
    5. ' a' → logprob: -5.919801712036133
    6. '_' → logprob: -6.419801712036133
    7. 'a' → logprob: -6.544801712036133
    8. ' e' → logprob: -6.544801712036133
    9. ' la' → logprob: -6.794801712036133
    10. 'input' → logprob: -8.169801712036133

Token 68: ' entier' (ID: 80473)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6853631138801575
    2. ' input' → logprob: -1.4353630542755127
    3. ' nombre' → logprob: -2.0603630542755127
    4. 'e' → logprob: -2.8103630542755127
    5. ' entier' → logprob: -3.4353630542755127
    6. ' n' → logprob: -4.810363292694092
    7. 'a' → logprob: -5.310363292694092
    8. 'n' → logprob: -5.310363292694092
    9. 'entrée' → logprob: -5.685363292694092
    10. ' a' → logprob: -5.810363292694092

Token 69: ' '' (ID: 461)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.49321064352989197
    2. 'n' → logprob: -1.4932106733322144
    3. '(' → logprob: -2.618210554122925
    4. '()' → logprob: -3.243210554122925
    5. ' n' → logprob: -4.868210792541504
    6. 'input' → logprob: -4.868210792541504
    7. ' (' → logprob: -4.993210792541504
    8. ')' → logprob: -5.243210792541504
    9. 'a' → logprob: -5.618210792541504
    10. ',' → logprob: -5.743210792541504

Token 70: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0007216068916022778
    2. ' n' → logprob: -7.750721454620361
    3. 't' → logprob: -8.87572193145752
    4. 'N' → logprob: -8.87572193145752
    5. 'x' → logprob: -12.25072193145752
    6. 'k' → logprob: -12.75072193145752
    7. 'a' → logprob: -13.50072193145752
    8. ' ' → logprob: -14.25072193145752
    9. ' N' → logprob: -14.62572193145752
    10. ' t' → logprob: -15.12572193145752

Token 71: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2602372467517853
    2. ' ' → logprob: -1.885237216949463
    3. ' =' → logprob: -3.510237216949463
    4. '=' → logprob: -4.010237216949463
    5. ' )' → logprob: -4.510237216949463
    6. ',' → logprob: -4.635237216949463
    7. 'n' → logprob: -6.260237216949463
    8. ''' → logprob: -6.760237216949463
    9. '<|end|>' → logprob: -7.010237216949463
    10. 'a' → logprob: -7.635237216949463

Token 72: ' qui' (ID: 2780)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.09251108765602112
    2. ' =' → logprob: -2.8425111770629883
    3. ' ' → logprob: -4.717511177062988
    4. '=' → logprob: -4.717511177062988
    5. ',' → logprob: -5.217511177062988
    6. ' n' → logprob: -6.092511177062988
    7. ')' → logprob: -6.717511177062988
    8. ',n' → logprob: -7.217511177062988
    9. '<|end|>' → logprob: -7.342511177062988
    10. '=n' → logprob: -7.467511177062988

Token 73: ' représente' (ID: 88912)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005818825680762529
    2. '=' → logprob: -5.255818843841553
    3. ' ' → logprob: -7.505818843841553
    4. 's' → logprob: -11.505818367004395
    5. ' représente' → logprob: -12.380818367004395
    6. '=int' → logprob: -12.630818367004395
    7. ' n' → logprob: -12.755818367004395
    8. 'n' → logprob: -12.880818367004395
    9. 'est' → logprob: -13.130818367004395
    10. ',' → logprob: -13.380818367004395

Token 74: ' probablement' (ID: 87740)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4832381010055542
    2. ' l' → logprob: -1.3582381010055542
    3. 'l' → logprob: -2.9832382202148438
    4. ' le' → logprob: -3.4832382202148438
    5. ' =' → logprob: -4.483238220214844
    6. ' la' → logprob: -4.608238220214844
    7. '  ' → logprob: -5.483238220214844
    8. ',' → logprob: -5.733238220214844
    9. 'le' → logprob: -5.733238220214844
    10. 'n' → logprob: -5.983238220214844

Token 75: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13594304025173187
    2. ' l' → logprob: -2.5109429359436035
    3. 'l' → logprob: -4.1359429359436035
    4. ' le' → logprob: -4.2609429359436035
    5. ' la' → logprob: -5.0109429359436035
    6. '  ' → logprob: -6.0109429359436035
    7. ' =' → logprob: -6.6359429359436035
    8. 'le' → logprob: -7.1359429359436035
    9. ' n' → logprob: -7.3859429359436035
    10. 'n' → logprob: -7.7609429359436035

Token 76: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.06297289580106735
    2. 'nombre' → logprob: -2.8129727840423584
    3. 'n' → logprob: -7.4379730224609375
    4. ' ' → logprob: -8.187973022460938
    5. 's' → logprob: -10.562973022460938
    6. ' ' → logprob: -10.562973022460938
    7. ' nombres' → logprob: -10.562973022460938
    8. ' number' → logprob: -11.187973022460938
    9. ' n' → logprob: -11.437973022460938
    10. '_nombre' → logprob: -11.937973022460938

Token 77: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.32936325669288635
    2. ' d' → logprob: -1.829363226890564
    3. ' de' → logprob: -3.3293633460998535
    4. '<|end|>' → logprob: -3.7043633460998535
    5. '  ' → logprob: -4.5793633460998535
    6. 'd' → logprob: -4.7043633460998535
    7. ')' → logprob: -4.7043633460998535
    8. ' )' → logprob: -4.9543633460998535
    9. 's' → logprob: -4.9543633460998535
    10. 'de' → logprob: -5.0793633460998535

Token 78: ''' (ID: 6)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.036721669137477875
    2. ' éléments' → logprob: -4.036721706390381
    3. 'élé' → logprob: -4.786721706390381
    4. '_' → logprob: -5.286721706390381
    5. 'e' → logprob: -6.786721706390381
    6. ' elements' → logprob: -7.411721706390381
    7. ' e' → logprob: -7.786721706390381
    8. '  ' → logprob: -8.036721229553223
    9. ' u' → logprob: -8.161721229553223
    10. ' '' → logprob: -8.286721229553223

Token 79: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.7127285599708557
    2. 'é' → logprob: -1.337728500366211
    3. ' ' → logprob: -2.337728500366211
    4. ''' → logprob: -2.962728500366211
    5. 'e' → logprob: -3.212728500366211
    6. 'a' → logprob: -3.962728500366211
    7. 'l' → logprob: -4.087728500366211
    8. '_' → logprob: -5.212728500366211
    9. ''é' → logprob: -6.087728500366211
    10. 's' → logprob: -6.212728500366211

Token 80: 'ments' (ID: 1626)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.14556603133678436
    2. 'ments' → logprob: -2.020565986633301
    3. 'v' → logprob: -6.520565986633301
    4. 'ment' → logprob: -7.645565986633301
    5. 'м' → logprob: -7.895565986633301
    6. 'e' → logprob: -8.6455659866333
    7. 'è' → logprob: -9.2705659866333
    8. 'me' → logprob: -10.1455659866333
    9. '`' → logprob: -10.3955659866333
    10. 'éments' → logprob: -10.6455659866333

Token 81: ' dans' (ID: 2671)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.33610424399375916
    2. 'n' → logprob: -1.7111042737960815
    3. ',' → logprob: -3.461104154586792
    4. '=' → logprob: -3.711104154586792
    5. '<|end|>' → logprob: -4.336104393005371
    6. ')' → logprob: -4.961104393005371
    7. 's' → logprob: -5.086104393005371
    8. ' =' → logprob: -5.461104393005371
    9. '.' → logprob: -5.711104393005371
    10. '#' → logprob: -5.836104393005371

Token 82: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.019876567646861076
    2. ' l' → logprob: -4.644876480102539
    3. ' la' → logprob: -5.019876480102539
    4. ' le' → logprob: -6.644876480102539
    5. 'l' → logprob: -7.394876480102539
    6. ' input' → logprob: -8.269876480102539
    7. ' une' → logprob: -8.394876480102539
    8. ' un' → logprob: -8.519876480102539
    9. '_' → logprob: -8.519876480102539
    10. '  ' → logprob: -8.519876480102539

Token 83: ' sé' (ID: 7462)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.006460986100137234
    2. ' tableau' → logprob: -5.131461143493652
    3. '_' → logprob: -9.381461143493652
    4. ' t' → logprob: -9.756461143493652
    5. ' table' → logprob: -9.756461143493652
    6. 'n' → logprob: -10.256461143493652
    7. '  ' → logprob: -10.381461143493652
    8. ' liste' → logprob: -10.381461143493652
    9. ' '' → logprob: -10.881461143493652
    10. 'l' → logprob: -10.881461143493652

Token 84: 'quence' (ID: 6975)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6230475306510925
    2. 'quence' → logprob: -1.2480475902557373
    3. 'q' → logprob: -1.8730475902557373
    4. 'rie' → logprob: -3.8730475902557373
    5. 'qu' → logprob: -7.498047351837158
    6. ' ' → logprob: -8.248047828674316
    7. 'QUENCE' → logprob: -8.498047828674316
    8. '#' → logprob: -8.873047828674316
    9. 'que' → logprob: -8.998047828674316
    10. '   ' → logprob: -8.998047828674316

Token 85: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0033880260307341814
    2. '
' → logprob: -6.003387928009033
    3. '\n' → logprob: -7.878387928009033
    4. '\' → logprob: -8.503388404846191
    5. ' 
' → logprob: -9.378388404846191
    6. 's' → logprob: -9.503388404846191
    7. ' n' → logprob: -9.878388404846191
    8. ',' → logprob: -10.128388404846191
    9. ' ' → logprob: -11.128388404846191
    10. '#' → logprob: -11.753388404846191

Token 86: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.816093228830141e-06
    2. '\n' → logprob: -14.00000286102295
    3. ' n' → logprob: -14.25000286102295
    4. '
' → logprob: -14.62500286102295
    5. ' 
' → logprob: -14.87500286102295
    6. '\' → logprob: -16.125001907348633
    7. 'i' → logprob: -16.125001907348633
    8. ',' → logprob: -16.750001907348633
    9. '#' → logprob: -16.875001907348633
    10. 's' → logprob: -17.000001907348633

Token 87: ' La' (ID: 3038)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.8351892473874614e-05
    2. ' n' → logprob: -10.000048637390137
    3. ' 
' → logprob: -13.375048637390137
    4. '
' → logprob: -14.500048637390137
    5. ' ' → logprob: -15.625048637390137
    6. '' → logprob: -15.625048637390137
    7. '\' → logprob: -16.00004768371582
    8. ',' → logprob: -16.37504768371582
    9. 'x' → logprob: -16.50004768371582
    10. '\n' → logprob: -16.50004768371582

Token 88: ' fonction' (ID: 17610)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.003682617098093033
    2. 'n' → logprob: -6.253682613372803
    3. ' n' → logprob: -6.628682613372803
    4. ' =' → logprob: -9.003683090209961
    5. '_' → logprob: -9.128683090209961
    6. '  ' → logprob: -9.503683090209961
    7. ' space' → logprob: -11.003683090209961
    8. 's' → logprob: -11.128683090209961
    9. 'space' → logprob: -11.503683090209961
    10. ' _' → logprob: -11.753683090209961

Token 89: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19396160542964935
    2. ' input' → logprob: -2.0689616203308105
    3. ' n' → logprob: -4.4439616203308105
    4. 'n' → logprob: -4.5689616203308105
    5. 'input' → logprob: -4.5689616203308105
    6. ' i' → logprob: -4.8189616203308105
    7. ' =' → logprob: -5.5689616203308105
    8. '=input' → logprob: -6.5689616203308105
    9. ' int' → logprob: -6.6939616203308105
    10. ' `' → logprob: -7.8189616203308105

Token 90: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3136460483074188
    2. '(' → logprob: -1.3136460781097412
    3. '().' → logprob: -8.93864631652832
    4. '('' → logprob: -9.43864631652832
    5. '(
' → logprob: -9.56364631652832
    6. ')' → logprob: -10.43864631652832
    7. '()
' → logprob: -11.31364631652832
    8. '("' → logprob: -11.68864631652832
    9. '("")' → logprob: -11.68864631652832
    10. ' ()' → logprob: -11.68864631652832

Token 91: ' lit' (ID: 11980)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6935277581214905
    2. '()' → logprob: -0.6935277581214905
    3. '().' → logprob: -9.443528175354004
    4. '(
' → logprob: -9.443528175354004
    5. ')' → logprob: -9.568528175354004
    6. ' ()' → logprob: -10.318528175354004
    7. '('' → logprob: -10.568528175354004
    8. '.' → logprob: -10.693528175354004
    9. ',' → logprob: -11.568528175354004
    10. ' (' → logprob: -11.943528175354004

Token 92: ' une' (ID: 2463)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15959182381629944
    2. '()' → logprob: -2.1595919132232666
    3. ' ' → logprob: -4.1595916748046875
    4. ' (' → logprob: -4.7845916748046875
    5. '('' → logprob: -5.2845916748046875
    6. '("' → logprob: -6.9095916748046875
    7. ' ()' → logprob: -7.0345916748046875
    8. ')' → logprob: -8.034591674804688
    9. ',' → logprob: -8.659591674804688
    10. '("")' → logprob: -8.659591674804688

Token 93: ' ligne' (ID: 19583)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10814446955919266
    2. ' ligne' → logprob: -2.733144521713257
    3. ' chaîne' → logprob: -3.983144521713257
    4. ' entrée' → logprob: -5.233144283294678
    5. '()' → logprob: -5.733144283294678
    6. 'entrée' → logprob: -5.983144283294678
    7. ' valeur' → logprob: -6.483144283294678
    8. ' )' → logprob: -6.483144283294678
    9. 'n' → logprob: -7.483144283294678
    10. '(' → logprob: -7.983144283294678

Token 94: ' du' (ID: 1462)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08226291090250015
    2. '(' → logprob: -2.5822629928588867
    3. '.' → logprob: -6.957262992858887
    4. ' ()' → logprob: -6.957262992858887
    5. ')' → logprob: -8.207262992858887
    6. '().' → logprob: -8.457262992858887
    7. '(
' → logprob: -8.582262992858887
    8. ' (' → logprob: -8.832262992858887
    9. ',' → logprob: -8.832262992858887
    10. '()
' → logprob: -9.332262992858887

Token 95: ' standard' (ID: 7024)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6916662454605103
    2. ' code' → logprob: -1.5666662454605103
    3. 'input' → logprob: -1.6916662454605103
    4. 'entrée' → logprob: -3.6916661262512207
    5. ' ' → logprob: -4.066666126251221
    6. 'f' → logprob: -4.566666126251221
    7. 'code' → logprob: -4.566666126251221
    8. 's' → logprob: -4.941666126251221
    9. ' utilisateur' → logprob: -5.441666126251221
    10. ' f' → logprob: -5.566666126251221

Token 96: ' input' (ID: 3422)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03149972856044769
    2. 'e' → logprob: -3.7814996242523193
    3. ')' → logprob: -6.531499862670898
    4. '(' → logprob: -6.531499862670898
    5. '().' → logprob: -6.656499862670898
    6. ' ()' → logprob: -6.906499862670898
    7. '_' → logprob: -7.531499862670898
    8. '.' → logprob: -7.781499862670898
    9. 's' → logprob: -8.031499862670898
    10. '\' → logprob: -8.031499862670898

Token 97: ' sous' (ID: 14487)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.29464882612228394
    2. '(' → logprob: -2.2946488857269287
    3. ')' → logprob: -2.2946488857269287
    4. 'n' → logprob: -3.2946488857269287
    5. ' ' → logprob: -5.54464864730835
    6. '(
' → logprob: -5.79464864730835
    7. '.' → logprob: -6.41964864730835
    8. '\' → logprob: -7.16964864730835
    9. '()
' → logprob: -7.16964864730835
    10. '#' → logprob: -7.29464864730835

Token 98: ' forme' (ID: 27450)
  Prédit: ' forme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' forme' → logprob: -0.18757778406143188
    2. ' une' → logprob: -3.187577724456787
    3. ' ' → logprob: -3.312577724456787
    4. 'e' → logprob: -4.187577724456787
    5. ' ' → logprob: -4.687577724456787
    6. '()' → logprob: -4.937577724456787
    7. 'forme' → logprob: -5.062577724456787
    8. ' la' → logprob: -5.437577724456787
    9. 'n' → logprob: -5.437577724456787
    10. 's' → logprob: -5.562577724456787

Token 99: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.021679798141121864
    2. ' de' → logprob: -4.021679878234863
    3. 'd' → logprob: -6.521679878234863
    4. 'de' → logprob: -7.021679878234863
    5. ')' → logprob: -7.771679878234863
    6. 's' → logprob: -8.396679878234863
    7. ' ' → logprob: -9.146679878234863
    8. 'e' → logprob: -9.396679878234863
    9. ''' → logprob: -9.646679878234863
    10. '`' → logprob: -10.521679878234863

Token 100: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.23551572859287262
    2. 'chaine' → logprob: -1.7355157136917114
    3. 'string' → logprob: -4.610515594482422
    4. ' chaine' → logprob: -4.860515594482422
    5. ' string' → logprob: -5.110515594482422
    6. 'cha' → logprob: -5.110515594482422
    7. 's' → logprob: -6.235515594482422
    8. 'str' → logprob: -7.360515594482422
    9. 'texte' → logprob: -7.485515594482422
    10. ' chaînes' → logprob: -7.860515594482422

Token 101: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3415271043777466
    2. '(' → logprob: -1.8415271043777466
    3. ',' → logprob: -3.591526985168457
    4. ' ' → logprob: -4.341526985168457
    5. '(
' → logprob: -4.466526985168457
    6. 'n' → logprob: -4.966526985168457
    7. '.' → logprob: -5.091526985168457
    8. ' (' → logprob: -5.091526985168457
    9. '()' → logprob: -5.091526985168457
    10. 's' → logprob: -5.216526985168457

Token 102: ' puis' (ID: 18766)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10580828785896301
    2. 'n' → logprob: -2.9808082580566406
    3. ')' → logprob: -3.8558082580566406
    4. ' n' → logprob: -4.355808258056641
    5. ' '' → logprob: -5.730808258056641
    6. ' )' → logprob: -5.980808258056641
    7. ',' → logprob: -6.230808258056641
    8. ''' → logprob: -6.480808258056641
    9. '  
' → logprob: -7.230808258056641
    10. ' "' → logprob: -7.355808258056641

Token 103: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.085395336151123
    2. ' n' → logprob: -1.085395336151123
    3. 'n' → logprob: -1.960395336151123
    4. ')' → logprob: -2.835395336151123
    5. ' int' → logprob: -3.835395336151123
    6. 'int' → logprob: -4.085395336151123
    7. 's' → logprob: -4.335395336151123
    8. ' convert' → logprob: -4.460395336151123
    9. ' )' → logprob: -4.710395336151123
    10. ' s' → logprob: -4.960395336151123

Token 104: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002707529056351632
    2. '(
' → logprob: -9.87527084350586
    3. '()' → logprob: -10.00027084350586
    4. '(input' → logprob: -10.00027084350586
    5. '('' → logprob: -10.25027084350586
    6. ',' → logprob: -10.50027084350586
    7. ' (' → logprob: -11.12527084350586
    8. ')' → logprob: -11.25027084350586
    9. 's' → logprob: -11.37527084350586
    10. ' ' → logprob: -12.00027084350586

Token 105: ' convert' (ID: 8452)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003054301778320223
    2. '(
' → logprob: -9.50030517578125
    3. ' (' → logprob: -9.62530517578125
    4. ',' → logprob: -10.37530517578125
    5. ')' → logprob: -10.37530517578125
    6. '('' → logprob: -10.62530517578125
    7. '<|end|>' → logprob: -10.87530517578125
    8. ' ' → logprob: -11.00030517578125
    9. '()' → logprob: -11.12530517578125
    10. 's' → logprob: -12.50030517578125

Token 106: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.04833468049764633
    2. 'i' → logprob: -3.4233345985412598
    3. '(' → logprob: -4.67333459854126
    4. ' (' → logprob: -6.79833459854126
    5. ')' → logprob: -6.92333459854126
    6. ' ' → logprob: -7.54833459854126
    7. 'ie' → logprob: -7.79833459854126
    8. 'e' → logprob: -8.048335075378418
    9. ' it' → logprob: -8.173335075378418
    10. 'iert' → logprob: -8.423335075378418

Token 107: ' cette' (ID: 7696)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0027166646905243397
    2. '(input' → logprob: -7.002716541290283
    3. ' ' → logprob: -8.127717018127441
    4. ' (' → logprob: -8.127717018127441
    5. '()' → logprob: -8.252717018127441
    6. ')' → logprob: -9.002717018127441
    7. 'l' → logprob: -9.127717018127441
    8. ',' → logprob: -9.252717018127441
    9. '(n' → logprob: -9.627717018127441
    10. '(
' → logprob: -9.627717018127441

Token 108: ' chaîne' (ID: 89288)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.42618227005004883
    2. ' espace' → logprob: -1.3011822700500488
    3. '(' → logprob: -4.051182270050049
    4. ' a' → logprob: -4.801182270050049
    5. ' space' → logprob: -4.801182270050049
    6. 'a' → logprob: -4.926182270050049
    7. ' )' → logprob: -5.051182270050049
    8. '  ' → logprob: -5.676182270050049
    9. ')' → logprob: -5.926182270050049
    10. ' (' → logprob: -6.051182270050049

Token 109: ' en' (ID: 469)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002754353219643235
    2. '('' → logprob: -6.502754211425781
    3. ' (' → logprob: -7.752754211425781
    4. ' ' → logprob: -8.002754211425781
    5. '(
' → logprob: -9.252754211425781
    6. ',' → logprob: -9.502754211425781
    7. ''' → logprob: -10.002754211425781
    8. '<|end|>' → logprob: -10.002754211425781
    9. 's' → logprob: -10.127754211425781
    10. '("' → logprob: -10.252754211425781

Token 110: ' entier' (ID: 80473)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.0862819105386734
    2. ' int' → logprob: -3.7112820148468018
    3. ' ' → logprob: -3.9612820148468018
    4. ' entier' → logprob: -4.211281776428223
    5. 'n' → logprob: -4.461281776428223
    6. 'int' → logprob: -5.586281776428223
    7. 'un' → logprob: -5.711281776428223
    8. 'ent' → logprob: -6.086281776428223
    9. ' n' → logprob: -6.336281776428223
    10. ' integer' → logprob: -7.461281776428223

Token 111: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5232768058776855
    2. '\n' → logprob: -1.5232768058776855
    3. ')' → logprob: -2.5232768058776855
    4. '
' → logprob: -3.3982768058776855
    5. ' ' → logprob: -3.7732768058776855
    6. '\' → logprob: -3.7732768058776855
    7. ' 
' → logprob: -5.0232768058776855
    8. '(n' → logprob: -5.3982768058776855
    9. '<|end|>' → logprob: -5.6482768058776855
    10. ',' → logprob: -6.0232768058776855

Token 112: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.1279553291387856e-05
    2. '
' → logprob: -11.875011444091797
    3. ' 
' → logprob: -13.125011444091797
    4. '\n' → logprob: -14.000011444091797
    5. '\' → logprob: -14.500011444091797
    6. '  
' → logprob: -15.375011444091797
    7. '' → logprob: -15.750011444091797
    8. ',' → logprob: -16.000011444091797
    9. '#' → logprob: -16.250011444091797
    10. ' n' → logprob: -16.375011444091797

Token 113: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0024882610887289047
    2. '=' → logprob: -6.252488136291504
    3. ' ' → logprob: -7.502488136291504
    4. ' =
' → logprob: -12.252488136291504
    5. ',' → logprob: -14.252488136291504
    6. ' ' → logprob: -14.252488136291504
    7. ')' → logprob: -14.752488136291504
    8. '.' → logprob: -15.252488136291504
    9. 's' → logprob: -15.252488136291504
    10. ' =
' → logprob: -15.627488136291504

Token 114: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.008615399710834026
    2. 'int' → logprob: -4.758615493774414
    3. ' ' → logprob: -15.133615493774414
    4. '=int' → logprob: -15.383615493774414
    5. ' in' → logprob: -16.133615493774414
    6. '	int' → logprob: -16.883615493774414
    7. ' ' → logprob: -17.133615493774414
    8. ' input' → logprob: -17.133615493774414
    9. '<int' → logprob: -17.258615493774414
    10. '[int' → logprob: -17.258615493774414

Token 115: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.3132951557636261
    2. '(' → logprob: -1.3132951259613037
    3. 'input' → logprob: -10.938295364379883
    4. ' (' → logprob: -11.813295364379883
    5. '(
' → logprob: -12.313295364379883
    6. '()' → logprob: -12.938295364379883
    7. '(

' → logprob: -14.063295364379883
    8. '=input' → logprob: -15.938295364379883
    9. ' input' → logprob: -16.438295364379883
    10. '(in' → logprob: -16.563295364379883

Token 116: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.12700138986110687
    2. '()' → logprob: -2.1270012855529785
    3. '(' → logprob: -10.002001762390137
    4. ' ())' → logprob: -11.127001762390137
    5. '()))' → logprob: -12.627001762390137
    6. '().' → logprob: -13.502001762390137
    7. '()`' → logprob: -13.627001762390137
    8. ')' → logprob: -13.752001762390137
    9. '();)' → logprob: -13.752001762390137
    10. '()]' → logprob: -14.127001762390137

Token 117: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7604802846908569
    2. ' 
' → logprob: -1.135480284690857
    3. 'a' → logprob: -2.3854804039001465
    4. '
' → logprob: -3.3854804039001465
    5. '  
' → logprob: -3.7604804039001465
    6. 's' → logprob: -4.1354804039001465
    7. ',' → logprob: -4.8854804039001465
    8. ')' → logprob: -4.8854804039001465
    9. '\n' → logprob: -5.1354804039001465
    10. 'n' → logprob: -5.1354804039001465

Token 118: ' Lecture' (ID: 106534)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1725138425827026
    2. 's' → logprob: -1.1725138425827026
    3. 'sequence' → logprob: -1.9225138425827026
    4. 'arr' → logprob: -2.422513961791992
    5. 'lst' → logprob: -2.922513961791992
    6. ' sequence' → logprob: -3.922513961791992
    7. 'data' → logprob: -4.297513961791992
    8. ' a' → logprob: -4.672513961791992
    9. 'array' → logprob: -5.297513961791992
    10. 'seq' → logprob: -5.547513961791992

Token 119: ' d' (ID: 272)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004873658064752817
    2. '(' → logprob: -5.379873752593994
    3. ' ()' → logprob: -9.629873275756836
    4. 's' → logprob: -10.004873275756836
    5. '_' → logprob: -10.254873275756836
    6. ' des' → logprob: -11.129873275756836
    7. 'n' → logprob: -11.129873275756836
    8. '[' → logprob: -11.504873275756836
    9. '#' → logprob: -11.629873275756836
    10. 'des' → logprob: -11.879873275756836

Token 120: ''une' (ID: 13337)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31777068972587585
    2. '()' → logprob: -1.3177707195281982
    3. 'a' → logprob: -6.067770481109619
    4. 'e' → logprob: -7.567770481109619
    5. '_' → logprob: -7.567770481109619
    6. '[' → logprob: -8.442770957946777
    7. '('' → logprob: -8.567770957946777
    8. '[]' → logprob: -9.067770957946777
    9. 'une' → logprob: -9.317770957946777
    10. ' (' → logprob: -9.317770957946777

Token 121: ' sé' (ID: 7462)
  Prédit: ' liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.13044920563697815
    2. ' ' → logprob: -3.2554492950439453
    3. 'liste' → logprob: -3.2554492950439453
    4. ' ligne' → logprob: -3.3804492950439453
    5. 's' → logprob: -5.755449295043945
    6. 'ligne' → logprob: -6.755449295043945
    7. ' =' → logprob: -6.880449295043945
    8. 'list' → logprob: -7.255449295043945
    9. ' list' → logprob: -7.255449295043945
    10. 'l' → logprob: -7.255449295043945

Token 122: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.28207945823669434
    2. 'rie' → logprob: -1.4070794582366943
    3. 'q' → logprob: -7.532079696655273
    4. 'qu' → logprob: -8.532079696655273
    5. 'que' → logprob: -9.532079696655273
    6. 'QUENCE' → logprob: -10.282079696655273
    7. 'r' → logprob: -10.407079696655273
    8. 'quences' → logprob: -11.032079696655273
    9. 'par' → logprob: -12.157079696655273
    10. 'ance' → logprob: -12.157079696655273

Token 123: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.18978449702262878
    2. '(' → logprob: -1.8147845268249512
    3. 's' → logprob: -5.189784526824951
    4. '[' → logprob: -5.939784526824951
    5. 'n' → logprob: -7.939784526824951
    6. '()[' → logprob: -8.564784049987793
    7. '(n' → logprob: -8.689784049987793
    8. 'a' → logprob: -8.814784049987793
    9. '([' → logprob: -9.189784049987793
    10. '[]' → logprob: -9.189784049987793

Token 124: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.06849590688943863
    2. ' integers' → logprob: -3.443495988845825
    3. 'n' → logprob: -4.193495750427246
    4. ' nombres' → logprob: -4.318495750427246
    5. 'inte' → logprob: -6.193495750427246
    6. ' ent' → logprob: -6.568495750427246
    7. ' list' → logprob: -7.943495750427246
    8. ' la' → logprob: -8.193495750427246
    9. 'ints' → logprob: -8.193495750427246
    10. 'ent' → logprob: -8.443495750427246

Token 125: ' ent' (ID: 1121)
  Prédit: ' integers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' integers' → logprob: -0.8082470297813416
    2. ' ' → logprob: -1.3082470893859863
    3. 's' → logprob: -2.0582470893859863
    4. ' ' → logprob: -2.9332470893859863
    5. '()' → logprob: -3.8082470893859863
    6. ' éléments' → logprob: -4.683247089385986
    7. '_' → logprob: -4.933247089385986
    8. ' )' → logprob: -5.058247089385986
    9. 'e' → logprob: -5.433247089385986
    10. ' s' → logprob: -5.433247089385986

Token 126: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.05203070864081383
    2. 't' → logprob: -3.1770308017730713
    3. 'ières' → logprob: -5.302030563354492
    4. 'ers' → logprob: -6.052030563354492
    5. 'i' → logprob: -7.677030563354492
    6. 'eurs' → logprob: -8.302030563354492
    7. 'ités' → logprob: -8.302030563354492
    8. 'ti' → logprob: -9.177030563354492
    9. 'e' → logprob: -9.177030563354492
    10. 'ètres' → logprob: -9.552030563354492

Token 127: ' sur' (ID: 1512)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5060498714447021
    2. 's' → logprob: -1.3810498714447021
    3. ' a' → logprob: -2.631049871444702
    4. 'arr' → logprob: -4.006050109863281
    5. ' lst' → logprob: -4.631050109863281
    6. 'data' → logprob: -4.631050109863281
    7. 'lst' → logprob: -5.006050109863281
    8. 'numbers' → logprob: -5.631050109863281
    9. ' s' → logprob: -6.006050109863281
    10. 't' → logprob: -6.006050109863281

Token 128: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.0013170238817110658
    2. ' la' → logprob: -6.751317024230957
    3. 'une' → logprob: -9.876317024230957
    4. ''une' → logprob: -10.501317024230957
    5. ' a' → logprob: -10.876317024230957
    6. 'a' → logprob: -11.126317024230957
    7. ' ' → logprob: -11.251317024230957
    8. 'la' → logprob: -12.126317024230957
    9. ' ' → logprob: -12.501317024230957
    10. ' una' → logprob: -12.626317024230957

Token 129: ' seule' (ID: 41983)
  Prédit: ' seule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seule' → logprob: -0.061099741607904434
    2. ' ligne' → logprob: -3.0610997676849365
    3. 'ligne' → logprob: -4.936099529266357
    4. ' unique' → logprob: -6.561099529266357
    5. 'se' → logprob: -7.061099529266357
    6. ' même' → logprob: -7.311099529266357
    7. ' seul' → logprob: -7.311099529266357
    8. ' single' → logprob: -7.561099529266357
    9. ' ' → logprob: -8.186100006103516
    10. 'e' → logprob: -8.311100006103516

Token 130: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.0688428282737732
    2. 'ligne' → logprob: -2.818842887878418
    3. ' line' → logprob: -5.443842887878418
    4. 'line' → logprob: -6.568842887878418
    5. 'l' → logprob: -7.193842887878418
    6. ' ' → logprob: -9.443842887878418
    7. ' lin' → logprob: -9.568842887878418
    8. ' lignes' → logprob: -10.568842887878418
    9. ' línea' → logprob: -10.818842887878418
    10. 'lin' → logprob: -11.193842887878418

Token 131: ' sépar' (ID: 97160)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.12169226258993149
    2. ',' → logprob: -2.746692180633545
    3. 'n' → logprob: -4.621692180633545
    4. ' ,' → logprob: -4.871692180633545
    5. 'numbers' → logprob: -5.246692180633545
    6. ' =' → logprob: -5.371692180633545
    7. 'values' → logprob: -5.621692180633545
    8. 'data' → logprob: -6.496692180633545
    9. 'lst' → logprob: -6.746692180633545
    10. 'a' → logprob: -6.871692180633545

Token 132: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.5655246376991272
    2. 'ée' → logprob: -1.0655245780944824
    3. 'é' → logprob: -2.6905245780944824
    4. 'e' → logprob: -4.690524578094482
    5. 'ées' → logprob: -5.190524578094482
    6. ' par' → logprob: -6.440524578094482
    7. 'par' → logprob: -7.190524578094482
    8. 'es' → logprob: -7.190524578094482
    9. 'er' → logprob: -7.690524578094482
    10. 's' → logprob: -7.690524578094482

Token 133: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.06609456986188889
    2. '<|end|>' → logprob: -3.5660946369171143
    3. 'par' → logprob: -3.9410946369171143
    4. ' by' → logprob: -4.941094398498535
    5. ' ' → logprob: -5.566094398498535
    6. 's' → logprob: -6.441094398498535
    7. ' espaces' → logprob: -7.441094398498535
    8. 'es' → logprob: -7.691094398498535
    9. 'space' → logprob: -7.691094398498535
    10. 'by' → logprob: -7.941094398498535

Token 134: ' des' (ID: 731)
  Prédit: ' espaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -1.1780188083648682
    2. ' ' → logprob: -1.4280188083648682
    3. ''espace' → logprob: -2.303018808364868
    4. ''' → logprob: -2.303018808364868
    5. ' des' → logprob: -2.928018808364868
    6. 'spaces' → logprob: -3.053018808364868
    7. 'es' → logprob: -3.678018808364868
    8. ''esp' → logprob: -3.803018808364868
    9. 'space' → logprob: -3.928018808364868
    10. ' espace' → logprob: -3.928018808364868

Token 135: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.02559545263648033
    2. ' ' → logprob: -4.900595664978027
    3. ' espace' → logprob: -5.400595664978027
    4. 'esp' → logprob: -5.525595664978027
    5. ''esp' → logprob: -5.900595664978027
    6. ''espace' → logprob: -5.900595664978027
    7. 'spaces' → logprob: -6.900595664978027
    8. 'es' → logprob: -7.025595664978027
    9. 'space' → logprob: -7.150595664978027
    10. ' espacios' → logprob: -7.775595664978027

Token 136: '.
' (ID: 558)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.31370091438293457
    2. ',' → logprob: -1.8137009143829346
    3. 'n' → logprob: -4.3137006759643555
    4. 'a' → logprob: -4.3137006759643555
    5. '[' → logprob: -4.4387006759643555
    6. 'values' → logprob: -4.8137006759643555
    7. ' =' → logprob: -4.8137006759643555
    8. ')' → logprob: -5.0637006759643555
    9. 'data' → logprob: -5.3137006759643555
    10. ' ' → logprob: -5.5637006759643555

Token 137: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.42326438426971436
    2. 's' → logprob: -2.173264503479004
    3. 'arr' → logprob: -2.298264503479004
    4. 'sequence' → logprob: -3.048264503479004
    5. 'numbers' → logprob: -3.548264503479004
    6. ' a' → logprob: -3.923264503479004
    7. 'nums' → logprob: -4.798264503479004
    8. 'data' → logprob: -5.298264503479004
    9. ' sequence' → logprob: -5.298264503479004
    10. ' numbers' → logprob: -5.673264503479004

Token 138: ' input' (ID: 3422)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.09799928218126297
    2. 'arr' → logprob: -2.972999334335327
    3. ' a' → logprob: -3.347999334335327
    4. ' arr' → logprob: -6.097999095916748
    5. 'sequence' → logprob: -6.847999095916748
    6. 'lst' → logprob: -6.972999095916748
    7. 's' → logprob: -7.347999095916748
    8. 'seq' → logprob: -7.597999095916748
    9. ' sequence' → logprob: -7.972999095916748
    10. 'data' → logprob: -8.472999572753906

Token 139: '()' (ID: 416)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.5766480565071106
    2. '()' → logprob: -0.8266480565071106
    3. 's' → logprob: -7.826648235321045
    4. '()
' → logprob: -10.076647758483887
    5. '())' → logprob: -10.451647758483887
    6. 'split' → logprob: -10.576647758483887
    7. '_' → logprob: -10.701647758483887
    8. ')' → logprob: -10.701647758483887
    9. '_str' → logprob: -10.826647758483887
    10. '_list' → logprob: -10.951647758483887

Token 140: ' lit' (ID: 11980)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.03271923586726189
    2. '.split' → logprob: -3.782719135284424
    3. '()' → logprob: -5.157719135284424
    4. '.' → logprob: -5.782719135284424
    5. ' .' → logprob: -8.782719612121582
    6. 'split' → logprob: -8.782719612121582
    7. ').' → logprob: -9.407719612121582
    8. ')' → logprob: -9.532719612121582
    9. '.s' → logprob: -10.032719612121582
    10. 's' → logprob: -10.282719612121582

Token 141: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1430858075618744
    2. '().' → logprob: -2.0180857181549072
    3. '(' → logprob: -8.268085479736328
    4. ' la' → logprob: -9.768085479736328
    5. 's' → logprob: -11.018085479736328
    6. 'n' → logprob: -11.393085479736328
    7. ' une' → logprob: -11.643085479736328
    8. '()[' → logprob: -11.643085479736328
    9. ' ()' → logprob: -11.768085479736328
    10. '('' → logprob: -12.018085479736328

Token 142: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.2855522930622101
    2. 's' → logprob: -2.6605522632598877
    3. ' chaîne' → logprob: -2.9105522632598877
    4. 'ligne' → logprob: -3.1605522632598877
    5. ' liste' → logprob: -4.160552501678467
    6. ' input' → logprob: -4.285552501678467
    7. 'input' → logprob: -4.535552501678467
    8. ' sé' → logprob: -4.910552501678467
    9. 'sé' → logprob: -5.285552501678467
    10. 'chaine' → logprob: -5.535552501678467

Token 143: ',' (ID: 11)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.12227821350097656
    2. '()' → logprob: -2.2472782135009766
    3. '.' → logprob: -5.622278213500977
    4. 's' → logprob: -6.247278213500977
    5. ',' → logprob: -6.747278213500977
    6. ')' → logprob: -6.872278213500977
    7. ' .' → logprob: -7.747278213500977
    8. '()
' → logprob: -7.872278213500977
    9. '.split' → logprob: -8.497278213500977
    10. 'n' → logprob: -9.247278213500977

Token 144: ' .' (ID: 887)
  Prédit: ' arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' arr' → logprob: -1.131250023841858
    2. ' data' → logprob: -1.381250023841858
    3. 'arr' → logprob: -1.881250023841858
    4. ' lst' → logprob: -2.2562499046325684
    5. ' a' → logprob: -2.8812499046325684
    6. 'a' → logprob: -3.1312499046325684
    7. 'data' → logprob: -4.006249904632568
    8. ' numbers' → logprob: -4.381249904632568
    9. 'lst' → logprob: -4.381249904632568
    10. 'numbers' → logprob: -4.881249904632568

Token 145: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.011106422170996666
    2. 'strip' → logprob: -4.511106491088867
    3. ' split' → logprob: -9.761106491088867
    4. 'rstrip' → logprob: -14.386106491088867
    5. ' strip' → logprob: -15.136106491088867
    6. 'spl' → logprob: -16.136106491088867
    7. 's' → logprob: -18.386106491088867
    8. 'str' → logprob: -20.261106491088867
    9. '.split' → logprob: -20.386106491088867
    10. '(split' → logprob: -20.886106491088867

Token 146: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00024037064576987177
    2. '('' → logprob: -8.750240325927734
    3. '(' → logprob: -9.500240325927734
    4. ' ()' → logprob: -12.875240325927734
    5. '("' → logprob: -13.000240325927734
    6. '()]' → logprob: -13.750240325927734
    7. '())' → logprob: -15.375240325927734
    8. '().' → logprob: -15.625240325927734
    9. '（）' → logprob: -15.625240325927734
    10. '()"' → logprob: -16.500240325927734

Token 147: ' décou' (ID: 68302)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00014489953173324466
    2. '(' → logprob: -9.000144958496094
    3. '('' → logprob: -12.000144958496094
    4. '()]' → logprob: -12.125144958496094
    5. '())' → logprob: -13.500144958496094
    6. ' ()' → logprob: -13.875144958496094
    7. '().' → logprob: -14.250144958496094
    8. ')' → logprob: -14.250144958496094
    9. '()">' → logprob: -14.375144958496094
    10. '()?>' → logprob: -14.375144958496094

Token 148: 'pe' (ID: 424)
  Prédit: 'pe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.0005985465249978006
    2. 'p' → logprob: -8.375598907470703
    3. 'page' → logprob: -8.875598907470703
    4. 'de' → logprob: -9.625598907470703
    5. 'ppe' → logprob: -10.500598907470703
    6. 'pte' → logprob: -10.625598907470703
    7. '```' → logprob: -10.750598907470703
    8. 'per' → logprob: -10.875598907470703
    9. 'ne' → logprob: -10.875598907470703
    10. 'пе' → logprob: -11.500598907470703

Token 149: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0011246218346059322
    2. '('' → logprob: -6.876124858856201
    3. '(' → logprob: -10.376124382019043
    4. ')' → logprob: -10.751124382019043
    5. '())' → logprob: -11.126124382019043
    6. '("' → logprob: -11.251124382019043
    7. ' ()' → logprob: -13.001124382019043
    8. ''' → logprob: -13.376124382019043
    9. '()]' → logprob: -13.501124382019043
    10. '()
' → logprob: -14.001124382019043

Token 150: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.1918952614068985
    2. 'chaine' → logprob: -3.0668952465057373
    3. ' string' → logprob: -3.6918952465057373
    4. ' ligne' → logprob: -3.8168952465057373
    5. 'string' → logprob: -4.066895484924316
    6. ' input' → logprob: -4.191895484924316
    7. ' chaine' → logprob: -4.191895484924316
    8. 'input' → logprob: -5.066895484924316
    9. 's' → logprob: -5.191895484924316
    10. 'ligne' → logprob: -5.316895484924316

Token 151: ' selon' (ID: 27571)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -2.629921436891891e-05
    2. '(' → logprob: -11.62502670288086
    3. '())' → logprob: -11.87502670288086
    4. ')' → logprob: -12.25002670288086
    5. '('' → logprob: -13.00002670288086
    6. '(),' → logprob: -14.37502670288086
    7. '()[' → logprob: -14.50002670288086
    8. '()]' → logprob: -14.50002670288086
    9. ' ()' → logprob: -14.75002670288086
    10. '()
' → logprob: -14.75002670288086

Token 152: ' les' (ID: 1341)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5784614682197571
    2. ' les' → logprob: -1.0784614086151123
    3. 'les' → logprob: -3.9534614086151123
    4. '"' → logprob: -4.203461647033691
    5. ' l' → logprob: -4.203461647033691
    6. ' '' → logprob: -4.328461647033691
    7. 's' → logprob: -4.703461647033691
    8. ''esp' → logprob: -4.828461647033691
    9. ' des' → logprob: -5.453461647033691
    10. ''espace' → logprob: -5.953461647033691

Token 153: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.08171630650758743
    2. 'esp' → logprob: -3.081716299057007
    3. ''esp' → logprob: -3.456716299057007
    4. ''espace' → logprob: -7.706716537475586
    5. ' '' → logprob: -8.206716537475586
    6. 'es' → logprob: -9.581716537475586
    7. ''' → logprob: -9.706716537475586
    8. ' espace' → logprob: -9.706716537475586
    9. 'spaces' → logprob: -9.956716537475586
    10. '’esp' → logprob: -10.206716537475586

Token 154: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.14603163301944733
    2. ')' → logprob: -2.021031618118286
    3. '(' → logprob: -7.021031856536865
    4. '()
' → logprob: -7.146031856536865
    5. '(),' → logprob: -7.646031856536865
    6. ',' → logprob: -7.646031856536865
    7. '())' → logprob: -7.646031856536865
    8. ' )' → logprob: -9.646031379699707
    9. '),' → logprob: -10.396031379699707
    10. '[' → logprob: -10.771031379699707

Token 155: ' map' (ID: 4014)
  Prédit: ' lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lst' → logprob: -0.22267472743988037
    2. 'lst' → logprob: -2.34767484664917
    3. ' map' → logprob: -3.34767484664917
    4. 'map' → logprob: -3.47267484664917
    5. 'list' → logprob: -5.09767484664917
    6. 'n' → logprob: -5.22267484664917
    7. ' list' → logprob: -5.59767484664917
    8. ' n' → logprob: -5.72267484664917
    9. 'numbers' → logprob: -5.84767484664917
    10. ' la' → logprob: -5.97267484664917

Token 156: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0010579373920336366
    2. '(' → logprob: -6.876058101654053
    3. 'int' → logprob: -11.876057624816895
    4. '=int' → logprob: -11.876057624816895
    5. '<int' → logprob: -12.501057624816895
    6. '[int' → logprob: -13.626057624816895
    7. '(str' → logprob: -13.751057624816895
    8. '```' → logprob: -13.751057624816895
    9. ']int' → logprob: -14.001057624816895
    10. '(lambda' → logprob: -14.251057624816895

Token 157: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05747903883457184
    2. ',' → logprob: -2.9324791431427
    3. ',input' → logprob: -6.307478904724121
    4. '),' → logprob: -8.557478904724121
    5. '(input' → logprob: -8.932478904724121
    6. '))' → logprob: -9.057478904724121
    7. ',)' → logprob: -9.307478904724121
    8. ' )' → logprob: -10.057478904724121
    9. ',map' → logprob: -10.432478904724121
    10. ' ,' → logprob: -10.432478904724121

Token 158: ' ...)' (ID: 100545)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.22729702293872833
    2. ' input' → logprob: -2.227297067642212
    3. ')' → logprob: -2.352297067642212
    4. ' )' → logprob: -8.352296829223633
    5. '(input' → logprob: -9.602296829223633
    6. '))' → logprob: -11.977296829223633
    7. '<input' → logprob: -12.102296829223633
    8. ' ' → logprob: -12.102296829223633
    9. '	input' → logprob: -12.352296829223633
    10. ',input' → logprob: -12.352296829223633

Token 159: ' convert' (ID: 8452)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006293734069913626
    2. '(input' → logprob: -6.381293773651123
    3. '(' → logprob: -6.506293773651123
    4. '(n' → logprob: -7.631293773651123
    5. '))' → logprob: -7.756293773651123
    6. '),' → logprob: -7.756293773651123
    7. '(map' → logprob: -7.756293773651123
    8. ')n' → logprob: -8.381293296813965
    9. '(list' → logprob: -8.756293296813965
    10. ' )' → logprob: -9.006293296813965

Token 160: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.05380403995513916
    2. 'i' → logprob: -3.9288039207458496
    3. 'e' → logprob: -4.30380392074585
    4. 't' → logprob: -5.05380392074585
    5. '(' → logprob: -5.80380392074585
    6. 'ie' → logprob: -6.42880392074585
    7. ')' → logprob: -7.17880392074585
    8. 'issez' → logprob: -7.17880392074585
    9. 'ît' → logprob: -7.17880392074585
    10. '(it' → logprob: -7.42880392074585

Token 161: ' chacun' (ID: 52136)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.7235513925552368
    2. ')' → logprob: -1.5985513925552368
    3. '(int' → logprob: -1.8485513925552368
    4. 'input' → logprob: -3.0985512733459473
    5. 'int' → logprob: -3.3485512733459473
    6. 'list' → logprob: -4.098551273345947
    7. '(' → logprob: -4.223551273345947
    8. '(list' → logprob: -4.223551273345947
    9. 'les' → logprob: -4.598551273345947
    10. 'la' → logprob: -5.723551273345947

Token 162: ' des' (ID: 731)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3901471495628357
    2. '(int' → logprob: -1.2651472091674805
    3. '(' → logprob: -3.7651472091674805
    4. '(str' → logprob: -4.6401472091674805
    5. ' )' → logprob: -6.3901472091674805
    6. '(input' → logprob: -7.0151472091674805
    7. 'int' → logprob: -7.8901472091674805
    8. '(map' → logprob: -7.8901472091674805
    9. '(lambda' → logprob: -8.14014720916748
    10. 's' → logprob: -8.14014720916748

Token 163: ' morceaux' (ID: 133321)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06752841919660568
    2. ' input' → logprob: -3.442528486251831
    3. 'élé' → logprob: -3.692528486251831
    4. 'tokens' → logprob: -6.192528247833252
    5. ' éléments' → logprob: -6.317528247833252
    6. 'inputs' → logprob: -6.442528247833252
    7. 'ent' → logprob: -7.692528247833252
    8. '_' → logprob: -7.692528247833252
    9. 'strings' → logprob: -7.817528247833252
    10. 'entrée' → logprob: -8.19252872467041

Token 164: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05647437274456024
    2. ',' → logprob: -3.681474447250366
    3. '(input' → logprob: -3.806474447250366
    4. ',input' → logprob: -5.556474208831787
    5. ' )' → logprob: -7.181474208831787
    6. '(' → logprob: -7.181474208831787
    7. '),' → logprob: -7.431474208831787
    8. '(int' → logprob: -8.556474685668945
    9. ',int' → logprob: -8.931474685668945
    10. '))' → logprob: -9.056474685668945

Token 165: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.48178166151046753
    2. ' int' → logprob: -1.6067817211151123
    3. ' des' → logprob: -2.3567817211151123
    4. 'ent' → logprob: -2.7317817211151123
    5. ' integers' → logprob: -4.356781482696533
    6. ' ent' → logprob: -5.731781482696533
    7. 'inte' → logprob: -5.856781482696533
    8. ' entier' → logprob: -6.481781482696533
    9. 'des' → logprob: -8.106781959533691
    10. 'ints' → logprob: -8.356781959533691

Token 166: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.027313590049743652
    2. '(numbers' → logprob: -5.277313709259033
    3. ',' → logprob: -5.402313709259033
    4. '(nums' → logprob: -5.527313709259033
    5. '(' → logprob: -5.652313709259033
    6. 'input' → logprob: -7.027313709259033
    7. 'numbers' → logprob: -7.402313709259033
    8. '(input' → logprob: -7.527313709259033
    9. 'lst' → logprob: -7.652313709259033
    10. '(lst' → logprob: -7.652313709259033

Token 167: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12381454557180405
    2. 'arr' → logprob: -2.498814582824707
    3. 'sequence' → logprob: -3.873814582824707
    4. ' a' → logprob: -5.373814582824707
    5. 'data' → logprob: -5.998814582824707
    6. 'seq' → logprob: -6.373814582824707
    7. 'numbers' → logprob: -6.623814582824707
    8. 's' → logprob: -7.248814582824707
    9. 'lst' → logprob: -7.498814582824707
    10. ' sequence' → logprob: -7.623814582824707

Token 168: ' list' (ID: 1562)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.34564346075057983
    2. 'arr' → logprob: -1.3456435203552246
    3. ' a' → logprob: -3.8456435203552246
    4. ' arr' → logprob: -5.595643520355225
    5. 'data' → logprob: -6.595643520355225
    6. 'sequence' → logprob: -6.595643520355225
    7. 'lst' → logprob: -6.845643520355225
    8. 'numbers' → logprob: -7.095643520355225
    9. 'nums' → logprob: -8.095643043518066
    10. ' data' → logprob: -8.220643043518066

Token 169: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06407774239778519
    2. '(map' → logprob: -3.439077854156494
    3. '_' → logprob: -4.689077854156494
    4. '()' → logprob: -5.064077854156494
    5. 's' → logprob: -5.564077854156494
    6. '=' → logprob: -6.189077854156494
    7. '_of' → logprob: -6.564077854156494
    8. 'es' → logprob: -7.064077854156494
    9. '(
' → logprob: -7.064077854156494
    10. '(input' → logprob: -7.689077854156494

Token 170: ' convert' (ID: 8452)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012366611510515213
    2. '(n' → logprob: -5.887366771697998
    3. '(input' → logprob: -6.637366771697998
    4. '=' → logprob: -6.637366771697998
    5. '(s' → logprob: -6.887366771697998
    6. '([' → logprob: -7.137366771697998
    7. 's' → logprob: -7.262366771697998
    8. ' =' → logprob: -7.387366771697998
    9. '(int' → logprob: -7.512366771697998
    10. 'n' → logprob: -7.762366771697998

Token 171: 'it' (ID: 278)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.26690614223480225
    2. '(' → logprob: -2.766906261444092
    3. '=' → logprob: -2.891906261444092
    4. '()' → logprob: -3.266906261444092
    5. 'er' → logprob: -3.391906261444092
    6. 'ure' → logprob: -3.891906261444092
    7. 'eur' → logprob: -5.266906261444092
    8. 'ue' → logprob: -5.766906261444092
    9. 'ent' → logprob: -6.141906261444092
    10. ')' → logprob: -6.641906261444092

Token 172: ' enfin' (ID: 50642)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.04939419776201248
    2. '(' → logprob: -3.049394130706787
    3. '(input' → logprob: -8.049394607543945
    4. 'map' → logprob: -8.549394607543945
    5. '(int' → logprob: -9.674394607543945
    6. '(...)' → logprob: -10.049394607543945
    7. 's' → logprob: -10.549394607543945
    8. '()' → logprob: -10.674394607543945
    9. '(list' → logprob: -10.799394607543945
    10. '(
' → logprob: -10.799394607543945

Token 173: ' l' (ID: 305)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.012360133230686188
    2. 'map' → logprob: -5.012360095977783
    3. ' la' → logprob: -6.387360095977783
    4. 'l' → logprob: -6.762360095977783
    5. '(' → logprob: -7.137360095977783
    6. ' map' → logprob: -7.262360095977783
    7. 'la' → logprob: -8.012360572814941
    8. '(input' → logprob: -8.012360572814941
    9. 'input' → logprob: -9.262360572814941
    10. ' le' → logprob: -9.512360572814941

Token 174: ''objet' (ID: 124566)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.3127857446670532
    2. 'a' → logprob: -1.6877857446670532
    3. 'e' → logprob: -3.8127856254577637
    4. '(map' → logprob: -4.312785625457764
    5. '(input' → logprob: -4.312785625457764
    6. 'iste' → logprob: -5.187785625457764
    7. '(' → logprob: -5.312785625457764
    8. '(sequence' → logprob: -5.812785625457764
    9. '(e' → logprob: -6.562785625457764
    10. ')' → logprob: -6.562785625457764

Token 175: ' map' (ID: 4014)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.046254631131887436
    2. 'map' → logprob: -3.9212546348571777
    3. ' map' → logprob: -4.421254634857178
    4. ' des' → logprob: -5.421254634857178
    5. '<|end|>' → logprob: -5.421254634857178
    6. '_map' → logprob: -6.671254634857178
    7. '(' → logprob: -6.796254634857178
    8. ',map' → logprob: -8.17125415802002
    9. 'des' → logprob: -8.29625415802002
    10. 'm' → logprob: -8.54625415802002

Token 176: ' en' (ID: 469)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.18929530680179596
    2. ' en' → logprob: -2.1892952919006348
    3. 'en' → logprob: -4.189295291900635
    4. '(int' → logprob: -4.439295291900635
    5. '(' → logprob: -4.814295291900635
    6. '()' → logprob: -5.314295291900635
    7. '(en' → logprob: -5.439295291900635
    8. ' into' → logprob: -5.814295291900635
    9. 'map' → logprob: -5.939295291900635
    10. ')' → logprob: -6.439295291900635

Token 177: ' liste' (ID: 31719)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.6808679103851318
    2. ' liste' → logprob: -1.8058679103851318
    3. ' list' → logprob: -2.180867910385132
    4. '[]' → logprob: -2.680867910385132
    5. '<|end|>' → logprob: -2.930867910385132
    6. ' a' → logprob: -3.305867910385132
    7. ' []' → logprob: -4.305868148803711
    8. ' un' → logprob: -4.805868148803711
    9. 'a' → logprob: -4.805868148803711
    10. 'list' → logprob: -5.055868148803711

Token 178: ',' (ID: 11)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.6557492613792419
    2. 'a' → logprob: -1.1557493209838867
    3. '(' → logprob: -2.5307493209838867
    4. 'arr' → logprob: -4.030749320983887
    5. 'A' → logprob: -4.530749320983887
    6. '(sequence' → logprob: -4.655749320983887
    7. '(arr' → logprob: -4.780749320983887
    8. 's' → logprob: -4.905749320983887
    9. '(numbers' → logprob: -5.155749320983887
    10. '()' → logprob: -5.280749320983887

Token 179: ' assign' (ID: 14975)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2393174022436142
    2. ' a' → logprob: -1.7393174171447754
    3. 'arr' → logprob: -3.4893174171447754
    4. 'A' → logprob: -6.239317417144775
    5. 'lst' → logprob: -6.989317417144775
    6. ' A' → logprob: -7.239317417144775
    7. ' arr' → logprob: -7.364317417144775
    8. 'data' → logprob: -7.864317417144775
    9. 'sequence' → logprob: -8.239316940307617
    10. 'numbers' → logprob: -8.489316940307617

Token 180: 'ée' (ID: 2894)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7625905871391296
    2. 'é' → logprob: -1.0125906467437744
    3. '=' → logprob: -2.1375906467437744
    4. 'ée' → logprob: -3.0125906467437744
    5. 'er' → logprob: -6.387590408325195
    6. 'ee' → logprob: -8.012590408325195
    7. 'ant' → logprob: -8.387590408325195
    8. 'ement' → logprob: -8.637590408325195
    9. ' =' → logprob: -8.637590408325195
    10. 'ation' → logprob: -8.762590408325195

Token 181: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20448708534240723
    2. '(a' → logprob: -2.0794870853424072
    3. 's' → logprob: -4.204486846923828
    4. '(s' → logprob: -4.454486846923828
    5. '(t' → logprob: -5.079486846923828
    6. '(l' → logprob: -5.579486846923828
    7. 'a' → logprob: -5.704486846923828
    8. '(sequence' → logprob: -5.704486846923828
    9. '(lst' → logprob: -6.454486846923828
    10. '(data' → logprob: -6.704486846923828

Token 182: ' '' (ID: 461)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3301079571247101
    2. ' a' → logprob: -1.4551079273223877
    3. 'arr' → logprob: -3.9551079273223877
    4. ' sequence' → logprob: -4.955108165740967
    5. 'sequence' → logprob: -5.455108165740967
    6. 'A' → logprob: -5.830108165740967
    7. ' A' → logprob: -6.205108165740967
    8. 's' → logprob: -6.205108165740967
    9. ' arr' → logprob: -6.205108165740967
    10. ' data' → logprob: -6.580108165740967

Token 183: 'H' (ID: 39)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.20878568291664124
    2. 'arr' → logprob: -1.7087856531143188
    3. 'lst' → logprob: -5.333785533905029
    4. 'sequence' → logprob: -6.958785533905029
    5. 'data' → logprob: -7.708785533905029
    6. 'seq' → logprob: -8.208786010742188
    7. 'l' → logprob: -8.583786010742188
    8. 'numbers' → logprob: -8.958786010742188
    9. ' a' → logprob: -9.083786010742188
    10. 'nums' → logprob: -9.583786010742188

Token 184: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004429289605468512
    2. 'H' → logprob: -5.879429340362549
    3. 's' → logprob: -8.12942886352539
    4. ' )' → logprob: -8.37942886352539
    5. '')' → logprob: -8.37942886352539
    6. '_)' → logprob: -8.75442886352539
    7. '[' → logprob: -8.87942886352539
    8. ')
' → logprob: -9.50442886352539
    9. ' =' → logprob: -10.12942886352539
    10. 'ist' → logprob: -10.12942886352539

Token 185: ' qui' (ID: 2780)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.042385000735521317
    2. ' =' → logprob: -3.2923851013183594
    3. '(H' → logprob: -6.292385101318359
    4. '=' → logprob: -6.542385101318359
    5. '(' → logprob: -7.167385101318359
    6. '(
' → logprob: -8.91738510131836
    7. ' H' → logprob: -10.29238510131836
    8. ',' → logprob: -10.79238510131836
    9. '[' → logprob: -10.79238510131836
    10. ' (' → logprob: -11.04238510131836

Token 186: ' cont' (ID: 836)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06199547275900841
    2. '=' → logprob: -2.811995506286621
    3. ' représente' → logprob: -11.186995506286621
    4. 's' → logprob: -12.936995506286621
    5. ' contient' → logprob: -13.311995506286621
    6. 'H' → logprob: -13.561995506286621
    7. ' ' → logprob: -13.686995506286621
    8. '_' → logprob: -13.811995506286621
    9. ' =[' → logprob: -13.811995506286621
    10. 'represent' → logprob: -13.936995506286621

Token 187: 'i' (ID: 72)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05422598868608475
    2. 'inue' → logprob: -3.8042259216308594
    3. 'ient' → logprob: -4.554225921630859
    4. 'in' → logprob: -4.804225921630859
    5. 'ains' → logprob: -5.554225921630859
    6. 'ent' → logprob: -5.679225921630859
    7. '=[]' → logprob: -6.429225921630859
    8. 'H' → logprob: -6.554225921630859
    9. 'ents' → logprob: -7.679225921630859
    10. 'inu' → logprob: -8.67922592163086

Token 188: 'endra' (ID: 32364)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.405769020318985
    2. 'nent' → logprob: -1.4057689905166626
    3. 'nt' → logprob: -3.030769109725952
    4. 'n' → logprob: -3.405769109725952
    5. 'nd' → logprob: -6.905768871307373
    6. 't' → logprob: -6.905768871307373
    7. 'net' → logprob: -7.155768871307373
    8. 'endra' → logprob: -7.280768871307373
    9. 'nts' → logprob: -7.280768871307373
    10. 'ents' → logprob: -7.405768871307373

Token 189: ' les' (ID: 1341)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.8467116951942444
    2. '[]' → logprob: -1.7217116355895996
    3. '[' → logprob: -2.3467116355895996
    4. ' la' → logprob: -2.4717116355895996
    5. 'la' → logprob: -2.4717116355895996
    6. '[int' → logprob: -3.9717116355895996
    7. 'l' → logprob: -4.0967116355896
    8. ' list' → logprob: -4.2217116355896
    9. 'input' → logprob: -4.7217116355896
    10. 'H' → logprob: -4.7217116355896

Token 190: ' haute' (ID: 49646)
  Prédit: ' heights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heights' → logprob: -0.48530253767967224
    2. 'ha' → logprob: -2.110302448272705
    3. ' haute' → logprob: -2.735302448272705
    4. 'H' → logprob: -3.235302448272705
    5. ' H' → logprob: -3.860302448272705
    6. ' nombres' → logprob: -3.985302448272705
    7. 'n' → logprob: -4.360302448272705
    8. 'Ha' → logprob: -4.360302448272705
    9. ' hauteur' → logprob: -4.360302448272705
    10. '[]' → logprob: -4.485302448272705

Token 191: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.057322245091199875
    2. 's' → logprob: -3.3073222637176514
    3. 'ur' → logprob: -4.932322025299072
    4. 'teurs' → logprob: -5.557322025299072
    5. 'uteurs' → logprob: -6.182322025299072
    6. 't' → logprob: -7.057322025299072
    7. 'ights' → logprob: -7.057322025299072
    8. 'ts' → logprob: -7.432322025299072
    9. 'uts' → logprob: -7.807322025299072
    10. 'r' → logprob: -7.807322025299072

Token 192: ' ou' (ID: 2031)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.4413158893585205
    2. 'H' → logprob: -1.3163158893585205
    3. '(' → logprob: -2.4413158893585205
    4. '(
' → logprob: -6.816315650939941
    5. 's' → logprob: -9.316315650939941
    6. '=' → logprob: -9.691315650939941
    7. ' =' → logprob: -9.691315650939941
    8. '()' → logprob: -9.941315650939941
    9. ')' → logprob: -10.066315650939941
    10. ' (' → logprob: -10.191315650939941

Token 193: ' valeurs' (ID: 73668)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.46111348271369934
    2. ' la' → logprob: -1.711113452911377
    3. '[]' → logprob: -3.711113452911377
    4. 'H' → logprob: -3.836113452911377
    5. 'la' → logprob: -3.961113452911377
    6. 'l' → logprob: -4.336113452911377
    7. ' l' → logprob: -4.336113452911377
    8. ' H' → logprob: -4.586113452911377
    9. ' list' → logprob: -4.711113452911377
    10. 'list' → logprob: -4.711113452911377

Token 194: ' analys' (ID: 27616)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.34168025851249695
    2. '(' → logprob: -1.5916802883148193
    3. 'H' → logprob: -2.8416802883148193
    4. ' (' → logprob: -4.46668004989624
    5. ' H' → logprob: -5.71668004989624
    6. 's' → logprob: -5.84168004989624
    7. ' =' → logprob: -6.34168004989624
    8. '()' → logprob: -6.46668004989624
    9. ' de' → logprob: -6.71668004989624
    10. '(
' → logprob: -6.96668004989624

Token 195: 'ées' (ID: 5161)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.007843678817152977
    2. 'ées' → logprob: -5.757843494415283
    3. ' H' → logprob: -7.382843494415283
    4. 'ises' → logprob: -7.507843494415283
    5. 'ues' → logprob: -7.757843494415283
    6. 'H' → logprob: -7.757843494415283
    7. 'eses' → logprob: -7.757843494415283
    8. 'ites' → logprob: -8.007843971252441
    9. 'ur' → logprob: -8.007843971252441
    10. 'e' → logprob: -8.007843971252441

Token 196: ' par' (ID: 686)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.06143577769398689
    2. '(H' → logprob: -2.9364356994628906
    3. '(' → logprob: -5.186435699462891
    4. ' =' → logprob: -8.31143569946289
    5. '(
' → logprob: -8.43643569946289
    6. '=' → logprob: -8.43643569946289
    7. ')' → logprob: -9.06143569946289
    8. ',' → logprob: -10.18643569946289
    9. '()' → logprob: -10.18643569946289
    10. '.' → logprob: -10.68643569946289

Token 197: ' le' (ID: 505)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.2990102767944336
    2. ' H' → logprob: -1.5490102767944336
    3. ' input' → logprob: -3.7990102767944336
    4. ' la' → logprob: -4.174010276794434
    5. 'input' → logprob: -5.299010276794434
    6. 'la' → logprob: -6.799010276794434
    7. ' l' → logprob: -7.049010276794434
    8. 'l' → logprob: -8.174010276794434
    9. '_H' → logprob: -8.674010276794434
    10. '_' → logprob: -9.049010276794434

Token 198: ' problème' (ID: 35630)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.2794216573238373
    2. ' H' → logprob: -1.5294216871261597
    3. ' sequence' → logprob: -4.404421806335449
    4. ' code' → logprob: -4.654421806335449
    5. 'sequence' → logprob: -6.154421806335449
    6. ' ' → logprob: -7.279421806335449
    7. 'code' → logprob: -7.779421806335449
    8. ' sequences' → logprob: -8.15442180633545
    9. 's' → logprob: -8.15442180633545
    10. 'n' → logprob: -8.52942180633545

Token 199: '.
' (ID: 558)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.012256975285708904
    2. ' =' → logprob: -4.762257099151611
    3. '=' → logprob: -5.637257099151611
    4. ' H' → logprob: -10.387256622314453
    5. ',' → logprob: -11.137256622314453
    6. ' =
' → logprob: -12.387256622314453
    7. '=
' → logprob: -12.637256622314453
    8. ':' → logprob: -12.637256622314453
    9. ')' → logprob: -12.887256622314453
    10. 's' → logprob: -13.012256622314453

Token 200: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -8.537868779967539e-06
    2. ' H' → logprob: -11.750008583068848
    3. '
' → logprob: -14.750008583068848
    4. '```' → logprob: -16.37500762939453
    5. '#' → logprob: -16.62500762939453
    6. '`' → logprob: -17.12500762939453
    7. '

' → logprob: -18.62500762939453
    8. 'h' → logprob: -19.00000762939453
    9. 's' → logprob: -19.12500762939453
    10. 'A' → logprob: -19.12500762939453

Token 201: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868754208087921
    2. ' =' → logprob: -1.1368753910064697
    3. '.' → logprob: -13.38687515258789
    4. '[' → logprob: -14.26187515258789
    5. ')' → logprob: -14.51187515258789
    6. '=[]' → logprob: -14.88687515258789
    7. ',' → logprob: -15.26187515258789
    8. ' =[' → logprob: -15.63687515258789
    9. '=[' → logprob: -15.76187515258789
    10. '＝' → logprob: -15.76187515258789

Token 202: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.06196768581867218
    2. ' list' → logprob: -2.811967611312866
    3. 'List' → logprob: -19.811967849731445
    4. '[list' → logprob: -21.186967849731445
    5. '=list' → logprob: -21.686967849731445
    6. '	list' → logprob: -21.811967849731445
    7. 'li' → logprob: -22.186967849731445
    8. '[' → logprob: -22.686967849731445
    9. '(list' → logprob: -22.936967849731445
    10. '.list' → logprob: -23.061967849731445

Token 203: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.16101323068141937
    2. '(' → logprob: -1.9110132455825806
    3. '(int' → logprob: -7.661013126373291
    4. '(input' → logprob: -8.16101360321045
    5. ' (' → logprob: -10.91101360321045
    6. '(
' → logprob: -11.66101360321045
    7. '(

' → logprob: -13.28601360321045
    8. '(m' → logprob: -14.03601360321045
    9. '(eval' → logprob: -14.03601360321045
    10. 'map' → logprob: -14.28601360321045

Token 204: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.01817171648144722
    2. '(' → logprob: -4.018171787261963
    3. '<int' → logprob: -11.643171310424805
    4. ' (' → logprob: -12.893171310424805
    5. '[int' → logprob: -12.893171310424805
    6. 'int' → logprob: -13.018171310424805
    7. '(input' → logprob: -13.393171310424805
    8. '(
' → logprob: -14.018171310424805
    9. '(lambda' → logprob: -14.018171310424805
    10. '(in' → logprob: -14.018171310424805

Token 205: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.5875327587127686
    2. ',' → logprob: -1.3375327587127686
    3. '(input' → logprob: -1.7125327587127686
    4. '(' → logprob: -6.962532997131348
    5. 'input' → logprob: -8.087532997131348
    6. ' ,' → logprob: -9.087532997131348
    7. ' (' → logprob: -10.587532997131348
    8. ',(' → logprob: -12.587532997131348
    9. ' input' → logprob: -13.462532997131348
    10. ')' → logprob: -13.712532997131348

Token 206: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0019286326132714748
    2. ' input' → logprob: -6.251928806304932
    3. '(input' → logprob: -16.751928329467773
    4. ' ' → logprob: -18.126928329467773
    5. ',input' → logprob: -18.251928329467773
    6. '<input' → logprob: -19.626928329467773
    7. 'int' → logprob: -20.001928329467773
    8. '	input' → logprob: -20.376928329467773
    9. '=input' → logprob: -20.376928329467773
    10. '   ' → logprob: -21.126928329467773

Token 207: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -9.13388703338569e-06
    2. '()' → logprob: -11.625009536743164
    3. ' ().' → logprob: -16.625009536743164
    4. '(' → logprob: -18.750009536743164
    5. '()))' → logprob: -19.875009536743164
    6. '()
' → logprob: -20.375009536743164
    7. '())' → logprob: -20.625009536743164
    8. '.split' → logprob: -21.000009536743164
    9. '()-' → logprob: -22.000009536743164
    10. '()[' → logprob: -22.000009536743164

Token 208: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0001239196863025427
    2. 'strip' → logprob: -9.000123977661133
    3. ' split' → logprob: -14.750123977661133
    4. 'rstrip' → logprob: -16.125123977661133
    5. '(split' → logprob: -17.375123977661133
    6. 'spl' → logprob: -18.875123977661133
    7. ')' → logprob: -20.000123977661133
    8. '.split' → logprob: -20.500123977661133
    9. '_split' → logprob: -21.625123977661133
    10. ' strip' → logprob: -23.250123977661133

Token 209: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.10720080137252808
    2. '()' → logprob: -2.357200860977173
    3. '())' → logprob: -5.357200622558594
    4. '))' → logprob: -6.232200622558594
    5. '(' → logprob: -8.482200622558594
    6. ')' → logprob: -9.982200622558594
    7. '()));' → logprob: -11.232200622558594
    8. '())))' → logprob: -11.482200622558594
    9. '(),' → logprob: -12.357200622558594
    10. '()))
' → logprob: -12.732200622558594

Token 210: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.022184904664754868
    2. '#' → logprob: -4.0221848487854
    3. 'd' → logprob: -6.8971848487854
    4. 'f' → logprob: -7.1471848487854
    5. 'stack' → logprob: -7.2721848487854
    6. 'res' → logprob: -8.522185325622559
    7. 'count' → logprob: -8.647185325622559
    8. 'from' → logprob: -8.647185325622559
    9. 'result' → logprob: -8.772185325622559
    10. 'max' → logprob: -9.272185325622559

Token 211: ' Dé' (ID: 27247)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0009945833589881659
    2. '#' → logprob: -7.500994682312012
    3. 'd' → logprob: -9.125994682312012
    4. 'result' → logprob: -9.625994682312012
    5. 'from' → logprob: -9.625994682312012
    6. 'max' → logprob: -10.000994682312012
    7. 'stack' → logprob: -10.125994682312012
    8. 'f' → logprob: -10.750994682312012
    9. 'ans' → logprob: -10.875994682312012
    10. 'res' → logprob: -11.000994682312012

Token 212: 'fin' (ID: 6994)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0005577972042374313
    2. '#' → logprob: -7.875557899475098
    3. 'fi' → logprob: -9.375557899475098
    4. 'fin' → logprob: -9.875557899475098
    5. '
' → logprob: -11.125557899475098
    6. '```' → logprob: -11.875557899475098
    7. 'fen' → logprob: -12.375557899475098
    8. 'v' → logprob: -12.875557899475098
    9. 'def' → logprob: -13.250557899475098
    10. 'fib' → logprob: -13.875557899475098

Token 213: 'ition' (ID: 868)
  Prédit: 'inition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inition' → logprob: -0.001288332510739565
    2. 'ition' → logprob: -7.251288414001465
    3. 'initions' → logprob: -8.376288414001465
    4. 'f' → logprob: -9.376288414001465
    5. '#' → logprob: -9.626288414001465
    6. 'ault' → logprob: -10.001288414001465
    7. 'inir' → logprob: -10.126288414001465
    8. 'iction' → logprob: -10.751288414001465
    9. 'i' → logprob: -11.501288414001465
    10. 'inite' → logprob: -11.876288414001465

Token 214: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.148375153541565
    2. '_' → logprob: -1.273375153541565
    3. 'd' → logprob: -1.898375153541565
    4. 's' → logprob: -1.898375153541565
    5. ' de' → logprob: -3.1483750343322754
    6. 'dp' → logprob: -3.6483750343322754
    7. 'def' → logprob: -5.023375034332275
    8. ')' → logprob: -5.148375034332275
    9. ' of' → logprob: -5.398375034332275
    10. 'de' → logprob: -5.398375034332275

Token 215: ' la' (ID: 557)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.01711221970617771
    2. ' dp' → logprob: -4.7671122550964355
    3. 'l' → logprob: -5.7671122550964355
    4. 'd' → logprob: -6.8921122550964355
    5. 'max' → logprob: -7.0171122550964355
    6. 'a' → logprob: -7.1421122550964355
    7. 'H' → logprob: -8.142111778259277
    8. 'stack' → logprob: -8.267111778259277
    9. 'ans' → logprob: -8.267111778259277
    10. 'f' → logprob: -8.517111778259277

Token 216: ' fonction' (ID: 17610)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.04756757989525795
    2. ' dp' → logprob: -3.17256760597229
    3. 'stack' → logprob: -5.922567367553711
    4. '_' → logprob: -7.922567367553711
    5. ' stack' → logprob: -7.922567367553711
    6. 'def' → logprob: -8.172567367553711
    7. 'import' → logprob: -8.922567367553711
    8. '_dp' → logprob: -9.047567367553711
    9. 'variable' → logprob: -9.297567367553711
    10. ' variable' → logprob: -9.547567367553711

Token 217: ' '' (ID: 461)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.12062331289052963
    2. 'def' → logprob: -2.2456233501434326
    3. ' dp' → logprob: -6.1206231117248535
    4. ' f' → logprob: -6.2456231117248535
    5. ' max' → logprob: -7.1206231117248535
    6. ' factorial' → logprob: -7.4956231117248535
    7. 's' → logprob: -7.6206231117248535
    8. ' de' → logprob: -7.9956231117248535
    9. ' dfs' → logprob: -8.120623588562012
    10. 'dp' → logprob: -8.620623588562012

Token 218: 'solve' (ID: 117273)
  Prédit: 'solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.7523821592330933
    2. 'dp' → logprob: -1.3773821592330933
    3. 'count' → logprob: -1.8773821592330933
    4. 'max' → logprob: -2.627382278442383
    5. 'main' → logprob: -4.002382278442383
    6. 'pow' → logprob: -4.877382278442383
    7. 'def' → logprob: -5.002382278442383
    8. 'dfs' → logprob: -5.252382278442383
    9. 'f' → logprob: -5.752382278442383
    10. 'calculate' → logprob: -6.627382278442383

Token 219: ''' (ID: 6)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.43740999698638916
    2. '():' → logprob: -1.0624099969863892
    3. '():
' → logprob: -4.8124098777771
    4. 'def' → logprob: -8.562410354614258
    5. '):' → logprob: -9.062410354614258
    6. '(H' → logprob: -10.187410354614258
    7. '())' → logprob: -10.437410354614258
    8. '(' → logprob: -10.437410354614258
    9. ' ():' → logprob: -10.562410354614258
    10. '()`' → logprob: -10.562410354614258

Token 220: ' rece' (ID: 2707)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.006275251507759094
    2. '()' → logprob: -5.381275177001953
    3. '():
' → logprob: -6.506275177001953
    4. 'def' → logprob: -9.006275177001953
    5. '(' → logprob: -10.506275177001953
    6. ' ():' → logprob: -12.631275177001953
    7. ':' → logprob: -13.256275177001953
    8. '(n' → logprob: -13.256275177001953
    9. '()
' → logprob: -13.631275177001953
    10. ' def' → logprob: -15.131275177001953

Token 221: 'vant' (ID: 85548)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.48400261998176575
    2. 'rt' → logprob: -2.3590025901794434
    3. 'rv' → logprob: -2.3590025901794434
    4. 'vant' → logprob: -2.4840025901794434
    5. 'def' → logprob: -3.2340025901794434
    6. 'v' → logprob: -4.109002590179443
    7. 'ving' → logprob: -4.359002590179443
    8. 'vr' → logprob: -4.734002590179443
    9. 'pt' → logprob: -4.734002590179443
    10. 'vez' → logprob: -5.234002590179443

Token 222: ' une' (ID: 2463)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.31986063718795776
    2. '():' → logprob: -1.9448606967926025
    3. '()' → logprob: -2.1948606967926025
    4. 'n' → logprob: -4.194860458374023
    5. '(' → logprob: -5.944860458374023
    6. 'H' → logprob: -7.069860458374023
    7. '(H' → logprob: -7.944860458374023
    8. ' (' → logprob: -9.319860458374023
    9. '(
' → logprob: -9.819860458374023
    10. ')' → logprob: -10.069860458374023

Token 223: ' liste' (ID: 31719)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.9489948153495789
    2. 'n' → logprob: -1.4489948749542236
    3. ')' → logprob: -1.8239948749542236
    4. '(n' → logprob: -2.0739948749542236
    5. '():' → logprob: -3.5739948749542236
    6. 'H' → logprob: -4.3239946365356445
    7. ' ' → logprob: -4.5739946365356445
    8. ' ):' → logprob: -4.6989946365356445
    9. ' n' → logprob: -5.1989946365356445
    10. ':' → logprob: -5.1989946365356445

Token 224: ' d' (ID: 272)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.7454988956451416
    2. 'def' → logprob: -0.8704988956451416
    3. '(' → logprob: -2.2454988956451416
    4. '(
' → logprob: -7.6204986572265625
    5. ' def' → logprob: -8.495498657226562
    6. '(def' → logprob: -9.870498657226562
    7. 'H' → logprob: -9.995498657226562
    8. ')' → logprob: -10.370498657226562
    9. '[' → logprob: -10.745498657226562
    10. ' (' → logprob: -12.120498657226562

Token 225: ''ent' (ID: 53422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.25191259384155273
    2. '[int' → logprob: -2.2519125938415527
    3. '(int' → logprob: -2.5019125938415527
    4. 'H' → logprob: -4.251912593841553
    5. ']int' → logprob: -5.251912593841553
    6. ')' → logprob: -5.751912593841553
    7. '(H' → logprob: -5.751912593841553
    8. 'ints' → logprob: -5.876912593841553
    9. ' integers' → logprob: -6.251912593841553
    10. 'inte' → logprob: -6.626912593841553

Token 226: 'iers' (ID: 11012)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.16451315581798553
    2. 'iers' → logprob: -2.039513111114502
    3. 'ières' → logprob: -4.914513111114502
    4. 'tiers' → logprob: -5.539513111114502
    5. 'ints' → logprob: -5.914513111114502
    6. 'ités' → logprob: -6.789513111114502
    7. '```' → logprob: -6.789513111114502
    8. 'tries' → logprob: -7.539513111114502
    9. '_t' → logprob: -7.539513111114502
    10. 'ts' → logprob: -7.664513111114502

Token 227: ' '' (ID: 461)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.008964820764958858
    2. 'def' → logprob: -5.383965015411377
    3. '(' → logprob: -5.508965015411377
    4. 'H' → logprob: -9.508964538574219
    5. '(
' → logprob: -9.633964538574219
    6. ')' → logprob: -9.758964538574219
    7. ',' → logprob: -10.258964538574219
    8. '[' → logprob: -11.258964538574219
    9. '):' → logprob: -11.383964538574219
    10. ' (' → logprob: -11.883964538574219

Token 228: 'h' (ID: 71)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0323038250207901
    2. 'he' → logprob: -3.782303810119629
    3. ')' → logprob: -5.032303810119629
    4. 'int' → logprob: -7.032303810119629
    5. 'arr' → logprob: -7.532303810119629
    6. 'ints' → logprob: -8.657303810119629
    7. '):' → logprob: -8.657303810119629
    8. ' H' → logprob: -9.032303810119629
    9. 'h' → logprob: -9.032303810119629
    10. ' heights' → logprob: -9.032303810119629

Token 229: ''.
' (ID: 49980)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12151091545820236
    2. ')' → logprob: -2.7465109825134277
    3. ')':' → logprob: -3.7465109825134277
    4. ')'' → logprob: -3.9965109825134277
    5. '):
' → logprob: -5.746510982513428
    6. ''):' → logprob: -6.371510982513428
    7. ':' → logprob: -6.871510982513428
    8. ' ):' → logprob: -7.246510982513428
    9. 's' → logprob: -7.621510982513428
    10. '':' → logprob: -7.746510982513428

Token 230: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05381477624177933
    2. ':' → logprob: -3.6788148880004883
    3. '(' → logprob: -3.8038148880004883
    4. ':def' → logprob: -5.803814888000488
    5. ' def' → logprob: -7.053814888000488
    6. '():' → logprob: -8.303814888000488
    7. '(def' → logprob: -8.303814888000488
    8. '(
' → logprob: -8.553814888000488
    9. ')' → logprob: -9.553814888000488
    10. '[' → logprob: -9.678814888000488

Token 231: ' solve' (ID: 17722)
  Prédit: ' solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.006483606994152069
    2. 'solve' → logprob: -5.131483554840088
    3. ' ' → logprob: -8.131484031677246
    4. ' ' → logprob: -8.381484031677246
    5. ' space' → logprob: -11.131484031677246
    6. ' s' → logprob: -12.006484031677246
    7. '_' → logprob: -12.506484031677246
    8. 's' → logprob: -13.631484031677246
    9. 'space' → logprob: -13.631484031677246
    10. '  ' → logprob: -13.631484031677246

Token 232: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0013228575699031353
    2. '(' → logprob: -6.7513227462768555
    3. '(H' → logprob: -8.876322746276855
    4. ' (' → logprob: -11.376322746276855
    5. '(
' → logprob: -14.751322746276855
    6. '(l' → logprob: -14.751322746276855
    7. '(s' → logprob: -15.376322746276855
    8. '(lst' → logprob: -16.251323699951172
    9. '((' → logprob: -16.376323699951172
    10. '(n' → logprob: -16.501323699951172

Token 233: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003730845171958208
    2. ')' → logprob: -5.628730773925781
    3. '):
' → logprob: -9.503730773925781
    4. ':' → logprob: -10.378730773925781
    5. ' ):' → logprob: -11.503730773925781
    6. '[]):' → logprob: -11.878730773925781
    7. '[' → logprob: -12.128730773925781
    8. '):
' → logprob: -14.628730773925781
    9. ']:' → logprob: -14.878730773925781
    10. ')：' → logprob: -15.003730773925781

Token 234: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03497152030467987
    2. '   ' → logprob: -3.5349714756011963
    3. ':
' → logprob: -5.784971714019775
    4. 'n' → logprob: -7.159971714019775
    5. ' :' → logprob: -7.534971714019775
    6. '(n' → logprob: -8.534971237182617
    7. ')' → logprob: -9.159971237182617
    8. '[' → logprob: -9.534971237182617
    9. '):' → logprob: -9.659971237182617
    10. '(' → logprob: -9.784971237182617

Token 235: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.33023932576179504
    2. 'n' → logprob: -1.3302392959594727
    3. 'stack' → logprob: -4.205239295959473
    4. 'm' → logprob: -7.830239295959473
    5. ' dp' → logprob: -7.830239295959473
    6. 'from' → logprob: -8.080239295959473
    7. 'max' → logprob: -8.705239295959473
    8. 'res' → logprob: -9.205239295959473
    9. 'd' → logprob: -9.330239295959473
    10. 'prev' → logprob: -9.455239295959473

Token 236: ' Si' (ID: 7832)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.08371994644403458
    2. 'stack' → logprob: -3.3337199687957764
    3. 'n' → logprob: -3.5837199687957764
    4. 'from' → logprob: -4.583719730377197
    5. ' dp' → logprob: -5.583719730377197
    6. ' stack' → logprob: -7.333719730377197
    7. 'm' → logprob: -7.458719730377197
    8. ' from' → logprob: -7.708719730377197
    9. ' n' → logprob: -7.833719730377197
    10. 'max' → logprob: -8.208720207214355

Token 237: ' la' (ID: 557)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.43369802832603455
    2. ' len' → logprob: -1.058698058128357
    3. 'not' → logprob: -6.3086981773376465
    4. ' ' → logprob: -6.5586981773376465
    5. 'len' → logprob: -6.5586981773376465
    6. ' n' → logprob: -8.308697700500488
    7. ' ' → logprob: -10.183697700500488
    8. '  ' → logprob: -10.933697700500488
    9. '   ' → logprob: -11.183697700500488
    10. 'n' → logprob: -12.183697700500488

Token 238: ' liste' (ID: 31719)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.45837876200675964
    2. ' not' → logprob: -1.708378791809082
    3. 'not' → logprob: -2.208378791809082
    4. ' len' → logprob: -2.583378791809082
    5. 'n' → logprob: -6.958378791809082
    6. ' n' → logprob: -8.958378791809082
    7. ' ' → logprob: -10.458378791809082
    8. '(len' → logprob: -12.333378791809082
    9. '[len' → logprob: -12.708378791809082
    10. '=len' → logprob: -12.708378791809082

Token 239: ' des' (ID: 731)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.21055889129638672
    2. ' ==' → logprob: -2.5855588912963867
    3. 'len' → logprob: -3.3355588912963867
    4. ':' → logprob: -3.4605588912963867
    5. 'not' → logprob: -3.9605588912963867
    6. ' len' → logprob: -4.210558891296387
    7. '==' → logprob: -6.085558891296387
    8. ')' → logprob: -6.085558891296387
    9. ' :' → logprob: -6.835558891296387
    10. '):' → logprob: -6.960558891296387

Token 240: ' haute' (ID: 49646)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.015016883611679077
    2. ' h' → logprob: -4.265017032623291
    3. 'len' → logprob: -7.890017032623291
    4. ')' → logprob: -8.515016555786133
    5. ' not' → logprob: -8.640016555786133
    6. ' len' → logprob: -10.515016555786133
    7. 'not' → logprob: -11.140016555786133
    8. ']' → logprob: -11.765016555786133
    9. ' ' → logprob: -12.140016555786133
    10. 'indices' → logprob: -12.140016555786133

Token 241: 'urs' (ID: 1628)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.3232388496398926
    2. '   ' → logprob: -1.9482388496398926
    3. 'ts' → logprob: -2.1982388496398926
    4. 'ights' → logprob: -2.1982388496398926
    5. 't' → logprob: -2.4482388496398926
    6. ')' → logprob: -2.6982388496398926
    7. 'ints' → logprob: -3.8232388496398926
    8. ']' → logprob: -3.9482388496398926
    9. 'uts' → logprob: -3.9482388496398926
    10. '[]' → logprob: -4.073238849639893

Token 242: ' est' (ID: 893)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1306413412094116
    2. ' ==' → logprob: -1.5056413412094116
    3. ' est' → logprob: -1.8806413412094116
    4. '==' → logprob: -1.8806413412094116
    5. 'est' → logprob: -3.380641460418701
    6. 'len' → logprob: -3.505641460418701
    7. ')' → logprob: -3.880641460418701
    8. '   ' → logprob: -3.880641460418701
    9. ' :' → logprob: -4.880641460418701
    10. '):' → logprob: -4.880641460418701

Token 243: ' vide' (ID: 21835)
  Prédit: 'vide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vide' → logprob: -0.3967803716659546
    2. '[]' → logprob: -1.3967803716659546
    3. 'not' → logprob: -3.146780490875244
    4. 'len' → logprob: -3.896780490875244
    5. 'empty' → logprob: -4.271780490875244
    6. ' vide' → logprob: -6.021780490875244
    7. 'Vide' → logprob: -8.646780014038086
    8. ' not' → logprob: -9.021780014038086
    9. 'vid' → logprob: -10.021780014038086
    10. ' []' → logprob: -10.771780014038086

Token 244: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.041677359491586685
    2. ' :' → logprob: -3.791677474975586
    3. '   ' → logprob: -4.166677474975586
    4. ',' → logprob: -7.291677474975586
    5. ' if' → logprob: -7.541677474975586
    6. ':return' → logprob: -7.791677474975586
    7. ':
' → logprob: -8.166677474975586
    8. ' or' → logprob: -8.166677474975586
    9. 'if' → logprob: -8.666677474975586
    10. '():' → logprob: -8.916677474975586

Token 245: 'cas' (ID: 14617)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.7174709439277649
    2. 'not' → logprob: -0.8424709439277649
    3. 'len' → logprob: -2.96747088432312
    4. '):' → logprob: -4.092471122741699
    5. 'if' → logprob: -5.092471122741699
    6. ')' → logprob: -5.717471122741699
    7. ' len' → logprob: -6.717471122741699
    8. '   ' → logprob: -6.717471122741699
    9. ' if' → logprob: -7.092471122741699
    10. '):
' → logprob: -7.842471122741699

Token 246: ' de' (ID: 334)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0672115832567215
    2. ')' → logprob: -3.567211627960205
    3. 'not' → logprob: -3.567211627960205
    4. '   ' → logprob: -6.317211627960205
    5. ' )' → logprob: -6.442211627960205
    6. '):' → logprob: -7.067211627960205
    7. ' len' → logprob: -7.317211627960205
    8. '[]' → logprob: -7.442211627960205
    9. ' []' → logprob: -7.567211627960205
    10. 'len' → logprob: -7.567211627960205

Token 247: ' base' (ID: 3611)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.40470340847969055
    2. 'not' → logprob: -1.1547033786773682
    3. 'len' → logprob: -4.279703617095947
    4. ' len' → logprob: -6.154703617095947
    5. ')' → logprob: -7.654703617095947
    6. 'h' → logprob: -7.779703617095947
    7. ' h' → logprob: -7.904703617095947
    8. '[]' → logprob: -8.654703140258789
    9. ' []' → logprob: -9.404703140258789
    10. ' ' → logprob: -9.529703140258789

Token 248: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.17564603686332703
    2. ')' → logprob: -2.1756460666656494
    3. '   ' → logprob: -3.5506460666656494
    4. '),' → logprob: -4.17564582824707
    5. '):
' → logprob: -6.42564582824707
    6. ':' → logprob: -7.05064582824707
    7. ' ):' → logprob: -7.92564582824707
    8. 'if' → logprob: -8.30064582824707
    9. ' :' → logprob: -9.30064582824707
    10. ' )' → logprob: -9.55064582824707

Token 249: ' aucune' (ID: 51173)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7120326161384583
    2. '   ' → logprob: -1.0870325565338135
    3. 'return' → logprob: -2.3370325565338135
    4. '       ' → logprob: -2.8370325565338135
    5. '    ' → logprob: -4.587032794952393
    6. '    
' → logprob: -5.712032794952393
    7. ')' → logprob: -7.212032794952393
    8. '        
' → logprob: -7.462032794952393
    9. '	return' → logprob: -7.962032794952393
    10. ' 
' → logprob: -8.212032318115234

Token 250: ' hauteur' (ID: 72987)
  Prédit: ' hauteur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hauteur' → logprob: -0.3519645035266876
    2. 'élé' → logprob: -1.7269644737243652
    3. ' élément' → logprob: -3.3519644737243652
    4. '):' → logprob: -3.7269644737243652
    5. ')' → logprob: -3.8519644737243652
    6. 'ha' → logprob: -4.226964473724365
    7. 'h' → logprob: -4.726964473724365
    8. ' element' → logprob: -5.851964473724365
    9. 'element' → logprob: -6.351964473724365
    10. ' h' → logprob: -6.351964473724365

Token 251: ' à' (ID: 1221)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0269461702555418
    2. ' ):' → logprob: -4.651946067810059
    3. '):
' → logprob: -5.151946067810059
    4. ')' → logprob: -5.151946067810059
    5. '),' → logprob: -5.776946067810059
    6. '   ' → logprob: -6.776946067810059
    7. ':' → logprob: -8.401946067810059
    8. ' ou' → logprob: -8.401946067810059
    9. ' ),' → logprob: -8.651946067810059
    10. ' )' → logprob: -8.651946067810059

Token 252: ' traiter' (ID: 105852)
  Prédit: 'trait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trait' → logprob: -0.6027185916900635
    2. ' traiter' → logprob: -1.1027185916900635
    3. 'tr' → logprob: -2.3527185916900635
    4. 'process' → logprob: -4.102718353271484
    5. 'tra' → logprob: -5.102718353271484
    6. 'an' → logprob: -7.352718353271484
    7. ')' → logprob: -7.852718353271484
    8. ' gérer' → logprob: -8.102718353271484
    9. ' ' → logprob: -8.477718353271484
    10. 'proces' → logprob: -8.727718353271484

Token 253: ')' (ID: 8)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.03075147420167923
    2. '):' → logprob: -4.405751705169678
    3. ')' → logprob: -4.530751705169678
    4. '   ' → logprob: -5.530751705169678
    5. '):
' → logprob: -6.030751705169678
    6. ' ),' → logprob: -7.405751705169678
    7. '),
' → logprob: -8.53075122833252
    8. ',' → logprob: -9.65575122833252
    9. 'return' → logprob: -11.15575122833252
    10. ' ):' → logprob: -11.78075122833252

Token 254: ' :
' (ID: 10039)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4811846911907196
    2. ':' → logprob: -0.981184720993042
    3. ',' → logprob: -5.856184482574463
    4. 'if' → logprob: -6.106184482574463
    5. ' :' → logprob: -7.106184482574463
    6. ' if' → logprob: -7.356184482574463
    7. ':return' → logprob: -8.481184959411621
    8. ':
' → logprob: -8.606184959411621
    9. '       ' → logprob: -9.731184959411621
    10. '):' → logprob: -10.481184959411621

Token 255: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015590842813253403
    2. ' if' → logprob: -4.265590667724609
    3. 'if' → logprob: -6.640590667724609
    4. ' return' → logprob: -9.76559066772461
    5. '    ' → logprob: -10.89059066772461
    6. '   ' → logprob: -11.01559066772461
    7. '    
' → logprob: -11.39059066772461
    8. 'return' → logprob: -11.89059066772461
    9. ' ' → logprob: -12.39059066772461
    10. ' 
' → logprob: -13.76559066772461

Token 256: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.531990647315979
    2. '   ' → logprob: -1.031990647315979
    3. 'if' (adapté à ' if') → logprob: -3.0319905281066895
    4. ' return' → logprob: -5.0319905281066895
    5. 'return' → logprob: -7.1569905281066895
    6. '    ' → logprob: -8.281991004943848
    7. ' ' → logprob: -9.031991004943848
    8. ' 
' → logprob: -9.031991004943848
    9. '    
' → logprob: -9.156991004943848
    10. '   ' → logprob: -9.406991004943848

Token 257: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0663302093744278
    2. 'not' → logprob: -2.8163301944732666
    3. ' len' → logprob: -5.691330432891846
    4. 'len' → logprob: -6.941330432891846
    5. '   ' → logprob: -12.566329956054688
    6. ' h' → logprob: -13.191329956054688
    7. 'h' → logprob: -13.566329956054688
    8. ' ' → logprob: -13.566329956054688
    9. 'n' → logprob: -13.941329956054688
    10. ' ' → logprob: -14.191329956054688

Token 258: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.38687190413475037
    2. 'h' → logprob: -1.1368719339370728
    3. '	h' → logprob: -14.636872291564941
    4. ' ' → logprob: -14.886872291564941
    5. '[h' → logprob: -17.011871337890625
    6. '(h' → logprob: -17.011871337890625
    7. ' ' → logprob: -17.136871337890625
    8. '<h' → logprob: -18.386871337890625
    9. '_h' → logprob: -18.511871337890625
    10. '   ' → logprob: -19.011871337890625

Token 259: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00013488641707226634
    2. ':
' → logprob: -9.250134468078613
    3. ':return' → logprob: -10.250134468078613
    4. '):' → logprob: -12.750134468078613
    5. ' :' → logprob: -15.000134468078613
    6. '   ' → logprob: -16.50013542175293
    7. ':list' → logprob: -17.50013542175293
    8. ':**' → logprob: -17.50013542175293
    9. ':
' → logprob: -17.62513542175293
    10. '：' → logprob: -17.87513542175293

Token 260: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017212172970175743
    2. ':' → logprob: -5.017212390899658
    3. ' return' → logprob: -5.517212390899658
    4. 'return' → logprob: -5.892212390899658
    5. '   ' → logprob: -6.267212390899658
    6. ':return' → logprob: -6.642212390899658
    7. ':
' → logprob: -8.2672119140625
    8. ' :' → logprob: -9.5172119140625
    9. '
' → logprob: -10.7672119140625
    10. '        
' → logprob: -10.8922119140625

Token 261: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2060316801071167
    2. ' return' → logprob: -1.7060316801071167
    3. '   ' → logprob: -5.706031799316406
    4. '       ' → logprob: -6.706031799316406
    5. '
' → logprob: -10.706031799316406
    6. '    ' → logprob: -10.831031799316406
    7. '	return' → logprob: -12.206031799316406
    8. ' 
' → logprob: -12.581031799316406
    9. ':return' → logprob: -12.956031799316406
    10. 'eturn' → logprob: -13.581031799316406

Token 262: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.127028688788414
    2. '0' → logprob: -2.127028703689575
    3. '1' → logprob: -9.252028465270996
    4. '[' → logprob: -13.877028465270996
    5. '  ' → logprob: -14.002028465270996
    6. ' ' → logprob: -14.252028465270996
    7. '  
' → logprob: -14.377028465270996
    8. ' 
' → logprob: -14.502028465270996
    9. '[]' → logprob: -14.877028465270996
    10. ' [' → logprob: -15.002028465270996

Token 263: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023401660844683647
    2. '1' → logprob: -3.7734017372131348
    3. '[' → logprob: -9.398401260375977
    4. '[]' → logprob: -9.773401260375977
    5. ' ' → logprob: -11.523401260375977
    6. '[]
' → logprob: -12.773401260375977
    7. '(' → logprob: -13.773401260375977
    8. 'True' → logprob: -14.023401260375977
    9. '[]}' → logprob: -14.898401260375977
    10. '{' → logprob: -15.273401260375977

Token 264: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7897405028343201
    2. '<|end|>' → logprob: -0.9147405028343201
    3. '\n' → logprob: -2.414740562438965
    4. ' 
' → logprob: -3.914740562438965
    5. '    
' → logprob: -4.164740562438965
    6. ')' → logprob: -5.414740562438965
    7. '   ' → logprob: -5.539740562438965
    8. '  
' → logprob: -5.789740562438965
    9. ' ' → logprob: -5.914740562438965
    10. '\' → logprob: -6.164740562438965

Token 265: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33768534660339355
    2. '
' → logprob: -1.7126853466033936
    3. '    
' → logprob: -2.5876853466033936
    4. '\n' → logprob: -4.462685585021973
    5. '  
' → logprob: -5.462685585021973
    6. '#' → logprob: -5.712685585021973
    7. '   
' → logprob: -5.962685585021973
    8. ' 
' → logprob: -6.212685585021973
    9. ' ' → logprob: -6.462685585021973
    10. '  ' → logprob: -6.712685585021973

Token 266: ' Il' (ID: 5329)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03546799719333649
    2. '1' → logprob: -4.160468101501465
    3. 'return' → logprob: -4.285468101501465
    4. '<|end|>' → logprob: -5.410468101501465
    5. ' return' → logprob: -7.535468101501465
    6. ' ' → logprob: -8.285468101501465
    7. '   ' → logprob: -9.535468101501465
    8. '
' → logprob: -10.285468101501465
    9. '#' → logprob: -10.660468101501465
    10. '```' → logprob: -10.785468101501465

Token 267: ' n' (ID: 297)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6958990097045898
    2. 'return' → logprob: -0.9458990097045898
    3. ' faut' → logprob: -2.94589900970459
    4. 's' → logprob: -3.94589900970459
    5. ' s' → logprob: -4.32089900970459
    6. 'f' → logprob: -5.19589900970459
    7. ' n' → logprob: -5.19589900970459
    8. ' est' → logprob: -5.69589900970459
    9. 'n' → logprob: -5.94589900970459
    10. 'est' → logprob: -6.07089900970459

Token 268: ''y' (ID: 27913)
  Prédit: ''y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''y' → logprob: -0.1287297159433365
    2. 'y' → logprob: -2.378729820251465
    3. ' y' → logprob: -4.753729820251465
    4. 'e' → logprob: -5.003729820251465
    5. ''' → logprob: -5.253729820251465
    6. ''ex' → logprob: -5.503729820251465
    7. 'n' → logprob: -6.378729820251465
    8. ''est' → logprob: -7.378729820251465
    9. '’y' → logprob: -8.003729820251465
    10. '‘y' → logprob: -8.878729820251465

Token 269: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.13377027213573456
    2. ' a' → logprob: -2.258770227432251
    3. 'y' → logprob: -4.00877046585083
    4. 'n' → logprob: -7.38377046585083
    5. ' y' → logprob: -7.50877046585083
    6. ''a' → logprob: -7.63377046585083
    7. 's' → logprob: -7.75877046585083
    8. ''y' → logprob: -8.508769989013672
    9. 'ya' → logprob: -9.508769989013672
    10. 'pas' → logprob: -10.258769989013672

Token 270: ' qu' (ID: 474)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.27043336629867554
    2. ' ' → logprob: -2.0204334259033203
    3. 'auc' → logprob: -2.6454334259033203
    4. ' aucune' → logprob: -4.64543342590332
    5. ' rien' → logprob: -4.77043342590332
    6. 'pas' → logprob: -5.39543342590332
    7. ' pas' → logprob: -5.39543342590332
    8. '0' → logprob: -6.39543342590332
    9. ' aucun' → logprob: -6.39543342590332
    10. 'que' → logprob: -7.39543342590332

Token 271: ''une' (ID: 13337)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.9355582594871521
    2. '1' → logprob: -1.0605583190917969
    3. ''une' → logprob: -1.4355583190917969
    4. ' une' → logprob: -4.435558319091797
    5. ''un' → logprob: -5.310558319091797
    6. ' ' → logprob: -5.810558319091797
    7. '’une' → logprob: -6.435558319091797
    8. '0' → logprob: -7.560558319091797
    9. '   ' → logprob: -8.310558319091797
    10. 'un' → logprob: -8.310558319091797

Token 272: ' seule' (ID: 41983)
  Prédit: ' seule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seule' → logprob: -1.3948932886123657
    2. '1' → logprob: -1.7698932886123657
    3. 'se' → logprob: -1.7698932886123657
    4. 'man' → logprob: -1.8948932886123657
    5. ' façon' → logprob: -2.269893169403076
    6. 'fa' → logprob: -3.144893169403076
    7. 'possible' → logprob: -3.394893169403076
    8. ' manière' → logprob: -3.644893169403076
    9. '```' → logprob: -4.019893169403076
    10. 'way' → logprob: -4.894893169403076

Token 273: ' façon' (ID: 33381)
  Prédit: 'fa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fa' → logprob: -0.3978511095046997
    2. 'man' → logprob: -1.5228511095046997
    3. ' façon' → logprob: -2.39785099029541
    4. ' manière' → logprob: -4.14785099029541
    5. 'configuration' → logprob: -7.27285099029541
    6. 'poss' → logprob: -7.77285099029541
    7. ' ' → logprob: -7.77285099029541
    8. 'possible' → logprob: -7.77285099029541
    9. '   ' → logprob: -8.27285099029541
    10. 'comb' → logprob: -9.02285099029541

Token 274: ' triv' (ID: 190102)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 275: 'iale' (ID: 16193)
  Prédit: 'iale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iale' → logprob: -0.012880893424153328
    2. 'iv' → logprob: -4.387880802154541
    3. 'ale' → logprob: -8.3878812789917
    4. 'ial' → logprob: -9.8878812789917
    5. '
' → logprob: -10.5128812789917
    6. 'i' → logprob: -11.1378812789917
    7. '   ' → logprob: -11.2628812789917
    8. 'ielle' → logprob: -12.2628812789917
    9. '

' → logprob: -12.3878812789917
    10. 'al' → logprob: -12.5128812789917

Token 276: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.04788785055279732
    2. ' de' → logprob: -3.1728878021240234
    3. '   ' → logprob: -6.297887802124023
    4. 'd' → logprob: -7.172887802124023
    5. 'to' → logprob: -7.172887802124023
    6. 'def' → logprob: -7.172887802124023
    7. ' to' → logprob: -8.797887802124023
    8. '.' → logprob: -9.422887802124023
    9. 'mod' → logprob: -10.047887802124023
    10. ',' → logprob: -10.172887802124023

Token 277: ' traiter' (ID: 105852)
  Prédit: 'faire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'faire' → logprob: -0.08765804767608643
    2. 'arr' → logprob: -3.712657928466797
    3. 'ne' → logprob: -4.212657928466797
    4. 'former' → logprob: -4.587657928466797
    5. 'composer' → logprob: -4.837657928466797
    6. 'placer' → logprob: -4.837657928466797
    7. 'emp' → logprob: -5.337657928466797
    8. 'con' → logprob: -6.462657928466797
    9. 'cho' → logprob: -6.587657928466797
    10. 'coder' → logprob: -6.587657928466797

Token 278: ' une' (ID: 2463)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.451578974723816
    2. '[]' → logprob: -1.451578974723816
    3. 'la' → logprob: -2.2015790939331055
    4. 'le' → logprob: -2.8265790939331055
    5. ' ' → logprob: -3.0765790939331055
    6. '0' → logprob: -3.0765790939331055
    7. 'cela' → logprob: -3.2015790939331055
    8. 'h' → logprob: -3.3265790939331055
    9. ' cette' → logprob: -3.5765790939331055
    10. 'les' → logprob: -3.8265790939331055

Token 279: ' liste' (ID: 31719)
  Prédit: 'sé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sé' → logprob: -0.37569189071655273
    2. 'pile' → logprob: -2.1256918907165527
    3. 'suite' → logprob: -3.1256918907165527
    4. 'configuration' → logprob: -3.2506918907165527
    5. 'liste' → logprob: -3.3756918907165527
    6. ' sé' → logprob: -3.3756918907165527
    7. 's' → logprob: -4.125691890716553
    8. 'sequence' → logprob: -4.625691890716553
    9. 'chaine' → logprob: -5.250691890716553
    10. 'structure' → logprob: -6.250691890716553

Token 280: ' vide' (ID: 21835)
  Prédit: 'vide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vide' → logprob: -0.02378692850470543
    2. ' vide' → logprob: -3.773787021636963
    3. '[]' → logprob: -7.773787021636963
    4. '<|end|>' → logprob: -10.148786544799805
    5. 'vid' → logprob: -10.898786544799805
    6. 'Vide' → logprob: -11.648786544799805
    7. 'v' → logprob: -11.773786544799805
    8. '=[]' → logprob: -11.898786544799805
    9. 'vac' → logprob: -12.273786544799805
    10. ' []' → logprob: -12.398786544799805

Token 281: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0078409593552351
    2. '.' → logprob: -5.257841110229492
    3. '    
' → logprob: -6.882841110229492
    4. '
' → logprob: -7.132841110229492
    5. ',' → logprob: -8.257841110229492
    6. 'return' → logprob: -8.757841110229492
    7. 'def' → logprob: -9.007841110229492
    8. '<|end|>' → logprob: -10.007841110229492
    9. '  ' → logprob: -10.257841110229492
    10. ' return' → logprob: -10.382841110229492

Token 282: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3475086987018585
    2. 'dp' → logprob: -1.3475086688995361
    3. 'res' → logprob: -4.097508907318115
    4. 'result' → logprob: -4.472508907318115
    5. '#' → logprob: -6.722508907318115
    6. '    
' → logprob: -6.847508907318115
    7. 'n' → logprob: -7.347508907318115
    8. 'count' → logprob: -7.597508907318115
    9. 'ways' → logprob: -7.722508907318115
    10. 'ans' → logprob: -7.972508907318115

Token 283: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3469401001930237
    2. 'm' → logprob: -1.971940040588379
    3. '#' (adapté à ' #') → logprob: -2.596940040588379
    4. 'res' → logprob: -3.346940040588379
    5. 'min' → logprob: -4.721940040588379
    6. 'top' → logprob: -5.096940040588379
    7. 'base' → logprob: -5.221940040588379
    8. 'n' → logprob: -5.721940040588379
    9. 'first' → logprob: -5.721940040588379
    10. 'root' → logprob: -5.846940040588379

Token 284: ' Si' (ID: 7832)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.6675339341163635
    2. 'm' → logprob: -1.0425338745117188
    3. 'max' → logprob: -2.2925338745117188
    4. '#' → logprob: -4.667533874511719
    5. 'res' → logprob: -5.042533874511719
    6. 'mx' → logprob: -5.167533874511719
    7. 'mn' → logprob: -6.167533874511719
    8. 'if' → logprob: -6.417533874511719
    9. 'first' → logprob: -6.667533874511719
    10. 'base' → logprob: -6.917533874511719

Token 285: ' la' (ID: 557)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.0457039549946785
    2. ' h' → logprob: -3.420703887939453
    3. 'len' → logprob: -4.545703887939453
    4. 'h' → logprob: -6.670703887939453
    5. ' H' → logprob: -10.295703887939453
    6. 'H' → logprob: -10.295703887939453
    7. ' ' → logprob: -10.920703887939453
    8. '(len' → logprob: -12.545703887939453
    9. ' le' → logprob: -13.045703887939453
    10. ' not' → logprob: -13.045703887939453

Token 286: ' liste' (ID: 31719)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0168019887059927
    2. 'min' → logprob: -4.391801834106445
    3. 'h' → logprob: -5.891801834106445
    4. 'max' → logprob: -6.766801834106445
    5. '1' → logprob: -8.516801834106445
    6. ' len' → logprob: -9.891801834106445
    7. 'not' → logprob: -10.141801834106445
    8. 'H' → logprob: -10.391801834106445
    9. '0' → logprob: -11.141801834106445
    10. 'all' → logprob: -11.641801834106445

Token 287: ' ne' (ID: 453)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6805199384689331
    2. 'len' → logprob: -1.305519938468933
    3. 'h' → logprob: -2.8055200576782227
    4. 'and' → logprob: -3.5555200576782227
    5. '[len' → logprob: -3.6805200576782227
    6. '[h' → logprob: -3.8055200576782227
    7. '   ' → logprob: -4.430520057678223
    8. ' and' → logprob: -4.430520057678223
    9. ' ==' → logprob: -4.680520057678223
    10. ':' → logprob: -4.805520057678223

Token 288: ' contient' (ID: 89067)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1310746669769287
    2. 'a' → logprob: -1.3810746669769287
    3. ' a' → logprob: -1.5060746669769287
    4. 'has' → logprob: -2.1310746669769287
    5. ' has' → logprob: -3.1310746669769287
    6. 'len' → logprob: -4.131074905395508
    7. ' contient' → logprob: -5.256074905395508
    8. ' est' → logprob: -5.631074905395508
    9. '==' → logprob: -5.881074905395508
    10. 'pas' → logprob: -6.381074905395508

Token 289: ' qu' (ID: 474)
  Prédit: ' qu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' qu' → logprob: -0.005493198521435261
    2. 'qu' → logprob: -5.2554931640625
    3. ' que' → logprob: -8.6304931640625
    4. 'q' → logprob: -10.2554931640625
    5. ' q' → logprob: -11.0054931640625
    6. '==' → logprob: -11.7554931640625
    7. 'que' → logprob: -12.8804931640625
    8. ' ' → logprob: -12.8804931640625
    9. 'len' → logprob: -13.0054931640625
    10. ' ==' → logprob: -13.5054931640625

Token 290: ''un' (ID: 9788)
  Prédit: ''un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''un' → logprob: -0.0245998315513134
    2. 'e' → logprob: -4.524600028991699
    3. ''une' → logprob: -5.274600028991699
    4. 'u' → logprob: -6.024600028991699
    5. 'un' → logprob: -6.399600028991699
    6. '’un' → logprob: -6.399600028991699
    7. ''au' → logprob: -7.774600028991699
    8. '[' → logprob: -7.899600028991699
    9. '['' → logprob: -8.0246000289917
    10. ''' → logprob: -8.2746000289917

Token 291: ' seul' (ID: 33041)
  Prédit: ' seul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seul' → logprob: -0.15026406943798065
    2. 'se' → logprob: -2.525264024734497
    3. 'élé' → logprob: -2.900264024734497
    4. ' élément' → logprob: -5.650264263153076
    5. ' seule' → logprob: -7.525264263153076
    6. 'element' → logprob: -9.025263786315918
    7. ' element' → logprob: -9.400263786315918
    8. ' ' → logprob: -10.025263786315918
    9. ' se' → logprob: -10.775263786315918
    10. ' seuls' → logprob: -10.900263786315918

Token 292: ' élément' (ID: 99627)
  Prédit: ' élément'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' élément' → logprob: -0.3506005108356476
    2. 'élé' → logprob: -1.2256004810333252
    3. ' element' → logprob: -6.725600719451904
    4. 'element' → logprob: -7.100600719451904
    5. ' ' → logprob: -9.350600242614746
    6. ' éléments' → logprob: -11.475600242614746
    7. ' h' → logprob: -11.850600242614746
    8. 'elem' → logprob: -12.725600242614746
    9. ' elemento' → logprob: -12.725600242614746
    10. 'h' → logprob: -12.850600242614746

Token 293: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06845048069953918
    2. '   ' → logprob: -2.943450450897217
    3. ':
' → logprob: -4.443450450897217
    4. ' :' → logprob: -7.818450450897217
    5. ' ==' → logprob: -7.943450450897217
    6. ' (' → logprob: -8.068450927734375
    7. '(h' → logprob: -8.443450927734375
    8. '==' → logprob: -8.818450927734375
    9. '):' → logprob: -9.818450927734375
    10. '(' → logprob: -10.193450927734375

Token 294: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.48780831694602966
    2. '   ' → logprob: -0.987808346748352
    3. 'if' → logprob: -4.6128082275390625
    4. ' return' → logprob: -5.6128082275390625
    5. 'return' → logprob: -10.112808227539062
    6. ' i' → logprob: -11.987808227539062
    7. ' ' → logprob: -12.612808227539062
    8. '    ' → logprob: -13.237808227539062
    9. '       ' → logprob: -13.987808227539062
    10. ' x' → logprob: -13.987808227539062

Token 295: ' elif' (ID: 9497)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08452533930540085
    2. ' if' → logprob: -2.5845253467559814
    3. '   ' → logprob: -5.209525108337402
    4. 'return' → logprob: -9.084525108337402
    5. 'elif' (adapté à ' elif') → logprob: -10.834525108337402
    6. ' return' → logprob: -11.209525108337402
    7. 'n' → logprob: -13.209525108337402
    8. ' ' → logprob: -13.709525108337402
    9. '	if' → logprob: -13.959525108337402
    10. 'i' → logprob: -14.084525108337402

Token 296: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.029758822172880173
    2. 'len' → logprob: -3.529758930206299
    3. ' h' → logprob: -11.90475845336914
    4. 'h' → logprob: -14.15475845336914
    5. '(len' → logprob: -14.77975845336914
    6. ' ' → logprob: -15.02975845336914
    7. '1' → logprob: -16.52975845336914
    8. '	len' → logprob: -17.02975845336914
    9. ' not' → logprob: -18.02975845336914
    10. '   ' → logprob: -18.02975845336914

Token 297: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -5.88418151892256e-05
    2. '(' → logprob: -9.750059127807617
    3. ' (' → logprob: -15.500059127807617
    4. '(s' → logprob: -15.625059127807617
    5. 'h' → logprob: -16.625059127807617
    6. '(H' → logprob: -17.375059127807617
    7. '(
' → logprob: -18.875059127807617
    8. '(ht' → logprob: -19.125059127807617
    9. '<|end|>' → logprob: -19.500059127807617
    10. 's' → logprob: -20.500059127807617

Token 298: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0061407838948071
    2. ')==' → logprob: -5.13114070892334
    3. '==' → logprob: -8.50614070892334
    4. ' )' → logprob: -12.50614070892334
    5. ' ==' → logprob: -12.75614070892334
    6. '(h' → logprob: -13.50614070892334
    7. '()' → logprob: -14.63114070892334
    8. '[' → logprob: -15.25614070892334
    9. ']==' → logprob: -15.38114070892334
    10. '())' → logprob: -15.50614070892334

Token 299: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.28124988079071045
    2. ' ==' → logprob: -1.4062498807907104
    3. '()==' → logprob: -10.03125
    4. ')==' → logprob: -10.40625
    5. '<=' → logprob: -11.65625
    6. '=' → logprob: -12.28125
    7. ')' → logprob: -12.40625
    8. '==
' → logprob: -13.15625
    9. '[' → logprob: -13.65625
    10. ']==' → logprob: -13.78125

Token 300: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005929863080382347
    2. ' ' → logprob: -5.130929946899414
    3. '   ' → logprob: -14.505929946899414
    4. '2' → logprob: -14.505929946899414
    5. '0' → logprob: -16.005929946899414
    6. '  ' → logprob: -16.755929946899414
    7. ' ' → logprob: -17.568429946899414
    8. '(' → logprob: -17.693429946899414
    9. '
' → logprob: -17.755929946899414
    10. '=' → logprob: -18.755929946899414

Token 301: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '2' → logprob: -19.125
    4. '   ' → logprob: -19.625
    5. '0' → logprob: -20.0
    6. '```' → logprob: -20.5
    7. '
' → logprob: -20.625
    8. '  ' → logprob: -22.0
    9. '１' → logprob: -22.5
    10. '۱' → logprob: -22.75

Token 302: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005893715424463153
    2. ' :' → logprob: -8.625589370727539
    3. '():' → logprob: -8.625589370727539
    4. ':
' → logprob: -9.250589370727539
    5. '):' → logprob: -9.750589370727539
    6. ':return' → logprob: -10.375589370727539
    7. '   ' → logprob: -10.625589370727539
    8. '(' → logprob: -11.375589370727539
    9. ')' → logprob: -12.375589370727539
    10. '[' → logprob: -13.375589370727539

Token 303: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04848482459783554
    2. ':' → logprob: -3.4234848022460938
    3. ':
' → logprob: -4.673484802246094
    4. '   ' → logprob: -5.423484802246094
    5. 'return' → logprob: -7.673484802246094
    6. ' return' → logprob: -8.173484802246094
    7. ':return' → logprob: -8.798484802246094
    8. ',' → logprob: -10.673484802246094
    9. ' :' → logprob: -11.298484802246094
    10. ' :
' → logprob: -12.173484802246094

Token 304: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0015629465924575925
    2. '   ' → logprob: -6.75156307220459
    3. ' return' → logprob: -7.87656307220459
    4. 'if' → logprob: -11.50156307220459
    5. '1' → logprob: -13.75156307220459
    6. '       ' → logprob: -14.00156307220459
    7. '
' → logprob: -15.12656307220459
    8. ' ' → logprob: -15.50156307220459
    9. '#' (adapté à ' #') → logprob: -15.62656307220459
    10. '    
' → logprob: -15.62656307220459

Token 305: ' Le' (ID: 2018)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0001414426224073395
    2. 'if' → logprob: -9.000141143798828
    3. ' return' → logprob: -11.250141143798828
    4. '   ' → logprob: -12.750141143798828
    5. 'ret' → logprob: -13.875141143798828
    6. '#' → logprob: -14.125141143798828
    7. 'Return' → logprob: -15.875141143798828
    8. '```' → logprob: -17.125141143798828
    9. 'Retour' → logprob: -17.250141143798828
    10. '1' → logprob: -17.375141143798828

Token 306: ' résultat' (ID: 62556)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.02032674103975296
    2. ' return' → logprob: -4.645326614379883
    3. 'if' → logprob: -4.770326614379883
    4. 'mod' → logprob: -7.520326614379883
    5. '#' → logprob: -7.895326614379883
    6. ' if' → logprob: -8.145326614379883
    7. 'min' → logprob: -8.770326614379883
    8. 'ret' → logprob: -8.895326614379883
    9. 'r' → logprob: -9.020326614379883
    10. 'h' → logprob: -9.020326614379883

Token 307: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5760144591331482
    2. '=' → logprob: -0.8260144591331482
    3. 'return' → logprob: -9.701014518737793
    4. ' return' → logprob: -12.201014518737793
    5. ' ' → logprob: -12.701014518737793
    6. 'mod' → logprob: -12.951014518737793
    7. 'eturn' → logprob: -14.076014518737793
    8. ',' → logprob: -14.326014518737793
    9. '=

' → logprob: -15.326014518737793
    10. ')' → logprob: -15.826014518737793

Token 308: ' ' (ID: 220)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.46223071217536926
    2. '1' → logprob: -1.5872306823730469
    3. '2' → logprob: -1.9622306823730469
    4. ' h' → logprob: -4.837230682373047
    5. ' ' → logprob: -4.962230682373047
    6. '(h' → logprob: -5.712230682373047
    7. 'H' → logprob: -5.962230682373047
    8. '(' → logprob: -6.712230682373047
    9. 'mod' → logprob: -6.712230682373047
    10. '0' → logprob: -6.962230682373047

Token 309: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5411844253540039
    2. 'h' → logprob: -1.041184425354004
    3. '2' → logprob: -2.791184425354004
    4. 'H' → logprob: -6.791184425354004
    5. '(h' → logprob: -7.041184425354004
    6. '(' → logprob: -7.291184425354004
    7. '0' → logprob: -7.916184425354004
    8. 'mod' → logprob: -8.916184425354004
    9. ' ' → logprob: -9.291184425354004
    10. '3' → logprob: -9.416184425354004

Token 310: ' puissance' (ID: 63494)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 311: ' la' (ID: 557)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.012841705232858658
    2. '(h' → logprob: -4.887841701507568
    3. ' h' → logprob: -5.887841701507568
    4. 'H' → logprob: -6.762841701507568
    5. ' (' → logprob: -7.887841701507568
    6. '(' → logprob: -8.512842178344727
    7. 'len' → logprob: -8.637842178344727
    8. 'mod' → logprob: -8.637842178344727
    9. '(len' → logprob: -9.262842178344727
    10. '2' → logprob: -9.387842178344727

Token 312: ' hauteur' (ID: 72987)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.048226237297058
    2. 'len' → logprob: -1.298226237297058
    3. 'h' → logprob: -1.923226237297058
    4. '(len' → logprob: -2.1732263565063477
    5. '1' → logprob: -2.4232263565063477
    6. '(h' → logprob: -4.548226356506348
    7. '(' → logprob: -5.298226356506348
    8. 'n' → logprob: -5.673226356506348
    9. ' ' → logprob: -6.423226356506348
    10. ' len' → logprob: -6.548226356506348

Token 313: ' de' (ID: 334)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.6333258748054504
    2. '(h' → logprob: -1.2583258152008057
    3. ' (' → logprob: -2.0083258152008057
    4. ' h' → logprob: -3.0083258152008057
    5. '(' → logprob: -7.258326053619385
    6. '(
' → logprob: -8.383325576782227
    7. '   ' → logprob: -8.633325576782227
    8. ' return' → logprob: -9.383325576782227
    9. '[h' → logprob: -9.633325576782227
    10. ',' → logprob: -10.008325576782227

Token 314: ' cet' (ID: 19505)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.038059625774621964
    2. ' h' → logprob: -3.288059711456299
    3. '(h' → logprob: -11.41305923461914
    4. ' ' → logprob: -12.91305923461914
    5. 'l' → logprob: -14.16305923461914
    6. ' (' → logprob: -14.16305923461914
    7. '   ' → logprob: -14.41305923461914
    8. 'H' → logprob: -14.41305923461914
    9. ' la' → logprob: -15.41305923461914
    10. '[h' → logprob: -15.41305923461914

Token 315: ' unique' (ID: 5746)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.028564995154738426
    2. ' h' → logprob: -3.778564929962158
    3. 'élé' → logprob: -5.778564929962158
    4. '[' → logprob: -6.403564929962158
    5. '0' → logprob: -8.528565406799316
    6. '(' → logprob: -9.028565406799316
    7. '(h' → logprob: -9.903565406799316
    8. ''h' → logprob: -10.028565406799316
    9. ' ' → logprob: -10.153565406799316
    10. 'H' → logprob: -10.653565406799316

Token 316: ' élément' (ID: 99627)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0196771789342165
    2. 'élé' → logprob: -4.14467716217041
    3. ' h' → logprob: -5.89467716217041
    4. 'element' → logprob: -7.64467716217041
    5. ' élément' → logprob: -8.64467716217041
    6. '(h' → logprob: -9.01967716217041
    7. ' element' → logprob: -9.89467716217041
    8. '[' → logprob: -11.64467716217041
    9. ' (' → logprob: -11.76967716217041
    10. '(' → logprob: -12.01967716217041

Token 317: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0917576551437378
    2. '(h' → logprob: -1.3417576551437378
    3. ' (' → logprob: -2.2167577743530273
    4. 'return' → logprob: -2.3417577743530273
    5. ' return' → logprob: -2.4667577743530273
    6. '**' → logprob: -3.2167577743530273
    7. '       ' → logprob: -3.3417577743530273
    8. '(' → logprob: -4.216757774353027
    9. ' **' → logprob: -4.466757774353027
    10. 'h' → logprob: -5.841757774353027

Token 318: ' modulo' (ID: 112372)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.30792009830474854
    2. ' pow' → logprob: -1.4329200983047485
    3. 'mod' → logprob: -4.682919979095459
    4. ' mod' → logprob: -5.432919979095459
    5. ' (' → logprob: -5.807919979095459
    6. 'return' → logprob: -5.932919979095459
    7. '(pow' → logprob: -6.182919979095459
    8. ' return' → logprob: -6.307919979095459
    9. '(' → logprob: -6.682919979095459
    10. '2' → logprob: -7.307919979095459

Token 319: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.5769165754318237
    2. ' mod' → logprob: -0.8269165754318237
    3. '(mod' → logprob: -6.951916694641113
    4. '(' → logprob: -11.576916694641113
    5. ' (' → logprob: -12.701916694641113
    6. ' modulo' → logprob: -13.576916694641113
    7. '	mod' → logprob: -13.826916694641113
    8. ' ' → logprob: -13.951916694641113
    9. '_mod' → logprob: -14.076916694641113
    10. 'space' → logprob: -14.451916694641113

Token 320: '.
' (ID: 558)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.6223061084747314
    2. '(' → logprob: -1.7473061084747314
    3. ' return' → logprob: -1.8723061084747314
    4. '   ' → logprob: -1.9973061084747314
    5. ' (' → logprob: -2.8723061084747314
    6. '(h' → logprob: -2.9973061084747314
    7. 'pow' → logprob: -3.1223061084747314
    8. ',' → logprob: -3.1223061084747314
    9. ' h' → logprob: -3.3723061084747314
    10. ':' → logprob: -3.3723061084747314

Token 321: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40936079621315
    2. 'return' → logprob: -1.1593607664108276
    3. ' return' → logprob: -4.034360885620117
    4. '   ' → logprob: -5.409360885620117
    5. '	return' → logprob: -10.034360885620117
    6. ':return' → logprob: -11.909360885620117
    7. '{return' → logprob: -11.909360885620117
    8. '```' → logprob: -12.659360885620117
    9. 'result' → logprob: -12.909360885620117
    10. '           ' → logprob: -13.909360885620117

Token 322: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0003843173326458782
    2. '   ' → logprob: -8.000384330749512
    3. ' return' → logprob: -10.250384330749512
    4. '       ' → logprob: -11.375384330749512
    5. 'result' → logprob: -13.875384330749512
    6. '
' → logprob: -14.375384330749512
    7. 'ret' → logprob: -16.000383377075195
    8. 'res' → logprob: -16.125383377075195
    9. '	return' → logprob: -16.500383377075195
    10. '    
' → logprob: -16.625383377075195

Token 323: ' pow' (ID: 9779)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0020936380606144667
    2. ' return' → logprob: -6.25209379196167
    3. 'result' → logprob: -9.377093315124512
    4. '   ' → logprob: -10.002093315124512
    5. 'res' → logprob: -10.502093315124512
    6. 'ret' → logprob: -12.252093315124512
    7. '       ' → logprob: -13.627093315124512
    8. '
' → logprob: -14.752093315124512
    9. '	return' → logprob: -15.002093315124512
    10. '```' → logprob: -15.502093315124512

Token 324: '(x' (ID: 4061)
  Prédit: '(pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(pow' → logprob: -0.5303406119346619
    2. '(' → logprob: -0.9053406119346619
    3. '(h' → logprob: -5.405340671539307
    4. 'pow' → logprob: -6.155340671539307
    5. '(power' → logprob: -8.030340194702148
    6. '(
' → logprob: -9.030340194702148
    7. '(p' → logprob: -10.030340194702148
    8. '(H' → logprob: -11.405340194702148
    9. '(po' → logprob: -11.655340194702148
    10. ' pow' → logprob: -11.780340194702148

Token 325: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4998748004436493
    2. '(' → logprob: -0.9998748302459717
    3. ',h' → logprob: -4.749874591827393
    4. '(h' → logprob: -5.124874591827393
    5. ')' → logprob: -5.374874591827393
    6. ' ,' → logprob: -6.249874591827393
    7. '(
' → logprob: -6.749874591827393
    8. '(pow' → logprob: -6.749874591827393
    9. ')(' → logprob: -7.249874591827393
    10. ')(
' → logprob: -8.12487506866455

Token 326: ' y' (ID: 342)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.005720909684896469
    2. ' h' → logprob: -5.255721092224121
    3. ')' → logprob: -8.380721092224121
    4. 'H' → logprob: -9.505721092224121
    5. ' ' → logprob: -9.630721092224121
    6. '2' → logprob: -9.755721092224121
    7. '(h' → logprob: -10.880721092224121
    8. '<|end|>' → logprob: -11.380721092224121
    9. '(' → logprob: -12.505721092224121
    10. '    ' → logprob: -12.630721092224121

Token 327: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01585487462580204
    2. '(' → logprob: -4.515854835510254
    3. ' ,' → logprob: -6.015854835510254
    4. '(h' → logprob: -7.140854835510254
    5. ')' → logprob: -7.265854835510254
    6. ',h' → logprob: -7.515854835510254
    7. '(x' → logprob: -9.390854835510254
    8. 'h' → logprob: -9.765854835510254
    9. ' (' → logprob: -10.015854835510254
    10. '(
' → logprob: -10.390854835510254

Token 328: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.2255842536687851
    2. ' mod' → logprob: -1.6005842685699463
    3. ')' → logprob: -8.725584030151367
    4. ' ' → logprob: -12.725584030151367
    5. '	mod' → logprob: -12.975584030151367
    6. '<|end|>' → logprob: -13.475584030151367
    7. 'pow' → logprob: -14.350584030151367
    8. ' ' → logprob: -14.600584030151367
    9. '(mod' → logprob: -15.100584030151367
    10. '```' → logprob: -15.600584030151367

Token 329: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.29161307215690613
    2. '(h' → logprob: -1.5416131019592285
    3. '(' → logprob: -4.0416131019592285
    4. '(pow' → logprob: -4.7916131019592285
    5. ',' → logprob: -5.7916131019592285
    6. '(
' → logprob: -5.9166131019592285
    7. ')(
' → logprob: -6.4166131019592285
    8. ')(' → logprob: -6.5416131019592285
    9. '(x' → logprob: -6.6666131019592285
    10. '       ' → logprob: -7.2916131019592285

Token 330: ' calc' (ID: 25691)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5447300672531128
    2. '(pow' → logprob: -1.2947300672531128
    3. '(h' → logprob: -2.0447301864624023
    4. '(
' → logprob: -4.919730186462402
    5. ')' → logprob: -5.419730186462402
    6. 'pow' → logprob: -6.419730186462402
    7. '(power' → logprob: -7.044730186462402
    8. '(x' → logprob: -7.419730186462402
    9. '(H' → logprob: -7.669730186462402
    10. '(p' → logprob: -7.794730186462402

Token 331: 'ule' (ID: 1601)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.015567720867693424
    2. '(pow' → logprob: -4.765567779541016
    3. 'ulate' → logprob: -5.890567779541016
    4. 'ule' → logprob: -6.890567779541016
    5. '=(' → logprob: -7.265567779541016
    6. 'pow' → logprob: -7.640567779541016
    7. 'ult' → logprob: -7.890567779541016
    8. '=lambda' → logprob: -8.265567779541016
    9. ')' → logprob: -8.390567779541016
    10. '_pow' → logprob: -8.515567779541016

Token 332: ' (' (ID: 350)
  Prédit: '(pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pow' → logprob: -0.503828763961792
    2. 'pow' → logprob: -1.253828763961792
    3. '(' → logprob: -2.253828763961792
    4. ' pow' → logprob: -6.128829002380371
    5. '(x' → logprob: -6.378829002380371
    6. '2' → logprob: -6.753829002380371
    7. ' (' → logprob: -8.878829002380371
    8. ')' → logprob: -9.753829002380371
    9. '(power' → logprob: -10.128829002380371
    10. '(
' → logprob: -10.378829002380371

Token 333: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7105856537818909
    2. 'pow' → logprob: -1.210585594177246
    3. '2' → logprob: -1.585585594177246
    4. '(' → logprob: -6.085585594177246
    5. '(pow' → logprob: -6.585585594177246
    6. ' x' → logprob: -7.335585594177246
    7. ' pow' → logprob: -7.710585594177246
    8. ')' → logprob: -7.835585594177246
    9. '(x' → logprob: -8.460585594177246
    10. ' ' → logprob: -8.585585594177246

Token 334: '^' (ID: 61)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12278222292661667
    2. '**' → logprob: -2.3727822303771973
    3. ' ,' → logprob: -4.747782230377197
    4. '**,' → logprob: -5.247782230377197
    5. ' **' → logprob: -5.372782230377197
    6. ')' → logprob: -5.747782230377197
    7. 'pow' → logprob: -9.122781753540039
    8. ')**' → logprob: -9.122781753540039
    9. ',
' → logprob: -9.122781753540039
    10. ' pow' → logprob: -9.497781753540039

Token 335: 'y' (ID: 88)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.006881488021463156
    2. 'y' → logprob: -5.1318817138671875
    3. ' h' → logprob: -7.5068817138671875
    4. 'H' → logprob: -9.006881713867188
    5. 'pow' → logprob: -9.006881713867188
    6. '2' → logprob: -9.756881713867188
    7. ' y' → logprob: -10.881881713867188
    8. '(h' → logprob: -11.006881713867188
    9. '<|end|>' → logprob: -11.006881713867188
    10. ')' → logprob: -11.381881713867188

Token 336: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004316060803830624
    2. ')' → logprob: -5.7543158531188965
    3. ' ,' → logprob: -6.8793158531188965
    4. '%' → logprob: -10.129316329956055
    5. 'mod' → logprob: -10.504316329956055
    6. ',
' → logprob: -11.379316329956055
    7. '```' → logprob: -11.379316329956055
    8. '   ' → logprob: -12.629316329956055
    9. ' mod' → logprob: -13.004316329956055
    10. ' )' → logprob: -13.129316329956055

Token 337: ' %' (ID: 1851)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3828103840351105
    2. ',' → logprob: -1.632810354232788
    3. ')' → logprob: -2.632810354232788
    4. '2' → logprob: -4.007810592651367
    5. ' (' → logprob: -4.882810592651367
    6. '(pow' → logprob: -5.257810592651367
    7. '       ' → logprob: -5.382810592651367
    8. ' ,' → logprob: -5.507810592651367
    9. '(h' → logprob: -5.632810592651367
    10. '(
' → logprob: -6.507810592651367

Token 338: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.00011450992315076292
    2. ' mod' → logprob: -9.125114440917969
    3. '(mod' → logprob: -12.250114440917969
    4. ')' → logprob: -14.625114440917969
    5. '	mod' → logprob: -16.25011444091797
    6. 'pow' → logprob: -16.62511444091797
    7. '(' → logprob: -17.87511444091797
    8. '```' → logprob: -18.00011444091797
    9. ' ' → logprob: -18.25011444091797
    10. ' мод' → logprob: -18.37511444091797

Token 339: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.41603928804397583
    2. '(h' → logprob: -1.666039228439331
    3. '   ' → logprob: -2.916039228439331
    4. ')' → logprob: -3.916039228439331
    5. 'return' → logprob: -3.916039228439331
    6. '(pow' → logprob: -4.04103946685791
    7. '       ' → logprob: -4.41603946685791
    8. ',' → logprob: -4.79103946685791
    9. '(return' → logprob: -5.41603946685791
    10. '):' → logprob: -5.66603946685791

Token 340: ' façon' (ID: 33381)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.18765269219875336
    2. 'pow' → logprob: -2.562652587890625
    3. ')' → logprob: -3.187652587890625
    4. ' mod' → logprob: -3.312652587890625
    5. '```' → logprob: -5.437652587890625
    6. '(mod' → logprob: -6.187652587890625
    7. ' pow' → logprob: -6.437652587890625
    8. '(pow' → logprob: -6.937652587890625
    9. ' (' → logprob: -7.187652587890625
    10. '(' → logprob: -7.312652587890625

Token 341: ' efficace' (ID: 54338)
  Prédit: ' efficace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' efficace' → logprob: -0.7566623091697693
    2. 'efficient' → logprob: -1.256662368774414
    3. 'pow' → logprob: -1.881662368774414
    4. 'mod' → logprob: -2.756662368774414
    5. ' effic' → logprob: -5.131662368774414
    6. ' rapide' → logprob: -5.131662368774414
    7. 'rap' → logprob: -5.506662368774414
    8. ' pow' → logprob: -5.881662368774414
    9. ' efficaces' → logprob: -6.256662368774414
    10. ' mod' → logprob: -6.381662368774414

Token 342: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.976699948310852
    2. '(pow' → logprob: -1.351699948310852
    3. '(' → logprob: -2.4766998291015625
    4. '   ' → logprob: -2.6016998291015625
    5. '(h' → logprob: -2.6016998291015625
    6. ',' → logprob: -2.9766998291015625
    7. ')' → logprob: -3.1016998291015625
    8. '):' → logprob: -4.2266998291015625
    9. 'pow' → logprob: -5.7266998291015625
    10. '           ' → logprob: -5.8516998291015625

Token 343: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20172001421451569
    2. 'return' → logprob: -1.7017199993133545
    3. ' return' → logprob: -8.201720237731934
    4. '   ' → logprob: -10.451720237731934
    5. '	return' → logprob: -13.951720237731934
    6. '```' → logprob: -14.201720237731934
    7. '{return' → logprob: -14.826720237731934
    8. ':return' → logprob: -14.951720237731934
    9. 'ret' → logprob: -15.076720237731934
    10. 'result' → logprob: -15.201720237731934

Token 344: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -8.149051427608356e-05
    2. '       ' → logprob: -9.500081062316895
    3. ' return' → logprob: -12.375081062316895
    4. '   ' → logprob: -13.500081062316895
    5. 'result' → logprob: -14.250081062316895
    6. '```' → logprob: -15.375081062316895
    7. 'ret' → logprob: -15.750081062316895
    8. '	return' → logprob: -17.12508201599121
    9. '{return' → logprob: -18.50008201599121
    10. '        
' → logprob: -18.50008201599121

Token 345: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.02682698518037796
    2. ' pow' → logprob: -3.651827096939087
    3. '(pow' → logprob: -8.026826858520508
    4. '(' → logprob: -9.026826858520508
    5. '2' → logprob: -10.026826858520508
    6. ' (' → logprob: -10.526826858520508
    7. '   ' → logprob: -12.026826858520508
    8. ' ' → logprob: -13.526826858520508
    9. '_pow' → logprob: -14.901826858520508
    10. 'power' → logprob: -15.401826858520508

Token 346: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00023119196703191847
    2. '2' → logprob: -8.37523078918457
    3. '(
' → logprob: -14.50023078918457
    4. ' (' → logprob: -15.75023078918457
    5. '
' → logprob: -16.87523078918457
    6. ' ' → logprob: -19.00023078918457
    7. '   ' → logprob: -19.37523078918457
    8. ')' → logprob: -20.25023078918457
    9. '```' → logprob: -20.37523078918457
    10. '    ' → logprob: -20.87523078918457

Token 347: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -12.625003814697266
    3. '
' → logprob: -14.625003814697266
    4. '(' → logprob: -17.000003814697266
    5. '   ' → logprob: -17.000003814697266
    6. ')' → logprob: -17.750003814697266
    7. '

' → logprob: -18.125003814697266
    8. '
' → logprob: -19.500003814697266
    9. '    ' → logprob: -19.625003814697266
    10. '  ' → logprob: -20.000003814697266

Token 348: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.044087737798690796
    2. ',h' → logprob: -3.4190876483917236
    3. ' ,' → logprob: -5.294087886810303
    4. 'h' → logprob: -6.169087886810303
    5. '(' → logprob: -6.544087886810303
    6. '[' → logprob: -7.044087886810303
    7. '(h' → logprob: -7.419087886810303
    8. ')' → logprob: -9.169087409973145
    9. ' h' → logprob: -9.169087409973145
    10. '[h' → logprob: -9.794087409973145

Token 349: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0052342405542731285
    2. ' h' → logprob: -5.255234241485596
    3. '(h' → logprob: -15.505233764648438
    4. '	h' → logprob: -15.880233764648438
    5. '   ' → logprob: -16.505233764648438
    6. '[h' → logprob: -17.630233764648438
    7. ' ' → logprob: -18.255233764648438
    8. '<h' → logprob: -19.255233764648438
    9. '_h' → logprob: -19.880233764648438
    10. '"h' → logprob: -20.005233764648438

Token 350: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.941850526549388e-06
    2. '0' → logprob: -11.750007629394531
    3. '[-' → logprob: -17.25000762939453
    4. ' [' → logprob: -17.37500762939453
    5. '[len' → logprob: -17.87500762939453
    6. '[
' → logprob: -18.25000762939453
    7. '(' → logprob: -18.87500762939453
    8. 'len' → logprob: -19.25000762939453
    9. '   ' → logprob: -19.25000762939453
    10. ')' → logprob: -19.37500762939453

Token 351: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.465036105713807e-06
    2. '[' → logprob: -11.875007629394531
    3. ' ' → logprob: -15.125007629394531
    4. '   ' → logprob: -16.75000762939453
    5. '-' → logprob: -17.37500762939453
    6. '```' → logprob: -18.06250762939453
    7. '
' → logprob: -18.25000762939453
    8. 'def' → logprob: -18.93750762939453
    9. '۰' → logprob: -18.93750762939453
    10. '#' → logprob: -18.93750762939453

Token 352: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.005268265027552843
    2. ']' → logprob: -5.255268096923828
    3. ' ],' → logprob: -10.380268096923828
    4. ']%' → logprob: -13.255268096923828
    5. ',' → logprob: -14.755268096923828
    6. '[' → logprob: -14.880268096923828
    7. '),' → logprob: -15.255268096923828
    8. '])' → logprob: -16.005268096923828
    9. ''],' → logprob: -16.130268096923828
    10. '   ' → logprob: -16.130268096923828

Token 353: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0002613358374219388
    2. ' mod' → logprob: -8.250261306762695
    3. '	mod' → logprob: -19.375261306762695
    4. '(mod' → logprob: -20.500261306762695
    5. ')' → logprob: -21.625261306762695
    6. 'MOD' → logprob: -22.750261306762695
    7. ' ' → logprob: -22.875261306762695
    8. ' мод' → logprob: -22.875261306762695
    9. '_mod' → logprob: -23.125261306762695
    10. '   ' → logprob: -23.375261306762695

Token 354: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ' )' → logprob: -13.750000953674316
    3. ')
' → logprob: -16.500001907348633
    4. ')#' → logprob: -17.125001907348633
    5. '))' → logprob: -17.250001907348633
    6. ')`' → logprob: -17.875001907348633
    7. ')}' → logprob: -18.125001907348633
    8. ')return' → logprob: -18.250001907348633
    9. '),' → logprob: -18.500001907348633
    10. '}' → logprob: -19.250001907348633

Token 355: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7500877380371094
    2. 'min' → logprob: -2.0000877380371094
    3. '#' → logprob: -2.1250877380371094
    4. 'else' → logprob: -2.1250877380371094
    5. 'max' → logprob: -2.8750877380371094
    6. '    
' → logprob: -3.3750877380371094
    7. 'res' → logprob: -4.875087738037109
    8. 'rest' → logprob: -5.000087738037109
    9. 'result' → logprob: -5.000087738037109
    10. '```' → logprob: -5.375087738037109

Token 356: ' #' (ID: 1069)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5605541467666626
    2. '#' (adapté à ' #') → logprob: -1.1855541467666626
    3. 'm' → logprob: -3.185554027557373
    4. '   ' → logprob: -3.310554027557373
    5. 'else' → logprob: -3.560554027557373
    6. 'root' → logprob: -5.435554027557373
    7. 'max' → logprob: -5.685554027557373
    8. 'pivot' → logprob: -5.685554027557373
    9. 'mid' → logprob: -6.685554027557373
    10. '    
' → logprob: -6.935554027557373

Token 357: ' Calcul' (ID: 57243)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5906378030776978
    2. 'm' → logprob: -0.9656378030776978
    3. '#' → logprob: -3.340637683868408
    4. 'else' → logprob: -4.590637683868408
    5. 'max' → logprob: -4.840637683868408
    6. 'pivot' → logprob: -5.840637683868408
    7. 'root' → logprob: -6.090637683868408
    8. 'mid' → logprob: -6.340637683868408
    9. 'minimum' → logprob: -6.840637683868408
    10. 'mi' → logprob: -6.965637683868408

Token 358: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12697377800941467
    2. 'min' → logprob: -3.376973867416382
    3. ' min' → logprob: -3.626973867416382
    4. 'max' → logprob: -4.501973628997803
    5. ' =' → logprob: -4.751973628997803
    6. 'er' → logprob: -5.001973628997803
    7. ' max' → logprob: -5.126973628997803
    8. '=' → logprob: -5.126973628997803
    9. 's' → logprob: -5.751973628997803
    10. ' n' → logprob: -5.876973628997803

Token 359: ' la' (ID: 557)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6578905582427979
    2. 'min' → logprob: -1.2828905582427979
    3. 'max' → logprob: -2.532890558242798
    4. 'mid' → logprob: -3.282890558242798
    5. 'mi' → logprob: -3.782890558242798
    6. 'idx' → logprob: -4.532890319824219
    7. 'mx' → logprob: -4.657890319824219
    8. 'minimum' → logprob: -4.782890319824219
    9. 'i' → logprob: -4.907890319824219
    10. 'res' → logprob: -5.032890319824219

Token 360: ' taille' (ID: 41644)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.26596730947494507
    2. 'm' → logprob: -1.5159673690795898
    3. 'minimum' → logprob: -4.89096736907959
    4. 'idx' → logprob: -6.14096736907959
    5. 'max' → logprob: -6.51596736907959
    6. 'mi' → logprob: -6.64096736907959
    7. 'mx' → logprob: -8.26596736907959
    8. 'mid' → logprob: -8.39096736907959
    9. 'mn' → logprob: -8.39096736907959
    10. 'i' → logprob: -8.64096736907959

Token 361: ' effective' (ID: 8488)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3137209713459015
    2. '=' → logprob: -1.563720941543579
    3. '   ' → logprob: -3.313720941543579
    4. 'n' → logprob: -4.063721179962158
    5. '=n' → logprob: -5.813721179962158
    6. '=len' → logprob: -6.188721179962158
    7. ',' → logprob: -7.938721179962158
    8. '=size' → logprob: -8.063720703125
    9. 's' → logprob: -8.938720703125
    10. 't' → logprob: -9.313720703125

Token 362: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.30178186297416687
    2. '=' → logprob: -1.6767818927764893
    3. '   ' → logprob: -2.6767818927764893
    4. 'n' → logprob: -6.30178165435791
    5. '=len' → logprob: -6.55178165435791
    6. '=n' → logprob: -7.67678165435791
    7. ',' → logprob: -8.42678165435791
    8. 'm' → logprob: -8.55178165435791
    9. 's' → logprob: -8.92678165435791
    10. '=m' → logprob: -9.17678165435791

Token 363: 'nombre' (ID: 28576)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.007803934160619974
    2. 'n' → logprob: -5.507803916931152
    3. 'mid' → logprob: -6.007803916931152
    4. 'm' → logprob: -7.257803916931152
    5. ')' → logprob: -8.132803916931152
    6. ' len' → logprob: -9.132803916931152
    7. 'half' → logprob: -10.132803916931152
    8. 'length' → logprob: -10.882803916931152
    9. '=len' → logprob: -11.382803916931152
    10. 'middle' → logprob: -11.382803916931152

Token 364: ' d' (ID: 272)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.039164662361145
    2. ' =' → logprob: -1.039164662361145
    3. '_' → logprob: -2.4141645431518555
    4. '_h' → logprob: -3.2891645431518555
    5. '_len' → logprob: -3.2891645431518555
    6. '=' → logprob: -3.4141645431518555
    7. '   ' → logprob: -3.7891645431518555
    8. 'len' → logprob: -4.6641645431518555
    9. '=len' → logprob: -4.6641645431518555
    10. 'de' → logprob: -5.0391645431518555

Token 365: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.807832658290863
    2. 'h' → logprob: -1.6828327178955078
    3. '(h' → logprob: -1.9328327178955078
    4. ' =' → logprob: -2.682832717895508
    5. '_h' → logprob: -3.057832717895508
    6. 's' → logprob: -3.307832717895508
    7. '=' → logprob: -3.557832717895508
    8. 'de' → logprob: -4.682832717895508
    9. 'd' → logprob: -4.807832717895508
    10. 'e' → logprob: -5.682832717895508

Token 366: 'élé' (ID: 15228)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.026891501620411873
    2. ')' → logprob: -4.276891708374023
    3. 'élé' → logprob: -5.526891708374023
    4. ' h' → logprob: -5.776891708374023
    5. 'elements' → logprob: -6.401891708374023
    6. '(h' → logprob: -6.651891708374023
    7. 's' → logprob: -6.901891708374023
    8. ']' → logprob: -7.526891708374023
    9. '[h' → logprob: -7.901891708374023
    10. 'é' → logprob: -9.526891708374023

Token 367: 'ments' (ID: 1626)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6006589531898499
    2. 'ment' → logprob: -1.100658893585205
    3. 'h' → logprob: -2.475658893585205
    4. 'm' → logprob: -3.975658893585205
    5. ' h' → logprob: -5.100658893585205
    6. 'ments' → logprob: -5.475658893585205
    7. 'ts' → logprob: -6.350658893585205
    8. 'ement' → logprob: -6.600658893585205
    9. 'nement' → logprob: -7.475658893585205
    10. 'e' → logprob: -7.475658893585205

Token 368: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18581248819828033
    2. ' =' → logprob: -2.435812473297119
    3. '=' → logprob: -2.685812473297119
    4. ')=' → logprob: -5.560812473297119
    5. 'n' → logprob: -5.685812473297119
    6. '   ' → logprob: -6.435812473297119
    7. '=len' → logprob: -6.435812473297119
    8. 'h' → logprob: -6.810812473297119
    9. 's' → logprob: -7.435812473297119
    10. '=h' → logprob: -8.310812950134277

Token 369: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0113176107406616
    2. '=' → logprob: -1.1363176107406616
    3. ' =' → logprob: -1.2613176107406616
    4. 'n' → logprob: -3.761317729949951
    5. '=n' → logprob: -5.636317729949951
    6. '=len' → logprob: -6.636317729949951
    7. '=size' → logprob: -7.261317729949951
    8. 'size' → logprob: -7.386317729949951
    9. 's' → logprob: -7.511317729949951
    10. 'len' → logprob: -7.511317729949951

Token 370: ' la' (ID: 557)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.00038288687937892973
    2. ' h' → logprob: -7.875382900238037
    3. '(h' → logprob: -13.250382423400879
    4. 'H' → logprob: -14.500382423400879
    5. 'l' → logprob: -16.375383377075195
    6. '[h' → logprob: -16.375383377075195
    7. 'len' → logprob: -16.625383377075195
    8. ')' → logprob: -16.625383377075195
    9. '   ' → logprob: -17.000383377075195
    10. ' ' → logprob: -17.125383377075195

Token 371: ' liste' (ID: 31719)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.676292231422849e-05
    2. ' h' → logprob: -11.000017166137695
    3. 'H' → logprob: -17.375017166137695
    4. '[h' → logprob: -18.125017166137695
    5. '	h' → logprob: -18.750017166137695
    6. 'list' → logprob: -19.000017166137695
    7. 'l' → logprob: -19.250017166137695
    8. '#' → logprob: -19.375017166137695
    9. 'liste' → logprob: -19.375017166137695
    10. '"h' → logprob: -19.500017166137695

Token 372: ' '' (ID: 461)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -1.0941308736801147
    2. 'n' → logprob: -1.7191308736801147
    3. '   ' → logprob: -2.0941309928894043
    4. 'm' → logprob: -2.0941309928894043
    5. 'tail' → logprob: -2.7191309928894043
    6. 'length' → logprob: -2.8441309928894043
    7. 'len' → logprob: -3.4691309928894043
    8. 'sz' → logprob: -3.7191309928894043
    9. 't' → logprob: -3.9691309928894043
    10. 's' → logprob: -4.594130992889404

Token 373: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0005618501454591751
    2. '(h' → logprob: -7.500561714172363
    3. ')' → logprob: -12.375561714172363
    4. ' h' → logprob: -12.500561714172363
    5. 'H' → logprob: -15.875561714172363
    6. '_h' → logprob: -16.00056266784668
    7. '	h' → logprob: -16.25056266784668
    8. '   ' → logprob: -16.25056266784668
    9. '[h' → logprob: -16.50056266784668
    10. '```' → logprob: -16.50056266784668

Token 374: ''.
' (ID: 49980)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04390236735343933
    2. ')
' → logprob: -3.5439023971557617
    3. '   ' → logprob: -4.293902397155762
    4. 'n' → logprob: -8.918902397155762
    5. 'size' → logprob: -9.668902397155762
    6. ')
' → logprob: -10.043902397155762
    7. ' )' → logprob: -10.418902397155762
    8. 'len' → logprob: -11.293902397155762
    9. 't' → logprob: -11.418902397155762
    10. ')=' → logprob: -11.793902397155762

Token 375: '   ' (ID: 271)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.74751216173172
    2. 'length' → logprob: -1.2475121021270752
    3. 'size' → logprob: -1.8725121021270752
    4. 'n' → logprob: -3.247512102127075
    5. 'l' → logprob: -3.997512102127075
    6. 'sz' → logprob: -4.497512340545654
    7. 'L' → logprob: -5.372512340545654
    8. '   ' → logprob: -5.372512340545654
    9. 'k' → logprob: -5.622512340545654
    10. 's' → logprob: -5.872512340545654

Token 376: ' N' (ID: 478)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6819061636924744
    2. 'length' → logprob: -1.3069062232971191
    3. 'size' → logprob: -1.8069062232971191
    4. 'n' → logprob: -3.681906223297119
    5. 'sz' → logprob: -4.306906223297119
    6. 'l' → logprob: -4.556906223297119
    7. 'k' → logprob: -5.181906223297119
    8. 's' → logprob: -6.306906223297119
    9. 'L' → logprob: -6.306906223297119
    10. '   ' → logprob: -7.931906223297119

Token 377: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5766881108283997
    2. '=' → logprob: -0.8266881108283997
    3. '=len' → logprob: -7.201688289642334
    4. '=N' → logprob: -13.201687812805176
    5. '=n' → logprob: -14.826687812805176
    6. '=h' → logprob: -15.201687812805176
    7. 'len' → logprob: -15.826687812805176
    8. '   ' → logprob: -15.951687812805176
    9. '=size' → logprob: -16.701688766479492
    10. ',' → logprob: -17.201688766479492

Token 378: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00861456897109747
    2. ' len' → logprob: -4.758614540100098
    3. '(len' → logprob: -16.758615493774414
    4. '   ' → logprob: -18.008615493774414
    5. '[len' → logprob: -18.758615493774414
    6. '	len' → logprob: -19.883615493774414
    7. '=len' → logprob: -21.383615493774414
    8. ',len' → logprob: -22.883615493774414
    9. 'Len' → logprob: -23.883615493774414
    10. '<len' → logprob: -24.383615493774414

Token 379: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -3.440506407059729e-05
    2. '(' → logprob: -10.37503433227539
    3. 'h' → logprob: -12.75003433227539
    4. '(H' → logprob: -16.25003433227539
    5. '(
' → logprob: -16.62503433227539
    6. ' (' → logprob: -17.62503433227539
    7. ')' → logprob: -18.00003433227539
    8. '[h' → logprob: -18.25003433227539
    9. '```' → logprob: -18.37503433227539
    10. '(s' → logprob: -19.50003433227539

Token 380: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.975612187583465e-05
    2. '())' → logprob: -10.875029563903809
    3. ' )' → logprob: -12.375029563903809
    4. '()' → logprob: -12.750029563903809
    5. ')
' → logprob: -13.000029563903809
    6. '))' → logprob: -14.250029563903809
    7. ')#' → logprob: -15.250029563903809
    8. '   ' → logprob: -15.875029563903809
    9. '#' → logprob: -16.625030517578125
    10. ')

' → logprob: -17.000030517578125

Token 381: '   ' (ID: 271)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.041689712554216385
    2. 'm' → logprob: -4.166689872741699
    3. 'pivot' → logprob: -4.666689872741699
    4. '#' → logprob: -5.166689872741699
    5. 'root' → logprob: -6.416689872741699
    6. 'i' → logprob: -6.791689872741699
    7. 'minimum' → logprob: -6.791689872741699
    8. 'base' → logprob: -7.041689872741699
    9. 'max' → logprob: -7.166689872741699
    10. 'mn' → logprob: -7.291689872741699

Token 382: ' #' (ID: 1069)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.6613515019416809
    2. 'm' → logprob: -0.7863515019416809
    3. 'i' → logprob: -5.161351680755615
    4. 'mid' → logprob: -5.536351680755615
    5. 'mi' → logprob: -5.911351680755615
    6. 'pivot' → logprob: -6.036351680755615
    7. 'mn' → logprob: -6.161351680755615
    8. '#' (adapté à ' #') → logprob: -6.161351680755615
    9. 'max' → logprob: -6.411351680755615
    10. 'mx' → logprob: -7.036351680755615

Token 383: ' Cré' (ID: 109203)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.23395362496376038
    2. 'm' → logprob: -1.733953595161438
    3. 'mx' → logprob: -5.108953475952148
    4. 'mn' → logprob: -5.358953475952148
    5. 'mi' → logprob: -5.608953475952148
    6. 'mid' → logprob: -5.858953475952148
    7. 'max' → logprob: -5.858953475952148
    8. 'minimum' → logprob: -6.108953475952148
    9. 'i' → logprob: -6.483953475952148
    10. 'root' → logprob: -6.483953475952148

Token 384: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.0030720680952072144
    2. 'er' → logprob: -6.503072261810303
    3. '#' → logprob: -7.628072261810303
    4. 'paration' → logprob: -7.878072261810303
    5. 'a' → logprob: -8.753071784973145
    6. 'ating' → logprob: -9.253071784973145
    7. 'ate' → logprob: -9.503071784973145
    8. 'd' → logprob: -9.628071784973145
    9. 'ment' → logprob: -10.253071784973145
    10. 'mentation' → logprob: -10.378071784973145

Token 385: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.03645848482847214
    2. ' dp' → logprob: -4.161458492279053
    3. 'd' → logprob: -4.661458492279053
    4. ' de' → logprob: -5.411458492279053
    5. 'dp' → logprob: -5.786458492279053
    6. ' =' → logprob: -6.286458492279053
    7. ' of' → logprob: -7.786458492279053
    8. '   ' → logprob: -8.161458015441895
    9. '[]' → logprob: -8.411458015441895
    10. 'de' → logprob: -9.161458015441895

Token 386: ''une' (ID: 13337)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7664269208908081
    2. 'une' → logprob: -1.641426920890808
    3. 'a' → logprob: -2.1414270401000977
    4. '[' → logprob: -2.5164270401000977
    5. '[]' → logprob: -3.1414270401000977
    6. ' une' → logprob: -3.5164270401000977
    7. ' a' → logprob: -3.8914270401000977
    8. ''une' → logprob: -4.016427040100098
    9. ' un' → logprob: -4.516427040100098
    10. ' e' → logprob: -5.266427040100098

Token 387: ' liste' (ID: 31719)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.26959681510925293
    2. 'dp' → logprob: -1.519596815109253
    3. 'deque' → logprob: -4.894597053527832
    4. 'pile' → logprob: -5.394597053527832
    5. 'memo' → logprob: -7.019597053527832
    6. 'liste' → logprob: -7.394597053527832
    7. 'p' → logprob: -7.644597053527832
    8. 'table' → logprob: -7.769597053527832
    9. 'min' → logprob: -7.894597053527832
    10. 'stk' → logprob: -8.144597053527832

Token 388: ' '' (ID: 461)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0961756780743599
    2. ' dp' → logprob: -2.5961756706237793
    3. 'res' → logprob: -5.221175670623779
    4. ' =' → logprob: -6.221175670623779
    5. '_dp' → logprob: -6.221175670623779
    6. 'count' → logprob: -6.846175670623779
    7. '(dp' → logprob: -7.096175670623779
    8. 'counts' → logprob: -7.096175670623779
    9. ' res' → logprob: -7.221175670623779
    10. 'cnt' → logprob: -7.471175670623779

Token 389: 'a' (ID: 64)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.014739706180989742
    2. 'res' → logprob: -6.139739513397217
    3. 'left' → logprob: -6.389739513397217
    4. 'pos' → logprob: -6.514739513397217
    5. 'count' → logprob: -6.514739513397217
    6. 'f' → logprob: -7.389739513397217
    7. 'prefix' → logprob: -7.389739513397217
    8. 'ways' → logprob: -7.514739513397217
    9. 'g' → logprob: -7.639739513397217
    10. 'stack' → logprob: -7.889739513397217

Token 390: ''' (ID: 6)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009315184317529202
    2. '=' → logprob: -5.009315013885498
    3. 'ns' → logprob: -6.759315013885498
    4. '=[' → logprob: -7.509315013885498
    5. 'a' → logprob: -8.384315490722656
    6. '=[]' → logprob: -8.384315490722656
    7. '=[]
' → logprob: -9.259315490722656
    8. 'rr' → logprob: -9.509315490722656
    9. ']' → logprob: -9.634315490722656
    10. ' =[' → logprob: -10.384315490722656

Token 391: ' qui' (ID: 2780)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16030922532081604
    2. '=' → logprob: -1.9103091955184937
    3. '=[' → logprob: -9.910308837890625
    4. '[' → logprob: -10.785308837890625
    5. ' =[' → logprob: -11.410308837890625
    6. 'a' → logprob: -13.785308837890625
    7. '   ' → logprob: -13.785308837890625
    8. ',' → logprob: -14.410308837890625
    9. ' =
' → logprob: -15.535308837890625
    10. ' [' → logprob: -15.910308837890625

Token 392: ' copie' (ID: 134141)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009767538867890835
    2. ' =' → logprob: -4.634767532348633
    3. '=[]' → logprob: -12.259767532348633
    4. '=[' → logprob: -12.259767532348633
    5. 'a' → logprob: -14.009767532348633
    6. '=a' → logprob: -15.134767532348633
    7. ' ' → logprob: -15.884767532348633
    8. '[' → logprob: -15.884767532348633
    9. '=[]
' → logprob: -16.009767532348633
    10. ',' → logprob: -16.134767532348633

Token 393: ',' (ID: 11)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.09213381260633469
    2. '(h' → logprob: -2.4671337604522705
    3. '[h' → logprob: -6.46713399887085
    4. ' h' → logprob: -6.71713399887085
    5. '[' → logprob: -8.717133522033691
    6. '([' → logprob: -9.467133522033691
    7. '(' → logprob: -9.842133522033691
    8. 'H' → logprob: -9.967133522033691
    9. '   ' → logprob: -11.092133522033691
    10. ')' → logprob: -11.092133522033691

Token 394: ' via' (ID: 4493)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.16236473619937897
    2. ' h' → logprob: -2.0373647212982178
    3. 'a' → logprob: -4.662364959716797
    4. '[' → logprob: -5.662364959716797
    5. ' a' → logprob: -5.662364959716797
    6. '[h' → logprob: -6.787364959716797
    7. ' [' → logprob: -7.787364959716797
    8. ')' → logprob: -8.412364959716797
    9. '[:]' → logprob: -8.537364959716797
    10. ' =' → logprob: -8.537364959716797

Token 395: ' compréhension' (ID: 142333)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.11432120949029922
    2. ' h' → logprob: -2.239321231842041
    3. '[' → logprob: -7.739321231842041
    4. '[h' → logprob: -7.989321231842041
    5. '[:]' → logprob: -8.364320755004883
    6. 'list' → logprob: -8.739320755004883
    7. ' [' → logprob: -9.364320755004883
    8. 'H' → logprob: -9.989320755004883
    9. ' list' → logprob: -10.239320755004883
    10. '   ' → logprob: -10.239320755004883

Token 396: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8434105515480042
    2. 'a' → logprob: -1.4684104919433594
    3. ' =' → logprob: -2.3434104919433594
    4. '=[' → logprob: -2.4684104919433594
    5. 'h' → logprob: -3.4684104919433594
    6. ' a' → logprob: -3.7184104919433594
    7. '[a' → logprob: -4.093410491943359
    8. '=' → logprob: -4.093410491943359
    9. '[i' → logprob: -4.218410491943359
    10. ' [' → logprob: -4.468410491943359

Token 397: ' liste' (ID: 31719)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.02313215471804142
    2. 'range' → logprob: -4.39813232421875
    3. '[h' → logprob: -5.39813232421875
    4. '[' → logprob: -5.89813232421875
    5. ' h' → logprob: -6.14813232421875
    6. ' range' → logprob: -8.02313232421875
    7. '[i' → logprob: -8.39813232421875
    8. 'H' → logprob: -8.52313232421875
    9. '1' → logprob: -9.39813232421875
    10. 'i' → logprob: -9.52313232421875

Token 398: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21072977781295776
    2. '[' → logprob: -2.4607298374176025
    3. '[h' → logprob: -3.2107298374176025
    4. '[i' → logprob: -3.4607298374176025
    5. 'h' → logprob: -4.585729598999023
    6. '([' → logprob: -4.960729598999023
    7. '(h' → logprob: -5.210729598999023
    8. '[a' → logprob: -5.460729598999023
    9. 'a' → logprob: -6.960729598999023
    10. '(' → logprob: -7.460729598999023

Token 399: ' tous' (ID: 10688)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.29462042450904846
    2. '[' → logprob: -1.794620394706726
    3. '[h' → logprob: -2.5446205139160156
    4. ' h' → logprob: -5.544620513916016
    5. '[i' → logprob: -5.794620513916016
    6. ' [' → logprob: -6.794620513916016
    7. '[(' → logprob: -7.669620513916016
    8. '[a' → logprob: -7.794620513916016
    9. '[-' → logprob: -8.544620513916016
    10. '   ' → logprob: -8.544620513916016

Token 400: ' les' (ID: 1341)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.8273696303367615
    2. 'x' → logprob: -1.4523696899414062
    3. '(h' → logprob: -1.4523696899414062
    4. '(x' → logprob: -3.2023696899414062
    5. '(' → logprob: -4.202369689941406
    6. 'val' → logprob: -4.952369689941406
    7. '[h' → logprob: -5.327369689941406
    8. 'v' → logprob: -5.327369689941406
    9. 'i' → logprob: -5.952369689941406
    10. '(i' → logprob: -6.202369689941406

Token 401: ' éléments' (ID: 57375)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5056635737419128
    2. 'h' → logprob: -1.0056636333465576
    3. 'H' → logprob: -4.5056633949279785
    4. 'i' → logprob: -4.6306633949279785
    5. 'elem' → logprob: -5.2556633949279785
    6. 'val' → logprob: -7.0056633949279785
    7. 'v' → logprob: -7.6306633949279785
    8. '1' → logprob: -7.7556633949279785
    9. '2' → logprob: -7.8806633949279785
    10. '0' → logprob: -8.005663871765137

Token 402: ' de' (ID: 334)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.0285158157348633
    2. ' de' → logprob: -1.2785158157348633
    3. 'de' → logprob: -2.1535158157348633
    4. '=' → logprob: -3.0285158157348633
    5. '[i' → logprob: -3.4035158157348633
    6. 'a' → logprob: -3.5285158157348633
    7. '[h' → logprob: -3.5285158157348633
    8. ' h' → logprob: -3.9035158157348633
    9. ' of' → logprob: -4.028515815734863
    10. '   ' → logprob: -4.028515815734863

Token 403: ' '' (ID: 461)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.005238736979663372
    2. ' h' → logprob: -5.2552385330200195
    3. 'range' → logprob: -13.13023853302002
    4. '[h' → logprob: -13.75523853302002
    5. 'H' → logprob: -14.25523853302002
    6. ' range' → logprob: -15.00523853302002
    7. ' ' → logprob: -15.25523853302002
    8. '   ' → logprob: -15.50523853302002
    9. '	h' → logprob: -15.88023853302002
    10. '[' → logprob: -16.130239486694336

Token 404: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -6.778209353797138e-05
    2. ' h' → logprob: -9.625067710876465
    3. 'H' → logprob: -13.750067710876465
    4. '```' → logprob: -16.00006866455078
    5. '	h' → logprob: -16.25006866455078
    6. 'range' → logprob: -16.50006866455078
    7. '"h' → logprob: -16.87506866455078
    8. ''h' → logprob: -16.87506866455078
    9. '_h' → logprob: -17.00006866455078
    10. ']' → logprob: -17.12506866455078

Token 405: ''.
' (ID: 49980)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011429571313783526
    2. ')]' → logprob: -8.001142501831055
    3. ' ]' → logprob: -8.751142501831055
    4. '[' → logprob: -8.751142501831055
    5. ')' → logprob: -9.501142501831055
    6. '[i' → logprob: -9.501142501831055
    7. '[:]' → logprob: -9.501142501831055
    8. 'a' → logprob: -9.751142501831055
    9. '])' → logprob: -9.876142501831055
    10. ']
' → logprob: -10.001142501831055

Token 406: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0011454568011686206
    2. ' a' → logprob: -7.126145362854004
    3. '   ' → logprob: -8.376145362854004
    4. '[' → logprob: -9.751145362854004
    5. '[a' → logprob: -10.251145362854004
    6. '_a' → logprob: -12.376145362854004
    7. ' =' → logprob: -12.376145362854004
    8. '[:]' → logprob: -12.626145362854004
    9. '=' → logprob: -13.251145362854004
    10. '[]' → logprob: -14.251145362854004

Token 407: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -5.7888184528565034e-05
    2. ' a' → logprob: -9.8750581741333
    3. '[a' → logprob: -12.5000581741333
    4. '[' → logprob: -12.8750581741333
    5. 'h' → logprob: -17.375057220458984
    6. '   ' → logprob: -17.875057220458984
    7. '	a' → logprob: -18.750057220458984
    8. '[h' → logprob: -18.875057220458984
    9. '[]' → logprob: -19.500057220458984
    10. '_a' → logprob: -19.750057220458984

Token 408: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0380522795021534
    2. ' =' → logprob: -3.2880523204803467
    3. '=[' → logprob: -11.663052558898926
    4. ' =[' → logprob: -13.913052558898926
    5. '[' → logprob: -14.038052558898926
    6. '=[]' → logprob: -15.538052558898926
    7. '[:]' → logprob: -15.663052558898926
    8. '＝' → logprob: -16.78805160522461
    9. '=a' → logprob: -17.28805160522461
    10. ',' → logprob: -17.91305160522461

Token 409: ' [' (ID: 723)
  Prédit: '[h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -0.47862884402275085
    2. 'h' → logprob: -0.9786288738250732
    3. ' h' → logprob: -5.728628635406494
    4. '[' → logprob: -7.228628635406494
    5. ' [' → logprob: -7.603628635406494
    6. 'list' → logprob: -10.103629112243652
    7. '[list' → logprob: -12.103629112243652
    8. '[i' → logprob: -12.353629112243652
    9. '[a' → logprob: -12.478629112243652
    10. ' list' → logprob: -13.353629112243652

Token 410: 'h' (ID: 71)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0004858458414673805
    2. 'elem' → logprob: -8.75048542022705
    3. 'i' → logprob: -9.87548542022705
    4. '0' → logprob: -10.12548542022705
    5. 'hi' → logprob: -10.12548542022705
    6. 'val' → logprob: -10.37548542022705
    7. 'v' → logprob: -10.50048542022705
    8. 'e' → logprob: -10.75048542022705
    9. 'h' → logprob: -10.87548542022705
    10. '(x' → logprob: -11.12548542022705

Token 411: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00025895543512888253
    2. 'i' → logprob: -8.500259399414062
    3. '[' → logprob: -10.000259399414062
    4. ']' → logprob: -12.500259399414062
    5. '_i' → logprob: -12.750259399414062
    6. '[x' → logprob: -14.375259399414062
    7. '(i' → logprob: -14.750259399414062
    8. '[j' → logprob: -14.875259399414062
    9. ' i' → logprob: -15.125259399414062
    10. '0' → logprob: -15.375259399414062

Token 412: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00014823723176959902
    2. ' ]' → logprob: -9.000147819519043
    3. 'for' → logprob: -10.875147819519043
    4. ' for' → logprob: -13.750147819519043
    5. ']+' → logprob: -14.000147819519043
    6. '[i' → logprob: -14.250147819519043
    7. 'i' → logprob: -14.250147819519043
    8. '   ' → logprob: -14.250147819519043
    9. ']
' → logprob: -14.750147819519043
    10. ']]' → logprob: -15.125147819519043

Token 413: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4309481978416443
    2. ' for' → logprob: -1.055948257446289
    3. '-' → logprob: -6.305948257446289
    4. ' ' → logprob: -8.680948257446289
    5. ' -' → logprob: -8.805948257446289
    6. ']' → logprob: -10.055948257446289
    7. '   ' → logprob: -10.680948257446289
    8. '	for' → logprob: -11.680948257446289
    9. '  ' → logprob: -12.430948257446289
    10. '+' → logprob: -12.430948257446289

Token 414: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008615515194833279
    2. ' i' → logprob: -4.758615493774414
    3. '	i' → logprob: -14.008615493774414
    4. ' ' → logprob: -16.258615493774414
    5. ' ' → logprob: -16.883615493774414
    6. '  ' → logprob: -18.258615493774414
    7. '   ' → logprob: -18.633615493774414
    8. '```' → logprob: -20.133615493774414
    9. ')i' → logprob: -20.133615493774414
    10. ' in' → logprob: -20.258615493774414

Token 415: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6332609057426453
    2. 'in' → logprob: -0.7582609057426453
    3. 'range' → logprob: -8.008260726928711
    4. 'i' → logprob: -8.508260726928711
    5. ' ' → logprob: -9.883260726928711
    6. ' i' → logprob: -10.508260726928711
    7. ' range' → logprob: -11.008260726928711
    8. 'n' → logprob: -11.383260726928711
    9. ')' → logprob: -11.633260726928711
    10. ']' → logprob: -12.758260726928711

Token 416: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.5491004129871726e-05
    2. ' range' → logprob: -10.000045776367188
    3. '(range' → logprob: -18.750045776367188
    4. '	range' → logprob: -19.250045776367188
    5. '   ' → logprob: -19.500045776367188
    6. 'rang' → logprob: -19.625045776367188
    7. ' ' → logprob: -19.875045776367188
    8. 'r' → logprob: -20.000045776367188
    9. ']' → logprob: -20.625045776367188
    10. '  ' → logprob: -21.000045776367188

Token 417: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0022125851828604937
    2. '(' → logprob: -6.2522125244140625
    3. 'N' → logprob: -8.752212524414062
    4. ' (' → logprob: -9.877212524414062
    5. '(len' → logprob: -10.127212524414062
    6. '(n' → logprob: -10.377212524414062
    7. '(
' → logprob: -13.752212524414062
    8. 'len' → logprob: -13.877212524414062
    9. ' N' → logprob: -14.377212524414062
    10. '   ' → logprob: -15.002212524414062

Token 418: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0001307142956648022
    2. ' )' → logprob: -9.250130653381348
    3. '+' → logprob: -11.500130653381348
    4. ']' → logprob: -11.750130653381348
    5. ')' → logprob: -12.000130653381348
    6. ' ]' → logprob: -12.125130653381348
    7. '   ' → logprob: -13.250130653381348
    8. ')]
' → logprob: -14.375130653381348
    9. ' ' → logprob: -14.625130653381348
    10. ')],' → logprob: -15.125130653381348

Token 419: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2783093750476837
    2. '   ' → logprob: -1.9033093452453613
    3. '  
' → logprob: -3.4033093452453613
    4. '    
' → logprob: -4.278309345245361
    5. '<|end|>' → logprob: -4.403309345245361
    6. 'a' → logprob: -4.903309345245361
    7. ' ' → logprob: -5.153309345245361
    8. '#' → logprob: -5.903309345245361
    9. '```' → logprob: -6.278309345245361
    10. ')' → logprob: -6.278309345245361

Token 420: ' #' (ID: 1069)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.8697628974914551
    2. 'for' → logprob: -1.744762897491455
    3. 'a' → logprob: -1.869762897491455
    4. '#' (adapté à ' #') → logprob: -2.369762897491455
    5. 'i' → logprob: -2.994762897491455
    6. 'max' → logprob: -2.994762897491455
    7. 'pivot' → logprob: -4.119762897491455
    8. 'minimum' → logprob: -4.744762897491455
    9. 'stack' → logprob: -5.119762897491455
    10. 'if' → logprob: -5.619762897491455

Token 421: ' Conversion' (ID: 74433)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.600098729133606
    2. 'm' → logprob: -1.725098729133606
    3. 'for' → logprob: -2.1000986099243164
    4. 'pivot' → logprob: -3.6000986099243164
    5. 'stack' → logprob: -3.9750986099243164
    6. 'i' → logprob: -3.9750986099243164
    7. 'a' → logprob: -4.225098609924316
    8. 'pos' → logprob: -4.725098609924316
    9. 'minimum' → logprob: -4.725098609924316
    10. 'mx' → logprob: -4.850098609924316

Token 422: ' de' (ID: 334)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.087673120200634
    2. ' a' → logprob: -3.4626731872558594
    3. ' de' → logprob: -4.337673187255859
    4. ' =' → logprob: -4.587673187255859
    5. '=' → logprob: -4.712673187255859
    6. '   ' → logprob: -5.087673187255859
    7. '(' → logprob: -5.337673187255859
    8. ' of' → logprob: -5.587673187255859
    9. 'de' → logprob: -6.462673187255859
    10. 'import' → logprob: -6.837673187255859

Token 423: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.01771881990134716
    2. 'h' → logprob: -4.51771879196167
    3. ' a' → logprob: -5.26771879196167
    4. ' h' → logprob: -7.39271879196167
    5. 'H' → logprob: -7.76771879196167
    6. 'max' → logprob: -9.767719268798828
    7. 'all' → logprob: -9.767719268798828
    8. ' la' → logprob: -10.017719268798828
    9. '[a' → logprob: -10.142719268798828
    10. 'la' → logprob: -10.142719268798828

Token 424: ' liste' (ID: 31719)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08101551234722137
    2. 'sorted' → logprob: -4.331015586853027
    3. 'range' → logprob: -4.456015586853027
    4. 'list' → logprob: -4.456015586853027
    5. '[' → logprob: -4.581015586853027
    6. 'h' → logprob: -5.206015586853027
    7. ' a' → logprob: -5.331015586853027
    8. 'H' → logprob: -5.331015586853027
    9. '[a' → logprob: -6.331015586853027
    10. 'max' → logprob: -6.456015586853027

Token 425: ' '' (ID: 461)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.27622997760772705
    2. 'en' → logprob: -1.651229977607727
    3. ' a' → logprob: -3.9012298583984375
    4. ' en' → logprob: -3.9012298583984375
    5. ' des' → logprob: -6.4012298583984375
    6. 'des' → logprob: -6.6512298583984375
    7. '   ' → logprob: -6.9012298583984375
    8. '(' → logprob: -7.5262298583984375
    9. 'de' → logprob: -7.6512298583984375
    10. ' de' → logprob: -7.7762298583984375

Token 426: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.009962661191821098
    2. 'h' → logprob: -4.759962558746338
    3. 'H' → logprob: -7.259962558746338
    4. ' a' → logprob: -7.759962558746338
    5. '[a' → logprob: -10.259963035583496
    6. '[' → logprob: -10.509963035583496
    7. 'range' → logprob: -10.509963035583496
    8. '[]' → logprob: -10.509963035583496
    9. '[h' → logprob: -11.009963035583496
    10. ' h' → logprob: -11.134963035583496

Token 427: ''' (ID: 6)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.45656609535217285
    2. ' =' → logprob: -1.3315660953521729
    3. '.sort' → logprob: -2.831566095352173
    4. ')' → logprob: -4.206565856933594
    5. '[:]' → logprob: -4.456565856933594
    6. 'a' → logprob: -5.831565856933594
    7. ']' → logprob: -6.206565856933594
    8. 'sort' → logprob: -6.331565856933594
    9. '[a' → logprob: -6.456565856933594
    10. ' a' → logprob: -6.706565856933594

Token 428: ' en' (ID: 469)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.8678675293922424
    2. '=' → logprob: -1.2428674697875977
    3. ' =' → logprob: -1.6178674697875977
    4. '[:]' → logprob: -3.6178674697875977
    5. 'en' → logprob: -3.8678674697875977
    6. ' en' → logprob: -4.117867469787598
    7. 'into' → logprob: -4.992867469787598
    8. ',' → logprob: -5.117867469787598
    9. ' into' → logprob: -5.492867469787598
    10. 'sort' → logprob: -6.117867469787598

Token 429: ' ensemble' (ID: 33081)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -1.122987151145935
    2. 'tuple' → logprob: -1.497987151145935
    3. ' tuple' → logprob: -1.997987151145935
    4. 'set' → logprob: -2.3729872703552246
    5. 'a' → logprob: -2.4979872703552246
    6. 'list' → logprob: -3.3729872703552246
    7. ' set' → logprob: -3.6229872703552246
    8. ' a' → logprob: -3.7479872703552246
    9. 'sorted' → logprob: -4.247987270355225
    10. ' deque' → logprob: -4.497987270355225

Token 430: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.49003395438194275
    2. '(a' → logprob: -1.1150339841842651
    3. 's' → logprob: -3.9900338649749756
    4. ' a' → logprob: -4.490034103393555
    5. 'set' → logprob: -4.490034103393555
    6. ' =' → logprob: -4.740034103393555
    7. ' (' → logprob: -5.990034103393555
    8. '   ' → logprob: -6.115034103393555
    9. '(set' → logprob: -6.240034103393555
    10. '(' → logprob: -7.115034103393555

Token 431: 'set' (ID: 977)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2541251480579376
    2. 'set' → logprob: -2.1291251182556152
    3. ' a' → logprob: -3.2541251182556152
    4. ')' → logprob: -3.7541251182556152
    5. 's' → logprob: -3.8791251182556152
    6. ' set' → logprob: -4.129125118255615
    7. 'h' → logprob: -6.504125118255615
    8. ' s' → logprob: -6.879125118255615
    9. '(a' → logprob: -7.129125118255615
    10. ' )' → logprob: -7.129125118255615

Token 432: ')' (ID: 8)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.04776250198483467
    2. ')' → logprob: -3.172762393951416
    3. 'a' → logprob: -5.922762393951416
    4. ')a' → logprob: -6.547762393951416
    5. ',' → logprob: -8.547762870788574
    6. '   ' → logprob: -8.797762870788574
    7. ' )' → logprob: -9.422762870788574
    8. '_a' → logprob: -10.172762870788574
    9. '(' → logprob: -10.547762870788574
    10. 's' → logprob: -10.672762870788574

Token 433: ' pour' (ID: 1930)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3544013798236847
    2. ' =' → logprob: -1.4794013500213623
    3. '   ' → logprob: -3.3544013500213623
    4. 's' → logprob: -4.104401588439941
    5. '(a' → logprob: -4.479401588439941
    6. ' a' → logprob: -5.729401588439941
    7. '()' → logprob: -6.854401588439941
    8. '=' → logprob: -6.979401588439941
    9. ')' → logprob: -7.104401588439941
    10. ',' → logprob: -7.354401588439941

Token 434: ' ne' (ID: 453)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -1.587296724319458
    2. 'identifier' → logprob: -1.837296724319458
    3. ' trouver' → logprob: -2.212296724319458
    4. ' obtenir' → logprob: -2.712296724319458
    5. 'fac' → logprob: -2.962296724319458
    6. 'ob' → logprob: -2.962296724319458
    7. ' identifier' → logprob: -3.212296724319458
    8. 'ident' → logprob: -3.462296724319458
    9. 'el' → logprob: -3.587296724319458
    10. 'chercher' → logprob: -3.587296724319458

Token 435: ' retenir' (ID: 185142)
  Prédit: ' garder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' garder' → logprob: -0.5184550881385803
    2. ' conserver' → logprob: -1.5184550285339355
    3. 'pas' → logprob: -2.7684550285339355
    4. ' pas' → logprob: -3.3934550285339355
    5. 'reten' → logprob: -4.0184550285339355
    6. 'avoir' → logprob: -4.1434550285339355
    7. ' retenir' → logprob: -4.1434550285339355
    8. 'con' → logprob: -4.3934550285339355
    9. 'g' → logprob: -5.3934550285339355
    10. ' retirer' → logprob: -5.5184550285339355

Token 436: ' que' (ID: 661)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -1.3184535503387451
    2. 'unique' → logprob: -1.4434535503387451
    3. ' unique' → logprob: -2.318453550338745
    4. 'a' → logprob: -2.443453550338745
    5. '(unique' → logprob: -2.443453550338745
    6. '(a' → logprob: -3.193453550338745
    7. '_unique' → logprob: -3.318453550338745
    8. 'les' → logprob: -3.568453550338745
    9. ' uniquement' → logprob: -3.818453550338745
    10. ' uniqu' → logprob: -4.068453788757324

Token 437: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.5600044131278992
    2. ' les' → logprob: -0.9350044131278992
    3. 'unique' → logprob: -4.435004234313965
    4. 'a' → logprob: -4.685004234313965
    5. 'la' → logprob: -4.810004234313965
    6. ' unique' → logprob: -5.935004234313965
    7. ' la' → logprob: -6.435004234313965
    8. ' uniques' → logprob: -7.185004234313965
    9. ' des' → logprob: -7.560004234313965
    10. 'distinct' → logprob: -7.685004234313965

Token 438: ' valeurs' (ID: 73668)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.6457902789115906
    2. 'a' → logprob: -1.1457903385162354
    3. 'unique' → logprob: -2.5207903385162354
    4. 'élé' → logprob: -3.3957903385162354
    5. 'distinct' → logprob: -3.5207903385162354
    6. ' a' → logprob: -5.520790100097656
    7. 'elements' → logprob: -6.020790100097656
    8. ' valeurs' → logprob: -6.145790100097656
    9. ' uniques' → logprob: -6.520790100097656
    10. ' unique' → logprob: -6.770790100097656

Token 439: ' uniques' (ID: 156848)
  Prédit: 'distinct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distinct' → logprob: -0.33492642641067505
    2. ' uniques' → logprob: -2.2099263668060303
    3. '(a' → logprob: -2.9599263668060303
    4. 'unique' → logprob: -3.2099263668060303
    5. 'a' → logprob: -3.3349263668060303
    6. ' distinct' → logprob: -4.334926605224609
    7. 'uni' → logprob: -4.709926605224609
    8. '_unique' → logprob: -5.209926605224609
    9. ' unique' → logprob: -5.334926605224609
    10. 'uniq' → logprob: -5.334926605224609

Token 440: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1728217750787735
    2. '   ' → logprob: -2.6728217601776123
    3. ',' → logprob: -3.0478217601776123
    4. '(a' → logprob: -3.4228217601776123
    5. ',a' → logprob: -6.422821998596191
    6. '_a' → logprob: -6.547821998596191
    7. ')' → logprob: -6.672821998596191
    8. ' a' → logprob: -7.047821998596191
    9. ' =' → logprob: -7.047821998596191
    10. '.' → logprob: -7.422821998596191

Token 441: 'é' (ID: 377)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6918731927871704
    2. 'a' → logprob: -0.8168731927871704
    3. ' a' → logprob: -3.941873073577881
    4. 'unique' → logprob: -4.566873073577881
    5. ' )' → logprob: -4.941873073577881
    6. ')a' → logprob: -5.191873073577881
    7. ')
' → logprob: -5.816873073577881
    8. '   ' → logprob: -6.066873073577881
    9. ').' → logprob: -6.316873073577881
    10. ' unique' → logprob: -6.441873073577881

Token 442: 'lim' (ID: 5406)
  Prédit: 'lé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lé' → logprob: -0.34243038296699524
    2. 'lements' → logprob: -1.9674303531646729
    3. 'a' → logprob: -3.217430353164673
    4. 'lement' → logprob: -3.342430353164673
    5. 'gal' → logprob: -3.592430353164673
    6. 'l' → logprob: -3.967430353164673
    7. ')' → logprob: -4.842430591583252
    8. ')a' → logprob: -5.217430591583252
    9. 'lems' → logprob: -5.717430591583252
    10. 'x' → logprob: -6.717430591583252

Token 443: 'ination' (ID: 3273)
  Prédit: 'iner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'iner' → logprob: -0.02333853393793106
    2. 'in' → logprob: -4.023338317871094
    3. 'uer' → logprob: -6.398338317871094
    4. 'iné' → logprob: -6.773338317871094
    5. 'ées' → logprob: -7.648338317871094
    6. 'é' → logprob: -7.898338317871094
    7. 'u' → logprob: -8.273338317871094
    8. 'min' → logprob: -8.523338317871094
    9. 'ines' → logprob: -8.648338317871094
    10. 'éer' → logprob: -9.273338317871094

Token 444: ' des' (ID: 731)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0044498201459646225
    2. '(' → logprob: -6.754449844360352
    3. 'a' → logprob: -6.879449844360352
    4. '(set' → logprob: -6.879449844360352
    5. ')' → logprob: -7.629449844360352
    6. '(
' → logprob: -8.504449844360352
    7. 'de' → logprob: -8.504449844360352
    8. 'des' → logprob: -9.629449844360352
    9. '   ' → logprob: -10.004449844360352
    10. ' (' → logprob: -10.129449844360352

Token 445: ' doubl' (ID: 127992)
  Prédit: 'duplicates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'duplicates' → logprob: -0.5889809131622314
    2. ' duplicates' → logprob: -1.2139809131622314
    3. ' doubl' → logprob: -2.5889809131622314
    4. 'dou' → logprob: -3.5889809131622314
    5. 'a' → logprob: -4.213980674743652
    6. 'duplic' → logprob: -5.088980674743652
    7. 'dup' → logprob: -5.088980674743652
    8. ' duplic' → logprob: -5.463980674743652
    9. 'd' → logprob: -5.588980674743652
    10. 'duplicate' → logprob: -5.713980674743652

Token 446: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.0010354298865422606
    2. 'es' → logprob: -7.251035213470459
    3. 'on' → logprob: -9.126035690307617
    4. 'és' → logprob: -9.251035690307617
    5. 'onnes' → logprob: -10.001035690307617
    6. 'ic' → logprob: -10.876035690307617
    7. 'iques' → logprob: -11.501035690307617
    8. '```' → logprob: -11.876035690307617
    9. '>' → logprob: -12.126035690307617
    10. '#' → logprob: -12.501035690307617

Token 447: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0310048870742321
    2. ').' → logprob: -3.9060049057006836
    3. 'a' → logprob: -5.906004905700684
    4. ',' → logprob: -6.156004905700684
    5. ')a' → logprob: -6.531004905700684
    6. ')
' → logprob: -7.031004905700684
    7. '(a' → logprob: -7.281004905700684
    8. '.' → logprob: -7.281004905700684
    9. '),' → logprob: -7.656004905700684
    10. '   ' → logprob: -8.031004905700684

Token 448: '   ' (ID: 271)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4568323493003845
    2. 'unique' → logprob: -1.4568324089050293
    3. 'a' → logprob: -3.3318324089050293
    4. 'u' → logprob: -3.8318324089050293
    5. 'uni' → logprob: -3.9568324089050293
    6. 'vals' → logprob: -4.456832408905029
    7. 'uniq' → logprob: -4.706832408905029
    8. '   ' → logprob: -4.956832408905029
    9. ' unique' → logprob: -4.956832408905029
    10. 'b' → logprob: -5.706832408905029

Token 449: ' a' (ID: 261)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4110059440135956
    2. 'unique' → logprob: -1.411005973815918
    3. 'a' (adapté à ' a') → logprob: -3.911005973815918
    4. 'uniq' → logprob: -4.161005973815918
    5. 'uni' → logprob: -4.786005973815918
    6. 'vals' → logprob: -4.786005973815918
    7. 'u' → logprob: -5.036005973815918
    8. 'S' → logprob: -5.161005973815918
    9. 'b' → logprob: -5.161005973815918
    10. 'st' → logprob: -6.036005973815918

Token 450: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25258323550224304
    2. ' =' → logprob: -1.5025832653045654
    3. '=set' → logprob: -7.377583026885986
    4. 'a' → logprob: -11.627583503723145
    5. 'set' → logprob: -12.127583503723145
    6. 's' → logprob: -12.252583503723145
    7. '_set' → logprob: -12.377583503723145
    8. '=a' → logprob: -13.627583503723145
    9. ' ' → logprob: -14.002583503723145
    10. '.' → logprob: -14.627583503723145

Token 451: ' list' (ID: 1562)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.16022644937038422
    2. ' set' → logprob: -1.9102264642715454
    3. '(set' → logprob: -13.785226821899414
    4. '{' → logprob: -14.785226821899414
    5. '	set' → logprob: -14.785226821899414
    6. ' ' → logprob: -15.785226821899414
    7. 'list' → logprob: -16.285226821899414
    8. '=set' → logprob: -16.285226821899414
    9. 'se' → logprob: -16.410226821899414
    10. 's' → logprob: -16.410226821899414

Token 452: '(set' (ID: 25904)
  Prédit: '(set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(set' → logprob: -1.2664456789934775e-06
    2. '(dict' → logprob: -14.250000953674316
    3. 'set' → logprob: -15.000000953674316
    4. '(sorted' → logprob: -15.625000953674316
    5. '(' → logprob: -16.875001907348633
    6. '=set' → logprob: -19.625001907348633
    7. '({' → logprob: -20.125001907348633
    8. ' (' → logprob: -22.500001907348633
    9. '(Set' → logprob: -22.875001907348633
    10. ',set' → logprob: -22.875001907348633

Token 453: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -3.1186566047836095e-05
    2. 'a' → logprob: -10.750031471252441
    3. ' (' → logprob: -12.375031471252441
    4. '(h' → logprob: -12.750031471252441
    5. '(' → logprob: -13.250031471252441
    6. '(
' → logprob: -14.750031471252441
    7. 'h' → logprob: -15.750031471252441
    8. ')' → logprob: -16.250030517578125
    9. ')a' → logprob: -16.875030517578125
    10. ')(' → logprob: -17.750030517578125

Token 454: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.032114867120981216
    2. '()))' → logprob: -3.7821149826049805
    3. '(a' → logprob: -4.7821149826049805
    4. '))
' → logprob: -8.53211498260498
    5. ' ))' → logprob: -9.28211498260498
    6. ')' → logprob: -10.15711498260498
    7. '(' → logprob: -10.40711498260498
    8. 'a' → logprob: -10.40711498260498
    9. '()))
' → logprob: -10.90711498260498
    10. '()' → logprob: -10.90711498260498

Token 455: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11720147728919983
    2. '   ' → logprob: -2.367201566696167
    3. 'if' → logprob: -4.742201328277588
    4. 'min' → logprob: -5.492201328277588
    5. '#' → logprob: -6.617201328277588
    6. '    
' → logprob: -7.242201328277588
    7. 'minimum' → logprob: -7.367201328277588
    8. ' a' → logprob: -8.117201805114746
    9. ')' → logprob: -8.242201805114746
    10. 'max' → logprob: -8.367201805114746

Token 456: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.014344371855258942
    2. '   ' → logprob: -4.764344215393066
    3. 'if' → logprob: -5.389344215393066
    4. '#' (adapté à ' #') → logprob: -7.014344215393066
    5. 'max' → logprob: -9.264344215393066
    6. 'min' → logprob: -10.264344215393066
    7. ' a' → logprob: -10.639344215393066
    8. 'm' → logprob: -11.139344215393066
    9. '    
' → logprob: -11.139344215393066
    10. '#a' → logprob: -11.889344215393066

Token 457: ' Tri' (ID: 25062)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.007845336571335793
    2. 'if' → logprob: -5.257845401763916
    3. '#' → logprob: -6.132845401763916
    4. '   ' → logprob: -9.007844924926758
    5. 'max' → logprob: -9.257844924926758
    6. 'min' → logprob: -9.507844924926758
    7. ' a' → logprob: -10.382844924926758
    8. 'for' → logprob: -10.757844924926758
    9. 'res' → logprob: -11.132844924926758
    10. 'm' → logprob: -11.382844924926758

Token 458: ' de' (ID: 334)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.04207621514797211
    2. 'a' → logprob: -3.2920761108398438
    3. '()' → logprob: -5.917076110839844
    4. '(' → logprob: -6.667076110839844
    5. '   ' → logprob: -10.417076110839844
    6. '(
' → logprob: -10.917076110839844
    7. ' a' → logprob: -12.292076110839844
    8. 'def' → logprob: -12.792076110839844
    9. '()
' → logprob: -13.167076110839844
    10. '#a' → logprob: -14.417076110839844

Token 459: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -4.127333340875339e-06
    2. '(a' → logprob: -13.000003814697266
    3. ' a' → logprob: -13.250003814697266
    4. '	a' → logprob: -20.000003814697266
    5. ')a' → logprob: -20.375003814697266
    6. '```' → logprob: -20.625003814697266
    7. '(' → logprob: -21.375003814697266
    8. '[a' → logprob: -21.375003814697266
    9. '#a' → logprob: -21.500003814697266
    10. 'the' → logprob: -21.875003814697266

Token 460: ' liste' (ID: 31719)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0004306692280806601
    2. ' a' → logprob: -7.750430583953857
    3. '	a' → logprob: -18.875431060791016
    4. '```' → logprob: -19.375431060791016
    5. 'liste' → logprob: -19.375431060791016
    6. ' ' → logprob: -19.625431060791016
    7. 'list' → logprob: -19.875431060791016
    8. '`' → logprob: -19.875431060791016
    9. 'а' → logprob: -20.000431060791016
    10. '
' → logprob: -20.250431060791016

Token 461: ' '' (ID: 461)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.023258056491613388
    2. 'a' → logprob: -3.7732579708099365
    3. '(' → logprob: -11.773258209228516
    4. ' a' → logprob: -12.773258209228516
    5. '()' → logprob: -13.398258209228516
    6. '(
' → logprob: -15.148258209228516
    7. 'def' → logprob: -15.523258209228516
    8. ' (' → logprob: -16.398258209228516
    9. '#a' → logprob: -17.398258209228516
    10. '	a' → logprob: -18.023258209228516

Token 462: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00011129142512800172
    2. '(a' → logprob: -9.12511157989502
    3. ' a' → logprob: -13.25011157989502
    4. ''a' → logprob: -16.000110626220703
    5. '```' → logprob: -16.125110626220703
    6. ')' → logprob: -16.375110626220703
    7. '	a' → logprob: -17.000110626220703
    8. 'а' → logprob: -17.375110626220703
    9. ')a' → logprob: -17.375110626220703
    10. '')' → logprob: -18.000110626220703

Token 463: ''' (ID: 6)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.695624828338623
    2. '()' → logprob: -1.570624828338623
    3. ')' → logprob: -1.820624828338623
    4. '.sort' → logprob: -2.320624828338623
    5. '(a' → logprob: -4.445624828338623
    6. '()
' → logprob: -4.445624828338623
    7. '())' → logprob: -5.195624828338623
    8. ')a' → logprob: -6.445624828338623
    9. ' a' → logprob: -6.570624828338623
    10. '   ' → logprob: -7.820624828338623

Token 464: ' afin' (ID: 22217)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.029553299769759178
    2. '()' → logprob: -4.029553413391113
    3. '.sort' → logprob: -4.654553413391113
    4. '(a' → logprob: -7.154553413391113
    5. '()
' → logprob: -7.654553413391113
    6. '   ' → logprob: -8.279553413391113
    7. ' a' → logprob: -9.029553413391113
    8. '().' → logprob: -9.529553413391113
    9. ')' → logprob: -10.404553413391113
    10. '.a' → logprob: -10.529553413391113

Token 465: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.0956813097000122
    2. 'a' → logprob: -1.3456813097000122
    3. ' que' → logprob: -1.7206813097000122
    4. '   ' → logprob: -2.5956811904907227
    5. ' a' → logprob: -2.9706811904907227
    6. 'de' → logprob: -3.0956811904907227
    7. ' d' → logprob: -3.7206811904907227
    8. 'que' → logprob: -4.595681190490723
    9. '(a' → logprob: -4.720681190490723
    10. 'd' → logprob: -4.970681190490723

Token 466: ' traiter' (ID: 105852)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.206792950630188
    2. ' a' → logprob: -1.706792950630188
    3. ' garantir' → logprob: -6.956792831420898
    4. ' assurer' → logprob: -7.831792831420898
    5. 'mettre' → logprob: -7.831792831420898
    6. ' ce' → logprob: -7.956792831420898
    7. ' continuer' → logprob: -8.081792831420898
    8. 'maint' → logprob: -8.081792831420898
    9. ' conserver' → logprob: -8.081792831420898
    10. ' pouvoir' → logprob: -8.081792831420898

Token 467: ' les' (ID: 1341)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.030911728739738464
    2. ' a' → logprob: -3.530911684036255
    3. '(a' → logprob: -7.155911922454834
    4. '()' → logprob: -8.280911445617676
    5. ' les' → logprob: -9.530911445617676
    6. ' la' → logprob: -10.905911445617676
    7. 'la' → logprob: -11.405911445617676
    8. '(' → logprob: -12.030911445617676
    9. 'les' → logprob: -12.655911445617676
    10. ' the' → logprob: -12.655911445617676

Token 468: ' valeurs' (ID: 73668)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.48026713728904724
    2. 'a' → logprob: -1.3552671670913696
    3. ' valeurs' → logprob: -2.60526704788208
    4. ' plus' → logprob: -3.35526704788208
    5. ' elements' → logprob: -5.85526704788208
    6. 'val' → logprob: -6.10526704788208
    7. ' éléments' → logprob: -6.10526704788208
    8. ' unique' → logprob: -6.23026704788208
    9. ' minimum' → logprob: -6.48026704788208
    10. ' minimal' → logprob: -6.85526704788208

Token 469: ' dans' (ID: 2671)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.039125967770814896
    2. ' a' → logprob: -3.664125919342041
    3. 'dans' → logprob: -6.039125919342041
    4. 'en' → logprob: -6.289125919342041
    5. 'uni' → logprob: -6.289125919342041
    6. ' uniques' → logprob: -6.414125919342041
    7. 'cro' → logprob: -6.539125919342041
    8. 'unique' → logprob: -7.414125919342041
    9. ' unique' → logprob: -7.414125919342041
    10. ' en' → logprob: -7.664125919342041

Token 470: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.39196979999542236
    2. ' l' → logprob: -1.7669697999954224
    3. 'a' → logprob: -1.8919697999954224
    4. 'ordre' → logprob: -6.391969680786133
    5. ' a' → logprob: -7.266969680786133
    6. ''ordre' → logprob: -9.516969680786133
    7. 'la' → logprob: -10.141969680786133
    8. 'order' → logprob: -10.641969680786133
    9. 'ascending' → logprob: -10.641969680786133
    10. ' ordre' → logprob: -10.766969680786133

Token 471: ''ordre' (ID: 124753)
  Prédit: ''ordre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ordre' → logprob: -0.004580365028232336
    2. 'a' → logprob: -5.879580497741699
    3. '’ordre' → logprob: -7.004580497741699
    4. 'ordre' → logprob: -7.254580497741699
    5. ''a' → logprob: -9.8795804977417
    6. ' a' → logprob: -9.8795804977417
    7. ''' → logprob: -10.3795804977417
    8. ' ordre' → logprob: -12.0045804977417
    9. ''espace' → logprob: -12.1295804977417
    10. 'e' → logprob: -12.7545804977417

Token 472: ' cro' (ID: 11270)
  Prédit: 'cro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cro' → logprob: -0.10195830464363098
    2. 'a' → logprob: -2.3519582748413086
    3. ' cro' → logprob: -6.476958274841309
    4. 'asc' → logprob: -9.226958274841309
    5. ' a' → logprob: -9.976958274841309
    6. 'Cro' → logprob: -10.476958274841309
    7. '(a' → logprob: -11.101958274841309
    8. '   ' → logprob: -11.476958274841309
    9. ' Cro' → logprob: -11.976958274841309
    10. 'c' → logprob: -12.351958274841309

Token 473: 'issant' (ID: 31359)
  Prédit: 'issant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issant' → logprob: -0.0010827097576111555
    2. 'issent' → logprob: -7.876082897186279
    3. 'issante' → logprob: -7.876082897186279
    4. 'iss' → logprob: -9.501082420349121
    5. 'ss' → logprob: -9.501082420349121
    6. 'issance' → logprob: -10.376082420349121
    7. 'ass' → logprob: -10.626082420349121
    8. 'issement' → logprob: -10.751082420349121
    9. 'a' → logprob: -10.876082420349121
    10. 'is' → logprob: -11.501082420349121

Token 474: '.
' (ID: 558)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11327127367258072
    2. '()' → logprob: -2.3632712364196777
    3. '()
' → logprob: -4.738271236419678
    4. '(a' → logprob: -5.863271236419678
    5. '.' → logprob: -7.113271236419678
    6. '().' → logprob: -8.363271713256836
    7. '   ' → logprob: -8.863271713256836
    8. ')' → logprob: -9.863271713256836
    9. '();' → logprob: -10.613271713256836
    10. '(' → logprob: -10.613271713256836

Token 475: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.128163257315464e-07
    2. ' a' → logprob: -15.625
    3. '   ' → logprob: -16.75
    4. '```' → logprob: -17.625
    5. '
' → logprob: -19.875
    6. '	a' → logprob: -20.125
    7. '#a' → logprob: -20.125
    8. '    
' → logprob: -20.875
    9. '_a' → logprob: -21.125
    10. 'а' → logprob: -21.125

Token 476: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -1.9361264946837764e-07
    2. ' a' → logprob: -16.0
    3. '   ' → logprob: -20.625
    4. '```' → logprob: -21.625
    5. '	a' → logprob: -23.375
    6. 'а' → logprob: -24.0
    7. '
' → logprob: -24.125
    8. '`' → logprob: -24.625
    9. '_a' → logprob: -25.125
    10. '    
' → logprob: -25.5

Token 477: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.0007145775598473847
    2. '.' → logprob: -7.2507147789001465
    3. ' .' → logprob: -12.875714302062988
    4. '.a' → logprob: -14.125714302062988
    5. ').' → logprob: -14.625714302062988
    6. 'sort' → logprob: -15.125714302062988
    7. '=' → logprob: -15.750714302062988
    8. '().' → logprob: -16.500715255737305
    9. '.s' → logprob: -16.500715255737305
    10. '.sorted' → logprob: -16.875715255737305

Token 478: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.010948427952826023
    2. '()
' → logprob: -4.885948657989502
    3. '()

' → logprob: -6.510948657989502
    4. 'minimum' → logprob: -7.260948657989502
    5. '(min' → logprob: -8.010948181152344
    6. '   ' → logprob: -8.135948181152344
    7. 'min' → logprob: -8.260948181152344
    8. '#' → logprob: -9.635948181152344
    9. '_min' → logprob: -9.635948181152344
    10. '(' → logprob: -10.760948181152344

Token 479: '   ' (ID: 271)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.25083044171333313
    2. 'pivot' → logprob: -1.7508304119110107
    3. 'm' → logprob: -3.6258304119110107
    4. '#' → logprob: -5.12583065032959
    5. 'p' → logprob: -5.75083065032959
    6. 'minimum' → logprob: -5.87583065032959
    7. 'v' → logprob: -6.62583065032959
    8. 'x' → logprob: -6.62583065032959
    9. 'val' → logprob: -6.62583065032959
    10. '   ' → logprob: -6.75083065032959

Token 480: ' #' (ID: 1069)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.6367364525794983
    2. 'm' → logprob: -1.0117363929748535
    3. 'if' → logprob: -3.2617363929748535
    4. 'pivot' → logprob: -4.3867363929748535
    5. 'x' → logprob: -4.5117363929748535
    6. 'res' → logprob: -4.8867363929748535
    7. 'mn' → logprob: -5.0117363929748535
    8. '#' (adapté à ' #') → logprob: -5.1367363929748535
    9. 'p' → logprob: -5.5117363929748535
    10. 'root' → logprob: -6.1367363929748535

Token 481: ' Construction' (ID: 31452)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.43565303087234497
    2. 'm' → logprob: -1.4356529712677002
    3. 'mn' → logprob: -3.4356529712677
    4. 'if' → logprob: -3.8106529712677
    5. 'pivot' → logprob: -4.560653209686279
    6. 'mx' → logprob: -5.060653209686279
    7. 'root' → logprob: -5.435653209686279
    8. 'for' → logprob: -5.435653209686279
    9. 'base' → logprob: -5.685653209686279
    10. 'x' → logprob: -5.810653209686279

Token 482: ' d' (ID: 272)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9030997157096863
    2. 'd' → logprob: -1.028099775314331
    3. ' d' → logprob: -2.653099775314331
    4. ' of' → logprob: -3.028099775314331
    5. 'de' → logprob: -3.903099775314331
    6. 'res' → logprob: -4.028099536895752
    7. ' de' → logprob: -4.278099536895752
    8. ' =' → logprob: -4.528099536895752
    9. 'max' → logprob: -4.528099536895752
    10. ' dp' → logprob: -5.028099536895752

Token 483: ''un' (ID: 9788)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8244611024856567
    2. ''un' → logprob: -1.4494611024856567
    3. ''une' → logprob: -1.8244611024856567
    4. 'a' → logprob: -2.324460983276367
    5. 'u' → logprob: -2.949460983276367
    6. ''' → logprob: -5.074460983276367
    7. ''u' → logprob: -6.324460983276367
    8. 'une' → logprob: -6.574460983276367
    9. 'es' → logprob: -7.449460983276367
    10. ''a' → logprob: -7.574460983276367

Token 484: ' diction' (ID: 155259)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4110197126865387
    2. 'd' → logprob: -1.9110196828842163
    3. 'stack' → logprob: -3.286019802093506
    4. 'res' → logprob: -3.536019802093506
    5. 'from' → logprob: -3.661019802093506
    6. 'dic' → logprob: -4.411019802093506
    7. 'min' → logprob: -4.661019802093506
    8. 'm' → logprob: -5.036019802093506
    9. 'interval' → logprob: -5.036019802093506
    10. 'dict' → logprob: -5.161019802093506

Token 485: 'naire' (ID: 30464)
  Prédit: 'naire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'naire' → logprob: -0.02226453833281994
    2. 'aire' → logprob: -4.14726448059082
    3. 'ary' → logprob: -5.39726448059082
    4. 'a' → logprob: -6.52226448059082
    5. '{' → logprob: -9.52226448059082
    6. 'n' → logprob: -10.52226448059082
    7. '{}' → logprob: -10.77226448059082
    8. 'naires' → logprob: -11.14726448059082
    9. 'ar' → logprob: -11.27226448059082
    10. 'na' → logprob: -11.27226448059082

Token 486: ' de' (ID: 334)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7180752158164978
    2. ' dp' → logprob: -1.8430752754211426
    3. 'd' → logprob: -2.0930752754211426
    4. ' d' → logprob: -2.5930752754211426
    5. 'idx' → logprob: -3.7180752754211426
    6. 'count' → logprob: -4.093075275421143
    7. 'pos' → logprob: -4.218075275421143
    8. 'min' → logprob: -4.593075275421143
    9. ' pos' → logprob: -4.843075275421143
    10. 'cnt' → logprob: -4.843075275421143

Token 487: ' compression' (ID: 41811)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.3516920804977417
    2. 'indices' → logprob: -1.4766920804977417
    3. 'positions' → logprob: -1.4766920804977417
    4. 'dp' → logprob: -2.3516921997070312
    5. 'index' → logprob: -3.4766921997070312
    6. 'idx' → logprob: -3.7266921997070312
    7. ' indices' → logprob: -3.9766921997070312
    8. 'val' → logprob: -4.101692199707031
    9. 'min' → logprob: -4.226692199707031
    10. 'next' → logprob: -4.351692199707031

Token 488: ' '' (ID: 461)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.6431730389595032
    2. 'compress' → logprob: -1.7681729793548584
    3. 'a' → logprob: -2.3931729793548584
    4. '   ' → logprob: -3.5181729793548584
    5. 'coord' → logprob: -3.5181729793548584
    6. 'coordinate' → logprob: -3.8931729793548584
    7. 'compressed' → logprob: -4.0181732177734375
    8. 'd' → logprob: -4.2681732177734375
    9. 'com' → logprob: -4.3931732177734375
    10. ' comp' → logprob: -4.3931732177734375

Token 489: 'comp' (ID: 3697)
  Prédit: 'comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.19130225479602814
    2. 'compress' → logprob: -2.0663022994995117
    3. 'pos' → logprob: -3.9413022994995117
    4. 'idx' → logprob: -4.816302299499512
    5. 'coord' → logprob: -4.941302299499512
    6. 'index' → logprob: -5.441302299499512
    7. 'cmp' → logprob: -6.441302299499512
    8. 'd' → logprob: -6.441302299499512
    9. 'mp' → logprob: -7.191302299499512
    10. 'compression' → logprob: -7.191302299499512

Token 490: '':
' (ID: 7669)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4178510308265686
    2. 'r' → logprob: -2.292850971221924
    3. '=' → logprob: -2.667850971221924
    4. 'ress' → logprob: -3.042850971221924
    5. '']' → logprob: -3.792850971221924
    6. ']' → logprob: -4.042850971221924
    7. 'ression' → logprob: -4.167850971221924
    8. '```' → logprob: -4.417850971221924
    9. '={}' → logprob: -4.792850971221924
    10. '}' → logprob: -4.792850971221924

Token 491: '   ' (ID: 271)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.010503687895834446
    2. '{}' → logprob: -5.260503768920898
    3. ' comp' → logprob: -5.885503768920898
    4. '{' → logprob: -6.010503768920898
    5. '	comp' → logprob: -11.260503768920898
    6. '{
' → logprob: -12.510503768920898
    7. 'com' → logprob: -12.885503768920898
    8. ' {' → logprob: -13.635503768920898
    9. ' {}' → logprob: -13.885503768920898
    10. 'dict' → logprob: -14.385503768920898

Token 492: ' #' (ID: 1069)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.0031784253660589457
    2. ' comp' → logprob: -5.753178596496582
    3. '{' → logprob: -14.503178596496582
    4. '	comp' → logprob: -15.253178596496582
    5. '{
' → logprob: -17.128177642822266
    6. 'com' → logprob: -17.753177642822266
    7. '.comp' → logprob: -19.003177642822266
    8. '(comp' → logprob: -19.753177642822266
    9. '_comp' → logprob: -20.128177642822266
    10. '{}' → logprob: -20.253177642822266

Token 493: ' Chaque' (ID: 94758)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.000215457082958892
    2. ' comp' → logprob: -8.500215530395508
    3. '{' → logprob: -11.500215530395508
    4. '{
' → logprob: -13.750215530395508
    5. '	comp' → logprob: -14.750215530395508
    6. 'com' → logprob: -15.125215530395508
    7. '{}' → logprob: -18.625215530395508
    8. 'keys' → logprob: -19.000215530395508
    9. '(comp' → logprob: -19.125215530395508
    10. 'compl' → logprob: -19.125215530395508

Token 494: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.20050448179244995
    2. 'v' → logprob: -2.3255045413970947
    3. 'x' → logprob: -3.2005045413970947
    4. 'a' → logprob: -4.075504302978516
    5. 'value' → logprob: -4.075504302978516
    6. ' val' → logprob: -6.075504302978516
    7. ' v' → logprob: -6.200504302978516
    8. 'key' → logprob: -6.950504302978516
    9. ' x' → logprob: -6.950504302978516
    10. 'élé' → logprob: -7.200504302978516

Token 495: ' unique' (ID: 5746)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7903499007225037
    2. ' =' → logprob: -1.1653499603271484
    3. 'val' → logprob: -2.9153499603271484
    4. ':' → logprob: -3.1653499603271484
    5. 'a' → logprob: -3.5403499603271484
    6. 'v' → logprob: -3.7903499603271484
    7. 'comp' → logprob: -4.540349960327148
    8. 'de' → logprob: -4.665349960327148
    9. ' :' → logprob: -4.665349960327148
    10. '_val' → logprob: -4.790349960327148

Token 496: ' trouv' (ID: 40254)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0603797435760498
    2. ':' → logprob: -1.3103797435760498
    3. ',' → logprob: -1.6853797435760498
    4. 'de' → logprob: -3.31037974357605
    5. 'val' → logprob: -3.43537974357605
    6. ' de' → logprob: -3.93537974357605
    7. ' :' → logprob: -4.060379981994629
    8. ' =' → logprob: -4.060379981994629
    9. ' a' → logprob: -4.685379981994629
    10. 'v' → logprob: -4.935379981994629

Token 497: 'ée' (ID: 2894)
  Prédit: 'ie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.742043673992157
    2. 'a' → logprob: -1.6170437335968018
    3. 'e' → logprob: -1.8670437335968018
    4. ' dans' → logprob: -2.9920437335968018
    5. ' in' → logprob: -3.3670437335968018
    6. 'ue' → logprob: -3.7420437335968018
    7. 'dans' → logprob: -3.8670437335968018
    8. 'u' → logprob: -4.617043495178223
    9. 'ée' → logprob: -5.367043495178223
    10. 'in' → logprob: -5.492043495178223

Token 498: ' dans' (ID: 2671)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.15209925174713135
    2. ':' → logprob: -3.027099132537842
    3. ' dans' → logprob: -3.527099132537842
    4. ',' → logprob: -3.777099132537842
    5. 'a' → logprob: -4.402099132537842
    6. 'in' → logprob: -4.402099132537842
    7. '=' → logprob: -5.277099132537842
    8. ' =' → logprob: -5.902099132537842
    9. 'en' → logprob: -6.402099132537842
    10. ' in' → logprob: -6.402099132537842

Token 499: ' '' (ID: 461)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00016063073417171836
    2. ' a' → logprob: -8.750160217285156
    3. 'enumer' → logprob: -13.625160217285156
    4. 'h' → logprob: -14.625160217285156
    5. 'H' → logprob: -15.000160217285156
    6. '
' → logprob: -17.250160217285156
    7. '   ' → logprob: -17.625160217285156
    8. ' ' → logprob: -17.750160217285156
    9. ' enumerate' → logprob: -17.750160217285156
    10. '{' → logprob: -17.875160217285156

Token 500: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -6.682846287731081e-05
    2. ' a' → logprob: -10.125066757202148
    3. 'h' → logprob: -10.750066757202148
    4. 'H' → logprob: -12.375066757202148
    5. '```' → logprob: -15.750066757202148
    6. '   ' → logprob: -15.875066757202148
    7. 'enumer' → logprob: -16.25006675720215
    8. '[a' → logprob: -16.25006675720215
    9. '
' → logprob: -16.37506675720215
    10. '(a' → logprob: -16.68756675720215

Token 501: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.06360030919313431
    2. ')' → logprob: -3.0636003017425537
    3. ')'' → logprob: -4.688600540161133
    4. '')' → logprob: -6.563600540161133
    5. ']' → logprob: -6.938600540161133
    6. 'a' → logprob: -7.563600540161133
    7. '',' → logprob: -7.688600540161133
    8. ',' → logprob: -8.188600540161133
    9. ' '' → logprob: -8.313600540161133
    10. ''a' → logprob: -8.438600540161133

Token 502: ' se' (ID: 458)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5117061734199524
    2. ' =' → logprob: -1.1367061138153076
    3. ',' → logprob: -3.1367061138153076
    4. ':' → logprob: -3.5117061138153076
    5. 'a' → logprob: -6.886706352233887
    6. ')' → logprob: -6.886706352233887
    7. ' is' → logprob: -7.261706352233887
    8. 'for' → logprob: -7.761706352233887
    9. ' :' → logprob: -7.886706352233887
    10. 'comp' → logprob: -8.011706352233887

Token 503: ' voit' (ID: 35946)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.21136240661144257
    2. ' voit' → logprob: -2.336362361907959
    3. 'voit' → logprob: -3.336362361907959
    4. ' trouve' → logprob: -4.461362361907959
    5. 'voir' → logprob: -4.586362361907959
    6. 'for' → logprob: -5.336362361907959
    7. 'ra' → logprob: -5.336362361907959
    8. 'or' → logprob: -5.461362361907959
    9. 'tr' → logprob: -5.586362361907959
    10. 'assoc' → logprob: -6.711362361907959

Token 504: ' attrib' (ID: 72186)
  Prédit: ' attrib'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' attrib' → logprob: -0.9247211217880249
    2. 'attrib' → logprob: -1.174721121788025
    3. 'assign' → logprob: -1.924721121788025
    4. 'assoc' → logprob: -2.2997212409973145
    5. ' assign' → logprob: -4.2997212409973145
    6. 'assigned' → logprob: -4.5497212409973145
    7. ' assoc' → logprob: -4.9247212409973145
    8. ' assigned' → logprob: -5.5497212409973145
    9. 'ass' → logprob: -5.9247212409973145
    10. ' associ' → logprob: -6.1747212409973145

Token 505: 'uer' (ID: 4615)
  Prédit: 'uer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uer' → logprob: -0.24220193922519684
    2. 'u' → logprob: -2.617202043533325
    3. 'ue' → logprob: -2.742202043533325
    4. 'uée' → logprob: -3.242202043533325
    5. 'er' → logprob: -3.367202043533325
    6. 'ué' → logprob: -5.992201805114746
    7. 'ée' → logprob: -7.367201805114746
    8. 'uire' → logprob: -8.242201805114746
    9. 'urée' → logprob: -8.867201805114746
    10. 'urer' → logprob: -9.117201805114746

Token 506: ' une' (ID: 2463)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0829378217458725
    2. 'comp' → logprob: -3.082937717437744
    3. ' a' → logprob: -4.207937717437744
    4. ' comp' → logprob: -5.207937717437744
    5. '{' → logprob: -5.832937717437744
    6. 'i' → logprob: -5.957937717437744
    7. 'un' → logprob: -6.207937717437744
    8. 'une' → logprob: -6.707937717437744
    9. '{}' → logprob: -6.707937717437744
    10. ' un' → logprob: -7.332937717437744

Token 507: ' position' (ID: 4010)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.7483776807785034
    2. 'indice' → logprob: -1.2483776807785034
    3. 'rank' → logprob: -2.623377799987793
    4. 'val' → logprob: -2.748377799987793
    5. 'clé' → logprob: -3.873377799987793
    6. ' index' → logprob: -4.248377799987793
    7. ' rank' → logprob: -4.248377799987793
    8. 'id' → logprob: -4.873377799987793
    9. 'comp' → logprob: -4.998377799987793
    10. 'code' → logprob: -4.998377799987793

Token 508: ' unique' (ID: 5746)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.574767529964447
    2. '{' → logprob: -2.699767589569092
    3. 'dans' → logprob: -2.824767589569092
    4. ':' → logprob: -3.074767589569092
    5. ' :' → logprob: -3.074767589569092
    6. ' =' → logprob: -3.324767589569092
    7. '_' → logprob: -3.574767589569092
    8. 'de' → logprob: -4.199767589569092
    9. 'a' → logprob: -4.324767589569092
    10. ' ,' → logprob: -4.449767589569092

Token 509: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0659927949309349
    2. ':' → logprob: -4.690992832183838
    3. '   ' → logprob: -4.690992832183838
    4. 'dans' → logprob: -4.940992832183838
    5. ' ,' → logprob: -5.315992832183838
    6. '_' → logprob: -5.440992832183838
    7. 'a' → logprob: -5.440992832183838
    8. ' ' → logprob: -5.690992832183838
    9. '=' → logprob: -6.065992832183838
    10. ' dans' → logprob: -6.315992832183838

Token 510: ' cro' (ID: 11270)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.9378527998924255
    2. 'val' → logprob: -1.8128528594970703
    3. 'un' → logprob: -1.8128528594970703
    4. 'index' → logprob: -2.6878528594970703
    5. ' une' → logprob: -2.9378528594970703
    6. 'une' → logprob: -3.0628528594970703
    7. ' index' → logprob: -3.8128528594970703
    8. 'value' → logprob: -3.9378528594970703
    9. ' a' → logprob: -4.06285285949707
    10. ' valeur' → logprob: -4.81285285949707

Token 511: 'issante' (ID: 80061)
  Prédit: 'issante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issante' → logprob: -0.029545428231358528
    2. 'c' → logprob: -4.654545307159424
    3. 'isée' → logprob: -4.654545307159424
    4. 'qu' → logprob: -5.654545307159424
    5. 'd' → logprob: -6.404545307159424
    6. 'is' → logprob: -6.529545307159424
    7. 'ment' → logprob: -7.404545307159424
    8. 'mente' → logprob: -7.654545307159424
    9. 't' → logprob: -8.279545783996582
    10. 'v' → logprob: -8.404545783996582

Token 512: ' en' (ID: 469)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7278338670730591
    2. 'comp' → logprob: -1.227833867073059
    3. ' comp' → logprob: -1.727833867073059
    4. '{' → logprob: -3.9778337478637695
    5. ' ,' → logprob: -5.8528337478637695
    6. ' {' → logprob: -5.9778337478637695
    7. ' =' → logprob: -6.1028337478637695
    8. '   ' → logprob: -6.1028337478637695
    9. '_comp' → logprob: -6.3528337478637695
    10. 'de' → logprob: -6.6028337478637695

Token 513: ' part' (ID: 997)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.7977381348609924
    2. 'a' → logprob: -1.1727380752563477
    3. 'enumer' → logprob: -2.0477380752563477
    4. ' a' → logprob: -3.0477380752563477
    5. 'range' → logprob: -4.547738075256348
    6. ' comp' → logprob: -4.547738075256348
    7. 'com' → logprob: -4.672738075256348
    8. '{' → logprob: -5.047738075256348
    9. 'indice' → logprob: -5.047738075256348
    10. 'val' → logprob: -5.797738075256348

Token 514: 'ant' (ID: 493)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.004508800804615021
    2. ' enumerate' → logprob: -6.254508972167969
    3. 'a' → logprob: -7.254508972167969
    4. '{' → logprob: -7.504508972167969
    5. 'ition' → logprob: -8.254508972167969
    6. 'enum' → logprob: -8.754508972167969
    7. 'agée' → logprob: -9.129508972167969
    8. ' enumer' → logprob: -9.379508972167969
    9. 'enaire' → logprob: -9.379508972167969
    10. 'e' → logprob: -9.379508972167969

Token 515: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.1006462424993515
    2. ' de' → logprob: -2.4756462574005127
    3. 'from' → logprob: -4.475646018981934
    4. '0' → logprob: -9.100646018981934
    5. ' from' → logprob: -9.475646018981934
    6. '```' → logprob: -10.975646018981934
    7. '_de' → logprob: -11.100646018981934
    8. 'du' → logprob: -11.850646018981934
    9. 'd' → logprob: -12.225646018981934
    10. '#' → logprob: -12.350646018981934

Token 516: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010705619351938367
    2. ' ' → logprob: -6.876070499420166
    3. 'zero' → logprob: -11.126070976257324
    4. ' zero' → logprob: -11.376070976257324
    5. ' zéro' → logprob: -12.126070976257324
    6. 'z' → logprob: -12.876070976257324
    7. ' z' → logprob: -13.376070976257324
    8. '1' → logprob: -13.751070976257324
    9. ' ' → logprob: -15.501070976257324
    10. '{' → logprob: -16.126070022583008

Token 517: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.227250610711053e-05
    2. ' ' → logprob: -10.250041961669922
    3. '1' → logprob: -12.625041961669922
    4. 'zero' → logprob: -12.875041961669922
    5. ' zéro' → logprob: -14.625041961669922
    6. ' zero' → logprob: -15.250041961669922
    7. 'z' → logprob: -15.500041961669922
    8. '
' → logprob: -16.750041961669922
    9. 'index' → logprob: -17.625041961669922
    10. '   ' → logprob: -17.750041961669922

Token 518: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09687492251396179
    2. 'comp' → logprob: -2.596874952316284
    3. '   ' → logprob: -4.471874713897705
    4. ',
' → logprob: -5.846874713897705
    5. ' comp' → logprob: -6.596874713897705
    6. '.' → logprob: -7.346874713897705
    7. '{' → logprob: -7.346874713897705
    8. '(comp' → logprob: -8.346875190734863
    9. '	comp' → logprob: -8.721875190734863
    10. '_comp' → logprob: -9.346875190734863

Token 519: '   ' (ID: 271)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.0006526283104903996
    2. ' comp' → logprob: -7.62565279006958
    3. '{' → logprob: -9.875652313232422
    4. '   ' → logprob: -10.000652313232422
    5. '{
' → logprob: -10.125652313232422
    6. '	comp' → logprob: -10.875652313232422
    7. '```' → logprob: -12.750652313232422
    8. 'com' → logprob: -13.500652313232422
    9. '(comp' → logprob: -13.625652313232422
    10. '
' → logprob: -13.875652313232422

Token 520: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' (adapté à ' comp') → logprob: -0.00012821101699955761
    2. ' comp' → logprob: -9.000127792358398
    3. '{
' → logprob: -13.250127792358398
    4. '{' → logprob: -13.375127792358398
    5. '	comp' → logprob: -14.250127792358398
    6. 'com' → logprob: -15.500127792358398
    7. '   ' → logprob: -15.625127792358398
    8. '
' → logprob: -16.1251277923584
    9. '_comp' → logprob: -16.5001277923584
    10. '.comp' → logprob: -16.5001277923584

Token 521: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693944573402405
    2. ' =' → logprob: -2.126939535140991
    3. '={}' → logprob: -11.62693977355957
    4. '={' → logprob: -13.37693977355957
    5. ' ={' → logprob: -14.37693977355957
    6. '{' → logprob: -16.00193977355957
    7. '={"' → logprob: -16.37693977355957
    8. '＝' → logprob: -16.37693977355957
    9. '={}
' → logprob: -16.87693977355957
    10. '={'' → logprob: -17.00193977355957

Token 522: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.017577331513166428
    2. '{i' → logprob: -4.517577171325684
    3. ' {' → logprob: -5.767577171325684
    4. '{}' → logprob: -6.017577171325684
    5. '{x' → logprob: -7.392577171325684
    6. '{k' → logprob: -9.017577171325684
    7. '{id' → logprob: -9.267577171325684
    8. '{}
' → logprob: -9.517577171325684
    9. '{s' → logprob: -10.892577171325684
    10. '{name' → logprob: -11.267577171325684

Token 523: 'i' (ID: 72)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2317150980234146
    2. 'v' → logprob: -1.9817150831222534
    3. 'val' → logprob: -2.856715202331543
    4. 'x' → logprob: -5.106715202331543
    5. 'value' → logprob: -5.231715202331543
    6. 'key' → logprob: -10.231715202331543
    7. 'k' → logprob: -10.356715202331543
    8. ' a' → logprob: -10.606715202331543
    9. 'num' → logprob: -10.606715202331543
    10. ' v' → logprob: -11.981715202331543

Token 524: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21378181874752045
    2. ':a' → logprob: -1.7137818336486816
    3. 'a' → logprob: -4.588781833648682
    4. ' :' → logprob: -6.338781833648682
    5. ':i' → logprob: -8.713781356811523
    6. ':v' → logprob: -9.463781356811523
    7. ':value' → logprob: -10.088781356811523
    8. 'v' → logprob: -10.588781356811523
    9. ':k' → logprob: -10.713781356811523
    10. ':x' → logprob: -10.963781356811523

Token 525: ' e' (ID: 319)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.40262725949287415
    2. 'a' → logprob: -1.7776272296905518
    3. 'index' → logprob: -2.5276272296905518
    4. ' idx' → logprob: -2.6526272296905518
    5. 'j' → logprob: -4.777627468109131
    6. ' index' → logprob: -6.527627468109131
    7. 'i' → logprob: -7.152627468109131
    8. ' a' → logprob: -7.902627468109131
    9. 'v' → logprob: -7.902627468109131
    10. 'k' → logprob: -8.152626991271973

Token 526: ' +' (ID: 659)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.6247224807739258
    2. 'n' → logprob: -1.6247224807739258
    3. 'num' → logprob: -1.6247224807739258
    4. ':a' → logprob: -1.9997224807739258
    5. 'x' → logprob: -2.124722480773926
    6. 'nd' → logprob: -2.749722480773926
    7. ':i' → logprob: -3.874722480773926
    8. 'a' → logprob: -4.249722480773926
    9. '+' → logprob: -4.374722480773926
    10. ' for' → logprob: -4.999722480773926

Token 527: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0021882106084376574
    2. ' ' → logprob: -6.127188205718994
    3. '   ' → logprob: -13.627188682556152
    4. '0' → logprob: -14.502188682556152
    5. '  ' → logprob: -15.002188682556152
    6. '{' → logprob: -15.252188682556152
    7. '=' → logprob: -15.564688682556152
    8. '<|end|>' → logprob: -16.127187728881836
    9. '[' → logprob: -16.877187728881836
    10. '```' → logprob: -17.002187728881836

Token 528: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.919942486798391e-05
    2. ' ' → logprob: -9.750059127807617
    3. '   ' → logprob: -15.125059127807617
    4. '<|end|>' → logprob: -16.187559127807617
    5. '{' → logprob: -16.500059127807617
    6. '```' → logprob: -16.875059127807617
    7. '  ' → logprob: -17.062559127807617
    8. ',' → logprob: -17.312559127807617
    9. '0' → logprob: -17.437559127807617
    10. '=' → logprob: -17.812559127807617

Token 529: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4740777015686035
    2. 'for' → logprob: -0.9740777015686035
    3. '	for' → logprob: -14.849077224731445
    4. ' ' → logprob: -15.599077224731445
    5. ' ' → logprob: -16.849077224731445
    6. '   ' → logprob: -17.224077224731445
    7. ' in' → logprob: -17.474077224731445
    8. ',' → logprob: -17.474077224731445
    9. '}' → logprob: -17.724077224731445
    10. 'or' → logprob: -18.099077224731445

Token 530: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0011752246646210551
    2. ' e' → logprob: -6.751175403594971
    3. 'enumer' → logprob: -13.126174926757812
    4. 'i' → logprob: -13.501174926757812
    5. 'range' → logprob: -14.376174926757812
    6. '	e' → logprob: -15.001174926757812
    7. '(e' → logprob: -15.376174926757812
    8. ',e' → logprob: -15.501174926757812
    9. ',' → logprob: -16.376174926757812
    10. 'a' → logprob: -16.626174926757812

Token 531: ',' (ID: 11)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2211221307516098
    2. ' i' → logprob: -2.7211220264434814
    3. 'in' → logprob: -2.9711220264434814
    4. ',' → logprob: -2.9711220264434814
    5. ' in' → logprob: -3.7211220264434814
    6. ',i' → logprob: -5.2211222648620605
    7. 'a' → logprob: -8.721121788024902
    8. ' ,' → logprob: -8.721121788024902
    9. ' ' → logprob: -9.346121788024902
    10. '	i' → logprob: -11.346121788024902

Token 532: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0005530327325686812
    2. ' i' → logprob: -7.500553131103516
    3. '	i' → logprob: -17.375553131103516
    4. ' ' → logprob: -18.250553131103516
    5. 'e' → logprob: -18.375553131103516
    6. '(i' → logprob: -18.875553131103516
    7. '```' → logprob: -19.500553131103516
    8. '`' → logprob: -19.750553131103516
    9. 'a' → logprob: -19.750553131103516
    10. '  ' → logprob: -20.625553131103516

Token 533: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3132704198360443
    2. ' in' → logprob: -1.3132704496383667
    3. 'a' → logprob: -13.313270568847656
    4. 'n' → logprob: -13.563270568847656
    5. ' ' → logprob: -13.938270568847656
    6. 'inthe' → logprob: -14.688270568847656
    7. '	in' → logprob: -14.813270568847656
    8. ')' → logprob: -14.813270568847656
    9. 'enumer' → logprob: -15.188270568847656
    10. 'en' → logprob: -15.188270568847656

Token 534: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0110534792765975
    2. ' enumerate' → logprob: -4.511053562164307
    3. 'a' → logprob: -12.261053085327148
    4. 'zip' → logprob: -14.136053085327148
    5. '```' → logprob: -16.13605308532715
    6. 'enum' → logprob: -16.76105308532715
    7. 'Enumer' → logprob: -17.38605308532715
    8. 'en' → logprob: -17.88605308532715
    9. '.enumer' → logprob: -19.38605308532715
    10. '   ' → logprob: -19.76105308532715

Token 535: '(a' (ID: 6271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0028115289751440287
    2. '(a' → logprob: -6.002811431884766
    3. ' a' → logprob: -8.002811431884766
    4. '	a' → logprob: -14.627811431884766
    5. '   ' → logprob: -15.002811431884766
    6. '(' → logprob: -16.252811431884766
    7. ' ' → logprob: -16.377811431884766
    8. ')a' → logprob: -16.377811431884766
    9. ' (' → logprob: -16.877811431884766
    10. 'sorted' → logprob: -17.002811431884766

Token 536: ')}

' (ID: 184554)
  Prédit: ')}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.00160317518748343
    2. '}' → logprob: -6.751603126525879
    3. ')' → logprob: -7.751603126525879
    4. ');}' → logprob: -13.876603126525879
    5. ' )' → logprob: -14.001603126525879
    6. '})' → logprob: -14.501603126525879
    7. ' }' → logprob: -15.376603126525879
    8. ')}
' → logprob: -16.126604080200195
    9. '")}' → logprob: -17.001604080200195
    10. ']}' → logprob: -17.376604080200195

Token 537: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39902251958847046
    2. '   ' → logprob: -1.2740225791931152
    3. '<|end|>' → logprob: -3.3990225791931152
    4. '}' → logprob: -5.274022579193115
    5. '#' → logprob: -5.649022579193115
    6. ']' → logprob: -6.024022579193115
    7. '    
' → logprob: -6.899022579193115
    8. ' ' → logprob: -7.149022579193115
    9. '<|end|>' → logprob: -7.149022579193115
    10. '[' → logprob: -8.274022102355957

Token 538: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -1.4814332723617554
    2. ')' → logprob: -1.7314332723617554
    3. 'a' → logprob: -2.356433391571045
    4. '   ' → logprob: -2.356433391571045
    5. 'for' → logprob: -2.606433391571045
    6. 'i' → logprob: -2.731433391571045
    7. 'max' → logprob: -2.981433391571045
    8. 'b' → logprob: -3.481433391571045
    9. 'return' → logprob: -3.481433391571045
    10. 'res' → logprob: -4.106433391571045

Token 539: ' Construction' (ID: 31452)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6563910841941833
    2. 'min' → logprob: -2.031391143798828
    3. 'm' → logprob: -2.781391143798828
    4. '#' → logprob: -2.906391143798828
    5. 'a' → logprob: -3.656391143798828
    6. 'max' → logprob: -3.781391143798828
    7. 'pos' → logprob: -3.781391143798828
    8. 'h' → logprob: -4.031391143798828
    9. 'for' → logprob: -4.156391143798828
    10. 'res' → logprob: -4.281391143798828

Token 540: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.04972171038389206
    2. 'd' → logprob: -3.1747217178344727
    3. ' of' → logprob: -5.424721717834473
    4. ' de' → logprob: -7.174721717834473
    5. '   ' → logprob: -7.924721717834473
    6. 'de' → logprob: -7.924721717834473
    7. 'of' → logprob: -8.674721717834473
    8. '#' → logprob: -8.799721717834473
    9. '[' → logprob: -9.299721717834473
    10. 'def' → logprob: -9.299721717834473

Token 541: ''un' (ID: 9788)
  Prédit: ''une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''une' → logprob: -0.3010164797306061
    2. ''un' → logprob: -1.5510164499282837
    3. 'a' → logprob: -3.9260165691375732
    4. 'e' → logprob: -4.801016330718994
    5. 'une' → logprob: -5.426016330718994
    6. 'u' → logprob: -5.676016330718994
    7. ' la' → logprob: -5.676016330718994
    8. ' une' → logprob: -6.176016330718994
    9. ' un' → logprob: -7.051016330718994
    10. ' a' → logprob: -7.051016330718994

Token 542: ' diction' (ID: 155259)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6491133570671082
    2. 'default' → logprob: -1.024113416671753
    3. 'dict' → logprob: -2.774113416671753
    4. 'dic' → logprob: -4.399113178253174
    5. 'comp' → logprob: -4.774113178253174
    6. 'dictionary' → logprob: -5.024113178253174
    7. 'counter' → logprob: -5.149113178253174
    8. 'dp' → logprob: -5.899113178253174
    9. 'table' → logprob: -5.899113178253174
    10. 'segment' → logprob: -6.399113178253174

Token 543: 'naire' (ID: 30464)
  Prédit: 'naire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'naire' → logprob: -2.618001053633634e-05
    2. 'na' → logprob: -11.750025749206543
    3. 'aire' → logprob: -11.875025749206543
    4. 'naires' → logprob: -12.000025749206543
    5. 'n' → logprob: -12.375025749206543
    6. 'ary' → logprob: -14.375025749206543
    7. '{' → logprob: -16.12502670288086
    8. '{}' → logprob: -17.75002670288086
    9. '{"' → logprob: -18.00002670288086
    10. 'a' → logprob: -18.00002670288086

Token 544: ' '' (ID: 461)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.6475664377212524
    2. 'inv' → logprob: -1.1475664377212524
    3. 'inverse' → logprob: -2.272566318511963
    4. 'd' → logprob: -4.522566318511963
    5. 'de' → logprob: -4.522566318511963
    6. ' inv' → logprob: -5.397566318511963
    7. 'reverse' → logprob: -5.397566318511963
    8. 'freq' → logprob: -5.647566318511963
    9. '#' → logprob: -6.022566318511963
    10. ' rev' → logprob: -6.022566318511963

Token 545: 'data' (ID: 1074)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rev' → logprob: -1.3448586463928223
    2. 'inv' → logprob: -1.7198586463928223
    3. 'pos' → logprob: -2.0948586463928223
    4. 'comp' → logprob: -2.0948586463928223
    5. 'freq' → logprob: -2.8448586463928223
    6. 'count' → logprob: -3.3448586463928223
    7. 'r' → logprob: -3.4698586463928223
    8. 'd' → logprob: -3.8448586463928223
    9. 'cnt' → logprob: -3.9698586463928223
    10. 'b' → logprob: -3.9698586463928223

Token 546: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5961266160011292
    2. ' =' → logprob: -0.8461266160011292
    3. '=' → logprob: -6.096126556396484
    4. '{' → logprob: -6.096126556396484
    5. '_counts' → logprob: -6.221126556396484
    6. '_data' → logprob: -6.346126556396484
    7. '',' → logprob: -6.596126556396484
    8. '':' → logprob: -6.721126556396484
    9. ' '' → logprob: -6.721126556396484
    10. '   ' → logprob: -6.846126556396484

Token 547: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3147064447402954
    2. '=' → logprob: -1.3147064447402954
    3. '   ' → logprob: -7.564706325531006
    4. '{' → logprob: -8.314706802368164
    5. '={' → logprob: -8.689706802368164
    6. '={}' → logprob: -8.689706802368164
    7. ',' → logprob: -9.189706802368164
    8. 'data' → logprob: -9.314706802368164
    9. '={'' → logprob: -10.314706802368164
    10. '={
' → logprob: -10.439706802368164

Token 548: ' retrouver' (ID: 53435)
  Prédit: 'stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stock' → logprob: -0.4954507350921631
    2. '{' → logprob: -1.620450735092163
    3. 'rec' → logprob: -3.245450735092163
    4. 'count' → logprob: -3.620450735092163
    5. '{}' → logprob: -3.745450735092163
    6. 'st' → logprob: -3.745450735092163
    7. 'comp' → logprob: -3.995450735092163
    8. '{
' → logprob: -5.245450973510742
    9. ' compter' → logprob: -5.245450973510742
    10. 'default' → logprob: -5.370450973510742

Token 549: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.124587059020996
    2. 'la' → logprob: -1.374587059020996
    3. 'les' → logprob: -1.749587059020996
    4. 'l' → logprob: -3.124587059020996
    5. ' les' → logprob: -3.249587059020996
    6. '{' → logprob: -3.499587059020996
    7. 'the' → logprob: -3.624587059020996
    8. 'indices' → logprob: -3.749587059020996
    9. 'le' → logprob: -3.874587059020996
    10. '[]' → logprob: -4.374587059020996

Token 550: ' valeur' (ID: 41664)
  Prédit: 'ha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ha' → logprob: -1.048488974571228
    2. 'position' → logprob: -1.923488974571228
    3. ' prochaine' → logprob: -2.0484890937805176
    4. 'val' → logprob: -2.2984890937805176
    5. ' hauteur' → logprob: -2.6734890937805176
    6. ' fréquence' → logprob: -2.7984890937805176
    7. ' valeur' → logprob: -3.2984890937805176
    8. ' position' → logprob: -3.5484890937805176
    9. 'pro' → logprob: -4.548489093780518
    10. 'fr' → logprob: -4.798489093780518

Token 551: ' initial' (ID: 4871)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.6634294986724854
    2. ' des' → logprob: -1.7884294986724854
    3. 'max' → logprob: -1.9134294986724854
    4. 'mod' → logprob: -2.9134294986724854
    5. ' originale' → logprob: -2.9134294986724854
    6. 'minimum' → logprob: -3.0384294986724854
    7. ' maximale' → logprob: -3.1634294986724854
    8. 'de' → logprob: -3.1634294986724854
    9. ' de' → logprob: -3.5384294986724854
    10. ' mod' → logprob: -3.6634294986724854

Token 552: 'e' (ID: 68)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1228642538189888
    2. ',' → logprob: -3.622864246368408
    3. ' des' → logprob: -4.122864246368408
    4. ' de' → logprob: -4.247864246368408
    5. 'de' → logprob: -4.497864246368408
    6. 'x' → logprob: -4.872864246368408
    7. 'des' → logprob: -4.872864246368408
    8. 'e' → logprob: -4.997864246368408
    9. 'ur' → logprob: -5.247864246368408
    10. 'r' → logprob: -5.997864246368408

Token 553: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3546022176742554
    2. ' des' → logprob: -1.4796022176742554
    3. 's' → logprob: -2.104602336883545
    4. '{' → logprob: -2.229602336883545
    5. 'de' → logprob: -2.729602336883545
    6. 'des' → logprob: -2.854602336883545
    7. ' de' → logprob: -2.979602336883545
    8. ':' → logprob: -3.854602336883545
    9. '#' → logprob: -4.104602336883545
    10. 'max' → logprob: -4.979602336883545

Token 554: ' partir' (ID: 12100)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -1.0123376846313477
    2. 'cha' → logprob: -1.2623376846313477
    3. 'comp' → logprob: -1.6373376846313477
    4. 'part' → logprob: -2.2623376846313477
    5. 'l' → logprob: -3.3873376846313477
    6. 'un' → logprob: -5.637337684631348
    7. 'la' → logprob: -5.887337684631348
    8. ' partir' → logprob: -5.887337684631348
    9. 'index' → logprob: -6.137337684631348
    10. 'ch' → logprob: -6.387337684631348

Token 555: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.2158215045928955
    2. 'des' → logprob: -1.2158215045928955
    3. 'd' → logprob: -1.3408215045928955
    4. ' des' → logprob: -2.5908215045928955
    5. '#' → logprob: -3.5908215045928955
    6. ' de' → logprob: -3.7158215045928955
    7. ' d' → logprob: -4.590821266174316
    8. 'du' → logprob: -4.840821266174316
    9. ' du' → logprob: -7.965821266174316
    10. 'comp' → logprob: -9.715821266174316

Token 556: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.07325714081525803
    2. 'la' → logprob: -3.3232572078704834
    3. 'une' → logprob: -4.448256969451904
    4. 'un' → logprob: -4.948256969451904
    5. 'comp' → logprob: -5.073256969451904
    6. 'son' → logprob: -6.198256969451904
    7. ' l' → logprob: -6.573256969451904
    8. 'index' → logprob: -6.948256969451904
    9. 'cl' → logprob: -7.448256969451904
    10. '#' → logprob: -7.573256969451904

Token 557: ' valeur' (ID: 41664)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.04543529078364372
    2. 'compressed' → logprob: -4.295435428619385
    3. 'index' → logprob: -4.795435428619385
    4. 'position' → logprob: -5.170435428619385
    5. 'indice' → logprob: -5.920435428619385
    6. ' comp' → logprob: -6.045435428619385
    7. 'code' → logprob: -6.420435428619385
    8. 'pos' → logprob: -6.545435428619385
    9. 'compression' → logprob: -6.545435428619385
    10. 'com' → logprob: -6.795435428619385

Token 558: ' compress' (ID: 34112)
  Prédit: 'compress'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compress' → logprob: -0.6884056925773621
    2. 'comp' → logprob: -0.9384056925773621
    3. ' compress' → logprob: -2.938405752182007
    4. 'compressed' → logprob: -3.563405752182007
    5. 'com' → logprob: -4.563405513763428
    6. 'index' → logprob: -5.438405513763428
    7. 'compr' → logprob: -5.563405513763428
    8. ' comp' → logprob: -6.438405513763428
    9. ' index' → logprob: -7.063405513763428
    10. ' compr' → logprob: -7.188405513763428

Token 559: 'ée' (ID: 2894)
  Prédit: 'ie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.2645743191242218
    2. 'i' → logprob: -2.0145742893218994
    3. 'e' → logprob: -2.3895742893218994
    4. 'comp' → logprob: -6.3895745277404785
    5. 'a' → logprob: -6.6395745277404785
    6. 'é' → logprob: -7.1395745277404785
    7. '{' → logprob: -7.2645745277404785
    8. 'ue' → logprob: -7.3895745277404785
    9. 'ion' → logprob: -7.5145745277404785
    10. 'ée' → logprob: -7.7645745277404785

Token 560: '.
' (ID: 558)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.347918838262558
    2. 'data' → logprob: -2.347918748855591
    3. ',' → logprob: -3.097918748855591
    4. 'comp' → logprob: -3.097918748855591
    5. '_data' → logprob: -3.722918748855591
    6. '   ' → logprob: -4.09791898727417
    7. ' =' → logprob: -4.34791898727417
    8. ':' → logprob: -4.47291898727417
    9. ' data' → logprob: -4.84791898727417
    10. '.' → logprob: -5.09791898727417

Token 561: '   ' (ID: 271)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.0010808025253936648
    2. ' data' → logprob: -7.1260809898376465
    3. '{' → logprob: -9.376080513000488
    4. 'reverse' → logprob: -9.751080513000488
    5. 'inverse' → logprob: -10.626080513000488
    6. '
' → logprob: -10.876080513000488
    7. 'for' → logprob: -11.126080513000488
    8. 'rev' → logprob: -11.251080513000488
    9. '   ' → logprob: -11.376080513000488
    10. '#' → logprob: -11.376080513000488

Token 562: ' #' (ID: 1069)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.0001745775662129745
    2. 'rev' → logprob: -9.625174522399902
    3. ' data' → logprob: -9.750174522399902
    4. 'inv' → logprob: -11.000174522399902
    5. 'for' → logprob: -11.875174522399902
    6. '
' → logprob: -12.125174522399902
    7. 'reverse' → logprob: -12.125174522399902
    8. 'd' → logprob: -12.625174522399902
    9. 'val' → logprob: -12.875174522399902
    10. '{' → logprob: -12.875174522399902

Token 563: ' Parc' (ID: 68618)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.008623674511909485
    2. 'for' → logprob: -5.5086236000061035
    3. 'rev' → logprob: -6.1336236000061035
    4. 'inv' → logprob: -7.1336236000061035
    5. 'val' → logprob: -7.3836236000061035
    6. 'reverse' → logprob: -8.383624076843262
    7. 'value' → logprob: -9.133624076843262
    8. 'd' → logprob: -9.258624076843262
    9. 'inverse' → logprob: -9.258624076843262
    10. ' data' → logprob: -9.508624076843262

Token 564: 'ourt' (ID: 38600)
  Prédit: 'our'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.615318775177002
    2. 'ourt' → logprob: -0.990318775177002
    3. 'ours' → logprob: -3.240318775177002
    4. 'u' → logprob: -4.115318775177002
    5. 'omm' → logprob: -4.865318775177002
    6. 'omp' → logprob: -5.365318775177002
    7. 'ur' → logprob: -5.990318775177002
    8. 'om' → logprob: -6.115318775177002
    9. 'court' → logprob: -6.490318775177002
    10. 'e' → logprob: -6.740318775177002

Token 565: ' toutes' (ID: 17502)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5687505602836609
    2. ' comp' → logprob: -1.5687506198883057
    3. ' a' → logprob: -2.1937506198883057
    4. '(a' → logprob: -3.1937506198883057
    5. 'comp' → logprob: -3.5687506198883057
    6. '(comp' → logprob: -3.5687506198883057
    7. 'e' → logprob: -5.568750381469727
    8. '   ' → logprob: -5.818750381469727
    9. 'i' → logprob: -6.568750381469727
    10. '=' → logprob: -6.818750381469727

Token 566: ' les' (ID: 1341)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.06561216711997986
    2. 'a' → logprob: -2.8156120777130127
    3. '(comp' → logprob: -5.940612316131592
    4. ' comp' → logprob: -7.940612316131592
    5. 'i' → logprob: -8.315611839294434
    6. 'range' → logprob: -9.815611839294434
    7. 'h' → logprob: -10.065611839294434
    8. 'enumer' → logprob: -10.190611839294434
    9. 'e' → logprob: -10.440611839294434
    10. '	comp' → logprob: -10.440611839294434

Token 567: ' clés' (ID: 96616)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7098870873451233
    2. 'a' → logprob: -0.8348870873451233
    3. 'comp' → logprob: -3.3348870277404785
    4. 'val' → logprob: -4.5848870277404785
    5. 'e' → logprob: -4.8348870277404785
    6. 'range' → logprob: -5.2098870277404785
    7. 'k' → logprob: -5.4598870277404785
    8. 'clé' → logprob: -5.9598870277404785
    9. 'key' → logprob: -6.5848870277404785
    10. 'v' → logprob: -6.8348870277404785

Token 568: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.253645658493042
    2. 'in' → logprob: -1.503645658493042
    3. ' de' → logprob: -2.003645658493042
    4. '   ' → logprob: -2.378645658493042
    5. 'de' → logprob: -2.753645658493042
    6. '(comp' → logprob: -2.878645658493042
    7. '=' → logprob: -3.128645658493042
    8. 'comp' → logprob: -4.003645896911621
    9. ' =' → logprob: -4.128645896911621
    10. 'a' → logprob: -4.253645896911621

Token 569: ' '' (ID: 461)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -7.922563963802531e-05
    2. ' comp' → logprob: -9.500079154968262
    3. 'data' → logprob: -13.750079154968262
    4. 'a' → logprob: -13.750079154968262
    5. '(comp' → logprob: -14.125079154968262
    6. '	comp' → logprob: -14.375079154968262
    7. 'com' → logprob: -14.875079154968262
    8. '```' → logprob: -15.375079154968262
    9. 'compl' → logprob: -16.125080108642578
    10. '`' → logprob: -16.875080108642578

Token 570: 'comp' (ID: 3697)
  Prédit: 'comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -6.73052782076411e-05
    2. ' comp' → logprob: -10.125067710876465
    3. 'data' → logprob: -11.250067710876465
    4. 'a' → logprob: -11.625067710876465
    5. 'mod' → logprob: -13.500067710876465
    6. '	comp' → logprob: -14.000067710876465
    7. '```' → logprob: -14.125067710876465
    8. 'H' → logprob: -14.500067710876465
    9. 'com' → logprob: -14.500067710876465
    10. '(comp' → logprob: -14.750067710876465

Token 571: '',' (ID: 787)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -1.1502381563186646
    2. ')' → logprob: -1.2752381563186646
    3. ':
' → logprob: -2.150238037109375
    4. '):' → logprob: -3.025238037109375
    5. ',' → logprob: -3.275238037109375
    6. '():
' → logprob: -3.275238037109375
    7. 'for' → logprob: -3.525238037109375
    8. '),' → logprob: -3.650238037109375
    9. 'comp' → logprob: -4.025238037109375
    10. ':' → logprob: -4.025238037109375

Token 572: ' et' (ID: 859)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.4160420596599579
    2. 'for' → logprob: -1.1660420894622803
    3. 'rev' → logprob: -4.916041851043701
    4. 'val' → logprob: -5.666041851043701
    5. 'inv' → logprob: -5.791041851043701
    6. 'reverse' → logprob: -5.791041851043701
    7. '   ' → logprob: -5.916041851043701
    8. 'comp' → logprob: -6.666041851043701
    9. 'd' → logprob: -6.666041851043701
    10. ' data' → logprob: -6.791041851043701

Token 573: ' assoc' (ID: 107464)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.064841866493225
    2. 'data' → logprob: -1.189841866493225
    3. 'comp' → logprob: -2.1898417472839355
    4. 'inverse' → logprob: -2.6898417472839355
    5. 'in' → logprob: -4.0648417472839355
    6. 'rem' → logprob: -4.3148417472839355
    7. 'con' → logprob: -4.3148417472839355
    8. ' for' → logprob: -4.5648417472839355
    9. 'val' → logprob: -4.5648417472839355
    10. 're' → logprob: -4.6898417472839355

Token 574: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.04030395671725273
    2. 'i' → logprob: -3.665303945541382
    3. 'ié' → logprob: -4.415304183959961
    4. 'e' → logprob: -6.915304183959961
    5. 'iant' → logprob: -8.790304183959961
    6. '{' → logprob: -9.540304183959961
    7. 'ies' → logprob: -9.540304183959961
    8. 'ië' → logprob: -9.915304183959961
    9. '```' → logprob: -10.040304183959961
    10. '#' → logprob: -10.352804183959961

Token 575: ' la' (ID: 557)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.19374743103981018
    2. ' comp' → logprob: -1.8187474012374878
    3. 'i' → logprob: -5.068747520446777
    4. '   ' → logprob: -6.318747520446777
    5. '{' → logprob: -6.693747520446777
    6. 'e' → logprob: -6.943747520446777
    7. '(comp' → logprob: -7.318747520446777
    8. 'v' → logprob: -7.818747520446777
    9. '	comp' → logprob: -7.943747520446777
    10. 'c' → logprob: -7.943747520446777

Token 576: ' clé' (ID: 83188)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.59663987159729
    2. 'val' → logprob: -1.09663987159729
    3. ' comp' → logprob: -3.34663987159729
    4. ' valeur' → logprob: -3.72163987159729
    5. 'v' → logprob: -3.97163987159729
    6. 'value' → logprob: -4.471639633178711
    7. 'clé' → logprob: -4.721639633178711
    8. 'k' → logprob: -5.471639633178711
    9. 'key' → logprob: -5.846639633178711
    10. 'i' → logprob: -6.471639633178711

Token 577: ' comp' (ID: 1050)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5190110206604004
    2. 'comp' → logprob: -1.7690110206604004
    3. ' à' → logprob: -1.8940110206604004
    4. ',' → logprob: -2.0190110206604004
    5. ':' → logprob: -2.5190110206604004
    6. 'à' → logprob: -3.0190110206604004
    7. 'i' → logprob: -3.8940110206604004
    8. ' comp' → logprob: -3.8940110206604004
    9. 'k' → logprob: -3.8940110206604004
    10. '[val' → logprob: -4.1440110206604

Token 578: '[e' (ID: 51414)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.29892292618751526
    2. '[' → logprob: -3.0489230155944824
    3. '[v' → logprob: -3.5489230155944824
    4. '=' → logprob: -3.6739230155944824
    5. 'v' → logprob: -3.7989230155944824
    6. '[val' → logprob: -3.9239230155944824
    7. ']' → logprob: -4.298923015594482
    8. 'i' → logprob: -4.423923015594482
    9. 's' → logprob: -4.673923015594482
    10. '[value' → logprob: -4.798923015594482

Token 579: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11677762120962143
    2. '[i' → logprob: -2.4917776584625244
    3. '],' → logprob: -4.366777420043945
    4. '[e' → logprob: -4.491777420043945
    5. 'i' → logprob: -6.616777420043945
    6. 'e' → logprob: -6.741777420043945
    7. '[' → logprob: -8.741777420043945
    8. '(e' → logprob: -8.866777420043945
    9. ']=' → logprob: -8.866777420043945
    10. ']]' → logprob: -9.366777420043945

Token 580: ' à' (ID: 1221)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2012794017791748
    2. ':i' → logprob: -2.201279401779175
    3. ']' → logprob: -3.201279401779175
    4. ':e' → logprob: -4.451279640197754
    5. '[i' → logprob: -5.326279640197754
    6. 'to' → logprob: -5.576279640197754
    7. ',' → logprob: -5.951279640197754
    8. ' :' → logprob: -6.076279640197754
    9. 'e' → logprob: -6.201279640197754
    10. ' to' → logprob: -7.701279640197754

Token 581: ' la' (ID: 557)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6873111128807068
    2. 'comp' → logprob: -1.3123111724853516
    3. 'i' → logprob: -1.8123111724853516
    4. ' e' → logprob: -3.5623111724853516
    5. ' comp' → logprob: -4.312311172485352
    6. 'a' → logprob: -4.437311172485352
    7. 'l' → logprob: -5.312311172485352
    8. ' i' → logprob: -5.687311172485352
    9. '   ' → logprob: -7.687311172485352
    10. 'k' → logprob: -8.062311172485352

Token 582: ' valeur' (ID: 41664)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.041992440819740295
    2. ' e' → logprob: -3.541992425918579
    3. 'i' → logprob: -5.416992664337158
    4. 'a' → logprob: -5.416992664337158
    5. 'val' → logprob: -6.916992664337158
    6. 'value' → logprob: -7.041992664337158
    7. 'key' → logprob: -8.0419921875
    8. 'original' → logprob: -8.4169921875
    9. 'clé' → logprob: -8.7919921875
    10. ' valeur' → logprob: -9.2919921875

Token 583: ' origin' (ID: 12839)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.1573115438222885
    2. ' e' → logprob: -2.65731143951416
    3. 'i' → logprob: -3.03231143951416
    4. 'comp' → logprob: -3.90731143951416
    5. ' i' → logprob: -5.53231143951416
    6. ' comp' → logprob: -6.15731143951416
    7. '   ' → logprob: -8.40731143951416
    8. 'a' → logprob: -8.53231143951416
    9. '`' → logprob: -9.46981143951416
    10. '    ' → logprob: -9.90731143951416

Token 584: 'elle' (ID: 3486)
  Prédit: 'ale'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.055502958595752716
    2. 'e' → logprob: -3.6805028915405273
    3. 'a' → logprob: -3.8055028915405273
    4. 'al' → logprob: -5.805502891540527
    5. 'elle' → logprob: -6.555502891540527
    6. 'nale' → logprob: -8.055502891540527
    7. 'ele' → logprob: -8.180502891540527
    8. 'aux' → logprob: -8.180502891540527
    9. '```' → logprob: -8.305502891540527
    10. '   ' → logprob: -8.680502891540527

Token 585: ' e' (ID: 319)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.5277717709541321
    2. '[e' → logprob: -1.7777717113494873
    3. '#' → logprob: -2.9027717113494873
    4. 'e' → logprob: -3.1527717113494873
    5. 'de' → logprob: -3.6527717113494873
    6. '[i' → logprob: -3.7777717113494873
    7. '[' → logprob: -4.527771949768066
    8. ' =' → logprob: -4.652771949768066
    9. '{' → logprob: -4.777771949768066
    10. ' e' → logprob: -5.027771949768066

Token 586: '.
' (ID: 558)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -1.06815505027771
    2. ' =' → logprob: -1.19315505027771
    3. 'comp' → logprob: -1.94315505027771
    4. '=' → logprob: -2.06815505027771
    5. '   ' → logprob: -3.44315505027771
    6. 'for' → logprob: -3.56815505027771
    7. ' for' → logprob: -4.693155288696289
    8. ' data' → logprob: -5.943155288696289
    9. '=data' → logprob: -5.943155288696289
    10. '{' → logprob: -6.443155288696289

Token 587: '   ' (ID: 271)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.00039409202872775495
    2. 'for' → logprob: -8.375393867492676
    3. ' data' → logprob: -9.250393867492676
    4. '   ' → logprob: -11.125393867492676
    5. 'rev' → logprob: -11.375393867492676
    6. 'reverse' → logprob: -11.500393867492676
    7. 'd' → logprob: -11.750393867492676
    8. '```' → logprob: -11.750393867492676
    9. '
' → logprob: -12.250393867492676
    10. ' for' → logprob: -13.750393867492676

Token 588: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' (adapté à ' data') → logprob: -0.0005134754464961588
    2. 'for' → logprob: -7.750513553619385
    3. ' data' → logprob: -10.125513076782227
    4. '   ' → logprob: -10.625513076782227
    5. 'reverse' → logprob: -12.500513076782227
    6. '{' → logprob: -12.750513076782227
    7. '
' → logprob: -13.125513076782227
    8. 'd' → logprob: -13.250513076782227
    9. 'rev' → logprob: -13.250513076782227
    10. '{
' → logprob: -13.500513076782227

Token 589: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407880425453186
    2. ' =' → logprob: -0.9740787744522095
    3. ' ={' → logprob: -14.349079132080078
    4. '={' → logprob: -14.974079132080078
    5. '={}' → logprob: -15.474079132080078
    6. ' ' → logprob: -15.849079132080078
    7. '{' → logprob: -16.099079132080078
    8. '[' → logprob: -16.349079132080078
    9. '＝' → logprob: -16.849079132080078
    10. '={}
' → logprob: -16.974079132080078

Token 590: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.021041378378868103
    2. '{i' → logprob: -4.021041393280029
    3. ' {' → logprob: -6.396041393280029
    4. '{k' → logprob: -7.396041393280029
    5. '{x' → logprob: -7.771041393280029
    6. '{id' → logprob: -9.146040916442871
    7. '{s' → logprob: -10.396040916442871
    8. '{}' → logprob: -10.646040916442871
    9. '{}
' → logprob: -11.896040916442871
    10. '{name' → logprob: -12.146040916442871

Token 591: 'comp' (ID: 3697)
  Prédit: 'comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.25290581583976746
    2. 'v' → logprob: -1.5029058456420898
    3. ' comp' → logprob: -7.25290584564209
    4. 'value' → logprob: -9.12790584564209
    5. ' v' → logprob: -9.75290584564209
    6. 'val' → logprob: -10.62790584564209
    7. '(comp' → logprob: -11.00290584564209
    8. 'k' → logprob: -11.25290584564209
    9. 'e' → logprob: -11.25290584564209
    10. '	comp' → logprob: -11.87790584564209

Token 592: '[e' (ID: 51414)
  Prédit: '[e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[e' → logprob: -0.2854520380496979
    2. '[i' → logprob: -1.5354520082473755
    3. 'e' → logprob: -4.160451889038086
    4. '[k' → logprob: -4.285451889038086
    5. '[v' → logprob: -6.785451889038086
    6. 'k' → logprob: -7.535451889038086
    7. '[key' → logprob: -7.785451889038086
    8. '[' → logprob: -7.785451889038086
    9. '[x' → logprob: -7.910451889038086
    10. 'i' → logprob: -8.410451889038086

Token 593: ']:' (ID: 12433)
  Prédit: ']:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0106015894562006
    2. ']' → logprob: -4.63560152053833
    3. '[e' → logprob: -8.010601997375488
    4. '[i' → logprob: -8.385601997375488
    5. 'e' → logprob: -8.885601997375488
    6. ':e' → logprob: -9.885601997375488
    7. '):' → logprob: -10.260601997375488
    8. '(e' → logprob: -10.635601997375488
    9. ':' → logprob: -11.260601997375488
    10. '[' → logprob: -11.760601997375488

Token 594: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.03364846482872963
    2. ' e' → logprob: -3.4086484909057617
    3. '	e' → logprob: -13.283648490905762
    4. '   ' → logprob: -14.283648490905762
    5. ' ' → logprob: -15.408648490905762
    6. '    ' → logprob: -16.908647537231445
    7. ' ' → logprob: -17.283647537231445
    8. '  ' → logprob: -17.533647537231445
    9. '       ' → logprob: -17.908647537231445
    10. '
' → logprob: -18.408647537231445

Token 595: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5759465098381042
    2. ' for' → logprob: -0.8259465098381042
    3. '	for' → logprob: -11.950946807861328
    4. ' ' → logprob: -14.950946807861328
    5. '   ' → logprob: -15.575946807861328
    6. '}' → logprob: -16.575946807861328
    7. '    ' → logprob: -17.825946807861328
    8. ')' → logprob: -18.325946807861328
    9. '  ' → logprob: -18.825946807861328
    10. ' ' → logprob: -19.200946807861328

Token 596: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.004994294140487909
    2. ' e' → logprob: -5.3799943923950195
    3. 'comp' → logprob: -8.00499439239502
    4. ' comp' → logprob: -10.87999439239502
    5. 'a' → logprob: -11.12999439239502
    6. 'data' → logprob: -12.50499439239502
    7. '	e' → logprob: -13.75499439239502
    8. ')e' → logprob: -15.19249439239502
    9. ' data' → logprob: -15.37999439239502
    10. ' a' → logprob: -15.56749439239502

Token 597: ' in' (ID: 306)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.04199117794632912
    2. 'comp' → logprob: -3.5419912338256836
    3. ' e' → logprob: -4.916991233825684
    4. 'a' → logprob: -5.666991233825684
    5. ' comp' → logprob: -7.041991233825684
    6. 'data' → logprob: -7.791991233825684
    7. ' a' → logprob: -10.291991233825684
    8. ' data' → logprob: -11.291991233825684
    9. 'in' → logprob: -11.541991233825684
    10. 'range' → logprob: -11.666991233825684

Token 598: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.005946691147983074
    2. ' comp' → logprob: -5.505946636199951
    3. 'a' → logprob: -6.380946636199951
    4. 'h' → logprob: -9.50594711303711
    5. 'H' → logprob: -10.63094711303711
    6. 'data' → logprob: -10.88094711303711
    7. '	comp' → logprob: -10.88094711303711
    8. 'range' → logprob: -11.13094711303711
    9. ' a' → logprob: -11.88094711303711
    10. '(comp' → logprob: -12.63094711303711

Token 599: '.keys' (ID: 18392)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -6.704273118884885e-07
    2. ' }' → logprob: -14.875000953674316
    3. '}
' → logprob: -15.625000953674316
    4. '   ' → logprob: -16.625
    5. '}

' → logprob: -16.875
    6. '}.' → logprob: -17.25
    7. '},' → logprob: -19.375
    8. '}}' → logprob: -20.125
    9. '}\' → logprob: -20.25
    10. '};' → logprob: -20.375

Token 600: '()' (ID: 416)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.02992011234164238
    2. '()}' → logprob: -3.5299201011657715
    3. ' }' → logprob: -8.77992057800293
    4. '()' → logprob: -11.27992057800293
    5. ')}' → logprob: -12.90492057800293
    6. '`}' → logprob: -15.52992057800293
    7. '[]}' → logprob: -16.02992057800293
    8. '   ' → logprob: -16.02992057800293
    9. '()}
' → logprob: -17.15492057800293
    10. '(' → logprob: -17.40492057800293

Token 601: '}

' (ID: 943)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -6.749814019713085e-06
    2. '   ' → logprob: -12.250006675720215
    3. '}
' → logprob: -13.750006675720215
    4. ' }' → logprob: -14.625006675720215
    5. '}

' → logprob: -14.875006675720215
    6. '})' → logprob: -18.00000762939453
    7. ')' → logprob: -18.37500762939453
    8. '}\' → logprob: -18.87500762939453
    9. '}.' → logprob: -20.50000762939453
    10. '}}' → logprob: -20.50000762939453

Token 602: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004093242809176445
    2. '#' → logprob: -6.754093170166016
    3. '    
' → logprob: -7.004093170166016
    4. ')' → logprob: -7.254093170166016
    5. 'def' → logprob: -8.629093170166016
    6. 'n' → logprob: -8.879093170166016
    7. '[' → logprob: -9.129093170166016
    8. 's' → logprob: -9.379093170166016
    9. '```' → logprob: -9.379093170166016
    10. 'i' → logprob: -9.629093170166016

Token 603: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7887988686561584
    2. '#' (adapté à ' #') → logprob: -1.9137988090515137
    3. 'min' → logprob: -2.4137988090515137
    4. 'max' → logprob: -2.4137988090515137
    5. '   ' → logprob: -2.7887988090515137
    6. 'm' → logprob: -3.2887988090515137
    7. 'res' → logprob: -4.288798809051514
    8. 'stack' → logprob: -4.538798809051514
    9. 'idx' → logprob: -4.663798809051514
    10. 'pos' → logprob: -5.038798809051514

Token 604: ' Initial' (ID: 9209)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.0662095546722412
    2. 'm' → logprob: -1.1912095546722412
    3. 'max' → logprob: -1.9412095546722412
    4. '#' → logprob: -3.066209554672241
    5. 'dp' → logprob: -3.566209554672241
    6. 'mx' → logprob: -3.941209554672241
    7. 'h' → logprob: -4.69120979309082
    8. 'idx' → logprob: -4.69120979309082
    9. 'freq' → logprob: -5.06620979309082
    10. 'pos' → logprob: -5.19120979309082

Token 605: 'isation' (ID: 6993)
  Prédit: 'isation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isation' → logprob: -0.016340035945177078
    2. 'ization' → logprob: -4.891340255737305
    3. '#' → logprob: -5.266340255737305
    4. 'iser' → logprob: -6.516340255737305
    5. 'is' → logprob: -7.516340255737305
    6. 'ise' → logprob: -8.016340255737305
    7. 'max' → logprob: -8.516340255737305
    8. 'al' → logprob: -9.016340255737305
    9. 'isateur' → logprob: -9.641340255737305
    10. 's' → logprob: -9.891340255737305

Token 606: ' man' (ID: 873)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03600366786122322
    2. ' dp' → logprob: -4.036003589630127
    3. 'res' → logprob: -4.786003589630127
    4. ' ans' → logprob: -6.411003589630127
    5. 'count' → logprob: -6.661003589630127
    6. 'ans' → logprob: -7.161003589630127
    7. '   ' → logprob: -7.286003589630127
    8. 'result' → logprob: -7.286003589630127
    9. 'cnt' → logprob: -7.661003589630127
    10. '=' → logprob: -7.786003589630127

Token 607: 'uelle' (ID: 18079)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.3671292066574097
    2. '   ' → logprob: -1.9921292066574097
    3. 't' → logprob: -2.117129325866699
    4. 'a' → logprob: -2.117129325866699
    5. 'max' → logprob: -2.242129325866699
    6. 'stack' → logprob: -2.742129325866699
    7. 's' → logprob: -3.617129325866699
    8. 'count' → logprob: -3.617129325866699
    9. 'ax' → logprob: -3.742129325866699
    10. '=' → logprob: -4.742129325866699

Token 608: ' du' (ID: 1462)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0834503173828125
    2. '   ' → logprob: -3.7084503173828125
    3. 'd' → logprob: -4.2084503173828125
    4. 'res' → logprob: -4.8334503173828125
    5. ' dp' → logprob: -4.9584503173828125
    6. ' =' → logprob: -5.3334503173828125
    7. 'f' → logprob: -5.9584503173828125
    8. '=' → logprob: -6.3334503173828125
    9. '#' → logprob: -6.4584503173828125
    10. 'cnt' → logprob: -6.5834503173828125

Token 609: ' diction' (ID: 155259)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.24045105278491974
    2. 'res' → logprob: -1.9904510974884033
    3. 'result' → logprob: -3.6154510974884033
    4. 'ans' → logprob: -4.115450859069824
    5. 'stack' → logprob: -5.365450859069824
    6. 'memo' → logprob: -5.490450859069824
    7. 'd' → logprob: -5.615450859069824
    8. 'answer' → logprob: -5.615450859069824
    9. 'ret' → logprob: -5.865450859069824
    10. 'f' → logprob: -6.240450859069824

Token 610: 'naire' (ID: 30464)
  Prédit: 'aire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.3894883394241333
    2. 'naire' → logprob: -1.1394883394241333
    3. '#' → logprob: -6.764488220214844
    4. 'air' → logprob: -7.264488220214844
    5. 'ary' → logprob: -8.264488220214844
    6. 'n' → logprob: -8.889488220214844
    7. 'a' → logprob: -9.014488220214844
    8. '   ' → logprob: -10.014488220214844
    9. 'aires' → logprob: -10.514488220214844
    10. '{' → logprob: -10.764488220214844

Token 611: ' '' (ID: 461)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.18777631223201752
    2. '   ' → logprob: -2.4377763271331787
    3. ' dp' → logprob: -3.4377763271331787
    4. 'DP' → logprob: -5.0627760887146
    5. 'count' → logprob: -5.1877760887146
    6. 'res' → logprob: -5.4377760887146
    7. 'cnt' → logprob: -5.5627760887146
    8. 'd' → logprob: -5.6877760887146
    9. 'ans' → logprob: -5.9377760887146
    10. ' =' → logprob: -6.0627760887146

Token 612: 'data' (ID: 1074)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.22293439507484436
    2. 'memo' → logprob: -2.3479344844818115
    3. 'res' → logprob: -4.097934246063232
    4. 'f' → logprob: -4.472934246063232
    5. 'ans' → logprob: -4.847934246063232
    6. 'count' → logprob: -5.097934246063232
    7. 'd' → logprob: -5.222934246063232
    8. 'cnt' → logprob: -5.347934246063232
    9. 'D' → logprob: -5.597934246063232
    10. 'DP' → logprob: -5.597934246063232

Token 613: ''' (ID: 6)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.7839331030845642
    2. '[' → logprob: -1.408933162689209
    3. '   ' → logprob: -1.533933162689209
    4. ',' → logprob: -3.408933162689209
    5. '[data' → logprob: -3.408933162689209
    6. '{' → logprob: -5.158933162689209
    7. ' =' → logprob: -5.408933162689209
    8. '=' → logprob: -5.658933162689209
    9. '={' → logprob: -7.033933162689209
    10. '
' → logprob: -7.533933162689209

Token 614: ' pour' (ID: 1930)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16967478394508362
    2. 'data' → logprob: -2.419674873352051
    3. '   ' → logprob: -3.044674873352051
    4. '[data' → logprob: -4.169674873352051
    5. '{' → logprob: -6.044674873352051
    6. '[-' → logprob: -7.794674873352051
    7. '=' → logprob: -7.794674873352051
    8. '={' → logprob: -8.54467487335205
    9. ' =' → logprob: -8.66967487335205
    10. ',' → logprob: -8.91967487335205

Token 615: ' deux' (ID: 10301)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5023243427276611
    2. '1' → logprob: -1.6273243427276611
    3. 'data' → logprob: -1.8773243427276611
    4. 'comp' → logprob: -3.752324342727661
    5. ' ' → logprob: -4.877324104309082
    6. '-' → logprob: -5.127324104309082
    7. ' data' → logprob: -6.252324104309082
    8. '   ' → logprob: -6.752324104309082
    9. 'max' → logprob: -7.127324104309082
    10. '{' → logprob: -7.377324104309082

Token 616: ' clés' (ID: 96616)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -1.3415158987045288
    2. '0' → logprob: -1.5915158987045288
    3. ' data' → logprob: -2.0915160179138184
    4. '#' → logprob: -3.5915160179138184
    5. ' clés' → logprob: -3.5915160179138184
    6. 'levels' → logprob: -3.7165160179138184
    7. '{' → logprob: -3.8415160179138184
    8. ' niveaux' → logprob: -3.8415160179138184
    9. 'points' → logprob: -3.9665160179138184
    10. 'indices' → logprob: -4.091516017913818

Token 617: ' :' (ID: 712)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07759737223386765
    2. '0' → logprob: -3.4525973796844482
    3. '1' → logprob: -4.327597141265869
    4. '[data' → logprob: -4.452597141265869
    5. 'data' → logprob: -4.827597141265869
    6. '   ' → logprob: -4.952597141265869
    7. '=' → logprob: -6.827597141265869
    8. ' =' → logprob: -7.577597141265869
    9. '[-' → logprob: -7.827597141265869
    10. 'comp' → logprob: -8.327597618103027

Token 618: ' 
' (ID: 793)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.3130219280719757
    2. '0' → logprob: -1.9380218982696533
    3. '1' → logprob: -2.4380218982696533
    4. '   ' → logprob: -3.6880218982696533
    5. 'comp' → logprob: -4.813022136688232
    6. ' data' → logprob: -6.438022136688232
    7. '-' → logprob: -7.313022136688232
    8. ' ' → logprob: -7.688022136688232
    9. '[' → logprob: -8.188021659851074
    10. '2' → logprob: -8.563021659851074

Token 619: '   ' (ID: 271)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7840473055839539
    2. '0' → logprob: -1.5340473651885986
    3. 'data' → logprob: -1.6590473651885986
    4. '   ' → logprob: -2.1590473651885986
    5. ' ' → logprob: -4.9090471267700195
    6. 'comp' → logprob: -4.9090471267700195
    7. ' data' → logprob: -5.4090471267700195
    8. 'mod' → logprob: -6.5340471267700195
    9. ' comp' → logprob: -7.7840471267700195
    10. '[' → logprob: -8.03404712677002

Token 620: ' #' (ID: 1069)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.1324608027935028
    2. '0' → logprob: -2.132460832595825
    3. '1' → logprob: -5.507460594177246
    4. ' data' → logprob: -7.132460594177246
    5. '   ' → logprob: -8.382460594177246
    6. '-' → logprob: -8.507460594177246
    7. 'comp' → logprob: -9.632460594177246
    8. ' ' → logprob: -9.632460594177246
    9. 'mod' → logprob: -10.382460594177246
    10. '[data' → logprob: -11.007460594177246

Token 621: ' data' (ID: 1238)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5893282294273376
    2. 'data' → logprob: -0.8393282294273376
    3. '1' → logprob: -4.964328289031982
    4. '-' → logprob: -6.089328289031982
    5. 'comp' → logprob: -6.089328289031982
    6. ' data' → logprob: -7.214328289031982
    7. ' ' → logprob: -7.714328289031982
    8. '   ' → logprob: -7.964328289031982
    9. 'mod' → logprob: -9.339327812194824
    10. '2' → logprob: -10.714327812194824

Token 622: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0009780287509784102
    2. '0' → logprob: -8.125978469848633
    3. '[-' → logprob: -8.125978469848633
    4. '   ' → logprob: -8.250978469848633
    5. '1' → logprob: -9.625978469848633
    6. '=' → logprob: -10.625978469848633
    7. ' =' → logprob: -11.125978469848633
    8. '
' → logprob: -12.250978469848633
    9. '[data' → logprob: -12.250978469848633
    10. ' [' → logprob: -12.500978469848633

Token 623: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.025647861883044243
    2. '1' → logprob: -3.7756478786468506
    3. '-' → logprob: -6.5256476402282715
    4. 'comp' → logprob: -8.27564811706543
    5. ' ' → logprob: -8.52564811706543
    6. 'data' → logprob: -9.15064811706543
    7. 'mod' → logprob: -9.52564811706543
    8. '2' → logprob: -9.65064811706543
    9. 'N' → logprob: -10.46314811706543
    10. 'max' → logprob: -10.46314811706543

Token 624: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003214784199371934
    2. ']=' → logprob: -5.7532148361206055
    3. ' ]' → logprob: -10.878214836120605
    4. '=' → logprob: -12.003214836120605
    5. '],' → logprob: -12.628214836120605
    6. '0' → logprob: -13.003214836120605
    7. ']={' → logprob: -13.378214836120605
    8. '']' → logprob: -14.003214836120605
    9. ' =' → logprob: -14.378214836120605
    10. ',' → logprob: -14.378214836120605

Token 625: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08134767413139343
    2. ' =' → logprob: -2.581347703933716
    3. ']' → logprob: -6.081347465515137
    4. ']=' → logprob: -8.831347465515137
    5. ',' → logprob: -11.581347465515137
    6. '0' → logprob: -12.081347465515137
    7. 'data' → logprob: -12.206347465515137
    8. ')' → logprob: -14.206347465515137
    9. ' ' → logprob: -14.331347465515137
    10. '=data' → logprob: -14.581347465515137

Token 626: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03915278986096382
    2. '-' → logprob: -3.6641528606414795
    3. '10' → logprob: -5.0391526222229
    4. '1' → logprob: -6.5391526222229
    5. 'max' → logprob: -6.6641526222229
    6. 'data' → logprob: -6.7891526222229
    7. 'float' → logprob: -6.7891526222229
    8. '100' → logprob: -8.164153099060059
    9. 'mod' → logprob: -8.539153099060059
    10. ' ' → logprob: -8.789153099060059

Token 627: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09436231106519699
    2. '-' → logprob: -2.594362258911133
    3. '1' → logprob: -5.219362258911133
    4. '10' → logprob: -5.594362258911133
    5. 'max' → logprob: -5.844362258911133
    6. 'float' → logprob: -6.969362258911133
    7. 'data' → logprob: -7.594362258911133
    8. 'mod' → logprob: -7.844362258911133
    9. ' ' → logprob: -7.969362258911133
    10. ' -' → logprob: -8.344362258911133

Token 628: ' (' (ID: 350)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.012438190169632435
    2. '
' → logprob: -4.7624382972717285
    3. '   ' → logprob: -6.0124382972717285
    4. ' data' → logprob: -7.0124382972717285
    5. ' =' → logprob: -9.38743782043457
    6. '    
' → logprob: -9.51243782043457
    7. '  
' → logprob: -10.13743782043457
    8. ',
' → logprob: -10.13743782043457
    9. '=data' → logprob: -10.26243782043457
    10. ' 
' → logprob: -10.51243782043457

Token 629: 'initial' (ID: 17493)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5515778064727783
    2. 'data' → logprob: -1.3015778064727783
    3. ')
' → logprob: -2.1765778064727783
    4. '0' → logprob: -4.176577568054199
    5. '
' → logprob: -4.301577568054199
    6. ' data' → logprob: -5.426577568054199
    7. '   ' → logprob: -6.426577568054199
    8. ')data' → logprob: -6.801577568054199
    9. ' ' → logprob: -7.801577568054199
    10. ' )' → logprob: -8.4265775680542

Token 630: 'isé' (ID: 30065)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9462095499038696
    2. ')
' → logprob: -1.1962095499038696
    3. 'data' → logprob: -1.3212095499038696
    4. '
' → logprob: -3.69620943069458
    5. ']' → logprob: -4.94620943069458
    6. ']
' → logprob: -5.32120943069458
    7. ' data' → logprob: -5.82120943069458
    8. '```' → logprob: -7.94620943069458
    9. '   ' → logprob: -8.071209907531738
    10. ')data' → logprob: -8.446209907531738

Token 631: ' puis' (ID: 18766)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02990715019404888
    2. ')
' → logprob: -3.6549072265625
    3. 'data' → logprob: -5.9049072265625
    4. ')data' → logprob: -8.4049072265625
    5. ' )' → logprob: -8.7799072265625
    6. '0' → logprob: -8.9049072265625
    7. '   ' → logprob: -9.4049072265625
    8. '
' → logprob: -9.5299072265625
    9. '),' → logprob: -9.9049072265625
    10. ' data' → logprob: -10.1549072265625

Token 632: ' écr' (ID: 33691)
  Prédit: ' data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.6945027112960815
    2. 'data' → logprob: -0.9445027112960815
    3. ')' → logprob: -2.944502830505371
    4. '0' → logprob: -3.819502830505371
    5. 'continue' → logprob: -5.444502830505371
    6. ' used' → logprob: -5.569502830505371
    7. ' continue' → logprob: -5.569502830505371
    8. '#' → logprob: -5.944502830505371
    9. 'contin' → logprob: -6.319502830505371
    10. ' continu' → logprob: -6.444502830505371

Token 633: 'as' (ID: 288)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'it' → logprob: -1.0062364339828491
    2. 'ite' → logprob: -1.1312364339828491
    3. 'ément' → logprob: -2.2562365531921387
    4. 'p' → logprob: -3.7562365531921387
    5. 'ité' → logprob: -4.131236553192139
    6. 'ém' → logprob: -4.506236553192139
    7. '#' → logprob: -4.631236553192139
    8. 'em' → logprob: -4.631236553192139
    9. 'êt' → logprob: -4.756236553192139
    10. 'is' → logprob: -4.756236553192139

Token 634: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.006837918423116207
    2. 'e' → logprob: -5.381837844848633
    3. 'ée' → logprob: -6.381837844848633
    4. '=' → logprob: -8.131837844848633
    5. 'ed' → logprob: -9.131837844848633
    6. 'data' → logprob: -10.506837844848633
    7. 'er' → logprob: -10.881837844848633
    8. 'è' → logprob: -11.006837844848633
    9. 'en' → logprob: -11.506837844848633
    10. 'a' → logprob: -11.506837844848633

Token 635: ' par' (ID: 686)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.41287297010421753
    2. ')' → logprob: -1.1628730297088623
    3. 'data' → logprob: -3.9128730297088623
    4. '   ' → logprob: -5.912872791290283
    5. ')data' → logprob: -7.412872791290283
    6. '),' → logprob: -7.912872791290283
    7. '
' → logprob: -8.037873268127441
    8. ')
' → logprob: -8.037873268127441
    9. '0' → logprob: -8.162873268127441
    10. ',' → logprob: -8.162873268127441

Token 636: ' la' (ID: 557)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.20117735862731934
    2. '0' → logprob: -1.9511773586273193
    3. 'min' → logprob: -4.701177597045898
    4. '1' → logprob: -4.951177597045898
    5. ' data' → logprob: -5.201177597045898
    6. 'max' → logprob: -5.201177597045898
    7. 'a' → logprob: -6.076177597045898
    8. 'h' → logprob: -6.451177597045898
    9. ')' → logprob: -6.826177597045898
    10. '   ' → logprob: -7.201177597045898

Token 637: ' ligne' (ID: 19583)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.17463186383247375
    2. '0' → logprob: -2.5496318340301514
    3. 'max' → logprob: -3.6746318340301514
    4. 'min' → logprob: -3.9246318340301514
    5. '1' → logprob: -4.1746320724487305
    6. 'comp' → logprob: -5.0496320724487305
    7. 'None' → logprob: -5.4246320724487305
    8. 'h' → logprob: -6.6746320724487305
    9. ' data' → logprob: -6.6746320724487305
    10. '
' → logprob: -6.7996320724487305

Token 638: ' suivante' (ID: 107439)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.0968589037656784
    2. ')
' → logprob: -3.4718589782714844
    3. '   ' → logprob: -4.096858978271484
    4. ')' → logprob: -4.221858978271484
    5. '0' → logprob: -4.346858978271484
    6. '#' → logprob: -5.346858978271484
    7. ' data' → logprob: -5.846858978271484
    8. ' suivante' → logprob: -5.971858978271484
    9. '
' → logprob: -6.846858978271484
    10. ',' → logprob: -7.721858978271484

Token 639: '),' (ID: 936)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.8171737790107727
    2. ')
' → logprob: -1.067173719406128
    3. ')' → logprob: -2.192173719406128
    4. '   ' → logprob: -2.317173719406128
    5. ',' → logprob: -6.692173957824707
    6. ' data' → logprob: -7.442173957824707
    7. '
' → logprob: -7.442173957824707
    8. '),' → logprob: -7.817173957824707
    9. ')data' → logprob: -8.442173957824707
    10. '0' → logprob: -8.942173957824707

Token 640: ' puis' (ID: 18766)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.1029447466135025
    2. '   ' → logprob: -2.352944850921631
    3. ' data' → logprob: -6.227944850921631
    4. '#' → logprob: -7.852944850921631
    5. '0' → logprob: -8.727944374084473
    6. '	data' → logprob: -9.727944374084473
    7. ' ' → logprob: -10.602944374084473
    8. '
' → logprob: -10.727944374084473
    9. '`' → logprob: -10.852944374084473
    10. '  ' → logprob: -10.977944374084473

Token 641: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.013408678583800793
    2. ' data' → logprob: -4.513408660888672
    3. '   ' → logprob: -6.138408660888672
    4. '0' → logprob: -9.013408660888672
    5. '
' → logprob: -11.013408660888672
    6. ' ' → logprob: -11.263408660888672
    7. '  ' → logprob: -12.013408660888672
    8. '#' → logprob: -12.013408660888672
    9. '	data' → logprob: -12.138408660888672
    10. '{' → logprob: -12.388408660888672

Token 642: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.015359011478722095
    2. '[-' → logprob: -4.265358924865723
    3. '.setdefault' → logprob: -7.140358924865723
    4. '.pop' → logprob: -9.015358924865723
    5. '0' → logprob: -9.390358924865723
    6. '.clear' → logprob: -9.765358924865723
    7. '=' → logprob: -9.890358924865723
    8. ' =' → logprob: -10.765358924865723
    9. '.update' → logprob: -11.015358924865723
    10. '.' → logprob: -11.515358924865723

Token 643: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09380242228507996
    2. '-' → logprob: -2.4688024520874023
    3. '1' → logprob: -6.343802452087402
    4. ' ' → logprob: -6.718802452087402
    5. ' -' → logprob: -7.718802452087402
    6. '   ' → logprob: -8.593802452087402
    7. 'max' → logprob: -8.718802452087402
    8. 'a' → logprob: -8.718802452087402
    9. '10' → logprob: -8.718802452087402
    10. '100' → logprob: -9.218802452087402

Token 644: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07865069806575775
    2. ']=' → logprob: -2.828650712966919
    3. '=' → logprob: -4.20365047454834
    4. ' =' → logprob: -7.20365047454834
    5. ' ]' → logprob: -8.20365047454834
    6. '0' → logprob: -8.45365047454834
    7. 'data' → logprob: -9.57865047454834
    8. '   ' → logprob: -9.70365047454834
    9. '']' → logprob: -10.20365047454834
    10. '']=' → logprob: -10.32865047454834

Token 645: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006342537701129913
    2. ' =' → logprob: -5.13134241104126
    3. '+=' → logprob: -8.256342887878418
    4. '-=' → logprob: -9.631342887878418
    5. '#' → logprob: -11.506342887878418
    6. '=data' → logprob: -11.881342887878418
    7. '=-' → logprob: -12.006342887878418
    8. ']=' → logprob: -12.006342887878418
    9. 'data' → logprob: -12.131342887878418
    10. '   ' → logprob: -12.131342887878418

Token 646: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3997465968132019
    2. '1' → logprob: -1.8997466564178467
    3. '0' → logprob: -2.8997466564178467
    4. 'None' → logprob: -3.1497466564178467
    5. 'float' → logprob: -3.3997466564178467
    6. 'data' → logprob: -4.024746417999268
    7. 'mod' → logprob: -4.774746417999268
    8. 'a' → logprob: -4.899746417999268
    9. '10' → logprob: -5.149746417999268
    10. 'min' → logprob: -5.774746417999268

Token 647: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6415247917175293
    2. '1' → logprob: -1.2665247917175293
    3. '0' → logprob: -2.7665247917175293
    4. 'None' → logprob: -3.5165247917175293
    5. 'float' → logprob: -3.6415247917175293
    6. 'a' → logprob: -4.016524791717529
    7. 'max' → logprob: -4.141524791717529
    8. 'mod' → logprob: -4.391524791717529
    9. 'min' → logprob: -4.766524791717529
    10. '10' → logprob: -4.891524791717529

Token 648: '.
' (ID: 558)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.06370389461517334
    2. '
' → logprob: -2.813704013824463
    3. '   ' → logprob: -6.813704013824463
    4. ' data' → logprob: -8.688703536987305
    5. '  
' → logprob: -8.813703536987305
    6. '    
' → logprob: -9.188703536987305
    7. '```' → logprob: -9.938703536987305
    8. ' 
' → logprob: -10.438703536987305
    9. '	data' → logprob: -10.813703536987305
    10. ',
' → logprob: -11.188703536987305

Token 649: '   ' (ID: 271)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.002065564738586545
    2. '   ' → logprob: -6.252065658569336
    3. '```' → logprob: -9.252065658569336
    4. '
' → logprob: -10.752065658569336
    5. '``' → logprob: -11.502065658569336
    6. ' data' → logprob: -12.252065658569336
    7. '    
' → logprob: -12.752065658569336
    8. '	data' → logprob: -14.627065658569336
    9. '  
' → logprob: -15.127065658569336
    10. '\data' → logprob: -15.502065658569336

Token 650: ' #' (ID: 1069)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.006954769138246775
    2. '   ' → logprob: -5.006954669952393
    3. ' data' → logprob: -8.50695514678955
    4. '
' → logprob: -11.25695514678955
    5. '```' → logprob: -11.50695514678955
    6. '	data' → logprob: -11.63195514678955
    7. ' ' → logprob: -13.00695514678955
    8. '    
' → logprob: -14.13195514678955
    9. '``' → logprob: -14.25695514678955
    10. '\data' → logprob: -14.38195514678955

Token 651: ' ATT' (ID: 66852)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -1.0325924449716695e-05
    2. '
' → logprob: -11.75001049041748
    3. ' data' → logprob: -13.50001049041748
    4. '   ' → logprob: -14.75001049041748
    5. '```' → logprob: -15.00001049041748
    6. '#' → logprob: -16.375009536743164
    7. '    
' → logprob: -16.875009536743164
    8. '0' → logprob: -17.125009536743164
    9. '`' → logprob: -18.000009536743164
    10. 'd' → logprob: -18.125009536743164

Token 652: 'ENTION' (ID: 121786)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.5035977363586426
    2. 'ention' → logprob: -1.0035977363586426
    3. '=' → logprob: -4.878597736358643
    4. 'n' → logprob: -4.878597736358643
    5. 'd' → logprob: -5.503597736358643
    6. 'ente' → logprob: -6.503597736358643
    7. '#' → logprob: -6.628597736358643
    8. 'r' → logprob: -7.128597736358643
    9. 'ent' → logprob: -7.253597736358643
    10. 'tention' → logprob: -7.253597736358643

Token 653: ' :' (ID: 712)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.03954143077135086
    2. '
' → logprob: -3.289541482925415
    3. ' data' → logprob: -7.039541244506836
    4. '   ' → logprob: -8.039541244506836
    5. '#' → logprob: -10.289541244506836
    6. '  
' → logprob: -10.289541244506836
    7. '    
' → logprob: -10.414541244506836
    8. ' =' → logprob: -10.539541244506836
    9. '```' → logprob: -10.664541244506836
    10. ',
' → logprob: -11.039541244506836

Token 654: ' seule' (ID: 41983)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.02638494223356247
    2. ' data' → logprob: -3.6513848304748535
    3. '
' → logprob: -10.276385307312012
    4. '   ' → logprob: -11.026385307312012
    5. '#' → logprob: -12.026385307312012
    6. '```' → logprob: -12.026385307312012
    7. ' ' → logprob: -12.526385307312012
    8. '0' → logprob: -12.776385307312012
    9. 'Data' → logprob: -13.026385307312012
    10. 'd' → logprob: -13.151385307312012

Token 655: ' la' (ID: 557)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.020754771307110786
    2. ' data' → logprob: -4.145754814147949
    3. '#' → logprob: -6.520754814147949
    4. '0' → logprob: -6.645754814147949
    5. 'la' → logprob: -7.270754814147949
    6. 'the' → logprob: -8.02075481414795
    7. ' la' → logprob: -8.39575481414795
    8. ' the' → logprob: -8.52075481414795
    9. 'l' → logprob: -9.14575481414795
    10. ' ' → logprob: -9.64575481414795

Token 656: ' dernière' (ID: 39497)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.1826295554637909
    2. ' data' → logprob: -2.5576295852661133
    3. '0' → logprob: -3.3076295852661133
    4. 'd' → logprob: -3.5576295852661133
    5. 'der' → logprob: -5.057629585266113
    6. 'ligne' → logprob: -5.807629585266113
    7. 'l' → logprob: -6.057629585266113
    8. '#' → logprob: -6.182629585266113
    9. 'dern' → logprob: -6.432629585266113
    10. ' ' → logprob: -6.932629585266113

Token 657: ' affect' (ID: 7902)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.19741764664649963
    2. ' data' → logprob: -2.197417736053467
    3. ' =' → logprob: -3.822417736053467
    4. '=' → logprob: -4.072417736053467
    5. ' ' → logprob: -5.197417736053467
    6. '\n' → logprob: -5.947417736053467
    7. '0' → logprob: -5.947417736053467
    8. 'line' → logprob: -6.072417736053467
    9. ' line' → logprob: -6.197417736053467
    10. '1' → logprob: -6.197417736053467

Token 658: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.37965127825737
    2. 'ée' → logprob: -1.5046513080596924
    3. 'data' → logprob: -3.0046513080596924
    4. 'é' → logprob: -4.004651069641113
    5. 'uée' → logprob: -5.004651069641113
    6. 'u' → logprob: -5.254651069641113
    7. 'a' → logprob: -6.629651069641113
    8. 'ment' → logprob: -6.629651069641113
    9. 'ution' → logprob: -6.754651069641113
    10. 'i' → logprob: -6.754651069641113

Token 659: ' est' (ID: 893)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.005833999253809452
    2. ' data' → logprob: -5.380834102630615
    3. 'est' → logprob: -7.380834102630615
    4. '0' → logprob: -8.130833625793457
    5. 'd' → logprob: -10.130833625793457
    6. ' est' → logprob: -10.380833625793457
    7. ' =' → logprob: -10.380833625793457
    8. '
' → logprob: -10.505833625793457
    9. ' ' → logprob: -10.880833625793457
    10. '```' → logprob: -10.880833625793457

Token 660: ' prise' (ID: 43816)
  Prédit: 'effective'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'effective' → logprob: -0.394946813583374
    2. 'prise' → logprob: -1.894946813583374
    3. 'valid' → logprob: -3.269946813583374
    4. 'val' → logprob: -3.269946813583374
    5. 'visible' → logprob: -4.019947052001953
    6. 'active' → logprob: -4.144947052001953
    7. 'effect' → logprob: -4.144947052001953
    8. ' effective' → logprob: -4.519947052001953
    9. 'eff' → logprob: -4.894947052001953
    10. 'data' → logprob: -4.894947052001953

Token 661: ' en' (ID: 469)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.027522945776581764
    2. '0' → logprob: -4.902523040771484
    3. ' data' → logprob: -5.277523040771484
    4. '
' → logprob: -5.777523040771484
    5. '\' → logprob: -5.902523040771484
    6. ' =' → logprob: -6.027523040771484
    7. '  
' → logprob: -6.777523040771484
    8. '   ' → logprob: -6.777523040771484
    9. '=data' → logprob: -7.527523040771484
    10. '=' → logprob: -7.652523040771484

Token 662: ' compte' (ID: 19657)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.00016539888747502118
    2. 'charge' → logprob: -9.125164985656738
    3. '```' → logprob: -11.125164985656738
    4. ' compte' → logprob: -11.375164985656738
    5. 'cons' → logprob: -12.125164985656738
    6. 'count' → logprob: -12.125164985656738
    7. '
' → logprob: -12.125164985656738
    8. 'account' → logprob: -12.750164985656738
    9. '1' → logprob: -12.750164985656738
    10. '0' → logprob: -12.875164985656738

Token 663: ' et' (ID: 859)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.0006021226872690022
    2. '
' → logprob: -8.000601768493652
    3. '   ' → logprob: -8.500601768493652
    4. ' data' → logprob: -10.000601768493652
    5. '    
' → logprob: -11.750601768493652
    6. '```' → logprob: -13.000601768493652
    7. '  
' → logprob: -13.125601768493652
    8. ' ' → logprob: -13.875601768493652
    9. ' 
' → logprob: -14.125601768493652
    10. '	data' → logprob: -14.500601768493652

Token 664: ' donc' (ID: 14206)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.802804708480835
    2. ' eff' → logprob: -2.052804708480835
    3. 'eff' → logprob: -2.427804708480835
    4. '#' → logprob: -2.677804708480835
    5. 'effective' → logprob: -2.677804708480835
    6. 'effect' → logprob: -3.302804708480835
    7. ' data' → logprob: -3.927804708480835
    8. 'overwrite' → logprob: -4.052804946899414
    9. ' effective' → logprob: -4.552804946899414
    10. 'é' → logprob: -4.677804946899414

Token 665: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.010925323702394962
    2. ' data' → logprob: -4.76092529296875
    3. '0' → logprob: -6.76092529296875
    4. 'la' → logprob: -8.01092529296875
    5. 'effective' → logprob: -8.51092529296875
    6. '#' → logprob: -9.01092529296875
    7. 'final' → logprob: -9.26092529296875
    8. 'le' → logprob: -9.51092529296875
    9. '1' → logprob: -9.63592529296875
    10. 'correct' → logprob: -10.13592529296875

Token 666: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.4418171455617994e-05
    2. '0' → logprob: -10.500044822692871
    3. '=' → logprob: -11.875044822692871
    4. ' =' → logprob: -12.125044822692871
    5. '```' → logprob: -13.125044822692871
    6. ' [' → logprob: -14.250044822692871
    7. '\[' → logprob: -14.750044822692871
    8. '
' → logprob: -14.875044822692871
    9. '[
' → logprob: -15.250044822692871
    10. '.setdefault' → logprob: -15.625044822692871

Token 667: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.129266067640856e-05
    2. ' ' → logprob: -11.500020980834961
    3. '[' → logprob: -12.000020980834961
    4. '{' → logprob: -12.500020980834961
    5. '```' → logprob: -13.875020980834961
    6. ']' → logprob: -16.12502098083496
    7. '
' → logprob: -16.37502098083496
    8. '   ' → logprob: -17.37502098083496
    9. '=' → logprob: -17.50002098083496
    10. '{
' → logprob: -18.12502098083496

Token 668: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00036287534749135375
    2. ']=' → logprob: -8.12536334991455
    3. ' ]' → logprob: -10.12536334991455
    4. '']' → logprob: -10.75036334991455
    5. '=' → logprob: -12.87536334991455
    6. '"]' → logprob: -14.37536334991455
    7. '   ' → logprob: -14.62536334991455
    8. ']
' → logprob: -15.12536334991455
    9. ' =' → logprob: -15.25036334991455
    10. '[' → logprob: -15.25036334991455

Token 669: ' ==' (ID: 951)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.020547492429614067
    2. ' =' → logprob: -3.895547389984131
    3. ']' → logprob: -12.770547866821289
    4. ']=' → logprob: -13.270547866821289
    5. ' ' → logprob: -14.895547866821289
    6. '=

' → logprob: -15.770547866821289
    7. '=
' → logprob: -15.895547866821289
    8. ')' → logprob: -16.27054786682129
    9. ')=' → logprob: -16.64554786682129
    10. '[' → logprob: -16.77054786682129

Token 670: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5716304410016164e-05
    2. ' ' → logprob: -10.250035285949707
    3. '0' → logprob: -15.500035285949707
    4. '   ' → logprob: -17.750036239624023
    5. '```' → logprob: -18.625036239624023
    6. '`' → logprob: -18.750036239624023
    7. '=' → logprob: -19.250036239624023
    8. '  ' → logprob: -19.812536239624023
    9. '
' → logprob: -20.000036239624023
    10. '2' → logprob: -20.312536239624023

Token 671: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.625000953674316
    3. '0' → logprob: -16.250001907348633
    4. '`' → logprob: -19.125001907348633
    5. '```' → logprob: -19.250001907348633
    6. '   ' → logprob: -20.250001907348633
    7. '2' → logprob: -21.250001907348633
    8. '۱' → logprob: -21.625001907348633
    9. '...' → logprob: -21.687501907348633
    10. '**' → logprob: -21.750001907348633

Token 672: ' à' (ID: 1221)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.1087040901184082
    2. '   ' → logprob: -2.358704090118408
    3. '
' → logprob: -4.983704090118408
    4. ' data' → logprob: -7.233704090118408
    5. '    
' → logprob: -7.858704090118408
    6. ' ' → logprob: -9.10870361328125
    7. '  
' → logprob: -9.73370361328125
    8. '```' → logprob: -9.85870361328125
    9. '	data' → logprob: -9.85870361328125
    10. ',
' → logprob: -10.48370361328125

Token 673: ' la' (ID: 557)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.10446035116910934
    2. '1' → logprob: -2.7294602394104004
    3. 'la' → logprob: -4.7294602394104
    4. 'the' → logprob: -4.8544602394104
    5. 'data' → logprob: -5.2294602394104
    6. ' la' → logprob: -5.6044602394104
    7. ' final' → logprob: -5.8544602394104
    8. 'fin' → logprob: -6.2294602394104
    9. '#' → logprob: -6.8544602394104
    10. ' the' → logprob: -8.354460716247559

Token 674: ' fin' (ID: 2131)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.3729932904243469
    2. 'return' → logprob: -2.122993230819702
    3. '#' → logprob: -3.372993230819702
    4. 'data' → logprob: -3.372993230819702
    5. '1' → logprob: -3.997993230819702
    6. '```' → logprob: -3.997993230819702
    7. '}' → logprob: -4.122993469238281
    8. '{' → logprob: -4.747993469238281
    9. ')' → logprob: -4.747993469238281
    10. '{}' → logprob: -4.872993469238281

Token 675: '.
' (ID: 558)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.00115307851228863
    2. '   ' → logprob: -7.376152992248535
    3. '
' → logprob: -7.626152992248535
    4. ' data' → logprob: -11.376152992248535
    5. '    
' → logprob: -11.501152992248535
    6. '```' → logprob: -12.001152992248535
    7. '	data' → logprob: -13.376152992248535
    8. '  
' → logprob: -13.626152992248535
    9. ' ' → logprob: -13.751152992248535
    10. ' 
' → logprob: -14.376152992248535

Token 676: '   ' (ID: 271)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.008941661566495895
    2. '   ' → logprob: -4.758941650390625
    3. '```' → logprob: -8.383941650390625
    4. '	data' → logprob: -10.008941650390625
    5. ' data' → logprob: -11.008941650390625
    6. '``' → logprob: -11.258941650390625
    7. '    
' → logprob: -11.508941650390625
    8. '
' → logprob: -12.008941650390625
    9. '\data' → logprob: -12.258941650390625
    10. ' ' → logprob: -14.133941650390625

Token 677: ' #' (ID: 1069)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.004237954970449209
    2. '   ' → logprob: -5.504238128662109
    3. ' data' → logprob: -9.00423812866211
    4. '```' → logprob: -11.00423812866211
    5. '
' → logprob: -11.37923812866211
    6. '	data' → logprob: -12.50423812866211
    7. '    
' → logprob: -13.37923812866211
    8. ' ' → logprob: -13.50423812866211
    9. '``' → logprob: -14.62923812866211
    10. '\data' → logprob: -14.87923812866211

Token 678: ' Cela' (ID: 44403)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -4.727905979962088e-05
    2. ' data' → logprob: -11.12504768371582
    3. '   ' → logprob: -11.25004768371582
    4. '```' → logprob: -11.37504768371582
    5. '
' → logprob: -12.00004768371582
    6. ' ' → logprob: -15.37504768371582
    7. '``' → logprob: -15.37504768371582
    8. '0' → logprob: -15.50004768371582
    9. 'd' → logprob: -15.62504768371582
    10. '    
' → logprob: -15.62504768371582

Token 679: ' semble' (ID: 42899)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.14688141644001007
    2. '=' → logprob: -2.896881341934204
    3. '
' → logprob: -3.896881341934204
    4. ' =' → logprob: -3.896881341934204
    5. ' data' → logprob: -4.271881580352783
    6. '#' → logprob: -4.271881580352783
    7. '=data' → logprob: -5.271881580352783
    8. 'continue' → logprob: -6.771881580352783
    9. '=
' → logprob: -7.021881580352783
    10. '

' → logprob: -7.396881580352783

Token 680: ' être' (ID: 9104)
  Prédit: ' intentional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intentional' → logprob: -1.275197982788086
    2. 'int' → logprob: -2.025197982788086
    3. 'data' → logprob: -2.150197982788086
    4. ' data' → logprob: -2.150197982788086
    5. '#' → logprob: -2.775197982788086
    6. ' être' → logprob: -3.275197982788086
    7. 'être' → logprob: -3.525197982788086
    8. 'ind' → logprob: -3.900197982788086
    9. 'a' → logprob: -3.900197982788086
    10. 'contr' → logprob: -4.025197982788086

Token 681: ' une' (ID: 2463)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.7368839383125305
    2. ' intentional' → logprob: -1.7368838787078857
    3. 'une' → logprob: -2.4868838787078857
    4. '1' → logprob: -2.9868838787078857
    5. ' data' → logprob: -2.9868838787078857
    6. ' une' → logprob: -2.9868838787078857
    7. '#' → logprob: -3.2368838787078857
    8. 'un' → logprob: -3.4868838787078857
    9. 'intent' → logprob: -4.361884117126465
    10. 'int' → logprob: -4.611884117126465

Token 682: ' ast' (ID: 12004)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.44283559918403625
    2. 'bug' → logprob: -2.567835569381714
    3. 'part' → logprob: -2.817835569381714
    4. 'data' → logprob: -3.442835569381714
    5. 'ligne' → logprob: -3.442835569381714
    6. 'd' → logprob: -4.067835807800293
    7. 'clé' → logprob: -4.317835807800293
    8. '#' → logprob: -4.442835807800293
    9. 'del' → logprob: -4.692835807800293
    10. 'ty' → logprob: -5.067835807800293

Token 683: 'uce' (ID: 20747)
  Prédit: 'uce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uce' → logprob: -0.06165469437837601
    2. 'uc' → logprob: -2.936654806137085
    3. 'ute' → logprob: -5.686654567718506
    4. 'u' → logprob: -7.686654567718506
    5. 'e' → logprob: -7.936654567718506
    6. '#' → logprob: -7.936654567718506
    7. 'é' → logprob: -7.936654567718506
    8. 'up' → logprob: -8.436655044555664
    9. 'ère' → logprob: -8.686655044555664
    10. 'uces' → logprob: -8.936655044555664

Token 684: ' de' (ID: 334)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.040052592754364014
    2. '
' → logprob: -3.415052652359009
    3. 'for' → logprob: -5.91505241394043
    4. ' data' → logprob: -6.66505241394043
    5. '   ' → logprob: -7.04005241394043
    6. 'pour' → logprob: -7.41505241394043
    7. '

' → logprob: -9.04005241394043
    8. ' for' → logprob: -9.16505241394043
    9. '  
' → logprob: -9.54005241394043
    10. '#' → logprob: -9.54005241394043

Token 685: ' code' (ID: 3490)
  Prédit: 'programm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'programm' → logprob: -0.6732469201087952
    2. 'code' → logprob: -1.7982468605041504
    3. 'data' → logprob: -2.5482468605041504
    4. 'program' → logprob: -2.7982468605041504
    5. 'jeu' → logprob: -3.0482468605041504
    6. 'dé' → logprob: -4.04824686050415
    7. 'python' → logprob: -4.17324686050415
    8. 'cod' → logprob: -4.17324686050415
    9. '#' → logprob: -4.17324686050415
    10. 'initial' → logprob: -4.54824686050415

Token 686: ' ou' (ID: 2031)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.035003527998924255
    2. '
' → logprob: -4.035003662109375
    3. '   ' → logprob: -5.535003662109375
    4. ' data' → logprob: -5.660003662109375
    5. '.' → logprob: -6.160003662109375
    6. '  
' → logprob: -6.785003662109375
    7. ',
' → logprob: -6.910003662109375
    8. ',' → logprob: -7.035003662109375
    9. '\n' → logprob: -7.410003662109375
    10. ' ' → logprob: -7.535003662109375

Token 687: ' un' (ID: 537)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.19637195765972137
    2. ' data' → logprob: -2.6963720321655273
    3. ' un' → logprob: -3.1963720321655273
    4. '#' → logprob: -3.5713720321655273
    5. 'un' → logprob: -4.071372032165527
    6. ' intentional' → logprob: -4.696372032165527
    7. 'a' → logprob: -5.196372032165527
    8. ' une' → logprob: -5.321372032165527
    9. 'une' → logprob: -6.571372032165527
    10. ' a' → logprob: -6.571372032165527

Token 688: ' hérit' (ID: 188340)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.45869967341423035
    2. 'bug' → logprob: -1.8336997032165527
    3. '#' → logprob: -3.0836997032165527
    4. 'd' → logprob: -3.4586997032165527
    5. ' data' → logprob: -3.8336997032165527
    6. 'hack' → logprob: -4.333699703216553
    7. 'tr' → logprob: -4.458699703216553
    8. 'detail' → logprob: -4.708699703216553
    9. '```' → logprob: -4.833699703216553
    10. 'feature' → logprob: -5.333699703216553

Token 689: 'age' (ID: 477)
  Prédit: 'age'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'age' → logprob: -0.00012308525037951767
    2. 'agé' → logprob: -10.250123023986816
    3. 'race' → logprob: -10.750123023986816
    4. 'rage' → logprob: -10.875123023986816
    5. 'agée' → logprob: -11.125123023986816
    6. 'ag' → logprob: -12.250123023986816
    7. 'range' → logprob: -12.250123023986816
    8. 'data' → logprob: -12.875123023986816
    9. 'page' → logprob: -12.875123023986816
    10. 'tage' → logprob: -13.250123023986816

Token 690: ' d' (ID: 272)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.019023802131414413
    2. ' data' → logprob: -4.644023895263672
    3. '
' → logprob: -6.019023895263672
    4. 'de' → logprob: -6.519023895263672
    5. ',
' → logprob: -6.644023895263672
    6. ',' → logprob: -7.019023895263672
    7. 'd' → logprob: -7.769023895263672
    8. '.' → logprob: -7.894023895263672
    9. '#' → logprob: -8.144023895263672
    10. '   ' → logprob: -8.269023895263672

Token 691: ''une' (ID: 13337)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.39103397727012634
    2. 'une' → logprob: -2.141033887863159
    3. 'e' → logprob: -2.766033887863159
    4. 'a' → logprob: -3.141033887863159
    5. ' data' → logprob: -3.141033887863159
    6. 'code' → logprob: -3.891033887863159
    7. '#' → logprob: -4.516034126281738
    8. ''une' → logprob: -5.641034126281738
    9. 'é' → logprob: -5.766034126281738
    10. 'ecode' → logprob: -6.391034126281738

Token 692: ' version' (ID: 3926)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8404425382614136
    2. 'data' → logprob: -1.2154425382614136
    3. 'ancienne' → logprob: -2.590442657470703
    4. 'ligne' → logprob: -3.465442657470703
    5. 'bug' → logprob: -3.840442657470703
    6. '```' → logprob: -4.090442657470703
    7. 'ancien' → logprob: -4.215442657470703
    8. 'code' → logprob: -4.465442657470703
    9. 'test' → logprob: -4.590442657470703
    10. ' data' → logprob: -4.590442657470703

Token 693: ' précédente' (ID: 177319)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.4316076934337616
    2. ' précédente' → logprob: -1.806607723236084
    3. ' data' → logprob: -2.931607723236084
    4. ' ant' → logprob: -3.806607723236084
    5. '[data' → logprob: -4.056607723236084
    6. '   ' → logprob: -4.556607723236084
    7. ' precedente' → logprob: -4.556607723236084
    8. '=data' → logprob: -4.806607723236084
    9. 'ancienne' → logprob: -4.806607723236084
    10. ' previous' → logprob: -4.931607723236084

Token 694: '.
' (ID: 558)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.0074588460847735405
    2. '   ' → logprob: -5.632458686828613
    3. '
' → logprob: -6.257458686828613
    4. ',
' → logprob: -7.507458686828613
    5. '.
' → logprob: -7.507458686828613
    6. ' data' → logprob: -8.257458686828613
    7. ')
' → logprob: -9.007458686828613
    8. '.' → logprob: -9.132458686828613
    9. ',' → logprob: -10.007458686828613
    10. '    
' → logprob: -10.382458686828613

Token 695: '   ' (ID: 271)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.0002518031978979707
    2. '   ' → logprob: -9.375251770019531
    3. '```' → logprob: -9.500251770019531
    4. '
' → logprob: -9.625251770019531
    5. ' data' → logprob: -11.875251770019531
    6. '``' → logprob: -11.875251770019531
    7. '    
' → logprob: -12.375251770019531
    8. '	data' → logprob: -12.750251770019531
    9. '  
' → logprob: -13.250251770019531
    10. '\data' → logprob: -13.500251770019531

Token 696: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' (adapté à ' data') → logprob: -1.1637164789135568e-05
    2. '   ' → logprob: -12.125011444091797
    3. '
' → logprob: -12.625011444091797
    4. ' data' → logprob: -12.875011444091797
    5. '```' → logprob: -15.500011444091797
    6. '{
' → logprob: -17.000011444091797
    7. '    
' → logprob: -17.625011444091797
    8. 'd' → logprob: -17.625011444091797
    9. 'dat' → logprob: -18.125011444091797
    10. '	data' → logprob: -18.125011444091797

Token 697: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001334559783572331
    2. '=' → logprob: -9.125133514404297
    3. ' =' → logprob: -11.000133514404297
    4. '=[' → logprob: -12.750133514404297
    5. ' [' → logprob: -12.875133514404297
    6. '```' → logprob: -14.000133514404297
    7. '\[' → logprob: -14.625133514404297
    8. '0' → logprob: -15.250133514404297
    9. '={' → logprob: -15.500133514404297
    10. '[
' → logprob: -15.875133514404297

Token 698: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2842308680992573e-05
    2. ' ' → logprob: -10.750022888183594
    3. '   ' → logprob: -14.375022888183594
    4. '-' → logprob: -15.500022888183594
    5. '{' → logprob: -15.750022888183594
    6. ']' → logprob: -15.875022888183594
    7. '[' → logprob: -16.875022888183594
    8. '  ' → logprob: -17.125022888183594
    9. '```' → logprob: -17.250022888183594
    10. '=' → logprob: -17.437522888183594

Token 699: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00030721822986379266
    2. ']=' → logprob: -8.375307083129883
    3. ' ]' → logprob: -9.500307083129883
    4. '=' → logprob: -13.625307083129883
    5. '']' → logprob: -15.500307083129883
    6. ']
' → logprob: -15.875307083129883
    7. '"]' → logprob: -16.750307083129883
    8. ' =' → logprob: -16.875307083129883
    9. ']

' → logprob: -17.125307083129883
    10. '`]' → logprob: -17.125307083129883

Token 700: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048587486147880554
    2. ' =' → logprob: -3.0485875606536865
    3. ' ' → logprob: -16.798587799072266
    4. ',' → logprob: -17.298587799072266
    5. ']=' → logprob: -17.298587799072266
    6. '=

' → logprob: -17.673587799072266
    7. '=}' → logprob: -18.048587799072266
    8. '=
' → logprob: -18.048587799072266
    9. ']' → logprob: -18.173587799072266
    10. ')=' → logprob: -18.423587799072266

Token 701: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016212785616517067
    2. '0' → logprob: -4.1412129402160645
    3. ' ' → logprob: -8.641212463378906
    4. '   ' → logprob: -13.703712463378906
    5. '2' → logprob: -15.891212463378906
    6. '' → logprob: -16.141212463378906
    7. '  ' → logprob: -16.578712463378906
    8. '۱' → logprob: -17.328712463378906
    9. '	' → logprob: -17.453712463378906
    10. '    ' → logprob: -17.578712463378906

Token 702: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.167648876318708e-05
    2. '0' → logprob: -10.250041961669922
    3. ' ' → logprob: -12.000041961669922
    4. '   ' → logprob: -17.250041961669922
    5. '2' → logprob: -17.875041961669922
    6. '' → logprob: -18.875041961669922
    7. '  ' → logprob: -19.062541961669922
    8. '۱' → logprob: -19.125041961669922
    9. '１' → logprob: -19.937541961669922
    10. '```' → logprob: -19.937541961669922

Token 703: '
' (ID: 198)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.29096853733062744
    2. '
' → logprob: -1.9159685373306274
    3. '   ' → logprob: -2.290968418121338
    4. '    
' → logprob: -6.540968418121338
    5. ' data' → logprob: -6.665968418121338
    6. '  
' → logprob: -7.415968418121338
    7. ' 
' → logprob: -7.915968418121338
    8. '   
' → logprob: -8.665968894958496
    9. '	data' → logprob: -9.415968894958496
    10. ' ' → logprob: -10.665968894958496

Token 704: '   ' (ID: 271)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.05720122158527374
    2. '   ' → logprob: -3.1822011470794678
    3. '
' → logprob: -4.682201385498047
    4. ' data' → logprob: -5.432201385498047
    5. '	data' → logprob: -8.432201385498047
    6. '    
' → logprob: -9.557201385498047
    7. ' 
' → logprob: -9.682201385498047
    8. ' ' → logprob: -10.432201385498047
    9. '```' → logprob: -11.307201385498047
    10. '\data' → logprob: -11.307201385498047

Token 705: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' (adapté à ' data') → logprob: -0.0014060672838240862
    2. '   ' → logprob: -6.751406192779541
    3. ' data' → logprob: -8.376405715942383
    4. '	data' → logprob: -12.251405715942383
    5. '
' → logprob: -15.001405715942383
    6. ' ' → logprob: -15.751405715942383
    7. '\data' → logprob: -15.876405715942383
    8. '```' → logprob: -16.501405715942383
    9. '0' → logprob: -17.251405715942383
    10. '  ' → logprob: -17.626405715942383

Token 706: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.117345684382599e-05
    2. '0' → logprob: -12.000020980834961
    3. '=' → logprob: -12.125020980834961
    4. ' [' → logprob: -12.500020980834961
    5. '[
' → logprob: -13.250020980834961
    6. '```' → logprob: -13.750020980834961
    7. ' =' → logprob: -14.125020980834961
    8. '\[' → logprob: -14.375020980834961
    9. '   ' → logprob: -14.750020980834961
    10. '
' → logprob: -15.375020980834961

Token 707: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '   ' → logprob: -20.125
    4. '1' → logprob: -20.125
    5. '[' → logprob: -20.5
    6. '  ' → logprob: -21.5
    7. '۰' → logprob: -21.5
    8. '０' → logprob: -22.375
    9. '    ' → logprob: -22.9375
    10. '```' → logprob: -23.125

Token 708: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004113692557439208
    2. ']=' → logprob: -8.375411033630371
    3. '=' → logprob: -8.625411033630371
    4. ' ]' → logprob: -13.750411033630371
    5. ' =' → logprob: -16.500411987304688
    6. '}' → logprob: -17.125411987304688
    7. ')' → logprob: -17.500411987304688
    8. '']' → logprob: -17.875411987304688
    9. ']
' → logprob: -17.875411987304688
    10. '>' → logprob: -19.250411987304688

Token 709: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008614808320999146
    2. ' =' → logprob: -4.758615016937256
    3. '=
' → logprob: -16.258615493774414
    4. '=}' → logprob: -16.383615493774414
    5. '=

' → logprob: -16.633615493774414
    6. '1' → logprob: -18.258615493774414
    7. ' ' → logprob: -18.758615493774414
    8. '＝' → logprob: -19.383615493774414
    9. '<|end|>' → logprob: -19.508615493774414
    10. '.=' → logprob: -19.758615493774414

Token 710: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -20.43757438659668
    4. '0' → logprob: -20.43757438659668
    5. '```' → logprob: -20.43757438659668
    6. '۱' → logprob: -20.50007438659668
    7. '１' → logprob: -20.68757438659668
    8. ' ' → logprob: -21.25007438659668
    9. '' → logprob: -21.68757438659668
    10. '১' → logprob: -21.87507438659668

Token 711: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '0' → logprob: -21.125
    4. '```' → logprob: -22.0
    5. '۱' → logprob: -22.5
    6. '   ' → logprob: -23.25
    7. '১' → logprob: -23.25
    8. '１' → logprob: -23.25
    9. '१' → logprob: -23.625
    10. '<|end|>' → logprob: -24.0

Token 712: '

' (ID: 279)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3561752438545227
    2. '   ' → logprob: -1.606175184249878
    3. '<|end|>' → logprob: -2.481175184249878
    4. ')' → logprob: -5.231175422668457
    5. 'def' → logprob: -6.231175422668457
    6. 'a' → logprob: -6.231175422668457
    7. '<|end|>' → logprob: -7.231175422668457
    8. ' #' → logprob: -7.481175422668457
    9. ' ' → logprob: -7.481175422668457
    10. '    ' → logprob: -7.731175422668457

Token 713: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.10907304286956787
    2. '#' → logprob: -3.2340731620788574
    3. '   ' → logprob: -4.234073162078857
    4. 'f' → logprob: -4.484073162078857
    5. 'stack' → logprob: -5.484073162078857
    6. 'res' → logprob: -5.484073162078857
    7. 'memo' → logprob: -5.984073162078857
    8. 'max' → logprob: -5.984073162078857
    9. 'ans' → logprob: -6.359073162078857
    10. 'cnt' → logprob: -6.484073162078857

Token 714: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.503357470035553
    2. '#' (adapté à ' #') → logprob: -2.128357410430908
    3. '   ' → logprob: -2.503357410430908
    4. 'res' → logprob: -3.628357410430908
    5. 'max' → logprob: -3.753357410430908
    6. 'f' → logprob: -3.878357410430908
    7. 'm' → logprob: -4.253357410430908
    8. 'ans' → logprob: -5.003357410430908
    9. 'pos' → logprob: -5.003357410430908
    10. 'stack' → logprob: -5.128357410430908

Token 715: ' AFF' (ID: 130169)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9896950125694275
    2. 'min' → logprob: -1.9896950721740723
    3. 'm' → logprob: -2.1146950721740723
    4. 'max' → logprob: -2.3646950721740723
    5. 'mx' → logprob: -2.9896950721740723
    6. '#' → logprob: -3.3646950721740723
    7. 'mn' → logprob: -4.364695072174072
    8. 'res' → logprob: -4.489695072174072
    9. 'def' → logprob: -4.489695072174072
    10. 'f' → logprob: -4.614695072174072

Token 716: 'ICH' (ID: 49878)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.8664448857307434
    2. 'ichage' → logprob: -1.3664448261260986
    3. 'IN' → logprob: -1.8664448261260986
    4. '#' → logprob: -2.1164448261260986
    5. 'ICH' → logprob: -3.8664448261260986
    6. '```' → logprob: -5.491445064544678
    7. 'In' → logprob: -5.616445064544678
    8. 'E' → logprob: -5.616445064544678
    9. 'Ich' → logprob: -6.116445064544678
    10. 'A' → logprob: -6.116445064544678

Token 717: 'AGE' (ID: 6582)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.12926484644412994
    2. 'ichage' → logprob: -2.3792648315429688
    3. '   ' → logprob: -5.004264831542969
    4. 'print' → logprob: -5.129264831542969
    5. '```' → logprob: -6.129264831542969
    6. ')' → logprob: -6.254264831542969
    7. 'E' → logprob: -6.379264831542969
    8. '()' → logprob: -6.379264831542969
    9. 'I' → logprob: -6.379264831542969
    10. 'age' → logprob: -6.754264831542969

Token 718: ' COMMENT' (ID: 97831)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005619804374873638
    2. '   ' → logprob: -5.755620002746582
    3. 'for' → logprob: -6.380620002746582
    4. '#print' → logprob: -8.505620002746582
    5. 'data' → logprob: -8.755620002746582
    6. ')' → logprob: -8.880620002746582
    7. '#' → logprob: -9.255620002746582
    8. '```' → logprob: -9.505620002746582
    9. 'return' → logprob: -10.880620002746582
    10. ' print' → logprob: -11.880620002746582

Token 719: 'É' (ID: 5859)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.005372845567762852
    2. '   ' → logprob: -5.505373001098633
    3. '#print' → logprob: -7.505373001098633
    4. ' #' → logprob: -8.755373001098633
    5. '=' → logprob: -9.380373001098633
    6. '.' → logprob: -9.880373001098633
    7. 'def' → logprob: -10.130373001098633
    8. '...' → logprob: -10.130373001098633
    9. ')' → logprob: -10.255373001098633
    10. 'é' → logprob: -10.380373001098633

Token 720: ' =' (ID: 314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.008971082977950573
    2. '   ' → logprob: -4.758971214294434
    3. '#print' → logprob: -8.383971214294434
    4. ' #' → logprob: -9.258971214294434
    5. '#index' → logprob: -11.758971214294434
    6. '#if' → logprob: -12.883971214294434
    7. '#__' → logprob: -13.008971214294434
    8. '﻿#' → logprob: -13.133971214294434
    9. '#a' → logprob: -13.258971214294434
    10. '```' → logprob: -13.383971214294434

Token 721: ' print' (ID: 2123)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.001098418957553804
    2. '#print' → logprob: -7.2510986328125
    3. '   ' → logprob: -8.5010986328125
    4. ' #' → logprob: -8.6260986328125
    5. '#import' → logprob: -13.7510986328125
    6. '#do' → logprob: -13.8760986328125
    7. '#index' → logprob: -14.0010986328125
    8. '```' → logprob: -14.5010986328125
    9. '#line' → logprob: -14.6260986328125
    10. '#if' → logprob: -14.8760986328125

Token 722: '(comp' (ID: 60272)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.26826581358909607
    2. '(' → logprob: -1.7682658433914185
    3. '(len' → logprob: -4.018265724182129
    4. '("")' → logprob: -4.393265724182129
    5. '#' → logprob: -4.893265724182129
    6. '(#' → logprob: -5.018265724182129
    7. '("' → logprob: -5.018265724182129
    8. '(
' → logprob: -6.268265724182129
    9. '(a' → logprob: -6.268265724182129
    10. 'a' → logprob: -6.393265724182129

Token 723: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016077011823654175
    2. ')#' → logprob: -7.126607894897461
    3. '#' → logprob: -7.376607894897461
    4. '[' → logprob: -9.751607894897461
    5. ',' → logprob: -10.001607894897461
    6. '))' → logprob: -10.876607894897461
    7. ')
' → logprob: -11.126607894897461
    8. ' )' → logprob: -11.751607894897461
    9. '(' → logprob: -12.001607894897461
    10. '   ' → logprob: -12.501607894897461

Token 724: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15883342921733856
    2. '<|end|>' → logprob: -2.9088335037231445
    3. ')' → logprob: -3.2838335037231445
    4. '#' → logprob: -3.4088335037231445
    5. '(' → logprob: -5.4088335037231445
    6. '    ' → logprob: -5.7838335037231445
    7. ' ' → logprob: -5.9088335037231445
    8. 'a' → logprob: -6.0338335037231445
    9. '[' → logprob: -6.1588335037231445
    10. '.' → logprob: -6.9088335037231445

Token 725: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33454692363739014
    2. '#' (adapté à ' #') → logprob: -1.3345469236373901
    3. ')' → logprob: -5.33454704284668
    4. '    ' → logprob: -5.83454704284668
    5. '<|end|>' → logprob: -5.83454704284668
    6. 'return' → logprob: -6.58454704284668
    7. '    
' → logprob: -6.70954704284668
    8. 'for' → logprob: -7.08454704284668
    9. ' #' → logprob: -7.08454704284668
    10. 'pass' → logprob: -7.58454704284668

Token 726: ' Il' (ID: 5329)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7137210965156555
    2. '#' → logprob: -1.2137210369110107
    3. ')' → logprob: -2.3387210369110107
    4. 'a' → logprob: -4.33872127532959
    5. 'def' → logprob: -4.46372127532959
    6. 'dp' → logprob: -4.46372127532959
    7. 'n' → logprob: -4.58872127532959
    8. '(' → logprob: -4.71372127532959
    9. 'max' → logprob: -4.96372127532959
    10. 'return' → logprob: -4.96372127532959

Token 727: ' s' (ID: 265)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0068557970225811005
    2. ' semble' → logprob: -6.2568559646606445
    3. ' #' → logprob: -6.3818559646606445
    4. ')' → logprob: -7.0068559646606445
    5. ' n' → logprob: -7.3818559646606445
    6. ' faut' → logprob: -8.506855964660645
    7. 'n' → logprob: -8.506855964660645
    8. '=' → logprob: -8.756855964660645
    9. ' a' → logprob: -9.006855964660645
    10. ' est' → logprob: -9.256855964660645

Token 728: ''agit' (ID: 72975)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0030540041625499725
    2. '=' → logprob: -6.628054141998291
    3. ')' → logprob: -7.003054141998291
    4. ' #' → logprob: -9.128053665161133
    5. '#a' → logprob: -9.253053665161133
    6. 'a' → logprob: -9.378053665161133
    7. '')' → logprob: -9.503053665161133
    8. ''' → logprob: -9.628053665161133
    9. ''est' → logprob: -10.253053665161133
    10. 'e' → logprob: -10.378053665161133

Token 729: ' d' (ID: 272)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7144134044647217
    2. 'd' → logprob: -0.7144134044647217
    3. 'de' → logprob: -4.464413642883301
    4. ' d' → logprob: -4.839413642883301
    5. 'du' → logprob: -7.089413642883301
    6. ' de' → logprob: -8.3394136428833
    7. 'des' → logprob: -9.0894136428833
    8. ' #' → logprob: -9.7144136428833
    9. '#print' → logprob: -9.7144136428833
    10. ')' → logprob: -10.2144136428833

Token 730: ''un' (ID: 9788)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.5488236546516418
    2. ''un' → logprob: -1.798823595046997
    3. ''une' → logprob: -2.173823595046997
    4. 'un' → logprob: -2.423823595046997
    5. '#' → logprob: -2.923823595046997
    6. 'a' → logprob: -8.298823356628418
    7. ''#' → logprob: -8.798823356628418
    8. 'u' → logprob: -9.048823356628418
    9. ''' → logprob: -9.923823356628418
    10. 'unes' → logprob: -10.048823356628418

Token 731: ' dé' (ID: 2393)
  Prédit: 'comment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comment' → logprob: -0.6428077816963196
    2. '#' → logprob: -0.8928077816963196
    3. 'print' → logprob: -3.892807722091675
    4. 'code' → logprob: -4.142807960510254
    5. ' commentaire' → logprob: -4.392807960510254
    6. 'd' → logprob: -5.892807960510254
    7. 'com' → logprob: -6.392807960510254
    8. 'rem' → logprob: -6.642807960510254
    9. 'debug' → logprob: -6.892807960510254
    10. '#print' → logprob: -7.142807960510254

Token 732: 'bog' (ID: 32302)
  Prédit: 'bug'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bug' → logprob: -0.1420837640762329
    2. '#' → logprob: -2.3920836448669434
    3. 'bog' → logprob: -4.017083644866943
    4. 'f' → logprob: -5.142083644866943
    5. 'but' → logprob: -5.892083644866943
    6. 'l' → logprob: -5.892083644866943
    7. '```' → logprob: -6.142083644866943
    8. 'la' → logprob: -6.392083644866943
    9. 'BUG' → logprob: -6.767083644866943
    10. 'ug' → logprob: -6.892083644866943

Token 733: 'age' (ID: 477)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.28584668040275574
    2. '#' → logprob: -1.7858467102050781
    3. 'ueur' → logprob: -3.410846710205078
    4. 'ue' → logprob: -3.535846710205078
    5. 'age' → logprob: -4.410846710205078
    6. 'ué' → logprob: -5.410846710205078
    7. '#print' → logprob: -7.035846710205078
    8. 'print' → logprob: -8.035846710205078
    9. '```' → logprob: -8.035846710205078
    10. 'ued' → logprob: -9.785846710205078

Token 734: ' option' (ID: 5317)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5418555736541748
    2. '#' → logprob: -1.0418555736541748
    3. '<|end|>' → logprob: -3.291855573654175
    4. ')' → logprob: -3.791855573654175
    5. ' #' → logprob: -6.791855812072754
    6. ',' → logprob: -7.041855812072754
    7. '<|end|>' → logprob: -7.041855812072754
    8. '
' → logprob: -7.166855812072754
    9. '    
' → logprob: -7.666855812072754
    10. '#print' → logprob: -8.541855812072754

Token 735: 'nel' (ID: 10085)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.015762876719236374
    2. 'é' → logprob: -4.890762805938721
    3. '#print' → logprob: -5.390762805938721
    4. 'aire' → logprob: -6.515762805938721
    5. ' #' → logprob: -7.515762805938721
    6. 'print' → logprob: -8.515763282775879
    7. '   ' → logprob: -8.515763282775879
    8. 'naire' → logprob: -8.765763282775879
    9. 'ié' → logprob: -8.765763282775879
    10. 'u' → logprob: -8.890763282775879

Token 736: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2701577842235565
    2. '<|end|>' → logprob: -2.270157814025879
    3. ')' → logprob: -2.770157814025879
    4. '#' → logprob: -3.270157814025879
    5. '    
' → logprob: -4.395157814025879
    6. '\n' → logprob: -4.895157814025879
    7. ',' → logprob: -5.770157814025879
    8. '<|end|>' → logprob: -6.395157814025879
    9. '  
' → logprob: -6.520157814025879
    10. '.' → logprob: -6.895157814025879

Token 737: ' observer' (ID: 40527)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.6104177236557007
    2. 'v' → logprob: -1.4854177236557007
    3. '#' → logprob: -1.7354177236557007
    4. 'visual' → logprob: -3.1104178428649902
    5. 'voir' → logprob: -5.48541784286499
    6. ' vérifier' → logprob: -5.98541784286499
    7. 'compr' → logprob: -7.48541784286499
    8. ' comprendre' → logprob: -8.110417366027832
    9. 'su' → logprob: -8.485417366027832
    10. 'print' → logprob: -8.610417366027832

Token 738: ' l' (ID: 305)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.032101821154356
    2. '   ' → logprob: -3.53210186958313
    3. '#print' → logprob: -6.407101631164551
    4. 'la' → logprob: -7.657101631164551
    5. '#a' → logprob: -9.65710163116455
    6. 'le' → logprob: -10.03210163116455
    7. ' #' → logprob: -10.28210163116455
    8. ' la' → logprob: -10.28210163116455
    9. '#index' → logprob: -10.65710163116455
    10. 'len' → logprob: -12.03210163116455

Token 739: ''association' (ID: 152592)
  Prédit: ''état'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''état' → logprob: -0.35382911562919617
    2. 'a' → logprob: -1.7288291454315186
    3. 'e' → logprob: -3.2288291454315186
    4. '#' → logprob: -3.2288291454315186
    5. ''évolution' → logprob: -4.2288289070129395
    6. 'es' → logprob: -4.7288289070129395
    7. ''organisation' → logprob: -4.9788289070129395
    8. ''ensemble' → logprob: -6.2288289070129395
    9. ''ordre' → logprob: -6.4788289070129395
    10. ''espace' → logprob: -6.9788289070129395

Token 740: ' valeur' (ID: 41664)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0904583930969238
    2. 'des' → logprob: -1.2154583930969238
    3. '   ' → logprob: -2.340458393096924
    4. 'entre' → logprob: -2.840458393096924
    5. '<|end|>' → logprob: -2.965458393096924
    6. ' entre' → logprob: -2.965458393096924
    7. ' des' → logprob: -3.590458393096924
    8. ' between' → logprob: -4.215458393096924
    9. ')' → logprob: -4.340458393096924
    10. 'between' → logprob: -4.465458393096924

Token 741: ' initial' (ID: 4871)
  Prédit: 'unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'unique' → logprob: -1.201035737991333
    2. '<|end|>' → logprob: -1.326035737991333
    3. ',' → logprob: -2.076035737991333
    4. '#' → logprob: -2.326035737991333
    5. ' unique' → logprob: -2.576035737991333
    6. 's' → logprob: -2.951035737991333
    7. '_unique' → logprob: -3.201035737991333
    8. '   ' → logprob: -4.701035499572754
    9. ' #' → logprob: -4.701035499572754
    10. ')' → logprob: -5.451035499572754

Token 742: 'e' (ID: 68)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3814789056777954
    2. '#' → logprob: -2.006478786468506
    3. ' ->' → logprob: -2.131478786468506
    4. ' et' → logprob: -2.506478786468506
    5. '<|end|>' → logprob: -3.131478786468506
    6. '->' → logprob: -3.256478786468506
    7. 'et' → logprob: -3.381478786468506
    8. '=>' → logprob: -3.631478786468506
    9. ' à' → logprob: -3.631478786468506
    10. ':' → logprob: -3.631478786468506

Token 743: ' <' (ID: 464)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0602799654006958
    2. ',' → logprob: -1.3102799654006958
    3. ')' → logprob: -1.4352799654006958
    4. '   ' → logprob: -3.0602798461914062
    5. 'des' → logprob: -3.5602798461914062
    6. ' et' → logprob: -4.810279846191406
    7. '<|end|>' → logprob: -4.810279846191406
    8. 'et' → logprob: -4.935279846191406
    9. '#print' → logprob: -5.435279846191406
    10. ' #' → logprob: -5.435279846191406

Token 744: '->' (ID: 609)
  Prédit: '->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.09028926491737366
    2. '-->' → logprob: -3.090289354324341
    3. '=>' → logprob: -3.340289354324341
    4. '--' → logprob: -6.215289115905762
    5. ' ->' → logprob: -7.090289115905762
    6. '-' → logprob: -7.465289115905762
    7. 'et' → logprob: -8.090289115905762
    8. ',' → logprob: -8.465289115905762
    9. '→' → logprob: -8.590289115905762
    10. '–' → logprob: -8.715289115905762

Token 745: ' compacte' (ID: 186860)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.4381188154220581
    2. 'compressed' → logprob: -2.1881189346313477
    3. 'compress' → logprob: -2.3131189346313477
    4. 'position' → logprob: -2.5631189346313477
    5. 'compression' → logprob: -4.063118934631348
    6. 'comp' → logprob: -4.188118934631348
    7. 'indice' → logprob: -4.188118934631348
    8. 'index' → logprob: -5.563118934631348
    9. 'code' → logprob: -5.688118934631348
    10. 'com' → logprob: -6.188118934631348

Token 746: '.


' (ID: 8525)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22729340195655823
    2. '<|end|>' → logprob: -1.7272933721542358
    3. ')' → logprob: -4.852293491363525
    4. '#' → logprob: -4.977293491363525
    5. '    
' → logprob: -5.352293491363525
    6. '    ' → logprob: -5.977293491363525
    7. '
' → logprob: -7.352293491363525
    8. '...' → logprob: -7.477293491363525
    9. '<|end|>' → logprob: -7.602293491363525
    10. '  ' → logprob: -7.977293491363525

Token 747: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.779936671257019
    2. '#' → logprob: -1.779936671257019
    3. 'max' → logprob: -2.5299367904663086
    4. '   ' → logprob: -2.9049367904663086
    5. 'stack' → logprob: -3.0299367904663086
    6. 'res' → logprob: -3.6549367904663086
    7. 'for' → logprob: -4.404936790466309
    8. 'f' → logprob: -4.529936790466309
    9. 'cur' → logprob: -4.654936790466309
    10. 'pos' → logprob: -4.654936790466309

Token 748: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -1.1592050790786743
    2. 'min' → logprob: -1.1592050790786743
    3. 'm' → logprob: -2.4092049598693848
    4. 'dp' → logprob: -2.7842049598693848
    5. 'max' → logprob: -3.0342049598693848
    6. '   ' → logprob: -4.159204959869385
    7. 'x' → logprob: -4.659204959869385
    8. 'pos' → logprob: -4.659204959869385
    9. 'mx' → logprob: -4.659204959869385
    10. 'l' → logprob: -4.784204959869385

Token 749: ' Cré' (ID: 109203)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7697837948799133
    2. 'min' → logprob: -1.3947837352752686
    3. 'm' → logprob: -2.6447837352752686
    4. 'res' → logprob: -3.3947837352752686
    5. 'pos' → logprob: -3.5197837352752686
    6. 'max' → logprob: -3.5197837352752686
    7. 'idx' → logprob: -3.6447837352752686
    8. 'mx' → logprob: -4.519783973693848
    9. 'f' → logprob: -5.019783973693848
    10. 'mn' → logprob: -5.144783973693848

Token 750: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.0002562137378845364
    2. '#' → logprob: -8.625256538391113
    3. 'er' → logprob: -10.000256538391113
    4. 'a' → logprob: -11.500256538391113
    5. 'd' → logprob: -12.250256538391113
    6. 'tion' → logprob: -12.625256538391113
    7. 'lation' → logprob: -12.750256538391113
    8. 'action' → logprob: -13.375256538391113
    9. 'al' → logprob: -13.875256538391113
    10. '```' → logprob: -13.875256538391113

Token 751: ' et' (ID: 859)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.40292370319366455
    2. 'd' → logprob: -1.7779237031936646
    3. ' d' → logprob: -2.652923583984375
    4. '   ' → logprob: -3.152923583984375
    5. ' dp' → logprob: -3.652923583984375
    6. 'de' → logprob: -5.027923583984375
    7. '#' → logprob: -5.527923583984375
    8. ' of' → logprob: -5.527923583984375
    9. ' de' → logprob: -6.277923583984375
    10. 'f' → logprob: -6.402923583984375

Token 752: ' initial' (ID: 4871)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.010981322266161442
    2. 'stack' → logprob: -5.385981559753418
    3. ' dp' → logprob: -6.010981559753418
    4. '#' → logprob: -6.260981559753418
    5. 'import' → logprob: -8.385981559753418
    6. 'memo' → logprob: -8.510981559753418
    7. 'f' → logprob: -8.635981559753418
    8. 'm' → logprob: -9.135981559753418
    9. 'def' → logprob: -9.260981559753418
    10. 'a' → logprob: -9.260981559753418

Token 753: 'isation' (ID: 6993)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.04792921245098114
    2. 'isation' → logprob: -3.672929286956787
    3. 'ation' → logprob: -4.797929286956787
    4. 'atisation' → logprob: -4.797929286956787
    5. 'a' → logprob: -5.797929286956787
    6. 'ais' → logprob: -7.172929286956787
    7. '#' → logprob: -7.922929286956787
    8. 't' → logprob: -8.922928810119629
    9. 'at' → logprob: -9.172928810119629
    10. 'ast' → logprob: -10.047928810119629

Token 754: ' de' (ID: 334)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.014936319552361965
    2. 'd' → logprob: -4.889936447143555
    3. ' dp' → logprob: -5.264936447143555
    4. ' of' → logprob: -7.264936447143555
    5. '   ' → logprob: -7.639936447143555
    6. 'of' → logprob: -8.264936447143555
    7. 'f' → logprob: -8.389936447143555
    8. ' d' → logprob: -9.139936447143555
    9. 'de' → logprob: -9.639936447143555
    10. '	dp' → logprob: -10.014936447143555

Token 755: ' la' (ID: 557)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.011589433997869492
    2. 'f' → logprob: -4.636589527130127
    3. 'd' → logprob: -8.011589050292969
    4. 'res' → logprob: -8.511589050292969
    5. 'ans' → logprob: -8.761589050292969
    6. 'l' → logprob: -8.886589050292969
    7. 'lst' → logprob: -9.261589050292969
    8. 'un' → logprob: -9.386589050292969
    9. 'g' → logprob: -9.386589050292969
    10. ' dp' → logprob: -9.511589050292969

Token 756: ' table' (ID: 3293)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.014594977721571922
    2. 'liste' → logprob: -4.389595031738281
    3. 'list' → logprob: -7.014595031738281
    4. 'lst' → logprob: -8.389595031738281
    5. 'dict' → logprob: -8.514595031738281
    6. 'table' → logprob: -8.639595031738281
    7. 'f' → logprob: -9.014595031738281
    8. 'memo' → logprob: -9.264595031738281
    9. 'd' → logprob: -9.389595031738281
    10. 'stack' → logprob: -9.764595031738281

Token 757: ' de' (ID: 334)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0667906180024147
    2. ' =' → logprob: -3.4417905807495117
    3. ' dp' → logprob: -3.9417905807495117
    4. 'f' → logprob: -4.941790580749512
    5. 'DP' → logprob: -6.066790580749512
    6. '=' → logprob: -6.691790580749512
    7. '   ' → logprob: -7.816790580749512
    8. '_dp' → logprob: -7.816790580749512
    9. ' f' → logprob: -7.941790580749512
    10. 'd' → logprob: -8.441790580749512

Token 758: ' programmation' (ID: 166376)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0018316576024517417
    2. 'memo' → logprob: -6.751831531524658
    3. 'val' → logprob: -8.001832008361816
    4. '```' → logprob: -9.751832008361816
    5. 'm' → logprob: -9.876832008361816
    6. ' dp' → logprob: -10.126832008361816
    7. 'd' → logprob: -10.251832008361816
    8. 'multip' → logprob: -10.751832008361816
    9. 'DP' → logprob: -10.876832008361816
    10. 'mé' → logprob: -11.376832008361816

Token 759: ' dynamique' (ID: 98708)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0005697138840332627
    2. 'd' → logprob: -9.125569343566895
    3. ' dp' → logprob: -9.125569343566895
    4. '   ' → logprob: -9.375569343566895
    5. 'f' → logprob: -9.625569343566895
    6. ' dynamique' → logprob: -9.875569343566895
    7. '```' → logprob: -10.000569343566895
    8. 'a' → logprob: -10.500569343566895
    9. 'DP' → logprob: -11.000569343566895
    10. 'dynamic' → logprob: -11.250569343566895

Token 760: ' '' (ID: 461)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.002663765801116824
    2. ' dp' → logprob: -6.252663612365723
    3. 'DP' → logprob: -7.752663612365723
    4. 'f' → logprob: -9.002663612365723
    5. 'd' → logprob: -10.002663612365723
    6. '	dp' → logprob: -10.502663612365723
    7. 'D' → logprob: -10.627663612365723
    8. '   ' → logprob: -10.877663612365723
    9. '(dp' → logprob: -11.127663612365723
    10. '_dp' → logprob: -11.627663612365723

Token 761: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.002134675160050392
    2. 'DP' → logprob: -7.127134799957275
    3. 'f' → logprob: -7.377134799957275
    4. 'd' → logprob: -8.877134323120117
    5. 'memo' → logprob: -9.377134323120117
    6. 'res' → logprob: -9.752134323120117
    7. 'F' → logprob: -9.877134323120117
    8. 'ans' → logprob: -10.127134323120117
    9. 'D' → logprob: -10.252134323120117
    10. 'tab' → logprob: -10.377134323120117

Token 762: ''.
' (ID: 49980)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24197901785373688
    2. ''' → logprob: -2.2419791221618652
    3. '=' → logprob: -2.3669791221618652
    4. '']' → logprob: -4.616979122161865
    5. '')' → logprob: -6.741979122161865
    6. '='' → logprob: -6.991979122161865
    7. 'a' → logprob: -7.491979122161865
    8. ']' → logprob: -7.991979122161865
    9. '`' → logprob: -8.116978645324707
    10. ''=' → logprob: -8.116978645324707

Token 763: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0034591832663863897
    2. '   ' → logprob: -5.8784589767456055
    3. ' dp' → logprob: -7.3784589767456055
    4. '	dp' → logprob: -10.753458976745605
    5. '
' → logprob: -12.503458976745605
    6. '[' → logprob: -13.878458976745605
    7. 'import' → logprob: -14.378458976745605
    8. 'd' → logprob: -14.503458976745605
    9. '```' → logprob: -14.753458976745605
    10. ' ' → logprob: -14.878458976745605

Token 764: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07408546656370163
    2. ' dp' → logprob: -3.0740854740142822
    3. '   ' → logprob: -3.6990854740142822
    4. '[' → logprob: -8.074085235595703
    5. '	dp' → logprob: -10.199085235595703
    6. ' [' → logprob: -10.574085235595703
    7. '
' → logprob: -10.949085235595703
    8. ' ' → logprob: -11.324085235595703
    9. '  ' → logprob: -12.449085235595703
    10. '[
' → logprob: -12.574085235595703

Token 765: ' Il' (ID: 5329)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00012570773833431304
    2. ' dp' → logprob: -9.000125885009766
    3. '   ' → logprob: -13.250125885009766
    4. 'd' → logprob: -16.125125885009766
    5. 'import' → logprob: -16.125125885009766
    6. '	dp' → logprob: -16.125125885009766
    7. ' ' → logprob: -16.500125885009766
    8. '
' → logprob: -17.125125885009766
    9. '```' → logprob: -18.250125885009766
    10. 'dt' → logprob: -18.500125885009766

Token 766: ' s' (ID: 265)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.26514992117881775
    2. ' =' → logprob: -1.5151499509811401
    3. 's' → logprob: -5.01515007019043
    4. 'dp' → logprob: -5.39015007019043
    5. '[' → logprob: -7.39015007019043
    6. '=[' → logprob: -7.76515007019043
    7. '=[]' → logprob: -8.76515007019043
    8. ']' → logprob: -9.14015007019043
    9. ')' → logprob: -9.51515007019043
    10. 'a' → logprob: -9.64015007019043

Token 767: ''agit' (ID: 72975)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4547068476676941
    2. 'dp' → logprob: -1.5797069072723389
    3. 's' → logprob: -2.079706907272339
    4. '=[]' → logprob: -4.07970666885376
    5. '=[' → logprob: -5.32970666885376
    6. 'a' → logprob: -6.07970666885376
    7. ' =' → logprob: -6.20470666885376
    8. '='' → logprob: -6.20470666885376
    9. '=s' → logprob: -6.45470666885376
    10. 'f' → logprob: -7.20470666885376

Token 768: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.7105099558830261
    2. 'd' → logprob: -1.085510015487671
    3. '   ' → logprob: -2.585510015487671
    4. '=' → logprob: -3.960510015487671
    5. ' =' → logprob: -4.085509777069092
    6. ' de' → logprob: -4.210509777069092
    7. '[' → logprob: -4.335509777069092
    8. '[]' → logprob: -4.335509777069092
    9. ']' → logprob: -5.210509777069092
    10. 'de' → logprob: -5.585509777069092

Token 769: ''une' (ID: 13337)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.253127783536911
    2. ''une' → logprob: -1.7531278133392334
    3. 'une' → logprob: -4.378127574920654
    4. '[[' → logprob: -4.378127574920654
    5. ''un' → logprob: -4.753127574920654
    6. 'e' → logprob: -4.753127574920654
    7. '[]' → logprob: -5.878127574920654
    8. ' [' → logprob: -6.003127574920654
    9. ' une' → logprob: -6.878127574920654
    10. '’une' → logprob: -7.878127574920654

Token 770: ' liste' (ID: 31719)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.23128193616867065
    2. '[[' → logprob: -1.6062819957733154
    3. ' [' → logprob: -6.356281757354736
    4. 'default' → logprob: -6.981281757354736
    5. ' [[' → logprob: -6.981281757354736
    6. '[]' → logprob: -7.106281757354736
    7. 'dict' → logprob: -7.731281757354736
    8. '[
' → logprob: -8.231282234191895
    9. '{}' → logprob: -8.856282234191895
    10. 'list' → logprob: -9.106282234191895

Token 771: ' à' (ID: 1221)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9011581540107727
    2. 'de' → logprob: -1.901158094406128
    3. ' =' → logprob: -2.151158094406128
    4. 'dp' → logprob: -2.401158094406128
    5. ' de' → logprob: -2.526158094406128
    6. '   ' → logprob: -2.901158094406128
    7. '=' → logprob: -3.401158094406128
    8. '=[' → logprob: -3.901158094406128
    9. ' of' → logprob: -4.401158332824707
    10. '[]' → logprob: -5.401158332824707

Token 772: ' deux' (ID: 10301)
  Prédit: '[N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.2337854951620102
    2. '[' → logprob: -1.7337855100631714
    3. '[n' → logprob: -3.858785390853882
    4. '[[' → logprob: -4.858785629272461
    5. 'N' → logprob: -7.483785629272461
    6. '0' → logprob: -7.483785629272461
    7. '[len' → logprob: -7.608785629272461
    8. 'len' → logprob: -7.608785629272461
    9. ' [' → logprob: -9.358785629272461
    10. '[l' → logprob: -9.358785629272461

Token 773: ' dimensions' (ID: 23995)
  Prédit: 'dimensions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dimensions' → logprob: -0.3864113688468933
    2. '[' → logprob: -1.886411428451538
    3. 'dim' → logprob: -1.886411428451538
    4. ']' → logprob: -5.136411190032959
    5. 'dimension' → logprob: -6.136411190032959
    6. '[[' → logprob: -6.136411190032959
    7. 'd' → logprob: -6.386411190032959
    8. ' dimensions' → logprob: -6.386411190032959
    9. '[]' → logprob: -7.011411190032959
    10. 'dims' → logprob: -7.511411190032959

Token 774: ' (' (ID: 350)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.029746446758508682
    2. ' dp' → logprob: -3.6547465324401855
    3. ' =' → logprob: -6.7797465324401855
    4. '[' → logprob: -7.0297465324401855
    5. ',' → logprob: -7.1547465324401855
    6. '   ' → logprob: -9.029746055603027
    7. '=' → logprob: -9.404746055603027
    8. ' of' → logprob: -9.529746055603027
    9. '[[' → logprob: -9.654746055603027
    10. '_dp' → logprob: -10.029746055603027

Token 775: 'mat' (ID: 8872)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.9829816818237305
    2. '[N' → logprob: -0.9829816818237305
    3. 'dp' → logprob: -2.7329816818237305
    4. ' N' → logprob: -3.1079816818237305
    5. '(N' → logprob: -3.3579816818237305
    6. ')' → logprob: -3.6079816818237305
    7. '[[' → logprob: -3.7329816818237305
    8. 'n' → logprob: -4.4829816818237305
    9. 'mod' → logprob: -4.7329816818237305
    10. '[' → logprob: -5.1079816818237305

Token 776: 'rice' (ID: 44478)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1031049489974976
    2. 'rix' → logprob: -1.3531049489974976
    3. ']' → logprob: -1.6031049489974976
    4. 'ix' → logprob: -2.728105068206787
    5. '[
' → logprob: -4.103105068206787
    6. 'rices' → logprob: -4.228105068206787
    7. 'rice' → logprob: -4.228105068206787
    8. 'dp' → logprob: -4.353105068206787
    9. '][' → logprob: -4.603105068206787
    10. 'riz' → logprob: -4.603105068206787

Token 777: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03601321578025818
    2. ' =' → logprob: -4.661013126373291
    3. 'dp' → logprob: -5.411013126373291
    4. ',' → logprob: -5.661013126373291
    5. ' de' → logprob: -5.911013126373291
    6. '[' → logprob: -5.911013126373291
    7. '),' → logprob: -6.036013126373291
    8. '   ' → logprob: -6.286013126373291
    9. '=[[' → logprob: -6.786013126373291
    10. ']' → logprob: -6.911013126373291

Token 778: ' de' (ID: 334)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2090042233467102
    2. ' =' → logprob: -1.9590041637420654
    3. ' dp' → logprob: -3.5840041637420654
    4. '[' → logprob: -4.7090044021606445
    5. '=' → logprob: -5.5840044021606445
    6. ',' → logprob: -6.2090044021606445
    7. '   ' → logprob: -6.2090044021606445
    8. ' of' → logprob: -7.5840044021606445
    9. '[
' → logprob: -7.7090044021606445
    10. ' de' → logprob: -7.9590044021606445

Token 779: ' taille' (ID: 41644)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6497872471809387
    2. 'size' → logprob: -1.774787187576294
    3. '[' → logprob: -2.524787187576294
    4. '[[' → logprob: -2.774787187576294
    5. '[N' → logprob: -3.024787187576294
    6. '(N' → logprob: -3.524787187576294
    7. '(' → logprob: -3.899787187576294
    8. ' taille' → logprob: -4.274787425994873
    9. '(n' → logprob: -4.524787425994873
    10. '[n' → logprob: -4.649787425994873

Token 780: ' [' (ID: 723)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.42768606543540955
    2. ' (' → logprob: -1.552686095237732
    3. '[N' → logprob: -3.0526859760284424
    4. '(n' → logprob: -3.1776859760284424
    5. '(len' → logprob: -4.4276862144470215
    6. '[n' → logprob: -4.4276862144470215
    7. '(' → logprob: -5.3026862144470215
    8. '[len' → logprob: -5.4276862144470215
    9. 'N' → logprob: -5.6776862144470215
    10. '[' → logprob: -6.3026862144470215

Token 781: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.08036889880895615
    2. 'len' → logprob: -3.455368995666504
    3. '(N' → logprob: -3.955368995666504
    4. ' N' → logprob: -4.330368995666504
    5. '2' → logprob: -4.955368995666504
    6. 'n' → logprob: -6.705368995666504
    7. '(len' → logprob: -6.955368995666504
    8. '(' → logprob: -7.580368995666504
    9. ' (' → logprob: -7.705368995666504
    10. '101' → logprob: -7.705368995666504

Token 782: '][' (ID: 2696)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11627058684825897
    2. '][' → logprob: -2.4912705421447754
    3. ' +' → logprob: -3.6162705421447754
    4. '   ' → logprob: -11.116271018981934
    5. '[' → logprob: -11.491271018981934
    6. ' ][' → logprob: -11.616271018981934
    7. '+
' → logprob: -11.991271018981934
    8. '```' → logprob: -12.241271018981934
    9. ',' → logprob: -12.616271018981934
    10. ']' → logprob: -12.741271018981934

Token 783: 'len' (ID: 3303)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5639351010322571
    2. 'len' → logprob: -0.9389351010322571
    3. 'max' → logprob: -3.9389350414276123
    4. '(N' → logprob: -4.813935279846191
    5. '(len' → logprob: -5.188935279846191
    6. '(max' → logprob: -6.313935279846191
    7. ' N' → logprob: -7.063935279846191
    8. 'a' → logprob: -7.438935279846191
    9. '(' → logprob: -7.438935279846191
    10. ' len' → logprob: -7.438935279846191

Token 784: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0031657181680202484
    2. '(comp' → logprob: -6.1281657218933105
    3. '(data' → logprob: -7.2531657218933105
    4. 'a' → logprob: -8.503165245056152
    5. '(h' → logprob: -10.378165245056152
    6. '(H' → logprob: -11.128165245056152
    7. 'comp' → logprob: -11.878165245056152
    8. 'H' → logprob: -12.003165245056152
    9. '(' → logprob: -12.878165245056152
    10. 'data' → logprob: -13.503165245056152

Token 785: ')+' (ID: 16161)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.22843331098556519
    2. '+' → logprob: -1.72843337059021
    3. ')' → logprob: -4.603433132171631
    4. ')+' → logprob: -5.228433132171631
    5. ']' → logprob: -5.353433132171631
    6. ']+' → logprob: -5.728433132171631
    7. ' +' → logprob: -6.603433132171631
    8. ']]' → logprob: -7.728433132171631
    9. '[' → logprob: -8.103433609008789
    10. ')]
' → logprob: -8.478433609008789

Token 786: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.47521519660949707
    2. '2' → logprob: -0.9752151966094971
    3. ' ' → logprob: -7.725214958190918
    4. 'N' → logprob: -8.350214958190918
    5. 'len' → logprob: -8.475214958190918
    6. '(N' → logprob: -9.975214958190918
    7. ']' → logprob: -10.350214958190918
    8. '3' → logprob: -10.475214958190918
    9. '(len' → logprob: -10.600214958190918
    10. '
' → logprob: -10.725214958190918

Token 787: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011147352633997798
    2. '],' → logprob: -7.376114845275879
    3. ' ]' → logprob: -7.876114845275879
    4. ']
' → logprob: -10.251114845275879
    5. '].' → logprob: -10.501114845275879
    6. '][' → logprob: -11.001114845275879
    7. ')]' → logprob: -11.876114845275879
    8. ']]' → logprob: -12.626114845275879
    9. ']
' → logprob: -12.626114845275879
    10. '[' → logprob: -12.876114845275879

Token 788: ' rempl' (ID: 66326)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.16368214786052704
    2. '[[' → logprob: -2.538682222366333
    3. 'dtype' → logprob: -3.663682222366333
    4. ' dp' → logprob: -3.913682222366333
    5. '[' → logprob: -4.538681983947754
    6. '0' → logprob: -5.288681983947754
    7. ' [[' → logprob: -5.288681983947754
    8. ' dtype' → logprob: -6.288681983947754
    9. ' [' → logprob: -6.788681983947754
    10. '   ' → logprob: -7.163681983947754

Token 789: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.011709724552929401
    2. 'ée' → logprob: -4.636709690093994
    3. '   ' → logprob: -7.136709690093994
    4. 'e' → logprob: -8.261710166931152
    5. 'i' → logprob: -8.511710166931152
    6. 'ue' → logprob: -8.761710166931152
    7. 'ies' → logprob: -9.386710166931152
    8. 'a' → logprob: -9.636710166931152
    9. 'ee' → logprob: -10.136710166931152
    10. 'ied' → logprob: -10.261710166931152

Token 790: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6405357122421265
    2. '[' → logprob: -1.6405357122421265
    3. 'de' → logprob: -2.390535831451416
    4. 'with' → logprob: -3.140535831451416
    5. ' avec' → logprob: -3.265535831451416
    6. '=' → logprob: -3.265535831451416
    7. ' with' → logprob: -3.890535831451416
    8. 'avec' → logprob: -4.140535831451416
    9. ' =' → logprob: -5.265535831451416
    10. '0' → logprob: -5.265535831451416

Token 791: ' z' (ID: 579)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00026646157493814826
    2. ' ' → logprob: -8.500266075134277
    3. '[' → logprob: -10.000266075134277
    4. '1' → logprob: -11.375266075134277
    5. ' [' → logprob: -13.125266075134277
    6. ' zeros' → logprob: -13.625266075134277
    7. 'zeros' → logprob: -13.875266075134277
    8. '-' → logprob: -14.625266075134277
    9. 'False' → logprob: -15.562766075134277
    10. 'int' → logprob: -15.812766075134277

Token 792: 'éros' (ID: 120888)
  Prédit: 'éros'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éros' → logprob: -0.07140828669071198
    2. 'eros' → logprob: -2.946408271789551
    3. 'éro' → logprob: -4.446408271789551
    4. 'ero' → logprob: -5.696408271789551
    5. '0' → logprob: -7.696408271789551
    6. 'é' → logprob: -7.821408271789551
    7. 'e' → logprob: -8.32140827178955
    8. '[' → logprob: -8.94640827178955
    9. 'er' → logprob: -9.94640827178955
    10. 'ér' → logprob: -11.69640827178955

Token 793: '.
' (ID: 558)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6444588303565979
    2. '   ' → logprob: -1.0194587707519531
    3. ']' → logprob: -2.894458770751953
    4. ',' → logprob: -3.894458770751953
    5. '.' → logprob: -4.519458770751953
    6. 'for' → logprob: -4.769458770751953
    7. ' =' → logprob: -5.269458770751953
    8. ' for' → logprob: -6.019458770751953
    9. '=' → logprob: -6.269458770751953
    10. ' dp' → logprob: -6.269458770751953

Token 794: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0001830410328693688
    2. '   ' → logprob: -9.00018310546875
    3. ' dp' → logprob: -9.75018310546875
    4. '	dp' → logprob: -14.25018310546875
    5. '```' → logprob: -15.50018310546875
    6. '[' → logprob: -15.75018310546875
    7. 'd' → logprob: -16.62518310546875
    8. ' ' → logprob: -17.12518310546875
    9. '
' → logprob: -17.25018310546875
    10. '_dp' → logprob: -17.75018310546875

Token 795: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00036299455678090453
    2. ' dp' → logprob: -8.50036334991455
    3. '   ' → logprob: -8.75036334991455
    4. '	dp' → logprob: -14.50036334991455
    5. '[' → logprob: -14.87536334991455
    6. '[[' → logprob: -16.125362396240234
    7. ' ' → logprob: -17.375362396240234
    8. '```' → logprob: -17.500362396240234
    9. '[
' → logprob: -17.750362396240234
    10. '_dp' → logprob: -18.375362396240234

Token 796: ' Chaque' (ID: 94758)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00015312091272789985
    2. ' dp' → logprob: -9.375153541564941
    3. '   ' → logprob: -9.625153541564941
    4. 'd' → logprob: -14.125153541564941
    5. '[' → logprob: -15.000153541564941
    6. '	dp' → logprob: -15.000153541564941
    7. '```' → logprob: -15.375153541564941
    8. '
' → logprob: -15.375153541564941
    9. ' ' → logprob: -16.375152587890625
    10. '[[' → logprob: -16.500152587890625

Token 797: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7343671321868896
    2. '[' → logprob: -1.2343671321868896
    3. ' dp' → logprob: -2.1093671321868896
    4. ' [' → logprob: -3.1093671321868896
    5. '[
' → logprob: -3.4843671321868896
    6. 'row' → logprob: -4.609367370605469
    7. ' row' → logprob: -4.734367370605469
    8. ']' → logprob: -5.984367370605469
    9. '_' → logprob: -6.234367370605469
    10. ' [
' → logprob: -6.359367370605469

Token 798: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20155726373195648
    2. '[i' → logprob: -2.201557159423828
    3. '=' → logprob: -3.326557159423828
    4. '[N' → logprob: -4.451557159423828
    5. '.append' → logprob: -4.576557159423828
    6. '[' → logprob: -4.826557159423828
    7. '=[' → logprob: -6.826557159423828
    8. '[n' → logprob: -6.951557159423828
    9. ']' → logprob: -7.201557159423828
    10. '[row' → logprob: -7.576557159423828

Token 799: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.10346533358097076
    2. ']' → logprob: -2.3534653186798096
    3. ' ][' → logprob: -7.478465557098389
    4. ']][' → logprob: -7.728465557098389
    5. ']=' → logprob: -7.728465557098389
    6. '=' → logprob: -7.853465557098389
    7. '].' → logprob: -8.10346508026123
    8. '[i' → logprob: -8.47846508026123
    9. '   ' → logprob: -8.60346508026123
    10. '][]' → logprob: -8.97846508026123

Token 800: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.014529075473546982
    2. '0' → logprob: -4.389529228210449
    3. ']' → logprob: -7.514529228210449
    4. 'a' → logprob: -7.764529228210449
    5. 'e' → logprob: -8.01452922821045
    6. ' j' → logprob: -8.38952922821045
    7. 'k' → logprob: -9.38952922821045
    8. 'i' → logprob: -9.76452922821045
    9. '
' → logprob: -9.76452922821045
    10. '][' → logprob: -10.26452922821045

Token 801: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006609973032027483
    2. ' ]' → logprob: -5.131609916687012
    3. ']=' → logprob: -7.756609916687012
    4. '][' → logprob: -8.756609916687012
    5. ' ][' → logprob: -11.006609916687012
    6. '[' → logprob: -11.006609916687012
    7. '=' → logprob: -11.131609916687012
    8. '[i' → logprob: -12.256609916687012
    9. '   ' → logprob: -12.256609916687012
    10. ']+=' → logprob: -12.381609916687012

Token 802: ' représente' (ID: 88912)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07238443195819855
    2. ' =' → logprob: -2.6973843574523926
    3. ']' → logprob: -6.572384357452393
    4. ']=' → logprob: -6.947384357452393
    5. '[' → logprob: -10.94738483428955
    6. ' ' → logprob: -11.32238483428955
    7. ' ]' → logprob: -11.69738483428955
    8. '=[' → logprob: -11.69738483428955
    9. 'for' → logprob: -11.94738483428955
    10. '][' → logprob: -12.82238483428955

Token 803: ' habit' (ID: 13260)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08723895251750946
    2. ' ' → logprob: -3.2122390270233154
    3. ' un' → logprob: -3.9622390270233154
    4. ' la' → logprob: -4.462238788604736
    5. ' une' → logprob: -5.337238788604736
    6. ' le' → logprob: -6.337238788604736
    7. 'un' → logprob: -6.712238788604736
    8. 'l' → logprob: -7.212238788604736
    9. 'la' → logprob: -7.462238788604736
    10. 'le' → logprob: -7.587238788604736

Token 804: 'uellement' (ID: 36026)
  Prédit: 'uel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uel' → logprob: -0.9288957715034485
    2. 'ation' → logprob: -1.6788957118988037
    3. 'u' → logprob: -2.0538957118988037
    4. 'ual' → logprob: -2.6788957118988037
    5. 'ue' → logprob: -2.8038957118988037
    6. 'uellement' → logprob: -3.1788957118988037
    7. 'uer' → logprob: -3.4288957118988037
    8. 'a' → logprob: -3.9288957118988037
    9. 'uation' → logprob: -4.178895950317383
    10. '[' → logprob: -5.053895950317383

Token 805: ' le' (ID: 505)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13570180535316467
    2. ' ' → logprob: -3.135701894760132
    3. ' un' → logprob: -3.385701894760132
    4. ' une' → logprob: -3.510701894760132
    5. ' la' → logprob: -4.385701656341553
    6. 'un' → logprob: -6.385701656341553
    7. ' le' → logprob: -7.260701656341553
    8. 'dp' → logprob: -7.260701656341553
    9. ' ways' → logprob: -7.635701656341553
    10. 'l' → logprob: -7.635701656341553

Token 806: ' nombre' (ID: 9733)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6591405868530273
    2. 'nombre' → logprob: -1.2841405868530273
    3. ' nombre' → logprob: -1.6591405868530273
    4. 'count' → logprob: -5.909140586853027
    5. ' ' → logprob: -6.284140586853027
    6. ' number' → logprob: -6.409140586853027
    7. 's' → logprob: -7.034140586853027
    8. 'number' → logprob: -7.284140586853027
    9. 'nb' → logprob: -7.409140586853027
    10. ' résultat' → logprob: -7.534140586853027

Token 807: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.047519564628601
    2. ' ' → logprob: -1.922519564628601
    3. ' d' → logprob: -1.922519564628601
    4. '[' → logprob: -2.0475196838378906
    5. ' of' → logprob: -2.9225196838378906
    6. '<|end|>' → logprob: -3.4225196838378906
    7. '=' → logprob: -4.172519683837891
    8. '  ' → logprob: -4.172519683837891
    9. '    ' → logprob: -4.297519683837891
    10. 'd' → logprob: -4.422519683837891

Token 808: ' façons' (ID: 165958)
  Prédit: ' façons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' façons' → logprob: -0.45496711134910583
    2. 'man' → logprob: -1.5799671411514282
    3. 'fa' → logprob: -1.9549671411514282
    4. 'ways' → logprob: -4.704967021942139
    5. ' man' → logprob: -6.204967021942139
    6. ' fa' → logprob: -6.704967021942139
    7. ' ' → logprob: -7.079967021942139
    8. '   ' → logprob: -7.204967021942139
    9. '```' → logprob: -7.204967021942139
    10. ' ways' → logprob: -7.579967021942139

Token 809: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.6104859113693237
    2. 'de' → logprob: -1.6104859113693237
    3. '[i' → logprob: -1.7354859113693237
    4. '   ' → logprob: -1.9854859113693237
    5. ' ' → logprob: -2.4854860305786133
    6. ')' → logprob: -2.6104860305786133
    7. '<|end|>' → logprob: -3.6104860305786133
    8. ' i' → logprob: -3.6104860305786133
    9. 'd' → logprob: -3.8604860305786133
    10. ' d' → logprob: -4.110486030578613

Token 810: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.4291123151779175
    2. 'i' → logprob: -2.179112434387207
    3. '[' → logprob: -2.429112434387207
    4. '   ' → logprob: -2.679112434387207
    5. ' traiter' → logprob: -2.804112434387207
    6. ']' → logprob: -3.179112434387207
    7. ' ' → logprob: -3.429112434387207
    8. '_' → logprob: -3.429112434387207
    9. ' construire' → logprob: -3.679112434387207
    10. ' i' → logprob: -4.054112434387207

Token 811: 'atte' (ID: 23975)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.6743349432945251
    2. 'faire' → logprob: -1.67433500289917
    3. 'cho' → logprob: -2.54933500289917
    4. 'i' → logprob: -3.17433500289917
    5. 'calcul' → logprob: -3.29933500289917
    6. 'trait' → logprob: -3.54933500289917
    7. 'con' → logprob: -4.04933500289917
    8. 'comb' → logprob: -4.54933500289917
    9. 'tra' → logprob: -4.54933500289917
    10. 'tr' → logprob: -4.54933500289917

Token 812: 'indre' (ID: 28945)
  Prédit: 'indre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indre' → logprob: -0.003581657074391842
    2. 'ind' → logprob: -6.128581523895264
    3. 'nd' → logprob: -8.003582000732422
    4. 'inder' → logprob: -8.128582000732422
    5. 'i' → logprob: -8.878582000732422
    6. 'endre' → logprob: -9.003582000732422
    7. 'nder' → logprob: -9.503582000732422
    8. 'iner' → logprob: -10.378582000732422
    9. '#' → logprob: -10.378582000732422
    10. 'int' → logprob: -10.503582000732422

Token 813: ' une' (ID: 2463)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6725125908851624
    2. '0' → logprob: -1.0475125312805176
    3. ' i' → logprob: -2.5475125312805176
    4. 'j' → logprob: -3.6725125312805176
    5. ')' → logprob: -5.047512531280518
    6. '[i' → logprob: -5.172512531280518
    7. 'N' → logprob: -5.297512531280518
    8. ' ' → logprob: -5.297512531280518
    9. 'dp' → logprob: -6.297512531280518
    10. '(i' → logprob: -6.797512531280518

Token 814: ' configuration' (ID: 12282)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.529295802116394
    2. ' position' → logprob: -2.0292959213256836
    3. 'position' → logprob: -2.1542959213256836
    4. ' hauteur' → logprob: -2.2792959213256836
    5. ' valeur' → logprob: -2.4042959213256836
    6. ' i' → logprob: -2.4042959213256836
    7. 'i' → logprob: -3.1542959213256836
    8. ' certaine' → logprob: -3.4042959213256836
    9. 'certain' → logprob: -3.7792959213256836
    10. '   ' → logprob: -4.154295921325684

Token 815: ' donnée' (ID: 130126)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1458536386489868
    2. '<|end|>' → logprob: -1.8958536386489868
    3. '[i' → logprob: -2.1458535194396973
    4. '   ' → logprob: -2.7708535194396973
    5. ' donnée' → logprob: -2.8958535194396973
    6. ' i' → logprob: -2.8958535194396973
    7. ' de' → logprob: -3.5208535194396973
    8. ',' → logprob: -3.7708535194396973
    9. '_' → logprob: -3.7708535194396973
    10. ' j' → logprob: -4.020853519439697

Token 816: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1071138381958008
    2. '.' → logprob: -1.6071138381958008
    3. '[i' → logprob: -1.7321138381958008
    4. '<|end|>' → logprob: -3.232113838195801
    5. ']' → logprob: -3.607113838195801
    6. '[' → logprob: -3.607113838195801
    7. ' avec' → logprob: -3.732113838195801
    8. ')' → logprob: -3.857113838195801
    9. '   ' → logprob: -4.107113838195801
    10. ' de' → logprob: -4.107113838195801

Token 817: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0360795259475708
    2. '.' → logprob: -1.7860795259475708
    3. '   ' → logprob: -2.2860794067382812
    4. ',' → logprob: -2.4110794067382812
    5. '[i' → logprob: -2.4110794067382812
    6. '<|end|>' → logprob: -2.5360794067382812
    7. ']' → logprob: -2.7860794067382812
    8. ')' → logprob: -4.286079406738281
    9. ' ' → logprob: -4.411079406738281
    10. '[]' → logprob: -5.786079406738281

Token 818: ' #' (ID: 1069)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.4593790769577026
    2. '.' → logprob: -1.5843790769577026
    3. ' ' → logprob: -2.084379196166992
    4. ',' → logprob: -2.334379196166992
    5. '   ' → logprob: -2.834379196166992
    6. '[' → logprob: -2.834379196166992
    7. ' à' → logprob: -3.084379196166992
    8. ' avec' → logprob: -3.334379196166992
    9. '=' → logprob: -3.834379196166992
    10. ' dans' → logprob: -3.834379196166992

Token 819: ' à' (ID: 1221)
  Prédit: ' dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dans' → logprob: -1.4622491598129272
    2. ' à' → logprob: -1.8372491598129272
    3. '.' → logprob: -2.337249279022217
    4. '[i' → logprob: -2.712249279022217
    5. ' avec' → logprob: -3.087249279022217
    6. ')' → logprob: -3.212249279022217
    7. ',' → logprob: -3.212249279022217
    8. '   ' → logprob: -3.462249279022217
    9. ' pour' → logprob: -3.462249279022217
    10. 'dans' → logprob: -3.587249279022217

Token 820: ' la' (ID: 557)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.054338905960321426
    2. ' i' → logprob: -3.0543389320373535
    3. 'l' → logprob: -6.1793389320373535
    4. '   ' → logprob: -7.3043389320373535
    5. '[i' → logprob: -7.4293389320373535
    6. 'j' → logprob: -8.304338455200195
    7. ' ' → logprob: -8.429338455200195
    8. ')' → logprob: -8.429338455200195
    9. 'indice' → logprob: -8.554338455200195
    10. 'range' → logprob: -8.554338455200195

Token 821: ' position' (ID: 4010)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.031086931005120277
    2. 'j' → logprob: -4.4060869216918945
    3. ' i' → logprob: -5.7810869216918945
    4. 'state' → logprob: -6.1560869216918945
    5. 'ligne' → logprob: -6.1560869216918945
    6. '[i' → logprob: -6.6560869216918945
    7. ')' → logprob: -6.7810869216918945
    8. ']' → logprob: -7.0310869216918945
    9. 'range' → logprob: -7.1560869216918945
    10. '#' → logprob: -7.2810869216918945

Token 822: ' '' (ID: 461)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.101160928606987
    2. ' i' → logprob: -2.351161003112793
    3. '   ' → logprob: -7.851161003112793
    4. '[i' → logprob: -7.976161003112793
    5. '0' → logprob: -10.101161003112793
    6. '	i' → logprob: -10.101161003112793
    7. ' ' → logprob: -10.851161003112793
    8. 'j' → logprob: -10.976161003112793
    9. '
' → logprob: -11.101161003112793
    10. '`' → logprob: -11.476161003112793

Token 823: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004013222176581621
    2. ' i' → logprob: -5.6290130615234375
    3. 'j' → logprob: -8.004013061523438
    4. '   ' → logprob: -10.254013061523438
    5. ' ' → logprob: -11.754013061523438
    6. '  ' → logprob: -12.129013061523438
    7. ']' → logprob: -12.254013061523438
    8. ')' → logprob: -12.254013061523438
    9. ''' → logprob: -12.629013061523438
    10. '	i' → logprob: -12.879013061523438

Token 824: ''' (ID: 6)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.006451031658798456
    2. ']' → logprob: -6.00645112991333
    3. ''][' → logprob: -6.50645112991333
    4. ' ][' → logprob: -6.63145112991333
    5. '+' → logprob: -7.38145112991333
    6. ',' → logprob: -9.006450653076172
    7. '   ' → logprob: -9.131450653076172
    8. '[j' → logprob: -10.381450653076172
    9. '][:' → logprob: -10.381450653076172
    10. '[' → logprob: -10.381450653076172

Token 825: ' (' (ID: 350)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.3885329067707062
    2. ']' → logprob: -1.8885328769683838
    3. ',' → logprob: -2.013532876968384
    4. '   ' → logprob: -4.263533115386963
    5. '.' → logprob: -4.763533115386963
    6. '[' → logprob: -5.888533115386963
    7. 'for' → logprob: -6.513533115386963
    8. '#' → logprob: -6.638533115386963
    9. ' ][' → logprob: -6.638533115386963
    10. ' in' → logprob: -7.013533115386963

Token 826: 'indice' (ID: 176697)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.04045691713690758
    2. 'N' → logprob: -4.165456771850586
    3. ' j' → logprob: -4.540456771850586
    4. '0' → logprob: -5.415456771850586
    5. ')' → logprob: -6.040456771850586
    6. '   ' → logprob: -6.415456771850586
    7. 'n' → logprob: -6.790456771850586
    8. 'len' → logprob: -7.665456771850586
    9. '    ' → logprob: -7.790456771850586
    10. ' N' → logprob: -7.915456771850586

Token 827: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.464823842048645
    2. ')' → logprob: -1.714823842048645
    3. ',' → logprob: -1.839823842048645
    4. '   ' → logprob: -1.964823842048645
    5. ' dans' → logprob: -3.0898237228393555
    6. ' =' → logprob: -3.3398237228393555
    7. ' du' → logprob: -3.4648237228393555
    8. '=' → logprob: -3.7148237228393555
    9. 'de' → logprob: -3.9648237228393555
    10. '+' → logprob: -3.9648237228393555

Token 828: ' la' (ID: 557)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.6049251556396484
    2. 'l' → logprob: -1.3549251556396484
    3. 'la' → logprob: -2.6049251556396484
    4. ' la' → logprob: -3.2299251556396484
    5. ' h' → logprob: -3.3549251556396484
    6. 'H' → logprob: -3.6049251556396484
    7. ' l' → logprob: -4.729925155639648
    8. ' H' → logprob: -5.604925155639648
    9. 'élé' → logprob: -5.854925155639648
    10. ')' → logprob: -7.229925155639648

Token 829: ' hauteur' (ID: 72987)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.16878673434257507
    2. 'liste' → logprob: -2.9187867641448975
    3. 'ha' → logprob: -3.4187867641448975
    4. 'sequence' → logprob: -3.7937867641448975
    5. 'sé' → logprob: -4.418786525726318
    6. 'élé' → logprob: -4.918786525726318
    7. 'ligne' → logprob: -5.043786525726318
    8. 's' → logprob: -5.543786525726318
    9. 'for' → logprob: -5.668786525726318
    10. 'H' → logprob: -5.793786525726318

Token 830: ' h' (ID: 312)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03569474816322327
    2. '+' → logprob: -5.285694599151611
    3. ',' → logprob: -5.535694599151611
    4. 'dans' → logprob: -5.535694599151611
    5. ' dans' → logprob: -5.660694599151611
    6. ' )' → logprob: -5.660694599151611
    7. '')' → logprob: -5.910694599151611
    8. '),' → logprob: -6.035694599151611
    9. ']' → logprob: -6.160694599151611
    10. 's' → logprob: -6.285694599151611

Token 831: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7824652791023254
    2. '')' → logprob: -1.0324652194976807
    3. '])' → logprob: -3.0324652194976807
    4. '[i' → logprob: -3.4074652194976807
    5. ']' → logprob: -3.5324652194976807
    6. '[' → logprob: -4.28246545791626
    7. ''' → logprob: -4.40746545791626
    8. '][' → logprob: -4.78246545791626
    9. '),' → logprob: -4.90746545791626
    10. ''),' → logprob: -5.15746545791626

Token 832: ' et' (ID: 859)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16215656697750092
    2. '   ' → logprob: -2.537156581878662
    3. ',' → logprob: -3.412156581878662
    4. '][' → logprob: -4.162156581878662
    5. '<|end|>' → logprob: -5.662156581878662
    6. '.' → logprob: -5.787156581878662
    7. ')' → logprob: -5.912156581878662
    8. 'for' → logprob: -5.912156581878662
    9. '[' → logprob: -6.287156581878662
    10. '#' → logprob: -6.662156581878662

Token 833: ' état' (ID: 59181)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.13216902315616608
    2. ' j' → logprob: -2.132169008255005
    3. '   ' → logprob: -6.507169246673584
    4. ' (' → logprob: -7.507169246673584
    5. ' la' → logprob: -7.507169246673584
    6. '    ' → logprob: -8.132168769836426
    7. ' ' → logprob: -8.257168769836426
    8. 'index' → logprob: -8.632168769836426
    9. ' au' → logprob: -8.882168769836426
    10. '
' → logprob: -9.007168769836426

Token 834: ' compress' (ID: 34112)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.38575050234794617
    2. ' j' → logprob: -2.0107505321502686
    3. '[' → logprob: -3.2607505321502686
    4. ' =' → logprob: -3.6357505321502686
    5. 'j' → logprob: -4.0107502937316895
    6. 's' → logprob: -4.1357502937316895
    7. '=' → logprob: -4.2607502937316895
    8. ')' → logprob: -4.5107502937316895
    9. ' ' → logprob: -4.8857502937316895
    10. ' [' → logprob: -5.0107502937316895

Token 835: 'é' (ID: 377)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.03711092099547386
    2. 'é' → logprob: -3.6621108055114746
    3. 'sed' → logprob: -5.412110805511475
    4. 'e' → logprob: -5.537110805511475
    5. 'ion' → logprob: -7.662110805511475
    6. 'éd' → logprob: -7.912110805511475
    7. '   ' → logprob: -7.912110805511475
    8. ' ' → logprob: -8.162111282348633
    9. 's' → logprob: -8.912111282348633
    10. 'ée' → logprob: -9.162111282348633

Token 836: ' '' (ID: 461)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6677980422973633
    2. '[j' → logprob: -1.6677980422973633
    3. '   ' → logprob: -3.2927980422973633
    4. ',' → logprob: -3.4177980422973633
    5. 'dp' → logprob: -3.5427980422973633
    6. ')' → logprob: -3.6677980422973633
    7. '][' → logprob: -3.7927980422973633
    8. '.' → logprob: -4.417798042297363
    9. ' j' → logprob: -4.792798042297363
    10. '+' → logprob: -4.792798042297363

Token 837: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00038705902989022434
    2. ' j' → logprob: -8.125387191772461
    3. 'a' → logprob: -10.625387191772461
    4. '   ' → logprob: -11.250387191772461
    5. ')' → logprob: -11.500387191772461
    6. ''' → logprob: -12.000387191772461
    7. 'h' → logprob: -12.250387191772461
    8. '')' → logprob: -12.375387191772461
    9. '[j' → logprob: -12.625387191772461
    10. '`' → logprob: -13.125387191772461

Token 838: ''' (ID: 6)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04719387739896774
    2. ']'' → logprob: -3.922193765640259
    3. '']' → logprob: -4.172194004058838
    4. '].' → logprob: -4.672194004058838
    5. ']',' → logprob: -7.547194004058838
    6. ']'
' → logprob: -8.54719352722168
    7. '],' → logprob: -9.04719352722168
    8. ''' → logprob: -9.29719352722168
    9. ' ]' → logprob: -9.29719352722168
    10. ')]' → logprob: -9.54719352722168

Token 839: ' (' (ID: 350)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09471035748720169
    2. '   ' → logprob: -2.594710350036621
    3. '.' → logprob: -4.594710350036621
    4. 'for' → logprob: -6.969710350036621
    5. '].' → logprob: -7.094710350036621
    6. ' ]' → logprob: -7.219710350036621
    7. ',' → logprob: -7.594710350036621
    8. '[' → logprob: -7.719710350036621
    9. ')' → logprob: -8.219710350036621
    10. ' for' → logprob: -8.344710350036621

Token 840: 'ha' (ID: 1716)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9537729620933533
    2. ')]' → logprob: -2.078773021697998
    3. '])' → logprob: -2.578773021697998
    4. 'j' → logprob: -2.953773021697998
    5. 'len' → logprob: -3.078773021697998
    6. '0' → logprob: -3.203773021697998
    7. 'mod' → logprob: -3.203773021697998
    8. '):' → logprob: -3.328773021697998
    9. ']' → logprob: -3.578773021697998
    10. 'range' → logprob: -3.703773021697998

Token 841: 'uteur' (ID: 25666)
  Prédit: 'uteur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uteur' → logprob: -0.001334286411292851
    2. 'ute' → logprob: -7.126334190368652
    3. ']' → logprob: -8.876334190368652
    4. 'uteurs' → logprob: -9.001334190368652
    5. 'teur' → logprob: -9.876334190368652
    6. '```' → logprob: -9.876334190368652
    7. '}' → logprob: -10.376334190368652
    8. ')' → logprob: -10.376334190368652
    9. '[' → logprob: -11.376334190368652
    10. 'ut' → logprob: -11.501334190368652

Token 842: ' compress' (ID: 34112)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.6608964800834656
    2. ')' → logprob: -1.9108965396881104
    3. ']' → logprob: -2.4108965396881104
    4. '])' → logprob: -2.5358965396881104
    5. ')])' → logprob: -2.9108965396881104
    6. '])]' → logprob: -3.7858965396881104
    7. '+' → logprob: -3.9108965396881104
    8. '   ' → logprob: -4.535896301269531
    9. ' +' → logprob: -5.160896301269531
    10. '')]' → logprob: -5.160896301269531

Token 843: 'ée' (ID: 2894)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9077149629592896
    2. 'e' → logprob: -1.4077149629592896
    3. 'é' → logprob: -1.6577149629592896
    4. 'ed' → logprob: -2.90771484375
    5. 'ée' → logprob: -3.40771484375
    6. 'ess' → logprob: -4.03271484375
    7. 'édé' → logprob: -4.53271484375
    8. 'sed' → logprob: -4.90771484375
    9. 'éd' → logprob: -4.90771484375
    10. 'essed' → logprob: -5.03271484375

Token 844: ' de' (ID: 334)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4238974153995514
    2. ')' → logprob: -2.1738975048065186
    3. '']' → logprob: -2.9238975048065186
    4. '+' → logprob: -3.1738975048065186
    5. ')]' → logprob: -3.2988975048065186
    6. ']'' → logprob: -3.6738975048065186
    7. '])' → logprob: -4.2988972663879395
    8. '')' → logprob: -4.4238972663879395
    9. '')]' → logprob: -5.1738972663879395
    10. ']').' → logprob: -5.2988972663879395

Token 845: ' l' (ID: 305)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.17611147463321686
    2. 'l' → logprob: -2.3011114597320557
    3. 'a' → logprob: -3.9261114597320557
    4. ' h' → logprob: -4.801111698150635
    5. 'la' → logprob: -5.176111698150635
    6. 'i' → logprob: -5.301111698150635
    7. '0' → logprob: -5.426111698150635
    8. 'dp' → logprob: -5.426111698150635
    9. 'H' → logprob: -5.676111698150635
    10. '   ' → logprob: -6.551111698150635

Token 846: ''ét' (ID: 23771)
  Prédit: ''état'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''état' → logprob: -1.1100616455078125
    2. 'a' → logprob: -1.3600616455078125
    3. 'h' → logprob: -2.2350616455078125
    4. ''' → logprob: -2.2350616455078125
    5. 'élé' → logprob: -2.8600616455078125
    6. '')' → logprob: -3.9850616455078125
    7. ''h' → logprob: -4.2350616455078125
    8. 'dp' → logprob: -4.3600616455078125
    9. 'i' → logprob: -4.3600616455078125
    10. 'ha' → logprob: -4.8600616455078125

Token 847: 'ape' (ID: 2480)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.012873122468590736
    2. ']' → logprob: -4.88787317276001
    3. 'ape' → logprob: -6.01287317276001
    4. 'a' → logprob: -7.01287317276001
    5. '#' → logprob: -8.012872695922852
    6. 'ât' → logprob: -8.137872695922852
    7. 'à' → logprob: -8.262872695922852
    8. ')' → logprob: -8.887872695922852
    9. 'ат' → logprob: -9.012872695922852
    10. '}' → logprob: -9.637872695922852

Token 848: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1271235942840576
    2. ' précédente' → logprob: -2.1271235942840576
    3. 'i' → logprob: -2.3771235942840576
    4. ' cour' → logprob: -2.7521235942840576
    5. 'cour' → logprob: -2.8771235942840576
    6. 'current' → logprob: -3.1271235942840576
    7. ' actuelle' → logprob: -3.2521235942840576
    8. 'pr' → logprob: -3.3771235942840576
    9. 'h' → logprob: -3.5021235942840576
    10. ' suivante' → logprob: -3.7521235942840576

Token 849: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.005465216934680939
    2. ' dp' → logprob: -5.380465030670166
    3. '[' → logprob: -7.630465030670166
    4. '   ' → logprob: -8.630465507507324
    5. '[
' → logprob: -10.130465507507324
    6. ' =' → logprob: -10.130465507507324
    7. 'd' → logprob: -10.630465507507324
    8. ']' → logprob: -11.380465507507324
    9. ',' → logprob: -11.380465507507324
    10. '_dp' → logprob: -11.380465507507324

Token 850: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0017608561320230365
    2. ' dp' → logprob: -6.376760959625244
    3. 'd' → logprob: -10.376760482788086
    4. '   ' → logprob: -11.501760482788086
    5. '[' → logprob: -11.626760482788086
    6. '	dp' → logprob: -12.501760482788086
    7. '_dp' → logprob: -13.876760482788086
    8. '```' → logprob: -14.251760482788086
    9. ' =' → logprob: -14.751760482788086
    10. ' ' → logprob: -14.876760482788086

Token 851: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4742041230201721
    2. '=' → logprob: -0.9742041230201721
    3. '[' → logprob: -9.349204063415527
    4. '=[' → logprob: -11.099204063415527
    5. '=[[' → logprob: -11.474204063415527
    6. '   ' → logprob: -12.474204063415527
    7. ',' → logprob: -13.474204063415527
    8. ')' → logprob: -13.474204063415527
    9. ' ' → logprob: -13.599204063415527
    10. ']' → logprob: -13.599204063415527

Token 852: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.00015908108616713434
    2. ' [[' → logprob: -8.75015926361084
    3. '[' → logprob: -14.50015926361084
    4. ' [' → logprob: -20.250158309936523
    5. '0' → logprob: -20.750158309936523
    6. '([[' → logprob: -21.750158309936523
    7. '[
' → logprob: -22.375158309936523
    8. '[]' → logprob: -22.875158309936523
    9. ' ' → logprob: -23.625158309936523
    10. '[['' → logprob: -24.625158309936523

Token 853: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '۰' → logprob: -19.375
    4. '000' → logprob: -20.375
    5. '00' → logprob: -21.0
    6. '   ' → logprob: -22.1875
    7. 'False' → logprob: -22.3125
    8. '[' → logprob: -22.5625
    9. '০' → logprob: -22.5625
    10. '０' → logprob: -22.6875

Token 854: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.41511330008506775
    2. ']' → logprob: -1.7901133298873901
    3. 'for' → logprob: -1.7901133298873901
    4. ']*(' → logprob: -5.54011344909668
    5. ']*' → logprob: -6.41511344909668
    6. '   ' → logprob: -8.91511344909668
    7. '	for' → logprob: -10.04011344909668
    8. ')' → logprob: -10.29011344909668
    9. ']+' → logprob: -10.91511344909668
    10. '0' → logprob: -11.16511344909668

Token 855: ' i' (ID: 575)
  Prédit: '_j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.20290838181972504
    2. '_' → logprob: -1.7029083967208862
    3. ' _' → logprob: -7.452908515930176
    4. 'j' → logprob: -7.702908515930176
    5. '_in' → logprob: -8.577908515930176
    6. '_k' → logprob: -9.577908515930176
    7. '_range' → logprob: -9.952908515930176
    8. ' j' → logprob: -10.077908515930176
    9. ' in' → logprob: -10.577908515930176
    10. '_i' → logprob: -10.952908515930176

Token 856: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1798909306526184
    2. 'in' → logprob: -1.8048908710479736
    3. '	in' → logprob: -9.304890632629395
    4. ' ' → logprob: -10.929890632629395
    5. '_in' → logprob: -11.554890632629395
    6. '_' → logprob: -12.179890632629395
    7. 'range' → logprob: -12.554890632629395
    8. 'In' → logprob: -12.554890632629395
    9. '<|end|>' → logprob: -12.679890632629395
    10. '  ' → logprob: -13.554890632629395

Token 857: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0067154900170862675
    2. ' range' → logprob: -5.006715297698975
    3. 'a' → logprob: -16.631715774536133
    4. '	range' → logprob: -17.506715774536133
    5. ' ' → logprob: -17.756715774536133
    6. '   ' → logprob: -17.881715774536133
    7. '(range' → logprob: -18.131715774536133
    8. 'ran' → logprob: -19.256715774536133
    9. '
' → logprob: -19.256715774536133
    10. '_range' → logprob: -19.381715774536133

Token 858: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.007641413249075413
    2. 'len' → logprob: -4.882641315460205
    3. ' (' → logprob: -11.132641792297363
    4. ' len' → logprob: -11.382641792297363
    5. '(' → logprob: -12.132641792297363
    6. '[len' → logprob: -13.882641792297363
    7. '   ' → logprob: -14.007641792297363
    8. '(N' → logprob: -14.507641792297363
    9. '((' → logprob: -14.632641792297363
    10. ',len' → logprob: -15.007641792297363

Token 859: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.318681188422488e-05
    2. 'a' → logprob: -11.37501335144043
    3. ' (' → logprob: -13.62501335144043
    4. '(' → logprob: -15.12501335144043
    5. '(dp' → logprob: -17.00001335144043
    6. '(comp' → logprob: -17.25001335144043
    7. ' a' → logprob: -18.00001335144043
    8. '(data' → logprob: -18.50001335144043
    9. '(
' → logprob: -18.62501335144043
    10. '[a' → logprob: -19.00001335144043

Token 860: ')' (ID: 8)
  Prédit: ')+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.08952812105417252
    2. ')' → logprob: -2.4645280838012695
    3. '+' → logprob: -7.5895280838012695
    4. 'a' → logprob: -10.21452808380127
    5. '()+' → logprob: -10.96452808380127
    6. ']+' → logprob: -11.08952808380127
    7. ' )' → logprob: -12.71452808380127
    8. ' +' → logprob: -13.21452808380127
    9. '()' → logprob: -13.46452808380127
    10. ')a' → logprob: -13.58952808380127

Token 861: ' +' (ID: 659)
  Prédit: ')+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.24571891129016876
    2. '+' → logprob: -1.6207189559936523
    3. ')' → logprob: -3.9957189559936523
    4. '()+' → logprob: -7.245718955993652
    5. ' +' → logprob: -7.620718955993652
    6. ']+' → logprob: -8.245718955993652
    7. ')])' → logprob: -9.120718955993652
    8. ')]' → logprob: -9.495718955993652
    9. '   ' → logprob: -11.495718955993652
    10. '[' → logprob: -11.745718955993652

Token 862: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.033663906157016754
    2. '2' → logprob: -3.4086639881134033
    3. ' ' → logprob: -11.158663749694824
    4. '   ' → logprob: -13.033663749694824
    5. '0' → logprob: -14.658663749694824
    6. '
' → logprob: -15.471163749694824
    7. ')' → logprob: -15.471163749694824
    8. '(' → logprob: -15.846163749694824
    9. 'len' → logprob: -16.15866470336914
    10. '+' → logprob: -16.40866470336914

Token 863: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005262337625026703
    2. '2' → logprob: -5.25526237487793
    3. ' ' → logprob: -10.63026237487793
    4. '   ' → logprob: -13.13026237487793
    5. '  ' → logprob: -15.06776237487793
    6. '(' → logprob: -15.56776237487793
    7. '
' → logprob: -15.69276237487793
    8. '0' → logprob: -15.81776237487793
    9. 'len' → logprob: -15.81776237487793
    10. '7' → logprob: -15.88026237487793

Token 864: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -5.080963092041202e-06
    2. ' )' → logprob: -13.250004768371582
    3. ']' → logprob: -13.375004768371582
    4. ')' → logprob: -13.875004768371582
    5. ')]
' → logprob: -15.375004768371582
    6. '   ' → logprob: -15.625004768371582
    7. ' ]' → logprob: -15.875004768371582
    8. ']]' → logprob: -16.3750057220459
    9. '])' → logprob: -17.1250057220459
    10. '}]' → logprob: -18.1250057220459

Token 865: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11062946170568466
    2. 'for' → logprob: -2.3606295585632324
    3. ']' → logprob: -4.610629558563232
    4. '   ' → logprob: -8.110629081726074
    5. '	for' → logprob: -9.360629081726074
    6. ' ]' → logprob: -10.610629081726074
    7. ' ' → logprob: -12.360629081726074
    8. '    ' → logprob: -13.110629081726074
    9. '       ' → logprob: -13.235629081726074
    10. ')' → logprob: -13.610629081726074

Token 866: ' j' (ID: 441)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04059508815407753
    2. 'j' → logprob: -4.415595054626465
    3. '_j' → logprob: -4.415595054626465
    4. 'i' → logprob: -4.790595054626465
    5. ' _' → logprob: -5.665595054626465
    6. ' j' → logprob: -6.040595054626465
    7. '_i' → logprob: -6.915595054626465
    8. ' i' → logprob: -7.915595054626465
    9. ' ' → logprob: -10.790595054626465
    10. '_=' → logprob: -11.290595054626465

Token 867: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.10021303594112396
    2. ' in' → logprob: -2.350213050842285
    3. 'range' → logprob: -12.600213050842285
    4. 'n' → logprob: -13.975213050842285
    5. '	in' → logprob: -13.975213050842285
    6. ' ' → logprob: -14.225213050842285
    7. '  ' → logprob: -16.60021209716797
    8. 'i' → logprob: -16.60021209716797
    9. 'd' → logprob: -16.85021209716797
    10. 'en' → logprob: -16.85021209716797

Token 868: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00038038729690015316
    2. ' range' → logprob: -7.875380516052246
    3. '(range' → logprob: -15.375380516052246
    4. '   ' → logprob: -17.62537956237793
    5. '	range' → logprob: -18.12537956237793
    6. ' ' → logprob: -18.87537956237793
    7. 'r' → logprob: -19.50037956237793
    8. '  ' → logprob: -19.87537956237793
    9. 'rang' → logprob: -20.25037956237793
    10. 'ran' → logprob: -20.50037956237793

Token 869: '(N' (ID: 10564)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01449418906122446
    2. ' range' → logprob: -4.2644944190979
    3. '(range' → logprob: -8.014493942260742
    4. '	range' → logprob: -17.639493942260742
    5. '   ' → logprob: -18.389493942260742
    6. '(N' → logprob: -19.139493942260742
    7. 'n' → logprob: -19.264493942260742
    8. '(' → logprob: -19.889493942260742
    9. '_range' → logprob: -20.139493942260742
    10. 'Range' → logprob: -20.139493942260742

Token 870: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -8.184812031686306e-05
    2. ' )' → logprob: -10.375082015991211
    3. ']' → logprob: -10.875082015991211
    4. ')' → logprob: -11.250082015991211
    5. '+' → logprob: -11.625082015991211
    6. ' ]' → logprob: -12.875082015991211
    7. ']]' → logprob: -13.625082015991211
    8. '   ' → logprob: -14.000082015991211
    9. '])]' → logprob: -14.000082015991211
    10. ')][' → logprob: -14.375082015991211

Token 871: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9159450531005859
    2. '   ' → logprob: -1.290945053100586
    3. '<|end|>' → logprob: -2.165945053100586
    4. ']' → logprob: -2.665945053100586
    5. 'dp' → logprob: -2.915945053100586
    6. 'for' → logprob: -3.915945053100586
    7. '[' → logprob: -4.165945053100586
    8. '#' → logprob: -4.540945053100586
    9. '	for' → logprob: -5.165945053100586
    10. '	dp' → logprob: -5.290945053100586

Token 872: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4344278573989868
    2. '   ' → logprob: -1.4344278573989868
    3. 'for' → logprob: -2.6844277381896973
    4. '#' (adapté à ' #') → logprob: -3.5594277381896973
    5. ' for' → logprob: -4.684427738189697
    6. 'i' → logprob: -5.809427738189697
    7. ' dp' → logprob: -6.684427738189697
    8. ')' → logprob: -6.934427738189697
    9. 'j' → logprob: -7.059427738189697
    10. '    
' → logprob: -8.184428215026855

Token 873: ' Trait' (ID: 146188)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.25259092450141907
    2. 'for' → logprob: -1.5025908946990967
    3. '#' → logprob: -8.002591133117676
    4. 'from' → logprob: -9.127591133117676
    5. 'return' → logprob: -9.627591133117676
    6. 'j' → logprob: -10.627591133117676
    7. 'import' → logprob: -10.752591133117676
    8. 'def' → logprob: -10.877591133117676
    9. 'prev' → logprob: -11.377591133117676
    10. 'max' → logprob: -11.502591133117676

Token 874: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.0781366303563118
    2. 'for' → logprob: -2.703136682510376
    3. 'e' → logprob: -5.703136444091797
    4. 'er' → logprob: -5.953136444091797
    5. 'ment' → logprob: -7.203136444091797
    6. '   ' → logprob: -7.953136444091797
    7. '#' → logprob: -8.078136444091797
    8. ' for' → logprob: -8.578136444091797
    9. 'é' → logprob: -8.703136444091797
    10. 'if' → logprob: -9.328136444091797

Token 875: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3009644150733948
    2. ' for' → logprob: -1.67596435546875
    3. '   ' → logprob: -3.17596435546875
    4. '<|end|>' → logprob: -4.55096435546875
    5. ':' → logprob: -5.55096435546875
    6. '<|end|>' → logprob: -6.30096435546875
    7. ')' → logprob: -6.30096435546875
    8. '#' → logprob: -6.42596435546875
    9. ' of' → logprob: -6.42596435546875
    10. '[' → logprob: -6.55096435546875

Token 876: ' la' (ID: 557)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7876508235931396
    2. 'dp' → logprob: -0.7876508235931396
    3. 'i' → logprob: -3.6626508235931396
    4. 'range' → logprob: -3.7876508235931396
    5. 'H' → logprob: -4.287651062011719
    6. 'h' → logprob: -5.037651062011719
    7. ' dp' → logprob: -5.162651062011719
    8. ' range' → logprob: -5.912651062011719
    9. ' ' → logprob: -6.037651062011719
    10. 'l' → logprob: -6.162651062011719

Token 877: ' première' (ID: 23423)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6427018642425537
    2. 'for' → logprob: -1.1427018642425537
    3. 'dp' → logprob: -2.2677018642425537
    4. 'i' → logprob: -4.267702102661133
    5. 'first' → logprob: -4.517702102661133
    6. 'prem' → logprob: -5.267702102661133
    7. ' for' → logprob: -5.392702102661133
    8. 'h' → logprob: -5.642702102661133
    9. ' first' → logprob: -5.892702102661133
    10. 'range' → logprob: -6.017702102661133

Token 878: ' transition' (ID: 14463)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7951884269714355
    2. 'for' → logprob: -1.7951884269714355
    3. 'ligne' → logprob: -1.7951884269714355
    4. ' ligne' → logprob: -2.0451884269714355
    5. 'range' → logprob: -4.1701884269714355
    6. '=' → logprob: -4.2951884269714355
    7. 'h' → logprob: -4.4201884269714355
    8. ' =' → logprob: -4.7951884269714355
    9. ' for' → logprob: -4.9201884269714355
    10. ' i' → logprob: -5.1701884269714355

Token 879: ' de' (ID: 334)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1357480138540268
    2. ' for' → logprob: -3.1357479095458984
    3. 'for' → logprob: -3.5107479095458984
    4. ' dp' → logprob: -4.010747909545898
    5. '   ' → logprob: -4.135747909545898
    6. '
' → logprob: -5.385747909545898
    7. '(dp' → logprob: -6.010747909545898
    8. '[' → logprob: -6.135747909545898
    9. ':' → logprob: -6.135747909545898
    10. ' =' → logprob: -6.260747909545898

Token 880: ' la' (ID: 557)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.034176360815763474
    2. ' dp' → logprob: -4.034176349639893
    3. 'l' → logprob: -5.409176349639893
    4. 'range' → logprob: -6.034176349639893
    5. 'la' → logprob: -6.159176349639893
    6. 'h' → logprob: -6.534176349639893
    7. 'H' → logprob: -6.534176349639893
    8. ' la' → logprob: -6.659176349639893
    9. 'i' → logprob: -7.284176349639893
    10. 'for' → logprob: -8.03417682647705

Token 881: ' sé' (ID: 7462)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07269307971000671
    2. 'for' → logprob: -3.322693109512329
    3. 'sequence' → logprob: -5.19769287109375
    4. 'fonction' → logprob: -5.44769287109375
    5. 'liste' → logprob: -5.69769287109375
    6. 'sé' → logprob: -5.82269287109375
    7. 'solution' → logprob: -6.19769287109375
    8. 'range' → logprob: -6.19769287109375
    9. 'ha' → logprob: -6.44769287109375
    10. 's' → logprob: -6.57269287109375

Token 882: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.0009022884769365191
    2. 'q' → logprob: -7.25090217590332
    3. '#' → logprob: -10.00090217590332
    4. 'quences' → logprob: -10.62590217590332
    5. 'rie' → logprob: -10.87590217590332
    6. 'QUENCE' → logprob: -11.00090217590332
    7. 'que' → logprob: -11.25090217590332
    8. 'qu' → logprob: -11.50090217590332
    9. 'conde' → logprob: -11.50090217590332
    10. 'ance' → logprob: -11.62590217590332

Token 883: ' :
' (ID: 10039)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.40625709295272827
    2. '
' → logprob: -1.781257152557373
    3. '   ' → logprob: -2.281257152557373
    4. 'for' → logprob: -3.906257152557373
    5. '[' → logprob: -4.031257152557373
    6. ' for' → logprob: -5.281257152557373
    7. ':' → logprob: -5.281257152557373
    8. '    
' → logprob: -5.656257152557373
    9. ' dp' → logprob: -5.906257152557373
    10. ',' → logprob: -6.281257152557373

Token 884: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.27889177203178406
    2. 'for' → logprob: -1.5288918018341064
    3. 'j' → logprob: -4.653891563415527
    4. '   ' → logprob: -4.903891563415527
    5. ' for' → logprob: -4.903891563415527
    6. ' dp' → logprob: -6.778891563415527
    7. 'if' → logprob: -7.278891563415527
    8. 'i' → logprob: -9.028891563415527
    9. ' j' → logprob: -9.653891563415527
    10. 'h' → logprob: -10.653891563415527

Token 885: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06469887495040894
    2. 'for' → logprob: -2.8146989345550537
    3. 'j' → logprob: -6.564698696136475
    4. 'if' → logprob: -6.814698696136475
    5. 'h' → logprob: -10.564699172973633
    6. 'prev' → logprob: -11.189699172973633
    7. 'x' → logprob: -11.314699172973633
    8. 'first' → logprob: -11.314699172973633
    9. 'idx' → logprob: -11.439699172973633
    10. 'val' → logprob: -11.439699172973633

Token 886: ' On' (ID: 2160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06284685432910919
    2. 'for' → logprob: -2.8128468990325928
    3. 'j' → logprob: -7.812846660614014
    4. 'if' → logprob: -7.937846660614014
    5. 'first' → logprob: -10.812847137451172
    6. 'idx' → logprob: -11.437847137451172
    7. 'prev' → logprob: -11.562847137451172
    8. 'current' → logprob: -11.812847137451172
    9. 'val' → logprob: -12.312847137451172
    10. 'max' → logprob: -12.437847137451172

Token 887: ' commence' (ID: 44755)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6187435984611511
    2. '[' → logprob: -1.618743658065796
    3. 'dp' → logprob: -2.118743658065796
    4. ' for' → logprob: -2.868743658065796
    5. ']' → logprob: -2.993743658065796
    6. ')' → logprob: -4.993743419647217
    7. ' dp' → logprob: -4.993743419647217
    8. '=' → logprob: -5.118743419647217
    9. ' =' → logprob: -5.493743419647217
    10. '][' → logprob: -5.993743419647217

Token 888: ' avec' (ID: 3937)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.6464502215385437
    2. 'par' → logprob: -1.6464502811431885
    3. ' by' → logprob: -2.5214502811431885
    4. 'dp' → logprob: -2.7714502811431885
    5. '   ' → logprob: -3.3964502811431885
    6. 'for' → logprob: -3.5214502811431885
    7. ' dp' → logprob: -4.021450042724609
    8. '=' → logprob: -4.396450042724609
    9. '[' → logprob: -4.521450042724609
    10. 'with' → logprob: -5.396450042724609

Token 889: ' l' (ID: 305)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.01569528877735138
    2. 'for' → logprob: -4.640695095062256
    3. 'j' → logprob: -6.015695095062256
    4. '0' → logprob: -6.515695095062256
    5. ' dp' → logprob: -6.890695095062256
    6. '2' → logprob: -8.515695571899414
    7. '1' → logprob: -8.765695571899414
    8. ' for' → logprob: -8.890695571899414
    9. 'pow' → logprob: -8.890695571899414
    10. 'i' → logprob: -9.015695571899414

Token 890: ''ind' (ID: 82245)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7993978261947632
    2. 'dp' → logprob: -0.7993978261947632
    3. ' dp' → logprob: -3.4243979454040527
    4. ' for' → logprob: -3.5493979454040527
    5. '[' → logprob: -4.799397945404053
    6. '0' → logprob: -5.049397945404053
    7. 'a' → logprob: -5.174397945404053
    8. ']' → logprob: -5.799397945404053
    9. 'range' → logprob: -6.049397945404053
    10. '=' → logprob: -6.174397945404053

Token 891: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.11625657975673676
    2. 'i' → logprob: -2.6162564754486084
    3. 'ice' → logprob: -3.8662564754486084
    4. 'e' → logprob: -4.2412567138671875
    5. 'ices' → logprob: -7.3662567138671875
    6. 'a' → logprob: -9.116256713867188
    7. '#' → logprob: -9.241256713867188
    8. '[i' → logprob: -9.366256713867188
    9. '[' → logprob: -9.491256713867188
    10. '```' → logprob: -10.116256713867188

Token 892: ' i' (ID: 575)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8361981511116028
    2. '=' → logprob: -1.711198091506958
    3. ' =' → logprob: -1.711198091506958
    4. 'dp' → logprob: -2.336198091506958
    5. 'i' → logprob: -3.586198091506958
    6. 'for' → logprob: -4.211198329925537
    7. 'j' → logprob: -4.211198329925537
    8. '[' → logprob: -4.461198329925537
    9. ',' → logprob: -4.461198329925537
    10. ' ' → logprob: -5.336198329925537

Token 893: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06340251117944717
    2. ' =' → logprob: -2.9384024143218994
    3. '0' → logprob: -4.8134026527404785
    4. ',' → logprob: -8.56340217590332
    5. 's' → logprob: -9.93840217590332
    6. 'i' → logprob: -9.93840217590332
    7. '[' → logprob: -10.43840217590332
    8. ']' → logprob: -10.81340217590332
    9. '=i' → logprob: -12.43840217590332
    10. ' ' → logprob: -12.81340217590332

Token 894: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.244413766078651e-05
    2. ' ' → logprob: -10.000082015991211
    3. '=' → logprob: -10.375082015991211
    4. '1' → logprob: -13.000082015991211
    5. '[' → logprob: -14.000082015991211
    6. ' =' → logprob: -14.250082015991211
    7. '#' → logprob: -14.750082015991211
    8. '(' → logprob: -15.375082015991211
    9. '```' → logprob: -15.562582015991211
    10. 'i' → logprob: -15.750082015991211

Token 895: ' qui' (ID: 2780)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6801068186759949
    2. 'dp' → logprob: -1.4301068782806396
    3. ' for' → logprob: -2.4301068782806396
    4. '   ' → logprob: -3.1801068782806396
    5. ']' → logprob: -3.3051068782806396
    6. '][' → logprob: -3.6801068782806396
    7. ':' → logprob: -4.1801066398620605
    8. '
' → logprob: -4.1801066398620605
    9. '[' → logprob: -4.3051066398620605
    10. ',' → logprob: -5.3051066398620605

Token 896: ' correspond' (ID: 11095)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.00320565700531
    2. '][' → logprob: -1.25320565700531
    3. ':' → logprob: -2.6282057762145996
    4. ' for' → logprob: -3.0032057762145996
    5. ']' → logprob: -3.1282057762145996
    6. ',' → logprob: -3.1282057762145996
    7. ' in' → logprob: -3.5032057762145996
    8. ']+=' → logprob: -3.7532057762145996
    9. 'in' → logprob: -3.8782057762145996
    10. '<|end|>' → logprob: -4.7532057762146

Token 897: ' au' (ID: 2791)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.14075101912021637
    2. 'à' → logprob: -2.5157511234283447
    3. '=' → logprob: -3.7657511234283447
    4. ']' → logprob: -4.890750885009766
    5. ' au' → logprob: -5.140750885009766
    6. ' to' → logprob: -5.265750885009766
    7. '   ' → logprob: -6.265750885009766
    8. 'a' → logprob: -6.640750885009766
    9. ' =' → logprob: -7.015750885009766
    10. ',' → logprob: -7.015750885009766

Token 898: ' premier' (ID: 15506)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0564154386520386
    2. 'h' → logprob: -1.1814154386520386
    3. 'H' → logprob: -1.4314154386520386
    4. 'a' → logprob: -2.931415557861328
    5. 'comp' → logprob: -3.181415557861328
    6. 'dp' → logprob: -5.556415557861328
    7. ' ' → logprob: -6.931415557861328
    8. 'for' → logprob: -7.056415557861328
    9. 'prem' → logprob: -7.181415557861328
    10. 'first' → logprob: -7.306415557861328

Token 899: ' élément' (ID: 99627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8015567064285278
    2. 'h' → logprob: -0.8015567064285278
    3. ' élément' → logprob: -3.6765565872192383
    4. 'element' → logprob: -4.051556587219238
    5. 'i' → logprob: -4.301556587219238
    6. 'élé' → logprob: -4.801556587219238
    7. 'H' → logprob: -5.301556587219238
    8. '][' → logprob: -5.551556587219238
    9. '_' → logprob: -5.551556587219238
    10. 'for' → logprob: -5.551556587219238

Token 900: ' de' (ID: 334)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.3512496054172516
    2. ',' → logprob: -2.1012496948242188
    3. ']' → logprob: -3.1012496948242188
    4. '   ' → logprob: -3.2262496948242188
    5. ' in' → logprob: -3.7262496948242188
    6. 'in' → logprob: -3.8512496948242188
    7. 'for' → logprob: -3.9762496948242188
    8. 'dp' → logprob: -4.476249694824219
    9. '
' → logprob: -6.351249694824219
    10. '[' → logprob: -6.851249694824219

Token 901: ' '' (ID: 461)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.01097920536994934
    2. ' h' → logprob: -4.635979175567627
    3. 'H' → logprob: -6.760979175567627
    4. 'a' → logprob: -10.385979652404785
    5. ' H' → logprob: -10.760979652404785
    6. 'range' → logprob: -12.885979652404785
    7. ' a' → logprob: -13.385979652404785
    8. ' la' → logprob: -13.385979652404785
    9. 'l' → logprob: -13.760979652404785
    10. ' range' → logprob: -14.010979652404785

Token 902: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0013521412620320916
    2. 'H' → logprob: -6.626352310180664
    3. ' h' → logprob: -10.876352310180664
    4. 'a' → logprob: -12.626352310180664
    5. '   ' → logprob: -13.876352310180664
    6. '	h' → logprob: -14.751352310180664
    7. '"h' → logprob: -14.938852310180664
    8. '`' → logprob: -15.188852310180664
    9. ''h' → logprob: -15.313852310180664
    10. '```' → logprob: -15.376352310180664

Token 903: '',
' (ID: 1214)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0835467129945755
    2. '][' → logprob: -3.5835466384887695
    3. '   ' → logprob: -3.5835466384887695
    4. 'for' → logprob: -4.7085466384887695
    5. ']
' → logprob: -4.8335466384887695
    6. ',' → logprob: -5.5835466384887695
    7. ' for' → logprob: -6.4585466384887695
    8. '.' → logprob: -7.0835466384887695
    9. ']
' → logprob: -8.58354663848877
    10. '].' → logprob: -8.95854663848877

Token 904: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3661397695541382
    2. 'for' → logprob: -1.2411397695541382
    3. '   ' → logprob: -4.491139888763428
    4. 'dp' → logprob: -5.866139888763428
    5. ' dp' → logprob: -6.116139888763428
    6. 'j' → logprob: -7.241139888763428
    7. ' j' → logprob: -7.866139888763428
    8. '    ' → logprob: -10.61613941192627
    9. ',' → logprob: -10.86613941192627
    10. '	for' → logprob: -11.24113941192627

Token 905: ' i' (ID: 575)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9499862194061279
    2. 'dp' → logprob: -1.074986219406128
    3. ' for' → logprob: -1.574986219406128
    4. ' dp' → logprob: -3.574986219406128
    5. 'j' → logprob: -3.699986219406128
    6. '   ' → logprob: -4.824986457824707
    7. ' j' → logprob: -5.574986457824707
    8. '][' → logprob: -9.949986457824707
    9. 'if' → logprob: -10.324986457824707
    10. '
' → logprob: -10.324986457824707

Token 906: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7837063670158386
    2. '=' → logprob: -1.5337064266204834
    3. '][' → logprob: -1.9087064266204834
    4. '[' → logprob: -2.6587064266204834
    5. ',' → logprob: -3.1587064266204834
    6. 'nd' → logprob: -3.7837064266204834
    7. ']' → logprob: -3.9087064266204834
    8. '0' → logprob: -4.533706188201904
    9. 'n' → logprob: -5.533706188201904
    10. 'nt' → logprob: -6.533706188201904

Token 907: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012439649435691535
    2. ' ' → logprob: -9.000123977661133
    3. '1' → logprob: -15.062623977661133
    4. '   ' → logprob: -16.062623977661133
    5. '-' → logprob: -16.687623977661133
    6. '#' → logprob: -17.125123977661133
    7. '۰' → logprob: -17.250123977661133
    8. '=' → logprob: -17.500123977661133
    9. 'h' → logprob: -17.875123977661133
    10. '[' → logprob: -17.937623977661133

Token 908: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -11.875006675720215
    3. '1' → logprob: -17.18750762939453
    4. '۰' → logprob: -17.62500762939453
    5. '-' → logprob: -17.87500762939453
    6. '   ' → logprob: -18.06250762939453
    7. '[' → logprob: -18.87500762939453
    8. '(' → logprob: -19.00000762939453
    9. '=' → logprob: -19.00000762939453
    10. '０' → logprob: -19.25000762939453

Token 909: '

' (ID: 279)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3901364505290985
    2. '
' → logprob: -1.265136480331421
    3. 'for' → logprob: -3.765136480331421
    4. ' for' → logprob: -5.390136241912842
    5. 'j' → logprob: -5.515136241912842
    6. '   ' → logprob: -5.890136241912842
    7. ' dp' → logprob: -6.765136241912842
    8. ';' → logprob: -7.015136241912842
    9. ']' → logprob: -7.390136241912842
    10. ',' → logprob: -7.515136241912842

Token 910: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21511688828468323
    2. 'j' → logprob: -2.9651169776916504
    3. ' for' → logprob: -2.9651169776916504
    4. 'dp' → logprob: -3.2151169776916504
    5. '
' → logprob: -3.9651169776916504
    6. 'while' → logprob: -4.34011697769165
    7. '   ' → logprob: -4.59011697769165
    8. '#' → logprob: -5.21511697769165
    9. ' while' → logprob: -7.84011697769165
    10. 'if' → logprob: -7.84011697769165

Token 911: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.32471105456352234
    2. 'for' → logprob: -1.8247110843658447
    3. '
' → logprob: -2.6997110843658447
    4. 'j' → logprob: -3.5747110843658447
    5. 'while' → logprob: -4.699710845947266
    6. '   ' → logprob: -5.199710845947266
    7. ' for' → logprob: -6.074710845947266
    8. '#' (adapté à ' #') → logprob: -6.449710845947266
    9. 'if' → logprob: -6.824710845947266
    10. ' dp' → logprob: -7.824710845947266

Token 912: ' Si' (ID: 7832)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.11457797139883041
    2. 'for' → logprob: -2.2395780086517334
    3. 'j' → logprob: -6.739577770233154
    4. 'while' → logprob: -8.489578247070312
    5. 'if' → logprob: -9.239578247070312
    6. 'from' → logprob: -9.989578247070312
    7. 'idx' → logprob: -10.489578247070312
    8. 'val' → logprob: -10.739578247070312
    9. 'current' → logprob: -10.864578247070312
    10. 'prev' → logprob: -11.364578247070312

Token 913: ' la' (ID: 557)
  Prédit: ' comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' comp' → logprob: -0.9603720903396606
    2. ' h' → logprob: -1.9603720903396606
    3. 'h' → logprob: -2.085371971130371
    4. 'H' → logprob: -2.335371971130371
    5. 'comp' → logprob: -2.335371971130371
    6. ' a' → logprob: -2.960371971130371
    7. ' H' → logprob: -3.085371971130371
    8. 'a' → logprob: -3.460371971130371
    9. 'dp' → logprob: -4.710371971130371
    10. ' dp' → logprob: -4.835371971130371

Token 914: ' deuxième' (ID: 51664)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.23186609148979187
    2. 'H' → logprob: -1.8568661212921143
    3. 'a' → logprob: -3.4818661212921143
    4. 'i' → logprob: -5.106865882873535
    5. ' h' → logprob: -5.106865882873535
    6. ' H' → logprob: -6.106865882873535
    7. 'comp' → logprob: -6.106865882873535
    8. 'len' → logprob: -6.356865882873535
    9. ' a' → logprob: -7.481865882873535
    10. '0' → logprob: -8.356865882873535

Token 915: ' hauteur' (ID: 72987)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.31402841210365295
    2. ' <' → logprob: -1.9390283823013306
    3. 'h' → logprob: -3.68902850151062
    4. ']' → logprob: -3.81402850151062
    5. '[' → logprob: -4.439028263092041
    6. 'token' → logprob: -4.564028263092041
    7. '=' → logprob: -4.814028263092041
    8. 'if' → logprob: -4.939028263092041
    9. 'i' → logprob: -4.939028263092041
    10. '<len' → logprob: -5.439028263092041

Token 916: ' est' (ID: 893)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -1.1511958837509155
    2. ' ==' → logprob: -1.2761958837509155
    3. '==' → logprob: -1.9011958837509155
    4. '<len' → logprob: -3.026196002960205
    5. '>' → logprob: -3.276196002960205
    6. '<' → logprob: -3.526196002960205
    7. '+' → logprob: -3.526196002960205
    8. ' !=' → logprob: -3.901196002960205
    9. '!=' → logprob: -4.151196002960205
    10. ' >' → logprob: -4.151196002960205

Token 917: ' supérieure' (ID: 106336)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.763749599456787
    2. 'i' → logprob: -1.763749599456787
    3. 'h' → logprob: -2.013749599456787
    4. '1' → logprob: -2.013749599456787
    5. 'n' → logprob: -2.138749599456787
    6. 'H' → logprob: -2.763749599456787
    7. 'len' → logprob: -3.263749599456787
    8. '>' → logprob: -3.388749599456787
    9. ' ' → logprob: -3.638749599456787
    10. 'None' → logprob: -4.263749599456787

Token 918: ' ou' (ID: 2031)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.825683057308197
    2. 'and' → logprob: -0.950683057308197
    3. 'if' → logprob: -2.825683116912842
    4. '=' → logprob: -3.825683116912842
    5. ' to' → logprob: -4.200683116912842
    6. 'to' → logprob: -4.450683116912842
    7. '>' → logprob: -4.825683116912842
    8. ':' → logprob: -4.825683116912842
    9. 'i' → logprob: -5.200683116912842
    10. ',' → logprob: -5.200683116912842

Token 919: ' ég' (ID: 33150)
  Prédit: ' ég'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ég' → logprob: -0.5697116255760193
    2. 'strict' → logprob: -2.194711685180664
    3. 'égal' → logprob: -2.819711685180664
    4. 'ég' → logprob: -2.819711685180664
    5. 'eg' → logprob: -3.194711685180664
    6. '>' → logprob: -3.444711685180664
    7. '==' → logprob: -3.819711685180664
    8. 'ou' → logprob: -4.194711685180664
    9. '=' → logprob: -4.319711685180664
    10. 'equal' → logprob: -4.319711685180664

Token 920: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.3031980097293854
    2. 'al' → logprob: -1.803197979927063
    3. 'à' → logprob: -2.5531980991363525
    4. 'a' → logprob: -5.053197860717773
    5. 'uale' → logprob: -5.803197860717773
    6. 'ales' → logprob: -6.553197860717773
    7. 'alle' → logprob: -6.553197860717773
    8. 'alse' → logprob: -6.803197860717773
    9. 'aux' → logprob: -7.178197860717773
    10. 'e' → logprob: -7.428197860717773

Token 921: ' à' (ID: 1221)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -1.1102657318115234
    2. '(h' → logprob: -1.1102657318115234
    3. '(' → logprob: -2.1102657318115234
    4. '(i' → logprob: -2.8602657318115234
    5. ' to' → logprob: -3.1102657318115234
    6. 'à' → logprob: -3.7352657318115234
    7. '   ' → logprob: -3.8602657318115234
    8. ' à' → logprob: -4.110265731811523
    9. '(H' → logprob: -4.235265731811523
    10. 'if' → logprob: -4.610265731811523

Token 922: ' la' (ID: 557)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.10127641260623932
    2. 'H' → logprob: -3.101276397705078
    3. 'a' → logprob: -3.101276397705078
    4. ' h' → logprob: -6.226276397705078
    5. 'i' → logprob: -6.601276397705078
    6. 'comp' → logprob: -6.726276397705078
    7. '0' → logprob: -7.476276397705078
    8. ' ' → logprob: -8.351276397705078
    9. ' a' → logprob: -8.476276397705078
    10. 'data' → logprob: -8.601276397705078

Token 923: ' première' (ID: 23423)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.1970490664243698
    2. '0' → logprob: -2.072049140930176
    3. 'i' → logprob: -3.947049140930176
    4. 'a' → logprob: -3.947049140930176
    5. 'H' → logprob: -4.697049140930176
    6. 'prem' → logprob: -5.947049140930176
    7. ' ' → logprob: -7.197049140930176
    8. 'first' → logprob: -8.197049140930176
    9. ' h' → logprob: -8.322049140930176
    10. '   ' → logprob: -8.447049140930176

Token 924: ' :
' (ID: 10039)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4736965298652649
    2. ':' → logprob: -1.3486964702606201
    3. 'and' → logprob: -2.47369647026062
    4. 'if' → logprob: -4.098696708679199
    5. '   ' → logprob: -4.598696708679199
    6. ' if' → logprob: -5.473696708679199
    7. ',' → logprob: -6.848696708679199
    8. ':
' → logprob: -7.098696708679199
    9. ' et' → logprob: -8.4736967086792
    10. 'et' → logprob: -9.2236967086792

Token 925: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.500516951084137
    2. 'if' → logprob: -1.0005168914794922
    3. ':' → logprob: -4.375516891479492
    4. '   ' → logprob: -4.500516891479492
    5. ' :' → logprob: -7.375516891479492
    6. ' i' → logprob: -7.750516891479492
    7. ' ' → logprob: -8.000516891479492
    8. 'i' → logprob: -8.250516891479492
    9. '[' → logprob: -8.625516891479492
    10. ',' → logprob: -9.125516891479492

Token 926: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -2.975612187583465e-05
    2. '   ' → logprob: -11.000029563903809
    3. ' if' → logprob: -11.250029563903809
    4. '	if' → logprob: -18.125030517578125
    5. 'ifs' → logprob: -18.500030517578125
    6. 'while' → logprob: -18.875030517578125
    7. 'iff' → logprob: -19.750030517578125
    8. 'i' → logprob: -20.250030517578125
    9. '```' → logprob: -20.250030517578125
    10. 'If' → logprob: -20.375030517578125

Token 927: ' h' (ID: 312)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.6215830445289612
    2. 'h' → logprob: -0.8715830445289612
    3. ' h' → logprob: -3.8715829849243164
    4. ' H' → logprob: -3.9965829849243164
    5. 'len' → logprob: -6.246582984924316
    6. 'n' → logprob: -6.621582984924316
    7. 'i' → logprob: -7.246582984924316
    8. ' len' → logprob: -7.496582984924316
    9. '   ' → logprob: -8.371582984924316
    10. ' n' → logprob: -8.496582984924316

Token 928: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5759629607200623
    2. '[i' → logprob: -0.8259629607200623
    3. ' [' → logprob: -11.450963020324707
    4. '   ' → logprob: -12.200963020324707
    5. 'i' → logprob: -13.450963020324707
    6. '[h' → logprob: -13.575963020324707
    7. ')' → logprob: -14.200963020324707
    8. '[
' → logprob: -14.450963020324707
    9. '[j' → logprob: -14.575963020324707
    10. '[I' → logprob: -14.575963020324707

Token 929: ' +' (ID: 659)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7494783401489258
    2. '[' → logprob: -1.1244783401489258
    3. '[i' → logprob: -1.7494783401489258
    4. ']<=' → logprob: -3.874478340148926
    5. ']==' → logprob: -6.249478340148926
    6. ']>=' → logprob: -6.499478340148926
    7. '<=' → logprob: -6.749478340148926
    8. '0' → logprob: -6.749478340148926
    9. 'i' → logprob: -7.249478340148926
    10. '][' → logprob: -7.874478340148926

Token 930: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.282920129597187e-05
    2. ' ' → logprob: -11.375012397766113
    3. '0' → logprob: -13.625012397766113
    4. '   ' → logprob: -16.00001335144043
    5. '  ' → logprob: -18.87501335144043
    6. '#' → logprob: -19.12501335144043
    7. '```' → logprob: -19.25001335144043
    8. ']' → logprob: -19.31251335144043
    9. 'i' → logprob: -19.62501335144043
    10. ')' → logprob: -19.87501335144043

Token 931: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.881560041918419e-05
    2. ' ' → logprob: -10.750039100646973
    3. '0' → logprob: -11.125039100646973
    4. '```' → logprob: -14.187539100646973
    5. ']' → logprob: -14.312539100646973
    6. '   ' → logprob: -14.625039100646973
    7. '``' → logprob: -15.875039100646973
    8. '`' → logprob: -16.000038146972656
    9. ')' → logprob: -16.062538146972656
    10. '  ' → logprob: -16.812538146972656

Token 932: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.30894362926483154
    2. ']>=' → logprob: -1.4339436292648315
    3. '>=' → logprob: -3.683943748474121
    4. ' >=' → logprob: -6.683943748474121
    5. '[' → logprob: -7.683943748474121
    6. ' ]' → logprob: -7.808943748474121
    7. ']>' → logprob: -10.308943748474121
    8. '   ' → logprob: -10.308943748474121
    9. '>' → logprob: -10.558943748474121
    10. ')>=' → logprob: -11.058943748474121

Token 933: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.02377679944038391
    2. ' >=' → logprob: -3.7737767696380615
    3. ']>=' → logprob: -7.773777008056641
    4. '>' → logprob: -10.14877700805664
    5. ']' → logprob: -10.14877700805664
    6. '   ' → logprob: -11.52377700805664
    7. '<=' → logprob: -12.02377700805664
    8. ')>=' → logprob: -12.14877700805664
    9. ' ' → logprob: -12.89877700805664
    10. ')' → logprob: -13.02377700805664

Token 934: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0005893715424463153
    2. ' h' → logprob: -7.500589370727539
    3. '   ' → logprob: -10.625589370727539
    4. 'data' → logprob: -12.625589370727539
    5. ' ' → logprob: -13.375589370727539
    6. 'a' → logprob: -13.500589370727539
    7. '	h' → logprob: -13.500589370727539
    8. 'H' → logprob: -13.750589370727539
    9. 'comp' → logprob: -13.875589370727539
    10. '0' → logprob: -14.250589370727539

Token 935: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00012106612848583609
    2. '[' → logprob: -9.625121116638184
    3. 'i' → logprob: -10.000121116638184
    4. 'h' → logprob: -12.250121116638184
    5. '0' → logprob: -13.625121116638184
    6. '][' → logprob: -13.875121116638184
    7. '(i' → logprob: -14.500121116638184
    8. '[h' → logprob: -14.625121116638184
    9. ']' → logprob: -14.750121116638184
    10. ' [' → logprob: -14.875121116638184

Token 936: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0270539540797472
    2. ']:
' → logprob: -3.9020540714263916
    3. ':' → logprob: -5.9020538330078125
    4. ']' → logprob: -6.1520538330078125
    5. ']:
' → logprob: -7.5270538330078125
    6. '       ' → logprob: -7.9020538330078125
    7. '):' → logprob: -8.152053833007812
    8. '   ' → logprob: -8.402053833007812
    9. ' ]' → logprob: -10.027053833007812
    10. ']):' → logprob: -10.527053833007812

Token 937: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04762248694896698
    2. 'dp' → logprob: -3.7976224422454834
    3. ':' → logprob: -4.5476226806640625
    4. ':
' → logprob: -4.6726226806640625
    5. '   ' → logprob: -6.2976226806640625
    6. 'for' → logprob: -7.1726226806640625
    7. ' dp' → logprob: -7.5476226806640625
    8. ' for' → logprob: -7.7976226806640625
    9. '):
' → logprob: -8.547622680664062
    10. '	dp' → logprob: -9.297622680664062

Token 938: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.036661915481090546
    2. 'for' → logprob: -3.6616618633270264
    3. '       ' → logprob: -4.6616621017456055
    4. 'if' → logprob: -7.6616621017456055
    5. '   ' → logprob: -9.036662101745605
    6. 'j' → logprob: -9.036662101745605
    7. '           ' → logprob: -10.036662101745605
    8. ' dp' → logprob: -10.411662101745605
    9. ' for' → logprob: -11.036662101745605
    10. '	dp' → logprob: -11.411662101745605

Token 939: ' On' (ID: 2160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.026726242154836655
    2. 'for' → logprob: -3.651726245880127
    3. '       ' → logprob: -8.901725769042969
    4. 'j' → logprob: -9.276725769042969
    5. '   ' → logprob: -9.401725769042969
    6. 'if' → logprob: -9.401725769042969
    7. ' dp' → logprob: -11.901725769042969
    8. '#' → logprob: -12.276725769042969
    9. ' for' → logprob: -12.401725769042969
    10. '           ' → logprob: -12.776725769042969

Token 940: ' obt' (ID: 5564)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07956498861312866
    2. 'for' → logprob: -2.7045650482177734
    3. ' dp' → logprob: -5.079565048217773
    4. ' for' → logprob: -5.829565048217773
    5. '   ' → logprob: -8.954565048217773
    6. '#' → logprob: -9.329565048217773
    7. ':' → logprob: -10.704565048217773
    8. '	dp' → logprob: -10.829565048217773
    9. '[' → logprob: -10.954565048217773
    10. '=' → logprob: -10.954565048217773

Token 941: 'ient' (ID: 773)
  Prédit: 'iens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iens' → logprob: -0.13135141134262085
    2. 'ient' → logprob: -2.1313514709472656
    3. 'ien' → logprob: -6.006351470947266
    4. 'enir' → logprob: -6.756351470947266
    5. 'ients' → logprob: -8.506351470947266
    6. 'i' → logprob: -8.631351470947266
    7. 'iene' → logprob: -8.756351470947266
    8. 'iennent' → logprob: -10.131351470947266
    9. 'ienne' → logprob: -10.131351470947266
    10. 'e' → logprob: -10.506351470947266

Token 942: ' les' (ID: 1341)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.08617769181728363
    2. ' dp' → logprob: -2.8361775875091553
    3. '       ' → logprob: -4.586177825927734
    4. 'for' → logprob: -5.461177825927734
    5. '           ' → logprob: -5.836177825927734
    6. 'pow' → logprob: -6.836177825927734
    7. '2' → logprob: -7.086177825927734
    8. ' for' → logprob: -7.336177825927734
    9. '[' → logprob: -7.461177825927734
    10. '   ' → logprob: -7.711177825927734

Token 943: ' indices' (ID: 30378)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.019238166511058807
    2. 'for' → logprob: -4.519237995147705
    3. 'j' → logprob: -5.394237995147705
    4. 'comp' → logprob: -7.269237995147705
    5. ' dp' → logprob: -7.269237995147705
    6. 'indices' → logprob: -7.644237995147705
    7. 'val' → logprob: -7.894237995147705
    8. '#' → logprob: -8.144238471984863
    9. ' for' → logprob: -8.769238471984863
    10. 'de' → logprob: -8.894238471984863

Token 944: ' compress' (ID: 34112)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07678043097257614
    2. '=' → logprob: -3.451780319213867
    3. 'comp' → logprob: -4.951780319213867
    4. '[' → logprob: -4.951780319213867
    5. ' comp' → logprob: -5.201780319213867
    6. '       ' → logprob: -5.576780319213867
    7. ' de' → logprob: -6.076780319213867
    8. 'de' → logprob: -6.076780319213867
    9. 'dp' → logprob: -6.076780319213867
    10. 's' → logprob: -7.076780319213867

Token 945: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.6407102942466736
    2. 'comp' → logprob: -1.5157103538513184
    3. '=' → logprob: -2.1407103538513184
    4. ' =' → logprob: -2.8907103538513184
    5. '[' → logprob: -3.8907103538513184
    6. '(comp' → logprob: -4.140710353851318
    7. '{' → logprob: -4.640710353851318
    8. 'é' → logprob: -4.890710353851318
    9. '_comp' → logprob: -5.390710353851318
    10. 's' → logprob: -5.640710353851318

Token 946: ' id' (ID: 1211)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12316076457500458
    2. '=' → logprob: -2.6231608390808105
    3. 'comp' → logprob: -3.9981608390808105
    4. '[' → logprob: -4.4981608390808105
    5. '=[' → logprob: -6.3731608390808105
    6. '(comp' → logprob: -6.3731608390808105
    7. 'for' → logprob: -6.8731608390808105
    8. ' comp' → logprob: -6.8731608390808105
    9. '[j' → logprob: -7.2481608390808105
    10. '       ' → logprob: -7.2481608390808105

Token 947: ' pour' (ID: 1930)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6417144536972046
    2. '_h' → logprob: -1.2667144536972046
    3. ' =' → logprob: -3.016714572906494
    4. '_' → logprob: -3.391714572906494
    5. 'h' → logprob: -3.391714572906494
    6. 's' → logprob: -4.016714572906494
    7. '_i' → logprob: -4.141714572906494
    8. '0' → logprob: -4.641714572906494
    9. '_current' → logprob: -5.016714572906494
    10. '_first' → logprob: -5.641714572906494

Token 948: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.24091435968875885
    2. ' h' → logprob: -2.1159143447875977
    3. 'comp' → logprob: -3.2409143447875977
    4. ' comp' → logprob: -3.2409143447875977
    5. 'a' → logprob: -5.490914344787598
    6. 'i' → logprob: -6.240914344787598
    7. '[h' → logprob: -6.365914344787598
    8. ' i' → logprob: -7.240914344787598
    9. ' a' → logprob: -7.240914344787598
    10. '[' → logprob: -7.240914344787598

Token 949: '[i' (ID: 1768)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.43375301361083984
    2. '[i' → logprob: -1.9337530136108398
    3. '_i' → logprob: -2.18375301361084
    4. ' =' → logprob: -3.05875301361084
    5. '=' → logprob: -3.68375301361084
    6. 'h' → logprob: -5.05875301361084
    7. '_id' → logprob: -5.80875301361084
    8. '0' → logprob: -6.18375301361084
    9. '[h' → logprob: -6.30875301361084
    10. 'id' → logprob: -6.43375301361084

Token 950: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5843828916549683
    2. '],' → logprob: -0.9593828916549683
    3. '[i' → logprob: -3.334383010864258
    4. ']+' → logprob: -5.084383010864258
    5. '])' → logprob: -5.334383010864258
    6. ']),' → logprob: -6.084383010864258
    7. ']],' → logprob: -6.584383010864258
    8. ')]' → logprob: -6.584383010864258
    9. ']=' → logprob: -6.709383010864258
    10. '[' → logprob: -6.709383010864258

Token 951: ' et' (ID: 859)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4812960922718048
    2. '=' → logprob: -0.9812960624694824
    3. ',' → logprob: -4.981296062469482
    4. ']' → logprob: -8.85629653930664
    5. '=h' → logprob: -10.23129653930664
    6. '   ' → logprob: -10.60629653930664
    7. ')' → logprob: -10.73129653930664
    8. ' ' → logprob: -11.10629653930664
    9. ']=' → logprob: -11.10629653930664
    10. '_id' → logprob: -11.60629653930664

Token 952: ' id' (ID: 1211)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.3519701361656189
    2. ' h' → logprob: -1.2269701957702637
    3. 'id' → logprob: -6.601970195770264
    4. ' comp' → logprob: -7.101970195770264
    5. ' id' → logprob: -7.351970195770264
    6. 'comp' → logprob: -7.601970195770264
    7. ' for' → logprob: -10.226969718933105
    8. ' ' → logprob: -10.476969718933105
    9. 'for' → logprob: -10.726969718933105
    10. '   ' → logprob: -10.726969718933105

Token 953: '2' (ID: 17)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5062689781188965
    2. '=' → logprob: -2.0062689781188965
    3. 'h' → logprob: -2.6312689781188965
    4. '2' → logprob: -3.1312689781188965
    5. '_next' → logprob: -3.1312689781188965
    6. '1' → logprob: -3.3812689781188965
    7. '_' → logprob: -4.5062689781188965
    8. 'for' → logprob: -4.5062689781188965
    9. '_h' → logprob: -4.8812689781188965
    10. '```' → logprob: -5.1312689781188965

Token 954: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20934462547302246
    2. '=' → logprob: -1.7093446254730225
    3. '1' → logprob: -5.709344863891602
    4. ',' → logprob: -6.459344863891602
    5. 's' → logprob: -6.834344863891602
    6. '_' → logprob: -6.959344863891602
    7. '_h' → logprob: -8.334344863891602
    8. '=id' → logprob: -8.459344863891602
    9. 'h' → logprob: -8.709344863891602
    10. '=h' → logprob: -8.709344863891602

Token 955: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0439482219517231
    2. ' h' → logprob: -3.168948173522949
    3. 'comp' → logprob: -7.168948173522949
    4. ' comp' → logprob: -9.16894817352295
    5. ' ' → logprob: -10.66894817352295
    6. '   ' → logprob: -10.91894817352295
    7. '	h' → logprob: -12.48144817352295
    8. '  ' → logprob: -12.91894817352295
    9. '    ' → logprob: -13.23144817352295
    10. 'a' → logprob: -13.29394817352295

Token 956: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0077269417233765125
    2. '[h' → logprob: -5.007727146148682
    3. 'h' → logprob: -7.257727146148682
    4. 'i' → logprob: -8.132726669311523
    5. '[' → logprob: -11.757726669311523
    6. '(i' → logprob: -14.132726669311523
    7. '[
' → logprob: -14.382726669311523
    8. '[j' → logprob: -14.507726669311523
    9. ' =' → logprob: -15.132726669311523
    10. '{i' → logprob: -15.257726669311523

Token 957: '+' (ID: 10)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3302980959415436
    2. '+' → logprob: -1.3302980661392212
    3. '[' → logprob: -4.580297946929932
    4. ']' → logprob: -5.455297946929932
    5. '+i' → logprob: -6.455297946929932
    6. ' +' → logprob: -7.955297946929932
    7. ']+' → logprob: -9.45529842376709
    8. '+]' → logprob: -9.95529842376709
    9. 'i' → logprob: -10.08029842376709
    10. '1' → logprob: -10.33029842376709

Token 958: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.017583658918738365
    2. '+' → logprob: -4.767583847045898
    3. ' ' → logprob: -4.767583847045898
    4. 'i' → logprob: -8.642583847045898
    5. '0' → logprob: -9.142583847045898
    6. '   ' → logprob: -10.142583847045898
    7. ' +' → logprob: -10.267583847045898
    8. ']' → logprob: -10.267583847045898
    9. ' i' → logprob: -11.267583847045898
    10. '```' → logprob: -12.142583847045898

Token 959: '].
' (ID: 49887)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.045755088329315186
    2. ']
' → logprob: -3.92075514793396
    3. ' =' → logprob: -4.045754909515381
    4. ']=' → logprob: -6.045754909515381
    5. '=' → logprob: -6.670754909515381
    6. '   ' → logprob: -6.795754909515381
    7. '       ' → logprob: -6.920754909515381
    8. ',' → logprob: -7.545754909515381
    9. '],' → logprob: -8.170755386352539
    10. ']
' → logprob: -8.295755386352539

Token 960: '       ' (ID: 309)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.008570718578994274
    2. ' id' → logprob: -4.883570671081543
    3. '=' → logprob: -7.508570671081543
    4. ' =' → logprob: -8.258570671081543
    5. 'i' → logprob: -10.133570671081543
    6. '[id' → logprob: -10.758570671081543
    7. '       ' → logprob: -10.883570671081543
    8. '   ' → logprob: -10.883570671081543
    9. '{' → logprob: -11.758570671081543
    10. '[' → logprob: -12.258570671081543

Token 961: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' (adapté à ' id') → logprob: -0.026398062705993652
    2. ' id' → logprob: -3.651398181915283
    3. '   ' → logprob: -9.901397705078125
    4. '       ' → logprob: -11.151397705078125
    5. '[id' → logprob: -11.401397705078125
    6. '_id' → logprob: -11.776397705078125
    7. '	id' → logprob: -12.776397705078125
    8. '{id' → logprob: -13.151397705078125
    9. ' =' → logprob: -13.776397705078125
    10. '
' → logprob: -13.776397705078125

Token 962: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5254809260368347
    2. '=' → logprob: -0.9004809260368347
    3. ',' → logprob: -6.1504807472229
    4. '1' → logprob: -8.775481224060059
    5. '=id' → logprob: -10.525481224060059
    6. '=h' → logprob: -11.525481224060059
    7. 's' → logprob: -11.775481224060059
    8. ',h' → logprob: -12.025481224060059
    9. '_' → logprob: -12.150481224060059
    10. ' ,' → logprob: -13.400481224060059

Token 963: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.0010338802821934223
    2. ' comp' → logprob: -6.876033782958984
    3. '(comp' → logprob: -14.751033782958984
    4. '	comp' → logprob: -14.876033782958984
    5. 'com' → logprob: -15.751033782958984
    6. '[' → logprob: -16.251033782958984
    7. '   ' → logprob: -16.626033782958984
    8. ' ' → logprob: -18.626033782958984
    9. '.comp' → logprob: -18.751033782958984
    10. 'c' → logprob: -19.001033782958984

Token 964: '[h' (ID: 88900)
  Prédit: '[h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -3.881560041918419e-05
    2. 'h' → logprob: -10.250039100646973
    3. '[' → logprob: -12.625039100646973
    4. 'H' → logprob: -16.000038146972656
    5. '(h' → logprob: -17.000038146972656
    6. '	h' → logprob: -18.750038146972656
    7. '_h' → logprob: -19.500038146972656
    8. '<h' → logprob: -20.000038146972656
    9. '   ' → logprob: -20.000038146972656
    10. '```' → logprob: -20.750038146972656

Token 965: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.702754474943504e-05
    2. '[' → logprob: -10.75003719329834
    3. '[h' → logprob: -11.62503719329834
    4. 'i' → logprob: -12.25003719329834
    5. 'h' → logprob: -13.75003719329834
    6. ']' → logprob: -14.50003719329834
    7. '(i' → logprob: -15.50003719329834
    8. '])' → logprob: -17.125036239624023
    9. '[
' → logprob: -17.125036239624023
    10. '[j' → logprob: -18.125036239624023

Token 966: ']]
' (ID: 29446)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0009281373349949718
    2. ']]' → logprob: -8.000927925109863
    3. '[' → logprob: -8.125927925109863
    4. 'i' → logprob: -8.250927925109863
    5. ']' → logprob: -10.625927925109863
    6. '(i' → logprob: -12.875927925109863
    7. '   ' → logprob: -13.625927925109863
    8. ']])' → logprob: -13.750927925109863
    9. '[id' → logprob: -14.125927925109863
    10. 'id' → logprob: -14.125927925109863

Token 967: '       ' (ID: 309)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.09322690218687057
    2. ' 
' → logprob: -3.718226909637451
    3. '<|end|>' → logprob: -3.718226909637451
    4. ' id' → logprob: -4.093226909637451
    5. '
' → logprob: -4.968226909637451
    6. ' ' → logprob: -5.093226909637451
    7. ')' → logprob: -5.218226909637451
    8. '  
' → logprob: -6.593226909637451
    9. '[id' → logprob: -7.218226909637451
    10. '[' → logprob: -7.843226909637451

Token 968: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' (adapté à ' id') → logprob: -0.0028268657624721527
    2. ' id' → logprob: -5.877826690673828
    3. '   ' → logprob: -11.002826690673828
    4. '	id' → logprob: -12.377826690673828
    5. ' ' → logprob: -14.502826690673828
    6. '       ' → logprob: -16.002826690673828
    7. ''id' → logprob: -16.752826690673828
    8. '2' → logprob: -16.752826690673828
    9. '_id' → logprob: -16.752826690673828
    10. '[id' → logprob: -17.002826690673828

Token 969: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.10165855288505554
    2. '=' → logprob: -2.476658582687378
    3. ' =' → logprob: -4.476658344268799
    4. '+' → logprob: -7.726658344268799
    5. '+=' → logprob: -7.726658344268799
    6. ' +=' → logprob: -8.851658821105957
    7. '   ' → logprob: -9.601658821105957
    8. ',' → logprob: -10.226658821105957
    9. ' ' → logprob: -10.851658821105957
    10. ']' → logprob: -11.226658821105957

Token 970: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25192928314208984
    2. ' =' → logprob: -1.5019292831420898
    3. ',' → logprob: -16.251930236816406
    4. ')' → logprob: -17.001930236816406
    5. '=com' → logprob: -17.251930236816406
    6. ' ' → logprob: -17.376930236816406
    7. '=}' → logprob: -17.376930236816406
    8. '＝' → logprob: -18.751930236816406
    9. '[' → logprob: -18.751930236816406
    10. '.' → logprob: -19.251930236816406

Token 971: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.06198146939277649
    2. ' comp' → logprob: -2.811981439590454
    3. 'com' → logprob: -12.061981201171875
    4. '	comp' → logprob: -12.436981201171875
    5. 'mod' → logprob: -13.811981201171875
    6. '(comp' → logprob: -14.061981201171875
    7. ' ' → logprob: -14.561981201171875
    8. '   ' → logprob: -15.061981201171875
    9. '0' → logprob: -15.561981201171875
    10. 'c' → logprob: -15.811981201171875

Token 972: '[h' (ID: 88900)
  Prédit: '[h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -7.896309739408025e-07
    2. 'h' → logprob: -14.375000953674316
    3. '[' → logprob: -16.25
    4. '(h' → logprob: -17.125
    5. '[
' → logprob: -20.375
    6. '<h' → logprob: -20.625
    7. '	h' → logprob: -20.875
    8. ' h' → logprob: -21.25
    9. ' [' → logprob: -21.25
    10. '[(' → logprob: -21.75

Token 973: '[i' (ID: 1768)
  Prédit: '[h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -0.02328380011022091
    2. '[i' → logprob: -3.7732837200164795
    3. 'h' → logprob: -10.773283958435059
    4. '[' → logprob: -11.023283958435059
    5. 'i' → logprob: -14.648283958435059
    6. '(h' → logprob: -16.273283004760742
    7. '	h' → logprob: -16.273283004760742
    8. '<h' → logprob: -16.398283004760742
    9. '[
' → logprob: -16.523283004760742
    10. ' [' → logprob: -17.023283004760742

Token 974: ' +' (ID: 659)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.16110555827617645
    2. '+' → logprob: -1.9111055135726929
    3. '[' → logprob: -7.411105632781982
    4. 'i' → logprob: -9.161105155944824
    5. '+i' → logprob: -9.411105155944824
    6. ' +' → logprob: -10.036105155944824
    7. ']' → logprob: -10.786105155944824
    8. '   ' → logprob: -11.661105155944824
    9. '[
' → logprob: -12.286105155944824
    10. '[j' → logprob: -12.786105155944824

Token 975: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. '   ' → logprob: -15.125000953674316
    3. ' ' → logprob: -15.500000953674316
    4. 'i' → logprob: -16.0
    5. '+' → logprob: -18.125
    6. '```' → logprob: -19.0
    7. '0' → logprob: -19.0625
    8. '[' → logprob: -19.125
    9. '
' → logprob: -19.25
    10. '۱' → logprob: -19.6875

Token 976: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.5
    3. '   ' → logprob: -16.25
    4. 'i' → logprob: -17.5
    5. '```' → logprob: -17.8125
    6. '0' → logprob: -17.9375
    7. '+' → logprob: -18.125
    8. '
' → logprob: -18.375
    9. '１' → logprob: -18.8125
    10. '۱' → logprob: -18.9375

Token 977: ']]

' (ID: 84024)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.009473674930632114
    2. ']' → logprob: -4.88447380065918
    3. ']]
' → logprob: -6.38447380065918
    4. ']]

' → logprob: -10.25947380065918
    5. ')]' → logprob: -10.50947380065918
    6. ' ]]' → logprob: -10.50947380065918
    7. ']]]' → logprob: -11.25947380065918
    8. '']]' → logprob: -11.50947380065918
    9. '])]' → logprob: -11.50947380065918
    10. ']]=' → logprob: -12.00947380065918

Token 978: '       ' (ID: 309)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.23663967847824097
    2. '   ' → logprob: -1.9866397380828857
    3. '       ' → logprob: -2.9866397380828857
    4. '	dp' → logprob: -4.111639499664307
    5. '
' → logprob: -5.986639499664307
    6. '    
' → logprob: -6.736639499664307
    7. 'if' → logprob: -7.111639499664307
    8. ' dp' → logprob: -7.486639499664307
    9. '        
' → logprob: -8.361639976501465
    10. '```' → logprob: -8.611639976501465

Token 979: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.12651905417442322
    2. '       ' → logprob: -2.376518964767456
    3. '   ' → logprob: -4.126519203186035
    4. 'if' → logprob: -5.126519203186035
    5. 'for' → logprob: -6.001519203186035
    6. '	dp' → logprob: -7.126519203186035
    7. ' dp' → logprob: -8.876519203186035
    8. '```' → logprob: -8.876519203186035
    9. '           ' → logprob: -9.376519203186035
    10. '#' (adapté à ' #') → logprob: -10.251519203186035

Token 980: ' Pour' (ID: 13931)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.02009390853345394
    2. 'if' → logprob: -4.39509391784668
    3. 'for' → logprob: -4.89509391784668
    4. '#' → logprob: -10.77009391784668
    5. '   ' → logprob: -11.89509391784668
    6. ' dp' → logprob: -12.14509391784668
    7. '	dp' → logprob: -12.83259391784668
    8. '```' → logprob: -12.83259391784668
    9. 'd' → logprob: -12.95759391784668
    10. 'pow' → logprob: -13.52009391784668

Token 981: ' toutes' (ID: 17502)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.04657827690243721
    2. 'id' → logprob: -3.6715781688690186
    3. ' j' → logprob: -4.421578407287598
    4. 'k' → logprob: -5.546578407287598
    5. 'i' → logprob: -6.671578407287598
    6. ' id' → logprob: -7.296578407287598
    7. 'dp' → logprob: -7.546578407287598
    8. '_j' → logprob: -7.671578407287598
    9. '_id' → logprob: -8.171578407287598
    10. 'val' → logprob: -8.421578407287598

Token 982: ' les' (ID: 1341)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5264269709587097
    2. ' j' → logprob: -0.9014269709587097
    3. 'i' → logprob: -7.401426792144775
    4. 'e' → logprob: -7.776426792144775
    5. 'id' → logprob: -7.901426792144775
    6. ' e' → logprob: -8.151427268981934
    7. ' i' → logprob: -8.276427268981934
    8. 'k' → logprob: -8.401427268981934
    9. '   ' → logprob: -8.526427268981934
    10. '_j' → logprob: -8.526427268981934

Token 983: ' valeurs' (ID: 73668)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.08431936800479889
    2. 'k' → logprob: -2.9593193531036377
    3. ' j' → logprob: -4.209319591522217
    4. 'id' → logprob: -4.959319591522217
    5. 'x' → logprob: -5.709319591522217
    6. 'i' → logprob: -6.959319591522217
    7. ' k' → logprob: -7.834319591522217
    8. 'dp' → logprob: -8.334319114685059
    9. ' id' → logprob: -8.459319114685059
    10. 'idx' → logprob: -8.709319114685059

Token 984: ' entre' (ID: 3853)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2889886498451233
    2. ' j' → logprob: -1.4139885902404785
    3. 'k' → logprob: -5.6639885902404785
    4. '<|end|>' → logprob: -6.6639885902404785
    5. ' k' → logprob: -7.2889885902404785
    6. 'x' → logprob: -8.163989067077637
    7. ' ' → logprob: -8.288989067077637
    8. '   ' → logprob: -8.288989067077637
    9. '	j' → logprob: -8.413989067077637
    10. ' de' → logprob: -8.538989067077637

Token 985: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.0007063561934046447
    2. '1' → logprob: -8.375706672668457
    3. ' id' → logprob: -8.375706672668457
    4. '(id' → logprob: -9.250706672668457
    5. 'min' → logprob: -9.375706672668457
    6. '   ' → logprob: -10.125706672668457
    7. 'range' → logprob: -11.625706672668457
    8. 'comp' → logprob: -12.375706672668457
    9. '	id' → logprob: -13.375706672668457
    10. '0' → logprob: -13.625706672668457

Token 986: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39274030923843384
    2. ' et' → logprob: -1.517740249633789
    3. 'et' → logprob: -2.767740249633789
    4. 'and' → logprob: -4.517740249633789
    5. '+' → logprob: -4.892740249633789
    6. '   ' → logprob: -5.017740249633789
    7. ' and' → logprob: -5.392740249633789
    8. ' ,' → logprob: -5.517740249633789
    9. ',id' → logprob: -6.267740249633789
    10. 'id' → logprob: -6.392740249633789

Token 987: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.03806697204709053
    2. ' id' → logprob: -3.288066864013672
    3. '(id' → logprob: -10.913066864013672
    4. 'len' → logprob: -12.663066864013672
    5. '   ' → logprob: -13.663066864013672
    6. ' (' → logprob: -13.788066864013672
    7. ' ' → logprob: -14.788066864013672
    8. '	id' → logprob: -14.788066864013672
    9. ' len' → logprob: -15.413066864013672
    10. '[id' → logprob: -16.163066864013672

Token 988: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.531315314830863e-06
    2. '   ' → logprob: -14.375003814697266
    3. '```' → logprob: -14.437503814697266
    4. '+' → logprob: -14.750003814697266
    5. ' ' → logprob: -14.875003814697266
    6. '۲' → logprob: -15.625003814697266
    7. '₂' → logprob: -16.125003814697266
    8. ' +' → logprob: -16.187503814697266
    9. '(id' → logprob: -16.187503814697266
    10. ',' → logprob: -16.250003814697266

Token 989: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4660787284374237
    2. '+' → logprob: -1.091078758239746
    3. ' +' → logprob: -4.341078758239746
    4. '   ' → logprob: -4.591078758239746
    5. ',' → logprob: -5.716078758239746
    6. '(id' → logprob: -6.091078758239746
    7. ':
' → logprob: -6.591078758239746
    8. '       ' → logprob: -6.716078758239746
    9. ' :' → logprob: -6.841078758239746
    10. '[id' → logprob: -6.841078758239746

Token 990: 'com' (ID: 639)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.05440201237797737
    2. ')' → logprob: -4.429401874542236
    3. 'range' → logprob: -4.804401874542236
    4. '+' → logprob: -5.179401874542236
    5. ':' → logprob: -5.304401874542236
    6. ' id' → logprob: -5.679401874542236
    7. ',' → logprob: -5.679401874542236
    8. 'for' → logprob: -5.804401874542236
    9. '(id' → logprob: -6.554401874542236
    10. 'i' → logprob: -6.679401874542236

Token 991: 'pris' (ID: 102339)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.9379762411117554
    2. 'pr' → logprob: -1.6879762411117554
    3. ')' → logprob: -2.562976360321045
    4. '```' → logprob: -2.812976360321045
    5. '+' → logprob: -2.937976360321045
    6. 'm' → logprob: -3.062976360321045
    7. 'pris' → logprob: -3.312976360321045
    8. ':' → logprob: -3.687976360321045
    9. ',' → logprob: -3.812976360321045
    10. 'pressed' → logprob: -4.562976360321045

Token 992: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2610403299331665
    2. ',' → logprob: -1.8860403299331665
    3. '+' → logprob: -3.386040210723877
    4. '):
' → logprob: -4.136040210723877
    5. ')' → logprob: -4.261040210723877
    6. '),' → logprob: -5.136040210723877
    7. ':' → logprob: -6.136040210723877
    8. '   ' → logprob: -6.386040210723877
    9. ' ,' → logprob: -6.636040210723877
    10. ' ' → logprob: -7.261040210723877

Token 993: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03249609097838402
    2. 'for' → logprob: -4.532495975494385
    3. ' for' → logprob: -4.907495975494385
    4. ':
' → logprob: -5.157495975494385
    5. '+' → logprob: -5.657495975494385
    6. ' :' → logprob: -6.657495975494385
    7. ',' → logprob: -6.782495975494385
    8. '   ' → logprob: -6.907495975494385
    9. '       ' → logprob: -7.657495975494385
    10. ' :
' → logprob: -8.782496452331543

Token 994: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6044161319732666
    2. 'for' → logprob: -0.9794161319732666
    3. '       ' → logprob: -2.6044161319732666
    4. '	for' → logprob: -5.9794158935546875
    5. '   ' → logprob: -6.8544158935546875
    6. 'range' → logprob: -8.729415893554688
    7. ' range' → logprob: -9.479415893554688
    8. '           ' → logprob: -9.604415893554688
    9. '	   ' → logprob: -9.729415893554688
    10. '<|end|>' → logprob: -10.479415893554688

Token 995: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04333782196044922
    2. ' for' → logprob: -3.168337821960449
    3. '	for' → logprob: -8.29333782196045
    4. '       ' → logprob: -9.91833782196045
    5. '   ' → logprob: -10.41833782196045
    6. 'range' → logprob: -12.16833782196045
    7. '	   ' → logprob: -13.66833782196045
    8. '<|end|>' → logprob: -14.04333782196045
    9. '    ' → logprob: -14.54333782196045
    10. ' range' → logprob: -15.29333782196045

Token 996: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00926191546022892
    2. ' for' → logprob: -4.7592620849609375
    3. '	for' → logprob: -7.8842620849609375
    4. '       ' → logprob: -8.384262084960938
    5. '   ' → logprob: -10.384262084960938
    6. '```' → logprob: -12.134262084960938
    7. 'range' → logprob: -13.259262084960938
    8. '<|end|>' → logprob: -13.509262084960938
    9. '	       ' → logprob: -14.384262084960938
    10. '           ' → logprob: -14.509262084960938

Token 997: ' considère' (ID: 176437)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07036363333463669
    2. ' for' → logprob: -2.6953635215759277
    3. '   ' → logprob: -8.070363998413086
    4. '	for' → logprob: -9.445363998413086
    5. '       ' → logprob: -10.820363998413086
    6. '    ' → logprob: -13.070363998413086
    7. 'range' → logprob: -13.070363998413086
    8. ' ' → logprob: -13.445363998413086
    9. ')' → logprob: -13.695363998413086
    10. '```' → logprob: -13.945363998413086

Token 998: ' qu' (ID: 474)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3135318160057068
    2. ' for' → logprob: -1.4385318756103516
    3. '   ' → logprob: -4.313531875610352
    4. ' j' → logprob: -4.688531875610352
    5. 'j' → logprob: -5.688531875610352
    6. '       ' → logprob: -6.188531875610352
    7. '           ' → logprob: -6.938531875610352
    8. 'k' → logprob: -7.313531875610352
    9. 'range' → logprob: -7.313531875610352
    10. ' ' → logprob: -8.188531875610352

Token 999: ''il' (ID: 14683)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6873188018798828
    2. 'for' → logprob: -0.8123188018798828
    3. '   ' → logprob: -3.812318801879883
    4. ' j' → logprob: -4.687318801879883
    5. 'r' → logprob: -5.187318801879883
    6. '       ' → logprob: -5.187318801879883
    7. 'range' → logprob: -5.812318801879883
    8. ' range' → logprob: -6.812318801879883
    9. 'i' → logprob: -7.312318801879883
    10. '    ' → logprob: -7.562318801879883

Token 1000: ' existe' (ID: 19498)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.522373616695404
    2. ' for' → logprob: -1.1473736763000488
    3. '   ' → logprob: -3.022373676300049
    4. ' +=' → logprob: -4.772373676300049
    5. ' dp' → logprob: -5.022373676300049
    6. '[' → logprob: -5.647373676300049
    7. 'dp' → logprob: -5.647373676300049
    8. ']' → logprob: -5.772373676300049
    9. '=' → logprob: -5.772373676300049
    10. ']+=' → logprob: -6.147373676300049

Token 1001: ' ' (ID: 220)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7635502219200134
    2. ')' → logprob: -2.388550281524658
    3. 'for' → logprob: -2.388550281524658
    4. ' dp' → logprob: -3.013550281524658
    5. '=' → logprob: -3.263550281524658
    6. ' j' → logprob: -3.638550281524658
    7. 'j' → logprob: -3.763550281524658
    8. ' for' → logprob: -3.888550281524658
    9. '<|end|>' → logprob: -4.013550281524658
    10. ' )' → logprob: -4.013550281524658

Token 1002: '2' (ID: 17)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.46002811193466187
    2. 'j' → logprob: -1.3350281715393066
    3. 'dp' → logprob: -3.3350281715393066
    4. 'range' → logprob: -3.8350281715393066
    5. 'id' → logprob: -3.9600281715393066
    6. '   ' → logprob: -4.710028171539307
    7. ' for' → logprob: -4.835028171539307
    8. 'i' → logprob: -6.085028171539307
    9. ' j' → logprob: -6.085028171539307
    10. '       ' → logprob: -6.960028171539307

Token 1003: ' façons' (ID: 165958)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.9980518221855164
    2. 'for' → logprob: -0.9980518221855164
    3. ' for' → logprob: -2.498051881790161
    4. ' **' → logprob: -2.998051881790161
    5. '<|end|>' → logprob: -3.373051881790161
    6. '   ' → logprob: -3.748051881790161
    7. ' ' → logprob: -4.623051643371582
    8. '       ' → logprob: -4.748051643371582
    9. 'dp' → logprob: -4.873051643371582
    10. '    ' → logprob: -5.123051643371582

Token 1004: ' d' (ID: 272)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.008242130279541
    2. ' de' → logprob: -1.383242130279541
    3. 'for' → logprob: -1.758242130279541
    4. ' for' → logprob: -2.383242130279541
    5. '           ' → logprob: -3.383242130279541
    6. ' of' → logprob: -4.258242130279541
    7. ' d' → logprob: -4.508242130279541
    8. '   ' → logprob: -4.508242130279541
    9. 'de' → logprob: -4.633242130279541
    10. '    ' → logprob: -5.258242130279541

Token 1005: ''obtenir' (ID: 191633)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.2582506239414215
    2. 'faire' → logprob: -2.8832507133483887
    3. ''aller' → logprob: -3.5082507133483887
    4. ''' → logprob: -3.6332507133483887
    5. ' faire' → logprob: -4.008250713348389
    6. ''ac' → logprob: -4.133250713348389
    7. ''effect' → logprob: -4.258250713348389
    8. ''utiliser' → logprob: -4.508250713348389
    9. '   ' → logprob: -5.508250713348389
    10. ''arr' → logprob: -5.633250713348389

Token 1006: ' ces' (ID: 10532)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3255845606327057
    2. 'for' → logprob: -1.5755845308303833
    3. ' for' → logprob: -3.950584650039673
    4. ' dp' → logprob: -3.950584650039673
    5. '   ' → logprob: -4.325584411621094
    6. '       ' → logprob: -5.450584411621094
    7. 'j' → logprob: -5.700584411621094
    8. 'id' → logprob: -6.200584411621094
    9. ' ' → logprob: -6.450584411621094
    10. '(dp' → logprob: -6.700584411621094

Token 1007: ' états' (ID: 184259)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2725026309490204
    2. ' dp' → logprob: -1.7725026607513428
    3. ' ways' → logprob: -3.8975026607513428
    4. 'for' → logprob: -4.397502422332764
    5. ' for' → logprob: -4.522502422332764
    6. ' states' → logprob: -5.272502422332764
    7. 'positions' → logprob: -5.522502422332764
    8. 'states' → logprob: -6.022502422332764
    9. ']' → logprob: -6.272502422332764
    10. 'id' → logprob: -6.272502422332764

Token 1008: ' à' (ID: 1221)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.891072154045105
    2. ':' → logprob: -1.641072154045105
    3. '   ' → logprob: -2.0160722732543945
    4. 'for' → logprob: -2.1410722732543945
    5. ' for' → logprob: -2.5160722732543945
    6. '           ' → logprob: -3.7660722732543945
    7. ':
' → logprob: -5.1410722732543945
    8. '	for' → logprob: -5.2660722732543945
    9. '[' → logprob: -5.3910722732543945
    10. '<|end|>' → logprob: -5.5160722732543945

Token 1009: ' la' (ID: 557)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.17380352318286896
    2. 'i' → logprob: -2.2988035678863525
    3. 'id' → logprob: -3.6738035678863525
    4. 'j' → logprob: -4.673803329467773
    5. '   ' → logprob: -5.048803329467773
    6. 'for' → logprob: -5.423803329467773
    7. '#' → logprob: -6.173803329467773
    8. '[i' → logprob: -6.298803329467773
    9. 'l' → logprob: -6.673803329467773
    10. 'la' → logprob: -7.298803329467773

Token 1010: ' prochaine' (ID: 78876)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1107531487941742
    2. 'for' → logprob: -2.485753059387207
    3. 'id' → logprob: -4.735753059387207
    4. 'range' → logprob: -5.110753059387207
    5. 'j' → logprob: -6.360753059387207
    6. '=' → logprob: -6.985753059387207
    7. '[i' → logprob: -7.485753059387207
    8. '+' → logprob: -7.610753059387207
    9. '```' → logprob: -7.735753059387207
    10. ' for' → logprob: -7.985753059387207

Token 1011: ' étape' (ID: 83661)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.3217221796512604
    2. 'for' → logprob: -2.6967222690582275
    3. 'ét' → logprob: -2.8217222690582275
    4. '   ' → logprob: -3.0717222690582275
    5. 'position' → logprob: -3.4467222690582275
    6. 'it' → logprob: -4.321722030639648
    7. '#' → logprob: -4.321722030639648
    8. 'indice' → logprob: -5.196722030639648
    9. 'positions' → logprob: -5.321722030639648
    10. 'indent' → logprob: -5.446722030639648

Token 1012: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.973670244216919
    2. '       ' → logprob: -1.348670244216919
    3. ' for' → logprob: -1.598670244216919
    4. ':' → logprob: -2.723670244216919
    5. '   ' → logprob: -3.098670244216919
    6. ':
' → logprob: -3.973670244216919
    7. '	for' → logprob: -4.59867000579834
    8. '[' → logprob: -5.97367000579834
    9. ',' → logprob: -5.97367000579834
    10. '           ' → logprob: -6.22367000579834

Token 1013: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3683614730834961
    2. ' for' → logprob: -1.368361473083496
    3. '	for' → logprob: -3.618361473083496
    4. '   ' → logprob: -3.868361473083496
    5. '       ' → logprob: -5.993361473083496
    6. '[' → logprob: -6.993361473083496
    7. '\t' → logprob: -7.368361473083496
    8. ' ' → logprob: -7.493361473083496
    9. ':' → logprob: -7.993361473083496
    10. '	' → logprob: -8.868361473083496

Token 1014: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0031080730259418488
    2. ' for' → logprob: -5.878108024597168
    3. '	for' → logprob: -8.753108024597168
    4. '   ' → logprob: -9.003108024597168
    5. '       ' → logprob: -10.878108024597168
    6. '```' → logprob: -12.878108024597168
    7. '	   ' → logprob: -15.503108024597168
    8. ' ' → logprob: -16.003108978271484
    9. 'range' → logprob: -16.253108978271484
    10. '           ' → logprob: -16.503108978271484

Token 1015: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.15600784122943878
    2. 'x' → logprob: -2.781007766723633
    3. 'e' → logprob: -3.531007766723633
    4. 'k' → logprob: -3.531007766723633
    5. 'v' → logprob: -4.781007766723633
    6. 'val' → logprob: -5.281007766723633
    7. 'i' → logprob: -6.156007766723633
    8. 'idx' → logprob: -6.281007766723633
    9. '_j' → logprob: -7.531007766723633
    10. 'id' → logprob: -7.531007766723633

Token 1016: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1798129379749298
    2. 'in' → logprob: -1.8048129081726074
    3. ')' → logprob: -11.429813385009766
    4. 'range' → logprob: -11.429813385009766
    5. 'n' → logprob: -11.554813385009766
    6. ',' → logprob: -11.804813385009766
    7. ' ' → logprob: -12.054813385009766
    8. '	in' → logprob: -12.554813385009766
    9. 'id' → logprob: -13.054813385009766
    10. 'd' → logprob: -13.179813385009766

Token 1017: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002613358374219388
    2. ' range' → logprob: -8.250261306762695
    3. '(range' → logprob: -17.250261306762695
    4. '   ' → logprob: -19.125261306762695
    5. ' ' → logprob: -19.500261306762695
    6. '	range' → logprob: -20.000261306762695
    7. 'rang' → logprob: -20.125261306762695
    8. '  ' → logprob: -20.750261306762695
    9. 'r' → logprob: -21.250261306762695
    10. '    ' → logprob: -23.375261306762695

Token 1018: '(id' (ID: 6589)
  Prédit: '(id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(id' → logprob: -0.03806157782673836
    2. 'id' → logprob: -3.2880616188049316
    3. ' id' → logprob: -11.038061141967773
    4. ' (' → logprob: -13.163061141967773
    5. '(' → logprob: -13.913061141967773
    6. '	id' → logprob: -14.788061141967773
    7. '   ' → logprob: -15.413061141967773
    8. '=id' → logprob: -15.413061141967773
    9. '[id' → logprob: -15.663061141967773
    10. ',id' → logprob: -16.538061141967773

Token 1019: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03429074585437775
    2. ' ,' → logprob: -3.4092907905578613
    3. ',j' → logprob: -7.659290790557861
    4. ',id' → logprob: -9.159290313720703
    5. ',
' → logprob: -10.409290313720703
    6. ',len' → logprob: -11.784290313720703
    7. '   ' → logprob: -12.034290313720703
    8. ' ,
' → logprob: -12.784290313720703
    9. ',i' → logprob: -13.409290313720703
    10. ',user' → logprob: -13.409290313720703

Token 1020: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -2.7729658540920354e-05
    2. ' id' → logprob: -10.500027656555176
    3. '(id' → logprob: -16.500028610229492
    4. '   ' → logprob: -17.125028610229492
    5. '	id' → logprob: -19.000028610229492
    6. '       ' → logprob: -20.750028610229492
    7. ' ' → logprob: -21.250028610229492
    8. '           ' → logprob: -21.250028610229492
    9. '1' → logprob: -23.000028610229492
    10. '  ' → logprob: -23.125028610229492

Token 1021: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. '[id' → logprob: -16.625
    3. '+' → logprob: -16.75
    4. '   ' → logprob: -16.875
    5. ' ' → logprob: -17.0
    6. 'id' → logprob: -17.25
    7. '[' → logprob: -17.875
    8. '```' → logprob: -18.0
    9. '{id' → logprob: -18.625
    10. '(id' → logprob: -18.9375

Token 1022: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2519313097000122
    2. ' +' → logprob: -1.5019313097000122
    3. '()+' → logprob: -14.126931190490723
    4. '   ' → logprob: -14.501931190490723
    5. '+
' → logprob: -15.876931190490723
    6. '):
' → logprob: -16.00193214416504
    7. '[' → logprob: -16.12693214416504
    8. ')' → logprob: -16.12693214416504
    9. '2' → logprob: -16.37693214416504
    10. ' ' → logprob: -16.62693214416504

Token 1023: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.584861744660884e-05
    2. ' ' → logprob: -10.000045776367188
    3. '2' → logprob: -15.125045776367188
    4. ')' → logprob: -16.250045776367188
    5. '   ' → logprob: -17.875045776367188
    6. '```' → logprob: -18.125045776367188
    7. '7' → logprob: -19.000045776367188
    8. ',' → logprob: -19.750045776367188
    9. '0' → logprob: -19.750045776367188
    10. '(' → logprob: -19.750045776367188

Token 1024: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.061054359131958e-06
    2. '2' → logprob: -12.500007629394531
    3. ' ' → logprob: -12.750007629394531
    4. '(' → logprob: -13.875007629394531
    5. '0' → logprob: -16.00000762939453
    6. ')' → logprob: -16.00000762939453
    7. '):
' → logprob: -16.12500762939453
    8. '
' → logprob: -16.75000762939453
    9. '   ' → logprob: -18.00000762939453
    10. '):' → logprob: -18.37500762939453

Token 1025: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.12887781858444214
    2. '):' → logprob: -2.128877878189087
    3. '):
' → logprob: -6.503877639770508
    4. ':' → logprob: -8.128877639770508
    5. ':
' → logprob: -9.503877639770508
    6. ')' → logprob: -9.753877639770508
    7. '   ' → logprob: -11.253877639770508
    8. ',' → logprob: -12.878877639770508
    9. ' ):
' → logprob: -13.128877639770508
    10. '       ' → logprob: -13.503877639770508

Token 1026: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5091110467910767
    2. 'dp' → logprob: -1.0091110467910767
    3. '	dp' → logprob: -4.009110927581787
    4. ' dp' → logprob: -4.509110927581787
    5. '   ' → logprob: -5.884110927581787
    6. '           ' → logprob: -7.134110927581787
    7. '(dp' → logprob: -7.134110927581787
    8. '	   ' → logprob: -8.134111404418945
    9. '	       ' → logprob: -8.259111404418945
    10. '_dp' → logprob: -9.634111404418945

Token 1027: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.014241199940443039
    2. ' dp' → logprob: -4.2642412185668945
    3. '   ' → logprob: -10.014241218566895
    4. '	dp' → logprob: -11.014241218566895
    5. '           ' → logprob: -11.514241218566895
    6. '               ' → logprob: -12.889241218566895
    7. '       ' → logprob: -12.889241218566895
    8. ' ' → logprob: -14.014241218566895
    9. '```' → logprob: -15.639241218566895
    10. '_dp' → logprob: -16.014240264892578

Token 1028: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.16026170551776886
    2. '[' → logprob: -1.9102617502212524
    3. '[j' → logprob: -10.535262107849121
    4. 'i' → logprob: -12.035262107849121
    5. '0' → logprob: -12.910262107849121
    6. ' [' → logprob: -14.535262107849121
    7. '[I' → logprob: -14.535262107849121
    8. '```' → logprob: -15.285262107849121
    9. '   ' → logprob: -15.535262107849121
    10. '[u' → logprob: -16.035261154174805

Token 1029: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.062406688928604126
    2. '[i' → logprob: -2.8124067783355713
    3. '[' → logprob: -8.312406539916992
    4. 'i' → logprob: -9.562406539916992
    5. '[j' → logprob: -9.812406539916992
    6. ']' → logprob: -10.187406539916992
    7. '"][' → logprob: -11.687406539916992
    8. ' ][' → logprob: -12.562406539916992
    9. ''][' → logprob: -12.687406539916992
    10. ']][' → logprob: -12.937406539916992

Token 1030: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -9.088346359931165e-07
    2. '	j' → logprob: -14.875000953674316
    3. ' j' → logprob: -15.000000953674316
    4. '[j' → logprob: -16.25
    5. '$j' → logprob: -17.0
    6. '_j' → logprob: -17.875
    7. ']' → logprob: -18.125
    8. '   ' → logprob: -18.5
    9. '0' → logprob: -18.875
    10. ' ' → logprob: -19.375

Token 1031: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6109793186187744
    2. '=' → logprob: -0.8609793186187744
    3. ']=' → logprob: -3.6109793186187744
    4. ' =' → logprob: -5.360979080200195
    5. ']+=' → logprob: -5.985979080200195
    6. '+=' → logprob: -8.735979080200195
    7. ' +=' → logprob: -10.735979080200195
    8. ' ]' → logprob: -11.485979080200195
    9. '+' → logprob: -13.735979080200195
    10. ')' → logprob: -13.860979080200195

Token 1032: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0031901898328214884
    2. '+=' → logprob: -6.003190040588379
    3. ' =' → logprob: -7.253190040588379
    4. ' +=' → logprob: -12.003190040588379
    5. '|' → logprob: -15.753190040588379
    6. ' |=' → logprob: -17.878190994262695
    7. '.=' → logprob: -18.003190994262695
    8. ']+=' → logprob: -18.003190994262695
    9. '+' → logprob: -18.628190994262695
    10. '%=' → logprob: -19.378190994262695

Token 1033: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00012606535165105015
    2. '(' → logprob: -9.875125885009766
    3. ' ' → logprob: -10.000125885009766
    4. 'pow' → logprob: -10.875125885009766
    5. '1' → logprob: -12.375125885009766
    6. '   ' → logprob: -12.625125885009766
    7. 'mod' → logprob: -14.125125885009766
    8. '(pow' → logprob: -14.937625885009766
    9. ' (' → logprob: -15.187625885009766
    10. '0' → logprob: -15.187625885009766

Token 1034: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.6696149840718135e-05
    2. '(' → logprob: -11.000056266784668
    3. '1' → logprob: -11.000056266784668
    4. 'pow' → logprob: -11.250056266784668
    5. ' ' → logprob: -11.875056266784668
    6. '0' → logprob: -13.375056266784668
    7. '   ' → logprob: -14.000056266784668
    8. '(pow' → logprob: -16.000057220458984
    9. '((' → logprob: -16.500057220458984
    10. 'dp' → logprob: -16.562557220458984

Token 1035: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1036: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1037: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04194523021578789
    2. 'else' → logprob: -3.791945219039917
    3. 'elif' → logprob: -4.166945457458496
    4. '<|end|>' → logprob: -6.416945457458496
    5. 'for' → logprob: -7.666945457458496
    6. ' else' → logprob: -8.541945457458496
    7. '.' → logprob: -8.916945457458496
    8. ')' → logprob: -9.166945457458496
    9. '#' (adapté à ' #') → logprob: -9.666945457458496
    10. '       ' → logprob: -9.916945457458496

Token 1038: ' Pour' (ID: 13931)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.19888246059417725
    2. 'else' → logprob: -2.198882579803467
    3. 'elif' → logprob: -2.948882579803467
    4. '   ' → logprob: -4.698882579803467
    5. 'id' → logprob: -5.948882579803467
    6. 'dp' → logprob: -6.323882579803467
    7. 'for' → logprob: -7.448882579803467
    8. '#' → logprob: -7.573882579803467
    9. '```' → logprob: -8.198882102966309
    10. 'if' → logprob: -8.198882102966309

Token 1039: ' tous' (ID: 10688)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.07924743741750717
    2. 'i' → logprob: -2.70424747467041
    3. ' j' → logprob: -4.82924747467041
    4. ' i' → logprob: -7.32924747467041
    5. 'dp' → logprob: -7.95424747467041
    6. 'id' → logprob: -8.82924747467041
    7. 'k' → logprob: -10.32924747467041
    8. 'idx' → logprob: -11.32924747467041
    9. '```' → logprob: -11.32924747467041
    10. ' ' → logprob: -12.07924747467041

Token 1040: ' les' (ID: 1341)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.061100754886865616
    2. ' j' → logprob: -2.936100721359253
    3. 'k' → logprob: -5.186100959777832
    4. ' k' → logprob: -8.186100959777832
    5. 'i' → logprob: -8.436100959777832
    6. '```' → logprob: -10.811100959777832
    7. ' i' → logprob: -10.936100959777832
    8. '   ' → logprob: -11.186100959777832
    9. '_j' → logprob: -11.561100959777832
    10. ' ' → logprob: -11.561100959777832

Token 1041: ' indices' (ID: 30378)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.021753989160060883
    2. 'k' → logprob: -4.146753787994385
    3. ' j' → logprob: -5.271753787994385
    4. 'i' → logprob: -7.646753787994385
    5. ' k' → logprob: -9.896754264831543
    6. 'id' → logprob: -12.146754264831543
    7. 'e' → logprob: -12.271754264831543
    8. '```' → logprob: -12.271754264831543
    9. ' i' → logprob: -12.396754264831543
    10. 'range' → logprob: -12.521754264831543

Token 1042: ' inf' (ID: 5603)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.631003201007843
    2. ' in' → logprob: -1.3810031414031982
    3. ' j' → logprob: -1.7560031414031982
    4. 'in' → logprob: -3.5060031414031982
    5. ' en' → logprob: -5.756003379821777
    6. 'i' → logprob: -5.881003379821777
    7. 'en' → logprob: -6.381003379821777
    8. ',j' → logprob: -6.756003379821777
    9. ',' → logprob: -7.131003379821777
    10. '   ' → logprob: -7.256003379821777

Token 1043: 'érieurs' (ID: 97672)
  Prédit: 'érieurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érieurs' → logprob: -0.0056066494435071945
    2. 'érieur' → logprob: -5.755606651306152
    3. 'é' → logprob: -7.005606651306152
    4. 'er' → logprob: -7.005606651306152
    5. '[' → logprob: -8.505606651306152
    6. 'érieures' → logprob: -9.255606651306152
    7. 'érents' → logprob: -9.505606651306152
    8. 'érieure' → logprob: -9.880606651306152
    9. 'éri' → logprob: -9.880606651306152
    10. '```' → logprob: -10.255606651306152

Token 1044: ' à' (ID: 1221)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.6970078945159912
    2. '(id' → logprob: -2.072007894515991
    3. '(range' → logprob: -2.447007894515991
    4. '(' → logprob: -2.572007894515991
    5. 'range' → logprob: -2.697007894515991
    6. ' à' → logprob: -3.072007894515991
    7. '(i' → logprob: -3.697007894515991
    8. 'en' → logprob: -4.32200813293457
    9. 'à' → logprob: -4.44700813293457
    10. ' in' → logprob: -4.57200813293457

Token 1045: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.0011793931480497122
    2. ' id' → logprob: -6.751179218292236
    3. 'comp' → logprob: -11.751179695129395
    4. 'mod' → logprob: -14.001179695129395
    5. ' ' → logprob: -15.751179695129395
    6. 'range' → logprob: -16.626178741455078
    7. ' comp' → logprob: -17.001178741455078
    8. 'dp' → logprob: -17.126178741455078
    9. 'len' → logprob: -17.251178741455078
    10. 'idx' → logprob: -17.376178741455078

Token 1046: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.44316530227661133
    2. '       ' → logprob: -1.6931653022766113
    3. ':
' → logprob: -2.8181653022766113
    4. 'for' → logprob: -3.0681653022766113
    5. 'in' → logprob: -4.068165302276611
    6. '   ' → logprob: -4.068165302276611
    7. ' in' → logprob: -4.568165302276611
    8. ',' → logprob: -4.943165302276611
    9. ' for' → logprob: -5.818165302276611
    10. '           ' → logprob: -5.818165302276611

Token 1047: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.024693936109542847
    2. '       ' → logprob: -4.399693965911865
    3. 'for' → logprob: -4.524693965911865
    4. '   ' → logprob: -6.899693965911865
    5. '	for' → logprob: -8.774693489074707
    6. ' ' → logprob: -10.024693489074707
    7. '    ' → logprob: -11.274693489074707
    8. '           ' → logprob: -11.649693489074707
    9. ' ' → logprob: -11.649693489074707
    10. '  ' → logprob: -11.774693489074707

Token 1048: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4789133369922638
    2. ' for' → logprob: -0.9789133071899414
    3. '   ' → logprob: -5.728913307189941
    4. ' range' → logprob: -7.478913307189941
    5. 'range' → logprob: -7.603913307189941
    6. ' ' → logprob: -8.478913307189941
    7. '       ' → logprob: -8.728913307189941
    8. '```' → logprob: -9.853913307189941
    9. '	for' → logprob: -10.103913307189941
    10. '  ' → logprob: -12.228913307189941

Token 1049: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00707587506622076
    2. ' for' → logprob: -5.007075786590576
    3. '       ' → logprob: -8.007076263427734
    4. '   ' → logprob: -11.132076263427734
    5. '           ' → logprob: -11.507076263427734
    6. '	for' → logprob: -13.507076263427734
    7. '```' → logprob: -13.882076263427734
    8. ' ' → logprob: -16.632076263427734
    9. 'range' → logprob: -16.757076263427734
    10. '    ' → logprob: -17.007076263427734

Token 1050: ' ne' (ID: 453)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01831323653459549
    2. ' for' → logprob: -4.018313407897949
    3. '   ' → logprob: -9.89331340789795
    4. '	for' → logprob: -10.01831340789795
    5. '       ' → logprob: -11.01831340789795
    6. 'range' → logprob: -11.39331340789795
    7. '```' → logprob: -12.14331340789795
    8. 'or' → logprob: -12.14331340789795
    9. ' ' → logprob: -12.26831340789795
    10. '           ' → logprob: -12.51831340789795

Token 1051: ' peut' (ID: 9216)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08864255994558334
    2. 'pas' → logprob: -2.9636425971984863
    3. 'range' → logprob: -3.8386425971984863
    4. ' for' → logprob: -5.463642597198486
    5. 'dp' → logprob: -6.213642597198486
    6. 'continue' → logprob: -6.338642597198486
    7. 'fill' → logprob: -7.213642597198486
    8. '       ' → logprob: -7.213642597198486
    9. 'pour' → logprob: -7.213642597198486
    10. 'rem' → logprob: -8.463642120361328

Token 1052: ' obtenir' (ID: 54423)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2671668231487274
    2. ' for' → logprob: -2.01716685295105
    3. 'range' → logprob: -2.64216685295105
    4. ' range' → logprob: -4.017166614532471
    5. 'pas' → logprob: -4.642166614532471
    6. ' pas' → logprob: -7.017166614532471
    7. '       ' → logprob: -8.392167091369629
    8. 'r' → logprob: -8.767167091369629
    9. 'i' → logprob: -8.892167091369629
    10. '   ' → logprob: -9.267167091369629

Token 1053: ' cet' (ID: 19505)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5002387166023254
    2. ' dp' → logprob: -2.0002386569976807
    3. 'i' → logprob: -2.3752386569976807
    4. ' i' → logprob: -3.3752386569976807
    5. 'for' → logprob: -3.5002386569976807
    6. ' j' → logprob: -4.00023889541626
    7. ' for' → logprob: -4.12523889541626
    8. 'j' → logprob: -4.25023889541626
    9. 'range' → logprob: -4.50023889541626
    10. ' range' → logprob: -4.75023889541626

Token 1054: ' état' (ID: 59181)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.13662531971931458
    2. ' i' → logprob: -2.136625289916992
    3. '[i' → logprob: -5.761625289916992
    4. ' état' → logprob: -6.636625289916992
    5. 'dp' → logprob: -6.761625289916992
    6. 'e' → logprob: -8.011625289916992
    7. '```' → logprob: -8.011625289916992
    8. 'indice' → logprob: -8.136625289916992
    9. 'j' → logprob: -8.511625289916992
    10. ' dp' → logprob: -8.636625289916992

Token 1055: ' que' (ID: 661)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16824153065681458
    2. ' for' → logprob: -1.9182415008544922
    3. '[i' → logprob: -5.793241500854492
    4. '           ' → logprob: -6.043241500854492
    5. '       ' → logprob: -7.043241500854492
    6. '   ' → logprob: -7.293241500854492
    7. 'pour' → logprob: -7.918241500854492
    8. ' pour' → logprob: -8.543241500854492
    9. '[j' → logprob: -9.043241500854492
    10. ' ' → logprob: -9.793241500854492

Token 1056: ' d' (ID: 272)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.4831007719039917
    2. 'que' → logprob: -1.7331007719039917
    3. ' pas' → logprob: -2.9831008911132812
    4. 'dp' → logprob: -2.9831008911132812
    5. '           ' → logprob: -3.7331008911132812
    6. 'for' → logprob: -3.9831008911132812
    7. ' que' → logprob: -4.483100891113281
    8. '       ' → logprob: -4.608100891113281
    9. 'j' → logprob: -4.733100891113281
    10. 'à' → logprob: -5.233100891113281

Token 1057: ''une' (ID: 13337)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.9759239554405212
    2. 'i' → logprob: -1.350924015045166
    3. 'dp' → logprob: -1.975924015045166
    4. ' dp' → logprob: -2.850924015045166
    5. 'range' → logprob: -3.100924015045166
    6. '[i' → logprob: -3.475924015045166
    7. 'u' → logprob: -3.725924015045166
    8. ' range' → logprob: -3.850924015045166
    9. ' i' → logprob: -4.225924015045166
    10. ' j' → logprob: -4.475924015045166

Token 1058: ' unique' (ID: 5746)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.45335277915000916
    2. 'range' → logprob: -1.9533528089523315
    3. 'dp' → logprob: -2.703352689743042
    4. '#' → logprob: -3.328352689743042
    5. 'for' → logprob: -3.453352689743042
    6. '```' → logprob: -4.078352928161621
    7. 'fois' → logprob: -4.703352928161621
    8. '1' → logprob: -5.078352928161621
    9. 'cop' → logprob: -5.203352928161621
    10. ' seule' → logprob: -5.453352928161621

Token 1059: ' façon' (ID: 33381)
  Prédit: 'fa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fa' → logprob: -0.8198010921478271
    2. 'fois' → logprob: -1.8198010921478271
    3. '1' → logprob: -2.194801092147827
    4. '   ' → logprob: -2.694801092147827
    5. 'man' → logprob: -2.694801092147827
    6. ' façon' → logprob: -2.819801092147827
    7. ' ' → logprob: -3.444801092147827
    8. ' manière' → logprob: -4.069801330566406
    9. 'voie' → logprob: -4.444801330566406
    10. '2' → logprob: -4.569801330566406

Token 1060: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.059439271688461304
    2. 'for' → logprob: -3.184439182281494
    3. ' for' → logprob: -4.184439182281494
    4. '   ' → logprob: -7.809439182281494
    5. '           ' → logprob: -8.059439659118652
    6. ',' → logprob: -8.684439659118652
    7. '      ' → logprob: -10.559439659118652
    8. ':' → logprob: -11.309439659118652
    9. '	for' → logprob: -11.434439659118652
    10. ' (' → logprob: -11.434439659118652

Token 1061: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.43118587136268616
    2. ' for' → logprob: -1.0561858415603638
    3. '   ' → logprob: -6.181185722351074
    4. '```' → logprob: -8.431185722351074
    5. '	for' → logprob: -9.931185722351074
    6. '       ' → logprob: -9.931185722351074
    7. ' 
' → logprob: -10.681185722351074
    8. ' ' → logprob: -11.056185722351074
    9. '  ' → logprob: -11.056185722351074
    10. '<|end|>' → logprob: -11.431185722351074

Token 1062: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.01264302246272564
    2. '       ' → logprob: -4.512642860412598
    3. ' for' → logprob: -6.512642860412598
    4. '   ' → logprob: -9.137642860412598
    5. '	for' → logprob: -13.387642860412598
    6. '```' → logprob: -16.762643814086914
    7. '           ' → logprob: -17.012643814086914
    8. '	' → logprob: -17.512643814086914
    9. ' ' → logprob: -17.512643814086914
    10. '  ' → logprob: -17.762643814086914

Token 1063: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0380612351000309
    2. ' j' → logprob: -3.2880611419677734
    3. 'k' → logprob: -11.663061141967773
    4. '   ' → logprob: -13.163061141967773
    5. ' ' → logprob: -13.413061141967773
    6. '```' → logprob: -13.538061141967773
    7. '	j' → logprob: -13.788061141967773
    8. 'i' → logprob: -13.913061141967773
    9. 'x' → logprob: -13.913061141967773
    10. '`' → logprob: -14.663061141967773

Token 1064: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10025250166654587
    2. 'in' → logprob: -2.350252389907837
    3. 'range' → logprob: -10.600252151489258
    4. '0' → logprob: -12.225252151489258
    5. ' ' → logprob: -12.225252151489258
    6. 'n' → logprob: -13.350252151489258
    7. 's' → logprob: -13.975252151489258
    8. '   ' → logprob: -13.975252151489258
    9. 'i' → logprob: -14.100252151489258
    10. '  ' → logprob: -14.225252151489258

Token 1065: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03804275393486023
    2. ' range' → logprob: -3.2880427837371826
    3. '(range' → logprob: -14.163043022155762
    4. '   ' → logprob: -15.663043022155762
    5. '	range' → logprob: -15.663043022155762
    6. '0' → logprob: -16.288042068481445
    7. ' ' → logprob: -16.288042068481445
    8. 're' → logprob: -16.663042068481445
    9. 'in' → logprob: -17.288042068481445
    10. '    ' → logprob: -17.913042068481445

Token 1066: '(' (ID: 7)
  Prédit: '(id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(id' → logprob: -0.018318740651011467
    2. '(' → logprob: -4.0183186531066895
    3. '0' → logprob: -9.768319129943848
    4. 'range' → logprob: -9.893319129943848
    5. '(range' → logprob: -10.018319129943848
    6. 'id' → logprob: -11.643319129943848
    7. '(i' → logprob: -12.643319129943848
    8. '(idx' → logprob: -13.143319129943848
    9. '(len' → logprob: -13.893319129943848
    10. ' (' → logprob: -14.893319129943848

Token 1067: '0' (ID: 15)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.04868127033114433
    2. '0' → logprob: -3.0486812591552734
    3. ' id' → logprob: -9.548681259155273
    4. '1' → logprob: -11.048681259155273
    5. 'range' → logprob: -13.048681259155273
    6. ' ' → logprob: -13.548681259155273
    7. 'idx' → logprob: -14.423681259155273
    8. '   ' → logprob: -14.673681259155273
    9. 'data' → logprob: -14.798681259155273
    10. '(id' → logprob: -14.798681259155273

Token 1068: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0033230306580662727
    2. ',id' → logprob: -6.253323078155518
    3. ' ,' → logprob: -6.628323078155518
    4. 'id' → logprob: -10.37832260131836
    5. '   ' → logprob: -11.50332260131836
    6. ' ' → logprob: -11.62832260131836
    7. '0' → logprob: -12.00332260131836
    8. ' id' → logprob: -12.25332260131836
    9. 'in' → logprob: -13.00332260131836
    10. ',j' → logprob: -13.37832260131836

Token 1069: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -7.553032628493384e-05
    2. ' id' → logprob: -9.500075340270996
    3. 'mod' → logprob: -14.250075340270996
    4. '   ' → logprob: -17.750076293945312
    5. '	id' → logprob: -18.875076293945312
    6. '(id' → logprob: -19.500076293945312
    7. 'idl' → logprob: -19.875076293945312
    8. 'comp' → logprob: -19.875076293945312
    9. ' ' → logprob: -20.500076293945312
    10. 'idf' → logprob: -20.500076293945312

Token 1070: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.10027255117893219
    2. '):' → logprob: -2.3502726554870605
    3. '+' → logprob: -10.725272178649902
    4. '):

' → logprob: -11.975272178649902
    5. '):
' → logprob: -11.975272178649902
    6. '()):
' → logprob: -12.100272178649902
    7. ':' → logprob: -12.225272178649902
    8. '[' → logprob: -12.475272178649902
    9. '():
' → logprob: -12.725272178649902
    10. ')' → logprob: -12.725272178649902

Token 1071: '           ' (ID: 352)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.09247436374425888
    2. '           ' → logprob: -2.8424744606018066
    3. ' dp' → logprob: -3.7174744606018066
    4. '       ' → logprob: -5.717474460601807
    5. '	dp' → logprob: -6.967474460601807
    6. '(dp' → logprob: -7.342474460601807
    7. '```' → logprob: -7.592474460601807
    8. '[' → logprob: -8.467473983764648
    9. '   ' → logprob: -9.467473983764648
    10. '               ' → logprob: -10.467473983764648

Token 1072: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.00026538874953985214
    2. ' dp' → logprob: -8.250265121459961
    3. '	dp' → logprob: -12.625265121459961
    4. '           ' → logprob: -14.375265121459961
    5. '       ' → logprob: -15.750265121459961
    6. '   ' → logprob: -16.62526512145996
    7. '_dp' → logprob: -18.12526512145996
    8. '(dp' → logprob: -18.12526512145996
    9. '               ' → logprob: -18.62526512145996
    10. ' ' → logprob: -19.50026512145996

Token 1073: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003764535649679601
    2. '][' → logprob: -8.12537670135498
    3. '[' → logprob: -9.62537670135498
    4. 'i' → logprob: -12.00037670135498
    5. '[j' → logprob: -12.87537670135498
    6. '   ' → logprob: -13.25037670135498
    7. ' [' → logprob: -13.50037670135498
    8. ']' → logprob: -14.50037670135498
    9. '```' → logprob: -15.00037670135498
    10. ')[' → logprob: -15.25037670135498

Token 1074: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.34980323910713196
    2. '][' → logprob: -1.2248032093048096
    3. '[i' → logprob: -6.724803447723389
    4. '[' → logprob: -9.72480297088623
    5. ']' → logprob: -10.09980297088623
    6. '   ' → logprob: -11.34980297088623
    7. 'j' → logprob: -11.59980297088623
    8. ')[' → logprob: -11.72480297088623
    9. '```' → logprob: -12.09980297088623
    10. ' ][' → logprob: -12.59980297088623

Token 1075: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0007541201775893569
    2. '1' → logprob: -7.375754356384277
    3. 'i' → logprob: -9.125754356384277
    4. '0' → logprob: -11.250754356384277
    5. ' j' → logprob: -13.000754356384277
    6. '=' → logprob: -14.375754356384277
    7. '[j' → logprob: -14.625754356384277
    8. '   ' → logprob: -14.625754356384277
    9. ' ' → logprob: -14.750754356384277
    10. '2' → logprob: -15.375754356384277

Token 1076: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0013898775214329362
    2. ' =' → logprob: -6.626389980316162
    3. ']' → logprob: -10.251389503479004
    4. ']=' → logprob: -10.501389503479004
    5. '+=' → logprob: -14.251389503479004
    6. '[' → logprob: -15.376389503479004
    7. ')' → logprob: -16.12639045715332
    8. ')=' → logprob: -17.00139045715332
    9. ']+=' → logprob: -17.37639045715332
    10. ' +=' → logprob: -17.75139045715332

Token 1077: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -7.314625690924004e-05
    2. ' =' → logprob: -9.625073432922363
    3. '+=' → logprob: -11.875073432922363
    4. '.=' → logprob: -18.375072479248047
    5. ' +=' → logprob: -19.000072479248047
    6. '   ' → logprob: -20.375072479248047
    7. '[' → logprob: -21.125072479248047
    8. '＝' → logprob: -21.500072479248047
    9. '_=' → logprob: -22.000072479248047
    10. '==' → logprob: -22.125072479248047

Token 1078: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0016250719781965017
    2. '2' → logprob: -6.501625061035156
    3. '0' → logprob: -9.126625061035156
    4. ' ' → logprob: -12.001625061035156
    5. 'dp' → logprob: -12.626625061035156
    6. 'pow' → logprob: -13.939125061035156
    7. '3' → logprob: -14.126625061035156
    8. '   ' → logprob: -14.501625061035156
    9. '4' → logprob: -14.626625061035156
    10. 'mod' → logprob: -14.814125061035156

Token 1079: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004039218183606863
    2. '2' → logprob: -5.629039287567139
    3. '0' → logprob: -7.754039287567139
    4. ' ' → logprob: -13.12903881072998
    5. 'pow' → logprob: -13.12903881072998
    6. 'dp' → logprob: -13.69153881072998
    7. '3' → logprob: -13.87903881072998
    8. '4' → logprob: -13.94153881072998
    9. '(' → logprob: -14.50403881072998
    10. 'mod' → logprob: -14.87903881072998

Token 1080: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1081: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7535686492919922
    2. '<|end|>' → logprob: -1.1285686492919922
    3. '   ' → logprob: -1.7535686492919922
    4. ' for' → logprob: -4.753568649291992
    5. 'else' → logprob: -4.878568649291992
    6. 'i' → logprob: -5.003568649291992
    7. '```' → logprob: -5.753568649291992
    8. 'elif' → logprob: -6.503568649291992
    9. '	for' → logprob: -6.628568649291992
    10. 'if' → logprob: -6.753568649291992

Token 1082: ' #' (ID: 1069)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0024284557439386845
    2. 'elif' → logprob: -6.5024285316467285
    3. ' else' → logprob: -7.1274285316467285
    4. '   ' → logprob: -9.12742805480957
    5. '```' → logprob: -11.50242805480957
    6. '	else' → logprob: -13.75242805480957
    7. ' elif' → logprob: -14.12742805480957
    8. ')' → logprob: -14.75242805480957
    9. '    
' → logprob: -14.75242805480957
    10. '#' (adapté à ' #') → logprob: -15.37742805480957

Token 1083: ' Si' (ID: 7832)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0015389078762382269
    2. 'elif' → logprob: -6.5015387535095215
    3. ' else' → logprob: -10.25153923034668
    4. '```' → logprob: -14.25153923034668
    5. '   ' → logprob: -15.12653923034668
    6. 'if' → logprob: -15.87653923034668
    7. ' elif' → logprob: -17.37653923034668
    8. 'elseif' → logprob: -17.50153923034668
    9. '#' → logprob: -17.62653923034668
    10. 'id' → logprob: -17.87653923034668

Token 1084: ' au' (ID: 2791)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.2841738164424896
    2. 'h' → logprob: -1.409173846244812
    3. ' not' → logprob: -6.284173965454102
    4. ' i' → logprob: -7.534173965454102
    5. 'not' → logprob: -8.034173965454102
    6. 'i' → logprob: -9.034173965454102
    7. ' n' → logprob: -9.534173965454102
    8. 'n' → logprob: -10.409173965454102
    9. ' ' → logprob: -10.659173965454102
    10. 'H' → logprob: -11.284173965454102

Token 1085: ' contraire' (ID: 80029)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6050365567207336
    2. 'h' → logprob: -1.6050364971160889
    3. ' i' → logprob: -2.230036497116089
    4. ' moins' → logprob: -2.730036497116089
    5. ' contraire' → logprob: -3.855036497116089
    6. 'else' → logprob: -4.105036735534668
    7. 'moins' → logprob: -4.980036735534668
    8. 'c' → logprob: -5.105036735534668
    9. 'elif' → logprob: -5.230036735534668
    10. '-delà' → logprob: -5.730036735534668

Token 1086: ' la' (ID: 557)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.5787189602851868
    2. ' h' → logprob: -0.8287189602851868
    3. ' not' → logprob: -6.578719139099121
    4. 'not' → logprob: -7.328719139099121
    5. ':' → logprob: -8.453719139099121
    6. ' i' → logprob: -8.578719139099121
    7. 'i' → logprob: -9.453719139099121
    8. 'else' → logprob: -9.703719139099121
    9. ' ' → logprob: -10.203719139099121
    10. '   ' → logprob: -10.203719139099121

Token 1087: ' deuxième' (ID: 51664)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.049332015216350555
    2. ' h' → logprob: -3.0493319034576416
    3. 'else' → logprob: -8.549331665039062
    4. 'n' → logprob: -9.174331665039062
    5. 'i' → logprob: -9.174331665039062
    6. ' not' → logprob: -9.924331665039062
    7. 'elif' → logprob: -10.049331665039062
    8. 'H' → logprob: -10.174331665039062
    9. 'not' → logprob: -10.424331665039062
    10. ' else' → logprob: -10.674331665039062

Token 1088: ' hauteur' (ID: 72987)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.11982440203428268
    2. 'i' → logprob: -3.6198244094848633
    3. '[i' → logprob: -3.6198244094848633
    4. 'height' → logprob: -3.9948244094848633
    5. ':' → logprob: -4.494824409484863
    6. 'if' → logprob: -5.119824409484863
    7. 'ha' → logprob: -5.119824409484863
    8. ']' → logprob: -5.744824409484863
    9. ' h' → logprob: -6.244824409484863
    10. '[' → logprob: -6.369824409484863

Token 1089: ' est' (ID: 893)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6522217392921448
    2. '[i' → logprob: -1.2772216796875
    3. '<' → logprob: -2.9022216796875
    4. '>' → logprob: -3.0272216796875
    5. '[' → logprob: -3.2772216796875
    6. ' >' → logprob: -4.1522216796875
    7. ' est' → logprob: -4.4022216796875
    8. 'est' → logprob: -4.6522216796875
    9. '[h' → logprob: -5.1522216796875
    10. '<h' → logprob: -5.4022216796875

Token 1090: ' inf' (ID: 5603)
  Prédit: 'strict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strict' → logprob: -0.19271662831306458
    2. 'inf' → logprob: -1.8177165985107422
    3. ' inf' → logprob: -5.442716598510742
    4. 'sup' → logprob: -5.942716598510742
    5. ' strict' → logprob: -6.442716598510742
    6. '<h' → logprob: -6.567716598510742
    7. '<' → logprob: -6.692716598510742
    8. ' supérieure' → logprob: -7.817716598510742
    9. 'infer' → logprob: -7.942716598510742
    10. '>' → logprob: -8.067716598510742

Token 1091: 'érieure' (ID: 45836)
  Prédit: 'érieure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érieure' → logprob: -0.10220597684383392
    2. 'érieur' → logprob: -2.352205991744995
    3. 'é' → logprob: -7.102205753326416
    4. 'érie' → logprob: -7.602205753326416
    5. 'er' → logprob: -8.602206230163574
    6. 'érieurs' → logprob: -8.602206230163574
    7. 'érieures' → logprob: -8.977206230163574
    8. 'éri' → logprob: -9.727206230163574
    9. 'ér' → logprob: -9.977206230163574
    10. 'erie' → logprob: -10.602206230163574

Token 1092: ' à' (ID: 1221)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.8555135726928711
    2. '   ' → logprob: -1.855513572692871
    3. 'else' → logprob: -2.105513572692871
    4. 'elif' → logprob: -2.105513572692871
    5. 'or' → logprob: -2.355513572692871
    6. ':' → logprob: -3.730513572692871
    7. 'ou' → logprob: -4.105513572692871
    8. ' ou' → logprob: -4.480513572692871
    9. ' à' → logprob: -4.980513572692871
    10. 'à' → logprob: -5.355513572692871

Token 1093: ' la' (ID: 557)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0032019545324146748
    2. ' h' → logprob: -5.753201961517334
    3. '   ' → logprob: -11.878201484680176
    4. ' ' → logprob: -12.253201484680176
    5. 'ha' → logprob: -12.503201484680176
    6. '#' → logprob: -12.878201484680176
    7. '```' → logprob: -14.253201484680176
    8. '	h' → logprob: -14.503201484680176
    9. '=' → logprob: -14.878201484680176
    10. '
' → logprob: -14.878201484680176

Token 1094: ' première' (ID: 23423)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.04311817139387131
    2. ' h' → logprob: -3.1681182384490967
    3. 'i' → logprob: -9.793118476867676
    4. '[i' → logprob: -11.043118476867676
    5. ' i' → logprob: -11.418118476867676
    6. ' ' → logprob: -11.543118476867676
    7. '   ' → logprob: -11.918118476867676
    8. '[h' → logprob: -12.043118476867676
    9. '  ' → logprob: -13.043118476867676
    10. '0' → logprob: -13.043118476867676

Token 1095: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02736150100827217
    2. ':
' → logprob: -3.7773613929748535
    3. '   ' → logprob: -5.9023613929748535
    4. 'else' → logprob: -6.6523613929748535
    5. 'elif' → logprob: -10.152361869812012
    6. ' :' → logprob: -11.277361869812012
    7. '```' → logprob: -11.902361869812012
    8. ',' → logprob: -12.152361869812012
    9. ' else' → logprob: -12.402361869812012
    10. ':

' → logprob: -12.527361869812012

Token 1096: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.02905886434018612
    2. ' else' → logprob: -4.404058933258057
    3. '   ' → logprob: -4.529058933258057
    4. '```' → logprob: -5.654058933258057
    5. 'if' → logprob: -6.779058933258057
    6. 'elif' → logprob: -7.029058933258057
    7. ' if' → logprob: -10.029058456420898
    8. ':' → logprob: -10.404058456420898
    9. ' elif' → logprob: -12.029058456420898
    10. 'i' → logprob: -12.654058456420898

Token 1097: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.016908183693885803
    2. 'elif' → logprob: -4.391908168792725
    3. ' else' → logprob: -5.516908168792725
    4. '   ' → logprob: -8.516908645629883
    5. '```' → logprob: -9.016908645629883
    6. 'if' → logprob: -10.391908645629883
    7. ' elif' → logprob: -11.266908645629883
    8. 'el' → logprob: -13.141908645629883
    9. 'e' → logprob: -13.766908645629883
    10. ':' → logprob: -14.891908645629883

Token 1098: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1606256067752838
    2. ':
' → logprob: -1.9106255769729614
    3. '   ' → logprob: -8.410625457763672
    4. '```' → logprob: -10.160625457763672
    5. ' :
' → logprob: -10.535625457763672
    6. 'if' → logprob: -10.785625457763672
    7. ' :' → logprob: -10.785625457763672
    8. '#' → logprob: -10.910625457763672
    9. ':

' → logprob: -11.410625457763672
    10. 'id' → logprob: -12.160625457763672

Token 1099: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.078257441520691
    2. 'id' → logprob: -1.203257441520691
    3. '       ' → logprob: -2.3282575607299805
    4. 'for' → logprob: -2.4532575607299805
    5. ' for' → logprob: -2.7032575607299805
    6. '#' → logprob: -3.3282575607299805
    7. '```' → logprob: -3.4532575607299805
    8. ' id' → logprob: -3.5782575607299805
    9. 'dp' → logprob: -4.9532575607299805
    10. 'i' → logprob: -6.0782575607299805

Token 1100: ' #' (ID: 1069)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.13176389038562775
    2. 'for' → logprob: -2.6317639350891113
    3. 'dp' → logprob: -3.0067639350891113
    4. 'comp' → logprob: -7.506763935089111
    5. '   ' → logprob: -7.756763935089111
    6. '#' (adapté à ' #') → logprob: -7.756763935089111
    7. ' for' → logprob: -8.256763458251953
    8. ' id' → logprob: -8.256763458251953
    9. 'j' → logprob: -10.256763458251953
    10. '       ' → logprob: -10.756763458251953

Token 1101: ' On' (ID: 2160)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.021797146648168564
    2. 'dp' → logprob: -4.521797180175781
    3. 'for' → logprob: -4.771797180175781
    4. '#' → logprob: -6.146797180175781
    5. '   ' → logprob: -10.646797180175781
    6. '
' → logprob: -11.146797180175781
    7. ' id' → logprob: -11.646797180175781
    8. 'if' → logprob: -11.896797180175781
    9. '```' → logprob: -11.896797180175781
    10. 'comp' → logprob: -12.396797180175781

Token 1102: ' obt' (ID: 5564)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13024400174617767
    2. '=' → logprob: -3.255244016647339
    3. 'id' → logprob: -3.380244016647339
    4. '#' → logprob: -3.630244016647339
    5. ' for' → logprob: -4.25524377822876
    6. ' id' → logprob: -5.75524377822876
    7. ' =' → logprob: -6.38024377822876
    8. '
' → logprob: -7.38024377822876
    9. ' #' → logprob: -7.38024377822876
    10. '   ' → logprob: -7.63024377822876

Token 1103: 'ient' (ID: 773)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.6349855661392212
    2. 'tiens' → logprob: -1.7599855661392212
    3. 'ient' → logprob: -1.8849855661392212
    4. 'dp' → logprob: -3.0099854469299316
    5. 'plt' → logprob: -3.1349854469299316
    6. 'serve' → logprob: -3.2599854469299316
    7. 'code' → logprob: -3.7599854469299316
    8. 'f' → logprob: -3.8849854469299316
    9. 'ins' → logprob: -4.134985446929932
    10. 'ère' → logprob: -4.259985446929932

Token 1104: ' l' (ID: 305)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.050756435841321945
    2. 'comp' → logprob: -3.5507564544677734
    3. ' id' → logprob: -4.050756454467773
    4. ' comp' → logprob: -6.300756454467773
    5. '       ' → logprob: -7.050756454467773
    6. 'dp' → logprob: -8.300756454467773
    7. '   ' → logprob: -8.550756454467773
    8. '#' → logprob: -9.800756454467773
    9. 'the' → logprob: -9.800756454467773
    10. '```' → logprob: -11.050756454467773

Token 1105: ''ind' (ID: 82245)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.03242593631148338
    2. 'id' → logprob: -4.032425880432129
    3. 'i' → logprob: -4.907425880432129
    4. ' comp' → logprob: -5.157425880432129
    5. 'h' → logprob: -7.532425880432129
    6. '#' → logprob: -9.032425880432129
    7. '```' → logprob: -9.782425880432129
    8. '	comp' → logprob: -9.907425880432129
    9. '`' → logprob: -10.282425880432129
    10. 'com' → logprob: -10.407425880432129

Token 1106: 'ice' (ID: 603)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.6898062229156494
    2. 'ex' → logprob: -1.1898062229156494
    3. 'ice' → logprob: -1.6898062229156494
    4. 'comp' → logprob: -4.93980598449707
    5. 'ices' → logprob: -6.93980598449707
    6. 'ent' → logprob: -7.31480598449707
    7. '#' → logprob: -8.06480598449707
    8. 'ic' → logprob: -8.93980598449707
    9. 'i' → logprob: -10.06480598449707
    10. '=id' → logprob: -10.68980598449707

Token 1107: ' compress' (ID: 34112)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.3171188533306122
    2. ' =' → logprob: -1.6921188831329346
    3. ' id' → logprob: -2.9421188831329346
    4. '=' → logprob: -3.5671188831329346
    5. 'comp' → logprob: -5.5671186447143555
    6. ' comp' → logprob: -6.8171186447143555
    7. '=id' → logprob: -7.3171186447143555
    8. 'de' → logprob: -8.067118644714355
    9. '2' → logprob: -8.817118644714355
    10. '[id' → logprob: -8.942118644714355

Token 1108: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.021802043542265892
    2. 'id' → logprob: -4.521801948547363
    3. 'isé' → logprob: -5.146801948547363
    4. 'ice' → logprob: -6.646801948547363
    5. 'ex' → logprob: -7.021801948547363
    6. 'és' → logprob: -7.396801948547363
    7. '=' → logprob: -7.521801948547363
    8. 'ise' → logprob: -8.271801948547363
    9. 'éré' → logprob: -8.521801948547363
    10. 'comp' → logprob: -8.896801948547363

Token 1109: ' correspondant' (ID: 146058)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.09551224857568741
    2. ' =' → logprob: -2.9705121517181396
    3. '=' → logprob: -3.4705121517181396
    4. '[id' → logprob: -6.095512390136719
    5. 'comp' → logprob: -6.345512390136719
    6. ' id' → logprob: -6.595512390136719
    7. 'for' → logprob: -6.720512390136719
    8. '[' → logprob: -7.345512390136719
    9. ' for' → logprob: -7.845512390136719
    10. '```' → logprob: -8.720512390136719

Token 1110: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03304971754550934
    2. ' =' → logprob: -3.9080498218536377
    3. 'id' → logprob: -4.408049583435059
    4. '=id' → logprob: -9.158049583435059
    5. ' id' → logprob: -9.408049583435059
    6. '       ' → logprob: -10.658049583435059
    7. '```' → logprob: -11.658049583435059
    8. 'comp' → logprob: -12.033049583435059
    9. '   ' → logprob: -12.158049583435059
    10. '=
' → logprob: -12.908049583435059

Token 1111: ' h' (ID: 312)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.025232382118701935
    2. ' comp' → logprob: -4.275232315063477
    3. 'h' → logprob: -4.525232315063477
    4. ' h' → logprob: -9.525232315063477
    5. '(comp' → logprob: -10.650232315063477
    6. 'H' → logprob: -10.650232315063477
    7. 'com' → logprob: -11.275232315063477
    8. 'compl' → logprob: -11.650232315063477
    9. '	comp' → logprob: -12.150232315063477
    10. 'a' → logprob: -12.650232315063477

Token 1112: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.886803359724581e-05
    2. '[h' → logprob: -10.375079154968262
    3. 'h' → logprob: -10.500079154968262
    4. '[' → logprob: -10.875079154968262
    5. 'i' → logprob: -14.875079154968262
    6. '[a' → logprob: -15.625079154968262
    7. '```' → logprob: -16.000078201293945
    8. '   ' → logprob: -16.375078201293945
    9. 's' → logprob: -16.375078201293945
    10. 'a' → logprob: -16.625078201293945

Token 1113: '+' (ID: 10)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.28856006264686584
    2. '[i' → logprob: -2.288560152053833
    3. '])' → logprob: -2.288560152053833
    4. 'id' → logprob: -4.413559913635254
    5. '])
' → logprob: -4.663559913635254
    6. ']]' → logprob: -4.788559913635254
    7. '[h' → logprob: -5.788559913635254
    8. ']=' → logprob: -5.913559913635254
    9. ']]
' → logprob: -6.038559913635254
    10. '],' → logprob: -6.288559913635254

Token 1114: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003268831642344594
    2. ']' → logprob: -8.750327110290527
    3. 'i' → logprob: -9.375327110290527
    4. ' ' → logprob: -9.875327110290527
    5. '```' → logprob: -11.375327110290527
    6. '0' → logprob: -11.750327110290527
    7. '+' → logprob: -12.250327110290527
    8. '   ' → logprob: -13.375327110290527
    9. '(i' → logprob: -13.500327110290527
    10. '[i' → logprob: -13.875327110290527

Token 1115: '].
' (ID: 49887)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10139685124158859
    2. ']
' → logprob: -2.3513967990875244
    3. ']:
' → logprob: -7.4763970375061035
    4. ']=' → logprob: -8.101396560668945
    5. '],' → logprob: -9.351396560668945
    6. '']' → logprob: -10.226396560668945
    7. ']

' → logprob: -10.226396560668945
    8. ']
' → logprob: -10.976396560668945
    9. ']>
' → logprob: -10.976396560668945
    10. '```' → logprob: -11.101396560668945

Token 1116: '       ' (ID: 309)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.005601545795798302
    2. 'comp' → logprob: -5.880601406097412
    3. '=' → logprob: -6.005601406097412
    4. ' =' → logprob: -9.13060188293457
    5. ' id' → logprob: -9.38060188293457
    6. '```' → logprob: -9.38060188293457
    7. 'j' → logprob: -11.88060188293457
    8. 'i' → logprob: -12.00560188293457
    9. '=id' → logprob: -12.00560188293457
    10. '#' → logprob: -12.13060188293457

Token 1117: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' (adapté à ' id') → logprob: -1.8624639324116288e-06
    2. ' id' → logprob: -13.750001907348633
    3. '```' → logprob: -15.375001907348633
    4. 'idx' → logprob: -15.875001907348633
    5. '   ' → logprob: -16.000001907348633
    6. 'j' → logprob: -16.500001907348633
    7. '       ' → logprob: -16.750001907348633
    8. '
' → logprob: -16.875001907348633
    9. 'comp' → logprob: -17.625001907348633
    10. 'idt' → logprob: -18.125001907348633

Token 1118: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029750484973192215
    2. ' =' → logprob: -3.5297505855560303
    3. '=
' → logprob: -17.52975082397461
    4. '＝' → logprob: -18.52975082397461
    5. 'comp' → logprob: -18.65475082397461
    6. 'd' → logprob: -18.65475082397461
    7. '=}' → logprob: -18.90475082397461
    8. '=int' → logprob: -19.02975082397461
    9. '=

' → logprob: -19.15475082397461
    10. '=id' → logprob: -19.65475082397461

Token 1119: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.3484572172164917
    2. ' comp' → logprob: -1.2234572172164917
    3. '	comp' → logprob: -12.098457336425781
    4. '(comp' → logprob: -12.473457336425781
    5. 'com' → logprob: -13.973457336425781
    6. '```' → logprob: -14.223457336425781
    7. '.comp' → logprob: -14.348457336425781
    8. '[' → logprob: -15.223457336425781
    9. ' comps' → logprob: -15.723457336425781
    10. 'mod' → logprob: -16.47345733642578

Token 1120: '[h' (ID: 88900)
  Prédit: '[h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -1.0280383548888494e-06
    2. 'h' → logprob: -14.000000953674316
    3. '[' → logprob: -15.625000953674316
    4. '(h' → logprob: -17.875001907348633
    5. '<h' → logprob: -21.000001907348633
    6. '	h' → logprob: -21.250001907348633
    7. ' h' → logprob: -21.750001907348633
    8. ' [' → logprob: -22.375001907348633
    9. '   ' → logprob: -22.500001907348633
    10. '[
' → logprob: -22.625001907348633

Token 1121: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0009019309654831886
    2. '[h' → logprob: -7.250901699066162
    3. 'h' → logprob: -8.87590217590332
    4. '[' → logprob: -10.37590217590332
    5. 'i' → logprob: -10.87590217590332
    6. 'H' → logprob: -14.50090217590332
    7. '[
' → logprob: -14.50090217590332
    8. ']' → logprob: -14.62590217590332
    9. '(i' → logprob: -15.12590217590332
    10. '{i' → logprob: -16.37590217590332

Token 1122: ' +' (ID: 659)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.02343612350523472
    2. '+' → logprob: -3.7734360694885254
    3. '[' → logprob: -9.273436546325684
    4. '+i' → logprob: -10.023436546325684
    5. ']' → logprob: -10.148436546325684
    6. ' +' → logprob: -12.648436546325684
    7. ']+' → logprob: -13.398436546325684
    8. '1' → logprob: -13.523436546325684
    9. '[
' → logprob: -13.523436546325684
    10. '])' → logprob: -13.648436546325684

Token 1123: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.875000953674316
    3. 'i' → logprob: -15.250000953674316
    4. '   ' → logprob: -16.125001907348633
    5. '+' → logprob: -17.500001907348633
    6. '```' → logprob: -17.875001907348633
    7. '0' → logprob: -18.625001907348633
    8. '
' → logprob: -18.875001907348633
    9. '`' → logprob: -18.875001907348633
    10. '(i' → logprob: -19.000001907348633

Token 1124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -16.375001907348633
    4. 'i' → logprob: -16.750001907348633
    5. '```' → logprob: -17.625001907348633
    6. '+' → logprob: -17.750001907348633
    7. '0' → logprob: -18.125001907348633
    8. '
' → logprob: -18.125001907348633
    9. '2' → logprob: -18.375001907348633
    10. '１' → logprob: -19.125001907348633

Token 1125: ']]

' (ID: 84024)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00875768531113863
    2. ']
' → logprob: -4.758757591247559
    3. ']]' → logprob: -9.758757591247559
    4. ']+' → logprob: -10.258757591247559
    5. ']
' → logprob: -10.758757591247559
    6. ']

' → logprob: -11.883757591247559
    7. '   ' → logprob: -12.133757591247559
    8. ']]
' → logprob: -12.508757591247559
    9. ')]' → logprob: -12.633757591247559
    10. ' ]' → logprob: -12.633757591247559

Token 1126: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08586551994085312
    2. 'dp' → logprob: -2.7108654975891113
    3. '       ' → logprob: -4.835865497589111
    4. '```' → logprob: -5.335865497589111
    5. ' for' → logprob: -6.710865497589111
    6. '   ' → logprob: -7.085865497589111
    7. '#' → logprob: -7.710865497589111
    8. 'j' → logprob: -8.08586597442627
    9. 'i' → logprob: -9.21086597442627
    10. 'id' → logprob: -9.96086597442627

Token 1127: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14925090968608856
    2. 'dp' → logprob: -2.0242509841918945
    3. 'id' → logprob: -5.1492509841918945
    4. 'j' → logprob: -8.024250984191895
    5. '#' (adapté à ' #') → logprob: -8.774250984191895
    6. 'if' → logprob: -9.149250984191895
    7. ' for' → logprob: -9.899250984191895
    8. 'i' → logprob: -10.649250984191895
    9. 'idx' → logprob: -11.274250984191895
    10. '
' → logprob: -11.399250984191895

Token 1128: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07101340591907501
    2. 'dp' → logprob: -2.6960134506225586
    3. '#' → logprob: -6.946013450622559
    4. 'if' → logprob: -9.946013450622559
    5. 'j' → logprob: -11.321013450622559
    6. '   ' → logprob: -11.571013450622559
    7. '       ' → logprob: -11.571013450622559
    8. 'id' → logprob: -11.571013450622559
    9. ' for' → logprob: -12.571013450622559
    10. 'from' → logprob: -12.696013450622559

Token 1129: ' tous' (ID: 10688)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.03382907435297966
    2. ' j' → logprob: -3.4088289737701416
    3. 'i' → logprob: -9.408828735351562
    4. 'range' → logprob: -9.783828735351562
    5. ' range' → logprob: -11.658828735351562
    6. '```' → logprob: -11.783828735351562
    7. '0' → logprob: -12.533828735351562
    8. ' i' → logprob: -12.533828735351562
    9. '_j' → logprob: -13.096328735351562
    10. ' ' → logprob: -13.283828735351562

Token 1130: ' les' (ID: 1341)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.31337979435920715
    2. 'j' → logprob: -1.3133797645568848
    3. '_j' → logprob: -10.563380241394043
    4. '(j' → logprob: -10.688380241394043
    5. ' in' → logprob: -10.813380241394043
    6. '	j' → logprob: -11.188380241394043
    7. 'i' → logprob: -11.688380241394043
    8. 'in' → logprob: -12.188380241394043
    9. '<|end|>' → logprob: -12.438380241394043
    10. ' i' → logprob: -12.813380241394043

Token 1131: ' indices' (ID: 30378)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.006742723751813173
    2. ' j' → logprob: -5.00674295425415
    3. 'range' → logprob: -11.881742477416992
    4. '_j' → logprob: -12.131742477416992
    5. 'i' → logprob: -12.256742477416992
    6. ' range' → logprob: -12.631742477416992
    7. '```' → logprob: -13.381742477416992
    8. '	j' → logprob: -14.131742477416992
    9. '[j' → logprob: -14.381742477416992
    10. '`' → logprob: -14.506742477416992

Token 1132: ' strict' (ID: 12035)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2568037807941437
    2. 'in' → logprob: -1.5068037509918213
    3. 'j' → logprob: -5.8818039894104
    4. '(j' → logprob: -7.0068039894104
    5. ' en' → logprob: -8.506803512573242
    6. ' j' → logprob: -8.631803512573242
    7. 'range' → logprob: -9.131803512573242
    8. ',j' → logprob: -9.131803512573242
    9. '[j' → logprob: -9.256803512573242
    10. '(' → logprob: -9.381803512573242

Token 1133: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.0009120595059357584
    2. 'ément' → logprob: -7.875912189483643
    3. 'u' → logprob: -9.000911712646484
    4. 'ements' → logprob: -9.125911712646484
    5. 'ment' → logprob: -9.625911712646484
    6. 'urement' → logprob: -9.875911712646484
    7. 'ument' → logprob: -10.250911712646484
    8. 'ly' → logprob: -10.250911712646484
    9. 'ur' → logprob: -11.125911712646484
    10. 'ivement' → logprob: -11.250911712646484

Token 1134: ' inf' (ID: 5603)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.19520051777362823
    2. 'j' → logprob: -1.8202005624771118
    3. ' inf' → logprob: -4.945200443267822
    4. 'infer' → logprob: -5.820200443267822
    5. ' j' → logprob: -6.195200443267822
    6. 'sup' → logprob: -6.570200443267822
    7. 'moins' → logprob: -7.445200443267822
    8. 'in' → logprob: -7.570200443267822
    9. ' inférieur' → logprob: -8.19520092010498
    10. 'en' → logprob: -9.57020092010498

Token 1135: 'érieurs' (ID: 97672)
  Prédit: 'érieurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érieurs' → logprob: -0.06140730530023575
    2. 'érieur' → logprob: -3.9364073276519775
    3. 'érieure' → logprob: -3.9364073276519775
    4. 'érie' → logprob: -5.061407089233398
    5. 'ieurs' → logprob: -5.936407089233398
    6. 'érents' → logprob: -6.061407089233398
    7. 'érieures' → logprob: -6.061407089233398
    8. 'é' → logprob: -6.561407089233398
    9. 'ers' → logprob: -7.311407089233398
    10. 'éments' → logprob: -7.561407089233398

Token 1136: ' à' (ID: 1221)
  Prédit: '(id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(id' → logprob: -0.10711425542831421
    2. '(j' → logprob: -2.607114315032959
    3. '(' → logprob: -3.857114315032959
    4. 'à' → logprob: -5.607114315032959
    5. ' à' → logprob: -6.482114315032959
    6. '(i' → logprob: -8.2321138381958
    7. 'to' → logprob: -8.3571138381958
    8. 'j' → logprob: -9.1071138381958
    9. 'id' → logprob: -9.2321138381958
    10. ' (' → logprob: -9.2321138381958

Token 1137: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.00014299227041192353
    2. ' id' → logprob: -9.000143051147461
    3. 'comp' → logprob: -11.500143051147461
    4. 'len' → logprob: -11.750143051147461
    5. 'i' → logprob: -14.500143051147461
    6. '   ' → logprob: -15.500143051147461
    7. 'data' → logprob: -16.12514305114746
    8. 'n' → logprob: -16.25014305114746
    9. 'h' → logprob: -16.37514305114746
    10. ' ' → logprob: -16.37514305114746

Token 1138: ' :
' (ID: 10039)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4370890259742737
    2. ':' → logprob: -1.062088966369629
    3. '       ' → logprob: -5.312088966369629
    4. '           ' → logprob: -6.437088966369629
    5. '+' → logprob: -7.562088966369629
    6. '():
' → logprob: -7.812088966369629
    7. '[' → logprob: -8.062088966369629
    8. '):
' → logprob: -8.937088966369629
    9. ':
' → logprob: -9.312088966369629
    10. '   ' → logprob: -9.312088966369629

Token 1139: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23045256733894348
    2. ' for' → logprob: -2.105452537536621
    3. '       ' → logprob: -3.230452537536621
    4. '```' → logprob: -3.355452537536621
    5. '[' → logprob: -5.730452537536621
    6. '   ' → logprob: -5.855452537536621
    7. '           ' → logprob: -6.230452537536621
    8. 'dp' → logprob: -6.980452537536621
    9. '[j' → logprob: -9.355452537536621
    10. ' ' → logprob: -9.355452537536621

Token 1140: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.019444195553660393
    2. ' for' → logprob: -4.144443988800049
    3. '       ' → logprob: -6.394443988800049
    4. '```' → logprob: -7.144443988800049
    5. 'dp' → logprob: -7.519443988800049
    6. '   ' → logprob: -8.519444465637207
    7. '           ' → logprob: -8.769444465637207
    8. 'range' → logprob: -11.019444465637207
    9. '[' → logprob: -11.144444465637207
    10. '``' → logprob: -12.394444465637207

Token 1141: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.019442206248641014
    2. 'dp' → logprob: -4.144442081451416
    3. ' for' → logprob: -6.519442081451416
    4. '       ' → logprob: -6.894442081451416
    5. '           ' → logprob: -7.269442081451416
    6. '   ' → logprob: -8.894442558288574
    7. '```' → logprob: -9.894442558288574
    8. ' dp' → logprob: -11.644442558288574
    9. 'range' → logprob: -12.019442558288574
    10. '               ' → logprob: -12.644442558288574

Token 1142: ' él' (ID: 13045)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00925955269485712
    2. ' for' → logprob: -5.3842597007751465
    3. 'dp' → logprob: -5.5092597007751465
    4. '=' → logprob: -8.384259223937988
    5. '       ' → logprob: -8.509259223937988
    6. '   ' → logprob: -10.134259223937988
    7. '           ' → logprob: -10.509259223937988
    8. '```' → logprob: -10.884259223937988
    9. ' =' → logprob: -11.134259223937988
    10. ' dp' → logprob: -11.384259223937988

Token 1143: 'ève' (ID: 41151)
  Prédit: 'ève'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ève' → logprob: -0.026005204766988754
    2. 'dp' → logprob: -4.151005268096924
    3. 've' → logprob: -5.401005268096924
    4. 'eve' → logprob: -5.526005268096924
    5. 'ev' → logprob: -7.401005268096924
    6. 'e' → logprob: -8.026004791259766
    7. 'le' → logprob: -8.776004791259766
    8. 'se' → logprob: -10.151004791259766
    9. 'l' → logprob: -10.276004791259766
    10. '#' → logprob: -10.276004791259766

Token 1144: ' ' (ID: 220)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.022679388523101807
    2. ' dp' → logprob: -3.897679328918457
    3. '(dp' → logprob: -7.397679328918457
    4. '	dp' → logprob: -8.522679328918457
    5. '   ' → logprob: -8.772679328918457
    6. '       ' → logprob: -8.772679328918457
    7. '2' → logprob: -8.897679328918457
    8. '```' → logprob: -8.897679328918457
    9. 'j' → logprob: -9.272679328918457
    10. 'pow' → logprob: -9.522679328918457

Token 1145: '2' (ID: 17)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0014014291809871793
    2. '2' → logprob: -7.751401424407959
    3. 'pow' → logprob: -7.876401424407959
    4. ' dp' → logprob: -8.376401901245117
    5. '(dp' → logprob: -9.001401901245117
    6. 'for' → logprob: -9.501401901245117
    7. 'j' → logprob: -9.626401901245117
    8. '```' → logprob: -11.126401901245117
    9. '	dp' → logprob: -11.376401901245117
    10. '   ' → logprob: -11.751401901245117

Token 1146: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5512639284133911
    2. '**' → logprob: -2.0512638092041016
    3. 'to' → logprob: -2.1762638092041016
    4. '<|end|>' → logprob: -3.0512638092041016
    5. 'for' → logprob: -3.5512638092041016
    6. ')' → logprob: -3.6762638092041016
    7. '```' → logprob: -4.676263809204102
    8. '
' → logprob: -4.676263809204102
    9. '[j' → logprob: -4.801263809204102
    10. ' to' → logprob: -5.176263809204102

Token 1147: ' la' (ID: 557)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.13616591691970825
    2. 'pow' → logprob: -2.8861658573150635
    3. 'dp' → logprob: -3.0111658573150635
    4. '2' → logprob: -4.761166095733643
    5. '(j' → logprob: -5.261166095733643
    6. '[j' → logprob: -6.261166095733643
    7. '1' → logprob: -6.636166095733643
    8. '(dp' → logprob: -6.636166095733643
    9. '```' → logprob: -7.636166095733643
    10. 'the' → logprob: -7.886166095733643

Token 1148: ' différence' (ID: 79196)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.1409929096698761
    2. 'dp' → logprob: -2.3909928798675537
    3. 'pow' → logprob: -4.015993118286133
    4. '(dp' → logprob: -4.890993118286133
    5. '(j' → logprob: -5.515993118286133
    6. 'power' → logprob: -5.765993118286133
    7. 'mod' → logprob: -6.515993118286133
    8. '2' → logprob: -6.765993118286133
    9. '(' → logprob: -6.765993118286133
    10. 'for' → logprob: -7.140993118286133

Token 1149: ' h' (ID: 312)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.3541766405105591
    2. '=' → logprob: -2.6041765213012695
    3. '[h' → logprob: -3.1041765213012695
    4. 'de' → logprob: -3.6041765213012695
    5. '[j' → logprob: -3.9791765213012695
    6. 'h' → logprob: -4.1041765213012695
    7. ' =' → logprob: -4.1041765213012695
    8. '(' → logprob: -4.3541765213012695
    9. '(j' → logprob: -4.6041765213012695
    10. '#' → logprob: -4.6041765213012695

Token 1150: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.017919180914759636
    2. '[id' → logprob: -5.017919063568115
    3. 'i' → logprob: -6.017919063568115
    4. '[' → logprob: -6.017919063568115
    5. '[j' → logprob: -6.142919063568115
    6. 'id' → logprob: -6.267919063568115
    7. 'h' → logprob: -7.017919063568115
    8. '2' → logprob: -7.642919063568115
    9. '[h' → logprob: -8.892919540405273
    10. '```' → logprob: -9.142919540405273

Token 1151: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0017757382011041045
    2. '[id' → logprob: -6.751775741577148
    3. '[' → logprob: -8.501775741577148
    4. ']' → logprob: -9.126775741577148
    5. '[j' → logprob: -9.251775741577148
    6. 'i' → logprob: -9.376775741577148
    7. 'id' → logprob: -10.251775741577148
    8. '][' → logprob: -10.376775741577148
    9. '0' → logprob: -11.376775741577148
    10. '   ' → logprob: -11.876775741577148

Token 1152: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.2984431982040405
    2. '**' → logprob: -1.6734431982040405
    3. ' -' → logprob: -1.7984431982040405
    4. ')' → logprob: -2.54844331741333
    5. ',' → logprob: -2.54844331741333
    6. '```' → logprob: -3.04844331741333
    7. '   ' → logprob: -3.42344331741333
    8. '[j' → logprob: -3.67344331741333
    9. '^' → logprob: -3.79844331741333
    10. '[' → logprob: -4.29844331741333

Token 1153: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.007974845357239246
    2. ' h' → logprob: -5.757974624633789
    3. 'comp' → logprob: -6.132974624633789
    4. 'data' → logprob: -7.007974624633789
    5. 'j' → logprob: -7.882974624633789
    6. 'id' → logprob: -8.007974624633789
    7. '2' → logprob: -8.257974624633789
    8. '   ' → logprob: -8.757974624633789
    9. '(h' → logprob: -9.132974624633789
    10. ' comp' → logprob: -9.132974624633789

Token 1154: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.012631602585315704
    2. 'i' → logprob: -5.012631416320801
    3. '[' → logprob: -6.137631416320801
    4. '[j' → logprob: -6.387631416320801
    5. '(i' → logprob: -7.137631416320801
    6. '[id' → logprob: -7.887631416320801
    7. 'h' → logprob: -8.0126314163208
    8. 'id' → logprob: -8.7626314163208
    9. 'j' → logprob: -9.2626314163208
    10. '2' → logprob: -9.6376314163208

Token 1155: '+' (ID: 10)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3579123020172119
    2. '[j' → logprob: -1.607912302017212
    3. ']' → logprob: -2.732912302017212
    4. '[id' → logprob: -4.482912063598633
    5. '+' → logprob: -5.482912063598633
    6. '[' → logprob: -5.607912063598633
    7. ']+' → logprob: -5.607912063598633
    8. 'id' → logprob: -5.732912063598633
    9. 'i' → logprob: -6.107912063598633
    10. 'j' → logprob: -6.482912063598633

Token 1156: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.337155355140567e-05
    2. '[i' → logprob: -11.000062942504883
    3. '   ' → logprob: -11.250062942504883
    4. '+' → logprob: -11.375062942504883
    5. ' ' → logprob: -11.500062942504883
    6. 'i' → logprob: -12.750062942504883
    7. '[' → logprob: -13.687562942504883
    8. ']' → logprob: -14.000062942504883
    9. '```' → logprob: -14.062562942504883
    10. '`' → logprob: -14.312562942504883

Token 1157: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.537043035030365
    2. '[j' → logprob: -1.7870430946350098
    3. ',' → logprob: -2.4120430946350098
    4. ')' → logprob: -2.6620430946350098
    5. '[' → logprob: -3.5370430946350098
    6. '],' → logprob: -3.7870430946350098
    7. '+' → logprob: -4.53704309463501
    8. ']+' → logprob: -5.03704309463501
    9. '```' → logprob: -5.91204309463501
    10. 'j' → logprob: -6.03704309463501

Token 1158: ' modulo' (ID: 112372)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3146020472049713
    2. ')' → logprob: -2.4396021366119385
    3. '<|end|>' → logprob: -3.3146021366119385
    4. 'for' → logprob: -3.4396021366119385
    5. '           ' → logprob: -3.5646021366119385
    6. ' and' → logprob: -3.9396021366119385
    7. ' for' → logprob: -4.189601898193359
    8. '2' → logprob: -4.439601898193359
    9. ' j' → logprob: -5.689601898193359
    10. 'j' → logprob: -5.689601898193359

Token 1159: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.03805101290345192
    2. ' mod' → logprob: -3.288051128387451
    3. '(mod' → logprob: -11.913050651550293
    4. '	mod' → logprob: -13.288050651550293
    5. ' ' → logprob: -15.163050651550293
    6. '```' → logprob: -15.288050651550293
    7. '_mod' → logprob: -15.663050651550293
    8. ' ' → logprob: -16.03805160522461
    9. ' modulo' → logprob: -16.28805160522461
    10. ' мод' → logprob: -16.53805160522461

Token 1160: ' et' (ID: 859)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7162262201309204
    2. ')' → logprob: -1.8412262201309204
    3. '**' → logprob: -2.716226100921631
    4. 'for' → logprob: -2.966226100921631
    5. '           ' → logprob: -2.966226100921631
    6. ':
' → logprob: -3.216226100921631
    7. 'dp' → logprob: -3.341226100921631
    8. '):' → logprob: -3.841226100921631
    9. '       ' → logprob: -3.966226100921631
    10. ',' → logprob: -4.341226100921631

Token 1161: ' on' (ID: 402)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.1691027879714966
    2. ' dp' → logprob: -1.4191027879714966
    3. '=' → logprob: -1.5441027879714966
    4. ')' → logprob: -2.794102668762207
    5. 'for' → logprob: -3.169102668762207
    6. '       ' → logprob: -3.794102668762207
    7. ' for' → logprob: -4.294102668762207
    8. ' j' → logprob: -4.419102668762207
    9. '%' → logprob: -4.544102668762207
    10. ' =' → logprob: -4.669102668762207

Token 1162: ' affect' (ID: 7902)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07370328158140182
    2. ' for' → logprob: -3.4487032890319824
    3. 'dp' → logprob: -4.573703289031982
    4. '+=' → logprob: -5.698703289031982
    5. ']' → logprob: -5.823703289031982
    6. 'range' → logprob: -5.823703289031982
    7. ')' → logprob: -5.823703289031982
    8. '=' → logprob: -5.823703289031982
    9. 'pow' → logprob: -6.073703289031982
    10. '[j' → logprob: -6.323703289031982

Token 1163: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.008994000032544136
    2. 'ue' → logprob: -4.758994102478027
    3. '=' → logprob: -8.883994102478027
    4. 'er' → logprob: -9.008994102478027
    5. 'é' → logprob: -9.758994102478027
    6. '       ' → logprob: -10.508994102478027
    7. '           ' → logprob: -12.008994102478027
    8. '   ' → logprob: -12.258994102478027
    9. 'ant' → logprob: -12.258994102478027
    10. 'ent' → logprob: -13.008994102478027

Token 1164: ' la' (ID: 557)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.10567927360534668
    2. ' dp' → logprob: -2.6056792736053467
    3. '(dp' → logprob: -3.9806792736053467
    4. '2' → logprob: -5.480679512023926
    5. '   ' → logprob: -6.980679512023926
    6. 'pow' → logprob: -7.105679512023926
    7. '(' → logprob: -7.730679512023926
    8. ' ' → logprob: -7.855679512023926
    9. '           ' → logprob: -8.605679512023926
    10. '	dp' → logprob: -8.605679512023926

Token 1165: ' valeur' (ID: 41664)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.019479384645819664
    2. ' dp' → logprob: -4.269479274749756
    3. 'pow' → logprob: -5.894479274749756
    4. '2' → logprob: -6.894479274749756
    5. 'val' → logprob: -7.894479274749756
    6. 'value' → logprob: -8.519479751586914
    7. '[j' → logprob: -9.019479751586914
    8. 'j' → logprob: -9.019479751586914
    9. '(dp' → logprob: -9.019479751586914
    10. 'for' → logprob: -9.144479751586914

Token 1166: ' dans' (ID: 2671)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.12939535081386566
    2. 'dp' → logprob: -2.5043952465057373
    3. '=' → logprob: -4.504395484924316
    4. '[' → logprob: -4.879395484924316
    5. ' dp' → logprob: -5.129395484924316
    6. ' =' → logprob: -5.504395484924316
    7. '[i' → logprob: -6.004395484924316
    8. 'for' → logprob: -6.254395484924316
    9. '(dp' → logprob: -6.879395484924316
    10. '   ' → logprob: -7.129395484924316

Token 1167: ' la' (ID: 557)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00020187153131701052
    2. ' dp' → logprob: -8.625202178955078
    3. '   ' → logprob: -11.875202178955078
    4. '	dp' → logprob: -12.000202178955078
    5. '(dp' → logprob: -12.125202178955078
    6. '[' → logprob: -14.500202178955078
    7. '```' → logprob: -14.750202178955078
    8. '`' → logprob: -15.000202178955078
    9. '_dp' → logprob: -15.000202178955078
    10. 'for' → logprob: -15.125202178955078

Token 1168: ' table' (ID: 3293)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0004517646157182753
    2. 'for' → logprob: -8.000452041625977
    3. ' dp' → logprob: -10.125452041625977
    4. '   ' → logprob: -11.125452041625977
    5. '[i' → logprob: -11.250452041625977
    6. 'i' → logprob: -11.375452041625977
    7. '
' → logprob: -11.750452041625977
    8. '#' → logprob: -12.875452041625977
    9. 'd' → logprob: -12.875452041625977
    10. '	dp' → logprob: -12.875452041625977

Token 1169: ' dp' (ID: 21546)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2882646918296814
    2. 'dp' → logprob: -1.5382647514343262
    3. '[j' → logprob: -3.788264751434326
    4. '[' → logprob: -5.413264751434326
    5. 'for' → logprob: -6.038264751434326
    6. ' dp' → logprob: -6.788264751434326
    7. '=' → logprob: -7.288264751434326
    8. '   ' → logprob: -7.413264751434326
    9. '       ' → logprob: -7.413264751434326
    10. '           ' → logprob: -7.538264751434326

Token 1170: '.
' (ID: 558)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.04139981046319008
    2. 'dp' → logprob: -4.416399955749512
    3. '[' → logprob: -4.541399955749512
    4. '[j' → logprob: -4.791399955749512
    5. 'for' → logprob: -5.166399955749512
    6. '           ' → logprob: -7.166399955749512
    7. '       ' → logprob: -7.541399955749512
    8. '=' → logprob: -7.541399955749512
    9. '   ' → logprob: -7.916399955749512
    10. '(dp' → logprob: -8.041399955749512

Token 1171: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1907341480255127
    2. '[' → logprob: -1.3157341480255127
    3. 'dp' → logprob: -1.9407341480255127
    4. ' for' → logprob: -2.3157341480255127
    5. '   ' → logprob: -2.8157341480255127
    6. '       ' → logprob: -3.5657341480255127
    7. '[j' → logprob: -3.6907341480255127
    8. '[i' → logprob: -3.9407341480255127
    9. '2' → logprob: -4.315733909606934
    10. '```' → logprob: -4.440733909606934

Token 1172: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.18016543984413147
    2. ' for' → logprob: -1.930165410041809
    3. '[' → logprob: -5.3051652908325195
    4. '       ' → logprob: -5.4301652908325195
    5. ' ' → logprob: -5.6801652908325195
    6. '   ' → logprob: -6.0551652908325195
    7. 'dp' → logprob: -6.6801652908325195
    8. '           ' → logprob: -6.9301652908325195
    9. '2' → logprob: -7.1801652908325195
    10. 'pow' → logprob: -7.5551652908325195

Token 1173: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.005242414306849241
    2. ' j' → logprob: -5.255242347717285
    3. '_j' → logprob: -12.755242347717285
    4. '```' → logprob: -13.130242347717285
    5. '	j' → logprob: -13.755242347717285
    6. 'i' → logprob: -14.255242347717285
    7. '   ' → logprob: -14.255242347717285
    8. '_' → logprob: -15.380242347717285
    9. 'range' → logprob: -15.505242347717285
    10. '`' → logprob: -15.880242347717285

Token 1174: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08907283842563629
    2. 'in' → logprob: -2.4640729427337646
    3. 'n' → logprob: -9.964073181152344
    4. 'range' → logprob: -10.589073181152344
    5. '[' → logprob: -11.089073181152344
    6. '0' → logprob: -11.589073181152344
    7. ' ' → logprob: -11.839073181152344
    8. 's' → logprob: -12.089073181152344
    9. '(' → logprob: -12.964073181152344
    10. 'd' → logprob: -12.964073181152344

Token 1175: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01251424103975296
    2. ' range' → logprob: -4.387514114379883
    3. '(range' → logprob: -12.762514114379883
    4. 'in' → logprob: -14.012514114379883
    5. '(' → logprob: -15.512514114379883
    6. 're' → logprob: -15.887514114379883
    7. '0' → logprob: -15.887514114379883
    8. ' in' → logprob: -16.137514114379883
    9. '	range' → logprob: -16.262514114379883
    10. '   ' → logprob: -16.762514114379883

Token 1176: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31417688727378845
    2. '(id' → logprob: -1.3141769170761108
    3. '0' → logprob: -7.1891770362854
    4. '(j' → logprob: -9.314176559448242
    5. 'id' → logprob: -10.564176559448242
    6. '(len' → logprob: -10.939176559448242
    7. ' (' → logprob: -11.689176559448242
    8. '[id' → logprob: -12.814176559448242
    9. '(i' → logprob: -12.814176559448242
    10. '(
' → logprob: -13.314176559448242

Token 1177: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20168998837471008
    2. 'id' → logprob: -1.7016899585723877
    3. '(id' → logprob: -8.701689720153809
    4. ' id' → logprob: -9.576689720153809
    5. '(' → logprob: -11.451689720153809
    6. '   ' → logprob: -11.826689720153809
    7. ' ' → logprob: -11.951689720153809
    8. 'range' → logprob: -11.951689720153809
    9. '1' → logprob: -12.451689720153809
    10. ')' → logprob: -13.576689720153809

Token 1178: ',' (ID: 11)
  Prédit: '(id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(id' → logprob: -0.258041113615036
    2. '(' → logprob: -1.5080411434173584
    3. ',' → logprob: -5.508040904998779
    4. 'id' → logprob: -7.008040904998779
    5. ',id' → logprob: -7.633040904998779
    6. '0' → logprob: -8.008041381835938
    7. 'range' → logprob: -8.758041381835938
    8. ' (' → logprob: -9.508041381835938
    9. ' id' → logprob: -10.633041381835938
    10. '(len' → logprob: -10.883041381835938

Token 1179: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -1.688212614681106e-05
    2. ' id' → logprob: -11.000017166137695
    3. '	id' → logprob: -16.250017166137695
    4. 'mod' → logprob: -17.250017166137695
    5. '(id' → logprob: -18.125017166137695
    6. 'idl' → logprob: -18.875017166137695
    7. '   ' → logprob: -19.250017166137695
    8. 'idf' → logprob: -19.500017166137695
    9. '"id' → logprob: -19.875017166137695
    10. '[id' → logprob: -21.000017166137695

Token 1180: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.012877951376140118
    2. '):' → logprob: -5.512877941131592
    3. ':' → logprob: -6.012877941131592
    4. '+' → logprob: -6.637877941131592
    5. ':
' → logprob: -6.637877941131592
    6. '[' → logprob: -6.762877941131592
    7. '   ' → logprob: -7.262877941131592
    8. '       ' → logprob: -7.387877941131592
    9. '=' → logprob: -7.762877941131592
    10. '():
' → logprob: -8.51287841796875

Token 1181: '           ' (ID: 352)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3331754207611084
    2. '           ' → logprob: -1.4581754207611084
    3. '       ' → logprob: -3.2081754207611084
    4. '[' → logprob: -5.8331756591796875
    5. ' dp' → logprob: -5.8331756591796875
    6. '	dp' → logprob: -7.0831756591796875
    7. ':' → logprob: -7.2081756591796875
    8. '```' → logprob: -7.2081756591796875
    9. '   ' → logprob: -7.4581756591796875
    10. ':
' → logprob: -7.7081756591796875

Token 1182: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -5.991464786347933e-05
    2. ' dp' → logprob: -9.750060081481934
    3. '           ' → logprob: -13.750060081481934
    4. '	dp' → logprob: -15.125060081481934
    5. '(dp' → logprob: -15.625060081481934
    6. '   ' → logprob: -17.250059127807617
    7. '       ' → logprob: -18.250059127807617
    8. 'pow' → logprob: -19.000059127807617
    9. '               ' → logprob: -19.375059127807617
    10. '_dp' → logprob: -20.000059127807617

Token 1183: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.3458322731312364e-06
    2. '[' → logprob: -12.125007629394531
    3. '[j' → logprob: -14.125007629394531
    4. '[I' → logprob: -15.125007629394531
    5. 'i' → logprob: -15.375007629394531
    6. ' [' → logprob: -15.500007629394531
    7. '][' → logprob: -15.625007629394531
    8. '```' → logprob: -16.75000762939453
    9. ')[' → logprob: -17.12500762939453
    10. '\[' → logprob: -17.12500762939453

Token 1184: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.005312023684382439
    2. '[j' → logprob: -5.255311965942383
    3. '][' → logprob: -9.630311965942383
    4. '[' → logprob: -11.505311965942383
    5. '```' → logprob: -14.505311965942383
    6. ')[' → logprob: -14.755311965942383
    7. '[id' → logprob: -15.255311965942383
    8. ' [' → logprob: -15.380311965942383
    9. '=' → logprob: -15.630311965942383
    10. '   ' → logprob: -16.005311965942383

Token 1185: 'j' (ID: 73)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.004116153810173273
    2. '(' → logprob: -6.004116058349609
    3. '(pow' → logprob: -6.879116058349609
    4. '2' → logprob: -7.504116058349609
    5. 'j' → logprob: -10.62911605834961
    6. 'max' → logprob: -11.37911605834961
    7. ' pow' → logprob: -11.75411605834961
    8. '(j' → logprob: -11.87911605834961
    9. '(h' → logprob: -13.25411605834961
    10. '0' → logprob: -14.00411605834961

Token 1186: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002224125899374485
    2. ' =' → logprob: -6.377223968505859
    3. ']=' → logprob: -7.877223968505859
    4. ']' → logprob: -8.87722396850586
    5. '+=' → logprob: -13.62722396850586
    6. ']+=' → logprob: -13.62722396850586
    7. '   ' → logprob: -16.50222396850586
    8. ')=' → logprob: -16.50222396850586
    9. ')' → logprob: -16.50222396850586
    10. '[' → logprob: -16.62722396850586

Token 1187: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0005536287208087742
    2. ' =' → logprob: -7.500553607940674
    3. '+=' → logprob: -14.375554084777832
    4. ']=' → logprob: -17.625553131103516
    5. '.=' → logprob: -18.000553131103516
    6. '＝' → logprob: -18.625553131103516
    7. '%=' → logprob: -19.125553131103516
    8. '*=' → logprob: -19.125553131103516
    9. ')=' → logprob: -19.250553131103516
    10. ' +=' → logprob: -19.500553131103516

Token 1188: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -1.0087516784551553e-05
    2. '(pow' → logprob: -11.62501049041748
    3. '2' → logprob: -14.50001049041748
    4. ' pow' → logprob: -15.00001049041748
    5. '(' → logprob: -15.37501049041748
    6. '   ' → logprob: -17.250009536743164
    7. '       ' → logprob: -19.375009536743164
    8. '_pow' → logprob: -19.750009536743164
    9. '```' → logprob: -19.750009536743164
    10. '1' → logprob: -20.000009536743164

Token 1189: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0325924449716695e-05
    2. '2' → logprob: -11.50001049041748
    3. '(
' → logprob: -16.125009536743164
    4. ' (' → logprob: -19.750009536743164
    5. '```' → logprob: -21.625009536743164
    6. '(
' → logprob: -21.875009536743164
    7. ' ' → logprob: -22.875009536743164
    8. '(

' → logprob: -22.875009536743164
    9. 's' → logprob: -23.125009536743164
    10. '[' → logprob: -23.125009536743164

Token 1190: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.7968066206085496e-05
    2. '(' → logprob: -10.500027656555176
    3. ' ' → logprob: -14.750027656555176
    4. '   ' → logprob: -20.000028610229492
    5. '(
' → logprob: -20.625028610229492
    6. '```' → logprob: -20.750028610229492
    7. ')' → logprob: -21.125028610229492
    8. '۲' → logprob: -21.875028610229492
    9. '  ' → logprob: -22.250028610229492
    10. '[' → logprob: -22.500028610229492

Token 1191: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006900313310325146
    2. ',h' → logprob: -5.006900310516357
    3. '(h' → logprob: -9.381900787353516
    4. ' ,' → logprob: -9.506900787353516
    5. ',
' → logprob: -11.506900787353516
    6. ',(' → logprob: -12.381900787353516
    7. '(' → logprob: -12.631900787353516
    8. ',H' → logprob: -13.631900787353516
    9. ',j' → logprob: -14.006900787353516
    10. ' h' → logprob: -14.256900787353516

Token 1192: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0017240844899788499
    2. '(h' → logprob: -6.3767242431640625
    3. ' h' → logprob: -10.876724243164062
    4. '   ' → logprob: -14.001724243164062
    5. '(' → logprob: -14.251724243164062
    6. 'mod' → logprob: -14.376724243164062
    7. '[h' → logprob: -15.001724243164062
    8. ' (' → logprob: -15.126724243164062
    9. '	h' → logprob: -15.751724243164062
    10. 'abs' → logprob: -16.001724243164062

Token 1193: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0012189284898340702
    2. '[h' → logprob: -6.751218795776367
    3. '[' → logprob: -10.626218795776367
    4. 'i' → logprob: -11.626218795776367
    5. 'h' → logprob: -11.876218795776367
    6. '[j' → logprob: -12.251218795776367
    7. 'H' → logprob: -14.376218795776367
    8. '[u' → logprob: -14.626218795776367
    9. '(i' → logprob: -14.876218795776367
    10. '[I' → logprob: -15.126218795776367

Token 1194: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.008901849389076233
    2. '[' → logprob: -4.758902072906494
    3. '[j' → logprob: -8.383901596069336
    4. ']' → logprob: -10.133901596069336
    5. 'i' → logprob: -11.633901596069336
    6. '[
' → logprob: -13.258901596069336
    7. '[I' → logprob: -13.508901596069336
    8. '(i' → logprob: -13.633901596069336
    9. '```' → logprob: -14.133901596069336
    10. '0' → logprob: -14.258901596069336

Token 1195: ' -' (ID: 533)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03530069440603256
    2. '[' → logprob: -3.4103007316589355
    3. '[j' → logprob: -6.6603007316589355
    4. '[
' → logprob: -9.035300254821777
    5. '-' → logprob: -9.535300254821777
    6. '[-' → logprob: -9.785300254821777
    7. ')' → logprob: -10.285300254821777
    8. ']' → logprob: -10.285300254821777
    9. ' -' → logprob: -11.410300254821777
    10. '[h' → logprob: -11.410300254821777

Token 1196: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0032749217934906483
    2. ' h' → logprob: -5.753274917602539
    3. 'j' → logprob: -9.878274917602539
    4. '1' → logprob: -11.503274917602539
    5. '   ' → logprob: -11.878274917602539
    6. '[h' → logprob: -12.003274917602539
    7. ' ' → logprob: -12.128274917602539
    8. '[' → logprob: -12.253274917602539
    9. 'data' → logprob: -12.753274917602539
    10. '2' → logprob: -13.253274917602539

Token 1197: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.008629930205643177
    2. '[' → logprob: -5.38362979888916
    3. '1' → logprob: -5.63362979888916
    4. 'i' → logprob: -8.50862979888916
    5. '[j' → logprob: -9.13362979888916
    6. ' ' → logprob: -10.63362979888916
    7. ' [' → logprob: -11.00862979888916
    8. ' i' → logprob: -11.38362979888916
    9. ']' → logprob: -11.50862979888916
    10. '   ' → logprob: -11.63362979888916

Token 1198: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.013079171068966389
    2. '[i' → logprob: -5.0130791664123535
    3. '[' → logprob: -5.1380791664123535
    4. '1' → logprob: -8.513079643249512
    5. '[j' → logprob: -8.513079643249512
    6. ' +' → logprob: -10.388079643249512
    7. '[next' → logprob: -11.263079643249512
    8. '-' → logprob: -11.513079643249512
    9. '+i' → logprob: -12.138079643249512
    10. ']' → logprob: -12.138079643249512

Token 1199: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.127333340875339e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -15.250003814697266
    4. '
' → logprob: -16.125003814697266
    5. '```' → logprob: -18.000003814697266
    6. '  ' → logprob: -18.375003814697266
    7. '           ' → logprob: -18.562503814697266
    8. '[' → logprob: -18.750003814697266
    9. '    ' → logprob: -19.375003814697266
    10. '       ' → logprob: -19.562503814697266

Token 1200: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -16.375001907348633
    4. '```' → logprob: -17.625001907348633
    5. '2' → logprob: -18.812501907348633
    6. ']' → logprob: -18.812501907348633
    7. '+' → logprob: -18.812501907348633
    8. '<|end|>' → logprob: -19.187501907348633
    9. '  ' → logprob: -19.250001907348633
    10. '১' → logprob: -19.312501907348633

Token 1201: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.14810556173324585
    2. ',' → logprob: -2.0231056213378906
    3. ']' → logprob: -5.398105621337891
    4. '           ' → logprob: -8.14810562133789
    5. ' ,' → logprob: -8.89810562133789
    6. '),' → logprob: -9.14810562133789
    7. '               ' → logprob: -9.89810562133789
    8. ' ],' → logprob: -9.89810562133789
    9. ',j' → logprob: -9.89810562133789
    10. '[j' → logprob: -10.02310562133789

Token 1202: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.0206720617134124e-05
    2. ' mod' → logprob: -11.50001049041748
    3. '	mod' → logprob: -20.250009536743164
    4. '(mod' → logprob: -21.875009536743164
    5. 'MOD' → logprob: -23.875009536743164
    6. '           ' → logprob: -24.125009536743164
    7. 'moder' → logprob: -24.500009536743164
    8. ' мод' → logprob: -24.625009536743164
    9. '   ' → logprob: -24.750009536743164
    10. '_mod' → logprob: -26.250009536743164

Token 1203: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.226628895296017e-06
    2. ' )' → logprob: -12.500007629394531
    3. ')
' → logprob: -13.375007629394531
    4. '   ' → logprob: -13.875007629394531
    5. ')#' → logprob: -15.875007629394531
    6. '           ' → logprob: -16.12500762939453
    7. ')}' → logprob: -16.25000762939453
    8. ',' → logprob: -16.25000762939453
    9. '))' → logprob: -16.25000762939453
    10. '),' → logprob: -16.50000762939453

Token 1204: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1205: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3743659555912018
    2. '   ' → logprob: -2.249366044998169
    3. ' for' → logprob: -2.499366044998169
    4. '<|end|>' → logprob: -3.499366044998169
    5. 'dp' → logprob: -3.749366044998169
    6. 'i' → logprob: -3.999366044998169
    7. '[' → logprob: -4.12436580657959
    8. '#' (adapté à ' #') → logprob: -4.49936580657959
    9. '<|end|>' → logprob: -5.87436580657959
    10. '```' → logprob: -5.87436580657959

Token 1206: ' Calcul' (ID: 57243)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006748178042471409
    2. 'dp' → logprob: -5.006748199462891
    3. '#' → logprob: -11.13174819946289
    4. 'return' → logprob: -11.75674819946289
    5. ' for' → logprob: -12.00674819946289
    6. '   ' → logprob: -13.38174819946289
    7. '       ' → logprob: -14.00674819946289
    8. '```' → logprob: -14.38174819946289
    9. 'j' → logprob: -14.75674819946289
    10. 'id' → logprob: -15.63174819946289

Token 1207: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3270696699619293
    2. '   ' → logprob: -2.5770697593688965
    3. ' of' → logprob: -3.0770697593688965
    4. ' de' → logprob: -3.4520697593688965
    5. 'de' → logprob: -3.7020697593688965
    6. 'for' → logprob: -3.7020697593688965
    7. ' for' → logprob: -4.3270697593688965
    8. 'id' → logprob: -4.4520697593688965
    9. '#' → logprob: -4.8270697593688965
    10. 'diff' → logprob: -5.0770697593688965

Token 1208: ' la' (ID: 557)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.8490654230117798
    2. 'dp' → logprob: -1.5990654230117798
    3. 'pow' → logprob: -1.7240654230117798
    4. 'j' → logprob: -2.3490653038024902
    5. 'h' → logprob: -3.2240653038024902
    6. 'for' → logprob: -4.09906530380249
    7. 'range' → logprob: -4.22406530380249
    8. 'len' → logprob: -5.09906530380249
    9. 'l' → logprob: -5.09906530380249
    10. ' id' → logprob: -5.84906530380249

Token 1209: ' valeur' (ID: 41664)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9017118811607361
    2. 'id' → logprob: -1.2767119407653809
    3. 'val' → logprob: -2.026711940765381
    4. 'j' → logprob: -3.026711940765381
    5. 'diff' → logprob: -3.151711940765381
    6. 'dp' → logprob: -3.276711940765381
    7. 'value' → logprob: -5.276711940765381
    8. 's' → logprob: -5.401711940765381
    9. 'difference' → logprob: -5.526711940765381
    10. 'max' → logprob: -5.776711940765381

Token 1210: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5913310647010803
    2. 'for' → logprob: -2.2163310050964355
    3. '       ' → logprob: -2.5913310050964355
    4. '[' → logprob: -2.8413310050964355
    5. ' for' → logprob: -3.0913310050964355
    6. '2' → logprob: -3.4663310050964355
    7. ' dp' → logprob: -3.4663310050964355
    8. '=' → logprob: -3.8413310050964355
    9. ' =' → logprob: -3.9663310050964355
    10. ' id' → logprob: -4.7163310050964355

Token 1211: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.7848862373502925e-05
    2. '[' → logprob: -11.500027656555176
    3. '       ' → logprob: -12.250027656555176
    4. '[j' → logprob: -12.625027656555176
    5. '   ' → logprob: -12.875027656555176
    6. 's' → logprob: -13.125027656555176
    7. 'for' → logprob: -14.000027656555176
    8. '[n' → logprob: -14.125027656555176
    9. 'i' → logprob: -14.500027656555176
    10. 'def' → logprob: -14.750027656555176

Token 1212: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.5694757103919983
    2. '[' → logprob: -1.5694756507873535
    3. '[i' → logprob: -2.5694756507873535
    4. '[id' → logprob: -2.6944756507873535
    5. '[j' → logprob: -3.9444756507873535
    6. 'id' → logprob: -4.0694756507873535
    7. '=' → logprob: -4.5694756507873535
    8. ',' → logprob: -4.8194756507873535
    9. 'for' → logprob: -5.1944756507873535
    10. ']' → logprob: -5.8194756507873535

Token 1213: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.0015527134528383613
    2. 'comp' → logprob: -7.251552581787109
    3. 'range' → logprob: -7.626552581787109
    4. 'mod' → logprob: -8.75155258178711
    5. '0' → logprob: -8.87655258178711
    6. ' id' → logprob: -10.87655258178711
    7. ']' → logprob: -12.25155258178711
    8. 'i' → logprob: -12.50155258178711
    9. '(id' → logprob: -13.00155258178711
    10. 'h' → logprob: -13.37655258178711

Token 1214: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007613255642354488
    2. ']=' → logprob: -5.382613182067871
    3. '[id' → logprob: -6.257613182067871
    4. ']+=' → logprob: -7.507613182067871
    5. '[' → logprob: -9.007613182067871
    6. '   ' → logprob: -9.257613182067871
    7. '+' → logprob: -9.882613182067871
    8. '-' → logprob: -10.007613182067871
    9. '=' → logprob: -10.257613182067871
    10. ' ]' → logprob: -10.507613182067871

Token 1215: ' en' (ID: 469)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4416418671607971
    2. '=' → logprob: -1.5666418075561523
    3. '[j' → logprob: -2.6916418075561523
    4. ' =' → logprob: -3.3166418075561523
    5. '[i' → logprob: -3.9416418075561523
    6. ' dp' → logprob: -4.566641807556152
    7. '   ' → logprob: -4.941641807556152
    8. '[' → logprob: -5.566641807556152
    9. 'for' → logprob: -7.066641807556152
    10. '[id' → logprob: -7.316641807556152

Token 1216: ' multip' (ID: 17524)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.011737411841750145
    2. 'dp' → logprob: -5.38673734664917
    3. '2' → logprob: -5.88673734664917
    4. 'range' → logprob: -7.01173734664917
    5. '(pow' → logprob: -7.13673734664917
    6. '(' → logprob: -7.63673734664917
    7. '=' → logprob: -7.76173734664917
    8. ' pow' → logprob: -8.011737823486328
    9. '   ' → logprob: -8.636737823486328
    10. '0' → logprob: -8.636737823486328

Token 1217: 'li' (ID: 1307)
  Prédit: 'ly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ly' → logprob: -0.06002869829535484
    2. 'li' → logprob: -3.5600287914276123
    3. 'lié' → logprob: -4.685028553009033
    4. 'le' → logprob: -5.310028553009033
    5. 'lying' → logprob: -5.685028553009033
    6. 'lication' → logprob: -5.935028553009033
    7. '[' → logprob: -5.935028553009033
    8. 'lied' → logprob: -6.685028553009033
    9. '```' → logprob: -7.310028553009033
    10. 'lique' → logprob: -7.560028553009033

Token 1218: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.08495248109102249
    2. 'e' → logprob: -3.0849525928497314
    3. '[' → logprob: -4.584952354431152
    4. 'ed' → logprob: -5.834952354431152
    5. 'pl' → logprob: -5.834952354431152
    6. 'cation' → logprob: -5.834952354431152
    7. 'é' → logprob: -6.084952354431152
    8. 'quant' → logprob: -6.459952354431152
    9. 'cant' → logprob: -6.584952354431152
    10. 'er' → logprob: -6.709952354431152

Token 1219: ' ' (ID: 220)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.6903979182243347
    2. 'dp' → logprob: -1.0653979778289795
    3. '(dp' → logprob: -2.5653979778289795
    4. '2' → logprob: -3.4403979778289795
    5. '(pow' → logprob: -3.9403979778289795
    6. '(' → logprob: -4.0653977394104
    7. ' dp' → logprob: -5.4403977394104
    8. ' pow' → logprob: -6.1903977394104
    9. ' (' → logprob: -7.4403977394104
    10. '1' → logprob: -7.4403977394104

Token 1220: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6548990607261658
    2. 'pow' → logprob: -1.4048991203308105
    3. '(' → logprob: -1.7798991203308105
    4. '(pow' → logprob: -3.1548991203308105
    5. 'dp' → logprob: -4.0298991203308105
    6. '(dp' → logprob: -5.5298991203308105
    7. '1' → logprob: -7.4048991203308105
    8. 'mod' → logprob: -7.5298991203308105
    9. ' pow' → logprob: -8.654898643493652
    10. '   ' → logprob: -9.029898643493652

Token 1221: ' par' (ID: 686)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011874786578118801
    2. '*' → logprob: -5.386874675750732
    3. '[' → logprob: -6.136874675750732
    4. '   ' → logprob: -6.761874675750732
    5. ')' → logprob: -7.636874675750732
    6. '=' → logprob: -7.761874675750732
    7. ']' → logprob: -8.01187515258789
    8. '(' → logprob: -8.01187515258789
    9. '**' → logprob: -8.13687515258789
    10. ',j' → logprob: -8.51187515258789

Token 1222: ' (' (ID: 350)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.013842481188476086
    2. 'dp' → logprob: -4.763842582702637
    3. '2' → logprob: -5.888842582702637
    4. ' pow' → logprob: -7.138842582702637
    5. '(pow' → logprob: -7.388842582702637
    6. '(' → logprob: -7.638842582702637
    7. 'h' → logprob: -8.388842582702637
    8. 'data' → logprob: -8.763842582702637
    9. '(dp' → logprob: -10.263842582702637
    10. 'mod' → logprob: -10.888842582702637

Token 1223: '2' (ID: 17)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.6595991849899292
    2. 'dp' → logprob: -0.9095991849899292
    3. '2' → logprob: -3.2845993041992188
    4. 'h' → logprob: -3.7845993041992188
    5. '(' → logprob: -5.409599304199219
    6. '(h' → logprob: -5.534599304199219
    7. '(dp' → logprob: -5.909599304199219
    8. 'data' → logprob: -6.034599304199219
    9. 'mod' → logprob: -6.284599304199219
    10. '(pow' → logprob: -6.784599304199219

Token 1224: '^(' (ID: 32612)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03850134089589119
    2. '**' → logprob: -3.913501262664795
    3. ')' → logprob: -4.913501262664795
    4. '*' → logprob: -5.288501262664795
    5. ' *' → logprob: -6.913501262664795
    6. ' **' → logprob: -7.163501262664795
    7. '[' → logprob: -7.288501262664795
    8. ' -' → logprob: -7.538501262664795
    9. ' ,' → logprob: -7.788501262664795
    10. '-' → logprob: -8.038501739501953

Token 1225: 'diff' (ID: 31460)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.022783445194363594
    2. '(h' → logprob: -4.147783279418945
    3. 'mod' → logprob: -6.397783279418945
    4. 'data' → logprob: -6.397783279418945
    5. 'pow' → logprob: -7.022783279418945
    6. '(' → logprob: -7.397783279418945
    7. '1' → logprob: -7.647783279418945
    8. 'id' → logprob: -7.647783279418945
    9. '2' → logprob: -8.022783279418945
    10. '0' → logprob: -8.522783279418945

Token 1226: 'érence' (ID: 65256)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0828082412481308
    2. '2' → logprob: -3.457808256149292
    3. 'h' → logprob: -3.832808256149292
    4. '(' → logprob: -3.832808256149292
    5. ')' → logprob: -5.957808017730713
    6. ',' → logprob: -6.707808017730713
    7. '(
' → logprob: -8.457808494567871
    8. ' (' → logprob: -8.707808494567871
    9. '-' → logprob: -9.082808494567871
    10. ' h' → logprob: -9.707808494567871

Token 1227: ')' (ID: 8)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.05710732564330101
    2. '(' → logprob: -3.0571072101593018
    3. ',' → logprob: -5.432107448577881
    4. '-' → logprob: -6.557107448577881
    5. ')' → logprob: -7.182107448577881
    6. '```' → logprob: -8.057106971740723
    7. ' (' → logprob: -8.182106971740723
    8. '(j' → logprob: -8.307106971740723
    9. '2' → logprob: -8.557106971740723
    10. '[h' → logprob: -8.682106971740723

Token 1228: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.43987780809402466
    2. '-' → logprob: -1.1898777484893799
    3. ')' → logprob: -3.81487774848938
    4. ',' → logprob: -4.439877986907959
    5. ' *' → logprob: -5.189877986907959
    6. '*' → logprob: -5.814877986907959
    7. '   ' → logprob: -5.814877986907959
    8. '+' → logprob: -6.564877986907959
    9. '```' → logprob: -6.939877986907959
    10. '(' → logprob: -7.314877986907959

Token 1229: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03345054015517235
    2. '(' → logprob: -3.6584506034851074
    3. 'pow' → logprob: -5.158450603485107
    4. '(pow' → logprob: -6.908450603485107
    5. ' (' → logprob: -9.15845012664795
    6. '```' → logprob: -9.53345012664795
    7. '
' → logprob: -10.03345012664795
    8. '2' → logprob: -10.15845012664795
    9. ' ' → logprob: -10.15845012664795
    10. ' pow' → logprob: -10.78345012664795

Token 1230: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.030024120584130287
    2. 'pow' → logprob: -3.5300240516662598
    3. '(pow' → logprob: -9.280024528503418
    4. '(' → logprob: -9.405024528503418
    5. ' pow' → logprob: -10.405024528503418
    6. '```' → logprob: -10.780024528503418
    7. '
' → logprob: -11.030024528503418
    8. ' ' → logprob: -11.405024528503418
    9. '0' → logprob: -12.530024528503418
    10. ')' → logprob: -12.655024528503418

Token 1231: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.043117374181747437
    2. '[j' → logprob: -4.043117523193359
    3. ')**' → logprob: -5.668117523193359
    4. '**' → logprob: -5.668117523193359
    5. '-' → logprob: -5.793117523193359
    6. '+' → logprob: -5.793117523193359
    7. ' -' → logprob: -6.043117523193359
    8. '```' → logprob: -6.293117523193359
    9. '):' → logprob: -6.793117523193359
    10. ',' → logprob: -6.918117523193359

Token 1232: ' puis' (ID: 18766)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.1419801712036133
    2. ' j' → logprob: -1.6419801712036133
    3. ' dp' → logprob: -2.1419801712036133
    4. 'pow' → logprob: -2.3919801712036133
    5. 'mod' → logprob: -2.5169801712036133
    6. 'j' → logprob: -2.6419801712036133
    7. 'for' → logprob: -3.8919801712036133
    8. ' mod' → logprob: -4.016980171203613
    9. '*' → logprob: -4.391980171203613
    10. '   ' → logprob: -4.766980171203613

Token 1233: ' prise' (ID: 43816)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11314044147729874
    2. '%=' → logprob: -2.488140344619751
    3. '%' → logprob: -4.98814058303833
    4. ')' → logprob: -5.36314058303833
    5. 'mod' → logprob: -5.36314058303833
    6. 'dp' → logprob: -5.61314058303833
    7. ' %=' → logprob: -6.11314058303833
    8. 'pow' → logprob: -7.73814058303833
    9. '+=' → logprob: -8.488140106201172
    10. ' dp' → logprob: -8.613140106201172

Token 1234: ' modulo' (ID: 112372)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0236439798027277
    2. '%' → logprob: -3.898643970489502
    3. '(
' → logprob: -6.898643970489502
    4. ')' → logprob: -7.273643970489502
    5. '(dp' → logprob: -7.773643970489502
    6. 'mod' → logprob: -8.02364444732666
    7. ')%' → logprob: -8.89864444732666
    8. '=' → logprob: -9.14864444732666
    9. ' (' → logprob: -9.27364444732666
    10. '(mod' → logprob: -9.77364444732666

Token 1235: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.2552022635936737
    2. '(mod' → logprob: -2.130202293395996
    3. '(' → logprob: -2.380202293395996
    4. '(
' → logprob: -4.880202293395996
    5. ')' → logprob: -5.880202293395996
    6. ' (' → logprob: -6.505202293395996
    7. ' mod' → logprob: -6.880202293395996
    8. '```' → logprob: -8.380202293395996
    9. '`' → logprob: -8.505202293395996
    10. ')(' → logprob: -9.630202293395996

Token 1236: '.
' (ID: 558)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.0642307996749878
    2. '=' → logprob: -1.9392307996749878
    3. '(dp' → logprob: -1.9392307996749878
    4. '[i' → logprob: -2.1892309188842773
    5. '[j' → logprob: -2.9392309188842773
    6. 'for' → logprob: -3.0642309188842773
    7. ')' → logprob: -3.5642309188842773
    8. ' =' → logprob: -3.8142309188842773
    9. '   ' → logprob: -4.064230918884277
    10. '           ' → logprob: -4.064230918884277

Token 1237: '       ' (ID: 309)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.29346364736557007
    2. '[' → logprob: -2.668463706970215
    3. '[j' → logprob: -2.668463706970215
    4. ' =' → logprob: -2.793463706970215
    5. 'for' → logprob: -3.793463706970215
    6. '[
' → logprob: -4.418463706970215
    7. 'dp' → logprob: -5.418463706970215
    8. '   ' → logprob: -5.668463706970215
    9. '[i' → logprob: -5.918463706970215
    10. '```' → logprob: -5.918463706970215

Token 1238: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.7275928854942322
    2. '=' → logprob: -1.352592945098877
    3. ' dp' → logprob: -2.227592945098877
    4. ' =' → logprob: -2.977592945098877
    5. '[' → logprob: -3.227592945098877
    6. 'for' → logprob: -3.852592945098877
    7. '   ' → logprob: -4.727592945098877
    8. ' for' → logprob: -5.102592945098877
    9. '[j' → logprob: -5.227592945098877
    10. '(dp' → logprob: -5.477592945098877

Token 1239: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -14.750000953674316
    3. 'i' → logprob: -16.125
    4. '```' → logprob: -16.125
    5. '   ' → logprob: -17.125
    6. '][' → logprob: -17.875
    7. ' [' → logprob: -17.875
    8. '\[' → logprob: -18.375
    9. ' =' → logprob: -19.125
    10. '[int' → logprob: -19.25

Token 1240: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.1602771282196045
    2. '][' → logprob: -1.9102771282196045
    3. '[' → logprob: -10.035277366638184
    4. '}[' → logprob: -12.785277366638184
    5. ']' → logprob: -13.035277366638184
    6. ')[' → logprob: -13.285277366638184
    7. ' ][' → logprob: -13.910277366638184
    8. '[][' → logprob: -15.160277366638184
    9. 'i' → logprob: -15.285277366638184
    10. '[I' → logprob: -15.910277366638184

Token 1241: 'id' (ID: 315)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6689969301223755
    2. 'id' → logprob: -1.2939969301223755
    3. 'i' → logprob: -1.5439969301223755
    4. '][' → logprob: -11.043996810913086
    5. '```' → logprob: -11.168996810913086
    6. ']' → logprob: -11.668996810913086
    7. '0' → logprob: -11.918996810913086
    8. '   ' → logprob: -12.293996810913086
    9. 'idf' → logprob: -12.418996810913086
    10. ' id' → logprob: -12.668996810913086

Token 1242: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.3080716346157715e-05
    2. ']=' → logprob: -10.750022888183594
    3. ' ]' → logprob: -13.875022888183594
    4. ']+=' → logprob: -14.625022888183594
    5. '=' → logprob: -16.375022888183594
    6. '[' → logprob: -17.750022888183594
    7. ']=(' → logprob: -17.750022888183594
    8. ')' → logprob: -18.500022888183594
    9. '   ' → logprob: -19.375022888183594
    10. ']
' → logprob: -19.625022888183594

Token 1243: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001933873863890767
    2. ' =' → logprob: -6.251934051513672
    3. '+=' → logprob: -13.126934051513672
    4. '%=' → logprob: -13.751934051513672
    5. '[' → logprob: -14.251934051513672
    6. '*=' → logprob: -14.626934051513672
    7. '=(' → logprob: -15.251934051513672
    8. ']=' → logprob: -15.626934051513672
    9. '=

' → logprob: -16.251934051513672
    10. '   ' → logprob: -16.501934051513672

Token 1244: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07895620912313461
    2. '2' → logprob: -2.578956127166748
    3. '((' → logprob: -10.328956604003906
    4. 'pow' → logprob: -11.078956604003906
    5. ' (' → logprob: -11.203956604003906
    6. '(pow' → logprob: -13.578956604003906
    7. ' ' → logprob: -13.953956604003906
    8. '(int' → logprob: -14.078956604003906
    9. '(mod' → logprob: -14.953956604003906
    10. 'int' → logprob: -15.078956604003906

Token 1245: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0052406336180865765
    2. '2' → logprob: -5.255240440368652
    3. ' (' → logprob: -12.505240440368652
    4. 'pow' → logprob: -13.130240440368652
    5. '((' → logprob: -14.130240440368652
    6. '(pow' → logprob: -15.130240440368652
    7. '(mod' → logprob: -16.00524139404297
    8. ' ' → logprob: -17.13024139404297
    9. '(int' → logprob: -18.00524139404297
    10. 'mod' → logprob: -18.00524139404297

Token 1246: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.20146237313747406
    2. ' *' → logprob: -1.7014623880386353
    3. '*(' → logprob: -9.951462745666504
    4. '**' → logprob: -14.701462745666504
    5. '*((' → logprob: -14.951462745666504
    6. ' ' → logprob: -15.326462745666504
    7. '(' → logprob: -15.576462745666504
    8. ' ' → logprob: -16.201461791992188
    9. '*
' → logprob: -16.701461791992188
    10. '*object' → logprob: -16.951461791992188

Token 1247: ' (' (ID: 350)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.5810256600379944
    2. '(pow' → logprob: -0.8310256600379944
    3. '(' → logprob: -5.33102560043335
    4. ' (' → logprob: -9.206026077270508
    5. '(p' → logprob: -9.331026077270508
    6. ' ((' → logprob: -11.081026077270508
    7. '(power' → logprob: -11.331026077270508
    8. 'pow' → logprob: -12.081026077270508
    9. '(dp' → logprob: -12.206026077270508
    10. '   ' → logprob: -13.581026077270508

Token 1248: 'pow' (ID: 30304)
  Prédit: '(pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pow' → logprob: -0.00020520923135336488
    2. 'pow' → logprob: -8.500205039978027
    3. '((' → logprob: -13.750205039978027
    4. '(' → logprob: -15.125205039978027
    5. '(power' → logprob: -15.875205039978027
    6. '(p' → logprob: -15.875205039978027
    7. ' (' → logprob: -16.000205993652344
    8. '(po' → logprob: -18.125205993652344
    9. ' pow' → logprob: -18.750205993652344
    10. '.pow' → logprob: -19.250205993652344

Token 1249: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015028368216007948
    2. '2' → logprob: -6.501502990722656
    3. '(
' → logprob: -15.501502990722656
    4. ' (' → logprob: -16.251502990722656
    5. '<|end|>' → logprob: -16.376502990722656
    6. ')' → logprob: -18.001502990722656
    7. ' ' → logprob: -18.251502990722656
    8. '```' → logprob: -18.626502990722656
    9. '10' → logprob: -19.251502990722656
    10. '[' → logprob: -19.251502990722656

Token 1250: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001093841710826382
    2. '(' → logprob: -9.125109672546387
    3. ' ' → logprob: -15.000109672546387
    4. '```' → logprob: -19.37510871887207
    5. ')' → logprob: -19.62510871887207
    6. '[' → logprob: -19.75010871887207
    7. '<|end|>' → logprob: -20.75010871887207
    8. '   ' → logprob: -20.87510871887207
    9. '(
' → logprob: -21.00010871887207
    10. '  ' → logprob: -21.25010871887207

Token 1251: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.067538782954216
    2. '(' → logprob: -3.3175387382507324
    3. ',h' → logprob: -4.067538738250732
    4. '(h' → logprob: -4.442538738250732
    5. '2' → logprob: -9.44253921508789
    6. 'h' → logprob: -10.19253921508789
    7. ',(' → logprob: -10.69253921508789
    8. ' ,' → logprob: -11.44253921508789
    9. '(
' → logprob: -11.56753921508789
    10. ' (' → logprob: -12.56753921508789

Token 1252: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0487363375723362
    2. '(h' → logprob: -3.048736333847046
    3. ' h' → logprob: -9.173736572265625
    4. ' (' → logprob: -10.423736572265625
    5. '(' → logprob: -11.548736572265625
    6. ' ' → logprob: -13.923736572265625
    7. '	h' → logprob: -14.298736572265625
    8. '2' → logprob: -14.298736572265625
    9. '[h' → logprob: -14.298736572265625
    10. '1' → logprob: -14.423736572265625

Token 1253: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.613945101387799e-05
    2. '[' → logprob: -10.125085830688477
    3. 'i' → logprob: -10.750085830688477
    4. '[h' → logprob: -10.875085830688477
    5. '[j' → logprob: -13.750085830688477
    6. '```' → logprob: -13.875085830688477
    7. '(i' → logprob: -14.000085830688477
    8. 'h' → logprob: -14.250085830688477
    9. '{i' → logprob: -15.125085830688477
    10. '   ' → logprob: -15.125085830688477

Token 1254: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.05093340575695038
    2. '+' → logprob: -3.050933361053467
    3. '[' → logprob: -6.300933361053467
    4. '[j' → logprob: -8.300933837890625
    5. ' +' → logprob: -8.800933837890625
    6. '+i' → logprob: -10.425933837890625
    7. '[next' → logprob: -10.675933837890625
    8. '-' → logprob: -10.925933837890625
    9. ']' → logprob: -11.425933837890625
    10. '[h' → logprob: -12.300933837890625

Token 1255: ' -' (ID: 533)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.050999004393815994
    2. '[' → logprob: -3.5509989261627197
    3. '[j' → logprob: -3.9259989261627197
    4. '-' → logprob: -7.425999164581299
    5. '[-' → logprob: -8.30099868774414
    6. '[h' → logprob: -8.55099868774414
    7. '[id' → logprob: -9.92599868774414
    8. '[next' → logprob: -10.17599868774414
    9. '[
' → logprob: -10.30099868774414
    10. '[ind' → logprob: -11.17599868774414

Token 1256: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0003951648832298815
    2. ' h' → logprob: -7.87539529800415
    3. '[h' → logprob: -11.250394821166992
    4. '1' → logprob: -14.125394821166992
    5. '   ' → logprob: -14.375394821166992
    6. '	h' → logprob: -14.875394821166992
    7. '[i' → logprob: -15.750394821166992
    8. '```' → logprob: -16.250394821166992
    9. ' ' → logprob: -16.750394821166992
    10. '[' → logprob: -17.125394821166992

Token 1257: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.001154270488768816
    2. '[' → logprob: -7.25115442276001
    3. '+' → logprob: -8.001153945922852
    4. 'i' → logprob: -10.376153945922852
    5. '[next' → logprob: -10.501153945922852
    6. '(i' → logprob: -10.751153945922852
    7. '[j' → logprob: -11.001153945922852
    8. '1' → logprob: -12.376153945922852
    9. '{i' → logprob: -12.626153945922852
    10. '[user' → logprob: -13.876153945922852

Token 1258: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.017711440101265907
    2. '[' → logprob: -4.142711639404297
    3. ' +' → logprob: -7.017711639404297
    4. '1' → logprob: -7.267711639404297
    5. '[next' → logprob: -10.142711639404297
    6. '[i' → logprob: -10.642711639404297
    7. '   ' → logprob: -12.392711639404297
    8. ']' → logprob: -12.767711639404297
    9. '-' → logprob: -12.767711639404297
    10. '+[' → logprob: -13.267711639404297

Token 1259: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -12.750003814697266
    3. '
' → logprob: -14.875003814697266
    4. '```' → logprob: -15.375003814697266
    5. '   ' → logprob: -15.875003814697266
    6. '[' → logprob: -16.500003814697266
    7. '

' → logprob: -16.875003814697266
    8. '>' → logprob: -17.562503814697266
    9. '...' → logprob: -18.062503814697266
    10. '+' → logprob: -18.125003814697266

Token 1260: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.9153885558771435e-06
    2. ' ' → logprob: -13.000005722045898
    3. '```' → logprob: -13.750005722045898
    4. '   ' → logprob: -14.375005722045898
    5. '
' → logprob: -14.875005722045898
    6. '[' → logprob: -15.687505722045898
    7. '

' → logprob: -16.1250057220459
    8. 'next' → logprob: -16.3125057220459
    9. '+' → logprob: -16.7500057220459
    10. '...' → logprob: -16.8125057220459

Token 1261: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.1084248423576355
    2. ']' → logprob: -2.3584249019622803
    3. ',' → logprob: -4.983424663543701
    4. ']-' → logprob: -7.108424663543701
    5. '-' → logprob: -8.98342514038086
    6. '[i' → logprob: -9.10842514038086
    7. '[' → logprob: -9.60842514038086
    8. '[j' → logprob: -9.60842514038086
    9. ' ],' → logprob: -10.10842514038086
    10. '[-' → logprob: -10.73342514038086

Token 1262: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -2.935296834039036e-06
    2. ' mod' → logprob: -12.75000286102295
    3. '(mod' → logprob: -21.750003814697266
    4. '	mod' → logprob: -22.250003814697266
    5. '_mod' → logprob: -23.875003814697266
    6. '
' → logprob: -24.125003814697266
    7. '```' → logprob: -24.500003814697266
    8. 'm' → logprob: -24.625003814697266
    9. 'moder' → logprob: -24.625003814697266
    10. '.mod' → logprob: -24.750003814697266

Token 1263: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011355629976605996
    2. ' )' → logprob: -9.500113487243652
    3. ' -' → logprob: -10.875113487243652
    4. ')-' → logprob: -11.375113487243652
    5. '-' → logprob: -13.000113487243652
    6. '')' → logprob: -13.625113487243652
    7. ']' → logprob: -13.875113487243652
    8. ',' → logprob: -14.125113487243652
    9. '}' → logprob: -14.375113487243652
    10. '")' → logprob: -14.500113487243652

Token 1264: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.08985906094312668
    2. '-' → logprob: -2.4648590087890625
    3. ')' → logprob: -7.0898590087890625
    4. ' ' → logprob: -10.589859008789062
    5. '%' → logprob: -11.089859008789062
    6. '<|end|>' → logprob: -11.589859008789062
    7. '+' → logprob: -11.839859008789062
    8. '   ' → logprob: -11.964859008789062
    9. '           ' → logprob: -12.839859008789062
    10. ' %' → logprob: -12.839859008789062

Token 1265: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.625000953674316
    3. ')' → logprob: -16.125
    4. '<|end|>' → logprob: -16.875
    5. 'mod' → logprob: -17.125
    6. '
' → logprob: -20.125
    7. '```' → logprob: -20.25
    8. '   ' → logprob: -20.75
    9. '[' → logprob: -21.0
    10. '(' → logprob: -21.375

Token 1266: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. ')' → logprob: -19.125001907348633
    4. 'mod' → logprob: -19.625001907348633
    5. '```' → logprob: -19.625001907348633
    6. '   ' → logprob: -19.750001907348633
    7. '<|end|>' → logprob: -19.750001907348633
    8. '
' → logprob: -20.250001907348633
    9. '[' → logprob: -21.437501907348633
    10. '(' → logprob: -21.437501907348633

Token 1267: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012320445966906846
    2. ')%' → logprob: -9.125123023986816
    3. ' )' → logprob: -11.500123023986816
    4. '+' → logprob: -13.625123023986816
    5. '   ' → logprob: -13.875123023986816
    6. '%' → logprob: -14.250123023986816
    7. '))' → logprob: -14.750123023986816
    8. ' +' → logprob: -15.750123023986816
    9. ']' → logprob: -15.875123023986816
    10. '           ' → logprob: -16.000123977661133

Token 1268: '       ' (ID: 309)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.31336504220962524
    2. '%' → logprob: -1.3133649826049805
    3. ')' → logprob: -9.31336498260498
    4. ')%' → logprob: -11.81336498260498
    5. '%n' → logprob: -13.68836498260498
    6. '%c' → logprob: -14.18836498260498
    7. '%i' → logprob: -14.31336498260498
    8. '%d' → logprob: -14.68836498260498
    9. '%e' → logprob: -14.81336498260498
    10. '%m' → logprob: -15.06336498260498

Token 1269: ' dp' (ID: 21546)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.12711487710475922
    2. '%' → logprob: -2.127114772796631
    3. ')' → logprob: -8.627115249633789
    4. ')%' → logprob: -12.127115249633789
    5. ' %=' → logprob: -14.877115249633789
    6. '   ' → logprob: -15.127115249633789
    7. ' ' → logprob: -15.377115249633789
    8. ' %
' → logprob: -15.752115249633789
    9. '%d' → logprob: -15.877115249633789
    10. '<|end|>' → logprob: -15.877115249633789

Token 1270: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.4617256056226324e-05
    2. '[' → logprob: -11.250014305114746
    3. 'i' → logprob: -14.750014305114746
    4. '[int' → logprob: -15.125014305114746
    5. '```' → logprob: -15.625014305114746
    6. '][' → logprob: -15.875014305114746
    7. '<|end|>' → logprob: -16.250015258789062
    8. '[I' → logprob: -16.625015258789062
    9. '	i' → logprob: -16.875015258789062
    10. '[user' → logprob: -17.250015258789062

Token 1271: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.03074696846306324
    2. '[i' → logprob: -3.5307469367980957
    3. ']' → logprob: -7.155746936798096
    4. '[' → logprob: -10.030747413635254
    5. ')[' → logprob: -10.030747413635254
    6. 'i' → logprob: -10.530747413635254
    7. ')' → logprob: -10.905747413635254
    8. '<|end|>' → logprob: -10.905747413635254
    9. ' ][' → logprob: -11.655747413635254
    10. ')][' → logprob: -12.030747413635254

Token 1272: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -7.52919222577475e-05
    2. 'i' → logprob: -9.500075340270996
    3. '0' → logprob: -15.750075340270996
    4. ' id' → logprob: -16.37507438659668
    5. 'j' → logprob: -16.62507438659668
    6. 'comp' → logprob: -17.62507438659668
    7. 'idx' → logprob: -19.12507438659668
    8. '   ' → logprob: -19.25007438659668
    9. '"id' → logprob: -19.50007438659668
    10. '	id' → logprob: -19.62507438659668

Token 1273: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4187411665916443
    2. '%' → logprob: -1.293741226196289
    3. '%=' → logprob: -2.918741226196289
    4. ' %=' → logprob: -5.043741226196289
    5. ']' → logprob: -5.168741226196289
    6. ')%' → logprob: -6.418741226196289
    7. '%)' → logprob: -10.168741226196289
    8. ']%' → logprob: -10.168741226196289
    9. '=' → logprob: -11.668741226196289
    10. '#' → logprob: -12.293741226196289

Token 1274: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.011980920098721981
    2. ' %=' → logprob: -5.011981010437012
    3. '%' → logprob: -5.261981010437012
    4. '=' → logprob: -9.636981010437012
    5. ')' → logprob: -14.886981010437012
    6. ' %' → logprob: -15.386981010437012
    7. '	' → logprob: -15.886981010437012
    8. '#' → logprob: -15.886981010437012
    9. ')%' → logprob: -15.886981010437012
    10. '   ' → logprob: -16.011980056762695

Token 1275: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: 0.0
    2. ' mod' → logprob: -17.75
    3. '(mod' → logprob: -19.0
    4. '	mod' → logprob: -23.875
    5. '```' → logprob: -25.75
    6. ' мод' → logprob: -25.875
    7. 'MOD' → logprob: -26.25
    8. 'moder' → logprob: -26.875
    9. '_mod' → logprob: -27.375
    10. 'modal' → logprob: -28.0

Token 1276: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014143877662718296
    2. '<|end|>' → logprob: -4.514143943786621
    3. 'i' → logprob: -7.014143943786621
    4. ' for' → logprob: -7.639143943786621
    5. 'for' → logprob: -7.639143943786621
    6. '#' → logprob: -8.389143943786621
    7. '<|end|>' → logprob: -8.389143943786621
    8. ' i' → logprob: -9.014143943786621
    9. '    
' → logprob: -9.264143943786621
    10. '.' → logprob: -9.514143943786621

Token 1277: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008898891508579254
    2. 'i' → logprob: -5.008898735046387
    3. '```' → logprob: -7.133898735046387
    4. ' i' → logprob: -7.383898735046387
    5. 'for' → logprob: -7.758898735046387
    6. ' for' → logprob: -8.383898735046387
    7. '
' → logprob: -9.758898735046387
    8. '    
' → logprob: -10.758898735046387
    9. '	i' → logprob: -11.633898735046387
    10. '       ' → logprob: -12.133898735046387

Token 1278: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2620702087879181
    2. 'i' → logprob: -2.0120701789855957
    3. 'for' → logprob: -3.0120701789855957
    4. '#' (adapté à ' #') → logprob: -3.1370701789855957
    5. 'return' → logprob: -6.262070178985596
    6. 'j' → logprob: -7.387070178985596
    7. '
' → logprob: -7.887070178985596
    8. ' for' → logprob: -8.262070655822754
    9. '```' → logprob: -8.262070655822754
    10. ' i' → logprob: -8.512070655822754

Token 1279: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2009938806295395
    2. 'return' → logprob: -2.200993776321411
    3. '#' → logprob: -2.950993776321411
    4. 'dp' → logprob: -4.07599401473999
    5. '   ' → logprob: -7.45099401473999
    6. 'pass' → logprob: -7.70099401473999
    7. 'j' → logprob: -8.075993537902832
    8. 'if' → logprob: -8.325993537902832
    9. '       ' → logprob: -8.950993537902832
    10. ' for' → logprob: -9.450993537902832

Token 1280: ' obt' (ID: 5564)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.250991553068161
    2. 'continue' → logprob: -1.7509915828704834
    3. '#' → logprob: -3.5009915828704834
    4. '       ' → logprob: -4.500991344451904
    5. 'dp' → logprob: -6.250991344451904
    6. ' for' → logprob: -6.375991344451904
    7. ' continue' → logprob: -7.125991344451904
    8. 'i' → logprob: -7.500991344451904
    9. '   ' → logprob: -7.750991344451904
    10. '           ' → logprob: -8.250991821289062

Token 1281: 'ient' (ID: 773)
  Prédit: 'ient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.00034476007567718625
    2. 'iens' → logprob: -8.625345230102539
    3. 'iend' → logprob: -9.125345230102539
    4. 'i' → logprob: -10.625345230102539
    5. 'int' → logprob: -11.000345230102539
    6. 'ien' → logprob: -11.500345230102539
    7. '#' → logprob: -13.375345230102539
    8. 'ients' → logprob: -14.125345230102539
    9. '[' → logprob: -14.125345230102539
    10. 'iennent' → logprob: -14.375345230102539

Token 1282: ' l' (ID: 305)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11156149208545685
    2. 'dp' → logprob: -2.4865615367889404
    3. ' for' → logprob: -4.861561298370361
    4. '#' → logprob: -5.736561298370361
    5. 'id' → logprob: -5.861561298370361
    6. '       ' → logprob: -6.611561298370361
    7. 'le' → logprob: -6.736561298370361
    8. '```' → logprob: -6.861561298370361
    9. 'la' → logprob: -6.986561298370361
    10. '   ' → logprob: -6.986561298370361

Token 1283: ''ind' (ID: 82245)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005720909684896469
    2. '#' → logprob: -6.755721092224121
    3. 'i' → logprob: -6.880721092224121
    4. '[i' → logprob: -7.005721092224121
    5. 'id' → logprob: -7.130721092224121
    6. 'j' → logprob: -7.630721092224121
    7. '[j' → logprob: -8.255721092224121
    8. 'dp' → logprob: -8.630721092224121
    9. 's' → logprob: -8.755721092224121
    10. '[' → logprob: -8.880721092224121

Token 1284: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.5620772242546082
    2. 'ice' → logprob: -1.187077283859253
    3. 'ices' → logprob: -2.187077283859253
    4. 'i' → logprob: -5.062077045440674
    5. 'ic' → logprob: -6.062077045440674
    6. 'id' → logprob: -6.562077045440674
    7. 'ce' → logprob: -8.187077522277832
    8. '```' → logprob: -8.312077522277832
    9. 'exe' → logprob: -8.312077522277832
    10. '#' → logprob: -8.499577522277832

Token 1285: ' compress' (ID: 34112)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.6349945664405823
    2. '=' → logprob: -1.3849945068359375
    3. 'for' → logprob: -2.3849945068359375
    4. 'comp' → logprob: -2.6349945068359375
    5. ' =' → logprob: -3.2599945068359375
    6. 'j' → logprob: -4.8849945068359375
    7. 'i' → logprob: -5.8849945068359375
    8. '2' → logprob: -6.0099945068359375
    9. 'dp' → logprob: -6.6349945068359375
    10. '=id' → logprob: -7.7599945068359375

Token 1286: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.007750960066914558
    2. 'isé' → logprob: -5.507750988006592
    3. '=' → logprob: -7.007750988006592
    4. 'ed' → logprob: -7.507750988006592
    5. 'e' → logprob: -7.632750988006592
    6. ' =' → logprob: -8.007750511169434
    7. 'ré' → logprob: -8.507750511169434
    8. 'comp' → logprob: -8.757750511169434
    9. 'se' → logprob: -9.007750511169434
    10. 'sé' → logprob: -9.007750511169434

Token 1287: ' correspondant' (ID: 146058)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.5738236904144287
    2. 'comp' → logprob: -1.4488236904144287
    3. ' =' → logprob: -1.8238236904144287
    4. '=' → logprob: -4.323823928833008
    5. 'for' → logprob: -4.448823928833008
    6. ' for' → logprob: -5.823823928833008
    7. '       ' → logprob: -6.198823928833008
    8. ' comp' → logprob: -6.323823928833008
    9. '_comp' → logprob: -6.573823928833008
    10. '_id' → logprob: -6.698823928833008

Token 1288: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6384380459785461
    2. ' à' → logprob: -1.5134379863739014
    3. 'à' → logprob: -1.6384379863739014
    4. ' =' → logprob: -3.6384379863739014
    5. '       ' → logprob: -3.7634379863739014
    6. '[' → logprob: -6.0134382247924805
    7. '           ' → logprob: -6.7634382247924805
    8. '```' → logprob: -7.1384382247924805
    9. 'to' → logprob: -7.2634382247924805
    10. '   ' → logprob: -7.7634382247924805

Token 1289: ' h' (ID: 312)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.06226208806037903
    2. 'h' → logprob: -2.8122620582580566
    3. ' comp' → logprob: -8.312262535095215
    4. ' h' → logprob: -11.062262535095215
    5. '(comp' → logprob: -11.562262535095215
    6. 'com' → logprob: -12.437262535095215
    7. '```' → logprob: -12.562262535095215
    8. '	comp' → logprob: -12.687262535095215
    9. 'id' → logprob: -12.812262535095215
    10. '0' → logprob: -13.687262535095215

Token 1290: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001126026691053994
    2. 'i' → logprob: -9.250112533569336
    3. 'h' → logprob: -12.000112533569336
    4. '[' → logprob: -12.250112533569336
    5. '(i' → logprob: -13.375112533569336
    6. '   ' → logprob: -13.750112533569336
    7. ',i' → logprob: -13.750112533569336
    8. '[h' → logprob: -14.500112533569336
    9. '```' → logprob: -15.125112533569336
    10. 's' → logprob: -15.375112533569336

Token 1291: '].
' (ID: 49887)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.8921695047756657e-05
    2. '[' → logprob: -10.750028610229492
    3. '[j' → logprob: -13.125028610229492
    4. 'i' → logprob: -13.250028610229492
    5. '```' → logprob: -13.375028610229492
    6. '+' → logprob: -14.000028610229492
    7. '   ' → logprob: -14.125028610229492
    8. '[h' → logprob: -15.750028610229492
    9. '       ' → logprob: -16.125028610229492
    10. '(i' → logprob: -16.500028610229492

Token 1292: '       ' (ID: 309)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.00021474185632541776
    2. '       ' → logprob: -9.000214576721191
    3. '   ' → logprob: -9.625214576721191
    4. ' id' → logprob: -11.250214576721191
    5. 'idx' → logprob: -12.250214576721191
    6. '```' → logprob: -12.750214576721191
    7. '           ' → logprob: -13.625214576721191
    8. '`' → logprob: -14.625214576721191
    9. '	id' → logprob: -14.750214576721191
    10. 'j' → logprob: -15.000214576721191

Token 1293: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' (adapté à ' id') → logprob: -0.00016754455282352865
    2. 'idx' → logprob: -9.500167846679688
    3. 'idi' → logprob: -10.750167846679688
    4. 'idd' → logprob: -10.750167846679688
    5. 'idy' → logprob: -11.375167846679688
    6. 'idt' → logprob: -12.000167846679688
    7. 'idl' → logprob: -12.125167846679688
    8. 'idf' → logprob: -12.250167846679688
    9. 'ids' → logprob: -12.500167846679688
    10. 'idu' → logprob: -13.000167846679688

Token 1294: '2' (ID: 17)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048587825149297714
    2. ' =' → logprob: -3.0485877990722656
    3. '=}' → logprob: -16.548587799072266
    4. ')' → logprob: -16.673587799072266
    5. '```' → logprob: -16.923587799072266
    6. '=
' → logprob: -17.173587799072266
    7. '=i' → logprob: -17.423587799072266
    8. 's' → logprob: -17.673587799072266
    9. '＝' → logprob: -17.798587799072266
    10. 'i' → logprob: -17.923587799072266

Token 1295: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931471824645996
    2. ' =' → logprob: -0.6931471824645996
    3. '=}' → logprob: -18.318147659301758
    4. ' ' → logprob: -18.943147659301758
    5. ')' → logprob: -18.943147659301758
    6. ',' → logprob: -19.443147659301758
    7. '＝' → logprob: -19.568147659301758
    8. 's' → logprob: -19.818147659301758
    9. '=
' → logprob: -19.818147659301758
    10. ' =
' → logprob: -20.693147659301758

Token 1296: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.03805159032344818
    2. ' comp' → logprob: -3.2880516052246094
    3. '	comp' → logprob: -12.16305160522461
    4. '```' → logprob: -13.66305160522461
    5. 'com' → logprob: -13.78805160522461
    6. '(comp' → logprob: -14.03805160522461
    7. '   ' → logprob: -14.78805160522461
    8. 'mod' → logprob: -14.91305160522461
    9. '.comp' → logprob: -15.41305160522461
    10. '`' → logprob: -15.91305160522461

Token 1297: '[h' (ID: 88900)
  Prédit: '[h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -3.128163257315464e-07
    2. 'h' → logprob: -15.25
    3. '[' → logprob: -20.75
    4. '(h' → logprob: -21.0
    5. '	h' → logprob: -22.0
    6. '   ' → logprob: -22.5
    7. '<h' → logprob: -22.75
    8. '_h' → logprob: -23.0
    9. '=h' → logprob: -24.25
    10. '```' → logprob: -24.375

Token 1298: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.7432603272027336e-06
    2. '[h' → logprob: -13.500001907348633
    3. '[' → logprob: -16.000001907348633
    4. 'i' → logprob: -16.500001907348633
    5. 'h' → logprob: -16.750001907348633
    6. '[
' → logprob: -17.625001907348633
    7. ']' → logprob: -17.625001907348633
    8. '```' → logprob: -18.875001907348633
    9. '(i' → logprob: -19.625001907348633
    10. '[I' → logprob: -20.125001907348633

Token 1299: ']]

' (ID: 84024)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5773223042488098
    2. ']]' → logprob: -0.8273223042488098
    3. '[i' → logprob: -6.827322483062744
    4. '+' → logprob: -9.577322006225586
    5. ']]
' → logprob: -9.577322006225586
    6. ']+' → logprob: -9.827322006225586
    7. ']]]' → logprob: -10.077322006225586
    8. ')]' → logprob: -11.077322006225586
    9. '']]' → logprob: -11.702322006225586
    10. '[' → logprob: -11.702322006225586

Token 1300: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7056280374526978
    2. '   ' → logprob: -1.7056280374526978
    3. ')' → logprob: -1.9556280374526978
    4. ' for' → logprob: -2.455627918243408
    5. '[' → logprob: -3.705627918243408
    6. '```' → logprob: -4.205627918243408
    7. '       ' → logprob: -4.580627918243408
    8. '<|end|>' → logprob: -4.705627918243408
    9. 'j' → logprob: -4.830627918243408
    10. '[j' → logprob: -4.955627918243408

Token 1301: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007831838447600603
    2. ' for' → logprob: -7.5007829666137695
    3. '   ' → logprob: -8.75078296661377
    4. '       ' → logprob: -10.25078296661377
    5. '```' → logprob: -10.37578296661377
    6. '	for' → logprob: -13.25078296661377
    7. '#' (adapté à ' #') → logprob: -13.62578296661377
    8. ')' → logprob: -14.50078296661377
    9. '
' → logprob: -15.12578296661377
    10. '[' → logprob: -15.12578296661377

Token 1302: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0280383548888494e-06
    2. ' for' → logprob: -14.250000953674316
    3. '```' → logprob: -15.875000953674316
    4. '#' → logprob: -16.250001907348633
    5. '
' → logprob: -18.750001907348633
    6. 'dp' → logprob: -19.125001907348633
    7. '       ' → logprob: -19.375001907348633
    8. 'if' → logprob: -19.500001907348633
    9. '	for' → logprob: -19.875001907348633
    10. '   ' → logprob: -20.375001907348633

Token 1303: ' ajoute' (ID: 91611)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003020961594302207
    2. ' for' → logprob: -8.1253023147583
    3. '#' → logprob: -12.7503023147583
    4. ')' → logprob: -14.3753023147583
    5. ']' → logprob: -14.3753023147583
    6. 'pour' → logprob: -14.6253023147583
    7. '
' → logprob: -14.7503023147583
    8. 'if' → logprob: -14.8753023147583
    9. '```' → logprob: -16.125301361083984
    10. 'range' → logprob: -16.375301361083984

Token 1304: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15024621784687042
    2. ' for' → logprob: -2.0252461433410645
    3. 'pour' → logprob: -6.1502461433410645
    4. '       ' → logprob: -7.0252461433410645
    5. '```' → logprob: -7.0252461433410645
    6. ' pour' → logprob: -7.2752461433410645
    7. '+' → logprob: -7.4002461433410645
    8. '1' → logprob: -8.400246620178223
    9. '   ' → logprob: -8.525246620178223
    10. ' à' → logprob: -8.525246620178223

Token 1305: '2' (ID: 17)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4562312364578247
    2. 'pow' → logprob: -1.7062312364578247
    3. 'dp' → logprob: -2.206231117248535
    4. '1' → logprob: -2.831231117248535
    5. '2' → logprob: -4.581231117248535
    6. '(' → logprob: -6.456231117248535
    7. '0' → logprob: -6.706231117248535
    8. ' for' → logprob: -7.456231117248535
    9. '(dp' → logprob: -7.456231117248535
    10. 'id' → logprob: -7.956231117248535

Token 1306: ' à' (ID: 1221)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4788959324359894
    2. '*' → logprob: -1.728895902633667
    3. 'for' → logprob: -2.103895902633667
    4. ' for' → logprob: -2.853895902633667
    5. '<|end|>' → logprob: -4.353896141052246
    6. ',' → logprob: -6.228896141052246
    7. ')' → logprob: -6.478896141052246
    8. '   ' → logprob: -6.603896141052246
    9. '       ' → logprob: -6.728896141052246
    10. '           ' → logprob: -7.103896141052246

Token 1307: ' la' (ID: 557)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.14881934225559235
    2. 'for' → logprob: -2.7738194465637207
    3. 'range' → logprob: -3.3988194465637207
    4. 'id' → logprob: -4.023819446563721
    5. '2' → logprob: -4.898819446563721
    6. ' dp' → logprob: -5.023819446563721
    7. ' range' → logprob: -6.273819446563721
    8. 'comp' → logprob: -6.273819446563721
    9. 'pow' → logprob: -6.648819446563721
    10. ' for' → logprob: -6.773819446563721

Token 1308: ' valeur' (ID: 41664)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1773427277803421
    2. 'dp' → logprob: -1.9273427724838257
    3. ' for' → logprob: -5.052342891693115
    4. 'pow' → logprob: -5.177342891693115
    5. '2' → logprob: -5.802342891693115
    6. ' dp' → logprob: -6.927342891693115
    7. 'diff' → logprob: -8.302342414855957
    8. 'range' → logprob: -8.552342414855957
    9. 'pour' → logprob: -9.677342414855957
    10. '```' → logprob: -9.802342414855957

Token 1309: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.038003381341695786
    2. '       ' → logprob: -4.038003444671631
    3. ' dp' → logprob: -5.163003444671631
    4. 'for' → logprob: -5.663003444671631
    5. '[' → logprob: -5.913003444671631
    6. '   ' → logprob: -6.288003444671631
    7. '[j' → logprob: -6.663003444671631
    8. '           ' → logprob: -7.163003444671631
    9. '*' → logprob: -7.288003444671631
    10. '[i' → logprob: -7.538003444671631

Token 1310: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.246537173457909e-06
    2. '[' → logprob: -12.875003814697266
    3. 'i' → logprob: -14.375003814697266
    4. '[id' → logprob: -15.000003814697266
    5. '[j' → logprob: -15.375003814697266
    6. '       ' → logprob: -16.000003814697266
    7. '   ' → logprob: -16.250003814697266
    8. ' [' → logprob: -16.375003814697266
    9. '```' → logprob: -16.625003814697266
    10. 'dp' → logprob: -17.000003814697266

Token 1311: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.42976129055023193
    2. '[id' → logprob: -1.054761290550232
    3. '[' → logprob: -7.4297614097595215
    4. ']' → logprob: -8.679760932922363
    5. 'id' → logprob: -8.679760932922363
    6. ' ][' → logprob: -9.804760932922363
    7. '[i' → logprob: -11.054760932922363
    8. ''][' → logprob: -12.179760932922363
    9. '}[' → logprob: -12.429760932922363
    10. '
' → logprob: -12.429760932922363

Token 1312: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -5.5577775128767826e-06
    2. ' id' → logprob: -12.375005722045898
    3. '[id' → logprob: -13.625005722045898
    4. '	id' → logprob: -17.1250057220459
    5. '0' → logprob: -17.2500057220459
    6. '(id' → logprob: -17.5000057220459
    7. '   ' → logprob: -17.5000057220459
    8. ']' → logprob: -18.1250057220459
    9. 'h' → logprob: -18.3750057220459
    10. 'i' → logprob: -18.3750057220459

Token 1313: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.022805703803896904
    2. '[id' → logprob: -3.897805690765381
    3. '[' → logprob: -6.897805690765381
    4. '[j' → logprob: -7.397805690765381
    5. 'id' → logprob: -8.522806167602539
    6. ']+' → logprob: -8.647806167602539
    7. ']+=' → logprob: -9.397806167602539
    8. '][' → logprob: -9.772806167602539
    9. '[i' → logprob: -10.647806167602539
    10. '```' → logprob: -10.897806167602539

Token 1314: ' puis' (ID: 18766)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2749939262866974
    2. 'for' → logprob: -2.149993896484375
    3. '       ' → logprob: -3.899993896484375
    4. '+' → logprob: -4.024993896484375
    5. ' dp' → logprob: -4.024993896484375
    6. '+=' → logprob: -4.024993896484375
    7. 'id' → logprob: -4.399993896484375
    8. ' +=' → logprob: -4.774993896484375
    9. '           ' → logprob: -5.149993896484375
    10. ' for' → logprob: -5.399993896484375

Token 1315: ' prise' (ID: 43816)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.007189030759036541
    2. 'for' → logprob: -5.38218879699707
    3. ' dp' → logprob: -6.50718879699707
    4. '(dp' → logprob: -7.88218879699707
    5. 'id' → logprob: -8.13218879699707
    6. '       ' → logprob: -9.25718879699707
    7. '2' → logprob: -9.75718879699707
    8. ' for' → logprob: -10.25718879699707
    9. '   ' → logprob: -10.25718879699707
    10. 'pow' → logprob: -10.63218879699707

Token 1316: ' modulo' (ID: 112372)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.3415757417678833
    2. '%' → logprob: -1.7165757417678833
    3. 'mod' → logprob: -2.4665756225585938
    4. ' %=' → logprob: -3.8415756225585938
    5. 'dp' → logprob: -6.341575622558594
    6. ' modulo' → logprob: -8.091575622558594
    7. '_mod' → logprob: -8.466575622558594
    8. '()%' → logprob: -8.841575622558594
    9. '=' → logprob: -8.966575622558594
    10. '(dp' → logprob: -9.341575622558594

Token 1317: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0028916557785123587
    2. ' mod' → logprob: -6.127891540527344
    3. 'dp' → logprob: -7.502891540527344
    4. '(mod' → logprob: -9.002891540527344
    5. ' dp' → logprob: -11.127891540527344
    6. '       ' → logprob: -11.377891540527344
    7. '(dp' → logprob: -13.002891540527344
    8. '	mod' → logprob: -13.502891540527344
    9. '   ' → logprob: -14.627891540527344
    10. '_mod' → logprob: -15.127891540527344

Token 1318: '.
' (ID: 558)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1385759711265564
    2. '       ' → logprob: -2.388576030731201
    3. '
' → logprob: -4.138576030731201
    4. '(dp' → logprob: -5.013576030731201
    5. '.
' → logprob: -5.888576030731201
    6. '%' → logprob: -6.263576030731201
    7. '%=' → logprob: -6.388576030731201
    8. 'mod' → logprob: -6.763576030731201
    9. '   ' → logprob: -6.888576030731201
    10. ',' → logprob: -7.263576030731201

Token 1319: '       ' (ID: 309)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.02339816465973854
    2. '       ' → logprob: -3.7733981609344482
    3. '```' → logprob: -9.523398399353027
    4. ' dp' → logprob: -9.773398399353027
    5. '(dp' → logprob: -11.773398399353027
    6. '   ' → logprob: -12.148398399353027
    7. '	dp' → logprob: -12.398398399353027
    8. 'for' → logprob: -13.023398399353027
    9. '``' → logprob: -13.648398399353027
    10. '`' → logprob: -14.398398399353027

Token 1320: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -5.080963092041202e-06
    2. '       ' → logprob: -12.500004768371582
    3. ' dp' → logprob: -14.000004768371582
    4. '   ' → logprob: -15.250004768371582
    5. '```' → logprob: -15.625004768371582
    6. '	dp' → logprob: -17.0000057220459
    7. '(dp' → logprob: -18.0000057220459
    8. '           ' → logprob: -18.3750057220459
    9. '``' → logprob: -19.0000057220459
    10. 'for' → logprob: -20.1250057220459

Token 1321: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.1008713702030946e-06
    2. '[' → logprob: -13.125001907348633
    3. 'i' → logprob: -17.125001907348633
    4. '```' → logprob: -17.125001907348633
    5. '[int' → logprob: -18.000001907348633
    6. ' [' → logprob: -18.250001907348633
    7. '[ip' → logprob: -18.625001907348633
    8. '[j' → logprob: -18.875001907348633
    9. '[I' → logprob: -19.250001907348633
    10. '[s' → logprob: -19.375001907348633

Token 1322: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.10036981105804443
    2. '][' → logprob: -2.350369930267334
    3. ')[' → logprob: -9.600369453430176
    4. '[' → logprob: -9.975369453430176
    5. '[id' → logprob: -11.225369453430176
    6. '}[' → logprob: -11.975369453430176
    7. ' ][' → logprob: -12.225369453430176
    8. '   ' → logprob: -12.475369453430176
    9. ']' → logprob: -12.600369453430176
    10. '```' → logprob: -12.975369453430176

Token 1323: 'id' (ID: 315)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4740997850894928
    2. 'id' → logprob: -0.9740997552871704
    3. '0' → logprob: -11.099100112915039
    4. '   ' → logprob: -13.224100112915039
    5. ' i' → logprob: -13.224100112915039
    6. '```' → logprob: -14.224100112915039
    7. '[i' → logprob: -14.349100112915039
    8. ' ' → logprob: -14.599100112915039
    9. 'idx' → logprob: -14.849100112915039
    10. ' id' → logprob: -14.849100112915039

Token 1324: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05374958738684654
    2. '][' → logprob: -3.0537495613098145
    3. ']+=' → logprob: -5.6787495613098145
    4. '[id' → logprob: -6.6787495613098145
    5. ']=' → logprob: -8.428750038146973
    6. '[' → logprob: -9.303750038146973
    7. '[j' → logprob: -9.553750038146973
    8. '[i' → logprob: -10.803750038146973
    9. '2' → logprob: -10.928750038146973
    10. '   ' → logprob: -11.178750038146973

Token 1325: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5063767433166504
    2. '%=' → logprob: -1.0063767433166504
    3. '=' → logprob: -3.6313767433166504
    4. ' +=' → logprob: -5.63137674331665
    5. ' %=' → logprob: -6.88137674331665
    6. ']+=' → logprob: -8.256376266479492
    7. ' =' → logprob: -8.381376266479492
    8. '[' → logprob: -9.131376266479492
    9. '%' → logprob: -11.006376266479492
    10. '=(' → logprob: -11.256376266479492

Token 1326: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.686778503237292e-05
    2. ' ' → logprob: -9.250097274780273
    3. '   ' → logprob: -15.125097274780273
    4. 'mod' → logprob: -15.125097274780273
    5. 'dp' → logprob: -17.625097274780273
    6. '(' → logprob: -18.000097274780273
    7. '  ' → logprob: -18.375097274780273
    8. '
' → logprob: -18.500097274780273
    9. '```' → logprob: -18.500097274780273
    10. '1' → logprob: -18.500097274780273

Token 1327: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.745069499127567e-05
    2. ' ' → logprob: -9.50008773803711
    3. '(' → logprob: -12.12508773803711
    4. 'mod' → logprob: -12.12508773803711
    5. '   ' → logprob: -14.00008773803711
    6. 'dp' → logprob: -15.25008773803711
    7. '1' → logprob: -15.75008773803711
    8. 'pow' → logprob: -15.93758773803711
    9. ' (' → logprob: -16.31258773803711
    10. '  ' → logprob: -16.56258773803711

Token 1328: '
' (ID: 198)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.7235220670700073
    2. '
' → logprob: -0.7235220670700073
    3. 'mod' → logprob: -4.098522186279297
    4. 'dp' → logprob: -5.348522186279297
    5. '%
' → logprob: -5.348522186279297
    6. '<|end|>' → logprob: -6.723522186279297
    7. '       ' → logprob: -7.473522186279297
    8. '   ' → logprob: -7.848522186279297
    9. '	dp' → logprob: -8.473522186279297
    10. ' %' → logprob: -8.598522186279297

Token 1329: '       ' (ID: 309)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.023184211924672127
    2. ' dp' → logprob: -4.398184299468994
    3. '       ' → logprob: -5.273184299468994
    4. '```' → logprob: -5.773184299468994
    5. '(dp' → logprob: -7.148184299468994
    6. '	dp' → logprob: -7.273184299468994
    7. '   ' → logprob: -8.148183822631836
    8. '
' → logprob: -8.273183822631836
    9. '``' → logprob: -8.523183822631836
    10. '.dp' → logprob: -10.023183822631836

Token 1330: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.11443423479795456
    2. ' dp' → logprob: -3.114434242248535
    3. '%' → logprob: -3.239434242248535
    4. '%=' → logprob: -4.614434242248535
    5. '(dp' → logprob: -5.614434242248535
    6. ' %=' → logprob: -5.989434242248535
    7. '
' → logprob: -6.239434242248535
    8. '	dp' → logprob: -6.364434242248535
    9. '=' → logprob: -6.864434242248535
    10. '%
' → logprob: -6.864434242248535

Token 1331: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: 0.0
    2. '[' → logprob: -16.75
    3. '```' → logprob: -19.0
    4. 'i' → logprob: -19.125
    5. '[
' → logprob: -19.125
    6. '   ' → logprob: -21.0
    7. ' [' → logprob: -21.625
    8. '
' → logprob: -21.625
    9. '[...]' → logprob: -21.75
    10. '[id' → logprob: -21.875

Token 1332: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2546082139015198
    2. '][' → logprob: -1.504608154296875
    3. ')[' → logprob: -6.379608154296875
    4. '[id' → logprob: -8.379608154296875
    5. '}[' → logprob: -8.504608154296875
    6. '[' → logprob: -8.754608154296875
    7. '>[' → logprob: -8.879608154296875
    8. ']' → logprob: -9.754608154296875
    9. '%' → logprob: -10.254608154296875
    10. '[
' → logprob: -10.879608154296875

Token 1333: 'id' (ID: 315)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.3869999945163727
    2. 'id' → logprob: -1.1369999647140503
    3. 'i' → logprob: -9.01200008392334
    4. ' mod' → logprob: -13.13700008392334
    5. 'idx' → logprob: -13.51200008392334
    6. '0' → logprob: -14.63700008392334
    7. '100' → logprob: -14.88700008392334
    8. ' ' → logprob: -15.01200008392334
    9. '	mod' → logprob: -15.13700008392334
    10. '1' → logprob: -15.51200008392334

Token 1334: ']' (ID: 60)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.11700446903705597
    2. ')' → logprob: -2.99200439453125
    3. '%' → logprob: -3.49200439453125
    4. ' %=' → logprob: -3.61700439453125
    5. ']' → logprob: -5.99200439453125
    6. ')%' → logprob: -7.99200439453125
    7. '   ' → logprob: -10.11700439453125
    8. '#' → logprob: -11.49200439453125
    9. '	' → logprob: -11.74200439453125
    10. ' ' → logprob: -11.86700439453125

Token 1335: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.00033951509976759553
    2. ' %=' → logprob: -8.62533950805664
    3. '%' → logprob: -8.75033950805664
    4. ')' → logprob: -14.25033950805664
    5. ')%' → logprob: -15.00033950805664
    6. '=' → logprob: -15.12533950805664
    7. '   ' → logprob: -16.62533950805664
    8. ' ' → logprob: -16.87533950805664
    9. '#' → logprob: -17.12533950805664
    10. '	' → logprob: -17.37533950805664

Token 1336: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -4.320199877838604e-07
    2. ' mod' → logprob: -14.75
    3. '(mod' → logprob: -20.875
    4. '	mod' → logprob: -21.375
    5. '```' → logprob: -23.5
    6. ' мод' → logprob: -24.25
    7. 'MOD' → logprob: -25.0
    8. 'moder' → logprob: -25.25
    9. '_mod' → logprob: -25.375
    10. '
' → logprob: -25.75

Token 1337: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026039348915219307
    2. '<|end|>' → logprob: -4.401039123535156
    3. 'for' → logprob: -4.901039123535156
    4. '```' → logprob: -6.026039123535156
    5. '
' → logprob: -7.026039123535156
    6. '#' → logprob: -7.151039123535156
    7. 'if' → logprob: -7.151039123535156
    8. ' for' → logprob: -7.651039123535156
    9. 'i' → logprob: -9.276039123535156
    10. '<|end|>' → logprob: -9.276039123535156

Token 1338: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019533280283212662
    2. 'for' → logprob: -4.644533157348633
    3. 'i' → logprob: -5.394533157348633
    4. '```' → logprob: -5.644533157348633
    5. ' for' → logprob: -6.769533157348633
    6. ' i' → logprob: -8.894533157348633
    7. '
' → logprob: -9.019533157348633
    8. '       ' → logprob: -9.519533157348633
    9. 'while' → logprob: -9.894533157348633
    10. '    
' → logprob: -9.894533157348633

Token 1339: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6244699358940125
    2. '   ' → logprob: -1.2494699954986572
    3. 'i' → logprob: -1.8744699954986572
    4. '```' → logprob: -3.9994699954986572
    5. 'while' → logprob: -6.124469757080078
    6. ' for' → logprob: -6.374469757080078
    7. '#' (adapté à ' #') → logprob: -7.124469757080078
    8. '
' → logprob: -7.499469757080078
    9. 'if' → logprob: -8.124469757080078
    10. '    
' → logprob: -8.624469757080078

Token 1340: ' Bou' (ID: 33816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11346636712551117
    2. 'i' → logprob: -2.238466262817383
    3. '#' → logprob: -8.488466262817383
    4. '   ' → logprob: -9.363466262817383
    5. 'def' → logprob: -9.363466262817383
    6. 'j' → logprob: -9.738466262817383
    7. 'if' → logprob: -9.863466262817383
    8. '```' → logprob: -10.113466262817383
    9. ' for' → logprob: -10.863466262817383
    10. 'while' → logprob: -10.988466262817383

Token 1341: 'cle' (ID: 3170)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6936981678009033
    2. 'cle' → logprob: -0.6936981678009033
    3. 'cles' → logprob: -8.693697929382324
    4. 'cl' → logprob: -8.693697929382324
    5. 'i' → logprob: -9.568697929382324
    6. '#' → logprob: -9.568697929382324
    7. 'clé' → logprob: -10.943697929382324
    8. 'r' → logprob: -11.193697929382324
    9. 't' → logprob: -11.568697929382324
    10. 'ck' → logprob: -11.818697929382324

Token 1342: ' principale' (ID: 68926)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13305173814296722
    2. ' for' → logprob: -2.133051633834839
    3. 'i' → logprob: -5.633051872253418
    4. '   ' → logprob: -6.633051872253418
    5. ' i' → logprob: -6.758051872253418
    6. 'in' → logprob: -11.758051872253418
    7. '#' → logprob: -12.133051872253418
    8. '	for' → logprob: -12.258051872253418
    9. '```' → logprob: -12.758051872253418
    10. ':' → logprob: -12.758051872253418

Token 1343: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.020812561735510826
    2. ' for' → logprob: -3.895812511444092
    3. 'i' → logprob: -8.52081298828125
    4. '   ' → logprob: -9.89581298828125
    5. '
' → logprob: -11.77081298828125
    6. '```' → logprob: -12.14581298828125
    7. ' i' → logprob: -12.89581298828125
    8. ':' → logprob: -12.89581298828125
    9. '	for' → logprob: -14.27081298828125
    10. ',' → logprob: -14.64581298828125

Token 1344: ' remplir' (ID: 113625)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02336159534752369
    2. ' i' → logprob: -3.7733616828918457
    3. 'j' → logprob: -9.898361206054688
    4. 'k' → logprob: -11.273361206054688
    5. '```' → logprob: -11.398361206054688
    6. '`' → logprob: -12.148361206054688
    7. '	i' → logprob: -12.398361206054688
    8. 'x' → logprob: -12.398361206054688
    9. '1' → logprob: -12.523361206054688
    10. ' j' → logprob: -12.523361206054688

Token 1345: ' la' (ID: 557)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2727767527103424
    2. ' i' → logprob: -1.52277672290802
    3. ' range' → logprob: -4.6477766036987305
    4. 'range' → logprob: -5.0227766036987305
    5. '   ' → logprob: -6.3977766036987305
    6. ' j' → logprob: -7.2727766036987305
    7. 'j' → logprob: -7.5227766036987305
    8. ' for' → logprob: -7.6477766036987305
    9. 'for' → logprob: -7.8977766036987305
    10. '```' → logprob: -8.52277660369873

Token 1346: ' table' (ID: 3293)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3190101981163025
    2. 'range' → logprob: -1.5690102577209473
    3. ' range' → logprob: -3.1940102577209473
    4. 'for' → logprob: -4.069010257720947
    5. ' i' → logprob: -5.819010257720947
    6. '_' → logprob: -6.194010257720947
    7. '```' → logprob: -7.319010257720947
    8. ' for' → logprob: -7.569010257720947
    9. '`' → logprob: -9.069009780883789
    10. '_range' → logprob: -9.194009780883789

Token 1347: ' dp' (ID: 21546)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.026560252532362938
    2. ' for' → logprob: -3.7765603065490723
    3. 'i' → logprob: -6.026560306549072
    4. '   ' → logprob: -7.651560306549072
    5. 'range' → logprob: -8.151559829711914
    6. ' i' → logprob: -9.901559829711914
    7. '```' → logprob: -10.901559829711914
    8. '
' → logprob: -11.026559829711914
    9. ' range' → logprob: -11.901559829711914
    10. 'n' → logprob: -12.026559829711914

Token 1348: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21426256000995636
    2. ' for' → logprob: -2.0892624855041504
    3. 'for' → logprob: -2.7142624855041504
    4. '
' → logprob: -6.33926248550415
    5. '	for' → logprob: -7.58926248550415
    6. 'i' → logprob: -8.589262962341309
    7. '```' → logprob: -8.964262962341309
    8. ' i' → logprob: -9.214262962341309
    9. ':' → logprob: -10.089262962341309
    10. '    
' → logprob: -10.464262962341309

Token 1349: ' les' (ID: 1341)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0162708330899477
    2. ' i' → logprob: -4.141270637512207
    3. 'j' → logprob: -9.141270637512207
    4. 'range' → logprob: -9.516270637512207
    5. ' range' → logprob: -11.016270637512207
    6. '_i' → logprob: -11.766270637512207
    7. ' j' → logprob: -12.141270637512207
    8. 'k' → logprob: -12.266270637512207
    9. 'x' → logprob: -12.391270637512207
    10. '   ' → logprob: -13.391270637512207

Token 1350: ' étapes' (ID: 96583)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.003639272879809141
    2. ' i' → logprob: -5.878639221191406
    3. 'range' → logprob: -8.003639221191406
    4. 'j' → logprob: -8.378639221191406
    5. '1' → logprob: -8.753639221191406
    6. ' range' → logprob: -9.628639221191406
    7. '2' → logprob: -11.378639221191406
    8. '_i' → logprob: -12.253639221191406
    9. 'rest' → logprob: -12.503639221191406
    10. 'k' → logprob: -12.628639221191406

Token 1351: ' suivantes' (ID: 106173)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.532487690448761
    2. 'i' → logprob: -1.4074876308441162
    3. 'for' → logprob: -2.907487630844116
    4. ' i' → logprob: -3.032487630844116
    5. 'in' → logprob: -3.407487630844116
    6. ' for' → logprob: -3.657487630844116
    7. 'range' → logprob: -5.782487869262695
    8. ' range' → logprob: -6.282487869262695
    9. '_' → logprob: -7.532487869262695
    10. '   ' → logprob: -8.407487869262695

Token 1352: ' :
' (ID: 10039)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15073734521865845
    2. '
' → logprob: -2.6507372856140137
    3. ' for' → logprob: -2.7757372856140137
    4. '   ' → logprob: -5.400737285614014
    5. 'i' → logprob: -6.900737285614014
    6. ':' → logprob: -7.525737285614014
    7. '```' → logprob: -7.900737285614014
    8. ' i' → logprob: -8.900737762451172
    9. ',' → logprob: -9.275737762451172
    10. ':
' → logprob: -9.400737762451172

Token 1353: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3549526333808899
    2. ' for' → logprob: -1.8549525737762451
    3. '   ' → logprob: -2.354952573776245
    4. '```' → logprob: -3.104952573776245
    5. 'i' → logprob: -6.604952812194824
    6. ' i' → logprob: -7.354952812194824
    7. '``' → logprob: -8.604952812194824
    8. '
' → logprob: -8.854952812194824
    9. '	for' → logprob: -8.979952812194824
    10. 'n' → logprob: -10.354952812194824

Token 1354: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.322305291891098
    2. ' for' → logprob: -1.6973053216934204
    3. '   ' → logprob: -3.072305202484131
    4. 'i' → logprob: -3.572305202484131
    5. '```' → logprob: -4.197305202484131
    6. ' i' → logprob: -5.947305202484131
    7. '	for' → logprob: -9.197305679321289
    8. '
' → logprob: -10.322305679321289
    9. '``' → logprob: -10.572305679321289
    10. '`' → logprob: -10.572305679321289

Token 1355: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004055482801049948
    2. ' for' → logprob: -5.754055500030518
    3. 'i' → logprob: -7.629055500030518
    4. '   ' → logprob: -7.879055500030518
    5. '```' → logprob: -11.75405502319336
    6. ' i' → logprob: -13.00405502319336
    7. '
' → logprob: -13.37905502319336
    8. '	for' → logprob: -15.00405502319336
    9. 'range' → logprob: -15.62905502319336
    10. '    
' → logprob: -16.00405502319336

Token 1356: ' commence' (ID: 44755)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011779118329286575
    2. ' for' → logprob: -4.511779308319092
    3. '=' → logprob: -7.886779308319092
    4. 'or' → logprob: -8.636778831481934
    5. 'range' → logprob: -9.886778831481934
    6. ' =' → logprob: -10.386778831481934
    7. 'r' → logprob: -10.636778831481934
    8. '
' → logprob: -10.886778831481934
    9. 'i' → logprob: -11.761778831481934
    10. 'from' → logprob: -12.011778831481934

Token 1357: ' à' (ID: 1221)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.710010826587677
    2. 'from' → logprob: -0.960010826587677
    3. '   ' → logprob: -2.3350107669830322
    4. ' for' → logprob: -4.085011005401611
    5. ' from' → logprob: -4.710011005401611
    6. 'range' → logprob: -7.085011005401611
    7. 'i' → logprob: -7.460011005401611
    8. ' i' → logprob: -7.960011005401611
    9. '(i' → logprob: -8.085010528564453
    10. '(' → logprob: -8.710010528564453

Token 1358: ' la' (ID: 557)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14287243783473969
    2. 'range' → logprob: -2.3928723335266113
    3. 'i' → logprob: -3.6428723335266113
    4. ' range' → logprob: -4.642872333526611
    5. '2' → logprob: -6.142872333526611
    6. ' ' → logprob: -6.267872333526611
    7. ' i' → logprob: -6.392872333526611
    8. 'for' → logprob: -8.76787281036377
    9. 'j' → logprob: -10.51787281036377
    10. '   ' → logprob: -10.76787281036377

Token 1359: ' deuxième' (ID: 51664)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.015580631792545319
    2. 'i' → logprob: -4.265580654144287
    3. 'range' → logprob: -7.265580654144287
    4. 'for' → logprob: -7.640580654144287
    5. '2' → logprob: -9.265580177307129
    6. ' ' → logprob: -10.015580177307129
    7. '   ' → logprob: -10.265580177307129
    8. ' i' → logprob: -10.640580177307129
    9. 'j' → logprob: -11.390580177307129
    10. ' range' → logprob: -11.890580177307129

Token 1360: ' transition' (ID: 14463)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2838597297668457
    2. 'for' → logprob: -2.0338597297668457
    3. ' for' → logprob: -2.6588597297668457
    4. ' i' → logprob: -3.4088597297668457
    5. 'range' → logprob: -6.033859729766846
    6. 'indice' → logprob: -6.158859729766846
    7. ')' → logprob: -6.408859729766846
    8. ' ' → logprob: -7.158859729766846
    9. ' line' → logprob: -7.283859729766846
    10. 'index' → logprob: -7.283859729766846

Token 1361: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6370052695274353
    2. ' for' → logprob: -0.7620052695274353
    3. '   ' → logprob: -6.13700532913208
    4. ' i' → logprob: -6.51200532913208
    5. 'i' → logprob: -7.51200532913208
    6. ' in' → logprob: -10.387004852294922
    7. 'range' → logprob: -10.387004852294922
    8. 'from' → logprob: -10.637004852294922
    9. ' range' → logprob: -10.762004852294922
    10. ',' → logprob: -10.762004852294922

Token 1362: 'i' (ID: 72)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014739121310412884
    2. 'i' → logprob: -4.514739036560059
    3. '2' → logprob: -6.389739036560059
    4. 'for' → logprob: -7.014739036560059
    5. 'range' → logprob: -7.264739036560059
    6. 'j' → logprob: -9.014739036560059
    7. ' ' → logprob: -9.139739036560059
    8. ' i' → logprob: -9.514739036560059
    9. '   ' → logprob: -10.764739036560059
    10. ' for' → logprob: -10.764739036560059

Token 1363: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1369297355413437
    2. ' =' → logprob: -2.761929750442505
    3. ' in' → logprob: -2.886929750442505
    4. 'in' → logprob: -5.011929512023926
    5. '1' → logprob: -6.761929512023926
    6. ')' → logprob: -7.386929512023926
    7. ',' → logprob: -8.761929512023926
    8. '+=' → logprob: -8.761929512023926
    9. ' +=' → logprob: -9.511929512023926
    10. '2' → logprob: -9.886929512023926

Token 1364: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.787507714354433e-05
    2. '2' → logprob: -10.00004768371582
    3. ' ' → logprob: -13.50004768371582
    4. '   ' → logprob: -14.62504768371582
    5. '```' → logprob: -14.75004768371582
    6. '>' → logprob: -16.12504768371582
    7. 'i' → logprob: -17.06254768371582
    8. ')' → logprob: -17.93754768371582
    9. '۱' → logprob: -18.12504768371582
    10. '`' → logprob: -18.25004768371582

Token 1365: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.213861107826233
    2. '   ' → logprob: -1.588861107826233
    3. '
' → logprob: -1.588861107826233
    4. 'for' → logprob: -2.2138609886169434
    5. ' for' → logprob: -2.7138609886169434
    6. ';i' → logprob: -3.3388609886169434
    7. ')' → logprob: -3.4638609886169434
    8. ';' → logprob: -4.588860988616943
    9. '):
' → logprob: -4.588860988616943
    10. '):' → logprob: -5.463860988616943

Token 1366: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7962112426757812
    2. ' for' → logprob: -1.0462112426757812
    3. 'for' → logprob: -1.6712112426757812
    4. '
' → logprob: -5.796211242675781
    5. ':' → logprob: -6.296211242675781
    6. ',' → logprob: -6.296211242675781
    7. ' in' → logprob: -7.171211242675781
    8. '```' → logprob: -7.671211242675781
    9. '	for' → logprob: -7.796211242675781
    10. '<|end|>' → logprob: -8.421211242675781

Token 1367: ' on' (ID: 402)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7134114503860474
    2. ' i' → logprob: -0.8384114503860474
    3. ' for' → logprob: -3.338411331176758
    4. 'for' → logprob: -3.588411331176758
    5. ' range' → logprob: -5.088411331176758
    6. 'range' → logprob: -5.213411331176758
    7. ' while' → logprob: -6.713411331176758
    8. 'while' → logprob: -6.838411331176758
    9. 'n' → logprob: -8.088411331176758
    10. ' continue' → logprob: -9.463411331176758

Token 1368: ' termine' (ID: 76900)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6654942035675049
    2. ' range' → logprob: -1.0404942035675049
    3. 'for' → logprob: -2.290494203567505
    4. ' for' → logprob: -3.540494203567505
    5. 'n' → logprob: -6.915493965148926
    6. 'i' → logprob: -6.915493965148926
    7. ' i' → logprob: -8.665493965148926
    8. ' n' → logprob: -9.290493965148926
    9. ' in' → logprob: -9.415493965148926
    10. '1' → logprob: -10.165493965148926

Token 1369: ' à' (ID: 1221)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4698079824447632
    2. 'range' → logprob: -2.3448081016540527
    3. ' range' → logprob: -2.4698081016540527
    4. ' i' → logprob: -2.7198081016540527
    5. ' for' → logprob: -3.4698081016540527
    6. 'i' → logprob: -3.5948081016540527
    7. 'in' → logprob: -3.8448081016540527
    8. ' at' → logprob: -4.094808101654053
    9. 'for' → logprob: -4.469808101654053
    10. '(i' → logprob: -5.094808101654053

Token 1370: ' l' (ID: 305)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5281069278717041
    2. 'N' → logprob: -0.9031069278717041
    3. ' n' → logprob: -5.653106689453125
    4. ' N' → logprob: -7.528106689453125
    5. 'range' → logprob: -8.153106689453125
    6. '   ' → logprob: -8.278106689453125
    7. 'len' → logprob: -8.403106689453125
    8. ' range' → logprob: -9.403106689453125
    9. '1' → logprob: -9.653106689453125
    10. ' ' → logprob: -12.778106689453125

Token 1371: ''avant' (ID: 161711)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12989681959152222
    2. ' range' → logprob: -2.129896879196167
    3. 'i' → logprob: -6.504896640777588
    4. 'n' → logprob: -8.129897117614746
    5. 'len' → logprob: -8.129897117614746
    6. '[N' → logprob: -9.004897117614746
    7. '=' → logprob: -9.004897117614746
    8. 'N' → logprob: -9.129897117614746
    9. '=len' → logprob: -9.504897117614746
    10. '[' → logprob: -10.004897117614746

Token 1372: '-' (ID: 12)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.32676663994789124
    2. '-' → logprob: -2.0767667293548584
    3. ' i' → logprob: -2.4517667293548584
    4. 'dern' → logprob: -2.8267667293548584
    5. ' dernier' → logprob: -6.076766490936279
    6. 'last' → logprob: -6.326766490936279
    7. 'der' → logprob: -6.576766490936279
    8. '-last' → logprob: -7.201766490936279
    9. '```' → logprob: -7.451766490936279
    10. 'range' → logprob: -8.326766967773438

Token 1373: 'der' (ID: 761)
  Prédit: 'dern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dern' → logprob: -0.25500065088272095
    2. 'der' → logprob: -1.5050005912780762
    3. '-' → logprob: -5.880000591278076
    4. '```' → logprob: -9.380001068115234
    5. ' dernière' → logprob: -9.630001068115234
    6. 'avant' → logprob: -9.880001068115234
    7. '   ' → logprob: -11.505001068115234
    8. ' ' → logprob: -11.505001068115234
    9. '_der' → logprob: -11.630001068115234
    10. '`' → logprob: -11.880001068115234

Token 1374: 'ni' (ID: 1906)
  Prédit: 'dern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dern' → logprob: -0.23033998906612396
    2. 'der' → logprob: -1.7303400039672852
    3. '-' → logprob: -4.730340003967285
    4. 'ier' → logprob: -4.855340003967285
    5. 'ière' → logprob: -5.355340003967285
    6. 'ni' → logprob: -5.355340003967285
    7. 'nier' → logprob: -7.105340003967285
    8. '```' → logprob: -7.730340003967285
    9. 'pen' → logprob: -8.230340003967285
    10. 'i' → logprob: -8.355340003967285

Token 1375: 'ère' (ID: 4346)
  Prédit: 'ier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ier' → logprob: -1.0506455898284912
    2. 'der' → logprob: -1.4256455898284912
    3. 'dern' → logprob: -1.5506455898284912
    4. '-' → logprob: -2.300645589828491
    5. 'ière' → logprob: -2.550645589828491
    6. 'i' → logprob: -4.30064582824707
    7. '```' → logprob: -5.67564582824707
    8. 'ni' → logprob: -7.05064582824707
    9. 'Dern' → logprob: -7.67564582824707
    10. ' dernière' → logprob: -7.92564582824707

Token 1376: ' (' (ID: 350)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6082745790481567
    2. 'i' → logprob: -0.9832745790481567
    3. ' for' → logprob: -3.358274459838867
    4. 'for' → logprob: -4.608274459838867
    5. ' line' → logprob: -4.983274459838867
    6. ' in' → logprob: -5.108274459838867
    7. '(i' → logprob: -5.108274459838867
    8. 'range' → logprob: -5.733274459838867
    9. ' range' → logprob: -6.233274459838867
    10. '1' → logprob: -6.358274459838867

Token 1377: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.2766523063182831
    2. 'n' → logprob: -1.5266523361206055
    3. '1' → logprob: -3.9016523361206055
    4. ' N' → logprob: -6.1516523361206055
    5. ' n' → logprob: -6.6516523361206055
    6. 'i' → logprob: -8.276652336120605
    7. '2' → logprob: -8.526652336120605
    8. 'len' → logprob: -8.526652336120605
    9. 'range' → logprob: -9.776652336120605
    10. '   ' → logprob: -10.276652336120605

Token 1378: '-' (ID: 12)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.3240110874176025
    2. ')' → logprob: -1.5740110874176025
    3. ' -' → logprob: -1.5740110874176025
    4. '-' → logprob: -1.8240110874176025
    5. ' =' → logprob: -3.4490110874176025
    6. 'range' → logprob: -3.4490110874176025
    7. 'for' → logprob: -3.5740110874176025
    8. 'i' → logprob: -4.324010848999023
    9. ' for' → logprob: -4.449010848999023
    10. ' in' → logprob: -4.949010848999023

Token 1379: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2813369035720825
    2. '1' → logprob: -1.4063369035720825
    3. ' ' → logprob: -9.281336784362793
    4. '```' → logprob: -9.781336784362793
    5. '3' → logprob: -10.656336784362793
    6. '-' → logprob: -12.593836784362793
    7. '
' → logprob: -13.031336784362793
    8. ')' → logprob: -13.468836784362793
    9. '   ' → logprob: -13.843836784362793
    10. '``' → logprob: -14.593836784362793

Token 1380: '),
' (ID: 2313)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.535052478313446
    2. '):' → logprob: -1.6600525379180908
    3. ':' → logprob: -2.285052537918091
    4. ',' → logprob: -2.785052537918091
    5. '
' → logprob: -3.785052537918091
    6. ':
' → logprob: -4.035052299499512
    7. ')' → logprob: -4.660052299499512
    8. 'for' → logprob: -6.160052299499512
    9. '+' → logprob: -6.285052299499512
    10. '```' → logprob: -7.035052299499512

Token 1381: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44823500514030457
    2. ' i' → logprob: -1.698235034942627
    3. ' for' → logprob: -2.198235034942627
    4. 'i' → logprob: -2.823235034942627
    5. 'for' → logprob: -5.073235034942627
    6. '```' → logprob: -8.073234558105469
    7. '
' → logprob: -8.198234558105469
    8. ' 
' → logprob: -8.573234558105469
    9. '	i' → logprob: -8.698234558105469
    10. ' range' → logprob: -8.948234558105469

Token 1382: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6818333864212036
    2. '   ' → logprob: -1.6818333864212036
    3. 'for' → logprob: -1.8068333864212036
    4. ' i' → logprob: -2.556833267211914
    5. 'i' → logprob: -2.806833267211914
    6. '1' → logprob: -5.806833267211914
    7. ' range' → logprob: -6.556833267211914
    8. '```' → logprob: -7.431833267211914
    9. ':' → logprob: -7.681833267211914
    10. 'range' → logprob: -7.931833267211914

Token 1383: ' car' (ID: 1669)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22946016490459442
    2. 'i' → logprob: -1.8544601202011108
    3. '   ' → logprob: -3.2294602394104004
    4. ' for' → logprob: -4.8544602394104
    5. ' i' → logprob: -7.2294602394104
    6. 'range' → logprob: -7.9794602394104
    7. 'while' → logprob: -10.479459762573242
    8. '```' → logprob: -11.729459762573242
    9. '	for' → logprob: -11.979459762573242
    10. ' range' → logprob: -12.104459762573242

Token 1384: ' la' (ID: 557)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.34073325991630554
    2. 'i' → logprob: -1.715733289718628
    3. '1' → logprob: -2.590733289718628
    4. ' ' → logprob: -4.340733051300049
    5. 'N' → logprob: -4.965733051300049
    6. ' N' → logprob: -5.340733051300049
    7. ' range' → logprob: -5.340733051300049
    8. 'range' → logprob: -5.965733051300049
    9. ' for' → logprob: -7.090733051300049
    10. 'for' → logprob: -7.965733051300049

Token 1385: ' dernière' (ID: 39497)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.108525276184082
    2. 'i' → logprob: -1.233525276184082
    3. ' range' → logprob: -1.983525276184082
    4. 'range' → logprob: -2.108525276184082
    5. ' i' → logprob: -3.108525276184082
    6. ' N' → logprob: -3.233525276184082
    7. 'len' → logprob: -4.483525276184082
    8. ' for' → logprob: -4.608525276184082
    9. 'for' → logprob: -5.358525276184082
    10. 'n' → logprob: -5.858525276184082

Token 1386: ' hauteur' (ID: 72987)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.701923131942749
    2. ' =' → logprob: -1.576923131942749
    3. 'for' → logprob: -2.201923131942749
    4. ' i' → logprob: -2.451923131942749
    5. '=' → logprob: -3.326923131942749
    6. 'i' → logprob: -3.451923131942749
    7. ' in' → logprob: -4.951923370361328
    8. ' range' → logprob: -5.451923370361328
    9. '+' → logprob: -5.826923370361328
    10. '   ' → logprob: -5.826923370361328

Token 1387: ' h' (ID: 312)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.0151127576828003
    2. ' is' → logprob: -2.01511287689209
    3. ')' → logprob: -2.64011287689209
    4. '<|end|>' → logprob: -2.64011287689209
    5. ' for' → logprob: -2.76511287689209
    6. 's' → logprob: -3.26511287689209
    7. 'n' → logprob: -3.26511287689209
    8. '   ' → logprob: -3.26511287689209
    9. 'for' → logprob: -3.76511287689209
    10. ' est' → logprob: -4.01511287689209

Token 1388: '[N' (ID: 49776)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5326030254364014
    2. 'i' → logprob: -1.5326030254364014
    3. '[' → logprob: -2.1576030254364014
    4. ')' → logprob: -4.2826032638549805
    5. ']' → logprob: -4.2826032638549805
    6. 's' → logprob: -4.7826032638549805
    7. '   ' → logprob: -4.7826032638549805
    8. '```' → logprob: -5.4076032638549805
    9. 'n' → logprob: -5.6576032638549805
    10. ' =' → logprob: -5.7826032638549805

Token 1389: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.008252260275185108
    2. ' -' → logprob: -4.883252143859863
    3. ']' → logprob: -7.758252143859863
    4. '[' → logprob: -9.633252143859863
    5. '#' → logprob: -10.883252143859863
    6. ')' → logprob: -11.008252143859863
    7. ']-' → logprob: -11.008252143859863
    8. '   ' → logprob: -11.133252143859863
    9. '2' → logprob: -11.133252143859863
    10. '[i' → logprob: -11.258252143859863

Token 1390: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04862517490983009
    2. '1' → logprob: -3.0486252307891846
    3. '3' → logprob: -10.798624992370605
    4. '-' → logprob: -12.048624992370605
    5. '```' → logprob: -12.173624992370605
    6. ' ' → logprob: -12.548624992370605
    7. '   ' → logprob: -13.548624992370605
    8. '#' → logprob: -15.486124992370605
    9. '``' → logprob: -15.673624992370605
    10. '`' → logprob: -16.111125946044922

Token 1391: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.043459270149469376
    2. ':' → logprob: -4.418459415435791
    3. ']:
' → logprob: -4.543459415435791
    4. '-' → logprob: -5.668459415435791
    5. ':]' → logprob: -5.668459415435791
    6. ']:' → logprob: -5.668459415435791
    7. '   ' → logprob: -6.043459415435791
    8. ' -' → logprob: -6.793459415435791
    9. '
' → logprob: -6.918459415435791
    10. '+' → logprob: -7.168459415435791

Token 1392: ' sera' (ID: 15511)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.32043057680130005
    2. ' for' → logprob: -1.5704305171966553
    3. '   ' → logprob: -3.5704305171966553
    4. ':' → logprob: -4.320430755615234
    5. ' in' → logprob: -5.195430755615234
    6. ' jusqu' → logprob: -5.570430755615234
    7. 'range' → logprob: -5.695430755615234
    8. ' range' → logprob: -6.570430755615234
    9. 'in' → logprob: -6.820430755615234
    10. '<n' → logprob: -6.820430755615234

Token 1393: ' trait' (ID: 15458)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.20445473492145538
    2. ' N' → logprob: -2.7044546604156494
    3. 'N' → logprob: -2.9544546604156494
    4. 'range' → logprob: -3.2044546604156494
    5. ')' → logprob: -5.5794548988342285
    6. '```' → logprob: -5.8294548988342285
    7. '...' → logprob: -6.0794548988342285
    8. 'i' → logprob: -6.3294548988342285
    9. ' used' → logprob: -6.5794548988342285
    10. ' in' → logprob: -6.8294548988342285

Token 1394: 'ée' (ID: 2894)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7376677393913269
    2. 'e' → logprob: -1.1126677989959717
    3. '=' → logprob: -2.7376677989959717
    4. '   ' → logprob: -3.4876677989959717
    5. ')' → logprob: -3.6126677989959717
    6. 'i' → logprob: -3.6126677989959717
    7. ':' → logprob: -5.112667560577393
    8. 'à' → logprob: -5.362667560577393
    9. ' =' → logprob: -5.487667560577393
    10. ']' → logprob: -5.487667560577393

Token 1395: ' après' (ID: 16460)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4642597734928131
    2. 'in' → logprob: -1.4642597436904907
    3. 'for' → logprob: -2.4642598628997803
    4. ' for' → logprob: -3.7142598628997803
    5. ' jusqu' → logprob: -4.339259624481201
    6. '   ' → logprob: -4.839259624481201
    7. 'dans' → logprob: -6.214259624481201
    8. 'range' → logprob: -6.464259624481201
    9. ',' → logprob: -6.589259624481201
    10. ' en' → logprob: -7.089259624481201

Token 1396: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0011671781539917
    2. 'range' → logprob: -1.6261671781539917
    3. '1' → logprob: -1.7511671781539917
    4. ' for' → logprob: -1.8761671781539917
    5. ' range' → logprob: -2.6261672973632812
    6. '```' → logprob: -4.626167297363281
    7. '   ' → logprob: -5.001167297363281
    8. 'i' → logprob: -5.126167297363281
    9. '
' → logprob: -5.501167297363281
    10. ' in' → logprob: -6.001167297363281

Token 1397: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5368301272392273
    2. ' for' → logprob: -1.286830186843872
    3. '   ' → logprob: -2.036830186843872
    4. '```' → logprob: -5.286829948425293
    5. 'i' → logprob: -5.911829948425293
    6. ' i' → logprob: -7.161829948425293
    7. '	for' → logprob: -8.661829948425293
    8. '``' → logprob: -10.286829948425293
    9. '
' → logprob: -11.411829948425293
    10. 'range' → logprob: -11.661829948425293

Token 1398: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2694147825241089
    2. 'for' (adapté à ' for') → logprob: -1.7694147825241089
    3. 'i' → logprob: -3.3944149017333984
    4. '   ' → logprob: -4.019414901733398
    5. ' i' → logprob: -4.644414901733398
    6. '```' → logprob: -5.519414901733398
    7. ':' → logprob: -9.144414901733398
    8. '	for' → logprob: -9.269414901733398
    9. '1' → logprob: -9.394414901733398
    10. '
' → logprob: -9.894414901733398

Token 1399: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06994988024234772
    2. ' i' → logprob: -2.6949498653411865
    3. '   ' → logprob: -12.194950103759766
    4. '	i' → logprob: -12.569950103759766
    5. '```' → logprob: -13.444950103759766
    6. ' ' → logprob: -13.694950103759766
    7. '_i' → logprob: -14.569950103759766
    8. '(i' → logprob: -14.819950103759766
    9. '1' → logprob: -15.069950103759766
    10. ' ' → logprob: -15.194950103759766

Token 1400: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01821456104516983
    2. 'in' → logprob: -4.018214702606201
    3. '1' → logprob: -10.143214225769043
    4. ' ' → logprob: -11.018214225769043
    5. '	in' → logprob: -12.268214225769043
    6. ' i' → logprob: -13.393214225769043
    7. 'range' → logprob: -14.643214225769043
    8. '   ' → logprob: -15.018214225769043
    9. '=' → logprob: -15.143214225769043
    10. '0' → logprob: -15.268214225769043

Token 1401: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20238691568374634
    2. ' range' → logprob: -1.7023868560791016
    3. '1' → logprob: -6.952386856079102
    4. ' ' → logprob: -11.202386856079102
    5. ' in' → logprob: -13.577386856079102
    6. 'in' → logprob: -13.952386856079102
    7. '	range' → logprob: -14.577386856079102
    8. '(range' → logprob: -15.077386856079102
    9. '0' → logprob: -16.4523868560791
    10. '2' → logprob: -16.5773868560791

Token 1402: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2256287783384323
    2. '(' → logprob: -1.6006287336349487
    3. '2' → logprob: -9.100628852844238
    4. '   ' → logprob: -9.975628852844238
    5. ' ' → logprob: -9.975628852844238
    6. ',' → logprob: -11.975628852844238
    7. ' (' → logprob: -13.100628852844238
    8. '(
' → logprob: -13.350628852844238
    9. '[' → logprob: -14.975628852844238
    10. '	' → logprob: -15.225628852844238

Token 1403: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.750004768371582
    3. '2' → logprob: -13.375004768371582
    4. 'N' → logprob: -16.0000057220459
    5. '   ' → logprob: -16.5000057220459
    6. '(' → logprob: -16.5000057220459
    7. '```' → logprob: -18.5625057220459
    8. 'len' → logprob: -18.6875057220459
    9. 'n' → logprob: -18.7500057220459
    10. ')' → logprob: -19.0625057220459

Token 1404: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011129142512800172
    2. ' ,' → logprob: -9.50011157989502
    3. ',N' → logprob: -10.25011157989502
    4. ',len' → logprob: -15.12511157989502
    5. '(N' → logprob: -15.25011157989502
    6. 'N' → logprob: -15.25011157989502
    7. ',n' → logprob: -16.000110626220703
    8. ',
' → logprob: -16.000110626220703
    9. '   ' → logprob: -16.250110626220703
    10. 'len' → logprob: -18.125110626220703

Token 1405: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -5.88418151892256e-05
    2. ' N' → logprob: -9.750059127807617
    3. 'n' → logprob: -14.750059127807617
    4. '   ' → logprob: -16.500059127807617
    5. '	N' → logprob: -17.500059127807617
    6. 'len' → logprob: -17.875059127807617
    7. '(N' → logprob: -19.500059127807617
    8. 'Ｎ' → logprob: -21.500059127807617
    9. ' n' → logprob: -21.875059127807617
    10. ' ' → logprob: -22.000059127807617

Token 1406: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.12747447192668915
    2. ' -' → logprob: -2.127474546432495
    3. '(N' → logprob: -8.002474784851074
    4. '   ' → logprob: -9.252474784851074
    5. '):' → logprob: -10.377474784851074
    6. ',' → logprob: -10.752474784851074
    7. '):
' → logprob: -11.377474784851074
    8. ' ' → logprob: -11.627474784851074
    9. '[N' → logprob: -11.627474784851074
    10. '#' → logprob: -12.377474784851074

Token 1407: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '2' → logprob: -17.125
    4. '   ' → logprob: -18.75
    5. '１' → logprob: -19.875
    6. '۱' → logprob: -20.625
    7. '१' → logprob: -21.0
    8. '
' → logprob: -21.125
    9. '১' → logprob: -21.75
    10. '```' → logprob: -22.5

Token 1408: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.625
    3. '2' → logprob: -18.625
    4. '   ' → logprob: -20.0
    5. '１' → logprob: -20.5
    6. '१' → logprob: -20.75
    7. '۱' → logprob: -20.875
    8. '
' → logprob: -21.375
    9. '১' → logprob: -21.5
    10. '```' → logprob: -21.625

Token 1409: '):

' (ID: 15626)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002187376143410802
    2. ':' → logprob: -6.627187252044678
    3. '):
' → logprob: -7.127187252044678
    4. '():' → logprob: -10.877187728881836
    5. ' ):' → logprob: -11.377187728881836
    6. '   ' → logprob: -11.877187728881836
    7. '):
' → logprob: -12.502187728881836
    8. ']:' → logprob: -12.627187728881836
    9. ',' → logprob: -12.752187728881836
    10. ' :' → logprob: -12.877187728881836

Token 1410: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5485857725143433
    2. ' if' → logprob: -1.6735857725143433
    3. '       ' → logprob: -1.9235857725143433
    4. 'if' → logprob: -3.173585891723633
    5. 'h' → logprob: -3.673585891723633
    6. ' h' → logprob: -4.923585891723633
    7. 'id' → logprob: -5.423585891723633
    8. ' id' → logprob: -5.673585891723633
    9. ' for' → logprob: -5.673585891723633
    10. '#' → logprob: -7.548585891723633

Token 1411: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3288187086582184
    2. 'for' → logprob: -1.703818678855896
    3. 'id' → logprob: -2.5788187980651855
    4. 'h' → logprob: -4.7038187980651855
    5. '#' (adapté à ' #') → logprob: -5.2038187980651855
    6. '   ' → logprob: -5.3288187980651855
    7. '       ' → logprob: -6.4538187980651855
    8. 'prev' → logprob: -6.9538187980651855
    9. 'current' → logprob: -8.953818321228027
    10. ' if' → logprob: -9.578818321228027

Token 1412: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03063194639980793
    2. 'id' → logprob: -4.405632019042969
    3. 'for' → logprob: -4.405632019042969
    4. '#' → logprob: -6.405632019042969
    5. 'prev' → logprob: -6.780632019042969
    6. 'current' → logprob: -6.905632019042969
    7. 'h' → logprob: -7.405632019042969
    8. 'curr' → logprob: -7.905632019042969
    9. 'cur' → logprob: -8.405632019042969
    10. '   ' → logprob: -8.405632019042969

Token 1413: ' la' (ID: 557)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.038082581013441086
    2. ' h' → logprob: -3.2880825996398926
    3. 'H' → logprob: -10.288082122802734
    4. '   ' → logprob: -12.663082122802734
    5. '	h' → logprob: -13.413082122802734
    6. '(h' → logprob: -13.913082122802734
    7. ' H' → logprob: -14.288082122802734
    8. ' ' → logprob: -14.413082122802734
    9. '  ' → logprob: -16.788082122802734
    10. '#' → logprob: -16.913082122802734

Token 1414: ' prochaine' (ID: 78876)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.05249955877661705
    2. 'H' → logprob: -3.052499532699585
    3. ' h' → logprob: -5.677499771118164
    4. ' H' → logprob: -7.677499771118164
    5. '#' → logprob: -12.677499771118164
    6. 'i' → logprob: -12.927499771118164
    7. ']' → logprob: -13.177499771118164
    8. '(h' → logprob: -13.302499771118164
    9. ' ' → logprob: -13.427499771118164
    10. '   ' → logprob: -13.677499771118164

Token 1415: ' hauteur' (ID: 72987)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.02729085460305214
    2. ' h' → logprob: -4.9022908210754395
    3. ' =' → logprob: -5.9022908210754395
    4. '=' → logprob: -5.9022908210754395
    5. 'H' → logprob: -6.0272908210754395
    6. '>' → logprob: -6.2772908210754395
    7. 'i' → logprob: -6.9022908210754395
    8. ')' → logprob: -7.0272908210754395
    9. '   ' → logprob: -7.1522908210754395
    10. ']' → logprob: -7.2772908210754395

Token 1416: ' est' (ID: 893)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5026007294654846
    2. '>=' → logprob: -1.6276006698608398
    3. 'h' → logprob: -3.25260066986084
    4. ']' → logprob: -3.25260066986084
    5. '<=' → logprob: -3.50260066986084
    6. '[' → logprob: -3.75260066986084
    7. '[h' → logprob: -4.37760066986084
    8. ' >=' → logprob: -4.50260066986084
    9. '[j' → logprob: -4.50260066986084
    10. ')' → logprob: -4.62760066986084

Token 1417: ' au' (ID: 2791)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.0343097560107708
    2. 'h' → logprob: -3.9093098640441895
    3. 'sup' → logprob: -4.7843098640441895
    4. 'greater' → logprob: -6.1593098640441895
    5. '>' → logprob: -7.0343098640441895
    6. 'super' → logprob: -7.2843098640441895
    7. ' >=' → logprob: -7.5343098640441895
    8. ' supérieure' → logprob: -8.409309387207031
    9. ']>=' → logprob: -8.409309387207031
    10. 'plus' → logprob: -8.784309387207031

Token 1418: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.0005050156614743173
    2. 'minimum' → logprob: -8.375505447387695
    3. 'mo' → logprob: -9.375505447387695
    4. 'plus' → logprob: -9.625505447387695
    5. ' moins' → logprob: -10.000505447387695
    6. 'menos' → logprob: -10.375505447387695
    7. 'h' → logprob: -11.625505447387695
    8. '   ' → logprob: -11.625505447387695
    9. 'min' → logprob: -11.750505447387695
    10. 'm' → logprob: -12.625505447387695

Token 1419: ' aussi' (ID: 9894)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0028021486941725016
    2. ' h' → logprob: -6.62780237197876
    3. '   ' → logprob: -7.50280237197876
    4. 'i' → logprob: -8.002801895141602
    5. '>=' → logprob: -9.002801895141602
    6. '=' → logprob: -9.127801895141602
    7. '       ' → logprob: -9.252801895141602
    8. '0' → logprob: -9.627801895141602
    9. ')' → logprob: -9.877801895141602
    10. '=h' → logprob: -10.377801895141602

Token 1420: ' grande' (ID: 10094)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.6517221927642822
    2. 'large' → logprob: -1.4017221927642822
    3. ' grande' → logprob: -2.6517221927642822
    4. 'i' → logprob: -2.9017221927642822
    5. 'big' → logprob: -3.0267221927642822
    6. 'grand' → logprob: -4.026721954345703
    7. 'great' → logprob: -4.151721954345703
    8. '   ' → logprob: -5.151721954345703
    9. ' ' → logprob: -5.776721954345703
    10. '0' → logprob: -5.901721954345703

Token 1421: ' que' (ID: 661)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9436197876930237
    2. '=' → logprob: -1.568619728088379
    3. ':' → logprob: -1.943619728088379
    4. '       ' → logprob: -2.943619728088379
    5. ':
' → logprob: -3.318619728088379
    6. 'and' → logprob: -3.318619728088379
    7. '   ' → logprob: -3.693619728088379
    8. '(h' → logprob: -4.193619728088379
    9. ' if' → logprob: -4.193619728088379
    10. 'de' → logprob: -4.193619728088379

Token 1422: ' la' (ID: 557)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.000271706550847739
    2. ' h' → logprob: -8.375271797180176
    3. '   ' → logprob: -10.375271797180176
    4. ' ' → logprob: -12.625271797180176
    5. '```' → logprob: -13.750271797180176
    6. '       ' → logprob: -14.000271797180176
    7. '	h' → logprob: -14.000271797180176
    8. 'H' → logprob: -14.125271797180176
    9. '  ' → logprob: -14.250271797180176
    10. '
' → logprob: -14.500271797180176

Token 1423: ' cour' (ID: 2871)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.25808411836624146
    2. 'h' → logprob: -1.7580840587615967
    3. 'current' → logprob: -3.1330840587615967
    4. 'act' → logprob: -5.758084297180176
    5. 'cour' → logprob: -5.883084297180176
    6. 'ha' → logprob: -6.258084297180176
    7. ' précédente' → logprob: -6.883084297180176
    8. 'previous' → logprob: -7.258084297180176
    9. 'pré' → logprob: -7.508084297180176
    10. 'prés' → logprob: -7.758084297180176

Token 1424: 'ante' (ID: 2116)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.5068427324295044
    2. '[i' → logprob: -1.1318427324295044
    3. 'i' → logprob: -3.381842613220215
    4. 'r' → logprob: -3.506842613220215
    5. '[h' → logprob: -5.381842613220215
    6. 'ant' → logprob: -6.381842613220215
    7. 'ante' → logprob: -7.131842613220215
    8. 'b' → logprob: -7.256842613220215
    9. 'f' → logprob: -7.631842613220215
    10. '[' → logprob: -7.881842613220215

Token 1425: ' :
' (ID: 10039)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12581448256969452
    2. ':' → logprob: -2.750814437866211
    3. ' if' → logprob: -3.625814437866211
    4. 'if' → logprob: -4.375814437866211
    5. ':
' → logprob: -5.125814437866211
    6. ' and' → logprob: -5.625814437866211
    7. '=' → logprob: -6.000814437866211
    8. '   ' → logprob: -7.000814437866211
    9. ' =' → logprob: -7.500814437866211
    10. '==' → logprob: -7.875814437866211

Token 1426: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.43459323048591614
    2. '       ' → logprob: -1.0595932006835938
    3. 'if' → logprob: -5.434593200683594
    4. '```' → logprob: -6.559593200683594
    5. '   ' → logprob: -10.309593200683594
    6. '           ' → logprob: -10.934593200683594
    7. '        
' → logprob: -11.684593200683594
    8. ' ind' → logprob: -12.559593200683594
    9. '#' → logprob: -12.684593200683594
    10. ':' → logprob: -12.809593200683594

Token 1427: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0077700018882751465
    2. 'if' (adapté à ' if') → logprob: -5.25777006149292
    3. '       ' → logprob: -6.00777006149292
    4. '   ' → logprob: -10.507769584655762
    5. '```' → logprob: -10.882769584655762
    6. '           ' → logprob: -12.132769584655762
    7. ' h' → logprob: -12.382769584655762
    8. '        
' → logprob: -12.632769584655762
    9. ' 
' → logprob: -12.757769584655762
    10. ' ' → logprob: -13.632769584655762

Token 1428: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.3133031725883484
    2. ' h' → logprob: -1.3133032321929932
    3. '   ' → logprob: -10.563302993774414
    4. 'H' → logprob: -12.063302993774414
    5. '	h' → logprob: -12.813302993774414
    6. '(h' → logprob: -12.938302993774414
    7. '       ' → logprob: -13.313302993774414
    8. ' ' → logprob: -13.938302993774414
    9. ' H' → logprob: -14.688302993774414
    10. '           ' → logprob: -15.313302993774414

Token 1429: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.869017852295656e-06
    2. '[' → logprob: -12.000006675720215
    3. ' [' → logprob: -14.875006675720215
    4. 'i' → logprob: -15.625006675720215
    5. '[h' → logprob: -16.25000762939453
    6. '   ' → logprob: -17.00000762939453
    7. '[j' → logprob: -17.37500762939453
    8. ' i' → logprob: -18.75000762939453
    9. '```' → logprob: -18.75000762939453
    10. '[e' → logprob: -18.87500762939453

Token 1430: ' +' (ID: 659)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.018170664086937904
    2. '+' → logprob: -4.2681708335876465
    3. '[' → logprob: -5.7681708335876465
    4. '[j' → logprob: -7.8931708335876465
    5. ' +' → logprob: -8.768170356750488
    6. ']' → logprob: -8.893170356750488
    7. '[
' → logprob: -9.643170356750488
    8. '   ' → logprob: -10.268170356750488
    9. 'i' → logprob: -10.643170356750488
    10. ' [' → logprob: -11.018170356750488

Token 1431: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012642296496778727
    2. ' ' → logprob: -9.000126838684082
    3. '0' → logprob: -13.250126838684082
    4. 'i' → logprob: -14.000126838684082
    5. '   ' → logprob: -15.750126838684082
    6. ']' → logprob: -17.000125885009766
    7. '
' → logprob: -17.250125885009766
    8. '```' → logprob: -17.250125885009766
    9. '  ' → logprob: -18.875125885009766
    10. ' i' → logprob: -18.875125885009766

Token 1432: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -12.000008583068848
    3. 'i' → logprob: -12.875008583068848
    4. '0' → logprob: -16.125009536743164
    5. ']' → logprob: -16.125009536743164
    6. '   ' → logprob: -16.500009536743164
    7. '+' → logprob: -17.500009536743164
    8. '```' → logprob: -17.750009536743164
    9. '
' → logprob: -19.125009536743164
    10. '  ' → logprob: -19.500009536743164

Token 1433: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2526635229587555
    2. ']>=' → logprob: -1.502663493156433
    3. '>=' → logprob: -7.377663612365723
    4. '[' → logprob: -10.252663612365723
    5. ' ]' → logprob: -10.752663612365723
    6. ']>' → logprob: -11.002663612365723
    7. ' >=' → logprob: -11.002663612365723
    8. '']' → logprob: -12.127663612365723
    9. '[i' → logprob: -12.752663612365723
    10. '   ' → logprob: -13.002663612365723

Token 1434: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.07289668917655945
    2. ']>=' → logprob: -2.947896718978882
    3. ' >=' → logprob: -4.322896480560303
    4. ']' → logprob: -5.447896480560303
    5. '[' → logprob: -8.572896957397461
    6. '>' → logprob: -9.697896957397461
    7. ')>=' → logprob: -10.947896957397461
    8. '   ' → logprob: -11.822896957397461
    9. ' ' → logprob: -13.322896957397461
    10. '[]' → logprob: -13.322896957397461

Token 1435: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0001601539261173457
    2. ' h' → logprob: -8.750160217285156
    3. '   ' → logprob: -13.875160217285156
    4. '       ' → logprob: -15.375160217285156
    5. '           ' → logprob: -16.000160217285156
    6. '```' → logprob: -16.375160217285156
    7. '
' → logprob: -16.500160217285156
    8. '	h' → logprob: -16.750160217285156
    9. '[h' → logprob: -17.375160217285156
    10. ' ' → logprob: -18.000160217285156

Token 1436: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00011892046313732862
    2. 'i' → logprob: -9.62511920928955
    3. 'h' → logprob: -9.87511920928955
    4. '[' → logprob: -14.37511920928955
    5. '```' → logprob: -15.12511920928955
    6. '
' → logprob: -15.87511920928955
    7. '[h' → logprob: -16.250118255615234
    8. '[
' → logprob: -16.375118255615234
    9. '   ' → logprob: -16.500118255615234
    10. ' [' → logprob: -17.250118255615234

Token 1437: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0055617173202335835
    2. '):' → logprob: -5.630561828613281
    3. ']:' → logprob: -6.755561828613281
    4. ':
' → logprob: -7.380561828613281
    5. '       ' → logprob: -9.005561828613281
    6. ':

' → logprob: -11.130561828613281
    7. '):
' → logprob: -11.630561828613281
    8. '}:' → logprob: -12.005561828613281
    9. '>:' → logprob: -12.380561828613281
    10. ' :' → logprob: -12.630561828613281

Token 1438: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024500612169504166
    2. '       ' → logprob: -3.774500608444214
    3. ':' → logprob: -7.024500846862793
    4. '#' → logprob: -8.649500846862793
    5. ':
' → logprob: -9.524500846862793
    6. '```' → logprob: -10.024500846862793
    7. ',' → logprob: -11.149500846862793
    8. '
' → logprob: -11.649500846862793
    9. '        
' → logprob: -12.149500846862793
    10. '            
' → logprob: -12.399500846862793

Token 1439: ' id' (ID: 1211)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43469780683517456
    2. '           ' → logprob: -1.6846978664398193
    3. 'id' (adapté à ' id') → logprob: -1.9346978664398193
    4. ' id' → logprob: -4.93469762802124
    5. '```' → logprob: -5.43469762802124
    6. '#' → logprob: -5.68469762802124
    7. 'if' → logprob: -5.93469762802124
    8. 'for' → logprob: -6.80969762802124
    9. ' if' → logprob: -7.05969762802124
    10. ' for' → logprob: -7.18469762802124

Token 1440: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759397745132446
    2. '=' → logprob: -0.8259397745132446
    3. 'comp' → logprob: -16.075939178466797
    4. '   ' → logprob: -16.450939178466797
    5. ',' → logprob: -16.575939178466797
    6. '=
' → logprob: -17.575939178466797
    7. ' ' → logprob: -17.825939178466797
    8. '=}' → logprob: -17.825939178466797
    9. '=current' → logprob: -17.950939178466797
    10. '＝' → logprob: -18.200939178466797

Token 1441: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.25193315744400024
    2. ' comp' → logprob: -1.5019330978393555
    3. '	comp' → logprob: -13.001933097839355
    4. '(comp' → logprob: -13.876933097839355
    5. '.comp' → logprob: -15.001933097839355
    6. 'com' → logprob: -15.251933097839355
    7. '   ' → logprob: -16.876934051513672
    8. ' ' → logprob: -16.876934051513672
    9. '[' → logprob: -17.126934051513672
    10. '```' → logprob: -18.376934051513672

Token 1442: '[h' (ID: 88900)
  Prédit: '[h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -0.0003370118502061814
    2. 'h' → logprob: -8.000336647033691
    3. '(h' → logprob: -13.375336647033691
    4. '[' → logprob: -17.500337600708008
    5. '	h' → logprob: -18.750337600708008
    6. '<h' → logprob: -18.750337600708008
    7. '_h' → logprob: -19.375337600708008
    8. ' h' → logprob: -20.250337600708008
    9. '```' → logprob: -20.625337600708008
    10. 'H' → logprob: -20.750337600708008

Token 1443: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5213274309644476e-05
    2. '[h' → logprob: -11.250015258789062
    3. 'h' → logprob: -13.250015258789062
    4. 'i' → logprob: -15.250015258789062
    5. '[' → logprob: -15.750015258789062
    6. ']' → logprob: -16.875015258789062
    7. '(i' → logprob: -17.375015258789062
    8. '   ' → logprob: -17.375015258789062
    9. '```' → logprob: -18.625015258789062
    10. '[
' → logprob: -18.750015258789062

Token 1444: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4309810400009155
    2. ']]' → logprob: -1.4309810400009155
    3. ']]
' → logprob: -2.430981159210205
    4. '[i' → logprob: -3.930981159210205
    5. ']
' → logprob: -5.805981159210205
    6. '+' → logprob: -8.680980682373047
    7. ']]
' → logprob: -9.555980682373047
    8. ')]' → logprob: -10.055980682373047
    9. ']]

' → logprob: -10.180980682373047
    10. '   ' → logprob: -10.555980682373047

Token 1445: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0129638547077775
    2. 'id' → logprob: -4.887963771820068
    3. '            
' → logprob: -5.637963771820068
    4. 'for' → logprob: -7.887963771820068
    5. '
' → logprob: -8.137964248657227
    6. '```' → logprob: -8.262964248657227
    7. 'j' → logprob: -8.637964248657227
    8. '               ' → logprob: -9.387964248657227
    9. '       ' → logprob: -9.637964248657227
    10. '  
' → logprob: -9.762964248657227

Token 1446: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' (adapté à ' id') → logprob: -1.5451681974809617e-05
    2. '           ' → logprob: -11.375015258789062
    3. ' id' → logprob: -12.875015258789062
    4. 'j' → logprob: -14.500015258789062
    5. 'for' → logprob: -14.500015258789062
    6. 'i' → logprob: -16.000015258789062
    7. 'idt' → logprob: -16.500015258789062
    8. 'idf' → logprob: -16.750015258789062
    9. 'idx' → logprob: -17.250015258789062
    10. 'idd' → logprob: -17.500015258789062

Token 1447: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0069664898328483105
    2. '=' → logprob: -5.006966590881348
    3. ' =' → logprob: -8.381966590881348
    4. '+' → logprob: -12.131966590881348
    5. '+=' → logprob: -12.631966590881348
    6. 'for' → logprob: -12.881966590881348
    7. '```' → logprob: -13.131966590881348
    8. '   ' → logprob: -13.256966590881348
    9. ',' → logprob: -13.381966590881348
    10. '_' → logprob: -13.631966590881348

Token 1448: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00861456897109747
    2. ' =' → logprob: -4.758614540100098
    3. '=
' → logprob: -19.133615493774414
    4. ')' → logprob: -20.633615493774414
    5. '=

' → logprob: -20.758615493774414
    6. '＝' → logprob: -21.258615493774414
    7. '=}' → logprob: -21.383615493774414
    8. '=com' → logprob: -21.758615493774414
    9. ',' → logprob: -22.008615493774414
    10. ' ' → logprob: -22.133615493774414

Token 1449: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.014166918583214283
    2. ' comp' → logprob: -4.264166831970215
    3. '	comp' → logprob: -13.139166831970215
    4. '(comp' → logprob: -13.889166831970215
    5. 'com' → logprob: -14.889166831970215
    6. '.comp' → logprob: -16.63916778564453
    7. 'cop' → logprob: -18.01416778564453
    8. ' ' → logprob: -18.13916778564453
    9. '```' → logprob: -18.26416778564453
    10. '[' → logprob: -18.63916778564453

Token 1450: '[h' (ID: 88900)
  Prédit: '[h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: 0.0
    2. 'h' → logprob: -17.75
    3. '(h' → logprob: -20.625
    4. '[' → logprob: -21.125
    5. '<h' → logprob: -22.375
    6. '```' → logprob: -22.875
    7. '[
' → logprob: -24.0
    8. ' [' → logprob: -24.625
    9. '[(' → logprob: -25.25
    10. '	h' → logprob: -25.25

Token 1451: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.011067395098507404
    2. '[h' → logprob: -4.5110673904418945
    3. '[' → logprob: -11.261067390441895
    4. 'i' → logprob: -13.386067390441895
    5. 'h' → logprob: -13.511067390441895
    6. '+' → logprob: -13.761067390441895
    7. ']' → logprob: -13.886067390441895
    8. '```' → logprob: -13.886067390441895
    9. '+i' → logprob: -15.136067390441895
    10. '[
' → logprob: -15.761067390441895

Token 1452: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001177012687548995
    2. ' +' → logprob: -6.751176834106445
    3. '   ' → logprob: -12.626176834106445
    4. '+i' → logprob: -13.376176834106445
    5. '+
' → logprob: -13.876176834106445
    6. '1' → logprob: -15.126176834106445
    7. '[' → logprob: -15.251176834106445
    8. 'i' → logprob: -15.626176834106445
    9. '[i' → logprob: -16.126176834106445
    10. ']' → logprob: -16.626176834106445

Token 1453: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.650518920039758e-06
    2. ' ' → logprob: -12.625003814697266
    3. '
' → logprob: -16.500003814697266
    4. '+' → logprob: -16.875003814697266
    5. '   ' → logprob: -16.875003814697266
    6. '```' → logprob: -17.000003814697266
    7. 'i' → logprob: -17.437503814697266
    8. '[i' → logprob: -17.562503814697266
    9. '`' → logprob: -17.875003814697266
    10. '(i' → logprob: -18.687503814697266

Token 1454: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -14.250001907348633
    3. '+' → logprob: -15.000001907348633
    4. '
' → logprob: -15.125001907348633
    5. 'i' → logprob: -15.500001907348633
    6. '```' → logprob: -15.500001907348633
    7. '[i' → logprob: -15.875001907348633
    8. '   ' → logprob: -16.000001907348633
    9. '`' → logprob: -16.687501907348633
    10. '(i' → logprob: -17.375001907348633

Token 1455: ']]

' (ID: 84024)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007846282795071602
    2. ']
' → logprob: -4.882846355438232
    3. ']

' → logprob: -8.632845878601074
    4. ']+' → logprob: -10.507845878601074
    5. ']
' → logprob: -10.507845878601074
    6. ']

' → logprob: -13.257845878601074
    7. ']]' → logprob: -13.757845878601074
    8. ')]' → logprob: -14.257845878601074
    9. '']' → logprob: -14.382845878601074
    10. '"]' → logprob: -14.382845878601074

Token 1456: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1593961864709854
    2. '       ' → logprob: -2.284396171569824
    3. '
' → logprob: -4.159396171569824
    4. '```' → logprob: -5.034396171569824
    5. ':' → logprob: -5.159396171569824
    6. '               ' → logprob: -5.534396171569824
    7. 'for' → logprob: -5.534396171569824
    8. ':
' → logprob: -5.534396171569824
    9. ' for' → logprob: -5.784396171569824
    10. '            
' → logprob: -7.159396171569824

Token 1457: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02733655646443367
    2. '           ' → logprob: -3.652336597442627
    3. ' for' → logprob: -7.527336597442627
    4. 'dp' → logprob: -8.402336120605469
    5. '```' → logprob: -8.902336120605469
    6. '       ' → logprob: -9.527336120605469
    7. 'if' → logprob: -10.152336120605469
    8. '   ' → logprob: -11.902336120605469
    9. 'j' → logprob: -11.902336120605469
    10. '               ' → logprob: -12.152336120605469

Token 1458: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.000855597376357764
    2. 'if' → logprob: -7.625855445861816
    3. '           ' → logprob: -8.500855445861816
    4. 'dp' → logprob: -9.250855445861816
    5. ' for' → logprob: -10.750855445861816
    6. 'prev' → logprob: -11.375855445861816
    7. 'j' → logprob: -11.750855445861816
    8. '#' → logprob: -12.125855445861816
    9. '       ' → logprob: -12.125855445861816
    10. 'range' → logprob: -12.250855445861816

Token 1459: ' chaque' (ID: 21194)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.03805296868085861
    2. ' j' → logprob: -3.288053035736084
    3. '```' → logprob: -11.788052558898926
    4. '	j' → logprob: -13.913052558898926
    5. '_j' → logprob: -14.163052558898926
    6. ' ' → logprob: -14.413052558898926
    7. ' ' → logprob: -14.788052558898926
    8. '`' → logprob: -14.788052558898926
    9. '   ' → logprob: -15.163052558898926
    10. '[j' → logprob: -16.038053512573242

Token 1460: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.01108731608837843
    2. ' j' → logprob: -4.511087417602539
    3. '   ' → logprob: -11.261087417602539
    4. '```' → logprob: -11.636087417602539
    5. '_j' → logprob: -12.386087417602539
    6. 'k' → logprob: -13.011087417602539
    7. '`' → logprob: -13.136087417602539
    8. '	j' → logprob: -13.761087417602539
    9. ' ' → logprob: -13.886087417602539
    10. 'range' → logprob: -14.136087417602539

Token 1461: ' entre' (ID: 3853)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20176531374454498
    2. 'in' → logprob: -1.7017652988433838
    3. ')' → logprob: -9.826765060424805
    4. '           ' → logprob: -10.201765060424805
    5. 'dans' → logprob: -10.201765060424805
    6. '               ' → logprob: -10.451765060424805
    7. 'n' → logprob: -10.701765060424805
    8. '   ' → logprob: -10.701765060424805
    9. ' dans' → logprob: -10.826765060424805
    10. ' en' → logprob: -11.201765060424805

Token 1462: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.0196772962808609
    2. '(id' → logprob: -4.14467716217041
    3. ' id' → logprob: -6.14467716217041
    4. 'range' → logprob: -6.51967716217041
    5. ' range' → logprob: -13.01967716217041
    6. '(' → logprob: -13.14467716217041
    7. ' (' → logprob: -13.64467716217041
    8. '0' → logprob: -13.64467716217041
    9. 'j' → logprob: -13.76967716217041
    10. '[id' → logprob: -13.89467716217041

Token 1463: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024555405601859093
    2. 'in' → logprob: -4.399555206298828
    3. ' in' → logprob: -6.024555206298828
    4. '           ' → logprob: -6.399555206298828
    5. ' ,' → logprob: -6.524555206298828
    6. ',id' → logprob: -6.774555206298828
    7. ',j' → logprob: -7.274555206298828
    8. '=' → logprob: -7.774555206298828
    9. 'dans' → logprob: -7.774555206298828
    10. ' en' → logprob: -8.024555206298828

Token 1464: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.0036195507273077965
    2. ' id' → logprob: -5.62861967086792
    3. '(id' → logprob: -10.878619194030762
    4. '[id' → logprob: -16.003620147705078
    5. '	id' → logprob: -16.378620147705078
    6. '```' → logprob: -16.503620147705078
    7. ''id' → logprob: -17.003620147705078
    8. 'i' → logprob: -17.128620147705078
    9. '0' → logprob: -17.503620147705078
    10. '"id' → logprob: -17.628620147705078

Token 1465: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0015170073602348566
    2. 'id' → logprob: -6.876516819000244
    3. '```' → logprob: -8.126517295837402
    4. '(id' → logprob: -9.626517295837402
    5. '[id' → logprob: -10.251517295837402
    6. ')' → logprob: -11.126517295837402
    7. ',' → logprob: -11.251517295837402
    8. 'j' → logprob: -12.001517295837402
    9. '+' → logprob: -12.001517295837402
    10. '{id' → logprob: -12.314017295837402

Token 1466: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24396450817584991
    2. ':
' → logprob: -1.6189645528793335
    3. '+' → logprob: -4.618964672088623
    4. '               ' → logprob: -5.868964672088623
    5. '           ' → logprob: -6.743964672088623
    6. '):
' → logprob: -6.993964672088623
    7. '=' → logprob: -7.618964672088623
    8. ' :' → logprob: -7.618964672088623
    9. ',' → logprob: -7.743964672088623
    10. '():
' → logprob: -7.868964672088623

Token 1467: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5109757781028748
    2. 'for' → logprob: -1.6359758377075195
    3. '[' → logprob: -2.6359758377075195
    4. ':' → logprob: -3.3859758377075195
    5. '```' → logprob: -3.7609758377075195
    6. '(' → logprob: -4.2609758377075195
    7. '           ' → logprob: -4.5109758377075195
    8. ' (' → logprob: -4.5109758377075195
    9. ' :' → logprob: -4.7609758377075195
    10. '               ' → logprob: -4.8859758377075195

Token 1468: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5829975008964539
    2. 'for' → logprob: -0.8329975008964539
    3. '           ' → logprob: -5.0829973220825195
    4. '               ' → logprob: -7.9579973220825195
    5. '```' → logprob: -8.45799732208252
    6. '[' → logprob: -9.45799732208252
    7. '       ' → logprob: -9.95799732208252
    8. '   ' → logprob: -10.33299732208252
    9. 'dp' → logprob: -10.70799732208252
    10. ' dp' → logprob: -11.20799732208252

Token 1469: ' Mult' (ID: 15431)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.38824987411499023
    2. ' for' → logprob: -1.1382498741149902
    3. '```' → logprob: -7.26324987411499
    4. '           ' → logprob: -8.138250350952148
    5. 'range' → logprob: -9.263250350952148
    6. 'dp' → logprob: -10.138250350952148
    7. ' range' → logprob: -10.138250350952148
    8. '[' → logprob: -10.513250350952148
    9. ' dp' → logprob: -10.638250350952148
    10. '       ' → logprob: -10.763250350952148

Token 1470: 'ipl' (ID: 7840)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8125913739204407
    2. 'ipl' → logprob: -1.062591314315796
    3. 'ip' → logprob: -2.687591314315796
    4. 'for' → logprob: -3.312591314315796
    5. '       ' → logprob: -3.812591314315796
    6. '               ' → logprob: -4.062591552734375
    7. ' for' → logprob: -4.062591552734375
    8. 'iplier' → logprob: -4.187591552734375
    9. '   ' → logprob: -4.312591552734375
    10. '=' → logprob: -5.437591552734375

Token 1471: 'ie' (ID: 396)
  Prédit: 'ip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ip' → logprob: -0.8725199699401855
    2. 'ipl' → logprob: -0.8725199699401855
    3. 'dp' → logprob: -2.4975199699401855
    4. 'iplier' → logprob: -3.6225199699401855
    5. 'ier' → logprob: -4.1225199699401855
    6. 'ipy' → logprob: -4.6225199699401855
    7. 'plier' → logprob: -5.6225199699401855
    8. 'ic' → logprob: -5.7475199699401855
    9. 'er' → logprob: -5.8725199699401855
    10. '_dp' → logprob: -6.2475199699401855

Token 1472: ' l' (ID: 305)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5706819891929626
    2. ' dp' → logprob: -1.3206820487976074
    3. 'for' → logprob: -2.0706820487976074
    4. '(dp' → logprob: -4.070682048797607
    5. ' for' → logprob: -4.320682048797607
    6. '=' → logprob: -6.195682048797607
    7. '   ' → logprob: -6.320682048797607
    8. '[' → logprob: -6.820682048797607
    9. 'le' → logprob: -7.695682048797607
    10. '       ' → logprob: -7.820682048797607

Token 1473: ''état' (ID: 116357)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1668361872434616
    2. 'p' → logprob: -2.4168362617492676
    3. ' dp' → logprob: -3.4168362617492676
    4. '=' → logprob: -4.291836261749268
    5. '[i' → logprob: -5.541836261749268
    6. '   ' → logprob: -5.541836261749268
    7. '[' → logprob: -6.541836261749268
    8. 'for' → logprob: -6.791836261749268
    9. 'i' → logprob: -7.166836261749268
    10. '[j' → logprob: -7.416836261749268

Token 1474: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.12804225087165833
    2. ' dp' → logprob: -3.003042221069336
    3. '[i' → logprob: -3.128042221069336
    4. ' par' → logprob: -4.753042221069336
    5. '[j' → logprob: -5.128042221069336
    6. 'par' → logprob: -5.878042221069336
    7. '```' → logprob: -6.503042221069336
    8. '[' → logprob: -6.878042221069336
    9. ',' → logprob: -7.128042221069336
    10. '=' → logprob: -7.503042221069336

Token 1475: ' précéd' (ID: 55435)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0006815764936618507
    2. '[j' → logprob: -7.625681400299072
    3. '[' → logprob: -9.37568187713623
    4. '```' → logprob: -10.12568187713623
    5. ' [' → logprob: -10.75068187713623
    6. '           ' → logprob: -11.25068187713623
    7. '][' → logprob: -11.75068187713623
    8. 'i' → logprob: -12.00068187713623
    9. '   ' → logprob: -12.37568187713623
    10. '       ' → logprob: -12.87568187713623

Token 1476: 'emment' (ID: 58019)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.32264578342437744
    2. 'éc' → logprob: -1.9476457834243774
    3. '[j' → logprob: -2.822645664215088
    4. 'é' → logprob: -3.697645664215088
    5. 'ent' → logprob: -3.947645664215088
    6. 'ec' → logprob: -4.822645664215088
    7. 'u' → logprob: -5.197645664215088
    8. 'i' → logprob: -5.822645664215088
    9. '[' → logprob: -6.072645664215088
    10. '[u' → logprob: -6.072645664215088

Token 1477: ' atteint' (ID: 104876)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.005238856188952923
    2. '[j' → logprob: -5.630239009857178
    3. '[' → logprob: -7.755239009857178
    4. 'i' → logprob: -8.50523853302002
    5. '           ' → logprob: -9.00523853302002
    6. '```' → logprob: -9.00523853302002
    7. ' [' → logprob: -9.25523853302002
    8. 'multip' → logprob: -9.75523853302002
    9. '   ' → logprob: -10.13023853302002
    10. '][' → logprob: -10.25523853302002

Token 1478: ' à' (ID: 1221)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.759421169757843
    2. '[i' → logprob: -1.3844211101531982
    3. 'dp' → logprob: -1.7594211101531982
    4. ' par' → logprob: -3.5094211101531982
    5. '```' → logprob: -3.5094211101531982
    6. 'par' → logprob: -4.134421348571777
    7. '           ' → logprob: -4.759421348571777
    8. ' dp' → logprob: -5.134421348571777
    9. ',' → logprob: -5.384421348571777
    10. '[' → logprob: -5.509421348571777

Token 1479: ' h' (ID: 312)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.17109280824661255
    2. 'i' → logprob: -2.0460927486419678
    3. 'dp' → logprob: -4.421092987060547
    4. 'range' → logprob: -4.546092987060547
    5. 'id' → logprob: -6.921092987060547
    6. ' j' → logprob: -6.921092987060547
    7. '0' → logprob: -7.921092987060547
    8. 'for' → logprob: -8.046092987060547
    9. '```' → logprob: -8.046092987060547
    10. '   ' → logprob: -8.171092987060547

Token 1480: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.009034404531121254
    2. 'i' → logprob: -5.634034633636475
    3. '[j' → logprob: -5.634034633636475
    4. '   ' → logprob: -7.384034633636475
    5. 'j' → logprob: -7.509034633636475
    6. '[' → logprob: -8.634034156799316
    7. '```' → logprob: -9.009034156799316
    8. '][' → logprob: -10.009034156799316
    9. ']' → logprob: -10.134034156799316
    10. '
' → logprob: -10.509034156799316

Token 1481: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.02899911254644394
    2. ']' → logprob: -4.653999328613281
    3. '[j' → logprob: -4.778999328613281
    4. '[i' → logprob: -5.278999328613281
    5. '   ' → logprob: -7.028999328613281
    6. '-' → logprob: -7.028999328613281
    7. ' ][' → logprob: -7.278999328613281
    8. '[' → logprob: -7.903999328613281
    9. '       ' → logprob: -8.403999328613281
    10. 'j' → logprob: -8.403999328613281

Token 1482: ' par' (ID: 686)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.29263749718666077
    2. '[i' → logprob: -2.042637586593628
    3. '][' → logprob: -2.667637586593628
    4. '           ' → logprob: -3.792637586593628
    5. '```' → logprob: -4.917637348175049
    6. ' by' → logprob: -5.167637348175049
    7. ',' → logprob: -5.417637348175049
    8. 'by' → logprob: -5.917637348175049
    9. 'dp' → logprob: -6.167637348175049
    10. '[' → logprob: -6.417637348175049

Token 1483: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.8236787915229797
    2. 'dp' → logprob: -0.8236787915229797
    3. 'pow' → logprob: -2.323678731918335
    4. '(dp' → logprob: -4.948678970336914
    5. ' dp' → logprob: -5.073678970336914
    6. '(' → logprob: -5.073678970336914
    7. ' pow' → logprob: -7.198678970336914
    8. ' ' → logprob: -7.323678970336914
    9. '   ' → logprob: -7.698678970336914
    10. '
' → logprob: -7.698678970336914

Token 1484: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06603731960058212
    2. 'dp' → logprob: -2.81603741645813
    3. '(dp' → logprob: -6.691037178039551
    4. '(' → logprob: -6.816037178039551
    5. 'pow' → logprob: -6.941037178039551
    6. ' ' → logprob: -8.06603717803955
    7. ' dp' → logprob: -9.19103717803955
    8. '   ' → logprob: -9.44103717803955
    9. '0' → logprob: -9.56603717803955
    10. '1' → logprob: -9.94103717803955

Token 1485: ' pour' (ID: 1930)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5240660905838013
    2. 'for' → logprob: -1.1490660905838013
    3. ' for' → logprob: -2.7740659713745117
    4. ',' → logprob: -4.899065971374512
    5. '               ' → logprob: -5.024065971374512
    6. '*' → logprob: -5.024065971374512
    7. 'dp' → logprob: -6.149065971374512
    8. '
' → logprob: -6.399065971374512
    9. '```' → logprob: -7.274065971374512
    10. ' *' → logprob: -7.399065971374512

Token 1486: ' chaque' (ID: 21194)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.23500432074069977
    2. 'j' → logprob: -1.6100043058395386
    3. 'for' → logprob: -5.235004425048828
    4. ' for' → logprob: -5.985004425048828
    5. 'dp' → logprob: -7.235004425048828
    6. ' dp' → logprob: -7.735004425048828
    7. '[j' → logprob: -8.735004425048828
    8. '   ' → logprob: -8.860004425048828
    9. '```' → logprob: -9.110004425048828
    10. ' ' → logprob: -10.860004425048828

Token 1487: ' possibilité' (ID: 58463)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.38986530900001526
    2. ' j' → logprob: -1.2648652791976929
    3. '
' → logprob: -4.389865398406982
    4. 'for' → logprob: -4.514865398406982
    5. '```' → logprob: -5.014865398406982
    6. ' for' → logprob: -5.389865398406982
    7. '[j' → logprob: -6.639865398406982
    8. '*j' → logprob: -7.514865398406982
    9. ')' → logprob: -7.889865398406982
    10. 'dp' → logprob: -8.014864921569824

Token 1488: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007928957231342793
    2. 'for' → logprob: -6.007928848266602
    3. ',' → logprob: -6.132928848266602
    4. '               ' → logprob: -6.632928848266602
    5. ' for' → logprob: -6.882928848266602
    6. '.' → logprob: -7.507928848266602
    7. '[j' → logprob: -8.882928848266602
    8. ' and' → logprob: -9.882928848266602
    9. '```' → logprob: -10.132928848266602
    10. '                   ' → logprob: -10.632928848266602

Token 1489: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0036721229553223
    2. ' for' → logprob: -1.1286721229553223
    3. 'for' → logprob: -1.8786721229553223
    4. ' dp' → logprob: -3.2536721229553223
    5. '(dp' → logprob: -3.7536721229553223
    6. 'dp' → logprob: -3.7536721229553223
    7. '```' → logprob: -3.7536721229553223
    8. ',' → logprob: -4.503672122955322
    9. '[' → logprob: -4.878672122955322
    10. '               ' → logprob: -5.128672122955322

Token 1490: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7319933176040649
    2. 'for' (adapté à ' for') → logprob: -0.7319933176040649
    3. ' dp' → logprob: -4.356993198394775
    4. 'dp' → logprob: -5.106993198394775
    5. '(dp' → logprob: -5.606993198394775
    6. ')' → logprob: -5.731993198394775
    7. '[' → logprob: -5.856993198394775
    8. ' 
' → logprob: -6.481993198394775
    9. '           ' → logprob: -6.481993198394775
    10. ' j' → logprob: -6.731993198394775

Token 1491: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.07889771461486816
    2. ' j' → logprob: -2.578897714614868
    3. '	j' → logprob: -12.578897476196289
    4. '   ' → logprob: -13.703897476196289
    5. ' ' → logprob: -13.828897476196289
    6. ' ' → logprob: -14.703897476196289
    7. '```' → logprob: -15.078897476196289
    8. '_j' → logprob: -15.203897476196289
    9. '$j' → logprob: -15.203897476196289
    10. '    ' → logprob: -15.703897476196289

Token 1492: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.42878085374832153
    2. 'in' → logprob: -1.0537807941436768
    3. 'n' → logprob: -11.428780555725098
    4. '	in' → logprob: -11.553780555725098
    5. '   ' → logprob: -11.803780555725098
    6. 'In' → logprob: -12.053780555725098
    7. ' ' → logprob: -12.178780555725098
    8. ')' → logprob: -12.178780555725098
    9. '```' → logprob: -12.553780555725098
    10. '(in' → logprob: -12.803780555725098

Token 1493: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.493430894101039e-05
    2. ' range' → logprob: -9.500075340270996
    3. ' ' → logprob: -18.50007438659668
    4. '   ' → logprob: -18.62507438659668
    5. '(range' → logprob: -19.12507438659668
    6. 'in' → logprob: -20.75007438659668
    7. '  ' → logprob: -20.75007438659668
    8. 'r' → logprob: -21.12507438659668
    9. 'rang' → logprob: -21.12507438659668
    10. 're' → logprob: -21.25007438659668

Token 1494: '(id' (ID: 6589)
  Prédit: '(id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(id' → logprob: -1.4617256056226324e-05
    2. 'id' → logprob: -11.500014305114746
    3. '(' → logprob: -13.500014305114746
    4. '(i' → logprob: -14.000014305114746
    5. ' (' → logprob: -14.125014305114746
    6. 'range' → logprob: -14.250014305114746
    7. '(idx' → logprob: -15.250014305114746
    8. '   ' → logprob: -15.625014305114746
    9. '(range' → logprob: -16.625015258789062
    10. ' id' → logprob: -16.625015258789062

Token 1495: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022022522171027958
    2. ',id' → logprob: -8.75022029876709
    3. ',j' → logprob: -10.25022029876709
    4. ' ,' → logprob: -11.37522029876709
    5. ',i' → logprob: -12.37522029876709
    6. ',len' → logprob: -13.00022029876709
    7. ',
' → logprob: -13.25022029876709
    8. '   ' → logprob: -13.75022029876709
    9. ',user' → logprob: -14.50022029876709
    10. ',n' → logprob: -14.87522029876709

Token 1496: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.002479700604453683
    2. ' id' → logprob: -6.002479553222656
    3. '(id' → logprob: -12.502479553222656
    4. 'len' → logprob: -15.252479553222656
    5. '           ' → logprob: -16.877479553222656
    6. '   ' → logprob: -17.252479553222656
    7. '	id' → logprob: -18.002479553222656
    8. '                   ' → logprob: -18.252479553222656
    9. '               ' → logprob: -18.627479553222656
    10. '       ' → logprob: -18.627479553222656

Token 1497: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0018977019935846329
    2. '+' → logprob: -7.001897811889648
    3. 'id' → logprob: -7.376897811889648
    4. ',' → logprob: -8.126897811889648
    5. ' +' → logprob: -10.876897811889648
    6. 'i' → logprob: -11.251897811889648
    7. '(id' → logprob: -12.001897811889648
    8. ',id' → logprob: -12.251897811889648
    9. '
' → logprob: -12.626897811889648
    10. '   ' → logprob: -12.751897811889648

Token 1498: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2812068462371826
    2. ' +' → logprob: -1.4062068462371826
    3. ')' → logprob: -11.031207084655762
    4. '()+' → logprob: -11.281207084655762
    5. '+
' → logprob: -12.156207084655762
    6. '```' → logprob: -12.531207084655762
    7. '):
' → logprob: -12.781207084655762
    8. ')+' → logprob: -12.906207084655762
    9. '[' → logprob: -13.406207084655762
    10. '   ' → logprob: -13.406207084655762

Token 1499: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. '2' → logprob: -12.750005722045898
    3. ' ' → logprob: -13.000005722045898
    4. ')' → logprob: -16.3750057220459
    5. '0' → logprob: -17.0000057220459
    6. '   ' → logprob: -17.5000057220459
    7. '```' → logprob: -17.9375057220459
    8. '+' → logprob: -18.5625057220459
    9. '
' → logprob: -18.6875057220459
    10. '۱' → logprob: -19.0000057220459

Token 1500: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.672236824873835e-05
    2. ' ' → logprob: -10.375076293945312
    3. '2' → logprob: -10.750076293945312
    4. '+' → logprob: -11.125076293945312
    5. '(' → logprob: -12.750076293945312
    6. '```' → logprob: -13.125076293945312
    7. ')' → logprob: -13.375076293945312
    8. '   ' → logprob: -14.500076293945312
    9. '0' → logprob: -15.000076293945312
    10. '`' → logprob: -15.437576293945312

Token 1501: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5288974046707153
    2. '):' → logprob: -0.9038974046707153
    3. ':' → logprob: -5.278897285461426
    4. ':
' → logprob: -8.403897285461426
    5. ')' → logprob: -8.778897285461426
    6. '):
' → logprob: -9.403897285461426
    7. '():
' → logprob: -9.778897285461426
    8. '           ' → logprob: -10.403897285461426
    9. ']:' → logprob: -11.028897285461426
    10. '   ' → logprob: -11.403897285461426

Token 1502: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.3489347696304321
    2. '           ' → logprob: -1.4739347696304321
    3. ' dp' → logprob: -1.7239347696304321
    4. '```' → logprob: -1.9739347696304321
    5. 'dp' → logprob: -2.5989346504211426
    6. '(dp' → logprob: -3.0989346504211426
    7. '[' → logprob: -3.5989346504211426
    8. '	dp' → logprob: -4.098934650421143
    9. '	       ' → logprob: -5.348934650421143
    10. ':
' → logprob: -5.473934650421143

Token 1503: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.005247748922556639
    2. ' dp' → logprob: -5.255247592926025
    3. '	dp' → logprob: -11.755248069763184
    4. '               ' → logprob: -13.380248069763184
    5. '(dp' → logprob: -13.380248069763184
    6. 'for' → logprob: -14.130248069763184
    7. '_dp' → logprob: -14.505248069763184
    8. '           ' → logprob: -14.505248069763184
    9. '   ' → logprob: -14.630248069763184
    10. '                   ' → logprob: -14.880248069763184

Token 1504: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.061054359131958e-06
    2. '[' → logprob: -11.875007629394531
    3. '[j' → logprob: -14.500007629394531
    4. '[I' → logprob: -16.12500762939453
    5. '][' → logprob: -16.37500762939453
    6. ' [' → logprob: -16.37500762939453
    7. '```' → logprob: -17.00000762939453
    8. '[u' → logprob: -17.12500762939453
    9. 'i' → logprob: -17.50000762939453
    10. '[ip' → logprob: -17.87500762939453

Token 1505: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.18133045732975006
    2. '[j' → logprob: -1.8063304424285889
    3. '[' → logprob: -7.181330680847168
    4. '[i' → logprob: -7.306330680847168
    5. ']' → logprob: -10.306330680847168
    6. ')[' → logprob: -11.181330680847168
    7. '[][' → logprob: -11.431330680847168
    8. '[
' → logprob: -12.056330680847168
    9. ']][' → logprob: -12.056330680847168
    10. '[m' → logprob: -12.306330680847168

Token 1506: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.008650499396026134
    2. '[j' → logprob: -4.758650302886963
    3. ' j' → logprob: -10.383650779724121
    4. '[i' → logprob: -13.883650779724121
    5. '[' → logprob: -14.133650779724121
    6. '	j' → logprob: -14.258650779724121
    7. 'i' → logprob: -14.508650779724121
    8. '   ' → logprob: -15.133650779724121
    9. ',j' → logprob: -15.383650779724121
    10. '_j' → logprob: -15.508650779724121

Token 1507: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15602242946624756
    2. ' =' → logprob: -2.031022548675537
    3. ']' → logprob: -4.531022548675537
    4. ']=' → logprob: -6.281022548675537
    5. ' +=' → logprob: -8.531022071838379
    6. '+=' → logprob: -8.656022071838379
    7. ']+=' → logprob: -8.781022071838379
    8. '*=' → logprob: -10.531022071838379
    9. ' *=' → logprob: -10.781022071838379
    10. ')' → logprob: -12.031022071838379

Token 1508: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0024855269584804773
    2. ' =' → logprob: -6.002485752105713
    3. '+=' → logprob: -11.752485275268555
    4. '*=' → logprob: -14.127485275268555
    5. '=(' → logprob: -14.252485275268555
    6. ' +=' → logprob: -15.127485275268555
    7. '%=' → logprob: -16.252485275268555
    8. '   ' → logprob: -16.877485275268555
    9. '=
' → logprob: -17.127485275268555
    10. ')=' → logprob: -17.502485275268555

Token 1509: ' (' (ID: 350)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.033729955554008484
    2. '(' → logprob: -3.6587300300598145
    3. 'dp' → logprob: -5.0337300300598145
    4. ' (' → logprob: -7.5337300300598145
    5. '2' → logprob: -8.158729553222656
    6. ' dp' → logprob: -10.283729553222656
    7. '               ' → logprob: -12.158729553222656
    8. '   ' → logprob: -12.283729553222656
    9. ' ' → logprob: -13.283729553222656
    10. '((' → logprob: -13.408729553222656

Token 1510: '2' (ID: 17)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.030711598694324493
    2. '(dp' → logprob: -3.5307116508483887
    3. '2' → logprob: -7.155711650848389
    4. '(' → logprob: -8.78071117401123
    5. ' dp' → logprob: -10.65571117401123
    6. ' (' → logprob: -14.40571117401123
    7. '	dp' → logprob: -14.53071117401123
    8. '   ' → logprob: -14.90571117401123
    9. '_dp' → logprob: -15.15571117401123
    10. '(d' → logprob: -15.15571117401123

Token 1511: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.16022473573684692
    2. ' *' → logprob: -1.9102246761322021
    3. '**' → logprob: -15.035224914550781
    4. ' ' → logprob: -15.660224914550781
    5. ' ' → logprob: -16.91022491455078
    6. '   ' → logprob: -18.28522491455078
    7. '*(' → logprob: -18.41022491455078
    8. '*
' → logprob: -19.03522491455078
    9. '```' → logprob: -19.03522491455078
    10. '*object' → logprob: -19.16022491455078

Token 1512: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -3.452426608419046e-05
    2. '(dp' → logprob: -10.50003433227539
    3. ' dp' → logprob: -11.87503433227539
    4. '	dp' → logprob: -17.62503433227539
    5. '(' → logprob: -19.37503433227539
    6. '_dp' → logprob: -19.62503433227539
    7. 'd' → logprob: -20.37503433227539
    8. ' (' → logprob: -21.12503433227539
    9. '.dp' → logprob: -21.25003433227539
    10. '   ' → logprob: -22.12503433227539

Token 1513: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.696889623621246e-06
    2. 'i' → logprob: -13.12500286102295
    3. '[' → logprob: -15.75000286102295
    4. '[j' → logprob: -15.87500286102295
    5. '
' → logprob: -16.375001907348633
    6. '[
' → logprob: -16.875001907348633
    7. ' [' → logprob: -17.375001907348633
    8. ')' → logprob: -17.375001907348633
    9. '```' → logprob: -17.375001907348633
    10. '(i' → logprob: -17.625001907348633

Token 1514: ' -' (ID: 533)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.000169332604855299
    2. '][' → logprob: -8.75016975402832
    3. 'i' → logprob: -12.37516975402832
    4. '[' → logprob: -12.50016975402832
    5. '[j' → logprob: -14.37516975402832
    6. '[user' → logprob: -14.87516975402832
    7. '[
' → logprob: -15.12516975402832
    8. ')[' → logprob: -15.37516975402832
    9. '[I' → logprob: -15.37516975402832
    10. ']' → logprob: -16.25016975402832

Token 1515: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00019388488726690412
    2. 'i' → logprob: -8.75019359588623
    3. '][' → logprob: -10.75019359588623
    4. '[i' → logprob: -12.25019359588623
    5. ']' → logprob: -12.75019359588623
    6. '```' → logprob: -12.87519359588623
    7. ' ' → logprob: -13.25019359588623
    8. '[' → logprob: -14.25019359588623
    9. ')' → logprob: -14.75019359588623
    10. '   ' → logprob: -15.62519359588623

Token 1516: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00024299313372466713
    2. 'i' → logprob: -8.375243186950684
    3. ' ' → logprob: -12.250243186950684
    4. 'j' → logprob: -13.125243186950684
    5. '   ' → logprob: -13.875243186950684
    6. '[i' → logprob: -14.125243186950684
    7. '```' → logprob: -14.125243186950684
    8. ']' → logprob: -14.562743186950684
    9. ')' → logprob: -14.687743186950684
    10. ' i' → logprob: -14.750243186950684

Token 1517: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.11008650809526443
    2. '][' → logprob: -2.360086441040039
    3. '[j' → logprob: -4.735086441040039
    4. '[' → logprob: -7.610086441040039
    5. ')[' → logprob: -7.985086441040039
    6. ' [' → logprob: -10.235086441040039
    7. ')' → logprob: -11.110086441040039
    8. '}[' → logprob: -11.110086441040039
    9. '[][' → logprob: -11.110086441040039
    10. ']' → logprob: -11.360086441040039

Token 1518: 'id' (ID: 315)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0004827465454582125
    2. '[j' → logprob: -8.000482559204102
    3. 'i' → logprob: -9.750482559204102
    4. '   ' → logprob: -10.000482559204102
    5. ' j' → logprob: -10.750482559204102
    6. '       ' → logprob: -12.000482559204102
    7. ' ' → logprob: -13.125482559204102
    8. '           ' → logprob: -13.125482559204102
    9. '     ' → logprob: -13.625482559204102
    10. '[i' → logprob: -13.625482559204102

Token 1519: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.25600335001945496
    2. '[j' → logprob: -1.5060033798217773
    3. ']' → logprob: -6.756003379821777
    4. 'j' → logprob: -6.756003379821777
    5. '][' → logprob: -7.131003379821777
    6. '[i' → logprob: -7.756003379821777
    7. '   ' → logprob: -8.881003379821777
    8. '[' → logprob: -9.506003379821777
    9. '2' → logprob: -9.881003379821777
    10. '```' → logprob: -10.381003379821777

Token 1520: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.07028552144765854
    2. ' %' → logprob: -2.6952855587005615
    3. ')' → logprob: -8.44528579711914
    4. ')%' → logprob: -9.19528579711914
    5. '<|end|>' → logprob: -11.32028579711914
    6. ' if' → logprob: -12.32028579711914
    7. ' %=' → logprob: -13.07028579711914
    8. '           ' → logprob: -13.07028579711914
    9. '%=' → logprob: -13.44528579711914
    10. '
' → logprob: -13.57028579711914

Token 1521: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -4.56102097814437e-05
    2. ' mod' → logprob: -10.000045776367188
    3. '(mod' → logprob: -15.625045776367188
    4. '```' → logprob: -20.125045776367188
    5. '	mod' → logprob: -20.375045776367188
    6. ' ' → logprob: -20.875045776367188
    7. '_mod' → logprob: -21.375045776367188
    8. '(' → logprob: -21.625045776367188
    9. '`' → logprob: -22.125045776367188
    10. 'MOD' → logprob: -22.250045776367188

Token 1522: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1523: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1524: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.522105872631073
    2. '       ' → logprob: -1.2721059322357178
    3. ' for' → logprob: -2.8971059322357178
    4. '           ' → logprob: -3.2721059322357178
    5. '<|end|>' → logprob: -3.7721059322357178
    6. '```' → logprob: -5.897105693817139
    7. '   ' → logprob: -6.272105693817139
    8. '	for' → logprob: -6.522105693817139
    9. '​' → logprob: -7.647105693817139
    10. '	' → logprob: -7.772105693817139

Token 1525: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00020091790065634996
    2. '           ' → logprob: -9.375201225280762
    3. ' for' → logprob: -9.375201225280762
    4. '```' → logprob: -11.250201225280762
    5. '       ' → logprob: -11.500201225280762
    6. '#' → logprob: -12.125201225280762
    7. '
' → logprob: -13.250201225280762
    8. '   ' → logprob: -15.125201225280762
    9. 'continue' → logprob: -15.500201225280762
    10. '               ' → logprob: -15.875201225280762

Token 1526: ' les' (ID: 1341)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.6328985095024109
    2. 'j' → logprob: -0.7578985095024109
    3. 'for' → logprob: -8.632898330688477
    4. ' ' → logprob: -10.007898330688477
    5. ' for' → logprob: -11.132898330688477
    6. '   ' → logprob: -11.257898330688477
    7. ' ' → logprob: -11.632898330688477
    8. '```' → logprob: -11.882898330688477
    9. '#' → logprob: -12.257898330688477
    10. 'range' → logprob: -12.507898330688477

Token 1527: ' états' (ID: 184259)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.03188129886984825
    2. ' j' → logprob: -3.531881332397461
    3. 'for' → logprob: -6.406881332397461
    4. ' for' → logprob: -8.281881332397461
    5. 'range' → logprob: -9.531881332397461
    6. ' range' → logprob: -10.156881332397461
    7. '```' → logprob: -10.406881332397461
    8. '   ' → logprob: -11.156881332397461
    9. 'i' → logprob: -11.531881332397461
    10. '0' → logprob: -11.531881332397461

Token 1528: ' en' (ID: 469)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.9210461974143982
    2. 'j' → logprob: -1.796046257019043
    3. ' in' → logprob: -2.171046257019043
    4. 'for' → logprob: -2.671046257019043
    5. 'range' → logprob: -2.671046257019043
    6. '[j' → logprob: -3.046046257019043
    7. '(j' → logprob: -3.171046257019043
    8. ' range' → logprob: -3.671046257019043
    9. ' en' → logprob: -3.921046257019043
    10. 'in' → logprob: -4.171046257019043

Token 1529: '-de' (ID: 8797)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01815626211464405
    2. ' range' → logprob: -4.018156051635742
    3. ' ' → logprob: -12.768156051635742
    4. '	range' → logprob: -14.393156051635742
    5. '   ' → logprob: -14.643156051635742
    6. '
' → logprob: -14.643156051635742
    7. '```' → logprob: -14.768156051635742
    8. '0' → logprob: -14.893156051635742
    9. 'rang' → logprob: -15.518156051635742
    10. 'r' → logprob: -15.643156051635742

Token 1530: 'ç' (ID: 704)
  Prédit: 'hors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hors' → logprob: -0.01977583020925522
    2. 'hor' → logprob: -5.144775867462158
    3. 'dans' → logprob: -5.519775867462158
    4. 'd' → logprob: -5.894775867462158
    5. 'range' → logprob: -6.144775867462158
    6. 'ç' → logprob: -7.144775867462158
    7. 'h' → logprob: -7.269775867462158
    8. '```' → logprob: -7.269775867462158
    9. 'for' → logprob: -8.144775390625
    10. 'main' → logprob: -8.394775390625

Token 1531: 'à' (ID: 708)
  Prédit: 'à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.07532645016908646
    2. 'ç' → logprob: -3.325326442718506
    3. 'a' → logprob: -3.950326442718506
    4. 's' → logprob: -4.450326442718506
    5. 'ça' → logprob: -5.325326442718506
    6. 'dess' → logprob: -8.075326919555664
    7. 'ca' → logprob: -8.950326919555664
    8. 'de' → logprob: -9.825326919555664
    9. 'hors' → logprob: -10.075326919555664
    10. 'ss' → logprob: -10.200326919555664

Token 1532: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011770996265113354
    2. 'range' → logprob: -5.511771202087402
    3. ' (' → logprob: -5.886771202087402
    4. ',' → logprob: -7.011771202087402
    5. '           ' → logprob: -7.386771202087402
    6. '0' → logprob: -7.636771202087402
    7. '(id' → logprob: -7.761771202087402
    8. 'de' → logprob: -7.886771202087402
    9. ' range' → logprob: -8.261771202087402
    10. '(range' → logprob: -8.261771202087402

Token 1533: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7729038000106812
    2. ' for' → logprob: -1.2729038000106812
    3. '           ' → logprob: -1.3979038000106812
    4. '		' → logprob: -5.772903919219971
    5. ' range' → logprob: -6.022903919219971
    6. 'range' → logprob: -6.147903919219971
    7. '	       ' → logprob: -7.147903919219971
    8. '               ' → logprob: -7.647903919219971
    9. '   ' → logprob: -7.772903919219971
    10. '	for' → logprob: -7.772903919219971

Token 1534: ' garde' (ID: 65309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.015049055218696594
    2. ' for' → logprob: -4.390048980712891
    3. 'range' → logprob: -6.265048980712891
    4. 'continue' → logprob: -8.39004898071289
    5. ' range' → logprob: -8.51504898071289
    6. '       ' → logprob: -9.26504898071289
    7. '```' → logprob: -10.39004898071289
    8. '           ' → logprob: -10.89004898071289
    9. 'pour' → logprob: -11.01504898071289
    10. ' continue' → logprob: -11.51504898071289

Token 1535: ' le' (ID: 505)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -1.1168955564498901
    2. '(j' → logprob: -1.9918955564498901
    3. 'dp' → logprob: -1.9918955564498901
    4. '(' → logprob: -2.1168956756591797
    5. 'range' → logprob: -2.2418956756591797
    6. ' (' → logprob: -2.8668956756591797
    7. '           ' → logprob: -2.9918956756591797
    8. 'la' → logprob: -4.61689567565918
    9. ' range' → logprob: -4.99189567565918
    10. '(range' → logprob: -4.99189567565918

Token 1536: ' même' (ID: 9679)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.11649585515260696
    2. '(dp' → logprob: -2.9914958477020264
    3. '(' → logprob: -3.4914958477020264
    4. 'j' → logprob: -4.3664960861206055
    5. 'for' → logprob: -4.8664960861206055
    6. '(i' → logprob: -5.6164960861206055
    7. '(j' → logprob: -6.4914960861206055
    8. ' dp' → logprob: -7.4914960861206055
    9. 'i' → logprob: -7.6164960861206055
    10. '```' → logprob: -7.6164960861206055

Token 1537: ' compte' (ID: 19657)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.22166191041469574
    2. 'for' → logprob: -2.5966618061065674
    3. ' dp' → logprob: -2.8466618061065674
    4. '(dp' → logprob: -3.3466618061065674
    5. 'j' → logprob: -4.0966620445251465
    6. '```' → logprob: -4.7216620445251465
    7. ' for' → logprob: -6.2216620445251465
    8. 'state' → logprob: -7.2216620445251465
    9. '[j' → logprob: -7.3466620445251465
    10. ' j' → logprob: -7.7216620445251465

Token 1538: ' que' (ID: 661)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18168826401233673
    2. 'for' → logprob: -2.9316883087158203
    3. ' for' → logprob: -3.0566883087158203
    4. '               ' → logprob: -3.4316883087158203
    5. '```' → logprob: -4.05668830871582
    6. '[j' → logprob: -4.43168830871582
    7. ',' → logprob: -6.68168830871582
    8. '(j' → logprob: -7.43168830871582
    9. '[' → logprob: -7.43168830871582
    10. 's' → logprob: -8.18168830871582

Token 1539: ' précéd' (ID: 55435)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.02251889556646347
    2. 'id' → logprob: -5.022519111633301
    3. '   ' → logprob: -5.647519111633301
    4. ' dp' → logprob: -5.772519111633301
    5. '(dp' → logprob: -5.897519111633301
    6. '           ' → logprob: -6.522519111633301
    7. 'j' → logprob: -6.522519111633301
    8. 'i' → logprob: -7.522519111633301
    9. 'for' → logprob: -7.772519111633301
    10. '       ' → logprob: -7.772519111633301

Token 1540: 'emment' (ID: 58019)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.0010744920000433922
    2. '           ' → logprob: -7.751074314117432
    3. 'emment' → logprob: -8.37607479095459
    4. 'ents' → logprob: -8.62607479095459
    5. '       ' → logprob: -9.75107479095459
    6. 'éd' → logprob: -10.00107479095459
    7. 'dp' → logprob: -10.25107479095459
    8. 'ant' → logprob: -10.62607479095459
    9. ' précédent' → logprob: -10.62607479095459
    10. '               ' → logprob: -11.25107479095459

Token 1541: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07026251405477524
    2. '       ' → logprob: -3.6952624320983887
    3. '```' → logprob: -4.195262432098389
    4. ' for' → logprob: -4.945262432098389
    5. '               ' → logprob: -4.945262432098389
    6. 'for' → logprob: -5.070262432098389
    7. ':' → logprob: -5.820262432098389
    8. '   ' → logprob: -6.820262432098389
    9. ',' → logprob: -7.195262432098389
    10. '.' → logprob: -7.570262432098389

Token 1542: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6115161180496216
    2. '```' → logprob: -1.1115161180496216
    3. 'for' → logprob: -2.611515998840332
    4. '           ' → logprob: -2.986515998840332
    5. '       ' → logprob: -5.736515998840332
    6. '   ' → logprob: -7.861515998840332
    7. '``' → logprob: -8.111515998840332
    8. '               ' → logprob: -8.611515998840332
    9. '	for' → logprob: -8.986515998840332
    10. ' ' → logprob: -9.236515998840332

Token 1543: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.252179890871048
    2. ' for' → logprob: -1.5021798610687256
    3. '           ' → logprob: -8.752180099487305
    4. '       ' → logprob: -9.877180099487305
    5. '```' → logprob: -10.627180099487305
    6. '   ' → logprob: -11.627180099487305
    7. '	for' → logprob: -11.877180099487305
    8. ' ' → logprob: -14.752180099487305
    9. '               ' → logprob: -15.377180099487305
    10. ' ' → logprob: -15.752180099487305

Token 1544: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.07027840614318848
    2. ' j' → logprob: -2.6952784061431885
    3. 'range' → logprob: -8.82027816772461
    4. '0' → logprob: -9.19527816772461
    5. ' range' → logprob: -10.19527816772461
    6. '   ' → logprob: -10.82027816772461
    7. ' ' → logprob: -11.94527816772461
    8. '	j' → logprob: -12.19527816772461
    9. '```' → logprob: -12.57027816772461
    10. '_j' → logprob: -12.57027816772461

Token 1545: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07129606604576111
    2. 'in' → logprob: -2.696295976638794
    3. '(' → logprob: -6.821296215057373
    4. 'range' → logprob: -9.321295738220215
    5. '0' → logprob: -10.196295738220215
    6. ' (' → logprob: -10.571295738220215
    7. ' ' → logprob: -11.321295738220215
    8. 'dans' → logprob: -11.321295738220215
    9. ' dans' → logprob: -11.696295738220215
    10. 'n' → logprob: -11.946295738220215

Token 1546: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.012834406457841396
    2. ' range' → logprob: -4.387834548950195
    3. '0' → logprob: -8.137834548950195
    4. '(' → logprob: -10.637834548950195
    5. '(range' → logprob: -12.137834548950195
    6. ' ' → logprob: -13.262834548950195
    7. '   ' → logprob: -14.387834548950195
    8. '	range' → logprob: -15.512834548950195
    9. 'rang' → logprob: -16.262834548950195
    10. ' (' → logprob: -16.387834548950195

Token 1547: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0010342379100620747
    2. '0' → logprob: -6.876034259796143
    3. '(j' → logprob: -14.626033782958984
    4. '(len' → logprob: -14.876033782958984
    5. ' (' → logprob: -15.376033782958984
    6. 'range' → logprob: -15.626033782958984
    7. '(id' → logprob: -15.876033782958984
    8. '(range' → logprob: -16.751033782958984
    9. '(
' → logprob: -17.126033782958984
    10. '   ' → logprob: -17.376033782958984

Token 1548: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9743012671824545e-05
    2. ' ' → logprob: -11.500020027160645
    3. 'range' → logprob: -12.250020027160645
    4. '(' → logprob: -12.750020027160645
    5. 'id' → logprob: -14.375020027160645
    6. '   ' → logprob: -14.625020027160645
    7. ')' → logprob: -15.625020027160645
    8. 'len' → logprob: -15.625020027160645
    9. '۰' → logprob: -17.187519073486328
    10. ' range' → logprob: -17.312519073486328

Token 1549: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016110315918922424
    2. ',j' → logprob: -6.626611232757568
    3. '0' → logprob: -9.37661075592041
    4. '(' → logprob: -9.62661075592041
    5. 'j' → logprob: -10.00161075592041
    6. ' ,' → logprob: -10.25161075592041
    7. '(j' → logprob: -10.75161075592041
    8. '   ' → logprob: -11.37661075592041
    9. 'in' → logprob: -12.62661075592041
    10. '```' → logprob: -13.12661075592041

Token 1550: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -4.584861744660884e-05
    2. ' id' → logprob: -10.000045776367188
    3. 'j' → logprob: -15.875045776367188
    4. '   ' → logprob: -16.250045776367188
    5. 'comp' → logprob: -17.000045776367188
    6. '(id' → logprob: -17.125045776367188
    7. '	id' → logprob: -17.375045776367188
    8. '           ' → logprob: -17.375045776367188
    9. 'idf' → logprob: -18.625045776367188
    10. ' ' → logprob: -18.750045776367188

Token 1551: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03037514165043831
    2. '+' → logprob: -4.405375003814697
    3. '):' → logprob: -5.030375003814697
    4. '       ' → logprob: -6.280375003814697
    5. '[j' → logprob: -6.405375003814697
    6. '```' → logprob: -6.405375003814697
    7. '<|end|>' → logprob: -7.280375003814697
    8. ',j' → logprob: -7.405375003814697
    9. '           ' → logprob: -7.405375003814697
    10. ':' → logprob: -7.405375003814697

Token 1552: '               ' (ID: 506)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.3347740173339844
    2. '               ' → logprob: -2.4597740173339844
    3. '(dp' → logprob: -2.5847740173339844
    4. 'dp' → logprob: -2.8347740173339844
    5. ' dp' → logprob: -3.7097740173339844
    6. ':
' → logprob: -4.084774017333984
    7. '           ' → logprob: -4.834774017333984
    8. ':' → logprob: -5.459774017333984
    9. '	dp' → logprob: -5.459774017333984
    10. '[' → logprob: -6.209774017333984

Token 1553: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.004166487138718367
    2. ' dp' → logprob: -5.504166603088379
    3. '               ' → logprob: -9.379166603088379
    4. '(dp' → logprob: -13.629166603088379
    5. '	dp' → logprob: -14.129166603088379
    6. '           ' → logprob: -14.254166603088379
    7. '                   ' → logprob: -14.379166603088379
    8. '_dp' → logprob: -15.254166603088379
    9. '```' → logprob: -16.254165649414062
    10. '.dp' → logprob: -17.754165649414062

Token 1554: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.7697225252486533e-06
    2. '```' → logprob: -13.750003814697266
    3. '][' → logprob: -14.000003814697266
    4. '[' → logprob: -14.375003814697266
    5. 'i' → logprob: -14.625003814697266
    6. '[j' → logprob: -14.750003814697266
    7. ']' → logprob: -16.750003814697266
    8. ' [' → logprob: -17.250003814697266
    9. '[
' → logprob: -17.250003814697266
    10. '[u' → logprob: -17.500003814697266

Token 1555: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0038912808522582054
    2. '[j' → logprob: -5.878891468048096
    3. '[i' → logprob: -6.878891468048096
    4. ']' → logprob: -10.253890991210938
    5. ' ][' → logprob: -12.378890991210938
    6. '[' → logprob: -12.503890991210938
    7. ')][' → logprob: -13.128890991210938
    8. ']][' → logprob: -13.128890991210938
    9. '```' → logprob: -13.128890991210938
    10. '   ' → logprob: -13.503890991210938

Token 1556: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0040995352901518345
    2. '(j' → logprob: -6.629099369049072
    3. 'dp' → logprob: -6.879099369049072
    4. 'i' → logprob: -7.129099369049072
    5. '(i' → logprob: -7.879099369049072
    6. '(' → logprob: -8.50409984588623
    7. '[j' → logprob: -9.00409984588623
    8. '(dp' → logprob: -9.00409984588623
    9. ' (' → logprob: -10.37909984588623
    10. ' j' → logprob: -10.50409984588623

Token 1557: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.28907206654548645
    2. '=' → logprob: -1.539072036743164
    3. ' =' → logprob: -3.789072036743164
    4. ']=' → logprob: -4.289072036743164
    5. '               ' → logprob: -9.664072036743164
    6. ')' → logprob: -11.039072036743164
    7. ' ]' → logprob: -11.164072036743164
    8. '[' → logprob: -12.039072036743164
    9. '][' → logprob: -12.164072036743164
    10. '           ' → logprob: -12.164072036743164

Token 1558: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0001860174525063485
    2. ' =' → logprob: -8.6251859664917
    3. '=
' → logprob: -12.5001859664917
    4. ']=' → logprob: -13.6251859664917
    5. '+=' → logprob: -14.3751859664917
    6. '[' → logprob: -15.0001859664917
    7. '=j' → logprob: -16.875186920166016
    8. '=(' → logprob: -17.000186920166016
    9. '=[' → logprob: -17.000186920166016
    10. '```' → logprob: -17.000186920166016

Token 1559: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0006087943911552429
    2. '(' → logprob: -8.375608444213867
    3. '(dp' → logprob: -8.500608444213867
    4. ' dp' → logprob: -8.750608444213867
    5. ' (' → logprob: -12.000608444213867
    6. '           ' → logprob: -12.750608444213867
    7. '   ' → logprob: -12.750608444213867
    8. '               ' → logprob: -12.875608444213867
    9. '	dp' → logprob: -14.625608444213867
    10. '                   ' → logprob: -15.250608444213867

Token 1560: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.465036105713807e-06
    2. 'i' → logprob: -12.250007629394531
    3. '```' → logprob: -13.000007629394531
    4. '(i' → logprob: -15.625007629394531
    5. '
' → logprob: -17.50000762939453
    6. '`' → logprob: -17.50000762939453
    7. '{i' → logprob: -17.75000762939453
    8. '[' → logprob: -18.00000762939453
    9. '   ' → logprob: -18.00000762939453
    10. '[
' → logprob: -18.12500762939453

Token 1561: ' -' (ID: 533)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5246038436889648
    2. '-' → logprob: -0.8996038436889648
    3. ' -' → logprob: -6.899603843688965
    4. 'i' → logprob: -8.149603843688965
    5. '   ' → logprob: -9.899603843688965
    6. '```' → logprob: -9.899603843688965
    7. '(i' → logprob: -10.524603843688965
    8. ' [' → logprob: -11.399603843688965
    9. '[' → logprob: -11.774603843688965
    10. '       ' → logprob: -12.024603843688965

Token 1562: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.384836888173595e-05
    2. 'i' → logprob: -10.3750638961792
    3. ' ' → logprob: -10.6250638961792
    4. '-' → logprob: -12.7500638961792
    5. '   ' → logprob: -13.0000638961792
    6. '(i' → logprob: -13.8750638961792
    7. '```' → logprob: -14.0000638961792
    8. '[i' → logprob: -15.5625638961792
    9. 'j' → logprob: -15.9375638961792
    10. ']' → logprob: -16.125062942504883

Token 1563: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3425219549390022e-05
    2. ' ' → logprob: -12.43751335144043
    3. '```' → logprob: -13.56251335144043
    4. 'i' → logprob: -13.81251335144043
    5. '   ' → logprob: -14.31251335144043
    6. '<|end|>' → logprob: -14.37501335144043
    7. '-' → logprob: -14.43751335144043
    8. '<|end|>' → logprob: -14.93751335144043
    9. '0' → logprob: -15.18751335144043
    10. '...' → logprob: -15.25001335144043

Token 1564: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.008553585037589073
    2. '[i' → logprob: -4.883553504943848
    3. '-' → logprob: -7.633553504943848
    4. '[j' → logprob: -8.133553504943848
    5. ']' → logprob: -9.633553504943848
    6. '[' → logprob: -9.883553504943848
    7. ' ][' → logprob: -11.133553504943848
    8. '[id' → logprob: -11.383553504943848
    9. ' -' → logprob: -12.008553504943848
    10. '```' → logprob: -12.133553504943848

Token 1565: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.018175458535552025
    2. 'id' → logprob: -4.0181756019592285
    3. '[j' → logprob: -11.51817512512207
    4. 'comp' → logprob: -11.89317512512207
    5. '0' → logprob: -13.01817512512207
    6. '   ' → logprob: -13.26817512512207
    7. ' j' → logprob: -13.39317512512207
    8. '[id' → logprob: -13.64317512512207
    9. ' ' → logprob: -15.26817512512207
    10. ' id' → logprob: -15.39317512512207

Token 1566: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4814265966415405
    2. ']' → logprob: -1.1064265966415405
    3. '<|end|>' → logprob: -3.10642671585083
    4. '+' → logprob: -6.35642671585083
    5. '```' → logprob: -6.85642671585083
    6. '<|end|>' → logprob: -6.85642671585083
    7. '%' → logprob: -7.60642671585083
    8. '       ' → logprob: -7.73142671585083
    9. '   ' → logprob: -7.73142671585083
    10. ')]' → logprob: -8.106426239013672

Token 1567: '       ' (ID: 309)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5148948431015015
    2. '       ' → logprob: -1.2648948431015015
    3. 'for' → logprob: -3.014894962310791
    4. '           ' → logprob: -3.014894962310791
    5. ' for' → logprob: -4.639894962310791
    6. '   ' → logprob: -5.389894962310791
    7. '<|end|>' → logprob: -5.389894962310791
    8. 'else' → logprob: -6.264894962310791
    9. '``' → logprob: -7.764894962310791
    10. '
' → logprob: -8.139894485473633

Token 1568: ' #' (ID: 1069)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.2634071111679077
    2. '       ' → logprob: -1.5134071111679077
    3. '```' → logprob: -4.638407230377197
    4. ' else' → logprob: -6.763407230377197
    5. '   ' → logprob: -7.638407230377197
    6. 'elif' → logprob: -9.513406753540039
    7. '           ' → logprob: -10.763406753540039
    8. '#' (adapté à ' #') → logprob: -13.263406753540039
    9. '``' → logprob: -13.263406753540039
    10. '	else' → logprob: -13.513406753540039

Token 1569: ' Si' (ID: 7832)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -9.162282367469743e-05
    2. ' else' → logprob: -10.000091552734375
    3. 'elif' → logprob: -10.000091552734375
    4. '       ' → logprob: -14.750091552734375
    5. '   ' → logprob: -15.250091552734375
    6. '#' → logprob: -16.625091552734375
    7. '```' → logprob: -16.750091552734375
    8. '
' → logprob: -18.125091552734375
    9. '	else' → logprob: -18.875091552734375
    10. ' elif' → logprob: -20.625091552734375

Token 1570: ' la' (ID: 557)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.6326439380645752
    2. ' h' → logprob: -0.7576439380645752
    3. 'not' → logprob: -10.632643699645996
    4. ' not' → logprob: -11.257643699645996
    5. ' ' → logprob: -13.382643699645996
    6. '   ' → logprob: -13.382643699645996
    7. '(h' → logprob: -13.757643699645996
    8. 'else' → logprob: -14.007643699645996
    9. '#' → logprob: -14.757643699645996
    10. '	h' → logprob: -14.882643699645996

Token 1571: ' prochaine' (ID: 78876)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.25202783942222595
    2. ' h' → logprob: -1.5020278692245483
    3. 'else' → logprob: -10.87702751159668
    4. 'not' → logprob: -11.37702751159668
    5. ' next' → logprob: -11.50202751159668
    6. ' not' → logprob: -11.50202751159668
    7. 'next' → logprob: -11.62702751159668
    8. '
' → logprob: -12.37702751159668
    9. '	h' → logprob: -12.50202751159668
    10. ' else' → logprob: -12.75202751159668

Token 1572: ' hauteur' (ID: 72987)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.25580060482025146
    2. ' h' → logprob: -1.5058006048202515
    3. 'ha' → logprob: -6.255800724029541
    4. ' hauteur' → logprob: -7.255800724029541
    5. '[i' → logprob: -7.880800724029541
    6. '[h' → logprob: -8.005800247192383
    7. 'height' → logprob: -8.380800247192383
    8. '_h' → logprob: -10.255800247192383
    9. 'i' → logprob: -10.380800247192383
    10. ' height' → logprob: -10.630800247192383

Token 1573: ' est' (ID: 893)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6134123802185059
    2. '[i' → logprob: -0.8634123802185059
    3. '<' → logprob: -3.738412380218506
    4. '[' → logprob: -5.238412380218506
    5. '<h' → logprob: -5.863412380218506
    6. '<i' → logprob: -6.113412380218506
    7. '[j' → logprob: -7.363412380218506
    8. 'else' → logprob: -7.363412380218506
    9. '       ' → logprob: -8.113412857055664
    10. '   ' → logprob: -8.238412857055664

Token 1574: ' strict' (ID: 12035)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.5431640148162842
    2. '<' → logprob: -1.9181640148162842
    3. ' inf' → logprob: -1.9181640148162842
    4. '<h' → logprob: -2.293164014816284
    5. 'strict' → logprob: -4.168164253234863
    6. ' <' → logprob: -5.793164253234863
    7. 'h' → logprob: -5.793164253234863
    8. 'infer' → logprob: -7.293164253234863
    9. 'plus' → logprob: -7.918164253234863
    10. ' inférieur' → logprob: -8.418164253234863

Token 1575: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.0007167232106439769
    2. 'ly' → logprob: -7.375716686248779
    3. 'lement' → logprob: -10.625717163085938
    4. 'e' → logprob: -10.875717163085938
    5. 'ément' → logprob: -11.375717163085938
    6. 'EMENT' → logprob: -12.000717163085938
    7. 'ements' → logprob: -12.500717163085938
    8. 'urement' → logprob: -12.500717163085938
    9. 'rement' → logprob: -12.500717163085938
    10. 'ely' → logprob: -12.625717163085938

Token 1576: ' plus' (ID: 2932)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.5276556015014648
    2. '<' → logprob: -1.1526556015014648
    3. '<h' → logprob: -3.152655601501465
    4. ' <' → logprob: -3.902655601501465
    5. ' inf' → logprob: -4.277655601501465
    6. 'infer' → logprob: -4.402655601501465
    7. ' inférieur' → logprob: -6.027655601501465
    8. 'moins' → logprob: -7.277655601501465
    9. '<
' → logprob: -7.527655601501465
    10. 'h' → logprob: -7.527655601501465

Token 1577: ' basse' (ID: 110686)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.8121623992919922
    2. 'grand' → logprob: -0.8121623992919922
    3. 'b' → logprob: -3.812162399291992
    4. ' grande' → logprob: -4.062162399291992
    5. 'haut' → logprob: -4.062162399291992
    6. 'pet' → logprob: -4.062162399291992
    7. 'é' → logprob: -5.062162399291992
    8. '>' → logprob: -5.062162399291992
    9. '<' → logprob: -5.562162399291992
    10. 'ha' → logprob: -5.562162399291992

Token 1578: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.27611619234085083
    2. '       ' → logprob: -1.526116132736206
    3. ':
' → logprob: -3.901116132736206
    4. 'else' → logprob: -6.026116371154785
    5. '   ' → logprob: -7.901116371154785
    6. 'elif' → logprob: -7.901116371154785
    7. ' :' → logprob: -8.776116371154785
    8. ' else' → logprob: -9.276116371154785
    9. '```' → logprob: -9.276116371154785
    10. ':

' → logprob: -10.401116371154785

Token 1579: '       ' (ID: 309)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.13063134253025055
    2. '       ' → logprob: -2.255631446838379
    3. '```' → logprob: -4.130631446838379
    4. ' else' → logprob: -6.505631446838379
    5. '   ' → logprob: -9.755631446838379
    6. '           ' → logprob: -11.380631446838379
    7. 'elif' → logprob: -11.630631446838379
    8. '``' → logprob: -13.255631446838379
    9. ':' → logprob: -14.255631446838379
    10. '{
' → logprob: -14.630631446838379

Token 1580: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.07254242151975632
    2. '       ' → logprob: -3.197542428970337
    3. '```' → logprob: -3.822542428970337
    4. ' else' → logprob: -5.572542190551758
    5. 'elif' → logprob: -5.697542190551758
    6. '   ' → logprob: -9.947542190551758
    7. '           ' → logprob: -11.197542190551758
    8. 'if' → logprob: -11.447542190551758
    9. ' elif' → logprob: -11.947542190551758
    10. '``' → logprob: -12.947542190551758

Token 1581: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23423470556735992
    2. ':
' → logprob: -2.2342348098754883
    3. ':' → logprob: -2.3592348098754883
    4. '           ' → logprob: -5.609234809875488
    5. '```' → logprob: -6.359234809875488
    6. 'id' → logprob: -7.109234809875488
    7. '   ' → logprob: -8.109234809875488
    8. '#' → logprob: -8.859234809875488
    9. ' id' → logprob: -9.234234809875488
    10. ' :' → logprob: -9.234234809875488

Token 1582: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11042004078626633
    2. '```' → logprob: -2.360419988632202
    3. 'id' → logprob: -5.360420227050781
    4. '   ' → logprob: -5.610420227050781
    5. '           ' → logprob: -6.610420227050781
    6. ' id' → logprob: -8.235420227050781
    7. '``' → logprob: -9.360420227050781
    8. '        ' → logprob: -10.735420227050781
    9. '#' → logprob: -10.735420227050781
    10. '        
' → logprob: -11.110420227050781

Token 1583: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' (adapté à ' id') → logprob: -0.0029803176876157522
    2. '           ' → logprob: -6.0029802322387695
    3. ' id' → logprob: -7.7529802322387695
    4. '       ' → logprob: -10.00298023223877
    5. '```' → logprob: -11.00298023223877
    6. '   ' → logprob: -11.37798023223877
    7. '#' → logprob: -14.62798023223877
    8. '               ' → logprob: -14.75298023223877
    9. 'for' → logprob: -15.00298023223877
    10. '	id' → logprob: -15.12798023223877

Token 1584: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196768581867218
    2. ' =' → logprob: -2.811967611312866
    3. '=
' → logprob: -17.186967849731445
    4. '＝' → logprob: -19.061967849731445
    5. '=com' → logprob: -19.186967849731445
    6. '=

' → logprob: -19.561967849731445
    7. '=}' → logprob: -19.936967849731445
    8. ')' → logprob: -20.311967849731445
    9. '```' → logprob: -20.311967849731445
    10. ',' → logprob: -20.436967849731445

Token 1585: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.011048642918467522
    2. ' comp' → logprob: -4.511048793792725
    3. '(comp' → logprob: -14.761048316955566
    4. '	comp' → logprob: -14.761048316955566
    5. '.comp' → logprob: -17.636049270629883
    6. '[' → logprob: -18.386049270629883
    7. 'com' → logprob: -18.636049270629883
    8. '```' → logprob: -18.761049270629883
    9. '_comp' → logprob: -19.386049270629883
    10. ' comps' → logprob: -20.761049270629883

Token 1586: '[h' (ID: 88900)
  Prédit: '[h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -9.088346359931165e-07
    2. 'h' → logprob: -14.000000953674316
    3. '(h' → logprob: -17.375
    4. ' h' → logprob: -19.125
    5. '[' → logprob: -21.0
    6. '<h' → logprob: -21.75
    7. '	h' → logprob: -22.625
    8. '```' → logprob: -23.25
    9. '_h' → logprob: -25.25
    10. '=h' → logprob: -25.375

Token 1587: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.2729995988775045e-06
    2. 'i' → logprob: -12.125006675720215
    3. '[' → logprob: -14.500006675720215
    4. '[
' → logprob: -16.2500057220459
    5. '```' → logprob: -16.2500057220459
    6. '
' → logprob: -16.8750057220459
    7. '[j' → logprob: -17.3750057220459
    8. '(i' → logprob: -17.5000057220459
    9. 'h' → logprob: -18.0000057220459
    10. '   ' → logprob: -18.3750057220459

Token 1588: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.031664665788412094
    2. ' +' → logprob: -3.5316646099090576
    3. '[i' → logprob: -6.906664848327637
    4. '[' → logprob: -7.906664848327637
    5. '   ' → logprob: -8.031664848327637
    6. '       ' → logprob: -9.906664848327637
    7. '+i' → logprob: -9.906664848327637
    8. 'i' → logprob: -10.406664848327637
    9. '           ' → logprob: -10.656664848327637
    10. ']' → logprob: -10.781664848327637

Token 1589: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.625003814697266
    3. '```' → logprob: -15.125003814697266
    4. '+' → logprob: -15.500003814697266
    5. 'i' → logprob: -15.625003814697266
    6. '   ' → logprob: -15.750003814697266
    7. '`' → logprob: -17.250003814697266
    8. '
' → logprob: -17.750003814697266
    9. '１' → logprob: -18.312503814697266
    10. '``' → logprob: -18.687503814697266

Token 1590: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.0100624169572257e-05
    2. 'i' → logprob: -11.000020027160645
    3. ' ' → logprob: -12.750020027160645
    4. '(i' → logprob: -16.00002098083496
    5. '   ' → logprob: -16.25002098083496
    6. '
' → logprob: -16.50002098083496
    7. '[i' → logprob: -17.12502098083496
    8. '```' → logprob: -17.50002098083496
    9. ' i' → logprob: -17.62502098083496
    10. '+' → logprob: -17.62502098083496

Token 1591: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003655075328424573
    2. ']

' → logprob: -5.753654956817627
    3. ']
' → logprob: -7.753654956817627
    4. ']]' → logprob: -10.878655433654785
    5. ']

' → logprob: -11.253655433654785
    6. ']
' → logprob: -11.628655433654785
    7. ']]

' → logprob: -12.878655433654785
    8. ')]' → logprob: -13.753655433654785
    9. ' ]' → logprob: -14.128655433654785
    10. '`]' → logprob: -14.253655433654785

Token 1592: '           ' (ID: 352)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.682750403881073
    2. '```' → logprob: -0.932750403881073
    3. ' for' → logprob: -2.4327504634857178
    4. '       ' → logprob: -5.182750225067139
    5. '           ' → logprob: -5.557750225067139
    6. 'id' → logprob: -6.557750225067139
    7. '   ' → logprob: -7.557750225067139
    8. '#' → logprob: -7.807750225067139
    9. '``' → logprob: -7.932750225067139
    10. ' id' → logprob: -8.182750701904297

Token 1593: ' id' (ID: 1211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03577836975455284
    2. 'diff' → logprob: -3.910778284072876
    3. 'pow' → logprob: -4.660778522491455
    4. 'val' → logprob: -5.535778522491455
    5. 'dp' → logprob: -7.410778522491455
    6. '#' → logprob: -8.160778045654297
    7. 'power' → logprob: -9.035778045654297
    8. 'id' (adapté à ' id') → logprob: -9.035778045654297
    9. 'd' → logprob: -9.160778045654297
    10. '```' → logprob: -9.785778045654297

Token 1594: '2' (ID: 17)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023929167538881302
    2. ' =' → logprob: -3.7739291191101074
    3. '2' → logprob: -8.273929595947266
    4. '+=' → logprob: -8.523929595947266
    5. '#' → logprob: -9.648929595947266
    6. ' +=' → logprob: -10.398929595947266
    7. '=
' → logprob: -10.523929595947266
    8. '+' → logprob: -10.773929595947266
    9. '-=' → logprob: -10.898929595947266
    10. 'for' → logprob: -11.148929595947266

Token 1595: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740770161151886
    2. ' =' → logprob: -0.9740769863128662
    3. 'comp' → logprob: -19.099077224731445
    4. '＝' → logprob: -19.224077224731445
    5. '=
' → logprob: -19.349077224731445
    6. ',' → logprob: -19.724077224731445
    7. ' ' → logprob: -19.849077224731445
    8. ')' → logprob: -20.474077224731445
    9. '=com' → logprob: -20.474077224731445
    10. '=}' → logprob: -20.599077224731445

Token 1596: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.011051236651837826
    2. ' comp' → logprob: -4.511051177978516
    3. '	comp' → logprob: -12.761051177978516
    4. '(comp' → logprob: -15.136051177978516
    5. 'com' → logprob: -16.136051177978516
    6. '.comp' → logprob: -17.511051177978516
    7. ' ' → logprob: -17.761051177978516
    8. '```' → logprob: -18.261051177978516
    9. 'cop' → logprob: -19.011051177978516
    10. ' комп' → logprob: -19.511051177978516

Token 1597: '[h' (ID: 88900)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.240481914370321e-05
    2. '[h' → logprob: -9.875052452087402
    3. 'comp' → logprob: -14.625052452087402
    4. '(comp' → logprob: -15.875052452087402
    5. ' =' → logprob: -16.125051498413086
    6. ' comp' → logprob: -16.625051498413086
    7. '```' → logprob: -17.375051498413086
    8. '=' → logprob: -17.375051498413086
    9. '	comp' → logprob: -17.500051498413086
    10. '{' → logprob: -18.000051498413086

Token 1598: '[i' (ID: 1768)
  Prédit: '[h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -0.00011927806917810813
    2. ']' → logprob: -9.25011920928955
    3. '[i' → logprob: -11.00011920928955
    4. 'h' → logprob: -12.50011920928955
    5. '[' → logprob: -13.62511920928955
    6. '][' → logprob: -14.62511920928955
    7. '```' → logprob: -15.00011920928955
    8. '=h' → logprob: -15.75011920928955
    9. 'i' → logprob: -16.250120162963867
    10. '(h' → logprob: -16.500120162963867

Token 1599: ']]

' (ID: 84024)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.31628677248954773
    2. ']' → logprob: -1.3162868022918701
    3. ']
' → logprob: -6.691286563873291
    4. ']]
' → logprob: -7.066286563873291
    5. ']]' → logprob: -7.441286563873291
    6. '[' → logprob: -8.56628704071045
    7. '[
' → logprob: -10.19128704071045
    8. '[j' → logprob: -11.06628704071045
    9. '```' → logprob: -11.06628704071045
    10. '   ' → logprob: -11.19128704071045

Token 1600: '           ' (ID: 352)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5664585828781128
    2. 'for' → logprob: -1.6914585828781128
    3. '           ' → logprob: -1.9414585828781128
    4. '       ' → logprob: -2.3164587020874023
    5. ' for' → logprob: -5.566458702087402
    6. '               ' → logprob: -6.566458702087402
    7. '   ' → logprob: -8.316458702087402
    8. '#' → logprob: -8.691458702087402
    9. '``' → logprob: -8.816458702087402
    10. '	for' → logprob: -9.066458702087402

Token 1601: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.77627644513268e-06
    2. ' for' → logprob: -12.250008583068848
    3. '```' → logprob: -12.500008583068848
    4. '
' → logprob: -16.125009536743164
    5. '	for' → logprob: -17.125009536743164
    6. '       ' → logprob: -17.500009536743164
    7. '   ' → logprob: -18.000009536743164
    8. 'range' → logprob: -18.000009536743164
    9. '#' (adapté à ' #') → logprob: -18.375009536743164
    10. 'pow' → logprob: -18.750009536743164

Token 1602: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.8670179997570813e-05
    2. '```' → logprob: -11.250019073486328
    3. 'pow' → logprob: -12.875019073486328
    4. 'diff' → logprob: -13.875019073486328
    5. ' for' → logprob: -14.250019073486328
    6. '           ' → logprob: -14.500019073486328
    7. '       ' → logprob: -14.625019073486328
    8. '
' → logprob: -14.875019073486328
    9. '#' → logprob: -17.375019073486328
    10. 'pour' → logprob: -17.375019073486328

Token 1603: ' chaque' (ID: 21194)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.006742723751813173
    2. ' j' → logprob: -5.00674295425415
    3. '```' → logprob: -10.881742477416992
    4. '`' → logprob: -13.506742477416992
    5. '0' → logprob: -13.631742477416992
    6. '_j' → logprob: -14.381742477416992
    7. '	j' → logprob: -14.381742477416992
    8. 'i' → logprob: -14.506742477416992
    9. ' ' → logprob: -14.631742477416992
    10. 'for' → logprob: -14.694242477416992

Token 1604: ' état' (ID: 59181)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0017029138980433345
    2. ' j' → logprob: -6.376702785491943
    3. '```' → logprob: -15.626703262329102
    4. '   ' → logprob: -15.751703262329102
    5. 'i' → logprob: -16.3767032623291
    6. 'for' → logprob: -16.5017032623291
    7. '	j' → logprob: -16.5017032623291
    8. '           ' → logprob: -17.3767032623291
    9. '_j' → logprob: -17.6267032623291
    10. '`' → logprob: -17.7517032623291

Token 1605: ' inférieur' (ID: 191498)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.08636075258255005
    2. ' in' → logprob: -2.7113606929779053
    3. 'j' → logprob: -4.211360931396484
    4. '```' → logprob: -7.336360931396484
    5. ' j' → logprob: -8.711360931396484
    6. 'en' → logprob: -9.211360931396484
    7. 'dans' → logprob: -9.211360931396484
    8. '(j' → logprob: -9.461360931396484
    9. '(' → logprob: -9.586360931396484
    10. '[j' → logprob: -9.711360931396484

Token 1606: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47607314586639404
    2. '(j' → logprob: -0.976073145866394
    3. ' à' → logprob: -8.351073265075684
    4. 'range' → logprob: -8.601073265075684
    5. 'à' → logprob: -8.726073265075684
    6. '(i' → logprob: -8.726073265075684
    7. '(id' → logprob: -8.851073265075684
    8. ',' → logprob: -8.976073265075684
    9. ' (' → logprob: -8.976073265075684
    10. '           ' → logprob: -9.101073265075684

Token 1607: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.0004311460361350328
    2. ' id' → logprob: -7.750431060791016
    3. '(id' → logprob: -15.875431060791016
    4. '	id' → logprob: -16.500431060791016
    5. '
' → logprob: -16.625431060791016
    6. 'len' → logprob: -17.375431060791016
    7. '[id' → logprob: -17.625431060791016
    8. '"id' → logprob: -17.875431060791016
    9. 'range' → logprob: -18.000431060791016
    10. ' ' → logprob: -18.000431060791016

Token 1608: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8848538398742676
    2. '           ' → logprob: -1.0098538398742676
    3. '               ' → logprob: -2.2598538398742676
    4. ':
' → logprob: -2.3848538398742676
    5. 'for' → logprob: -4.634853839874268
    6. ' for' → logprob: -5.134853839874268
    7. ' in' → logprob: -5.884853839874268
    8. '       ' → logprob: -6.134853839874268
    9. '(j' → logprob: -6.259853839874268
    10. 'in' → logprob: -7.009853839874268

Token 1609: '           ' (ID: 352)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.26937973499298096
    2. ' for' → logprob: -2.0193796157836914
    3. '               ' → logprob: -2.6443796157836914
    4. '           ' → logprob: -4.019379615783691
    5. '```' → logprob: -4.269379615783691
    6. '       ' → logprob: -8.144379615783691
    7. '   ' → logprob: -9.894379615783691
    8. '``' → logprob: -10.144379615783691
    9. '                   ' → logprob: -11.394379615783691
    10. '0' → logprob: -12.769379615783691

Token 1610: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20231808722019196
    2. ' for' → logprob: -1.7023180723190308
    3. '           ' → logprob: -7.45231819152832
    4. '```' → logprob: -8.20231819152832
    5. '       ' → logprob: -10.57731819152832
    6. '   ' → logprob: -11.20231819152832
    7. '               ' → logprob: -12.57731819152832
    8. '[' → logprob: -12.82731819152832
    9. ' j' → logprob: -13.70231819152832
    10. '``' → logprob: -13.82731819152832

Token 1611: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.370294846012257e-05
    2. '```' → logprob: -10.500043869018555
    3. ' for' → logprob: -11.250043869018555
    4. '   ' → logprob: -13.250043869018555
    5. '           ' → logprob: -14.375043869018555
    6. '       ' → logprob: -14.375043869018555
    7. 'range' → logprob: -15.875043869018555
    8. '	for' → logprob: -17.375043869018555
    9. '
' → logprob: -17.500043869018555
    10. '``' → logprob: -17.625043869018555

Token 1612: ' multipl' (ID: 44269)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004752288106828928
    2. ' for' → logprob: -5.379752159118652
    3. '           ' → logprob: -9.379752159118652
    4. 'range' → logprob: -10.754752159118652
    5. '       ' → logprob: -11.129752159118652
    6. '   ' → logprob: -12.254752159118652
    7. ' range' → logprob: -12.629752159118652
    8. '
' → logprob: -13.629752159118652
    9. '	for' → logprob: -14.629752159118652
    10. '```' → logprob: -14.879752159118652

Token 1613: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.5468667149543762
    2. 'ipl' → logprob: -2.2968666553497314
    3. 'pl' → logprob: -2.6718666553497314
    4. 'ip' → logprob: -2.9218666553497314
    5. 'lique' → logprob: -3.0468666553497314
    6. 'lie' → logprob: -3.0468666553497314
    7. 'li' → logprob: -3.4218666553497314
    8. 'i' → logprob: -4.0468668937683105
    9. 'lié' → logprob: -4.0468668937683105
    10. 'p' → logprob: -5.6718668937683105

Token 1614: ' le' (ID: 505)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.768822968006134
    2. '(' → logprob: -1.5188229084014893
    3. 'j' → logprob: -1.6438229084014893
    4. 'range' → logprob: -2.5188229084014893
    5. '(j' → logprob: -4.268823146820068
    6. ' for' → logprob: -4.893823146820068
    7. 'dp' → logprob: -5.018823146820068
    8. ' range' → logprob: -5.768823146820068
    9. '2' → logprob: -5.893823146820068
    10. ' j' → logprob: -6.018823146820068

Token 1615: ' nombre' (ID: 9733)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.22064603865146637
    2. '(' → logprob: -2.2206461429595947
    3. '(dp' → logprob: -2.9706461429595947
    4. '2' → logprob: -4.220645904541016
    5. 'pow' → logprob: -4.470645904541016
    6. 'j' → logprob: -5.345645904541016
    7. 'for' → logprob: -5.345645904541016
    8. ' dp' → logprob: -7.345645904541016
    9. '(i' → logprob: -7.470645904541016
    10. '(j' → logprob: -8.095645904541016

Token 1616: ' de' (ID: 334)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.3639947175979614
    2. '(' → logprob: -1.7389947175979614
    3. 'for' → logprob: -1.8639947175979614
    4. '[i' → logprob: -2.113994598388672
    5. '(j' → logprob: -2.738994598388672
    6. '```' → logprob: -3.113994598388672
    7. '(dp' → logprob: -3.488994598388672
    8. '(i' → logprob: -3.488994598388672
    9. 'dp' → logprob: -3.738994598388672
    10. 's' → logprob: -4.238994598388672

Token 1617: ' façons' (ID: 165958)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.026627466082572937
    2. 'j' → logprob: -4.151627540588379
    3. 'for' → logprob: -5.651627540588379
    4. '(dp' → logprob: -6.026627540588379
    5. '```' → logprob: -7.151627540588379
    6. '(' → logprob: -7.276627540588379
    7. 'i' → logprob: -7.526627540588379
    8. 'prev' → logprob: -7.776627540588379
    9. ']' → logprob: -7.776627540588379
    10. ' dp' → logprob: -8.151627540588379

Token 1618: ' de' (ID: 334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1560046672821045
    2. '(j' → logprob: -1.5310046672821045
    3. '(' → logprob: -1.6560046672821045
    4. '(dp' → logprob: -2.5310046672821045
    5. 'par' → logprob: -3.0310046672821045
    6. 'for' → logprob: -3.2810046672821045
    7. '(par' → logprob: -3.2810046672821045
    8. '```' → logprob: -3.6560046672821045
    9. '[j' → logprob: -4.281004905700684
    10. 'de' → logprob: -4.906004905700684

Token 1619: ' parvenir' (ID: 172188)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9030141234397888
    2. 'dp' → logprob: -0.9030141234397888
    3. '(' → logprob: -2.4030141830444336
    4. 'j' → logprob: -3.1530141830444336
    5. '(j' → logprob: -3.4030141830444336
    6. '(dp' → logprob: -4.653014183044434
    7. 'range' → logprob: -4.903014183044434
    8. '```' → logprob: -6.778014183044434
    9. 'pow' → logprob: -6.903014183044434
    10. '2' → logprob: -7.153014183044434

Token 1620: ' à' (ID: 1221)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.023237675428390503
    2. 'à' → logprob: -4.148237705230713
    3. '(' → logprob: -5.398237705230713
    4. '[j' → logprob: -6.648237705230713
    5. 'par' → logprob: -8.023237228393555
    6. 'j' → logprob: -8.398237228393555
    7. ' à' → logprob: -8.773237228393555
    8. 'to' → logprob: -8.773237228393555
    9. '```' → logprob: -8.773237228393555
    10. '           ' → logprob: -8.898237228393555

Token 1621: ' chaque' (ID: 21194)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0038387870881706476
    2. 'range' → logprob: -6.503839015960693
    3. '(j' → logprob: -7.003839015960693
    4. 'for' → logprob: -7.753839015960693
    5. 'dp' → logprob: -8.003838539123535
    6. '(' → logprob: -8.003838539123535
    7. ' j' → logprob: -8.503838539123535
    8. '[j' → logprob: -9.753838539123535
    9. '```' → logprob: -11.378838539123535
    10. '0' → logprob: -11.503838539123535

Token 1622: ' état' (ID: 59181)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.005720335524529219
    2. 'for' → logprob: -5.505720138549805
    3. '```' → logprob: -6.630720138549805
    4. 'ét' → logprob: -9.130720138549805
    5. '(j' → logprob: -10.130720138549805
    6. '
' → logprob: -10.505720138549805
    7. ' j' → logprob: -10.880720138549805
    8. 'state' → logprob: -10.880720138549805
    9. '(' → logprob: -11.130720138549805
    10. '[j' → logprob: -11.380720138549805

Token 1623: ' plus' (ID: 2932)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22842125594615936
    2. '(j' → logprob: -2.228421211242676
    3. ' for' → logprob: -3.728421211242676
    4. '           ' → logprob: -3.728421211242676
    5. '```' → logprob: -4.103421211242676
    6. '[j' → logprob: -4.228421211242676
    7. '               ' → logprob: -5.603421211242676
    8. '(' → logprob: -5.728421211242676
    9. 'by' → logprob: -5.853421211242676
    10. 'in' → logprob: -6.853421211242676

Token 1624: ' bas' (ID: 3222)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.08046481758356094
    2. '```' → logprob: -2.5804648399353027
    3. ' j' → logprob: -7.830464839935303
    4. ')' → logprob: -8.330464363098145
    5. '`' → logprob: -8.455464363098145
    6. ']' → logprob: -8.705464363098145
    7. '[j' → logprob: -8.705464363098145
    8. '``' → logprob: -8.955464363098145
    9. 'for' → logprob: -9.705464363098145
    10. '_j' → logprob: -10.205464363098145

Token 1625: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -1.2815020084381104
    2. 'by' → logprob: -1.6565020084381104
    3. 'par' → logprob: -2.1565020084381104
    4. '           ' → logprob: -2.2815020084381104
    5. ' by' → logprob: -2.5315020084381104
    6. '```' → logprob: -2.7815020084381104
    7. '[j' → logprob: -2.7815020084381104
    8. '(j' → logprob: -3.0315020084381104
    9. '               ' → logprob: -3.4065020084381104
    10. ')' → logprob: -4.781501770019531

Token 1626: ' ' (ID: 220)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0011403346434235573
    2. ' pow' → logprob: -7.501140117645264
    3. '(pow' → logprob: -7.751140117645264
    4. 'dp' → logprob: -9.126140594482422
    5. '2' → logprob: -11.001140594482422
    6. '(' → logprob: -11.001140594482422
    7. '   ' → logprob: -12.126140594482422
    8. '
' → logprob: -13.001140594482422
    9. '```' → logprob: -13.001140594482422
    10. ' (' → logprob: -14.126140594482422

Token 1627: '2' (ID: 17)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0008084330474957824
    2. '(pow' → logprob: -8.375808715820312
    3. 'dp' → logprob: -8.500808715820312
    4. '2' → logprob: -8.625808715820312
    5. '(' → logprob: -8.875808715820312
    6. '
' → logprob: -10.750808715820312
    7. '```' → logprob: -10.875808715820312
    8. ' pow' → logprob: -12.000808715820312
    9. '(dp' → logprob: -13.250808715820312
    10. 'p' → logprob: -13.375808715820312

Token 1628: '^(' (ID: 32612)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11744307726621628
    2. '<|end|>' → logprob: -3.117443084716797
    3. ')' → logprob: -3.867443084716797
    4. ',' → logprob: -4.992443084716797
    5. '               ' → logprob: -4.992443084716797
    6. '.' → logprob: -4.992443084716797
    7. '```' → logprob: -5.242443084716797
    8. 'for' → logprob: -5.617443084716797
    9. ' for' → logprob: -5.867443084716797
    10. '       ' → logprob: -5.992443084716797

Token 1629: 'diff' (ID: 31460)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.09231186658143997
    2. ' h' → logprob: -2.9673118591308594
    3. '(h' → logprob: -3.5923118591308594
    4. '2' → logprob: -5.092311859130859
    5. ' ' → logprob: -6.217311859130859
    6. ' (' → logprob: -8.09231185913086
    7. '0' → logprob: -8.46731185913086
    8. '1' → logprob: -8.59231185913086
    9. 'j' → logprob: -9.21731185913086
    10. '(' → logprob: -9.34231185913086

Token 1630: 'érence' (ID: 65256)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.41871732473373413
    2. '(j' → logprob: -1.793717384338379
    3. '-' → logprob: -2.418717384338379
    4. '2' → logprob: -2.918717384338379
    5. 'for' → logprob: -4.793717384338379
    6. ')' → logprob: -5.418717384338379
    7. '(
' → logprob: -5.918717384338379
    8. '+' → logprob: -6.293717384338379
    9. 'or' → logprob: -6.293717384338379
    10. '```' → logprob: -6.293717384338379

Token 1631: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14956700801849365
    2. '(h' → logprob: -2.149567127227783
    3. ')' → logprob: -4.024567127227783
    4. '(' → logprob: -6.649567127227783
    5. '```' → logprob: -6.899567127227783
    6. ',h' → logprob: -7.149567127227783
    7. '),' → logprob: -7.274567127227783
    8. ' ,' → logprob: -8.524566650390625
    9. '           ' → logprob: -9.524566650390625
    10. '(j' → logprob: -9.524566650390625

Token 1632: ' modulo' (ID: 112372)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8184595704078674
    2. 'for' → logprob: -0.8184595704078674
    3. ' for' → logprob: -2.4434595108032227
    4. '               ' → logprob: -4.318459510803223
    5. 'pow' → logprob: -5.068459510803223
    6. 'mod' → logprob: -5.693459510803223
    7. '```' → logprob: -5.818459510803223
    8. ')' → logprob: -7.443459510803223
    9. ' modulo' → logprob: -7.443459510803223
    10. 'pour' → logprob: -7.443459510803223

Token 1633: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.006624781526625156
    2. '(' → logprob: -5.631624698638916
    3. '2' → logprob: -6.381624698638916
    4. '```' → logprob: -7.881624698638916
    5. 'j' → logprob: -8.256625175476074
    6. 'pow' → logprob: -8.381625175476074
    7. '(mod' → logprob: -8.381625175476074
    8. ')' → logprob: -9.881625175476074
    9. ' mod' → logprob: -10.381625175476074
    10. '1' → logprob: -10.881625175476074

Token 1634: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.056341640651226044
    2. 'for' → logprob: -3.1813416481018066
    3. ' for' → logprob: -4.681341648101807
    4. '       ' → logprob: -7.056341648101807
    5. ')' → logprob: -7.306341648101807
    6. '```' → logprob: -7.431341648101807
    7. '(j' → logprob: -7.681341648101807
    8. '(' → logprob: -8.181341171264648
    9. '               ' → logprob: -8.181341171264648
    10. ':' → logprob: -8.556341171264648

Token 1635: '           ' (ID: 352)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04962540790438652
    2. '           ' → logprob: -3.6746253967285156
    3. ' for' → logprob: -4.049625396728516
    4. '       ' → logprob: -5.924625396728516
    5. '```' → logprob: -6.049625396728516
    6. '   ' → logprob: -7.799625396728516
    7. '               ' → logprob: -8.924625396728516
    8. '``' → logprob: -10.424625396728516
    9. ')' → logprob: -12.174625396728516
    10. 'range' → logprob: -12.799625396728516

Token 1636: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.013913490809500217
    2. ' for' → logprob: -4.388913631439209
    3. '           ' → logprob: -6.763913631439209
    4. '       ' → logprob: -8.51391315460205
    5. '   ' → logprob: -10.63891315460205
    6. '               ' → logprob: -11.51391315460205
    7. '```' → logprob: -11.51391315460205
    8. '	for' → logprob: -12.76391315460205
    9. '                   ' → logprob: -15.63891315460205
    10. ' ' → logprob: -15.63891315460205

Token 1637: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.005236598663032055
    2. ' j' → logprob: -5.255236625671387
    3. 'range' → logprob: -13.255236625671387
    4. '0' → logprob: -14.505236625671387
    5. ' range' → logprob: -15.505236625671387
    6. '	j' → logprob: -16.13023567199707
    7. '   ' → logprob: -16.50523567199707
    8. '```' → logprob: -16.63023567199707
    9. ' ' → logprob: -16.75523567199707
    10. '`' → logprob: -17.00523567199707

Token 1638: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.48946964740753174
    2. 'in' → logprob: -0.9894696474075317
    3. '(' → logprob: -4.239469528198242
    4. 'range' → logprob: -7.364469528198242
    5. '
' → logprob: -9.864469528198242
    6. ' range' → logprob: -9.989469528198242
    7. ' (' → logprob: -10.614469528198242
    8. ')' → logprob: -10.989469528198242
    9. '   ' → logprob: -11.114469528198242
    10. '0' → logprob: -11.114469528198242

Token 1639: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008639389649033546
    2. ' range' → logprob: -4.758639335632324
    3. '(' → logprob: -11.133639335632324
    4. '0' → logprob: -11.633639335632324
    5. '(range' → logprob: -13.758639335632324
    6. ' ' → logprob: -16.13364028930664
    7. 'in' → logprob: -16.88364028930664
    8. 'j' → logprob: -17.50864028930664
    9. ' in' → logprob: -18.13364028930664
    10. '	range' → logprob: -18.38364028930664

Token 1640: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04860009253025055
    2. '0' → logprob: -3.048600196838379
    3. 'range' → logprob: -11.298600196838379
    4. ' (' → logprob: -15.798600196838379
    5. ' range' → logprob: -16.423599243164062
    6. '
' → logprob: -17.048599243164062
    7. ' ' → logprob: -17.173599243164062
    8. '(
' → logprob: -17.423599243164062
    9. '(range' → logprob: -17.798599243164062
    10. '```' → logprob: -17.798599243164062

Token 1641: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4868770196917467e-05
    2. 'id' → logprob: -10.750024795532227
    3. ' ' → logprob: -13.125024795532227
    4. '(' → logprob: -14.000024795532227
    5. '   ' → logprob: -14.750024795532227
    6. 'range' → logprob: -17.250024795532227
    7. ' id' → logprob: -17.375024795532227
    8. '(id' → logprob: -18.000024795532227
    9. '       ' → logprob: -19.500024795532227
    10. '           ' → logprob: -20.250024795532227

Token 1642: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023364508524537086
    2. '0' → logprob: -4.023364543914795
    3. ',' → logprob: -5.273364543914795
    4. 'range' → logprob: -10.898364067077637
    5. ' (' → logprob: -11.273364067077637
    6. '(
' → logprob: -11.648364067077637
    7. '(id' → logprob: -11.773364067077637
    8. ' range' → logprob: -12.148364067077637
    9. ' ,' → logprob: -12.273364067077637
    10. ' ' → logprob: -12.398364067077637

Token 1643: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -1.306760805164231e-05
    2. ' id' → logprob: -11.25001335144043
    3. 'j' → logprob: -17.37501335144043
    4. '(id' → logprob: -17.75001335144043
    5. '	id' → logprob: -18.37501335144043
    6. '"id' → logprob: -20.12501335144043
    7. 'idf' → logprob: -20.37501335144043
    8. '[id' → logprob: -20.75001335144043
    9. '{id' → logprob: -20.87501335144043
    10. '_id' → logprob: -21.00001335144043

Token 1644: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3522656559944153
    2. '):' → logprob: -1.2272655963897705
    3. ':' → logprob: -5.85226583480835
    4. ')' → logprob: -7.22726583480835
    5. ':
' → logprob: -9.727265357971191
    6. '):
' → logprob: -10.477265357971191
    7. '```' → logprob: -10.727265357971191
    8. '       ' → logprob: -10.977265357971191
    9. '           ' → logprob: -10.977265357971191
    10. '   ' → logprob: -11.102265357971191

Token 1645: '               ' (ID: 506)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.922478973865509
    2. ':' → logprob: -2.0474789142608643
    3. '[' → logprob: -2.0474789142608643
    4. ')' → logprob: -2.1724789142608643
    5. '(dp' → logprob: -2.7974789142608643
    6. '       ' → logprob: -2.9224789142608643
    7. '   ' → logprob: -3.1724789142608643
    8. '):' → logprob: -4.297479152679443
    9. 'dp' → logprob: -4.422479152679443
    10. '<|end|>' → logprob: -5.047479152679443

Token 1646: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0007621031254529953
    2. ' dp' → logprob: -7.250761985778809
    3. '               ' → logprob: -10.500761985778809
    4. '(dp' → logprob: -10.750761985778809
    5. '           ' → logprob: -13.375761985778809
    6. '	dp' → logprob: -14.000761985778809
    7. '_dp' → logprob: -15.000761985778809
    8. '                   ' → logprob: -15.000761985778809
    9. '```' → logprob: -17.250762939453125
    10. 'for' → logprob: -17.375762939453125

Token 1647: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.3458322731312364e-06
    2. '```' → logprob: -13.000007629394531
    3. '][' → logprob: -13.125007629394531
    4. '[' → logprob: -13.625007629394531
    5. '[j' → logprob: -14.125007629394531
    6. 'i' → logprob: -14.125007629394531
    7. ')[' → logprob: -15.875007629394531
    8. '[
' → logprob: -17.25000762939453
    9. ' [' → logprob: -17.37500762939453
    10. ']' → logprob: -17.87500762939453

Token 1648: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.14375755190849304
    2. '[j' → logprob: -2.0187575817108154
    3. '[i' → logprob: -7.018757343292236
    4. ']' → logprob: -9.768757820129395
    5. '```' → logprob: -10.268757820129395
    6. ')][' → logprob: -10.893757820129395
    7. '[' → logprob: -11.018757820129395
    8. ']][' → logprob: -11.143757820129395
    9. '[][' → logprob: -12.143757820129395
    10. ''][' → logprob: -12.643757820129395

Token 1649: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -6.511406809295295e-06
    2. '[j' → logprob: -12.250006675720215
    3. ' j' → logprob: -13.500006675720215
    4. '(j' → logprob: -16.1250057220459
    5. 'i' → logprob: -16.6250057220459
    6. '	j' → logprob: -16.7500057220459
    7. '   ' → logprob: -16.8750057220459
    8. '```' → logprob: -17.5000057220459
    9. '_j' → logprob: -17.6250057220459
    10. ']' → logprob: -18.1250057220459

Token 1650: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.028822269290685654
    2. ']' → logprob: -3.778822183609009
    3. ' =' → logprob: -5.778822422027588
    4. ']=' → logprob: -6.028822422027588
    5. ')' → logprob: -9.90382194519043
    6. ')=' → logprob: -12.27882194519043
    7. '           ' → logprob: -13.52882194519043
    8. ']=(' → logprob: -13.90382194519043
    9. ']+=' → logprob: -14.15382194519043
    10. '=
' → logprob: -14.15382194519043

Token 1651: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0024805311113595963
    2. ' =' → logprob: -6.002480506896973
    3. '=(' → logprob: -13.252480506896973
    4. ']=' → logprob: -13.377480506896973
    5. '           ' → logprob: -14.502480506896973
    6. ']' → logprob: -14.877480506896973
    7. '               ' → logprob: -15.877480506896973
    8. '=
' → logprob: -16.00248146057129
    9. ')' → logprob: -16.12748146057129
    10. ')=' → logprob: -16.62748146057129

Token 1652: ' (' (ID: 350)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.37918323278427124
    2. '(' → logprob: -1.629183292388916
    3. '(pow' → logprob: -2.129183292388916
    4. ' (' → logprob: -8.254182815551758
    5. 'pow' → logprob: -8.504182815551758
    6. '(int' → logprob: -10.504182815551758
    7. '(p' → logprob: -11.129182815551758
    8. 'dp' → logprob: -11.254182815551758
    9. '(power' → logprob: -11.504182815551758
    10. '((' → logprob: -12.129182815551758

Token 1653: 'pow' (ID: 30304)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.15130797028541565
    2. '2' → logprob: -2.651308059692383
    3. '(dp' → logprob: -3.151308059692383
    4. '(' → logprob: -3.901308059692383
    5. 'pow' → logprob: -5.026308059692383
    6. ' dp' → logprob: -8.651308059692383
    7. '(pow' → logprob: -9.401308059692383
    8. ' (' → logprob: -11.526308059692383
    9. '   ' → logprob: -13.026308059692383
    10. ' ' → logprob: -13.026308059692383

Token 1654: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.5213274309644476e-05
    2. '2' → logprob: -11.500015258789062
    3. ' (' → logprob: -12.875015258789062
    4. '(
' → logprob: -13.125015258789062
    5. ' ' → logprob: -15.250015258789062
    6. '```' → logprob: -15.875015258789062
    7. '   ' → logprob: -17.500015258789062
    8. ')' → logprob: -18.000015258789062
    9. '<|end|>' → logprob: -18.000015258789062
    10. '[' → logprob: -18.250015258789062

Token 1655: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.173704271830502e-06
    2. '(' → logprob: -13.12500286102295
    3. ' ' → logprob: -13.75000286102295
    4. '   ' → logprob: -17.125003814697266
    5. '{' → logprob: -18.625003814697266
    6. '```' → logprob: -18.625003814697266
    7. '[' → logprob: -19.000003814697266
    8. '       ' → logprob: -19.625003814697266
    9. ')' → logprob: -19.625003814697266
    10. '  ' → logprob: -19.875003814697266

Token 1656: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013670233311131597
    2. ',h' → logprob: -6.626367092132568
    3. '(' → logprob: -11.37636661529541
    4. ',j' → logprob: -11.75136661529541
    5. ',
' → logprob: -12.12636661529541
    6. '(h' → logprob: -12.37636661529541
    7. ' ,' → logprob: -12.62636661529541
    8. '```' → logprob: -13.25136661529541
    9. 'h' → logprob: -13.50136661529541
    10. '[' → logprob: -14.00136661529541

Token 1657: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.045536547899246216
    2. ' h' → logprob: -3.295536518096924
    3. '(h' → logprob: -4.920536518096924
    4. ' (' → logprob: -9.045536994934082
    5. '[h' → logprob: -10.670536994934082
    6. '(' → logprob: -11.420536994934082
    7. '   ' → logprob: -12.420536994934082
    8. ' ' → logprob: -12.545536994934082
    9. '	h' → logprob: -12.795536994934082
    10. ')' → logprob: -13.170536994934082

Token 1658: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.080963092041202e-06
    2. '[' → logprob: -12.500004768371582
    3. 'i' → logprob: -14.375004768371582
    4. '[j' → logprob: -14.500004768371582
    5. '[I' → logprob: -15.625004768371582
    6. '[
' → logprob: -16.6250057220459
    7. '(i' → logprob: -17.5000057220459
    8. '{i' → logprob: -18.1250057220459
    9. '```' → logprob: -18.5000057220459
    10. '[h' → logprob: -18.6250057220459

Token 1659: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0030919164419174194
    2. '[' → logprob: -6.253091812133789
    3. '[j' → logprob: -7.253091812133789
    4. ']' → logprob: -8.378091812133789
    5. '-' → logprob: -8.628091812133789
    6. '[
' → logprob: -10.878091812133789
    7. 'i' → logprob: -11.628091812133789
    8. ' -' → logprob: -12.628091812133789
    9. '```' → logprob: -12.628091812133789
    10. ']-' → logprob: -13.003091812133789

Token 1660: ' -' (ID: 533)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.09635714441537857
    2. '-' → logprob: -2.5963571071624756
    3. '[' → logprob: -4.221357345581055
    4. '[j' → logprob: -6.471357345581055
    5. ' -' → logprob: -7.596357345581055
    6. '[
' → logprob: -8.596357345581055
    7. '-i' → logprob: -8.721357345581055
    8. '[-' → logprob: -9.221357345581055
    9. '```' → logprob: -10.346357345581055
    10. 'i' → logprob: -10.471357345581055

Token 1661: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.00889510940760374
    2. ' h' → logprob: -4.758894920349121
    3. '[h' → logprob: -9.008894920349121
    4. '[i' → logprob: -10.133894920349121
    5. '1' → logprob: -10.133894920349121
    6. 'j' → logprob: -10.383894920349121
    7. 'i' → logprob: -11.633894920349121
    8. '   ' → logprob: -11.633894920349121
    9. '[j' → logprob: -12.008894920349121
    10. '           ' → logprob: -12.383894920349121

Token 1662: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00735447509214282
    2. '[j' → logprob: -5.507354259490967
    3. 'i' → logprob: -6.007354259490967
    4. '[' → logprob: -7.507354259490967
    5. '```' → logprob: -9.257354736328125
    6. ']' → logprob: -10.007354736328125
    7. '[
' → logprob: -10.382354736328125
    8. '   ' → logprob: -11.257354736328125
    9. '1' → logprob: -11.257354736328125
    10. '][' → logprob: -11.382354736328125

Token 1663: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0006625185487791896
    2. '[' → logprob: -8.250662803649902
    3. '1' → logprob: -8.625662803649902
    4. ' +' → logprob: -8.875662803649902
    5. '-' → logprob: -10.250662803649902
    6. '[j' → logprob: -10.375662803649902
    7. '+j' → logprob: -11.750662803649902
    8. '[i' → logprob: -12.625662803649902
    9. '```' → logprob: -14.000662803649902
    10. '   ' → logprob: -14.625662803649902

Token 1664: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.214019307051785e-05
    2. ' ' → logprob: -10.375032424926758
    3. '
' → logprob: -15.125032424926758
    4. '   ' → logprob: -15.812532424926758
    5. '+' → logprob: -15.875032424926758
    6. '```' → logprob: -16.250032424926758
    7. '[' → logprob: -16.812532424926758
    8. '[j' → logprob: -17.000032424926758
    9. '_' → logprob: -17.625032424926758
    10. '１' → logprob: -17.937532424926758

Token 1665: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.630610641877865e-06
    2. ' ' → logprob: -12.000006675720215
    3. '+' → logprob: -16.0625057220459
    4. '```' → logprob: -16.3750057220459
    5. '   ' → logprob: -16.5000057220459
    6. '
' → logprob: -17.4375057220459
    7. '[' → logprob: -18.1250057220459
    8. '１' → logprob: -18.4375057220459
    9. '۱' → logprob: -18.4375057220459
    10. '_' → logprob: -18.8750057220459

Token 1666: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0055814022198319435
    2. ',' → logprob: -5.255581378936768
    3. ']' → logprob: -8.630581855773926
    4. ' ],' → logprob: -9.880581855773926
    5. '[j' → logprob: -10.380581855773926
    6. '[i' → logprob: -10.630581855773926
    7. ' ,' → logprob: -11.005581855773926
    8. ',j' → logprob: -11.630581855773926
    9. '],
' → logprob: -12.005581855773926
    10. '),' → logprob: -12.130581855773926

Token 1667: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0009114635176956654
    2. ' mod' → logprob: -7.000911235809326
    3. '	mod' → logprob: -19.625911712646484
    4. '(mod' → logprob: -20.625911712646484
    5. '_mod' → logprob: -20.750911712646484
    6. '           ' → logprob: -20.875911712646484
    7. '```' → logprob: -21.500911712646484
    8. ' мод' → logprob: -21.500911712646484
    9. '.mod' → logprob: -22.500911712646484
    10. 'm' → logprob: -22.625911712646484

Token 1668: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011594036914175376
    2. ')*' → logprob: -9.750116348266602
    3. ',' → logprob: -10.500116348266602
    4. '*' → logprob: -10.875116348266602
    5. '```' → logprob: -12.125116348266602
    6. ' )' → logprob: -13.500116348266602
    7. '   ' → logprob: -14.375116348266602
    8. ']' → logprob: -14.500116348266602
    9. ')
' → logprob: -14.625116348266602
    10. ' *' → logprob: -14.625116348266602

Token 1669: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.12692978978157043
    2. ' *' → logprob: -2.126929759979248
    3. '          ' → logprob: -14.751930236816406
    4. ')' → logprob: -15.626930236816406
    5. ' ' → logprob: -15.751930236816406
    6. '   ' → logprob: -15.876930236816406
    7. ' ' → logprob: -16.376930236816406
    8. '**' → logprob: -16.376930236816406
    9. '           ' → logprob: -16.751930236816406
    10. '               ' → logprob: -16.751930236816406

Token 1670: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0016611393075436354
    2. ' dp' → logprob: -6.50166130065918
    3. '(dp' → logprob: -8.75166130065918
    4. '	dp' → logprob: -15.00166130065918
    5. ' (' → logprob: -16.25166130065918
    6. '(' → logprob: -17.00166130065918
    7. '
' → logprob: -17.25166130065918
    8. 'd' → logprob: -17.62666130065918
    9. '_dp' → logprob: -17.87666130065918
    10. ')' → logprob: -18.12666130065918

Token 1671: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5690089639974758e-05
    2. 'i' → logprob: -11.125015258789062
    3. '[' → logprob: -14.875015258789062
    4. '[
' → logprob: -15.875015258789062
    5. '   ' → logprob: -16.000015258789062
    6. ' [' → logprob: -16.250015258789062
    7. '(i' → logprob: -16.750015258789062
    8. '
' → logprob: -17.500015258789062
    9. '[j' → logprob: -17.500015258789062
    10. ' i' → logprob: -18.125015258789062

Token 1672: ' -' (ID: 533)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.1648949384689331
    2. '-' → logprob: -1.914894938468933
    3. ' -' → logprob: -6.039895057678223
    4. '[-' → logprob: -6.664895057678223
    5. '[' → logprob: -7.289895057678223
    6. '[user' → logprob: -9.414895057678223
    7. '   ' → logprob: -10.039895057678223
    8. 'i' → logprob: -10.039895057678223
    9. '[j' → logprob: -11.039895057678223
    10. '-i' → logprob: -11.039895057678223

Token 1673: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001272258348762989
    2. 'i' → logprob: -6.751272201538086
    3. ' ' → logprob: -9.626272201538086
    4. '[i' → logprob: -11.001272201538086
    5. '(i' → logprob: -12.001272201538086
    6. '```' → logprob: -12.376272201538086
    7. '-' → logprob: -12.751272201538086
    8. '   ' → logprob: -13.001272201538086
    9. ' i' → logprob: -13.251272201538086
    10. '_' → logprob: -14.501272201538086

Token 1674: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005241821985691786
    2. 'i' → logprob: -5.255241870880127
    3. ' ' → logprob: -12.755241394042969
    4. '```' → logprob: -13.130241394042969
    5. '[i' → logprob: -13.505241394042969
    6. ' i' → logprob: -14.005241394042969
    7. '   ' → logprob: -15.255241394042969
    8. 'j' → logprob: -15.505241394042969
    9. '(i' → logprob: -15.630241394042969
    10. '-' → logprob: -15.755241394042969

Token 1675: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.18303853273391724
    2. '][' → logprob: -1.8080384731292725
    3. '[i' → logprob: -5.808038711547852
    4. ']' → logprob: -8.683038711547852
    5. ')[' → logprob: -9.933038711547852
    6. '[' → logprob: -10.683038711547852
    7. '}[' → logprob: -11.308038711547852
    8. ' [' → logprob: -11.808038711547852
    9. '[js' → logprob: -12.183038711547852
    10. '```' → logprob: -12.433038711547852

Token 1676: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -8.77627644513268e-06
    2. ' j' → logprob: -12.000008583068848
    3. '[j' → logprob: -13.750008583068848
    4. '   ' → logprob: -13.750008583068848
    5. '
' → logprob: -15.125008583068848
    6. '```' → logprob: -15.875008583068848
    7. ' ' → logprob: -17.875009536743164
    8. '	j' → logprob: -18.000009536743164
    9. '       ' → logprob: -18.625009536743164
    10. '  ' → logprob: -18.750009536743164

Token 1677: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.673547563375905e-05
    2. ')%' → logprob: -9.500086784362793
    3. '           ' → logprob: -12.125086784362793
    4. ' )' → logprob: -12.500086784362793
    5. '               ' → logprob: -13.750086784362793
    6. '       ' → logprob: -15.000086784362793
    7. ')
' → logprob: -15.250086784362793
    8. '                   ' → logprob: -15.375086784362793
    9. '[j' → logprob: -15.750086784362793
    10. '```' → logprob: -15.875086784362793

Token 1678: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.01070915162563324
    2. ' %' → logprob: -5.260709285736084
    3. ')%' → logprob: -5.635709285736084
    4. '           ' → logprob: -7.010709285736084
    5. ')' → logprob: -7.635709285736084
    6. '%n' → logprob: -8.885708808898926
    7. '       ' → logprob: -9.385708808898926
    8. '%)' → logprob: -9.635708808898926
    9. '<|end|>' → logprob: -10.010708808898926
    10. '%=' → logprob: -10.385708808898926

Token 1679: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -4.320199877838604e-07
    2. ' mod' → logprob: -15.0
    3. '(mod' → logprob: -20.625
    4. '	mod' → logprob: -22.375
    5. 'MOD' → logprob: -24.0
    6. '_mod' → logprob: -24.25
    7. '```' → logprob: -24.375
    8. '
' → logprob: -24.625
    9. '100' → logprob: -24.625
    10. 'moder' → logprob: -24.875

Token 1680: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1681: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3150486648082733
    2. 'for' → logprob: -2.0650486946105957
    3. 'j' → logprob: -2.3150486946105957
    4. 'dp' → logprob: -4.440048694610596
    5. ' for' → logprob: -4.940048694610596
    6. '.' → logprob: -5.065048694610596
    7. '   ' → logprob: -5.440048694610596
    8. '       ' → logprob: -5.440048694610596
    9. '```' → logprob: -5.815048694610596
    10. '[j' → logprob: -6.315048694610596

Token 1682: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25397953391075134
    2. 'dp' → logprob: -1.5039795637130737
    3. '           ' → logprob: -6.503979682922363
    4. '       ' → logprob: -7.878979682922363
    5. ' for' → logprob: -9.878979682922363
    6. '#' (adapté à ' #') → logprob: -10.003979682922363
    7. '```' → logprob: -10.128979682922363
    8. '   ' → logprob: -10.753979682922363
    9. 'j' → logprob: -11.878979682922363
    10. ' dp' → logprob: -13.128979682922363

Token 1683: ' Pour' (ID: 13931)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.014177965931594372
    2. 'for' → logprob: -4.2641777992248535
    3. 'j' → logprob: -11.639178276062012
    4. '```' → logprob: -12.514178276062012
    5. ' dp' → logprob: -14.389178276062012
    6. '       ' → logprob: -15.139178276062012
    7. '(dp' → logprob: -15.139178276062012
    8. '   ' → logprob: -15.514178276062012
    9. '	dp' → logprob: -15.764178276062012
    10. ' for' → logprob: -16.139177322387695

Token 1684: ' chaque' (ID: 21194)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0010341187007725239
    2. ' j' → logprob: -6.876034259796143
    3. '```' → logprob: -14.751033782958984
    4. '	j' → logprob: -15.376033782958984
    5. ' ' → logprob: -15.751033782958984
    6. '   ' → logprob: -15.751033782958984
    7. 'k' → logprob: -15.751033782958984
    8. '$j' → logprob: -17.001033782958984
    9. '`' → logprob: -17.251033782958984
    10. '[j' → logprob: -17.501033782958984

Token 1685: ' état' (ID: 59181)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0001817297888919711
    2. ' j' → logprob: -8.625182151794434
    3. 'k' → logprob: -13.750182151794434
    4. '```' → logprob: -14.375182151794434
    5. '_j' → logprob: -15.875182151794434
    6. '	j' → logprob: -16.000181198120117
    7. '   ' → logprob: -16.500181198120117
    8. 'i' → logprob: -17.000181198120117
    9. '...' → logprob: -17.375181198120117
    10. '`' → logprob: -17.375181198120117

Token 1686: ' interm' (ID: 120489)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.47436243295669556
    2. ' in' → logprob: -0.9743624329566956
    3. 'j' → logprob: -9.09936237335205
    4. '```' → logprob: -9.84936237335205
    5. '	in' → logprob: -10.34936237335205
    6. 'en' → logprob: -11.22436237335205
    7. '
' → logprob: -11.59936237335205
    8. '(in' → logprob: -11.97436237335205
    9. '[in' → logprob: -11.97436237335205
    10. '   ' → logprob: -12.22436237335205

Token 1687: 'édiaire' (ID: 161555)
  Prédit: 'édiaire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'édiaire' → logprob: -0.15977950394153595
    2. 'mediate' → logprob: -2.4097795486450195
    3. 'édia' → logprob: -4.0347795486450195
    4. '(' → logprob: -4.0347795486450195
    5. '```' → logprob: -4.7847795486450195
    6. 'range' → logprob: -5.2847795486450195
    7. 'édi' → logprob: -6.5347795486450195
    8. 'mediately' → logprob: -6.7847795486450195
    9. 'm' → logprob: -6.9097795486450195
    10. '(range' → logprob: -7.4097795486450195

Token 1688: ' entre' (ID: 3853)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.23195579648017883
    2. ' in' → logprob: -1.6069557666778564
    3. ',' → logprob: -5.7319560050964355
    4. '```' → logprob: -6.1069560050964355
    5. 'en' → logprob: -7.8569560050964355
    6. '(' → logprob: -8.856955528259277
    7. ' en' → logprob: -9.481955528259277
    8. 'for' → logprob: -9.481955528259277
    9. ',j' → logprob: -9.856955528259277
    10. ')' → logprob: -9.856955528259277

Token 1689: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.00012833021173719317
    2. '(id' → logprob: -9.500128746032715
    3. 'range' → logprob: -10.500128746032715
    4. ' id' → logprob: -10.625128746032715
    5. 'j' → logprob: -13.875128746032715
    6. '
' → logprob: -15.625128746032715
    7. '```' → logprob: -16.0001277923584
    8. 'for' → logprob: -16.1251277923584
    9. '(' → logprob: -16.2501277923584
    10. 'ids' → logprob: -17.2501277923584

Token 1690: ' (' (ID: 350)
  Prédit: '(id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(id' → logprob: -0.3366551399230957
    2. ',' → logprob: -1.5866551399230957
    3. '(' → logprob: -2.9616551399230957
    4. 'and' → logprob: -4.711655139923096
    5. ',id' → logprob: -4.711655139923096
    6. 'id' → logprob: -5.711655139923096
    7. '```' → logprob: -5.961655139923096
    8. 'range' → logprob: -6.211655139923096
    9. 'for' → logprob: -6.586655139923096
    10. 'in' → logprob: -7.211655139923096

Token 1691: 'in' (ID: 258)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.044299766421318054
    2. ',' → logprob: -3.169299840927124
    3. 'j' → logprob: -7.044299602508545
    4. ',id' → logprob: -8.919300079345703
    5. ' id' → logprob: -9.419300079345703
    6. '(id' → logprob: -9.419300079345703
    7. '
' → logprob: -10.169300079345703
    8. '```' → logprob: -10.794300079345703
    9. ',j' → logprob: -10.919300079345703
    10. ')' → logprob: -11.294300079345703

Token 1692: 'clus' (ID: 4085)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.003114853287115693
    2. 'dex' → logprob: -6.378114700317383
    3. 'id' → logprob: -7.003114700317383
    4. 'def' → logprob: -8.628114700317383
    5. 'range' → logprob: -9.128114700317383
    6. 'nd' → logprob: -9.628114700317383
    7. 'n' → logprob: -10.003114700317383
    8. 'д' → logprob: -10.628114700317383
    9. '```' → logprob: -10.753114700317383
    10. ',' → logprob: -11.378114700317383

Token 1693: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009894612012431026
    2. 'and' → logprob: -7.7509894371032715
    3. ',id' → logprob: -8.75098991394043
    4. ',j' → logprob: -9.12598991394043
    5. ')' → logprob: -9.25098991394043
    6. ' ,' → logprob: -9.37598991394043
    7. '```' → logprob: -10.12598991394043
    8. 'id' → logprob: -10.50098991394043
    9. ',
' → logprob: -11.87598991394043
    10. ',i' → logprob: -12.37598991394043

Token 1694: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05080878734588623
    2. 'and' → logprob: -3.925808906555176
    3. ',j' → logprob: -4.800808906555176
    4. ' ,' → logprob: -4.925808906555176
    5. ',id' → logprob: -5.175808906555176
    6. ' and' → logprob: -5.800808906555176
    7. '```' → logprob: -5.925808906555176
    8. 'import' → logprob: -7.050808906555176
    9. 'for' → logprob: -7.800808906555176
    10. ',len' → logprob: -8.050808906555176

Token 1695: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.0007150543970055878
    2. ' id' → logprob: -7.250715255737305
    3. 'len' → logprob: -12.500715255737305
    4. '(id' → logprob: -14.125715255737305
    5. 'range' → logprob: -15.250715255737305
    6. '```' → logprob: -15.250715255737305
    7. 'idx' → logprob: -16.250715255737305
    8. '	id' → logprob: -17.500715255737305
    9. 'index' → logprob: -17.875715255737305
    10. '...' → logprob: -17.875715255737305

Token 1696: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002244227332994342
    2. ',' → logprob: -6.127243995666504
    3. 'id' → logprob: -11.002243995666504
    4. ' ,' → logprob: -11.502243995666504
    5. '```' → logprob: -11.502243995666504
    6. '(id' → logprob: -12.252243995666504
    7. ' ' → logprob: -12.502243995666504
    8. ',id' → logprob: -12.627243995666504
    9. '
' → logprob: -13.002243995666504
    10. '   ' → logprob: -13.752243995666504

Token 1697: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009612061083316803
    2. ',j' → logprob: -5.384612083435059
    3. '+' → logprob: -6.134612083435059
    4. '```' → logprob: -6.884612083435059
    5. '(' → logprob: -7.259612083435059
    6. '(id' → logprob: -8.259612083435059
    7. ',id' → logprob: -8.759612083435059
    8. ' ,' → logprob: -8.759612083435059
    9. 'in' → logprob: -9.009612083435059
    10. '(in' → logprob: -9.634612083435059

Token 1698: 'ex' (ID: 490)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.09795355796813965
    2. ',' → logprob: -2.7229535579681396
    3. '(id' → logprob: -3.7229535579681396
    4. ',id' → logprob: -6.222953796386719
    5. ' id' → logprob: -7.222953796386719
    6. '+' → logprob: -7.722953796386719
    7. '(' → logprob: -8.722953796386719
    8. '0' → logprob: -10.597953796386719
    9. ' ,' → logprob: -10.972953796386719
    10. ')' → logprob: -10.972953796386719

Token 1699: 'cl' (ID: 565)
  Prédit: 'clusive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'clusive' → logprob: -0.8353485465049744
    2. 'cluded' → logprob: -2.085348606109619
    3. 'd' → logprob: -2.210348606109619
    4. '(id' → logprob: -2.210348606109619
    5. 'range' → logprob: -2.585348606109619
    6. 'dex' → logprob: -2.835348606109619
    7. 'clude' → logprob: -3.460348606109619
    8. 'clus' → logprob: -4.585348606109619
    9. '+' → logprob: -4.835348606109619
    10. 'cluding' → logprob: -5.335348606109619

Token 1700: 'u' (ID: 84)
  Prédit: 'lude'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lude' → logprob: -0.2835081219673157
    2. 'l' → logprob: -2.658508062362671
    3. 'clude' → logprob: -2.658508062362671
    4. '```' → logprob: -2.783508062362671
    5. 'lus' → logprob: -4.28350830078125
    6. ')' → logprob: -5.28350830078125
    7. 'e' → logprob: -5.90850830078125
    8. 'lu' → logprob: -5.90850830078125
    9. '=' → logprob: -6.28350830078125
    10. 'p' → logprob: -6.53350830078125

Token 1701: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007978349458426237
    2. ' ,' → logprob: -8.500798225402832
    3. ',j' → logprob: -9.125798225402832
    4. 'n' → logprob: -9.875798225402832
    5. '+,' → logprob: -10.000798225402832
    6. '2' → logprob: -10.000798225402832
    7. 't' → logprob: -10.250798225402832
    8. 'id' → logprob: -10.375798225402832
    9. ':' → logprob: -10.375798225402832
    10. 'range' → logprob: -10.500798225402832

Token 1702: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12423344701528549
    2. '```' → logprob: -3.2492334842681885
    3. ':j' → logprob: -3.6242334842681885
    4. 'for' → logprob: -4.124233245849609
    5. ',' → logprob: -4.749233245849609
    6. '[j' → logprob: -5.124233245849609
    7. ' for' → logprob: -5.499233245849609
    8. ':
' → logprob: -5.874233245849609
    9. ')' → logprob: -5.874233245849609
    10. '[' → logprob: -6.499233245849609

Token 1703: '           ' (ID: 352)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03620580583810806
    2. ' for' → logprob: -3.411205768585205
    3. '```' → logprob: -6.536205768585205
    4. 'j' → logprob: -8.536206245422363
    5. ' j' → logprob: -8.536206245422363
    6. 'range' → logprob: -8.911206245422363
    7. '           ' → logprob: -9.036206245422363
    8. '(' → logprob: -9.536206245422363
    9. '   ' → logprob: -9.661206245422363
    10. '[' → logprob: -9.911206245422363

Token 1704: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03822600841522217
    2. 'in' → logprob: -4.413226127624512
    3. 'range' → logprob: -4.538226127624512
    4. '(range' → logprob: -4.913226127624512
    5. '(' → logprob: -5.413226127624512
    6. '```' → logprob: -6.288226127624512
    7. ' for' → logprob: -7.163226127624512
    8. ' in' → logprob: -9.288226127624512
    9. '(for' → logprob: -10.663226127624512
    10. ')' → logprob: -10.913226127624512

Token 1705: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.008620720356702805
    2. ' j' → logprob: -4.758620738983154
    3. '```' → logprob: -13.133620262145996
    4. '	j' → logprob: -13.758620262145996
    5. ' ' → logprob: -14.508620262145996
    6. 'range' → logprob: -14.633620262145996
    7. '$j' → logprob: -15.133620262145996
    8. '   ' → logprob: -15.133620262145996
    9. '`' → logprob: -15.258620262145996
    10. ' ' → logprob: -15.383620262145996

Token 1706: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.22545313835144043
    2. ' in' → logprob: -1.6004531383514404
    3. 'n' → logprob: -10.97545337677002
    4. 'range' → logprob: -11.97545337677002
    5. '	in' → logprob: -12.60045337677002
    6. ' ' → logprob: -13.10045337677002
    7. '   ' → logprob: -13.60045337677002
    8. 'In' → logprob: -13.60045337677002
    9. 'd' → logprob: -13.60045337677002
    10. 's' → logprob: -13.97545337677002

Token 1707: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00012368128227535635
    2. ' range' → logprob: -9.000123977661133
    3. 'in' → logprob: -15.750123977661133
    4. '(range' → logprob: -16.000123977661133
    5. ' in' → logprob: -19.250123977661133
    6. 'rang' → logprob: -20.125123977661133
    7. 'ran' → logprob: -20.875123977661133
    8. 'id' → logprob: -21.000123977661133
    9. ' ' → logprob: -21.375123977661133
    10. 'r' → logprob: -22.250123977661133

Token 1708: '(id' (ID: 6589)
  Prédit: '(id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(id' → logprob: -0.0015001024585217237
    2. 'range' → logprob: -7.126500129699707
    3. '(range' → logprob: -7.751500129699707
    4. '(' → logprob: -8.876500129699707
    5. '(j' → logprob: -9.501500129699707
    6. '(idx' → logprob: -10.876500129699707
    7. '(i' → logprob: -11.751500129699707
    8. ' (' → logprob: -11.751500129699707
    9. 'id' → logprob: -12.001500129699707
    10. '(in' → logprob: -12.751500129699707

Token 1709: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003546502848621458
    2. ',id' → logprob: -8.125354766845703
    3. ' ,' → logprob: -10.500354766845703
    4. ',j' → logprob: -11.125354766845703
    5. '(id' → logprob: -11.875354766845703
    6. '+' → logprob: -12.500354766845703
    7. ',
' → logprob: -13.750354766845703
    8. '
' → logprob: -14.250354766845703
    9. ',index' → logprob: -14.500354766845703
    10. '   ' → logprob: -14.625354766845703

Token 1710: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.0015024791937321424
    2. ' id' → logprob: -6.501502513885498
    3. '(id' → logprob: -16.501502990722656
    4. '	id' → logprob: -17.876502990722656
    5. '   ' → logprob: -18.501502990722656
    6. 'j' → logprob: -19.876502990722656
    7. '{id' → logprob: -20.876502990722656
    8. '"id' → logprob: -21.126502990722656
    9. 'idx' → logprob: -21.251502990722656
    10. '_id' → logprob: -21.251502990722656

Token 1711: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000741134281270206
    2. 'id' → logprob: -7.625741004943848
    3. '(id' → logprob: -8.625741004943848
    4. '[id' → logprob: -10.500741004943848
    5. ',id' → logprob: -11.125741004943848
    6. '```' → logprob: -11.375741004943848
    7. ',' → logprob: -12.000741004943848
    8. '{id' → logprob: -12.250741004943848
    9. ' id' → logprob: -12.625741004943848
    10. '
' → logprob: -14.000741004943848

Token 1712: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.646612286567688
    2. '):' → logprob: -1.021612286567688
    3. '+' → logprob: -2.2716121673583984
    4. ',' → logprob: -5.021612167358398
    5. ')' → logprob: -6.271612167358398
    6. ':' → logprob: -6.396612167358398
    7. '<|end|>' → logprob: -6.771612167358398
    8. ' +' → logprob: -7.021612167358398
    9. '):

' → logprob: -8.896612167358398
    10. '):
' → logprob: -9.021612167358398

Token 1713: '               ' (ID: 506)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5007354617118835
    2. '               ' → logprob: -1.0007355213165283
    3. '```' → logprob: -4.250735282897949
    4. '           ' → logprob: -5.875735282897949
    5. '	dp' → logprob: -5.875735282897949
    6. '(dp' → logprob: -6.000735282897949
    7. ' dp' → logprob: -6.000735282897949
    8. '       ' → logprob: -7.875735282897949
    9. '   ' → logprob: -8.00073528289795
    10. '[' → logprob: -8.25073528289795

Token 1714: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.019452378153800964
    2. '(dp' → logprob: -4.2694525718688965
    3. ' dp' → logprob: -5.2694525718688965
    4. '                   ' → logprob: -9.269452095031738
    5. '	dp' → logprob: -11.269452095031738
    6. '               ' → logprob: -12.144452095031738
    7. '_dp' → logprob: -12.394452095031738
    8. '```' → logprob: -12.394452095031738
    9. '(' → logprob: -13.519452095031738
    10. '
' → logprob: -14.144452095031738

Token 1715: ' R' (ID: 460)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -2.1008713702030946e-06
    2. ' dp' → logprob: -14.125001907348633
    3. '
' → logprob: -15.125001907348633
    4. '           ' → logprob: -15.500001907348633
    5. 'val' → logprob: -15.875001907348633
    6. '```' → logprob: -16.000001907348633
    7. '	dp' → logprob: -16.500001907348633
    8. 'tmp' → logprob: -16.500001907348633
    9. '       ' → logprob: -16.625001907348633
    10. '(dp' → logprob: -16.750001907348633

Token 1716: 'éc' (ID: 5675)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0008456025971099734
    2. 'ange' → logprob: -7.500845432281494
    3. ' dp' → logprob: -9.000845909118652
    4. '(dp' → logprob: -9.500845909118652
    5. 'for' → logprob: -10.500845909118652
    6. '	dp' → logprob: -10.875845909118652
    7. '=' → logprob: -11.500845909118652
    8. '_dp' → logprob: -11.500845909118652
    9. 'ep' → logprob: -12.625845909118652
    10. 'eturn' → logprob: -12.750845909118652

Token 1717: 'up' (ID: 817)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.01352535281330347
    2. 'eturn' → logprob: -5.138525485992432
    3. 'es' → logprob: -6.263525485992432
    4. '(dp' → logprob: -6.513525485992432
    5. 'ép' → logprob: -6.763525485992432
    6. 'és' → logprob: -7.513525485992432
    7. 'ep' → logprob: -7.888525485992432
    8. ' dp' → logprob: -8.388525009155273
    9. '_dp' → logprob: -8.388525009155273
    10. 'e' → logprob: -8.388525009155273

Token 1718: 'ère' (ID: 4346)
  Prédit: 'up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.7721275687217712
    2. 'dp' → logprob: -1.397127628326416
    3. 'uper' → logprob: -2.022127628326416
    4. 'er' → logprob: -3.022127628326416
    5. 'user' → logprob: -3.397127628326416
    6. 'u' → logprob: -3.522127628326416
    7. 'érer' → logprob: -4.022127628326416
    8. '       ' → logprob: -5.147127628326416
    9. '(dp' → logprob: -5.647127628326416
    10. '=' → logprob: -5.897127628326416

Token 1719: ' la' (ID: 557)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4307454526424408
    2. '(dp' → logprob: -1.0557454824447632
    3. '(' → logprob: -6.430745601654053
    4. ' dp' → logprob: -7.930745601654053
    5. ' (' → logprob: -10.055745124816895
    6. '(
' → logprob: -11.805745124816895
    7. '(d' → logprob: -12.555745124816895
    8. '	dp' → logprob: -12.555745124816895
    9. 'pow' → logprob: -12.680745124816895
    10. '((' → logprob: -13.555745124816895

Token 1720: ' hauteur' (ID: 72987)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.4931284487247467
    2. 'dp' → logprob: -0.9931284189224243
    3. '(' → logprob: -3.993128538131714
    4. '(prev' → logprob: -8.993128776550293
    5. 'pow' → logprob: -9.118128776550293
    6. 'prev' → logprob: -9.743128776550293
    7. 'previous' → logprob: -10.243128776550293
    8. ' dp' → logprob: -10.993128776550293
    9. '(previous' → logprob: -11.118128776550293
    10. '(pow' → logprob: -11.243128776550293

Token 1721: ' basse' (ID: 110686)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.272580623626709
    2. 'h' → logprob: -2.647580623626709
    3. 'data' → logprob: -2.772580623626709
    4. '=' → logprob: -3.772580623626709
    5. 'compressed' → logprob: -3.897580623626709
    6. ')' → logprob: -4.147580623626709
    7. 'comp' → logprob: -4.397580623626709
    8. '[h' → logprob: -4.772580623626709
    9. ']' → logprob: -5.272580623626709
    10. '```' → logprob: -6.147580623626709

Token 1722: ' correspond' (ID: 11095)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0557637214660645
    2. 'dp' → logprob: -1.3057637214660645
    3. '=' → logprob: -1.9307637214660645
    4. ' dp' → logprob: -3.0557637214660645
    5. '(dp' → logprob: -3.0557637214660645
    6. ']' → logprob: -3.5557637214660645
    7. '<|end|>' → logprob: -3.5557637214660645
    8. '[j' → logprob: -4.1807637214660645
    9. ' =' → logprob: -4.3057637214660645
    10. ',' → logprob: -5.0557637214660645

Token 1723: 'ante' (ID: 2116)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'à' → logprob: -1.2416194677352905
    2. '[j' → logprob: -1.8666194677352905
    3. 'ée' → logprob: -2.36661958694458
    4. '   ' → logprob: -2.49161958694458
    5. ' à' → logprob: -2.74161958694458
    6. 'é' → logprob: -3.24161958694458
    7. '       ' → logprob: -3.24161958694458
    8. '=' → logprob: -3.24161958694458
    9. 'a' → logprob: -3.24161958694458
    10. '           ' → logprob: -3.49161958694458

Token 1724: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6251975893974304
    2. 'dp' → logprob: -1.3751976490020752
    3. 'data' → logprob: -1.8751976490020752
    4. ' =' → logprob: -4.000197410583496
    5. '=data' → logprob: -5.125197410583496
    6. 'val' → logprob: -5.250197410583496
    7. 'height' → logprob: -5.375197410583496
    8. '[data' → logprob: -5.375197410583496
    9. 'j' → logprob: -6.000197410583496
    10. ']' → logprob: -6.250197410583496

Token 1725: ' l' (ID: 305)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -8.542423165636137e-05
    2. 'data' → logprob: -9.500085830688477
    3. ' j' → logprob: -12.375085830688477
    4. '```' → logprob: -13.500085830688477
    5. '[j' → logprob: -13.750085830688477
    6. '   ' → logprob: -13.750085830688477
    7. ')' → logprob: -14.500085830688477
    8. ']' → logprob: -14.875085830688477
    9. 'comp' → logprob: -15.000085830688477
    10. '	j' → logprob: -15.250085830688477

Token 1726: ''' (ID: 6)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.002172266598790884
    2. 'data' → logprob: -6.252172470092773
    3. '```' → logprob: -9.002172470092773
    4. '[j' → logprob: -9.752172470092773
    5. 'dj' → logprob: -11.002172470092773
    6. 'comp' → logprob: -11.877172470092773
    7. 'dp' → logprob: -12.002172470092773
    8. '`' → logprob: -12.252172470092773
    9. ']' → logprob: -12.502172470092773
    10. '_j' → logprob: -12.877172470092773

Token 1727: 'index' (ID: 2257)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -9.849109119386412e-06
    2. 'data' → logprob: -12.125009536743164
    3. '```' → logprob: -12.750009536743164
    4. ' j' → logprob: -14.375009536743164
    5. '[j' → logprob: -14.875009536743164
    6. '	j' → logprob: -16.250009536743164
    7. '`' → logprob: -16.625009536743164
    8. '_j' → logprob: -16.750009536743164
    9. '   ' → logprob: -17.125009536743164
    10. ')' → logprob: -17.125009536743164

Token 1728: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.23133519291877747
    2. '[j' → logprob: -1.606335163116455
    3. 'data' → logprob: -6.106335163116455
    4. '[data' → logprob: -6.481335163116455
    5. '```' → logprob: -6.606335163116455
    6. '[' → logprob: -8.856335639953613
    7. '=' → logprob: -9.106335639953613
    8. '=j' → logprob: -9.481335639953613
    9. ' =' → logprob: -9.606335639953613
    10. ',j' → logprob: -9.731335639953613

Token 1729: ',' (ID: 11)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.2682523727416992
    2. '[data' → logprob: -1.2682523727416992
    3. 'data' → logprob: -1.7682523727416992
    4. '=' → logprob: -2.018252372741699
    5. ']' → logprob: -2.393252372741699
    6. '=data' → logprob: -3.893252372741699
    7. ' =' → logprob: -5.143252372741699
    8. ')' → logprob: -5.393252372741699
    9. 'dp' → logprob: -6.143252372741699
    10. '[' → logprob: -6.268252372741699

Token 1730: ' et' (ID: 859)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.12933890521526337
    2. ' dp' → logprob: -2.2543389797210693
    3. 'val' → logprob: -4.37933874130249
    4. '               ' → logprob: -6.25433874130249
    5. ' val' → logprob: -7.37933874130249
    6. 'v' → logprob: -7.87933874130249
    7. 'value' → logprob: -8.004339218139648
    8. '=' → logprob: -9.004339218139648
    9. 'height' → logprob: -10.129339218139648
    10. 'diff' → logprob: -10.254339218139648

Token 1731: ' la' (ID: 557)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2586992681026459
    2. 'val' → logprob: -1.7586992979049683
    3. 'v' → logprob: -4.258699417114258
    4. 'diff' → logprob: -4.383699417114258
    5. 'value' → logprob: -5.508699417114258
    6. ' dp' → logprob: -5.883699417114258
    7. 'data' → logprob: -5.883699417114258
    8. '#' → logprob: -5.883699417114258
    9. 'd' → logprob: -6.383699417114258
    10. 'x' → logprob: -6.383699417114258

Token 1732: ' prochaine' (ID: 78876)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.49714240431785583
    2. 'dp' → logprob: -1.2471424341201782
    3. 'value' → logprob: -3.3721423149108887
    4. 'ha' → logprob: -3.3721423149108887
    5. 'data' → logprob: -3.9971423149108887
    6. 'diff' → logprob: -4.622142314910889
    7. 'v' → logprob: -6.747142314910889
    8. 'h' → logprob: -6.872142314910889
    9. 'tmp' → logprob: -7.122142314910889
    10. 'j' → logprob: -7.497142314910889

Token 1733: ' hauteur' (ID: 72987)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.0537697076797485
    2. 'ha' → logprob: -1.4287697076797485
    3. 'data' → logprob: -2.428769588470459
    4. ')' → logprob: -2.428769588470459
    5. 'token' → logprob: -2.678769588470459
    6. 'j' → logprob: -3.053769588470459
    7. 'height' → logprob: -3.178769588470459
    8. 'h' → logprob: -4.303769588470459
    9. '```' → logprob: -4.928769588470459
    10. '[' → logprob: -5.053769588470459

Token 1734: ' haute' (ID: 49646)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7587931752204895
    2. ' =' → logprob: -1.2587931156158447
    3. '[j' → logprob: -2.3837931156158447
    4. ']' → logprob: -2.8837931156158447
    5. ')' → logprob: -3.3837931156158447
    6. '```' → logprob: -3.3837931156158447
    7. 'data' → logprob: -4.508793354034424
    8. ']=' → logprob: -5.758793354034424
    9. '[data' → logprob: -5.758793354034424
    10. '=j' → logprob: -6.508793354034424

Token 1735: '.
' (ID: 558)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.29779598116874695
    2. ')' → logprob: -2.4227960109710693
    3. ']' → logprob: -3.0477960109710693
    4. ':' → logprob: -3.6727960109710693
    5. '```' → logprob: -3.7977960109710693
    6. 'j' → logprob: -4.54779577255249
    7. '):' → logprob: -5.04779577255249
    8. ',' → logprob: -5.29779577255249
    9. '[' → logprob: -5.29779577255249
    10. '.' → logprob: -5.42279577255249

Token 1736: '               ' (ID: 506)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2507249712944031
    2. ' dp' → logprob: -2.000725030899048
    3. 'data' → logprob: -3.375725030899048
    4. '```' → logprob: -4.125724792480469
    5. '               ' → logprob: -4.250724792480469
    6. '=' → logprob: -4.875724792480469
    7. ' data' → logprob: -5.375724792480469
    8. '                   ' → logprob: -6.125724792480469
    9. ' =' → logprob: -6.500724792480469
    10. '           ' → logprob: -6.500724792480469

Token 1737: ' low' (ID: 4465)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.16703329980373383
    2. 'data' → logprob: -2.1670331954956055
    3. ' dp' → logprob: -3.5420331954956055
    4. ' data' → logprob: -5.1670331954956055
    5. '```' → logprob: -7.0420331954956055
    6. 'h' → logprob: -7.4170331954956055
    7. '               ' → logprob: -7.5420331954956055
    8. 'for' → logprob: -7.7920331954956055
    9. '   ' → logprob: -7.9170331954956055
    10. '       ' → logprob: -8.167033195495605

Token 1738: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16991238296031952
    2. '=' → logprob: -2.294912338256836
    3. '_height' → logprob: -3.419912338256836
    4. '_val' → logprob: -4.544912338256836
    5. ']' → logprob: -4.669912338256836
    6. '_value' → logprob: -7.294912338256836
    7. '_h' → logprob: -7.419912338256836
    8. 'height' → logprob: -7.794912338256836
    9. '_j' → logprob: -8.169912338256836
    10. '_' → logprob: -8.294912338256836

Token 1739: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.007916420698165894
    2. ' data' → logprob: -5.382916450500488
    3. 'h' → logprob: -5.882916450500488
    4. 'comp' → logprob: -7.882916450500488
    5. '   ' → logprob: -9.757916450500488
    6. ' h' → logprob: -10.632916450500488
    7. 'H' → logprob: -11.757916450500488
    8. 'j' → logprob: -12.445416450500488
    9. ' ' → logprob: -12.632916450500488
    10. 'd' → logprob: -12.820416450500488

Token 1740: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -9.729906196298543e-06
    2. 'j' → logprob: -11.750009536743164
    3. '[' → logprob: -13.500009536743164
    4. '[data' → logprob: -15.250009536743164
    5. '```' → logprob: -17.250009536743164
    6. '   ' → logprob: -17.500009536743164
    7. '[h' → logprob: -17.500009536743164
    8. 'data' → logprob: -18.000009536743164
    9. '(j' → logprob: -18.000009536743164
    10. '[i' → logprob: -18.000009536743164

Token 1741: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.16052672266960144
    2. ']' → logprob: -1.9105267524719238
    3. ']
' → logprob: -8.285526275634766
    4. '-' → logprob: -10.410526275634766
    5. ' -' → logprob: -11.785526275634766
    6. '+' → logprob: -12.285526275634766
    7. ']

' → logprob: -12.660526275634766
    8. ']-' → logprob: -13.285526275634766
    9. ' ]
' → logprob: -13.535526275634766
    10. ']+' → logprob: -14.285526275634766

Token 1742: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2745024859905243
    2. '=' → logprob: -3.1495025157928467
    3. '+' → logprob: -3.3995025157928467
    4. ' +' → logprob: -3.5245025157928467
    5. ' =' → logprob: -3.6495025157928467
    6. '           ' → logprob: -3.6495025157928467
    7. '
' → logprob: -4.024502277374268
    8. '                   ' → logprob: -4.274502277374268
    9. '*' → logprob: -4.649502277374268
    10. '```' → logprob: -4.774502277374268

Token 1743: ' up' (ID: 869)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'high' → logprob: -0.08076626062393188
    2. 'h' → logprob: -3.455766201019287
    3. ' high' → logprob: -4.330766201019287
    4. 'next' → logprob: -4.455766201019287
    5. '       ' → logprob: -4.955766201019287
    6. '               ' → logprob: -5.580766201019287
    7. '           ' → logprob: -6.205766201019287
    8. 'pow' → logprob: -6.330766201019287
    9. ' h' → logprob: -6.830766201019287
    10. 'id' → logprob: -7.330766201019287

Token 1744: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06534218788146973
    2. '=' → logprob: -2.8153421878814697
    3. ']' → logprob: -5.815341949462891
    4. '+' → logprob: -8.81534194946289
    5. ')' → logprob: -9.31534194946289
    6. '<|end|>' → logprob: -10.31534194946289
    7. ' +' → logprob: -10.56534194946289
    8. 'data' → logprob: -10.81534194946289
    9. ']=' → logprob: -11.56534194946289
    10. '-' → logprob: -12.31534194946289

Token 1745: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.1024971529841423
    2. 'h' → logprob: -2.352497100830078
    3. ' data' → logprob: -6.477497100830078
    4. '   ' → logprob: -7.727497100830078
    5. ' h' → logprob: -8.727497100830078
    6. '       ' → logprob: -10.227497100830078
    7. 'comp' → logprob: -10.727497100830078
    8. '  ' → logprob: -11.227497100830078
    9. ' ' → logprob: -11.477497100830078
    10. '    ' → logprob: -11.477497100830078

Token 1746: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -2.570319702499546e-05
    2. 'j' → logprob: -10.875025749206543
    3. '[h' → logprob: -12.000025749206543
    4. '[' → logprob: -14.875025749206543
    5. '[i' → logprob: -16.375024795532227
    6. '```' → logprob: -17.750024795532227
    7. '	j' → logprob: -18.000024795532227
    8. 'h' → logprob: -18.875024795532227
    9. '_j' → logprob: -19.250024795532227
    10. '(j' → logprob: -19.250024795532227

Token 1747: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001987044233828783
    2. ' +' → logprob: -6.251986980438232
    3. ']' → logprob: -9.87698745727539
    4. '+j' → logprob: -13.25198745727539
    5. '+
' → logprob: -13.62698745727539
    6. ']+' → logprob: -13.62698745727539
    7. '+]' → logprob: -14.00198745727539
    8. '-' → logprob: -14.50198745727539
    9. '   ' → logprob: -14.75198745727539
    10. '1' → logprob: -15.00198745727539

Token 1748: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '```' → logprob: -19.375
    4. '   ' → logprob: -20.625
    5. '0' → logprob: -21.375
    6. '+' → logprob: -21.375
    7. '2' → logprob: -22.375
    8. ']' → logprob: -22.5
    9. '１' → logprob: -22.625
    10. '  ' → logprob: -23.1875

Token 1749: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '```' → logprob: -20.125
    4. '0' → logprob: -20.625
    5. '2' → logprob: -21.125
    6. '
' → logprob: -21.25
    7. ']' → logprob: -21.375
    8. '１' → logprob: -21.375
    9. '+' → logprob: -21.625
    10. '   ' → logprob: -22.125

Token 1750: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09188622236251831
    2. ')' → logprob: -2.466886281967163
    3. '<|end|>' → logprob: -6.341886043548584
    4. ']
' → logprob: -7.216886043548584
    5. '```' → logprob: -8.341886520385742
    6. ')
' → logprob: -10.216886520385742
    7. '<|end|>' → logprob: -10.716886520385742
    8. '   ' → logprob: -10.966886520385742
    9. '}' → logprob: -10.966886520385742
    10. '])' → logprob: -11.091886520385742

Token 1751: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05441206693649292
    2. '```' → logprob: -4.429411888122559
    3. '   ' → logprob: -4.679411888122559
    4. '       ' → logprob: -4.804411888122559
    5. '<|end|>' → logprob: -4.804411888122559
    6. '=' → logprob: -5.679411888122559
    7. ':' → logprob: -5.929411888122559
    8. '#' → logprob: -6.429411888122559
    9. '           ' → logprob: -6.554411888122559
    10. '),' → logprob: -6.929411888122559

Token 1752: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.869639476761222e-05
    2. ' ' → logprob: -10.500039100646973
    3. '<|end|>' → logprob: -11.875039100646973
    4. 'low' → logprob: -12.500039100646973
    5. '2' → logprob: -16.125038146972656
    6. ' low' → logprob: -16.250038146972656
    7. '...' → logprob: -17.000038146972656
    8. '<|end|>' → logprob: -17.250038146972656
    9. '=' → logprob: -17.375038146972656
    10. ')' → logprob: -17.375038146972656

Token 1753: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.534558552724775e-05
    2. 'low' → logprob: -10.750025749206543
    3. ' ' → logprob: -12.875025749206543
    4. '2' → logprob: -14.250025749206543
    5. '(low' → logprob: -16.000024795532227
    6. '0' → logprob: -16.375024795532227
    7. 'pow' → logprob: -16.500024795532227
    8. ' low' → logprob: -16.750024795532227
    9. '(' → logprob: -16.750024795532227
    10. '<|end|>' → logprob: -16.750024795532227

Token 1754: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10297862440347672
    2. ':' → logprob: -3.1029787063598633
    3. '<|end|>' → logprob: -3.3529787063598633
    4. '   ' → logprob: -5.102978706359863
    5. '```' → logprob: -5.727978706359863
    6. '#' → logprob: -6.227978706359863
    7. '           ' → logprob: -6.852978706359863
    8. '       ' → logprob: -7.102978706359863
    9. ',' → logprob: -7.477978706359863
    10. '.' → logprob: -7.602978706359863

Token 1755: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.24537938833236694
    2. '```' → logprob: -1.7453794479370117
    3. ')' → logprob: -3.9953794479370117
    4. '       ' → logprob: -5.120379447937012
    5. '           ' → logprob: -5.245379447937012
    6. '                   ' → logprob: -5.495379447937012
    7. '<|end|>' → logprob: -5.495379447937012
    8. '):
' → logprob: -6.870379447937012
    9. '``' → logprob: -6.995379447937012
    10. '   ' → logprob: -7.620379447937012

Token 1756: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.007382997777312994
    2. '               ' → logprob: -6.007382869720459
    3. 'if' → logprob: -6.507382869720459
    4. ' dp' → logprob: -7.132382869720459
    5. 'diff' → logprob: -7.257382869720459
    6. 'for' → logprob: -7.382382869720459
    7. '```' → logprob: -7.382382869720459
    8. '           ' → logprob: -8.632383346557617
    9. 'pow' → logprob: -8.882383346557617
    10. '                   ' → logprob: -9.132383346557617

Token 1757: ' On' (ID: 2160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.018018240109086037
    2. 'for' → logprob: -4.6430182456970215
    3. 'val' → logprob: -5.3930182456970215
    4. 'if' → logprob: -6.2680182456970215
    5. 'temp' → logprob: -7.2680182456970215
    6. 'diff' → logprob: -8.143017768859863
    7. 'tmp' → logprob: -8.143017768859863
    8. 'res' → logprob: -8.893017768859863
    9. 'mul' → logprob: -9.643017768859863
    10. '       ' → logprob: -10.518017768859863

Token 1758: ' addition' (ID: 5856)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.030393995344638824
    2. 'for' → logprob: -3.6553940773010254
    3. ' dp' → logprob: -5.655394077301025
    4. ' for' → logprob: -7.905394077301025
    5. 'if' → logprob: -9.905393600463867
    6. '#' → logprob: -9.905393600463867
    7. '           ' → logprob: -10.155393600463867
    8. '       ' → logprob: -11.280393600463867
    9. 'tmp' → logprob: -11.530393600463867
    10. '(dp' → logprob: -11.655393600463867

Token 1759: 'ne' (ID: 611)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8112446665763855
    2. '+=' → logprob: -0.8112446665763855
    3. ' +=' → logprob: -2.4362447261810303
    4. ' =' → logprob: -5.436244487762451
    5. '           ' → logprob: -5.936244487762451
    6. 'for' → logprob: -6.061244487762451
    7. '               ' → logprob: -6.186244487762451
    8. 'ne' → logprob: -6.186244487762451
    9. ']+=' → logprob: -6.686244487762451
    10. 's' → logprob: -6.811244487762451

Token 1760: ' au' (ID: 2791)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5775659680366516
    2. '(dp' → logprob: -0.8275659680366516
    3. ' dp' → logprob: -6.827566146850586
    4. ' (' → logprob: -7.702566146850586
    5. '(' → logprob: -9.452566146850586
    6. '	dp' → logprob: -12.327566146850586
    7. '((' → logprob: -13.452566146850586
    8. '               ' → logprob: -13.702566146850586
    9. '_dp' → logprob: -13.827566146850586
    10. '                   ' → logprob: -14.077566146850586

Token 1761: ' nombre' (ID: 9733)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0018692599842324853
    2. '(dp' → logprob: -6.501869201660156
    3. '(' → logprob: -8.251869201660156
    4. ' dp' → logprob: -9.251869201660156
    5. '((' → logprob: -12.501869201660156
    6. '(
' → logprob: -13.126869201660156
    7. ' (' → logprob: -13.501869201660156
    8. 'for' → logprob: -14.251869201660156
    9. '(j' → logprob: -14.751869201660156
    10. '	dp' → logprob: -14.876869201660156

Token 1762: ' de' (ID: 334)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.10720593482255936
    2. 'dp' → logprob: -2.482205867767334
    3. '               ' → logprob: -5.107205867767334
    4. '(' → logprob: -5.107205867767334
    5. '                   ' → logprob: -6.607205867767334
    6. '           ' → logprob: -7.232205867767334
    7. '=' → logprob: -7.857205867767334
    8. 'for' → logprob: -7.857205867767334
    9. ')' → logprob: -7.857205867767334
    10. '[j' → logprob: -8.107206344604492

Token 1763: ' man' (ID: 873)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00034392563975416124
    2. '(dp' → logprob: -8.125344276428223
    3. 'j' → logprob: -11.250344276428223
    4. '(' → logprob: -11.625344276428223
    5. 'for' → logprob: -11.625344276428223
    6. ' dp' → logprob: -11.750344276428223
    7. ')' → logprob: -13.125344276428223
    8. '```' → logprob: -13.875344276428223
    9. '	dp' → logprob: -13.875344276428223
    10. ']' → logprob: -14.250344276428223

Token 1764: 'ières' (ID: 44864)
  Prédit: 'ières'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ières' → logprob: -0.14447784423828125
    2. 'dp' → logprob: -2.0194778442382812
    3. 'ques' → logprob: -7.519477844238281
    4. 'ière' → logprob: -7.894477844238281
    5. '(dp' → logprob: -7.894477844238281
    6. ' dp' → logprob: -8.894477844238281
    7. 'que' → logprob: -9.644477844238281
    8. '```' → logprob: -9.894477844238281
    9. 'ieres' → logprob: -10.019477844238281
    10. '_dp' → logprob: -10.144477844238281

Token 1765: ' d' (ID: 272)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.022894496098160744
    2. '(dp' → logprob: -4.022894382476807
    3. '               ' → logprob: -6.272894382476807
    4. ' dp' → logprob: -6.272894382476807
    5. '                   ' → logprob: -7.147894382476807
    6. ' (' → logprob: -10.147894859313965
    7. '                       ' → logprob: -10.647894859313965
    8. '```' → logprob: -10.772894859313965
    9. '           ' → logprob: -11.022894859313965
    10. '	dp' → logprob: -11.272894859313965

Token 1766: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0925118550658226
    2. ''arr' → logprob: -3.3425118923187256
    3. 'arr' → logprob: -3.9675118923187256
    4. ''obtenir' → logprob: -4.4675116539001465
    5. 'j' → logprob: -4.9675116539001465
    6. 'é' → logprob: -5.4675116539001465
    7. 'dp' → logprob: -6.5925116539001465
    8. '[j' → logprob: -6.9675116539001465
    9. ''avoir' → logprob: -6.9675116539001465
    10. ''acc' → logprob: -7.0925116539001465

Token 1767: 'atte' (ID: 23975)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5496601462364197
    2. 'dp' → logprob: -1.2996602058410645
    3. 'p' → logprob: -2.6746602058410645
    4. '(dp' → logprob: -4.2996602058410645
    5. 'e' → logprob: -4.4246602058410645
    6. ''obtenir' → logprob: -4.7996602058410645
    7. 'arr' → logprob: -5.1746602058410645
    8. 'éc' → logprob: -5.2996602058410645
    9. 'éta' → logprob: -5.4246602058410645
    10. ' dp' → logprob: -5.9246602058410645

Token 1768: 'indre' (ID: 28945)
  Prédit: 'indre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indre' → logprob: -0.017131909728050232
    2. 'te' → logprob: -4.767131805419922
    3. 'nd' → logprob: -5.767131805419922
    4. 'i' → logprob: -6.892131805419922
    5. 'nir' → logprob: -7.017131805419922
    6. 'endre' → logprob: -7.642131805419922
    7. 'enir' → logprob: -7.642131805419922
    8. 'a' → logprob: -8.142131805419922
    9. 'ind' → logprob: -8.267131805419922
    10. 'in' → logprob: -8.267131805419922

Token 1769: ' l' (ID: 305)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00312887504696846
    2. '(dp' → logprob: -5.878129005432129
    3. '(j' → logprob: -9.378129005432129
    4. '(' → logprob: -9.628129005432129
    5. '(i' → logprob: -9.753129005432129
    6. ' dp' → logprob: -9.753129005432129
    7. 'j' → logprob: -10.753129005432129
    8. '   ' → logprob: -11.878129005432129
    9. ' (' → logprob: -12.503129005432129
    10. '	dp' → logprob: -12.628129005432129

Token 1770: ''état' (ID: 116357)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.05827736854553223
    2. 'j' → logprob: -3.1832773685455322
    3. '[j' → logprob: -5.183277130126953
    4. 'i' → logprob: -5.933277130126953
    5. '[i' → logprob: -6.308277130126953
    6. ''état' → logprob: -6.433277130126953
    7. '```' → logprob: -6.808277130126953
    8. '_dp' → logprob: -7.183277130126953
    9. ' dp' → logprob: -7.308277130126953
    10. 'e' → logprob: -8.808277130126953

Token 1771: ' '' (ID: 461)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0037853471003472805
    2. '[j' → logprob: -6.253785133361816
    3. '(dp' → logprob: -6.503785133361816
    4. ' dp' → logprob: -9.253785133361816
    5. '```' → logprob: -9.878785133361816
    6. 'j' → logprob: -10.003785133361816
    7. '               ' → logprob: -10.378785133361816
    8. '                   ' → logprob: -10.378785133361816
    9. '[i' → logprob: -11.003785133361816
    10. '(j' → logprob: -11.128785133361816

Token 1772: 'id' (ID: 315)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.007165000773966312
    2. 'i' → logprob: -5.50716495513916
    3. 'dp' → logprob: -6.00716495513916
    4. 'low' → logprob: -8.38216495513916
    5. '[j' → logprob: -9.63216495513916
    6. '   ' → logprob: -9.75716495513916
    7. 'id' → logprob: -9.88216495513916
    8. ' j' → logprob: -10.13216495513916
    9. '[i' → logprob: -10.25716495513916
    10. '```' → logprob: -10.50716495513916

Token 1773: '',' (ID: 787)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.5577473044395447
    2. ''' → logprob: -1.3077473640441895
    3. ']'' → logprob: -2.3077473640441895
    4. 'j' → logprob: -3.3077473640441895
    5. ']' → logprob: -5.0577473640441895
    6. '[i' → logprob: -5.4327473640441895
    7. '+' → logprob: -5.6827473640441895
    8. '][' → logprob: -6.6827473640441895
    9. '',' → logprob: -7.3077473640441895
    10. ' j' → logprob: -7.3077473640441895

Token 1774: ' toutes' (ID: 17502)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.13552090525627136
    2. '(dp' → logprob: -2.8855209350585938
    3. ' dp' → logprob: -2.8855209350585938
    4. '(' → logprob: -5.010520935058594
    5. '                   ' → logprob: -5.760520935058594
    6. ' (' → logprob: -6.260520935058594
    7. ')' → logprob: -6.885520935058594
    8. '```' → logprob: -7.260520935058594
    9. 'pow' → logprob: -8.010520935058594
    10. '               ' → logprob: -8.010520935058594

Token 1775: ' les' (ID: 1341)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.14215262234210968
    2. '(dp' → logprob: -2.1421525478363037
    3. '(' → logprob: -5.267152786254883
    4. ')' → logprob: -6.142152786254883
    5. ' dp' → logprob: -6.642152786254883
    6. 'les' → logprob: -6.642152786254883
    7. 'j' → logprob: -6.767152786254883
    8. 'poss' → logprob: -7.017152786254883
    9. ']' → logprob: -7.642152786254883
    10. 'pow' → logprob: -7.892152786254883

Token 1776: ' comb' (ID: 4134)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.21122942864894867
    2. '(dp' → logprob: -2.4612293243408203
    3. '(' → logprob: -3.4612293243408203
    4. 'poss' → logprob: -3.5862293243408203
    5. 'man' → logprob: -3.8362293243408203
    6. ' dp' → logprob: -5.21122932434082
    7. ' façons' → logprob: -5.71122932434082
    8. ')' → logprob: -5.96122932434082
    9. 'ways' → logprob: -5.96122932434082
    10. '(j' → logprob: -6.71122932434082

Token 1777: 'inais' (ID: 42744)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.11149197071790695
    2. '(dp' → logprob: -3.3614919185638428
    3. 'inations' → logprob: -3.4864919185638428
    4. '+' → logprob: -3.8614919185638428
    5. '_dp' → logprob: -4.861492156982422
    6. '[j' → logprob: -5.486492156982422
    7. 'ination' → logprob: -6.111492156982422
    8. ' dp' → logprob: -6.361492156982422
    9. '	dp' → logprob: -7.236492156982422
    10. '```' → logprob: -7.736492156982422

Token 1778: 'ons' (ID: 1808)
  Prédit: 'sons'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sons' → logprob: -0.7329462170600891
    2. 't' → logprob: -1.7329461574554443
    3. 's' → logprob: -2.4829461574554443
    4. 'ais' → logprob: -2.6079461574554443
    5. 'ations' → logprob: -2.8579461574554443
    6. 'ons' → logprob: -3.2329461574554443
    7. 'for' → logprob: -4.232946395874023
    8. 'j' → logprob: -4.732946395874023
    9. 'n' → logprob: -4.982946395874023
    10. 'mes' → logprob: -4.982946395874023

Token 1779: ' issues' (ID: 6086)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7262845635414124
    2. '(dp' → logprob: -1.9762845039367676
    3. '```' → logprob: -2.6012845039367676
    4. ' dp' → logprob: -2.6012845039367676
    5. '                   ' → logprob: -2.9762845039367676
    6. ' +=' → logprob: -3.1012845039367676
    7. '               ' → logprob: -3.3512845039367676
    8. '+' → logprob: -4.101284503936768
    9. '[j' → logprob: -4.101284503936768
    10. ')' → logprob: -4.601284503936768

Token 1780: ' de' (ID: 334)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.0783369541168213
    2. '(dp' → logprob: -1.3283369541168213
    3. 'dp' → logprob: -2.7033369541168213
    4. '               ' → logprob: -2.7033369541168213
    5. 'de' → logprob: -2.8283369541168213
    6. 'of' → logprob: -3.4533369541168213
    7. '                   ' → logprob: -3.4533369541168213
    8. ' of' → logprob: -3.5783369541168213
    9. '[j' → logprob: -3.7033369541168213
    10. '(j' → logprob: -4.203336715698242

Token 1781: ' j' (ID: 441)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06010671705007553
    2. '(dp' → logprob: -3.6851067543029785
    3. '(' → logprob: -4.3101067543029785
    4. 'low' → logprob: -4.6851067543029785
    5. '(low' → logprob: -5.8101067543029785
    6. ' dp' → logprob: -5.9351067543029785
    7. '(j' → logprob: -7.4351067543029785
    8. 'up' → logprob: -7.4351067543029785
    9. 'j' → logprob: -7.5601067543029785
    10. 'range' → logprob: -7.5601067543029785

Token 1782: '.
' (ID: 558)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14663241803646088
    2. ']+=' → logprob: -2.896632432937622
    3. '+' → logprob: -3.271632432937622
    4. '<|end|>' → logprob: -4.146632194519043
    5. ']+' → logprob: -5.271632194519043
    6. ' +=' → logprob: -5.521632194519043
    7. ' +' → logprob: -5.896632194519043
    8. '.' → logprob: -6.021632194519043
    9. '[j' → logprob: -6.396632194519043
    10. ':' → logprob: -6.521632194519043

Token 1783: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.30353376269340515
    2. 'dp' → logprob: -1.8035337924957275
    3. '```' → logprob: -2.9285337924957275
    4. '+' → logprob: -3.9285337924957275
    5. '                   ' → logprob: -4.303533554077148
    6. ' dp' → logprob: -5.678533554077148
    7. '=' → logprob: -6.303533554077148
    8. '           ' → logprob: -7.178533554077148
    9. '                       ' → logprob: -7.303533554077148
    10. '(dp' → logprob: -7.428533554077148

Token 1784: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00037800322752445936
    2. '               ' → logprob: -8.375377655029297
    3. ' dp' → logprob: -9.250377655029297
    4. '                   ' → logprob: -10.750377655029297
    5. '```' → logprob: -10.750377655029297
    6. '(dp' → logprob: -12.750377655029297
    7. 'for' → logprob: -13.125377655029297
    8. '	dp' → logprob: -13.500377655029297
    9. '_dp' → logprob: -13.875377655029297
    10. '           ' → logprob: -14.500377655029297

Token 1785: ' La' (ID: 3038)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0017593137454241514
    2. '               ' → logprob: -6.5017595291137695
    3. ' dp' → logprob: -9.00175952911377
    4. '```' → logprob: -9.75175952911377
    5. 'for' → logprob: -10.00175952911377
    6. '                   ' → logprob: -10.75175952911377
    7. '(dp' → logprob: -13.12675952911377
    8. '                       ' → logprob: -13.37675952911377
    9. '``' → logprob: -13.50175952911377
    10. '	dp' → logprob: -13.50175952911377

Token 1786: ' formule' (ID: 84316)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0010035126470029354
    2. 'for' → logprob: -7.876003742218018
    3. ' dp' → logprob: -8.50100326538086
    4. 'diff' → logprob: -8.87600326538086
    5. 'pow' → logprob: -10.25100326538086
    6. '#' → logprob: -10.50100326538086
    7. 'low' → logprob: -11.00100326538086
    8. 'value' → logprob: -11.00100326538086
    9. '           ' → logprob: -11.37600326538086
    10. 'val' → logprob: -11.37600326538086

Token 1787: ' utilise' (ID: 70283)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.021906783804297447
    2. ' dp' → logprob: -4.521906852722168
    3. '=' → logprob: -5.271906852722168
    4. '               ' → logprob: -6.396906852722168
    5. '(dp' → logprob: -6.771906852722168
    6. '+=' → logprob: -7.021906852722168
    7. ' =' → logprob: -7.271906852722168
    8. '                   ' → logprob: -7.896906852722168
    9. ' +=' → logprob: -8.396906852722168
    10. '           ' → logprob: -9.146906852722168

Token 1788: ' les' (ID: 1341)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -1.1948490142822266
    2. '(' → logprob: -1.4448490142822266
    3. 'pow' → logprob: -1.4448490142822266
    4. 'dp' → logprob: -1.9448490142822266
    5. '(pow' → logprob: -2.6948490142822266
    6. '2' → logprob: -4.444849014282227
    7. ' (' → logprob: -6.694849014282227
    8. '((' → logprob: -7.194849014282227
    9. ' dp' → logprob: -7.819849014282227
    10. ' pow' → logprob: -8.194849014282227

Token 1789: ' puiss' (ID: 102546)
  Prédit: '(pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(pow' → logprob: -0.5103651285171509
    2. 'pow' → logprob: -1.3853651285171509
    3. '(' → logprob: -2.1353650093078613
    4. '(dp' → logprob: -4.260365009307861
    5. '(up' → logprob: -5.135365009307861
    6. 'up' → logprob: -5.885365009307861
    7. 'dp' → logprob: -6.135365009307861
    8. '(
' → logprob: -6.385365009307861
    9. '((' → logprob: -6.510365009307861
    10. '2' → logprob: -6.885365009307861

Token 1790: 'ances' (ID: 3528)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.22973790764808655
    2. 'ow' → logprob: -2.6047379970550537
    3. '**' → logprob: -3.3547379970550537
    4. '(' → logprob: -3.3547379970550537
    5. 'ance' → logprob: -4.104737758636475
    6. 'e' → logprob: -4.604737758636475
    7. 'of' → logprob: -5.229737758636475
    8. ')' → logprob: -5.479737758636475
    9. 'o' → logprob: -5.479737758636475
    10. 'es' → logprob: -5.979737758636475

Token 1791: ' pour' (ID: 1930)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3543774485588074
    2. 'de' → logprob: -1.4793775081634521
    3. 'of' → logprob: -3.479377508163452
    4. '2' → logprob: -3.979377508163452
    5. '```' → logprob: -4.479377269744873
    6. ')' → logprob: -5.979377269744873
    7. '(
' → logprob: -6.229377269744873
    8. ' de' → logprob: -6.979377269744873
    9. 'pow' → logprob: -7.104377269744873
    10. '(pow' → logprob: -7.479377269744873

Token 1792: ' compter' (ID: 81694)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -1.1924031972885132
    2. 'calcul' → logprob: -1.5674031972885132
    3. '(j' → logprob: -2.1924033164978027
    4. '(pow' → logprob: -2.3174033164978027
    5. '(' → logprob: -2.6924033164978027
    6. '(dp' → logprob: -2.8174033164978027
    7. '(p' → logprob: -3.6924033164978027
    8. '((' → logprob: -3.9424033164978027
    9. '```' → logprob: -4.317403316497803
    10. '2' → logprob: -4.442403316497803

Token 1793: ' les' (ID: 1341)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16827940940856934
    2. '2' → logprob: -2.5432794094085693
    3. 'pow' → logprob: -3.2932794094085693
    4. '(pow' → logprob: -4.418279647827148
    5. '               ' → logprob: -5.043279647827148
    6. 'les' → logprob: -5.793279647827148
    7. 'de' → logprob: -5.918279647827148
    8. '```' → logprob: -6.293279647827148
    9. '((' → logprob: -6.418279647827148
    10. '   ' → logprob: -6.668279647827148

Token 1794: ' comb' (ID: 4134)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5229078531265259
    2. 'diff' → logprob: -2.1479077339172363
    3. 'up' → logprob: -2.8979077339172363
    4. '(j' → logprob: -3.2729077339172363
    5. 'comb' → logprob: -3.3979077339172363
    6. '(up' → logprob: -3.6479077339172363
    7. 'poss' → logprob: -3.6479077339172363
    8. '(diff' → logprob: -4.022907733917236
    9. '2' → logprob: -4.147907733917236
    10. ' (' → logprob: -4.272907733917236

Token 1795: 'inais' (ID: 42744)
  Prédit: 'inais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inais' → logprob: -0.0032696877606213093
    2. 'ina' → logprob: -6.253269672393799
    3. 'inations' → logprob: -7.878269672393799
    4. 'in' → logprob: -8.003270149230957
    5. 'i' → logprob: -8.878270149230957
    6. '```' → logprob: -9.503270149230957
    7. '#' → logprob: -9.878270149230957
    8. '</' → logprob: -10.003270149230957
    9. '{' → logprob: -10.253270149230957
    10. '``' → logprob: -10.628270149230957

Token 1796: 'ons' (ID: 1808)
  Prédit: 'ais'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ais' → logprob: -0.4009518027305603
    2. 't' → logprob: -1.775951862335205
    3. 'sons' → logprob: -2.900951862335205
    4. 'ons' → logprob: -3.275951862335205
    5. 's' → logprob: -3.775951862335205
    6. 'ations' → logprob: -4.150951862335205
    7. '#' → logprob: -4.400951862335205
    8. '```' → logprob: -4.650951862335205
    9. 'a' → logprob: -6.650951862335205
    10. 'asons' → logprob: -7.150951862335205

Token 1797: ',' (ID: 11)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -1.1450188159942627
    2. ')' → logprob: -1.5200188159942627
    3. '               ' → logprob: -2.2700188159942627
    4. '2' → logprob: -2.8950188159942627
    5. '(' → logprob: -3.1450188159942627
    6. ',' → logprob: -3.2700188159942627
    7. '                   ' → logprob: -3.5200188159942627
    8. '```' → logprob: -4.020018577575684
    9. '^' → logprob: -4.270018577575684
    10. '           ' → logprob: -4.520018577575684

Token 1798: ' et' (ID: 859)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.022383449599146843
    2. '               ' → logprob: -5.022383213043213
    3. ' dp' → logprob: -5.397383213043213
    4. '                   ' → logprob: -5.397383213043213
    5. 'pow' → logprob: -5.897383213043213
    6. '           ' → logprob: -7.522383213043213
    7. '(dp' → logprob: -7.522383213043213
    8. ')' → logprob: -7.897383213043213
    9. '                       ' → logprob: -7.897383213043213
    10. '2' → logprob: -7.897383213043213

Token 1799: ' sou' (ID: 4069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2463880479335785
    2. '(dp' → logprob: -1.8713880777359009
    3. '(' → logprob: -3.9963879585266113
    4. 'pow' → logprob: -3.9963879585266113
    5. ' dp' → logprob: -5.371387958526611
    6. '           ' → logprob: -5.371387958526611
    7. '               ' → logprob: -6.121387958526611
    8. '                   ' → logprob: -6.371387958526611
    9. 'continue' → logprob: -6.621387958526611
    10. '((' → logprob: -6.871387958526611

Token 1800: 'stra' (ID: 14867)
  Prédit: 'stra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stra' → logprob: -0.23810355365276337
    2. 'tra' → logprob: -2.2381036281585693
    3. 'stract' → logprob: -3.1131036281585693
    4. 'str' → logprob: -3.4881036281585693
    5. 'b' → logprob: -4.98810338973999
    6. 'tract' → logprob: -5.23810338973999
    7. 't' → logprob: -5.61310338973999
    8. 'tr' → logprob: -5.86310338973999
    9. '#' → logprob: -6.48810338973999
    10. 'pl' → logprob: -6.48810338973999

Token 1801: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.7597814798355103
    2. 'ct' → logprob: -1.0097814798355103
    3. 't' → logprob: -3.5097813606262207
    4. '(' → logprob: -4.009781360626221
    5. ')' → logprob: -4.134781360626221
    6. '}' → logprob: -4.134781360626221
    7. '=' → logprob: -4.759781360626221
    8. '```' → logprob: -4.759781360626221
    9. '   ' → logprob: -5.009781360626221
    10. 'is' → logprob: -5.447281360626221

Token 1802: ' les' (ID: 1341)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07373794168233871
    2. '(' → logprob: -3.323737859725952
    3. 'pow' → logprob: -3.573737859725952
    4. '(pow' → logprob: -5.948738098144531
    5. '```' → logprob: -6.073738098144531
    6. '2' → logprob: -7.573738098144531
    7. '((' → logprob: -7.948738098144531
    8. '(
' → logprob: -8.698738098144531
    9. '                   ' → logprob: -8.823738098144531
    10. '(p' → logprob: -9.073738098144531

Token 1803: ' imposs' (ID: 66138)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.625968337059021
    2. 'pow' → logprob: -1.375968337059021
    3. '(' → logprob: -2.6259684562683105
    4. ')' → logprob: -3.1259684562683105
    5. '2' → logprob: -3.3759684562683105
    6. '(
' → logprob: -4.6259684562683105
    7. 'de' → logprob: -5.0009684562683105
    8. '(pow' → logprob: -5.2509684562683105
    9. '((' → logprob: -5.5009684562683105
    10. 'dp' → logprob: -5.5009684562683105

Token 1804: 'ibles' (ID: 12234)
  Prédit: 'ibil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ibil' → logprob: -0.7757436037063599
    2. 'ibles' → logprob: -0.7757436037063599
    3. 'ibl' → logprob: -3.6507434844970703
    4. 'ible' → logprob: -4.02574348449707
    5. 'ibilité' → logprob: -4.15074348449707
    6. 'ibilities' → logprob: -5.02574348449707
    7. 'ib' → logprob: -5.27574348449707
    8. 'i' → logprob: -6.40074348449707
    9. ')' → logprob: -6.90074348449707
    10. 'sible' → logprob: -7.40074348449707

Token 1805: '.
' (ID: 558)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3129001259803772
    2. '                   ' → logprob: -2.6879000663757324
    3. 'de' → logprob: -2.9379000663757324
    4. '```' → logprob: -3.4379000663757324
    5. '           ' → logprob: -3.8129000663757324
    6. '(' → logprob: -3.9379000663757324
    7. ')' → logprob: -3.9379000663757324
    8. 'pour' → logprob: -4.937900066375732
    9. '
' → logprob: -5.437900066375732
    10. ',' → logprob: -5.562900066375732

Token 1806: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.29165205359458923
    2. '                   ' → logprob: -1.6666520833969116
    3. '(' → logprob: -4.166652202606201
    4. '           ' → logprob: -5.041652202606201
    5. ')' → logprob: -5.166652202606201
    6. 'dp' → logprob: -5.166652202606201
    7. '```' → logprob: -5.541652202606201
    8. '                       ' → logprob: -5.666652202606201
    9. ' (' → logprob: -5.666652202606201
    10. '(dp' → logprob: -5.791652202606201

Token 1807: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.007458138279616833
    2. ' dp' → logprob: -5.757458209991455
    3. '               ' → logprob: -6.007458209991455
    4. '                   ' → logprob: -6.882458209991455
    5. '```' → logprob: -7.757458209991455
    6. '(dp' → logprob: -9.132457733154297
    7. 'for' → logprob: -9.257457733154297
    8. '                       ' → logprob: -10.132457733154297
    9. '           ' → logprob: -10.382457733154297
    10. '``' → logprob: -10.632457733154297

Token 1808: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.512236498361744e-07
    2. '```' → logprob: -15.375000953674316
    3. '[' → logprob: -15.750000953674316
    4. '   ' → logprob: -17.25
    5. 'i' → logprob: -17.25
    6. '[j' → logprob: -17.5
    7. ' [' → logprob: -17.625
    8. '\[' → logprob: -18.0
    9. ',i' → logprob: -18.75
    10. '[I' → logprob: -18.875

Token 1809: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.019072582945227623
    2. '[j' → logprob: -4.019072532653809
    3. '[i' → logprob: -7.519072532653809
    4. '[' → logprob: -8.769072532653809
    5. ']' → logprob: -9.644072532653809
    6. ')[' → logprob: -10.644072532653809
    7. '           ' → logprob: -10.769072532653809
    8. ' ][' → logprob: -10.769072532653809
    9. '               ' → logprob: -11.019072532653809
    10. '   ' → logprob: -11.394072532653809

Token 1810: 'id' (ID: 315)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5087283849716187
    2. 'j' → logprob: -1.0087283849716187
    3. 'id' → logprob: -3.383728504180908
    4. ' i' → logprob: -10.38372802734375
    5. ']' → logprob: -10.88372802734375
    6. ' j' → logprob: -10.88372802734375
    7. '   ' → logprob: -11.00872802734375
    8. ' id' → logprob: -11.75872802734375
    9. 'idx' → logprob: -11.88372802734375
    10. ' ' → logprob: -12.25872802734375

Token 1811: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007706584874540567
    2. ']+=' → logprob: -4.882706642150879
    3. ']+' → logprob: -9.757706642150879
    4. ']=' → logprob: -10.382706642150879
    5. '+=' → logprob: -12.382706642150879
    6. ' ]' → logprob: -12.882706642150879
    7. ')' → logprob: -14.007706642150879
    8. '])' → logprob: -14.507706642150879
    9. ' +=' → logprob: -14.757706642150879
    10. ']
' → logprob: -14.757706642150879

Token 1812: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.012878893874585629
    2. '=' → logprob: -5.012878894805908
    3. ' +=' → logprob: -5.137878894805908
    4. '+=(' → logprob: -8.88787841796875
    5. ' =' → logprob: -9.13787841796875
    6. '=(' → logprob: -11.13787841796875
    7. '           ' → logprob: -12.26287841796875
    8. ']+=' → logprob: -12.76287841796875
    9. '       ' → logprob: -13.01287841796875
    10. '+' → logprob: -13.01287841796875

Token 1813: ' dp' (ID: 21546)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.5550923943519592
    2. '(' → logprob: -1.5550923347473145
    3. 'dp' → logprob: -1.8050923347473145
    4. 'pow' → logprob: -3.6800923347473145
    5. '(pow' → logprob: -3.8050923347473145
    6. '((' → logprob: -6.5550923347473145
    7. '2' → logprob: -6.9300923347473145
    8. ' (' → logprob: -8.180092811584473
    9. ' dp' → logprob: -9.680092811584473
    10. '(p' → logprob: -9.930092811584473

Token 1814: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00020115631923545152
    2. 'i' → logprob: -8.625201225280762
    3. '[' → logprob: -12.375201225280762
    4. '```' → logprob: -12.500201225280762
    5. '[j' → logprob: -12.875201225280762
    6. '(i' → logprob: -13.125201225280762
    7. '[-' → logprob: -13.500201225280762
    8. 'previous' → logprob: -13.500201225280762
    9. '{i' → logprob: -14.250201225280762
    10. '`' → logprob: -14.250201225280762

Token 1815: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06748530268669128
    2. '[i' → logprob: -3.1924853324890137
    3. ' -' → logprob: -3.8174853324890137
    4. 'i' → logprob: -6.567485332489014
    5. '[-' → logprob: -8.192484855651855
    6. '][' → logprob: -9.317484855651855
    7. '[' → logprob: -9.567484855651855
    8. '   ' → logprob: -9.692484855651855
    9. '-i' → logprob: -9.692484855651855
    10. '```' → logprob: -10.192484855651855

Token 1816: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015814013313502073
    2. '-' → logprob: -6.626581192016602
    3. ' ' → logprob: -8.876581192016602
    4. 'i' → logprob: -10.376581192016602
    5. '```' → logprob: -10.501581192016602
    6. '   ' → logprob: -11.001581192016602
    7. ' -' → logprob: -11.376581192016602
    8. ']' → logprob: -11.751581192016602
    9. '_' → logprob: -12.564081192016602
    10. '[i' → logprob: -12.939081192016602

Token 1817: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5107177862082608e-05
    2. ' ' → logprob: -11.375024795532227
    3. 'i' → logprob: -12.500024795532227
    4. '```' → logprob: -12.812524795532227
    5. '   ' → logprob: -13.250024795532227
    6. '-' → logprob: -13.687524795532227
    7. '<|end|>' → logprob: -14.500024795532227
    8. '[i' → logprob: -15.062524795532227
    9. '<|end|>' → logprob: -15.687524795532227
    10. '2' → logprob: -15.750024795532227

Token 1818: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.43035706877708435
    2. '][' → logprob: -1.0553570985794067
    3. '[' → logprob: -6.805356979370117
    4. ']' → logprob: -8.305356979370117
    5. '[i' → logprob: -8.930356979370117
    6. '```' → logprob: -10.180356979370117
    7. 'j' → logprob: -10.430356979370117
    8. '}[' → logprob: -10.680356979370117
    9. '[js' → logprob: -11.305356979370117
    10. ')[' → logprob: -11.555356979370117

Token 1819: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.700132997939363e-05
    2. '[j' → logprob: -11.875017166137695
    3. 'low' → logprob: -12.375017166137695
    4. ' j' → logprob: -13.000017166137695
    5. '   ' → logprob: -13.500017166137695
    6. '```' → logprob: -14.875017166137695
    7. 'i' → logprob: -15.250017166137695
    8. 'e' → logprob: -15.500017166137695
    9. ']' → logprob: -15.750017166137695
    10. '[' → logprob: -15.750017166137695

Token 1820: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.037072207778692245
    2. ']' → logprob: -3.66207218170166
    3. '*' → logprob: -4.78707218170166
    4. ')' → logprob: -6.16207218170166
    5. ']*' → logprob: -9.16207218170166
    6. '<|end|>' → logprob: -10.03707218170166
    7. '*(' → logprob: -10.66207218170166
    8. ' ]' → logprob: -10.78707218170166
    9. '```' → logprob: -10.91207218170166
    10. ')*' → logprob: -11.91207218170166

Token 1821: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.08685716241598129
    2. '*' → logprob: -2.9618570804595947
    3. '<|end|>' → logprob: -3.7118570804595947
    4. ')' → logprob: -5.211857318878174
    5. '```' → logprob: -7.961857318878174
    6. '*(' → logprob: -8.086856842041016
    7. '%' → logprob: -8.211856842041016
    8. ' %' → logprob: -8.461856842041016
    9. '<|end|>' → logprob: -9.086856842041016
    10. '           ' → logprob: -9.586856842041016

Token 1822: ' pow' (ID: 9779)
  Prédit: '(pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(pow' → logprob: -0.004265965893864632
    2. '((' → logprob: -6.254265785217285
    3. 'pow' → logprob: -6.504265785217285
    4. '(' → logprob: -7.379265785217285
    5. ' (' → logprob: -9.129265785217285
    6. '(p' → logprob: -9.879265785217285
    7. '(power' → logprob: -11.379265785217285
    8. '(max' → logprob: -11.379265785217285
    9. '   ' → logprob: -11.629265785217285
    10. '(abs' → logprob: -12.379265785217285

Token 1823: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.255023956531659e-05
    2. '2' → logprob: -9.625072479248047
    3. '(
' → logprob: -12.125072479248047
    4. '(pow' → logprob: -14.375072479248047
    5. ' (' → logprob: -15.000072479248047
    6. '```' → logprob: -15.750072479248047
    7. '<|end|>' → logprob: -17.500072479248047
    8. 'pow' → logprob: -18.000072479248047
    9. '(

' → logprob: -18.250072479248047
    10. '((' → logprob: -18.750072479248047

Token 1824: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2519367039203644
    2. '(' → logprob: -1.501936674118042
    3. '(
' → logprob: -12.251936912536621
    4. '```' → logprob: -13.251936912536621
    5. ' ' → logprob: -14.876936912536621
    6. '   ' → logprob: -15.751936912536621
    7. '(pow' → logprob: -16.376935958862305
    8. '<|end|>' → logprob: -16.626935958862305
    9. ')' → logprob: -16.751935958862305
    10. ' (' → logprob: -16.876935958862305

Token 1825: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2603256404399872
    2. '(' → logprob: -1.5103256702423096
    3. '(low' → logprob: -4.8853254318237305
    4. ' (' → logprob: -8.38532543182373
    5. ',(' → logprob: -8.51032543182373
    6. '(up' → logprob: -9.51032543182373
    7. ' ,' → logprob: -9.76032543182373
    8. ')' → logprob: -9.76032543182373
    9. '((' → logprob: -10.13532543182373
    10. '(
' → logprob: -10.26032543182373

Token 1826: ' h' (ID: 312)
  Prédit: 'up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'up' → logprob: -1.0775141716003418
    2. '(up' → logprob: -1.3275141716003418
    3. '(low' → logprob: -1.4525141716003418
    4. 'low' → logprob: -2.827514171600342
    5. '(min' → logprob: -2.952514171600342
    6. '(' → logprob: -3.702514171600342
    7. 'min' → logprob: -4.452514171600342
    8. '(h' → logprob: -5.077514171600342
    9. '(max' → logprob: -5.952514171600342
    10. '(high' → logprob: -6.577514171600342

Token 1827: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.003204092849045992
    2. '[' → logprob: -5.878203868865967
    3. ' [' → logprob: -8.628204345703125
    4. 'i' → logprob: -9.128204345703125
    5. '[h' → logprob: -10.378204345703125
    6. '[j' → logprob: -10.878204345703125
    7. '   ' → logprob: -11.128204345703125
    8. '```' → logprob: -11.378204345703125
    9. '(i' → logprob: -11.753204345703125
    10. ' ' → logprob: -12.003204345703125

Token 1828: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.11075304448604584
    2. '-' → logprob: -2.985753059387207
    3. '[' → logprob: -3.860753059387207
    4. ' -' → logprob: -4.360753059387207
    5. ']' → logprob: -4.610753059387207
    6. '+' → logprob: -5.360753059387207
    7. '[j' → logprob: -5.735753059387207
    8. '   ' → logprob: -7.360753059387207
    9. 'i' → logprob: -7.610753059387207
    10. '```' → logprob: -8.235753059387207

Token 1829: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12964659929275513
    2. '-' → logprob: -2.1296465396881104
    3. ')' → logprob: -6.8796467781066895
    4. '[' → logprob: -7.1296467781066895
    5. ' ' → logprob: -7.8796467781066895
    6. ']' → logprob: -9.129646301269531
    7. '```' → logprob: -9.129646301269531
    8. '`' → logprob: -10.129646301269531
    9. '   ' → logprob: -10.254646301269531
    10. ',' → logprob: -10.504646301269531

Token 1830: ' up' (ID: 869)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.06548957526683807
    2. 'up' → logprob: -3.5654895305633545
    3. ' h' → logprob: -3.5654895305633545
    4. 'low' → logprob: -5.690489768981934
    5. ' up' → logprob: -5.815489768981934
    6. ' low' → logprob: -7.940489768981934
    7. '   ' → logprob: -10.065489768981934
    8. ' ' → logprob: -11.440489768981934
    9. '(h' → logprob: -11.565489768981934
    10. 'j' → logprob: -12.065489768981934

Token 1831: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00236007128842175
    2. ' ,' → logprob: -6.377359867095947
    3. ' -' → logprob: -7.502359867095947
    4. '-' → logprob: -9.502360343933105
    5. '`,' → logprob: -12.002360343933105
    6. ' +' → logprob: -12.502360343933105
    7. '+' → logprob: -12.502360343933105
    8. '```' → logprob: -12.627360343933105
    9. ',j' → logprob: -13.252360343933105
    10. '   ' → logprob: -13.377360343933105

Token 1832: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -3.7697225252486533e-06
    2. ' mod' → logprob: -12.500003814697266
    3. '(mod' → logprob: -19.750003814697266
    4. '	mod' → logprob: -20.625003814697266
    5. '```' → logprob: -21.500003814697266
    6. 'moder' → logprob: -21.750003814697266
    7. '           ' → logprob: -21.750003814697266
    8. '   ' → logprob: -22.625003814697266
    9. '
' → logprob: -23.000003814697266
    10. '_mod' → logprob: -23.125003814697266

Token 1833: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003904330777004361
    2. ')' → logprob: -5.628904342651367
    3. ' ,' → logprob: -8.628904342651367
    4. '           ' → logprob: -9.878904342651367
    5. '                   ' → logprob: -10.503904342651367
    6. '               ' → logprob: -10.878904342651367
    7. '       ' → logprob: -12.253904342651367
    8. ')%' → logprob: -12.253904342651367
    9. '   ' → logprob: -12.378904342651367
    10. '```' → logprob: -13.003904342651367

Token 1834: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23770727217197418
    2. '<|end|>' → logprob: -2.4877073764801025
    3. '%' → logprob: -2.7377073764801025
    4. ' %' → logprob: -2.9877073764801025
    5. ')%' → logprob: -5.362707138061523
    6. ' )' → logprob: -5.737707138061523
    7. '```' → logprob: -6.237707138061523
    8. '<|end|>' → logprob: -7.112707138061523
    9. '   ' → logprob: -7.612707138061523
    10. '       ' → logprob: -7.612707138061523

Token 1835: ' (' (ID: 350)
  Prédit: '(pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pow' → logprob: -0.016137007623910904
    2. ' (' → logprob: -4.76613712310791
    3. 'pow' → logprob: -5.39113712310791
    4. '(' → logprob: -6.26613712310791
    5. '((' → logprob: -7.51613712310791
    6. '(p' → logprob: -8.51613712310791
    7. '   ' → logprob: -9.14113712310791
    8. '(
' → logprob: -10.64113712310791
    9. '(power' → logprob: -10.76613712310791
    10. '(dp' → logprob: -10.89113712310791

Token 1836: 'pow' (ID: 30304)
  Prédit: '(pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pow' → logprob: -0.0014184460742399096
    2. '(' → logprob: -7.376418590545654
    3. 'pow' → logprob: -8.001418113708496
    4. '((' → logprob: -8.501418113708496
    5. ' (' → logprob: -8.751418113708496
    6. '(p' → logprob: -10.376418113708496
    7. '   ' → logprob: -10.376418113708496
    8. '(
' → logprob: -12.626418113708496
    9. '(power' → logprob: -12.626418113708496
    10. '(po' → logprob: -12.751418113708496

Token 1837: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.088346359931165e-07
    2. '(
' → logprob: -14.750000953674316
    3. '2' → logprob: -14.875000953674316
    4. ' (' → logprob: -16.125
    5. '```' → logprob: -17.125
    6. '((' → logprob: -18.0
    7. '(
' → logprob: -20.75
    8. ' ' → logprob: -21.25
    9. '<|end|>' → logprob: -21.5
    10. '`' → logprob: -21.5

Token 1838: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00038801267510280013
    2. '(' → logprob: -7.875388145446777
    3. ' ' → logprob: -11.875388145446777
    4. '   ' → logprob: -14.875388145446777
    5. '```' → logprob: -14.875388145446777
    6. '
' → logprob: -16.62538719177246
    7. ' (' → logprob: -16.87538719177246
    8. ')' → logprob: -17.37538719177246
    9. '  ' → logprob: -17.62538719177246
    10. '(
' → logprob: -17.87538719177246

Token 1839: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.049065668135881424
    2. ',' → logprob: -3.049065589904785
    3. '2' → logprob: -8.174065589904785
    4. '(
' → logprob: -8.799065589904785
    5. ' (' → logprob: -10.799065589904785
    6. '(-' → logprob: -12.674065589904785
    7. '```' → logprob: -12.924065589904785
    8. '((' → logprob: -13.049065589904785
    9. '0' → logprob: -13.174065589904785
    10. ' ' → logprob: -13.424065589904785

Token 1840: ' up' (ID: 869)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.8884637951850891
    2. '(low' → logprob: -1.0134637355804443
    3. 'up' → logprob: -2.2634637355804443
    4. '(up' → logprob: -2.7634637355804443
    5. '(' → logprob: -2.8884637355804443
    6. '(h' → logprob: -6.888463973999023
    7. ' low' → logprob: -7.513463973999023
    8. '(high' → logprob: -8.013463973999023
    9. ' (' → logprob: -8.138463973999023
    10. 'h' → logprob: -8.513463973999023

Token 1841: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.32418757677078247
    2. '-' → logprob: -1.3241875171661377
    3. '+' → logprob: -4.699187755584717
    4. ',' → logprob: -6.824187755584717
    5. ' +' → logprob: -7.949187755584717
    6. ' ' → logprob: -8.574187278747559
    7. '   ' → logprob: -10.199187278747559
    8. ')' → logprob: -10.699187278747559
    9. '```' → logprob: -10.949187278747559
    10. ' ' → logprob: -11.574187278747559

Token 1842: ' low' (ID: 4465)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.0022135386243462563
    2. '(low' → logprob: -6.252213478088379
    3. ' low' → logprob: -8.252213478088379
    4. '(' → logprob: -11.002213478088379
    5. '(h' → logprob: -13.377213478088379
    6. ' (' → logprob: -13.752213478088379
    7. '
' → logprob: -13.877213478088379
    8. 'h' → logprob: -14.252213478088379
    9. 'Low' → logprob: -15.002213478088379
    10. 'data' → logprob: -15.127213478088379

Token 1843: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7109184265136719
    2. ' +' → logprob: -1.7109184265136719
    3. ' -' → logprob: -1.8359184265136719
    4. '+' → logprob: -1.9609184265136719
    5. '-' → logprob: -3.710918426513672
    6. ' ,' → logprob: -6.460918426513672
    7. '```' → logprob: -6.585918426513672
    8. ' ' → logprob: -8.460918426513672
    9. ',j' → logprob: -9.335918426513672
    10. '[j' → logprob: -9.710918426513672

Token 1844: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003001358127221465
    2. 'j' → logprob: -6.3780012130737305
    3. '0' → logprob: -7.3780012130737305
    4. '(' → logprob: -8.12800121307373
    5. ' ' → logprob: -8.37800121307373
    6. ' j' → logprob: -9.62800121307373
    7. ' (' → logprob: -10.75300121307373
    8. '(j' → logprob: -10.75300121307373
    9. '```' → logprob: -10.87800121307373
    10. ')' → logprob: -11.50300121307373

Token 1845: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.472211968386546e-05
    2. '0' → logprob: -9.750094413757324
    3. ' ' → logprob: -11.125094413757324
    4. '```' → logprob: -11.125094413757324
    5. 'j' → logprob: -12.250094413757324
    6. ')' → logprob: -14.125094413757324
    7. '2' → logprob: -14.625094413757324
    8. '<|end|>' → logprob: -14.875094413757324
    9. ' j' → logprob: -15.750094413757324
    10. '`' → logprob: -16.12509536743164

Token 1846: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016574084758758545
    2. ' ,' → logprob: -4.641573905944824
    3. ' -' → logprob: -5.266573905944824
    4. '-' → logprob: -7.016573905944824
    5. ')' → logprob: -7.766573905944824
    6. '```' → logprob: -8.766573905944824
    7. '+' → logprob: -10.391573905944824
    8. ',j' → logprob: -10.766573905944824
    9. '   ' → logprob: -10.891573905944824
    10. ' +' → logprob: -10.891573905944824

Token 1847: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0031786637846380472
    2. ' mod' → logprob: -5.753178596496582
    3. '(mod' → logprob: -14.378178596496582
    4. '```' → logprob: -15.253178596496582
    5. '	mod' → logprob: -16.8781795501709
    6. '           ' → logprob: -17.6281795501709
    7. '_mod' → logprob: -19.0031795501709
    8. ' мод' → logprob: -19.2531795501709
    9. '`' → logprob: -19.2531795501709
    10. '   ' → logprob: -19.3781795501709

Token 1848: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7173154950141907
    2. ' -' → logprob: -0.7173154950141907
    3. ',' → logprob: -4.217315673828125
    4. '-' → logprob: -5.092315673828125
    5. ' )' → logprob: -7.092315673828125
    6. ')-' → logprob: -7.717315673828125
    7. '```' → logprob: -8.092315673828125
    8. '           ' → logprob: -8.342315673828125
    9. ' ,' → logprob: -8.467315673828125
    10. '...' → logprob: -8.592315673828125

Token 1849: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03479722514748573
    2. '-' → logprob: -3.409797191619873
    3. ')' → logprob: -6.909797191619873
    4. '```' → logprob: -9.159797668457031
    5. ' ' → logprob: -11.534797668457031
    6. ',' → logprob: -11.909797668457031
    7. ')-' → logprob: -11.909797668457031
    8. '       ' → logprob: -12.284797668457031
    9. ' ' → logprob: -12.784797668457031
    10. '...' → logprob: -12.784797668457031

Token 1850: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001801801408873871
    2. ' ' → logprob: -8.6251802444458
    3. '   ' → logprob: -14.6251802444458
    4. '           ' → logprob: -16.500179290771484
    5. '```' → logprob: -16.875179290771484
    6. '0' → logprob: -17.125179290771484
    7. '       ' → logprob: -17.250179290771484
    8. '                       ' → logprob: -18.125179290771484
    9. '                   ' → logprob: -18.125179290771484
    10. ')' → logprob: -18.375179290771484

Token 1851: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -12.87500286102295
    3. '
' → logprob: -16.250001907348633
    4. '   ' → logprob: -16.750001907348633
    5. '0' → logprob: -17.125001907348633
    6. ')' → logprob: -17.500001907348633
    7. '```' → logprob: -17.875001907348633
    8. '2' → logprob: -18.000001907348633
    9. 'pow' → logprob: -19.062501907348633
    10. '...' → logprob: -19.375001907348633

Token 1852: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00023011912708170712
    2. ' )' → logprob: -9.250229835510254
    3. '           ' → logprob: -10.250229835510254
    4. ')%' → logprob: -10.500229835510254
    5. ')
' → logprob: -10.625229835510254
    6. '+' → logprob: -11.250229835510254
    7. '               ' → logprob: -12.250229835510254
    8. '                   ' → logprob: -12.375229835510254
    9. '   ' → logprob: -12.625229835510254
    10. ')+' → logprob: -13.000229835510254

Token 1853: '           ' (ID: 352)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.76617431640625
    2. ')' → logprob: -0.76617431640625
    3. ' %' → logprob: -3.39117431640625
    4. '```' → logprob: -4.26617431640625
    5. '<|end|>' → logprob: -4.89117431640625
    6. '       ' → logprob: -5.76617431640625
    7. ' )' → logprob: -5.76617431640625
    8. '\n' → logprob: -6.39117431640625
    9. '   ' → logprob: -6.51617431640625
    10. ')%' → logprob: -6.64117431640625

Token 1854: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3507934808731079
    2. '%' → logprob: -1.350793480873108
    3. ' %' → logprob: -4.350793361663818
    4. ')%' → logprob: -5.225793361663818
    5. '```' → logprob: -5.225793361663818
    6. '           ' → logprob: -5.475793361663818
    7. ' %=' → logprob: -6.475793361663818
    8. '):
' → logprob: -7.100793361663818
    9. '       ' → logprob: -7.100793361663818
    10. '%=' → logprob: -7.225793361663818

Token 1855: ' Pr' (ID: 2284)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7887303829193115
    2. 'for' → logprob: -1.1637303829193115
    3. '           ' → logprob: -1.7887303829193115
    4. ' for' → logprob: -4.038730621337891
    5. '```' → logprob: -4.038730621337891
    6. ' dp' → logprob: -4.413730621337891
    7. 'j' → logprob: -5.038730621337891
    8. '               ' → logprob: -5.788730621337891
    9. '       ' → logprob: -6.288730621337891
    10. '%' → logprob: -6.663730621337891

Token 1856: 'ise' (ID: 1096)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.1871031522750854
    2. 'dp' → logprob: -1.1871031522750854
    3. 'é' → logprob: -1.4371031522750854
    4. 'ep' → logprob: -2.312103271484375
    5. '#' → logprob: -4.687103271484375
    6. 'ec' → logprob: -5.187103271484375
    7. 'ép' → logprob: -5.437103271484375
    8. '[' → logprob: -5.437103271484375
    9. 'ef' → logprob: -5.437103271484375
    10. 'éc' → logprob: -5.687103271484375

Token 1857: ' du' (ID: 1462)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.613386869430542
    2. 'mod' → logprob: -0.863386869430542
    3. '[' → logprob: -3.988386869430542
    4. '%' → logprob: -4.738387107849121
    5. ' dp' → logprob: -6.113387107849121
    6. '%=' → logprob: -6.363387107849121
    7. '0' → logprob: -6.988387107849121
    8. '(' → logprob: -7.113387107849121
    9. '(dp' → logprob: -7.238387107849121
    10. '=' → logprob: -7.238387107849121

Token 1858: ' modulo' (ID: 112372)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.019407596439123154
    2. '%' → logprob: -4.019407749176025
    3. '100' → logprob: -7.269407749176025
    4. '```' → logprob: -8.769407272338867
    5. 'dp' → logprob: -9.019407272338867
    6. ' mod' → logprob: -9.019407272338867
    7. '[' → logprob: -9.894407272338867
    8. '%=' → logprob: -10.769407272338867
    9. '`' → logprob: -11.269407272338867
    10. '_mod' → logprob: -11.769407272338867

Token 1859: ' pour' (ID: 1930)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.5451318025588989
    2. '(mod' → logprob: -1.295131802558899
    3. ' mod' → logprob: -3.1701316833496094
    4. ')' → logprob: -3.5451316833496094
    5. 'dp' → logprob: -4.045131683349609
    6. '%' → logprob: -4.045131683349609
    7. '(dp' → logprob: -4.670131683349609
    8. '%
' → logprob: -4.795131683349609
    9. '(' → logprob: -5.670131683349609
    10. '[' → logprob: -5.795131683349609

Token 1860: ' rester' (ID: 54655)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.28420189023017883
    2. 'mod' → logprob: -1.4092018604278564
    3. ' dp' → logprob: -6.2842020988464355
    4. ' mod' → logprob: -7.6592020988464355
    5. 'i' → logprob: -8.534201622009277
    6. '           ' → logprob: -9.034201622009277
    7. ')' → logprob: -9.909201622009277
    8. '   ' → logprob: -10.159201622009277
    9. '```' → logprob: -10.284201622009277
    10. '(dp' → logprob: -10.534201622009277

Token 1861: ' dans' (ID: 2671)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -3.881560041918419e-05
    2. ' mod' → logprob: -10.625039100646973
    3. '(mod' → logprob: -11.875039100646973
    4. '           ' → logprob: -12.125039100646973
    5. '100' → logprob: -14.500039100646973
    6. '```' → logprob: -15.250039100646973
    7. '[' → logprob: -15.625039100646973
    8. '               ' → logprob: -16.000038146972656
    9. '(' → logprob: -16.250038146972656
    10. '	mod' → logprob: -16.250038146972656

Token 1862: ' les' (ID: 1341)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -9.968312951968983e-06
    2. ' mod' → logprob: -11.625009536743164
    3. '(mod' → logprob: -14.375009536743164
    4. '   ' → logprob: -16.000009536743164
    5. '           ' → logprob: -16.250009536743164
    6. '	mod' → logprob: -16.875009536743164
    7. '100' → logprob: -17.625009536743164
    8. '       ' → logprob: -17.625009536743164
    9. '```' → logprob: -17.750009536743164
    10. ')' → logprob: -18.500009536743164

Token 1863: ' limites' (ID: 72637)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0004919105558656156
    2. ' mod' → logprob: -8.125492095947266
    3. '[' → logprob: -9.500492095947266
    4. '100' → logprob: -10.000492095947266
    5. '10' → logprob: -10.500492095947266
    6. '(mod' → logprob: -11.000492095947266
    7. '```' → logprob: -11.750492095947266
    8. ')' → logprob: -12.625492095947266
    9. '   ' → logprob: -13.000492095947266
    10. 'MOD' → logprob: -13.375492095947266

Token 1864: '.
' (ID: 558)
  Prédit: '(mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(mod' → logprob: -0.010251910425722599
    2. 'mod' → logprob: -4.760251998901367
    3. '(' → logprob: -7.635251998901367
    4. ' mod' → logprob: -8.260251998901367
    5. ' (' → logprob: -8.260251998901367
    6. '[' → logprob: -9.010251998901367
    7. '(dp' → logprob: -9.135251998901367
    8. '```' → logprob: -9.135251998901367
    9. '           ' → logprob: -9.760251998901367
    10. '%' → logprob: -10.385251998901367

Token 1865: '           ' (ID: 352)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.4704297184944153
    2. '```' → logprob: -1.2204296588897705
    3. '%
' → logprob: -4.34542989730835
    4. '
' → logprob: -4.34542989730835
    5. '``' → logprob: -4.72042989730835
    6. '%=' → logprob: -5.09542989730835
    7. '%\' → logprob: -5.09542989730835
    8. ' %=' → logprob: -5.59542989730835
    9. ' %' → logprob: -5.59542989730835
    10. 'mod' → logprob: -5.59542989730835

Token 1866: ' dp' (ID: 21546)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.2579454183578491
    2. '```' → logprob: -2.7579455375671387
    3. 'dp' (adapté à ' dp') → logprob: -2.8829455375671387
    4. '           ' → logprob: -3.1329455375671387
    5. '
' → logprob: -4.632945537567139
    6. '       ' → logprob: -4.757945537567139
    7. 'mod' → logprob: -4.882945537567139
    8. '%
' → logprob: -5.007945537567139
    9. '``' → logprob: -5.257945537567139
    10. '%=' → logprob: -5.382945537567139

Token 1867: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.981667537620524e-06
    2. '```' → logprob: -13.500001907348633
    3. 'i' → logprob: -14.875001907348633
    4. '[' → logprob: -16.750001907348633
    5. '(i' → logprob: -17.000001907348633
    6. '[int' → logprob: -17.750001907348633
    7. ',i' → logprob: -18.000001907348633
    8. '`' → logprob: -18.625001907348633
    9. '{i' → logprob: -18.750001907348633
    10. '[I' → logprob: -18.750001907348633

Token 1868: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.015642361715435982
    2. '[id' → logprob: -4.265642166137695
    3. '[' → logprob: -7.265642166137695
    4. '[i' → logprob: -7.390642166137695
    5. ']' → logprob: -9.390642166137695
    6. '[j' → logprob: -9.765642166137695
    7. ' ][' → logprob: -12.390642166137695
    8. '(id' → logprob: -12.765642166137695
    9. '[idx' → logprob: -13.265642166137695
    10. ')[' → logprob: -13.390642166137695

Token 1869: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -2.7848862373502925e-05
    2. 'mod' → logprob: -10.750027656555176
    3. 'comp' → logprob: -13.000027656555176
    4. '0' → logprob: -13.125027656555176
    5. ' id' → logprob: -13.375027656555176
    6. '   ' → logprob: -15.625027656555176
    7. 'idx' → logprob: -15.875027656555176
    8. '[id' → logprob: -16.625028610229492
    9. ' ' → logprob: -17.125028610229492
    10. '"id' → logprob: -17.375028610229492

Token 1870: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002502535644453019
    2. ')' → logprob: -9.250249862670898
    3. ']%' → logprob: -9.375249862670898
    4. '%=' → logprob: -10.125249862670898
    5. '%' → logprob: -10.625249862670898
    6. ')%' → logprob: -13.625249862670898
    7. ' %=' → logprob: -13.875249862670898
    8. ']=' → logprob: -14.250249862670898
    9. ')]' → logprob: -14.375249862670898
    10. '```' → logprob: -14.500249862670898

Token 1871: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.0003570343542378396
    2. '%' → logprob: -8.375356674194336
    3. ' %=' → logprob: -9.000356674194336
    4. '=' → logprob: -13.000356674194336
    5. ')' → logprob: -14.625356674194336
    6. ')%' → logprob: -15.875356674194336
    7. '```' → logprob: -16.000356674194336
    8. '   ' → logprob: -17.000356674194336
    9. '#' → logprob: -18.750356674194336
    10. '       ' → logprob: -19.375356674194336

Token 1872: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: 0.0
    2. ' mod' → logprob: -19.0
    3. '(mod' → logprob: -19.0
    4. '	mod' → logprob: -23.5
    5. '```' → logprob: -24.75
    6. 'MOD' → logprob: -25.125
    7. '           ' → logprob: -25.125
    8. 'modal' → logprob: -25.25
    9. '
' → logprob: -25.375
    10. 'moder' → logprob: -25.5

Token 1873: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1874: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.446744441986084
    2. '           ' → logprob: -1.446744441986084
    3. '<|end|>' → logprob: -2.196744441986084
    4. '```' → logprob: -5.696744441986084
    5. '   ' → logprob: -5.821744441986084
    6. '               ' → logprob: -6.071744441986084
    7. ')' → logprob: -6.446744441986084
    8. 'for' → logprob: -6.446744441986084
    9. '#' → logprob: -8.196744918823242
    10. '+' → logprob: -8.321744918823242

Token 1875: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9868484139442444
    2. 'for' → logprob: -1.1118483543395996
    3. '           ' → logprob: -2.6118483543395996
    4. '<|end|>' → logprob: -2.7368483543395996
    5. '   ' → logprob: -2.8618483543395996
    6. 'return' → logprob: -3.2368483543395996
    7. 'dp' → logprob: -3.8618483543395996
    8. ')' → logprob: -4.2368483543396
    9. 'continue' → logprob: -4.6118483543396
    10. '```' → logprob: -5.2368483543396

Token 1876: ' On' (ID: 2160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5873110890388489
    2. 'for' → logprob: -0.8373110890388489
    3. 'pass' → logprob: -5.337311267852783
    4. 'id' → logprob: -5.712311267852783
    5. 'continue' → logprob: -6.212311267852783
    6. '#' → logprob: -7.962311267852783
    7. '           ' → logprob: -8.087310791015625
    8. '       ' → logprob: -9.087310791015625
    9. ' for' → logprob: -9.712310791015625
    10. '```' → logprob: -9.712310791015625

Token 1877: ' ajoute' (ID: 91611)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5417338013648987
    2. 'for' → logprob: -1.166733741760254
    3. '[' → logprob: -3.666733741760254
    4. '       ' → logprob: -4.291733741760254
    5. '[i' → logprob: -4.666733741760254
    6. '+=' → logprob: -4.916733741760254
    7. 'contin' → logprob: -4.916733741760254
    8. ' continue' → logprob: -5.041733741760254
    9. '[j' → logprob: -5.041733741760254
    10. 'aj' → logprob: -5.166733741760254

Token 1878: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.45942217111587524
    2. 'dp' → logprob: -1.2094221115112305
    3. '(' → logprob: -3.2094221115112305
    4. '(dp' → logprob: -3.8344221115112305
    5. ' ' → logprob: -5.9594221115112305
    6. '1' → logprob: -6.0844221115112305
    7. ' dp' → logprob: -6.3344221115112305
    8. '   ' → logprob: -7.4594221115112305
    9. ' (' → logprob: -7.7094221115112305
    10. '       ' → logprob: -8.95942211151123

Token 1879: '2' (ID: 17)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8553993105888367
    2. '(' → logprob: -1.1053993701934814
    3. '(dp' → logprob: -1.8553993701934814
    4. '2' → logprob: -2.4803993701934814
    5. '1' → logprob: -5.980399131774902
    6. ' dp' → logprob: -8.105399131774902
    7. '((' → logprob: -8.230399131774902
    8. ' (' → logprob: -8.355399131774902
    9. 'pow' → logprob: -9.355399131774902
    10. '4' → logprob: -10.105399131774902

Token 1880: ' fois' (ID: 14697)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.09022673964500427
    2. ' *' → logprob: -2.465226650238037
    3. '           ' → logprob: -7.215226650238037
    4. '```' → logprob: -8.840227127075195
    5. '   ' → logprob: -9.215227127075195
    6. 'dp' → logprob: -9.340227127075195
    7. '       ' → logprob: -10.215227127075195
    8. '*(' → logprob: -10.715227127075195
    9. '(dp' → logprob: -10.715227127075195
    10. ' ' → logprob: -11.215227127075195

Token 1881: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3158099949359894
    2. '(dp' → logprob: -1.315809965133667
    3. '(' → logprob: -6.190810203552246
    4. ' dp' → logprob: -8.440810203552246
    5. '2' → logprob: -8.565810203552246
    6. 'pow' → logprob: -9.690810203552246
    7. ' (' → logprob: -11.315810203552246
    8. '	dp' → logprob: -12.065810203552246
    9. '1' → logprob: -12.690810203552246
    10. '```' → logprob: -13.065810203552246

Token 1882: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2352385965641588e-05
    2. 'i' → logprob: -11.875012397766113
    3. 'dp' → logprob: -12.375012397766113
    4. '[' → logprob: -14.750012397766113
    5. '```' → logprob: -15.000012397766113
    6. '[id' → logprob: -16.125011444091797
    7. '[j' → logprob: -17.000011444091797
    8. '(i' → logprob: -17.625011444091797
    9. '   ' → logprob: -18.000011444091797
    10. '[d' → logprob: -18.375011444091797

Token 1883: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.029412899166345596
    2. '[i' → logprob: -3.7794129848480225
    3. ' -' → logprob: -5.404412746429443
    4. '][' → logprob: -7.154412746429443
    5. '[' → logprob: -8.029413223266602
    6. '[id' → logprob: -8.029413223266602
    7. '[-' → logprob: -9.779413223266602
    8. 'i' → logprob: -10.029413223266602
    9. '   ' → logprob: -10.779413223266602
    10. 'prev' → logprob: -11.654413223266602

Token 1884: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.153795766294934e-06
    2. ' ' → logprob: -12.125005722045898
    3. '```' → logprob: -14.625005722045898
    4. '-' → logprob: -16.0000057220459
    5. ']' → logprob: -16.6250057220459
    6. 'i' → logprob: -17.0000057220459
    7. '_' → logprob: -17.3750057220459
    8. '   ' → logprob: -17.7500057220459
    9. '１' → logprob: -18.0000057220459
    10. 'prev' → logprob: -18.1875057220459

Token 1885: '][' (ID: 2696)
  Prédit: '[id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[id' → logprob: -0.032255228608846664
    2. '[i' → logprob: -3.532255172729492
    3. '][' → logprob: -6.407255172729492
    4. '[idx' → logprob: -8.032255172729492
    5. '[ip' → logprob: -8.657255172729492
    6. '[' → logprob: -8.907255172729492
    7. '[ind' → logprob: -9.282255172729492
    8. '[j' → logprob: -10.907255172729492
    9. 'dp' → logprob: -11.032255172729492
    10. '[index' → logprob: -11.532255172729492

Token 1886: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.0297836996614933
    2. '[id' → logprob: -3.5297837257385254
    3. ' id' → logprob: -10.904783248901367
    4. '[' → logprob: -11.779783248901367
    5. 'comp' → logprob: -13.029783248901367
    6. '(id' → logprob: -13.154783248901367
    7. '"id' → logprob: -14.279783248901367
    8. ''id' → logprob: -14.529783248901367
    9. '	id' → logprob: -14.904783248901367
    10. '
' → logprob: -15.154783248901367

Token 1887: '2' (ID: 17)
  Prédit: '[id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[id' → logprob: -0.0010881858179345727
    2. '][' → logprob: -6.8760881423950195
    3. '[idx' → logprob: -10.50108814239502
    4. '[ip' → logprob: -11.75108814239502
    5. '[i' → logprob: -12.12608814239502
    6. '[' → logprob: -12.62608814239502
    7. '[j' → logprob: -13.12608814239502
    8. '(id' → logprob: -13.25108814239502
    9. '[ind' → logprob: -13.50108814239502
    10. 'id' → logprob: -13.87608814239502

Token 1888: ']' (ID: 60)
  Prédit: '[id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[id' → logprob: -0.07661404460668564
    2. '[j' → logprob: -2.7016141414642334
    3. ']' → logprob: -5.701613903045654
    4. '][' → logprob: -6.451613903045654
    5. '[idx' → logprob: -6.951613903045654
    6. '[' → logprob: -7.701613903045654
    7. '[ip' → logprob: -9.451614379882812
    8. '[i' → logprob: -9.701614379882812
    9. '[ind' → logprob: -10.326614379882812
    10. '[js' → logprob: -10.576614379882812

Token 1889: ' à' (ID: 1221)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08349143713712692
    2. 'dp' → logprob: -2.833491325378418
    3. '+=' → logprob: -5.208491325378418
    4. '
' → logprob: -5.333491325378418
    5. ' +=' → logprob: -5.458491325378418
    6. '```' → logprob: -5.958491325378418
    7. ' dp' → logprob: -7.083491325378418
    8. '       ' → logprob: -7.458491325378418
    9. '(dp' → logprob: -7.833491325378418
    10. '   ' → logprob: -7.958491325378418

Token 1890: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.04104781523346901
    2. ' dp' → logprob: -3.4160478115081787
    3. '(dp' → logprob: -4.916048049926758
    4. ' (' → logprob: -10.541048049926758
    5. '(' → logprob: -11.416048049926758
    6. '	dp' → logprob: -12.166048049926758
    7. ' ' → logprob: -13.416048049926758
    8. '   ' → logprob: -13.541048049926758
    9. ' ' → logprob: -15.291048049926758
    10. '`' → logprob: -15.541048049926758

Token 1891: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.990154047845863e-05
    2. '```' → logprob: -10.500049591064453
    3. 'i' → logprob: -10.875049591064453
    4. 'dp' → logprob: -13.875049591064453
    5. '`' → logprob: -13.875049591064453
    6. '[' → logprob: -14.125049591064453
    7. '
' → logprob: -15.625049591064453
    8. '\[' → logprob: -15.750049591064453
    9. '``' → logprob: -16.000049591064453
    10. '(i' → logprob: -16.125049591064453

Token 1892: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.4484116733074188
    2. '][' → logprob: -1.0734117031097412
    3. '[id' → logprob: -3.948411703109741
    4. '[' → logprob: -9.19841194152832
    5. ']' → logprob: -10.44841194152832
    6. 'id' → logprob: -10.94841194152832
    7. '[ip' → logprob: -11.19841194152832
    8. '[ind' → logprob: -11.44841194152832
    9. '[j' → logprob: -11.57341194152832
    10. ' ][' → logprob: -11.69841194152832

Token 1893: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -1.0087516784551553e-05
    2. '[id' → logprob: -12.12501049041748
    3. ' id' → logprob: -12.50001049041748
    4. '(id' → logprob: -14.75001049041748
    5. 'idx' → logprob: -15.75001049041748
    6. '```' → logprob: -16.250009536743164
    7. '[' → logprob: -16.750009536743164
    8. ''id' → logprob: -17.250009536743164
    9. '"id' → logprob: -17.375009536743164
    10. '
' → logprob: -17.375009536743164

Token 1894: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10158102214336395
    2. '           ' → logprob: -3.72658109664917
    3. ']
' → logprob: -3.97658109664917
    4. ',' → logprob: -3.97658109664917
    5. ']+=' → logprob: -4.35158109664917
    6. '       ' → logprob: -4.72658109664917
    7. '```' → logprob: -5.85158109664917
    8. '
' → logprob: -6.35158109664917
    9. ')' → logprob: -6.85158109664917
    10. '   ' → logprob: -6.85158109664917

Token 1895: ' mod' (ID: 1812)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.726232647895813
    2. ' dp' → logprob: -0.726232647895813
    3. '           ' → logprob: -3.4762325286865234
    4. '(dp' → logprob: -6.726232528686523
    5. '               ' → logprob: -8.851232528686523
    6. '                   ' → logprob: -9.851232528686523
    7. '+' → logprob: -9.976232528686523
    8. '	dp' → logprob: -9.976232528686523
    9. '%' → logprob: -10.226232528686523
    10. '   ' → logprob: -10.601232528686523

Token 1896: ' mod' (ID: 1812)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.11383826285600662
    2. '=' → logprob: -2.4888381958007812
    3. '%' → logprob: -3.9888381958007812
    4. ' %=' → logprob: -6.113838195800781
    5. '(dp' → logprob: -6.613838195800781
    6. 'dp' → logprob: -7.488838195800781
    7. '=%' → logprob: -7.613838195800781
    8. '[i' → logprob: -8.113838195800781
    9. '%i' → logprob: -8.363838195800781
    10. '(' → logprob: -8.738838195800781

Token 1897: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2658386528491974
    2. '```' → logprob: -2.390838623046875
    3. 'dp' → logprob: -2.515838623046875
    4. '%' → logprob: -4.015838623046875
    5. '(dp' → logprob: -4.015838623046875
    6. ' +=' → logprob: -4.640838623046875
    7. ' =' → logprob: -6.140838623046875
    8. '()
' → logprob: -6.390838623046875
    9. '+=' → logprob: -6.390838623046875
    10. '%=' → logprob: -6.765838623046875

Token 1898: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7381947636604309
    2. '```' → logprob: -1.3631947040557861
    3. 'dp' → logprob: -1.6131947040557861
    4. '
' → logprob: -3.238194704055786
    5. ' dp' → logprob: -3.988194704055786
    6. '``' → logprob: -5.488194942474365
    7. '(dp' → logprob: -5.988194942474365
    8. '       ' → logprob: -6.988194942474365
    9. '   ' → logprob: -6.988194942474365
    10. '	dp' → logprob: -8.238194465637207

Token 1899: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.014032217673957348
    2. '(dp' → logprob: -5.014032363891602
    3. '```' → logprob: -5.264032363891602
    4. ' dp' → logprob: -6.389032363891602
    5. '           ' → logprob: -8.139032363891602
    6. '``' → logprob: -9.514032363891602
    7. '	dp' → logprob: -10.139032363891602
    8. '_dp' → logprob: -11.514032363891602
    9. '       ' → logprob: -11.764032363891602
    10. '   ' → logprob: -12.264032363891602

Token 1900: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.292907877039397e-06
    2. '```' → logprob: -12.75000286102295
    3. 'i' → logprob: -15.75000286102295
    4. '[' → logprob: -17.125003814697266
    5. '\[' → logprob: -17.875003814697266
    6. '{i' → logprob: -18.500003814697266
    7. '(i' → logprob: -18.750003814697266
    8. '``' → logprob: -18.875003814697266
    9. '[int' → logprob: -18.875003814697266
    10. '[I' → logprob: -18.875003814697266

Token 1901: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00021891399228479713
    2. '[i' → logprob: -9.125219345092773
    3. '   ' → logprob: -9.750219345092773
    4. '       ' → logprob: -10.750219345092773
    5. ' ][' → logprob: -11.500219345092773
    6. ']' → logprob: -12.125219345092773
    7. '           ' → logprob: -12.625219345092773
    8. '[' → logprob: -13.250219345092773
    9. ']][' → logprob: -14.125219345092773
    10. '```' → logprob: -14.250219345092773

Token 1902: 'id' (ID: 315)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07007003575563431
    2. 'id' → logprob: -2.6950700283050537
    3. 'mod' → logprob: -9.320070266723633
    4. '(i' → logprob: -11.195070266723633
    5. '```' → logprob: -11.695070266723633
    6. ' i' → logprob: -12.195070266723633
    7. ']' → logprob: -12.820070266723633
    8. 'idx' → logprob: -12.945070266723633
    9. '
' → logprob: -13.445070266723633
    10. '[i' → logprob: -13.695070266723633

Token 1903: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.020616630092263222
    2. ']+=' → logprob: -3.8956165313720703
    3. '+=' → logprob: -10.02061653137207
    4. ']+' → logprob: -11.77061653137207
    5. ']=' → logprob: -11.89561653137207
    6. ' ]' → logprob: -12.39561653137207
    7. ' +=' → logprob: -12.52061653137207
    8. ')' → logprob: -12.89561653137207
    9. '+' → logprob: -13.39561653137207
    10. '```' → logprob: -13.39561653137207

Token 1904: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.006983538158237934
    2. '=' → logprob: -5.006983757019043
    3. '%=' → logprob: -9.006983757019043
    4. ' +=' → logprob: -9.256983757019043
    5. '+=(' → logprob: -10.381983757019043
    6. ']+=' → logprob: -11.381983757019043
    7. '=(' → logprob: -12.381983757019043
    8. '```' → logprob: -13.631983757019043
    9. ' =' → logprob: -14.381983757019043
    10. '   ' → logprob: -14.506983757019043

Token 1905: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005334674380719662
    2. '2' → logprob: -5.255334854125977
    3. ' (' → logprob: -9.255334854125977
    4. '(dp' → logprob: -13.380334854125977
    5. 'dp' → logprob: -13.755334854125977
    6. ' ' → logprob: -14.005334854125977
    7. '   ' → logprob: -14.255334854125977
    8. '```' → logprob: -14.630334854125977
    9. '`' → logprob: -15.005334854125977
    10. '((' → logprob: -16.130334854125977

Token 1906: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07890807837247849
    2. '2' → logprob: -2.5789079666137695
    3. ' (' → logprob: -11.07890796661377
    4. '(dp' → logprob: -13.57890796661377
    5. ' ' → logprob: -13.95390796661377
    6. 'dp' → logprob: -15.57890796661377
    7. '   ' → logprob: -16.078908920288086
    8. '((' → logprob: -16.203908920288086
    9. '`' → logprob: -16.453908920288086
    10. '```' → logprob: -16.578908920288086

Token 1907: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.13885647058486938
    2. ' *' → logprob: -2.1388564109802246
    3. '*(' → logprob: -4.638856410980225
    4. '(dp' → logprob: -6.138856410980225
    5. '(*' → logprob: -12.013856887817383
    6. '(' → logprob: -12.388856887817383
    7. ' ' → logprob: -12.763856887817383
    8. '**' → logprob: -12.888856887817383
    9. '```' → logprob: -13.013856887817383
    10. '   ' → logprob: -13.138856887817383

Token 1908: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0003384422743692994
    2. '(dp' → logprob: -8.000338554382324
    3. ' dp' → logprob: -12.750338554382324
    4. '(' → logprob: -17.625337600708008
    5. '	dp' → logprob: -19.000337600708008
    6. ' (' → logprob: -19.500337600708008
    7. '(d' → logprob: -20.375337600708008
    8. '_dp' → logprob: -22.500337600708008
    9. '```' → logprob: -22.875337600708008
    10. 'd' → logprob: -23.000337600708008

Token 1909: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. 'i' → logprob: -15.5
    3. '[' → logprob: -16.625
    4. '[user' → logprob: -17.375
    5. '[-' → logprob: -17.75
    6. '```' → logprob: -18.0
    7. '   ' → logprob: -19.375
    8. '(i' → logprob: -20.0
    9. 'user' → logprob: -20.0
    10. '`' → logprob: -20.25

Token 1910: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.011675085872411728
    2. '[i' → logprob: -5.136674880981445
    3. '[-' → logprob: -5.886674880981445
    4. ' -' → logprob: -6.011674880981445
    5. '[' → logprob: -7.886674880981445
    6. '[user' → logprob: -10.261674880981445
    7. 'i' → logprob: -10.511674880981445
    8. '```' → logprob: -11.261674880981445
    9. '_previous' → logprob: -11.386674880981445
    10. '-[' → logprob: -12.261674880981445

Token 1911: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7848862373502925e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -15.750027656555176
    4. '```' → logprob: -17.125028610229492
    5. '-' → logprob: -18.937528610229492
    6. '  ' → logprob: -19.687528610229492
    7. '       ' → logprob: -19.875028610229492
    8. '１' → logprob: -19.937528610229492
    9. '<|end|>' → logprob: -20.000028610229492
    10. ']' → logprob: -20.062528610229492

Token 1912: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -14.062501907348633
    3. '-' → logprob: -15.000001907348633
    4. '```' → logprob: -15.062501907348633
    5. '   ' → logprob: -16.437501907348633
    6. 'prev' → logprob: -16.625001907348633
    7. '2' → logprob: -16.750001907348633
    8. '
' → logprob: -16.875001907348633
    9. '۱' → logprob: -17.500001907348633
    10. '0' → logprob: -17.625001907348633

Token 1913: '][' (ID: 2696)
  Prédit: '[id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[id' → logprob: -0.2255091816186905
    2. '][' → logprob: -1.6005091667175293
    3. '[idx' → logprob: -10.225509643554688
    4. '[' → logprob: -11.475509643554688
    5. '[ip' → logprob: -11.725509643554688
    6. ' ][' → logprob: -11.850509643554688
    7. ']' → logprob: -11.975509643554688
    8. '[i' → logprob: -12.100509643554688
    9. '[ind' → logprob: -12.225509643554688
    10. '[data' → logprob: -12.850509643554688

Token 1914: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -1.2664456789934775e-06
    2. ' id' → logprob: -13.625000953674316
    3. '[id' → logprob: -18.750001907348633
    4. '(id' → logprob: -20.500001907348633
    5. '   ' → logprob: -21.000001907348633
    6. '	id' → logprob: -22.250001907348633
    7. '][' → logprob: -22.500001907348633
    8. ' ' → logprob: -22.500001907348633
    9. 'idx' → logprob: -23.000001907348633
    10. '
' → logprob: -23.375001907348633

Token 1915: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.339278580620885e-06
    2. ']' → logprob: -13.500001907348633
    3. '```' → logprob: -14.500001907348633
    4. '-' → logprob: -15.375001907348633
    5. '][' → logprob: -16.375001907348633
    6. '   ' → logprob: -17.000001907348633
    7. '[' → logprob: -17.250001907348633
    8. ' ' → logprob: -17.500001907348633
    9. '_' → logprob: -18.000001907348633
    10. '``' → logprob: -18.750001907348633

Token 1916: ']
' (ID: 1592)
  Prédit: ']%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']%' → logprob: -0.14741091430187225
    2. ']' → logprob: -2.0224108695983887
    3. '[j' → logprob: -6.397410869598389
    4. ')%' → logprob: -6.647410869598389
    5. '%' → logprob: -6.647410869598389
    6. ')' → logprob: -8.272411346435547
    7. '```' → logprob: -9.897411346435547
    8. ']
' → logprob: -10.272411346435547
    9. '])' → logprob: -10.522411346435547
    10. '[id' → logprob: -10.897411346435547

Token 1917: '           ' (ID: 352)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.03329039365053177
    2. '%' → logprob: -4.033290386199951
    3. '       ' → logprob: -5.283290386199951
    4. '``' → logprob: -5.408290386199951
    5. '   ' → logprob: -5.908290386199951
    6. 'dp' → logprob: -7.283290386199951
    7. '`' → logprob: -8.03329086303711
    8. '	dp' → logprob: -8.15829086303711
    9. '(dp' → logprob: -8.28329086303711
    10. ')' → logprob: -8.78329086303711

Token 1918: ' dp' (ID: 21546)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.03094490058720112
    2. ' %' → logprob: -4.78094482421875
    3. '```' → logprob: -4.90594482421875
    4. '%
' → logprob: -6.40594482421875
    5. ')%' → logprob: -6.53094482421875
    6. '
' → logprob: -6.65594482421875
    7. 'dp' (adapté à ' dp') → logprob: -6.78094482421875
    8. '%=' → logprob: -6.78094482421875
    9. '%d' → logprob: -6.90594482421875
    10. ' %=' → logprob: -7.03094482421875

Token 1919: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: 0.0
    2. '```' → logprob: -17.5
    3. '[' → logprob: -18.0
    4. 'i' → logprob: -18.125
    5. '[
' → logprob: -19.625
    6. '(i' → logprob: -19.75
    7. '	i' → logprob: -20.625
    8. '   ' → logprob: -21.25
    9. '{i' → logprob: -21.25
    10. '[I' → logprob: -21.5

Token 1920: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0001637300301808864
    2. '[i' → logprob: -8.875164031982422
    3. '[id' → logprob: -12.125164031982422
    4. '[' → logprob: -12.250164031982422
    5. ')[' → logprob: -12.750164031982422
    6. ']' → logprob: -13.125164031982422
    7. '"][' → logprob: -13.750164031982422
    8. 'i' → logprob: -13.875164031982422
    9. '   ' → logprob: -14.000164031982422
    10. ' ][' → logprob: -14.000164031982422

Token 1921: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.4758358895778656
    2. 'i' → logprob: -0.975835919380188
    3. 'mod' → logprob: -6.350835800170898
    4. '0' → logprob: -12.725835800170898
    5. ' i' → logprob: -12.725835800170898
    6. 'idx' → logprob: -12.850835800170898
    7. '   ' → logprob: -14.350835800170898
    8. '%' → logprob: -14.600835800170898
    9. '
' → logprob: -15.350835800170898
    10. '```' → logprob: -15.475835800170898

Token 1922: ']' (ID: 60)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.005447197239845991
    2. ' %=' → logprob: -5.5054473876953125
    3. '%' → logprob: -7.1304473876953125
    4. ')' → logprob: -7.6304473876953125
    5. ')%' → logprob: -9.630447387695312
    6. ']' → logprob: -11.505447387695312
    7. '   ' → logprob: -13.380447387695312
    8. '=' → logprob: -13.755447387695312
    9. ']%' → logprob: -13.880447387695312
    10. '```' → logprob: -14.130447387695312

Token 1923: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.0004969134461134672
    2. ' %=' → logprob: -7.750496864318848
    3. '%' → logprob: -9.625496864318848
    4. '=' → logprob: -16.250497817993164
    5. '   ' → logprob: -17.375497817993164
    6. ')%' → logprob: -17.500497817993164
    7. ')' → logprob: -18.500497817993164
    8. '//=' → logprob: -18.625497817993164
    9. '+=' → logprob: -19.000497817993164
    10. '%
' → logprob: -19.250497817993164

Token 1924: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.5048530030981055e-06
    2. ' mod' → logprob: -13.500001907348633
    3. '(mod' → logprob: -18.750001907348633
    4. '	mod' → logprob: -20.250001907348633
    5. '```' → logprob: -22.250001907348633
    6. 'moder' → logprob: -23.000001907348633
    7. 'modal' → logprob: -23.375001907348633
    8. ' мод' → logprob: -23.625001907348633
    9. '_mod' → logprob: -23.875001907348633
    10. '.mod' → logprob: -25.375001907348633

Token 1925: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1926: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1629479080438614
    2. 'return' → logprob: -1.9129478931427002
    3. '<|end|>' → logprob: -6.662948131561279
    4. '       ' → logprob: -7.537948131561279
    5. '```' → logprob: -8.537947654724121
    6. '#' → logprob: -8.662947654724121
    7. ')' → logprob: -8.662947654724121
    8. ' return' → logprob: -9.037947654724121
    9. 'for' → logprob: -9.662947654724121
    10. 'continue' → logprob: -9.787947654724121

Token 1927: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6220126748085022
    2. '#' (adapté à ' #') → logprob: -1.1220126152038574
    3. '   ' → logprob: -1.9970126152038574
    4. 'id' → logprob: -6.997012615203857
    5. '```' → logprob: -7.997012615203857
    6. 'result' → logprob: -8.122013092041016
    7. 'i' → logprob: -9.497013092041016
    8. '       ' → logprob: -10.122013092041016
    9. 'if' → logprob: -10.247013092041016
    10. ' return' → logprob: -10.622013092041016

Token 1928: ' Calcul' (ID: 57243)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00798490084707737
    2. 'result' → logprob: -5.5079851150512695
    3. '   ' → logprob: -5.8829851150512695
    4. 'res' → logprob: -7.7579851150512695
    5. '#' → logprob: -7.8829851150512695
    6. 'answer' → logprob: -9.50798511505127
    7. 'ret' → logprob: -9.75798511505127
    8. 'ans' → logprob: -10.13298511505127
    9. 'i' → logprob: -11.00798511505127
    10. 'total' → logprob: -11.13298511505127

Token 1929: ' du' (ID: 1462)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.36278560757637024
    2. '=' → logprob: -1.7377855777740479
    3. ' =' → logprob: -2.862785577774048
    4. 'i' → logprob: -4.237785816192627
    5. 'final' → logprob: -4.237785816192627
    6. '   ' → logprob: -4.737785816192627
    7. '_result' → logprob: -4.862785816192627
    8. 'res' → logprob: -5.362785816192627
    9. '#' → logprob: -5.737785816192627
    10. 'for' → logprob: -6.237785816192627

Token 1930: ' résultat' (ID: 62556)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.06760530173778534
    2. 'res' → logprob: -3.4426052570343018
    3. 'rés' → logprob: -3.5676052570343018
    4. 'dp' → logprob: -5.692605495452881
    5. 'answer' → logprob: -7.442605495452881
    6. 'r' → logprob: -7.567605495452881
    7. 's' → logprob: -8.442605018615723
    8. 'i' → logprob: -9.067605018615723
    9. 'ans' → logprob: -9.692605018615723
    10. 'total' → logprob: -10.067605018615723

Token 1931: ' final' (ID: 1721)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.37521886825561523
    2. '   ' → logprob: -1.5002188682556152
    3. 'return' → logprob: -3.1252188682556152
    4. 'res' → logprob: -3.2502188682556152
    5. 'id' → logprob: -5.625218868255615
    6. 'ret' → logprob: -6.625218868255615
    7. '=' → logprob: -7.625218868255615
    8. 'ans' → logprob: -7.625218868255615
    9. 'answer' → logprob: -7.875218868255615
    10. 'i' → logprob: -8.250219345092773

Token 1932: ' '' (ID: 461)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31805339455604553
    2. 'result' → logprob: -1.8180533647537231
    3. 'id' → logprob: -2.6930534839630127
    4. 'i' → logprob: -4.193053245544434
    5. 'res' → logprob: -4.443053245544434
    6. 'return' → logprob: -5.193053245544434
    7. '=' → logprob: -5.318053245544434
    8. ' =' → logprob: -5.818053245544434
    9. 'ans' → logprob: -7.443053245544434
    10. 'ret' → logprob: -8.318053245544434

Token 1933: 'ans' (ID: 616)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.3740350306034088
    2. 'result' → logprob: -1.3740350008010864
    3. 'ans' → logprob: -2.999035120010376
    4. 'dp' → logprob: -5.624034881591797
    5. 'ret' → logprob: -6.124034881591797
    6. 'answer' → logprob: -6.374034881591797
    7. 'r' → logprob: -7.874034881591797
    8. 'total' → logprob: -8.249034881591797
    9. 'rés' → logprob: -8.249034881591797
    10. 's' → logprob: -8.749034881591797

Token 1934: ''.
' (ID: 49980)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4745904803276062
    2. ' =' → logprob: -0.9745904803276062
    3. '   ' → logprob: -7.599590301513672
    4. ')' → logprob: -12.724590301513672
    5. ']' → logprob: -13.099590301513672
    6. '=
' → logprob: -13.599590301513672
    7. ',' → logprob: -13.724590301513672
    8. 's' → logprob: -13.849590301513672
    9. ' ' → logprob: -14.224590301513672
    10. '```' → logprob: -14.474590301513672

Token 1935: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0013832130935043097
    2. 'id' → logprob: -6.751383304595947
    3. '   ' → logprob: -9.626382827758789
    4. 'result' → logprob: -9.626382827758789
    5. 'answer' → logprob: -10.251382827758789
    6. 'return' → logprob: -11.251382827758789
    7. 'if' → logprob: -11.501382827758789
    8. 'res' → logprob: -11.876382827758789
    9. ' ans' → logprob: -12.251382827758789
    10. '```' → logprob: -12.376382827758789

Token 1936: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.049054548144340515
    2. 'id' → logprob: -3.0490546226501465
    3. 'if' → logprob: -8.799054145812988
    4. 'result' → logprob: -9.174054145812988
    5. 'i' → logprob: -9.299054145812988
    6. 'answer' → logprob: -9.924054145812988
    7. 'res' → logprob: -10.674054145812988
    8. '   ' → logprob: -10.924054145812988
    9. 'j' → logprob: -11.924054145812988
    10. '#' → logprob: -11.924054145812988

Token 1937: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519533634185791
    2. ' =' → logprob: -1.501953363418579
    3. '_' → logprob: -10.876953125
    4. '[' → logprob: -13.001953125
    5. '   ' → logprob: -14.126953125
    6. ',' → logprob: -14.376953125
    7. ')' → logprob: -14.751953125
    8. '=[' → logprob: -15.626953125
    9. 's' → logprob: -15.876953125
    10. ' ' → logprob: -16.001953125

Token 1938: ' ' (ID: 220)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5585929155349731
    2. '0' → logprob: -1.1835929155349731
    3. 'sum' → logprob: -2.1835927963256836
    4. '(dp' → logprob: -5.433592796325684
    5. 'pow' → logprob: -6.183592796325684
    6. '(' → logprob: -6.558592796325684
    7. '(sum' → logprob: -7.058592796325684
    8. '2' → logprob: -8.683592796325684
    9. 'max' → logprob: -9.308592796325684
    10. '1' → logprob: -9.558592796325684

Token 1939: '0' (ID: 15)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.29434770345687866
    2. '0' → logprob: -1.5443477630615234
    3. 'sum' → logprob: -3.6693477630615234
    4. 'pow' → logprob: -5.044347763061523
    5. '(dp' → logprob: -5.294347763061523
    6. '(' → logprob: -5.919347763061523
    7. '2' → logprob: -7.044347763061523
    8. '1' → logprob: -7.794347763061523
    9. '(sum' → logprob: -7.794347763061523
    10. 'max' → logprob: -9.669347763061523

Token 1940: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07575587183237076
    2. '   ' → logprob: -3.2007558345794678
    3. 'i' → logprob: -4.200756072998047
    4. ' for' → logprob: -4.325756072998047
    5. 'id' → logprob: -5.700756072998047
    6. 'ans' → logprob: -8.825756072998047
    7. ')' → logprob: -9.200756072998047
    8. 'dp' → logprob: -9.450756072998047
    9. '
' → logprob: -9.575756072998047
    10. '[i' → logprob: -10.200756072998047

Token 1941: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02070094272494316
    2. 'i' → logprob: -4.145700931549072
    3. 'id' → logprob: -6.270700931549072
    4. '   ' → logprob: -6.770700931549072
    5. 'if' → logprob: -6.895700931549072
    6. 'j' → logprob: -7.895700931549072
    7. 'dp' → logprob: -8.89570140838623
    8. ' for' → logprob: -9.52070140838623
    9. 'last' → logprob: -12.02070140838623
    10. 'ans' → logprob: -12.14570140838623

Token 1942: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.73183855926618e-05
    2. 'i' → logprob: -9.500077247619629
    3. 'ans' → logprob: -14.000077247619629
    4. '```' → logprob: -14.250077247619629
    5. ' for' → logprob: -14.750077247619629
    6. 'if' → logprob: -15.125077247619629
    7. 'j' → logprob: -15.875077247619629
    8. '
' → logprob: -15.875077247619629
    9. 'id' → logprob: -17.750078201293945
    10. ')' → logprob: -18.000078201293945

Token 1943: ' R' (ID: 460)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08201497048139572
    2. 'if' → logprob: -2.957015037536621
    3. 'i' → logprob: -3.832015037536621
    4. 'id' → logprob: -5.957015037536621
    5. 'j' → logprob: -6.457015037536621
    6. 'ans' → logprob: -7.457015037536621
    7. '#' → logprob: -8.332015037536621
    8. 'last' → logprob: -10.207015037536621
    9. 'dp' → logprob: -10.582015037536621
    10. '```' → logprob: -10.582015037536621

Token 1944: 'éc' (ID: 5675)
  Prédit: 'ange'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ange' → logprob: -0.07157754898071289
    2. 'for' → logprob: -2.696577548980713
    3. 'range' → logprob: -7.196577548980713
    4. 'eturn' → logprob: -7.571577548980713
    5. 'anged' → logprob: -9.446577072143555
    6. 'anger' → logprob: -9.571577072143555
    7. 'ang' → logprob: -9.821577072143555
    8. 'e' → logprob: -10.071577072143555
    9. 'a' → logprob: -10.446577072143555
    10. '
' → logprob: -11.071577072143555

Token 1945: 'up' (ID: 817)
  Prédit: 'up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.4461662769317627
    2. 'for' → logprob: -1.5711662769317627
    3. 'ur' → logprob: -2.8211662769317627
    4. 'u' → logprob: -2.9461662769317627
    5. 'urrent' → logprob: -4.446166038513184
    6. 'urent' → logprob: -5.071166038513184
    7. '   ' → logprob: -5.446166038513184
    8. 'urse' → logprob: -5.946166038513184
    9. 'e' → logprob: -6.446166038513184
    10. ' for' → logprob: -6.571166038513184

Token 1946: 'ération' (ID: 24977)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.11926812678575516
    2. 'érer' → logprob: -2.3692681789398193
    3. 'ère' → logprob: -4.11926794052124
    4. 'for' → logprob: -7.86926794052124
    5. 'éré' → logprob: -7.86926794052124
    6. 'èr' → logprob: -7.99426794052124
    7. 'erer' → logprob: -8.244268417358398
    8. 'ere' → logprob: -8.369268417358398
    9. 'e' → logprob: -8.619268417358398
    10. 'érez' → logprob: -8.869268417358398

Token 1947: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05153807997703552
    2. 'i' → logprob: -3.5515379905700684
    3. 'dp' → logprob: -4.426537990570068
    4. 'range' → logprob: -6.176537990570068
    5. ' for' → logprob: -6.301537990570068
    6. 'j' → logprob: -6.426537990570068
    7. 'ans' → logprob: -6.676537990570068
    8. '_' → logprob: -7.426537990570068
    9. '   ' → logprob: -7.801537990570068
    10. '=' → logprob: -7.801537990570068

Token 1948: ' l' (ID: 305)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9499052166938782
    2. 'j' → logprob: -1.0749051570892334
    3. 'range' → logprob: -1.5749051570892334
    4. 'i' → logprob: -3.1999051570892334
    5. 'comp' → logprob: -4.5749053955078125
    6. 'len' → logprob: -5.3249053955078125
    7. 'id' → logprob: -5.5749053955078125
    8. 'data' → logprob: -5.8249053955078125
    9. 'h' → logprob: -7.4499053955078125
    10. 'sum' → logprob: -7.8249053955078125

Token 1949: ''ind' (ID: 82245)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.620253324508667
    2. 'len' → logprob: -2.245253324508667
    3. 'for' → logprob: -2.495253324508667
    4. 'i' → logprob: -2.745253324508667
    5. 'ange' → logprob: -2.745253324508667
    6. 'dp' → logprob: -2.745253324508667
    7. '[len' → logprob: -3.995253324508667
    8. '```' → logprob: -4.745253562927246
    9. '[-' → logprob: -4.995253562927246
    10. 'last' → logprob: -4.995253562927246

Token 1950: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.09565971046686172
    2. 'ice' → logprob: -2.4706597328186035
    3. 'dex' → logprob: -5.5956597328186035
    4. 'ices' → logprob: -6.4706597328186035
    5. '[' → logprob: -8.220659255981445
    6. 'ic' → logprob: -9.095659255981445
    7. '#' → logprob: -9.095659255981445
    8. '=' → logprob: -9.220659255981445
    9. 'd' → logprob: -9.220659255981445
    10. 'i' → logprob: -9.345659255981445

Token 1951: ' compress' (ID: 34112)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.631990909576416
    2. '=' → logprob: -1.131990909576416
    3. 'for' → logprob: -2.381990909576416
    4. 'i' → logprob: -4.006990909576416
    5. ' =' → logprob: -4.381990909576416
    6. 'comp' → logprob: -5.131990909576416
    7. 'j' → logprob: -5.381990909576416
    8. ',' → logprob: -5.881990909576416
    9. ' in' → logprob: -6.381990909576416
    10. 'id' → logprob: -6.631990909576416

Token 1952: 'é' (ID: 377)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.4931492507457733
    2. 'é' → logprob: -1.1181492805480957
    3. 'sed' → logprob: -2.8681492805480957
    4. 'e' → logprob: -6.368149280548096
    5. 'es' → logprob: -6.618149280548096
    6. 's' → logprob: -6.868149280548096
    7. 'isé' → logprob: -7.993149280548096
    8. 'sé' → logprob: -7.993149280548096
    9. 'se' → logprob: -8.368148803710938
    10. 'és' → logprob: -8.618148803710938

Token 1953: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03593973442912102
    2. ' =' → logprob: -4.410939693450928
    3. 'der' → logprob: -4.785939693450928
    4. 'dern' → logprob: -5.660939693450928
    5. 'comp' → logprob: -5.785939693450928
    6. 'du' → logprob: -5.910939693450928
    7. 'for' → logprob: -6.160939693450928
    8. 'id' → logprob: -6.910939693450928
    9. 'final' → logprob: -7.035939693450928
    10. 'last' → logprob: -7.160939693450928

Token 1954: ' la' (ID: 557)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.05040239170193672
    2. 'comp' → logprob: -3.1754024028778076
    3. 'H' → logprob: -4.9254021644592285
    4. ' h' → logprob: -10.050402641296387
    5. ' comp' → logprob: -10.550402641296387
    6. 'data' → logprob: -10.550402641296387
    7. 'com' → logprob: -12.300402641296387
    8. '[h' → logprob: -12.550402641296387
    9. ' H' → logprob: -12.925402641296387
    10. '(comp' → logprob: -13.425402641296387

Token 1955: ' dernière' (ID: 39497)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.06656824797391891
    2. 'comp' → logprob: -3.31656813621521
    3. 'last' → logprob: -3.94156813621521
    4. 'dern' → logprob: -5.066568374633789
    5. 'der' → logprob: -7.316568374633789
    6. 'd' → logprob: -7.691568374633789
    7. 'Dern' → logprob: -8.316568374633789
    8. ' dernière' → logprob: -8.816568374633789
    9. ' last' → logprob: -9.191568374633789
    10. 'next' → logprob: -9.566568374633789

Token 1956: ' hauteur' (ID: 72987)
  Prédit: 'ha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ha' → logprob: -0.2992442548274994
    2. 'h' → logprob: -1.4242442846298218
    3. 'height' → logprob: -4.674244403839111
    4. 'élé' → logprob: -5.174244403839111
    5. ' hauteur' → logprob: -6.674244403839111
    6. 'val' → logprob: -7.549244403839111
    7. '(h' → logprob: -7.674244403839111
    8. ']' → logprob: -9.299243927001953
    9. 'hé' → logprob: -9.424243927001953
    10. 'element' → logprob: -9.549243927001953

Token 1957: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2565300762653351
    2. '=' → logprob: -1.5065300464630127
    3. 'last' → logprob: -6.256530284881592
    4. 'id' → logprob: -7.006530284881592
    5. '   ' → logprob: -7.381530284881592
    6. 'comp' → logprob: -7.756530284881592
    7. 'der' → logprob: -8.631529808044434
    8. ' last' → logprob: -8.631529808044434
    9. '_last' → logprob: -8.881529808044434
    10. 'dern' → logprob: -9.756529808044434

Token 1958: ' la' (ID: 557)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -7.44574936106801e-05
    2. ' h' → logprob: -10.50007438659668
    3. 'comp' → logprob: -10.62507438659668
    4. 'H' → logprob: -11.62507438659668
    5. '```' → logprob: -12.00007438659668
    6. '`' → logprob: -13.12507438659668
    7. '[h' → logprob: -13.25007438659668
    8. '(h' → logprob: -14.25007438659668
    9. '	h' → logprob: -14.87507438659668
    10. ''h' → logprob: -14.87507438659668

Token 1959: ' sé' (ID: 7462)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0627850592136383
    2. 'sé' → logprob: -3.1877851486206055
    3. 's' → logprob: -4.4377851486206055
    4. 'sequence' → logprob: -5.5627851486206055
    5. 'liste' → logprob: -5.6877851486206055
    6. ' sé' → logprob: -8.437785148620605
    7. 'seq' → logprob: -8.937785148620605
    8. 'H' → logprob: -9.812785148620605
    9. 'list' → logprob: -9.937785148620605
    10. 'sequ' → logprob: -11.062785148620605

Token 1960: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -2.165027217415627e-05
    2. 'q' → logprob: -11.000021934509277
    3. 'quences' → logprob: -13.250021934509277
    4. 'que' → logprob: -13.625021934509277
    5. '#' → logprob: -14.000021934509277
    6. 'ence' → logprob: -15.000021934509277
    7. 'qu' → logprob: -15.125021934509277
    8. 'QUENCE' → logprob: -15.250021934509277
    9. '`' → logprob: -15.500021934509277
    10. 'ance' → logprob: -17.25002098083496

Token 1961: '.
' (ID: 558)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2942779064178467
    2. '=' → logprob: -1.4192779064178467
    3. 'last' → logprob: -5.294278144836426
    4. 'id' → logprob: -5.919278144836426
    5. '[last' → logprob: -6.294278144836426
    6. '   ' → logprob: -6.294278144836426
    7. ' last' → logprob: -7.669278144836426
    8. '_last' → logprob: -8.419278144836426
    9. 'final' → logprob: -8.544278144836426
    10. ']' → logprob: -8.794278144836426

Token 1962: '   ' (ID: 271)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.027863387018442154
    2. 'comp' → logprob: -3.6528635025024414
    3. 'last' → logprob: -7.152863502502441
    4. 'idx' → logprob: -8.902863502502441
    5. ' =' → logprob: -9.152863502502441
    6. '   ' → logprob: -9.277863502502441
    7. 'ans' → logprob: -9.277863502502441
    8. 'i' → logprob: -9.402863502502441
    9. 'for' → logprob: -9.652863502502441
    10. ' id' → logprob: -9.902863502502441

Token 1963: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' (adapté à ' id') → logprob: -0.0031464621424674988
    2. 'comp' → logprob: -6.003146648406982
    3. 'last' → logprob: -7.378146648406982
    4. 'idx' → logprob: -10.628146171569824
    5. 'final' → logprob: -12.378146171569824
    6. '   ' → logprob: -12.378146171569824
    7. 'ans' → logprob: -12.753146171569824
    8. 'end' → logprob: -13.378146171569824
    9. 'ind' → logprob: -13.378146171569824
    10. 'j' → logprob: -13.878146171569824

Token 1964: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0067154900170862675
    2. ' =' → logprob: -5.006715297698975
    3. '=
' → logprob: -16.631715774536133
    4. ')' → logprob: -17.756715774536133
    5. '=}' → logprob: -17.881715774536133
    6. '```' → logprob: -18.631715774536133
    7. '=

' → logprob: -18.881715774536133
    8. ',' → logprob: -19.131715774536133
    9. '=user' → logprob: -19.881715774536133
    10. '=com' → logprob: -19.881715774536133

Token 1965: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.03804263845086098
    2. ' comp' → logprob: -3.2880425453186035
    3. '(comp' → logprob: -14.413043022155762
    4. '	comp' → logprob: -14.663043022155762
    5. 'com' → logprob: -16.038042068481445
    6. '[' → logprob: -18.288042068481445
    7. 'cop' → logprob: -18.288042068481445
    8. ' comps' → logprob: -18.413042068481445
    9. '.comp' → logprob: -18.538042068481445
    10. 'cmp' → logprob: -18.913042068481445

Token 1966: '[h' (ID: 88900)
  Prédit: '[h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -0.014176322147250175
    2. '[' → logprob: -4.264176368713379
    3. 'h' → logprob: -11.639176368713379
    4. 'H' → logprob: -12.639176368713379
    5. '(h' → logprob: -14.264176368713379
    6. '(H' → logprob: -16.139175415039062
    7. '```' → logprob: -18.389175415039062
    8. '[
' → logprob: -19.389175415039062
    9. ' H' → logprob: -19.889175415039062
    10. ' h' → logprob: -20.889175415039062

Token 1967: '[-' (ID: 17503)
  Prédit: '[N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.030143138021230698
    2. '[-' → logprob: -3.5301430225372314
    3. '[n' → logprob: -8.030142784118652
    4. '[' → logprob: -9.655142784118652
    5. '[i' → logprob: -13.905142784118652
    6. '[len' → logprob: -14.155142784118652
    7. ']' → logprob: -14.280142784118652
    8. '[
' → logprob: -14.655142784118652
    9. 'N' → logprob: -15.780142784118652
    10. '(N' → logprob: -18.03014373779297

Token 1968: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. '-' → logprob: -14.250000953674316
    3. '```' → logprob: -18.125
    4. ' ' → logprob: -18.5
    5. '
' → logprob: -18.75
    6. '(-' → logprob: -18.75
    7. '   ' → logprob: -19.0
    8. '0' → logprob: -19.25
    9. ' -' → logprob: -19.5
    10. ']' → logprob: -19.75

Token 1969: ']]

' (ID: 84024)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010223285062238574
    2. ']]' → logprob: -7.3760223388671875
    3. ')]' → logprob: -8.376022338867188
    4. ']
' → logprob: -8.876022338867188
    5. '])' → logprob: -11.376022338867188
    6. ']+' → logprob: -12.501022338867188
    7. ']]]' → logprob: -13.001022338867188
    8. ']
' → logprob: -13.501022338867188
    9. ']]
' → logprob: -13.501022338867188
    10. ']

' → logprob: -14.126022338867188

Token 1970: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0004261468129698187
    2. 'i' → logprob: -7.875426292419434
    3. ' for' → logprob: -11.125426292419434
    4. '```' → logprob: -11.250426292419434
    5. 'ans' → logprob: -12.250426292419434
    6. 'dp' → logprob: -12.625426292419434
    7. 'if' → logprob: -12.625426292419434
    8. '+' → logprob: -12.875426292419434
    9. '   ' → logprob: -13.250426292419434
    10. '#' → logprob: -13.875426292419434

Token 1971: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.700132997939363e-05
    2. 'i' → logprob: -11.625017166137695
    3. 'ans' → logprob: -12.625017166137695
    4. ' for' → logprob: -13.375017166137695
    5. 'if' → logprob: -13.375017166137695
    6. '```' → logprob: -14.125017166137695
    7. '#' (adapté à ' #') → logprob: -14.750017166137695
    8. '
' → logprob: -15.500017166137695
    9. 'id' → logprob: -16.250017166137695
    10. 'j' → logprob: -16.625017166137695

Token 1972: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0011059214593842626
    2. 'if' → logprob: -7.126105785369873
    3. 'ans' → logprob: -8.751106262207031
    4. '#' → logprob: -8.876106262207031
    5. ' for' → logprob: -13.876106262207031
    6. 'dp' → logprob: -14.001106262207031
    7. '```' → logprob: -14.501106262207031
    8. 'answer' → logprob: -14.751106262207031
    9. 'result' → logprob: -15.001106262207031
    10. 'id' → logprob: -16.75110626220703

Token 1973: ' chaque' (ID: 21194)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0002354832977289334
    2. 'i' → logprob: -8.500235557556152
    3. ' j' → logprob: -10.375235557556152
    4. 'range' → logprob: -15.125235557556152
    5. '_j' → logprob: -15.500235557556152
    6. 'k' → logprob: -17.250234603881836
    7. '```' → logprob: -17.375234603881836
    8. ' i' → logprob: -17.875234603881836
    9. 'id' → logprob: -18.250234603881836
    10. '	j' → logprob: -18.250234603881836

Token 1974: ' état' (ID: 59181)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.016200819984078407
    2. 'i' → logprob: -4.141201019287109
    3. ' j' → logprob: -8.76620101928711
    4. ' i' → logprob: -12.26620101928711
    5. 'k' → logprob: -12.76620101928711
    6. 'x' → logprob: -13.64120101928711
    7. '```' → logprob: -14.76620101928711
    8. 'v' → logprob: -15.26620101928711
    9. 'val' → logprob: -15.89120101928711
    10. '_j' → logprob: -16.14120101928711

Token 1975: ' ant' (ID: 4624)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.018381360918283463
    2. ' in' → logprob: -4.018381595611572
    3. 'j' → logprob: -8.768381118774414
    4. 'for' → logprob: -9.893381118774414
    5. 'i' → logprob: -11.268381118774414
    6. '```' → logprob: -11.893381118774414
    7. ' j' → logprob: -13.518381118774414
    8. ' ' → logprob: -14.518381118774414
    9. '	in' → logprob: -14.518381118774414
    10. '[j' → logprob: -14.518381118774414

Token 1976: 'érieur' (ID: 24251)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7375403642654419
    2. 'in' → logprob: -0.9875403642654419
    3. 'for' → logprob: -2.7375402450561523
    4. ' in' → logprob: -3.2375402450561523
    5. 'j' → logprob: -3.3625402450561523
    6. 'ur' → logprob: -5.487540245056152
    7. 'range' → logprob: -6.362540245056152
    8. ' j' → logprob: -6.487540245056152
    9. 'idx' → logprob: -7.612540245056152
    10. 's' → logprob: -7.612540245056152

Token 1977: ' à' (ID: 1221)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.17981593310832977
    2. ' in' → logprob: -1.8048158884048462
    3. 'j' → logprob: -10.679816246032715
    4. 'i' → logprob: -11.429816246032715
    5. ',' → logprob: -11.804816246032715
    6. '   ' → logprob: -12.304816246032715
    7. '```' → logprob: -12.304816246032715
    8. ' j' → logprob: -12.679816246032715
    9. 'id' → logprob: -12.929816246032715
    10. '[j' → logprob: -13.179816246032715

Token 1978: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.0015484257601201534
    2. 'range' → logprob: -6.6265482902526855
    3. 'j' → logprob: -9.126548767089844
    4. ' id' → logprob: -9.251548767089844
    5. 'i' → logprob: -11.626548767089844
    6. '(id' → logprob: -12.751548767089844
    7. 'len' → logprob: -12.876548767089844
    8. ' range' → logprob: -13.501548767089844
    9. 'idx' → logprob: -14.626548767089844
    10. 'in' → logprob: -15.001548767089844

Token 1979: ' :
' (ID: 10039)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.07850247621536255
    2. ' in' → logprob: -2.7035024166107178
    3. '   ' → logprob: -4.828502655029297
    4. ':' → logprob: -8.828502655029297
    5. 'for' → logprob: -9.203502655029297
    6. '(in' → logprob: -9.453502655029297
    7. ',' → logprob: -9.578502655029297
    8. ':
' → logprob: -9.828502655029297
    9. '(id' → logprob: -10.328502655029297
    10. '       ' → logprob: -10.828502655029297

Token 1980: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00011772842844948173
    2. ' for' → logprob: -9.375117301940918
    3. '   ' → logprob: -10.375117301940918
    4. '```' → logprob: -13.875117301940918
    5. 'range' → logprob: -14.125117301940918
    6. '	for' → logprob: -17.500118255615234
    7. '``' → logprob: -18.125118255615234
    8. 'ans' → logprob: -19.000118255615234
    9. '
' → logprob: -19.625118255615234
    10. 'i' → logprob: -19.750118255615234

Token 1981: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.005862428341060877
    2. 'in' → logprob: -5.255862236022949
    3. 'range' → logprob: -8.13086223602295
    4. ' in' → logprob: -8.38086223602295
    5. ' for' → logprob: -9.25586223602295
    6. 'j' → logprob: -11.88086223602295
    7. ' range' → logprob: -13.88086223602295
    8. '```' → logprob: -14.00586223602295
    9. '   ' → logprob: -14.63086223602295
    10. ' j' → logprob: -16.130863189697266

Token 1982: ' i' (ID: 575)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.010141338221728802
    2. ' j' → logprob: -4.635141372680664
    3. 'i' → logprob: -7.885141372680664
    4. ' i' → logprob: -11.760141372680664
    5. '_j' → logprob: -14.260141372680664
    6. '	j' → logprob: -16.260141372680664
    7. '_' → logprob: -16.385141372680664
    8. ' ' → logprob: -17.010141372680664
    9. 'range' → logprob: -17.510141372680664
    10. '```' → logprob: -17.760141372680664

Token 1983: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3872988522052765
    2. 'in' → logprob: -1.137298822402954
    3. 'n' → logprob: -8.387298583984375
    4. '(' → logprob: -9.887298583984375
    5. '   ' → logprob: -10.762298583984375
    6. ' ' → logprob: -11.012298583984375
    7. 'range' → logprob: -11.137298583984375
    8. '0' → logprob: -11.262298583984375
    9. '	in' → logprob: -11.387298583984375
    10. ',' → logprob: -11.512298583984375

Token 1984: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023280655965209007
    2. ' range' → logprob: -3.773280620574951
    3. 'in' → logprob: -10.52328109741211
    4. ' in' → logprob: -11.77328109741211
    5. '0' → logprob: -15.14828109741211
    6. ' ' → logprob: -16.14828109741211
    7. 'id' → logprob: -16.64828109741211
    8. 'i' → logprob: -16.77328109741211
    9. '   ' → logprob: -17.89828109741211
    10. '(range' → logprob: -18.02328109741211

Token 1985: '(' (ID: 7)
  Prédit: '(id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(id' → logprob: -0.1602296084165573
    2. '(' → logprob: -1.9102295637130737
    3. '(i' → logprob: -13.410229682922363
    4. 'id' → logprob: -13.410229682922363
    5. '0' → logprob: -13.535229682922363
    6. '(len' → logprob: -14.535229682922363
    7. ' (' → logprob: -15.785229682922363
    8. ' id' → logprob: -16.410228729248047
    9. '(idx' → logprob: -16.785228729248047
    10. '?id' → logprob: -17.035228729248047

Token 1986: '0' (ID: 15)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.387073814868927
    2. '0' → logprob: -1.1370737552642822
    3. ' id' → logprob: -8.637073516845703
    4. ' ' → logprob: -11.137073516845703
    5. '(id' → logprob: -12.012073516845703
    6. 'len' → logprob: -13.262073516845703
    7. '(' → logprob: -13.387073516845703
    8. '	id' → logprob: -14.387073516845703
    9. '   ' → logprob: -15.137073516845703
    10. '1' → logprob: -15.762073516845703

Token 1987: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11857932060956955
    2. '(id' → logprob: -2.743579387664795
    3. '(' → logprob: -3.118579387664795
    4. ',id' → logprob: -6.618579387664795
    5. ' (' → logprob: -7.368579387664795
    6. ' ' → logprob: -7.993579387664795
    7. '0' → logprob: -8.118578910827637
    8. ' ,' → logprob: -8.493578910827637
    9. 'id' → logprob: -8.493578910827637
    10. ' id' → logprob: -9.368578910827637

Token 1988: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -1.9027791495318525e-05
    2. ' id' → logprob: -10.875019073486328
    3. 'mod' → logprob: -18.125019073486328
    4. '	id' → logprob: -18.875019073486328
    5. '   ' → logprob: -20.000019073486328
    6. '(id' → logprob: -20.125019073486328
    7. 'len' → logprob: -20.250019073486328
    8. '0' → logprob: -21.750019073486328
    9. ' ' → logprob: -22.000019073486328
    10. '"id' → logprob: -22.125019073486328

Token 1989: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.034760843962430954
    2. '):' → logprob: -3.5347609519958496
    3. '+' → logprob: -5.65976095199585
    4. '   ' → logprob: -6.90976095199585
    5. '       ' → logprob: -8.659760475158691
    6. ':' → logprob: -8.909760475158691
    7. '():
' → logprob: -9.534760475158691
    8. ':
' → logprob: -9.784760475158691
    9. '):
' → logprob: -10.159760475158691
    10. ')' → logprob: -11.284760475158691

Token 1990: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5149720907211304
    2. 'ans' → logprob: -1.5149720907211304
    3. 'dp' → logprob: -1.8899720907211304
    4. ' ans' → logprob: -4.13997220993042
    5. ' dp' → logprob: -5.13997220993042
    6. '       ' → logprob: -5.51497220993042
    7. '```' → logprob: -5.63997220993042
    8. '(ans' → logprob: -6.63997220993042
    9. '	ans' → logprob: -7.38997220993042
    10. '	dp' → logprob: -9.139971733093262

Token 1991: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00041816019802354276
    2. '(ans' → logprob: -8.375417709350586
    3. 'dp' → logprob: -8.750417709350586
    4. ' ans' → logprob: -10.750417709350586
    5. '   ' → logprob: -12.375417709350586
    6. '```' → logprob: -13.375417709350586
    7. '	ans' → logprob: -13.500417709350586
    8. 'for' → logprob: -16.125417709350586
    9. '_ans' → logprob: -16.250417709350586
    10. 'answer' → logprob: -16.375417709350586

Token 1992: ' R' (ID: 460)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -2.816093228830141e-06
    2. '   ' → logprob: -13.12500286102295
    3. ' ans' → logprob: -14.62500286102295
    4. '(ans' → logprob: -15.87500286102295
    5. '	ans' → logprob: -16.250001907348633
    6. '       ' → logprob: -17.500001907348633
    7. 'answer' → logprob: -19.625001907348633
    8. '_ans' → logprob: -20.125001907348633
    9. 'anst' → logprob: -21.125001907348633
    10. '```' → logprob: -21.375001907348633

Token 1993: 'éc' (ID: 5675)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.022140713408589363
    2. 'es' → logprob: -4.1471405029296875
    3. 'eturn' → logprob: -6.1471405029296875
    4. 'ange' → logprob: -6.7721405029296875
    5. 'e' → logprob: -7.0221405029296875
    6. '(ans' → logprob: -8.022140502929688
    7. 'em' → logprob: -8.147140502929688
    8. 'ev' → logprob: -8.897140502929688
    9. '```' → logprob: -9.022140502929688
    10. '	ans' → logprob: -9.022140502929688

Token 1994: 'up' (ID: 817)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.019506508484482765
    2. '   ' → logprob: -4.144506454467773
    3. '       ' → logprob: -6.144506454467773
    4. '	ans' → logprob: -7.394506454467773
    5. '(ans' → logprob: -8.144506454467773
    6. ' ans' → logprob: -8.144506454467773
    7. '  ' → logprob: -10.769506454467773
    8. ' ' → logprob: -11.144506454467773
    9. 'es' → logprob: -11.269506454467773
    10. 'answer' → logprob: -11.894506454467773

Token 1995: 'ération' (ID: 24977)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.2285747230052948
    2. 'érer' → logprob: -2.103574752807617
    3. 'ans' → logprob: -3.478574752807617
    4. '(ans' → logprob: -4.228574752807617
    5. '   ' → logprob: -4.603574752807617
    6. '       ' → logprob: -5.603574752807617
    7. 'urer' → logprob: -5.978574752807617
    8. ' ans' → logprob: -6.228574752807617
    9. 'ure' → logprob: -6.478574752807617
    10. 'uler' → logprob: -6.728574752807617

Token 1996: ' des' (ID: 731)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.37929767370224
    2. '(dp' → logprob: -1.8792977333068848
    3. 'ans' → logprob: -2.0042977333068848
    4. '(ans' → logprob: -3.6292977333068848
    5. '(' → logprob: -7.379297733306885
    6. ' dp' → logprob: -7.879297733306885
    7. '   ' → logprob: -8.254297256469727
    8. '       ' → logprob: -8.379297256469727
    9. ' ans' → logprob: -9.629297256469727
    10. '(
' → logprob: -10.004297256469727

Token 1997: ' born' (ID: 12275)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.016327137127518654
    2. 'ans' → logprob: -4.141326904296875
    3. ' dp' → logprob: -8.641326904296875
    4. '(dp' → logprob: -10.016326904296875
    5. '(ans' → logprob: -11.016326904296875
    6. ' ans' → logprob: -11.391326904296875
    7. 'i' → logprob: -11.516326904296875
    8. '
' → logprob: -12.516326904296875
    9. '```' → logprob: -12.641326904296875
    10. '#' → logprob: -12.641326904296875

Token 1998: 'es' (ID: 268)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.028053145855665207
    2. ' dp' → logprob: -4.278053283691406
    3. '(dp' → logprob: -5.153053283691406
    4. '[i' → logprob: -5.403053283691406
    5. 'es' → logprob: -6.903053283691406
    6. '_dp' → logprob: -7.153053283691406
    7. '[' → logprob: -7.528053283691406
    8. 'ases' → logprob: -7.903053283691406
    9. '=' → logprob: -9.028053283691406
    10. '	dp' → logprob: -9.528053283691406

Token 1999: ' basse' (ID: 110686)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.02123536728322506
    2. '       ' → logprob: -4.646235466003418
    3. '=' → logprob: -5.396235466003418
    4. ' low' → logprob: -5.521235466003418
    5. ' =' → logprob: -6.646235466003418
    6. '(low' → logprob: -7.021235466003418
    7. '_low' → logprob: -8.521235466003418
    8. '   ' → logprob: -9.271235466003418
    9. '```' → logprob: -9.271235466003418
    10. 'lower' → logprob: -9.771235466003418

Token 2000: ' et' (ID: 859)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.722650408744812
    2. 'low' → logprob: -1.722650408744812
    3. '=' → logprob: -2.7226505279541016
    4. 'et' → logprob: -2.8476505279541016
    5. ',' → logprob: -3.0976505279541016
    6. ' and' → logprob: -3.4726505279541016
    7. '(low' → logprob: -3.5976505279541016
    8. '(data' → logprob: -3.7226505279541016
    9. ' =' → logprob: -3.9726505279541016
    10. 'and' → logprob: -4.097650527954102

Token 2001: ' haute' (ID: 49646)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.13964086771011353
    2. 'j' → logprob: -3.1396408081054688
    3. 'high' → logprob: -3.3896408081054688
    4. 'i' → logprob: -3.6396408081054688
    5. 'up' → logprob: -4.764640808105469
    6. ' data' → logprob: -5.014640808105469
    7. 'id' → logprob: -6.139640808105469
    8. 'haut' → logprob: -6.889640808105469
    9. ' haute' → logprob: -7.014640808105469
    10. 'upper' → logprob: -7.014640808105469

Token 2002: ' correspond' (ID: 11095)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.06170008331537247
    2. '       ' → logprob: -3.4367001056671143
    3. '=' → logprob: -4.311699867248535
    4. ' low' → logprob: -5.436699867248535
    5. ' =' → logprob: -5.811699867248535
    6. '(low' → logprob: -6.186699867248535
    7. '   ' → logprob: -6.561699867248535
    8. 'j' → logprob: -6.811699867248535
    9. ',' → logprob: -6.811699867248535
    10. '```' → logprob: -8.186699867248535

Token 2003: 'antes' (ID: 5193)
  Prédit: 'ant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.8604406714439392
    2. 'entes' → logprob: -1.485440731048584
    3. 'ues' → logprob: -1.610440731048584
    4. 'ées' → logprob: -2.485440731048584
    5. 'antes' → logprob: -3.860440731048584
    6. 'ent' → logprob: -3.985440731048584
    7. '```' → logprob: -4.735440731048584
    8. 'ents' → logprob: -5.485440731048584
    9. 'à' → logprob: -5.485440731048584
    10. 'es' → logprob: -6.610440731048584

Token 2004: ' à' (ID: 1221)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5393993258476257
    2. 'data' → logprob: -2.1643993854522705
    3. ':' → logprob: -2.7893993854522705
    4. '=data' → logprob: -3.2893993854522705
    5. '(data' → logprob: -3.2893993854522705
    6. '=' → logprob: -3.6643993854522705
    7. 'low' → logprob: -3.7893993854522705
    8. ',' → logprob: -3.7893993854522705
    9. ':
' → logprob: -4.039399147033691
    10. ' =' → logprob: -4.289399147033691

Token 2005: ' la' (ID: 557)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.0005644689663313329
    2. ' data' → logprob: -8.000564575195312
    3. 'i' → logprob: -8.500564575195312
    4. 'range' → logprob: -10.875564575195312
    5. '
' → logprob: -12.750564575195312
    6. '(data' → logprob: -14.000564575195312
    7. ' i' → logprob: -14.250564575195312
    8. '[data' → logprob: -14.250564575195312
    9. '```' → logprob: -15.125564575195312
    10. 'd' → logprob: -15.250564575195312

Token 2006: ' compression' (ID: 41811)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.0011003263061866164
    2. 'i' → logprob: -7.376100540161133
    3. ' data' → logprob: -8.751100540161133
    4. 'range' → logprob: -9.376100540161133
    5. 'comp' → logprob: -9.626100540161133
    6. '
' → logprob: -10.126100540161133
    7. 'for' → logprob: -10.376100540161133
    8. 'j' → logprob: -10.626100540161133
    9. '[data' → logprob: -11.501100540161133
    10. 'dp' → logprob: -11.501100540161133

Token 2007: ' cour' (ID: 2871)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.3354015648365021
    2. '=' → logprob: -1.4604015350341797
    3. ' =' → logprob: -3.8354015350341797
    4. '       ' → logprob: -4.46040153503418
    5. 'j' → logprob: -4.83540153503418
    6. '   ' → logprob: -6.21040153503418
    7. '(low' → logprob: -6.33540153503418
    8. ' low' → logprob: -6.58540153503418
    9. ']' → logprob: -6.83540153503418
    10. '[j' → logprob: -6.96040153503418

Token 2008: 'ante' (ID: 2116)
  Prédit: 'ant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.6037886142730713
    2. 'ante' → logprob: -0.8537886142730713
    3. 'i' → logprob: -3.7287886142730713
    4. 'e' → logprob: -6.728788375854492
    5. 'for' → logprob: -7.353788375854492
    6. 'r' → logprob: -7.853788375854492
    7. 'ent' → logprob: -7.853788375854492
    8. 'b' → logprob: -8.853788375854492
    9. 'be' → logprob: -8.978788375854492
    10. '```' → logprob: -9.228788375854492

Token 2009: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.531291127204895
    2. 'low' → logprob: -1.656291127204895
    3. '=' → logprob: -2.0312910079956055
    4. ' =' → logprob: -2.6562910079956055
    5. '(low' → logprob: -4.6562910079956055
    6. '```' → logprob: -6.0312910079956055
    7. ' low' → logprob: -6.1562910079956055
    8. ',' → logprob: -6.4062910079956055
    9. '   ' → logprob: -6.9062910079956055
    10. '           ' → logprob: -7.2812910079956055

Token 2010: '       ' (ID: 309)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.03251766785979271
    2. '       ' → logprob: -4.157517433166504
    3. ' low' → logprob: -4.407517433166504
    4. '   ' → logprob: -6.032517433166504
    5. 'ans' → logprob: -6.907517433166504
    6. '           ' → logprob: -8.157517433166504
    7. '```' → logprob: -8.282517433166504
    8. 'up' → logprob: -9.782517433166504
    9. '{
' → logprob: -9.907517433166504
    10. '``' → logprob: -10.782517433166504

Token 2011: ' low' (ID: 4465)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' (adapté à ' low') → logprob: -0.0005902059492655098
    2. ' low' → logprob: -7.5005903244018555
    3. '   ' → logprob: -10.750590324401855
    4. 'up' → logprob: -11.625590324401855
    5. 'j' → logprob: -12.875590324401855
    6. '       ' → logprob: -13.750590324401855
    7. '```' → logprob: -13.875590324401855
    8. '(low' → logprob: -14.250590324401855
    9. '{
' → logprob: -14.875590324401855
    10. 'data' → logprob: -14.875590324401855

Token 2012: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048682861030101776
    2. ' =' → logprob: -3.048682928085327
    3. '=data' → logprob: -9.423683166503906
    4. ',' → logprob: -11.173683166503906
    5. '=
' → logprob: -14.923683166503906
    6. 'data' → logprob: -16.173683166503906
    7. '   ' → logprob: -16.298683166503906
    8. ')' → logprob: -17.173683166503906
    9. ',data' → logprob: -17.173683166503906
    10. '=}' → logprob: -17.298683166503906

Token 2013: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.003181994194164872
    2. ' data' → logprob: -5.7531819343566895
    3. '(data' → logprob: -14.003182411193848
    4. '   ' → logprob: -14.128182411193848
    5. '[data' → logprob: -14.128182411193848
    6. '
' → logprob: -14.503182411193848
    7. '	data' → logprob: -15.378182411193848
    8. '{
' → logprob: -15.753182411193848
    9. ')data' → logprob: -15.753182411193848
    10. '<data' → logprob: -16.12818145751953

Token 2014: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00025645215646363795
    2. '[j' → logprob: -8.375256538391113
    3. 'i' → logprob: -10.625256538391113
    4. '[' → logprob: -14.000256538391113
    5. 'j' → logprob: -14.375256538391113
    6. '[
' → logprob: -15.750256538391113
    7. '
' → logprob: -16.875255584716797
    8. ' [' → logprob: -17.750255584716797
    9. ' i' → logprob: -18.125255584716797
    10. '(i' → logprob: -18.375255584716797

Token 2015: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.004111762158572674
    2. ']' → logprob: -5.5041117668151855
    3. ']
' → logprob: -10.504111289978027
    4. '-' → logprob: -13.004111289978027
    5. ' ]
' → logprob: -13.629111289978027
    6. ' -' → logprob: -13.879111289978027
    7. '+' → logprob: -14.129111289978027
    8. '   ' → logprob: -15.754111289978027
    9. ']

' → logprob: -15.879111289978027
    10. ']-' → logprob: -16.004112243652344

Token 2016: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14763998985290527
    2. '           ' → logprob: -3.2726399898529053
    3. ' =' → logprob: -3.2726399898529053
    4. '   ' → logprob: -3.7726399898529053
    5. '```' → logprob: -4.522640228271484
    6. ' ' → logprob: -5.147640228271484
    7. '        ' → logprob: -5.522640228271484
    8. '=' → logprob: -5.772640228271484
    9. ',' → logprob: -6.272640228271484
    10. '               ' → logprob: -6.397640228271484

Token 2017: ' up' (ID: 869)
  Prédit: 'up'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'up' (adapté à ' up') → logprob: -0.0013298832345753908
    2. 'high' → logprob: -7.1263298988342285
    3. ' up' → logprob: -7.6263298988342285
    4. 'upp' → logprob: -11.25132942199707
    5. '   ' → logprob: -11.50132942199707
    6. '	up' → logprob: -11.87632942199707
    7. ' high' → logprob: -12.75132942199707
    8. '       ' → logprob: -12.75132942199707
    9. 'upt' → logprob: -14.25132942199707
    10. 'upper' → logprob: -14.50132942199707

Token 2018: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22034265100955963
    2. ' data' → logprob: -2.0953426361083984
    3. '=' → logprob: -2.9703426361083984
    4. '=data' → logprob: -3.9703426361083984
    5. 'data' → logprob: -5.595342636108398
    6. '[data' → logprob: -8.470342636108398
    7. '(data' → logprob: -8.720342636108398
    8. '+' → logprob: -8.845342636108398
    9. ')' → logprob: -9.345342636108398
    10. ',' → logprob: -9.345342636108398

Token 2019: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.020559286698698997
    2. ' data' → logprob: -3.895559310913086
    3. '   ' → logprob: -12.645559310913086
    4. '
' → logprob: -13.020559310913086
    5. 'i' → logprob: -13.395559310913086
    6. '	data' → logprob: -13.520559310913086
    7. '(data' → logprob: -13.645559310913086
    8. 'd' → logprob: -13.770559310913086
    9. ' ' → logprob: -14.020559310913086
    10. '1' → logprob: -14.020559310913086

Token 2020: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.68153518543113e-05
    2. 'i' → logprob: -10.250057220458984
    3. '[data' → logprob: -11.500057220458984
    4. 'data' → logprob: -11.750057220458984
    5. '{i' → logprob: -13.000057220458984
    6. '[' → logprob: -14.000057220458984
    7. '[j' → logprob: -16.125057220458984
    8. 'up' → logprob: -16.375057220458984
    9. '```' → logprob: -17.375057220458984
    10. '(i' → logprob: -17.500057220458984

Token 2021: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04915793612599373
    2. '[i' → logprob: -3.6741578578948975
    3. ']' → logprob: -4.299158096313477
    4. 'i' → logprob: -4.924158096313477
    5. ' +' → logprob: -6.549158096313477
    6. '+
' → logprob: -8.924158096313477
    7. '(i' → logprob: -9.799158096313477
    8. ']+' → logprob: -10.299158096313477
    9. '+i' → logprob: -10.549158096313477
    10. '   ' → logprob: -10.674158096313477

Token 2022: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3306015716807451e-05
    2. ' ' → logprob: -11.25001335144043
    3. '
' → logprob: -16.50001335144043
    4. '```' → logprob: -16.62501335144043
    5. 'i' → logprob: -16.75001335144043
    6. '0' → logprob: -17.12501335144043
    7. ']' → logprob: -18.06251335144043
    8. '   ' → logprob: -18.50001335144043
    9. '(i' → logprob: -18.87501335144043
    10. '  ' → logprob: -19.12501335144043

Token 2023: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017362393555231392
    2. 'i' → logprob: -9.000173568725586
    3. ' ' → logprob: -10.000173568725586
    4. 'j' → logprob: -13.375173568725586
    5. '
' → logprob: -14.250173568725586
    6. '(i' → logprob: -14.250173568725586
    7. ']' → logprob: -14.375173568725586
    8. '```' → logprob: -14.500173568725586
    9. ' i' → logprob: -15.250173568725586
    10. '   ' → logprob: -15.750173568725586

Token 2024: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0038048301357775927
    2. ')' → logprob: -6.503804683685303
    3. ' -' → logprob: -7.253804683685303
    4. '+' → logprob: -7.628804683685303
    5. ']
' → logprob: -8.253805160522461
    6. '-' → logprob: -8.378805160522461
    7. ' ]' → logprob: -8.503805160522461
    8. ']+' → logprob: -8.628805160522461
    9. ' +' → logprob: -9.003805160522461
    10. '```' → logprob: -9.753805160522461

Token 2025: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3771284818649292
    2. ')' → logprob: -2.2521286010742188
    3. '```' → logprob: -3.1271286010742188
    4. '=' → logprob: -3.5021286010742188
    5. '           ' → logprob: -3.7521286010742188
    6. '   ' → logprob: -3.7521286010742188
    7. 'dp' → logprob: -3.8771286010742188
    8. ' =' → logprob: -4.002128601074219
    9. '
' → logprob: -4.627128601074219
    10. '+' → logprob: -5.002128601074219

Token 2026: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.036524842376821e-05
    2. ' ' → logprob: -10.125040054321289
    3. '```' → logprob: -15.250040054321289
    4. ' ' → logprob: -19.12504005432129
    5. '   ' → logprob: -19.12504005432129
    6. '0' → logprob: -20.00004005432129
    7. '<|end|>' → logprob: -20.12504005432129
    8. '`' → logprob: -20.37504005432129
    9. '
' → logprob: -20.62504005432129
    10. '2' → logprob: -20.62504005432129

Token 2027: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '```' → logprob: -17.125
    4. '
' → logprob: -18.375
    5. '0' → logprob: -19.125
    6. '   ' → logprob: -19.25
    7. 'mod' → logprob: -19.625
    8. '2' → logprob: -20.625
    9. '+' → logprob: -20.875
    10. '' → logprob: -21.25

Token 2028: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10368125885725021
    2. 'dp' → logprob: -3.1036813259124756
    3. '   ' → logprob: -3.3536813259124756
    4. '```' → logprob: -4.8536810874938965
    5. ')' → logprob: -5.2286810874938965
    6. '
' → logprob: -6.1036810874938965
    7. ' dp' → logprob: -6.9786810874938965
    8. '           ' → logprob: -7.3536810874938965
    9. 'for' → logprob: -8.103681564331055
    10. ' for' → logprob: -8.103681564331055

Token 2029: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005277988035231829
    2. '   ' → logprob: -5.88027811050415
    3. '```' → logprob: -6.63027811050415
    4. '           ' → logprob: -7.50527811050415
    5. 'dp' → logprob: -8.505277633666992
    6. 'for' → logprob: -8.505277633666992
    7. ' for' → logprob: -9.380277633666992
    8. '``' → logprob: -9.755277633666992
    9. ')' → logprob: -11.380277633666992
    10. ' dp' → logprob: -11.630277633666992

Token 2030: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.25181713700294495
    2. 'dp' → logprob: -1.7518171072006226
    3. '```' → logprob: -3.626817226409912
    4. '       ' → logprob: -4.126817226409912
    5. 'for' → logprob: -5.501817226409912
    6. '   ' → logprob: -6.626817226409912
    7. '``' → logprob: -7.001817226409912
    8. '(ans' → logprob: -10.001816749572754
    9. ' ans' → logprob: -10.626816749572754
    10. ' dp' → logprob: -11.251816749572754

Token 2031: ' On' (ID: 2160)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -7.93448489275761e-05
    2. 'dp' → logprob: -10.125079154968262
    3. '   ' → logprob: -10.625079154968262
    4. '       ' → logprob: -11.625079154968262
    5. '```' → logprob: -12.375079154968262
    6. 'for' → logprob: -14.000079154968262
    7. ' ans' → logprob: -15.000079154968262
    8. '(ans' → logprob: -15.625079154968262
    9. '	ans' → logprob: -15.750079154968262
    10. '``' → logprob: -15.875079154968262

Token 2032: ' ajoute' (ID: 91611)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.006776946131139994
    2. '+=' → logprob: -5.006776809692383
    3. ' +=' → logprob: -10.131776809692383
    4. '
' → logprob: -11.881776809692383
    5. ' ans' → logprob: -11.881776809692383
    6. 'for' → logprob: -13.131776809692383
    7. '(ans' → logprob: -13.381776809692383
    8. '_ans' → logprob: -14.006776809692383
    9. ']+=' → logprob: -14.006776809692383
    10. '+=(' → logprob: -14.256776809692383

Token 2033: ' au' (ID: 2791)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.16716553270816803
    2. '(dp' → logprob: -1.9171655178070068
    3. ' dp' → logprob: -5.167165756225586
    4. ' (' → logprob: -7.667165756225586
    5. '(' → logprob: -8.042165756225586
    6. '(ans' → logprob: -8.292165756225586
    7. 'ans' → logprob: -8.792165756225586
    8. '   ' → logprob: -11.292165756225586
    9. ' ans' → logprob: -11.917165756225586
    10. '(d' → logprob: -13.292165756225586

Token 2034: ' résultat' (ID: 62556)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0021620409097522497
    2. '(ans' → logprob: -6.252161979675293
    3. 'dp' → logprob: -8.877161979675293
    4. ' ans' → logprob: -9.627161979675293
    5. '(dp' → logprob: -10.752161979675293
    6. '(' → logprob: -12.377161979675293
    7. 'answer' → logprob: -13.877161979675293
    8. ' (' → logprob: -14.502161979675293
    9. '(
' → logprob: -14.877161979675293
    10. '	ans' → logprob: -15.752161979675293

Token 2035: ' toutes' (ID: 17502)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.08880171179771423
    2. ' dp' → logprob: -2.838801622390747
    3. '(dp' → logprob: -3.963801622390747
    4. ' (' → logprob: -5.463801860809326
    5. '(' → logprob: -5.838801860809326
    6. '   ' → logprob: -9.088801383972168
    7. '(ans' → logprob: -9.838801383972168
    8. 'ans' → logprob: -9.838801383972168
    9. '(
' → logprob: -10.088801383972168
    10. ' ans' → logprob: -10.213801383972168

Token 2036: ' les' (ID: 1341)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1354677975177765
    2. '(dp' → logprob: -2.260467767715454
    3. ' dp' → logprob: -4.510468006134033
    4. '(' → logprob: -4.760468006134033
    5. ' (' → logprob: -6.385468006134033
    6. '(
' → logprob: -7.260468006134033
    7. '   ' → logprob: -8.510467529296875
    8. 'pow' → logprob: -9.260467529296875
    9. '((' → logprob: -10.260467529296875
    10. '(i' → logprob: -11.010467529296875

Token 2037: ' comb' (ID: 4134)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.14854401350021362
    2. '(dp' → logprob: -2.0235440731048584
    3. '(' → logprob: -5.523543834686279
    4. ' dp' → logprob: -7.398543834686279
    5. 'ans' → logprob: -7.523543834686279
    6. '(
' → logprob: -8.148544311523438
    7. '(ans' → logprob: -8.523544311523438
    8. ' (' → logprob: -9.023544311523438
    9. 'pow' → logprob: -10.398544311523438
    10. '((' → logprob: -11.148544311523438

Token 2038: 'inais' (ID: 42744)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5352585911750793
    2. 'inais' → logprob: -1.7852585315704346
    3. 'inations' → logprob: -2.0352585315704346
    4. 'for' → logprob: -3.0352585315704346
    5. '[' → logprob: -3.9102585315704346
    6. 'i' → logprob: -4.160258769989014
    7. 'dp' → logprob: -4.785258769989014
    8. '+' → logprob: -5.535258769989014
    9. '[:' → logprob: -5.785258769989014
    10. '+=' → logprob: -5.910258769989014

Token 2039: 'ons' (ID: 1808)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0034999309573322535
    2. 'ts' → logprob: -6.628499984741211
    3. 'ations' → logprob: -6.878499984741211
    4. 'ons' → logprob: -7.628499984741211
    5. 'ais' → logprob: -8.628499984741211
    6. 'érations' → logprob: -9.753499984741211
    7. '#' → logprob: -9.878499984741211
    8. 'tes' → logprob: -9.878499984741211
    9. 's' → logprob: -10.128499984741211
    10. 'sons' → logprob: -10.628499984741211

Token 2040: ' possibles' (ID: 97753)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2519456744194031
    2. '       ' → logprob: -2.251945734024048
    3. '(dp' → logprob: -2.876945734024048
    4. ' dp' → logprob: -4.001945495605469
    5. ' +=' → logprob: -4.376945495605469
    6. '   ' → logprob: -4.501945495605469
    7. '+=' → logprob: -5.376945495605469
    8. '*' → logprob: -5.501945495605469
    9. '           ' → logprob: -5.626945495605469
    10. ',' → logprob: -6.501945495605469

Token 2041: ' à' (ID: 1221)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2298157662153244
    2. '       ' → logprob: -2.354815721511841
    3. '(dp' → logprob: -2.854815721511841
    4. ' dp' → logprob: -3.479815721511841
    5. '   ' → logprob: -4.97981595993042
    6. '*' → logprob: -4.97981595993042
    7. '```' → logprob: -5.85481595993042
    8. ',' → logprob: -6.85481595993042
    9. '           ' → logprob: -7.22981595993042
    10. ' *' → logprob: -7.47981595993042

Token 2042: ' partir' (ID: 12100)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2924480736255646
    2. 'dp' → logprob: -1.4174480438232422
    3. '(ans' → logprob: -4.917448043823242
    4. '(dp' → logprob: -6.917448043823242
    5. '(i' → logprob: -7.042448043823242
    6. 'i' → logprob: -7.542448043823242
    7. ' ans' → logprob: -7.542448043823242
    8. '(' → logprob: -7.917448043823242
    9. ' dp' → logprob: -8.667448043823242
    10. '+' → logprob: -9.042448043823242

Token 2043: ' de' (ID: 334)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6473323106765747
    2. 'i' → logprob: -1.5223323106765747
    3. '(i' → logprob: -2.272332191467285
    4. '       ' → logprob: -2.272332191467285
    5. '   ' → logprob: -4.147332191467285
    6. '[i' → logprob: -4.647332191467285
    7. 'de' → logprob: -4.647332191467285
    8. ' i' → logprob: -5.897332191467285
    9. '(dp' → logprob: -5.897332191467285
    10. ' dp' → logprob: -6.522332191467285

Token 2044: ' ces' (ID: 10532)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0026579394470900297
    2. 'ans' → logprob: -6.377657890319824
    3. '(dp' → logprob: -8.252657890319824
    4. 'i' → logprob: -8.627657890319824
    5. ' dp' → logprob: -8.627657890319824
    6. '   ' → logprob: -9.127657890319824
    7. '(' → logprob: -9.752657890319824
    8. '(i' → logprob: -10.002657890319824
    9. 'pow' → logprob: -11.252657890319824
    10. 'prev' → logprob: -11.502657890319824

Token 2045: ' états' (ID: 184259)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5281995534896851
    2. 'dp' → logprob: -1.028199553489685
    3. 'states' → logprob: -3.6531996726989746
    4. 'indices' → logprob: -5.028199672698975
    5. 'j' → logprob: -5.153199672698975
    6. '```' → logprob: -5.528199672698975
    7. ' states' → logprob: -6.403199672698975
    8. 'for' → logprob: -6.778199672698975
    9. 'positions' → logprob: -7.153199672698975
    10. ' i' → logprob: -7.153199672698975

Token 2046: ',
' (ID: 412)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8319910764694214
    2. '       ' → logprob: -0.9569910764694214
    3. '   ' → logprob: -3.331991195678711
    4. ',' → logprob: -3.331991195678711
    5. ' dp' → logprob: -3.456991195678711
    6. '```' → logprob: -3.581991195678711
    7. ' +=' → logprob: -3.956991195678711
    8. '+' → logprob: -4.831991195678711
    9. '(dp' → logprob: -5.331991195678711
    10. '+=' → logprob: -5.456991195678711

Token 2047: '       ' (ID: 309)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3610018789768219
    2. ' dp' → logprob: -1.3610018491744995
    3. '(dp' → logprob: -4.486001968383789
    4. ' (' → logprob: -4.486001968383789
    5. '       ' → logprob: -4.736001968383789
    6. '(' → logprob: -4.736001968383789
    7. '           ' → logprob: -6.361001968383789
    8. 'pow' → logprob: -6.611001968383789
    9. '   ' → logprob: -7.236001968383789
    10. '```' → logprob: -7.486001968383789

Token 2048: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1297367513179779
    2. '       ' → logprob: -2.5047366619110107
    3. '```' → logprob: -3.8797366619110107
    4. '(dp' → logprob: -5.62973690032959
    5. ' dp' → logprob: -5.75473690032959
    6. '   ' → logprob: -5.87973690032959
    7. '           ' → logprob: -6.12973690032959
    8. '(' → logprob: -6.62973690032959
    9. '                   ' → logprob: -7.12973690032959
    10. '               ' → logprob: -7.12973690032959

Token 2049: ' c' (ID: 274)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.32023999094963074
    2. '(dp' → logprob: -1.4452400207519531
    3. '       ' → logprob: -4.570240020751953
    4. '(' → logprob: -4.945240020751953
    5. '(ans' → logprob: -5.195240020751953
    6. 'pow' → logprob: -5.445240020751953
    7. ' (' → logprob: -5.945240020751953
    8. 'ans' → logprob: -5.945240020751953
    9. '```' → logprob: -6.070240020751953
    10. ' dp' → logprob: -6.445240020751953

Token 2050: ''est' (ID: 6616)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.7887442111968994
    2. 'ans' → logprob: -1.1637442111968994
    3. 'dp' → logprob: -2.6637442111968994
    4. '+=' → logprob: -2.7887442111968994
    5. 'for' → logprob: -3.0387442111968994
    6. '```' → logprob: -4.66374397277832
    7. '=' → logprob: -5.16374397277832
    8. '   ' → logprob: -5.53874397277832
    9. 'ode' → logprob: -5.53874397277832
    10. '#' → logprob: -5.66374397277832

Token 2051: '-à' (ID: 56297)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.590828537940979
    2. '(' → logprob: -1.840828537940979
    3. '(dp' → logprob: -2.4658284187316895
    4. '(ans' → logprob: -3.2158284187316895
    5. 'ans' → logprob: -3.4658284187316895
    6. 'pow' → logprob: -3.5908284187316895
    7. ' (' → logprob: -4.3408284187316895
    8. '+=' → logprob: -4.3408284187316895
    9. '       ' → logprob: -4.4658284187316895
    10. '+' → logprob: -4.7158284187316895

Token 2052: '-dire' (ID: 76064)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.97182297706604
    2. 'i' → logprob: -1.34682297706604
    3. '(i' → logprob: -3.09682297706604
    4. '```' → logprob: -3.22182297706604
    5. '(' → logprob: -3.47182297706604
    6. 'plus' → logprob: -3.59682297706604
    7. ')' → logprob: -3.72182297706604
    8. '++' → logprob: -3.72182297706604
    9. '4' → logprob: -3.72182297706604
    10. '+=' → logprob: -3.84682297706604

Token 2053: ' le' (ID: 505)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.0305454730987549
    2. '(ans' → logprob: -1.0305454730987549
    3. '(dp' → logprob: -2.030545473098755
    4. 'ans' → logprob: -2.530545473098755
    5. '(' → logprob: -3.155545473098755
    6. ' (' → logprob: -3.905545473098755
    7. ' dp' → logprob: -5.280545234680176
    8. ' ans' → logprob: -5.655545234680176
    9. '       ' → logprob: -6.030545234680176
    10. 'pow' → logprob: -6.905545234680176

Token 2054: ' nombre' (ID: 9733)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.6601406335830688
    2. 'dp' → logprob: -1.6601406335830688
    3. 'ans' → logprob: -2.2851405143737793
    4. '(' → logprob: -2.4101405143737793
    5. '(ans' → logprob: -2.4101405143737793
    6. 'pow' → logprob: -4.785140514373779
    7. ' (' → logprob: -6.160140514373779
    8. '(pow' → logprob: -7.285140514373779
    9. ' dp' → logprob: -8.660140991210938
    10. ' ans' → logprob: -9.535140991210938

Token 2055: ' de' (ID: 334)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2706874907016754
    2. '       ' → logprob: -2.3956875801086426
    3. '   ' → logprob: -2.7706875801086426
    4. 'd' → logprob: -4.020687580108643
    5. 'ans' → logprob: -4.145687580108643
    6. 'de' → logprob: -4.395687580108643
    7. '=' → logprob: -4.895687580108643
    8. ')' → logprob: -5.020687580108643
    9. ' +=' → logprob: -5.020687580108643
    10. '(ans' → logprob: -5.770687580108643

Token 2056: ' façons' (ID: 165958)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06106936186552048
    2. '(dp' → logprob: -3.0610692501068115
    3. '(' → logprob: -5.061069488525391
    4. 'pow' → logprob: -5.686069488525391
    5. 'ways' → logprob: -7.436069488525391
    6. ' dp' → logprob: -7.561069488525391
    7. ')' → logprob: -8.06106948852539
    8. 'man' → logprob: -8.31106948852539
    9. 'ans' → logprob: -8.81106948852539
    10. '(
' → logprob: -9.06106948852539

Token 2057: ' d' (ID: 272)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.1169908046722412
    2. 'd' → logprob: -1.7419908046722412
    3. '       ' → logprob: -2.116990804672241
    4. '*' → logprob: -2.366990804672241
    5. 'de' → logprob: -2.366990804672241
    6. '   ' → logprob: -2.366990804672241
    7. '```' → logprob: -3.616990804672241
    8. 'for' → logprob: -3.866990804672241
    9. '(dp' → logprob: -4.36699104309082
    10. ')' → logprob: -5.36699104309082

Token 2058: ''être' (ID: 47704)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1131284236907959
    2. '(dp' → logprob: -2.863128423690796
    3. 'ans' → logprob: -4.113128662109375
    4. 'range' → logprob: -4.363128662109375
    5. '(i' → logprob: -4.988128662109375
    6. 'i' → logprob: -5.363128662109375
    7. '   ' → logprob: -6.488128662109375
    8. 'for' → logprob: -6.863128662109375
    9. '[i' → logprob: -6.988128662109375
    10. '+=' → logprob: -7.113128662109375

Token 2059: ' arrivé' (ID: 109777)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.011764987371861935
    2. ' dp' → logprob: -5.386765003204346
    3. '(dp' → logprob: -5.886765003204346
    4. '   ' → logprob: -6.386765003204346
    5. '(' → logprob: -7.011765003204346
    6. '(i' → logprob: -7.636765003204346
    7. 'i' → logprob: -8.136764526367188
    8. '```' → logprob: -8.511764526367188
    9. ' (' → logprob: -9.011764526367188
    10. ' ' → logprob: -9.511764526367188

Token 2060: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.734826385974884
    2. 'dp' → logprob: -1.6098263263702393
    3. ' à' → logprob: -1.9848263263702393
    4. '[i' → logprob: -2.2348263263702393
    5. '   ' → logprob: -3.2348263263702393
    6. 'i' → logprob: -4.609826564788818
    7. '```' → logprob: -5.109826564788818
    8. '(i' → logprob: -5.359826564788818
    9. '(dp' → logprob: -5.734826564788818
    10. '       ' → logprob: -5.859826564788818

Token 2061: ' ce' (ID: 2357)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.14363406598567963
    2. 'i' → logprob: -2.018634080886841
    3. '[i' → logprob: -8.018633842468262
    4. '   ' → logprob: -8.393633842468262
    5. 'ans' → logprob: -9.268633842468262
    6. ' dp' → logprob: -9.393633842468262
    7. '(i' → logprob: -9.768633842468262
    8. ' i' → logprob: -10.268633842468262
    9. '```' → logprob: -10.268633842468262
    10. '
' → logprob: -10.893633842468262

Token 2062: ' stade' (ID: 113944)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.003523098537698388
    2. 'point' → logprob: -6.628522872924805
    3. '[i' → logprob: -7.628522872924805
    4. 'for' → logprob: -7.878522872924805
    5. 'state' → logprob: -8.378522872924805
    6. 'dp' → logprob: -8.378522872924805
    7. 'id' → logprob: -8.753522872924805
    8. '+' → logprob: -8.753522872924805
    9. ' i' → logprob: -9.378522872924805
    10. 'ét' → logprob: -9.503522872924805

Token 2063: ' multip' (ID: 17524)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7849906086921692
    2. '*' → logprob: -1.6599905490875244
    3. 'dp' → logprob: -2.2849905490875244
    4. ' *' → logprob: -2.6599905490875244
    5. '+' → logprob: -3.1599905490875244
    6. '```' → logprob: -3.2849905490875244
    7. '   ' → logprob: -3.5349905490875244
    8. '[i' → logprob: -3.6599905490875244
    9. ',' → logprob: -4.4099907875061035
    10. '(dp' → logprob: -5.1599907875061035

Token 2064: 'lié' (ID: 102412)
  Prédit: 'lié'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lié' → logprob: -0.02226896397769451
    2. 'li' → logprob: -3.8972690105438232
    3. 'lé' → logprob: -6.772268772125244
    4. 'lic' → logprob: -8.272269248962402
    5. '       ' → logprob: -10.022269248962402
    6. '   ' → logprob: -10.147269248962402
    7. '           ' → logprob: -10.397269248962402
    8. ')' → logprob: -10.772269248962402
    9. '+' → logprob: -10.897269248962402
    10. '  ' → logprob: -11.272269248962402

Token 2065: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.4933519959449768
    2. '(' → logprob: -1.868351936340332
    3. '(pow' → logprob: -1.868351936340332
    4. 'pow' → logprob: -3.243351936340332
    5. '(par' → logprob: -4.243351936340332
    6. '       ' → logprob: -5.118351936340332
    7. '(dp' → logprob: -5.243351936340332
    8. ' par' → logprob: -5.368351936340332
    9. '   ' → logprob: -6.118351936340332
    10. '```' → logprob: -6.118351936340332

Token 2066: ' les' (ID: 1341)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.49995309114456177
    2. 'dp' → logprob: -1.124953031539917
    3. '(pow' → logprob: -3.249953031539917
    4. '(dp' → logprob: -3.749953031539917
    5. ' (' → logprob: -5.749953269958496
    6. '(' → logprob: -6.374953269958496
    7. ' dp' → logprob: -7.249953269958496
    8. ' pow' → logprob: -7.374953269958496
    9. '((' → logprob: -9.374953269958496
    10. '
' → logprob: -10.374953269958496

Token 2067: ' options' (ID: 3880)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.049767300486564636
    2. '(pow' → logprob: -3.049767255783081
    3. '(' → logprob: -7.54976749420166
    4. ' (' → logprob: -8.42476749420166
    5. ' pow' → logprob: -8.79976749420166
    6. '```' → logprob: -8.92476749420166
    7. '(p' → logprob: -10.04976749420166
    8. '
' → logprob: -10.54976749420166
    9. 'dp' → logprob: -11.17476749420166
    10. '2' → logprob: -11.54976749420166

Token 2068: ' en' (ID: 469)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8059521913528442
    2. '(' → logprob: -0.9309521913528442
    3. '*' → logprob: -3.3059520721435547
    4. '       ' → logprob: -3.5559520721435547
    5. '*(' → logprob: -3.8059520721435547
    6. '   ' → logprob: -4.055952072143555
    7. 'de' → logprob: -4.805952072143555
    8. 'for' → logprob: -4.930952072143555
    9. '``' → logprob: -4.930952072143555
    10. '           ' → logprob: -5.180952072143555

Token 2069: ' hauteur' (ID: 72987)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.18446099758148193
    2. 'up' → logprob: -2.8094611167907715
    3. '```' → logprob: -3.0594611167907715
    4. '(' → logprob: -3.8094611167907715
    5. '2' → logprob: -4.3094611167907715
    6. 'pu' → logprob: -4.5594611167907715
    7. 'mod' → logprob: -5.4344611167907715
    8. 'place' → logprob: -6.4344611167907715
    9. 'haut' → logprob: -6.6844611167907715
    10. '(pow' → logprob: -7.4344611167907715

Token 2070: ' finale' (ID: 37759)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9685216546058655
    2. '*' → logprob: -1.0935215950012207
    3. ' *' → logprob: -2.7185215950012207
    4. '```' → logprob: -2.7185215950012207
    5. '[j' → logprob: -3.4685215950012207
    6. '*(' → logprob: -3.7185215950012207
    7. ',' → logprob: -3.8435215950012207
    8. '(' → logprob: -4.093521595001221
    9. '   ' → logprob: -4.218521595001221
    10. '(j' → logprob: -4.843521595001221

Token 2071: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32837018370628357
    2. ',' → logprob: -1.453370213508606
    3. '```' → logprob: -3.8283700942993164
    4. '   ' → logprob: -4.953370094299316
    5. '*' → logprob: -5.703370094299316
    6. ')' → logprob: -5.703370094299316
    7. 'dp' → logprob: -5.828370094299316
    8. ' *' → logprob: -6.203370094299316
    9. '.' → logprob: -6.328370094299316
    10. '           ' → logprob: -6.953370094299316

Token 2072: '       ' (ID: 309)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3018166124820709
    2. '       ' → logprob: -1.9268165826797485
    3. ' dp' → logprob: -2.926816701889038
    4. '   ' → logprob: -3.676816701889038
    5. '```' → logprob: -3.801816701889038
    6. 'for' → logprob: -5.801816463470459
    7. '(dp' → logprob: -5.801816463470459
    8. 'ans' → logprob: -6.176816463470459
    9. '(' → logprob: -6.926816463470459
    10. '``' → logprob: -7.176816463470459

Token 2073: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.19141064584255219
    2. '(ans' → logprob: -1.8164106607437134
    3. 'dp' → logprob: -4.941410541534424
    4. ' ans' → logprob: -6.066410541534424
    5. '(' → logprob: -7.066410541534424
    6. '(dp' → logprob: -7.691410541534424
    7. '   ' → logprob: -7.816410541534424
    8. ' (' → logprob: -9.066411018371582
    9. 'for' → logprob: -9.316411018371582
    10. '       ' → logprob: -9.441411018371582

Token 2074: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6933595538139343
    2. '+=' → logprob: -0.6933595538139343
    3. '=' → logprob: -8.943359375
    4. '+=(' → logprob: -9.943359375
    5. ' =' → logprob: -11.443359375
    6. '+' → logprob: -11.568359375
    7. ']+=' → logprob: -11.818359375
    8. '```' → logprob: -12.568359375
    9. '   ' → logprob: -13.568359375
    10. 'import' → logprob: -15.068359375

Token 2075: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0012716623023152351
    2. ' dp' → logprob: -7.251271724700928
    3. '(dp' → logprob: -7.501271724700928
    4. '(' → logprob: -12.00127124786377
    5. '   ' → logprob: -13.37627124786377
    6. ' (' → logprob: -13.62627124786377
    7. 'pow' → logprob: -15.75127124786377
    8. '	dp' → logprob: -16.501272201538086
    9. 'ans' → logprob: -17.126272201538086
    10. ' ' → logprob: -17.876272201538086

Token 2076: '[N' (ID: 49776)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0027713554445654154
    2. '[-' → logprob: -6.502771377563477
    3. '[len' → logprob: -7.627771377563477
    4. '[n' → logprob: -7.752771377563477
    5. '[N' → logprob: -8.502771377563477
    6. 'i' → logprob: -9.252771377563477
    7. '[' → logprob: -10.627771377563477
    8. '(i' → logprob: -12.377771377563477
    9. '   ' → logprob: -12.502771377563477
    10. '[user' → logprob: -12.627771377563477

Token 2077: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0031724870204925537
    2. '[-' → logprob: -5.878172397613525
    3. ' -' → logprob: -8.503172874450684
    4. '[' → logprob: -9.128172874450684
    5. '[N' → logprob: -10.003172874450684
    6. '[i' → logprob: -12.628172874450684
    7. '```' → logprob: -12.628172874450684
    8. '−' → logprob: -15.128172874450684
    9. '...' → logprob: -15.190672874450684
    10. '1' → logprob: -15.190672874450684

Token 2078: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.157039049663581e-05
    2. '2' → logprob: -10.000051498413086
    3. ' ' → logprob: -12.750051498413086
    4. '   ' → logprob: -13.000051498413086
    5. '```' → logprob: -15.187551498413086
    6. '-' → logprob: -16.500051498413086
    7. '
' → logprob: -16.812551498413086
    8. 'i' → logprob: -17.000051498413086
    9. '0' → logprob: -17.000051498413086
    10. '#' → logprob: -17.062551498413086

Token 2079: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5759868025779724
    2. '2' → logprob: -0.8259868025779724
    3. '```' → logprob: -11.700986862182617
    4. '   ' → logprob: -12.013486862182617
    5. ' ' → logprob: -12.075986862182617
    6. '
' → logprob: -12.200986862182617
    7. '3' → logprob: -12.263486862182617
    8. '0' → logprob: -12.763486862182617
    9. '-' → logprob: -12.763486862182617
    10. '``' → logprob: -13.700986862182617

Token 2080: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00816476158797741
    2. '[i' → logprob: -4.883164882659912
    3. '[' → logprob: -7.758164882659912
    4. ']' → logprob: -10.383164405822754
    5. ' ][' → logprob: -10.508164405822754
    6. '   ' → logprob: -11.258164405822754
    7. '[j' → logprob: -11.508164405822754
    8. ' [' → logprob: -11.883164405822754
    9. '```' → logprob: -12.008164405822754
    10. '       ' → logprob: -12.383164405822754

Token 2081: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -7.465036105713807e-06
    2. '[i' → logprob: -12.125007629394531
    3. ' i' → logprob: -14.500007629394531
    4. '
' → logprob: -14.625007629394531
    5. 'j' → logprob: -14.750007629394531
    6. '```' → logprob: -15.000007629394531
    7. '   ' → logprob: -15.375007629394531
    8. '(i' → logprob: -16.62500762939453
    9. '       ' → logprob: -17.00000762939453
    10. '
' → logprob: -17.50000762939453

Token 2082: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -5.931863051955588e-05
    2. ']*' → logprob: -10.250059127807617
    3. ' ]' → logprob: -11.000059127807617
    4. '*' → logprob: -12.750059127807617
    5. '']' → logprob: -13.250059127807617
    6. ' *' → logprob: -14.000059127807617
    7. '   ' → logprob: -14.125059127807617
    8. ')' → logprob: -15.750059127807617
    9. '[' → logprob: -15.875059127807617
    10. ']
' → logprob: -16.125059127807617

Token 2083: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.04319284111261368
    2. '*' → logprob: -3.1681928634643555
    3. '   ' → logprob: -9.543192863464355
    4. '```' → logprob: -10.293192863464355
    5. ' ' → logprob: -10.293192863464355
    6. '*(' → logprob: -10.543192863464355
    7. '<|end|>' → logprob: -12.168192863464355
    8. 'pow' → logprob: -12.793192863464355
    9. '       ' → logprob: -12.918192863464355
    10. '(' → logprob: -13.043192863464355

Token 2084: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0004935794277116656
    2. '(pow' → logprob: -7.62549352645874
    3. ' pow' → logprob: -12.375494003295898
    4. '(' → logprob: -13.875494003295898
    5. ' (' → logprob: -15.250494003295898
    6. '(p' → logprob: -16.1254940032959
    7. '((' → logprob: -16.2504940032959
    8. '   ' → logprob: -17.3754940032959
    9. '_pow' → logprob: -18.5004940032959
    10. '.pow' → logprob: -18.7504940032959

Token 2085: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.896309739408025e-07
    2. '(
' → logprob: -14.125000953674316
    3. ' (' → logprob: -16.75
    4. '2' → logprob: -17.375
    5. '(pow' → logprob: -18.625
    6. '```' → logprob: -20.0
    7. '(

' → logprob: -20.375
    8. '((' → logprob: -20.875
    9. '(
' → logprob: -21.25
    10. '()' → logprob: -21.375

Token 2086: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006716317031532526
    2. '(' → logprob: -5.006716251373291
    3. '```' → logprob: -14.75671672821045
    4. ' ' → logprob: -15.00671672821045
    5. '   ' → logprob: -16.381715774536133
    6. 'pow' → logprob: -17.006715774536133
    7. ' (' → logprob: -17.506715774536133
    8. '(
' → logprob: -17.506715774536133
    9. ')' → logprob: -18.256715774536133
    10. '       ' → logprob: -18.631715774536133

Token 2087: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06513457745313644
    2. '(' → logprob: -2.9401345252990723
    3. '(h' → logprob: -5.190134525299072
    4. '(up' → logprob: -6.065134525299072
    5. '(
' → logprob: -6.190134525299072
    6. ',
' → logprob: -9.31513500213623
    7. ',h' → logprob: -9.44013500213623
    8. ' (' → logprob: -10.69013500213623
    9. '```' → logprob: -11.56513500213623
    10. '((' → logprob: -11.81513500213623

Token 2088: ' h' (ID: 312)
  Prédit: 'up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.10738925635814667
    2. 'h' → logprob: -2.482389211654663
    3. '(up' → logprob: -4.482389450073242
    4. '(h' → logprob: -5.107389450073242
    5. ' up' → logprob: -7.482389450073242
    6. ' h' → logprob: -8.857389450073242
    7. ' (' → logprob: -8.982389450073242
    8. '(' → logprob: -9.857389450073242
    9. 'data' → logprob: -11.357389450073242
    10. ' ' → logprob: -12.232389450073242

Token 2089: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.00022999993234407157
    2. '[' → logprob: -8.500229835510254
    3. '```' → logprob: -12.250229835510254
    4. '[len' → logprob: -12.500229835510254
    5. '   ' → logprob: -12.625229835510254
    6. '[
' → logprob: -13.125229835510254
    7. '[h' → logprob: -13.125229835510254
    8. '`' → logprob: -13.250229835510254
    9. '[:-' → logprob: -13.750229835510254
    10. ' ' → logprob: -13.875229835510254

Token 2090: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6370058059692383
    2. '-' → logprob: -0.7620058059692383
    3. '[-' → logprob: -6.137005805969238
    4. ' -' → logprob: -7.137005805969238
    5. '(' → logprob: -7.262005805969238
    6. '(-' → logprob: -8.887005805969238
    7. '(i' → logprob: -9.137005805969238
    8. 'i' → logprob: -9.137005805969238
    9. '−' → logprob: -9.762005805969238
    10. '[' → logprob: -9.887005805969238

Token 2091: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.030435150489211082
    2. '-' → logprob: -3.530435085296631
    3. ']' → logprob: -7.905435085296631
    4. ' ' → logprob: -9.030435562133789
    5. '   ' → logprob: -9.905435562133789
    6. ',' → logprob: -10.405435562133789
    7. '[' → logprob: -10.655435562133789
    8. '
' → logprob: -11.030435562133789
    9. '+' → logprob: -11.280435562133789
    10. '#' → logprob: -11.530435562133789

Token 2092: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.42972877621650696
    2. '-' → logprob: -1.0547287464141846
    3. '   ' → logprob: -7.554728984832764
    4. ' ' → logprob: -7.929728984832764
    5. '  ' → logprob: -9.929728507995605
    6. ',' → logprob: -10.679728507995605
    7. ')' → logprob: -10.929728507995605
    8. '    ' → logprob: -11.554728507995605
    9. '[' → logprob: -12.054728507995605
    10. '          ' → logprob: -12.054728507995605

Token 2093: ' up' (ID: 869)
  Prédit: 'up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.0004820313479285687
    2. 'low' → logprob: -8.125481605529785
    3. ' up' → logprob: -8.625481605529785
    4. '   ' → logprob: -13.375481605529785
    5. '	up' → logprob: -13.625481605529785
    6. ' low' → logprob: -14.250481605529785
    7. 'upr' → logprob: -14.500481605529785
    8. 'u' → logprob: -14.625481605529785
    9. 'upper' → logprob: -15.250481605529785
    10. '(up' → logprob: -15.687981605529785

Token 2094: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00037037418223917484
    2. ' ,' → logprob: -8.750370025634766
    3. ' +' → logprob: -8.875370025634766
    4. '+' → logprob: -9.625370025634766
    5. '   ' → logprob: -13.250370025634766
    6. '       ' → logprob: -13.625370025634766
    7. '```' → logprob: -14.250370025634766
    8. ')' → logprob: -14.375370025634766
    9. '+,' → logprob: -15.000370025634766
    10. ',
' → logprob: -15.125370025634766

Token 2095: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -9.615255839889869e-05
    2. ' mod' → logprob: -9.250096321105957
    3. '```' → logprob: -18.62509536743164
    4. '	mod' → logprob: -19.00009536743164
    5. '(mod' → logprob: -19.75009536743164
    6. '`' → logprob: -22.25009536743164
    7. ' мод' → logprob: -22.50009536743164
    8. '_mod' → logprob: -22.75009536743164
    9. 'moder' → logprob: -22.75009536743164
    10. 'MOD' → logprob: -23.37509536743164

Token 2096: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005274149589240551
    2. ' )' → logprob: -8.250527381896973
    3. '   ' → logprob: -9.125527381896973
    4. ')
' → logprob: -10.000527381896973
    5. ',' → logprob: -10.125527381896973
    6. '       ' → logprob: -10.375527381896973
    7. '           ' → logprob: -10.750527381896973
    8. '               ' → logprob: -12.500527381896973
    9. ')*' → logprob: -12.500527381896973
    10. '                   ' → logprob: -13.500527381896973

Token 2097: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2098: ' (' (ID: 350)
  Prédit: '(pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pow' → logprob: -0.3981684446334839
    2. ' (' → logprob: -1.1481684446334839
    3. '(p' → logprob: -4.898168563842773
    4. '(' → logprob: -5.648168563842773
    5. '(power' → logprob: -10.023168563842773
    6. '(pr' → logprob: -10.273168563842773
    7. '(prob' → logprob: -10.648168563842773
    8. '(py' → logprob: -10.898168563842773
    9. '(pass' → logprob: -11.023168563842773
    10. '(pop' → logprob: -11.273168563842773

Token 2099: 'pow' (ID: 30304)
  Prédit: '(pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pow' → logprob: -0.006250372622162104
    2. 'pow' → logprob: -5.631250381469727
    3. ' (' → logprob: -6.006250381469727
    4. '(p' → logprob: -8.881250381469727
    5. '(' → logprob: -10.381250381469727
    6. ' pow' → logprob: -11.381250381469727
    7. '(power' → logprob: -14.256250381469727
    8. '.pow' → logprob: -15.131250381469727
    9. '((' → logprob: -15.506250381469727
    10. '(po' → logprob: -15.881250381469727

Token 2100: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.339278580620885e-06
    2. '2' → logprob: -13.500001907348633
    3. ' (' → logprob: -14.750001907348633
    4. '(
' → logprob: -14.875001907348633
    5. '```' → logprob: -15.875001907348633
    6. '   ' → logprob: -20.250001907348633
    7. '(pow' → logprob: -20.375001907348633
    8. '((' → logprob: -20.375001907348633
    9. '(
' → logprob: -21.125001907348633
    10. '`' → logprob: -21.250001907348633

Token 2101: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001931970240548253
    2. '(' → logprob: -6.251932144165039
    3. ' ' → logprob: -13.126932144165039
    4. '```' → logprob: -13.876932144165039
    5. ' (' → logprob: -16.62693214416504
    6. '[' → logprob: -16.75193214416504
    7. '   ' → logprob: -17.00193214416504
    8. '(
' → logprob: -17.12693214416504
    9. '...' → logprob: -17.87693214416504
    10. ')' → logprob: -18.00193214416504

Token 2102: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0027113191317766905
    2. ',' → logprob: -6.377711296081543
    3. '(j' → logprob: -7.502711296081543
    4. '(i' → logprob: -7.877711296081543
    5. '(
' → logprob: -10.252711296081543
    6. '(up' → logprob: -11.752711296081543
    7. ' (' → logprob: -11.752711296081543
    8. '```' → logprob: -12.002711296081543
    9. '((' → logprob: -12.627711296081543
    10. '2' → logprob: -13.002711296081543

Token 2103: ' up' (ID: 869)
  Prédit: 'up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.0009755438077263534
    2. ' up' → logprob: -7.500975608825684
    3. '(up' → logprob: -7.875975608825684
    4. '(' → logprob: -10.375975608825684
    5. '2' → logprob: -12.125975608825684
    6. ' (' → logprob: -12.750975608825684
    7. '   ' → logprob: -13.625975608825684
    8. ' ' → logprob: -14.250975608825684
    9. '1' → logprob: -14.750975608825684
    10. 'ups' → logprob: -14.875975608825684

Token 2104: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06376373022794724
    2. '-' → logprob: -2.8137636184692383
    3. '[i' → logprob: -7.188763618469238
    4. '+' → logprob: -7.188763618469238
    5. '[' → logprob: -9.563763618469238
    6. ' +' → logprob: -9.563763618469238
    7. ' ' → logprob: -9.688763618469238
    8. '```' → logprob: -10.438763618469238
    9. '[-' → logprob: -10.938763618469238
    10. '   ' → logprob: -11.188763618469238

Token 2105: ' low' (ID: 4465)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.0040801819413900375
    2. ' low' → logprob: -5.504080295562744
    3. '(low' → logprob: -13.879079818725586
    4. '-low' → logprob: -14.754079818725586
    5. '_low' → logprob: -14.879079818725586
    6. 'Low' → logprob: -17.129079818725586
    7. '```' → logprob: -18.504079818725586
    8. '.low' → logprob: -18.629079818725586
    9. '0' → logprob: -18.754079818725586
    10. 'lowest' → logprob: -19.004079818725586

Token 2106: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07889551669359207
    2. ' +' → logprob: -2.5788955688476562
    3. '```' → logprob: -12.578895568847656
    4. ',' → logprob: -14.078895568847656
    5. '+,' → logprob: -14.203895568847656
    6. '+
' → logprob: -14.578895568847656
    7. ' ' → logprob: -16.078895568847656
    8. '[' → logprob: -16.703895568847656
    9. '<|end|>' → logprob: -17.078895568847656
    10. ')' → logprob: -17.203895568847656

Token 2107: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000583653396461159
    2. ' ' → logprob: -8.00058364868164
    3. '0' → logprob: -8.75058364868164
    4. '+' → logprob: -9.50058364868164
    5. '```' → logprob: -11.25058364868164
    6. ' +' → logprob: -14.50058364868164
    7. '<|end|>' → logprob: -14.50058364868164
    8. '
' → logprob: -15.37558364868164
    9. '(' → logprob: -15.50058364868164
    10. '   ' → logprob: -15.75058364868164

Token 2108: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003187810070812702
    2. '0' → logprob: -8.12531852722168
    3. '+' → logprob: -11.62531852722168
    4. '```' → logprob: -11.87531852722168
    5. ' ' → logprob: -12.37531852722168
    6. 'i' → logprob: -13.37531852722168
    7. '(i' → logprob: -15.12531852722168
    8. '(' → logprob: -15.50031852722168
    9. '
' → logprob: -15.62531852722168
    10. 'j' → logprob: -16.00031852722168

Token 2109: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018947436183225363
    2. ' ,' → logprob: -9.625189781188965
    3. '```' → logprob: -9.875189781188965
    4. ')' → logprob: -10.250189781188965
    5. '+' → logprob: -11.500189781188965
    6. '-' → logprob: -12.125189781188965
    7. ' -' → logprob: -12.500189781188965
    8. '),' → logprob: -12.750189781188965
    9. ',
' → logprob: -12.750189781188965
    10. 'import' → logprob: -13.125189781188965

Token 2110: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0004311460361350328
    2. ' mod' → logprob: -7.750431060791016
    3. '(mod' → logprob: -15.625431060791016
    4. '	mod' → logprob: -16.750431060791016
    5. '```' → logprob: -17.000431060791016
    6. ')' → logprob: -17.125431060791016
    7. '_mod' → logprob: -18.625431060791016
    8. '0' → logprob: -18.750431060791016
    9. '1' → logprob: -19.250431060791016
    10. 'mods' → logprob: -19.625431060791016

Token 2111: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05480633303523064
    2. ' -' → logprob: -3.0548062324523926
    3. '-' → logprob: -5.679806232452393
    4. ',' → logprob: -6.804806232452393
    5. '```' → logprob: -7.679806232452393
    6. ')-' → logprob: -7.929806232452393
    7. ' )' → logprob: -8.30480670928955
    8. '[' → logprob: -8.80480670928955
    9. '       ' → logprob: -9.67980670928955
    10. '<|end|>' → logprob: -9.80480670928955

Token 2112: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.012864056043326855
    2. '-' → logprob: -4.512864112854004
    3. ')' → logprob: -6.387864112854004
    4. ' ' → logprob: -10.012864112854004
    5. '       ' → logprob: -10.762864112854004
    6. ')-' → logprob: -11.387864112854004
    7. ',' → logprob: -11.762864112854004
    8. '```' → logprob: -11.887864112854004
    9. '          ' → logprob: -12.137864112854004
    10. '[' → logprob: -12.262864112854004

Token 2113: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.898723561083898e-05
    2. ' ' → logprob: -9.500079154968262
    3. '```' → logprob: -12.500079154968262
    4. ')' → logprob: -16.000078201293945
    5. '<|end|>' → logprob: -16.750078201293945
    6. '
' → logprob: -17.125078201293945
    7. ' ' → logprob: -17.125078201293945
    8. '0' → logprob: -17.125078201293945
    9. '   ' → logprob: -17.375078201293945
    10. '...' → logprob: -18.875078201293945

Token 2114: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3544423381972592e-05
    2. '```' → logprob: -11.87501335144043
    3. ' ' → logprob: -12.00001335144043
    4. '0' → logprob: -15.87501335144043
    5. '
' → logprob: -16.37501335144043
    6. '   ' → logprob: -16.50001335144043
    7. '``' → logprob: -17.75001335144043
    8. ')' → logprob: -17.75001335144043
    9. '<|end|>' → logprob: -18.00001335144043
    10. '`' → logprob: -18.18751335144043

Token 2115: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.507972572464496e-05
    2. ')
' → logprob: -9.62509536743164
    3. '+' → logprob: -11.62509536743164
    4. ' )' → logprob: -11.75009536743164
    5. '   ' → logprob: -12.62509536743164
    6. '       ' → logprob: -12.87509536743164
    7. '```' → logprob: -13.62509536743164
    8. '))' → logprob: -13.75009536743164
    9. ')+' → logprob: -14.12509536743164
    10. ' ' → logprob: -14.37509536743164

Token 2116: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7697630524635315
    2. '```' → logprob: -1.5197629928588867
    3. ')' → logprob: -1.8947629928588867
    4. '%' → logprob: -2.6447629928588867
    5. '\n' → logprob: -3.5197629928588867
    6. '\' → logprob: -4.144762992858887
    7. '   ' → logprob: -4.394762992858887
    8. '           ' → logprob: -4.894762992858887
    9. '``' → logprob: -4.894762992858887
    10. '
' → logprob: -5.519762992858887

Token 2117: ' ans' (ID: 3345)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -1.0038267374038696
    2. '=' → logprob: -1.6288267374038696
    3. '\n' → logprob: -1.8788267374038696
    4. '```' → logprob: -1.8788267374038696
    5. ')' → logprob: -3.25382661819458
    6. '       ' → logprob: -3.62882661819458
    7. 'ans' (adapté à ' ans') → logprob: -4.50382661819458
    8. '+=' → logprob: -4.50382661819458
    9. '
' → logprob: -4.62882661819458
    10. '%=' → logprob: -4.87882661819458

Token 2118: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.2635710835456848
    2. ' %=' → logprob: -2.13857102394104
    3. '%' → logprob: -2.76357102394104
    4. '+=' → logprob: -3.13857102394104
    5. ' +=' → logprob: -5.138571262359619
    6. ')' → logprob: -7.513571262359619
    7. '```' → logprob: -7.888571262359619
    8. ' %' → logprob: -8.763570785522461
    9. ']+=' → logprob: -9.263570785522461
    10. '   ' → logprob: -9.513570785522461

Token 2119: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0015028368216007948
    2. ' mod' → logprob: -6.501502990722656
    3. '(mod' → logprob: -14.876502990722656
    4. '```' → logprob: -16.126502990722656
    5. '	mod' → logprob: -17.126502990722656
    6. '10' → logprob: -17.751502990722656
    7. ' ' → logprob: -19.376502990722656
    8. 'MOD' → logprob: -19.501502990722656
    9. '`' → logprob: -19.626502990722656
    10. '_mod' → logprob: -19.626502990722656

Token 2120: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28386834263801575
    2. '       ' → logprob: -2.0338683128356934
    3. '   ' → logprob: -2.7838683128356934
    4. '+' → logprob: -3.7838683128356934
    5. '<|end|>' → logprob: -4.408868312835693
    6. '```' → logprob: -5.158868312835693
    7. 'for' → logprob: -5.658868312835693
    8. '\n' → logprob: -6.658868312835693
    9. '
' → logprob: -7.033868312835693
    10. ' for' → logprob: -7.408868312835693

Token 2121: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6601728200912476
    2. '   ' → logprob: -0.9101728200912476
    3. '```' → logprob: -2.785172939300537
    4. 'ans' → logprob: -4.660172939300537
    5. ' for' → logprob: -5.160172939300537
    6. '+' → logprob: -6.785172939300537
    7. ')' → logprob: -6.910172939300537
    8. '       ' → logprob: -7.660172939300537
    9. '``' → logprob: -8.160172462463379
    10. 'dp' → logprob: -8.285172462463379

Token 2122: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007912516593933105
    2. '```' → logprob: -5.507912635803223
    3. '   ' → logprob: -5.757912635803223
    4. 'ans' → logprob: -7.507912635803223
    5. ' for' → logprob: -9.632912635803223
    6. 'dp' → logprob: -10.132912635803223
    7. '``' → logprob: -11.882912635803223
    8. '       ' → logprob: -12.382912635803223
    9. '#' (adapté à ' #') → logprob: -13.007912635803223
    10. 'if' → logprob: -14.257912635803223

Token 2123: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.395265132188797
    2. 'dp' → logprob: -1.6452651023864746
    3. 'ans' → logprob: -2.0202651023864746
    4. '#' → logprob: -8.020265579223633
    5. 'if' → logprob: -8.020265579223633
    6. 'id' → logprob: -9.020265579223633
    7. '```' → logprob: -9.395265579223633
    8. '   ' → logprob: -11.395265579223633
    9. 'return' → logprob: -11.395265579223633
    10. ' for' → logprob: -11.895265579223633

Token 2124: ' ajoute' (ID: 91611)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.49410977959632874
    2. 'for' → logprob: -1.9941097497940063
    3. 'ans' → logprob: -2.494109869003296
    4. 'aj' → logprob: -2.619109869003296
    5. ' +=' → logprob: -2.869109869003296
    6. 'continue' → logprob: -4.119109630584717
    7. 'add' → logprob: -4.369109630584717
    8. '```' → logprob: -5.619109630584717
    9. '#' → logprob: -5.869109630584717
    10. '
' → logprob: -6.244109630584717

Token 2125: ' ' (ID: 220)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.015672171488404274
    2. ' dp' → logprob: -4.765672206878662
    3. '2' → logprob: -5.140672206878662
    4. '(dp' → logprob: -7.390672206878662
    5. '(' → logprob: -7.765672206878662
    6. '   ' → logprob: -9.765671730041504
    7. ' ' → logprob: -10.265671730041504
    8. '+' → logprob: -10.765671730041504
    9. ' (' → logprob: -11.265671730041504
    10. 'ans' → logprob: -12.890671730041504

Token 2126: '2' (ID: 17)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06503013521432877
    2. '2' → logprob: -2.815030097961426
    3. '(' → logprob: -6.065030097961426
    4. '(dp' → logprob: -7.440030097961426
    5. ' dp' → logprob: -9.065030097961426
    6. 'ans' → logprob: -12.065030097961426
    7. ' ' → logprob: -12.065030097961426
    8. '   ' → logprob: -12.315030097961426
    9. 'sum' → logprob: -12.940030097961426
    10. '```' → logprob: -12.940030097961426

Token 2127: ' fois' (ID: 14697)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6932652592658997
    2. ' *' → logprob: -0.6932652592658997
    3. '   ' → logprob: -9.318264961242676
    4. ' ' → logprob: -11.818264961242676
    5. '```' → logprob: -12.568264961242676
    6. '**' → logprob: -12.693264961242676
    7. ' ' → logprob: -12.818264961242676
    8. '	' → logprob: -13.318264961242676
    9. '*(' → logprob: -13.443264961242676
    10. '    ' → logprob: -13.443264961242676

Token 2128: ' la' (ID: 557)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -8.895480277715251e-06
    2. ' dp' → logprob: -11.750008583068848
    3. '(dp' → logprob: -14.000008583068848
    4. 'ans' → logprob: -16.375009536743164
    5. '	dp' → logprob: -18.875009536743164
    6. '```' → logprob: -19.875009536743164
    7. '   ' → logprob: -21.000009536743164
    8. '_dp' → logprob: -21.000009536743164
    9. 'pow' → logprob: -21.125009536743164
    10. '`' → logprob: -22.000009536743164

Token 2129: ' valeur' (ID: 41664)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00020473242329899222
    2. ' dp' → logprob: -8.500205039978027
    3. '(dp' → logprob: -13.625205039978027
    4. '	dp' → logprob: -17.50020408630371
    5. 'ans' → logprob: -17.75020408630371
    6. '
' → logprob: -18.50020408630371
    7. '(' → logprob: -18.87520408630371
    8. 'd' → logprob: -19.00020408630371
    9. '.dp' → logprob: -20.62520408630371
    10. '_dp' → logprob: -20.62520408630371

Token 2130: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -2.2961512513575144e-05
    2. ' dp' → logprob: -11.000022888183594
    3. '   ' → logprob: -12.250022888183594
    4. '(dp' → logprob: -13.750022888183594
    5. '```' → logprob: -15.875022888183594
    6. '`' → logprob: -16.125022888183594
    7. '	dp' → logprob: -16.750022888183594
    8. 'ans' → logprob: -18.125022888183594
    9. '``' → logprob: -18.375022888183594
    10. '       ' → logprob: -19.375022888183594

Token 2131: '[N' (ID: 49776)
  Prédit: '[N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -4.842555426876061e-06
    2. 'N' → logprob: -13.500004768371582
    3. '   ' → logprob: -13.500004768371582
    4. '[n' → logprob: -14.125004768371582
    5. '[' → logprob: -14.375004768371582
    6. '[
' → logprob: -15.375004768371582
    7. '```' → logprob: -15.750004768371582
    8. '[i' → logprob: -15.875004768371582
    9. '(N' → logprob: -16.1250057220459
    10. ' [' → logprob: -17.0000057220459

Token 2132: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0004954866599291563
    2. ' -' → logprob: -8.250495910644531
    3. '[-' → logprob: -8.375495910644531
    4. '   ' → logprob: -13.750495910644531
    5. '```' → logprob: -13.750495910644531
    6. '[N' → logprob: -14.500495910644531
    7. '[' → logprob: -14.875495910644531
    8. 'N' → logprob: -15.625495910644531
    9. '``' → logprob: -15.875495910644531
    10. '
' → logprob: -16.50049591064453

Token 2133: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.05152834951877594
    2. '1' → logprob: -3.6765284538269043
    3. '-' → logprob: -4.176528453826904
    4. 'N' → logprob: -5.426528453826904
    5. '   ' → logprob: -6.301528453826904
    6. '(N' → logprob: -6.926528453826904
    7. '[N' → logprob: -7.614028453826904
    8. '#' → logprob: -8.239027976989746
    9. '```' → logprob: -8.489027976989746
    10. ' ' → logprob: -8.739027976989746

Token 2134: '][' (ID: 2696)
  Prédit: '[N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.036443423479795456
    2. '][' → logprob: -3.5364434719085693
    3. '[' → logprob: -5.78644323348999
    4. '[id' → logprob: -6.28644323348999
    5. '[len' → logprob: -7.28644323348999
    6. '[-' → logprob: -7.28644323348999
    7. '   ' → logprob: -9.286443710327148
    8. '[i' → logprob: -9.786443710327148
    9. '}[' → logprob: -9.911443710327148
    10. ' [' → logprob: -10.036443710327148

Token 2135: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.0032141993287950754
    2. 'comp' → logprob: -5.753214359283447
    3. ' id' → logprob: -10.253213882446289
    4. '[id' → logprob: -14.878213882446289
    5. '   ' → logprob: -15.003213882446289
    6. ' comp' → logprob: -15.128213882446289
    7. '[' → logprob: -16.50321388244629
    8. 'idx' → logprob: -17.12821388244629
    9. '(id' → logprob: -17.12821388244629
    10. '`' → logprob: -17.25321388244629

Token 2136: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.8154694437980652
    2. '[N' → logprob: -1.44046950340271
    3. '][' → logprob: -1.69046950340271
    4. '[id' → logprob: -2.06546950340271
    5. '[' → logprob: -5.190469264984131
    6. ']' → logprob: -5.690469264984131
    7. '```' → logprob: -8.940469741821289
    8. '[-' → logprob: -9.065469741821289
    9. '[idx' → logprob: -9.065469741821289
    10. '[len' → logprob: -10.315469741821289

Token 2137: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.225056767463684
    2. '[i' → logprob: -1.225056767463684
    3. '```' → logprob: -1.350056767463684
    4. '[id' → logprob: -2.8500566482543945
    5. '+=' → logprob: -3.2250566482543945
    6. ' +=' → logprob: -3.9750566482543945
    7. '[' → logprob: -4.1000566482543945
    8. '+' → logprob: -4.8500566482543945
    9. '[idx' → logprob: -5.3500566482543945
    10. '       ' → logprob: -6.3500566482543945

Token 2138: ' les' (ID: 1341)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2604747712612152
    2. ' dp' → logprob: -1.7604748010635376
    3. 'ans' → logprob: -3.260474681854248
    4. 'comp' → logprob: -5.260474681854248
    5. '2' → logprob: -5.885474681854248
    6. ' comp' → logprob: -6.010474681854248
    7. '(dp' → logprob: -6.010474681854248
    8. ' ans' → logprob: -6.135474681854248
    9. 'data' → logprob: -7.260474681854248
    10. '(' → logprob: -7.385474681854248

Token 2139: ' états' (ID: 184259)
  Prédit: 'ha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ha' → logprob: -1.2258903980255127
    2. 'de' → logprob: -1.3508903980255127
    3. 'der' → logprob: -1.4758903980255127
    4. 'dp' → logprob: -2.8508903980255127
    5. 'ét' → logprob: -3.1008903980255127
    6. 'dern' → logprob: -3.4758903980255127
    7. 'i' → logprob: -3.4758903980255127
    8. 'final' → logprob: -4.475890159606934
    9. 'val' → logprob: -4.850890159606934
    10. 'poss' → logprob: -5.100890159606934

Token 2140: ' correspondant' (ID: 146058)
  Prédit: '[id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[id' → logprob: -0.4758325219154358
    2. '[i' → logprob: -0.9758325219154358
    3. '[' → logprob: -7.475832462310791
    4. '[idx' → logprob: -7.850832462310791
    5. 'id' → logprob: -8.10083293914795
    6. 'dp' → logprob: -8.85083293914795
    7. 'ans' → logprob: -8.97583293914795
    8. '[N' → logprob: -9.10083293914795
    9. '[j' → logprob: -9.85083293914795
    10. '   ' → logprob: -11.72583293914795

Token 2141: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.16320686042308807
    2. '[id' → logprob: -2.1632068157196045
    3. '[i' → logprob: -4.163207054138184
    4. 'id' → logprob: -4.913207054138184
    5. ' à' → logprob: -5.663207054138184
    6. '+=' → logprob: -6.288207054138184
    7. '```' → logprob: -6.538207054138184
    8. '(id' → logprob: -6.913207054138184
    9. '=' → logprob: -7.038207054138184
    10. '=id' → logprob: -7.163207054138184

Token 2142: ' la' (ID: 557)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.11293389648199081
    2. 'dp' → logprob: -2.362933874130249
    3. 'la' → logprob: -5.112934112548828
    4. 'data' → logprob: -5.737934112548828
    5. 'ans' → logprob: -6.487934112548828
    6. 'h' → logprob: -7.487934112548828
    7. ' id' → logprob: -7.612934112548828
    8. 'l' → logprob: -7.862934112548828
    9. '```' → logprob: -9.112934112548828
    10. ' dp' → logprob: -9.237934112548828

Token 2143: ' plus' (ID: 2932)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.5313347578048706
    2. 'dern' → logprob: -1.2813347578048706
    3. 'der' → logprob: -2.28133487701416
    4. 'last' → logprob: -4.15633487701416
    5. 'val' → logprob: -4.65633487701416
    6. 'dp' → logprob: -5.90633487701416
    7. 'final' → logprob: -6.78133487701416
    8. 'Dern' → logprob: -7.53133487701416
    9. 'h' → logprob: -7.65633487701416
    10. 'comp' → logprob: -7.90633487701416

Token 2144: ' grande' (ID: 10094)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.024409759789705276
    2. 'ha' → logprob: -3.774409770965576
    3. '```' → logprob: -7.649409770965576
    4. 'import' → logprob: -8.899409294128418
    5. '#' → logprob: -8.899409294128418
    6. 'grand' → logprob: -9.024409294128418
    7. 'haut' → logprob: -9.649409294128418
    8. 'large' → logprob: -9.774409294128418
    9. '-ha' → logprob: -9.774409294128418
    10. 'final' → logprob: -10.524409294128418

Token 2145: ' hauteur' (ID: 72987)
  Prédit: 'ha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ha' → logprob: -0.008271998725831509
    2. 'height' → logprob: -5.633272171020508
    3. ' hauteur' → logprob: -5.883272171020508
    4. 'val' → logprob: -7.633272171020508
    5. ']' → logprob: -7.883272171020508
    6. '```' → logprob: -8.258272171020508
    7. 'id' → logprob: -8.758272171020508
    8. 'dp' → logprob: -9.133272171020508
    9. '
' → logprob: -9.633272171020508
    10. 'h' → logprob: -9.758272171020508

Token 2146: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4697978496551514
    2. 'dp' → logprob: -1.7197978496551514
    3. '```' → logprob: -2.0947978496551514
    4. '+=' → logprob: -2.2197978496551514
    5. 'ans' → logprob: -2.3447978496551514
    6. '+' → logprob: -2.3447978496551514
    7. '
' → logprob: -3.5947978496551514
    8. '+
' → logprob: -3.5947978496551514
    9. ' +=' → logprob: -3.7197978496551514
    10. '(ans' → logprob: -3.9697978496551514

Token 2147: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.007043567020446062
    2. '```' → logprob: -6.257043361663818
    3. '+=' → logprob: -6.382043361663818
    4. '   ' → logprob: -6.382043361663818
    5. 'for' → logprob: -6.882043361663818
    6. '
' → logprob: -8.382043838500977
    7. 'dp' → logprob: -8.882043838500977
    8. ' ans' → logprob: -9.257043838500977
    9. '+' → logprob: -9.382043838500977
    10. '(ans' → logprob: -10.007043838500977

Token 2148: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.034702349454164505
    2. '+=' → logprob: -4.284702301025391
    3. '```' → logprob: -4.659702301025391
    4. '+' → logprob: -5.784702301025391
    5. ' ans' → logprob: -5.909702301025391
    6. 'dp' → logprob: -6.659702301025391
    7. '`' → logprob: -7.034702301025391
    8. '   ' → logprob: -7.159702301025391
    9. ' +=' → logprob: -7.409702301025391
    10. '(ans' → logprob: -7.534702301025391

Token 2149: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.34676074981689453
    2. ' +=' → logprob: -1.3467607498168945
    3. '```' → logprob: -4.0967607498168945
    4. '=' → logprob: -4.3467607498168945
    5. '[' → logprob: -6.0967607498168945
    6. '   ' → logprob: -7.5967607498168945
    7. ']+=' → logprob: -8.596760749816895
    8. '[id' → logprob: -8.971760749816895
    9. '+' → logprob: -8.971760749816895
    10. '``' → logprob: -10.721760749816895

Token 2150: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.044075869023799896
    2. '(' → logprob: -3.1690759658813477
    3. ' ' → logprob: -7.419075965881348
    4. ' (' → logprob: -8.169075965881348
    5. 'dp' → logprob: -8.919075965881348
    6. '(dp' → logprob: -10.544075965881348
    7. '   ' → logprob: -10.669075965881348
    8. ' dp' → logprob: -11.919075965881348
    9. '`' → logprob: -13.669075965881348
    10. '       ' → logprob: -15.044075965881348

Token 2151: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06198998540639877
    2. '(' → logprob: -2.8119900226593018
    3. 'dp' → logprob: -11.686989784240723
    4. '(dp' → logprob: -11.686989784240723
    5. ' (' → logprob: -12.686989784240723
    6. ' ' → logprob: -13.311989784240723
    7. '`' → logprob: -14.936989784240723
    8. '   ' → logprob: -15.811989784240723
    9. '```' → logprob: -16.06199073791504
    10. '((' → logprob: -16.93699073791504

Token 2152: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6931512355804443
    2. ' *' → logprob: -0.6931512355804443
    3. '   ' → logprob: -13.693151473999023
    4. ' ' → logprob: -13.943151473999023
    5. '*(' → logprob: -14.193151473999023
    6. '**' → logprob: -14.443151473999023
    7. '```' → logprob: -15.318151473999023
    8. '*[' → logprob: -16.568151473999023
    9. '#' → logprob: -16.943151473999023
    10. '*out' → logprob: -16.943151473999023

Token 2153: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -2.7729658540920354e-05
    2. ' dp' → logprob: -10.500027656555176
    3. '(dp' → logprob: -16.250028610229492
    4. '	dp' → logprob: -19.625028610229492
    5. 'ans' → logprob: -22.875028610229492
    6. '   ' → logprob: -23.000028610229492
    7. 'd' → logprob: -23.375028610229492
    8. '.dp' → logprob: -23.625028610229492
    9. '_dp' → logprob: -24.250028610229492
    10. '```' → logprob: -24.500028610229492

Token 2154: '[N' (ID: 49776)
  Prédit: '[N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -9.758300438988954e-05
    2. 'N' → logprob: -9.375097274780273
    3. '[-' → logprob: -11.625097274780273
    4. '[n' → logprob: -13.375097274780273
    5. '[' → logprob: -14.000097274780273
    6. '[len' → logprob: -14.125097274780273
    7. '```' → logprob: -15.250097274780273
    8. ' N' → logprob: -16.000097274780273
    9. '[
' → logprob: -16.625097274780273
    10. '   ' → logprob: -16.750097274780273

Token 2155: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0007119550718925893
    2. ' -' → logprob: -7.250711917877197
    3. '[-' → logprob: -13.625712394714355
    4. '[' → logprob: -14.625712394714355
    5. '   ' → logprob: -15.125712394714355
    6. '```' → logprob: -17.12571144104004
    7. '#' → logprob: -17.50071144104004
    8. '       ' → logprob: -19.00071144104004
    9. '−' → logprob: -19.00071144104004
    10. '[N' → logprob: -19.12571144104004

Token 2156: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9266199160483666e-05
    2. '1' → logprob: -11.250019073486328
    3. '-' → logprob: -12.875019073486328
    4. ' ' → logprob: -13.750019073486328
    5. '   ' → logprob: -14.000019073486328
    6. '```' → logprob: -14.062519073486328
    7. '3' → logprob: -15.875019073486328
    8. '
' → logprob: -15.875019073486328
    9. '  ' → logprob: -16.625019073486328
    10. '(' → logprob: -16.937519073486328

Token 2157: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00014442270912695676
    2. '1' → logprob: -8.875144004821777
    3. ' ' → logprob: -12.625144004821777
    4. '   ' → logprob: -14.375144004821777
    5. '3' → logprob: -15.375144004821777
    6. '```' → logprob: -16.000144958496094
    7. '-' → logprob: -16.562644958496094
    8. '  ' → logprob: -16.562644958496094
    9. '２' → logprob: -17.437644958496094
    10. '	' → logprob: -17.625144958496094

Token 2158: '][' (ID: 2696)
  Prédit: '[id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[id' → logprob: -0.2523418962955475
    2. '][' → logprob: -1.502341866493225
    3. '[' → logprob: -8.502342224121094
    4. '[idx' → logprob: -9.502342224121094
    5. ')[' → logprob: -10.627342224121094
    6. '}[' → logprob: -10.752342224121094
    7. '   ' → logprob: -11.002342224121094
    8. ' ][' → logprob: -11.127342224121094
    9. '```' → logprob: -11.627342224121094
    10. ' [' → logprob: -11.752342224121094

Token 2159: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -2.935296834039036e-06
    2. '[id' → logprob: -13.37500286102295
    3. ' id' → logprob: -13.75000286102295
    4. 'comp' → logprob: -15.12500286102295
    5. '[' → logprob: -19.125003814697266
    6. '(id' → logprob: -19.500003814697266
    7. 'idx' → logprob: -19.625003814697266
    8. '```' → logprob: -20.250003814697266
    9. '
' → logprob: -20.750003814697266
    10. ''id' → logprob: -20.875003814697266

Token 2160: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.44253653287887573
    2. ']%' → logprob: -1.0675365924835205
    3. '%' → logprob: -4.942536354064941
    4. ')' → logprob: -5.817536354064941
    5. ')%' → logprob: -5.817536354064941
    6. ']
' → logprob: -8.067536354064941
    7. '   ' → logprob: -8.942536354064941
    8. ' ]' → logprob: -9.942536354064941
    9. '])' → logprob: -10.067536354064941
    10. '][' → logprob: -11.067536354064941

Token 2161: '   ' (ID: 271)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.7523365616798401
    2. '```' → logprob: -1.2523365020751953
    3. 'ans' → logprob: -1.6273365020751953
    4. '%=' → logprob: -3.5023365020751953
    5. '(ans' → logprob: -5.252336502075195
    6. '%
' → logprob: -5.752336502075195
    7. '``' → logprob: -6.127336502075195
    8. '
' → logprob: -6.252336502075195
    9. ' ans' → logprob: -6.377336502075195
    10. '	ans' → logprob: -7.627336502075195

Token 2162: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.022104566916823387
    2. '%=' → logprob: -4.272104740142822
    3. '```' → logprob: -5.522104740142822
    4. '%' → logprob: -5.772104740142822
    5. ' ans' → logprob: -8.022104263305664
    6. '(ans' → logprob: -8.397104263305664
    7. ' %=' → logprob: -9.522104263305664
    8. '	ans' → logprob: -9.522104263305664
    9. '``' → logprob: -10.272104263305664
    10. '=' → logprob: -10.897104263305664

Token 2163: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.04950776696205139
    2. ' %=' → logprob: -3.1745078563690186
    3. '%' → logprob: -5.0495076179504395
    4. ')%' → logprob: -10.174508094787598
    5. ')' → logprob: -11.049508094787598
    6. ' %' → logprob: -12.174508094787598
    7. '```' → logprob: -12.549508094787598
    8. '   ' → logprob: -12.924508094787598
    9. '=' → logprob: -13.174508094787598
    10. '	' → logprob: -13.299508094787598

Token 2164: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -6.2729995988775045e-06
    2. ' mod' → logprob: -12.000006675720215
    3. '(mod' → logprob: -16.7500057220459
    4. '	mod' → logprob: -19.6250057220459
    5. '_mod' → logprob: -22.2500057220459
    6. ' мод' → logprob: -23.1250057220459
    7. '1' → logprob: -23.1250057220459
    8. 'MOD' → logprob: -23.3750057220459
    9. '```' → logprob: -23.7500057220459
    10. '0' → logprob: -24.2500057220459

Token 2165: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12727926671504974
    2. 'return' → logprob: -2.127279281616211
    3. '    
' → logprob: -8.877279281616211
    4. ' return' → logprob: -9.502279281616211
    5. '```' → logprob: -10.002279281616211
    6. '	return' → logprob: -10.127279281616211
    7. '
' → logprob: -10.377279281616211
    8. ':return' → logprob: -12.502279281616211
    9. '       ' → logprob: -12.752279281616211
    10. ')return' → logprob: -12.877279281616211

Token 2166: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.10026846826076508
    2. '   ' → logprob: -2.3502683639526367
    3. '```' → logprob: -9.850268363952637
    4. ' return' → logprob: -12.475268363952637
    5. '	return' → logprob: -12.725268363952637
    6. '    
' → logprob: -13.475268363952637
    7. '{return' → logprob: -15.725268363952637
    8. '``' → logprob: -16.100269317626953
    9. ')return' → logprob: -16.350269317626953
    10. '
' → logprob: -16.350269317626953

Token 2167: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00043448375072330236
    2. '   ' → logprob: -7.750434398651123
    3. '```' → logprob: -13.000434875488281
    4. ' return' → logprob: -13.500434875488281
    5. '    
' → logprob: -16.87543487548828
    6. '	return' → logprob: -18.62543487548828
    7. '
' → logprob: -18.62543487548828
    8. '``' → logprob: -19.75043487548828
    9. '{return' → logprob: -20.12543487548828
    10. '#' (adapté à ' #') → logprob: -20.12543487548828

Token 2168: ' On' (ID: 2160)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00020401719666551799
    2. '   ' → logprob: -8.500204086303711
    3. ' return' → logprob: -15.000204086303711
    4. '```' → logprob: -16.12520408630371
    5. '	return' → logprob: -18.75020408630371
    6. '    
' → logprob: -19.12520408630371
    7. '
' → logprob: -19.87520408630371
    8. 'ret' → logprob: -20.12520408630371
    9. '{return' → logprob: -20.12520408630371
    10. 'Return' → logprob: -20.75020408630371

Token 2169: ' retourne' (ID: 178818)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0005551783833652735
    2. ' return' → logprob: -7.750555038452148
    3. '   ' → logprob: -9.000555038452148
    4. '#' → logprob: -14.750555038452148
    5. '
' → logprob: -15.750555038452148
    6. '_return' → logprob: -15.750555038452148
    7. 'eturn' → logprob: -15.750555038452148
    8. ':return' → logprob: -16.37555503845215
    9. 'ret' → logprob: -16.62555503845215
    10. '	return' → logprob: -17.62555503845215

Token 2170: ' le' (ID: 505)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0002632430987432599
    2. ' ans' → logprob: -8.250263214111328
    3. '(ans' → logprob: -13.500263214111328
    4. '	ans' → logprob: -15.000263214111328
    5. '   ' → logprob: -15.125263214111328
    6. 'answer' → logprob: -17.375263214111328
    7. '_ans' → logprob: -18.875263214111328
    8. '
' → logprob: -18.875263214111328
    9. 'anst' → logprob: -20.500263214111328
    10. 'an' → logprob: -20.875263214111328

Token 2171: ' résultat' (ID: 62556)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00021474185632541776
    2. ' ans' → logprob: -8.500214576721191
    3. '(ans' → logprob: -12.250214576721191
    4. 'answer' → logprob: -12.625214576721191
    5. '   ' → logprob: -13.750214576721191
    6. '	ans' → logprob: -13.875214576721191
    7. 'return' → logprob: -14.625214576721191
    8. 'result' → logprob: -14.750214576721191
    9. '
' → logprob: -15.750214576721191
    10. '_ans' → logprob: -16.625215530395508

Token 2172: ' calcul' (ID: 7559)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.23635351657867432
    2. '(ans' → logprob: -2.2363533973693848
    3. 'return' → logprob: -2.9863533973693848
    4. '   ' → logprob: -2.9863533973693848
    5. ' ans' → logprob: -5.986353397369385
    6. '	ans' → logprob: -9.361353874206543
    7. ' return' → logprob: -10.361353874206543
    8. '
' → logprob: -10.736353874206543
    9. '```' → logprob: -10.986353874206543
    10. '(' → logprob: -11.236353874206543

Token 2173: 'é' (ID: 377)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4933292865753174
    2. 'return' → logprob: -1.4933292865753174
    3. ')' → logprob: -1.6183292865753174
    4. 'é' → logprob: -1.8683292865753174
    5. 'ans' → logprob: -1.8683292865753174
    6. 'er' → logprob: -4.368329048156738
    7. 'ée' → logprob: -5.243329048156738
    8. '(ans' → logprob: -5.243329048156738
    9. ')
' → logprob: -5.743329048156738
    10. 'ate' → logprob: -5.743329048156738

Token 2174: ' pour' (ID: 1930)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.7872752547264099
    2. '   ' → logprob: -0.9122752547264099
    3. 'return' → logprob: -2.0372753143310547
    4. '(' → logprob: -5.287275314331055
    5. '(return' → logprob: -5.912275314331055
    6. 'ans' → logprob: -6.037275314331055
    7. '(
' → logprob: -7.037275314331055
    8. ' return' → logprob: -7.662275314331055
    9. '    
' → logprob: -7.912275314331055
    10. '```' → logprob: -8.287275314331055

Token 2175: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0008546437602490187
    2. ' ans' → logprob: -7.2508544921875
    3. 'return' → logprob: -9.5008544921875
    4. '   ' → logprob: -10.1258544921875
    5. 'h' → logprob: -11.1258544921875
    6. 'dp' → logprob: -11.8758544921875
    7. '(ans' → logprob: -12.6258544921875
    8. '  ' → logprob: -13.7508544921875
    9. '	ans' → logprob: -14.0008544921875
    10. 'solve' → logprob: -14.1258544921875

Token 2176: ' sé' (ID: 7462)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.08794531971216202
    2. 'h' → logprob: -3.2129452228546143
    3. 'return' → logprob: -3.2129452228546143
    4. '   ' → logprob: -6.337945461273193
    5. ' ans' → logprob: -6.962945461273193
    6. 'solve' → logprob: -7.962945461273193
    7. 'answer' → logprob: -8.212944984436035
    8. 'def' → logprob: -9.712944984436035
    9. ' return' → logprob: -9.837944984436035
    10. 'a' → logprob: -9.837944984436035

Token 2177: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -2.45848218582978e-06
    2. 'q' → logprob: -13.37500286102295
    3. 'QUENCE' → logprob: -14.75000286102295
    4. 'quences' → logprob: -15.62500286102295
    5. 'qu' → logprob: -16.000001907348633
    6. '#' → logprob: -16.875001907348633
    7. '   ' → logprob: -17.625001907348633
    8. '
' → logprob: -17.875001907348633
    9. 'que' → logprob: -18.250001907348633
    10. 'ance' → logprob: -18.375001907348633

Token 2178: ' h' (ID: 312)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.020019015297293663
    2. '   ' → logprob: -4.020019054412842
    3. '(ans' → logprob: -6.645019054412842
    4. ' return' → logprob: -7.895019054412842
    5. '(return' → logprob: -9.395018577575684
    6. 'ans' → logprob: -9.645018577575684
    7. '```' → logprob: -10.520018577575684
    8. '(' → logprob: -12.020018577575684
    9. '
' → logprob: -12.520018577575684
    10. 'def' → logprob: -13.145018577575684

Token 2179: '.
' (ID: 558)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.497426837682724
    2. '(' → logprob: -2.122426748275757
    3. '(return' → logprob: -2.122426748275757
    4. '   ' → logprob: -2.747426748275757
    5. '(ans' → logprob: -2.747426748275757
    6. '(
' → logprob: -4.747426986694336
    7. ' return' → logprob: -4.872426986694336
    8. '	return' → logprob: -6.247426986694336
    9. '()' → logprob: -6.497426986694336
    10. '<|end|>' → logprob: -6.872426986694336

Token 2180: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2547050714492798
    2. '   ' → logprob: -1.5047050714492798
    3. ' return' → logprob: -6.25470495223999
    4. '```' → logprob: -7.25470495223999
    5. '
' → logprob: -9.129705429077148
    6. '    
' → logprob: -11.254705429077148
    7. '	return' → logprob: -11.504705429077148
    8. ':return' → logprob: -12.504705429077148
    9. '``' → logprob: -13.504705429077148
    10. '  ' → logprob: -13.504705429077148

Token 2181: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -5.240481914370321e-05
    2. '   ' → logprob: -10.250052452087402
    3. ' return' → logprob: -11.000052452087402
    4. '```' → logprob: -15.750052452087402
    5. 'ans' → logprob: -16.125051498413086
    6. '
' → logprob: -17.500051498413086
    7. '    
' → logprob: -18.375051498413086
    8. '{return' → logprob: -18.750051498413086
    9. 'eturn' → logprob: -18.875051498413086
    10. '	return' → logprob: -19.125051498413086

Token 2182: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00043698702938854694
    2. ' ans' → logprob: -7.750436782836914
    3. '(ans' → logprob: -12.000436782836914
    4. '	ans' → logprob: -15.625436782836914
    5. '   ' → logprob: -18.750436782836914
    6. 'answer' → logprob: -20.750436782836914
    7. '_ans' → logprob: -20.875436782836914
    8. ' ' → logprob: -21.500436782836914
    9. 'ann' → logprob: -22.625436782836914
    10. 'ANS' → logprob: -22.875436782836914

Token 2183: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2184: '#' (ID: 2)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.407743901014328
    2. '<|end|>' → logprob: -1.9077439308166504
    3. ')' → logprob: -2.0327439308166504
    4. '```' → logprob: -4.40774393081665
    5. '\' → logprob: -4.53274393081665
    6. '#' → logprob: -4.78274393081665
    7. ''' → logprob: -5.53274393081665
    8. '(
' → logprob: -5.65774393081665
    9. ':' → logprob: -5.78274393081665
    10. '\n' → logprob: -6.15774393081665

Token 2185: ' Calcul' (ID: 57243)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0015123621560633183
    2. 'solve' → logprob: -6.62651252746582
    3. 'result' → logprob: -8.75151252746582
    4. '#' → logprob: -10.75151252746582
    5. '#print' → logprob: -13.62651252746582
    6. '```' → logprob: -13.75151252746582
    7. 'if' → logprob: -13.87651252746582
    8. ' solve' → logprob: -14.25151252746582
    9. 'for' → logprob: -14.37651252746582
    10. 'output' → logprob: -14.50151252746582

Token 2186: ' initial' (ID: 4871)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07464385777711868
    2. ' =' → logprob: -3.449643850326538
    3. '(' → logprob: -3.824643850326538
    4. 'result' → logprob: -5.324644088745117
    5. '_result' → logprob: -5.449644088745117
    6. '(
' → logprob: -5.699644088745117
    7. '_' → logprob: -6.449644088745117
    8. '(s' → logprob: -6.949644088745117
    9. '_=' → logprob: -7.199644088745117
    10. ')' → logprob: -7.949644088745117

Token 2187: ' :' (ID: 712)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10081697255373001
    2. 'result' → logprob: -2.3508169651031494
    3. 'res' → logprob: -7.8508172035217285
    4. 'if' → logprob: -9.22581672668457
    5. 'r' → logprob: -9.72581672668457
    6. 'rés' → logprob: -10.60081672668457
    7. 'answer' → logprob: -11.60081672668457
    8. ' =' → logprob: -11.72581672668457
    9. '=' → logprob: -12.35081672668457
    10. 'ans' → logprob: -12.47581672668457

Token 2188: ' pow' (ID: 9779)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.7848862373502925e-05
    2. 'result' → logprob: -10.500027656555176
    3. ' print' → logprob: -16.875028610229492
    4. '```' → logprob: -17.375028610229492
    5. 'pr' → logprob: -17.875028610229492
    6. 'if' → logprob: -17.875028610229492
    7. 'r' → logprob: -17.875028610229492
    8. '
' → logprob: -18.625028610229492
    9. '#print' → logprob: -18.750028610229492
    10. 'res' → logprob: -18.875028610229492

Token 2189: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001415618316968903
    2. 'def' → logprob: -9.875141143798828
    3. '(pow' → logprob: -10.000141143798828
    4. '(
' → logprob: -11.375141143798828
    5. '<|end|>' → logprob: -11.375141143798828
    6. '```' → logprob: -12.000141143798828
    7. 'pow' → logprob: -12.000141143798828
    8. '#' → logprob: -13.125141143798828
    9. 'mod' → logprob: -13.375141143798828
    10. '2' → logprob: -13.625141143798828

Token 2190: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07023395597934723
    2. '(' → logprob: -2.6952340602874756
    3. ')' → logprob: -8.195234298706055
    4. 'mod' → logprob: -12.070234298706055
    5. '```' → logprob: -12.820234298706055
    6. ' ' → logprob: -12.945234298706055
    7. '10' → logprob: -12.945234298706055
    8. 'pow' → logprob: -13.320234298706055
    9. '(
' → logprob: -13.945234298706055
    10. '(pow' → logprob: -14.070234298706055

Token 2191: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.33332979679107666
    2. '(n' → logprob: -1.8333297967910767
    3. ',' → logprob: -2.208329677581787
    4. '(H' → logprob: -5.458329677581787
    5. ')' → logprob: -5.708329677581787
    6. '(h' → logprob: -6.083329677581787
    7. '(len' → logprob: -6.583329677581787
    8. '(
' → logprob: -7.458329677581787
    9. '(pow' → logprob: -7.458329677581787
    10. ',n' → logprob: -7.708329677581787

Token 2192: ' nombre' (ID: 9733)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.2671814262866974
    2. 'n' → logprob: -2.017181396484375
    3. 'h' → logprob: -2.517181396484375
    4. 'max' → logprob: -4.267181396484375
    5. '2' → logprob: -6.017181396484375
    6. '0' → logprob: -6.892181396484375
    7. '10' → logprob: -7.017181396484375
    8. 'sum' → logprob: -7.517181396484375
    9. '(' → logprob: -8.017181396484375
    10. '(n' → logprob: -8.267181396484375

Token 2193: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31195342540740967
    2. '(n' → logprob: -1.4369534254074097
    3. '(h' → logprob: -4.686953544616699
    4. ')' → logprob: -5.061953544616699
    5. '**' → logprob: -5.686953544616699
    6. '(
' → logprob: -5.811953544616699
    7. ',' → logprob: -6.186953544616699
    8. '(-' → logprob: -6.811953544616699
    9. 'mod' → logprob: -6.811953544616699
    10. '(H' → logprob: -7.061953544616699

Token 2194: ' ' (ID: 220)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -1.384338140487671
    2. 'h' → logprob: -1.384338140487671
    3. 'n' → logprob: -1.634338140487671
    4. 'élé' → logprob: -2.134338140487671
    5. ')' → logprob: -2.384338140487671
    6. 'elements' → logprob: -3.134338140487671
    7. '(n' → logprob: -4.38433837890625
    8. '0' → logprob: -4.88433837890625
    9. '2' → logprob: -5.25933837890625
    10. ']' → logprob: -5.63433837890625

Token 2195: '1' (ID: 16)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.6750234365463257
    2. 'h' → logprob: -1.9250234365463257
    3. ')' → logprob: -2.1750235557556152
    4. 'n' → logprob: -2.3000235557556152
    5. '2' → logprob: -3.0500235557556152
    6. '0' → logprob: -3.9250235557556152
    7. '(n' → logprob: -4.550023555755615
    8. '(' → logprob: -4.675023555755615
    9. 'elements' → logprob: -4.675023555755615
    10. '(H' → logprob: -5.175023555755615

Token 2196: ' dans' (ID: 2671)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17852190136909485
    2. ')' → logprob: -2.3035218715667725
    3. 's' → logprob: -3.1785218715667725
    4. ',n' → logprob: -5.303522109985352
    5. ' ,' → logprob: -5.803522109985352
    6. '(n' → logprob: -6.053522109985352
    7. '**' → logprob: -6.428522109985352
    8. '(' → logprob: -7.178522109985352
    9. '_count' → logprob: -7.178522109985352
    10. '_bits' → logprob: -7.303522109985352

Token 2197: ' la' (ID: 557)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0074406280182302
    2. '(H' → logprob: -5.007440567016602
    3. 'h' → logprob: -7.382440567016602
    4. '(h' → logprob: -10.007440567016602
    5. ' H' → logprob: -11.132440567016602
    6. ')' → logprob: -11.382440567016602
    7. '[' → logprob: -11.757440567016602
    8. '(' → logprob: -11.882440567016602
    9. '```' → logprob: -12.382440567016602
    10. 'a' → logprob: -13.632440567016602

Token 2198: ' liste' (ID: 31719)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.010841237381100655
    2. 'h' → logprob: -4.635841369628906
    3. '(H' → logprob: -7.260841369628906
    4. 'bin' → logprob: -9.010841369628906
    5. 'list' → logprob: -9.885841369628906
    6. '(h' → logprob: -10.010841369628906
    7. '[' → logprob: -10.510841369628906
    8. 'str' → logprob: -10.635841369628906
    9. 'input' → logprob: -10.760841369628906
    10. '(' → logprob: -11.135841369628906

Token 2199: ' H' (ID: 487)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.04528094083070755
    2. 'H' → logprob: -3.295280933380127
    3. '(h' → logprob: -5.545280933380127
    4. '([' → logprob: -5.920280933380127
    5. ')' → logprob: -7.795280933380127
    6. '(' → logprob: -9.795281410217285
    7. '```' → logprob: -10.420281410217285
    8. ']' → logprob: -10.795281410217285
    9. '(`' → logprob: -11.045281410217285
    10. '[' → logprob: -11.170281410217285

Token 2200: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7457005977630615
    2. '.count' → logprob: -0.7457005977630615
    3. ',' → logprob: -3.1207005977630615
    4. 'H' → logprob: -5.495700836181641
    5. ',H' → logprob: -6.870700836181641
    6. '(H' → logprob: -7.245700836181641
    7. '[' → logprob: -7.995700836181641
    8. ')
' → logprob: -8.87070083618164
    9. 'count' → logprob: -8.99570083618164
    10. '   ' → logprob: -9.24570083618164

Token 2201: ' mod' (ID: 1812)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.030164314433932304
    2. ' H' → logprob: -3.5301642417907715
    3. ')' → logprob: -8.65516471862793
    4. ' ' → logprob: -9.65516471862793
    5. 'sum' → logprob: -9.90516471862793
    6. 'count' → logprob: -10.03016471862793
    7. 'list' → logprob: -10.78016471862793
    8. ' sum' → logprob: -11.03016471862793
    9. '   ' → logprob: -11.40516471862793
    10. ' count' → logprob: -11.78016471862793

Token 2202: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.031478945165872574
    2. '(H' → logprob: -4.1564788818359375
    3. ',' → logprob: -4.6564788818359375
    4. 'H' → logprob: -6.0314788818359375
    5. '(' → logprob: -7.0314788818359375
    6. ')
' → logprob: -7.1564788818359375
    7. ')*' → logprob: -7.6564788818359375
    8. ')+' → logprob: -8.406478881835938
    9. 'count' → logprob: -8.781478881835938
    10. ')**' → logprob: -9.156478881835938

Token 2203: '#' (ID: 2)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.8251382112503052
    2. 'count' → logprob: -1.2001382112503052
    3. 'result' → logprob: -2.5751380920410156
    4. 'sum' → logprob: -2.5751380920410156
    5. 'H' → logprob: -3.0751380920410156
    6. 'res' → logprob: -3.7001380920410156
    7. 'ans' → logprob: -4.575138092041016
    8. 'cnt' → logprob: -4.950138092041016
    9. '(' → logprob: -5.575138092041016
    10. 'pop' → logprob: -6.075138092041016

Token 2204: ' Cela' (ID: 44403)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.5697781443595886
    2. 'result' → logprob: -1.5697782039642334
    3. 'count' → logprob: -2.0697782039642334
    4. 'sum' → logprob: -3.3197782039642334
    5. 'res' → logprob: -3.6947782039642334
    6. 'H' → logprob: -4.694777965545654
    7. 'ans' → logprob: -4.944777965545654
    8. 'return' → logprob: -5.944777965545654
    9. 'print' → logprob: -5.944777965545654
    10. '(' → logprob: -5.944777965545654

Token 2205: ' signifie' (ID: 81149)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19176684319972992
    2. 'count' → logprob: -2.8167667388916016
    3. ' =' → logprob: -3.6917667388916016
    4. ')' → logprob: -3.9417667388916016
    5. '#' → logprob: -3.9417667388916016
    6. '+=' → logprob: -4.316766738891602
    7. '_count' → logprob: -4.441766738891602
    8. '_' → logprob: -5.066766738891602
    9. 'result' → logprob: -5.941766738891602
    10. ' +=' → logprob: -6.316766738891602

Token 2206: ' que' (ID: 661)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.20441119372844696
    2. '(' → logprob: -2.329411268234253
    3. '(pow' → logprob: -3.579411268234253
    4. 'H' → logprob: -3.704411268234253
    5. 'sum' → logprob: -4.329411029815674
    6. ' pow' → logprob: -4.829411029815674
    7. ')' → logprob: -5.579411029815674
    8. '(
' → logprob: -5.954411029815674
    9. '2' → logprob: -6.329411029815674
    10. '(sum' → logprob: -6.829411029815674

Token 2207: ' pour' (ID: 1930)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.024210810661316
    2. 'H' → logprob: -1.399210810661316
    3. 'return' → logprob: -1.774210810661316
    4. 'print' → logprob: -2.3992109298706055
    5. 'sum' → logprob: -2.8992109298706055
    6. 'solve' → logprob: -3.1492109298706055
    7. 'result' → logprob: -4.5242109298706055
    8. 'answer' → logprob: -4.8992109298706055
    9. 'pow' → logprob: -4.8992109298706055
    10. 'h' → logprob: -6.0242109298706055

Token 2208: ' chaque' (ID: 21194)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6021322011947632
    2. '_' → logprob: -1.4771322011947632
    3. 'c' → logprob: -2.1021323204040527
    4. 'H' → logprob: -3.4771323204040527
    5. 'i' → logprob: -4.102132320404053
    6. '1' → logprob: -4.352132320404053
    7. 'h' → logprob: -4.477132320404053
    8. 'k' → logprob: -5.352132320404053
    9. 'count' → logprob: -5.352132320404053
    10. 'val' → logprob: -5.477132320404053

Token 2209: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6060762405395508
    2. 'H' → logprob: -0.9810762405395508
    3. 'x' → logprob: -3.356076240539551
    4. '(' → logprob: -3.481076240539551
    5. 'h' → logprob: -5.856076240539551
    6. 'elem' → logprob: -6.356076240539551
    7. ' ' → logprob: -6.481076240539551
    8. ' H' → logprob: -6.606076240539551
    9. 'element' → logprob: -6.731076240539551
    10. ' x' → logprob: -6.981076240539551

Token 2210: '1' (ID: 16)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.750861406326294
    2. '1' → logprob: -1.250861406326294
    3. 'x' → logprob: -2.000861406326294
    4. 'h' → logprob: -3.125861406326294
    5. '(' → logprob: -4.000861167907715
    6. '_' → logprob: -4.375861167907715
    7. 'elem' → logprob: -4.375861167907715
    8. 'element' → logprob: -5.375861167907715
    9. 'val' → logprob: -6.125861167907715
    10. 'i' → logprob: -6.125861167907715

Token 2211: ' dans' (ID: 2671)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19488418102264404
    2. ',' → logprob: -2.8198843002319336
    3. ' in' → logprob: -3.5698843002319336
    4. 'in' → logprob: -4.819884300231934
    5. '   ' → logprob: -4.819884300231934
    6. '(H' → logprob: -4.819884300231934
    7. 'count' → logprob: -5.194884300231934
    8. '
' → logprob: -5.319884300231934
    9. ' if' → logprob: -5.319884300231934
    10. ' ' → logprob: -5.319884300231934

Token 2212: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -2.6060808522743173e-05
    2. '(H' → logprob: -10.625025749206543
    3. ' H' → logprob: -13.625025749206543
    4. '#' → logprob: -16.00002670288086
    5. '[' → logprob: -16.12502670288086
    6. '_H' → logprob: -17.12502670288086
    7. 'h' → logprob: -17.12502670288086
    8. '```' → logprob: -17.12502670288086
    9. '   ' → logprob: -17.25002670288086
    10. '(' → logprob: -17.37502670288086

Token 2213: ',' (ID: 11)
  Prédit: '.count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.8133671283721924
    2. ':' → logprob: -1.6883671283721924
    3. 'if' → logprob: -2.5633671283721924
    4. ':
' → logprob: -2.5633671283721924
    5. ',' → logprob: -2.8133671283721924
    6. ')' → logprob: -3.3133671283721924
    7. 'count' → logprob: -3.3133671283721924
    8. '   ' → logprob: -3.3133671283721924
    9. ' if' → logprob: -4.188366889953613
    10. '[' → logprob: -4.813366889953613

Token 2214: ' il' (ID: 1793)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.027163133025169373
    2. 'result' → logprob: -4.152163028717041
    3. 'pow' → logprob: -5.652163028717041
    4. 'res' → logprob: -5.902163028717041
    5. '#' → logprob: -6.152163028717041
    6. 'answer' → logprob: -6.777163028717041
    7. ' ans' → logprob: -7.277163028717041
    8. 'count' → logprob: -9.0271635055542
    9. 'total' → logprob: -9.1521635055542
    10. '1' → logprob: -9.4021635055542

Token 2215: ' y' (ID: 342)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3240434229373932
    2. ' +=' → logprob: -1.5740433931350708
    3. '=' → logprob: -2.8240435123443604
    4. '[' → logprob: -5.574043273925781
    5. ' =' → logprob: -6.199043273925781
    6. '   ' → logprob: -6.824043273925781
    7. '_' → logprob: -6.949043273925781
    8. ')' → logprob: -8.199043273925781
    9. ']+=' → logprob: -8.199043273925781
    10. '^' → logprob: -8.324043273925781

Token 2216: ' a' (ID: 261)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4164324104785919
    2. '=' → logprob: -1.6664323806762695
    3. '#' → logprob: -2.2914323806762695
    4. ' +=' → logprob: -4.2914323806762695
    5. ')' → logprob: -4.9164323806762695
    6. '```' → logprob: -5.0414323806762695
    7. 'is' → logprob: -5.1664323806762695
    8. ' a' → logprob: -5.5414323806762695
    9. 'a' → logprob: -5.7914323806762695
    10. '   ' → logprob: -6.0414323806762695

Token 2217: ' deux' (ID: 10301)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1317233443260193
    2. '2' → logprob: -2.881723403930664
    3. 'pow' → logprob: -3.506723403930664
    4. ' ' → logprob: -4.131723403930664
    5. ')' → logprob: -5.381723403930664
    6. '#' → logprob: -5.506723403930664
    7. ' pow' → logprob: -5.631723403930664
    8. '+' → logprob: -5.881723403930664
    9. ' +' → logprob: -6.506723403930664
    10. '(' → logprob: -6.756723403930664

Token 2218: ' possibilités' (ID: 119756)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.4258701801300049
    2. ' **' → logprob: -1.1758701801300049
    3. 'options' → logprob: -5.050869941711426
    4. 'tokens' → logprob: -5.300869941711426
    5. 'poss' → logprob: -5.550869941711426
    6. ')' → logprob: -6.050869941711426
    7. '_options' → logprob: -6.050869941711426
    8. '^' → logprob: -6.175869941711426
    9. '_choices' → logprob: -6.175869941711426
    10. 'choices' → logprob: -6.300869941711426

Token 2219: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24782471358776093
    2. '(' → logprob: -2.9978246688842773
    3. '**' → logprob: -2.9978246688842773
    4. '
' → logprob: -3.9978246688842773
    5. 'H' → logprob: -4.497824668884277
    6. '(
' → logprob: -4.497824668884277
    7. '=' → logprob: -4.747824668884277
    8. ',' → logprob: -4.872824668884277
    9. 'count' → logprob: -4.872824668884277
    10. '#' → logprob: -4.997824668884277

Token 2220: 'prob' (ID: 29823)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0032244143076241016
    2. ')*' → logprob: -6.6282243728637695
    3. ' )' → logprob: -7.2532243728637695
    4. '*' → logprob: -8.00322437286377
    5. '(' → logprob: -8.75322437286377
    6. '2' → logprob: -8.87822437286377
    7. '1' → logprob: -9.12822437286377
    8. ' ' → logprob: -9.50322437286377
    9. '**' → logprob: -9.62822437286377
    10. ')
' → logprob: -10.00322437286377

Token 2221: 'ablement' (ID: 63986)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.553117573261261
    2. 'abilité' → logprob: -1.3031175136566162
    3. '**' → logprob: -2.678117513656616
    4. 'ability' → logprob: -3.803117513656616
    5. 'abilities' → logprob: -3.928117513656616
    6. 'abil' → logprob: -4.428117752075195
    7. 'alité' → logprob: -5.553117752075195
    8. '   ' → logprob: -5.678117752075195
    9. ' ' → logprob: -5.803117752075195
    10. '(' → logprob: -5.928117752075195

Token 2222: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008417412638664246
    2. ' )' → logprob: -5.63341760635376
    3. '*' → logprob: -6.50841760635376
    4. ' *' → logprob: -7.00841760635376
    5. '**' → logprob: -7.63341760635376
    6. '),' → logprob: -7.88341760635376
    7. '#' → logprob: -8.258417129516602
    8. 'for' → logprob: -8.758417129516602
    9. ',' → logprob: -9.133417129516602
    10. ')
' → logprob: -9.133417129516602

Token 2223: ' cause' (ID: 7075)
  Prédit: ' choisir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' choisir' → logprob: -1.0518866777420044
    2. ')' → logprob: -2.301886558532715
    3. ' prendre' → logprob: -2.551886558532715
    4. ' ajouter' → logprob: -2.801886558532715
    5. 'cho' → logprob: -3.051886558532715
    6. ' chaque' → logprob: -3.301886558532715
    7. ' )' → logprob: -3.301886558532715
    8. '```' → logprob: -3.551886558532715
    9. ' compter' → logprob: -3.676886558532715
    10. ' continuer' → logprob: -3.676886558532715

Token 2224: ' d' (ID: 272)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11970753967761993
    2. ' de' → logprob: -2.6197075843811035
    3. '   ' → logprob: -4.6197075843811035
    4. '(
' → logprob: -4.6197075843811035
    5. ' d' → logprob: -4.8697075843811035
    6. ' des' → logprob: -5.3697075843811035
    7. ')' → logprob: -5.9947075843811035
    8. 'de' → logprob: -6.4947075843811035
    9. '#' → logprob: -6.8697075843811035
    10. ' (' → logprob: -7.1197075843811035

Token 2225: ''une' (ID: 13337)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8732931613922119
    2. ' l' → logprob: -1.623293161392212
    3. ' H' → logprob: -2.123293161392212
    4. 'H' → logprob: -2.873293161392212
    5. ' ' → logprob: -2.873293161392212
    6. ')' → logprob: -2.998293161392212
    7. 'l' → logprob: -2.998293161392212
    8. 'la' → logprob: -3.623293161392212
    9. '   ' → logprob: -4.373292922973633
    10. ',' → logprob: -6.123292922973633

Token 2226: ' séparation' (ID: 199055)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.215022012591362
    2. ' )' → logprob: -1.8400219678878784
    3. ' space' → logprob: -4.840022087097168
    4. ' ' → logprob: -6.465022087097168
    5. ' ' → logprob: -6.465022087097168
    6. ' )
' → logprob: -6.465022087097168
    7. ' if' → logprob: -6.465022087097168
    8. ' 
' → logprob: -6.465022087097168
    9. ' espace' → logprob: -6.465022087097168
    10. ')
' → logprob: -6.840022087097168

Token 2227: ' dans' (ID: 2671)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006509898230433464
    2. ' )' → logprob: -6.506509780883789
    3. '**' → logprob: -6.756509780883789
    4. '#' → logprob: -7.006509780883789
    5. '[' → logprob: -7.756509780883789
    6. '   ' → logprob: -7.756509780883789
    7. ')
' → logprob: -8.256509780883789
    8. '<|end|>' → logprob: -8.506509780883789
    9. 'count' → logprob: -8.756509780883789
    10. ')**' → logprob: -8.881509780883789

Token 2228: ' la' (ID: 557)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.2811110317707062
    2. 'la' → logprob: -1.5311110019683838
    3. ' la' → logprob: -4.031111240386963
    4. ' H' → logprob: -5.281111240386963
    5. 'l' → logprob: -5.656111240386963
    6. 'le' → logprob: -6.656111240386963
    7. 'les' → logprob: -7.156111240386963
    8. ' ' → logprob: -9.156110763549805
    9. '   ' → logprob: -9.781110763549805
    10. '#' → logprob: -10.156110763549805

Token 2229: ' logique' (ID: 115350)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -1.0567668676376343
    2. 'sé' → logprob: -1.1817668676376343
    3. 'liste' → logprob: -2.306766986846924
    4. '#' → logprob: -2.431766986846924
    5. 's' → logprob: -2.681766986846924
    6. 'chaine' → logprob: -3.306766986846924
    7. 'H' → logprob: -5.056766986846924
    8. '   ' → logprob: -5.056766986846924
    9. 'h' → logprob: -5.431766986846924
    10. ' sequence' → logprob: -5.556766986846924

Token 2230: ' du' (ID: 1462)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020255891140550375
    2. ' )' → logprob: -7.252025604248047
    3. ')
' → logprob: -7.752025604248047
    4. '[' → logprob: -8.252025604248047
    5. ').' → logprob: -8.627025604248047
    6. 'H' → logprob: -9.752025604248047
    7. ',' → logprob: -9.752025604248047
    8. '   ' → logprob: -10.127025604248047
    9. '.' → logprob: -10.252025604248047
    10. '#' → logprob: -10.377025604248047

Token 2231: ' problème' (ID: 35630)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.5309213995933533
    2. 'pro' → logprob: -2.155921459197998
    3. '#' → logprob: -2.405921459197998
    4. 'H' → logprob: -2.405921459197998
    5. 'h' → logprob: -3.155921459197998
    6. 'input' → logprob: -3.905921459197998
    7. ' code' → logprob: -4.405921459197998
    8. 'proble' → logprob: -5.030921459197998
    9. 'split' → logprob: -5.030921459197998
    10. 'problem' → logprob: -5.530921459197998

Token 2232: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012447552289813757
    2. '[' → logprob: -8.50124454498291
    3. ')
' → logprob: -8.62624454498291
    4. '#' → logprob: -9.00124454498291
    5. '(' → logprob: -9.12624454498291
    6. '   ' → logprob: -9.50124454498291
    7. ' )' → logprob: -9.50124454498291
    8. ',' → logprob: -9.50124454498291
    9. ')**' → logprob: -9.75124454498291
    10. 'def' → logprob: -10.25124454498291

Token 2233: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.9186088442802429
    2. 'count' → logprob: -1.0436089038848877
    3. 'res' → logprob: -2.2936089038848877
    4. 'result' → logprob: -2.5436089038848877
    5. 'print' → logprob: -3.7936089038848877
    6. 'cnt' → logprob: -4.168608665466309
    7. 'pow' → logprob: -4.543608665466309
    8. 'answer' → logprob: -5.043608665466309
    9. '=' → logprob: -5.668608665466309
    10. 'ones' → logprob: -5.668608665466309

Token 2234: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740923047065735
    2. '=' → logprob: -0.9740923047065735
    3. ' +=' → logprob: -11.349092483520508
    4. ')' → logprob: -13.599092483520508
    5. '+=' → logprob: -14.474092483520508
    6. '_' → logprob: -15.099092483520508
    7. ' ' → logprob: -15.474092483520508
    8. ',' → logprob: -15.599092483520508
    9. ' ' → logprob: -15.849092483520508
    10. '(' → logprob: -16.224092483520508

Token 2235: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.001348211313597858
    2. 'sum' → logprob: -7.25134801864624
    3. ' pow' → logprob: -8.126348495483398
    4. '(pow' → logprob: -8.751348495483398
    5. '0' → logprob: -9.001348495483398
    6. '1' → logprob: -10.376348495483398
    7. '2' → logprob: -11.126348495483398
    8. '(' → logprob: -11.626348495483398
    9. '(sum' → logprob: -13.251348495483398
    10. 'ans' → logprob: -13.376348495483398

Token 2236: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.36574100604048e-06
    2. '2' → logprob: -12.500004768371582
    3. '(pow' → logprob: -15.375004768371582
    4. '(
' → logprob: -15.500004768371582
    5. 'pow' → logprob: -15.875004768371582
    6. ' (' → logprob: -16.625003814697266
    7. '<|end|>' → logprob: -18.000003814697266
    8. '```' → logprob: -18.500003814697266
    9. ' ' → logprob: -18.875003814697266
    10. ')' → logprob: -18.875003814697266

Token 2237: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.875
    3. '(' → logprob: -16.125
    4. '```' → logprob: -18.5
    5. ')' → logprob: -19.5
    6. '   ' → logprob: -20.625
    7. '۲' → logprob: -21.375
    8. '[' → logprob: -21.375
    9. '  ' → logprob: -21.5
    10. '２' → logprob: -22.375

Token 2238: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3167727589607239
    2. ',' → logprob: -1.316772699356079
    3. '2' → logprob: -6.691772937774658
    4. '(H' → logprob: -7.316772937774658
    5. ',H' → logprob: -7.691772937774658
    6. '(
' → logprob: -7.941772937774658
    7. '(len' → logprob: -8.9417724609375
    8. 'H' → logprob: -9.1917724609375
    9. '(',',' → logprob: -9.1917724609375
    10. '(',' → logprob: -9.4417724609375

Token 2239: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.00010962257510982454
    2. ' H' → logprob: -9.250109672546387
    3. 'sum' → logprob: -11.250109672546387
    4. ' sum' → logprob: -15.500109672546387
    5. 'len' → logprob: -16.37510871887207
    6. 'h' → logprob: -17.00010871887207
    7. ' ' → logprob: -17.12510871887207
    8. '   ' → logprob: -17.50010871887207
    9. '(H' → logprob: -18.12510871887207
    10. '[' → logprob: -18.25010871887207

Token 2240: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.00023512568441219628
    2. '.' → logprob: -8.375235557556152
    3. ').' → logprob: -12.750235557556152
    4. '   ' → logprob: -14.750235557556152
    5. '.index' → logprob: -15.125235557556152
    6. 'H' → logprob: -15.375235557556152
    7. '.Count' → logprob: -15.875235557556152
    8. ' .' → logprob: -16.000234603881836
    9. '}.' → logprob: -16.125234603881836
    10. '].' → logprob: -16.375234603881836

Token 2241: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.306760805164231e-05
    2. '1' → logprob: -11.87501335144043
    3. '(
' → logprob: -12.50001335144043
    4. ' (' → logprob: -13.00001335144043
    5. ')' → logprob: -16.25001335144043
    6. '(

' → logprob: -16.87501335144043
    7. '('' → logprob: -17.87501335144043
    8. '((' → logprob: -18.25001335144043
    9. ',' → logprob: -18.75001335144043
    10. '(
' → logprob: -19.37501335144043

Token 2242: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3080716346157715e-05
    2. '(' → logprob: -10.875022888183594
    3. ' ' → logprob: -12.625022888183594
    4. ')' → logprob: -14.250022888183594
    5. '   ' → logprob: -16.125022888183594
    6. '```' → logprob: -17.875022888183594
    7. '  ' → logprob: -18.500022888183594
    8. '(
' → logprob: -19.250022888183594
    9. '[' → logprob: -19.375022888183594
    10. '`' → logprob: -19.625022888183594

Token 2243: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.3485892117023468
    2. ')' → logprob: -1.2235891819000244
    3. ')+' → logprob: -10.098588943481445
    4. ',' → logprob: -10.348588943481445
    5. '))' → logprob: -10.598588943481445
    6. ' ),' → logprob: -11.348588943481445
    7. '()' → logprob: -11.473588943481445
    8. '(' → logprob: -11.598588943481445
    9. '()),' → logprob: -12.223588943481445
    10. '(),' → logprob: -13.098588943481445

Token 2244: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -7.493430894101039e-05
    2. ' mod' → logprob: -9.500075340270996
    3. '	mod' → logprob: -20.12507438659668
    4. '(mod' → logprob: -20.75007438659668
    5. 'moder' → logprob: -21.87507438659668
    6. ' мод' → logprob: -22.62507438659668
    7. 'MOD' → logprob: -23.25007438659668
    8. ')' → logprob: -24.00007438659668
    9. '.mod' → logprob: -24.75007438659668
    10. '_mod' → logprob: -24.87507438659668

Token 2245: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4021237802808173e-05
    2. ')*' → logprob: -12.500014305114746
    3. ' )' → logprob: -12.500014305114746
    4. ')
' → logprob: -13.875014305114746
    5. ')%' → logprob: -14.000014305114746
    6. '))' → logprob: -14.250014305114746
    7. '*' → logprob: -14.625014305114746
    8. '#' → logprob: -14.750014305114746
    9. '**' → logprob: -14.750014305114746
    10. ')#' → logprob: -14.750014305114746

Token 2246: '#' (ID: 2)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3637435734272003
    2. 'if' → logprob: -1.613743543624878
    3. 'print' → logprob: -2.363743543624878
    4. 'for' → logprob: -4.738743782043457
    5. '#' → logprob: -5.863743782043457
    6. '#print' → logprob: -10.613743782043457
    7. '(ans' → logprob: -10.863743782043457
    8. 'result' → logprob: -10.863743782043457
    9. '+' → logprob: -11.238743782043457
    10. '
' → logprob: -11.363743782043457

Token 2247: ' On' (ID: 2160)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5881006717681885
    2. 'if' → logprob: -1.2131006717681885
    3. 'print' → logprob: -2.0881006717681885
    4. '#' → logprob: -3.9631006717681885
    5. 'for' → logprob: -6.338100433349609
    6. 'result' → logprob: -6.588100433349609
    7. 'from' → logprob: -7.463100433349609
    8. 'res' → logprob: -8.21310043334961
    9. 'answer' → logprob: -8.96310043334961
    10. 'import' → logprob: -9.58810043334961

Token 2248: ' crée' (ID: 102256)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.008362919092178345
    2. 'for' → logprob: -5.258362770080566
    3. ' if' → logprob: -6.633362770080566
    4. '+=' → logprob: -6.758362770080566
    5. '#' → logprob: -8.258362770080566
    6. ' +=' → logprob: -8.508362770080566
    7. ' =' → logprob: -9.633362770080566
    8. '=' → logprob: -9.758362770080566
    9. ' for' → logprob: -10.508362770080566
    10. 'n' → logprob: -11.758362770080566

Token 2249: ' une' (ID: 2463)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6395248770713806
    2. 'ans' → logprob: -1.0145249366760254
    3. 'solve' → logprob: -3.5145249366760254
    4. '#' → logprob: -4.139524936676025
    5. ' =' → logprob: -4.514524936676025
    6. '(ans' → logprob: -4.639524936676025
    7. 'result' → logprob: -4.764524936676025
    8. '=' → logprob: -5.014524936676025
    9. 'dp' → logprob: -5.139524936676025
    10. 'len' → logprob: -6.139524936676025

Token 2250: ' liste' (ID: 31719)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9740636348724365
    2. 'for' → logprob: -0.9740636348724365
    3. 'def' → logprob: -2.2240636348724365
    4. 'stack' → logprob: -3.0990636348724365
    5. 'i' → logprob: -4.349063873291016
    6. '#' → logprob: -4.474063873291016
    7. 'tmp' → logprob: -4.599063873291016
    8. 'temp' → logprob: -5.099063873291016
    9. 'H' → logprob: -5.349063873291016
    10. '_' → logprob: -5.474063873291016

Token 2251: ' '' (ID: 461)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -1.2392606735229492
    2. 'filtered' → logprob: -1.9892606735229492
    3. 'new' → logprob: -2.614260673522949
    4. 'temp' → logprob: -2.739260673522949
    5. 'B' → logprob: -3.364260673522949
    6. 's' → logprob: -3.614260673522949
    7. 'Q' → logprob: -3.614260673522949
    8. 'A' → logprob: -3.614260673522949
    9. 'b' → logprob: -3.864260673522949
    10. '=' → logprob: -3.864260673522949

Token 2252: 'check' (ID: 3416)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.582710862159729
    2. 'new' → logprob: -2.3327107429504395
    3. 'seq' → logprob: -2.4577107429504395
    4. 'H' → logprob: -2.5827107429504395
    5. 'L' → logprob: -2.5827107429504395
    6. 'tmp' → logprob: -2.9577107429504395
    7. 'S' → logprob: -2.9577107429504395
    8. 'filtered' → logprob: -2.9577107429504395
    9. 'stack' → logprob: -3.5827107429504395
    10. 's' → logprob: -3.8327107429504395

Token 2253: ''' (ID: 6)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22643914818763733
    2. '=' → logprob: -1.601439118385315
    3. '=[]' → logprob: -7.226438999176025
    4. 's' → logprob: -9.851439476013184
    5. '=[]
' → logprob: -10.101439476013184
    6. '=[' → logprob: -10.226439476013184
    7. '_' → logprob: -10.351439476013184
    8. ',' → logprob: -10.851439476013184
    9. ')' → logprob: -11.226439476013184
    10. ' =[' → logprob: -11.226439476013184

Token 2254: ' contenant' (ID: 131049)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07910073548555374
    2. ' =' → logprob: -2.5791008472442627
    3. '=[]' → logprob: -8.704100608825684
    4. '=[' → logprob: -10.454100608825684
    5. '=[]
' → logprob: -11.454100608825684
    6. '[' → logprob: -13.079100608825684
    7. ',' → logprob: -14.329100608825684
    8. '[]' → logprob: -14.329100608825684
    9. ' =[' → logprob: -14.704100608825684
    10. ' ' → logprob: -14.829100608825684

Token 2255: ' tous' (ID: 10688)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2558887302875519
    2. '[h' → logprob: -2.2558887004852295
    3. '[' → logprob: -3.0058887004852295
    4. '[x' → logprob: -3.7558887004852295
    5. '[]' → logprob: -4.130888938903809
    6. '[v' → logprob: -5.005888938903809
    7. '[e' → logprob: -5.130888938903809
    8. 'H' → logprob: -5.630888938903809
    9. 'h' → logprob: -5.630888938903809
    10. '[val' → logprob: -5.755888938903809

Token 2256: ' les' (ID: 1341)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.9902225732803345
    2. '([' → logprob: -1.4902225732803345
    3. '(i' → logprob: -1.9902225732803345
    4. '(h' → logprob: -2.240222454071045
    5. '(x' → logprob: -2.365222454071045
    6. 'H' → logprob: -3.740222454071045
    7. '(' → logprob: -3.990222454071045
    8. 'x' → logprob: -5.365222454071045
    9. 'i' → logprob: -5.490222454071045
    10. '(v' → logprob: -5.865222454071045

Token 2257: ' indices' (ID: 30378)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6660674214363098
    2. 'h' → logprob: -1.041067361831665
    3. 'i' → logprob: -2.666067361831665
    4. 'H' → logprob: -3.166067361831665
    5. 'e' → logprob: -4.416067600250244
    6. 'élé' → logprob: -5.541067600250244
    7. 'elem' → logprob: -6.041067600250244
    8. 'val' → logprob: -7.041067600250244
    9. 'el' → logprob: -8.166067123413086
    10. 'elements' → logprob: -8.291067123413086

Token 2258: ' i' (ID: 575)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.3941149711608887
    2. '_' → logprob: -1.5191149711608887
    3. 'i' → logprob: -2.0191149711608887
    4. '[' → logprob: -2.3941149711608887
    5. '[i' → logprob: -2.5191149711608887
    6. '(i' → logprob: -2.7691149711608887
    7. '(' → logprob: -3.1441149711608887
    8. 'for' → logprob: -3.3941149711608887
    9. ' =' → logprob: -4.019114971160889
    10. 'of' → logprob: -4.269114971160889

Token 2259: ' tels' (ID: 62007)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7896400094032288
    2. 'for' → logprob: -0.9146400094032288
    3. ' in' → logprob: -2.539639949798584
    4. 'in' → logprob: -3.539639949798584
    5. ' i' → logprob: -4.789639949798584
    6. ' where' → logprob: -5.039639949798584
    7. ',' → logprob: -5.789639949798584
    8. 'i' → logprob: -5.914639949798584
    9. 'where' → logprob: -6.039639949798584
    10. '=' → logprob: -6.164639949798584

Token 2260: ' que' (ID: 661)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.05014153569936752
    2. 'i' → logprob: -3.9251415729522705
    3. 'for' → logprob: -4.425141334533691
    4. 'dans' → logprob: -4.425141334533691
    5. '(i' → logprob: -5.800141334533691
    6. 'range' → logprob: -7.550141334533691
    7. '(H' → logprob: -8.300141334533691
    8. 'où' → logprob: -8.425141334533691
    9. 'lambda' → logprob: -8.550141334533691
    10. 'à' → logprob: -8.675141334533691

Token 2261: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.27349430322647095
    2. '0' → logprob: -2.148494243621826
    3. 'i' → logprob: -2.148494243621826
    4. 'h' → logprob: -5.773494243621826
    5. ' i' → logprob: -7.148494243621826
    6. '(i' → logprob: -7.648494243621826
    7. ' H' → logprob: -7.648494243621826
    8. '1' → logprob: -7.898494243621826
    9. 'abs' → logprob: -8.148494720458984
    10. ' ' → logprob: -8.648494720458984

Token 2262: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.009805670939385891
    2. '[' → logprob: -5.009805679321289
    3. '.index' → logprob: -7.009805679321289
    4. '[len' → logprob: -7.384805679321289
    5. '.count' → logprob: -7.884805679321289
    6. '[-' → logprob: -8.509805679321289
    7. '==' → logprob: -8.759805679321289
    8. 'len' → logprob: -9.009805679321289
    9. ' [' → logprob: -9.259805679321289
    10. '[
' → logprob: -9.509805679321289

Token 2263: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.42096802592277527
    2. '[i' → logprob: -1.4209680557250977
    3. '+' → logprob: -3.2959680557250977
    4. ']==' → logprob: -4.045968055725098
    5. '>' → logprob: -4.420968055725098
    6. '!=' → logprob: -4.920968055725098
    7. ']!=' → logprob: -5.045968055725098
    8. '==' → logprob: -5.420968055725098
    9. ']>' → logprob: -5.420968055725098
    10. ']<' → logprob: -6.045968055725098

Token 2264: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.8673970103263855
    2. '==' → logprob: -1.6173970699310303
    3. '!=' → logprob: -1.8673970699310303
    4. ' ==' → logprob: -2.3673970699310303
    5. ' !=' → logprob: -3.2423970699310303
    6. ' >' → logprob: -3.6173970699310303
    7. '+' → logprob: -3.6173970699310303
    8. '>=' → logprob: -4.117396831512451
    9. '<' → logprob: -5.617396831512451
    10. ' <' → logprob: -5.742396831512451

Token 2265: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008872798644006252
    2. '0' → logprob: -7.500887393951416
    3. ' ' → logprob: -8.125886917114258
    4. 'i' → logprob: -11.125886917114258
    5. 'H' → logprob: -11.250886917114258
    6. '2' → logprob: -12.125886917114258
    7. ''' → logprob: -13.750886917114258
    8. ''H' → logprob: -14.125886917114258
    9. '  ' → logprob: -14.625886917114258
    10. '   ' → logprob: -14.688386917114258

Token 2266: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004294453654438257
    2. '2' → logprob: -6.004294395446777
    3. '0' → logprob: -7.129294395446777
    4. 'i' → logprob: -7.379294395446777
    5. 'H' → logprob: -8.129294395446777
    6. 'h' → logprob: -10.504294395446777
    7. ' ' → logprob: -10.754294395446777
    8. '>' → logprob: -11.504294395446777
    9. ''H' → logprob: -11.879294395446777
    10. 'n' → logprob: -12.129294395446777

Token 2267: ' :
' (ID: 10039)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.10424996167421341
    2. ' =' → logprob: -3.479249954223633
    3. '[i' → logprob: -3.479249954223633
    4. '[' → logprob: -4.229249954223633
    5. 'i' → logprob: -5.354249954223633
    6. 'for' → logprob: -5.604249954223633
    7. ' check' → logprob: -5.729249954223633
    8. '=' → logprob: -5.979249954223633
    9. '=[' → logprob: -6.229249954223633
    10. '
' → logprob: -6.479249954223633

Token 2268: '#' (ID: 2)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.00781659409403801
    2. '[i' → logprob: -5.257816791534424
    3. '[' → logprob: -6.132816791534424
    4. ' check' → logprob: -8.382816314697266
    5. '[
' → logprob: -9.382816314697266
    6. '[j' → logprob: -10.882816314697266
    7. '```' → logprob: -11.007816314697266
    8. '[]
' → logprob: -11.132816314697266
    9. 'i' → logprob: -11.507816314697266
    10. ' [' → logprob: -11.757816314697266

Token 2269: ' Cette' (ID: 27383)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.3753678500652313
    2. '[i' → logprob: -1.3753678798675537
    3. '[' → logprob: -2.8753678798675537
    4. ' check' → logprob: -6.375367641448975
    5. ' [' → logprob: -6.750367641448975
    6. '[j' → logprob: -8.000368118286133
    7. '[
' → logprob: -8.000368118286133
    8. '[s' → logprob: -9.750368118286133
    9. '[x' → logprob: -10.250368118286133
    10. '[h' → logprob: -10.500368118286133

Token 2270: ' liste' (ID: 31719)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.013102110475301743
    2. ' check' → logprob: -4.388102054595947
    3. ' =' → logprob: -8.013102531433105
    4. '
' → logprob: -9.388102531433105
    5. '=' → logprob: -9.513102531433105
    6. '#' → logprob: -10.513102531433105
    7. '[' → logprob: -10.638102531433105
    8. 'list' → logprob: -11.888102531433105
    9. '_check' → logprob: -12.013102531433105
    10. '	check' → logprob: -12.013102531433105

Token 2271: ' rep' (ID: 2449)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0070616696029901505
    2. ' =' → logprob: -5.00706148147583
    3. '+=' → logprob: -8.132061958312988
    4. '.append' → logprob: -10.757061958312988
    5. ' +=' → logprob: -11.632061958312988
    6. '=[' → logprob: -12.007061958312988
    7. '+' → logprob: -12.257061958312988
    8. '=[]' → logprob: -12.382061958312988
    9. '[' → logprob: -13.007061958312988
    10. '.extend' → logprob: -13.632061958312988

Token 2272: 'ère' (ID: 4346)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0008301171474158764
    2. ' =' → logprob: -8.125829696655273
    3. '=[' → logprob: -8.375829696655273
    4. '=[]' → logprob: -8.500829696655273
    5. 'resents' → logprob: -9.625829696655273
    6. '=
' → logprob: -11.500829696655273
    7. ']' → logprob: -12.125829696655273
    8. '=[]
' → logprob: -12.625829696655273
    9. ']=' → logprob: -12.625829696655273
    10. 'r' → logprob: -12.750829696655273

Token 2273: ' tous' (ID: 10688)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.322715699672699
    2. '[' → logprob: -1.3227157592773438
    3. '[j' → logprob: -5.822715759277344
    4. '[
' → logprob: -5.822715759277344
    5. ' [' → logprob: -6.947715759277344
    6. '[x' → logprob: -7.447715759277344
    7. 'i' → logprob: -7.822715759277344
    8. '[idx' → logprob: -8.072715759277344
    9. '[_' → logprob: -8.447715759277344
    10. '[s' → logprob: -9.072715759277344

Token 2274: ' les' (ID: 1341)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07666804641485214
    2. '(i' → logprob: -2.8266680240631104
    3. 'idx' → logprob: -5.3266682624816895
    4. 'j' → logprob: -5.8266682624816895
    5. 'indices' → logprob: -6.2016682624816895
    6. ' i' → logprob: -6.8266682624816895
    7. '(idx' → logprob: -6.9516682624816895
    8. 'index' → logprob: -7.0766682624816895
    9. 'pos' → logprob: -7.8266682624816895
    10. 'indice' → logprob: -8.201667785644531

Token 2275: ' em' (ID: 863)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.013668584637343884
    2. 'idx' → logprob: -5.138668537139893
    3. 'j' → logprob: -5.388668537139893
    4. 'index' → logprob: -6.888668537139893
    5. 'indices' → logprob: -7.513668537139893
    6. 'indice' → logprob: -7.513668537139893
    7. 'k' → logprob: -7.638668537139893
    8. 'x' → logprob: -9.01366901397705
    9. 'pos' → logprob: -9.26366901397705
    10. '[i' → logprob: -9.51366901397705

Token 2276: 'placements' (ID: 72793)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.26350513100624084
    2. '[i' → logprob: -1.8885051012039185
    3. ' i' → logprob: -2.888505220413208
    4. 'idx' → logprob: -5.388504981994629
    5. 'os' → logprob: -5.638504981994629
    6. '[' → logprob: -6.013504981994629
    7. '(i' → logprob: -6.263504981994629
    8. ' idx' → logprob: -6.513504981994629
    9. 'orts' → logprob: -6.638504981994629
    10. 'indices' → logprob: -6.888504981994629

Token 2277: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1909481287002563
    2. 'where' → logprob: -1.6909481287002563
    3. 'for' → logprob: -1.8159481287002563
    4. 'of' → logprob: -2.190948009490967
    5. ' =' → logprob: -2.815948009490967
    6. '_' → logprob: -3.065948009490967
    7. ' where' → logprob: -3.565948009490967
    8. 'i' → logprob: -3.940948009490967
    9. ' of' → logprob: -4.440948009490967
    10. '[i' → logprob: -4.440948009490967

Token 2278: ' ' (ID: 220)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2314910739660263
    2. '1' → logprob: -1.7314910888671875
    3. ' i' → logprob: -4.1064910888671875
    4. 'H' → logprob: -5.1064910888671875
    5. 'idx' → logprob: -6.3564910888671875
    6. ' ' → logprob: -6.9814910888671875
    7. 'x' → logprob: -7.2314910888671875
    8. 'l' → logprob: -7.3564910888671875
    9. ' H' → logprob: -7.3564910888671875
    10. 'indice' → logprob: -7.9814910888671875

Token 2279: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01773744262754917
    2. 'idx' → logprob: -4.39273738861084
    3. 'x' → logprob: -6.01773738861084
    4. '1' → logprob: -6.39273738861084
    5. 'k' → logprob: -7.89273738861084
    6. ' i' → logprob: -8.76773738861084
    7. 'index' → logprob: -9.14273738861084
    8. 'j' → logprob: -9.76773738861084
    9. ' idx' → logprob: -9.76773738861084
    10. 'H' → logprob: -9.89273738861084

Token 2280: ' dans' (ID: 2671)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9829977750778198
    2. ' =' → logprob: -1.1079977750778198
    3. 'for' → logprob: -2.3579978942871094
    4. '(' → logprob: -2.4829978942871094
    5. ',' → logprob: -2.9829978942871094
    6. ' in' → logprob: -3.7329978942871094
    7. 'in' → logprob: -4.482997894287109
    8. 'if' → logprob: -5.232997894287109
    9. ')' → logprob: -5.482997894287109
    10. ' for' → logprob: -5.482997894287109

Token 2281: ' la' (ID: 557)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.014275161549448967
    2. 'range' → logprob: -5.014275074005127
    3. '[' → logprob: -5.264275074005127
    4. '[i' → logprob: -6.139275074005127
    5. ' range' → logprob: -9.514275550842285
    6. ' H' → logprob: -10.514275550842285
    7. '
' → logprob: -10.639275550842285
    8. '[n' → logprob: -11.139275550842285
    9. '[
' → logprob: -11.264275550842285
    10. 'i' → logprob: -11.264275550842285

Token 2282: ' sé' (ID: 7462)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.006320747546851635
    2. '[' → logprob: -6.381320953369141
    3. ' H' → logprob: -6.381320953369141
    4. 'range' → logprob: -6.506320953369141
    5. ' range' → logprob: -7.256320953369141
    6. 'check' → logprob: -8.63132095336914
    7. ' [' → logprob: -9.00632095336914
    8. 'h' → logprob: -9.25632095336914
    9. '[
' → logprob: -9.50632095336914
    10. '[i' → logprob: -9.88132095336914

Token 2283: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.21765629947185516
    2. 'H' → logprob: -1.7176562547683716
    3. 'quences' → logprob: -4.967656135559082
    4. 'q' → logprob: -5.842656135559082
    5. ' H' → logprob: -6.467656135559082
    6. 'range' → logprob: -6.967656135559082
    7. 'qu' → logprob: -7.217656135559082
    8. '[' → logprob: -7.592656135559082
    9. 'QUENCE' → logprob: -8.092656135559082
    10. '#' → logprob: -8.467656135559082

Token 2284: ' H' (ID: 487)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8450967669487
    2. '([' → logprob: -1.7200968265533447
    3. ' =' → logprob: -2.5950968265533447
    4. '=' → logprob: -2.5950968265533447
    5. 'if' → logprob: -2.9700968265533447
    6. '(check' → logprob: -3.4700968265533447
    7. '(H' → logprob: -3.4700968265533447
    8. ',' → logprob: -3.7200968265533447
    9. '[' → logprob: -3.9700968265533447
    10. ']' → logprob: -4.345096588134766

Token 2285: '.
' (ID: 558)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.4818410575389862
    2. '(check' → logprob: -2.3568410873413086
    3. ' =' → logprob: -2.6068410873413086
    4. 'if' → logprob: -2.8568410873413086
    5. '([' → logprob: -3.2318410873413086
    6. '[i' → logprob: -3.3568410873413086
    7. '=' → logprob: -3.7318410873413086
    8. '[' → logprob: -4.356841087341309
    9. '=[' → logprob: -4.981841087341309
    10. '(' → logprob: -4.981841087341309

Token 2286: 'check' (ID: 3416)
  Prédit: 'check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.001159623614512384
    2. ' check' → logprob: -7.75115966796875
    3. '[' → logprob: -8.12615966796875
    4. '[i' → logprob: -8.37615966796875
    5. '[
' → logprob: -9.37615966796875
    6. ' =' → logprob: -9.87615966796875
    7. '=' → logprob: -11.00115966796875
    8. '[]
' → logprob: -11.12615966796875
    9. 'i' → logprob: -11.25115966796875
    10. '_check' → logprob: -12.25115966796875

Token 2287: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16023477911949158
    2. ' =' → logprob: -1.910234808921814
    3. '=[]' → logprob: -12.410234451293945
    4. ' =[' → logprob: -12.410234451293945
    5. '=[' → logprob: -13.035234451293945
    6. '＝' → logprob: -15.660234451293945
    7. ',' → logprob: -17.535234451293945
    8. '=

' → logprob: -17.535234451293945
    9. '=}' → logprob: -17.785234451293945
    10. '[' → logprob: -17.785234451293945

Token 2288: ' [' (ID: 723)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.534558552724775e-05
    2. '[' → logprob: -10.750025749206543
    3. '[e' → logprob: -13.625025749206543
    4. '[j' → logprob: -13.875025749206543
    5. '[x' → logprob: -14.250025749206543
    6. ' [' → logprob: -14.500025749206543
    7. '[index' → logprob: -15.625025749206543
    8. '[k' → logprob: -15.750025749206543
    9. '[idx' → logprob: -16.250024795532227
    10. '[a' → logprob: -16.375024795532227

Token 2289: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.453737710718997e-05
    2. 'idx' → logprob: -10.750044822692871
    3. ' i' → logprob: -10.750044822692871
    4. 'index' → logprob: -14.125044822692871
    5. 'x' → logprob: -15.250044822692871
    6. '
' → logprob: -16.000043869018555
    7. 'j' → logprob: -16.000043869018555
    8. '	i' → logprob: -16.250043869018555
    9. '(i' → logprob: -16.250043869018555
    10. '   ' → logprob: -16.375043869018555

Token 2290: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16022950410842896
    2. ' for' → logprob: -1.9102294445037842
    3. ' ' → logprob: -12.660229682922363
    4. '	for' → logprob: -13.410229682922363
    5. '   ' → logprob: -15.535229682922363
    6. ' ' → logprob: -15.785229682922363
    7. '
' → logprob: -16.535228729248047
    8. 'in' → logprob: -17.160228729248047
    9. ' in' → logprob: -17.285228729248047
    10. '+' → logprob: -17.660228729248047

Token 2291: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008715384639799595
    2. ' i' → logprob: -4.7587151527404785
    3. 'x' → logprob: -9.383715629577637
    4. 'range' → logprob: -11.508715629577637
    5. 'idx' → logprob: -12.633715629577637
    6. ' range' → logprob: -13.758715629577637
    7. ' x' → logprob: -14.383715629577637
    8. 'H' → logprob: -14.633715629577637
    9. ' idx' → logprob: -15.008715629577637
    10. 'index' → logprob: -15.258715629577637

Token 2292: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22942614555358887
    2. 'in' → logprob: -1.6044261455535889
    3. ' in' → logprob: -5.854426383972168
    4. 'i' → logprob: -6.979426383972168
    5. ',i' → logprob: -8.854426383972168
    6. 'range' → logprob: -10.854426383972168
    7. ' ,' → logprob: -10.979426383972168
    8. ',in' → logprob: -12.479426383972168
    9. 'enumer' → logprob: -12.479426383972168
    10. ',H' → logprob: -12.854426383972168

Token 2293: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.676292231422849e-05
    2. ' range' → logprob: -11.000017166137695
    3. 'i' → logprob: -18.875017166137695
    4. 'H' → logprob: -19.750017166137695
    5. '(range' → logprob: -20.375017166137695
    6. 'enumer' → logprob: -20.750017166137695
    7. '
' → logprob: -21.250017166137695
    8. 'r' → logprob: -21.750017166137695
    9. '	range' → logprob: -21.875017166137695
    10. 'rang' → logprob: -22.625017166137695

Token 2294: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.31968963146209717
    2. '(len' → logprob: -1.3196896314620972
    3. 'len' → logprob: -5.069689750671387
    4. 'n' → logprob: -9.319689750671387
    5. '(' → logprob: -10.319689750671387
    6. ' len' → logprob: -14.944689750671387
    7. '(
' → logprob: -18.06968879699707
    8. '	len' → logprob: -18.44468879699707
    9. ' (' → logprob: -18.56968879699707
    10. ',len' → logprob: -18.81968879699707

Token 2295: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3581713140010834
    2. ' if' → logprob: -1.4831713438034058
    3. 'if' → logprob: -2.608171224594116
    4. ' ' → logprob: -8.608171463012695
    5. '   ' → logprob: -8.983171463012695
    6. ' )' → logprob: -9.358171463012695
    7. '	if' → logprob: -10.733171463012695
    8. '()' → logprob: -11.483171463012695
    9. '  ' → logprob: -12.108171463012695
    10. 'H' → logprob: -12.858171463012695

Token 2296: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1002412959933281
    2. 'if' → logprob: -2.350241184234619
    3. '	if' → logprob: -10.600241661071777
    4. ' ' → logprob: -11.850241661071777
    5. '   ' → logprob: -13.350241661071777
    6. ' ' → logprob: -15.225241661071777
    7. '       ' → logprob: -16.22524070739746
    8. '		' → logprob: -16.22524070739746
    9. '    ' → logprob: -16.47524070739746
    10. '	' → logprob: -16.60024070739746

Token 2297: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -9.615255839889869e-05
    2. ' H' → logprob: -9.250096321105957
    3. '	H' → logprob: -18.25009536743164
    4. '(H' → logprob: -18.25009536743164
    5. ' ' → logprob: -19.50009536743164
    6. ']' → logprob: -19.75009536743164
    7. '_H' → logprob: -19.87509536743164
    8. 'h' → logprob: -20.00009536743164
    9. '
' → logprob: -20.37509536743164
    10. ' ' → logprob: -20.87509536743164

Token 2298: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00018232580623589456
    2. '[' → logprob: -9.250182151794434
    3. 'H' → logprob: -9.500182151794434
    4. '[I' → logprob: -12.375182151794434
    5. '==' → logprob: -12.625182151794434
    6. ' [' → logprob: -13.750182151794434
    7. '[
' → logprob: -14.375182151794434
    8. ']' → logprob: -15.250182151794434
    9. '```' → logprob: -15.250182151794434
    10. 'i' → logprob: -15.375182151794434

Token 2299: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13462325930595398
    2. ']==' → logprob: -2.1346232891082764
    3. '==' → logprob: -4.884623050689697
    4. ' ==' → logprob: -9.509623527526855
    5. '[i' → logprob: -11.884623527526855
    6. '[' → logprob: -12.134623527526855
    7. ' ]' → logprob: -12.384623527526855
    8. '[]' → logprob: -13.134623527526855
    9. ')==' → logprob: -13.134623527526855
    10. ')' → logprob: -13.384623527526855

Token 2300: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.007586509920656681
    2. ' ==' → logprob: -5.132586479187012
    3. ']==' → logprob: -6.507586479187012
    4. '==
' → logprob: -9.632586479187012
    5. '=' → logprob: -9.757586479187012
    6. ']' → logprob: -10.382586479187012
    7. '()==' → logprob: -12.757586479187012
    8. '[' → logprob: -12.882586479187012
    9. ')==' → logprob: -13.007586479187012
    10. '===' → logprob: -14.757586479187012

Token 2301: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '0' → logprob: -18.50001335144043
    4. '۱' → logprob: -19.87501335144043
    5. '１' → logprob: -21.00001335144043
    6. '१' → logprob: -21.43751335144043
    7. '(' → logprob: -21.56251335144043
    8. '   ' → logprob: -21.62501335144043
    9. '' → logprob: -22.00001335144043
    10. '```' → logprob: -22.37501335144043

Token 2302: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '0' → logprob: -19.5
    4. '۱' → logprob: -20.875
    5. '１' → logprob: -21.375
    6. '```' → logprob: -21.375
    7. '' → logprob: -21.875
    8. '१' → logprob: -22.0
    9. '১' → logprob: -22.375
    10. '
' → logprob: -22.5625

Token 2303: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.759734732331708e-05
    2. ' ]' → logprob: -11.000017166137695
    3. ')]' → logprob: -15.000017166137695
    4. '()]' → logprob: -15.875017166137695
    5. ']
' → logprob: -16.125017166137695
    6. 'if' → logprob: -16.375017166137695
    7. ' if' → logprob: -16.875017166137695
    8. ']

' → logprob: -18.000017166137695
    9. ']]' → logprob: -18.750017166137695
    10. '`]' → logprob: -18.875017166137695

Token 2304: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00865853950381279
    2. '#' → logprob: -5.508658409118652
    3. 'for' → logprob: -5.633658409118652
    4. '```' → logprob: -7.758658409118652
    5. '
' → logprob: -8.133658409118652
    6. 'i' → logprob: -8.633658409118652
    7. ' if' → logprob: -9.633658409118652
    8. '``' → logprob: -12.008658409118652
    9. 'check' → logprob: -12.508658409118652
    10. 'while' → logprob: -12.758658409118652

Token 2305: ' On' (ID: 2160)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.004118531011044979
    2. '#' → logprob: -5.7541184425354
    3. 'for' → logprob: -7.0041184425354
    4. 'i' → logprob: -11.629118919372559
    5. 'def' → logprob: -11.754118919372559
    6. 'while' → logprob: -12.254118919372559
    7. '```' → logprob: -12.879118919372559
    8. 'from' → logprob: -13.504118919372559
    9. 'prev' → logprob: -13.754118919372559
    10. 'last' → logprob: -14.129118919372559

Token 2306: ' ét' (ID: 4976)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0026732799597084522
    2. 'for' → logprob: -6.127673149108887
    3. ' if' → logprob: -8.502673149108887
    4. 'continue' → logprob: -8.877673149108887
    5. '#' → logprob: -9.252673149108887
    6. 'len' → logprob: -10.377673149108887
    7. '=' → logprob: -12.127673149108887
    8. ' for' → logprob: -12.502673149108887
    9. ' =' → logprob: -13.377673149108887
    10. 'contin' → logprob: -13.377673149108887

Token 2307: 'end' (ID: 419)
  Prédit: 'endre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'endre' → logprob: -0.48019716143608093
    2. 'if' → logprob: -1.8551971912384033
    3. 'ablish' → logprob: -3.3551971912384033
    4. 't' → logprob: -3.4801971912384033
    5. 'ends' → logprob: -4.230196952819824
    6. 'x' → logprob: -4.230196952819824
    7. 'nd' → logprob: -4.480196952819824
    8. 'abs' → logprob: -4.480196952819824
    9. 'xt' → logprob: -4.605196952819824
    10. 'ime' → logprob: -4.730196952819824

Token 2308: ' cette' (ID: 7696)
  Prédit: ' check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.35119733214378357
    2. 'check' → logprob: -1.226197361946106
    3. 'len' → logprob: -7.351197242736816
    4. '(check' → logprob: -7.726197242736816
    5. ' la' → logprob: -8.351197242736816
    6. ' len' → logprob: -8.476197242736816
    7. 'range' → logprob: -8.726197242736816
    8. '_check' → logprob: -9.101197242736816
    9. ' H' → logprob: -9.226197242736816
    10. '_' → logprob: -9.351197242736816

Token 2309: ' liste' (ID: 31719)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.05664988234639168
    2. ' check' → logprob: -3.431649923324585
    3. 'for' → logprob: -4.806649684906006
    4. 'len' → logprob: -4.931649684906006
    5. 'if' → logprob: -5.181649684906006
    6. 'range' → logprob: -7.931649684906006
    7. '_check' → logprob: -8.056650161743164
    8. '#' → logprob: -8.556650161743164
    9. ' for' → logprob: -9.306650161743164
    10. ' len' → logprob: -9.556650161743164

Token 2310: ' en' (ID: 469)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.8273356556892395
    2. '.extend' → logprob: -1.3273355960845947
    3. '+=' → logprob: -1.9523355960845947
    4. ' +=' → logprob: -1.9523355960845947
    5. '+' → logprob: -5.577335834503174
    6. '.' → logprob: -5.702335834503174
    7. 'check' → logprob: -5.827335834503174
    8. '=' → logprob: -6.077335834503174
    9. ' =' → logprob: -8.077335357666016
    10. '.check' → logprob: -8.452335357666016

Token 2311: ' raj' (ID: 46358)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5532481670379639
    2. 'aj' → logprob: -1.3032481670379639
    3. 'check' → logprob: -2.553248167037964
    4. '[' → logprob: -3.303248167037964
    5. ' y' → logprob: -4.178248405456543
    6. ' ajout' → logprob: -4.678248405456543
    7. 'append' → logprob: -5.178248405456543
    8. '[y' → logprob: -5.803248405456543
    9. 'adding' → logprob: -6.928248405456543
    10. 's' → logprob: -7.178248405456543

Token 2312: 'out' (ID: 468)
  Prédit: 'out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.06913978606462479
    2. 'geant' → logprob: -3.9441397190093994
    3. 'g' → logprob: -4.1941399574279785
    4. 'outer' → logprob: -4.4441399574279785
    5. 'outez' → logprob: -4.6941399574279785
    6. 'ge' → logprob: -6.0691399574279785
    7. 'range' → logprob: -6.9441399574279785
    8. '[' → logprob: -7.0691399574279785
    9. 'ige' → logprob: -7.5691399574279785
    10. 'gage' → logprob: -7.6941399574279785

Token 2313: 'ant' (ID: 493)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.005018259398639202
    2. 'd' → logprob: -5.88001823425293
    3. 'ant' → logprob: -6.38001823425293
    4. 'outer' → logprob: -9.63001823425293
    5. 'ot' → logprob: -9.88001823425293
    6. 'gant' → logprob: -9.88001823425293
    7. 'ent' → logprob: -10.00501823425293
    8. 'ut' → logprob: -10.63001823425293
    9. 't' → logprob: -10.63001823425293
    10. '[' → logprob: -10.63001823425293

Token 2314: ' artific' (ID: 105453)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.22929753363132477
    2. '[' → logprob: -2.229297637939453
    3. '[n' → logprob: -2.729297637939453
    4. '0' → logprob: -3.979297637939453
    5. 'check' → logprob: -4.854297637939453
    6. 'n' → logprob: -5.729297637939453
    7. '-' → logprob: -6.229297637939453
    8. '[]' → logprob: -9.354297637939453
    9. '[len' → logprob: -10.104297637939453
    10. ' [-' → logprob: -10.229297637939453

Token 2315: 'iellement' (ID: 70958)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9848207831382751
    2. 'ist' → logprob: -2.10982084274292
    3. 'ction' → logprob: -2.23482084274292
    4. 'oints' → logprob: -2.60982084274292
    5. '[i' → logprob: -3.10982084274292
    6. 'd' → logprob: -3.85982084274292
    7. 'i' → logprob: -3.98482084274292
    8. '+' → logprob: -3.98482084274292
    9. '.append' → logprob: -4.10982084274292
    10. 'out' → logprob: -4.23482084274292

Token 2316: ' aux' (ID: 5850)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.06900583207607269
    2. '[' → logprob: -2.8190057277679443
    3. '[n' → logprob: -5.694005966186523
    4. 'check' → logprob: -5.694005966186523
    5. '([-' → logprob: -9.194005966186523
    6. 'n' → logprob: -9.694005966186523
    7. ' [-' → logprob: -10.194005966186523
    8. '0' → logprob: -10.944005966186523
    9. '[len' → logprob: -10.944005966186523
    10. ' check' → logprob: -12.069005966186523

Token 2317: ' extr' (ID: 15674)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.0024209641851484776
    2. ' check' → logprob: -6.127420902252197
    3. 'len' → logprob: -9.127421379089355
    4. '[' → logprob: -9.627421379089355
    5. 'c' → logprob: -11.002421379089355
    6. '_check' → logprob: -11.502421379089355
    7. '[-' → logprob: -12.002421379089355
    8. ' ' → logprob: -12.252421379089355
    9. '	check' → logprob: -12.502421379089355
    10. 'indices' → logprob: -12.877421379089355

Token 2318: 'é' (ID: 377)
  Prédit: 'êmes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êmes' → logprob: -1.115982174873352
    2. 'r' → logprob: -1.615982174873352
    3. 'rem' → logprob: -1.615982174873352
    4. 'é' → logprob: -2.1159820556640625
    5. 'ré' → logprob: -2.2409820556640625
    6. 're' → logprob: -3.8659820556640625
    7. 'èmes' → logprob: -4.9909820556640625
    8. 'emes' → logprob: -5.6159820556640625
    9. 'ême' → logprob: -6.1159820556640625
    10. '[' → logprob: -6.1159820556640625

Token 2319: 'mit' (ID: 2765)
  Prédit: 'mites'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mites' → logprob: -1.0095661878585815
    2. 'mit' → logprob: -1.3845661878585815
    3. 'êmes' → logprob: -2.009566307067871
    4. 'mes' → logprob: -2.009566307067871
    5. 'mits' → logprob: -3.009566307067871
    6. 'rem' → logprob: -4.134566307067871
    7. 'emes' → logprob: -4.384566307067871
    8. 'mé' → logprob: -5.009566307067871
    9. 'èmes' → logprob: -5.134566307067871
    10. 'm' → logprob: -5.259566307067871

Token 2320: 'és' (ID: 1756)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.09329043328762054
    2. 'e' → logprob: -3.218290328979492
    3. 'és' → logprob: -3.468290328979492
    4. 'y' → logprob: -4.218290328979492
    5. 'es' → logprob: -5.843290328979492
    6. 'i' → logprob: -8.843290328979492
    7. 'ié' → logprob: -9.968290328979492
    8. '#' → logprob: -11.218290328979492
    9. '[' → logprob: -11.843290328979492
    10. 's' → logprob: -12.343290328979492

Token 2321: ' -' (ID: 533)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.007012783084064722
    2. '[' → logprob: -5.382012844085693
    3. '([-' → logprob: -6.257012844085693
    4. ' [-' → logprob: -8.507012367248535
    5. '-' → logprob: -9.007012367248535
    6. '0' → logprob: -9.257012367248535
    7. '(-' → logprob: -10.257012367248535
    8. '([' → logprob: -12.132012367248535
    9. '(' → logprob: -13.007012367248535
    10. '[
' → logprob: -13.257012367248535

Token 2322: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.017453633248806
    2. '[-' → logprob: -4.642453670501709
    3. '-n' → logprob: -5.517453670501709
    4. ' -' → logprob: -6.017453670501709
    5. '0' → logprob: -7.892453670501709
    6. 'n' → logprob: -8.01745319366455
    7. '1' → logprob: -8.26745319366455
    8. '(-' → logprob: -8.76745319366455
    9. '[' → logprob: -11.14245319366455
    10. ' [-' → logprob: -11.26745319366455

Token 2323: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20704099535942078
    2. 'and' → logprob: -2.207041025161743
    3. ' and' → logprob: -2.957041025161743
    4. '-' → logprob: -4.707040786743164
    5. ',-' → logprob: -4.707040786743164
    6. ' -' → logprob: -6.457040786743164
    7. ' ,' → logprob: -6.707040786743164
    8. '0' → logprob: -7.082040786743164
    9. ',n' → logprob: -7.332040786743164
    10. '<|end|>' → logprob: -7.332040786743164

Token 2324: 'avant' (ID: 63043)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.37748536467552185
    2. '-n' → logprob: -1.2524853944778442
    3. '0' → logprob: -4.627485275268555
    4. 'n' → logprob: -5.127485275268555
    5. ' -' → logprob: -5.627485275268555
    6. ' and' → logprob: -5.752485275268555
    7. ')' → logprob: -6.002485275268555
    8. 'and' → logprob: -6.377485275268555
    9. '-and' → logprob: -7.502485275268555
    10. '-s' → logprob: -8.252485275268555

Token 2325: ' le' (ID: 505)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6024743914604187
    2. 'check' → logprob: -1.4774744510650635
    3. '0' → logprob: -1.6024744510650635
    4. ')' → logprob: -5.477474212646484
    5. '-' → logprob: -5.727474212646484
    6. ' n' → logprob: -5.852474212646484
    7. '1' → logprob: -5.977474212646484
    8. 'and' → logprob: -5.977474212646484
    9. ' check' → logprob: -6.602474212646484
    10. 'et' → logprob: -6.602474212646484

Token 2326: ' début' (ID: 29589)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05944836884737015
    2. '0' → logprob: -2.934448480606079
    3. ' n' → logprob: -5.6844482421875
    4. 'check' → logprob: -7.3094482421875
    5. '1' → logprob: -8.6844482421875
    6. ')n' → logprob: -9.8094482421875
    7. 'len' → logprob: -10.0594482421875
    8. ']' → logprob: -10.1844482421875
    9. ' ' → logprob: -10.6844482421875
    10. ' check' → logprob: -10.9344482421875

Token 2327: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.062293678522109985
    2. ',' → logprob: -2.937293767929077
    3. ']' → logprob: -5.937293529510498
    4. ' and' → logprob: -6.437293529510498
    5. 'and' → logprob: -7.062293529510498
    6. 'et' → logprob: -7.437293529510498
    7. ' et' → logprob: -7.562293529510498
    8. ',-' → logprob: -8.187294006347656
    9. ')-' → logprob: -8.312294006347656
    10. ')+' → logprob: -8.437294006347656

Token 2328: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6037008166313171
    2. 'and' → logprob: -1.103700876235962
    3. ' and' → logprob: -2.728700876235962
    4. '-' → logprob: -3.353700876235962
    5. 'et' → logprob: -4.728700637817383
    6. ' et' → logprob: -5.228700637817383
    7. ')' → logprob: -5.853700637817383
    8. ']' → logprob: -6.353700637817383
    9. ',-' → logprob: -7.103700637817383
    10. ' -' → logprob: -7.603700637817383

Token 2329: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00408932426944375
    2. ' n' → logprob: -5.50408935546875
    3. '[n' → logprob: -11.62908935546875
    4. '	n' → logprob: -14.37908935546875
    5. '(n' → logprob: -14.37908935546875
    6. 'len' → logprob: -14.50408935546875
    7. '
' → logprob: -16.00408935546875
    8. '[' → logprob: -17.25408935546875
    9. '[]' → logprob: -17.25408935546875
    10. ',n' → logprob: -17.62908935546875

Token 2330: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2331: 'ap' (ID: 403)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012909960001707077
    2. ']' → logprob: -5.012909889221191
    3. '])' → logprob: -5.637909889221191
    4. ')n' → logprob: -7.137909889221191
    5. 'n' → logprob: -7.512909889221191
    6. ')]' → logprob: -7.762909889221191
    7. ')])' → logprob: -8.637909889221191
    8. ',' → logprob: -9.387909889221191
    9. '<|end|>' → logprob: -9.512909889221191
    10. '+' → logprob: -9.512909889221191

Token 2332: 'rès' (ID: 48817)
  Prédit: 'rès'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rès' → logprob: -0.008762998506426811
    2. 'pend' → logprob: -5.133762836456299
    3. 'lus' → logprob: -6.133762836456299
    4. 'res' → logprob: -8.883763313293457
    5. '+' → logprob: -9.383763313293457
    6. 'près' → logprob: -9.508763313293457
    7. 'pos' → logprob: -10.008763313293457
    8. 'p' → logprob: -10.133763313293457
    9. ')' → logprob: -10.258763313293457
    10. 'os' → logprob: -10.383763313293457

Token 2333: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.08234646916389465
    2. 'n' → logprob: -3.0823464393615723
    3. 'len' → logprob: -4.082346439361572
    4. '-' → logprob: -4.332346439361572
    5. ')' → logprob: -6.457346439361572
    6. ']' → logprob: -7.332346439361572
    7. 'l' → logprob: -8.33234691619873
    8. 'le' → logprob: -8.95734691619873
    9. '1' → logprob: -9.08234691619873
    10. ' la' → logprob: -9.08234691619873

Token 2334: ' fin' (ID: 2131)
  Prédit: 'dern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dern' → logprob: -0.6132304072380066
    2. '-' → logprob: -0.8632304072380066
    3. 'n' → logprob: -3.7382304668426514
    4. 'der' → logprob: -5.363230228424072
    5. 'last' → logprob: -5.988230228424072
    6. 'len' → logprob: -6.238230228424072
    7. ')' → logprob: -6.363230228424072
    8. 'Dern' → logprob: -7.238230228424072
    9. ']' → logprob: -8.23823070526123
    10. 'range' → logprob: -8.73823070526123

Token 2335: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5303007364273071
    2. ']' → logprob: -1.6553007364273071
    3. '-' → logprob: -2.0303006172180176
    4. ')' → logprob: -2.5303006172180176
    5. ')
' → logprob: -5.780300617218018
    6. ' -' → logprob: -6.655300617218018
    7. '(check' → logprob: -7.030300617218018
    8. ',-' → logprob: -7.155300617218018
    9. ']-' → logprob: -7.405300617218018
    10. '])' → logprob: -7.530300617218018

Token 2336: ' :
' (ID: 10039)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.15947067737579346
    2. ']' → logprob: -2.284470558166504
    3. ',' → logprob: -3.909470558166504
    4. '
' → logprob: -4.784470558166504
    5. ']
' → logprob: -5.034470558166504
    6. ']+' → logprob: -5.534470558166504
    7. ' +' → logprob: -6.784470558166504
    8. ' check' → logprob: -6.784470558166504
    9. '+' → logprob: -6.909470558166504
    10. '(check' → logprob: -7.034470558166504

Token 2337: '#' (ID: 2)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.00018077615823131055
    2. ' check' → logprob: -9.125181198120117
    3. '[-' → logprob: -9.625181198120117
    4. ',' → logprob: -13.500181198120117
    5. '[' → logprob: -13.500181198120117
    6. '.check' → logprob: -14.250181198120117
    7. ']' → logprob: -14.375181198120117
    8. '+' → logprob: -14.875181198120117
    9. '(check' → logprob: -15.125181198120117
    10. '#' → logprob: -15.500181198120117

Token 2338: ' Cela' (ID: 44403)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.0005583931924775243
    2. ' check' → logprob: -7.500558376312256
    3. '[-' → logprob: -12.625558853149414
    4. '[' → logprob: -13.625558853149414
    5. '	check' → logprob: -15.625558853149414
    6. '#' → logprob: -16.000558853149414
    7. '(check' → logprob: -16.250558853149414
    8. '.check' → logprob: -16.250558853149414
    9. '_check' → logprob: -16.500558853149414
    10. '
' → logprob: -17.000558853149414

Token 2339: ' serv' (ID: 2096)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9276214241981506
    2. ' =' → logprob: -1.0526213645935059
    3. 'check' → logprob: -2.177621364593506
    4. '.insert' → logprob: -2.927621364593506
    5. '.append' → logprob: -3.177621364593506
    6. '.extend' → logprob: -4.302621364593506
    7. ' +=' → logprob: -4.427621364593506
    8. '+=' → logprob: -5.177621364593506
    9. '#' → logprob: -5.302621364593506
    10. 'insert' → logprob: -5.802621364593506

Token 2340: 'ira' (ID: 2633)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.5462015271186829
    2. 'it' → logprob: -1.546201467514038
    3. '=' → logprob: -2.671201467514038
    4. 'ant' → logprob: -2.796201467514038
    5. 'ait' → logprob: -3.421201467514038
    6. '.append' → logprob: -4.546201705932617
    7. ' =' → logprob: -5.046201705932617
    8. 'es' → logprob: -5.171201705932617
    9. 'i' → logprob: -5.171201705932617
    10. 'e' → logprob: -5.546201705932617

Token 2341: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.19366128742694855
    2. 'to' → logprob: -2.9436612129211426
    3. ' to' → logprob: -3.0686612129211426
    4. 'à' → logprob: -3.0686612129211426
    5. 'for' → logprob: -4.443661212921143
    6. ' as' → logprob: -5.193661212921143
    7. 'as' → logprob: -5.443661212921143
    8. ' ' → logprob: -5.943661212921143
    9. '#' → logprob: -6.693661212921143
    10. ' for' → logprob: -6.943661212921143

Token 2342: ' gérer' (ID: 86786)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.5454232692718506
    2. 'mar' → logprob: -2.2954232692718506
    3. 'sé' → logprob: -2.2954232692718506
    4. 'segment' → logprob: -2.7954232692718506
    5. 'fac' → logprob: -3.1704232692718506
    6. 'div' → logprob: -3.5454232692718506
    7. 'partition' → logprob: -3.7954232692718506
    8. 'enc' → logprob: -4.04542350769043
    9. 'for' → logprob: -5.04542350769043
    10. 'seg' → logprob: -5.17042350769043

Token 2343: ' les' (ID: 1341)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.4713890850543976
    2. '-' → logprob: -1.0963890552520752
    3. 'check' → logprob: -3.221389055252075
    4. ' check' → logprob: -7.471389293670654
    5. '[' → logprob: -7.971389293670654
    6. ' [-' → logprob: -8.346388816833496
    7. ' -' → logprob: -8.346388816833496
    8. '-check' → logprob: -8.346388816833496
    9. '0' → logprob: -9.721388816833496
    10. '(-' → logprob: -10.346388816833496

Token 2344: ' interv' (ID: 37413)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3560433089733124
    2. 'positions' → logprob: -2.4810433387756348
    3. 'check' → logprob: -2.7310433387756348
    4. ' -' → logprob: -3.6060433387756348
    5. 'indices' → logprob: -3.9810433387756348
    6. ' check' → logprob: -4.106043338775635
    7. ' segments' → logprob: -4.106043338775635
    8. 'segments' → logprob: -4.106043338775635
    9. '0' → logprob: -4.356043338775635
    10. ' positions' → logprob: -4.606043338775635

Token 2345: 'alles' (ID: 28825)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.5592199563980103
    2. 'alles' → logprob: -1.0592199563980103
    3. 'er' → logprob: -3.3092198371887207
    4. 'all' → logprob: -3.9342198371887207
    5. 'ects' → logprob: -5.809219837188721
    6. 'als' → logprob: -6.309219837188721
    7. 'ér' → logprob: -6.434219837188721
    8. 'erc' → logprob: -6.559219837188721
    9. 'erm' → logprob: -6.684219837188721
    10. 'ec' → logprob: -6.809219837188721

Token 2346: ' de' (ID: 334)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.24462977051734924
    2. ',' → logprob: -2.4946298599243164
    3. '-' → logprob: -2.4946298599243164
    4. 'check' → logprob: -3.8696298599243164
    5. ' entre' → logprob: -4.744629859924316
    6. '[' → logprob: -5.494629859924316
    7. 'de' → logprob: -5.744629859924316
    8. ' -' → logprob: -6.119629859924316
    9. 'sur' → logprob: -6.119629859924316
    10. ' de' → logprob: -6.494629859924316

Token 2347: ' décou' (ID: 68302)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.5273348093032837
    2. '1' → logprob: -1.5273348093032837
    3. 'indices' → logprob: -2.402334690093994
    4. 'sé' → logprob: -3.402334690093994
    5. 'positions' → logprob: -3.902334690093994
    6. ' check' → logprob: -4.652334690093994
    7. 'split' → logprob: -4.902334690093994
    8. 'segments' → logprob: -5.277334690093994
    9. ' séparation' → logprob: -5.402334690093994
    10. 'cont' → logprob: -5.527334690093994

Token 2348: 'pe' (ID: 424)
  Prédit: 'page'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'page' → logprob: -0.006070760078728199
    2. 'pe' → logprob: -5.256070613861084
    3. 'p' → logprob: -7.256070613861084
    4. 'Page' → logprob: -9.506071090698242
    5. 'plement' → logprob: -11.256071090698242
    6. 'pl' → logprob: -11.256071090698242
    7. 'pé' → logprob: -12.631071090698242
    8. 'per' → logprob: -12.756071090698242
    9. 'pte' → logprob: -12.756071090698242
    10. 'pp' → logprob: -13.006071090698242

Token 2349: ' de' (ID: 334)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.786331057548523
    2. ',' → logprob: -0.911331057548523
    3. 'check' → logprob: -2.9113311767578125
    4. ' +' → logprob: -3.2863311767578125
    5. '+' → logprob: -3.5363311767578125
    6. ']+' → logprob: -4.6613311767578125
    7. ')' → logprob: -5.5363311767578125
    8. '[-' → logprob: -5.9113311767578125
    9. ']
' → logprob: -7.1613311767578125
    10. '.' → logprob: -7.6613311767578125

Token 2350: ' H' (ID: 487)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.04624802619218826
    2. ' check' → logprob: -3.421247959136963
    3. 'la' → logprob: -4.671247959136963
    4. 'H' → logprob: -6.671247959136963
    5. ' la' → logprob: -7.796247959136963
    6. 'l' → logprob: -7.921247959136963
    7. ' H' → logprob: -8.046248435974121
    8. 'indices' → logprob: -9.046248435974121
    9. 'segments' → logprob: -9.671248435974121
    10. 'positions' → logprob: -9.796248435974121

Token 2351: ' sans' (ID: 9828)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.12981390953063965
    2. ']' → logprob: -2.7548139095306396
    3. ',' → logprob: -3.7548139095306396
    4. ']+' → logprob: -4.629814147949219
    5. ']
' → logprob: -4.629814147949219
    6. '+' → logprob: -5.129814147949219
    7. '[-' → logprob: -6.504814147949219
    8. '
' → logprob: -6.629814147949219
    9. ' +' → logprob: -7.004814147949219
    10. 'insert' → logprob: -7.004814147949219

Token 2352: ' cas' (ID: 2108)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5159383416175842
    2. 'H' → logprob: -1.8909382820129395
    3. '0' → logprob: -2.7659382820129395
    4. ' H' → logprob: -3.7659382820129395
    5. '-' → logprob: -3.8909382820129395
    6. ' ' → logprob: -4.1409382820129395
    7. '#' → logprob: -4.3909382820129395
    8. '[' → logprob: -4.8909382820129395
    9. 'for' → logprob: -4.8909382820129395
    10. 'indices' → logprob: -4.8909382820129395

Token 2353: ' particulier' (ID: 47842)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.6423889398574829
    2. 'à' → logprob: -1.392388939857483
    3. 'sp' → logprob: -1.767388939857483
    4. 'distinct' → logprob: -4.142388820648193
    5. 'd' → logprob: -5.017388820648193
    6. 'b' → logprob: -5.517388820648193
    7. '```' → logprob: -5.517388820648193
    8. 'dist' → logprob: -5.892388820648193
    9. 'ambigu' → logprob: -6.142388820648193
    10. 'split' → logprob: -6.392388820648193

Token 2354: ' pour' (ID: 1930)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.020865922793745995
    2. '+' → logprob: -4.5208659172058105
    3. '
' → logprob: -5.7708659172058105
    4. ']' → logprob: -6.0208659172058105
    5. ' +' → logprob: -6.0208659172058105
    6. ',' → logprob: -7.7708659172058105
    7. ']+' → logprob: -8.145866394042969
    8. ')
' → logprob: -8.520866394042969
    9. ' check' → logprob: -8.520866394042969
    10. ')' → logprob: -8.770866394042969

Token 2355: ' les' (ID: 1341)
  Prédit: ' check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.6969854831695557
    2. 'check' → logprob: -1.4469854831695557
    3. ' les' → logprob: -2.4469854831695557
    4. ',' → logprob: -3.6969854831695557
    5. ' la' → logprob: -3.8219854831695557
    6. 'les' → logprob: -3.9469854831695557
    7. ' i' → logprob: -4.071985244750977
    8. '-' → logprob: -4.446985244750977
    9. ' -' → logprob: -4.571985244750977
    10. 'i' → logprob: -4.571985244750977

Token 2356: ' b' (ID: 287)
  Prédit: ' espaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.1417829692363739
    2. 'esp' → logprob: -2.7667829990386963
    3. ' limites' → logprob: -4.266782760620117
    4. 'indices' → logprob: -4.641782760620117
    5. ' indices' → logprob: -5.266782760620117
    6. ' ]' → logprob: -5.266782760620117
    7. ' espac' → logprob: -5.641782760620117
    8. ' check' → logprob: -5.891782760620117
    9. ' extr' → logprob: -5.891782760620117
    10. '```' → logprob: -6.141782760620117

Token 2357: 'ords' (ID: 9142)
  Prédit: 'orn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'orn' → logprob: -0.49311619997024536
    2. 'es' → logprob: -2.8681161403656006
    3. 'orne' → logprob: -2.9931161403656006
    4. ' espaces' → logprob: -2.9931161403656006
    5. 'check' → logprob: -3.3681161403656006
    6. 'esp' → logprob: -3.6181161403656006
    7. 'spaces' → logprob: -4.24311637878418
    8. 'ord' → logprob: -4.36811637878418
    9. 'reak' → logprob: -4.49311637878418
    10. '```' → logprob: -4.49311637878418

Token 2358: '.
' (ID: 558)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.16655071079730988
    2. ',' → logprob: -2.666550636291504
    3. ']' → logprob: -2.791550636291504
    4. ']
' → logprob: -4.166550636291504
    5. ']+' → logprob: -6.041550636291504
    6. ' check' → logprob: -6.166550636291504
    7. '
' → logprob: -6.916550636291504
    8. '+' → logprob: -8.791550636291504
    9. ')
' → logprob: -8.916550636291504
    10. '-' → logprob: -8.916550636291504

Token 2359: 'check' (ID: 3416)
  Prédit: 'check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -9.088346359931165e-07
    2. '
' → logprob: -15.125000953674316
    3. ' check' → logprob: -15.500000953674316
    4. '.check' → logprob: -16.625
    5. '_check' → logprob: -17.25
    6. '```' → logprob: -17.375
    7. '+' → logprob: -17.5
    8. '#' → logprob: -17.5
    9. 'segments' → logprob: -17.5
    10. '	check' → logprob: -17.875

Token 2360: ' =' (ID: 314)
  Prédit: '.insert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.insert' → logprob: -0.3847958743572235
    2. '=[' → logprob: -1.884795904159546
    3. ' =' → logprob: -2.259795904159546
    4. '=' → logprob: -2.884795904159546
    5. '.append' → logprob: -5.009795665740967
    6. '.' → logprob: -8.134796142578125
    7. 'insert' → logprob: -8.259796142578125
    8. '[-' → logprob: -10.259796142578125
    9. ' =[' → logprob: -11.134796142578125
    10. '.extend' → logprob: -11.509796142578125

Token 2361: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.00010688089241739362
    2. '([-' → logprob: -9.250106811523438
    3. ' [-' → logprob: -11.750106811523438
    4. '[' → logprob: -13.625106811523438
    5. ' ' → logprob: -13.625106811523438
    6. '   ' → logprob: -14.625106811523438
    7. '(-' → logprob: -18.250106811523438
    8. ' ' → logprob: -18.375106811523438
    9. '  ' → logprob: -18.500106811523438
    10. '       ' → logprob: -19.875106811523438

Token 2362: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '2' → logprob: -17.75
    4. '```' → logprob: -18.5625
    5. '۱' → logprob: -18.625
    6. '１' → logprob: -19.3125
    7. '१' → logprob: -19.6875
    8. '১' → logprob: -19.75
    9. '   ' → logprob: -20.0
    10. '`' → logprob: -20.0625

Token 2363: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02082996442914009
    2. ']+' → logprob: -3.895829916000366
    3. ',' → logprob: -8.520830154418945
    4. ' ]' → logprob: -9.770830154418945
    5. '+' → logprob: -10.520830154418945
    6. '}' → logprob: -13.645830154418945
    7. '-' → logprob: -14.145830154418945
    8. '+]' → logprob: -14.520830154418945
    9. ']+=' → logprob: -14.770830154418945
    10. ' +' → logprob: -14.770830154418945

Token 2364: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03813948854804039
    2. ' +' → logprob: -3.288139581680298
    3. ']+' → logprob: -9.663139343261719
    4. ')+' → logprob: -11.288139343261719
    5. '+
' → logprob: -12.163139343261719
    6. ']' → logprob: -12.413139343261719
    7. '+[' → logprob: -12.663139343261719
    8. ')' → logprob: -13.163139343261719
    9. '}+' → logprob: -13.413139343261719
    10. '
' → logprob: -13.663139343261719

Token 2365: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -4.842555426876061e-06
    2. ' check' → logprob: -12.250004768371582
    3. '	check' → logprob: -23.6250057220459
    4. '[' → logprob: -23.7500057220459
    5. 'Check' → logprob: -24.1250057220459
    6. '(check' → logprob: -24.3750057220459
    7. 'checking' → logprob: -24.6250057220459
    8. 'checked' → logprob: -25.3750057220459
    9. '_check' → logprob: -25.7500057220459
    10. 'list' → logprob: -25.8750057220459

Token 2366: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6932703852653503
    2. ' +' → logprob: -0.6932703852653503
    3. '+[' → logprob: -9.068270683288574
    4. 'check' → logprob: -12.193270683288574
    5. '+
' → logprob: -14.318270683288574
    6. ' check' → logprob: -14.568270683288574
    7. '
' → logprob: -14.693270683288574
    8. '#' → logprob: -15.318270683288574
    9. '[' → logprob: -15.818270683288574
    10. 'for' → logprob: -15.943270683288574

Token 2367: ' [' (ID: 723)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -2.1008713702030946e-06
    2. ' [' → logprob: -13.500001907348633
    3. '[' → logprob: -14.375001907348633
    4. '[-' → logprob: -19.125001907348633
    5. '[len' → logprob: -19.375001907348633
    6. '=[' → logprob: -19.875001907348633
    7. '[i' → logprob: -20.500001907348633
    8. '[next' → logprob: -20.500001907348633
    9. '[name' → logprob: -20.750001907348633
    10. '\[' → logprob: -20.875001907348633

Token 2368: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00410499656572938
    2. '[n' → logprob: -5.504105091094971
    3. ' n' → logprob: -10.629104614257812
    4. ' [' → logprob: -13.129104614257812
    5. '	n' → logprob: -16.129104614257812
    6. '[' → logprob: -16.504104614257812
    7. ']' → logprob: -16.754104614257812
    8. '   ' → logprob: -17.504104614257812
    9. '```' → logprob: -17.754104614257812
    10. ' ' → logprob: -18.129104614257812

Token 2369: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00040064091444946826
    2. ' ]' → logprob: -8.37540054321289
    3. '+]' → logprob: -9.25040054321289
    4. '+' → logprob: -9.62540054321289
    5. '#' → logprob: -13.37540054321289
    6. ']+' → logprob: -13.87540054321289
    7. '`]' → logprob: -14.12540054321289
    8. ']

' → logprob: -14.25040054321289
    9. '++]' → logprob: -14.37540054321289
    10. ']
' → logprob: -14.37540054321289

Token 2370: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005513638607226312
    2. 'result' → logprob: -8.000551223754883
    3. 'res' → logprob: -9.125551223754883
    4. '```' → logprob: -10.250551223754883
    5. '#' → logprob: -11.125551223754883
    6. 'i' → logprob: -11.250551223754883
    7. 'prev' → logprob: -11.625551223754883
    8. 'ans' → logprob: -11.625551223754883
    9. 'answer' → logprob: -11.625551223754883
    10. 'total' → logprob: -12.000551223754883

Token 2371: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17768891155719757
    2. 'result' → logprob: -1.9276889562606812
    3. 'res' → logprob: -4.302689075469971
    4. 'answer' → logprob: -6.552689075469971
    5. 'total' → logprob: -6.677689075469971
    6. 'ans' → logprob: -7.677689075469971
    7. 'prev' → logprob: -8.552688598632812
    8. 'final' → logprob: -8.802688598632812
    9. '```' → logprob: -9.427688598632812
    10. 'from' → logprob: -10.552688598632812

Token 2372: ' parc' (ID: 22138)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.264322317088954e-05
    2. ' for' → logprob: -11.000052452087402
    3. 'result' → logprob: -11.375052452087402
    4. '```' → logprob: -12.000052452087402
    5. 'prev' → logprob: -12.250052452087402
    6. '#' → logprob: -12.625052452087402
    7. 'res' → logprob: -12.625052452087402
    8. 'def' → logprob: -13.625052452087402
    9. 'f' → logprob: -14.000052452087402
    10. 'r' → logprob: -14.250052452087402

Token 2373: 'ourt' (ID: 38600)
  Prédit: 'ourt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ourt' → logprob: -0.05249820649623871
    2. 'ours' → logprob: -3.0524981021881104
    3. 'oure' → logprob: -5.6774983406066895
    4. 'our' → logprob: -7.9274983406066895
    5. 'orre' → logprob: -10.302497863769531
    6. 'court' → logprob: -10.802497863769531
    7. 'or' → logprob: -11.302497863769531
    8. '#' → logprob: -11.302497863769531
    9. 'ourse' → logprob: -11.427497863769531
    10. '_' → logprob: -12.677497863769531

Token 2374: ' tous' (ID: 10688)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -5.717296517104842e-05
    2. ' range' → logprob: -10.000057220458984
    3. '(range' → logprob: -11.750057220458984
    4. 'for' → logprob: -12.750057220458984
    5. 'len' → logprob: -14.875057220458984
    6. '_range' → logprob: -15.375057220458984
    7. 'i' → logprob: -16.125057220458984
    8. '(' → logprob: -16.250057220458984
    9. '```' → logprob: -17.750057220458984
    10. '
' → logprob: -17.875057220458984

Token 2375: ' les' (ID: 1341)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16481254994869232
    2. 'range' → logprob: -1.9148125648498535
    3. '(i' → logprob: -5.7898125648498535
    4. ' range' → logprob: -7.7898125648498535
    5. ' i' → logprob: -8.039812088012695
    6. '(' → logprob: -8.539812088012695
    7. '_' → logprob: -8.789812088012695
    8. '   ' → logprob: -9.164812088012695
    9. '_range' → logprob: -9.164812088012695
    10. '_i' → logprob: -9.664812088012695

Token 2376: ' interv' (ID: 37413)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0926218256354332
    2. 'range' → logprob: -2.4676218032836914
    3. 'k' → logprob: -6.467621803283691
    4. '_' → logprob: -7.342621803283691
    5. 'r' → logprob: -7.467621803283691
    6. '_i' → logprob: -8.217621803283691
    7. '_range' → logprob: -8.217621803283691
    8. 'idx' → logprob: -8.967621803283691
    9. 'j' → logprob: -9.842621803283691
    10. ' range' → logprob: -9.967621803283691

Token 2377: 'alles' (ID: 28825)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.0031002387404441833
    2. 'als' → logprob: -5.878100395202637
    3. 'er' → logprob: -10.003100395202637
    4. 'ur' → logprob: -10.253100395202637
    5. 'es' → logprob: -10.378100395202637
    6. 'r' → logprob: -10.628100395202637
    7. 'val' → logprob: -10.628100395202637
    8. 'range' → logprob: -11.003100395202637
    9. 'ices' → logprob: -11.003100395202637
    10. 'ex' → logprob: -11.253100395202637

Token 2378: ' entre' (ID: 3853)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.040119826793670654
    2. 'in' → logprob: -3.6651198863983154
    3. 'range' → logprob: -4.540119647979736
    4. '(i' → logprob: -6.790119647979736
    5. '(' → logprob: -7.165119647979736
    6. ' for' → logprob: -8.040120124816895
    7. ' in' → logprob: -8.540120124816895
    8. '(range' → logprob: -8.790120124816895
    9. 'en' → logprob: -9.165120124816895
    10. '_range' → logprob: -9.790120124816895

Token 2379: ' des' (ID: 731)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.6584859490394592
    2. '1' → logprob: -0.7834859490394592
    3. 'i' → logprob: -4.1584858894348145
    4. 'range' → logprob: -4.9084858894348145
    5. '0' → logprob: -6.1584858894348145
    6. 'len' → logprob: -8.783486366271973
    7. '(check' → logprob: -9.658486366271973
    8. '(i' → logprob: -10.033486366271973
    9. '(' → logprob: -10.158486366271973
    10. ' check' → logprob: -10.533486366271973

Token 2380: ' ' (ID: 220)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.28708282113075256
    2. '1' → logprob: -2.0370829105377197
    3. 'i' → logprob: -2.1620829105377197
    4. 'range' → logprob: -6.037082672119141
    5. 'k' → logprob: -7.037082672119141
    6. ' check' → logprob: -8.78708267211914
    7. '(check' → logprob: -8.78708267211914
    8. '(i' → logprob: -9.28708267211914
    9. '_check' → logprob: -9.28708267211914
    10. 'j' → logprob: -9.66208267211914

Token 2381: '1' (ID: 16)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -8.780830830801278e-05
    2. '(check' → logprob: -10.00008773803711
    3. 'i' → logprob: -10.50008773803711
    4. 'range' → logprob: -11.75008773803711
    5. ' check' → logprob: -13.37508773803711
    6. 'c' → logprob: -13.37508773803711
    7. 'k' → logprob: -13.87508773803711
    8. 'checks' → logprob: -14.62508773803711
    9. 'indices' → logprob: -14.75008773803711
    10. 'for' → logprob: -15.25008773803711

Token 2382: ' dans' (ID: 2671)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09935662150382996
    2. ' for' → logprob: -3.3493566513061523
    3. ',' → logprob: -4.474356651306152
    4. 'i' → logprob: -4.474356651306152
    5. '(i' → logprob: -4.849356651306152
    6. 's' → logprob: -5.474356651306152
    7. 'en' → logprob: -5.599356651306152
    8. ' pour' → logprob: -5.849356651306152
    9. 'pour' → logprob: -5.849356651306152
    10. 'dans' → logprob: -6.349356651306152

Token 2383: ' la' (ID: 557)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02977987565100193
    2. 'check' → logprob: -3.5297799110412598
    3. ' range' → logprob: -10.654779434204102
    4. 'len' → logprob: -12.404779434204102
    5. ' check' → logprob: -14.529779434204102
    6. 'enumer' → logprob: -14.904779434204102
    7. '```' → logprob: -15.529779434204102
    8. '(range' → logprob: -15.654779434204102
    9. 'for' → logprob: -16.0297794342041
    10. '(check' → logprob: -16.2797794342041

Token 2384: ' sé' (ID: 7462)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.4121114822482923e-06
    2. ' range' → logprob: -13.125003814697266
    3. 'check' → logprob: -14.125003814697266
    4. '
' → logprob: -14.375003814697266
    5. '(range' → logprob: -17.375003814697266
    6. 'for' → logprob: -18.375003814697266
    7. '```' → logprob: -18.625003814697266
    8. '   ' → logprob: -18.750003814697266
    9. '#' → logprob: -20.000003814697266
    10. ' ' → logprob: -20.250003814697266

Token 2385: 'quence' (ID: 6975)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.44659408926963806
    2. 'quence' → logprob: -1.0715941190719604
    3. 'check' → logprob: -4.57159423828125
    4. 'quences' → logprob: -5.07159423828125
    5. 'q' → logprob: -7.69659423828125
    6. 'quent' → logprob: -8.19659423828125
    7. '#' → logprob: -9.19659423828125
    8. 'que' → logprob: -9.44659423828125
    9. 'H' → logprob: -10.07159423828125
    10. '`' → logprob: -10.44659423828125

Token 2386: ' :
' (ID: 10039)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01502450741827488
    2. ',' → logprob: -5.140024662017822
    3. 'range' → logprob: -6.015024662017822
    4. ':' → logprob: -6.015024662017822
    5. 'in' → logprob: -6.640024662017822
    6. ' for' → logprob: -7.140024662017822
    7. 'en' → logprob: -7.390024662017822
    8. '(' → logprob: -7.390024662017822
    9. '(en' → logprob: -8.890024185180664
    10. '(i' → logprob: -9.390024185180664

Token 2387: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.953082341467962e-05
    2. '
' → logprob: -10.875039100646973
    3. 'range' → logprob: -11.125039100646973
    4. ' for' → logprob: -12.375039100646973
    5. '```' → logprob: -13.500039100646973
    6. '   ' → logprob: -16.00004005432129
    7. '#' → logprob: -17.62504005432129
    8. '`' → logprob: -18.50004005432129
    9. '``' → logprob: -18.50004005432129
    10. '	for' → logprob: -18.62504005432129

Token 2388: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7043325304985046
    2. 'k' → logprob: -1.2043325901031494
    3. 'idx' → logprob: -1.7043325901031494
    4. 'x' → logprob: -4.07933235168457
    5. 'ind' → logprob: -6.32933235168457
    6. 'index' → logprob: -7.20433235168457
    7. '_idx' → logprob: -7.45433235168457
    8. 'l' → logprob: -7.57933235168457
    9. '_index' → logprob: -7.70433235168457
    10. '_i' → logprob: -7.70433235168457

Token 2389: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6329995393753052
    2. ' in' → logprob: -0.7579995393753052
    3. '1' → logprob: -8.632999420166016
    4. ' ' → logprob: -9.507999420166016
    5. '_' → logprob: -9.882999420166016
    6. '_in' → logprob: -10.507999420166016
    7. '   ' → logprob: -11.507999420166016
    8. '+' → logprob: -11.507999420166016
    9. '	in' → logprob: -11.632999420166016
    10. ' _' → logprob: -11.757999420166016

Token 2390: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.493430894101039e-05
    2. ' range' → logprob: -9.500075340270996
    3. 'in' → logprob: -18.75007438659668
    4. '(range' → logprob: -19.87507438659668
    5. '
' → logprob: -20.25007438659668
    6. '_range' → logprob: -21.12507438659668
    7. '	range' → logprob: -21.25007438659668
    8. 'ran' → logprob: -21.37507438659668
    9. '1' → logprob: -21.75007438659668
    10. ' ' → logprob: -22.12507438659668

Token 2391: '(len' (ID: 14990)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1602884978055954
    2. '(len' → logprob: -1.9102884531021118
    3. '1' → logprob: -10.28528881072998
    4. 'len' → logprob: -10.41028881072998
    5. '(
' → logprob: -16.785287857055664
    6. ' (' → logprob: -17.660287857055664
    7. ' len' → logprob: -17.910287857055664
    8. '(length' → logprob: -19.160287857055664
    9. 'range' → logprob: -19.785287857055664
    10. ' ' → logprob: -19.910287857055664

Token 2392: '(check' (ID: 40506)
  Prédit: '(check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(check' → logprob: -0.00015860427811276168
    2. 'check' → logprob: -8.750158309936523
    3. '   ' → logprob: -17.000158309936523
    4. '(' → logprob: -17.250158309936523
    5. ' (' → logprob: -17.500158309936523
    6. '	check' → logprob: -17.875158309936523
    7. ' ' → logprob: -18.875158309936523
    8. ')' → logprob: -19.250158309936523
    9. '
' → logprob: -19.375158309936523
    10. '(
' → logprob: -19.750158309936523

Token 2393: ')' (ID: 8)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20944488048553467
    2. ')' → logprob: -1.7094448804855347
    3. ' -' → logprob: -5.084444999694824
    4. ']' → logprob: -7.084444999694824
    5. ')-' → logprob: -7.709444999694824
    6. '()' → logprob: -8.584444999694824
    7. '()-' → logprob: -9.209444999694824
    8. '1' → logprob: -9.459444999694824
    9. '(' → logprob: -9.834444999694824
    10. '   ' → logprob: -10.834444999694824

Token 2394: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02996210567653179
    2. ' -' → logprob: -3.5299620628356934
    3. ')' → logprob: -8.529962539672852
    4. ' ' → logprob: -12.529962539672852
    5. '1' → logprob: -12.904962539672852
    6. '   ' → logprob: -13.029962539672852
    7. ')-' → logprob: -13.154962539672852
    8. ']' → logprob: -13.654962539672852
    9. '()-' → logprob: -14.029962539672852
    10. '﻿' → logprob: -15.154962539672852

Token 2395: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.392202976712724e-06
    2. '2' → logprob: -12.000006675720215
    3. ' ' → logprob: -16.6250057220459
    4. '１' → logprob: -17.8750057220459
    5. '   ' → logprob: -19.5000057220459
    6. '```' → logprob: -19.5000057220459
    7. '۱' → logprob: -19.7500057220459
    8. '-' → logprob: -21.0000057220459
    9. '१' → logprob: -21.1250057220459
    10. '
' → logprob: -21.3750057220459

Token 2396: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017958412354346365
    2. '2' → logprob: -8.625179290771484
    3. ' ' → logprob: -17.250179290771484
    4. '```' → logprob: -18.500179290771484
    5. '１' → logprob: -19.250179290771484
    6. '
' → logprob: -19.500179290771484
    7. '   ' → logprob: -19.875179290771484
    8. '3' → logprob: -20.125179290771484
    9. '-' → logprob: -20.687679290771484
    10. '۱' → logprob: -21.125179290771484

Token 2397: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6606306433677673
    2. '):
' → logprob: -1.660630702972412
    3. '):' → logprob: -1.910630702972412
    4. '   ' → logprob: -2.410630702972412
    5. ':
' → logprob: -3.785630702972412
    6. '(' → logprob: -4.535630702972412
    7. ')' → logprob: -4.910630702972412
    8. '#' → logprob: -5.285630702972412
    9. '):
' → logprob: -5.785630702972412
    10. '():
' → logprob: -6.285630702972412

Token 2398: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007224892731755972
    2. '```' → logprob: -6.132225036621094
    3. ' if' → logprob: -6.507225036621094
    4. ' segment' → logprob: -7.132225036621094
    5. 'if' → logprob: -7.382225036621094
    6. 'segment' → logprob: -8.007225036621094
    7. ' ind' → logprob: -8.007225036621094
    8. '	if' → logprob: -8.382225036621094
    9. '    
' → logprob: -8.382225036621094
    10. 'start' → logprob: -9.132225036621094

Token 2399: ' #' (ID: 1069)
  Prédit: ' segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.7784631252288818
    2. 'segment' → logprob: -1.9034631252288818
    3. '   ' → logprob: -2.403463125228882
    4. 'start' → logprob: -2.528463125228882
    5. 'l' → logprob: -2.653463125228882
    6. ' start' → logprob: -2.778463125228882
    7. ' l' → logprob: -3.653463125228882
    8. ' if' → logprob: -3.903463125228882
    9. 'if' → logprob: -4.153463363647461
    10. 'sub' → logprob: -4.778463363647461

Token 2400: ' Dé' (ID: 27247)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.3577660024166107
    2. 'start' → logprob: -1.607766032218933
    3. 'l' → logprob: -2.7327659130096436
    4. 'sub' → logprob: -3.9827659130096436
    5. 'if' → logprob: -5.482766151428223
    6. 'seg' → logprob: -5.482766151428223
    7. 'L' → logprob: -5.982766151428223
    8. 'left' → logprob: -6.232766151428223
    9. 'interval' → logprob: -6.357766151428223
    10. '   ' → logprob: -7.107766151428223

Token 2401: 'fin' (ID: 6994)
  Prédit: 'but'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'but' → logprob: -0.2538204789161682
    2. 'b' → logprob: -2.2538204193115234
    3. 'l' → logprob: -3.0038204193115234
    4. 'start' → logprob: -3.2538204193115234
    5. 'if' → logprob: -3.7538204193115234
    6. '   ' → logprob: -6.253820419311523
    7. 'deb' → logprob: -6.253820419311523
    8. 'part' → logprob: -6.753820419311523
    9. 'de' → logprob: -8.503820419311523
    10. 'for' → logprob: -8.503820419311523

Token 2402: 'ition' (ID: 868)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09082324802875519
    2. 'ir' → logprob: -2.840823173522949
    3. 'inir' → logprob: -4.340823173522949
    4. '       ' → logprob: -4.965823173522949
    5. 'ition' → logprob: -5.840823173522949
    6. '```' → logprob: -6.465823173522949
    7. '    ' → logprob: -6.965823173522949
    8. 'er' → logprob: -7.715823173522949
    9. '#' → logprob: -8.21582317352295
    10. '     ' → logprob: -8.59082317352295

Token 2403: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5533992648124695
    2. ' segment' → logprob: -1.6783993244171143
    3. 'segment' → logprob: -1.9283993244171143
    4. 'start' → logprob: -3.3033993244171143
    5. 'sub' → logprob: -3.8033993244171143
    6. ' start' → logprob: -4.303399085998535
    7. 'l' → logprob: -5.678399085998535
    8. ' sub' → logprob: -5.803399085998535
    9. ' l' → logprob: -6.303399085998535
    10. 'subset' → logprob: -6.553399085998535

Token 2404: ' born' (ID: 12275)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.2434757947921753
    2. 'l' → logprob: -1.6184757947921753
    3. 'deb' → logprob: -5.243475914001465
    4. 'left' → logprob: -5.368475914001465
    5. 'g' → logprob: -5.493475914001465
    6. 'L' → logprob: -6.368475914001465
    7. 'de' → logprob: -6.743475914001465
    8. 'begin' → logprob: -8.118475914001465
    9. 'a' → logprob: -8.493475914001465
    10. 'j' → logprob: -9.493475914001465

Token 2405: 'es' (ID: 268)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.2544373273849487
    2. '   ' → logprob: -1.5044373273849487
    3. '=' → logprob: -2.6294374465942383
    4. '_index' → logprob: -2.6294374465942383
    5. ' =' → logprob: -3.1294374465942383
    6. 'es' → logprob: -3.1294374465942383
    7. '       ' → logprob: -3.3794374465942383
    8. '_i' → logprob: -3.5044374465942383
    9. 's' → logprob: -3.7544374465942383
    10. '_interval' → logprob: -4.004437446594238

Token 2406: ' d' (ID: 272)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.7212180495262146
    2. 'g' → logprob: -1.9712181091308594
    3. 'l' → logprob: -2.2212181091308594
    4. 'left' → logprob: -2.4712181091308594
    5. '   ' → logprob: -2.7212181091308594
    6. 'de' → logprob: -3.3462181091308594
    7. '_start' → logprob: -3.4712181091308594
    8. 'L' → logprob: -4.346218109130859
    9. '_left' → logprob: -4.846218109130859
    10. ' =' → logprob: -5.346218109130859

Token 2407: ''' (ID: 6)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.07691974937915802
    2. '   ' → logprob: -3.5769197940826416
    3. ' check' → logprob: -3.7019197940826416
    4. '(check' → logprob: -4.7019195556640625
    5. 'e' → logprob: -6.4519195556640625
    6. 'range' → logprob: -6.5769195556640625
    7. 'é' → logprob: -6.7019195556640625
    8. '_check' → logprob: -6.7019195556640625
    9. 'ef' → logprob: -6.7019195556640625
    10. 'r' → logprob: -6.9519195556640625

Token 2408: 'interval' (ID: 37558)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.12190123647451401
    2. 'interval' → logprob: -2.996901273727417
    3. 'range' → logprob: -3.871901273727417
    4. ' check' → logprob: -4.496901035308838
    5. 'cut' → logprob: -4.746901035308838
    6. '#' → logprob: -5.246901035308838
    7. 'sub' → logprob: -5.246901035308838
    8. 'tr' → logprob: -6.246901035308838
    9. 'i' → logprob: -6.496901035308838
    10. 'slice' → logprob: -7.121901035308838

Token 2409: 'le' (ID: 282)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.99278724193573
    2. ' =' → logprob: -1.36778724193573
    3. 'es' → logprob: -1.36778724193573
    4. '   ' → logprob: -2.7427873611450195
    5. '=' → logprob: -3.6177873611450195
    6. 'aires' → logprob: -4.4927873611450195
    7. 'aries' → logprob: -5.4927873611450195
    8. 'e' → logprob: -6.3677873611450195
    9. '[' → logprob: -6.3677873611450195
    10. '       ' → logprob: -6.7427873611450195

Token 2410: ' [' (ID: 723)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9840707182884216
    2. '   ' → logprob: -1.7340707778930664
    3. '_start' → logprob: -1.7340707778930664
    4. 'start' → logprob: -1.9840707778930664
    5. '[start' → logprob: -3.3590707778930664
    6. '=' → logprob: -3.6090707778930664
    7. ' start' → logprob: -3.7340707778930664
    8. 'l' → logprob: -4.234070777893066
    9. '=start' → logprob: -4.984070777893066
    10. '_l' → logprob: -5.234070777893066

Token 2411: 'l' (ID: 75)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.0003368926409166306
    2. ' check' → logprob: -8.000336647033691
    3. '(check' → logprob: -14.125336647033691
    4. '   ' → logprob: -15.125336647033691
    5. '	check' → logprob: -15.625336647033691
    6. 'start' → logprob: -16.375337600708008
    7. ']' → logprob: -16.875337600708008
    8. '_check' → logprob: -17.375337600708008
    9. 'chec' → logprob: -17.750337600708008
    10. 'b' → logprob: -18.625337600708008

Token 2412: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.21417249739170074
    2. ' +' → logprob: -1.7141724824905396
    3. ',' → logprob: -5.33917236328125
    4. ']' → logprob: -5.96417236328125
    5. 't' → logprob: -5.96417236328125
    6. ']+' → logprob: -6.58917236328125
    7. ' =' → logprob: -7.58917236328125
    8. '   ' → logprob: -7.96417236328125
    9. ' ,' → logprob: -9.33917236328125
    10. 'e' → logprob: -9.71417236328125

Token 2413: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016754455282352865
    2. '+' → logprob: -8.750167846679688
    3. ']+' → logprob: -12.500167846679688
    4. ' ' → logprob: -13.000167846679688
    5. ']' → logprob: -13.250167846679688
    6. ' +' → logprob: -14.625167846679688
    7. '```' → logprob: -15.125167846679688
    8. '...' → logprob: -15.375167846679688
    9. 'check' → logprob: -16.750167846679688
    10. '   ' → logprob: -16.750167846679688

Token 2414: ' :' (ID: 712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.041577309370040894
    2. '+' → logprob: -4.166577339172363
    3. ' +' → logprob: -5.041577339172363
    4. ':' → logprob: -5.291577339172363
    5. ' ,' → logprob: -5.416577339172363
    6. '+i' → logprob: -6.166577339172363
    7. '+l' → logprob: -6.666577339172363
    8. ',l' → logprob: -6.916577339172363
    9. ':l' → logprob: -6.916577339172363
    10. '   ' → logprob: -7.416577339172363

Token 2415: ' r' (ID: 428)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.002478508511558175
    2. ' check' → logprob: -6.00247859954834
    3. '(check' → logprob: -12.87747859954834
    4. '```' → logprob: -15.87747859954834
    5. '	check' → logprob: -16.002477645874023
    6. ']' → logprob: -16.752477645874023
    7. '_check' → logprob: -17.002477645874023
    8. '-check' → logprob: -17.252477645874023
    9. '   ' → logprob: -18.752477645874023
    10. '`' → logprob: -19.377477645874023

Token 2416: '],' (ID: 2155)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06572569906711578
    2. ' +' → logprob: -2.815725803375244
    3. ']+' → logprob: -6.440725803375244
    4. '[i' → logprob: -6.940725803375244
    5. ']' → logprob: -7.440725803375244
    6. 'i' → logprob: -8.190725326538086
    7. '(i' → logprob: -8.565725326538086
    8. '+i' → logprob: -10.065725326538086
    9. '   ' → logprob: -10.315725326538086
    10. '1' → logprob: -11.190725326538086

Token 2417: ' c' (ID: 274)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16928677260875702
    2. ' l' → logprob: -2.2942867279052734
    3. 'l' → logprob: -2.9192867279052734
    4. '	l' → logprob: -9.044286727905273
    5. ' segment' → logprob: -9.169286727905273
    6. '    ' → logprob: -9.169286727905273
    7. ' H' → logprob: -9.419286727905273
    8. ' start' → logprob: -9.544286727905273
    9. ' sub' → logprob: -9.669286727905273
    10. 'sub' → logprob: -9.794286727905273

Token 2418: ''est' (ID: 6616)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43967077136039734
    2. ' =' → logprob: -1.3146708011627197
    3. '   ' → logprob: -2.8146708011627197
    4. '+' → logprob: -4.439670562744141
    5. ' check' → logprob: -5.689670562744141
    6. ']' → logprob: -5.814670562744141
    7. 'check' → logprob: -6.189670562744141
    8. ':' → logprob: -6.564670562744141
    9. 'heck' → logprob: -7.064670562744141
    10. 'l' → logprob: -7.314670562744141

Token 2419: '-à' (ID: 56297)
  Prédit: ' check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.6339421272277832
    2. 'check' → logprob: -0.7589421272277832
    3. '   ' → logprob: -7.133942127227783
    4. '(check' → logprob: -8.383941650390625
    5. '	check' → logprob: -9.258941650390625
    6. '_check' → logprob: -9.633941650390625
    7. '    ' → logprob: -10.633941650390625
    8. ' ' → logprob: -10.883941650390625
    9. '  ' → logprob: -10.883941650390625
    10. 'range' → logprob: -11.258941650390625

Token 2420: '-dire' (ID: 76064)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.13262628018856049
    2. '(check' → logprob: -2.6326262950897217
    3. 'range' → logprob: -3.3826262950897217
    4. '1' → logprob: -4.757626056671143
    5. 'i' → logprob: -5.757626056671143
    6. ' check' → logprob: -6.007626056671143
    7. '+' → logprob: -6.382626056671143
    8. '   ' → logprob: -7.257626056671143
    9. '...' → logprob: -8.2576265335083
    10. 'continue' → logprob: -8.6326265335083

Token 2421: ' entre' (ID: 3853)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.1002659872174263
    2. ' check' → logprob: -2.3502659797668457
    3. '(check' → logprob: -10.100266456604004
    4. '   ' → logprob: -11.600266456604004
    5. '	check' → logprob: -12.350266456604004
    6. '```' → logprob: -13.600266456604004
    7. '_check' → logprob: -13.850266456604004
    8. '
' → logprob: -14.600266456604004
    9. 'range' → logprob: -14.725266456604004
    10. 'l' → logprob: -15.475266456604004

Token 2422: ' deux' (ID: 10301)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.00026407750556245446
    2. ' check' → logprob: -8.250264167785645
    3. '   ' → logprob: -13.625264167785645
    4. '(check' → logprob: -14.125264167785645
    5. '
' → logprob: -14.625264167785645
    6. '	check' → logprob: -15.375264167785645
    7. ']' → logprob: -16.500263214111328
    8. '```' → logprob: -16.500263214111328
    9. '_check' → logprob: -17.625263214111328
    10. '`' → logprob: -17.875263214111328

Token 2423: ' ' (ID: 220)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.01609361171722412
    2. ' check' → logprob: -4.141093730926514
    3. '(check' → logprob: -9.891093254089355
    4. '   ' → logprob: -12.141093254089355
    5. '	check' → logprob: -13.641093254089355
    6. '_check' → logprob: -14.391093254089355
    7. ' ' → logprob: -15.016093254089355
    8. '`' → logprob: -15.391093254089355
    9. ' (' → logprob: -15.641093254089355
    10. '
' → logprob: -15.641093254089355

Token 2424: '1' (ID: 16)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -1.1398757123970427e-05
    2. '(check' → logprob: -11.625011444091797
    3. ' check' → logprob: -13.125011444091797
    4. '
' → logprob: -16.250011444091797
    5. '```' → logprob: -16.250011444091797
    6. '	check' → logprob: -16.500011444091797
    7. 'checks' → logprob: -17.250011444091797
    8. 'chec' → logprob: -18.250011444091797
    9. '`' → logprob: -18.750011444091797
    10. '_check' → logprob: -18.750011444091797

Token 2425: ' cons' (ID: 1473)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21480613946914673
    2. ' =' → logprob: -1.714806079864502
    3. ' +' → logprob: -4.714806079864502
    4. '+' → logprob: -6.339806079864502
    5. '       ' → logprob: -7.214806079864502
    6. '=' → logprob: -7.964806079864502
    7. '[' → logprob: -8.33980655670166
    8. '    ' → logprob: -8.71480655670166
    9. ']' → logprob: -9.08980655670166
    10. ',' → logprob: -9.21480655670166

Token 2426: 'écut' (ID: 96392)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5741934180259705
    2. '   ' → logprob: -0.9491934180259705
    3. '       ' → logprob: -4.574193477630615
    4. 'écut' → logprob: -5.199193477630615
    5. ' =' → logprob: -5.324193477630615
    6. ' +' → logprob: -5.449193477630615
    7. ',' → logprob: -5.449193477630615
    8. ':' → logprob: -5.699193477630615
    9. '+
' → logprob: -6.449193477630615
    10. 'é' → logprob: -6.574193477630615

Token 2427: 'ifs' (ID: 14119)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.43920886516571045
    2. ']' → logprob: -2.064208984375
    3. ']+' → logprob: -2.314208984375
    4. '   ' → logprob: -3.064208984375
    5. ' +' → logprob: -3.064208984375
    6. 'check' → logprob: -4.314208984375
    7. '(check' → logprob: -5.439208984375
    8. '=' → logprob: -5.564208984375
    9. ' =' → logprob: -5.689208984375
    10. '_check' → logprob: -5.689208984375

Token 2428: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03232574835419655
    2. '   ' → logprob: -4.032325744628906
    3. '=' → logprob: -4.532325744628906
    4. ' (' → logprob: -7.407325744628906
    5. '(l' → logprob: -7.532325744628906
    6. '+' → logprob: -8.157325744628906
    7. '=l' → logprob: -8.407325744628906
    8. ':' → logprob: -8.532325744628906
    9. ':
' → logprob: -8.657325744628906
    10. 'l' → logprob: -9.032325744628906

Token 2429: 'ou' (ID: 283)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.255467027425766
    2. ']' → logprob: -2.505466938018799
    3. ']+' → logprob: -2.755466938018799
    4. ' check' → logprob: -3.130466938018799
    5. '+' → logprob: -4.630466938018799
    6. '(check' → logprob: -4.630466938018799
    7. ' ]' → logprob: -4.880466938018799
    8. '1' → logprob: -6.380466938018799
    9. ']:
' → logprob: -6.505466938018799
    10. ')' → logprob: -6.880466938018799

Token 2430: ' au' (ID: 2791)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.0006303519476205111
    2. ' check' → logprob: -7.3756303787231445
    3. '(check' → logprob: -13.125630378723145
    4. '```' → logprob: -14.625630378723145
    5. '   ' → logprob: -14.750630378723145
    6. '	check' → logprob: -15.125630378723145
    7. ']' → logprob: -15.375630378723145
    8. '
' → logprob: -15.750630378723145
    9. '_check' → logprob: -15.875630378723145
    10. ')' → logprob: -17.375629425048828

Token 2431: ' début' (ID: 29589)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.027111731469631195
    2. '+' → logprob: -4.152111530303955
    3. ']+' → logprob: -5.777111530303955
    4. 'l' → logprob: -5.902111530303955
    5. ']' → logprob: -6.652111530303955
    6. '
' → logprob: -6.902111530303955
    7. ')' → logprob: -7.402111530303955
    8. '   ' → logprob: -7.652111530303955
    9. '```' → logprob: -7.652111530303955
    10. ')+' → logprob: -8.152112007141113

Token 2432: '/' (ID: 14)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3086548447608948
    2. '   ' → logprob: -1.93365478515625
    3. ' +' → logprob: -3.30865478515625
    4. ',' → logprob: -3.43365478515625
    5. 'l' → logprob: -4.68365478515625
    6. 'et' → logprob: -4.68365478515625
    7. '```' → logprob: -5.05865478515625
    8. 'check' → logprob: -5.30865478515625
    9. '+l' → logprob: -5.43365478515625
    10. ' et' → logprob: -5.80865478515625

Token 2433: 'fin' (ID: 6994)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.009058743715286255
    2. '(check' → logprob: -4.759058952331543
    3. ' check' → logprob: -8.009058952331543
    4. '```' → logprob: -10.634058952331543
    5. ']' → logprob: -10.759058952331543
    6. '   ' → logprob: -11.009058952331543
    7. '+' → logprob: -11.259058952331543
    8. ']+' → logprob: -11.884058952331543
    9. ' (' → logprob: -12.259058952331543
    10. ')' → logprob: -12.634058952331543

Token 2434: ' de' (ID: 334)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.39214402437210083
    2. 'check' → logprob: -2.017143964767456
    3. '(check' → logprob: -2.642143964767456
    4. ']' → logprob: -2.767143964767456
    5. ' +' → logprob: -3.892143964767456
    6. ']+' → logprob: -4.017144203186035
    7. ')' → logprob: -5.517144203186035
    8. ',' → logprob: -6.017144203186035
    9. ' check' → logprob: -6.392144203186035
    10. '   ' → logprob: -6.642144203186035

Token 2435: ' la' (ID: 557)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.006816373206675053
    2. ' check' → logprob: -5.006816387176514
    3. '(check' → logprob: -10.006815910339355
    4. ']' → logprob: -10.756815910339355
    5. ')' → logprob: -11.756815910339355
    6. 'l' → logprob: -12.256815910339355
    7. '_check' → logprob: -12.256815910339355
    8. '	check' → logprob: -12.381815910339355
    9. '   ' → logprob: -12.881815910339355
    10. '```' → logprob: -13.006815910339355

Token 2436: ' liste' (ID: 31719)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.3402670919895172
    2. ' check' → logprob: -1.5902670621871948
    3. ')' → logprob: -2.8402671813964844
    4. ']' → logprob: -4.215267181396484
    5. ' ]' → logprob: -5.840267181396484
    6. ' )' → logprob: -5.965267181396484
    7. ')
' → logprob: -6.465267181396484
    8. ']+' → logprob: -7.590267181396484
    9. '(check' → logprob: -7.840267181396484
    10. ' ' → logprob: -7.965267181396484

Token 2437: ').
' (ID: 6294)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.13505785167217255
    2. ']' → logprob: -3.0100579261779785
    3. ']+' → logprob: -3.2600579261779785
    4. ' +' → logprob: -3.8850579261779785
    5. '+l' → logprob: -5.0100579261779785
    6. '(l' → logprob: -5.7600579261779785
    7. '(i' → logprob: -6.6350579261779785
    8. '[i' → logprob: -6.6350579261779785
    9. '```' → logprob: -6.6350579261779785
    10. '[l' → logprob: -6.7600579261779785

Token 2438: '   ' (ID: 271)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.2195303738117218
    2. '   ' → logprob: -2.3445303440093994
    3. 'l' → logprob: -2.4695303440093994
    4. '```' → logprob: -4.5945305824279785
    5. '	l' → logprob: -5.2195305824279785
    6. '(l' → logprob: -8.96953010559082
    7. ' ' → logprob: -9.21953010559082
    8. '    ' → logprob: -9.21953010559082
    9. '‌' → logprob: -9.59453010559082
    10. '    
' → logprob: -9.84453010559082

Token 2439: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.6277123093605042
    2. ' l' → logprob: -0.8777123093605042
    3. '   ' → logprob: -3.0027122497558594
    4. '	l' → logprob: -7.252712249755859
    5. '    ' → logprob: -10.50271224975586
    6. ' ' → logprob: -11.00271224975586
    7. '‌' → logprob: -11.75271224975586
    8. '```' → logprob: -11.87771224975586
    9. '    
' → logprob: -12.00271224975586
    10. ' ' → logprob: -12.00271224975586

Token 2440: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.145577073097229
    2. '=' → logprob: -2.1455769538879395
    3. '+' → logprob: -4.0205769538879395
    4. ' +' → logprob: -8.020577430725098
    5. ',' → logprob: -9.895577430725098
    6. '   ' → logprob: -10.270577430725098
    7. ' plus' → logprob: -11.145577430725098
    8. ')' → logprob: -11.270577430725098
    9. ' ' → logprob: -11.520577430725098
    10. ']' → logprob: -11.645577430725098

Token 2441: ' r' (ID: 428)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.12778328359127045
    2. ' check' → logprob: -2.1277832984924316
    3. ' =' → logprob: -7.877783298492432
    4. '=' → logprob: -8.002782821655273
    5. 'r' → logprob: -9.252782821655273
    6. ' r' → logprob: -10.877782821655273
    7. '(check' → logprob: -11.377782821655273
    8. '	check' → logprob: -12.502782821655273
    9. ' ' → logprob: -13.252782821655273
    10. '_check' → logprob: -13.502782821655273

Token 2442: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00671584764495492
    2. ' =' → logprob: -5.006715774536133
    3. ',' → logprob: -15.006715774536133
    4. '=
' → logprob: -16.506715774536133
    5. ')' → logprob: -18.006715774536133
    6. ' ' → logprob: -18.131715774536133
    7. '=

' → logprob: -18.131715774536133
    8. '=}' → logprob: -18.381715774536133
    9. '＝' → logprob: -18.631715774536133
    10. '=int' → logprob: -19.631715774536133

Token 2443: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.0007107630372047424
    2. ' check' → logprob: -7.250710964202881
    3. '(check' → logprob: -14.250710487365723
    4. '	check' → logprob: -16.87571144104004
    5. '   ' → logprob: -18.00071144104004
    6. '_check' → logprob: -18.62571144104004
    7. '-check' → logprob: -20.37571144104004
    8. 'chec' → logprob: -20.50071144104004
    9. 'checked' → logprob: -20.62571144104004
    10. 'checks' → logprob: -20.62571144104004

Token 2444: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0035563616547733545
    2. '=' → logprob: -6.378556251525879
    3. '[' → logprob: -7.378556251525879
    4. ' =' → logprob: -7.628556251525879
    5. 'i' → logprob: -7.878556251525879
    6. '+' → logprob: -9.003556251525879
    7. ' [' → logprob: -9.503556251525879
    8. '[l' → logprob: -9.753556251525879
    9. '][' → logprob: -11.003556251525879
    10. '=i' → logprob: -11.128556251525879

Token 2445: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.19707833230495453
    2. ']+' → logprob: -2.072078227996826
    3. '+' → logprob: -2.947078227996826
    4. ' +' → logprob: -7.822078227996826
    5. '+]' → logprob: -11.447078704833984
    6. '],' → logprob: -11.572078704833984
    7. '   ' → logprob: -11.697078704833984
    8. ']
' → logprob: -11.697078704833984
    9. ')+' → logprob: -12.322078704833984
    10. ' ]' → logprob: -12.572078704833984

Token 2446: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.01815006136894226
    2. ' check' → logprob: -4.0181498527526855
    3. '	check' → logprob: -16.268150329589844
    4. '(check' → logprob: -16.893150329589844
    5. 'chec' → logprob: -17.893150329589844
    6. '_check' → logprob: -19.268150329589844
    7. '   ' → logprob: -19.393150329589844
    8. ' ' → logprob: -19.768150329589844
    9. 'checking' → logprob: -19.768150329589844
    10. 'che' → logprob: -20.643150329589844

Token 2447: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.10254880040884018
    2. 'i' → logprob: -2.352548837661743
    3. '(i' → logprob: -6.602548599243164
    4. '+' → logprob: -8.102548599243164
    5. 'check' → logprob: -8.102548599243164
    6. ' i' → logprob: -8.727548599243164
    7. '```' → logprob: -9.852548599243164
    8. '{i' → logprob: -9.977548599243164
    9. '[' → logprob: -10.102548599243164
    10. '`' → logprob: -10.852548599243164

Token 2448: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004678372759371996
    2. ' +' → logprob: -5.379678249359131
    3. ']' → logprob: -10.379678726196289
    4. ']+' → logprob: -10.629678726196289
    5. '+i' → logprob: -13.629678726196289
    6. '   ' → logprob: -14.504678726196289
    7. 'i' → logprob: -14.629678726196289
    8. '1' → logprob: -15.754678726196289
    9. '+]' → logprob: -16.00467872619629
    10. '<|end|>' → logprob: -16.00467872619629

Token 2449: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.250001907348633
    3. '
' → logprob: -16.250001907348633
    4. '   ' → logprob: -17.250001907348633
    5. '0' → logprob: -18.375001907348633
    6. '１' → logprob: -19.062501907348633
    7. '  ' → logprob: -19.187501907348633
    8. 'i' → logprob: -19.312501907348633
    9. '```' → logprob: -19.437501907348633
    10. ']' → logprob: -19.500001907348633

Token 2450: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.650518920039758e-06
    2. ' ' → logprob: -12.625003814697266
    3. '-' → logprob: -16.625003814697266
    4. '0' → logprob: -16.875003814697266
    5. '   ' → logprob: -17.000003814697266
    6. '۱' → logprob: -18.000003814697266
    7. '
' → logprob: -18.500003814697266
    8. '１' → logprob: -18.562503814697266
    9. '2' → logprob: -18.625003814697266
    10. ']' → logprob: -18.625003814697266

Token 2451: ']
' (ID: 1592)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.24949079751968384
    2. ' +' → logprob: -1.999490737915039
    3. '   ' → logprob: -2.624490737915039
    4. ']+' → logprob: -4.999490737915039
    5. ']' → logprob: -6.374490737915039
    6. ')+' → logprob: -6.374490737915039
    7. ')' → logprob: -6.374490737915039
    8. '+
' → logprob: -7.749490737915039
    9. '
' → logprob: -8.499490737915039
    10. ')
' → logprob: -8.624490737915039

Token 2452: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008945327252149582
    2. 'if' → logprob: -4.758945465087891
    3. ' if' → logprob: -9.25894546508789
    4. 'segment' → logprob: -9.75894546508789
    5. '    
' → logprob: -9.75894546508789
    6. 'sub' → logprob: -10.13394546508789
    7. '```' → logprob: -10.38394546508789
    8. '       ' → logprob: -11.38394546508789
    9. '   ' → logprob: -11.75894546508789
    10. 'h' → logprob: -12.00894546508789

Token 2453: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1296885758638382
    2. 'if' → logprob: -2.1296885013580322
    3. 'segment' → logprob: -6.629688739776611
    4. 'sub' → logprob: -7.004688739776611
    5. ' if' → logprob: -8.254688262939453
    6. '    
' → logprob: -9.629688262939453
    7. 'subset' → logprob: -9.629688262939453
    8. '```' → logprob: -9.754688262939453
    9. '	if' → logprob: -11.379688262939453
    10. 's' → logprob: -11.504688262939453

Token 2454: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2463550567626953
    2. 'if' → logprob: -2.1213550567626953
    3. 'sub' → logprob: -3.1213550567626953
    4. 'segment' → logprob: -3.1213550567626953
    5. 'ans' → logprob: -5.121355056762695
    6. 'subset' → logprob: -6.496355056762695
    7. 'res' → logprob: -6.871355056762695
    8. 's' → logprob: -7.371355056762695
    9. 'seg' → logprob: -8.371355056762695
    10. 'interval' → logprob: -8.746355056762695

Token 2455: ' multipl' (ID: 44269)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09312166273593903
    2. '   ' → logprob: -3.2181217670440674
    3. ' if' → logprob: -3.5931217670440674
    4. 'h' → logprob: -4.218121528625488
    5. 'continue' → logprob: -5.968121528625488
    6. 'H' → logprob: -6.593121528625488
    7. '+=' → logprob: -7.343121528625488
    8. ' +=' → logprob: -7.718121528625488
    9. ' H' → logprob: -8.468121528625488
    10. 's' → logprob: -8.718121528625488

Token 2456: 'ie' (ID: 396)
  Prédit: 'ipl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ipl' → logprob: -1.3672547340393066
    2. 'ie' → logprob: -1.7422547340393066
    3. 'ip' → logprob: -2.3672547340393066
    4. 'e' → logprob: -2.3672547340393066
    5. '   ' → logprob: -2.4922547340393066
    6. 'pl' → logprob: -2.6172547340393066
    7. 'lique' → logprob: -2.8672547340393066
    8. 'plique' → logprob: -3.3672547340393066
    9. '=' → logprob: -3.7422547340393066
    10. 'i' → logprob: -4.242254734039307

Token 2457: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.205229714512825
    2. '(ans' → logprob: -1.7052297592163086
    3. ' ans' → logprob: -5.705229759216309
    4. '   ' → logprob: -8.455229759216309
    5. '(' → logprob: -8.830229759216309
    6. ' (' → logprob: -9.455229759216309
    7. '	ans' → logprob: -10.580229759216309
    8. '(
' → logprob: -11.330229759216309
    9. '_ans' → logprob: -13.455229759216309
    10. 'answer' → logprob: -13.580229759216309

Token 2458: ' par' (ID: 686)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.9700305461883545
    2. '(' → logprob: -1.8450305461883545
    3. '*=' → logprob: -2.0950305461883545
    4. '   ' → logprob: -2.2200305461883545
    5. ' *=' → logprob: -2.4700305461883545
    6. 'ans' → logprob: -2.4700305461883545
    7. ' (' → logprob: -3.4700305461883545
    8. '=' → logprob: -4.220030784606934
    9. '*' → logprob: -5.345030784606934
    10. ' ans' → logprob: -5.595030784606934

Token 2459: ' le' (ID: 505)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.004351078998297453
    2. '(s' → logprob: -5.7543511390686035
    3. ' solve' → logprob: -6.8793511390686035
    4. '(' → logprob: -9.129350662231445
    5. ' (' → logprob: -11.254350662231445
    6. 'pow' → logprob: -11.379350662231445
    7. 'ans' → logprob: -12.504350662231445
    8. '```' → logprob: -13.504350662231445
    9. '.solve' → logprob: -13.879350662231445
    10. '   ' → logprob: -14.504350662231445

Token 2460: ' résultat' (ID: 62556)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.003896514419466257
    2. ' solve' → logprob: -5.753896713256836
    3. '(s' → logprob: -7.378896713256836
    4. '(' → logprob: -9.753896713256836
    5. ' (' → logprob: -11.003896713256836
    6. 'pow' → logprob: -12.003896713256836
    7. 'ans' → logprob: -13.003896713256836
    8. 'solution' → logprob: -13.253896713256836
    9. '```' → logprob: -13.253896713256836
    10. '.solve' → logprob: -13.378896713256836

Token 2461: ' de' (ID: 334)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.5417479872703552
    2. '(' → logprob: -1.916748046875
    3. '   ' → logprob: -2.166748046875
    4. 'solve' → logprob: -2.666748046875
    5. '=' → logprob: -3.666748046875
    6. ' =' → logprob: -3.791748046875
    7. '(
' → logprob: -4.166748046875
    8. '```' → logprob: -5.041748046875
    9. '*' → logprob: -5.541748046875
    10. '(pow' → logprob: -5.791748046875

Token 2462: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.007652180269360542
    2. ' solve' → logprob: -4.882652282714844
    3. '(' → logprob: -10.632652282714844
    4. '(s' → logprob: -11.757652282714844
    5. '```' → logprob: -12.257652282714844
    6. 'pow' → logprob: -12.632652282714844
    7. '   ' → logprob: -13.382652282714844
    8. ' (' → logprob: -13.632652282714844
    9. '`' → logprob: -14.257652282714844
    10. 'solution' → logprob: -14.757652282714844

Token 2463: ' appli' (ID: 25550)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.0017940625548362732
    2. '(' → logprob: -6.50179386138916
    3. '([' → logprob: -9.00179386138916
    4. '(
' → logprob: -9.37679386138916
    5. ' (' → logprob: -10.12679386138916
    6. '   ' → logprob: -11.12679386138916
    7. '((' → logprob: -11.25179386138916
    8. 'H' → logprob: -11.75179386138916
    9. '(h' → logprob: -12.50179386138916
    10. '```' → logprob: -14.00179386138916

Token 2464: 'qué' (ID: 23535)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.011311880312860012
    2. '(' → logprob: -5.136312007904053
    3. '(h' → logprob: -6.011312007904053
    4. '(
' → logprob: -7.011312007904053
    5. '   ' → logprob: -7.511312007904053
    6. 'à' → logprob: -7.636312007904053
    7. '([' → logprob: -8.011311531066895
    8. ' à' → logprob: -8.386311531066895
    9. 'a' → logprob: -8.386311531066895
    10. '(a' → logprob: -9.886311531066895

Token 2465: ' à' (ID: 1221)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.0005297990282997489
    2. '(' → logprob: -7.875529766082764
    3. ' à' → logprob: -10.000530242919922
    4. '(
' → logprob: -10.375530242919922
    5. 'à' → logprob: -10.500530242919922
    6. '```' → logprob: -11.375530242919922
    7. 'to' → logprob: -11.625530242919922
    8. '`' → logprob: -12.250530242919922
    9. '   ' → logprob: -12.375530242919922
    10. 'H' → logprob: -12.625530242919922

Token 2466: ' la' (ID: 557)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.005966715048998594
    2. ' H' → logprob: -5.130966663360596
    3. '(H' → logprob: -10.255967140197754
    4. '`' → logprob: -14.130967140197754
    5. '```' → logprob: -14.380967140197754
    6. '[' → logprob: -15.630967140197754
    7. '(' → logprob: -15.755967140197754
    8. ' the' → logprob: -15.755967140197754
    9. '   ' → logprob: -16.130966186523438
    10. '	H' → logprob: -16.255966186523438

Token 2467: ' sous' (ID: 14487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0024196531157940626
    2. 'h' → logprob: -6.502419471740723
    3. ' H' → logprob: -7.002419471740723
    4. ' h' → logprob: -12.377419471740723
    5. '`' → logprob: -14.252419471740723
    6. '   ' → logprob: -14.377419471740723
    7. '[' → logprob: -14.377419471740723
    8. '```' → logprob: -14.502419471740723
    9. 'space' → logprob: -15.502419471740723
    10. ' ' → logprob: -16.50242042541504

Token 2468: '-s' (ID: 2011)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.26039445400238037
    2. 'h' → logprob: -2.51039457321167
    3. '[h' → logprob: -2.88539457321167
    4. '[' → logprob: -3.38539457321167
    5. '[
' → logprob: -4.01039457321167
    6. '_H' → logprob: -4.38539457321167
    7. '[l' → logprob: -4.38539457321167
    8. '_h' → logprob: -5.76039457321167
    9. 'list' → logprob: -6.13539457321167
    10. '   ' → logprob: -6.26039457321167

Token 2469: 'é' (ID: 377)
  Prédit: 'quence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.25952428579330444
    2. 'e' → logprob: -2.634524345397949
    3. 'é' → logprob: -2.759524345397949
    4. 'ection' → logprob: -3.384524345397949
    5. 'eq' → logprob: -3.759524345397949
    6. '[' → logprob: -3.884524345397949
    7. 'équ' → logprob: -4.759524345397949
    8. 'q' → logprob: -6.259524345397949
    9. '   ' → logprob: -6.759524345397949
    10. 'lice' → logprob: -7.259524345397949

Token 2470: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.08296097069978714
    2. 'q' → logprob: -2.582961082458496
    3. 'H' → logprob: -6.332961082458496
    4. 'h' → logprob: -7.582961082458496
    5. '   ' → logprob: -8.207961082458496
    6. 'ction' → logprob: -8.332961082458496
    7. '[' → logprob: -8.582961082458496
    8. '#' → logprob: -8.707961082458496
    9. '(H' → logprob: -8.832961082458496
    10. 't' → logprob: -9.582961082458496

Token 2471: ' H' (ID: 487)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.005418261978775263
    2. 'H' → logprob: -5.630418300628662
    3. '(' → logprob: -6.630418300628662
    4. ' (' → logprob: -8.505417823791504
    5. '`' → logprob: -9.005417823791504
    6. ' H' → logprob: -9.505417823791504
    7. '```' → logprob: -10.005417823791504
    8. '(h' → logprob: -10.505417823791504
    9. '(
' → logprob: -12.005417823791504
    10. '   ' → logprob: -12.130417823791504

Token 2472: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.5658074617385864
    2. '[' → logprob: -0.9408074617385864
    3. '(H' → logprob: -4.065807342529297
    4. 'H' → logprob: -4.565807342529297
    5. '```' → logprob: -5.315807342529297
    6. '[h' → logprob: -5.440807342529297
    7. '   ' → logprob: -6.315807342529297
    8. '[
' → logprob: -7.440807342529297
    9. 'l' → logprob: -7.690807342529297
    10. '(l' → logprob: -7.815807342529297

Token 2473: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.09733511507511139
    2. 'l' → logprob: -3.09733510017395
    3. ' +' → logprob: -4.347335338592529
    4. '+l' → logprob: -4.347335338592529
    5. '[l' → logprob: -4.722335338592529
    6. ']+' → logprob: -5.722335338592529
    7. ']' → logprob: -6.097335338592529
    8. 'r' → logprob: -6.347335338592529
    9. '```' → logprob: -6.597335338592529
    10. ':l' → logprob: -6.722335338592529

Token 2474: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -13.375003814697266
    3. '+' → logprob: -14.500003814697266
    4. '```' → logprob: -14.625003814697266
    5. '   ' → logprob: -15.000003814697266
    6. '2' → logprob: -15.125003814697266
    7. 'i' → logprob: -15.875003814697266
    8. ']+' → logprob: -16.125003814697266
    9. ']' → logprob: -16.625003814697266
    10. '`' → logprob: -16.937503814697266

Token 2475: ':r' (ID: 118417)
  Prédit: ':r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':r' → logprob: -0.12418659031391144
    2. ':' → logprob: -2.3741865158081055
    3. '[r' → logprob: -3.9991865158081055
    4. ' :' → logprob: -5.3741865158081055
    5. ':l' → logprob: -8.124186515808105
    6. '+' → logprob: -8.749186515808105
    7. '][' → logprob: -8.999186515808105
    8. ']' → logprob: -10.749186515808105
    9. '   ' → logprob: -10.874186515808105
    10. '[' → logprob: -11.124186515808105

Token 2476: '].
' (ID: 49887)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.19665715098381042
    2. '])' → logprob: -1.9466571807861328
    3. '[l' → logprob: -3.571657180786133
    4. '],' → logprob: -5.696657180786133
    5. '   ' → logprob: -6.071657180786133
    6. '(l' → logprob: -7.571657180786133
    7. ')' → logprob: -8.321657180786133
    8. ']);' → logprob: -8.821657180786133
    9. ']):' → logprob: -8.946657180786133
    10. '[' → logprob: -9.196657180786133

Token 2477: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.29219505190849304
    2. '*' → logprob: -2.7921950817108154
    3. ' ans' → logprob: -3.0421950817108154
    4. '```' → logprob: -3.0421950817108154
    5. '*=' → logprob: -3.9171950817108154
    6. '=' → logprob: -4.042194843292236
    7. '(ans' → logprob: -4.167194843292236
    8. '   ' → logprob: -4.417194843292236
    9. ' *=' → logprob: -4.542194843292236
    10. '[' → logprob: -4.542194843292236

Token 2478: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.028014784678816795
    2. ' ans' → logprob: -3.653014898300171
    3. '(ans' → logprob: -6.653014659881592
    4. '   ' → logprob: -9.02801513671875
    5. '```' → logprob: -9.15301513671875
    6. '	ans' → logprob: -9.40301513671875
    7. '*' → logprob: -10.40301513671875
    8. '`' → logprob: -10.77801513671875
    9. '=' → logprob: -10.90301513671875
    10. '*=' → logprob: -11.27801513671875

Token 2479: ' *=' (ID: 25253)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.5129634141921997
    2. '=' → logprob: -1.1379634141921997
    3. ' *=' → logprob: -2.76296329498291
    4. ' =' → logprob: -4.13796329498291
    5. '```' → logprob: -7.13796329498291
    6. '   ' → logprob: -7.13796329498291
    7. '*' → logprob: -9.13796329498291
    8. '	' → logprob: -10.76296329498291
    9. '#' → logprob: -11.51296329498291
    10. '\' → logprob: -12.01296329498291

Token 2480: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -1.981667537620524e-06
    2. ' solve' → logprob: -13.500001907348633
    3. '(s' → logprob: -14.750001907348633
    4. '   ' → logprob: -15.625001907348633
    5. 'pow' → logprob: -17.500001907348633
    6. 'mod' → logprob: -17.625001907348633
    7. '(' → logprob: -18.875001907348633
    8. 'sol' → logprob: -19.375001907348633
    9. '.solve' → logprob: -19.625001907348633
    10. '```' → logprob: -19.875001907348633

Token 2481: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.20231884717941284
    2. '(' → logprob: -1.7023189067840576
    3. ' (' → logprob: -7.3273186683654785
    4. '(h' → logprob: -8.827319145202637
    5. '<|end|>' → logprob: -9.952319145202637
    6. '(
' → logprob: -10.327319145202637
    7. 'H' → logprob: -11.202319145202637
    8. '(space' → logprob: -13.452319145202637
    9. ' H' → logprob: -13.952319145202637
    10. '([' → logprob: -14.077319145202637

Token 2482: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.00034297199454158545
    2. '[' → logprob: -8.250343322753906
    3. '[(' → logprob: -10.250343322753906
    4. '   ' → logprob: -10.750343322753906
    5. '[
' → logprob: -11.250343322753906
    6. '```' → logprob: -12.750343322753906
    7. ' [' → logprob: -12.875343322753906
    8. '[s' → logprob: -13.875343322753906
    9. ')[' → logprob: -14.125343322753906
    10. '[L' → logprob: -14.250343322753906

Token 2483: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.017268063500523567
    2. ' +' → logprob: -5.142268180847168
    3. '[i' → logprob: -5.267268180847168
    4. 'i' → logprob: -5.392268180847168
    5. '+i' → logprob: -7.267268180847168
    6. '[' → logprob: -8.517268180847168
    7. ']' → logprob: -9.267268180847168
    8. '   ' → logprob: -9.392268180847168
    9. '+l' → logprob: -9.517268180847168
    10. ']+' → logprob: -9.642268180847168

Token 2484: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.869017852295656e-06
    2. ' ' → logprob: -12.625006675720215
    3. '+' → logprob: -13.000006675720215
    4. '   ' → logprob: -14.625006675720215
    5. '```' → logprob: -15.250006675720215
    6. 'i' → logprob: -16.12500762939453
    7. ']' → logprob: -16.37500762939453
    8. ']+' → logprob: -16.50000762939453
    9. '(' → logprob: -16.81250762939453
    10. '2' → logprob: -16.81250762939453

Token 2485: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.87500286102295
    3. '2' → logprob: -14.37500286102295
    4. '```' → logprob: -15.62500286102295
    5. '   ' → logprob: -16.062501907348633
    6. 'i' → logprob: -16.687501907348633
    7. '۱' → logprob: -17.187501907348633
    8. ']' → logprob: -17.500001907348633
    9. '१' → logprob: -17.562501907348633
    10. '১' → logprob: -17.750001907348633

Token 2486: ':r' (ID: 118417)
  Prédit: ':r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':r' → logprob: -0.0024529455695301294
    2. ':' → logprob: -6.252452850341797
    3. ' :' → logprob: -8.002452850341797
    4. '[r' → logprob: -8.627452850341797
    5. '   ' → logprob: -12.627452850341797
    6. 'r' → logprob: -12.752452850341797
    7. '(r' → logprob: -13.502452850341797
    8. '[' → logprob: -14.877452850341797
    9. ' ' → logprob: -15.002452850341797
    10. ';r' → logprob: -15.252452850341797

Token 2487: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.20857757329940796
    2. '])
' → logprob: -1.8335776329040527
    3. ')' → logprob: -4.083577632904053
    4. ')
' → logprob: -4.583577632904053
    5. '])
' → logprob: -7.083577632904053
    6. ']' → logprob: -7.958577632904053
    7. ')
' → logprob: -9.458577156066895
    8. '   ' → logprob: -10.458577156066895
    9. ']
' → logprob: -11.208577156066895
    10. ')])' → logprob: -11.333577156066895

Token 2488: '   ' (ID: 271)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.5109049677848816
    2. 'ans' → logprob: -1.3859050273895264
    3. '```' → logprob: -2.1359050273895264
    4. '
' → logprob: -4.010904788970947
    5. '%=' → logprob: -5.135904788970947
    6. '(ans' → logprob: -6.260904788970947
    7. ')' → logprob: -6.385904788970947
    8. ' ans' → logprob: -6.885904788970947
    9. ')%' → logprob: -6.885904788970947
    10. '``' → logprob: -7.510904788970947

Token 2489: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.03306667506694794
    2. 'mod' → logprob: -4.033066749572754
    3. ' ans' → logprob: -4.658066749572754
    4. '   ' → logprob: -6.158066749572754
    5. '%' → logprob: -6.533066749572754
    6. '```' → logprob: -7.283066749572754
    7. '(ans' → logprob: -7.908066749572754
    8. ' %=' → logprob: -8.283066749572754
    9. '	ans' → logprob: -9.408066749572754
    10. ' mod' → logprob: -9.408066749572754

Token 2490: ' On' (ID: 2160)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.20176763832569122
    2. ' ans' → logprob: -1.7017676830291748
    3. '   ' → logprob: -8.951767921447754
    4. '```' → logprob: -9.326767921447754
    5. '(ans' → logprob: -9.576767921447754
    6. '	ans' → logprob: -10.201767921447754
    7. '
' → logprob: -11.076767921447754
    8. '_ans' → logprob: -12.201767921447754
    9. '``' → logprob: -12.576767921447754
    10. '`' → logprob: -13.576767921447754

Token 2491: ' prend' (ID: 37463)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.03159883990883827
    2. ' %=' → logprob: -3.5315988063812256
    3. '%' → logprob: -6.781599044799805
    4. 'ans' → logprob: -7.531599044799805
    5. '=' → logprob: -9.156599044799805
    6. ' ' → logprob: -11.031599044799805
    7. ' %' → logprob: -11.781599044799805
    8. '//=' → logprob: -12.031599044799805
    9. ' ans' → logprob: -12.156599044799805
    10. '%s' → logprob: -12.156599044799805

Token 2492: ' le' (ID: 505)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.26254311203956604
    2. 'mod' → logprob: -1.6375430822372437
    3. ' ans' → logprob: -3.512543201446533
    4. '(ans' → logprob: -5.512543201446533
    5. ' mod' → logprob: -6.637543201446533
    6. '%' → logprob: -7.512543201446533
    7. '(mod' → logprob: -8.387542724609375
    8. ' %=' → logprob: -8.512542724609375
    9. ' modulo' → logprob: -8.887542724609375
    10. '%=' → logprob: -10.262542724609375

Token 2493: ' résultat' (ID: 62556)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.08545200526714325
    2. '%' → logprob: -2.835452079772949
    3. ' ans' → logprob: -4.210452079772949
    4. 'mod' → logprob: -5.085452079772949
    5. '%=' → logprob: -7.085452079772949
    6. ' %=' → logprob: -7.585452079772949
    7. '(ans' → logprob: -8.21045207977295
    8. ' %' → logprob: -8.58545207977295
    9. '```' → logprob: -9.08545207977295
    10. '	ans' → logprob: -9.21045207977295

Token 2494: ' modulo' (ID: 112372)
  Prédit: ' %='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.052128251641988754
    2. '%=' → logprob: -3.177128314971924
    3. '%' → logprob: -5.302128314971924
    4. 'ans' → logprob: -6.052128314971924
    5. ' ans' → logprob: -6.927128314971924
    6. '```' → logprob: -8.052127838134766
    7. '(ans' → logprob: -8.427127838134766
    8. ' %' → logprob: -9.677127838134766
    9. ' ' → logprob: -10.177127838134766
    10. '	ans' → logprob: -10.427127838134766

Token 2495: ' '' (ID: 461)
  Prédit: '(mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(mod' → logprob: -0.2721779942512512
    2. 'mod' → logprob: -1.6471779346466064
    3. ' (' → logprob: -3.6471779346466064
    4. ' mod' → logprob: -4.0221781730651855
    5. '(' → logprob: -6.3971781730651855
    6. '	mod' → logprob: -11.272177696228027
    7. '```' → logprob: -11.897177696228027
    8. '`' → logprob: -12.022177696228027
    9. '(ans' → logprob: -12.272177696228027
    10. 'MOD' → logprob: -13.022177696228027

Token 2496: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.003183182328939438
    2. ' mod' → logprob: -5.753183364868164
    3. '(mod' → logprob: -12.128183364868164
    4. '	mod' → logprob: -17.503183364868164
    5. '```' → logprob: -18.628183364868164
    6. '_mod' → logprob: -19.128183364868164
    7. '
' → logprob: -19.378183364868164
    8. 'MOD' → logprob: -19.753183364868164
    9. ' мод' → logprob: -19.753183364868164
    10. '.mod' → logprob: -20.503183364868164

Token 2497: ''.
' (ID: 49980)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.16310346126556396
    2. ')' → logprob: -2.2881035804748535
    3. '   ' → logprob: -3.7881035804748535
    4. 'ans' → logprob: -4.4131035804748535
    5. ' ans' → logprob: -4.6631035804748535
    6. '```' → logprob: -6.6631035804748535
    7. '	ans' → logprob: -6.7881035804748535
    8. '()' → logprob: -7.4131035804748535
    9. '_ans' → logprob: -7.4131035804748535
    10. ')
' → logprob: -8.163103103637695

Token 2498: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.26917383074760437
    2. ' ans' → logprob: -2.5191738605499268
    3. '```' → logprob: -2.7691738605499268
    4. '=' → logprob: -3.1441738605499268
    5. '\n' → logprob: -4.519173622131348
    6. '(ans' → logprob: -4.644173622131348
    7. '``' → logprob: -5.019173622131348
    8. '\' → logprob: -5.144173622131348
    9. ' =' → logprob: -5.269173622131348
    10. '`' → logprob: -5.519173622131348

Token 2499: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.2282516211271286
    2. '=' → logprob: -2.4782516956329346
    3. ' ans' → logprob: -3.1032516956329346
    4. '```' → logprob: -3.7282516956329346
    5. 'mod' → logprob: -3.8532516956329346
    6. ' %=' → logprob: -4.9782514572143555
    7. '``' → logprob: -5.3532514572143555
    8. '`' → logprob: -5.6032514572143555
    9. '%=' → logprob: -5.6032514572143555
    10. '\' → logprob: -5.7282514572143555

Token 2500: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.06234610825777054
    2. ' %=' → logprob: -2.8123462200164795
    3. '%' → logprob: -8.687346458435059
    4. '```' → logprob: -8.687346458435059
    5. '=' → logprob: -10.812346458435059
    6. ' ' → logprob: -12.062346458435059
    7. ')%' → logprob: -12.687346458435059
    8. '	' → logprob: -12.937346458435059
    9. ')' → logprob: -13.062346458435059
    10. '``' → logprob: -13.062346458435059

Token 2501: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -3.583550642360933e-05
    2. ' mod' → logprob: -10.250036239624023
    3. '(mod' → logprob: -14.875036239624023
    4. '```' → logprob: -19.000036239624023
    5. '	mod' → logprob: -19.000036239624023
    6. '10' → logprob: -19.750036239624023
    7. 'MOD' → logprob: -20.375036239624023
    8. ' мод' → logprob: -21.000036239624023
    9. '1' → logprob: -22.625036239624023
    10. '100' → logprob: -22.750036239624023

Token 2502: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -8.315936429426074e-05
    2. '<|end|>' → logprob: -9.625082969665527
    3. '```' → logprob: -11.875082969665527
    4. '#' → logprob: -12.375082969665527
    5. '#print' → logprob: -12.875082969665527
    6. 'return' → logprob: -13.750082969665527
    7. '
' → logprob: -13.875082969665527
    8. ' print' → logprob: -14.375082969665527
    9. 'pr' → logprob: -15.250082969665527
    10. '(print' → logprob: -16.000083923339844

Token 2503: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2504: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. 'pr' → logprob: -18.375
    3. 'prin' → logprob: -19.0
    4. '#print' → logprob: -19.5
    5. ' print' → logprob: -22.375
    6. 'prit' → logprob: -22.625
    7. 'pri' → logprob: -23.125
    8. 'printf' → logprob: -23.625
    9. 'pring' → logprob: -24.5
    10. 'return' → logprob: -24.5

Token 2505: 'ichage' (ID: 118475)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00283210352063179
    2. '#print' → logprob: -6.377831935882568
    3. '#' → logprob: -7.627831935882568
    4. 'ichage' → logprob: -8.627832412719727
    5. '```' → logprob: -8.877832412719727
    6. 'prin' → logprob: -9.127832412719727
    7. 'pr' → logprob: -9.502832412719727
    8. ' print' → logprob: -9.752832412719727
    9. '(print' → logprob: -10.627832412719727
    10. '_print' → logprob: -11.127832412719727

Token 2506: ' du' (ID: 1462)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.4849443838757e-06
    2. '(print' → logprob: -13.375004768371582
    3. '```' → logprob: -13.500004768371582
    4. 'ans' → logprob: -14.375004768371582
    5. ' print' → logprob: -15.250004768371582
    6. '()
' → logprob: -15.375004768371582
    7. '#print' → logprob: -15.875004768371582
    8. '(' → logprob: -16.250003814697266
    9. '(ans' → logprob: -16.625003814697266
    10. '()' → logprob: -17.250003814697266

Token 2507: ' résultat' (ID: 62556)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.048931267112493515
    2. 'ans' → logprob: -3.048931360244751
    3. '(' → logprob: -8.048931121826172
    4. '(
' → logprob: -11.173931121826172
    5. 'answer' → logprob: -12.673931121826172
    6. 'print' → logprob: -13.048931121826172
    7. 'result' → logprob: -13.048931121826172
    8. '(answer' → logprob: -13.548931121826172
    9. ' ans' → logprob: -14.548931121826172
    10. '	ans' → logprob: -15.298931121826172

Token 2508: ' final' (ID: 1721)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.7159857786027715e-05
    2. '```' → logprob: -10.000046730041504
    3. '``' → logprob: -13.500046730041504
    4. '
' → logprob: -16.37504768371582
    5. '`
' → logprob: -16.62504768371582
    6. '#print' → logprob: -18.00004768371582
    7. '`' → logprob: -18.37504768371582
    8. ' print' → logprob: -18.37504768371582
    9. '(print' → logprob: -19.25004768371582
    10. '.print' → logprob: -20.12504768371582

Token 2509: ' sur' (ID: 1512)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0001613459608051926
    2. '```' → logprob: -8.750161170959473
    3. '``' → logprob: -13.000161170959473
    4. '
' → logprob: -14.625161170959473
    5. '`
' → logprob: -16.75016212463379
    6. '(print' → logprob: -16.87516212463379
    7. '`' → logprob: -17.12516212463379
    8. ' print' → logprob: -17.62516212463379
    9. '()
' → logprob: -18.12516212463379
    10. '#print' → logprob: -18.37516212463379

Token 2510: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2017500251531601
    2. 'stdout' → logprob: -2.2017500400543213
    3. 'la' → logprob: -3.5767500400543213
    4. '```' → logprob: -4.576749801635742
    5. '()' → logprob: -5.576749801635742
    6. 'un' → logprob: -5.576749801635742
    7. ')' → logprob: -5.576749801635742
    8. 'une' → logprob: -5.951749801635742
    9. '()
' → logprob: -5.951749801635742
    10. 'ans' → logprob: -5.951749801635742

Token 2511: ' sortie' (ID: 52761)
  Prédit: 'stdout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdout' → logprob: -0.7359590530395508
    2. 'print' → logprob: -1.3609590530395508
    3. 'standard' → logprob: -1.7359590530395508
    4. 'e' → logprob: -3.360959053039551
    5. 'output' → logprob: -3.485959053039551
    6. '```' → logprob: -4.985959053039551
    7. 'é' → logprob: -5.610959053039551
    8. 'result' → logprob: -6.235959053039551
    9. 'console' → logprob: -6.360959053039551
    10. ' standard' → logprob: -6.735959053039551

Token 2512: ' standard' (ID: 7024)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10618355870246887
    2. 'print' → logprob: -2.3561835289001465
    3. '()
' → logprob: -5.9811835289001465
    4. '(ans' → logprob: -6.3561835289001465
    5. '(' → logprob: -6.8561835289001465
    6. '(print' → logprob: -7.8561835289001465
    7. '()`' → logprob: -8.981184005737305
    8. '```' → logprob: -9.606184005737305
    9. 'ans' → logprob: -10.731184005737305
    10. '()
' → logprob: -10.981184005737305

Token 2513: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.080963092041202e-06
    2. '```' → logprob: -12.250004768371582
    3. '``' → logprob: -16.5000057220459
    4. '
' → logprob: -16.7500057220459
    5. '(print' → logprob: -18.0000057220459
    6. 'pr' → logprob: -18.2500057220459
    7. '#print' → logprob: -18.3750057220459
    8. ' print' → logprob: -18.5000057220459
    9. '`' → logprob: -19.1250057220459
    10. '`
' → logprob: -19.2500057220459

Token 2514: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.627176768844947e-05
    2. '```' → logprob: -9.250096321105957
    3. '``' → logprob: -16.25009536743164
    4. ' print' → logprob: -19.62509536743164
    5. 'pr' → logprob: -19.62509536743164
    6. '`' → logprob: -19.87509536743164
    7. '#print' → logprob: -21.25009536743164
    8. 'println' → logprob: -22.62509536743164
    9. '
' → logprob: -22.75009536743164
    10. 'prin' → logprob: -22.75009536743164

Token 2515: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -2.8087270038668066e-05
    2. '(' → logprob: -10.500027656555176
    3. 'ans' → logprob: -14.875027656555176
    4. '()' → logprob: -16.500028610229492
    5. ' (' → logprob: -17.500028610229492
    6. '(answer' → logprob: -17.750028610229492
    7. '((' → logprob: -18.500028610229492
    8. '(
' → logprob: -18.625028610229492
    9. '	ans' → logprob: -20.000028610229492
    10. '(abs' → logprob: -20.500028610229492

Token 2516: ')' (ID: 8)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.15036581456661224
    2. ')' → logprob: -2.2753658294677734
    3. '())' → logprob: -3.4003658294677734
    4. '(' → logprob: -6.775365829467773
    5. '()
' → logprob: -7.025365829467773
    6. '```' → logprob: -8.150365829467773
    7. '\' → logprob: -8.525365829467773
    8. '<|end|>' → logprob: -8.775365829467773
    9. '#' → logprob: -8.900365829467773
    10. '("")' → logprob: -9.275365829467773


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 2514
Tokens correctement prédits (1ère position, stricte): 545
Tokens correctement prédits (1ère position, avec adaptation): 594
Tokens correctement prédits (top 10): 1404
Précision stricte (1ère position): 21.68%
Précision adaptée (1ère position): 23.63%
Précision (top 10): 55.85%
================================================================================
