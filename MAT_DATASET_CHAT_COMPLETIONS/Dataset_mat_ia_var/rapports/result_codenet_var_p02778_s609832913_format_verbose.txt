================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:26:56
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import collections

input_string = input()

masked_string = 'x' * len(input_string)

print(masked_string)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0018280998338013887
    2. '.Counter' → logprob: -6.626828193664551
    3. 'import' → logprob: -8.87682819366455
    4. ',' → logprob: -10.00182819366455
    5. '\' → logprob: -10.00182819366455
    6. '_' → logprob: -10.25182819366455
    7. 'Counter' → logprob: -10.37682819366455
    8. '.default' → logprob: -10.62682819366455
    9. '.
' → logprob: -11.00182819366455
    10. '' → logprob: -11.12682819366455

Token 4: '_string' (ID: 8609)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.26053133606910706
    2. '_' → logprob: -2.260531425476074
    3. '.' → logprob: -2.385531425476074
    4. '=' → logprob: -4.260531425476074
    5. '[' → logprob: -5.135531425476074
    6. 's' → logprob: -5.635531425476074
    7. ' =' → logprob: -5.885531425476074
    8. '_data' → logprob: -6.760531425476074
    9. '```' → logprob: -7.385531425476074
    10. ':' → logprob: -7.510531425476074

Token 5: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005270395893603563
    2. '.' → logprob: -5.630270481109619
    3. '=' → logprob: -6.755270481109619
    4. '(' → logprob: -9.255270004272461
    5. ')' → logprob: -9.505270004272461
    6. '[]' → logprob: -9.630270004272461
    7. '[
' → logprob: -10.130270004272461
    8. '[:]' → logprob: -10.130270004272461
    9. ''' → logprob: -10.380270004272461
    10. '\[' → logprob: -10.880270004272461

Token 6: ' input' (ID: 3422)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.06475452333688736
    2. ''' → logprob: -3.3147544860839844
    3. ' ' → logprob: -3.6897544860839844
    4. ' "' → logprob: -6.939754486083984
    5. '"""' → logprob: -8.814754486083984
    6. ' '' → logprob: -9.689754486083984
    7. 'input' → logprob: -10.064754486083984
    8. ' ' → logprob: -10.939754486083984
    9. 'collections' → logprob: -10.939754486083984
    10. '"user' → logprob: -11.314754486083984

Token 7: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0017246805364266038
    2. '('' → logprob: -7.501724720001221
    3. ''' → logprob: -7.626724720001221
    4. '```' → logprob: -8.626724243164062
    5. '(
' → logprob: -9.001724243164062
    6. '("("' → logprob: -9.376724243164062
    7. '"' → logprob: -9.751724243164062
    8. '[' → logprob: -9.876724243164062
    9. ' (' → logprob: -10.626724243164062
    10. ')' → logprob: -10.626724243164062

Token 8: 'masked' (ID: 179043)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.16464592516422272
    2. '_' → logprob: -2.0396459102630615
    3. '=' → logprob: -4.289646148681641
    4. '_counter' → logprob: -5.789646148681641
    5. '_tokens' → logprob: -7.164646148681641
    6. ' =' → logprob: -7.539646148681641
    7. '_count' → logprob: -7.539646148681641
    8. '_token' → logprob: -7.914646148681641
    9. '_counts' → logprob: -8.03964614868164
    10. 's' → logprob: -8.03964614868164

Token 9: '_string' (ID: 8609)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04709789529442787
    2. '=' → logprob: -3.54709792137146
    3. '(' → logprob: -5.172097682952881
    4. '_string' → logprob: -5.797097682952881
    5. '_counts' → logprob: -5.797097682952881
    6. ' =' → logprob: -6.172097682952881
    7. '_chars' → logprob: -6.172097682952881
    8. '_counter' → logprob: -8.797098159790039
    9. '_input' → logprob: -8.922098159790039
    10. '_=' → logprob: -8.922098159790039

Token 10: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08711210638284683
    2. '=' → logprob: -2.7121121883392334
    3. '_' → logprob: -4.462111949920654
    4. '.' → logprob: -5.712111949920654
    5. '[' → logprob: -7.587111949920654
    6. '(' → logprob: -7.712111949920654
    7. '[:]' → logprob: -7.712111949920654
    8. '.replace' → logprob: -8.212112426757812
    9. ' ' → logprob: -8.587112426757812
    10. ')' → logprob: -10.212112426757812

Token 11: ' '' (ID: 461)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.07083795219659805
    2. 'collections' → logprob: -2.82083797454834
    3. ' []' → logprob: -5.07083797454834
    4. ' input' → logprob: -7.07083797454834
    5. '"' → logprob: -7.69583797454834
    6. ' [' → logprob: -8.07083797454834
    7. ' '' → logprob: -8.57083797454834
    8. ' ['' → logprob: -8.57083797454834
    9. ''' → logprob: -9.32083797454834
    10. ' ''' → logprob: -9.44583797454834

Token 12: 'x' (ID: 87)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.05343875661492348
    2. '''' → logprob: -4.178438663482666
    3. 'collections' → logprob: -4.428438663482666
    4. '')' → logprob: -4.678438663482666
    5. ''*' → logprob: -5.803438663482666
    6. ''.' → logprob: -6.053438663482666
    7. ''''' → logprob: -6.178438663482666
    8. '"' → logprob: -6.178438663482666
    9. '*' → logprob: -6.303438663482666
    10. '#' → logprob: -7.053438663482666

Token 13: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.05357593670487404
    2. '*' → logprob: -3.9285759925842285
    3. '')' → logprob: -4.4285759925842285
    4. ''*' → logprob: -4.9285759925842285
    5. '=' → logprob: -6.3035759925842285
    6. ')' → logprob: -6.5535759925842285
    7. ''''' → logprob: -6.5535759925842285
    8. '_' → logprob: -6.6785759925842285
    9. 'x' → logprob: -6.6785759925842285
    10. '+' → logprob: -6.9285759925842285

Token 14: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 15: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.005838499870151281
    2. ' len' → logprob: -5.255838394165039
    3. '(len' → logprob: -7.505838394165039
    4. '10' → logprob: -10.380838394165039
    5. '20' → logprob: -11.755838394165039
    6. '6' → logprob: -12.630838394165039
    7. '7' → logprob: -13.005838394165039
    8. '12' → logprob: -13.255838394165039
    9. '5' → logprob: -13.505838394165039
    10. '8' → logprob: -13.630838394165039

Token 16: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.1002405434846878
    2. '(' → logprob: -2.350240468978882
    3. '(
' → logprob: -10.725240707397461
    4. '(user' → logprob: -12.850240707397461
    5. '(

' → logprob: -12.850240707397461
    6. ' (' → logprob: -13.100240707397461
    7. '(in' → logprob: -13.225240707397461
    8. 'input' → logprob: -14.475240707397461
    9. '(mask' → logprob: -14.725240707397461
    10. '(inp' → logprob: -14.975240707397461

Token 17: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -2.2200749754119897e-06
    2. '_' → logprob: -13.500001907348633
    3. 'string' → logprob: -14.125001907348633
    4. '_strings' → logprob: -18.000001907348633
    5. 'String' → logprob: -18.875001907348633
    6. '_str' → logprob: -18.875001907348633
    7. '_input' → logprob: -19.125001907348633
    8. '_STRING' → logprob: -19.250001907348633
    9. '_)' → logprob: -19.250001907348633
    10. ')' → logprob: -19.375001907348633

Token 18: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.8889261304575484e-06
    2. '')' → logprob: -13.250003814697266
    3. ')
' → logprob: -13.625003814697266
    4. '`)' → logprob: -15.000003814697266
    5. '))' → logprob: -16.000003814697266
    6. ')`' → logprob: -16.375003814697266
    7. ')

' → logprob: -16.625003814697266
    8. '[' → logprob: -16.750003814697266
    9. '#' → logprob: -16.750003814697266
    10. ' )' → logprob: -17.250003814697266

Token 19: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6371551752090454
    2. '<|end|>' → logprob: -0.8871551752090454
    3. '#' → logprob: -4.262155055999756
    4. '
' → logprob: -4.637155055999756
    5. '\n' → logprob: -4.762155055999756
    6. '[' → logprob: -4.887155055999756
    7. ')' → logprob: -5.137155055999756
    8. '.' → logprob: -5.887155055999756
    9. '```' → logprob: -6.262155055999756
    10. '<|end|>' → logprob: -6.762155055999756

Token 20: '(mask' (ID: 80748)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004607895389199257
    2. '(mask' → logprob: -5.504607677459717
    3. '('' → logprob: -7.629607677459717
    4. '("("' → logprob: -10.629608154296875
    5. '(m' → logprob: -12.379608154296875
    6. '(

' → logprob: -12.879608154296875
    7. '(`' → logprob: -13.254608154296875
    8. '(input' → logprob: -13.379608154296875
    9. '((' → logprob: -13.504608154296875
    10. '(f' → logprob: -13.629608154296875

Token 21: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -1.6240566083070007e-06
    2. 'e' → logprob: -14.125001907348633
    3. '_ed' → logprob: -14.625001907348633
    4. ')' → logprob: -16.375001907348633
    5. 'masked' → logprob: -16.625001907348633
    6. '_string' → logprob: -17.250001907348633
    7. '_' → logprob: -17.500001907348633
    8. 'edback' → logprob: -17.500001907348633
    9. ''ed' → logprob: -17.625001907348633
    10. 'eded' → logprob: -17.750001907348633

Token 22: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.04361437261104584
    2. 'ed' → logprob: -3.168614387512207
    3. '_str' → logprob: -8.418614387512207
    4. '_s' → logprob: -8.793614387512207
    5. '_' → logprob: -9.043614387512207
    6. 'e' → logprob: -9.668614387512207
    7. '_e' → logprob: -10.918614387512207
    8. 'string' → logprob: -11.918614387512207
    9. '_ed' → logprob: -12.043614387512207
    10. ' _' → logprob: -12.418614387512207

Token 23: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ' )' → logprob: -14.500001907348633
    3. '')' → logprob: -14.500001907348633
    4. '))' → logprob: -15.125001907348633
    5. '`)' → logprob: -15.375001907348633
    6. ')`' → logprob: -18.000001907348633
    7. '")' → logprob: -18.125001907348633
    8. ')
' → logprob: -19.375001907348633
    9. ')))' → logprob: -19.625001907348633
    10. '```' → logprob: -19.750001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 21
Tokens correctement prédits (1ère position, stricte): 8
Tokens correctement prédits (1ère position, avec adaptation): 8
Tokens correctement prédits (top 10): 13
Précision stricte (1ère position): 38.10%
Précision adaptée (1ère position): 38.10%
Précision (top 10): 61.90%
================================================================================
