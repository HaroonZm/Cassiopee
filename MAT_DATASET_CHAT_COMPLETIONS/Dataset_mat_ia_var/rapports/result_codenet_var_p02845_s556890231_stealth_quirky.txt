================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:36:01
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def __input__():
    return sys.stdin.readline().replace('\n','')

def _int():
    return int(__input__())

seqAsInt = lambda: list(map(int, __input__().split()))

n__ = _int()
__Arr = seqAsInt()
strangeHat = [False]*3
counter256 = 1
modulus = 1000000007

class Box:
    val = 0
    def __init__(self,i=0):self.val = i
    def __eq__(self,other):return self.val==other
    def __str__(self):return str(self.val)
    def __iadd__(self,other):self.val+=other;return self

hat_box = [Box(0),Box(0),Box(0)]

for idx in range(n__):
    occ = sum([hb==__Arr[idx] for hb in hat_box])
    if not occ:
        counter256 = 0
    else:
        counter256 *= occ
        first_idx = next(i for i,hb in enumerate(hat_box) if hb==__Arr[idx])
        hat_box[first_idx] += 1
        counter256 %= modulus

print(+counter256 % modulus)
# EOF
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.042949914932251
    2. '.' → logprob: -1.167949914932251
    3. '<|end|>' → logprob: -2.292949914932251
    4. 'import' → logprob: -2.542949914932251
    5. '' → logprob: -2.542949914932251
    6. '#' → logprob: -3.792949914932251
    7. '\' → logprob: -4.417949676513672
    8. '
' → logprob: -4.792949676513672
    9. 'print' → logprob: -5.042949676513672
    10. ';' → logprob: -5.667949676513672

Token 4: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.021233972162008286
    2. ' main' → logprob: -5.646234035491943
    3. ' ' → logprob: -5.771234035491943
    4. ' space' → logprob: -6.021234035491943
    5. ' process' → logprob: -6.396234035491943
    6. ' sys' → logprob: -6.896234035491943
    7. '  ' → logprob: -7.021234035491943
    8. '_' → logprob: -7.271234035491943
    9. '<|end|>' → logprob: -7.396234035491943
    10. ' a' → logprob: -7.521234035491943

Token 5: 'input' (ID: 2586)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.09573716670274734
    2. 'main' → logprob: -2.5957372188568115
    3. 'exit' → logprob: -4.970736980438232
    4. 'import' → logprob: -5.470736980438232
    5. '_' → logprob: -5.595736980438232
    6. 'name' → logprob: -6.845736980438232
    7. 'version' → logprob: -8.47073745727539
    8. 'ini' → logprob: -8.84573745727539
    9. 'next' → logprob: -9.09573745727539
    10. 'def' → logprob: -10.34573745727539

Token 6: '__' (ID: 771)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03753066807985306
    2. '_' → logprob: -3.5375306606292725
    3. '__' → logprob: -5.787530899047852
    4. '_line' → logprob: -7.412530899047852
    5. '__(' → logprob: -7.662530899047852
    6. '(_' → logprob: -8.162530899047852
    7. '(prompt' → logprob: -8.287530899047852
    8. '('' → logprob: -8.412530899047852
    9. '("("' → logprob: -8.537530899047852
    10. 's' → logprob: -8.537530899047852

Token 7: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00028815300902351737
    2. ' (' → logprob: -9.125288009643555
    3. '_' → logprob: -9.625288009643555
    4. ':' → logprob: -10.625288009643555
    5. '('' → logprob: -11.250288009643555
    6. ')' → logprob: -11.500288009643555
    7. '():' → logprob: -11.625288009643555
    8. '(
' → logprob: -11.750288009643555
    9. '("("' → logprob: -11.875288009643555
    10. '"' → logprob: -11.875288009643555

Token 8: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6548168659210205
    2. 'return' → logprob: -1.7798168659210205
    3. '()' → logprob: -2.4048168659210205
    4. ' ' → logprob: -2.4048168659210205
    5. ' return' → logprob: -2.7798168659210205
    6. '   ' → logprob: -3.6548168659210205
    7. 'input' → logprob: -4.404816627502441
    8. '():' → logprob: -4.529816627502441
    9. ' (' → logprob: -5.654816627502441
    10. ')' → logprob: -5.904816627502441

Token 9: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03931852802634239
    2. ' return' → logprob: -3.789318561553955
    3. 'input' → logprob: -4.414318561553955
    4. '   ' → logprob: -6.789318561553955
    5. ' ' → logprob: -7.039318561553955
    6. 'sys' → logprob: -7.164318561553955
    7. '(' → logprob: -8.539318084716797
    8. ' input' → logprob: -8.664318084716797
    9. 'x' → logprob: -8.914318084716797
    10. 'pass' → logprob: -9.039318084716797

Token 10: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.2712639570236206
    2. ' input' → logprob: -1.7712639570236206
    3. 'input' → logprob: -3.14626407623291
    4. 'sys' → logprob: -3.77126407623291
    5. ' ' → logprob: -6.64626407623291
    6. '"' → logprob: -10.39626407623291
    7. ' ' → logprob: -10.64626407623291
    8. ' int' → logprob: -11.14626407623291
    9. ''' → logprob: -11.52126407623291
    10. 'int' → logprob: -11.64626407623291

Token 11: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.021114690229296684
    2. '.' → logprob: -4.021114826202393
    3. '.argv' → logprob: -6.146114826202393
    4. '.stdout' → logprob: -8.021114349365234
    5. '.readline' → logprob: -8.146114349365234
    6. ' .' → logprob: -9.521114349365234
    7. '.exit' → logprob: -9.771114349365234
    8. '.input' → logprob: -10.021114349365234
    9. '.version' → logprob: -11.896114349365234
    10. '.std' → logprob: -12.146114349365234

Token 12: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.5911288857460022
    2. '.' → logprob: -0.8411288857460022
    3. '.read' → logprob: -4.216128826141357
    4. 'read' → logprob: -8.966129302978516
    5. '.Read' → logprob: -9.591129302978516
    6. '.readlines' → logprob: -9.966129302978516
    7. ' .' → logprob: -11.216129302978516
    8. '.READ' → logprob: -11.216129302978516
    9. ' readline' → logprob: -11.466129302978516
    10. '.write' → logprob: -11.716129302978516

Token 13: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0012786880834028125
    2. '().' → logprob: -7.501278877258301
    3. '()
' → logprob: -7.876278877258301
    4. '(' → logprob: -8.6262788772583
    5. '()\' → logprob: -9.6262788772583
    6. '()(' → logprob: -10.2512788772583
    7. ' ()' → logprob: -10.5012788772583
    8. '()

' → logprob: -10.7512788772583
    9. '()[' → logprob: -12.3762788772583
    10. '(
' → logprob: -12.7512788772583

Token 14: 'replace' (ID: 15208)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0007135047344490886
    2. 'rstrip' → logprob: -7.250713348388672
    3. ' strip' → logprob: -12.625713348388672
    4. '_strip' → logprob: -16.125713348388672
    5. 'str' → logprob: -16.625713348388672
    6. '-strip' → logprob: -17.875713348388672
    7. '(strip' → logprob: -18.125713348388672
    8. 'replace' → logprob: -18.625713348388672
    9. 'read' → logprob: -18.625713348388672
    10. '```' → logprob: -19.250713348388672

Token 15: '('\' (ID: 24345)
  Prédit: '('\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.09061671048402786
    2. '('' → logprob: -2.9656167030334473
    3. '("\' → logprob: -3.9656167030334473
    4. '(' → logprob: -4.215616703033447
    5. '("("' → logprob: -6.965616703033447
    6. '("' → logprob: -7.965616703033447
    7. '('(' → logprob: -9.965617179870605
    8. '('\\' → logprob: -11.090617179870605
    9. '("(' → logprob: -11.215617179870605
    10. '(',' → logprob: -12.590617179870605

Token 16: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.2842308680992573e-05
    2. '\n' → logprob: -10.750022888183594
    3. 'r' → logprob: -13.625022888183594
    4. ' n' → logprob: -16.000022888183594
    5. '	n' → logprob: -19.125022888183594
    6. 'u' → logprob: -19.125022888183594
    7. '0' → logprob: -19.250022888183594
    8. 'x' → logprob: -19.250022888183594
    9. '\\' → logprob: -19.250022888183594
    10. '```' → logprob: -19.250022888183594

Token 17: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.20523643493652344
    2. '',' → logprob: -1.7052364349365234
    3. ''' → logprob: -5.955236434936523
    4. '')' → logprob: -6.830236434936523
    5. '',"' → logprob: -10.080236434936523
    6. '''' → logprob: -10.330236434936523
    7. ',' → logprob: -10.830236434936523
    8. ')' → logprob: -10.955236434936523
    9. ''',' → logprob: -11.080236434936523
    10. '','','' → logprob: -11.955236434936523

Token 18: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -7.135819760151207e-05
    2. ')' → logprob: -10.12507152557373
    3. ''' → logprob: -11.00007152557373
    4. '")' → logprob: -12.62507152557373
    5. ' ')' → logprob: -12.62507152557373
    6. '')
' → logprob: -13.00007152557373
    7. ''))' → logprob: -13.00007152557373
    8. '''' → logprob: -13.87507152557373
    9. '',' → logprob: -14.37507152557373
    10. '<|end|>' → logprob: -14.50007152557373

Token 19: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 20: ' _' (ID: 1175)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.10031676292419434
    2. ' __' → logprob: -3.4753167629241943
    3. ' my' → logprob: -4.225317001342773
    4. ' input' → logprob: -4.600317001342773
    5. ' foo' → logprob: -5.100317001342773
    6. '__' → logprob: -5.475317001342773
    7. ' test' → logprob: -5.600317001342773
    8. ' ' → logprob: -5.850317001342773
    9. ' process' → logprob: -5.975317001342773
    10. ' _' → logprob: -6.100317001342773

Token 21: 'int' (ID: 491)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02965097315609455
    2. 'main' → logprob: -4.529651165008545
    3. '_input' → logprob: -4.779651165008545
    4. '_' → logprob: -4.904651165008545
    5. 'print' → logprob: -7.654651165008545
    6. 'get' → logprob: -7.779651165008545
    7. 'parse' → logprob: -8.029650688171387
    8. '_main' → logprob: -8.029650688171387
    9. 'read' → logprob: -8.654650688171387
    10. 'int' → logprob: -9.654650688171387

Token 22: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.029659191146492958
    2. 'eger' → logprob: -3.9046592712402344
    3. '(' → logprob: -5.904659271240234
    4. '():' → logprob: -6.529659271240234
    5. '('' → logprob: -6.904659271240234
    6. ' ()' → logprob: -7.154659271240234
    7. '32' → logprob: -7.154659271240234
    8. '())' → logprob: -7.779659271240234
    9. '[]' → logprob: -8.654659271240234
    10. 'er' → logprob: -8.779659271240234

Token 23: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.703607976436615
    2. '   ' → logprob: -1.7036080360412598
    3. ' return' → logprob: -2.0786080360412598
    4. 'int' → logprob: -2.4536080360412598
    5. '(int' → logprob: -2.8286080360412598
    6. '()' → logprob: -3.7036080360412598
    7. '(' → logprob: -3.9536080360412598
    8. ' (' → logprob: -6.07860803604126
    9. ' ' → logprob: -6.57860803604126
    10. 'def' → logprob: -6.70360803604126

Token 24: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.19851432740688324
    2. ' return' → logprob: -2.073514223098755
    3. 'int' → logprob: -2.948514223098755
    4. ' int' → logprob: -6.323514461517334
    5. '   ' → logprob: -9.948513984680176
    6. '(int' → logprob: -10.948513984680176
    7. ' ' → logprob: -11.198513984680176
    8. 'ret' → logprob: -11.948513984680176
    9. '  ' → logprob: -12.823513984680176
    10. 'r' → logprob: -13.198513984680176

Token 25: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3135163187980652
    2. 'int' → logprob: -1.31351637840271
    3. '(int' → logprob: -8.313516616821289
    4. '   ' → logprob: -12.188516616821289
    5. '  ' → logprob: -13.313516616821289
    6. ' ' → logprob: -13.313516616821289
    7. '<int' → logprob: -15.063516616821289
    8. '	int' → logprob: -15.438516616821289
    9. '[int' → logprob: -16.18851661682129
    10. '_int' → logprob: -16.43851661682129

Token 26: '(__' (ID: 11782)
  Prédit: '(__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(__' → logprob: -0.0034427845384925604
    2. '(' → logprob: -5.753442764282227
    3. '(_' → logprob: -8.253442764282227
    4. '(sys' → logprob: -13.503442764282227
    5. '((' → logprob: -13.628442764282227
    6. '($__' → logprob: -14.378442764282227
    7. ' (__' → logprob: -14.378442764282227
    8. '__' → logprob: -15.253442764282227
    9. '(
' → logprob: -15.628442764282227
    10. '().__' → logprob: -16.003442764282227

Token 27: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.023251185193657875
    2. '_input' → logprob: -3.7732512950897217
    3. '__' → logprob: -13.2732515335083
    4. ' input' → logprob: -13.2732515335083
    5. '(input' → logprob: -13.6482515335083
    6. 'int' → logprob: -15.0232515335083
    7. 'inp' → logprob: -16.023250579833984
    8. '_' → logprob: -16.273250579833984
    9. '<input' → logprob: -16.273250579833984
    10. '_in' → logprob: -16.398250579833984

Token 28: '__' (ID: 771)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.16304847598075867
    2. '()' → logprob: -1.913048505783081
    3. '__' → logprob: -6.413048267364502
    4. ')' → logprob: -6.913048267364502
    5. '`()' → logprob: -9.66304874420166
    6. '().__' → logprob: -10.53804874420166
    7. ' ())' → logprob: -10.66304874420166
    8. '()))' → logprob: -11.16304874420166
    9. '|()
' → logprob: -11.16304874420166
    10. '__)' → logprob: -11.16304874420166

Token 29: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0012077342253178358
    2. '()' → logprob: -6.7512078285217285
    3. ')' → logprob: -10.50120735168457
    4. ' ())' → logprob: -12.00120735168457
    5. '())
' → logprob: -13.12620735168457
    6. '()))' → logprob: -14.12620735168457
    7. '();)' → logprob: -14.50120735168457
    8. '())

' → logprob: -15.00120735168457
    9. '()]' → logprob: -16.12620735168457
    10. '().' → logprob: -16.37620735168457

Token 30: 'seq' (ID: 27794)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0007015953888185322
    2. '\' → logprob: -8.875701904296875
    3. 'class' → logprob: -9.125701904296875
    4. 'n' → logprob: -9.250701904296875
    5. '<|end|>' → logprob: -9.500701904296875
    6. '\n' → logprob: -9.875701904296875
    7. '#' → logprob: -10.000701904296875
    8. '<|end|>' → logprob: -10.250701904296875
    9. '
' → logprob: -10.375701904296875
    10. '_' → logprob: -11.125701904296875

Token 31: 'As' (ID: 2305)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.6338281631469727
    2. '()' → logprob: -1.3838281631469727
    3. '(' → logprob: -2.5088281631469727
    4. '[' → logprob: -2.8838281631469727
    5. 'ence' → logprob: -3.7588281631469727
    6. ' =' → logprob: -4.508828163146973
    7. '_len' → logprob: -4.633828163146973
    8. 's' → logprob: -4.883828163146973
    9. '_' → logprob: -5.258828163146973
    10. '[]' → logprob: -5.383828163146973

Token 32: 'Int' (ID: 2471)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2509984970092773
    2. 'tring' → logprob: -2.2509984970092773
    3. '[' → logprob: -2.5009984970092773
    4. '=' → logprob: -2.5009984970092773
    5. 'cii' → logprob: -2.8759984970092773
    6. '.append' → logprob: -2.8759984970092773
    7. 'tr' → logprob: -2.8759984970092773
    8. 't' → logprob: -3.0009984970092773
    9. '```' → logprob: -3.6259984970092773
    10. 'e' → logprob: -3.7509984970092773

Token 33: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.37547048926353455
    2. 's' → logprob: -2.2504703998565674
    3. '[]' → logprob: -2.5004703998565674
    4. ')' → logprob: -3.2504703998565674
    5. ' =' → logprob: -4.0004706382751465
    6. '[:]' → logprob: -4.1254706382751465
    7. '=' → logprob: -4.5004706382751465
    8. '.append' → logprob: -4.6254706382751465
    9. '()' → logprob: -5.0004706382751465
    10. '=[]' → logprob: -5.2504706382751465

Token 34: ' lambda' (ID: 27871)
  Prédit: '_int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.23992547392845154
    2. '[]' → logprob: -1.864925503730774
    3. '[Int' → logprob: -3.2399253845214844
    4. '[' → logprob: -4.864925384521484
    5. ' []' → logprob: -5.489925384521484
    6. '[int' → logprob: -5.489925384521484
    7. 'list' → logprob: -6.864925384521484
    8. '_list' → logprob: -6.989925384521484
    9. ' _' → logprob: -8.114925384521484
    10. '_Int' → logprob: -8.239925384521484

Token 35: ':' (ID: 25)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3379596769809723
    2. 's' → logprob: -2.2129597663879395
    3. ' s' → logprob: -2.2129597663879395
    4. 'x' → logprob: -3.2129597663879395
    5. ' seq' → logprob: -4.4629597663879395
    6. ' lst' → logprob: -5.7129597663879395
    7. 'seq' → logprob: -5.9629597663879395
    8. ' sequence' → logprob: -6.0879597663879395
    9. ' list' → logprob: -6.4629597663879395
    10. ' a' → logprob: -6.5879597663879395

Token 36: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.8532363176345825
    2. 'list' → logprob: -1.2282363176345825
    3. 'int' → logprob: -1.7282363176345825
    4. ' int' → logprob: -2.603236198425293
    5. '[int' → logprob: -4.228236198425293
    6. '_int' → logprob: -5.353236198425293
    7. 'map' → logprob: -5.728236198425293
    8. '_list' → logprob: -6.103236198425293
    9. ' map' → logprob: -6.103236198425293
    10. ' [' → logprob: -6.853236198425293

Token 37: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.006739169359207153
    2. '(' → logprob: -5.006739139556885
    3. '(_' → logprob: -11.756739616394043
    4. '(__' → logprob: -11.756739616394043
    5. '_map' → logprob: -12.756739616394043
    6. '(int' → logprob: -12.756739616394043
    7. '(
' → logprob: -13.631739616394043
    8. '(m' → logprob: -14.631739616394043
    9. '(

' → logprob: -15.631739616394043
    10. ' map' → logprob: -16.131738662719727

Token 38: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.007118010427802801
    2. '(' → logprob: -5.007118225097656
    3. '(_' → logprob: -8.132118225097656
    4. 'int' → logprob: -9.632118225097656
    5. '_int' → logprob: -11.007118225097656
    6. '(
' → logprob: -11.632118225097656
    7. ' (' → logprob: -12.257118225097656
    8. '<int' → logprob: -12.882118225097656
    9. '=int' → logprob: -12.882118225097656
    10. ' int' → logprob: -13.007118225097656

Token 39: ',' (ID: 11)
  Prédit: '(__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(__' → logprob: -0.13820914924144745
    2. ',' → logprob: -2.763209104537964
    3. ',__' → logprob: -2.888209104537964
    4. ')(__' → logprob: -5.138209342956543
    5. '(' → logprob: -5.513209342956543
    6. ' (__' → logprob: -9.013209342956543
    7. '(_' → logprob: -9.763209342956543
    8. '(sys' → logprob: -9.888209342956543
    9. ' ,' → logprob: -10.138209342956543
    10. '($__' → logprob: -10.513209342956543

Token 40: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.02390158362686634
    2. ' __' → logprob: -3.7739017009735107
    3. '(__' → logprob: -7.523901462554932
    4. ',__' → logprob: -10.27390193939209
    5. '_input' → logprob: -11.02390193939209
    6. '.__' → logprob: -11.27390193939209
    7. ')__' → logprob: -11.64890193939209
    8. '___' → logprob: -11.77390193939209
    9. '   ' → logprob: -12.39890193939209
    10. ' (__' → logprob: -12.39890193939209

Token 41: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.01819981075823307
    2. '_input' → logprob: -4.018199920654297
    3. '.input' → logprob: -10.018199920654297
    4. '(input' → logprob: -12.893199920654297
    5. ' input' → logprob: -13.018199920654297
    6. '__' → logprob: -15.643199920654297
    7. '	input' → logprob: -16.643199920654297
    8. '<input' → logprob: -16.768199920654297
    9. '输入' → logprob: -16.893199920654297
    10. '_' → logprob: -17.143199920654297

Token 42: '__' (ID: 771)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.2557302415370941
    2. '()' → logprob: -1.5057302713394165
    3. '())))' → logprob: -6.255730152130127
    4. '()))' → logprob: -6.630730152130127
    5. '())' → logprob: -8.630730628967285
    6. '().__' → logprob: -8.755730628967285
    7. ')))' → logprob: -9.380730628967285
    8. ')' → logprob: -9.630730628967285
    9. ' ()' → logprob: -11.505730628967285
    10. '))' → logprob: -11.755730628967285

Token 43: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.398067828034982e-05
    2. '()' → logprob: -10.12507438659668
    3. '()))' → logprob: -11.00007438659668
    4. '())))' → logprob: -11.62507438659668
    5. ')))' → logprob: -12.50007438659668
    6. '))' → logprob: -13.37507438659668
    7. ' ().' → logprob: -13.37507438659668
    8. ')' → logprob: -14.62507438659668
    9. '())' → logprob: -15.25007438659668
    10. '.' → logprob: -15.87507438659668

Token 44: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0015224798116832972
    2. 'strip' → logprob: -6.501522541046143
    3. 'rstrip' → logprob: -11.001522064208984
    4. ' split' → logprob: -12.626522064208984
    5. 'spl' → logprob: -17.126522064208984
    6. '(split' → logprob: -17.376522064208984
    7. 'replace' → logprob: -17.876522064208984
    8. '.split' → logprob: -18.376522064208984
    9. ' strip' → logprob: -18.501522064208984
    10. 'sp' → logprob: -19.376522064208984

Token 45: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.07220911234617233
    2. '()' → logprob: -2.822209119796753
    3. '))' → logprob: -5.197208881378174
    4. '())' → logprob: -5.572208881378174
    5. '('' → logprob: -7.697208881378174
    6. '(' → logprob: -8.197209358215332
    7. '())))' → logprob: -9.822209358215332
    8. '()))
' → logprob: -10.197209358215332
    9. ')' → logprob: -11.447209358215332
    10. ''))' → logprob: -11.947209358215332

Token 46: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7399942874908447
    2. 'def' → logprob: -0.8649942874908447
    3. 'class' → logprob: -3.3649942874908447
    4. 'N' → logprob: -4.114994049072266
    5. 'for' → logprob: -4.239994049072266
    6. 'a' → logprob: -4.364994049072266
    7. '#' → logprob: -4.489994049072266
    8. 'd' → logprob: -5.614994049072266
    9. 'print' → logprob: -6.614994049072266
    10. 's' → logprob: -6.864994049072266

Token 47: '__' (ID: 771)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023686345666646957
    2. '=' → logprob: -3.773686408996582
    3. ' ' → logprob: -8.148686408996582
    4. '<|end|>' → logprob: -10.273686408996582
    5. '  ' → logprob: -10.648686408996582
    6. '.' → logprob: -10.898686408996582
    7. ' =)' → logprob: -10.898686408996582
    8. ')' → logprob: -11.023686408996582
    9. ',' → logprob: -11.398686408996582
    10. ' ,' → logprob: -12.023686408996582

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07691047340631485
    2. '=' → logprob: -2.8269104957580566
    3. ' ' → logprob: -4.326910495758057
    4. '_' → logprob: -6.951910495758057
    5. ',' → logprob: -8.576910018920898
    6. '  ' → logprob: -8.826910018920898
    7. ' _' → logprob: -9.076910018920898
    8. '=int' → logprob: -9.826910018920898
    9. ')' → logprob: -9.951910018920898
    10. ' ,' → logprob: -10.076910018920898

Token 49: ' _' (ID: 1175)
  Prédit: '_int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.0003242607053834945
    2. 'int' → logprob: -8.625324249267578
    3. ' _' → logprob: -9.750324249267578
    4. ' ' → logprob: -10.625324249267578
    5. '_INT' → logprob: -11.125324249267578
    6. '_input' → logprob: -11.375324249267578
    7. '_Int' → logprob: -11.625324249267578
    8. ' int' → logprob: -12.375324249267578
    9. '=int' → logprob: -12.375324249267578
    10. 'Int' → logprob: -12.625324249267578

Token 50: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.007789151277393103
    2. '_int' → logprob: -4.882789134979248
    3. 'nt' → logprob: -8.632789611816406
    4. 'n' → logprob: -13.507789611816406
    5. '(int' → logprob: -13.757789611816406
    6. 'Int' → logprob: -14.382789611816406
    7. ' int' → logprob: -14.507789611816406
    8. '__' → logprob: -15.382789611816406
    9. 't' → logprob: -15.507789611816406
    10. '()' → logprob: -15.507789611816406

Token 51: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0001025895617203787
    2. '()
' → logprob: -9.375102996826172
    3. '()

' → logprob: -11.500102996826172
    4. '(' → logprob: -12.375102996826172
    5. '()\' → logprob: -13.750102996826172
    6. ' ()' → logprob: -14.250102996826172
    7. '()`' → logprob: -14.750102996826172
    8. '()<' → logprob: -15.125102996826172
    9. '()
' → logprob: -15.500102996826172
    10. '())' → logprob: -15.500102996826172

Token 52: '__' (ID: 771)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -1.084789752960205
    2. 'a' → logprob: -1.334789752960205
    3. 'seq' → logprob: -1.334789752960205
    4. 's' → logprob: -3.459789752960205
    5. 'for' → logprob: -3.959789752960205
    6. 'lst' → logprob: -4.459789752960205
    7. 'data' → logprob: -4.709789752960205
    8. 'dp' → logprob: -4.834789752960205
    9. 'A' → logprob: -4.959789752960205
    10. 'res' → logprob: -5.459789752960205

Token 53: 'Arr' (ID: 8977)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.755463182926178
    2. 'seq' → logprob: -1.0054631233215332
    3. ' =' → logprob: -2.505463123321533
    4. 'n' → logprob: -2.880463123321533
    5. '=' → logprob: -5.380463123321533
    6. 'sequence' → logprob: -5.380463123321533
    7. '_' → logprob: -5.755463123321533
    8. 'import' → logprob: -6.380463123321533
    9. 'result' → logprob: -6.380463123321533
    10. 'name' → logprob: -6.505463123321533

Token 54: ' =' (ID: 314)
  Prédit: 'ay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ay' → logprob: -0.01640019379556179
    2. ' =' → logprob: -4.391400337219238
    3. 'ays' → logprob: -6.016400337219238
    4. '=' → logprob: -6.766400337219238
    5. 'Ay' → logprob: -9.016400337219238
    6. 'AY' → logprob: -9.516400337219238
    7. '=[]' → logprob: -10.516400337219238
    8. '[]' → logprob: -11.516400337219238
    9. '__' → logprob: -11.516400337219238
    10. '[:]' → logprob: -11.891400337219238

Token 55: ' seq' (ID: 26775)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.04534962400794029
    2. '[]' → logprob: -3.545349597930908
    3. ' seq' → logprob: -4.295349597930908
    4. '[' → logprob: -7.045349597930908
    5. ' []' → logprob: -7.545349597930908
    6. '(seq' → logprob: -8.545350074768066
    7. '__' → logprob: -9.045350074768066
    8. '_seq' → logprob: -10.170350074768066
    9. 'list' → logprob: -10.420350074768066
    10. ' [' → logprob: -10.795350074768066

Token 56: 'As' (ID: 2305)
  Prédit: 'As'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'As' → logprob: -1.2664456789934775e-06
    2. 'A' → logprob: -14.625000953674316
    3. '_As' → logprob: -14.625000953674316
    4. ' As' → logprob: -16.750001907348633
    5. '```' → logprob: -17.000001907348633
    6. 'AS' → logprob: -17.000001907348633
    7. '_as' → logprob: -17.125001907348633
    8. '(' → logprob: -17.250001907348633
    9. '__' → logprob: -18.125001907348633
    10. 's' → logprob: -18.500001907348633

Token 57: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -0.1397680789232254
    2. 't' → logprob: -2.389768123626709
    3. 'int' → logprob: -3.889768123626709
    4. 'nt' → logprob: -4.264768123626709
    5. 'It' → logprob: -6.139768123626709
    6. 'it' → logprob: -7.014768123626709
    7. '__' → logprob: -7.389768123626709
    8. 'In' → logprob: -8.51476764678955
    9. '_int' → logprob: -9.01476764678955
    10. 'As' → logprob: -10.26476764678955

Token 58: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.319370302458992e-06
    2. '()
' → logprob: -12.375005722045898
    3. '(' → logprob: -15.125005722045898
    4. '()

' → logprob: -15.375005722045898
    5. '()`' → logprob: -16.1250057220459
    6. '()]' → logprob: -16.1250057220459
    7. '()<' → logprob: -16.1250057220459
    8. '()</' → logprob: -16.8750057220459
    9. '())' → logprob: -17.0000057220459
    10. ' ()' → logprob: -17.1250057220459

Token 59: 'str' (ID: 689)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3765150308609009
    2. '__' → logprob: -2.1265149116516113
    3. 'print' → logprob: -2.5015149116516113
    4. 'if' → logprob: -2.6265149116516113
    5. 'max' → logprob: -2.7515149116516113
    6. 'sum' → logprob: -2.8765149116516113
    7. 's' → logprob: -3.3765149116516113
    8. 'n' → logprob: -3.3765149116516113
    9. 'def' → logprob: -3.3765149116516113
    10. 'count' → logprob: -3.5015149116516113

Token 60: 'ange' (ID: 1052)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.005642209202051163
    2. '__' → logprob: -5.630642414093018
    3. '_' → logprob: -7.380642414093018
    4. '(__' → logprob: -8.00564193725586
    5. 'e' → logprob: -8.63064193725586
    6. 'Arr' → logprob: -8.88064193725586
    7. '_ing' → logprob: -9.00564193725586
    8. '___' → logprob: -9.38064193725586
    9. 'ings' → logprob: -9.75564193725586
    10. 'i' → logprob: -9.75564193725586

Token 61: 'Hat' (ID: 80839)
  Prédit: 'Arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Arr' → logprob: -1.5128976106643677
    2. ' =' → logprob: -1.6378976106643677
    3. 's' → logprob: -2.262897491455078
    4. '__' → logprob: -2.887897491455078
    5. '_count' → logprob: -2.887897491455078
    6. '_' → logprob: -3.012897491455078
    7. '_sum' → logprob: -3.262897491455078
    8. 'Sum' → logprob: -3.762897491455078
    9. 'Count' → logprob: -4.137897491455078
    10. '_index' → logprob: -4.262897491455078

Token 62: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03907827287912369
    2. '=' → logprob: -4.789078235626221
    3. 'le' → logprob: -4.914078235626221
    4. '__' → logprob: -5.539078235626221
    5. 'Count' → logprob: -5.789078235626221
    6. '()' → logprob: -5.914078235626221
    7. ' =' → logprob: -6.539078235626221
    8. 'Set' → logprob: -6.789078235626221
    9. 'len' → logprob: -7.039078235626221
    10. 'Sequence' → logprob: -7.414078235626221

Token 63: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.0670140981674194
    2. '0' → logprob: -1.4420140981674194
    3. '[' → logprob: -2.567014217376709
    4. ' []' → logprob: -2.692014217376709
    5. '__' → logprob: -3.067014217376709
    6. 'set' → logprob: -3.192014217376709
    7. ' [' → logprob: -3.567014217376709
    8. 'sum' → logprob: -3.942014217376709
    9. 'sorted' → logprob: -3.942014217376709
    10. 'max' → logprob: -4.067014217376709

Token 64: 'False' (ID: 8168)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.26339951157569885
    2. 'False' → logprob: -1.7633994817733765
    3. '__' → logprob: -3.763399600982666
    4. 'True' → logprob: -4.638399600982666
    5. '(' → logprob: -5.513399600982666
    6. '1' → logprob: -5.638399600982666
    7. '[' → logprob: -5.763399600982666
    8. '-' → logprob: -5.888399600982666
    9. '[]' → logprob: -6.388399600982666
    10. ']' → logprob: -6.638399600982666

Token 65: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05882769450545311
    2. ' for' → logprob: -3.0588276386260986
    3. ',' → logprob: -5.183827877044678
    4. ']*' → logprob: -6.058827877044678
    5. ' ]' → logprob: -7.058827877044678
    6. 'for' → logprob: -7.308827877044678
    7. ')' → logprob: -7.933827877044678
    8. ')]' → logprob: -8.30882740020752
    9. ']*(' → logprob: -10.30882740020752
    10. '()]' → logprob: -10.68382740020752

Token 66: '3' (ID: 18)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5415450930595398
    2. '(n' → logprob: -0.9165450930595398
    3. '(' → logprob: -4.0415449142456055
    4. '100' → logprob: -8.416544914245605
    5. ' (' → logprob: -9.041544914245605
    6. ' n' → logprob: -9.291544914245605
    7. '(len' → logprob: -9.416544914245605
    8. '10' → logprob: -10.916544914245605
    9. '101' → logprob: -11.041544914245605
    10. 'len' → logprob: -11.041544914245605

Token 67: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5795592069625854
    2. '
' → logprob: -1.5795592069625854
    3. '<|end|>' → logprob: -2.329559326171875
    4. ' for' → logprob: -2.579559326171875
    5. '\n' → logprob: -3.454559326171875
    6. ' 
' → logprob: -5.079559326171875
    7. '' → logprob: -5.454559326171875
    8. 'n' → logprob: -5.829559326171875
    9. '
' → logprob: -5.829559326171875
    10. '```' → logprob: -6.079559326171875

Token 68: 'counter' (ID: 32128)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.029098348692059517
    2. ' for' → logprob: -3.9040982723236084
    3. 'if' → logprob: -5.5290985107421875
    4. 'i' → logprob: -6.5290985107421875
    5. '[' → logprob: -7.7790985107421875
    6. 'n' → logprob: -7.9040985107421875
    7. ')' → logprob: -8.279098510742188
    8. '_' → logprob: -8.779098510742188
    9. 's' → logprob: -8.904098510742188
    10. '0' → logprob: -8.904098510742188

Token 69: '256' (ID: 5780)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.142795130610466
    2. '=' → logprob: -2.0177950859069824
    3. 's' → logprob: -9.51779556274414
    4. ' +=' → logprob: -11.26779556274414
    5. ' ' → logprob: -11.39279556274414
    6. '  ' → logprob: -11.89279556274414
    7. '_' → logprob: -12.26779556274414
    8. '+=' → logprob: -13.01779556274414
    9. '<|end|>' → logprob: -13.01779556274414
    10. ')' → logprob: -13.64279556274414

Token 70: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1021077111363411
    2. '=' → logprob: -2.3521077632904053
    3. '[' → logprob: -6.602107524871826
    4. 's' → logprob: -7.977107524871826
    5. ' +=' → logprob: -9.977108001708984
    6. ' ' → logprob: -9.977108001708984
    7. '[]' → logprob: -10.727108001708984
    8. '_' → logprob: -11.352108001708984
    9. '[:]' → logprob: -11.477108001708984
    10. '+=' → logprob: -11.727108001708984

Token 71: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0038639740087091923
    2. ' ' → logprob: -6.12886381149292
    3. '[' → logprob: -6.50386381149292
    4. ' [' → logprob: -9.503864288330078
    5. '{' → logprob: -10.003864288330078
    6. '3' → logprob: -10.753864288330078
    7. '{}' → logprob: -10.878864288330078
    8. '1' → logprob: -12.628864288330078
    9. '(' → logprob: -12.628864288330078
    10. '000' → logprob: -13.378864288330078

Token 72: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010241291485726833
    2. '[' → logprob: -4.885241508483887
    3. '{}' → logprob: -6.885241508483887
    4. '{' → logprob: -7.260241508483887
    5. '3' → logprob: -8.135241508483887
    6. ' ' → logprob: -8.760241508483887
    7. '__' → logprob: -8.760241508483887
    8. 'n' → logprob: -9.635241508483887
    9. 'seq' → logprob: -10.635241508483887
    10. 'sum' → logprob: -10.885241508483887

Token 73: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6481461524963379
    2. '<|end|>' → logprob: -1.523146152496338
    3. '
' → logprob: -1.773146152496338
    4. ' for' → logprob: -2.898146152496338
    5. '+' → logprob: -4.273146152496338
    6. '0' → logprob: -5.273146152496338
    7. '\n' → logprob: -6.023146152496338
    8. '<|end|>' → logprob: -6.398146152496338
    9. '#' → logprob: -6.773146152496338
    10. '%' → logprob: -6.773146152496338

Token 74: 'mod' (ID: 4847)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04405660182237625
    2. ' for' → logprob: -3.5440566539764404
    3. '
' → logprob: -5.669056415557861
    4. '+' → logprob: -5.794056415557861
    5. '<|end|>' → logprob: -6.044056415557861
    6. 'i' → logprob: -6.919056415557861
    7. 'n' → logprob: -7.294056415557861
    8. '0' → logprob: -7.419056415557861
    9. '\n' → logprob: -7.419056415557861
    10. '*' → logprob: -7.669056415557861

Token 75: 'ulus' (ID: 40006)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014191895723343
    2. '=' → logprob: -1.7014192342758179
    3. ',' → logprob: -13.32641887664795
    4. '_' → logprob: -13.95141887664795
    5. '=int' → logprob: -14.57641887664795
    6. ' ' → logprob: -14.70141887664795
    7. ' =
' → logprob: -14.70141887664795
    8. '=

' → logprob: -14.82641887664795
    9. '_=' → logprob: -15.70141887664795
    10. '  ' → logprob: -15.82641887664795

Token 76: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06994565576314926
    2. '=' → logprob: -2.6949455738067627
    3. ' ' → logprob: -12.069945335388184
    4. ',' → logprob: -13.194945335388184
    5. '_' → logprob: -14.694945335388184
    6. ' =
' → logprob: -14.944945335388184
    7. ':' → logprob: -15.319945335388184
    8. '=int' → logprob: -15.319945335388184
    9. '.' → logprob: -16.3199462890625
    10. '  ' → logprob: -16.4449462890625

Token 77: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.4786819815635681
    2. '10' → logprob: -1.103682041168213
    3. ' ' → logprob: -3.228682041168213
    4. '256' → logprob: -5.353682041168213
    5. '998' → logprob: -5.603682041168213
    6. '1' → logprob: -9.103681564331055
    7. '2' → logprob: -9.228681564331055
    8. '(' → logprob: -9.603681564331055
    9. '257' → logprob: -9.853681564331055
    10. '999' → logprob: -9.978681564331055

Token 78: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.23215335607528687
    2. '10' → logprob: -1.7321534156799316
    3. '256' → logprob: -3.6071534156799316
    4. '998' → logprob: -5.982153415679932
    5. '(' → logprob: -8.982152938842773
    6. '1' → logprob: -9.357152938842773
    7. '257' → logprob: -9.482152938842773
    8. '2' → logprob: -9.732152938842773
    9. ' ' → logprob: -9.732152938842773
    10. 'int' → logprob: -10.107152938842773

Token 79: '000' (ID: 1302)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.027387825772166252
    2. '000' → logprob: -3.902387857437134
    3. '0' → logprob: -5.277387619018555
    4. '3' → logprob: -6.777387619018555
    5. '7' → logprob: -8.527387619018555
    6. '+' → logprob: -9.277387619018555
    7. '**' → logprob: -9.527387619018555
    8. '00' → logprob: -9.902387619018555
    9. '```' → logprob: -9.902387619018555
    10. '09' → logprob: -10.027387619018555

Token 80: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.10605394095182419
    2. '+' → logprob: -3.1060538291931152
    3. '9' → logprob: -3.8560538291931152
    4. '7' → logprob: -4.356053829193115
    5. '0' → logprob: -4.731053829193115
    6. '19' → logprob: -4.856053829193115
    7. '007' → logprob: -5.481053829193115
    8. '009' → logprob: -7.731053829193115
    9. '3' → logprob: -8.356054306030273
    10. ' +' → logprob: -8.856054306030273

Token 81: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00016265720478259027
    2. '9' → logprob: -9.375163078308105
    3. '+' → logprob: -9.625163078308105
    4. ' ' → logprob: -12.125163078308105
    5. ' +' → logprob: -13.000163078308105
    6. '07' → logprob: -13.125163078308105
    7. '0' → logprob: -13.750163078308105
    8. '```' → logprob: -14.875163078308105
    9. '007' → logprob: -15.750163078308105
    10. '3' → logprob: -16.50016212463379

Token 82: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07335695624351501
    2. '<|end|>' → logprob: -2.823356866836548
    3. '\n' → logprob: -5.198357105255127
    4. 'for' → logprob: -5.573357105255127
    5. '
' → logprob: -7.448357105255127
    6. '

' → logprob: -8.448356628417969
    7. '<|end|>' → logprob: -8.573356628417969
    8. '' → logprob: -8.698356628417969
    9. '  
' → logprob: -8.823356628417969
    10. ' 
' → logprob: -8.823356628417969

Token 83: 'class' (ID: 1444)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007738933200016618
    2. 'i' → logprob: -7.625773906707764
    3. ' for' → logprob: -8.500773429870605
    4. 'n' → logprob: -10.500773429870605
    5. ')' → logprob: -11.500773429870605
    6. 'f' → logprob: -11.625773429870605
    7. '_' → logprob: -12.125773429870605
    8. 'if' → logprob: -12.250773429870605
    9. 'def' → logprob: -12.875773429870605
    10. '```' → logprob: -12.875773429870605

Token 84: ' Box' (ID: 11882)
  Prédit: ' Strange'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Strange' → logprob: -0.023290548473596573
    2. ' Solution' → logprob: -4.648290634155273
    3. ' Hat' → logprob: -5.148290634155273
    4. ' ' → logprob: -6.773290634155273
    5. ' Stranger' → logprob: -7.023290634155273
    6. ' Solver' → logprob: -7.023290634155273
    7. ' Str' → logprob: -7.023290634155273
    8. ' strange' → logprob: -7.273290634155273
    9. ' Counter' → logprob: -7.523290634155273
    10. ' Factor' → logprob: -7.648290634155273

Token 85: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00016182278341148049
    2. '():' → logprob: -8.875162124633789
    3. ' :' → logprob: -11.750162124633789
    4. ':
' → logprob: -12.125162124633789
    5. '(object' → logprob: -12.375162124633789
    6. '(' → logprob: -13.000162124633789
    7. ':**' → logprob: -13.875162124633789
    8. '):' → logprob: -15.000162124633789
    9. '<|end|>' → logprob: -15.625162124633789
    10. '>:' → logprob: -16.00016212463379

Token 86: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04915827512741089
    2. ':' → logprob: -4.049158096313477
    3. ' def' → logprob: -4.424158096313477
    4. 'def' → logprob: -4.549158096313477
    5. '<|end|>' → logprob: -5.174158096313477
    6. '	def' → logprob: -6.799158096313477
    7. ':def' → logprob: -8.174158096313477
    8. '    
' → logprob: -8.299158096313477
    9. '<|end|>' → logprob: -8.674158096313477
    10. ':
' → logprob: -8.799158096313477

Token 87: ' val' (ID: 1459)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5129210352897644
    2. '   ' → logprob: -1.2629210948944092
    3. ' def' → logprob: -2.137921094894409
    4. ' pass' → logprob: -8.637921333312988
    5. '__' → logprob: -9.012921333312988
    6. 'pass' → logprob: -10.012921333312988
    7. ' __' → logprob: -10.137921333312988
    8. '...' → logprob: -10.262921333312988
    9. 'class' → logprob: -10.762921333312988
    10. '	def' → logprob: -10.762921333312988

Token 88: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10743764787912369
    2. 'ue' → logprob: -3.1074376106262207
    3. ' =' → logprob: -3.8574376106262207
    4. ':' → logprob: -4.357437610626221
    5. 's' → logprob: -4.857437610626221
    6. '=None' → logprob: -5.107437610626221
    7. 'ues' → logprob: -5.482437610626221
    8. '=[]' → logprob: -6.857437610626221
    9. ',' → logprob: -6.982437610626221
    10. 'u' → logprob: -7.107437610626221

Token 89: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09345830231904984
    2. ' ' → logprob: -2.593458414077759
    3. 'None' → logprob: -4.71845817565918
    4. ' None' → logprob: -5.59345817565918
    5. '[]' → logprob: -7.34345817565918
    6. '1' → logprob: -7.84345817565918
    7. '-' → logprob: -8.46845817565918
    8. ' []' → logprob: -8.71845817565918
    9. '[' → logprob: -9.09345817565918
    10. ' -' → logprob: -9.34345817565918

Token 90: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01951352134346962
    2. 'None' → logprob: -4.0195136070251465
    3. '[]' → logprob: -7.3945136070251465
    4. ' ' → logprob: -8.019513130187988
    5. '1' → logprob: -8.894513130187988
    6. '-' → logprob: -9.019513130187988
    7. ' None' → logprob: -9.519513130187988
    8. 'int' → logprob: -10.644513130187988
    9. '[' → logprob: -11.144513130187988
    10. '[]
' → logprob: -11.644513130187988

Token 91: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 92: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 93: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.19000545144081116
    2. ' def' → logprob: -1.8150054216384888
    3. '   ' → logprob: -5.065005302429199
    4. '	def' → logprob: -6.940005302429199
    5. '__' → logprob: -7.315005302429199
    6. '
' → logprob: -7.565005302429199
    7. ' ' → logprob: -7.565005302429199
    8. '    
' → logprob: -8.8150053024292
    9. ' __' → logprob: -8.9400053024292
    10. '  ' → logprob: -9.4400053024292

Token 94: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0029352677520364523
    2. ' ' → logprob: -6.377935409545898
    3. '__' → logprob: -6.752935409545898
    4. ' def' → logprob: -11.002935409545898
    5. ' init' → logprob: -11.002935409545898
    6. ' ' → logprob: -11.127935409545898
    7. '_' → logprob: -12.502935409545898
    8. ' _' → logprob: -12.502935409545898
    9. '_init' → logprob: -12.502935409545898
    10. '<|end|>' → logprob: -13.502935409545898

Token 95: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.7697225252486533e-06
    2. ' init' → logprob: -13.250003814697266
    3. 'ini' → logprob: -14.250003814697266
    4. 'new' → logprob: -14.875003814697266
    5. 'nit' → logprob: -14.875003814697266
    6. 'int' → logprob: -15.625003814697266
    7. 'inite' → logprob: -15.750003814697266
    8. '	init' → logprob: -16.500003814697266
    9. 'innit' → logprob: -16.875003814697266
    10. '(init' → logprob: -17.750003814697266

Token 96: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.09025005251169205
    2. '(self' → logprob: -2.465250015258789
    3. '(' → logprob: -6.965250015258789
    4. '__' → logprob: -8.090250015258789
    5. ' (' → logprob: -10.840250015258789
    6. '__(
' → logprob: -11.340250015258789
    7. '_(' → logprob: -12.215250015258789
    8. '__((' → logprob: -12.215250015258789
    9. '<>(' → logprob: -12.340250015258789
    10. '<|end|>' → logprob: -12.715250015258789

Token 97: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00024120506714098155
    2. ' self' → logprob: -8.37524127960205
    3. '(self' → logprob: -11.62524127960205
    4. 's' → logprob: -14.00024127960205
    5. '0' → logprob: -14.75024127960205
    6. ',self' → logprob: -16.125240325927734
    7. 'val' → logprob: -16.250240325927734
    8. ' ' → logprob: -16.625240325927734
    9. '_self' → logprob: -17.000240325927734
    10. ')' → logprob: -17.250240325927734

Token 98: ',i' (ID: 25032)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24548253417015076
    2. ' ,' → logprob: -1.8704825639724731
    3. ',val' → logprob: -2.8704824447631836
    4. ',value' → logprob: -4.995482444763184
    5. ',n' → logprob: -10.245482444763184
    6. '):' → logprob: -10.370482444763184
    7. ',num' → logprob: -10.495482444763184
    8. ' ):' → logprob: -11.120482444763184
    9. ',x' → logprob: -11.995482444763184
    10. 'self' → logprob: -11.995482444763184

Token 99: '=' (ID: 28)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.31235963106155396
    2. ',' → logprob: -1.5623595714569092
    3. '=' → logprob: -3.812359571456909
    4. ',val' → logprob: -4.062359809875488
    5. ' ,' → logprob: -4.937359809875488
    6. ')' → logprob: -5.312359809875488
    7. ' ):' → logprob: -6.687359809875488
    8. '):
' → logprob: -6.687359809875488
    9. '=None' → logprob: -6.937359809875488
    10. ',value' → logprob: -6.937359809875488

Token 100: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0030486546456813812
    2. ' ' → logprob: -5.878048419952393
    3. 'None' → logprob: -8.75304889678955
    4. '1' → logprob: -10.25304889678955
    5. ' None' → logprob: -10.75304889678955
    6. ')' → logprob: -11.50304889678955
    7. '-' → logprob: -12.00304889678955
    8. 'int' → logprob: -12.62804889678955
    9. '   ' → logprob: -13.50304889678955
    10. ' -' → logprob: -13.87804889678955

Token 101: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3686266839504242
    2. ',' → logprob: -1.2436267137527466
    3. ',i' → logprob: -4.243626594543457
    4. ')' → logprob: -6.118626594543457
    5. ',val' → logprob: -6.243626594543457
    6. ' ,' → logprob: -7.618626594543457
    7. ' ):' → logprob: -7.868626594543457
    8. ',n' → logprob: -8.368626594543457
    9. ',value' → logprob: -9.743626594543457
    10. '):
' → logprob: -10.243626594543457

Token 102: 'self' (ID: 1156)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.056067001074552536
    2. '<|end|>' → logprob: -3.3060669898986816
    3. '   ' → logprob: -4.431066989898682
    4. '	' → logprob: -6.431066989898682
    5. 'self' → logprob: -7.306066989898682
    6. '    ' → logprob: -7.556066989898682
    7. '        ' → logprob: -7.931066989898682
    8. ' ' → logprob: -7.931066989898682
    9. ' ' → logprob: -8.30606746673584
    10. ' 	' → logprob: -8.43106746673584

Token 103: '.val' (ID: 20368)
  Prédit: '.val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.val' → logprob: -0.089200958609581
    2. '.' → logprob: -2.464200973510742
    3. 'val' → logprob: -9.214200973510742
    4. '.i' → logprob: -9.464200973510742
    5. '.value' → logprob: -9.964200973510742
    6. ' .' → logprob: -11.589200973510742
    7. '<|end|>' → logprob: -11.589200973510742
    8. ',val' → logprob: -13.214200973510742
    9. '	val' → logprob: -13.214200973510742
    10. '​.' → logprob: -13.589200973510742

Token 104: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2017819732427597
    2. ' =' → logprob: -1.951781988143921
    3. '=i' → logprob: -3.201781988143921
    4. ' ' → logprob: -11.9517822265625
    5. '+=' → logprob: -12.3267822265625
    6. '=int' → logprob: -13.2017822265625
    7. ' +=' → logprob: -14.4517822265625
    8. '=
' → logprob: -14.5767822265625
    9. '=}' → logprob: -14.5767822265625
    10. '<|end|>' → logprob: -14.9517822265625

Token 105: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.38707002997398376
    2. ' i' → logprob: -1.1370700597763062
    3. '0' → logprob: -8.637069702148438
    4. ' ' → logprob: -11.012069702148438
    5. ' ' → logprob: -13.137069702148438
    6. '	i' → logprob: -13.387069702148438
    7. 'int' → logprob: -14.137069702148438
    8. '1' → logprob: -14.887069702148438
    9. '_i' → logprob: -15.762069702148438
    10. '{i' → logprob: -16.887069702148438

Token 106: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 107: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.154439315199852
    2. '<|end|>' → logprob: -2.0294392108917236
    3. 'def' → logprob: -5.154439449310303
    4. '<|end|>' → logprob: -6.154439449310303
    5. '   ' → logprob: -6.529439449310303
    6. '    
' → logprob: -7.029439449310303
    7. '

' → logprob: -8.529438972473145
    8. ' 
' → logprob: -8.779438972473145
    9. '.' → logprob: -8.779438972473145
    10. ' def' → logprob: -9.029438972473145

Token 108: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 109: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.13540785014629364
    2. '__' → logprob: -2.2604079246520996
    3. ' add' → logprob: -4.0104079246521
    4. ' get' → logprob: -7.0104079246521
    5. ' increment' → logprob: -7.8854079246521
    6. 'add' → logprob: -8.010407447814941
    7. ' ' → logprob: -8.010407447814941
    8. 'inc' → logprob: -8.260407447814941
    9. 'increment' → logprob: -8.260407447814941
    10. ' inc' → logprob: -8.385407447814941

Token 110: 'eq' (ID: 21725)
  Prédit: 'eq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.46332716941833496
    2. 'add' → logprob: -1.588327169418335
    3. 'lt' → logprob: -2.713327169418335
    4. 'str' → logprob: -3.463327169418335
    5. 'mul' → logprob: -3.838327169418335
    6. 'init' → logprob: -3.838327169418335
    7. 'repr' → logprob: -4.713327407836914
    8. 'int' → logprob: -4.963327407836914
    9. 'i' → logprob: -5.588327407836914
    10. 'l' → logprob: -6.838327407836914

Token 111: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.006199553608894348
    2. '__' → logprob: -5.131199359893799
    3. '(' → logprob: -8.381199836730957
    4. '(self' → logprob: -10.756199836730957
    5. '__((' → logprob: -11.631199836730957
    6. '__(
' → logprob: -12.631199836730957
    7. '_(' → logprob: -12.881199836730957
    8. '__('' → logprob: -13.006199836730957
    9. '__(*' → logprob: -14.006199836730957
    10. '_' → logprob: -14.256199836730957

Token 112: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02672160230576992
    2. 'other' → logprob: -3.776721715927124
    3. ' self' → logprob: -5.901721477508545
    4. ',' → logprob: -7.901721477508545
    5. ' other' → logprob: -8.651721954345703
    6. ',self' → logprob: -9.401721954345703
    7. ' ' → logprob: -10.401721954345703
    8. 's' → logprob: -10.526721954345703
    9. 'obj' → logprob: -11.026721954345703
    10. 'o' → logprob: -11.151721954345703

Token 113: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.054228585213422775
    2. ',self' → logprob: -3.6792285442352295
    3. ' ,' → logprob: -4.054228782653809
    4. ',obj' → logprob: -4.679228782653809
    5. ',o' → logprob: -8.179228782653809
    6. ',value' → logprob: -8.804228782653809
    7. ',s' → logprob: -8.929228782653809
    8. 'self' → logprob: -9.429228782653809
    9. ',a' → logprob: -9.929228782653809
    10. ',val' → logprob: -10.429228782653809

Token 114: 'other' (ID: 2141)
  Prédit: 'other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.051031287759542465
    2. ' other' → logprob: -3.1760313510894775
    3. 'o' → logprob: -4.926031112670898
    4. ' o' → logprob: -7.801031112670898
    5. '__' → logprob: -9.426031112670898
    6. 'obj' → logprob: -9.551031112670898
    7. 'rhs' → logprob: -10.176031112670898
    8. 'oth' → logprob: -10.301031112670898
    9. 'b' → logprob: -10.301031112670898
    10. ' __' → logprob: -10.676031112670898

Token 115: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0023738660383969545
    2. ' ):' → logprob: -6.252373695373535
    3. ')' → logprob: -8.127373695373535
    4. ',' → logprob: -10.002373695373535
    5. ':' → logprob: -10.002373695373535
    6. '):
' → logprob: -10.002373695373535
    7. ' )' → logprob: -11.502373695373535
    8. ',obj' → logprob: -13.877373695373535
    9. ':)' → logprob: -14.377373695373535
    10. '):

' → logprob: -15.002373695373535

Token 116: 'return' (ID: 1034)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.28888213634490967
    2. ' self' → logprob: -2.038882255554199
    3. 'return' → logprob: -2.288882255554199
    4. 'self' → logprob: -4.288882255554199
    5. '       ' → logprob: -6.038882255554199
    6. '    ' → logprob: -6.413882255554199
    7. '(self' → logprob: -6.913882255554199
    8. ' if' → logprob: -8.0388822555542
    9. '   ' → logprob: -9.4138822555542
    10. ' (' → logprob: -10.0388822555542

Token 117: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07427462935447693
    2. ' self' → logprob: -2.8242745399475098
    3. ' isinstance' → logprob: -4.82427453994751
    4. 'is' → logprob: -5.82427453994751
    5. 'type' → logprob: -7.07427453994751
    6. ' type' → logprob: -8.324275016784668
    7. '(self' → logprob: -9.699275016784668
    8. 'False' → logprob: -10.699275016784668
    9. 'True' → logprob: -11.324275016784668
    10. ' (' → logprob: -11.574275016784668

Token 118: '.val' (ID: 20368)
  Prédit: '.val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.val' → logprob: -0.0005772201111540198
    2. '.' → logprob: -8.125576972961426
    3. 'val' → logprob: -8.250576972961426
    4. '<|end|>' → logprob: -11.875576972961426
    5. ' .' → logprob: -12.125576972961426
    6. '==' → logprob: -13.000576972961426
    7. ' ==' → logprob: -13.625576972961426
    8. '	val' → logprob: -14.125576972961426
    9. '.eql' → logprob: -14.250576972961426
    10. '<|end|>' → logprob: -14.500576972961426

Token 119: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5759516358375549
    2. ' ==' → logprob: -0.8259516358375549
    3. ' ' → logprob: -12.82595157623291
    4. '!=' → logprob: -12.95095157623291
    5. ' ' → logprob: -13.45095157623291
    6. ' !=' → logprob: -13.45095157623291
    7. ' is' → logprob: -14.20095157623291
    8. '()==' → logprob: -14.32595157623291
    9. '=' → logprob: -14.45095157623291
    10. ')==' → logprob: -14.82595157623291

Token 120: 'other' (ID: 2141)
  Prédit: 'other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.018154622986912727
    2. ' other' → logprob: -4.018154621124268
    3. '0' → logprob: -13.018155097961426
    4. ' ' → logprob: -13.393155097961426
    5. '(other' → logprob: -14.393155097961426
    6. '.other' → logprob: -16.14315414428711
    7. '  ' → logprob: -16.89315414428711
    8. 'Other' → logprob: -17.01815414428711
    9. '   ' → logprob: -17.26815414428711
    10. 'self' → logprob: -17.89315414428711

Token 121: '
' (ID: 198)
  Prédit: '.val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.val' → logprob: -0.0009206312242895365
    2. '.' → logprob: -7.00092077255249
    3. ' .' → logprob: -12.125920295715332
    4. 'val' → logprob: -12.625920295715332
    5. ' ' → logprob: -16.87592124938965
    6. '.value' → logprob: -17.12592124938965
    7. '.obj' → logprob: -17.75092124938965
    8. '```' → logprob: -17.87592124938965
    9. '.valor' → logprob: -17.87592124938965
    10. '__.' → logprob: -18.37592124938965

Token 122: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 123: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 124: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4913829267024994
    2. ' __' → logprob: -0.9913829565048218
    3. 'ne' → logprob: -5.366383075714111
    4. 'lt' → logprob: -5.491383075714111
    5. 'eq' → logprob: -5.616383075714111
    6. ' def' → logprob: -7.116383075714111
    7. 'def' → logprob: -7.116383075714111
    8. ' ne' → logprob: -7.366383075714111
    9. ' eq' → logprob: -7.491383075714111
    10. ' lt' → logprob: -7.991383075714111

Token 125: 'str' (ID: 689)
  Prédit: 'lt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lt' → logprob: -0.7461966872215271
    2. 'hash' → logprob: -0.9961966872215271
    3. 'ne' → logprob: -2.746196746826172
    4. 'add' → logprob: -3.371196746826172
    5. 'str' → logprob: -4.621196746826172
    6. 'le' → logprob: -4.871196746826172
    7. 'int' → logprob: -4.871196746826172
    8. 'eq' → logprob: -4.871196746826172
    9. 'repr' → logprob: -4.996196746826172
    10. 'ge' → logprob: -5.871196746826172

Token 126: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.005364079028367996
    2. '__' → logprob: -5.255363941192627
    3. '(self' → logprob: -9.630364418029785
    4. '__(
' → logprob: -10.505364418029785
    5. '__('' → logprob: -10.505364418029785
    6. '__((' → logprob: -12.130364418029785
    7. '__("' → logprob: -12.880364418029785
    8. '___' → logprob: -14.255364418029785
    9. '(' → logprob: -14.880364418029785
    10. '__.__' → logprob: -15.130364418029785

Token 127: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00015741224342491478
    2. '(self' → logprob: -9.125157356262207
    3. ' self' → logprob: -10.000157356262207
    4. 's' → logprob: -13.375157356262207
    5. ')' → logprob: -13.750157356262207
    6. ')(' → logprob: -15.875157356262207
    7. 'def' → logprob: -16.375158309936523
    8. '   ' → logprob: -17.250158309936523
    9. '	self' → logprob: -17.375158309936523
    10. '
' → logprob: -17.625158309936523

Token 128: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04180381819605827
    2. '):
' → logprob: -3.2918038368225098
    3. ')' → logprob: -5.66680383682251
    4. '():' → logprob: -9.291803359985352
    5. ' ):' → logprob: -9.916803359985352
    6. 'self' → logprob: -10.291803359985352
    7. ')return' → logprob: -10.541803359985352
    8. '__' → logprob: -10.916803359985352
    9. '):

' → logprob: -11.416803359985352
    10. '():
' → logprob: -11.541803359985352

Token 129: 'return' (ID: 1034)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.05886837840080261
    2. ' str' → logprob: -3.058868408203125
    3. 'f' → logprob: -4.933868408203125
    4. 'return' → logprob: -6.058868408203125
    5. ' f' → logprob: -7.808868408203125
    6. '   ' → logprob: -9.058868408203125
    7. '"' → logprob: -9.683868408203125
    8. ' return' → logprob: -9.933868408203125
    9. ' ' → logprob: -10.933868408203125
    10. ''' → logprob: -11.183868408203125

Token 130: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.028377307578921318
    2. ' str' → logprob: -3.6533772945404053
    3. 'f' → logprob: -6.278377532958984
    4. ' f' → logprob: -9.028377532958984
    5. '"' → logprob: -10.403377532958984
    6. ' ' → logprob: -10.903377532958984
    7. ''' → logprob: -11.153377532958984
    8. '(str' → logprob: -12.153377532958984
    9. '	str' → logprob: -13.278377532958984
    10. 'repr' → logprob: -13.278377532958984

Token 131: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00011164903844473884
    2. '(' → logprob: -9.12511157989502
    3. '(val' → logprob: -13.50011157989502
    4. 'self' → logprob: -14.12511157989502
    5. 'val' → logprob: -15.62511157989502
    6. '((' → logprob: -15.87511157989502
    7. '(s' → logprob: -15.87511157989502
    8. ' (' → logprob: -17.125112533569336
    9. '(int' → logprob: -17.500112533569336
    10. '(
' → logprob: -17.625112533569336

Token 132: '.val' (ID: 20368)
  Prédit: '.val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.val' → logprob: -1.0921942703134846e-05
    2. '.' → logprob: -11.50001049041748
    3. ').' → logprob: -15.00001049041748
    4. ' .' → logprob: -15.00001049041748
    5. 'val' → logprob: -16.375011444091797
    6. '.value' → logprob: -17.625011444091797
    7. ')' → logprob: -18.875011444091797
    8. '().' → logprob: -19.125011444091797
    9. '.v' → logprob: -20.125011444091797
    10. '.obj' → logprob: -20.500011444091797

Token 133: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.7372048862162046e-05
    2. '())' → logprob: -11.125027656555176
    3. '<|end|>' → logprob: -12.750027656555176
    4. ')return' → logprob: -13.250027656555176
    5. '))' → logprob: -13.500027656555176
    6. '()' → logprob: -13.625027656555176
    7. ' )' → logprob: -13.750027656555176
    8. '+' → logprob: -14.000027656555176
    9. '+)' → logprob: -14.250027656555176
    10. ')
' → logprob: -15.125027656555176

Token 134: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 135: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.43181777000427246
    2. '   ' → logprob: -1.5568177700042725
    3. '<|end|>' → logprob: -2.3068177700042725
    4. '*' → logprob: -4.931818008422852
    5. '=' → logprob: -5.056818008422852
    6. '    
' → logprob: -5.306818008422852
    7. '
' → logprob: -5.806818008422852
    8. '<|end|>' → logprob: -5.931818008422852
    9. ' def' → logprob: -6.056818008422852
    10. '+' → logprob: -6.181818008422852

Token 136: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2100437432527542
    2. ' __' → logprob: -1.9600437879562378
    3. 'add' → logprob: -3.9600436687469482
    4. ' add' → logprob: -4.460043907165527
    5. 'hash' → logprob: -5.585043907165527
    6. '_add' → logprob: -5.710043907165527
    7. 'repr' → logprob: -6.085043907165527
    8. 'mul' → logprob: -6.710043907165527
    9. 'lt' → logprob: -6.960043907165527
    10. ' hash' → logprob: -7.335043907165527

Token 137: 'i' (ID: 72)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.8253599405288696
    2. 'lt' → logprob: -1.2003599405288696
    3. 'add' → logprob: -2.07535982131958
    4. 'repr' → logprob: -2.70035982131958
    5. 'int' → logprob: -3.45035982131958
    6. 'mul' → logprob: -4.82535982131958
    7. 'sub' → logprob: -5.07535982131958
    8. 'ne' → logprob: -5.45035982131958
    9. 'eq' → logprob: -5.70035982131958
    10. 'init' → logprob: -6.07535982131958

Token 138: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.0040818434208631516
    2. 'n' → logprob: -5.879081726074219
    3. 'nit' → logprob: -7.879081726074219
    4. 'd' → logprob: -8.004081726074219
    5. '_add' → logprob: -8.129081726074219
    6. '+=' → logprob: -10.004081726074219
    7. 'nc' → logprob: -10.004081726074219
    8. '+' → logprob: -10.504081726074219
    9. 'eq' → logprob: -10.754081726074219
    10. 'f' → logprob: -10.754081726074219

Token 139: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.20453032851219177
    2. '__(' → logprob: -1.7045303583145142
    3. '(' → logprob: -5.829530239105225
    4. '__' → logprob: -9.079530715942383
    5. '_(' → logprob: -11.079530715942383
    6. ' (' → logprob: -11.204530715942383
    7. '(this' → logprob: -11.954530715942383
    8. '__(
' → logprob: -12.579530715942383
    9. '__((' → logprob: -12.829530715942383
    10. 'self' → logprob: -13.204530715942383

Token 140: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.6895233531831764e-05
    2. ' self' → logprob: -11.00002670288086
    3. '(self' → logprob: -12.00002670288086
    4. '
' → logprob: -13.12502670288086
    5. 'def' → logprob: -13.87502670288086
    6. ')' → logprob: -14.37502670288086
    7. '<|end|>' → logprob: -15.25002670288086
    8. 's' → logprob: -16.37502670288086
    9. '0' → logprob: -17.12502670288086
    10. '	self' → logprob: -17.75002670288086

Token 141: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003705419832840562
    2. ',value' → logprob: -7.0037055015563965
    3. ' ,' → logprob: -7.1287055015563965
    4. ',x' → logprob: -7.2537055015563965
    5. ',obj' → logprob: -8.253705024719238
    6. ',val' → logprob: -8.628705024719238
    7. ',self' → logprob: -8.753705024719238
    8. ',new' → logprob: -9.253705024719238
    9. ',a' → logprob: -9.378705024719238
    10. ',b' → logprob: -9.503705024719238

Token 142: 'other' (ID: 2141)
  Prédit: 'other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.002514188876375556
    2. ' other' → logprob: -6.002514362335205
    3. 'self' → logprob: -11.127513885498047
    4. 'val' → logprob: -11.877513885498047
    5. 'value' → logprob: -11.877513885498047
    6. 'o' → logprob: -12.002513885498047
    7. 'x' → logprob: -13.002513885498047
    8. 'b' → logprob: -15.002513885498047
    9. 'Other' → logprob: -15.002513885498047
    10. 'v' → logprob: -15.377513885498047

Token 143: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.021846141666173935
    2. ',' → logprob: -4.396846294403076
    3. ':' → logprob: -4.896846294403076
    4. ')' → logprob: -7.146846294403076
    5. '):
' → logprob: -8.271845817565918
    6. ' ):' → logprob: -8.521845817565918
    7. '(other' → logprob: -8.646845817565918
    8. 'self' → logprob: -9.146845817565918
    9. '(self' → logprob: -9.271845817565918
    10. ',val' → logprob: -10.146845817565918

Token 144: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7020246386528015
    2. ' self' → logprob: -1.7020246982574463
    3. 'Box' → logprob: -1.8270246982574463
    4. ' Box' → logprob: -2.0770246982574463
    5. '(self' → logprob: -4.077024459838867
    6. '   ' → logprob: -4.702024459838867
    7. '(Box' → logprob: -5.577024459838867
    8. ' other' → logprob: -6.077024459838867
    9. 'other' → logprob: -6.577024459838867
    10. ' (' → logprob: -6.952024459838867

Token 145: '.val' (ID: 20368)
  Prédit: '.val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.val' → logprob: -0.0021590644028037786
    2. '.' → logprob: -6.377159118652344
    3. 'val' → logprob: -8.127159118652344
    4. ':' → logprob: -9.252159118652344
    5. '<|end|>' → logprob: -10.627159118652344
    6. ' .' → logprob: -11.877159118652344
    7. '[val' → logprob: -11.877159118652344
    8. '	val' → logprob: -12.127159118652344
    9. '{' → logprob: -12.377159118652344
    10. '```' → logprob: -12.627159118652344

Token 146: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.16443023085594177
    2. '=' → logprob: -1.9144302606582642
    3. ' +=' → logprob: -5.914430141448975
    4. ' =' → logprob: -6.539430141448975
    5. '%=' → logprob: -10.289430618286133
    6. '+=(' → logprob: -11.664430618286133
    7. '*=' → logprob: -12.164430618286133
    8. '-=' → logprob: -13.289430618286133
    9. '=(' → logprob: -14.289430618286133
    10. '+' → logprob: -14.539430618286133

Token 147: 'other' (ID: 2141)
  Prédit: 'other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0021933254320174456
    2. ' other' → logprob: -6.127193450927734
    3. '1' → logprob: -12.127193450927734
    4. 'int' → logprob: -13.377193450927734
    5. '(other' → logprob: -13.877193450927734
    6. ' ' → logprob: -16.252193450927734
    7. ' int' → logprob: -17.002193450927734
    8. '(' → logprob: -17.127193450927734
    9. 'Other' → logprob: -17.127193450927734
    10. 'self' → logprob: -17.752193450927734

Token 148: ';' (ID: 26)
  Prédit: ';'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ';' → logprob: -0.16810379922389984
    2. '       ' → logprob: -2.6681036949157715
    3. 'return' → logprob: -2.9181036949157715
    4. '
' → logprob: -4.4181036949157715
    5. ':return' → logprob: -5.2931036949157715
    6. '	return' → logprob: -5.4181036949157715
    7. ' return' → logprob: -5.4181036949157715
    8. '   ' → logprob: -5.9181036949157715
    9. ' ;' → logprob: -8.04310417175293
    10. '           ' → logprob: -8.04310417175293

Token 149: 'return' (ID: 1034)
  Prédit: 'return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2989930510520935
    2. 'self' → logprob: -1.4239931106567383
    3. ' return' → logprob: -4.423993110656738
    4. ' self' → logprob: -5.798993110656738
    5. 'if' → logprob: -6.923993110656738
    6. '       ' → logprob: -7.048993110656738
    7. '   ' → logprob: -7.173993110656738
    8. ' if' → logprob: -10.298993110656738
    9. 'while' → logprob: -12.423993110656738
    10. '	return' → logprob: -12.548993110656738

Token 150: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02324547804892063
    2. ' self' → logprob: -3.7732455730438232
    3. ' ' → logprob: -17.148244857788086
    4. '(self' → logprob: -19.148244857788086
    5. '	self' → logprob: -19.273244857788086
    6. ' ' → logprob: -19.898244857788086
    7. '  ' → logprob: -20.898244857788086
    8. 'this' → logprob: -21.023244857788086
    9. '```' → logprob: -21.023244857788086
    10. '*self' → logprob: -21.898244857788086

Token 151: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 152: 'hat' (ID: 13274)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 153: '_box' (ID: 22630)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.26801565289497375
    2. ' =' → logprob: -2.2680156230926514
    3. '=' → logprob: -3.8930156230926514
    4. '1' → logprob: -4.1430158615112305
    5. 'es' → logprob: -4.3930158615112305
    6. '_' → logprob: -4.6430158615112305
    7. '=[]' → logprob: -5.0180158615112305
    8. ']' → logprob: -5.1430158615112305
    9. '_colors' → logprob: -5.2680158615112305
    10. 'A' → logprob: -5.2680158615112305

Token 154: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.276170015335083
    2. '=' → logprob: -1.526170015335083
    3. 's' → logprob: -4.026169776916504
    4. '=[]' → logprob: -6.651169776916504
    5. '1' → logprob: -6.901169776916504
    6. '.' → logprob: -6.901169776916504
    7. '_' → logprob: -7.026169776916504
    8. 'es' → logprob: -7.776169776916504
    9. '[' → logprob: -7.776169776916504
    10. '0' → logprob: -8.151169776916504

Token 155: ' [' (ID: 723)
  Prédit: 'Box'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Box' → logprob: -0.36493292450904846
    2. '[' → logprob: -1.239932894706726
    3. ' Box' → logprob: -4.364933013916016
    4. ' [' → logprob: -6.364933013916016
    5. '[]' → logprob: -6.489933013916016
    6. '<Box' → logprob: -9.614933013916016
    7. '(Box' → logprob: -9.739933013916016
    8. '0' → logprob: -10.364933013916016
    9. '[]
' → logprob: -10.364933013916016
    10. ' []' → logprob: -10.614933013916016

Token 156: 'Box' (ID: 2532)
  Prédit: 'Box'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Box' → logprob: -0.0005228889058344066
    2. ' Box' → logprob: -8.25052261352539
    3. '0' → logprob: -8.37552261352539
    4. '[' → logprob: -11.00052261352539
    5. ']' → logprob: -12.37552261352539
    6. 'None' → logprob: -13.00052261352539
    7. '(Box' → logprob: -13.37552261352539
    8. '_Box' → logprob: -14.00052261352539
    9. '<Box' → logprob: -14.25052261352539
    10. 'str' → logprob: -14.25052261352539

Token 157: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1264483481645584
    2. '()' → logprob: -2.376448392868042
    3. '(i' → logprob: -4.251448154449463
    4. '()]' → logprob: -4.626448154449463
    5. '(x' → logprob: -6.876448154449463
    6. '(),' → logprob: -8.876448631286621
    7. '(s' → logprob: -9.001448631286621
    8. '0' → logprob: -9.001448631286621
    9. '()]
' → logprob: -9.876448631286621
    10. '(n' → logprob: -10.376448631286621

Token 158: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06855790317058563
    2. '1' → logprob: -3.8185579776763916
    3. '__' → logprob: -3.9435579776763916
    4. 'i' → logprob: -4.8185577392578125
    5. 'x' → logprob: -5.5685577392578125
    6. 'str' → logprob: -5.8185577392578125
    7. '-' → logprob: -6.1935577392578125
    8. 'n' → logprob: -6.4435577392578125
    9. '2' → logprob: -6.4435577392578125
    10. '3' → logprob: -6.4435577392578125

Token 159: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0458429753780365
    2. ')' → logprob: -3.1708428859710693
    3. ')]' → logprob: -6.295843124389648
    4. '),
' → logprob: -7.170843124389648
    5. ' ),' → logprob: -8.795843124389648
    6. ',' → logprob: -10.295843124389648
    7. '),

' → logprob: -11.420843124389648
    8. ' )' → logprob: -11.420843124389648
    9. ');' → logprob: -12.670843124389648
    10. '+' → logprob: -12.795843124389648

Token 160: 'Box' (ID: 2532)
  Prédit: 'Box'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Box' → logprob: -0.0015137888258323073
    2. ' Box' → logprob: -6.501513957977295
    3. '0' → logprob: -11.751513481140137
    4. '  ' → logprob: -14.126513481140137
    5. ' ' → logprob: -14.376513481140137
    6. '   ' → logprob: -14.876513481140137
    7. 'None' → logprob: -15.001513481140137
    8. '(Box' → logprob: -15.001513481140137
    9. '_Box' → logprob: -15.251513481140137
    10. '
' → logprob: -15.376513481140137

Token 161: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.5358694731257856e-05
    2. '(-' → logprob: -10.875035285949707
    3. '0' → logprob: -11.875035285949707
    4. '(Box' → logprob: -12.500035285949707
    5. '(i' → logprob: -13.250035285949707
    6. ' (' → logprob: -13.875035285949707
    7. '((' → logprob: -14.500035285949707
    8. '1' → logprob: -14.625035285949707
    9. '(s' → logprob: -15.250035285949707
    10. '(
' → logprob: -15.375035285949707

Token 162: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16348497569561005
    2. '1' → logprob: -1.9134849309921265
    3. '2' → logprob: -6.163485050201416
    4. '-' → logprob: -8.038484573364258
    5. '256' → logprob: -8.538484573364258
    6. '3' → logprob: -9.288484573364258
    7. 'n' → logprob: -9.538484573364258
    8. '100' → logprob: -9.538484573364258
    9. '255' → logprob: -9.600984573364258
    10. '128' → logprob: -9.913484573364258

Token 163: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -4.668304245569743e-05
    2. ')]' → logprob: -11.125046730041504
    3. ',' → logprob: -11.250046730041504
    4. ')' → logprob: -11.625046730041504
    5. ' ),' → logprob: -12.125046730041504
    6. '0' → logprob: -14.000046730041504
    7. '),
' → logprob: -14.250046730041504
    8. '1' → logprob: -14.500046730041504
    9. '3' → logprob: -14.625046730041504
    10. ')],' → logprob: -14.750046730041504

Token 164: 'Box' (ID: 2532)
  Prédit: 'Box'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Box' → logprob: -0.00010223194840364158
    2. ' Box' → logprob: -9.375102043151855
    3. '0' → logprob: -11.250102043151855
    4. ']' → logprob: -13.750102043151855
    5. '<Box' → logprob: -14.250102043151855
    6. ' ' → logprob: -14.750102043151855
    7. '_Box' → logprob: -14.750102043151855
    8. ')' → logprob: -15.000102043151855
    9. '  ' → logprob: -15.125102043151855
    10. '(Box' → logprob: -15.125102043151855

Token 165: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00034118397161364555
    2. '0' → logprob: -8.125341415405273
    3. '())' → logprob: -10.250341415405273
    4. '(-' → logprob: -12.375341415405273
    5. ')' → logprob: -13.375341415405273
    6. ' (' → logprob: -14.000341415405273
    7. '(False' → logprob: -14.125341415405273
    8. '((' → logprob: -14.500341415405273
    9. '()' → logprob: -14.750341415405273
    10. ')]' → logprob: -15.500341415405273

Token 166: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003460371633991599
    2. '1' → logprob: -6.50346040725708
    3. '3' → logprob: -7.25346040725708
    4. '2' → logprob: -7.62846040725708
    5. 'n' → logprob: -8.128459930419922
    6. '256' → logprob: -8.753459930419922
    7. '-' → logprob: -9.253459930419922
    8. '255' → logprob: -10.003459930419922
    9. '100' → logprob: -10.565959930419922
    10. 'int' → logprob: -11.190959930419922

Token 167: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0026979974936693907
    2. ')' → logprob: -6.502697944641113
    3. '),' → logprob: -6.752697944641113
    4. ']' → logprob: -11.377697944641113
    5. ')...' → logprob: -12.252697944641113
    6. '))' → logprob: -12.877697944641113
    7. ' )' → logprob: -13.127697944641113
    8. ')}' → logprob: -13.752697944641113
    9. ')]
' → logprob: -14.002697944641113
    10. '),
' → logprob: -14.752697944641113

Token 168: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0015002215513959527
    2. 'i' → logprob: -7.001500129699707
    3. ' for' → logprob: -8.126500129699707
    4. 'def' → logprob: -9.751500129699707
    5. ':' → logprob: -10.001500129699707
    6. '_' → logprob: -10.126500129699707
    7. 'if' → logprob: -10.376500129699707
    8. '=' → logprob: -10.876500129699707
    9. 'f' → logprob: -10.876500129699707
    10. 'n' → logprob: -11.001500129699707

Token 169: ' idx' (ID: 14016)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0730612501502037
    2. ' _' → logprob: -3.948061227798462
    3. ' x' → logprob: -4.198061466217041
    4. ' __' → logprob: -4.698061466217041
    5. 'i' → logprob: -4.948061466217041
    6. '__' → logprob: -5.823061466217041
    7. '_' → logprob: -5.823061466217041
    8. ' val' → logprob: -5.948061466217041
    9. ' idx' → logprob: -6.073061466217041
    10. ' num' → logprob: -6.698061466217041

Token 170: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03398740664124489
    2. 'in' → logprob: -3.408987522125244
    3. ',' → logprob: -8.283987045288086
    4. ' ' → logprob: -9.533987045288086
    5. ' ,' → logprob: -11.908987045288086
    6. ',in' → logprob: -12.283987045288086
    7. '	in' → logprob: -14.033987045288086
    8. ' _' → logprob: -14.158987045288086
    9. '_' → logprob: -14.533987045288086
    10. '  ' → logprob: -14.658987045288086

Token 171: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07087649405002594
    2. ' range' → logprob: -3.0708765983581543
    3. '__' → logprob: -3.8208765983581543
    4. ' __' → logprob: -9.195876121520996
    5. '(range' → logprob: -11.195876121520996
    6. '(__' → logprob: -12.695876121520996
    7. '_' → logprob: -12.820876121520996
    8. '	range' → logprob: -12.945876121520996
    9. '___' → logprob: -13.070876121520996
    10. '_range' → logprob: -13.445876121520996

Token 172: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.05791427940130234
    2. '(' → logprob: -2.9329142570495605
    3. ' (' → logprob: -5.9329142570495605
    4. ' n' → logprob: -8.557914733886719
    5. '(len' → logprob: -8.807914733886719
    6. 'n' → logprob: -10.807914733886719
    7. '(
' → logprob: -11.307914733886719
    8. ' ' → logprob: -14.307914733886719
    9. '(s' → logprob: -14.682914733886719
    10. '(

' → logprob: -15.557914733886719

Token 173: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.07217849791049957
    2. '):' → logprob: -2.697178602218628
    3. '_' → logprob: -6.447178363800049
    4. '__)' → logprob: -8.322178840637207
    5. '):
' → logprob: -8.447178840637207
    6. ')' → logprob: -9.822178840637207
    7. '__:' → logprob: -9.947178840637207
    8. ')__' → logprob: -10.572178840637207
    9. ' ):' → logprob: -10.697178840637207
    10. '__).' → logprob: -12.072178840637207

Token 174: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009788630995899439
    2. '):
' → logprob: -7.000978946685791
    3. ' ):' → logprob: -10.000978469848633
    4. '+' → logprob: -11.500978469848633
    5. ':' → logprob: -12.250978469848633
    6. ')' → logprob: -12.250978469848633
    7. '():' → logprob: -14.250978469848633
    8. '-' → logprob: -14.875978469848633
    9. '):
' → logprob: -15.250978469848633
    10. '   ' → logprob: -15.625978469848633

Token 175: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21615760028362274
    2. ' if' → logprob: -2.2161576747894287
    3. ' val' → logprob: -3.0911576747894287
    4. ' hat' → logprob: -3.8411576747894287
    5. ' current' → logprob: -5.84115743637085
    6. '    
' → logprob: -6.34115743637085
    7. ' s' → logprob: -6.34115743637085
    8. '   ' → logprob: -6.46615743637085
    9. ' c' → logprob: -6.59115743637085
    10. 'hat' → logprob: -7.09115743637085

Token 176: ' occ' (ID: 4138)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0981658697128296
    2. 'v' → logprob: -1.5981658697128296
    3. 'val' → logprob: -2.348165988922119
    4. 'a' → logprob: -2.848165988922119
    5. 'x' → logprob: -2.973165988922119
    6. '   ' → logprob: -3.223165988922119
    7. 'cur' → logprob: -3.473165988922119
    8. ' if' → logprob: -3.598165988922119
    9. ' val' → logprob: -3.848165988922119
    10. 'c' → logprob: -4.098165988922119

Token 177: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.142380714416504
    2. '=' → logprob: -1.267380714416504
    3. 'urrence' → logprob: -1.392380714416504
    4. 'urred' → logprob: -3.017380714416504
    5. 'urrences' → logprob: -3.142380714416504
    6. 'ur' → logprob: -3.392380714416504
    7. '__' → logprob: -4.517380714416504
    8. 'urring' → logprob: -5.642380714416504
    9. 'up' → logprob: -5.767380714416504
    10. 'urs' → logprob: -6.517380714416504

Token 178: ' sum' (ID: 4215)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.020618263632059097
    2. ' __' → logprob: -3.895618200302124
    3. 'int' → logprob: -10.895618438720703
    4. ' ' → logprob: -11.270618438720703
    5. 'str' → logprob: -11.395618438720703
    6. ' int' → logprob: -12.020618438720703
    7. '(__' → logprob: -12.145618438720703
    8. '__[' → logprob: -12.395618438720703
    9. '___' → logprob: -13.145618438720703
    10. '_' → logprob: -13.395618438720703

Token 179: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.7029625177383423
    2. '(' → logprob: -1.2029625177383423
    3. '(h' → logprob: -1.8279625177383423
    4. '(__' → logprob: -3.7029623985290527
    5. '(str' → logprob: -4.577962398529053
    6. '((' → logprob: -5.202962398529053
    7. '(not' → logprob: -7.202962398529053
    8. '(x' → logprob: -7.577962398529053
    9. '(int' → logprob: -7.952962398529053
    10. '(box' → logprob: -8.077962875366211

Token 180: 'hb' (ID: 76349)
  Prédit: 'hat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hat' → logprob: -0.19725391268730164
    2. '1' → logprob: -3.197253942489624
    3. 'str' → logprob: -3.447253942489624
    4. '(' → logprob: -3.447253942489624
    5. '(h' → logprob: -3.822253942489624
    6. '__' → logprob: -4.447253704071045
    7. '(__' → logprob: -4.697253704071045
    8. '(str' → logprob: -5.572253704071045
    9. '[' → logprob: -5.697253704071045
    10. 'int' → logprob: -5.947253704071045

Token 181: '==' (ID: 560)
  Prédit: '.val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.val' → logprob: -0.0029268302023410797
    2. '==' → logprob: -6.377926826477051
    3. '.' → logprob: -8.12792682647705
    4. '(val' → logprob: -8.75292682647705
    5. ' ==' → logprob: -8.87792682647705
    6. '.__' → logprob: -9.25292682647705
    7. ' for' → logprob: -9.25292682647705
    8. 'val' → logprob: -9.50292682647705
    9. '.idx' → logprob: -9.50292682647705
    10. '(' → logprob: -9.87792682647705

Token 182: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00046141279744915664
    2. ' __' → logprob: -8.50046157836914
    3. 'str' → logprob: -9.00046157836914
    4. 'idx' → logprob: -9.62546157836914
    5. '0' → logprob: -11.12546157836914
    6. '(__' → logprob: -11.62546157836914
    7. 'int' → logprob: -11.87546157836914
    8. '1' → logprob: -12.12546157836914
    9. '2' → logprob: -12.25046157836914
    10. '3' → logprob: -12.37546157836914

Token 183: 'Arr' (ID: 8977)
  Prédit: 'Arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Arr' → logprob: -3.054500666621607e-06
    2. 'Ar' → logprob: -13.75000286102295
    3. '_arr' → logprob: -14.50000286102295
    4. ' Arr' → logprob: -15.00000286102295
    5. 'arr' → logprob: -15.62500286102295
    6. '
' → logprob: -15.62500286102295
    7. '__' → logprob: -16.250003814697266
    8. '_' → logprob: -16.250003814697266
    9. '_A' → logprob: -16.250003814697266
    10. 'A' → logprob: -16.500003814697266

Token 184: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -9.014684110297821e-06
    2. 'idx' → logprob: -12.125008583068848
    3. '__' → logprob: -13.875008583068848
    4. '__[' → logprob: -14.375008583068848
    5. ' idx' → logprob: -14.875008583068848
    6. '[' → logprob: -15.000008583068848
    7. '(idx' → logprob: -15.375008583068848
    8. ' [' → logprob: -15.500008583068848
    9. '```' → logprob: -15.625008583068848
    10. '[index' → logprob: -15.750008583068848

Token 185: ']' (ID: 60)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.29955652356147766
    2. ']' → logprob: -1.9245564937591553
    3. '])' → logprob: -2.5495564937591553
    4. '[' → logprob: -4.924556732177734
    5. '[i' → logprob: -5.174556732177734
    6. ']])' → logprob: -5.299556732177734
    7. ')' → logprob: -5.424556732177734
    8. ' for' → logprob: -5.799556732177734
    9. 'for' → logprob: -6.174556732177734
    10. 'hat' → logprob: -6.424556732177734

Token 186: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.04315950348973274
    2. 'for' → logprob: -3.1681594848632812
    3. ' and' → logprob: -9.918159484863281
    4. ' ' → logprob: -10.418159484863281
    5. ' or' → logprob: -10.668159484863281
    6. ' if' → logprob: -11.293159484863281
    7. '])' → logprob: -11.293159484863281
    8. '+' → logprob: -11.293159484863281
    9. ']' → logprob: -12.668159484863281
    10. '   ' → logprob: -12.793159484863281

Token 187: ' hb' (ID: 106118)
  Prédit: 'hat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hat' → logprob: -0.00608379952609539
    2. ' hat' → logprob: -5.131083965301514
    3. 'range' → logprob: -9.756083488464355
    4. ' ' → logprob: -10.381083488464355
    5. ' range' → logprob: -10.506083488464355
    6. 'hb' → logprob: -11.506083488464355
    7. '  ' → logprob: -12.006083488464355
    8. '_hat' → logprob: -12.256083488464355
    9. '   ' → logprob: -12.881083488464355
    10. '[' → logprob: -12.881083488464355

Token 188: ' in' (ID: 306)
  Prédit: 'hat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hat' → logprob: -0.38692858815193176
    2. ' hat' → logprob: -1.1369285583496094
    3. ' in' → logprob: -10.26192855834961
    4. '_hat' → logprob: -11.13692855834961
    5. 'Hat' → logprob: -13.63692855834961
    6. ' range' → logprob: -13.63692855834961
    7. ' ' → logprob: -14.26192855834961
    8. 'in' → logprob: -14.26192855834961
    9. ']' → logprob: -14.51192855834961
    10. ')' → logprob: -14.51192855834961

Token 189: ' hat' (ID: 4545)
  Prédit: 'hat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hat' → logprob: -0.00010044389637187123
    2. ' hat' → logprob: -9.250100135803223
    3. '  ' → logprob: -14.000100135803223
    4. 'str' → logprob: -14.125100135803223
    5. '_hat' → logprob: -14.125100135803223
    6. '   ' → logprob: -14.250100135803223
    7. ' ' → logprob: -14.375100135803223
    8. '[' → logprob: -16.37510108947754
    9. '__' → logprob: -16.37510108947754
    10. 'h' → logprob: -16.62510108947754

Token 190: '_box' (ID: 22630)
  Prédit: '_box'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_box' → logprob: -1.7432603272027336e-06
    2. 'box' → logprob: -13.875001907348633
    3. '_' → logprob: -14.500001907348633
    4. '_b' → logprob: -16.625001907348633
    5. '_boxes' → logprob: -17.000001907348633
    6. '```' → logprob: -17.500001907348633
    7. '_block' → logprob: -17.875001907348633
    8. '_BOX' → logprob: -18.000001907348633
    9. 's' → logprob: -18.125001907348633
    10. '_hat' → logprob: -18.625001907348633

Token 191: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0011133047519251704
    2. ')' → logprob: -7.376113414764404
    3. ' ])' → logprob: -8.251112937927246
    4. '])
' → logprob: -9.001112937927246
    5. '   ' → logprob: -10.376112937927246
    6. '])+' → logprob: -10.376112937927246
    7. ')])' → logprob: -11.751112937927246
    8. '])-' → logprob: -12.126112937927246
    9. ']+' → logprob: -12.251112937927246
    10. ']' → logprob: -12.501112937927246

Token 192: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04759099334478378
    2. ' if' → logprob: -3.797590970993042
    3. '
' → logprob: -4.047591209411621
    4. 'if' → logprob: -6.297591209411621
    5. '<|end|>' → logprob: -6.297591209411621
    6. '    
' → logprob: -6.672591209411621
    7. ' 
' → logprob: -8.297591209411621
    8. '+' → logprob: -8.297591209411621
    9. ')' → logprob: -8.547591209411621
    10. ' ' → logprob: -8.797591209411621

Token 193: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2335435301065445
    2. 'if' (adapté à ' if') → logprob: -1.8585435152053833
    3. ' if' → logprob: -2.983543634414673
    4. '    
' → logprob: -7.233543395996094
    5. '
' → logprob: -8.233543395996094
    6. 'str' → logprob: -8.983543395996094
    7. 'counter' → logprob: -9.108543395996094
    8. '<|end|>' → logprob: -9.733543395996094
    9. '	if' → logprob: -9.983543395996094
    10. ' counter' → logprob: -9.983543395996094

Token 194: ' not' (ID: 625)
  Prédit: ' occ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' occ' → logprob: -0.5271992087364197
    2. 'occ' → logprob: -0.9021992087364197
    3. '(' → logprob: -6.9021992683410645
    4. ' not' → logprob: -7.1521992683410645
    5. ' ' → logprob: -8.027198791503906
    6. ' counter' → logprob: -8.027198791503906
    7. ' __' → logprob: -8.402198791503906
    8. '_occ' → logprob: -8.402198791503906
    9. ' occult' → logprob: -8.777198791503906
    10. '__' → logprob: -8.777198791503906

Token 195: ' occ' (ID: 4138)
  Prédit: 'occ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occ' → logprob: -0.06517009437084198
    2. ' occ' → logprob: -3.3151700496673584
    3. 'str' → logprob: -4.3151702880859375
    4. ' strange' → logprob: -4.5651702880859375
    5. '(' → logprob: -6.4401702880859375
    6. 'occur' → logprob: -7.5651702880859375
    7. ' str' → logprob: -8.190170288085938
    8. 'counter' → logprob: -9.565170288085938
    9. '(str' → logprob: -9.565170288085938
    10. ' (' → logprob: -9.565170288085938

Token 196: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009327789884991944
    2. ' :' → logprob: -7.125932693481445
    3. ':
' → logprob: -9.375932693481445
    4. '>:' → logprob: -11.375932693481445
    5. ' and' → logprob: -11.500932693481445
    6. '==' → logprob: -12.250932693481445
    7. '>' → logprob: -12.250932693481445
    8. ' or' → logprob: -12.625932693481445
    9. 'and' → logprob: -13.000932693481445
    10. '):' → logprob: -13.250932693481445

Token 197: '       ' (ID: 309)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8532519340515137
    2. ':' → logprob: -1.6032519340515137
    3. '       ' → logprob: -1.6032519340515137
    4. '   ' → logprob: -1.9782519340515137
    5. ' for' → logprob: -4.353251934051514
    6. 'for' → logprob: -5.353251934051514
    7. 'hat' → logprob: -5.478251934051514
    8. '[' → logprob: -6.228251934051514
    9. ' :
' → logprob: -6.228251934051514
    10. ' and' → logprob: -7.103251934051514

Token 198: ' counter' (ID: 9446)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7684181928634644
    2. 'for' → logprob: -1.3934181928634644
    3. 'str' → logprob: -2.518418312072754
    4. 'counter' (adapté à ' counter') → logprob: -2.893418312072754
    5. 'hat' → logprob: -2.893418312072754
    6. 'found' → logprob: -3.893418312072754
    7. 'idx' → logprob: -4.143418312072754
    8. 'min' → logprob: -5.268418312072754
    9. 'possible' → logprob: -5.268418312072754
    10. '   ' → logprob: -5.393418312072754

Token 199: '256' (ID: 5780)
  Prédit: '256'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '256' → logprob: -0.004796069115400314
    2. '*=' → logprob: -6.129796028137207
    3. '*' → logprob: -6.879796028137207
    4. ' *=' → logprob: -6.879796028137207
    5. '_' → logprob: -8.379796028137207
    6. '=' → logprob: -8.879796028137207
    7. '+=' → logprob: -9.629796028137207
    8. '```' → logprob: -10.379796028137207
    9. ' =' → logprob: -11.254796028137207
    10. '%=' → logprob: -11.504796028137207

Token 200: ' =' (ID: 314)
  Prédit: ' *='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *=' → logprob: -0.7150326371192932
    2. '*=' → logprob: -0.7150326371192932
    3. ' =' → logprob: -4.340032577514648
    4. '+=' → logprob: -5.840032577514648
    5. '=' → logprob: -6.090032577514648
    6. ' +=' → logprob: -6.465032577514648
    7. '*' → logprob: -6.590032577514648
    8. ' <<=' → logprob: -7.965032577514648
    9. ' ' → logprob: -9.840032577514648
    10. ' *' → logprob: -10.840032577514648

Token 201: ' ' (ID: 220)
  Prédit: '(counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(counter' → logprob: -0.008650499396026134
    2. 'counter' → logprob: -5.258650302886963
    3. ' (' → logprob: -5.758650302886963
    4. ' counter' → logprob: -8.758650779724121
    5. '[counter' → logprob: -9.633650779724121
    6. '(' → logprob: -11.008650779724121
    7. '   ' → logprob: -12.883650779724121
    8. '(c' → logprob: -13.008650779724121
    9. '	counter' → logprob: -13.758650779724121
    10. '(int' → logprob: -13.883650779724121

Token 202: '0' (ID: 15)
  Prédit: '(counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(counter' → logprob: -0.0044074514880776405
    2. 'counter' → logprob: -5.5044074058532715
    3. ' (' → logprob: -8.75440788269043
    4. '(' → logprob: -9.25440788269043
    5. '[counter' → logprob: -10.12940788269043
    6. '(c' → logprob: -11.87940788269043
    7. ' counter' → logprob: -11.87940788269043
    8. '3' → logprob: -12.00440788269043
    9. '(int' → logprob: -13.12940788269043
    10. '2' → logprob: -13.62940788269043

Token 203: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07998170703649521
    2. '   ' → logprob: -2.579981803894043
    3. '<|end|>' → logprob: -8.204981803894043
    4. '.' → logprob: -8.579981803894043
    5. 'else' → logprob: -9.329981803894043
    6. '    ' → logprob: -9.704981803894043
    7. '+' → logprob: -9.954981803894043
    8. '           ' → logprob: -9.954981803894043
    9. '	' → logprob: -10.079981803894043
    10. '        ' → logprob: -10.079981803894043

Token 204: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45854079723358154
    2. '       ' → logprob: -1.5835407972335815
    3. '
' → logprob: -2.708540916442871
    4. 'else' → logprob: -3.208540916442871
    5. ' else' → logprob: -3.333540916442871
    6. '    
' → logprob: -5.833540916442871
    7. ' if' → logprob: -5.833540916442871
    8. 'elif' → logprob: -6.083540916442871
    9. '<|end|>' → logprob: -6.458540916442871
    10. '        
' → logprob: -6.583540916442871

Token 205: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.4439479410648346
    2. 'else' (adapté à ' else') → logprob: -1.1939479112625122
    3. 'elif' → logprob: -3.4439480304718018
    4. ' elif' → logprob: -4.443947792053223
    5. '   ' → logprob: -4.568947792053223
    6. '<|end|>' → logprob: -8.068947792053223
    7. '    ' → logprob: -8.193947792053223
    8. '	else' → logprob: -8.568947792053223
    9. ' if' → logprob: -9.068947792053223
    10. '*' → logprob: -9.443947792053223

Token 206: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3517507016658783
    2. ':
' → logprob: -1.3517507314682007
    3. '       ' → logprob: -3.351750612258911
    4. ' if' → logprob: -6.60175085067749
    5. '   ' → logprob: -6.85175085067749
    6. '*' → logprob: -9.351750373840332
    7. '    ' → logprob: -9.726750373840332
    8. ',' → logprob: -10.476750373840332
    9. ':

' → logprob: -10.851750373840332
    10. '           ' → logprob: -11.101750373840332

Token 207: '       ' (ID: 309)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.37937331199645996
    2. '       ' → logprob: -1.50437331199646
    3. 'for' → logprob: -2.87937331199646
    4. 'if' → logprob: -3.75437331199646
    5. '   ' → logprob: -4.754373550415039
    6. 'hat' → logprob: -5.379373550415039
    7. ' counter' → logprob: -8.879373550415039
    8. '```' → logprob: -9.254373550415039
    9. '           ' → logprob: -9.379373550415039
    10. 'str' → logprob: -9.629373550415039

Token 208: ' counter' (ID: 9446)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counter' (adapté à ' counter') → logprob: -0.24139514565467834
    2. 'if' → logprob: -1.991395115852356
    3. 'for' → logprob: -3.9913952350616455
    4. 'new' → logprob: -4.116394996643066
    5. 'temp' → logprob: -4.241394996643066
    6. 'tmp' → logprob: -4.866394996643066
    7. 'hat' → logprob: -4.866394996643066
    8. 'next' → logprob: -6.116394996643066
    9. '   ' → logprob: -6.366394996643066
    10. ' counter' → logprob: -7.116394996643066

Token 209: '256' (ID: 5780)
  Prédit: '256'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '256' → logprob: -2.5776860184123507e-06
    2. '=' → logprob: -14.12500286102295
    3. '*=' → logprob: -14.50000286102295
    4. '+=' → logprob: -15.00000286102295
    5. '255' → logprob: -15.37500286102295
    6. '_' → logprob: -15.75000286102295
    7. '```' → logprob: -16.000001907348633
    8. ' *=' → logprob: -16.125001907348633
    9. ' =' → logprob: -16.750001907348633
    10. '*' → logprob: -17.250001907348633

Token 210: ' *=' (ID: 25253)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.008552758023142815
    2. ' *=' → logprob: -5.008552551269531
    3. '=' → logprob: -6.633552551269531
    4. ' =' → logprob: -7.883552551269531
    5. '*' → logprob: -8.883552551269531
    6. '+=' → logprob: -13.008552551269531
    7. ' ' → logprob: -14.133552551269531
    8. '   ' → logprob: -14.758552551269531
    9. '  ' → logprob: -15.133552551269531
    10. '	' → logprob: -15.508552551269531

Token 211: ' occ' (ID: 4138)
  Prédit: 'occ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occ' → logprob: -5.967624019831419e-05
    2. ' occ' → logprob: -10.625060081481934
    3. '3' → logprob: -11.125060081481934
    4. 'mod' → logprob: -12.000060081481934
    5. 'occup' → logprob: -12.250060081481934
    6. '(' → logprob: -13.125060081481934
    7. 'oc' → logprob: -13.250060081481934
    8. 'str' → logprob: -13.625060081481934
    9. 'occur' → logprob: -13.750060081481934
    10. '   ' → logprob: -14.000060081481934

Token 212: '
' (ID: 198)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -1.002785563468933
    2. '
' → logprob: -1.502785563468933
    3. 'mod' → logprob: -1.502785563468933
    4. '<|end|>' → logprob: -1.752785563468933
    5. '       ' → logprob: -5.502785682678223
    6. ' mod' → logprob: -5.877785682678223
    7. '   ' → logprob: -6.127785682678223
    8. 'counter' → logprob: -6.502785682678223
    9. '```' → logprob: -7.127785682678223
    10. '<|end|>' → logprob: -7.377785682678223

Token 213: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25212088227272034
    2. 'counter' → logprob: -2.6271209716796875
    3. 'mod' → logprob: -3.0021209716796875
    4. '   ' → logprob: -3.2521209716796875
    5. ' counter' → logprob: -3.5021209716796875
    6. '<|end|>' → logprob: -3.6271209716796875
    7. ' mod' → logprob: -6.5021209716796875
    8. ')' → logprob: -7.3771209716796875
    9. '_counter' → logprob: -7.7521209716796875
    10. 'ounter' → logprob: -7.7521209716796875

Token 214: ' first' (ID: 1577)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.008666928857564926
    2. ' counter' → logprob: -4.7586669921875
    3. '       ' → logprob: -9.8836669921875
    4. '	counter' → logprob: -14.5086669921875
    5. '   ' → logprob: -14.6336669921875
    6. 'mod' → logprob: -15.6336669921875
    7. '_counter' → logprob: -16.2586669921875
    8. 'Counter' → logprob: -16.7586669921875
    9. '        
' → logprob: -16.7586669921875
    10. '
' → logprob: -16.8836669921875

Token 215: '_idx' (ID: 15257)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7215098738670349
    2. '_occ' → logprob: -1.2215099334716797
    3. '_hat' → logprob: -2.5965099334716797
    4. '_space' → logprob: -3.4715099334716797
    5. 'space' → logprob: -3.5965099334716797
    6. '_idx' → logprob: -4.22150993347168
    7. '_token' → logprob: -4.34650993347168
    8. '_oc' → logprob: -4.84650993347168
    9. 's' → logprob: -5.59650993347168
    10. '=' → logprob: -5.59650993347168

Token 216: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08034282177686691
    2. '=' → logprob: -2.5803427696228027
    3. '_' → logprob: -7.705342769622803
    4. ' +=' → logprob: -8.580343246459961
    5. 's' → logprob: -8.705343246459961
    6. ',' → logprob: -8.830343246459961
    7. ' ' → logprob: -9.330343246459961
    8. '+=' → logprob: -9.455343246459961
    9. '_of' → logprob: -10.080343246459961
    10. '   ' → logprob: -10.080343246459961

Token 217: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.959348201751709
    2. 'hat' → logprob: -1.709348201751709
    3. '[' → logprob: -1.834348201751709
    4. '0' → logprob: -2.084348201751709
    5. ' next' → logprob: -2.334348201751709
    6. '-' → logprob: -4.084348201751709
    7. ' hat' → logprob: -4.209348201751709
    8. ' ' → logprob: -5.584348201751709
    9. 'None' → logprob: -5.709348201751709
    10. '[next' → logprob: -5.834348201751709

Token 218: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.16106943786144257
    2. '((' → logprob: -1.911069393157959
    3. '(idx' → logprob: -7.786069393157959
    4. '(iter' → logprob: -8.036069869995117
    5. '(x' → logprob: -10.036069869995117
    6. '(' → logprob: -10.286069869995117
    7. '(lambda' → logprob: -11.536069869995117
    8. '(index' → logprob: -12.286069869995117
    9. '(h' → logprob: -12.536069869995117
    10. 'i' → logprob: -13.161069869995117

Token 219: ' for' (ID: 395)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.062232181429862976
    2. '((' → logprob: -3.562232255935669
    3. '(h' → logprob: -3.812232255935669
    4. '(' → logprob: -5.81223201751709
    5. '(x' → logprob: -5.93723201751709
    6. '(idx' → logprob: -6.06223201751709
    7. '(j' → logprob: -7.06223201751709
    8. '(lambda' → logprob: -7.56223201751709
    9. '(iter' → logprob: -8.31223201751709
    10. '(k' → logprob: -9.81223201751709

Token 220: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.31409502029418945
    2. ' i' → logprob: -1.3140950202941895
    3. ' range' → logprob: -7.8140950202941895
    4. 'range' → logprob: -8.064094543457031
    5. '(i' → logprob: -9.939094543457031
    6. ' in' → logprob: -10.189094543457031
    7. ',' → logprob: -11.689094543457031
    8. ',i' → logprob: -11.939094543457031
    9. 'idx' → logprob: -12.314094543457031
    10. ' idx' → logprob: -12.689094543457031

Token 221: ',h' (ID: 42751)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21800298988819122
    2. 'in' → logprob: -1.8430030345916748
    3. ' in' → logprob: -3.843003034591675
    4. ',i' → logprob: -4.343002796173096
    5. 'range' → logprob: -6.843002796173096
    6. 'i' → logprob: -7.343002796173096
    7. ',in' → logprob: -7.468002796173096
    8. ',h' → logprob: -8.343003273010254
    9. ',b' → logprob: -8.968003273010254
    10. 'hat' → logprob: -9.093003273010254

Token 222: 'b' (ID: 65)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.6407433152198792
    2. 'b' → logprob: -0.7657433152198792
    3. 'hat' → logprob: -4.890743255615234
    4. '_b' → logprob: -8.640743255615234
    5. ',' → logprob: -9.015743255615234
    6. '_hat' → logprob: -9.515743255615234
    7. 't' → logprob: -10.640743255615234
    8. ' in' → logprob: -10.640743255615234
    9. 'bat' → logprob: -10.765743255615234
    10. '_' → logprob: -10.890743255615234

Token 223: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5258906483650208
    2. 'in' → logprob: -0.9008906483650208
    3. ',' → logprob: -6.025890827178955
    4. ',h' → logprob: -8.650890350341797
    5. 'hat' → logprob: -9.025890350341797
    6. ' ,' → logprob: -11.400890350341797
    7. ',in' → logprob: -11.525890350341797
    8. '   ' → logprob: -12.150890350341797
    9. ',value' → logprob: -12.525890350341797
    10. ' ' → logprob: -12.525890350341797

Token 224: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.00672922981902957
    2. ' enumerate' → logprob: -5.0067291259765625
    3. 'hat' → logprob: -12.131729125976562
    4. '
' → logprob: -12.506729125976562
    5. 'range' → logprob: -12.756729125976562
    6. 'en' → logprob: -14.006729125976562
    7. ' ' → logprob: -15.006729125976562
    8. 'enum' → logprob: -15.256729125976562
    9. '   ' → logprob: -15.256729125976562
    10. '  ' → logprob: -16.256729125976562

Token 225: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.693206250667572
    2. 'hat' → logprob: -0.693206250667572
    3. ' hat' → logprob: -10.068205833435059
    4. '_hat' → logprob: -11.568205833435059
    5. '(' → logprob: -12.568205833435059
    6. 'h' → logprob: -13.443205833435059
    7. 'Hat' → logprob: -14.068205833435059
    8. ' (' → logprob: -15.068205833435059
    9. ')' → logprob: -15.568205833435059
    10. '   ' → logprob: -15.818205833435059

Token 226: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.0028418414294719696
    2. 'hat' → logprob: -5.877841949462891
    3. '_hat' → logprob: -11.00284194946289
    4. '```' → logprob: -12.12784194946289
    5. '_at' → logprob: -13.00284194946289
    6. '[' → logprob: -13.75284194946289
    7. ' hat' → logprob: -13.75284194946289
    8. '_' → logprob: -13.94034194946289
    9. 'a' → logprob: -13.94034194946289
    10. '   ' → logprob: -13.94034194946289

Token 227: '_box' (ID: 22630)
  Prédit: '_box'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_box' → logprob: -1.5332478142227046e-05
    2. 'box' → logprob: -11.500015258789062
    3. '_boxes' → logprob: -13.625015258789062
    4. '_' → logprob: -14.000015258789062
    5. 'e' → logprob: -15.000015258789062
    6. '```' → logprob: -15.000015258789062
    7. 'at' → logprob: -15.250015258789062
    8. '__' → logprob: -15.375015258789062
    9. '_hat' → logprob: -15.625015258789062
    10. '_BOX' → logprob: -15.750015258789062

Token 228: ')' (ID: 8)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.07076021283864975
    2. 'if' → logprob: -2.6957602500915527
    3. ')' → logprob: -7.195760250091553
    4. '   ' → logprob: -10.195759773254395
    5. ' in' → logprob: -10.820759773254395
    6. ' ' → logprob: -11.695759773254395
    7. ' )' → logprob: -13.195759773254395
    8. '    ' → logprob: -13.820759773254395
    9. '       ' → logprob: -13.945759773254395
    10. '  ' → logprob: -14.070759773254395

Token 229: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.023278558626770973
    2. 'if' → logprob: -3.7732784748077393
    3. '   ' → logprob: -10.89827823638916
    4. '       ' → logprob: -12.27327823638916
    5. '           ' → logprob: -12.39827823638916
    6. '    ' → logprob: -13.39827823638916
    7. '        ' → logprob: -13.77327823638916
    8. ' ' → logprob: -13.77327823638916
    9. ' in' → logprob: -14.02327823638916
    10. '  ' → logprob: -15.27327823638916

Token 230: ' hb' (ID: 106118)
  Prédit: 'hb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hb' → logprob: -0.018399840220808983
    2. ' hb' → logprob: -4.018399715423584
    3. '   ' → logprob: -9.268400192260742
    4. '  ' → logprob: -9.893400192260742
    5. ' ' → logprob: -10.018400192260742
    6. '    ' → logprob: -11.018400192260742
    7. 'str' → logprob: -11.018400192260742
    8. ' str' → logprob: -12.393400192260742
    9. '     ' → logprob: -12.393400192260742
    10. '(h' → logprob: -12.893400192260742

Token 231: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.02976299449801445
    2. ' ==' → logprob: -3.5297629833221436
    3. '==
' → logprob: -12.154763221740723
    4. ')==' → logprob: -12.529763221740723
    5. ']==' → logprob: -14.154763221740723
    6. '==(' → logprob: -14.279763221740723
    7. '__' → logprob: -14.404763221740723
    8. '!=' → logprob: -15.029763221740723
    9. '.__' → logprob: -15.154763221740723
    10. '()==' → logprob: -15.279763221740723

Token 232: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.000912774819880724
    2. ' __' → logprob: -7.000912666320801
    3. '___' → logprob: -15.2509126663208
    4. '(__' → logprob: -15.3759126663208
    5. '   ' → logprob: -15.5009126663208
    6. '.__' → logprob: -15.6259126663208
    7. ' ' → logprob: -16.000913619995117
    8. '`' → logprob: -16.750913619995117
    9. '```' → logprob: -17.375913619995117
    10. '____' → logprob: -17.500913619995117

Token 233: 'Arr' (ID: 8977)
  Prédit: 'Arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Arr' → logprob: -0.0213182233273983
    2. '__' → logprob: -3.896318197250366
    3. '_A' → logprob: -7.396318435668945
    4. ' Arr' → logprob: -9.646318435668945
    5. ' __' → logprob: -10.396318435668945
    6. '_' → logprob: -10.771318435668945
    7. '_arr' → logprob: -11.271318435668945
    8. '.Arr' → logprob: -11.396318435668945
    9. 'Idx' → logprob: -12.771318435668945
    10. 'Ar' → logprob: -13.021318435668945

Token 234: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.002189279766753316
    2. 'idx' → logprob: -6.1271891593933105
    3. ' idx' → logprob: -13.377189636230469
    4. '   ' → logprob: -14.377189636230469
    5. '(idx' → logprob: -14.627189636230469
    6. '```' → logprob: -14.627189636230469
    7. '
' → logprob: -15.252189636230469
    8. '][' → logprob: -15.627189636230469
    9. '	idx' → logprob: -16.00218963623047
    10. '[' → logprob: -16.37718963623047

Token 235: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020058415830135345
    2. ' )' → logprob: -6.2520060539245605
    3. '))' → logprob: -10.252005577087402
    4. ')
' → logprob: -10.377005577087402
    5. '])' → logprob: -12.877005577087402
    6. '   ' → logprob: -13.752005577087402
    7. '())' → logprob: -14.127005577087402
    8. ')return' → logprob: -14.127005577087402
    9. ' ' → logprob: -14.627005577087402
    10. '})' → logprob: -14.752005577087402

Token 236: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2578639090061188
    2. 'hat' → logprob: -2.007863998413086
    3. '        
' → logprob: -3.882863998413086
    4. ' hat' → logprob: -3.882863998413086
    5. 'counter' → logprob: -4.007863998413086
    6. '   ' → logprob: -5.132863998413086
    7. ' counter' → logprob: -5.507863998413086
    8. '
' → logprob: -5.882863998413086
    9. ')' → logprob: -6.007863998413086
    10. '           ' → logprob: -6.132863998413086

Token 237: ' hat' (ID: 4545)
  Prédit: 'hat'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hat' (adapté à ' hat') → logprob: -0.021206190809607506
    2. 'if' → logprob: -5.021206378936768
    3. '       ' → logprob: -5.521206378936768
    4. ' hat' → logprob: -5.646206378936768
    5. '   ' → logprob: -6.521206378936768
    6. 'str' → logprob: -6.646206378936768
    7. 'counter' → logprob: -6.646206378936768
    8. ' if' → logprob: -7.146206378936768
    9. 'for' → logprob: -7.521206378936768
    10. '        
' → logprob: -8.02120590209961

Token 238: '_box' (ID: 22630)
  Prédit: '_box'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_box' → logprob: -5.5577775128767826e-06
    2. '_' → logprob: -13.750005722045898
    3. '```' → logprob: -14.125005722045898
    4. '[' → logprob: -14.500005722045898
    5. 's' → logprob: -14.875005722045898
    6. '_b' → logprob: -15.125005722045898
    7. 'box' → logprob: -15.250005722045898
    8. '   ' → logprob: -15.375005722045898
    9. '_block' → logprob: -15.500005722045898
    10. '=' → logprob: -15.625005722045898

Token 239: '[first' (ID: 162208)
  Prédit: '[first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[first' → logprob: -7.123899558791891e-05
    2. '=' → logprob: -10.50007152557373
    3. '[i' → logprob: -10.75007152557373
    4. 'first' → logprob: -11.75007152557373
    5. '[' → logprob: -12.25007152557373
    6. '+=' → logprob: -12.62507152557373
    7. '\[' → logprob: -14.25007152557373
    8. '__' → logprob: -14.25007152557373
    9. '[in' → logprob: -14.37507152557373
    10. '=[' → logprob: -14.50007152557373

Token 240: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.00016218038217630237
    2. 'idx' → logprob: -8.875162124633789
    3. '[idx' → logprob: -11.625162124633789
    4. 's' → logprob: -12.125162124633789
    5. 'Idx' → logprob: -13.375162124633789
    6. '```' → logprob: -13.750162124633789
    7. 'x' → logprob: -13.875162124633789
    8. '_idxs' → logprob: -14.125162124633789
    9. '_index' → logprob: -14.250162124633789
    10. '__' → logprob: -14.875162124633789

Token 241: ']' (ID: 60)
  Prédit: ']+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+=' → logprob: -0.08499288558959961
    2. ']' → logprob: -2.7099928855895996
    3. '].' → logprob: -5.0849928855896
    4. ']=' → logprob: -5.4599928855896
    5. '.val' → logprob: -5.5849928855896
    6. '+=' → logprob: -7.7099928855896
    7. ' ]' → logprob: -9.334993362426758
    8. ']+' → logprob: -9.834993362426758
    9. 'val' → logprob: -10.209993362426758
    10. '=' → logprob: -10.334993362426758

Token 242: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.05415000021457672
    2. ' +=' → logprob: -3.304150104522705
    3. '=' → logprob: -4.304150104522705
    4. '.val' → logprob: -6.179150104522705
    5. ' =' → logprob: -8.054149627685547
    6. '.__' → logprob: -10.929149627685547
    7. '+=(' → logprob: -11.179149627685547
    8. '.=' → logprob: -12.054149627685547
    9. ']+=' → logprob: -12.054149627685547
    10. ' ' → logprob: -12.179149627685547

Token 243: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11440000683069229
    2. '__' → logprob: -2.2393999099731445
    3. 'Box' → logprob: -6.9893999099731445
    4. 'str' → logprob: -8.864399909973145
    5. 'seq' → logprob: -8.989399909973145
    6. ' __' → logprob: -9.114399909973145
    7. ' ' → logprob: -9.239399909973145
    8. 'int' → logprob: -10.239399909973145
    9. 'idx' → logprob: -10.239399909973145
    10. 'Seq' → logprob: -10.489399909973145

Token 244: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3199128210544586
    2. '__' → logprob: -1.3199127912521362
    3. 'Box' → logprob: -5.444912910461426
    4. 'seq' → logprob: -7.069912910461426
    5. 'str' → logprob: -8.194912910461426
    6. 'idx' → logprob: -8.444912910461426
    7. '100' → logprob: -9.069912910461426
    8. 'int' → logprob: -9.319912910461426
    9. 'sys' → logprob: -9.319912910461426
    10. 'hat' → logprob: -9.444912910461426

Token 245: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 246: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 247: ' counter' (ID: 9446)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counter' (adapté à ' counter') → logprob: -0.058843422681093216
    2. 'if' → logprob: -3.6838433742523193
    3. ' counter' → logprob: -4.558843612670898
    4. '<|end|>' → logprob: -4.558843612670898
    5. 'hat' → logprob: -5.183843612670898
    6. ' if' → logprob: -6.558843612670898
    7. 'print' → logprob: -7.433843612670898
    8. 'continue' → logprob: -7.558843612670898
    9. '```' → logprob: -7.558843612670898
    10. '   ' → logprob: -7.808843612670898

Token 248: '256' (ID: 5780)
  Prédit: '256'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '256' → logprob: -5.200166469876422e-06
    2. '_' → logprob: -13.000004768371582
    3. '%' → logprob: -13.750004768371582
    4. '%=' → logprob: -14.625004768371582
    5. '```' → logprob: -15.125004768371582
    6. ' *=' → logprob: -15.625004768371582
    7. '*' → logprob: -16.0000057220459
    8. '255' → logprob: -16.1250057220459
    9. ' ' → logprob: -16.2500057220459
    10. '265' → logprob: -16.3750057220459

Token 249: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.16077888011932373
    2. ' %=' → logprob: -1.9107788801193237
    3. '%' → logprob: -7.535778999328613
    4. '=' → logprob: -11.035778999328613
    5. ' %' → logprob: -12.785778999328613
    6. ' =' → logprob: -14.410778999328613
    7. '   ' → logprob: -14.660778999328613
    8. '	' → logprob: -14.785778999328613
    9. '//=' → logprob: -15.535778999328613
    10. '*=' → logprob: -15.910778999328613

Token 250: ' modulus' (ID: 149464)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -6.511406809295295e-06
    2. ' modulus' → logprob: -12.500006675720215
    3. '100' → logprob: -13.000006675720215
    4. '(mod' → logprob: -14.625006675720215
    5. 'modifier' → logprob: -17.1250057220459
    6. '	mod' → logprob: -18.2500057220459
    7. 'module' → logprob: -19.3750057220459
    8. ' mod' → logprob: -19.5000057220459
    9. 'MOD' → logprob: -19.8750057220459
    10. ' ' → logprob: -20.2500057220459

Token 251: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 252: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 253: '(+' (ID: 72061)
  Prédit: '(counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(counter' → logprob: -0.00029279827140271664
    2. 'counter' → logprob: -8.250292778015137
    3. '(' → logprob: -10.375292778015137
    4. '()' → logprob: -16.000293731689453
    5. ' counter' → logprob: -16.250293731689453
    6. '[counter' → logprob: -16.625293731689453
    7. ' (' → logprob: -18.000293731689453
    8. '	counter' → logprob: -18.250293731689453
    9. '(count' → logprob: -18.375293731689453
    10. '(
' → logprob: -18.750293731689453

Token 254: 'counter' (ID: 32128)
  Prédit: 'counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counter' → logprob: -7.941850526549388e-06
    2. ' counter' → logprob: -11.750007629394531
    3. '(counter' → logprob: -20.37500762939453
    4. '[counter' → logprob: -20.37500762939453
    5. '	counter' → logprob: -21.00000762939453
    6. 'Counter' → logprob: -21.25000762939453
    7. '_counter' → logprob: -21.62500762939453
    8. '
' → logprob: -22.75000762939453
    9. 'controller' → logprob: -23.25000762939453
    10. 'container' → logprob: -23.50000762939453

Token 255: '256' (ID: 5780)
  Prédit: '256'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '256' → logprob: 0.0
    2. '25' → logprob: -18.875
    3. '2' → logprob: -20.25
    4. '```' → logprob: -20.375
    5. '255' → logprob: -20.875
    6. '_' → logprob: -21.625
    7. '257' → logprob: -22.5
    8. ' ' → logprob: -22.75
    9. '265' → logprob: -22.75
    10. '254' → logprob: -23.125

Token 256: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.45848218582978e-06
    2. ' )' → logprob: -13.25000286102295
    3. ')
' → logprob: -14.37500286102295
    4. '```' → logprob: -18.000001907348633
    5. '))' → logprob: -18.375001907348633
    6. ')`' → logprob: -18.500001907348633
    7. '')' → logprob: -19.625001907348633
    8. ')#' → logprob: -19.750001907348633
    9. '),' → logprob: -20.000001907348633
    10. '）' → logprob: -20.125001907348633

Token 257: ' modulus' (ID: 149464)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0008552397484891117
    2. ' modulus' → logprob: -7.250855445861816
    3. '(mod' → logprob: -9.125855445861816
    4. ' mod' → logprob: -10.375855445861816
    5. '100' → logprob: -12.375855445861816
    6. ' ' → logprob: -14.750855445861816
    7. '	mod' → logprob: -14.875855445861816
    8. '```' → logprob: -16.6258544921875
    9. '10' → logprob: -17.2508544921875
    10. ')' → logprob: -17.2508544921875

Token 258: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.107425062713446e-06
    2. ' )' → logprob: -12.500006675720215
    3. ')
' → logprob: -12.750006675720215
    4. '```' → logprob: -15.875006675720215
    5. '<|end|>' → logprob: -16.75000762939453
    6. '')' → logprob: -17.00000762939453
    7. '`)' → logprob: -17.12500762939453
    8. '))' → logprob: -17.37500762939453
    9. ')`' → logprob: -17.87500762939453
    10. '
' → logprob: -18.25000762939453

Token 259: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22652697563171387
    2. '<|end|>' → logprob: -1.7265269756317139
    3. ' ' → logprob: -4.851527214050293
    4. '
' → logprob: -5.101527214050293
    5. '```' → logprob: -6.226527214050293
    6. '#' → logprob: -6.226527214050293
    7. '%' → logprob: -6.726527214050293
    8. '\n' → logprob: -6.851527214050293
    9. 'n' → logprob: -6.976527214050293
    10. '[' → logprob: -7.226527214050293

Token 260: ' EOF' (ID: 72412)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 258
Tokens correctement prédits (1ère position, stricte): 109
Tokens correctement prédits (1ère position, avec adaptation): 116
Tokens correctement prédits (top 10): 198
Précision stricte (1ère position): 42.25%
Précision adaptée (1ère position): 44.96%
Précision (top 10): 76.74%
================================================================================
