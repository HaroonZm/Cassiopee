================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:39:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from collections import deque
from heapq import heapify, heappop, heappush

def decide_next_dst(cost, order):
    d = 0
    c = 0
    for key in order:
        if cost[key] > c:
            d = key
            c = cost[key]
    return (d, c)

def solve():
    inf = 10000000000
    input = sys.stdin.readline

    V, E = map(int, input().split())
    edge = dict()
    wf = dict()
    next_id = dict()
    for i in range(V):
        edge[i] = dict()
        wf[i] = dict()
        next_id[i] = dict()
        for j in range(V):
            edge[i][j] = 0 if i == j else inf
            wf[i][j] = 0 if i == j else inf
            next_id[i][j] = j

    for _ in range(E):
        u, v, d = map(int, input().split())
        edge[u - 1][v - 1] = d
        edge[v - 1][u - 1] = d
        wf[u - 1][v - 1] = d
        wf[v - 1][u - 1] = d

    for k in range(V):
        for i in range(V):
            for j in range(V):
                if wf[i][j] > wf[i][k] + wf[k][j]:
                    wf[i][j] = wf[i][k] + wf[k][j]
                    next_id[i][j] = next_id[i][k]

    T = int(input())
    order = set()
    stuck_order = set()
    command = [None] * T
    heading = 0
    dist_left = 0
    final_dist = 0
    stuck_cost = [0 for _ in range(V)]
    cost = [0 for _ in range(V)]
    driver_hold = 0
    store_hold = 0

    for t in range(T):
        N = int(input())
        if N == 1:
            new_id, dst = map(int, input().split())
            stuck_order |= {dst - 1}
            stuck_cost[dst - 1] += 1
            store_hold += 1

        if dist_left > 0:
            command[t] = heading + 1
            dist_left -= 1
        else:
            if heading == 0:
                if store_hold == 0 and driver_hold == 0:
                    command[t] = -1
                    continue
                else:
                    order |= stuck_order
                    for key in order:
                        cost[key] += stuck_cost[key]
                        stuck_cost[key] = 0
                    driver_hold = sum(cost)
                    stuck_order = set()
                    store_hold = 0

            if heading in order and heading > 0:
                order -= {heading}
                driver_hold -= cost[heading]
                cost[heading] = 0

            current_id = heading
            if len(order) > 0:
                if current_id == final_dist:
                    final_dist, max_hold = decide_next_dst(cost, order)
                    if driver_hold < store_hold and current_id > 0 and max_hold == 1:
                        final_dist = 0
            else:
                final_dist = 0

            heading = next_id[current_id][final_dist]
            dist_left = edge[current_id][heading] - 1
            command[t] = heading + 1

    for i in range(T):
        print(command[i])

    return 0

if __name__ == "__main__":
    solve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3205606937408447
    2. '.' → logprob: -1.4455606937408447
    3. 'import' → logprob: -4.570560455322266
    4. '\' → logprob: -4.570560455322266
    5. 'newline' → logprob: -5.195560455322266
    6. '<|end|>' → logprob: -5.320560455322266
    7. '
' → logprob: -6.570560455322266
    8. '```' → logprob: -7.070560455322266
    9. '<|end|>' → logprob: -7.195560455322266
    10. '\r' → logprob: -7.195560455322266

Token 4: ' collections' (ID: 22690)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.01821877807378769
    2. 'os' → logprob: -4.143218994140625
    3. ' Py' → logprob: -7.768218994140625
    4. ' pathlib' → logprob: -7.768218994140625
    5. ' collections' → logprob: -7.893218994140625
    6. ' math' → logprob: -8.768218994140625
    7. 'collections' → logprob: -9.018218994140625
    8. ' ' → logprob: -9.143218994140625
    9. ' typing' → logprob: -9.643218994140625
    10. ' datetime' → logprob: -9.768218994140625

Token 5: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7340998649597168
    2. ' import' → logprob: -0.7340998649597168
    3. '.' → logprob: -3.234099864959717
    4. ' ' → logprob: -8.859100341796875
    5. '.import' → logprob: -8.984100341796875
    6. '```' → logprob: -9.109100341796875
    7. '_' → logprob: -9.234100341796875
    8. '<|end|>' → logprob: -9.234100341796875
    9. '	import' → logprob: -10.109100341796875
    10. '_import' → logprob: -10.109100341796875

Token 6: ' deque' (ID: 90347)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.2895837128162384
    2. ' deque' → logprob: -1.664583683013916
    3. ' abc' → logprob: -3.039583683013916
    4. 'deque' → logprob: -4.539583683013916
    5. 'abc' → logprob: -6.414583683013916
    6. ' Counter' → logprob: -6.914583683013916
    7. ' named' → logprob: -7.289583683013916
    8. ' Ordered' → logprob: -9.914584159851074
    9. 'default' → logprob: -10.039584159851074
    10. ' import' → logprob: -10.039584159851074

Token 7: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9683268070220947
    2. '

' → logprob: -1.4683268070220947
    3. 'import' → logprob: -1.7183268070220947
    4. '
' → logprob: -2.0933268070220947
    5. '```' → logprob: -3.4683268070220947
    6. '\' → logprob: -3.8433268070220947
    7. '<|end|>' → logprob: -3.8433268070220947
    8. 'newline' → logprob: -5.593326568603516
    9. '<|end|>' → logprob: -5.968326568603516
    10. '' → logprob: -6.218326568603516

Token 8: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.6508832573890686
    2. '\n' → logprob: -1.6508831977844238
    3. '
' → logprob: -2.025883197784424
    4. 'import' → logprob: -2.650883197784424
    5. '```' → logprob: -2.650883197784424
    6. '\' → logprob: -5.525883197784424
    7. '<|end|>' → logprob: -5.650883197784424
    8. ',' → logprob: -6.400883197784424
    9. '<|end|>' → logprob: -7.025883197784424
    10. '``' → logprob: -7.900883197784424

Token 9: ' heap' (ID: 37237)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.4926671087741852
    2. ' typing' → logprob: -1.3676670789718628
    3. ' itertools' → logprob: -2.4926671981811523
    4. ' math' → logprob: -4.117667198181152
    5. ' heap' → logprob: -4.117667198181152
    6. 'queue' → logprob: -5.242667198181152
    7. ' threading' → logprob: -5.742667198181152
    8. ' collections' → logprob: -6.242667198181152
    9. ' copy' → logprob: -6.367667198181152
    10. 'typing' → logprob: -6.367667198181152

Token 10: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -4.008129963040119e-06
    2. 'queue' → logprob: -13.625003814697266
    3. ' queue' → logprob: -14.125003814697266
    4. 'import' → logprob: -14.125003814697266
    5. 'space' → logprob: -14.875003814697266
    6. '.' → logprob: -14.875003814697266
    7. 's' → logprob: -15.000003814697266
    8. ' import' → logprob: -15.875003814697266
    9. '_' → logprob: -17.375003814697266
    10. ' ' → logprob: -17.625003814697266

Token 11: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.012574045918881893
    2. 'import' → logprob: -4.387574195861816
    3. '.' → logprob: -10.512574195861816
    4. ' ' → logprob: -10.637574195861816
    5. '	import' → logprob: -12.387574195861816
    6. '.import' → logprob: -12.762574195861816
    7. '<|end|>' → logprob: -13.137574195861816
    8. '_import' → logprob: -13.887574195861816
    9. ' im' → logprob: -14.637574195861816
    10. ' importar' → logprob: -14.887574195861816

Token 12: ' heap' (ID: 37237)
  Prédit: ' he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.31508710980415344
    2. 'he' → logprob: -1.315087080001831
    3. 'heap' → logprob: -6.44008731842041
    4. ' heap' → logprob: -9.56508731842041
    5. ' ' → logprob: -10.19008731842041
    6. ' n' → logprob: -10.19008731842041
    7. 'nl' → logprob: -10.81508731842041
    8. 'n' → logprob: -10.94008731842041
    9. 'import' → logprob: -11.44008731842041
    10. '```' → logprob: -11.44008731842041

Token 13: 'ify' (ID: 1985)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.29019784927368164
    2. 'p' → logprob: -1.5401978492736816
    3. 'replace' → logprob: -3.7901978492736816
    4. 'ify' → logprob: -5.540197849273682
    5. 'app' → logprob: -6.040197849273682
    6. 'pp' → logprob: -6.040197849273682
    7. 'queue' → logprob: -6.290197849273682
    8. 'push' → logprob: -6.415197849273682
    9. 'ush' → logprob: -7.415197849273682
    10. 'n' → logprob: -7.915197849273682

Token 14: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03489600494503975
    2. 'import' → logprob: -4.284895896911621
    3. ',
' → logprob: -4.284895896911621
    4. '
' → logprob: -5.659895896911621
    5. '```' → logprob: -6.784895896911621
    6. '

' → logprob: -8.034895896911621
    7. ',

' → logprob: -8.159895896911621
    8. '\n' → logprob: -8.409895896911621
    9. '' → logprob: -8.409895896911621
    10. 'heap' → logprob: -8.534895896911621

Token 15: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.20177778601646423
    2. ' he' → logprob: -1.7017778158187866
    3. '.he' → logprob: -8.201777458190918
    4. '```' → logprob: -10.326777458190918
    5. 'heap' → logprob: -10.576777458190918
    6. '_he' → logprob: -11.076777458190918
    7. ' ' → logprob: -11.576777458190918
    8. 'merge' → logprob: -13.326777458190918
    9. 'nl' → logprob: -13.451777458190918
    10. '  ' → logprob: -14.326777458190918

Token 16: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -3.5954712075181305e-05
    2. 'ap' → logprob: -10.250036239624023
    3. 'a' → logprob: -14.875036239624023
    4. 'appen' → logprob: -16.750036239624023
    5. ' app' → logprob: -18.750036239624023
    6. 'appa' → logprob: -19.000036239624023
    7. 'pp' → logprob: -19.125036239624023
    8. 'append' → logprob: -19.625036239624023
    9. 'apps' → logprob: -19.750036239624023
    10. '	app' → logprob: -19.875036239624023

Token 17: 'op' (ID: 467)
  Prédit: 'ush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -6.0868278524139896e-05
    2. 'us' → logprob: -9.75006103515625
    3. 'u' → logprob: -13.50006103515625
    4. 'op' → logprob: -13.75006103515625
    5. 'USH' → logprob: -17.00006103515625
    6. 'o' → logprob: -17.87506103515625
    7. '```' → logprob: -18.62506103515625
    8. 'usch' → logprob: -18.75006103515625
    9. 'usha' → logprob: -19.00006103515625
    10. 'ut' → logprob: -19.12506103515625

Token 18: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0534600019454956
    2. '```' → logprob: -1.6784600019454956
    3. '
' → logprob: -1.8034600019454956
    4. '\n' → logprob: -2.303460121154785
    5. '

' → logprob: -2.428460121154785
    6. 'import' → logprob: -2.928460121154785
    7. '\' → logprob: -3.303460121154785
    8. '<|end|>' → logprob: -4.928460121154785
    9. '' → logprob: -5.553460121154785
    10. '`' → logprob: -6.303460121154785

Token 19: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.20329660177230835
    2. ' he' → logprob: -1.7032966613769531
    3. 'heap' → logprob: -6.328296661376953
    4. ' heap' → logprob: -9.453296661376953
    5. '```' → logprob: -11.578296661376953
    6. '.he' → logprob: -12.953296661376953
    7. ' ' → logprob: -13.078296661376953
    8. 'hep' → logprob: -13.828296661376953
    9. 'hev' → logprob: -14.828296661376953
    10. 'hea' → logprob: -14.953296661376953

Token 20: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.00026169343618676066
    2. 'ap' → logprob: -8.250261306762695
    3. 'a' → logprob: -15.875261306762695
    4. 'ап' → logprob: -16.125261306762695
    5. 'APP' → logprob: -16.625261306762695
    6. 'appen' → logprob: -16.875261306762695
    7. 'push' → logprob: -17.125261306762695
    8. 'appa' → logprob: -17.625261306762695
    9. 'pp' → logprob: -18.250261306762695
    10. 'apps' → logprob: -18.375261306762695

Token 21: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -7.226628895296017e-06
    2. 'us' → logprob: -12.125007629394531
    3. 'u' → logprob: -13.375007629394531
    4. 'op' → logprob: -16.37500762939453
    5. 'ut' → logprob: -17.12500762939453
    6. 'USH' → logprob: -17.50000762939453
    7. 'sh' → logprob: -18.50000762939453
    8. '```' → logprob: -19.00000762939453
    9. ' ush' → logprob: -19.00000762939453
    10. 'o' → logprob: -20.62500762939453

Token 22: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.5977649092674255
    2. '
' → logprob: -0.8477649092674255
    3. '```' → logprob: -5.09776496887207
    4. 'def' → logprob: -5.34776496887207
    5. '\n' → logprob: -5.34776496887207
    6. '\' → logprob: -5.97276496887207
    7. '' → logprob: -6.34776496887207
    8. '
' → logprob: -6.97276496887207
    9. '


' → logprob: -9.09776496887207
    10. 'd' → logprob: -9.34776496887207

Token 23: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.36763104796409607
    2. 'd' → logprob: -1.3676310777664185
    3. 'class' → logprob: -3.867630958557129
    4. '\' → logprob: -3.867630958557129
    5. '```' → logprob: -5.242630958557129
    6. '' → logprob: -6.742630958557129
    7. 'n' → logprob: -6.867630958557129
    8. 'de' → logprob: -6.867630958557129
    9. '#' → logprob: -7.242630958557129
    10. '
' → logprob: -7.242630958557129

Token 24: ' decide' (ID: 13001)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1848294883966446
    2. ' solve' → logprob: -2.5598294734954834
    3. ' main' → logprob: -3.6848294734954834
    4. ' shortest' → logprob: -3.8098294734954834
    5. ' bfs' → logprob: -4.0598297119140625
    6. ' find' → logprob: -5.1848297119140625
    7. ' top' → logprob: -5.5598297119140625
    8. ' max' → logprob: -5.5598297119140625
    9. ' process' → logprob: -5.9348297119140625
    10. ' d' → logprob: -6.3098297119140625

Token 25: '_next' (ID: 25436)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05501757562160492
    2. '(' → logprob: -3.1800174713134766
    3. '_space' → logprob: -4.930017471313477
    4. ' _' → logprob: -6.680017471313477
    5. ' (' → logprob: -7.055017471313477
    6. '_token' → logprob: -8.680017471313477
    7. '_a' → logprob: -9.055017471313477
    8. '_con' → logprob: -9.430017471313477
    9. ' ' → logprob: -9.555017471313477
    10. '(_' → logprob: -9.555017471313477

Token 26: '_dst' (ID: 79776)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.33995139598846436
    2. '_token' → logprob: -1.3399513959884644
    3. '_move' → logprob: -3.839951515197754
    4. '_step' → logprob: -6.089951515197754
    5. '_action' → logprob: -6.464951515197754
    6. '_space' → logprob: -8.339951515197754
    7. '_character' → logprob: -9.089951515197754
    8. '_command' → logprob: -9.464951515197754
    9. '_parent' → logprob: -9.589951515197754
    10. '_task' → logprob: -9.714951515197754

Token 27: '(cost' (ID: 133554)
  Prédit: 'ination'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ination' → logprob: -0.14662614464759827
    2. '(' → logprob: -2.2716262340545654
    3. '_' → logprob: -3.5216262340545654
    4. 'INATION' → logprob: -6.646625995635986
    5. 'inate' → logprob: -7.271625995635986
    6. 'in' → logprob: -7.646625995635986
    7. '_in' → logprob: -8.271626472473145
    8. '_node' → logprob: -8.771626472473145
    9. '(_' → logprob: -9.146626472473145
    10. 'inations' → logprob: -9.271626472473145

Token 28: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1511601060628891
    2. ',' → logprob: -2.4011600017547607
    3. 's' → logprob: -3.7761600017547607
    4. ')' → logprob: -3.7761600017547607
    5. '[' → logprob: -6.77616024017334
    6. '_path' → logprob: -7.02616024017334
    7. '_node' → logprob: -8.27616024017334
    8. '_list' → logprob: -8.27616024017334
    9. '_map' → logprob: -8.77616024017334
    10. ' ):' → logprob: -8.90116024017334

Token 29: ' order' (ID: 2569)
  Prédit: ' src'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' src' → logprob: -0.7297149300575256
    2. ' current' → logprob: -2.604714870452881
    3. ' dst' → logprob: -2.729714870452881
    4. ' source' → logprob: -3.104714870452881
    5. ' path' → logprob: -3.229714870452881
    6. ' start' → logprob: -3.229714870452881
    7. ' prev' → logprob: -3.354714870452881
    8. 'src' → logprob: -3.729714870452881
    9. ' next' → logprob: -4.104714870452881
    10. ' queue' → logprob: -4.354714870452881

Token 30: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2549763321876526
    2. 's' → logprob: -1.6299762725830078
    3. ',' → logprob: -5.129976272583008
    4. '_type' → logprob: -5.254976272583008
    5. ')' → logprob: -5.504976272583008
    6. '_list' → logprob: -5.879976272583008
    7. '_queue' → logprob: -6.254976272583008
    8. '_idx' → logprob: -6.379976272583008
    9. '_dest' → logprob: -6.379976272583008
    10. '_dst' → logprob: -6.504976272583008

Token 31: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13961537182331085
    2. '   ' → logprob: -2.889615297317505
    3. '(' → logprob: -3.014615297317505
    4. '):' → logprob: -4.014615535736084
    5. '_' → logprob: -6.389615535736084
    6. '    ' → logprob: -6.639615535736084
    7. ' :' → logprob: -6.889615535736084
    8. '():' → logprob: -7.139615535736084
    9. '[' → logprob: -7.889615535736084
    10. ')' → logprob: -7.889615535736084

Token 32: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3071524500846863
    2. '   ' → logprob: -2.307152509689331
    3. '    ' → logprob: -3.057152509689331
    4. ' 
' → logprob: -3.182152509689331
    5. ' if' → logprob: -4.432152271270752
    6. '\' → logprob: -4.682152271270752
    7. ' :' → logprob: -4.932152271270752
    8. 'n' → logprob: -5.057152271270752
    9. ':' → logprob: -5.432152271270752
    10. ' ```' → logprob: -5.682152271270752

Token 33: ' =' (ID: 314)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.012434888631105423
    2. 'est' → logprob: -5.262434959411621
    3. 'st' → logprob: -5.512434959411621
    4. 'i' → logprob: -6.637434959411621
    5. 's' → logprob: -6.887434959411621
    6. '=' → logprob: -8.887434959411621
    7. '```' → logprob: -9.262434959411621
    8. 'istance' → logprob: -9.637434959411621
    9. 'estination' → logprob: -9.637434959411621
    10. 'ist' → logprob: -9.887434959411621

Token 34: ' ' (ID: 220)
  Prédit: ' deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.45147597789764404
    2. ' {}' → logprob: -1.201475977897644
    3. 'e' → logprob: -3.5764760971069336
    4. ' defaultdict' → logprob: -4.326476097106934
    5. '{}' → logprob: -4.576476097106934
    6. ' dict' → logprob: -5.576476097106934
    7. 'deque' → logprob: -5.576476097106934
    8. ' []' → logprob: -6.701476097106934
    9. ' {' → logprob: -7.076476097106934
    10. ' e' → logprob: -7.326476097106934

Token 35: '0' (ID: 15)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.036031387746334076
    2. 'deque' → logprob: -3.536031484603882
    3. '{' → logprob: -5.661031246185303
    4. 'dict' → logprob: -6.411031246185303
    5. 'default' → logprob: -7.286031246185303
    6. 'e' → logprob: -9.286031723022461
    7. ' {}' → logprob: -9.286031723022461
    8. 'collections' → logprob: -9.536031723022461
    9. '{})' → logprob: -10.286031723022461
    10. ' deque' → logprob: -10.661031723022461

Token 36: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5226015448570251
    2. '<|end|>' → logprob: -1.39760160446167
    3. ' ' → logprob: -2.77260160446167
    4. 'x' → logprob: -3.14760160446167
    5. '<|end|>' → logprob: -4.64760160446167
    6. ',' → logprob: -4.89760160446167
    7. ')' → logprob: -5.27260160446167
    8. 'd' → logprob: -5.39760160446167
    9. '   ' → logprob: -5.52260160446167
    10. '#' → logprob: -5.64760160446167

Token 37: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0252189002931118
    2. ',' → logprob: -5.275218963623047
    3. 'x' → logprob: -5.650218963623047
    4. ' ' → logprob: -5.650218963623047
    5. '  
' → logprob: -6.150218963623047
    6. '<|end|>' → logprob: -6.525218963623047
    7. ' 
' → logprob: -6.775218963623047
    8. 'while' → logprob: -6.900218963623047
    9. 'for' → logprob: -7.025218963623047
    10. ',
' → logprob: -7.275218963623047

Token 38: ' c' (ID: 274)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6599102020263672
    2. ' while' → logprob: -1.9099102020263672
    3. ' for' → logprob: -1.9099102020263672
    4. 'while' → logprob: -2.784910202026367
    5. ' ' → logprob: -3.284910202026367
    6. '
' → logprob: -4.159910202026367
    7. ' max' → logprob: -4.409910202026367
    8. ' if' → logprob: -4.659910202026367
    9. 'n' → logprob: -4.909910202026367
    10. ',' → logprob: -5.034910202026367

Token 39: ' =' (ID: 314)
  Prédit: 'ost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.011470048688352108
    2. 'urrent' → logprob: -4.636469841003418
    3. 'ur' → logprob: -7.511469841003418
    4. 'urr' → logprob: -7.886469841003418
    5. ' =' → logprob: -8.386469841003418
    6. 'ont' → logprob: -9.261469841003418
    7. 'on' → logprob: -10.011469841003418
    8. '=' → logprob: -10.136469841003418
    9. 'ount' → logprob: -10.136469841003418
    10. ' +=' → logprob: -10.136469841003418

Token 40: ' ' (ID: 220)
  Prédit: ' cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.5494616627693176
    2. ' order' → logprob: -1.9244616031646729
    3. 'ost' → logprob: -2.174461603164673
    4. 'cost' → logprob: -2.424461603164673
    5. ' ' → logprob: -3.424461603164673
    6. '0' → logprob: -4.049461841583252
    7. 'order' → logprob: -4.174461841583252
    8. ' len' → logprob: -5.924461841583252
    9. ' float' → logprob: -6.549461841583252
    10. ' sys' → logprob: -6.549461841583252

Token 41: '0' (ID: 15)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.3126486837863922
    2. '0' → logprob: -1.5626486539840698
    3. 'float' → logprob: -3.6876487731933594
    4. 'order' → logprob: -3.8126487731933594
    5. 'len' → logprob: -6.187648773193359
    6. '[' → logprob: -6.187648773193359
    7. '100' → logprob: -6.562648773193359
    8. 'sys' → logprob: -6.562648773193359
    9. 'ost' → logprob: -6.937648773193359
    10. '1' → logprob: -7.187648773193359

Token 42: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2812989950180054
    2. '
' → logprob: -1.7812989950180054
    3. ' 
' → logprob: -1.9062989950180054
    4. '<|end|>' → logprob: -2.156299114227295
    5. '   ' → logprob: -2.281299114227295
    6. ' for' → logprob: -2.781299114227295
    7. '  ' → logprob: -3.906299114227295
    8. 'for' → logprob: -3.906299114227295
    9. '  
' → logprob: -3.906299114227295
    10. ',' → logprob: -4.406299114227295

Token 43: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1458560228347778
    2. '<|end|>' → logprob: -1.3958560228347778
    3. ' for' → logprob: -2.2708559036254883
    4. '   ' → logprob: -2.3958559036254883
    5. ' ' → logprob: -2.6458559036254883
    6. 'for' → logprob: -2.8958559036254883
    7. ',' → logprob: -3.1458559036254883
    8. ' 
' → logprob: -4.020855903625488
    9. '  ' → logprob: -4.020855903625488
    10. ')' → logprob: -4.895855903625488

Token 44: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.45252278447151184
    2. 'for' (adapté à ' for') → logprob: -1.0775227546691895
    3. 'n' → logprob: -4.9525227546691895
    4. '   ' → logprob: -4.9525227546691895
    5. ' ' → logprob: -5.4525227546691895
    6. ' while' → logprob: -6.7025227546691895
    7. ' n' → logprob: -7.5775227546691895
    8. 'while' → logprob: -7.5775227546691895
    9. ' max' → logprob: -7.9525227546691895
    10. ',' → logprob: -7.9525227546691895

Token 45: ' key' (ID: 2140)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.044492125511169434
    2. 'i' → logprob: -5.169492244720459
    3. ' _' → logprob: -5.419492244720459
    4. ' dst' → logprob: -5.419492244720459
    5. ' idx' → logprob: -5.544492244720459
    6. ' o' → logprob: -6.044492244720459
    7. ' dest' → logprob: -6.419492244720459
    8. ' next' → logprob: -6.419492244720459
    9. ' w' → logprob: -6.419492244720459
    10. ' destination' → logprob: -6.544492244720459

Token 46: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.40164807438850403
    2. ' in' → logprob: -1.1516480445861816
    3. ' ,' → logprob: -4.776648044586182
    4. 'in' → logprob: -5.401648044586182
    5. ',value' → logprob: -6.651648044586182
    6. 's' → logprob: -8.77664852142334
    7. ' ' → logprob: -9.27664852142334
    8. ',val' → logprob: -9.90164852142334
    9. ',in' → logprob: -11.08914852142334
    10. ',d' → logprob: -11.46414852142334

Token 47: ' order' (ID: 2569)
  Prédit: ' cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.15075960755348206
    2. ' order' → logprob: -2.025759696960449
    3. 'cost' → logprob: -5.525759696960449
    4. ' range' → logprob: -6.150759696960449
    5. ' sorted' → logprob: -6.775759696960449
    6. 'order' → logprob: -7.650759696960449
    7. ' list' → logprob: -9.15075969696045
    8. '(cost' → logprob: -9.65075969696045
    9. 'sorted' → logprob: -10.27575969696045
    10. ' ' → logprob: -10.65075969696045

Token 48: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00032712158281356096
    2. ' :' → logprob: -8.750327110290527
    3. ':
' → logprob: -9.500327110290527
    4. '.keys' → logprob: -10.250327110290527
    5. '[' → logprob: -11.000327110290527
    6. '   ' → logprob: -11.500327110290527
    7. '):' → logprob: -11.875327110290527
    8. ',' → logprob: -12.125327110290527
    9. '.' → logprob: -12.500327110290527
    10. '():' → logprob: -12.500327110290527

Token 49: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6489976644515991
    2. '       ' → logprob: -0.7739976644515991
    3. '<|end|>' → logprob: -5.398997783660889
    4. '   ' → logprob: -5.648997783660889
    5. ',' → logprob: -6.023997783660889
    6. '    ' → logprob: -6.398997783660889
    7. ':
' → logprob: -6.523997783660889
    8. ' if' → logprob: -7.273997783660889
    9. '):' → logprob: -8.39899730682373
    10. ' :' → logprob: -8.39899730682373

Token 50: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.4004578590393066
    2. ' ' → logprob: -1.5254578590393066
    3. ' 
' → logprob: -2.0254578590393066
    4. '<|end|>' → logprob: -2.2754578590393066
    5. '       ' → logprob: -2.4004578590393066
    6. '   ' → logprob: -3.1504578590393066
    7. ' c' → logprob: -3.2754578590393066
    8. '    ' → logprob: -3.2754578590393066
    9. '
' → logprob: -3.9004578590393066
    10. ':' → logprob: -4.400457859039307

Token 51: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.051149435341358185
    2. ' key' → logprob: -3.551149368286133
    3. ' c' → logprob: -4.801149368286133
    4. ' order' → logprob: -4.801149368286133
    5. 'cost' → logprob: -5.676149368286133
    6. ' not' → logprob: -7.801149368286133
    7. ' ' → logprob: -8.176149368286133
    8. '(cost' → logprob: -9.176149368286133
    9. 'key' → logprob: -9.301149368286133
    10. 'c' → logprob: -9.301149368286133

Token 52: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -0.0012899977155029774
    2. '[' → logprob: -7.0012898445129395
    3. '.get' → logprob: -8.001290321350098
    4. ' [' → logprob: -11.001290321350098
    5. '>' → logprob: -12.251290321350098
    6. '[c' → logprob: -12.751290321350098
    7. ' ' → logprob: -13.001290321350098
    8. '   ' → logprob: -13.001290321350098
    9. '[get' → logprob: -13.376290321350098
    10. '.' → logprob: -13.501290321350098

Token 53: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07956763356924057
    2. '[' → logprob: -3.4545676708221436
    3. ']>' → logprob: -3.9545676708221436
    4. '>' → logprob: -4.5795674324035645
    5. ' >' → logprob: -5.2045674324035645
    6. ' ]' → logprob: -5.3295674324035645
    7. ' <' → logprob: -6.5795674324035645
    8. ' ' → logprob: -6.8295674324035645
    9. ']<' → logprob: -6.9545674324035645
    10. ']==' → logprob: -8.204567909240723

Token 54: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -1.0580089092254639
    2. ' <' → logprob: -1.3080089092254639
    3. ' >' → logprob: -1.4330089092254639
    4. '<' → logprob: -2.058008909225464
    5. '[' → logprob: -5.308009147644043
    6. ' <=' → logprob: -5.433009147644043
    7. '<=' → logprob: -6.058009147644043
    8. '<c' → logprob: -6.933009147644043
    9. '==' → logprob: -7.183009147644043
    10. ' ' → logprob: -7.183009147644043

Token 55: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.307641863822937
    2. ' c' → logprob: -1.432641863822937
    3. '0' → logprob: -3.8076419830322266
    4. ' ' → logprob: -6.182641983032227
    5. ' d' → logprob: -7.307641983032227
    6. 'd' → logprob: -7.557641983032227
    7. 'cost' → logprob: -8.057641983032227
    8. ' cost' → logprob: -8.932641983032227
    9. '1' → logprob: -9.807641983032227
    10. '   ' → logprob: -10.182641983032227

Token 56: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04063469544053078
    2. ':
' → logprob: -3.2906346321105957
    3. ' and' → logprob: -7.290634632110596
    4. '       ' → logprob: -7.290634632110596
    5. '<|end|>' → logprob: -8.040635108947754
    6. '):' → logprob: -8.290635108947754
    7. ' :' → logprob: -8.540635108947754
    8. '0' → logprob: -8.915635108947754
    9. ',' → logprob: -9.790635108947754
    10. ' or' → logprob: -10.540635108947754

Token 57: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7949775457382202
    2. ':' → logprob: -1.0449775457382202
    3. ' :' → logprob: -2.6699776649475098
    4. ' c' → logprob: -3.5449776649475098
    5. ' ' → logprob: -3.6699776649475098
    6. '    ' → logprob: -4.29497766494751
    7. '0' → logprob: -4.66997766494751
    8. '   ' → logprob: -4.79497766494751
    9. ':
' → logprob: -4.91997766494751
    10. 'c' → logprob: -5.04497766494751

Token 58: ' d' (ID: 272)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.4540524482727051
    2. ' 
' → logprob: -1.454052448272705
    3. 'c' → logprob: -2.329052448272705
    4. ' ' → logprob: -3.829052448272705
    5. ' d' → logprob: -6.204052448272705
    6. '        
' → logprob: -6.204052448272705
    7. '```' → logprob: -6.829052448272705
    8. 'd' (adapté à ' d') → logprob: -6.954052448272705
    9. ' ' → logprob: -7.329052448272705
    10. '       ' → logprob: -7.454052448272705

Token 59: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014226616360247135
    2. '=' → logprob: -4.26422643661499
    3. ',' → logprob: -9.889226913452148
    4. ' ' → logprob: -11.889226913452148
    5. ' +=' → logprob: -12.514226913452148
    6. ' ,' → logprob: -14.389226913452148
    7. ' =
' → logprob: -15.264226913452148
    8. '    ' → logprob: -15.514226913452148
    9. '<|end|>' → logprob: -15.889226913452148
    10. '+=' → logprob: -16.26422691345215

Token 60: ' key' (ID: 2140)
  Prédit: ' key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.09005704522132874
    2. 'key' → logprob: -2.590057134628296
    3. ' cost' → logprob: -4.590056896209717
    4. 'cost' → logprob: -6.965056896209717
    5. '	key' → logprob: -13.215057373046875
    6. ' ' → logprob: -13.215057373046875
    7. ' ' → logprob: -13.590057373046875
    8. '_key' → logprob: -14.777557373046875
    9. 'Key' → logprob: -15.090057373046875
    10. ' code' → logprob: -15.152557373046875

Token 61: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7477726936340332
    2. '
' → logprob: -0.9977726936340332
    3. ' 
' → logprob: -2.247772693634033
    4. '       ' → logprob: -3.997772693634033
    5. '        
' → logprob: -4.747772693634033
    6. '            
' → logprob: -5.247772693634033
    7. '    
' → logprob: -5.372772693634033
    8. '  
' → logprob: -5.497772693634033
    9. '
' → logprob: -5.622772693634033
    10. '   
' → logprob: -6.622772693634033

Token 62: '           ' (ID: 352)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.16677261888980865
    2. '
' → logprob: -2.1667726039886475
    3. '           ' → logprob: -3.6667726039886475
    4. '            
' → logprob: -5.541772842407227
    5. '        
' → logprob: -5.791772842407227
    6. '    
' → logprob: -6.666772842407227
    7. '  
' → logprob: -6.791772842407227
    8. '   
' → logprob: -7.166772842407227
    9. '     
' → logprob: -7.541772842407227
    10. '<|end|>' → logprob: -7.541772842407227

Token 63: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.8958628177642822
    2. ' cost' → logprob: -1.1458628177642822
    3. 'cost' → logprob: -1.5208628177642822
    4. ' c' → logprob: -2.8958628177642822
    5. '	c' → logprob: -12.020862579345703
    6. ' ' → logprob: -12.895862579345703
    7. '```' → logprob: -13.395862579345703
    8. '           ' → logprob: -13.520862579345703
    9. ' ' → logprob: -13.645862579345703
    10. '_cost' → logprob: -13.645862579345703

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.474078506231308
    2. '=' → logprob: -0.9740785360336304
    3. ' ' → logprob: -13.599078178405762
    4. ',' → logprob: -15.599078178405762
    5. '<|end|>' → logprob: -16.849079132080078
    6. '=
' → logprob: -17.849079132080078
    7. ' =
' → logprob: -18.099079132080078
    8. '=

' → logprob: -18.224079132080078
    9. ' +=' → logprob: -18.599079132080078
    10. '.=' → logprob: -18.974079132080078

Token 65: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.07889155298471451
    2. 'cost' → logprob: -2.5788915157318115
    3. '(cost' → logprob: -14.07889175415039
    4. ' kost' → logprob: -15.20389175415039
    5. '_cost' → logprob: -15.70389175415039
    6. '.cost' → logprob: -15.82889175415039
    7. ' ' → logprob: -16.70389175415039
    8. ' costs' → logprob: -16.95389175415039
    9. ' coste' → logprob: -16.95389175415039
    10. ' ' → logprob: -17.07889175415039

Token 66: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -8.506661833962426e-05
    2. '[' → logprob: -9.37508487701416
    3. ' [' → logprob: -15.87508487701416
    4. '[token' → logprob: -17.875085830688477
    5. '[
' → logprob: -18.250085830688477
    6. '[k' → logprob: -18.250085830688477
    7. 'key' → logprob: -18.875085830688477
    8. ' key' → logprob: -19.250085830688477
    9. '[next' → logprob: -19.500085830688477
    10. '```' → logprob: -19.750085830688477

Token 67: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004284603521227837
    2. ')
' → logprob: -5.879284381866455
    3. '<|end|>' → logprob: -6.629284381866455
    4. ']' → logprob: -9.879284858703613
    5. '<|end|>' → logprob: -10.129284858703613
    6. '}' → logprob: -10.629284858703613
    7. '
' → logprob: -11.504284858703613
    8. ')return' → logprob: -11.629284858703613
    9. '```' → logprob: -11.879284858703613
    10. ')

' → logprob: -12.504284858703613

Token 68: '   ' (ID: 271)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.4956505298614502
    2. '
' → logprob: -1.1206505298614502
    3. 'return' → logprob: -3.99565052986145
    4. '   ' → logprob: -4.370650291442871
    5. '    
' → logprob: -4.870650291442871
    6. ' ' → logprob: -5.120650291442871
    7. '\n' → logprob: -5.245650291442871
    8. ' return' → logprob: -5.370650291442871
    9. '<|end|>' → logprob: -5.745650291442871
    10. '  
' → logprob: -6.495650291442871

Token 69: ' return' (ID: 622)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.5343214869499207
    2. 'return' (adapté à ' return') → logprob: -1.9093215465545654
    3. ' ' → logprob: -2.0343215465545654
    4. ' return' → logprob: -2.7843215465545654
    5. '<|end|>' → logprob: -4.159321308135986
    6. '   ' → logprob: -4.284321308135986
    7. '
' → logprob: -4.659321308135986
    8. ')' → logprob: -5.034321308135986
    9. '    
' → logprob: -5.034321308135986
    10. '\n' → logprob: -5.159321308135986

Token 70: ' (' (ID: 350)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.08901809900999069
    2. 'd' → logprob: -2.4640181064605713
    3. ' ' → logprob: -9.839017868041992
    4. ' ' → logprob: -10.714017868041992
    5. 'space' → logprob: -13.964017868041992
    6. '	d' → logprob: -14.714017868041992
    7. '_d' → logprob: -14.964017868041992
    8. '0' → logprob: -15.589017868041992
    9. '_' → logprob: -15.589017868041992
    10. ''' → logprob: -16.151517868041992

Token 71: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.005308231338858604
    2. ' d' → logprob: -5.255308151245117
    3. ')' → logprob: -10.005308151245117
    4. ')d' → logprob: -10.505308151245117
    5. ' )' → logprob: -14.755308151245117
    6. '   ' → logprob: -15.130308151245117
    7. ',' → logprob: -15.255308151245117
    8. ''d' → logprob: -15.380308151245117
    9. '	d' → logprob: -15.380308151245117
    10. ' ' → logprob: -15.630308151245117

Token 72: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011320956982672215
    2. ',' → logprob: -4.511321067810059
    3. ' )' → logprob: -8.636321067810059
    4. ',)' → logprob: -10.261321067810059
    5. '+' → logprob: -10.636321067810059
    6. ' ,' → logprob: -11.886321067810059
    7. ',d' → logprob: -11.886321067810059
    8. ' +' → logprob: -12.011321067810059
    9. ')
' → logprob: -12.261321067810059
    10. ')d' → logprob: -12.886321067810059

Token 73: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.0904838889837265
    2. 'c' → logprob: -2.4654839038848877
    3. ')' → logprob: -6.840483665466309
    4. ' )' → logprob: -8.090483665466309
    5. ')c' → logprob: -8.965483665466309
    6. ' ' → logprob: -10.965483665466309
    7. ' True' → logprob: -12.465483665466309
    8. ' ' → logprob: -12.965483665466309
    9. '1' → logprob: -13.215483665466309
    10. '0' → logprob: -13.215483665466309

Token 74: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. ')
' → logprob: -13.750001907348633
    3. ' )' → logprob: -14.375001907348633
    4. ')return' → logprob: -18.625001907348633
    5. ')`' → logprob: -18.875001907348633
    6. ')

' → logprob: -19.000001907348633
    7. '))' → logprob: -19.250001907348633
    8. ')
' → logprob: -20.000001907348633
    9. '),' → logprob: -20.125001907348633
    10. ')#' → logprob: -20.875001907348633

Token 75: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 76: ' solve' (ID: 17722)
  Prédit: ' solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.8658254742622375
    2. ' bfs' → logprob: -1.9908254146575928
    3. ' main' → logprob: -2.1158254146575928
    4. ' find' → logprob: -2.7408254146575928
    5. ' shortest' → logprob: -3.3658254146575928
    6. ' calculate' → logprob: -3.3658254146575928
    7. ' process' → logprob: -3.6158254146575928
    8. ' solution' → logprob: -4.115825653076172
    9. ' max' → logprob: -4.115825653076172
    10. 'solve' → logprob: -4.490825653076172

Token 77: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.35643503069877625
    2. '(' → logprob: -1.2314350605010986
    3. '()' → logprob: -5.9814348220825195
    4. '(s' → logprob: -6.9814348220825195
    5. '(num' → logprob: -7.7314348220825195
    6. '(N' → logprob: -7.9814348220825195
    7. '(a' → logprob: -8.48143482208252
    8. '(line' → logprob: -8.60643482208252
    9. '(input' → logprob: -8.73143482208252
    10. '(A' → logprob: -8.73143482208252

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39677026867866516
    2. ' n' → logprob: -1.5217702388763428
    3. ' input' → logprob: -3.0217702388763428
    4. ' import' → logprob: -3.1467702388763428
    5. 'n' → logprob: -4.521770477294922
    6. 'import' → logprob: -5.646770477294922
    7. ' sys' → logprob: -6.771770477294922
    8. 'input' → logprob: -7.521770477294922
    9. ' N' → logprob: -7.646770477294922
    10. ' t' → logprob: -8.646770477294922

Token 79: ' inf' (ID: 5603)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1328855752944946
    2. 'n' → logprob: -1.2578855752944946
    3. 'input' → logprob: -2.382885456085205
    4. ' input' → logprob: -2.507885456085205
    5. 'import' → logprob: -2.632885456085205
    6. ' n' → logprob: -2.632885456085205
    7. 'N' → logprob: -3.007885456085205
    8. ' import' → logprob: -4.382885456085205
    9. ' N' → logprob: -4.507885456085205
    10. 't' → logprob: -6.757885456085205

Token 80: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.26107844710350037
    2. ' =' → logprob: -2.011078357696533
    3. '=float' → logprob: -2.886078357696533
    4. 'inity' → logprob: -4.011078357696533
    5. '=int' → logprob: -4.011078357696533
    6. 'inite' → logprob: -6.136078357696533
    7. 'inty' → logprob: -8.511078834533691
    8. '   ' → logprob: -8.636078834533691
    9. '=np' → logprob: -8.636078834533691
    10. 'initely' → logprob: -8.761078834533691

Token 81: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.29523730278015137
    2. ' float' → logprob: -2.1702373027801514
    3. '10' → logprob: -2.2952373027801514
    4. 'float' → logprob: -3.5452373027801514
    5. ' int' → logprob: -5.0452375411987305
    6. 'int' → logprob: -5.6702375411987305
    7. '1' → logprob: -7.0452375411987305
    8. '100' → logprob: -7.1702375411987305
    9. ' sys' → logprob: -8.92023754119873
    10. '999' → logprob: -10.67023754119873

Token 82: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.32026493549346924
    2. 'float' → logprob: -1.4452649354934692
    3. 'int' → logprob: -3.5702648162841797
    4. '100' → logprob: -5.44526481628418
    5. '1' → logprob: -5.69526481628418
    6. '999' → logprob: -6.57026481628418
    7. ' ' → logprob: -8.82026481628418
    8. ' float' → logprob: -8.94526481628418
    9. '200' → logprob: -9.07026481628418
    10. 'sys' → logprob: -9.19526481628418

Token 83: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.0010391215328127146
    2. '9' → logprob: -7.626039028167725
    3. '10' → logprob: -8.876039505004883
    4. '100' → logprob: -9.126039505004883
    5. '00' → logprob: -9.376039505004883
    6. '001' → logprob: -9.876039505004883
    7. '_' → logprob: -10.126039505004883
    8. '0' → logprob: -10.251039505004883
    9. '7' → logprob: -10.876039505004883
    10. '007' → logprob: -11.001039505004883

Token 84: '000' (ID: 1302)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3656785786151886
    2. '000' → logprob: -1.2406785488128662
    3. '00' → logprob: -4.115678787231445
    4. '007' → logprob: -7.365678787231445
    5. '1' → logprob: -10.115678787231445
    6. '07' → logprob: -10.240678787231445
    7. '001' → logprob: -10.740678787231445
    8. '7' → logprob: -11.615678787231445
    9. '
' → logprob: -11.740678787231445
    10. '01' → logprob: -12.365678787231445

Token 85: '00' (ID: 504)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009057439863681793
    2. '000' → logprob: -4.759057521820068
    3. '7' → logprob: -8.13405704498291
    4. '007' → logprob: -10.00905704498291
    5. '
' → logprob: -10.13405704498291
    6. '00' → logprob: -10.25905704498291
    7. '1' → logprob: -10.88405704498291
    8. '9' → logprob: -12.50905704498291
    9. ' ' → logprob: -13.13405704498291
    10. '07' → logprob: -14.25905704498291

Token 86: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04673517495393753
    2. '<|end|>' → logprob: -4.5467352867126465
    3. 'n' → logprob: -4.7967352867126465
    4. ' ' → logprob: -4.9217352867126465
    5. ' 
' → logprob: -5.1717352867126465
    6. '    
' → logprob: -5.6717352867126465
    7. '   ' → logprob: -6.6717352867126465
    8. '\n' → logprob: -6.7967352867126465
    9. 'input' → logprob: -6.7967352867126465
    10. '
' → logprob: -6.7967352867126465

Token 87: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.15151986479759216
    2. '   ' → logprob: -2.651519775390625
    3. ' n' → logprob: -2.901519775390625
    4. ' input' → logprob: -5.151519775390625
    5. 'input' → logprob: -5.526519775390625
    6. '    
' → logprob: -7.276519775390625
    7. 't' → logprob: -7.276519775390625
    8. 'import' → logprob: -7.651519775390625
    9. '    ' → logprob: -7.776519775390625
    10. '	n' → logprob: -7.901519775390625

Token 88: ' input' (ID: 3422)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5927469730377197
    2. 'input' (adapté à ' input') → logprob: -1.3427469730377197
    3. '   ' → logprob: -2.8427469730377197
    4. ' input' → logprob: -3.0927469730377197
    5. ' n' → logprob: -3.2177469730377197
    6. 'N' → logprob: -3.5927469730377197
    7. 't' → logprob: -5.092746734619141
    8. ' N' → logprob: -5.467746734619141
    9. ' t' → logprob: -7.967746734619141
    10. 'q' → logprob: -8.21774673461914

Token 89: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2632402181625366
    2. ' =' → logprob: -2.263240337371826
    3. '_data' → logprob: -3.013240337371826
    4. '_' → logprob: -3.138240337371826
    5. '=' → logprob: -4.138240337371826
    6. '_line' → logprob: -4.513240337371826
    7. '_lines' → logprob: -6.138240337371826
    8. '(' → logprob: -6.763240337371826
    9. 's' → logprob: -7.013240337371826
    10. '().' → logprob: -7.138240337371826

Token 90: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.018203794956207275
    2. 'sys' → logprob: -4.0182037353515625
    3. ' input' → logprob: -10.393203735351562
    4. '	sys' → logprob: -11.518203735351562
    5. ' lambda' → logprob: -11.893203735351562
    6. 'input' → logprob: -12.518203735351562
    7. '=sys' → logprob: -13.768203735351562
    8. ' ' → logprob: -14.018203735351562
    9. '(sys' → logprob: -14.518203735351562
    10. 'lambda' → logprob: -14.768203735351562

Token 91: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00012403888104017824
    2. '.stdout' → logprob: -10.125123977661133
    3. '.readline' → logprob: -10.250123977661133
    4. '.' → logprob: -10.250123977661133
    5. '.std' → logprob: -12.250123977661133
    6. '.input' → logprob: -12.375123977661133
    7. '.argv' → logprob: -13.250123977661133
    8. '.max' → logprob: -14.375123977661133
    9. 'stdin' → logprob: -14.875123977661133
    10. '.st' → logprob: -15.000123977661133

Token 92: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0004061242798343301
    2. '.read' → logprob: -8.125406265258789
    3. '.' → logprob: -9.375406265258789
    4. '.buffer' → logprob: -11.250406265258789
    5. '.readlines' → logprob: -11.625406265258789
    6. 'read' → logprob: -13.000406265258789
    7. ' readline' → logprob: -15.250406265258789
    8. 'buffer' → logprob: -15.375406265258789
    9. '.Read' → logprob: -15.875406265258789
    10. '.stdin' → logprob: -16.12540626525879

Token 93: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7499282360076904
    2. '()' → logprob: -0.7499282360076904
    3. '    
' → logprob: -3.7499282360076904
    4. '
' → logprob: -4.8749284744262695
    5. '()
' → logprob: -5.2499284744262695
    6. '(' → logprob: -5.3749284744262695
    7. ' ' → logprob: -5.7499284744262695
    8. '  
' → logprob: -6.7499284744262695
    9. ' ()' → logprob: -6.7499284744262695
    10. '()\' → logprob: -6.8749284744262695

Token 94: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35427114367485046
    2. 'n' → logprob: -1.4792711734771729
    3. ' n' → logprob: -2.729271173477173
    4. '    
' → logprob: -6.354270935058594
    5. 't' → logprob: -7.229270935058594
    6. ' t' → logprob: -7.604270935058594
    7. '    ' → logprob: -7.979270935058594
    8. ' N' → logprob: -7.979270935058594
    9. '	n' → logprob: -7.979270935058594
    10. 's' → logprob: -8.604270935058594

Token 95: ' V' (ID: 631)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5496734976768494
    2. 'N' → logprob: -1.2996735572814941
    3. '   ' → logprob: -2.424673557281494
    4. 't' → logprob: -3.424673557281494
    5. 'T' → logprob: -4.424673557281494
    6. 'Q' → logprob: -5.424673557281494
    7. 'q' → logprob: -6.049673557281494
    8. 'V' (adapté à ' V') → logprob: -6.174673557281494
    9. ' n' → logprob: -6.424673557281494
    10. ' N' → logprob: -7.174673557281494

Token 96: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009261203929781914
    2. ' ,' → logprob: -4.759261131286621
    3. ',Q' → logprob: -8.134261131286621
    4. ',E' → logprob: -8.634261131286621
    5. ',N' → logprob: -9.759261131286621
    6. ' =' → logprob: -10.384261131286621
    7. ',n' → logprob: -11.259261131286621
    8. '=' → logprob: -11.509261131286621
    9. 'Q' → logprob: -11.634261131286621
    10. ',M' → logprob: -11.634261131286621

Token 97: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.6251885294914246
    2. ' E' → logprob: -0.8751885294914246
    3. 'Q' → logprob: -4.12518835067749
    4. 'W' → logprob: -4.37518835067749
    5. ' ' → logprob: -4.75018835067749
    6. ' W' → logprob: -5.62518835067749
    7. ' Q' → logprob: -5.75018835067749
    8. '<|end|>' → logprob: -7.37518835067749
    9. 'T' → logprob: -7.50018835067749
    10. 'N' → logprob: -7.75018835067749

Token 98: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08897317200899124
    2. '=' → logprob: -2.4639732837677
    3. ',' → logprob: -10.838973045349121
    4. ' ' → logprob: -11.338973045349121
    5. ' ,' → logprob: -14.463973045349121
    6. '=input' → logprob: -14.713973045349121
    7. ' =
' → logprob: -15.713973045349121
    8. '    ' → logprob: -15.838973045349121
    9. '=line' → logprob: -15.963973045349121
    10. '=int' → logprob: -16.213973999023438

Token 99: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.005352466832846403
    2. 'map' → logprob: -5.25535249710083
    3. ' input' → logprob: -9.880352020263672
    4. ' ' → logprob: -10.130352020263672
    5. ' list' → logprob: -10.880352020263672
    6. 'input' → logprob: -12.630352020263672
    7. ' [' → logprob: -12.880352020263672
    8. '	map' → logprob: -13.755352020263672
    9. ' ' → logprob: -15.130352020263672
    10. 'list' → logprob: -15.130352020263672

Token 100: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3017837405204773
    2. '(input' → logprob: -1.426783800125122
    3. '(int' → logprob: -4.551783561706543
    4. '(lambda' → logprob: -5.426783561706543
    5. '<|end|>' → logprob: -5.551783561706543
    6. '(str' → logprob: -7.301783561706543
    7. '(
' → logprob: -7.926783561706543
    8. '(eval' → logprob: -9.051783561706543
    9. ')' → logprob: -10.051783561706543
    10. '()' → logprob: -10.551783561706543

Token 101: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.49286791682243347
    2. ',input' → logprob: -0.9928679466247559
    3. '(input' → logprob: -4.367867946624756
    4. 'input' → logprob: -5.242867946624756
    5. '(' → logprob: -8.117867469787598
    6. 'sys' → logprob: -9.617867469787598
    7. '(sys' → logprob: -9.617867469787598
    8. ')' → logprob: -9.742867469787598
    9. ' ,' → logprob: -9.867867469787598
    10. ' input' → logprob: -10.117867469787598

Token 102: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.38697734475135803
    2. ' input' → logprob: -1.1369773149490356
    3. ' sys' → logprob: -10.011977195739746
    4. 'sys' → logprob: -10.386977195739746
    5. ')' → logprob: -10.636977195739746
    6. ' ' → logprob: -12.636977195739746
    7. '(input' → logprob: -14.011977195739746
    8. ' )' → logprob: -14.511977195739746
    9. '   ' → logprob: -14.886977195739746
    10. 'str' → logprob: -14.886977195739746

Token 103: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.673547563375905e-05
    2. '()' → logprob: -9.375086784362793
    3. '())' → logprob: -13.875086784362793
    4. ' ().' → logprob: -14.750086784362793
    5. ')' → logprob: -15.625086784362793
    6. '().'' → logprob: -15.875086784362793
    7. '(' → logprob: -16.875085830688477
    8. '('' → logprob: -17.250085830688477
    9. '()
' → logprob: -17.500085830688477
    10. '('').' → logprob: -18.000085830688477

Token 104: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.25338661670684814
    2. 'strip' → logprob: -1.5033866167068481
    3. 'rstrip' → logprob: -6.628386497497559
    4. 'read' → logprob: -9.003386497497559
    5. '(split' → logprob: -11.878386497497559
    6. ' split' → logprob: -13.003386497497559
    7. ' strip' → logprob: -13.753386497497559
    8. '().' → logprob: -15.003386497497559
    9. '(strip' → logprob: -15.878386497497559
    10. ')' → logprob: -16.628387451171875

Token 105: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002498490735888481
    2. '())' → logprob: -6.127498626708984
    3. '()' → logprob: -8.252498626708984
    4. '))' → logprob: -10.627498626708984
    5. ')
' → logprob: -11.502498626708984
    6. '(' → logprob: -11.752498626708984
    7. ')`' → logprob: -13.002498626708984
    8. ' )' → logprob: -13.252498626708984
    9. '),' → logprob: -13.502498626708984
    10. ')")' → logprob: -13.752498626708984

Token 106: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5036202669143677
    2. ' graph' → logprob: -2.128620147705078
    3. 'graph' → logprob: -2.253620147705078
    4. 'dist' → logprob: -2.503620147705078
    5. 'distance' → logprob: -3.878620147705078
    6. '    
' → logprob: -4.253620147705078
    7. ' distances' → logprob: -4.378620147705078
    8. '
' → logprob: -4.628620147705078
    9. ' 
' → logprob: -4.878620147705078
    10. ' dist' → logprob: -5.128620147705078

Token 107: ' edge' (ID: 11165)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.3041059672832489
    2. 'adj' → logprob: -2.6791059970855713
    3. 'dist' → logprob: -2.8041059970855713
    4. 'G' → logprob: -3.9291059970855713
    5. 'cost' → logprob: -4.304105758666992
    6. 'dst' → logprob: -4.429105758666992
    7. 'start' → logprob: -4.429105758666992
    8. 'edges' → logprob: -4.679105758666992
    9. 'K' → logprob: -4.804105758666992
    10. 'S' → logprob: -5.054105758666992

Token 108: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0002777822664938867
    2. ' =' → logprob: -8.875277519226074
    3. '=' → logprob: -10.125277519226074
    4. 'list' → logprob: -10.250277519226074
    5. '_list' → logprob: -10.375277519226074
    6. 'cost' → logprob: -11.875277519226074
    7. '   ' → logprob: -12.500277519226074
    8. 'List' → logprob: -12.500277519226074
    9. ' ' → logprob: -12.875277519226074
    10. ' s' → logprob: -13.625277519226074

Token 109: ' dict' (ID: 11878)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4062151610851288
    2. ' [[]' → logprob: -1.1562151908874512
    3. ' [' → logprob: -5.031215190887451
    4. '{' → logprob: -5.031215190887451
    5. '[]' → logprob: -5.656215190887451
    6. '{}' → logprob: -6.406215190887451
    7. ' {' → logprob: -7.656215190887451
    8. ' [{}' → logprob: -8.156214714050293
    9. ' []' → logprob: -9.781214714050293
    10. 'default' → logprob: -10.031214714050293

Token 110: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00010711929644457996
    2. '()
' → logprob: -9.250106811523438
    3. '()

' → logprob: -12.375106811523438
    4. '()\' → logprob: -13.125106811523438
    5. '()]' → logprob: -14.125106811523438
    6. '[]' → logprob: -14.375106811523438
    7. '(' → logprob: -14.375106811523438
    8. ' ()' → logprob: -14.625106811523438
    9. '=' → logprob: -14.750106811523438
    10. '()
' → logprob: -14.875106811523438

Token 111: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009424308082088828
    2. '    
' → logprob: -8.12594223022461
    3. '<|end|>' → logprob: -8.25094223022461
    4. '
' → logprob: -8.62594223022461
    5. ' for' → logprob: -9.00094223022461
    6. 'for' → logprob: -9.75094223022461
    7. '<|end|>' → logprob: -11.50094223022461
    8. '```' → logprob: -13.25094223022461
    9. ',' → logprob: -13.37594223022461
    10. '	for' → logprob: -13.37594223022461

Token 112: ' wf' (ID: 99382)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10041671991348267
    2. ' for' → logprob: -2.725416660308838
    3. '   ' → logprob: -3.975416660308838
    4. 'dist' → logprob: -4.850416660308838
    5. 'graph' → logprob: -6.850416660308838
    6. 'dp' → logprob: -7.475416660308838
    7. 'distance' → logprob: -7.725416660308838
    8. 'cost' → logprob: -8.600417137145996
    9. 'adj' → logprob: -8.725417137145996
    10. ' dist' → logprob: -9.100417137145996

Token 113: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6459628939628601
    2. 'dist' → logprob: -1.7709629535675049
    3. '=' → logprob: -2.145962953567505
    4. 't' → logprob: -2.520962953567505
    5. ' dist' → logprob: -3.770962953567505
    6. 'w' → logprob: -4.145962715148926
    7. 'ull' → logprob: -4.520962715148926
    8. '_dist' → logprob: -5.270962715148926
    9. 'graph' → logprob: -5.895962715148926
    10. '=edge' → logprob: -5.895962715148926

Token 114: ' dict' (ID: 11878)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9709599018096924
    2. '[[' → logprob: -1.4709599018096924
    3. ' [' → logprob: -1.7209599018096924
    4. ' [[' → logprob: -2.3459599018096924
    5. '{' → logprob: -2.9709599018096924
    6. '{}' → logprob: -3.4709599018096924
    7. '[V' → logprob: -4.720959663391113
    8. ' {' → logprob: -5.345959663391113
    9. '[]' → logprob: -5.595959663391113
    10. 'default' → logprob: -5.595959663391113

Token 115: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00030197695014066994
    2. '()
' → logprob: -8.6253023147583
    3. '(' → logprob: -9.6253023147583
    4. '(lambda' → logprob: -10.3753023147583
    5. '(int' → logprob: -11.6253023147583
    6. '(list' → logprob: -12.3753023147583
    7. '()

' → logprob: -13.0003023147583
    8. '();' → logprob: -13.2503023147583
    9. '()\' → logprob: -13.6253023147583
    10. '()]' → logprob: -13.7503023147583

Token 116: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014115668833255768
    2. ' for' → logprob: -4.889115810394287
    3. 'for' → logprob: -5.139115810394287
    4. '<|end|>' → logprob: -7.639115810394287
    5. '    
' → logprob: -9.639115333557129
    6. '
' → logprob: -10.514115333557129
    7. 'edges' → logprob: -11.889115333557129
    8. ',' → logprob: -12.389115333557129
    9. '  ' → logprob: -12.639115333557129
    10. '	for' → logprob: -12.764115333557129

Token 117: ' next' (ID: 2613)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12436861544847488
    2. ' for' → logprob: -2.249368667602539
    3. '   ' → logprob: -4.499368667602539
    4. 'dist' → logprob: -8.374368667602539
    5. 'distance' → logprob: -9.999368667602539
    6. 'graph' → logprob: -11.499368667602539
    7. '	for' → logprob: -11.874368667602539
    8. ' ' → logprob: -11.874368667602539
    9. 'dp' → logprob: -11.874368667602539
    10. 'visited' → logprob: -12.124368667602539

Token 118: '_id' (ID: 1537)
  Prédit: '_dst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dst' → logprob: -0.3863689601421356
    2. '_node' → logprob: -2.261368989944458
    3. ' =' → logprob: -2.886368989944458
    4. '_' → logprob: -3.636368989944458
    5. '()' → logprob: -3.886368989944458
    6. '_cost' → logprob: -4.011368751525879
    7. '=' → logprob: -4.636368751525879
    8. 's' → logprob: -4.886368751525879
    9. '_dist' → logprob: -4.886368751525879
    10. '_nodes' → logprob: -5.011368751525879

Token 119: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1803060919046402
    2. '=' → logprob: -1.805306077003479
    3. '_' → logprob: -8.430306434631348
    4. ' ' → logprob: -8.680306434631348
    5. 'x' → logprob: -9.680306434631348
    6. '  ' → logprob: -10.680306434631348
    7. 's' → logprob: -10.805306434631348
    8. '   ' → logprob: -11.055306434631348
    9. '	' → logprob: -11.180306434631348
    10. '    ' → logprob: -11.680306434631348

Token 120: ' dict' (ID: 11878)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1733642816543579
    2. ' ' → logprob: -1.923364281654358
    3. ' V' → logprob: -5.298364162445068
    4. 'V' → logprob: -5.423364162445068
    5. '1' → logprob: -5.673364162445068
    6. '2' → logprob: -10.423364639282227
    7. ' -' → logprob: -10.923364639282227
    8. '   ' → logprob: -11.110864639282227
    9. '[V' → logprob: -11.298364639282227
    10. '3' → logprob: -11.360864639282227

Token 121: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -6.146429223008454e-05
    2. '()
' → logprob: -9.75006103515625
    3. '()

' → logprob: -13.50006103515625
    4. ' ()' → logprob: -14.00006103515625
    5. '()
' → logprob: -14.87506103515625
    6. '();' → logprob: -15.62506103515625
    7. '()`' → logprob: -16.62506103515625
    8. '()]' → logprob: -16.75006103515625
    9. '()\' → logprob: -16.75006103515625
    10. '(' → logprob: -17.00006103515625

Token 122: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028463156893849373
    2. ' for' → logprob: -4.153463363647461
    3. 'for' → logprob: -4.653463363647461
    4. '    
' → logprob: -6.653463363647461
    5. '<|end|>' → logprob: -7.778463363647461
    6. '
' → logprob: -8.653463363647461
    7. ',' → logprob: -9.278463363647461
    8. '	for' → logprob: -9.653463363647461
    9. 'next' → logprob: -9.778463363647461
    10. '  ' → logprob: -9.903463363647461

Token 123: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4156006872653961
    2. ' for' → logprob: -1.2906006574630737
    3. '   ' → logprob: -3.0406007766723633
    4. 'idx' → logprob: -6.040600776672363
    5. 'id' → logprob: -6.290600776672363
    6. 'dist' → logprob: -6.415600776672363
    7. 'max' → logprob: -6.790600776672363
    8. 'distance' → logprob: -6.915600776672363
    9. 'current' → logprob: -7.040600776672363
    10. 'cnt' → logprob: -7.165600776672363

Token 124: ' i' (ID: 575)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.07837308943271637
    2. '_' → logprob: -2.7033731937408447
    3. ' i' → logprob: -4.828372955322266
    4. 'i' → logprob: -7.953372955322266
    5. '_i' → logprob: -10.453372955322266
    6. ' ' → logprob: -11.078372955322266
    7. ' ' → logprob: -12.828372955322266
    8. ' range' → logprob: -14.328372955322266
    9. '   ' → logprob: -14.703372955322266
    10. ' in' → logprob: -14.703372955322266

Token 125: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003763974644243717
    2. 'in' → logprob: -5.6287641525268555
    3. ' ' → logprob: -9.628764152526855
    4. 'n' → logprob: -10.003764152526855
    5. '_' → logprob: -10.878764152526855
    6. 'range' → logprob: -11.378764152526855
    7. ' range' → logprob: -12.753764152526855
    8. ',' → logprob: -13.066264152526855
    9. 'd' → logprob: -13.128764152526855
    10. '   ' → logprob: -13.128764152526855

Token 126: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.31326910853385925
    2. 'range' → logprob: -1.3132691383361816
    3. '	range' → logprob: -12.688268661499023
    4. '(range' → logprob: -12.938268661499023
    5. 'ange' → logprob: -14.438268661499023
    6. ' ' → logprob: -14.438268661499023
    7. 'rang' → logprob: -15.188268661499023
    8. ' xrange' → logprob: -15.813268661499023
    9. '  ' → logprob: -16.688268661499023
    10. '_range' → logprob: -16.938268661499023

Token 127: '(V' (ID: 16949)
  Prédit: '(E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(E' → logprob: -0.5046347975730896
    2. '(V' → logprob: -1.0046348571777344
    3. '(' → logprob: -3.5046348571777344
    4. ' (' → logprob: -11.379634857177734
    5. '(N' → logprob: -12.629634857177734
    6. '(
' → logprob: -12.754634857177734
    7. 'E' → logprob: -12.879634857177734
    8. '   ' → logprob: -13.254634857177734
    9. '(len' → logprob: -13.379634857177734
    10. '(int' → logprob: -13.379634857177734

Token 128: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06248508021235466
    2. '):
' → logprob: -2.8124849796295166
    3. '+' → logprob: -8.062484741210938
    4. ' ):' → logprob: -9.062484741210938
    5. '   ' → logprob: -9.812484741210938
    6. '):
' → logprob: -11.312484741210938
    7. ' ):
' → logprob: -12.687484741210938
    8. '-' → logprob: -12.687484741210938
    9. ' +' → logprob: -12.812484741210938
    10. ':' → logprob: -13.312484741210938

Token 129: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002550100442022085
    2. ' next' → logprob: -6.62755012512207
    3. '   ' → logprob: -7.12755012512207
    4. ' for' → logprob: -9.00255012512207
    5. ' edge' → logprob: -9.12755012512207
    6. '
' → logprob: -9.25255012512207
    7. 'next' → logprob: -10.50255012512207
    8. '<|end|>' → logprob: -11.62755012512207
    9. ' wf' → logprob: -12.00255012512207
    10. ',' → logprob: -12.12755012512207

Token 130: ' edge' (ID: 11165)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5373374819755554
    2. ' edge' → logprob: -1.5373375415802002
    3. ' next' → logprob: -2.5373375415802
    4. ' wf' → logprob: -2.7873375415802
    5. 'edge' (adapté à ' edge') → logprob: -3.7873375415802
    6. 'wf' → logprob: -4.162337303161621
    7. '       ' → logprob: -4.287337303161621
    8. 'next' → logprob: -5.162337303161621
    9. ' for' → logprob: -7.662337303161621
    10. ' ' → logprob: -7.787337303161621

Token 131: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0007915244204923511
    2. '[' → logprob: -7.500791549682617
    3. ' [' → logprob: -8.375791549682617
    4. '[]' → logprob: -12.750791549682617
    5. ' =' → logprob: -13.625791549682617
    6. '[id' → logprob: -13.625791549682617
    7. '=' → logprob: -14.625791549682617
    8. '[I' → logprob: -14.750791549682617
    9. ' ' → logprob: -15.625791549682617
    10. '[line' → logprob: -15.750791549682617

Token 132: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001370357465930283
    2. ']=' → logprob: -6.626370429992676
    3. '=' → logprob: -10.626370429992676
    4. ' ]' → logprob: -11.001370429992676
    5. ']={' → logprob: -13.126370429992676
    6. ' =' → logprob: -14.751370429992676
    7. ')' → logprob: -15.376370429992676
    8. ' ' → logprob: -15.501370429992676
    9. '])' → logprob: -15.626370429992676
    10. ',' → logprob: -15.751370429992676

Token 133: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.016058653593063354
    2. ' =' → logprob: -4.141058444976807
    3. '=[]' → logprob: -10.641058921813965
    4. ' ' → logprob: -15.891058921813965
    5. '=set' → logprob: -16.39105796813965
    6. '={}' → logprob: -16.39105796813965
    7. '=[]
' → logprob: -16.51605796813965
    8. ']' → logprob: -17.14105796813965
    9. ',' → logprob: -17.26605796813965
    10. ']=' → logprob: -17.76605796813965

Token 134: ' dict' (ID: 11878)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.000526938121765852
    2. '{}' → logprob: -8.625527381896973
    3. 'deque' → logprob: -8.625527381896973
    4. ' []' → logprob: -9.000527381896973
    5. 'set' → logprob: -10.500527381896973
    6. 'list' → logprob: -11.375527381896973
    7. '[]}' → logprob: -13.125527381896973
    8. 'dict' → logprob: -13.250527381896973
    9. '[]
' → logprob: -13.750527381896973
    10. ' deque' → logprob: -15.125527381896973

Token 135: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -8.315936429426074e-05
    2. '()
' → logprob: -9.500082969665527
    3. '()

' → logprob: -12.500082969665527
    4. '()]' → logprob: -13.750082969665527
    5. '())' → logprob: -14.500082969665527
    6. '()\' → logprob: -14.625082969665527
    7. '()<' → logprob: -14.750082969665527
    8. '()>' → logprob: -14.750082969665527
    9. '()</' → logprob: -15.375082969665527
    10. '()}' → logprob: -15.375082969665527

Token 136: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.309536337852478
    2. '       ' → logprob: -1.434536337852478
    3. 'for' → logprob: -1.559536337852478
    4. '   ' → logprob: -1.934536337852478
    5. '<|end|>' → logprob: -2.4345364570617676
    6. '
' → logprob: -3.6845364570617676
    7. 'next' → logprob: -4.809536457061768
    8. ' next' → logprob: -4.934536457061768
    9. ' ' → logprob: -6.309536457061768
    10. 'Next' → logprob: -6.809536457061768

Token 137: ' wf' (ID: 99382)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46737268567085266
    2. ' next' → logprob: -1.5923726558685303
    3. 'next' → logprob: -2.9673726558685303
    4. ' wf' → logprob: -2.9673726558685303
    5. 'wf' (adapté à ' wf') → logprob: -2.9673726558685303
    6. '   ' → logprob: -4.717372894287109
    7. ' for' → logprob: -5.467372894287109
    8. 'for' → logprob: -7.092372894287109
    9. ' ' → logprob: -7.717372894287109
    10. '           ' → logprob: -8.27987289428711

Token 138: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.7755875129951164e-05
    2. ' [' → logprob: -10.12504768371582
    3. '[' → logprob: -12.00004768371582
    4. '   ' → logprob: -14.87504768371582
    5. ' =' → logprob: -15.50004768371582
    6. ' ' → logprob: -16.00004768371582
    7. '[I' → logprob: -16.00004768371582
    8. '
' → logprob: -16.50004768371582
    9. '=' → logprob: -16.75004768371582
    10. '[
' → logprob: -16.87504768371582

Token 139: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005550591740757227
    2. ']=' → logprob: -8.000555038452148
    3. '=' → logprob: -8.625555038452148
    4. ')' → logprob: -11.375555038452148
    5. ']={' → logprob: -11.750555038452148
    6. ' =' → logprob: -12.000555038452148
    7. '][' → logprob: -12.125555038452148
    8. ' ]' → logprob: -12.250555038452148
    9. '[i' → logprob: -13.375555038452148
    10. '[' → logprob: -14.000555038452148

Token 140: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07921604812145233
    2. ' =' → logprob: -2.5792160034179688
    3. '[' → logprob: -8.454216003417969
    4. '={}' → logprob: -9.579216003417969
    5. '={' → logprob: -10.954216003417969
    6. '.clear' → logprob: -11.954216003417969
    7. '[:]' → logprob: -12.204216003417969
    8. '[i' → logprob: -12.329216003417969
    9. ' ' → logprob: -12.829216003417969
    10. '   ' → logprob: -13.579216003417969

Token 141: ' dict' (ID: 11878)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.5880581140518188
    2. '[]' → logprob: -1.9630581140518188
    3. 'dict' → logprob: -2.3380579948425293
    4. '0' → logprob: -2.5880579948425293
    5. '{}' → logprob: -2.9630579948425293
    6. 'deque' → logprob: -3.0880579948425293
    7. '{' → logprob: -4.838057994842529
    8. '-' → logprob: -4.963057994842529
    9. 'False' → logprob: -5.213057994842529
    10. 'set' → logprob: -5.588057994842529

Token 142: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0002087853499688208
    2. '()
' → logprob: -8.500208854675293
    3. '()

' → logprob: -13.500208854675293
    4. '<|end|>' → logprob: -13.750208854675293
    5. '()]' → logprob: -13.875208854675293
    6. '()\' → logprob: -14.375208854675293
    7. '()<' → logprob: -15.375208854675293
    8. '()}' → logprob: -15.375208854675293
    9. '())' → logprob: -15.375208854675293
    10. '()
' → logprob: -15.750208854675293

Token 143: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06478055566549301
    2. '<|end|>' → logprob: -3.1897804737091064
    3. '   ' → logprob: -4.3147807121276855
    4. ' for' → logprob: -5.1897807121276855
    5. 'for' → logprob: -6.5647807121276855
    6. ' next' → logprob: -8.564780235290527
    7. '<|end|>' → logprob: -8.564780235290527
    8. '
' → logprob: -8.814780235290527
    9. '```' → logprob: -8.939780235290527
    10. ' ' → logprob: -9.189780235290527

Token 144: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.5385270118713379
    2. '       ' → logprob: -1.413527011871338
    3. 'next' (adapté à ' next') → logprob: -2.538527011871338
    4. '   ' → logprob: -3.163527011871338
    5. ' for' → logprob: -3.413527011871338
    6. 'for' → logprob: -4.038527011871338
    7. 'Next' → logprob: -8.03852653503418
    8. '	next' → logprob: -8.53852653503418
    9. ' ' → logprob: -8.66352653503418
    10. '           ' → logprob: -8.78852653503418

Token 145: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -7.465036105713807e-06
    2. '_i' → logprob: -13.125007629394531
    3. '[i' → logprob: -13.750007629394531
    4. '_' → logprob: -14.000007629394531
    5. '   ' → logprob: -14.500007629394531
    6. '[' → logprob: -14.875007629394531
    7. '_ids' → logprob: -15.000007629394531
    8. '```' → logprob: -15.000007629394531
    9. ' _' → logprob: -15.125007629394531
    10. 'id' → logprob: -15.375007629394531

Token 146: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001698094274615869
    2. '[' → logprob: -9.37516975402832
    3. ' [' → logprob: -10.12516975402832
    4. ' =' → logprob: -10.75016975402832
    5. '=' → logprob: -11.00016975402832
    6. '(i' → logprob: -13.37516975402832
    7. '[I' → logprob: -14.12516975402832
    8. ')' → logprob: -14.37516975402832
    9. ')[' → logprob: -14.37516975402832
    10. '=[' → logprob: -14.62516975402832

Token 147: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005144290626049042
    2. ']=' → logprob: -7.750514507293701
    3. '=' → logprob: -10.250514030456543
    4. ' ]' → logprob: -10.375514030456543
    5. ']={' → logprob: -12.000514030456543
    6. ' =' → logprob: -12.250514030456543
    7. '][' → logprob: -12.375514030456543
    8. ')' → logprob: -14.250514030456543
    9. '[' → logprob: -15.000514030456543
    10. '[i' → logprob: -15.375514030456543

Token 148: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003607436316087842
    2. ' =' → logprob: -5.628607273101807
    3. '={}' → logprob: -11.878607749938965
    4. '=[]' → logprob: -15.253607749938965
    5. '={' → logprob: -16.12860679626465
    6. ' ' → logprob: -17.62860679626465
    7. '={}
' → logprob: -17.62860679626465
    8. '[' → logprob: -17.62860679626465
    9. '{}' → logprob: -18.37860679626465
    10. '=dict' → logprob: -19.00360679626465

Token 149: ' dict' (ID: 11878)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.2556909322738647
    2. 'dict' → logprob: -1.2556909322738647
    3. '0' → logprob: -1.3806909322738647
    4. '{}' → logprob: -2.2556910514831543
    5. 'deque' → logprob: -3.5056910514831543
    6. 'i' → logprob: -4.380691051483154
    7. '[]' → logprob: -4.630691051483154
    8. 'default' → logprob: -5.380691051483154
    9. '{i' → logprob: -5.380691051483154
    10. '{' → logprob: -5.505691051483154

Token 150: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.7610454708337784e-05
    2. '()
' → logprob: -10.625027656555176
    3. '()]' → logprob: -13.875027656555176
    4. '()

' → logprob: -14.125027656555176
    5. '(' → logprob: -14.875027656555176
    6. ' ()' → logprob: -15.250027656555176
    7. '()\' → logprob: -15.500027656555176
    8. '()>' → logprob: -15.875027656555176
    9. '()<' → logprob: -16.00002670288086
    10. '()</' → logprob: -16.12502670288086

Token 151: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 152: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.15705615282058716
    2. 'for' (adapté à ' for') → logprob: -2.0320560932159424
    3. '   ' → logprob: -4.4070563316345215
    4. '<|end|>' → logprob: -6.7820563316345215
    5. '
' → logprob: -7.9070563316345215
    6. '       ' → logprob: -9.032055854797363
    7. ' ' → logprob: -9.907055854797363
    8. '	for' → logprob: -10.032055854797363
    9. '<|end|>' → logprob: -10.157055854797363
    10. '    
' → logprob: -10.157055854797363

Token 153: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.14308157563209534
    2. 'j' → logprob: -2.0180816650390625
    3. ' v' → logprob: -9.018081665039062
    4. '_j' → logprob: -9.143081665039062
    5. 'v' → logprob: -10.143081665039062
    6. '_' → logprob: -11.018081665039062
    7. ' w' → logprob: -11.143081665039062
    8. ' ' → logprob: -11.393081665039062
    9. '	j' → logprob: -11.705581665039062
    10. ' _' → logprob: -11.830581665039062

Token 154: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00248719216324389
    2. 'in' → logprob: -6.0024871826171875
    3. ' ' → logprob: -12.377487182617188
    4. 'range' → logprob: -12.627487182617188
    5. '<|end|>' → logprob: -13.502487182617188
    6. ' range' → logprob: -13.877487182617188
    7. '    ' → logprob: -14.252487182617188
    8. '   ' → logprob: -14.627487182617188
    9. '  ' → logprob: -16.127487182617188
    10. '<|end|>' → logprob: -16.377487182617188

Token 155: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.47407880425453186
    2. ' range' → logprob: -0.9740787744522095
    3. '(range' → logprob: -14.099079132080078
    4. ' ' → logprob: -14.599079132080078
    5. '	range' → logprob: -15.724079132080078
    6. '   ' → logprob: -15.849079132080078
    7. '  ' → logprob: -16.099079132080078
    8. 'Range' → logprob: -17.599079132080078
    9. 'rang' → logprob: -17.599079132080078
    10. '    ' → logprob: -17.599079132080078

Token 156: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.018386850133538246
    2. '(i' → logprob: -4.0183868408203125
    3. '(' → logprob: -8.768386840820312
    4. ' (' → logprob: -10.393386840820312
    5. '(range' → logprob: -11.018386840820312
    6. 'range' → logprob: -11.143386840820312
    7. '   ' → logprob: -12.268386840820312
    8. 'i' → logprob: -12.393386840820312
    9. '(j' → logprob: -12.893386840820312
    10. ' range' → logprob: -13.643386840820312

Token 157: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14611724019050598
    2. '):
' → logprob: -2.0211172103881836
    3. ':' → logprob: -6.521117210388184
    4. '       ' → logprob: -7.396117210388184
    5. '           ' → logprob: -7.521117210388184
    6. '+' → logprob: -7.896117210388184
    7. '   ' → logprob: -8.771117210388184
    8. ')' → logprob: -9.896117210388184
    9. ':
' → logprob: -9.896117210388184
    10. '):

' → logprob: -10.646117210388184

Token 158: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.363617962459102e-05
    2. '<|end|>' → logprob: -11.250083923339844
    3. '            
' → logprob: -11.250083923339844
    4. '            ' → logprob: -11.375083923339844
    5. '	       ' → logprob: -11.750083923339844
    6. '		' → logprob: -12.125083923339844
    7. ' ' → logprob: -12.250083923339844
    8. ',' → logprob: -12.250083923339844
    9. '               ' → logprob: -12.500083923339844
    10. '       ' → logprob: -12.750083923339844

Token 159: ' edge' (ID: 11165)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8538684844970703
    2. '               ' → logprob: -0.8538684844970703
    3. ' wf' → logprob: -2.4788684844970703
    4. ' if' → logprob: -2.9788684844970703
    5. 'if' → logprob: -5.10386848449707
    6. 'wf' → logprob: -5.22886848449707
    7. '       ' → logprob: -6.97886848449707
    8. ' next' → logprob: -7.72886848449707
    9. '   ' → logprob: -8.35386848449707
    10. '	       ' → logprob: -9.35386848449707

Token 160: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.36574100604048e-06
    2. '[' → logprob: -13.250004768371582
    3. ' [' → logprob: -13.500004768371582
    4. '[I' → logprob: -15.000004768371582
    5. '][' → logprob: -15.250004768371582
    6. 'i' → logprob: -15.875004768371582
    7. '[j' → logprob: -16.125003814697266
    8. '   ' → logprob: -16.250003814697266
    9. ')[' → logprob: -16.875003814697266
    10. ' ' → logprob: -18.000003814697266

Token 161: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.003036536043509841
    2. ']' → logprob: -5.8780364990234375
    3. '[i' → logprob: -8.753036499023438
    4. ' ][' → logprob: -10.003036499023438
    5. ']=' → logprob: -11.753036499023438
    6. '[j' → logprob: -11.753036499023438
    7. '[' → logprob: -12.753036499023438
    8. ']={' → logprob: -13.503036499023438
    9. ')[' → logprob: -13.628036499023438
    10. ']][' → logprob: -14.003036499023438

Token 162: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -6.706686690449715e-05
    2. ' j' → logprob: -10.250066757202148
    3. ']' → logprob: -10.375066757202148
    4. '	j' → logprob: -16.25006675720215
    5. '   ' → logprob: -16.37506675720215
    6. 'i' → logprob: -16.50006675720215
    7. ' ' → logprob: -16.50006675720215
    8. ')' → logprob: -16.87506675720215
    9. '  ' → logprob: -17.37506675720215
    10. '_j' → logprob: -17.87506675720215

Token 163: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011973495595157146
    2. ' =' → logprob: -5.1369733810424805
    3. ']=' → logprob: -5.7619733810424805
    4. ' ]' → logprob: -6.5119733810424805
    5. '=' → logprob: -6.6369733810424805
    6. ')' → logprob: -9.51197338104248
    7. ' ' → logprob: -13.13697338104248
    8. '<|end|>' → logprob: -13.63697338104248
    9. ']=-' → logprob: -13.88697338104248
    10. '   ' → logprob: -14.13697338104248

Token 164: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759443640708923
    2. '=' → logprob: -0.8259443640708923
    3. ' ' → logprob: -12.450943946838379
    4. '=int' → logprob: -15.200943946838379
    5. '=float' → logprob: -15.325943946838379
    6. '=-' → logprob: -16.325944900512695
    7. ',' → logprob: -16.450944900512695
    8. '=None' → logprob: -16.575944900512695
    9. '=False' → logprob: -16.825944900512695
    10. ' ' → logprob: -17.075944900512695

Token 165: ' ' (ID: 220)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.026770107448101044
    2. '0' → logprob: -4.026770114898682
    3. ' inf' → logprob: -5.526770114898682
    4. '-' → logprob: -5.651770114898682
    5. ' -' → logprob: -8.151769638061523
    6. '-inf' → logprob: -8.526769638061523
    7. 'None' → logprob: -8.776769638061523
    8. ' ' → logprob: -8.776769638061523
    9. '[]' → logprob: -9.776769638061523
    10. 'in' → logprob: -9.901769638061523

Token 166: '0' (ID: 15)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.013136344961822033
    2. '0' → logprob: -4.513136386871338
    3. '-' → logprob: -6.513136386871338
    4. 'None' → logprob: -8.51313591003418
    5. 'False' → logprob: -9.26313591003418
    6. '[]' → logprob: -9.38813591003418
    7. 'float' → logprob: -9.88813591003418
    8. '-inf' → logprob: -9.88813591003418
    9. '(' → logprob: -10.38813591003418
    10. ' inf' → logprob: -10.88813591003418

Token 167: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 168: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10021044313907623
    2. ' i' → logprob: -2.350210428237915
    3. ' ' → logprob: -13.600210189819336
    4. ' ' → logprob: -13.975210189819336
    5. '	i' → logprob: -14.100210189819336
    6. 'j' → logprob: -14.975210189819336
    7. '   ' → logprob: -15.350210189819336
    8. '  ' → logprob: -15.600210189819336
    9. '(i' → logprob: -16.100210189819336
    10. ' j' → logprob: -16.975210189819336

Token 169: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07889066636562347
    2. ' ==' → logprob: -2.578890562057495
    3. '===' → logprob: -15.703890800476074
    4. ']==' → logprob: -15.703890800476074
    5. '==
' → logprob: -15.703890800476074
    6. ' ' → logprob: -15.828890800476074
    7. '=' → logprob: -16.578889846801758
    8. ' ' → logprob: -16.703889846801758
    9. '!=' → logprob: -17.203889846801758
    10. ')==' → logprob: -17.203889846801758

Token 170: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0788937583565712
    2. ' j' → logprob: -2.5788936614990234
    3. '   ' → logprob: -13.453893661499023
    4. ' ' → logprob: -13.703893661499023
    5. '	j' → logprob: -13.953893661499023
    6. '    ' → logprob: -15.328893661499023
    7. '  ' → logprob: -16.203893661499023
    8. ' ' → logprob: -16.578893661499023
    9. '=j' → logprob: -17.203893661499023
    10. ':j' → logprob: -17.578893661499023

Token 171: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.575947105884552
    2. 'else' → logprob: -0.825947105884552
    3. '	else' → logprob: -12.075946807861328
    4. '<|end|>' → logprob: -13.950946807861328
    5. ' ' → logprob: -15.700946807861328
    6. '       ' → logprob: -15.950946807861328
    7. ' or' → logprob: -16.075946807861328
    8. '        ' → logprob: -16.450946807861328
    9. ',' → logprob: -16.450946807861328
    10. '           ' → logprob: -16.700946807861328

Token 172: ' inf' (ID: 5603)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.02062048576772213
    2. ' inf' → logprob: -3.895620584487915
    3. ' ' → logprob: -10.270620346069336
    4. '   ' → logprob: -11.145620346069336
    5. '0' → logprob: -11.895620346069336
    6. '100' → logprob: -12.270620346069336
    7. ' ' → logprob: -12.270620346069336
    8. '  ' → logprob: -12.520620346069336
    9. '1' → logprob: -13.520620346069336
    10. '999' → logprob: -13.645620346069336

Token 173: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15457434952259064
    2. '<|end|>' → logprob: -2.029574394226074
    3. ' else' → logprob: -4.779574394226074
    4. '<|end|>' → logprob: -6.654574394226074
    5. 'else' → logprob: -6.779574394226074
    6. '
' → logprob: -8.029574394226074
    7. ',' → logprob: -8.529574394226074
    8. '		' → logprob: -9.404574394226074
    9. '       ' → logprob: -9.654574394226074
    10. '               ' → logprob: -9.779574394226074

Token 174: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11409492045640945
    2. '<|end|>' → logprob: -2.2390949726104736
    3. '<|end|>' → logprob: -7.4890947341918945
    4. '               ' → logprob: -8.489094734191895
    5. ' ' → logprob: -9.114094734191895
    6. ',' → logprob: -9.489094734191895
    7. '		' → logprob: -9.614094734191895
    8. '          ' → logprob: -9.989094734191895
    9. '            ' → logprob: -10.364094734191895
    10. ' for' → logprob: -10.739094734191895

Token 175: ' wf' (ID: 99382)
  Prédit: 'wf'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wf' (adapté à ' wf') → logprob: -0.7451924085617065
    2. ' wf' → logprob: -0.8701924085617065
    3. ' next' → logprob: -2.745192527770996
    4. '           ' → logprob: -3.620192527770996
    5. 'next' → logprob: -4.245192527770996
    6. '       ' → logprob: -7.995192527770996
    7. '               ' → logprob: -8.495192527770996
    8. 'w' → logprob: -8.995192527770996
    9. '   ' → logprob: -8.995192527770996
    10. ' ' → logprob: -9.495192527770996

Token 176: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2664456789934775e-06
    2. '[' → logprob: -14.500000953674316
    3. ' [' → logprob: -15.000000953674316
    4. '[I' → logprob: -15.375000953674316
    5. '[j' → logprob: -16.125001907348633
    6. '][' → logprob: -17.625001907348633
    7. ')[' → logprob: -18.625001907348633
    8. '}[' → logprob: -19.000001907348633
    9. 'i' → logprob: -19.500001907348633
    10. '```' → logprob: -19.500001907348633

Token 177: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00010187433508690447
    2. ']' → logprob: -9.625102043151855
    3. '[i' → logprob: -10.500102043151855
    4. ' ][' → logprob: -12.625102043151855
    5. ']][' → logprob: -13.375102043151855
    6. '[' → logprob: -13.500102043151855
    7. '[j' → logprob: -13.750102043151855
    8. '"][' → logprob: -15.500102043151855
    9. ''][' → logprob: -15.750102043151855
    10. ')[' → logprob: -16.00010108947754

Token 178: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.1186566047836095e-05
    2. ' j' → logprob: -10.625031471252441
    3. 'i' → logprob: -12.875031471252441
    4. '[j' → logprob: -13.375031471252441
    5. '   ' → logprob: -13.875031471252441
    6. '0' → logprob: -14.750031471252441
    7. ' ' → logprob: -14.875031471252441
    8. '][' → logprob: -15.625031471252441
    9. '           ' → logprob: -15.625031471252441
    10. '  ' → logprob: -16.125030517578125

Token 179: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.028929049149155617
    2. ' =' → logprob: -3.9039289951324463
    3. '=' → logprob: -5.028929233551025
    4. ']=' → logprob: -6.528929233551025
    5. ' ]' → logprob: -8.028928756713867
    6. ')' → logprob: -11.278928756713867
    7. ' ' → logprob: -13.028928756713867
    8. '[' → logprob: -14.028928756713867
    9. '   ' → logprob: -14.028928756713867
    10. '}' → logprob: -14.403928756713867

Token 180: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326642632484436
    2. '=' → logprob: -1.313266396522522
    3. ' ' → logprob: -13.06326675415039
    4. '[' → logprob: -13.81326675415039
    5. '   ' → logprob: -14.43826675415039
    6. ']' → logprob: -15.68826675415039
    7. ',' → logprob: -16.06326675415039
    8. ')' → logprob: -16.06326675415039
    9. '	' → logprob: -16.56326675415039
    10. '  ' → logprob: -16.68826675415039

Token 181: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7789753675460815
    2. 'inf' → logprob: -1.1539753675460815
    3. '-' → logprob: -2.403975486755371
    4. 'False' → logprob: -3.028975486755371
    5. '[]' → logprob: -3.278975486755371
    6. '1' → logprob: -4.778975486755371
    7. 'i' → logprob: -4.778975486755371
    8. 'float' → logprob: -5.028975486755371
    9. ' ' → logprob: -5.528975486755371
    10. '100' → logprob: -6.153975486755371

Token 182: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9061128497123718
    2. 'inf' → logprob: -0.9061128497123718
    3. '[]' → logprob: -2.4061129093170166
    4. 'False' → logprob: -3.1561129093170166
    5. '-' → logprob: -3.6561129093170166
    6. '1' → logprob: -5.1561126708984375
    7. '[]
' → logprob: -5.2811126708984375
    8. 'i' → logprob: -5.5311126708984375
    9. '[' → logprob: -5.7811126708984375
    10. 'float' → logprob: -6.0311126708984375

Token 183: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 184: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01817300356924534
    2. ' i' → logprob: -4.0181732177734375
    3. 'j' → logprob: -11.018173217773438
    4. '   ' → logprob: -12.768173217773438
    5. ' ' → logprob: -13.643173217773438
    6. ' j' → logprob: -14.143173217773438
    7. '  ' → logprob: -14.768173217773438
    8. '	i' → logprob: -15.018173217773438
    9. 'False' → logprob: -15.018173217773438
    10. '    ' → logprob: -15.143173217773438

Token 185: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4740850329399109
    2. ' ==' → logprob: -0.9740850329399109
    3. '<|end|>' → logprob: -12.349084854125977
    4. ' !=' → logprob: -13.974084854125977
    5. '!=' → logprob: -14.349084854125977
    6. ' ' → logprob: -14.599084854125977
    7. '=' → logprob: -14.599084854125977
    8. ' ' → logprob: -14.849084854125977
    9. ']==' → logprob: -14.974084854125977
    10. '[' → logprob: -15.474084854125977

Token 186: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.002760295057669282
    2. 'i' → logprob: -6.377760410308838
    3. ' j' → logprob: -6.877760410308838
    4. ' i' → logprob: -11.25275993347168
    5. ' ' → logprob: -12.37775993347168
    6. '=' → logprob: -13.37775993347168
    7. '
' → logprob: -13.69025993347168
    8. '_j' → logprob: -14.06525993347168
    9. '0' → logprob: -14.44025993347168
    10. '	j' → logprob: -14.44025993347168

Token 187: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.20141558349132538
    2. 'else' → logprob: -1.7014155387878418
    3. '	else' → logprob: -13.451416015625
    4. '<|end|>' → logprob: -14.826416015625
    5. ' ' → logprob: -16.576416015625
    6. '            ' → logprob: -16.826416015625
    7. '           ' → logprob: -16.826416015625
    8. '        ' → logprob: -16.826416015625
    9. ' ' → logprob: -17.451416015625
    10. '```' → logprob: -17.576416015625

Token 188: ' inf' (ID: 5603)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.0015971031971275806
    2. ' inf' → logprob: -6.626596927642822
    3. '0' → logprob: -8.62659740447998
    4. '1' → logprob: -10.37659740447998
    5. '   ' → logprob: -11.50159740447998
    6. ' ' → logprob: -11.50159740447998
    7. '100' → logprob: -11.62659740447998
    8. '-inf' → logprob: -11.75159740447998
    9. '-' → logprob: -12.00159740447998
    10. '  ' → logprob: -13.37659740447998

Token 189: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013772057369351387
    2. '<|end|>' → logprob: -4.388772010803223
    3. '		' → logprob: -7.763772010803223
    4. '<|end|>' → logprob: -7.888772010803223
    5. '       ' → logprob: -9.263772010803223
    6. 'next' → logprob: -9.263772010803223
    7. '
' → logprob: -10.138772010803223
    8. '               ' → logprob: -10.388772010803223
    9. '	       ' → logprob: -10.638772010803223
    10. '```' → logprob: -11.138772010803223

Token 190: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3463650941848755
    2. '<|end|>' → logprob: -1.3463650941848755
    3. '		' → logprob: -3.846364974975586
    4. '<|end|>' → logprob: -5.346364974975586
    5. '       ' → logprob: -7.221364974975586
    6. '	       ' → logprob: -7.471364974975586
    7. '\t' → logprob: -7.471364974975586
    8. '            
' → logprob: -7.471364974975586
    9. '            ' → logprob: -7.596364974975586
    10. ' ' → logprob: -7.721364974975586

Token 191: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.31650951504707336
    2. 'next' (adapté à ' next') → logprob: -1.941509485244751
    3. '           ' → logprob: -2.066509485244751
    4. '   ' → logprob: -7.19150972366333
    5. '       ' → logprob: -8.316509246826172
    6. '	next' → logprob: -9.441509246826172
    7. '               ' → logprob: -10.191509246826172
    8. ' ' → logprob: -10.191509246826172
    9. '.next' → logprob: -11.441509246826172
    10. '(next' → logprob: -12.066509246826172

Token 192: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -2.2200749754119897e-06
    2. '_i' → logprob: -14.000001907348633
    3. '[i' → logprob: -14.500001907348633
    4. '```' → logprob: -14.875001907348633
    5. '   ' → logprob: -15.875001907348633
    6. '[' → logprob: -16.250001907348633
    7. ' _' → logprob: -16.500001907348633
    8. '_' → logprob: -16.875001907348633
    9. '...' → logprob: -17.250001907348633
    10. '_ids' → logprob: -17.750001907348633

Token 193: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.180258191714529e-06
    2. ' [' → logprob: -11.875008583068848
    3. '[' → logprob: -14.750008583068848
    4. '][' → logprob: -15.250008583068848
    5. ')[' → logprob: -15.500008583068848
    6. '[I' → logprob: -15.875008583068848
    7. '```' → logprob: -16.00000762939453
    8. '}[' → logprob: -17.25000762939453
    9. '   ' → logprob: -17.25000762939453
    10. ' ' → logprob: -17.87500762939453

Token 194: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.12862879037857056
    2. '[i' → logprob: -2.128628730773926
    3. ')[' → logprob: -6.628628730773926
    4. ']' → logprob: -8.878628730773926
    5. ' ][' → logprob: -9.628628730773926
    6. '}[' → logprob: -9.628628730773926
    7. '[j' → logprob: -9.878628730773926
    8. '[' → logprob: -11.253628730773926
    9. '>[' → logprob: -11.753628730773926
    10. '[I' → logprob: -12.128628730773926

Token 195: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00022403974435292184
    2. ')' → logprob: -10.000224113464355
    3. ' j' → logprob: -10.125224113464355
    4. '-' → logprob: -10.250224113464355
    5. 'i' → logprob: -10.375224113464355
    6. '[j' → logprob: -10.500224113464355
    7. ']' → logprob: -11.375224113464355
    8. '0' → logprob: -11.625224113464355
    9. '{' → logprob: -12.375224113464355
    10. 'None' → logprob: -12.375224113464355

Token 196: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.29403674602508545
    2. '=' → logprob: -1.4190367460250854
    3. ']' → logprob: -4.419036865234375
    4. ']=' → logprob: -8.169036865234375
    5. ')' → logprob: -8.419036865234375
    6. ' ' → logprob: -8.919036865234375
    7. ' ]' → logprob: -9.294036865234375
    8. ' )' → logprob: -12.169036865234375
    9. ')=' → logprob: -12.169036865234375
    10. '   ' → logprob: -12.419036865234375

Token 197: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889022678136826
    2. ' =' → logprob: -2.578890323638916
    3. '[' → logprob: -14.953889846801758
    4. '=None' → logprob: -16.453889846801758
    5. ' ' → logprob: -16.953889846801758
    6. '=-' → logprob: -17.203889846801758
    7. '＝' → logprob: -18.703889846801758
    8. ')' → logprob: -18.953889846801758
    9. ']' → logprob: -19.203889846801758
    10. '=False' → logprob: -20.203889846801758

Token 198: ' j' (ID: 441)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.14351323246955872
    2. 'j' → logprob: -2.7685132026672363
    3. 'None' → logprob: -2.8935132026672363
    4. ' -' → logprob: -4.393513202667236
    5. ' None' → logprob: -6.018513202667236
    6. ' j' → logprob: -7.643513202667236
    7. '-j' → logprob: -8.768513679504395
    8. ' ' → logprob: -9.893513679504395
    9. '0' → logprob: -10.268513679504395
    10. '   ' → logprob: -11.393513679504395

Token 199: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 200: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 201: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7768881916999817
    2. 'for' (adapté à ' for') → logprob: -0.7768881916999817
    3. '   ' → logprob: -2.526888132095337
    4. '    
' → logprob: -8.651887893676758
    5. '	for' → logprob: -9.151887893676758
    6. '
' → logprob: -9.776887893676758
    7. ' 
' → logprob: -11.276887893676758
    8. 'E' → logprob: -11.276887893676758
    9. '<|end|>' → logprob: -11.401887893676758
    10. '  ' → logprob: -11.651887893676758

Token 202: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.575957179069519
    2. '_' → logprob: -0.825957179069519
    3. ' in' → logprob: -11.450957298278809
    4. ' ' → logprob: -12.950957298278809
    5. '_i' → logprob: -13.200957298278809
    6. ' i' → logprob: -13.325957298278809
    7. ' ' → logprob: -14.950957298278809
    8. ' range' → logprob: -14.950957298278809
    9. 'i' → logprob: -15.825957298278809
    10. '_range' → logprob: -16.075956344604492

Token 203: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.8097752928733826
    2. ' range' → logprob: -1.3097753524780273
    3. ' in' → logprob: -1.3097753524780273
    4. 'in' → logprob: -4.184775352478027
    5. ' ' → logprob: -10.559775352478027
    6. '_' → logprob: -11.434775352478027
    7. '(range' → logprob: -11.559775352478027
    8. '	range' → logprob: -12.934775352478027
    9. '_range' → logprob: -13.184775352478027
    10. '  ' → logprob: -13.434775352478027

Token 204: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.727905979962088e-05
    2. ' range' → logprob: -10.00004768371582
    3. '(range' → logprob: -13.87504768371582
    4. 'ange' → logprob: -15.37504768371582
    5. '```' → logprob: -16.12504768371582
    6. ')' → logprob: -16.62504768371582
    7. '   ' → logprob: -16.62504768371582
    8. 'r' → logprob: -16.75004768371582
    9. '	range' → logprob: -17.12504768371582
    10. '[' → logprob: -17.25004768371582

Token 205: '(E' (ID: 20882)
  Prédit: '(E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(E' → logprob: -0.0005465993890538812
    2. 'E' → logprob: -8.1255464553833
    3. '(' → logprob: -8.7505464553833
    4. ' (' → logprob: -9.8755464553833
    5. ' E' → logprob: -10.1255464553833
    6. ' ' → logprob: -15.2505464553833
    7. '(int' → logprob: -15.3755464553833
    8. '(
' → logprob: -16.375547409057617
    9. '   ' → logprob: -16.625547409057617
    10. ',E' → logprob: -17.750547409057617

Token 206: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03714962676167488
    2. ',' → logprob: -3.787149667739868
    3. '):
' → logprob: -4.412149429321289
    4. ' ):' → logprob: -6.787149429321289
    5. ')' → logprob: -7.662149429321289
    6. ':' → logprob: -10.912149429321289
    7. '):
' → logprob: -11.037149429321289
    8. ' ,' → logprob: -11.287149429321289
    9. '   ' → logprob: -11.787149429321289
    10. ' ):
' → logprob: -11.787149429321289

Token 207: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9010332822799683
    2. ' u' → logprob: -1.2760332822799683
    3. '   ' → logprob: -1.4010332822799683
    4. ' s' → logprob: -3.651033401489258
    5. ',' → logprob: -3.776033401489258
    6. ' line' → logprob: -5.776033401489258
    7. 'u' → logprob: -5.901033401489258
    8. ' a' → logprob: -6.026033401489258
    9. '    ' → logprob: -6.026033401489258
    10. ' ,' → logprob: -6.401033401489258

Token 208: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.5097678303718567
    2. 'a' → logprob: -1.134767770767212
    3. ' u' → logprob: -3.259767770767212
    4. 's' → logprob: -3.634767770767212
    5. ' a' → logprob: -4.634768009185791
    6. ' s' → logprob: -6.634768009185791
    7. 'src' → logprob: -7.134768009185791
    8. 'A' → logprob: -7.759768009185791
    9. '   ' → logprob: -8.634767532348633
    10. 'f' → logprob: -8.759767532348633

Token 209: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014338012551888824
    2. ',v' → logprob: -7.126433849334717
    3. ' ,' → logprob: -7.376433849334717
    4. ',w' → logprob: -14.501433372497559
    5. ',u' → logprob: -14.626433372497559
    6. 'v' → logprob: -14.876433372497559
    7. ' v' → logprob: -15.126433372497559
    8. ',j' → logprob: -15.251433372497559
    9. ',s' → logprob: -15.626433372497559
    10. ',b' → logprob: -15.751433372497559

Token 210: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.06995999813079834
    2. 'v' → logprob: -2.694960117340088
    3. ' ' → logprob: -11.31995964050293
    4. ',v' → logprob: -12.19495964050293
    5. 'space' → logprob: -13.56995964050293
    6. '	v' → logprob: -13.94495964050293
    7. ' 
' → logprob: -14.06995964050293
    8. ',' → logprob: -14.31995964050293
    9. ' w' → logprob: -14.69495964050293
    10. '_v' → logprob: -14.69495964050293

Token 211: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6588269472122192
    2. ' =' → logprob: -0.9088269472122192
    3. ',' → logprob: -2.5338268280029297
    4. ' ,' → logprob: -8.65882682800293
    5. ',v' → logprob: -12.40882682800293
    6. ',u' → logprob: -13.03382682800293
    7. '=input' → logprob: -13.03382682800293
    8. ' ' → logprob: -13.28382682800293
    9. ' =
' → logprob: -14.15882682800293
    10. ')' → logprob: -14.15882682800293

Token 212: ' d' (ID: 272)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.22548910975456238
    2. 'w' → logprob: -1.6004891395568848
    3. ' c' → logprob: -10.850488662719727
    4. 'cost' → logprob: -10.975488662719727
    5. ' cost' → logprob: -11.225488662719727
    6. 'c' → logprob: -11.225488662719727
    7. ' ' → logprob: -12.600488662719727
    8. 'weight' → logprob: -12.725488662719727
    9. ',w' → logprob: -13.475488662719727
    10. ',' → logprob: -13.600488662719727

Token 213: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5781201720237732
    2. '=' → logprob: -0.8281201720237732
    3. ',' → logprob: -6.703120231628418
    4. 'istance' → logprob: -7.453120231628418
    5. 'ist' → logprob: -8.078120231628418
    6. ' ' → logprob: -11.328120231628418
    7. '=int' → logprob: -11.703120231628418
    8. ' ,' → logprob: -12.203120231628418
    9. '=input' → logprob: -12.578120231628418
    10. 'e' → logprob: -12.578120231628418

Token 214: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.023245595395565033
    2. 'map' → logprob: -3.7732455730438232
    3. '	map' → logprob: -16.523244857788086
    4. '    ' → logprob: -16.898244857788086
    5. ' ' → logprob: -17.648244857788086
    6. 'm' → logprob: -18.398244857788086
    7. '   ' → logprob: -19.398244857788086
    8. ' list' → logprob: -19.398244857788086
    9. '(map' → logprob: -19.648244857788086
    10. ' ' → logprob: -19.898244857788086

Token 215: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -2.4391956685576588e-05
    2. 'int' → logprob: -10.750024795532227
    3. '(' → logprob: -13.625024795532227
    4. ',int' → logprob: -14.375024795532227
    5. '<int' → logprob: -14.750024795532227
    6. ' int' → logprob: -15.125024795532227
    7. '[int' → logprob: -15.625024795532227
    8. '(input' → logprob: -16.125024795532227
    9. '=int' → logprob: -16.500024795532227
    10. '```' → logprob: -18.375024795532227

Token 216: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07890598475933075
    2. ',input' → logprob: -2.5789060592651367
    3. 'input' → logprob: -12.203906059265137
    4. ' ,' → logprob: -12.453906059265137
    5. '(input' → logprob: -12.953906059265137
    6. '(),' → logprob: -13.078906059265137
    7. 'sys' → logprob: -14.203906059265137
    8. '(' → logprob: -14.203906059265137
    9. ',int' → logprob: -14.578906059265137
    10. '   ' → logprob: -15.203906059265137

Token 217: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.038045283406972885
    2. ' input' → logprob: -3.2880451679229736
    3. 'sys' → logprob: -12.538044929504395
    4. ' sys' → logprob: -15.538044929504395
    5. '_input' → logprob: -17.53804588317871
    6. '(input' → logprob: -17.91304588317871
    7. '=input' → logprob: -19.03804588317871
    8. ')' → logprob: -19.03804588317871
    9. '	input' → logprob: -19.41304588317871
    10. ',input' → logprob: -19.41304588317871

Token 218: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.7432603272027336e-06
    2. '()' → logprob: -13.500001907348633
    3. ' ().' → logprob: -15.500001907348633
    4. '(' → logprob: -17.000001907348633
    5. '.' → logprob: -17.625001907348633
    6. '.split' → logprob: -17.750001907348633
    7. '   ' → logprob: -18.500001907348633
    8. ')' → logprob: -19.375001907348633
    9. '()
' → logprob: -19.625001907348633
    10. 'split' → logprob: -19.875001907348633

Token 219: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.088346359931165e-07
    2. 'strip' → logprob: -14.875000953674316
    3. ' split' → logprob: -14.875000953674316
    4. '(split' → logprob: -17.0
    5. 'spl' → logprob: -17.75
    6. 'rstrip' → logprob: -19.25
    7. ' ' → logprob: -20.0
    8. ')' → logprob: -21.0
    9. '.split' → logprob: -21.125
    10. 's' → logprob: -21.375

Token 220: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009196776081807911
    2. ')
' → logprob: -7.000919818878174
    3. ' )' → logprob: -12.250919342041016
    4. ');' → logprob: -13.625919342041016
    5. ')
' → logprob: -14.125919342041016
    6. ')d' → logprob: -14.875919342041016
    7. ')`' → logprob: -15.375919342041016
    8. '()' → logprob: -15.500919342041016
    9. '   ' → logprob: -15.500919342041016
    10. ')

' → logprob: -15.750919342041016

Token 221: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01606885716319084
    2. '   ' → logprob: -4.391068935394287
    3. '<|end|>' → logprob: -7.141068935394287
    4. ')' → logprob: -7.266068935394287
    5. '        
' → logprob: -7.266068935394287
    6. '
' → logprob: -7.266068935394287
    7. '    
' → logprob: -9.016068458557129
    8. ',' → logprob: -9.016068458557129
    9. ' 
' → logprob: -9.391068458557129
    10. '  
' → logprob: -10.016068458557129

Token 222: ' edge' (ID: 11165)
  Prédit: ' edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.2286076545715332
    2. 'edge' (adapté à ' edge') → logprob: -1.6036076545715332
    3. '       ' → logprob: -5.978607654571533
    4. '   ' → logprob: -7.728607654571533
    5. ' if' → logprob: -9.728607177734375
    6. 'if' → logprob: -10.353607177734375
    7. 'u' → logprob: -11.416107177734375
    8. '        ' → logprob: -11.541107177734375
    9. ' 
' → logprob: -11.541107177734375
    10. '    ' → logprob: -11.853607177734375

Token 223: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.3856492842023727e-06
    2. '[' → logprob: -14.375000953674316
    3. '][' → logprob: -15.250000953674316
    4. '[i' → logprob: -15.625000953674316
    5. ' [' → logprob: -15.875000953674316
    6. '[user' → logprob: -16.500001907348633
    7. ')[' → logprob: -16.875001907348633
    8. '[v' → logprob: -17.000001907348633
    9. '}[' → logprob: -17.375001907348633
    10. 'u' → logprob: -17.750001907348633

Token 224: ' -' (ID: 533)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00020187153131701052
    2. ']' → logprob: -8.875202178955078
    3. '[u' → logprob: -10.375202178955078
    4. ' ][' → logprob: -10.750202178955078
    5. '[v' → logprob: -11.875202178955078
    6. '[' → logprob: -14.000202178955078
    7. ']][' → logprob: -14.500202178955078
    8. '"][' → logprob: -15.250202178955078
    9. ')][' → logprob: -15.625202178955078
    10. ')[' → logprob: -16.125202178955078

Token 225: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.674858301877975e-05
    2. ' ' → logprob: -9.250096321105957
    3. '<|end|>' → logprob: -14.375096321105957
    4. ',' → logprob: -17.375097274780273
    5. '>' → logprob: -18.250097274780273
    6. '```' → logprob: -18.500097274780273
    7. '   ' → logprob: -19.000097274780273
    8. '<|end|>' → logprob: -19.125097274780273
    9. 'to' → logprob: -19.250097274780273
    10. '-' → logprob: -19.562597274780273

Token 226: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '<|end|>' → logprob: -18.12502670288086
    4. ',' → logprob: -18.37502670288086
    5. '   ' → logprob: -18.81252670288086
    6. '```' → logprob: -19.00002670288086
    7. '=' → logprob: -19.93752670288086
    8. '2' → logprob: -20.00002670288086
    9. '>' → logprob: -20.06252670288086
    10. '0' → logprob: -20.18752670288086

Token 227: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0003003081073984504
    2. ' ][' → logprob: -8.250300407409668
    3. ']' → logprob: -10.375300407409668
    4. '[v' → logprob: -12.125300407409668
    5. ')][' → logprob: -14.375300407409668
    6. '[u' → logprob: -14.375300407409668
    7. ']][' → logprob: -15.125300407409668
    8. '   ' → logprob: -15.500300407409668
    9. '[' → logprob: -16.00029945373535
    10. '"][' → logprob: -16.00029945373535

Token 228: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -3.054500666621607e-06
    2. ' v' → logprob: -12.87500286102295
    3. '
' → logprob: -16.125003814697266
    4. '   ' → logprob: -16.625003814697266
    5. '(v' → logprob: -16.875003814697266
    6. '	v' → logprob: -17.125003814697266
    7. ')v' → logprob: -17.125003814697266
    8. '[v' → logprob: -17.250003814697266
    9. 'vj' → logprob: -18.500003814697266
    10. '$v' → logprob: -19.500003814697266

Token 229: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10033638775348663
    2. '-' → logprob: -2.3503363132476807
    3. '[' → logprob: -9.600336074829102
    4. ' ' → logprob: -10.225336074829102
    5. '   ' → logprob: -11.225336074829102
    6. ']' → logprob: -11.725336074829102
    7. '	' → logprob: -14.350336074829102
    8. '1' → logprob: -14.475336074829102
    9. ')' → logprob: -14.787836074829102
    10. '    ' → logprob: -14.850336074829102

Token 230: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033677343162707984
    2. ' ' → logprob: -8.000336647033691
    3. '   ' → logprob: -14.750336647033691
    4. '<|end|>' → logprob: -15.500336647033691
    5. '```' → logprob: -15.937836647033691
    6. '2' → logprob: -16.500337600708008
    7. '0' → logprob: -17.312837600708008
    8. '<|end|>' → logprob: -17.750337600708008
    9. '>' → logprob: -17.875337600708008
    10. ')' → logprob: -17.875337600708008

Token 231: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.8325677703833207e-05
    2. ' ' → logprob: -10.500028610229492
    3. '   ' → logprob: -15.687528610229492
    4. '2' → logprob: -15.750028610229492
    5. '```' → logprob: -16.000028610229492
    6. ']' → logprob: -16.500028610229492
    7. '۱' → logprob: -17.812528610229492
    8. '１' → logprob: -18.000028610229492
    9. '-' → logprob: -18.000028610229492
    10. ')' → logprob: -18.375028610229492

Token 232: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005761472275480628
    2. ' ]' → logprob: -7.625576019287109
    3. ']=' → logprob: -9.37557601928711
    4. ']+=' → logprob: -13.37557601928711
    5. 'd' → logprob: -13.50057601928711
    6. ']
' → logprob: -16.12557601928711
    7. '=' → logprob: -16.50057601928711
    8. '[' → logprob: -16.87557601928711
    9. ' ' → logprob: -17.25057601928711
    10. ' =' → logprob: -17.25057601928711

Token 233: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759777426719666
    2. ' =' → logprob: -0.8259777426719666
    3. '+=' → logprob: -10.825977325439453
    4. ' +=' → logprob: -11.200977325439453
    5. ' ' → logprob: -13.325977325439453
    6. '=d' → logprob: -13.950977325439453
    7. ',' → logprob: -14.450977325439453
    8. ']' → logprob: -14.575977325439453
    9. ']=' → logprob: -15.325977325439453
    10. 'd' → logprob: -15.575977325439453

Token 234: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1602509319782257
    2. ' d' → logprob: -1.9102509021759033
    3. ' ' → logprob: -11.785250663757324
    4. '    ' → logprob: -12.535250663757324
    5. 'min' → logprob: -12.535250663757324
    6. ' min' → logprob: -12.785250663757324
    7. '	d' → logprob: -12.910250663757324
    8. '
' → logprob: -13.035250663757324
    9. '   ' → logprob: -13.410250663757324
    10. '           ' → logprob: -14.910250663757324

Token 235: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 236: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01511821337044239
    2. '<|end|>' → logprob: -4.26511812210083
    3. '<|end|>' → logprob: -8.390118598937988
    4. 'wf' → logprob: -8.640118598937988
    5. '   ' → logprob: -9.390118598937988
    6. '
' → logprob: -9.390118598937988
    7. '           ' → logprob: -9.515118598937988
    8. ',' → logprob: -9.890118598937988
    9. 'def' → logprob: -10.640118598937988
    10. '      ' → logprob: -10.765118598937988

Token 237: ' edge' (ID: 11165)
  Prédit: 'wf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wf' → logprob: -0.008416350930929184
    2. 'next' → logprob: -5.008416175842285
    3. '   ' → logprob: -7.383416175842285
    4. '           ' → logprob: -7.508416175842285
    5. ' wf' → logprob: -8.383416175842285
    6. '       ' → logprob: -9.508416175842285
    7. 'edge' (adapté à ' edge') → logprob: -9.508416175842285
    8. '               ' → logprob: -10.508416175842285
    9. ' next' → logprob: -10.758416175842285
    10. ' ' → logprob: -10.883416175842285

Token 238: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.03809370473027229
    2. '[u' → logprob: -3.2880938053131104
    3. '[' → logprob: -10.538093566894531
    4. 'v' → logprob: -11.038093566894531
    5. ' [' → logprob: -12.538093566894531
    6. 'u' → logprob: -13.538093566894531
    7. '][' → logprob: -13.913093566894531
    8. '[user' → logprob: -14.038093566894531
    9. '```' → logprob: -14.538093566894531
    10. ' v' → logprob: -15.038093566894531

Token 239: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.13732782006263733
    2. '[' → logprob: -2.6373279094696045
    3. '-' → logprob: -2.8873279094696045
    4. ' [' → logprob: -7.762327671051025
    5. ' ' → logprob: -8.387328147888184
    6. '[u' → logprob: -8.637328147888184
    7. 'u' → logprob: -9.887328147888184
    8. '[user' → logprob: -10.012328147888184
    9. '   ' → logprob: -10.762328147888184
    10. '[-' → logprob: -10.887328147888184

Token 240: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.043132781982421875
    2. ' ' → logprob: -3.168132781982422
    3. 'u' → logprob: -9.168132781982422
    4. ' u' → logprob: -10.793132781982422
    5. '0' → logprob: -12.543132781982422
    6. 'user' → logprob: -13.855632781982422
    7. '   ' → logprob: -14.168132781982422
    8. '[u' → logprob: -14.293132781982422
    9. '[' → logprob: -15.043132781982422
    10. '(u' → logprob: -15.293132781982422

Token 241: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019763342570513487
    2. ' ' → logprob: -6.251976490020752
    3. 'u' → logprob: -10.001976013183594
    4. ' u' → logprob: -13.126976013183594
    5. '   ' → logprob: -16.376976013183594
    6. '0' → logprob: -16.626976013183594
    7. '(u' → logprob: -16.876976013183594
    8. '```' → logprob: -16.876976013183594
    9. '[u' → logprob: -17.251976013183594
    10. '
' → logprob: -17.376976013183594

Token 242: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.06314638257026672
    2. '[u' → logprob: -2.8131463527679443
    3. '[' → logprob: -7.313146591186523
    4. ' ][' → logprob: -8.063146591186523
    5. '[v' → logprob: -9.313146591186523
    6. ' [' → logprob: -9.938146591186523
    7. ']' → logprob: -10.813146591186523
    8. '[user' → logprob: -11.313146591186523
    9. ')[' → logprob: -12.313146591186523
    10. '   ' → logprob: -12.313146591186523

Token 243: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0017029138980433345
    2. ' u' → logprob: -6.376702785491943
    3. ' ' → logprob: -14.751703262329102
    4. '   ' → logprob: -15.751703262329102
    5. 'user' → logprob: -15.876703262329102
    6. '	u' → logprob: -17.6267032623291
    7. '       ' → logprob: -18.0017032623291
    8. '
' → logprob: -18.0017032623291
    9. '[u' → logprob: -18.1267032623291
    10. '    ' → logprob: -18.7517032623291

Token 244: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.08910523355007172
    2. '-' → logprob: -2.4641051292419434
    3. '][' → logprob: -8.964105606079102
    4. '[' → logprob: -10.964105606079102
    5. '   ' → logprob: -11.589105606079102
    6. ' ' → logprob: -12.339105606079102
    7. ' ][' → logprob: -13.714105606079102
    8. '```' → logprob: -13.714105606079102
    9. ']' → logprob: -13.839105606079102
    10. ' [' → logprob: -14.214105606079102

Token 245: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028148628771305084
    2. ' ' → logprob: -5.877814769744873
    3. '<|end|>' → logprob: -13.315315246582031
    4. '<|end|>' → logprob: -13.565315246582031
    5. '0' → logprob: -13.627815246582031
    6. '```' → logprob: -13.627815246582031
    7. '   ' → logprob: -13.877815246582031
    8. '-' → logprob: -14.690315246582031
    9. ' -' → logprob: -14.690315246582031
    10. 'v' → logprob: -15.252815246582031

Token 246: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0921942703134846e-05
    2. '-' → logprob: -11.87501049041748
    3. ' ' → logprob: -12.62501049041748
    4. '```' → logprob: -15.75001049041748
    5. ' -' → logprob: -16.625011444091797
    6. 'v' → logprob: -16.750011444091797
    7. '0' → logprob: -17.000011444091797
    8. ']' → logprob: -17.125011444091797
    9. 'u' → logprob: -17.125011444091797
    10. '<|end|>' → logprob: -17.375011444091797

Token 247: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001354824344161898
    2. ']=' → logprob: -9.25013542175293
    3. ' ]' → logprob: -10.50013542175293
    4. '][' → logprob: -11.37513542175293
    5. '[' → logprob: -15.75013542175293
    6. '=' → logprob: -17.37513542175293
    7. ']+=' → logprob: -18.00013542175293
    8. ']==' → logprob: -18.12513542175293
    9. ']
' → logprob: -18.12513542175293
    10. '']' → logprob: -18.37513542175293

Token 248: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868716359138489
    2. ' =' → logprob: -1.136871576309204
    3. ']' → logprob: -15.761871337890625
    4. ' ' → logprob: -15.886871337890625
    5. ')' → logprob: -16.011871337890625
    6. '[' → logprob: -17.011871337890625
    7. ']=' → logprob: -17.136871337890625
    8. ' ' → logprob: -17.886871337890625
    9. '=d' → logprob: -17.886871337890625
    10. '＝' → logprob: -18.136871337890625

Token 249: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1002068892121315
    2. ' d' → logprob: -2.3502068519592285
    3. ' ' → logprob: -16.10020637512207
    4. '	d' → logprob: -16.85020637512207
    5. ' ' → logprob: -16.85020637512207
    6. '   ' → logprob: -17.60020637512207
    7. ')d' → logprob: -18.97520637512207
    8. '$d' → logprob: -19.10020637512207
    9. '```' → logprob: -19.35020637512207
    10. '       ' → logprob: -19.85020637512207

Token 250: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 251: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 252: ' wf' (ID: 99382)
  Prédit: 'wf'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wf' (adapté à ' wf') → logprob: -0.0005251537077128887
    2. ' wf' → logprob: -7.750524997711182
    3. '   ' → logprob: -9.87552547454834
    4. '       ' → logprob: -10.75052547454834
    5. '           ' → logprob: -11.50052547454834
    6. 'w' → logprob: -12.62552547454834
    7. ' ' → logprob: -13.37552547454834
    8. 'next' → logprob: -13.75052547454834
    9. '
' → logprob: -14.12552547454834
    10. 'uf' → logprob: -14.25052547454834

Token 253: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -2.339278580620885e-06
    2. '[v' → logprob: -13.375001907348633
    3. '[' → logprob: -14.625001907348633
    4. 'u' → logprob: -15.625001907348633
    5. '[w' → logprob: -16.750001907348633
    6. ' [' → logprob: -18.875001907348633
    7. '   ' → logprob: -19.000001907348633
    8. '[user' → logprob: -19.125001907348633
    9. '[i' → logprob: -19.500001907348633
    10. '```' → logprob: -20.000001907348633

Token 254: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.042314037680625916
    2. ' -' → logprob: -3.542314052581787
    3. '[u' → logprob: -4.417314052581787
    4. '[' → logprob: -7.917314052581787
    5. '-u' → logprob: -10.667313575744629
    6. '[v' → logprob: -11.417313575744629
    7. ' [' → logprob: -12.167313575744629
    8. 'u' → logprob: -12.292313575744629
    9. '[user' → logprob: -12.292313575744629
    10. '[-' → logprob: -13.292313575744629

Token 255: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013278567930683494
    2. ' ' → logprob: -6.626327991485596
    3. '   ' → logprob: -14.251327514648438
    4. '```' → logprob: -14.751327514648438
    5. '-' → logprob: -15.626327514648438
    6. '<|end|>' → logprob: -16.313827514648438
    7. '[' → logprob: -16.438827514648438
    8. '...' → logprob: -16.501327514648438
    9. '2' → logprob: -16.876327514648438
    10. '0' → logprob: -16.938827514648438

Token 256: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.984787902794778e-05
    2. '-' → logprob: -9.875100135803223
    3. ' ' → logprob: -10.000100135803223
    4. '   ' → logprob: -14.375100135803223
    5. ' -' → logprob: -14.625100135803223
    6. '```' → logprob: -14.625100135803223
    7. '[' → logprob: -15.250100135803223
    8. '2' → logprob: -15.375100135803223
    9. '0' → logprob: -15.625100135803223
    10. '
' → logprob: -15.750100135803223

Token 257: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.7448598146438599
    2. '[v' → logprob: -0.7448598146438599
    3. '[u' → logprob: -2.9948596954345703
    4. '[' → logprob: -8.36985969543457
    5. ' [' → logprob: -10.11985969543457
    6. ' ][' → logprob: -10.24485969543457
    7. '}[' → logprob: -10.49485969543457
    8. ')[' → logprob: -12.74485969543457
    9. ']' → logprob: -12.74485969543457
    10. '   ' → logprob: -13.11985969543457

Token 258: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.1472419600977446e-06
    2. ' v' → logprob: -14.250000953674316
    3. '
' → logprob: -15.375000953674316
    4. 'u' → logprob: -16.125001907348633
    5. '   ' → logprob: -16.875001907348633
    6. '[v' → logprob: -17.375001907348633
    7. '	v' → logprob: -18.125001907348633
    8. 'w' → logprob: -18.375001907348633
    9. ' ' → logprob: -18.500001907348633
    10. '
' → logprob: -18.875001907348633

Token 259: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5760106444358826
    2. '-' → logprob: -0.8260106444358826
    3. '   ' → logprob: -10.201010704040527
    4. '][' → logprob: -11.326010704040527
    5. '[' → logprob: -11.701010704040527
    6. ' ' → logprob: -12.201010704040527
    7. '       ' → logprob: -13.201010704040527
    8. '−' → logprob: -13.576010704040527
    9. '```' → logprob: -13.701010704040527
    10. '1' → logprob: -14.201010704040527

Token 260: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005241344682872295
    2. ' ' → logprob: -5.255241394042969
    3. '-' → logprob: -13.130241394042969
    4. '```' → logprob: -13.255241394042969
    5. '   ' → logprob: -14.380241394042969
    6. ' -' → logprob: -14.380241394042969
    7. ' ' → logprob: -14.442741394042969
    8. ']' → logprob: -14.880241394042969
    9. '<|end|>' → logprob: -15.192741394042969
    10. '_' → logprob: -15.255241394042969

Token 261: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007847936823964119
    2. ' ' → logprob: -4.882847785949707
    3. '-' → logprob: -8.507847785949707
    4. 'u' → logprob: -11.507847785949707
    5. ']' → logprob: -12.257847785949707
    6. '```' → logprob: -12.257847785949707
    7. '   ' → logprob: -12.382847785949707
    8. ' -' → logprob: -12.507847785949707
    9. '0' → logprob: -12.632847785949707
    10. 'v' → logprob: -12.882847785949707

Token 262: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013897499069571495
    2. ']=' → logprob: -4.76389741897583
    3. '][' → logprob: -5.26389741897583
    4. '=' → logprob: -9.638897895812988
    5. ' ]' → logprob: -10.638897895812988
    6. '[' → logprob: -13.638897895812988
    7. ' =' → logprob: -13.638897895812988
    8. ' ][' → logprob: -14.263897895812988
    9. ']+=' → logprob: -14.638897895812988
    10. ']
' → logprob: -15.888897895812988

Token 263: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759397745132446
    2. ' =' → logprob: -0.8259397745132446
    3. ' ' → logprob: -15.950940132141113
    4. '＝' → logprob: -17.075939178466797
    5. '=d' → logprob: -17.450939178466797
    6. '=
' → logprob: -17.575939178466797
    7. '[' → logprob: -17.575939178466797
    8. ',' → logprob: -17.700939178466797
    9. '<|end|>' → logprob: -17.950939178466797
    10. ' =
' → logprob: -18.200939178466797

Token 264: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.005234121344983578
    2. ' d' → logprob: -5.255234241485596
    3. ' ' → logprob: -15.630233764648438
    4. '   ' → logprob: -15.755233764648438
    5. '  ' → logprob: -17.505233764648438
    6. '	d' → logprob: -17.630233764648438
    7. 'dge' → logprob: -17.755233764648438
    8. '
' → logprob: -18.130233764648438
    9. 'edge' → logprob: -18.255233764648438
    10. '           ' → logprob: -19.630233764648438

Token 265: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00027813989436253905
    2. 'wf' → logprob: -8.50027847290039
    3. '<|end|>' → logprob: -10.12527847290039
    4. '
' → logprob: -11.50027847290039
    5. ' wf' → logprob: -11.62527847290039
    6. 'w' → logprob: -11.75027847290039
    7. '	' → logprob: -14.00027847290039
    8. '<|end|>' → logprob: -14.00027847290039
    9. '           ' → logprob: -14.12527847290039
    10. '      ' → logprob: -14.37527847290039

Token 266: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1994775377388578e-05
    2. 'wf' → logprob: -11.875012397766113
    3. '<|end|>' → logprob: -12.500012397766113
    4. '           ' → logprob: -15.250012397766113
    5. 'w' → logprob: -15.375012397766113
    6. '      ' → logprob: -15.750012397766113
    7. '<|end|>' → logprob: -15.875012397766113
    8. '
' → logprob: -16.000011444091797
    9. '   ' → logprob: -16.375011444091797
    10. ' wf' → logprob: -16.625011444091797

Token 267: ' wf' (ID: 99382)
  Prédit: 'wf'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wf' (adapté à ' wf') → logprob: -6.988221684878226e-06
    2. ' wf' → logprob: -12.250006675720215
    3. '       ' → logprob: -13.125006675720215
    4. 'w' → logprob: -17.12500762939453
    5. 'vf' → logprob: -17.12500762939453
    6. 'wolf' → logprob: -17.25000762939453
    7. 'wv' → logprob: -17.87500762939453
    8. 'wg' → logprob: -18.50000762939453
    9. 'wt' → logprob: -18.75000762939453
    10. '   ' → logprob: -19.25000762939453

Token 268: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.004078758880496025
    2. '[u' → logprob: -5.5040788650512695
    3. 'v' → logprob: -15.00407886505127
    4. '[' → logprob: -16.254077911376953
    5. 'u' → logprob: -19.004077911376953
    6. '[w' → logprob: -20.379077911376953
    7. '(v' → logprob: -20.379077911376953
    8. ' [' → logprob: -20.754077911376953
    9. '```' → logprob: -20.754077911376953
    10. '	v' → logprob: -20.879077911376953

Token 269: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.02675722725689411
    2. '-' → logprob: -3.65175724029541
    3. '[u' → logprob: -7.90175724029541
    4. '[' → logprob: -9.90175724029541
    5. '[-' → logprob: -11.27675724029541
    6. '   ' → logprob: -11.52675724029541
    7. ' [' → logprob: -12.27675724029541
    8. ' ' → logprob: -12.90175724029541
    9. '[v' → logprob: -13.27675724029541
    10. '-u' → logprob: -13.52675724029541

Token 270: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0336923822760582
    2. ' ' → logprob: -3.4086923599243164
    3. '-' → logprob: -11.158692359924316
    4. '0' → logprob: -11.908692359924316
    5. ' -' → logprob: -12.033692359924316
    6. 'v' → logprob: -12.033692359924316
    7. ' v' → logprob: -12.533692359924316
    8. '   ' → logprob: -12.783692359924316
    9. '(' → logprob: -13.533692359924316
    10. '```' → logprob: -13.658692359924316

Token 271: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.094821497797966
    2. ' ' → logprob: -2.4698214530944824
    3. '-' → logprob: -5.219821453094482
    4. ' -' → logprob: -8.34482192993164
    5. 'u' → logprob: -9.96982192993164
    6. ' u' → logprob: -10.21982192993164
    7. '[u' → logprob: -10.59482192993164
    8. 'v' → logprob: -10.96982192993164
    9. '0' → logprob: -10.96982192993164
    10. 'user' → logprob: -11.09482192993164

Token 272: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.10354692488908768
    2. '[u' → logprob: -2.6035468578338623
    3. '[v' → logprob: -3.7285468578338623
    4. '[' → logprob: -9.353547096252441
    5. ' ][' → logprob: -9.353547096252441
    6. ']' → logprob: -9.853547096252441
    7. ' [' → logprob: -10.853547096252441
    8. '       ' → logprob: -11.103547096252441
    9. 'u' → logprob: -11.353547096252441
    10. '   ' → logprob: -11.478547096252441

Token 273: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.00014656837447546422
    2. ' u' → logprob: -8.875146865844727
    3. '[u' → logprob: -12.000146865844727
    4. 'v' → logprob: -15.125146865844727
    5. '   ' → logprob: -15.500146865844727
    6. '	u' → logprob: -17.125146865844727
    7. ' ' → logprob: -17.250146865844727
    8. '       ' → logprob: -17.625146865844727
    9. '           ' → logprob: -17.625146865844727
    10. '(u' → logprob: -17.875146865844727

Token 274: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03806823492050171
    2. '-' → logprob: -3.2880682945251465
    3. '][' → logprob: -11.538067817687988
    4. '[' → logprob: -12.413067817687988
    5. '   ' → logprob: -12.538067817687988
    6. ' ' → logprob: -12.788067817687988
    7. ' [' → logprob: -12.913067817687988
    8. '           ' → logprob: -14.413067817687988
    9. '[-' → logprob: -14.538067817687988
    10. '[v' → logprob: -14.538067817687988

Token 275: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011649534106254578
    2. ' ' → logprob: -4.5116496086120605
    3. '-' → logprob: -7.5116496086120605
    4. ' -' → logprob: -10.011649131774902
    5. '```' → logprob: -12.511649131774902
    6. '0' → logprob: -13.136649131774902
    7. '   ' → logprob: -13.636649131774902
    8. 'v' → logprob: -13.636649131774902
    9. ' ' → logprob: -15.324149131774902
    10. 'user' → logprob: -15.761649131774902

Token 276: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01611577719449997
    2. ' ' → logprob: -4.141115665435791
    3. 'v' → logprob: -9.76611614227295
    4. '-' → logprob: -11.01611614227295
    5. ' v' → logprob: -13.39111614227295
    6. '   ' → logprob: -13.39111614227295
    7. 'd' → logprob: -13.39111614227295
    8. '```' → logprob: -13.89111614227295
    9. 'u' → logprob: -14.14111614227295
    10. 'user' → logprob: -15.39111614227295

Token 277: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0017314640572294593
    2. ']=' → logprob: -6.5017313957214355
    3. '][' → logprob: -8.751731872558594
    4. ' ]' → logprob: -9.876731872558594
    5. '=' → logprob: -11.001731872558594
    6. ' =' → logprob: -14.001731872558594
    7. '       ' → logprob: -15.126731872558594
    8. '[' → logprob: -15.251731872558594
    9. ']==' → logprob: -15.376731872558594
    10. ')' → logprob: -15.626731872558594

Token 278: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141734182834625
    2. ' =' → logprob: -1.701417326927185
    3. ']' → logprob: -13.326416969299316
    4. ']=' → logprob: -13.951416969299316
    5. '[' → logprob: -14.326416969299316
    6. ')' → logprob: -15.076416969299316
    7. '=d' → logprob: -15.326416969299316
    8. ' ' → logprob: -15.451416969299316
    9. '   ' → logprob: -16.951417922973633
    10. '＝' → logprob: -16.951417922973633

Token 279: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.007606389466673136
    2. ' d' → logprob: -4.882606506347656
    3. '	d' → logprob: -16.132606506347656
    4. ' ' → logprob: -16.382606506347656
    5. '   ' → logprob: -17.382606506347656
    6. ')d' → logprob: -18.132606506347656
    7. '```' → logprob: -18.507606506347656
    8. ''d' → logprob: -18.632606506347656
    9. ' ' → logprob: -18.632606506347656
    10. '>d' → logprob: -19.070106506347656

Token 280: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06147468090057373
    2. '<|end|>' → logprob: -3.0614748001098633
    3. ' for' → logprob: -5.436474800109863
    4. 'for' → logprob: -5.436474800109863
    5. '
' → logprob: -6.061474800109863
    6. '       ' → logprob: -7.311474800109863
    7. 'def' → logprob: -8.061474800109863
    8. '<|end|>' → logprob: -8.061474800109863
    9. '    
' → logprob: -8.686474800109863
    10. '```' → logprob: -9.686474800109863

Token 281: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0593305341899395
    2. 'for' → logprob: -2.934330463409424
    3. ' for' → logprob: -5.559330463409424
    4. '```' → logprob: -8.184330940246582
    5. '
' → logprob: -8.309330940246582
    6. '    
' → logprob: -10.309330940246582
    7. 'next' → logprob: -12.184330940246582
    8. 'def' → logprob: -12.309330940246582
    9. '<|end|>' → logprob: -12.309330940246582
    10. '       ' → logprob: -12.684330940246582

Token 282: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.089144267141819
    2. '   ' → logprob: -2.464144229888916
    3. ' for' → logprob: -8.589144706726074
    4. 'def' → logprob: -11.589144706726074
    5. '	for' → logprob: -12.964144706726074
    6. '    
' → logprob: -13.089144706726074
    7. '#' → logprob: -13.214144706726074
    8. '
' → logprob: -13.464144706726074
    9. '       ' → logprob: -14.464144706726074
    10. '  ' → logprob: -15.589144706726074

Token 283: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0023296247236430645
    2. ' k' → logprob: -6.3773298263549805
    3. 'i' → logprob: -7.8773298263549805
    4. 't' → logprob: -10.00232982635498
    5. 'via' → logprob: -10.00232982635498
    6. 'j' → logprob: -10.50232982635498
    7. 'w' → logprob: -10.75232982635498
    8. 'u' → logprob: -11.25232982635498
    9. 'v' → logprob: -11.25232982635498
    10. 'm' → logprob: -11.50232982635498

Token 284: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023257357999682426
    2. 'in' → logprob: -3.773257255554199
    3. '   ' → logprob: -12.2732572555542
    4. ' ' → logprob: -12.5232572555542
    5. '	in' → logprob: -14.0232572555542
    6. 'range' → logprob: -14.3982572555542
    7. 'import' → logprob: -14.8982572555542
    8. '  ' → logprob: -15.2732572555542
    9. 'In' → logprob: -15.2732572555542
    10. '```' → logprob: -15.2732572555542

Token 285: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2014138251543045
    2. ' range' → logprob: -1.701413869857788
    3. '(range' → logprob: -15.076414108276367
    4. '	range' → logprob: -16.576414108276367
    5. ' ' → logprob: -16.826414108276367
    6. 'Range' → logprob: -17.451414108276367
    7. '   ' → logprob: -17.576414108276367
    8. '0' → logprob: -17.701414108276367
    9. '.range' → logprob: -18.326414108276367
    10. '[' → logprob: -18.701414108276367

Token 286: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.0009563630446791649
    2. 'V' → logprob: -7.0009565353393555
    3. '(' → logprob: -10.250956535339355
    4. '   ' → logprob: -11.750956535339355
    5. ' V' → logprob: -13.875956535339355
    6. ' (' → logprob: -15.250956535339355
    7. '	V' → logprob: -15.500956535339355
    8. ',' → logprob: -16.50095558166504
    9. ' ' → logprob: -16.75095558166504
    10. '(
' → logprob: -17.12595558166504

Token 287: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.22918103635311127
    2. '):' → logprob: -1.6041810512542725
    3. '   ' → logprob: -5.979180812835693
    4. ':' → logprob: -6.854180812835693
    5. ':
' → logprob: -8.854181289672852
    6. ')' → logprob: -11.604181289672852
    7. '):
' → logprob: -11.979181289672852
    8. ' ):
' → logprob: -12.354181289672852
    9. '():
' → logprob: -13.354181289672852
    10. ' ' → logprob: -13.354181289672852

Token 288: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008625074988231063
    2. ':' → logprob: -7.2508625984191895
    3. ' for' → logprob: -9.625862121582031
    4. ':
' → logprob: -10.125862121582031
    5. '   ' → logprob: -10.875862121582031
    6. ',' → logprob: -11.125862121582031
    7. '<|end|>' → logprob: -13.125862121582031
    8. '        
' → logprob: -13.250862121582031
    9. '
' → logprob: -13.375862121582031
    10. '     ' → logprob: -13.625862121582031

Token 289: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07705263048410416
    2. '   ' → logprob: -3.077052593231201
    3. ' for' → logprob: -3.577052593231201
    4. '       ' → logprob: -9.20205307006836
    5. '	for' → logprob: -12.57705307006836
    6. ' ' → logprob: -14.07705307006836
    7. '  ' → logprob: -14.82705307006836
    8. '    ' → logprob: -15.20205307006836
    9. '
' → logprob: -15.57705307006836
    10. '           ' → logprob: -16.95205307006836

Token 290: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.009787374176084995
    2. ' i' → logprob: -4.634787559509277
    3. '   ' → logprob: -10.884787559509277
    4. 'j' → logprob: -11.759787559509277
    5. ' ' → logprob: -13.384787559509277
    6. 'v' → logprob: -14.009787559509277
    7. ' range' → logprob: -14.759787559509277
    8. 'range' → logprob: -14.759787559509277
    9. '    ' → logprob: -15.134787559509277
    10. ' j' → logprob: -15.259787559509277

Token 291: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03805067762732506
    2. 'in' → logprob: -3.288050651550293
    3. '   ' → logprob: -12.288050651550293
    4. ' ' → logprob: -13.413050651550293
    5. '       ' → logprob: -14.538050651550293
    6. 'n' → logprob: -14.663050651550293
    7. '    ' → logprob: -14.788050651550293
    8. 'range' → logprob: -14.788050651550293
    9. '  ' → logprob: -15.038050651550293
    10. 'import' → logprob: -15.163050651550293

Token 292: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2014208436012268
    2. ' range' → logprob: -1.701420783996582
    3. '(range' → logprob: -13.451420783996582
    4. 'V' → logprob: -13.576420783996582
    5. 'in' → logprob: -13.701420783996582
    6. ' in' → logprob: -13.826420783996582
    7. '   ' → logprob: -13.951420783996582
    8. ' V' → logprob: -14.451420783996582
    9. '(V' → logprob: -14.451420783996582
    10. ' ' → logprob: -14.576420783996582

Token 293: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -4.4418171455617994e-05
    2. 'V' → logprob: -10.250044822692871
    3. '           ' → logprob: -13.000044822692871
    4. '   ' → logprob: -13.125044822692871
    5. ' (' → logprob: -13.375044822692871
    6. '(' → logprob: -13.625044822692871
    7. '       ' → logprob: -13.875044822692871
    8. '               ' → logprob: -15.125044822692871
    9. ' V' → logprob: -15.250044822692871
    10. '	V' → logprob: -15.500044822692871

Token 294: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04146923869848251
    2. '):' → logprob: -3.2914693355560303
    3. '       ' → logprob: -5.916469097137451
    4. '           ' → logprob: -8.04146957397461
    5. ':' → logprob: -8.41646957397461
    6. '   ' → logprob: -9.54146957397461
    7. ':
' → logprob: -10.04146957397461
    8. '+' → logprob: -10.41646957397461
    9. '):
' → logprob: -11.41646957397461
    10. '               ' → logprob: -12.54146957397461

Token 295: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00016301481809932739
    2. ' for' → logprob: -8.875163078308105
    3. '       ' → logprob: -11.750163078308105
    4. '	       ' → logprob: -12.000163078308105
    5. '               ' → logprob: -12.125163078308105
    6. 'for' → logprob: -13.000163078308105
    7. '   ' → logprob: -15.250163078308105
    8. '		' → logprob: -15.500163078308105
    9. ',' → logprob: -15.500163078308105
    10. '<|end|>' → logprob: -15.625163078308105

Token 296: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7363528609275818
    2. 'for' (adapté à ' for') → logprob: -0.8613528609275818
    3. '               ' → logprob: -2.3613529205322266
    4. '       ' → logprob: -6.111352920532227
    5. '           ' → logprob: -6.611352920532227
    6. '   ' → logprob: -7.486352920532227
    7. '	for' → logprob: -9.361352920532227
    8. ' ' → logprob: -10.236352920532227
    9. '                   ' → logprob: -12.611352920532227
    10. '	       ' → logprob: -13.111352920532227

Token 297: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6935297846794128
    2. ' j' → logprob: -0.6935297846794128
    3. '   ' → logprob: -9.443530082702637
    4. '           ' → logprob: -9.443530082702637
    5. ' in' → logprob: -9.943530082702637
    6. '0' → logprob: -10.193530082702637
    7. ' ' → logprob: -10.193530082702637
    8. '       ' → logprob: -10.318530082702637
    9. 'k' → logprob: -10.568530082702637
    10. '               ' → logprob: -11.943530082702637

Token 298: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009773085825145245
    2. 'in' → logprob: -4.634773254394531
    3. ' ' → logprob: -12.634773254394531
    4. '	in' → logprob: -12.759773254394531
    5. '<|end|>' → logprob: -13.259773254394531
    6. '           ' → logprob: -13.259773254394531
    7. '   ' → logprob: -13.384773254394531
    8. '               ' → logprob: -13.509773254394531
    9. '[' → logprob: -14.634773254394531
    10. '    ' → logprob: -14.884773254394531

Token 299: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1675785630941391
    2. ' range' → logprob: -1.9175785779953003
    3. '(V' → logprob: -4.91757869720459
    4. '(range' → logprob: -12.04257869720459
    5. 'Range' → logprob: -13.79257869720459
    6. ' (' → logprob: -13.79257869720459
    7. '   ' → logprob: -14.16757869720459
    8. ' ' → logprob: -14.79257869720459
    9. '           ' → logprob: -14.79257869720459
    10. 'V' → logprob: -14.79257869720459

Token 300: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -4.723352049040841e-06
    2. ' (' → logprob: -13.250004768371582
    3. 'range' → logprob: -13.375004768371582
    4. 'V' → logprob: -14.750004768371582
    5. '(' → logprob: -15.625004768371582
    6. '           ' → logprob: -15.625004768371582
    7. ' range' → logprob: -15.750004768371582
    8. '               ' → logprob: -16.250003814697266
    9. '                   ' → logprob: -16.250003814697266
    10. '   ' → logprob: -16.500003814697266

Token 301: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.036872658878564835
    2. '               ' → logprob: -4.036872863769531
    3. '):' → logprob: -4.536872863769531
    4. '           ' → logprob: -5.161872863769531
    5. '       ' → logprob: -7.411872863769531
    6. ':' → logprob: -7.661872863769531
    7. '+' → logprob: -8.661872863769531
    8. '):
' → logprob: -8.911872863769531
    9. '():
' → logprob: -9.161872863769531
    10. '                   ' → logprob: -9.161872863769531

Token 302: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000229046301683411
    2. ' if' → logprob: -8.500228881835938
    3. 'if' → logprob: -12.000228881835938
    4. '                       ' → logprob: -12.125228881835938
    5. '                   ' → logprob: -12.250228881835938
    6. '           ' → logprob: -12.500228881835938
    7. '                ' → logprob: -12.750228881835938
    8. '              ' → logprob: -13.500228881835938
    9. '       ' → logprob: -15.125228881835938
    10. '                               ' → logprob: -15.625228881835938

Token 303: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1022915318608284
    2. ' if' → logprob: -2.3522915840148926
    3. '                   ' → logprob: -6.227291584014893
    4. '               ' → logprob: -9.852291107177734
    5. '   ' → logprob: -10.477291107177734
    6. 'new' → logprob: -10.852291107177734
    7. ' new' → logprob: -12.852291107177734
    8. '	if' → logprob: -13.602291107177734
    9. 'nd' → logprob: -14.102291107177734
    10. '                       ' → logprob: -14.227291107177734

Token 304: ' wf' (ID: 99382)
  Prédit: 'wf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wf' → logprob: -0.10021820664405823
    2. ' wf' → logprob: -2.3502182960510254
    3. 'edge' → logprob: -12.475217819213867
    4. '   ' → logprob: -12.600217819213867
    5. ' ' → logprob: -13.475217819213867
    6. 'w' → logprob: -13.725217819213867
    7. ' edge' → logprob: -14.100217819213867
    8. '	w' → logprob: -15.100217819213867
    9. '  ' → logprob: -15.350217819213867
    10. '(w' → logprob: -15.600217819213867

Token 305: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.088346359931165e-07
    2. 'i' → logprob: -15.125000953674316
    3. '               ' → logprob: -15.250000953674316
    4. ' [' → logprob: -16.0
    5. '           ' → logprob: -16.5
    6. '                   ' → logprob: -16.75
    7. '][' → logprob: -16.75
    8. '[I' → logprob: -16.75
    9. '```' → logprob: -17.875
    10. '[' → logprob: -18.125

Token 306: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.02444244734942913
    2. '[j' → logprob: -3.774442434310913
    3. '[k' → logprob: -6.774442672729492
    4. ' ][' → logprob: -11.274442672729492
    5. 'j' → logprob: -11.774442672729492
    6. 'k' → logprob: -11.899442672729492
    7. ']' → logprob: -12.149442672729492
    8. '[i' → logprob: -12.149442672729492
    9. '   ' → logprob: -12.649442672729492
    10. '[' → logprob: -12.649442672729492

Token 307: 'j' (ID: 73)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.22547172009944916
    2. 'j' → logprob: -1.6004717350006104
    3. 'i' → logprob: -10.100471496582031
    4. '][' → logprob: -12.225471496582031
    5. '   ' → logprob: -12.350471496582031
    6. ' k' → logprob: -13.100471496582031
    7. '           ' → logprob: -13.225471496582031
    8. ' j' → logprob: -13.850471496582031
    9. '
' → logprob: -14.350471496582031
    10. '               ' → logprob: -14.600471496582031

Token 308: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.4942317008972168
    2. ']' → logprob: -0.9942317008972168
    3. ']>' → logprob: -4.494231700897217
    4. ' >' → logprob: -4.744231700897217
    5. ' ]' → logprob: -10.119232177734375
    6. '[' → logprob: -11.244232177734375
    7. '>]' → logprob: -12.119232177734375
    8. '[i' → logprob: -12.244232177734375
    9. '   ' → logprob: -12.869232177734375
    10. '][' → logprob: -13.369232177734375

Token 309: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.009759632870554924
    2. ' >' → logprob: -4.634759426116943
    3. '>
' → logprob: -14.009759902954102
    4. '>w' → logprob: -14.134759902954102
    5. ' ' → logprob: -14.759759902954102
    6. '[' → logprob: -15.009759902954102
    7. '   ' → logprob: -15.259759902954102
    8. '```' → logprob: -15.384759902954102
    9. '>[' → logprob: -15.759759902954102
    10. '>

' → logprob: -15.884759902954102

Token 310: ' wf' (ID: 99382)
  Prédit: 'wf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wf' → logprob: -0.018159780651330948
    2. ' wf' → logprob: -4.018159866333008
    3. '   ' → logprob: -12.018159866333008
    4. ' ' → logprob: -12.768159866333008
    5. '  ' → logprob: -15.018159866333008
    6. 'w' → logprob: -15.143159866333008
    7. '    ' → logprob: -16.143159866333008
    8. '       ' → logprob: -17.018159866333008
    9. '
' → logprob: -17.143159866333008
    10. 'vf' → logprob: -17.143159866333008

Token 311: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3856492842023727e-06
    2. 'i' → logprob: -13.750000953674316
    3. '```' → logprob: -16.125001907348633
    4. '[' → logprob: -16.250001907348633
    5. '[I' → logprob: -17.000001907348633
    6. ' [' → logprob: -17.125001907348633
    7. '{i' → logprob: -17.125001907348633
    8. '
' → logprob: -17.500001907348633
    9. '(i' → logprob: -18.250001907348633
    10. '[
' → logprob: -18.500001907348633

Token 312: '][' (ID: 2696)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.22053590416908264
    2. '][' → logprob: -1.8455358743667603
    3. 'k' → logprob: -3.22053599357605
    4. '[' → logprob: -11.595536231994629
    5. ' [' → logprob: -12.095536231994629
    6. ' k' → logprob: -12.220536231994629
    7. ',k' → logprob: -12.595536231994629
    8. '[i' → logprob: -12.970536231994629
    9. '
' → logprob: -13.095536231994629
    10. ']' → logprob: -13.220536231994629

Token 313: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -3.128163257315464e-07
    2. ' k' → logprob: -15.75
    3. '[k' → logprob: -16.25
    4. '
' → logprob: -17.5
    5. '	k' → logprob: -17.75
    6. '   ' → logprob: -18.25
    7. ' ' → logprob: -19.625
    8. '```' → logprob: -19.75
    9. 'j' → logprob: -20.0
    10. ',k' → logprob: -20.125

Token 314: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009176511666737497
    2. ']+' → logprob: -7.000917434692383
    3. ' ]' → logprob: -12.000917434692383
    4. ']
' → logprob: -18.000917434692383
    5. '[' → logprob: -19.375917434692383
    6. 'k' → logprob: -19.625917434692383
    7. ' ' → logprob: -20.000917434692383
    8. ')' → logprob: -20.000917434692383
    9. ']+=' → logprob: -20.000917434692383
    10. '+' → logprob: -20.500917434692383

Token 315: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20142170786857605
    2. '+' → logprob: -1.7014217376708984
    3. ' plus' → logprob: -12.326421737670898
    4. ']+' → logprob: -13.451421737670898
    5. ']' → logprob: -14.326421737670898
    6. ' ' → logprob: -14.576421737670898
    7. '+k' → logprob: -14.826421737670898
    8. ' ' → logprob: -15.201421737670898
    9. '＋' → logprob: -15.576421737670898
    10. '+w' → logprob: -15.826421737670898

Token 316: ' wf' (ID: 99382)
  Prédit: 'wf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wf' → logprob: -0.0019287518225610256
    2. ' wf' → logprob: -6.251928806304932
    3. '   ' → logprob: -17.251928329467773
    4. 'w' → logprob: -17.501928329467773
    5. '           ' → logprob: -18.001928329467773
    6. '               ' → logprob: -18.126928329467773
    7. '       ' → logprob: -19.001928329467773
    8. '
' → logprob: -19.001928329467773
    9. ' ' → logprob: -19.126928329467773
    10. 'WF' → logprob: -19.251928329467773

Token 317: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -2.7729658540920354e-05
    2. 'k' → logprob: -10.500027656555176
    3. '][' → logprob: -16.750028610229492
    4. '```' → logprob: -17.125028610229492
    5. '[i' → logprob: -17.750028610229492
    6. '[' → logprob: -18.125028610229492
    7. '
' → logprob: -18.250028610229492
    8. ' [' → logprob: -18.625028610229492
    9. '[j' → logprob: -18.875028610229492
    10. '[
' → logprob: -19.000028610229492

Token 318: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.001940057729370892
    2. '[j' → logprob: -6.2519402503967285
    3. ']' → logprob: -12.25193977355957
    4. ' ][' → logprob: -12.75193977355957
    5. '[k' → logprob: -12.87693977355957
    6. '[' → logprob: -14.25193977355957
    7. '}[' → logprob: -15.12693977355957
    8. ']][' → logprob: -16.00193977355957
    9. 'j' → logprob: -17.12693977355957
    10. ' [' → logprob: -17.37693977355957

Token 319: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.981667537620524e-06
    2. '[j' → logprob: -13.875001907348633
    3. ' j' → logprob: -13.875001907348633
    4. '
' → logprob: -17.250001907348633
    5. '	j' → logprob: -17.500001907348633
    6. 'k' → logprob: -18.375001907348633
    7. '][' → logprob: -18.625001907348633
    8. '```' → logprob: -18.750001907348633
    9. ']' → logprob: -19.875001907348633
    10. ' ' → logprob: -20.125001907348633

Token 320: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.14121733605861664
    2. ']:
' → logprob: -2.6412172317504883
    3. ':' → logprob: -2.8912172317504883
    4. ']' → logprob: -6.141217231750488
    5. ':
' → logprob: -7.266217231750488
    6. '               ' → logprob: -7.391217231750488
    7. '                   ' → logprob: -7.766217231750488
    8. ']:
' → logprob: -8.391217231750488
    9. '):' → logprob: -8.516217231750488
    10. ' ]' → logprob: -8.891217231750488

Token 321: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.023890990763902664
    2. '                       ' → logprob: -4.273890972137451
    3. ':' → logprob: -5.148890972137451
    4. '               ' → logprob: -6.398890972137451
    5. ':
' → logprob: -7.398890972137451
    6. '                           ' → logprob: -8.02389144897461
    7. '                    ' → logprob: -8.14889144897461
    8. '                               ' → logprob: -8.14889144897461
    9. '                  ' → logprob: -9.14889144897461
    10. ',' → logprob: -9.14889144897461

Token 322: ' wf' (ID: 99382)
  Prédit: ' wf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' wf' → logprob: -0.0021415743976831436
    2. 'wf' (adapté à ' wf') → logprob: -6.87714147567749
    3. '                   ' → logprob: -7.00214147567749
    4. '                       ' → logprob: -8.752141952514648
    5. '               ' → logprob: -10.377141952514648
    6. '                               ' → logprob: -12.877141952514648
    7. '                    ' → logprob: -13.377141952514648
    8. '                           ' → logprob: -14.252141952514648
    9. '                ' → logprob: -14.377141952514648
    10. ' ' → logprob: -15.002141952514648

Token 323: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: 0.0
    2. ' [' → logprob: -17.0
    3. '[' → logprob: -17.625
    4. '][' → logprob: -18.5
    5. '```' → logprob: -18.75
    6. '[I' → logprob: -19.25
    7. '[j' → logprob: -19.625
    8. 'i' → logprob: -20.625
    9. ')[' → logprob: -20.875
    10. '[k' → logprob: -21.0

Token 324: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0018997211009263992
    2. '[i' → logprob: -6.626899719238281
    3. '[j' → logprob: -7.501899719238281
    4. ' ][' → logprob: -11.126899719238281
    5. ']' → logprob: -12.751899719238281
    6. '[k' → logprob: -13.126899719238281
    7. '[' → logprob: -14.376899719238281
    8. ']][' → logprob: -14.501899719238281
    9. '}[' → logprob: -15.251899719238281
    10. ' [' → logprob: -15.751899719238281

Token 325: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.01104935072362423
    2. 'k' → logprob: -4.511049270629883
    3. ' j' → logprob: -14.386049270629883
    4. '[j' → logprob: -15.136049270629883
    5. '
' → logprob: -15.886049270629883
    6. '   ' → logprob: -16.261049270629883
    7. '```' → logprob: -16.386049270629883
    8. ']' → logprob: -16.511049270629883
    9. 'jk' → logprob: -16.636049270629883
    10. '           ' → logprob: -17.136049270629883

Token 326: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.17035333812236786
    2. '=' → logprob: -2.295353412628174
    3. ' =' → logprob: -2.920353412628174
    4. ']=' → logprob: -6.795353412628174
    5. ' ]' → logprob: -7.045353412628174
    6. ')' → logprob: -13.795352935791016
    7. '>' → logprob: -14.795352935791016
    8. '<|end|>' → logprob: -15.795352935791016
    9. ' ' → logprob: -15.920352935791016
    10. '}' → logprob: -16.670352935791016

Token 327: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519291639328003
    2. ' =' → logprob: -1.5019291639328003
    3. '.=' → logprob: -17.626928329467773
    4. '＝' → logprob: -17.876928329467773
    5. ',' → logprob: -18.751928329467773
    6. ' ' → logprob: -18.876928329467773
    7. ']' → logprob: -19.376928329467773
    8. '>' → logprob: -19.626928329467773
    9. '    ' → logprob: -19.626928329467773
    10. '=

' → logprob: -20.126928329467773

Token 328: ' wf' (ID: 99382)
  Prédit: ' wf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' wf' → logprob: -0.2519342601299286
    2. 'wf' → logprob: -1.501934289932251
    3. '   ' → logprob: -14.001934051513672
    4. '               ' → logprob: -14.126934051513672
    5. '                   ' → logprob: -14.251934051513672
    6. 'w' → logprob: -14.251934051513672
    7. ' ' → logprob: -14.751934051513672
    8. '           ' → logprob: -14.876934051513672
    9. '    ' → logprob: -14.876934051513672
    10. '                ' → logprob: -16.001934051513672

Token 329: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.7697225252486533e-06
    2. 'i' → logprob: -13.375003814697266
    3. '[k' → logprob: -13.625003814697266
    4. ' [' → logprob: -14.625003814697266
    5. '[' → logprob: -15.000003814697266
    6. '```' → logprob: -16.875003814697266
    7. '][' → logprob: -17.000003814697266
    8. '{i' → logprob: -17.125003814697266
    9. '[I' → logprob: -17.750003814697266
    10. '(i' → logprob: -18.000003814697266

Token 330: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.16039705276489258
    2. '[k' → logprob: -1.9103970527648926
    3. ' ][' → logprob: -10.035396575927734
    4. '[' → logprob: -10.285396575927734
    5. 'k' → logprob: -10.285396575927734
    6. '[i' → logprob: -10.660396575927734
    7. ']' → logprob: -11.410396575927734
    8. '   ' → logprob: -12.035396575927734
    9. '[j' → logprob: -12.285396575927734
    10. ' [' → logprob: -12.660396575927734

Token 331: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -6.869017852295656e-06
    2. 'j' → logprob: -12.000006675720215
    3. ' k' → logprob: -15.375006675720215
    4. '
' → logprob: -15.750006675720215
    5. '[k' → logprob: -15.875006675720215
    6. '```' → logprob: -16.50000762939453
    7. '[' → logprob: -17.25000762939453
    8. '   ' → logprob: -17.25000762939453
    9. ']' → logprob: -17.50000762939453
    10. '
' → logprob: -17.87500762939453

Token 332: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.04806646332144737
    2. ']' → logprob: -3.2980663776397705
    3. '[k' → logprob: -5.29806661605835
    4. '[j' → logprob: -5.54806661605835
    5. ']+' → logprob: -6.92306661605835
    6. ' ][' → logprob: -10.048066139221191
    7. '[' → logprob: -10.548066139221191
    8. ' [' → logprob: -11.673066139221191
    9. ' ]' → logprob: -12.298066139221191
    10. '   ' → logprob: -13.173066139221191

Token 333: ' +' (ID: 659)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.4742199778556824
    2. '[k' → logprob: -0.9742199778556824
    3. '[' → logprob: -9.974220275878906
    4. '][' → logprob: -9.974220275878906
    5. '+' → logprob: -11.224220275878906
    6. '+k' → logprob: -11.224220275878906
    7. ' [' → logprob: -11.474220275878906
    8. '+j' → logprob: -12.349220275878906
    9. '[i' → logprob: -12.599220275878906
    10. ' +' → logprob: -13.224220275878906

Token 334: ' wf' (ID: 99382)
  Prédit: 'wf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wf' → logprob: -0.029751067981123924
    2. ' wf' → logprob: -3.5297510623931885
    3. 'kf' → logprob: -15.90475082397461
    4. 'w' → logprob: -16.27975082397461
    5. 'WF' → logprob: -16.27975082397461
    6. ' ' → logprob: -16.77975082397461
    7. 'wk' → logprob: -17.15475082397461
    8. 'fw' → logprob: -17.27975082397461
    9. 'wt' → logprob: -17.65475082397461
    10. 'vf' → logprob: -17.77975082397461

Token 335: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -3.5358694731257856e-05
    2. 'k' → logprob: -10.750035285949707
    3. '[' → logprob: -11.250035285949707
    4. '[i' → logprob: -14.625035285949707
    5. '(k' → logprob: -15.625035285949707
    6. '```' → logprob: -16.375036239624023
    7. '[j' → logprob: -16.750036239624023
    8. '[[' → logprob: -16.875036239624023
    9. '][' → logprob: -17.500036239624023
    10. '{k' → logprob: -17.625036239624023

Token 336: '][' (ID: 2696)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.18544238805770874
    2. '[j' → logprob: -1.8104424476623535
    3. '][' → logprob: -5.5604424476623535
    4. 'k' → logprob: -6.4354424476623535
    5. 'j' → logprob: -8.935441970825195
    6. '[' → logprob: -9.685441970825195
    7. ']' → logprob: -11.810441970825195
    8. '[i' → logprob: -11.935441970825195
    9. 'kj' → logprob: -12.060441970825195
    10. '[v' → logprob: -12.935441970825195

Token 337: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.320199877838604e-07
    2. '[j' → logprob: -16.25
    3. ' j' → logprob: -16.25
    4. 'k' → logprob: -16.375
    5. '
' → logprob: -17.125
    6. '```' → logprob: -17.125
    7. '1' → logprob: -17.875
    8. ' ' → logprob: -18.125
    9. '   ' → logprob: -18.875
    10. '	j' → logprob: -19.375

Token 338: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.581656277179718
    2. '                   ' → logprob: -1.0816562175750732
    3. '<|end|>' → logprob: -2.4566562175750732
    4. ')' → logprob: -5.081656455993652
    5. '               ' → logprob: -5.331656455993652
    6. '}' → logprob: -6.831656455993652
    7. '<|end|>' → logprob: -7.706656455993652
    8. '                ' → logprob: -7.706656455993652
    9. '```' → logprob: -7.956656455993652
    10. ' ]' → logprob: -8.081656455993652

Token 339: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00013727048644796014
    2. 'next' → logprob: -9.625137329101562
    3. '               ' → logprob: -10.500137329101562
    4. '                    ' → logprob: -11.500137329101562
    5. ' next' → logprob: -11.500137329101562
    6. '                       ' → logprob: -11.625137329101562
    7. '           ' → logprob: -12.500137329101562
    8. '```' → logprob: -12.500137329101562
    9. '                  ' → logprob: -12.750137329101562
    10. '				' → logprob: -14.125137329101562

Token 340: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' (adapté à ' next') → logprob: -0.048617567867040634
    2. ' next' → logprob: -3.0486176013946533
    3. '                   ' → logprob: -10.548617362976074
    4. '                       ' → logprob: -12.798617362976074
    5. '[next' → logprob: -14.673617362976074
    6. '	next' → logprob: -15.423617362976074
    7. '(next' → logprob: -15.923617362976074
    8. '```' → logprob: -16.17361831665039
    9. '   ' → logprob: -16.29861831665039
    10. '.next' → logprob: -16.42361831665039

Token 341: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -5.512236498361744e-07
    2. '```' → logprob: -15.125000953674316
    3. '_' → logprob: -17.625
    4. 'id' → logprob: -17.75
    5. '[i' → logprob: -17.875
    6. '_ids' → logprob: -18.0
    7. '   ' → logprob: -18.25
    8. '[_' → logprob: -18.25
    9. '_i' → logprob: -18.375
    10. ' _' → logprob: -18.75

Token 342: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -15.75
    3. '[I' → logprob: -16.0
    4. '[' → logprob: -17.625
    5. ' [' → logprob: -18.625
    6. '[u' → logprob: -19.125
    7. '\[' → logprob: -19.75
    8. '[int' → logprob: -20.0
    9. '][' → logprob: -20.375
    10. ')[' → logprob: -20.375

Token 343: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.12705671787261963
    2. '][' → logprob: -2.12705659866333
    3. '[' → logprob: -10.002057075500488
    4. '```' → logprob: -10.627057075500488
    5. '}[' → logprob: -10.752057075500488
    6. '[j' → logprob: -11.877057075500488
    7. ' ][' → logprob: -11.877057075500488
    8. ')[' → logprob: -11.877057075500488
    9. '[I' → logprob: -12.252057075500488
    10. ']' → logprob: -13.377057075500488

Token 344: 'j' (ID: 73)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0008776353788562119
    2. '[i' → logprob: -7.500877857208252
    3. 'j' → logprob: -8.250877380371094
    4. ' i' → logprob: -9.875877380371094
    5. '][' → logprob: -12.500877380371094
    6. '```' → logprob: -12.500877380371094
    7. '
' → logprob: -13.625877380371094
    8. 's' → logprob: -14.000877380371094
    9. '                       ' → logprob: -14.750877380371094
    10. '           ' → logprob: -14.750877380371094

Token 345: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16737429797649384
    2. '=' → logprob: -1.9173742532730103
    3. ']=' → logprob: -5.042374134063721
    4. ' =' → logprob: -8.167374610900879
    5. '[i' → logprob: -8.667374610900879
    6. '[k' → logprob: -8.917374610900879
    7. '[' → logprob: -9.917374610900879
    8. '][' → logprob: -11.917374610900879
    9. '=k' → logprob: -12.167374610900879
    10. ')' → logprob: -12.417374610900879

Token 346: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0011746286181733012
    2. ' =' → logprob: -6.751174449920654
    3. '=k' → logprob: -12.626174926757812
    4. '[k' → logprob: -14.126174926757812
    5. '[' → logprob: -15.126174926757812
    6. '[i' → logprob: -16.251174926757812
    7. '=i' → logprob: -16.751174926757812
    8. '＝' → logprob: -18.251174926757812
    9. '```' → logprob: -19.376174926757812
    10. '=
' → logprob: -19.501174926757812

Token 347: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -4.894790981779806e-05
    2. ' next' → logprob: -10.000048637390137
    3. 'k' → logprob: -12.625048637390137
    4. '	next' → logprob: -15.500048637390137
    5. '[next' → logprob: -17.250049591064453
    6. '(next' → logprob: -17.375049591064453
    7. '   ' → logprob: -19.750049591064453
    8. 'Next' → logprob: -21.500049591064453
    9. '.next' → logprob: -22.125049591064453
    10. ',next' → logprob: -22.250049591064453

Token 348: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.0009924377081915736
    2. '[k' → logprob: -7.000992298126221
    3. '```' → logprob: -10.750992774963379
    4. '][' → logprob: -11.250992774963379
    5. '[' → logprob: -11.500992774963379
    6. '[i' → logprob: -11.875992774963379
    7. '_k' → logprob: -12.000992774963379
    8. 'k' → logprob: -12.750992774963379
    9. '[_' → logprob: -13.000992774963379
    10. '[j' → logprob: -13.125992774963379

Token 349: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. '```' → logprob: -15.5
    3. 'i' → logprob: -15.75
    4. '[' → logprob: -17.375
    5. '[k' → logprob: -18.875
    6. ' [' → logprob: -19.75
    7. '[I' → logprob: -19.75
    8. '[
' → logprob: -19.75
    9. '
' → logprob: -20.75
    10. '{i' → logprob: -20.875

Token 350: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005025160498917103
    2. '][' → logprob: -7.625502586364746
    3. '[k' → logprob: -11.500502586364746
    4. 'i' → logprob: -13.500502586364746
    5. '[' → logprob: -14.000502586364746
    6. '
' → logprob: -14.125502586364746
    7. ' [' → logprob: -14.875502586364746
    8. 'k' → logprob: -14.875502586364746
    9. '[j' → logprob: -15.250502586364746
    10. '```' → logprob: -15.250502586364746

Token 351: 'k' (ID: 74)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1063305139541626
    2. 'k' → logprob: -2.356330394744873
    3. '[i' → logprob: -5.106330394744873
    4. '[k' → logprob: -10.231330871582031
    5. ' i' → logprob: -12.231330871582031
    6. '][' → logprob: -12.856330871582031
    7. '
' → logprob: -13.856330871582031
    8. 'j' → logprob: -13.981330871582031
    9. '[' → logprob: -15.106330871582031
    10. '```' → logprob: -15.231330871582031

Token 352: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.035753753036260605
    2. '<|end|>' → logprob: -3.4107537269592285
    3. '[j' → logprob: -6.4107537269592285
    4. '[k' → logprob: -9.035754203796387
    5. ' ]' → logprob: -9.410754203796387
    6. '```' → logprob: -9.660754203796387
    7. '<|end|>' → logprob: -9.785754203796387
    8. '[' → logprob: -10.035754203796387
    9. '}' → logprob: -10.160754203796387
    10. ')' → logprob: -11.910754203796387

Token 353: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 354: ' T' (ID: 353)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17258678376674652
    2. 'for' → logprob: -2.047586679458618
    3. 'while' → logprob: -4.422586917877197
    4. 'def' → logprob: -4.547586917877197
    5. ' for' → logprob: -5.797586917877197
    6. 'distance' → logprob: -7.172586917877197
    7. 'import' → logprob: -7.922586917877197
    8. 'next' → logprob: -8.047586441040039
    9. '#' → logprob: -8.172586441040039
    10. 'queue' → logprob: -8.297586441040039

Token 355: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023047706112265587
    2. 'C' → logprob: -4.773047924041748
    3. '=' → logprob: -5.398047924041748
    4. ',' → logprob: -6.273047924041748
    5. 'r' → logprob: -6.273047924041748
    6. 'ime' → logprob: -6.398047924041748
    7. 'R' → logprob: -6.898047924041748
    8. 'S' → logprob: -7.648047924041748
    9. 'arget' → logprob: -8.39804744720459
    10. 'O' → logprob: -8.39804744720459

Token 356: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1797814816236496
    2. ' int' → logprob: -1.804781436920166
    3. '[int' → logprob: -10.804781913757324
    4. ' ' → logprob: -12.304781913757324
    5. '10' → logprob: -13.054781913757324
    6. '(int' → logprob: -13.179781913757324
    7. ' V' → logprob: -13.679781913757324
    8. '1' → logprob: -13.804781913757324
    9. '0' → logprob: -14.429781913757324
    10. '20' → logprob: -14.554781913757324

Token 357: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.008680282160639763
    2. '(' → logprob: -4.75868034362793
    3. '()' → logprob: -10.13368034362793
    4. 'input' → logprob: -11.25868034362793
    5. '(sys' → logprob: -11.63368034362793
    6. ' (' → logprob: -13.13368034362793
    7. '(
' → logprob: -13.25868034362793
    8. '('' → logprob: -15.63368034362793
    9. ' input' → logprob: -15.88368034362793
    10. '=input' → logprob: -16.50868034362793

Token 358: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.014256121590733528
    2. '()' → logprob: -4.264256000518799
    3. ')' → logprob: -9.639256477355957
    4. '().' → logprob: -10.639256477355957
    5. ' ())' → logprob: -13.514256477355957
    6. '())
' → logprob: -14.139256477355957
    7. '(' → logprob: -14.264256477355957
    8. '();)' → logprob: -14.639256477355957
    9. '()
' → logprob: -15.764256477355957
    10. '()))' → logprob: -17.63925552368164

Token 359: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027658279985189438
    2. 'for' → logprob: -3.652658224105835
    3. ' for' → logprob: -6.902658462524414
    4. 'results' → logprob: -9.027658462524414
    5. 'tasks' → logprob: -9.527658462524414
    6. 'targets' → logprob: -10.277658462524414
    7. 'queries' → logprob: -10.777658462524414
    8. 'trip' → logprob: -11.027658462524414
    9. 'events' → logprob: -11.652658462524414
    10. '    
' → logprob: -11.777658462524414

Token 360: ' order' (ID: 2569)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.30146852135658264
    2. '   ' → logprob: -1.5514684915542603
    3. 'results' → logprob: -3.67646861076355
    4. 'result' → logprob: -5.926468372344971
    5. 'answers' → logprob: -5.926468372344971
    6. 'res' → logprob: -6.176468372344971
    7. ' for' → logprob: -6.426468372344971
    8. 'tr' → logprob: -6.676468372344971
    9. 'orders' → logprob: -6.801468372344971
    10. 'dp' → logprob: -6.926468372344971

Token 361: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2848954498767853
    2. '=' → logprob: -1.409895420074463
    3. ',' → logprob: -6.534895420074463
    4. '_' → logprob: -7.034895420074463
    5. 's' → logprob: -7.159895420074463
    6. '(' → logprob: -8.159895896911621
    7. '[' → logprob: -8.784895896911621
    8. ' ' → logprob: -9.659895896911621
    9. '   ' → logprob: -10.784895896911621
    10. ')' → logprob: -11.534895896911621

Token 362: ' set' (ID: 920)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.4541131854057312
    2. 'list' → logprob: -1.704113245010376
    3. ' []' → logprob: -2.454113245010376
    4. ' list' → logprob: -2.579113245010376
    5. '[list' → logprob: -4.329113006591797
    6. '[' → logprob: -5.329113006591797
    7. ' [' → logprob: -6.204113006591797
    8. '[input' → logprob: -7.579113006591797
    9. 'deque' → logprob: -8.204113006591797
    10. '[int' → logprob: -8.704113006591797

Token 363: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.001145814312621951
    2. '(range' → logprob: -6.876145839691162
    3. '(' → logprob: -10.251145362854004
    4. '(map' → logprob: -10.501145362854004
    5. '()
' → logprob: -11.126145362854004
    6. '([]' → logprob: -11.251145362854004
    7. '([' → logprob: -11.626145362854004
    8. '(input' → logprob: -12.751145362854004
    9. '()

' → logprob: -13.001145362854004
    10. ' ()' → logprob: -13.251145362854004

Token 364: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4172011911869049
    2. 'for' → logprob: -1.6672011613845825
    3. ' for' → logprob: -2.417201280593872
    4. '    
' → logprob: -3.417201280593872
    5. '
' → logprob: -5.042201042175293
    6. '	
' → logprob: -5.042201042175293
    7. '	for' → logprob: -5.542201042175293
    8. ' 
' → logprob: -5.667201042175293
    9. '  
' → logprob: -5.917201042175293
    10. 'line' → logprob: -7.292201042175293

Token 365: ' stuck' (ID: 24327)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.35984328389167786
    2. ' for' → logprob: -1.6098432540893555
    3. '   ' → logprob: -2.4848432540893555
    4. 'result' → logprob: -5.3598432540893555
    5. 'results' → logprob: -6.1098432540893555
    6. 'res' → logprob: -6.3598432540893555
    7. 'output' → logprob: -6.8598432540893555
    8. 'next' → logprob: -6.8598432540893555
    9. 'total' → logprob: -6.9848432540893555
    10. 'current' → logprob: -6.9848432540893555

Token 366: '_order' (ID: 17446)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6476590037345886
    2. '=' → logprob: -1.5226590633392334
    3. '_' → logprob: -1.7726590633392334
    4. '_points' → logprob: -3.2726590633392334
    5. 'ed' → logprob: -4.147658824920654
    6. '[' → logprob: -5.147658824920654
    7. '_nodes' → logprob: -6.022658824920654
    8. '_order' → logprob: -6.397658824920654
    9. ',' → logprob: -6.397658824920654
    10. '.' → logprob: -6.647658824920654

Token 367: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9392160177230835
    2. '.add' → logprob: -1.1892160177230835
    3. '=' → logprob: -1.5642160177230835
    4. '.' → logprob: -2.439216136932373
    5. '[' → logprob: -5.564216136932373
    6. '.update' → logprob: -6.689216136932373
    7. '.setdefault' → logprob: -7.064216136932373
    8. '   ' → logprob: -8.064215660095215
    9. ' |=' → logprob: -8.314215660095215
    10. 'add' → logprob: -8.439215660095215

Token 368: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.6363450288772583
    2. ' set' → logprob: -0.7613450288772583
    3. '[]' → logprob: -6.386344909667969
    4. ' []' → logprob: -6.761344909667969
    5. 'deque' → logprob: -7.886344909667969
    6. '{}' → logprob: -8.261344909667969
    7. '0' → logprob: -9.511344909667969
    8. ' deque' → logprob: -9.761344909667969
    9. ' ' → logprob: -10.261344909667969
    10. ' {}' → logprob: -11.011344909667969

Token 369: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0019562290981411934
    2. '()
' → logprob: -6.251956462860107
    3. '()\' → logprob: -11.00195598602295
    4. '()

' → logprob: -12.25195598602295
    5. '()
' → logprob: -12.75195598602295
    6. '(' → logprob: -13.00195598602295
    7. ' ()' → logprob: -15.62695598602295
    8. '();' → logprob: -15.87695598602295
    9. '())' → logprob: -16.001956939697266
    10. '()]' → logprob: -16.001956939697266

Token 370: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3326573073863983
    2. '
' → logprob: -2.2076573371887207
    3. ' for' → logprob: -2.4576573371887207
    4. 'for' → logprob: -2.5826573371887207
    5. '    
' → logprob: -5.457657337188721
    6. '	for' → logprob: -6.082657337188721
    7. '	
' → logprob: -6.957657337188721
    8. '<|end|>' → logprob: -7.332657337188721
    9. 'while' → logprob: -7.457657337188721
    10. ' 
' → logprob: -7.457657337188721

Token 371: ' command' (ID: 6348)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.339254766702652
    2. ' for' → logprob: -1.4642547369003296
    3. '   ' → logprob: -2.964254856109619
    4. '	for' → logprob: -7.214254856109619
    5. 'result' → logprob: -7.214254856109619
    6. 'while' → logprob: -7.464254856109619
    7. 'i' → logprob: -8.089254379272461
    8. 'current' → logprob: -8.464254379272461
    9. ' while' → logprob: -8.839254379272461
    10. ' result' → logprob: -8.964254379272461

Token 372: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.18221475183963776
    2. ' =' → logprob: -1.8072147369384766
    3. '=' → logprob: -6.557214736938477
    4. '_list' → logprob: -7.557214736938477
    5. '_' → logprob: -8.807214736938477
    6. '_queue' → logprob: -9.057214736938477
    7. '_line' → logprob: -9.557214736938477
    8. ' ' → logprob: -10.307214736938477
    9. '_s' → logprob: -10.432214736938477
    10. ',' → logprob: -10.682214736938477

Token 373: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.003763382090255618
    2. ' []' → logprob: -5.753763198852539
    3. 'deque' → logprob: -7.753763198852539
    4. '""' → logprob: -9.503763198852539
    5. '[]
' → logprob: -10.378763198852539
    6. '''' → logprob: -11.253763198852539
    7. '[' → logprob: -11.253763198852539
    8. '{}' → logprob: -11.378763198852539
    9. 'list' → logprob: -13.003763198852539
    10. ' deque' → logprob: -13.253763198852539

Token 374: 'None' (ID: 8505)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11277374625205994
    2. 'None' → logprob: -3.3627736568450928
    3. '0' → logprob: -3.9877736568450928
    4. '[]' → logprob: -4.237773895263672
    5. '"' → logprob: -4.612773895263672
    6. '""' → logprob: -4.737773895263672
    7. '()]' → logprob: -4.737773895263672
    8. ''' → logprob: -5.737773895263672
    9. '''' → logprob: -6.237773895263672
    10. ']()' → logprob: -6.987773895263672

Token 375: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0018241697689518332
    2. ' for' → logprob: -7.001824378967285
    3. ']*' → logprob: -7.126824378967285
    4. 'for' → logprob: -10.001824378967285
    5. ']*(' → logprob: -10.876824378967285
    6. ' ]' → logprob: -10.876824378967285
    7. ',' → logprob: -11.376824378967285
    8. '()]' → logprob: -11.626824378967285
    9. '()' → logprob: -13.501824378967285
    10. ')' → logprob: -13.626824378967285

Token 376: ' *' (ID: 425)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04045737162232399
    2. ']' → logprob: -4.290457248687744
    3. '()]' → logprob: -4.540457248687744
    4. ',' → logprob: -4.790457248687744
    5. '(' → logprob: -5.540457248687744
    6. 'for' → logprob: -7.415457248687744
    7. '[]' → logprob: -7.540457248687744
    8. ' for' → logprob: -8.040457725524902
    9. '()
' → logprob: -8.165457725524902
    10. '   ' → logprob: -8.415457725524902

Token 377: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.06853441894054413
    2. '(T' → logprob: -2.9435343742370605
    3. '(' → logprob: -5.0685343742370605
    4. '100' → logprob: -5.3185343742370605
    5. '101' → logprob: -7.6935343742370605
    6. '200' → logprob: -7.9435343742370605
    7. '10' → logprob: -8.193534851074219
    8. '300' → logprob: -8.818534851074219
    9. '20' → logprob: -9.068534851074219
    10. '500' → logprob: -9.318534851074219

Token 378: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3452591300010681
    2. '   ' → logprob: -1.595259189605713
    3. '<|end|>' → logprob: -3.220259189605713
    4. '    
' → logprob: -4.345259189605713
    5. '[' → logprob: -4.970259189605713
    6. ' 
' → logprob: -5.095259189605713
    7. '  
' → logprob: -5.095259189605713
    8. ' ' → logprob: -5.970259189605713
    9. ',' → logprob: -6.095259189605713
    10. '\' → logprob: -6.345259189605713

Token 379: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5273163914680481
    2. ' for' → logprob: -1.6523163318634033
    3. 'for' → logprob: -2.6523163318634033
    4. '
' → logprob: -2.9023163318634033
    5. ' 
' → logprob: -3.6523163318634033
    6. '    
' → logprob: -3.7773163318634033
    7. 'def' → logprob: -4.652316570281982
    8. '<|end|>' → logprob: -5.527316570281982
    9. '  
' → logprob: -5.777316570281982
    10. '[' → logprob: -5.902316570281982

Token 380: ' heading' (ID: 23808)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6246712803840637
    2. 'for' → logprob: -0.9996712803840637
    3. '   ' → logprob: -2.999671220779419
    4. 'i' → logprob: -3.999671220779419
    5. ' i' → logprob: -4.749671459197998
    6. 'idx' → logprob: -6.124671459197998
    7. 'current' → logprob: -6.124671459197998
    8. ' current' → logprob: -6.749671459197998
    9. 'd' → logprob: -6.999671459197998
    10. ' idx' → logprob: -6.999671459197998

Token 381: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.022227922454476357
    2. '=' → logprob: -4.522227764129639
    3. 's' → logprob: -4.647227764129639
    4. '_' → logprob: -8.147228240966797
    5. ',' → logprob: -8.397228240966797
    6. ' ' → logprob: -8.772228240966797
    7. '_pos' → logprob: -9.022228240966797
    8. '_time' → logprob: -9.147228240966797
    9. '_direction' → logprob: -9.522228240966797
    10. '_idx' → logprob: -9.772228240966797

Token 382: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07594294100999832
    2. '-' → logprob: -3.5759429931640625
    3. '[' → logprob: -3.7009429931640625
    4. 'None' → logprob: -4.9509429931640625
    5. '{}' → logprob: -5.3259429931640625
    6. '[]' → logprob: -5.7009429931640625
    7. ' ' → logprob: -6.3259429931640625
    8. '[-' → logprob: -6.9509429931640625
    9. ' -' → logprob: -7.7009429931640625
    10. ' [' → logprob: -7.8259429931640625

Token 383: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.29755619168281555
    2. '[' → logprob: -1.6725561618804932
    3. 'None' → logprob: -3.672556161880493
    4. '-' → logprob: -3.922556161880493
    5. '{}' → logprob: -4.422556400299072
    6. '[-' → logprob: -5.297556400299072
    7. '[]' → logprob: -5.547556400299072
    8. '1' → logprob: -6.797556400299072
    9. '{' → logprob: -7.797556400299072
    10. '[int' → logprob: -8.047555923461914

Token 384: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 385: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 386: ' dist' (ID: 3601)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8804606795310974
    2. ' for' → logprob: -1.1304607391357422
    3. 'pos' → logprob: -2.755460739135742
    4. '   ' → logprob: -3.755460739135742
    5. 'current' → logprob: -4.005460739135742
    6. 'i' → logprob: -4.380460739135742
    7. 'car' → logprob: -4.505460739135742
    8. ' pos' → logprob: -4.630460739135742
    9. 'cost' → logprob: -4.630460739135742
    10. 'idx' → logprob: -4.755460739135742

Token 387: '_left' (ID: 22189)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048923324793577194
    2. '=' → logprob: -3.1739232540130615
    3. ',' → logprob: -5.298923492431641
    4. 's' → logprob: -7.173923492431641
    5. '[' → logprob: -9.54892349243164
    6. '   ' → logprob: -10.67392349243164
    7. '[]' → logprob: -11.67392349243164
    8. ' ' → logprob: -12.54892349243164
    9. 'ance' → logprob: -12.67392349243164
    10. '  ' → logprob: -12.67392349243164

Token 388: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1624106466770172
    2. '=' → logprob: -1.9124106168746948
    3. ',' → logprob: -6.162410736083984
    4. '  ' → logprob: -11.162410736083984
    5. '[' → logprob: -11.287410736083984
    6. ' ' → logprob: -11.412410736083984
    7. '   ' → logprob: -11.412410736083984
    8. 's' → logprob: -12.162410736083984
    9. ' ,' → logprob: -12.162410736083984
    10. '_' → logprob: -12.537410736083984

Token 389: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031791406217962503
    2. 'inf' → logprob: -6.75317907333374
    3. ' ' → logprob: -6.87817907333374
    4. '-' → logprob: -7.12817907333374
    5. 'wf' → logprob: -10.253179550170898
    6. 'None' → logprob: -10.253179550170898
    7. ' -' → logprob: -10.753179550170898
    8. '[' → logprob: -10.753179550170898
    9. '100' → logprob: -11.753179550170898
    10. 'sys' → logprob: -11.940679550170898

Token 390: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003550416324287653
    2. 'inf' → logprob: -6.1285505294799805
    3. '-' → logprob: -6.7535505294799805
    4. '[' → logprob: -10.00355052947998
    5. 'None' → logprob: -10.00355052947998
    6. 'wf' → logprob: -10.75355052947998
    7. '[]' → logprob: -10.87855052947998
    8. ' ' → logprob: -11.00355052947998
    9. '100' → logprob: -11.37855052947998
    10. '999' → logprob: -11.87855052947998

Token 391: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 392: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5121601223945618
    2. '<|end|>' → logprob: -1.012160062789917
    3. ' 
' → logprob: -4.512160301208496
    4. '\n' → logprob: -4.512160301208496
    5. '    
' → logprob: -5.512160301208496
    6. ' ' → logprob: -5.762160301208496
    7. '
' → logprob: -6.512160301208496
    8. '\' → logprob: -6.512160301208496
    9. '<|end|>' → logprob: -6.637160301208496
    10. ')' → logprob: -7.387160301208496

Token 393: ' final' (ID: 1721)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17876368761062622
    2. ' for' → logprob: -2.1787636280059814
    3. '   ' → logprob: -3.8037636280059814
    4. 'i' → logprob: -4.6787638664245605
    5. 'pos' → logprob: -5.0537638664245605
    6. 'current' → logprob: -5.6787638664245605
    7. 'idx' → logprob: -6.4287638664245605
    8. 'cur' → logprob: -6.9287638664245605
    9. 'time' → logprob: -7.0537638664245605
    10. 'car' → logprob: -7.3037638664245605

Token 394: '_dist' (ID: 37968)
  Prédit: '_destination'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_destination' → logprob: -1.153961420059204
    2. '_' → logprob: -1.278961420059204
    3. '_dst' → logprob: -1.778961420059204
    4. '_dest' → logprob: -2.278961420059204
    5. '_pos' → logprob: -3.028961420059204
    6. '_order' → logprob: -3.528961420059204
    7. ' =' → logprob: -3.653961420059204
    8. '_point' → logprob: -5.153961181640625
    9. '=' → logprob: -5.278961181640625
    10. '_target' → logprob: -6.153961181640625

Token 395: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2812817394733429
    2. '=' → logprob: -1.4062817096710205
    3. '_' → logprob: -10.156281471252441
    4. 's' → logprob: -10.531281471252441
    5. ',' → logprob: -10.531281471252441
    6. '   ' → logprob: -11.406281471252441
    7. '_left' → logprob: -11.406281471252441
    8. ' ' → logprob: -11.906281471252441
    9. '[' → logprob: -12.281281471252441
    10. ')' → logprob: -14.281281471252441

Token 396: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.024376364424824715
    2. ' ' → logprob: -3.899376392364502
    3. 'inf' → logprob: -5.774376392364502
    4. '-' → logprob: -8.399375915527344
    5. ' inf' → logprob: -8.399375915527344
    6. ' -' → logprob: -9.524375915527344
    7. 'None' → logprob: -10.274375915527344
    8. 'wf' → logprob: -10.899375915527344
    9. ' None' → logprob: -10.961875915527344
    10. 'sys' → logprob: -11.274375915527344

Token 397: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0026647194754332304
    2. 'inf' → logprob: -6.752664566040039
    3. '-' → logprob: -6.877664566040039
    4. 'None' → logprob: -9.127664566040039
    5. ' ' → logprob: -9.502664566040039
    6. '[]' → logprob: -9.877664566040039
    7. 'wf' → logprob: -10.127664566040039
    8. '[' → logprob: -10.252664566040039
    9. '100' → logprob: -10.377664566040039
    10. '{}' → logprob: -10.627664566040039

Token 398: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18677574396133423
    2. '<|end|>' → logprob: -1.9367756843566895
    3. '
' → logprob: -4.8117756843566895
    4. ' for' → logprob: -5.3117756843566895
    5. 'for' → logprob: -5.4367756843566895
    6. '    
' → logprob: -6.0617756843566895
    7. ',' → logprob: -6.0617756843566895
    8. '<|end|>' → logprob: -6.8117756843566895
    9. '  ' → logprob: -7.5617756843566895
    10. '	for' → logprob: -7.8117756843566895

Token 399: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3826450705528259
    2. '<|end|>' → logprob: -1.8826451301574707
    3. '   ' → logprob: -2.0076451301574707
    4. 'for' → logprob: -4.882645130157471
    5. '    
' → logprob: -5.132645130157471
    6. ' for' → logprob: -5.507645130157471
    7. ' 
' → logprob: -5.757645130157471
    8. '  
' → logprob: -6.257645130157471
    9. '<|end|>' → logprob: -6.632645130157471
    10. '\n' → logprob: -6.757645130157471

Token 400: ' stuck' (ID: 24327)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.059316832572221756
    2. '   ' → logprob: -3.809316873550415
    3. ' for' → logprob: -4.059316635131836
    4. 'current' → logprob: -5.434316635131836
    5. 'i' → logprob: -5.684316635131836
    6. 'while' → logprob: -5.934316635131836
    7. 'cur' → logprob: -6.309316635131836
    8. 'pos' → logprob: -7.059316635131836
    9. 'idx' → logprob: -7.059316635131836
    10. 'car' → logprob: -7.184316635131836

Token 401: '_cost' (ID: 36820)
  Prédit: '_order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_order' → logprob: -0.00773710897192359
    2. '_count' → logprob: -5.382737159729004
    3. '_flag' → logprob: -7.632737159729004
    4. ' =' → logprob: -7.632737159729004
    5. '_command' → logprob: -8.007737159729004
    6. '_index' → logprob: -8.382737159729004
    7. '_orders' → logprob: -8.382737159729004
    8. '_idx' → logprob: -8.632737159729004
    9. '_status' → logprob: -8.757737159729004
    10. '_counter' → logprob: -8.882737159729004

Token 402: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.043040525168180466
    2. '=' → logprob: -3.1680405139923096
    3. ',' → logprob: -10.29304027557373
    4. '[' → logprob: -12.91804027557373
    5. ' ' → logprob: -13.04304027557373
    6. 's' → logprob: -13.66804027557373
    7. '   ' → logprob: -14.41804027557373
    8. '  ' → logprob: -15.66804027557373
    9. ' ,' → logprob: -15.91804027557373
    10. '=[]' → logprob: -16.043041229248047

Token 403: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11995445936918259
    2. '{}' → logprob: -2.8699543476104736
    3. 'inf' → logprob: -4.119954586029053
    4. '100' → logprob: -4.369954586029053
    5. '[' → logprob: -4.494954586029053
    6. ' ' → logprob: -4.744954586029053
    7. '{' → logprob: -6.244954586029053
    8. 'dict' → logprob: -6.494954586029053
    9. '999' → logprob: -6.619954586029053
    10. ' [' → logprob: -7.494954586029053

Token 404: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3628416657447815
    2. 'inf' → logprob: -1.2378416061401367
    3. '-' → logprob: -5.112841606140137
    4. '[' → logprob: -6.237841606140137
    5. '100' → logprob: -6.612841606140137
    6. 'None' → logprob: -6.612841606140137
    7. 'float' → logprob: -6.862841606140137
    8. '-inf' → logprob: -7.612841606140137
    9. 'False' → logprob: -7.987841606140137
    10. '[]' → logprob: -7.987841606140137

Token 405: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00047702479059807956
    2. ' ]' → logprob: -8.250476837158203
    3. ']*' → logprob: -8.750476837158203
    4. ' for' → logprob: -10.375476837158203
    5. ',' → logprob: -10.625476837158203
    6. 'for' → logprob: -14.375476837158203
    7. ']*(' → logprob: -14.375476837158203
    8. '*' → logprob: -16.125476837158203
    9. ' ' → logprob: -16.250476837158203
    10. '   ' → logprob: -16.250476837158203

Token 406: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0022768157068639994
    2. ' range' → logprob: -6.37727689743042
    3. 'range' → logprob: -7.62727689743042
    4. '_range' → logprob: -9.627276420593262
    5. ' _' → logprob: -11.002276420593262
    6. 'in' → logprob: -13.377276420593262
    7. ' in' → logprob: -13.627276420593262
    8. 'i' → logprob: -13.877276420593262
    9. '_in' → logprob: -14.377276420593262
    10. '_i' → logprob: -15.377276420593262

Token 407: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.08691531419754028
    2. ' range' → logprob: -3.0869152545928955
    3. 'in' → logprob: -3.3369152545928955
    4. ' in' → logprob: -6.211915493011475
    5. '_' → logprob: -9.961915016174316
    6. ' ' → logprob: -13.461915016174316
    7. ' _' → logprob: -14.086915016174316
    8. 'i' → logprob: -14.711915016174316
    9. '	range' → logprob: -14.836915016174316
    10. '_range' → logprob: -15.086915016174316

Token 408: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.016086691990494728
    2. ' range' → logprob: -4.141086578369141
    3. 'command' → logprob: -10.01608657836914
    4. 'order' → logprob: -12.64108657836914
    5. 'st' → logprob: -13.51608657836914
    6. ' command' → logprob: -14.39108657836914
    7. ' ' → logprob: -14.51608657836914
    8. '_' → logprob: -15.14108657836914
    9. 'r' → logprob: -15.14108657836914
    10. '   ' → logprob: -15.26608657836914

Token 409: '(V' (ID: 16949)
  Prédit: '(T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -0.04769373685121536
    2. 'T' → logprob: -3.2976937294006348
    3. '(' → logprob: -4.672693729400635
    4. '(V' → logprob: -9.297694206237793
    5. 'V' → logprob: -10.297694206237793
    6. '100' → logprob: -10.297694206237793
    7. ' (' → logprob: -11.047694206237793
    8. 'range' → logprob: -11.047694206237793
    9. '10' → logprob: -11.672694206237793
    10. ' T' → logprob: -11.797694206237793

Token 410: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.048876095563173294
    2. ']' → logprob: -3.0488760471343994
    3. ')' → logprob: -8.42387580871582
    4. '])' → logprob: -10.54887580871582
    5. '])]' → logprob: -10.54887580871582
    6. ' ]' → logprob: -12.29887580871582
    7. ')])' → logprob: -12.67387580871582
    8. ']
' → logprob: -13.29887580871582
    9. '}]' → logprob: -13.54887580871582
    10. ')]
' → logprob: -13.54887580871582

Token 411: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11075817048549652
    2. '<|end|>' → logprob: -2.985758066177368
    3. '    
' → logprob: -4.110758304595947
    4. ' ' → logprob: -5.110758304595947
    5. ' for' → logprob: -5.235758304595947
    6. '\t' → logprob: -5.485758304595947
    7. '	for' → logprob: -5.610758304595947
    8. 'for' → logprob: -6.360758304595947
    9. ' 
' → logprob: -6.360758304595947
    10. '
' → logprob: -6.610758304595947

Token 412: ' cost' (ID: 3097)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1272260546684265
    2. ' for' → logprob: -2.5022261142730713
    3. '   ' → logprob: -3.6272261142730713
    4. 'i' → logprob: -5.752225875854492
    5. 'current' → logprob: -6.252225875854492
    6. 'idx' → logprob: -6.627225875854492
    7. 'prev' → logprob: -7.877225875854492
    8. '	for' → logprob: -8.127225875854492
    9. 'while' → logprob: -8.127225875854492
    10. 'cost' (adapté à ' cost') → logprob: -8.377225875854492

Token 413: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01606651395559311
    2. '=' → logprob: -4.141066551208496
    3. '[' → logprob: -10.766066551208496
    4. ',' → logprob: -12.516066551208496
    5. ' =[' → logprob: -13.391066551208496
    6. 's' → logprob: -13.891066551208496
    7. ' ' → logprob: -13.891066551208496
    8. '<|end|>' → logprob: -14.016066551208496
    9. '=[]' → logprob: -14.266066551208496
    10. '[:]' → logprob: -15.016066551208496

Token 414: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.6550729419104755e-05
    2. ' [' → logprob: -10.750036239624023
    3. '[-' → logprob: -11.750036239624023
    4. '{' → logprob: -12.875036239624023
    5. 'st' → logprob: -14.250036239624023
    6. '{}' → logprob: -14.625036239624023
    7. '[s' → logprob: -14.625036239624023
    8. '[]' → logprob: -15.000036239624023
    9. '[start' → logprob: -15.250036239624023
    10. '[v' → logprob: -15.375036239624023

Token 415: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001672802958637476
    2. 'inf' → logprob: -6.501672744750977
    3. ' ' → logprob: -9.376672744750977
    4. '-' → logprob: -10.376672744750977
    5. '[' → logprob: -11.001672744750977
    6. '100' → logprob: -11.876672744750977
    7. 'float' → logprob: -12.126672744750977
    8. '1' → logprob: -12.501672744750977
    9. ']' → logprob: -12.876672744750977
    10. 'for' → logprob: -13.064172744750977

Token 416: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5760424137115479
    2. 'for' → logprob: -0.8260424137115479
    3. ']' → logprob: -9.451042175292969
    4. '	for' → logprob: -11.076042175292969
    5. ' ' → logprob: -12.326042175292969
    6. ')' → logprob: -13.201042175292969
    7. '   ' → logprob: -14.076042175292969
    8. '```' → logprob: -14.451042175292969
    9. '[' → logprob: -15.576042175292969
    10. '.' → logprob: -16.07604217529297

Token 417: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0003297440707683563
    2. ' _' → logprob: -8.500329971313477
    3. ' in' → logprob: -9.375329971313477
    4. '_V' → logprob: -10.375329971313477
    5. 'in' → logprob: -12.500329971313477
    6. ' range' → logprob: -12.875329971313477
    7. '_range' → logprob: -13.000329971313477
    8. 'range' → logprob: -14.375329971313477
    9. '_T' → logprob: -14.750329971313477
    10. '(V' → logprob: -16.000329971313477

Token 418: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20278602838516235
    2. ' range' → logprob: -1.7027859687805176
    3. '_' → logprob: -6.952785968780518
    4. '_range' → logprob: -8.202786445617676
    5. ' in' → logprob: -9.577786445617676
    6. '(range' → logprob: -9.952786445617676
    7. 'in' → logprob: -11.077786445617676
    8. '	range' → logprob: -12.702786445617676
    9. ' _' → logprob: -12.827786445617676
    10. '_RANGE' → logprob: -13.827786445617676

Token 419: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.13159315288066864
    2. 'range' → logprob: -2.1315932273864746
    3. '_' → logprob: -5.381593227386475
    4. '_range' → logprob: -9.881592750549316
    5. '(range' → logprob: -13.256592750549316
    6. '_V' → logprob: -14.756592750549316
    7. ' _' → logprob: -16.006593704223633
    8. ' ' → logprob: -16.381593704223633
    9. ' in' → logprob: -16.381593704223633
    10. 'in' → logprob: -16.756593704223633

Token 420: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.0008980045095086098
    2. 'range' → logprob: -7.2508978843688965
    3. ' range' → logprob: -9.125898361206055
    4. '(T' → logprob: -9.875898361206055
    5. '(range' → logprob: -11.625898361206055
    6. 'V' → logprob: -12.375898361206055
    7. '(' → logprob: -12.500898361206055
    8. ' (' → logprob: -13.000898361206055
    9. '
' → logprob: -13.000898361206055
    10. '   ' → logprob: -13.125898361206055

Token 421: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0047743613831698895
    2. ')]' → logprob: -5.379774570465088
    3. ')' → logprob: -9.37977409362793
    4. ' ]' → logprob: -9.62977409362793
    5. '])' → logprob: -13.25477409362793
    6. ']
' → logprob: -13.87977409362793
    7. '   ' → logprob: -14.50477409362793
    8. '()]' → logprob: -15.00477409362793
    9. '])]' → logprob: -16.25477409362793
    10. '`]' → logprob: -16.87977409362793

Token 422: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.125931054353714
    2. 'for' → logprob: -2.5009310245513916
    3. ' for' → logprob: -3.3759310245513916
    4. '	for' → logprob: -7.375931262969971
    5. '    
' → logprob: -7.750931262969971
    6. 'current' → logprob: -7.875931262969971
    7. ',' → logprob: -9.000930786132812
    8. 'i' → logprob: -9.625930786132812
    9. 'next' → logprob: -10.125930786132812
    10. ' current' → logprob: -10.250930786132812

Token 423: ' driver' (ID: 8931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007237194571644068
    2. ' for' → logprob: -6.007236957550049
    3. '   ' → logprob: -6.257236957550049
    4. '	for' → logprob: -6.382236957550049
    5. 'i' → logprob: -7.382236957550049
    6. 'current' → logprob: -8.632237434387207
    7. 'while' → logprob: -9.257237434387207
    8. 'prev' → logprob: -10.132237434387207
    9. 'idx' → logprob: -10.132237434387207
    10. 'cur' → logprob: -10.507237434387207

Token 424: '_hold' (ID: 160928)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.32786357402801514
    2. '_pos' → logprob: -1.4528635740280151
    3. '_location' → logprob: -4.577863693237305
    4. '_position' → logprob: -4.702863693237305
    5. 's' → logprob: -5.077863693237305
    6. '_' → logprob: -5.577863693237305
    7. '_loc' → logprob: -5.702863693237305
    8. '_idx' → logprob: -5.702863693237305
    9. '=' → logprob: -5.952863693237305
    10. '_id' → logprob: -6.327863693237305

Token 425: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0430922508239746
    2. 'ing' → logprob: -1.2930922508239746
    3. 's' → logprob: -1.4180922508239746
    4. '=' → logprob: -2.7930922508239746
    5. 'ed' → logprob: -3.6680922508239746
    6. '_' → logprob: -4.168092250823975
    7. 'er' → logprob: -4.418092250823975
    8. '[' → logprob: -4.918092250823975
    9. 'out' → logprob: -7.168092250823975
    10. '_cost' → logprob: -7.168092250823975

Token 426: ' ' (ID: 220)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.8402891755104065
    2. '-' → logprob: -1.9652891159057617
    3. '0' → logprob: -1.9652891159057617
    4. '[' → logprob: -2.0902891159057617
    5. 'None' → logprob: -2.3402891159057617
    6. 'set' → logprob: -3.8402891159057617
    7. '[]' → logprob: -3.9652891159057617
    8. '{}' → logprob: -5.215289115905762
    9. 'deque' → logprob: -5.465289115905762
    10. ' [' → logprob: -5.715289115905762

Token 427: '0' (ID: 15)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.2663332521915436
    2. '[' → logprob: -2.2663333415985107
    3. '-' → logprob: -3.0163333415985107
    4. 'None' → logprob: -3.3913333415985107
    5. '0' → logprob: -3.5163333415985107
    6. '[]' → logprob: -5.016333103179932
    7. 'set' → logprob: -5.141333103179932
    8. 'True' → logprob: -6.141333103179932
    9. '{}' → logprob: -7.016333103179932
    10. '[-' → logprob: -7.391333103179932

Token 428: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 429: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21337272226810455
    2. '<|end|>' → logprob: -1.8383727073669434
    3. ' ' → logprob: -4.338372707366943
    4. ' 
' → logprob: -5.713372707366943
    5. '    
' → logprob: -5.963372707366943
    6. '    ' → logprob: -6.213372707366943
    7. '[' → logprob: -6.463372707366943
    8. ')' → logprob: -6.463372707366943
    9. '  ' → logprob: -6.588372707366943
    10. ' for' → logprob: -6.963372707366943

Token 430: ' store' (ID: 4897)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4304164946079254
    2. ' for' → logprob: -1.305416464805603
    3. '   ' → logprob: -3.1804165840148926
    4. 'i' → logprob: -3.9304165840148926
    5. ' i' → logprob: -5.805416584014893
    6. 't' → logprob: -6.305416584014893
    7. '\t' → logprob: -6.680416584014893
    8. 'current' → logprob: -6.930416584014893
    9. 'idx' → logprob: -6.930416584014893
    10. 'next' → logprob: -7.055416584014893

Token 431: '_hold' (ID: 160928)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5101194977760315
    2. 'd' → logprob: -1.6351194381713867
    3. '=' → logprob: -2.2601194381713867
    4. '_' → logprob: -3.1351194381713867
    5. '_id' → logprob: -4.635119438171387
    6. '_location' → logprob: -5.010119438171387
    7. '_count' → logprob: -5.135119438171387
    8. 't' → logprob: -5.635119438171387
    9. '_d' → logprob: -5.635119438171387
    10. '_hold' → logprob: -6.135119438171387

Token 432: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931560039520264
    2. ' =' → logprob: -0.6931560039520264
    3. '[' → logprob: -12.193156242370605
    4. '0' → logprob: -14.193156242370605
    5. ' ' → logprob: -14.568156242370605
    6. ',' → logprob: -14.568156242370605
    7. '   ' → logprob: -14.693156242370605
    8. '<|end|>' → logprob: -14.818156242370605
    9. 's' → logprob: -15.318156242370605
    10. '=False' → logprob: -15.693156242370605

Token 433: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.056224897503852844
    2. ' ' → logprob: -2.931224822998047
    3. '[' → logprob: -7.556224822998047
    4. '[]' → logprob: -8.556224822998047
    5. 'False' → logprob: -8.556224822998047
    6. ' [' → logprob: -9.056224822998047
    7. '{}' → logprob: -9.681224822998047
    8. 'deque' → logprob: -10.431224822998047
    9. ' []' → logprob: -10.681224822998047
    10. '{' → logprob: -10.806224822998047

Token 434: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0069141685962677
    2. 'deque' → logprob: -6.381914138793945
    3. '[]' → logprob: -6.506914138793945
    4. '{}' → logprob: -6.506914138793945
    5. '[' → logprob: -7.006914138793945
    6. 'False' → logprob: -7.506914138793945
    7. 'set' → logprob: -8.006914138793945
    8. '-' → logprob: -9.256914138793945
    9. ' ' → logprob: -9.756914138793945
    10. '{' → logprob: -10.006914138793945

Token 435: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 436: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5755726099014282
    2. 'for' → logprob: -1.0755726099014282
    3. ' for' → logprob: -2.9505724906921387
    4. 'while' → logprob: -4.700572490692139
    5. '<|end|>' → logprob: -4.825572490692139
    6. '	for' → logprob: -4.950572490692139
    7. '
' → logprob: -5.575572490692139
    8. '    
' → logprob: -5.700572490692139
    9. ' while' → logprob: -6.325572490692139
    10. '	while' → logprob: -6.825572490692139

Token 437: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0012736850185319781
    2. ' for' → logprob: -6.7512736320495605
    3. '   ' → logprob: -9.751274108886719
    4. 'while' → logprob: -11.001274108886719
    5. 'i' → logprob: -11.626274108886719
    6. '	for' → logprob: -12.251274108886719
    7. 'next' → logprob: -13.001274108886719
    8. 'current' → logprob: -13.001274108886719
    9. 'prev' → logprob: -13.001274108886719
    10. 'idx' → logprob: -13.376274108886719

Token 438: ' t' (ID: 260)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.48589345812797546
    2. ' t' → logprob: -1.1108934879302979
    3. ' i' → logprob: -2.985893487930298
    4. '_' → logprob: -5.860893249511719
    5. ' ' → logprob: -6.485893249511719
    6. 't' → logprob: -7.860893249511719
    7. 'i' → logprob: -9.110893249511719
    8. ' time' → logprob: -9.485893249511719
    9. '   ' → logprob: -10.360893249511719
    10. ' step' → logprob: -11.110893249511719

Token 439: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.038117337971925735
    2. 'in' → logprob: -3.2881174087524414
    3. ',' → logprob: -10.288117408752441
    4. ' ' → logprob: -10.538117408752441
    5. '_' → logprob: -12.038117408752441
    6. 's' → logprob: -13.288117408752441
    7. '	in' → logprob: -13.663117408752441
    8. ' ,' → logprob: -13.913117408752441
    9. '0' → logprob: -14.163117408752441
    10. '   ' → logprob: -14.413117408752441

Token 440: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06197318062186241
    2. ' range' → logprob: -2.8119730949401855
    3. 'in' → logprob: -13.561973571777344
    4. '_' → logprob: -14.436973571777344
    5. ' ' → logprob: -14.436973571777344
    6. '	range' → logprob: -14.811973571777344
    7. '[' → logprob: -15.061973571777344
    8. '   ' → logprob: -15.186973571777344
    9. '(range' → logprob: -15.186973571777344
    10. '0' → logprob: -15.311973571777344

Token 441: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -0.025517374277114868
    2. '(' → logprob: -4.025517463684082
    3. ' (' → logprob: -5.025517463684082
    4. ' T' → logprob: -7.275517463684082
    5. 'T' → logprob: -9.525517463684082
    6. '(
' → logprob: -12.900517463684082
    7. '(t' → logprob: -13.150517463684082
    8. '(range' → logprob: -14.150517463684082
    9. ' range' → logprob: -14.650517463684082
    10. ',' → logprob: -14.775517463684082

Token 442: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005713223479688168
    2. '):
' → logprob: -5.255712985992432
    3. '+' → logprob: -8.38071346282959
    4. ':' → logprob: -8.63071346282959
    5. ',' → logprob: -10.50571346282959
    6. '   ' → logprob: -10.75571346282959
    7. ' ):' → logprob: -11.38071346282959
    8. ')' → logprob: -12.63071346282959
    9. '):
' → logprob: -12.63071346282959
    10. ' +' → logprob: -13.25571346282959

Token 443: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022753889206796885
    2. '   ' → logprob: -6.502275466918945
    3. '        
' → logprob: -8.752275466918945
    4. '    ' → logprob: -9.127275466918945
    5. '```' → logprob: -9.127275466918945
    6. ',' → logprob: -9.377275466918945
    7. '	' → logprob: -10.252275466918945
    8. 'input' → logprob: -10.377275466918945
    9. '     ' → logprob: -10.752275466918945
    10. '	   ' → logprob: -10.752275466918945

Token 444: ' N' (ID: 478)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -1.016493320465088
    2. 'cmd' → logprob: -1.641493320465088
    3. '       ' → logprob: -1.766493320465088
    4. 's' → logprob: -2.141493320465088
    5. 'data' → logprob: -2.766493320465088
    6. ' line' → logprob: -3.391493320465088
    7. 'parts' → logprob: -4.266493320465088
    8. 'command' → logprob: -5.516493320465088
    9. 'q' → logprob: -5.641493320465088
    10. 'a' → logprob: -5.891493320465088

Token 445: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3950978219509125
    2. ',' → logprob: -1.6450978517532349
    3. '=' → logprob: -2.0200977325439453
    4. '   ' → logprob: -7.895097732543945
    5. '=int' → logprob: -8.770097732543945
    6. ' ,' → logprob: -9.520097732543945
    7. ')' → logprob: -10.270097732543945
    8. '=input' → logprob: -10.645097732543945
    9. ' ' → logprob: -10.770097732543945
    10. '  ' → logprob: -11.770097732543945

Token 446: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.22544145584106445
    2. ' int' → logprob: -1.6004414558410645
    3. ' ' → logprob: -11.350440979003906
    4. '  ' → logprob: -11.725440979003906
    5. '   ' → logprob: -12.850440979003906
    6. '	int' → logprob: -13.100440979003906
    7. ' t' → logprob: -14.100440979003906
    8. '0' → logprob: -14.225440979003906
    9. '(int' → logprob: -14.475440979003906
    10. '[int' → logprob: -14.600440979003906

Token 447: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -7.941850526549388e-06
    2. 'input' → logprob: -12.375007629394531
    3. '(' → logprob: -12.625007629394531
    4. '(sys' → logprob: -15.500007629394531
    5. ' (' → logprob: -17.37500762939453
    6. '()' → logprob: -17.50000762939453
    7. ' input' → logprob: -18.75000762939453
    8. '=input' → logprob: -19.37500762939453
    9. '(
' → logprob: -19.75000762939453
    10. ',input' → logprob: -19.75000762939453

Token 448: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0172091256827116
    2. '()' → logprob: -4.267209053039551
    3. ')' → logprob: -6.392209053039551
    4. '())
' → logprob: -6.642209053039551
    5. ' ())' → logprob: -10.39220905303955
    6. '(' → logprob: -11.26720905303955
    7. '()
' → logprob: -11.26720905303955
    8. '();)' → logprob: -13.01720905303955
    9. '())
' → logprob: -13.89220905303955
    10. '().' → logprob: -14.01720905303955

Token 449: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 450: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47032395005226135
    2. ' for' → logprob: -1.845323920249939
    3. '       ' → logprob: -3.4703240394592285
    4. 'orders' → logprob: -3.7203240394592285
    5. 'order' → logprob: -3.8453240394592285
    6. 'items' → logprob: -4.3453240394592285
    7. 'current' → logprob: -4.4703240394592285
    8. 'if' (adapté à ' if') → logprob: -4.7203240394592285
    9. 'arr' → logprob: -4.8453240394592285
    10. ' if' → logprob: -5.0953240394592285

Token 451: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.1607917845249176
    2. 'N' → logprob: -2.0357918739318848
    3. ' t' → logprob: -4.785791873931885
    4. 't' → logprob: -6.160791873931885
    5. ' driver' → logprob: -6.160791873931885
    6. ' store' → logprob: -6.410791873931885
    7. ' ' → logprob: -7.285791873931885
    8. ' not' → logprob: -7.285791873931885
    9. ' command' → logprob: -7.535791873931885
    10. 'driver' → logprob: -7.785791873931885

Token 452: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.566929817199707
    2. ' ==' → logprob: -0.941929817199707
    3. '>' → logprob: -3.566929817199707
    4. '==' → logprob: -4.316929817199707
    5. ':' → logprob: -7.441929817199707
    6. ' <' → logprob: -7.941929817199707
    7. ' ' → logprob: -9.316929817199707
    8. ' !=' → logprob: -9.566929817199707
    9. ' ' → logprob: -10.066929817199707
    10. '=' → logprob: -10.191929817199707

Token 453: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12175220996141434
    2. ' ' → logprob: -2.2467522621154785
    3. '1' → logprob: -4.7467522621154785
    4. '2' → logprob: -9.24675178527832
    5. ' -' → logprob: -10.49675178527832
    6. '3' → logprob: -10.87175178527832
    7. '   ' → logprob: -11.05925178527832
    8. '-' → logprob: -11.12175178527832
    9. '4' → logprob: -12.05925178527832
    10. '100' → logprob: -12.24675178527832

Token 454: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001550332992337644
    2. ' ' → logprob: -7.001550197601318
    3. '1' → logprob: -7.501550197601318
    4. '-' → logprob: -9.626550674438477
    5. '2' → logprob: -12.814050674438477
    6. ' -' → logprob: -12.876550674438477
    7. '100' → logprob: -13.126550674438477
    8. '   ' → logprob: -13.501550674438477
    9. '  ' → logprob: -13.564050674438477
    10. '```' → logprob: -13.689050674438477

Token 455: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11303354799747467
    2. ':
' → logprob: -2.2380335330963135
    3. '<|end|>' → logprob: -9.863033294677734
    4. ',' → logprob: -10.363033294677734
    5. ' and' → logprob: -10.488033294677734
    6. '       ' → logprob: -10.988033294677734
    7. '           ' → logprob: -11.238033294677734
    8. ' :
' → logprob: -11.488033294677734
    9. ' :' → logprob: -11.488033294677734
    10. '[' → logprob: -11.738033294677734

Token 456: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11289982497692108
    2. ':' → logprob: -3.2378997802734375
    3. '<|end|>' → logprob: -3.7378997802734375
    4. '	       ' → logprob: -4.1128997802734375
    5. '       ' → logprob: -4.8628997802734375
    6. ':
' → logprob: -5.6128997802734375
    7. ',' → logprob: -5.8628997802734375
    8. '<|end|>' → logprob: -5.9878997802734375
    9. '		' → logprob: -6.4878997802734375
    10. '               ' → logprob: -6.7378997802734375

Token 457: ' new' (ID: 620)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.192691683769226
    2. ' x' → logprob: -1.567691683769226
    3. 'x' → logprob: -2.5676918029785156
    4. ' order' → logprob: -2.6926918029785156
    5. ' line' → logprob: -3.0676918029785156
    6. 'order' → logprob: -3.0676918029785156
    7. ' n' → logprob: -3.5676918029785156
    8. ' data' → logprob: -4.192691802978516
    9. 'n' → logprob: -4.567691802978516
    10. 'data' → logprob: -4.817691802978516

Token 458: '_id' (ID: 1537)
  Prédit: '_order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_order' → logprob: -1.0025380849838257
    2. '_cost' → logprob: -2.3775382041931152
    3. '_dest' → logprob: -2.6275382041931152
    4. '_dst' → logprob: -2.7525382041931152
    5. ' =' → logprob: -2.8775382041931152
    6. '_command' → logprob: -3.6275382041931152
    7. '_customer' → logprob: -3.6275382041931152
    8. '_store' → logprob: -3.6275382041931152
    9. '_destination' → logprob: -3.6275382041931152
    10. '_pos' → logprob: -3.7525382041931152

Token 459: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05640259012579918
    2. '=' → logprob: -2.9314026832580566
    3. ',' → logprob: -6.556402683258057
    4. ' ' → logprob: -9.681402206420898
    5. ' ,' → logprob: -10.931402206420898
    6. '=int' → logprob: -12.431402206420898
    7. '   ' → logprob: -13.306402206420898
    8. '    ' → logprob: -13.556402206420898
    9. '	' → logprob: -13.681402206420898
    10. ' ' → logprob: -13.806402206420898

Token 460: ' dst' (ID: 23480)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.9717803597450256
    2. 'new' → logprob: -1.2217803001403809
    3. 'x' → logprob: -3.596780300140381
    4. ' =' → logprob: -3.846780300140381
    5. 'time' → logprob: -3.971780300140381
    6. '_=' → logprob: -4.221780300140381
    7. ' x' → logprob: -4.346780300140381
    8. ' time' → logprob: -4.659280300140381
    9. ' dist' → logprob: -4.721780300140381
    10. 'pos' → logprob: -4.909280300140381

Token 461: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7205385565757751
    2. ' =' → logprob: -1.09553861618042
    3. ',' → logprob: -1.72053861618042
    4. ' ,' → logprob: -9.595538139343262
    5. ' ' → logprob: -9.720538139343262
    6. '_' → logprob: -11.845538139343262
    7. 'token' → logprob: -12.095538139343262
    8. '  ' → logprob: -12.220538139343262
    9. '   ' → logprob: -12.658038139343262
    10. '_token' → logprob: -12.658038139343262

Token 462: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.5232043266296387
    2. ' map' → logprob: -0.8982043266296387
    3. '   ' → logprob: -9.898204803466797
    4. '    ' → logprob: -11.523204803466797
    5. ' ' → logprob: -12.023204803466797
    6. '  ' → logprob: -12.273204803466797
    7. '	map' → logprob: -12.398204803466797
    8. '     ' → logprob: -13.523204803466797
    9. '           ' → logprob: -13.648204803466797
    10. '       ' → logprob: -13.773204803466797

Token 463: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -2.129266067640856e-05
    2. 'int' → logprob: -10.875020980834961
    3. '=int' → logprob: -13.375020980834961
    4. ' int' → logprob: -15.250020980834961
    5. '(' → logprob: -15.625020980834961
    6. ',int' → logprob: -15.750020980834961
    7. '<int' → logprob: -16.87502098083496
    8. '[int' → logprob: -17.25002098083496
    9. ' (' → logprob: -17.75002098083496
    10. '	int' → logprob: -18.75002098083496

Token 464: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.364684134721756
    2. ',input' → logprob: -2.1146841049194336
    3. '()' → logprob: -2.4896841049194336
    4. ')' → logprob: -3.1146841049194336
    5. '(),' → logprob: -3.9896841049194336
    6. '(' → logprob: -3.9896841049194336
    7. '(input' → logprob: -4.239684104919434
    8. '(int' → logprob: -6.364684104919434
    9. ',int' → logprob: -6.864684104919434
    10. '   ' → logprob: -7.114684104919434

Token 465: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.01416398212313652
    2. ' input' → logprob: -4.264163970947266
    3. 'sys' → logprob: -15.139163970947266
    4. ')' → logprob: -16.139163970947266
    5. 'int' → logprob: -16.764163970947266
    6. ' sys' → logprob: -16.764163970947266
    7. 'list' → logprob: -17.514163970947266
    8. 'map' → logprob: -17.639163970947266
    9. ' ' → logprob: -18.514163970947266
    10. '   ' → logprob: -19.139163970947266

Token 466: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.003209084505215287
    2. '()' → logprob: -5.753209114074707
    3. '())' → logprob: -10.628209114074707
    4. '()
' → logprob: -12.253209114074707
    5. ')' → logprob: -13.753209114074707
    6. '()[' → logprob: -14.753209114074707
    7. '(' → logprob: -15.503209114074707
    8. '(),' → logprob: -15.753209114074707
    9. ' ()' → logprob: -16.25320816040039
    10. ' ().' → logprob: -16.37820816040039

Token 467: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.512236498361744e-07
    2. ' split' → logprob: -14.750000953674316
    3. '(split' → logprob: -17.0
    4. 'spl' → logprob: -18.125
    5. ')' → logprob: -18.875
    6. '.split' → logprob: -19.875
    7. 'strip' → logprob: -20.25
    8. 'list' → logprob: -20.75
    9. '
' → logprob: -21.0
    10. '```' → logprob: -21.375

Token 468: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38992342352867126
    2. ')
' → logprob: -1.1399234533309937
    3. '()' → logprob: -6.639923572540283
    4. '())
' → logprob: -6.889923572540283
    5. '())' → logprob: -7.639923572540283
    6. ')
' → logprob: -9.389923095703125
    7. '()
' → logprob: -10.014923095703125
    8. '       ' → logprob: -10.514923095703125
    9. ' )
' → logprob: -10.764923095703125
    10. ' )' → logprob: -11.014923095703125

Token 469: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 470: ' stuck' (ID: 24327)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'order' → logprob: -1.2084819078445435
    2. ' order' → logprob: -1.4584819078445435
    3. '           ' → logprob: -2.333481788635254
    4. 'store' → logprob: -2.458481788635254
    5. ' store' → logprob: -2.958481788635254
    6. 'driver' → logprob: -3.083481788635254
    7. ' new' → logprob: -3.083481788635254
    8. ' command' → logprob: -3.333481788635254
    9. ' driver' → logprob: -3.583481788635254
    10. 'command' → logprob: -3.958481788635254

Token 471: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -4.334533878136426e-05
    2. '_cost' → logprob: -10.125042915344238
    3. '_id' → logprob: -12.750042915344238
    4. 'order' → logprob: -16.875043869018555
    5. '_orders' → logprob: -16.875043869018555
    6. '_' → logprob: -17.875043869018555
    7. '=_' → logprob: -18.000043869018555
    8. '_new' → logprob: -18.000043869018555
    9. '_status' → logprob: -18.125043869018555
    10. '_code' → logprob: -18.375043869018555

Token 472: ' |=' (ID: 19917)
  Prédit: '.add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0012697550700977445
    2. '.' → logprob: -6.876269817352295
    3. ' .' → logprob: -8.376269340515137
    4. ' =' → logprob: -12.501269340515137
    5. 'add' → logprob: -14.126269340515137
    6. '.update' → logprob: -14.876269340515137
    7. ' ' → logprob: -14.876269340515137
    8. '.setdefault' → logprob: -14.876269340515137
    9. '.dis' → logprob: -15.001269340515137
    10. '=' → logprob: -15.376269340515137

Token 473: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.018205778673291206
    2. ' {' → logprob: -4.018205642700195
    3. ' {(' → logprob: -10.643205642700195
    4. '{s' → logprob: -11.518205642700195
    5. 'set' → logprob: -11.768205642700195
    6. '{id' → logprob: -12.518205642700195
    7. '{return' → logprob: -13.018205642700195
    8. '{sub' → logprob: -13.143205642700195
    9. '{i' → logprob: -13.268205642700195
    10. ' set' → logprob: -13.518205642700195

Token 474: 'dst' (ID: 29763)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0064706988632678986
    2. 'dst' → logprob: -5.381470680236816
    3. ' new' → logprob: -6.506470680236816
    4. '(new' → logprob: -8.506470680236816
    5. ' dst' → logprob: -9.381470680236816
    6. '(dst' → logprob: -9.881470680236816
    7. 'dest' → logprob: -11.881470680236816
    8. ' (' → logprob: -12.631470680236816
    9. '(' → logprob: -12.756470680236816
    10. '0' → logprob: -14.506470680236816

Token 475: ' -' (ID: 533)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.03523394465446472
    2. ' }' → logprob: -3.785233974456787
    3. ' -' → logprob: -5.410233974456787
    4. '-' → logprob: -5.410233974456787
    5. '}
' → logprob: -5.910233974456787
    6. ' }
' → logprob: -9.285233497619629
    7. ',' → logprob: -9.910233497619629
    8. '}

' → logprob: -11.035233497619629
    9. '       ' → logprob: -11.410233497619629
    10. '<|end|>' → logprob: -11.410233497619629

Token 476: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023083435371518135
    2. ' ' → logprob: -8.37523078918457
    3. '   ' → logprob: -16.87523078918457
    4. '```' → logprob: -17.00023078918457
    5. '
' → logprob: -17.12523078918457
    6. '0' → logprob: -17.31273078918457
    7. '2' → logprob: -17.50023078918457
    8. '           ' → logprob: -17.81273078918457
    9. ',' → logprob: -18.81273078918457
    10. '                               ' → logprob: -19.43773078918457

Token 477: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.583550642360933e-05
    2. ' ' → logprob: -10.250036239624023
    3. '
' → logprob: -16.125036239624023
    4. '```' → logprob: -16.437536239624023
    5. '           ' → logprob: -16.562536239624023
    6. '   ' → logprob: -16.750036239624023
    7. '2' → logprob: -17.812536239624023
    8. ',' → logprob: -17.937536239624023
    9. '１' → logprob: -17.937536239624023
    10. '...' → logprob: -17.937536239624023

Token 478: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0475156307220459
    2. ' }' → logprob: -3.672515630722046
    3. '}
' → logprob: -3.922515630722046
    4. ' }
' → logprob: -6.922515869140625
    5. ',' → logprob: -9.047515869140625
    6. '           ' → logprob: -10.797515869140625
    7. '       ' → logprob: -10.922515869140625
    8. '}
' → logprob: -10.922515869140625
    9. '}

' → logprob: -11.047515869140625
    10. ' ' → logprob: -12.297515869140625

Token 479: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 480: ' stuck' (ID: 24327)
  Prédit: ' cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cost' → logprob: -1.114587664604187
    2. '           ' → logprob: -2.1145877838134766
    3. ' command' → logprob: -2.1145877838134766
    4. 'cost' → logprob: -2.3645877838134766
    5. 'command' → logprob: -2.8645877838134766
    6. '       ' → logprob: -2.8645877838134766
    7. 'store' → logprob: -3.1145877838134766
    8. ' store' → logprob: -3.2395877838134766
    9. 'order' → logprob: -3.3645877838134766
    10. ' order' → logprob: -3.3645877838134766

Token 481: '_cost' (ID: 36820)
  Prédit: '_order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -0.009862450882792473
    2. '_cost' → logprob: -4.634862422943115
    3. '_' → logprob: -10.759862899780273
    4. 'order' → logprob: -10.759862899780273
    5. 'cost' → logprob: -11.009862899780273
    6. '_orders' → logprob: -11.259862899780273
    7. '_code' → logprob: -11.759862899780273
    8. ' =' → logprob: -12.009862899780273
    9. '_command' → logprob: -12.384862899780273
    10. '_answer' → logprob: -13.009862899780273

Token 482: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00011868205183418468
    2. ' [' → logprob: -9.500118255615234
    3. '[new' → logprob: -10.625118255615234
    4. '[next' → logprob: -13.125118255615234
    5. '[src' → logprob: -13.125118255615234
    6. '[d' → logprob: -13.375118255615234
    7. '[c' → logprob: -13.500118255615234
    8. ' =' → logprob: -13.625118255615234
    9. '=' → logprob: -13.625118255615234
    10. 'dst' → logprob: -13.625118255615234

Token 483: 'dst' (ID: 29763)
  Prédit: 'dst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dst' → logprob: -0.0019637243822216988
    2. ' dst' → logprob: -6.2519636154174805
    3. '0' → logprob: -12.12696361541748
    4. '(dst' → logprob: -12.12696361541748
    5. '	dst' → logprob: -12.37696361541748
    6. '[' → logprob: -12.37696361541748
    7. 'new' → logprob: -12.50196361541748
    8. '   ' → logprob: -13.12696361541748
    9. ']' → logprob: -13.37696361541748
    10. 'st' → logprob: -13.62696361541748

Token 484: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5234317183494568
    2. '-' → logprob: -0.8984317183494568
    3. ']' → logprob: -8.148431777954102
    4. '   ' → logprob: -11.398431777954102
    5. ' ' → logprob: -12.773431777954102
    6. '       ' → logprob: -13.773431777954102
    7. ' ]' → logprob: -14.398431777954102
    8. '	' → logprob: -14.648431777954102
    9. '    ' → logprob: -14.773431777954102
    10. '-
' → logprob: -14.773431777954102

Token 485: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06197149679064751
    2. ' ' → logprob: -2.811971426010132
    3. '   ' → logprob: -14.311971664428711
    4. '```' → logprob: -14.936971664428711
    5. '
' → logprob: -15.249471664428711
    6. ']' → logprob: -15.374471664428711
    7. ',' → logprob: -15.436971664428711
    8. '0' → logprob: -15.499471664428711
    9. '2' → logprob: -15.624471664428711
    10. '  ' → logprob: -16.24947166442871

Token 486: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005945271346718073
    2. ' ' → logprob: -5.130945205688477
    3. '11' → logprob: -13.568445205688477
    4. '10' → logprob: -13.630945205688477
    5. '```' → logprob: -13.693445205688477
    6. '100' → logprob: -14.005945205688477
    7. '
' → logprob: -14.068445205688477
    8. '   ' → logprob: -14.443445205688477
    9. '

' → logprob: -14.630945205688477
    10. '0' → logprob: -14.818445205688477

Token 487: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6219696998596191
    2. ' +=' → logprob: -1.4969696998596191
    3. '+=' → logprob: -1.7469696998596191
    4. ']+=' → logprob: -2.996969699859619
    5. ' ]' → logprob: -4.996969699859619
    6. '=' → logprob: -5.121969699859619
    7. ' =' → logprob: -6.496969699859619
    8. '+' → logprob: -7.621969699859619
    9. ']=' → logprob: -8.496969223022461
    10. ' +' → logprob: -10.246969223022461

Token 488: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2177095115184784
    2. '=' → logprob: -2.217709541320801
    3. ' +=' → logprob: -2.467709541320801
    4. ' =' → logprob: -6.217709541320801
    5. '+' → logprob: -12.4677095413208
    6. ']+=' → logprob: -13.0927095413208
    7. '-=' → logprob: -13.3427095413208
    8. ' ' → logprob: -14.4677095413208
    9. ' -=' → logprob: -14.8427095413208
    10. ',' → logprob: -15.2177095413208

Token 489: ' ' (ID: 220)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -1.077925443649292
    2. 'wf' → logprob: -1.202925443649292
    3. 'cost' → logprob: -2.202925443649292
    4. 'new' → logprob: -2.577925443649292
    5. ' wf' → logprob: -2.827925443649292
    6. ' edge' → logprob: -3.452925443649292
    7. ' new' → logprob: -4.077925682067871
    8. ' cost' → logprob: -4.327925682067871
    9. 'dist' → logprob: -4.702925682067871
    10. 'order' → logprob: -4.952925682067871

Token 490: '1' (ID: 16)
  Prédit: 'wf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wf' → logprob: -0.339049756526947
    2. 'edge' → logprob: -1.7140498161315918
    3. 'cost' → logprob: -3.339049816131592
    4. 'dist' → logprob: -4.089049816131592
    5. '1' → logprob: -4.839049816131592
    6. ' wf' → logprob: -4.839049816131592
    7. '100' → logprob: -5.089049816131592
    8. 'new' → logprob: -5.089049816131592
    9. 'order' → logprob: -5.214049816131592
    10. '10' → logprob: -5.464049816131592

Token 491: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.31694740056991577
    2. '<|end|>' → logprob: -1.3169474601745605
    3. '<|end|>' → logprob: -6.1919474601745605
    4. '       ' → logprob: -7.6919474601745605
    5. '\n' → logprob: -8.566946983337402
    6. ' 
' → logprob: -8.691946983337402
    7. '           ' → logprob: -9.066946983337402
    8. '
' → logprob: -9.316946983337402
    9. '  
' → logprob: -9.566946983337402
    10. '    
' → logprob: -9.691946983337402

Token 492: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 493: ' store' (ID: 4897)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -1.6534769535064697
    2. ' cost' → logprob: -1.7784769535064697
    3. 'continue' → logprob: -1.7784769535064697
    4. 'store' (adapté à ' store') → logprob: -2.2784769535064697
    5. 'command' → logprob: -2.6534769535064697
    6. ' continue' → logprob: -3.0284769535064697
    7. '           ' → logprob: -3.1534769535064697
    8. 'order' → logprob: -3.2784769535064697
    9. ' store' → logprob: -3.4034769535064697
    10. '       ' → logprob: -3.5284769535064697

Token 494: '_hold' (ID: 160928)
  Prédit: '_hold'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hold' → logprob: -5.145118848304264e-05
    2. '_' → logprob: -11.500051498413086
    3. '_store' → logprob: -11.500051498413086
    4. 'hold' → logprob: -12.250051498413086
    5. ' _' → logprob: -12.250051498413086
    6. '_h' → logprob: -13.250051498413086
    7. '_keep' → logprob: -13.250051498413086
    8. '=' → logprob: -13.750051498413086
    9. ' =' → logprob: -13.875051498413086
    10. '_continue' → logprob: -13.875051498413086

Token 495: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.20220442116260529
    2. '+=' → logprob: -1.7022044658660889
    3. '=' → logprob: -7.70220422744751
    4. ' =' → logprob: -8.327204704284668
    5. '+' → logprob: -10.702204704284668
    6. ' -=' → logprob: -10.827204704284668
    7. ',' → logprob: -11.202204704284668
    8. ' ' → logprob: -11.327204704284668
    9. '[' → logprob: -12.202204704284668
    10. ' +' → logprob: -12.452204704284668

Token 496: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.18078994750976562
    2. ' ' → logprob: -1.8057899475097656
    3. ' new' → logprob: -7.305789947509766
    4. 'new' → logprob: -8.055789947509766
    5. 'd' → logprob: -11.868289947509766
    6. '0' → logprob: -11.930789947509766
    7. ' N' → logprob: -12.243289947509766
    8. ' d' → logprob: -12.805789947509766
    9. '10' → logprob: -12.868289947509766
    10. 'cost' → logprob: -12.930789947509766

Token 497: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007392583414912224
    2. ' ' → logprob: -5.007392406463623
    3. 'new' → logprob: -7.507392406463623
    4. ' new' → logprob: -9.507392883300781
    5. 'N' → logprob: -11.382392883300781
    6. 'd' → logprob: -11.382392883300781
    7. '0' → logprob: -11.882392883300781
    8. 'cost' → logprob: -11.882392883300781
    9. ' N' → logprob: -12.507392883300781
    10. 'dst' → logprob: -13.132392883300781

Token 498: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 499: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 500: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2953903377056122
    2. 'else' → logprob: -1.6703903675079346
    3. 'elif' → logprob: -3.1703903675079346
    4. ' else' → logprob: -3.7953903675079346
    5. ' elif' → logprob: -6.6703901290893555
    6. '<|end|>' → logprob: -7.2953901290893555
    7. 'if' (adapté à ' if') → logprob: -8.920390129089355
    8. '	' → logprob: -8.920390129089355
    9. '
' → logprob: -9.170390129089355
    10. ' if' → logprob: -9.295390129089355

Token 501: ' dist' (ID: 3601)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.7096455097198486
    2. ' store' → logprob: -1.4596455097198486
    3. ' order' → logprob: -2.5846455097198486
    4. ' stuck' → logprob: -2.9596455097198486
    5. ' cost' → logprob: -3.2096455097198486
    6. 'N' → logprob: -3.3346455097198486
    7. ' dist' → logprob: -4.0846452713012695
    8. ' len' → logprob: -4.5846452713012695
    9. ' command' → logprob: -4.7096452713012695
    10. ' not' → logprob: -4.8346452713012695

Token 502: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -5.080963092041202e-06
    2. '_' → logprob: -12.750004768371582
    3. ' _' → logprob: -14.000004768371582
    4. '_right' → logprob: -14.125004768371582
    5. '_LEFT' → logprob: -15.500004768371582
    6. '   ' → logprob: -16.7500057220459
    7. '_Left' → logprob: -16.8750057220459
    8. '>' → logprob: -17.5000057220459
    9. 'left' → logprob: -17.7500057220459
    10. '```' → logprob: -17.8750057220459

Token 503: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.0029878057539463043
    2. ' ==' → logprob: -6.502987861633301
    3. '>' → logprob: -6.877987861633301
    4. ' <=' → logprob: -8.1279878616333
    5. ' <' → logprob: -9.6279878616333
    6. ' ' → logprob: -9.8779878616333
    7. ' !=' → logprob: -11.5029878616333
    8. ' >=' → logprob: -11.6279878616333
    9. ' ' → logprob: -11.7529878616333
    10. '==' → logprob: -12.0029878616333

Token 504: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2519480884075165
    2. ' ' → logprob: -1.5019481182098389
    3. '=' → logprob: -12.251948356628418
    4. '1' → logprob: -12.251948356628418
    5. ' ' → logprob: -12.376948356628418
    6. '  ' → logprob: -13.126948356628418
    7. '   ' → logprob: -13.814448356628418
    8. '>' → logprob: -14.251948356628418
    9. '
' → logprob: -15.501948356628418
    10. '    ' → logprob: -16.1894474029541

Token 505: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003680836409330368
    2. ' ' → logprob: -5.62868070602417
    3. '1' → logprob: -9.503681182861328
    4. '   ' → logprob: -12.878681182861328
    5. '  ' → logprob: -14.316181182861328
    6. ' ' → logprob: -14.941181182861328
    7. '
' → logprob: -15.316181182861328
    8. '    ' → logprob: -15.628681182861328
    9. '```' → logprob: -15.753681182861328
    10. '           ' → logprob: -15.878681182861328

Token 506: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03044266812503338
    2. '           ' → logprob: -3.905442714691162
    3. ':
' → logprob: -4.780442714691162
    4. '       ' → logprob: -7.030442714691162
    5. ' :' → logprob: -8.780442237854004
    6. '               ' → logprob: -9.030442237854004
    7. ' and' → logprob: -9.155442237854004
    8. '   ' → logprob: -10.155442237854004
    9. '        ' → logprob: -10.405442237854004
    10. ',' → logprob: -10.780442237854004

Token 507: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02198386937379837
    2. '       ' → logprob: -5.146984100341797
    3. '               ' → logprob: -5.771984100341797
    4. '<|end|>' → logprob: -5.896984100341797
    5. '
' → logprob: -6.271984100341797
    6. '		' → logprob: -6.646984100341797
    7. '	       ' → logprob: -6.771984100341797
    8. '        ' → logprob: -6.896984100341797
    9. '<|end|>' → logprob: -7.021984100341797
    10. ',' → logprob: -7.271984100341797

Token 508: ' command' (ID: 6348)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.4170173704624176
    2. ' dist' → logprob: -1.2920173406600952
    3. '           ' → logprob: -2.7920174598693848
    4. '       ' → logprob: -5.667017459869385
    5. '	dist' → logprob: -7.167017459869385
    6. '               ' → logprob: -7.917017459869385
    7. '   ' → logprob: -8.792016983032227
    8. '		' → logprob: -9.417016983032227
    9. ' continue' → logprob: -11.042016983032227
    10. '	       ' → logprob: -11.042016983032227

Token 509: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.00417931005358696
    2. '.append' → logprob: -5.50417947769165
    3. ' =' → logprob: -9.879179000854492
    4. '=' → logprob: -10.879179000854492
    5. '=t' → logprob: -11.629179000854492
    6. '   ' → logprob: -11.879179000854492
    7. '[' → logprob: -12.004179000854492
    8. ' [' → logprob: -12.504179000854492
    9. '	' → logprob: -14.379179000854492
    10. '=[' → logprob: -14.379179000854492

Token 510: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005245577194727957
    2. ']=' → logprob: -7.750524520874023
    3. '[' → logprob: -10.375524520874023
    4. '=' → logprob: -11.000524520874023
    5. ')' → logprob: -11.375524520874023
    6. ']='' → logprob: -11.500524520874023
    7. ' =' → logprob: -11.750524520874023
    8. ' ]' → logprob: -11.750524520874023
    9. '[t' → logprob: -13.000524520874023
    10. ']="' → logprob: -13.125524520874023

Token 511: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.030001208186149597
    2. ' =' → logprob: -3.530001163482666
    3. '='' → logprob: -9.155001640319824
    4. '.append' → logprob: -9.530001640319824
    5. '[' → logprob: -10.530001640319824
    6. '="' → logprob: -11.030001640319824
    7. '+=' → logprob: -11.905001640319824
    8. '   ' → logprob: -12.280001640319824
    9. '[t' → logprob: -12.655001640319824
    10. '	' → logprob: -13.030001640319824

Token 512: ' heading' (ID: 23808)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -1.0556187629699707
    2. '('' → logprob: -1.8056187629699707
    3. '("' → logprob: -1.8056187629699707
    4. ''' → logprob: -2.0556187629699707
    5. '(' → logprob: -2.0556187629699707
    6. '(-' → logprob: -4.555618762969971
    7. 'f' → logprob: -4.805618762969971
    8. '(f' → logprob: -5.180618762969971
    9. '0' → logprob: -5.430618762969971
    10. 'None' → logprob: -5.555618762969971

Token 513: ' +' (ID: 659)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8903014659881592
    2. ' +' → logprob: -2.265301465988159
    3. '+' → logprob: -2.515301465988159
    4. '       ' → logprob: -2.765301465988159
    5. '           ' → logprob: -2.765301465988159
    6. '\n' → logprob: -2.890301465988159
    7. ' 
' → logprob: -3.140301465988159
    8. '+
' → logprob: -3.765301465988159
    9. '            
' → logprob: -3.890301465988159
    10. '               ' → logprob: -3.890301465988159

Token 514: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.093038558959961
    2. '"' → logprob: -1.593038558959961
    3. '"\' → logprob: -1.718038558959961
    4. ''\' → logprob: -1.843038558959961
    5. ''' → logprob: -2.968038558959961
    6. ' ' → logprob: -3.093038558959961
    7. '\n' → logprob: -5.593038558959961
    8. '0' → logprob: -5.593038558959961
    9. ' "\' → logprob: -5.593038558959961
    10. '
' → logprob: -5.718038558959961

Token 515: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.041605088859796524
    2. ' ' → logprob: -4.166604995727539
    3. '"\' → logprob: -4.666604995727539
    4. ''\' → logprob: -4.916604995727539
    5. '"' → logprob: -5.166604995727539
    6. ''' → logprob: -6.416604995727539
    7. '\n' → logprob: -7.666604995727539
    8. ' "' → logprob: -8.666604995727539
    9. ' "\' → logprob: -8.916604995727539
    10. ' '\' → logprob: -10.041604995727539

Token 516: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7322332859039307
    2. '\n' → logprob: -0.9822332859039307
    3. '<|end|>' → logprob: -3.1072332859039307
    4. ' 
' → logprob: -3.7322332859039307
    5. '           ' → logprob: -4.357233047485352
    6. '       ' → logprob: -4.482233047485352
    7. ''\' → logprob: -4.732233047485352
    8. '            
' → logprob: -4.732233047485352
    9. '        
' → logprob: -5.857233047485352
    10. '  
' → logprob: -5.857233047485352

Token 517: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.46238043904304504
    2. '       ' → logprob: -1.7123804092407227
    3. '<|end|>' → logprob: -2.7123804092407227
    4. '
' → logprob: -3.5873804092407227
    5. 'dist' → logprob: -3.5873804092407227
    6. '   ' → logprob: -3.8373804092407227
    7. '               ' → logprob: -4.462380409240723
    8. ' dist' → logprob: -5.212380409240723
    9. 'elif' → logprob: -5.337380409240723
    10. ')' → logprob: -5.962380409240723

Token 518: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.2683490514755249
    2. ' dist' → logprob: -1.768349051475525
    3. '           ' → logprob: -2.7683491706848145
    4. '       ' → logprob: -7.0183491706848145
    5. '	dist' → logprob: -7.2683491706848145
    6. '   ' → logprob: -9.143348693847656
    7. '               ' → logprob: -9.643348693847656
    8. '
' → logprob: -9.893348693847656
    9. '                   ' → logprob: -10.393348693847656
    10. '          ' → logprob: -10.518348693847656

Token 519: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -1.9361264946837764e-07
    2. 'left' → logprob: -17.125
    3. '_LEFT' → logprob: -18.625
    4. '```' → logprob: -18.875
    5. '_' → logprob: -19.0
    6. '   ' → logprob: -19.5
    7. '_Left' → logprob: -20.25
    8. '_len' → logprob: -20.625
    9. 'Left' → logprob: -20.625
    10. '[left' → logprob: -21.0

Token 520: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.31423643231391907
    2. ' -=' → logprob: -1.3142364025115967
    3. '-' → logprob: -6.939236640930176
    4. '+=' → logprob: -13.064236640930176
    5. '   ' → logprob: -13.689236640930176
    6. '=' → logprob: -13.689236640930176
    7. ' -' → logprob: -14.939236640930176
    8. ' +=' → logprob: -15.439236640930176
    9. '```' → logprob: -16.18923568725586
    10. '	' → logprob: -16.68923568725586

Token 521: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.572941179503687e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -15.375045776367188
    4. '           ' → logprob: -16.875045776367188
    5. '       ' → logprob: -18.375045776367188
    6. ' ' → logprob: -18.500045776367188
    7. '  ' → logprob: -19.125045776367188
    8. '0' → logprob: -19.250045776367188
    9. '```' → logprob: -19.375045776367188
    10. '
' → logprob: -19.750045776367188

Token 522: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.1782583391759545e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -15.500031471252441
    4. '           ' → logprob: -16.375032424926758
    5. '0' → logprob: -17.000032424926758
    6. '```' → logprob: -17.312532424926758
    7. '       ' → logprob: -17.375032424926758
    8. '
' → logprob: -17.437532424926758
    9. ' ' → logprob: -17.750032424926758
    10. '               ' → logprob: -18.312532424926758

Token 523: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.698442816734314
    2. '   ' → logprob: -1.073442816734314
    3. '       ' → logprob: -2.1984429359436035
    4. '<|end|>' → logprob: -3.5734429359436035
    5. '
' → logprob: -5.3234429359436035
    6. '    
' → logprob: -5.4484429359436035
    7. '           ' → logprob: -6.1984429359436035
    8. ' 
' → logprob: -6.9484429359436035
    9. '	continue' → logprob: -6.9484429359436035
    10. '\t' → logprob: -6.9484429359436035

Token 524: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03177390992641449
    2. '   ' → logprob: -4.031774044036865
    3. '\n' → logprob: -5.031774044036865
    4. '           ' → logprob: -5.656774044036865
    5. '<|end|>' → logprob: -7.031774044036865
    6. 'continue' → logprob: -7.281774044036865
    7. ' continue' → logprob: -8.156773567199707
    8. '    
' → logprob: -8.406773567199707
    9. '
' → logprob: -8.406773567199707
    10. '	continue' → logprob: -8.531773567199707

Token 525: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027474578469991684
    2. 'else' (adapté à ' else') → logprob: -4.402474403381348
    3. ' else' → logprob: -4.652474403381348
    4. 'elif' → logprob: -6.152474403381348
    5. '           ' → logprob: -6.777474403381348
    6. 'continue' → logprob: -7.152474403381348
    7. ' elif' → logprob: -7.277474403381348
    8. ' continue' → logprob: -8.027474403381348
    9. '   ' → logprob: -8.527474403381348
    10. '               ' → logprob: -11.152474403381348

Token 526: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5132623910903931
    2. ':' → logprob: -1.138262391090393
    3. '       ' → logprob: -2.8882622718811035
    4. ' if' → logprob: -4.5132622718811035
    5. '           ' → logprob: -4.8882622718811035
    6. 'if' → logprob: -5.1382622718811035
    7. ':

' → logprob: -7.8882622718811035
    8. '   ' → logprob: -8.263262748718262
    9. ',' → logprob: -8.763262748718262
    10. ' :
' → logprob: -10.013262748718262

Token 527: '           ' (ID: 352)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8999962210655212
    2. '       ' → logprob: -1.024996280670166
    3. 'for' → logprob: -2.649996280670166
    4. ' if' → logprob: -3.399996280670166
    5. 'cost' → logprob: -3.399996280670166
    6. '#' → logprob: -4.399996280670166
    7. 'order' → logprob: -4.649996280670166
    8. '           ' → logprob: -4.774996280670166
    9. 'best' → logprob: -5.024996280670166
    10. 'dist' → logprob: -5.024996280670166

Token 528: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.14166171848773956
    2. 'cost' → logprob: -2.8916616439819336
    3. 'for' → logprob: -3.6416616439819336
    4. '           ' → logprob: -4.141661643981934
    5. 'order' → logprob: -4.516661643981934
    6. '#' → logprob: -5.016661643981934
    7. 'c' → logprob: -5.516661643981934
    8. 'best' → logprob: -6.391661643981934
    9. 'd' → logprob: -6.641661643981934
    10. 'next' → logprob: -6.891661643981934

Token 529: ' heading' (ID: 23808)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.8682434558868408
    2. ' len' → logprob: -1.1182434558868408
    3. 'order' → logprob: -2.743243455886841
    4. ' stuck' → logprob: -2.743243455886841
    5. ' order' → logprob: -3.243243455886841
    6. 'st' → logprob: -3.243243455886841
    7. ' not' → logprob: -3.368243455886841
    8. 'not' → logprob: -5.118243217468262
    9. 'cost' → logprob: -5.993243217468262
    10. ' cost' → logprob: -6.993243217468262

Token 530: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.8396528959274292
    2. ' in' → logprob: -1.2146528959274292
    3. ' not' → logprob: -1.8396528959274292
    4. '==' → logprob: -2.5896530151367188
    5. 'in' → logprob: -4.589653015136719
    6. 'not' → logprob: -4.714653015136719
    7. ' !=' → logprob: -5.589653015136719
    8. ' <' → logprob: -5.714653015136719
    9. ' >=' → logprob: -5.839653015136719
    10. ' is' → logprob: -6.214653015136719

Token 531: ' ' (ID: 220)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.5075209140777588
    2. '-' → logprob: -1.3825209140777588
    3. '0' → logprob: -2.257520914077759
    4. ' -' → logprob: -4.38252067565918
    5. 'final' → logprob: -5.13252067565918
    6. 'None' → logprob: -5.25752067565918
    7. 'dest' → logprob: -5.38252067565918
    8. ' V' → logprob: -5.63252067565918
    9. 'T' → logprob: -5.63252067565918
    10. ' ' → logprob: -5.75752067565918

Token 532: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7511807680130005
    2. 'V' → logprob: -1.0011807680130005
    3. '-' → logprob: -2.501180648803711
    4. 'final' → logprob: -3.376180648803711
    5. 'T' → logprob: -3.501180648803711
    6. 'None' → logprob: -5.626180648803711
    7. 'st' → logprob: -6.251180648803711
    8. 'dest' → logprob: -6.501180648803711
    9. 'store' → logprob: -6.626180648803711
    10. ' ' → logprob: -6.751180648803711

Token 533: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7112867832183838
    2. ':
' → logprob: -0.7112867832183838
    3. ' and' → logprob: -4.586286544799805
    4. ' or' → logprob: -4.961286544799805
    5. ' :
' → logprob: -8.211286544799805
    6. ':

' → logprob: -9.211286544799805
    7. 'and' → logprob: -9.336286544799805
    8. ' :' → logprob: -9.586286544799805
    9. '<|end|>' → logprob: -9.586286544799805
    10. ':
' → logprob: -9.961286544799805

Token 534: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4939141273498535
    2. ' if' → logprob: -1.7439141273498535
    3. 'if' → logprob: -2.4939141273498535
    4. 'cost' → logprob: -3.4939141273498535
    5. ' cost' → logprob: -3.9939141273498535
    6. 'd' → logprob: -4.1189141273498535
    7. ' for' → logprob: -4.4939141273498535
    8. '       ' → logprob: -4.7439141273498535
    9. 'command' → logprob: -4.8689141273498535
    10. 'for' → logprob: -4.9939141273498535

Token 535: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6005861163139343
    2. 'cost' → logprob: -1.350586175918579
    3. 'for' → logprob: -2.475586175918579
    4. 'order' → logprob: -3.725586175918579
    5. 'c' → logprob: -4.1005859375
    6. 'command' → logprob: -4.2255859375
    7. 'st' → logprob: -4.7255859375
    8. 'pass' → logprob: -4.7255859375
    9. 'd' → logprob: -4.8505859375
    10. '#' → logprob: -5.2255859375

Token 536: ' store' (ID: 4897)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.2783393859863281
    2. ' len' → logprob: -1.2783393859863281
    3. ' stuck' → logprob: -1.6533393859863281
    4. 'st' → logprob: -2.153339385986328
    5. ' not' → logprob: -2.528339385986328
    6. 'store' → logprob: -3.903339385986328
    7. 'order' → logprob: -4.653339385986328
    8. ' store' → logprob: -4.778339385986328
    9. 'not' → logprob: -4.778339385986328
    10. ' order' → logprob: -4.903339385986328

Token 537: '_hold' (ID: 160928)
  Prédit: '_hold'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hold' → logprob: -6.289473822107539e-05
    2. 'hold' → logprob: -9.750062942504883
    3. '_' → logprob: -13.500062942504883
    4. '_order' → logprob: -14.125062942504883
    5. '   ' → logprob: -14.750062942504883
    6. '\' → logprob: -15.250062942504883
    7. '
' → logprob: -15.500062942504883
    8. ' hold' → logprob: -15.875062942504883
    9. '```' → logprob: -16.000062942504883
    10. ' ' → logprob: -16.125062942504883

Token 538: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.375277578830719
    2. ' >' → logprob: -1.5002775192260742
    3. '==' → logprob: -2.625277519226074
    4. '>' → logprob: -4.125277519226074
    5. ':' → logprob: -7.500277519226074
    6. ' <=' → logprob: -7.750277519226074
    7. ' <' → logprob: -8.875277519226074
    8. ' ' → logprob: -10.375277519226074
    9. '<=' → logprob: -10.625277519226074
    10. '   ' → logprob: -11.125277519226074

Token 539: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06994243711233139
    2. ' ' → logprob: -2.6949424743652344
    3. '1' → logprob: -12.819942474365234
    4. '   ' → logprob: -14.132442474365234
    5. 'store' → logprob: -14.632442474365234
    6. '>' → logprob: -14.757442474365234
    7. '  ' → logprob: -15.257442474365234
    8. ' ' → logprob: -15.382442474365234
    9. 'st' → logprob: -15.757442474365234
    10. '    ' → logprob: -16.694942474365234

Token 540: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002979240380227566
    2. ' ' → logprob: -8.125297546386719
    3. '1' → logprob: -13.750297546386719
    4. 'V' → logprob: -15.000297546386719
    5. '   ' → logprob: -15.625297546386719
    6. 'store' → logprob: -16.68779754638672
    7. '>' → logprob: -17.50029754638672
    8. ' V' → logprob: -17.50029754638672
    9. 'T' → logprob: -17.50029754638672
    10. '  ' → logprob: -17.68779754638672

Token 541: ' and' (ID: 326)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3910888731479645
    2. ':' → logprob: -1.141088843345642
    3. ' or' → logprob: -6.391088962554932
    4. ' and' → logprob: -6.391088962554932
    5. '                   ' → logprob: -8.266088485717773
    6. '               ' → logprob: -8.641088485717773
    7. ':

' → logprob: -8.766088485717773
    8. ':return' → logprob: -9.891088485717773
    9. '           ' → logprob: -10.141088485717773
    10. '<|end|>' → logprob: -10.266088485717773

Token 542: ' driver' (ID: 8931)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.1576974093914032
    2. 'not' → logprob: -2.1576974391937256
    3. ' not' → logprob: -4.1576972007751465
    4. ' len' → logprob: -4.5326972007751465
    5. 'st' → logprob: -5.7826972007751465
    6. 't' → logprob: -8.032697677612305
    7. 'True' → logprob: -9.282697677612305
    8. 'order' → logprob: -9.407697677612305
    9. ' stuck' → logprob: -9.407697677612305
    10. 'T' → logprob: -10.282697677612305

Token 543: '_hold' (ID: 160928)
  Prédit: '_hold'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hold' → logprob: -0.015348212793469429
    2. ' ==' → logprob: -4.890348434448242
    3. '==' → logprob: -5.015348434448242
    4. '_' → logprob: -8.015348434448242
    5. 'hold' → logprob: -8.015348434448242
    6. '_continue' → logprob: -9.640348434448242
    7. ' ' → logprob: -9.640348434448242
    8. ' _' → logprob: -10.015348434448242
    9. ' !=' → logprob: -10.765348434448242
    10. '0' → logprob: -11.265348434448242

Token 544: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0891266018152237
    2. '==' → logprob: -2.4641265869140625
    3. ' ' → logprob: -10.214126586914062
    4. ' <' → logprob: -10.339126586914062
    5. '[' → logprob: -10.714126586914062
    6. '<|end|>' → logprob: -10.714126586914062
    7. ' >' → logprob: -10.839126586914062
    8. ')' → logprob: -11.214126586914062
    9. ' !=' → logprob: -11.964126586914062
    10. '>' → logprob: -12.214126586914062

Token 545: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11286255717277527
    2. ' ' → logprob: -2.2378625869750977
    3. '1' → logprob: -10.737862586975098
    4. '   ' → logprob: -12.237862586975098
    5. 'store' → logprob: -12.612862586975098
    6. '  ' → logprob: -12.675362586975098
    7. ' ' → logprob: -14.237862586975098
    8. '    ' → logprob: -14.737862586975098
    9. '```' → logprob: -14.737862586975098
    10. ' store' → logprob: -14.987862586975098

Token 546: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003650557016953826
    2. ' ' → logprob: -5.628650665283203
    3. '1' → logprob: -10.378650665283203
    4. '   ' → logprob: -12.066150665283203
    5. 'store' → logprob: -12.316150665283203
    6. '  ' → logprob: -13.816150665283203
    7. '```' → logprob: -14.253650665283203
    8. '2' → logprob: -14.441150665283203
    9. 'T' → logprob: -14.566150665283203
    10. '           ' → logprob: -14.816150665283203

Token 547: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31681835651397705
    2. ':
' → logprob: -1.316818356513977
    3. ' and' → logprob: -6.3168182373046875
    4. ' or' → logprob: -7.3168182373046875
    5. '               ' → logprob: -7.8168182373046875
    6. '                   ' → logprob: -8.441818237304688
    7. ':return' → logprob: -8.941818237304688
    8. ':

' → logprob: -9.441818237304688
    9. '<|end|>' → logprob: -9.566818237304688
    10. 'and' → logprob: -10.191818237304688

Token 548: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7522822618484497
    2. '                   ' → logprob: -1.0022822618484497
    3. 'command' → logprob: -2.75228214263916
    4. ' command' → logprob: -3.00228214263916
    5. '           ' → logprob: -3.25228214263916
    6. '   ' → logprob: -5.37728214263916
    7. '                       ' → logprob: -6.37728214263916
    8. '       ' → logprob: -7.12728214263916
    9. ' for' → logprob: -7.87728214263916
    10. '
' → logprob: -8.00228214263916

Token 549: ' command' (ID: 6348)
  Prédit: 'command'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'command' (adapté à ' command') → logprob: -0.004913396667689085
    2. ' command' → logprob: -6.004913330078125
    3. '0' → logprob: -6.754913330078125
    4. 'print' → logprob: -7.879913330078125
    5. '           ' → logprob: -8.004913330078125
    6. '               ' → logprob: -8.129913330078125
    7. '   ' → logprob: -9.004913330078125
    8. '                   ' → logprob: -10.004913330078125
    9. '       ' → logprob: -10.129913330078125
    10. 'continue' → logprob: -11.504913330078125

Token 550: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -7.896309739408025e-07
    2. 't' → logprob: -15.125000953674316
    3. '[' → logprob: -15.750000953674316
    4. ' [' → logprob: -16.0
    5. ' =' → logprob: -16.875
    6. '   ' → logprob: -17.125
    7. '=' → logprob: -17.375
    8. '	t' → logprob: -17.875
    9. '[s' → logprob: -18.5
    10. '```' → logprob: -18.5

Token 551: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0016938652843236923
    2. ']=' → logprob: -6.6266937255859375
    3. ' =' → logprob: -8.751693725585938
    4. '=' → logprob: -8.876693725585938
    5. ')' → logprob: -10.751693725585938
    6. '[' → logprob: -11.501693725585938
    7. '[t' → logprob: -11.501693725585938
    8. ' ]' → logprob: -11.626693725585938
    9. ']='' → logprob: -11.751693725585938
    10. '.append' → logprob: -12.751693725585938

Token 552: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006722706835716963
    2. ' =' → logprob: -5.006722927093506
    3. '[' → logprob: -12.381722450256348
    4. '   ' → logprob: -13.756722450256348
    5. '[t' → logprob: -13.756722450256348
    6. '=None' → logprob: -15.131722450256348
    7. '=t' → logprob: -15.506722450256348
    8. '=
' → logprob: -16.506723403930664
    9. '           ' → logprob: -16.506723403930664
    10. '＝' → logprob: -16.756723403930664

Token 553: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016095371916890144
    2. '1' → logprob: -4.641095161437988
    3. '-' → logprob: -5.141095161437988
    4. ' ' → logprob: -8.766095161437988
    5. 'V' → logprob: -9.891095161437988
    6. 'heading' → logprob: -10.391095161437988
    7. '"' → logprob: -10.641095161437988
    8. 'head' → logprob: -11.078595161437988
    9. ''' → logprob: -11.078595161437988
    10. 'store' → logprob: -11.141095161437988

Token 554: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020926215802319348
    2. '2' → logprob: -8.625208854675293
    3. ' ' → logprob: -11.250208854675293
    4. '3' → logprob: -12.250208854675293
    5. '10' → logprob: -12.375208854675293
    6. '100' → logprob: -12.625208854675293
    7. '-' → logprob: -14.125208854675293
    8. '5' → logprob: -14.625208854675293
    9. '4' → logprob: -14.750208854675293
    10. '99' → logprob: -14.750208854675293

Token 555: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.29389217495918274
    2. '
' → logprob: -1.5438921451568604
    3. '<|end|>' → logprob: -3.6688921451568604
    4. '           ' → logprob: -5.6688923835754395
    5. ' else' → logprob: -5.9188923835754395
    6. 'else' → logprob: -5.9188923835754395
    7. '                   ' → logprob: -6.4188923835754395
    8. '\n' → logprob: -6.6688923835754395
    9. 'elif' → logprob: -6.7938923835754395
    10. '<|end|>' → logprob: -7.2938923835754395

Token 556: '                   ' (ID: 699)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5411392450332642
    2. '               ' → logprob: -1.0411392450332642
    3. '<|end|>' → logprob: -3.6661391258239746
    4. '           ' → logprob: -4.416139125823975
    5. 'elif' → logprob: -4.791139125823975
    6. 'else' → logprob: -5.291139125823975
    7. '                   ' → logprob: -5.541139125823975
    8. '\n' → logprob: -5.791139125823975
    9. ' else' → logprob: -5.916139125823975
    10. '       ' → logprob: -7.041139125823975

Token 557: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.2707122266292572
    2. '               ' → logprob: -1.8957122564315796
    3. 'else' → logprob: -3.14571213722229
    4. ' continue' → logprob: -4.145712375640869
    5. '           ' → logprob: -4.270712375640869
    6. '                   ' → logprob: -4.520712375640869
    7. ' else' → logprob: -6.645712375640869
    8. 'elif' → logprob: -7.145712375640869
    9. '       ' → logprob: -7.270712375640869
    10. '   ' → logprob: -8.520711898803711

Token 558: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8186619877815247
    2. '
' → logprob: -1.0686619281768799
    3. '               ' → logprob: -2.06866192817688
    4. '\n' → logprob: -3.56866192817688
    5. '            
' → logprob: -3.69366192817688
    6. '<|end|>' → logprob: -4.693662166595459
    7. 'elif' → logprob: -4.943662166595459
    8. '                
' → logprob: -5.443662166595459
    9. ' 
' → logprob: -5.943662166595459
    10. '    
' → logprob: -6.318662166595459

Token 559: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0977421998977661
    2. '<|end|>' → logprob: -1.4727421998977661
    3. '               ' → logprob: -1.9727421998977661
    4. '       ' → logprob: -1.9727421998977661
    5. ')' → logprob: -3.2227420806884766
    6. 'elif' → logprob: -3.4727420806884766
    7. ' elif' → logprob: -4.347742080688477
    8. '            
' → logprob: -4.472742080688477
    9. ' ' → logprob: -4.847742080688477
    10. ' 
' → logprob: -4.972742080688477

Token 560: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 561: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3679807782173157
    2. ':' → logprob: -1.742980718612671
    3. '                   ' → logprob: -2.242980718612671
    4. '               ' → logprob: -4.36798095703125
    5. '           ' → logprob: -5.36798095703125
    6. ' if' → logprob: -5.99298095703125
    7. ',' → logprob: -6.36798095703125
    8. '
' → logprob: -6.74298095703125
    9. 'if' → logprob: -7.49298095703125
    10. '   ' → logprob: -7.74298095703125

Token 562: '                   ' (ID: 699)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.520966112613678
    2. ' if' → logprob: -2.520966053009033
    3. ' d' → logprob: -2.645966053009033
    4. '               ' → logprob: -2.645966053009033
    5. '           ' → logprob: -3.895966053009033
    6. ' cost' → logprob: -3.895966053009033
    7. 'for' → logprob: -3.895966053009033
    8. 'd' → logprob: -4.145966053009033
    9. '                   ' → logprob: -4.145966053009033
    10. ' heading' → logprob: -4.270966053009033

Token 563: ' order' (ID: 2569)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -2.1551754474639893
    2. ' for' → logprob: -2.1551754474639893
    3. ' if' → logprob: -2.1551754474639893
    4. 'if' → logprob: -2.7801754474639893
    5. ' next' → logprob: -2.7801754474639893
    6. ' d' → logprob: -2.7801754474639893
    7. 'for' → logprob: -3.0301754474639893
    8. '               ' → logprob: -3.1551754474639893
    9. 'cost' → logprob: -3.1551754474639893
    10. ' cost' → logprob: -3.2801754474639893

Token 564: ' |=' (ID: 19917)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6955557465553284
    2. '=' → logprob: -0.9455557465553284
    3. '|' → logprob: -2.5705556869506836
    4. ' |=' → logprob: -3.8205556869506836
    5. '.update' → logprob: -4.820555686950684
    6. '.add' → logprob: -5.945555686950684
    7. '.clear' → logprob: -6.695555686950684
    8. '.' → logprob: -8.070555686950684
    9. '.union' → logprob: -8.445555686950684
    10. '   ' → logprob: -8.445555686950684

Token 565: ' stuck' (ID: 24327)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.15713205933570862
    2. '{' → logprob: -2.032132148742676
    3. ' stuck' → logprob: -4.407132148742676
    4. ' {' → logprob: -6.532132148742676
    5. 'store' → logprob: -7.782132148742676
    6. '(st' → logprob: -9.907132148742676
    7. '{s' → logprob: -10.157132148742676
    8. 'set' → logprob: -10.282132148742676
    9. ' st' → logprob: -10.532132148742676
    10. 'stick' → logprob: -10.782132148742676

Token 566: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -0.00011439072113716975
    2. '_cost' → logprob: -9.125114440917969
    3. '_orders' → logprob: -12.750114440917969
    4. '_' → logprob: -14.125114440917969
    5. '{' → logprob: -14.500114440917969
    6. '_command' → logprob: -15.000114440917969
    7. '```' → logprob: -15.500114440917969
    8. 'order' → logprob: -15.500114440917969
    9. ' _' → logprob: -16.00011444091797
    10. ''_' → logprob: -16.37511444091797

Token 567: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23352870345115662
    2. '<|end|>' → logprob: -1.858528733253479
    3. ' 
' → logprob: -3.2335286140441895
    4. '<|end|>' → logprob: -5.8585286140441895
    5. '  
' → logprob: -5.9835286140441895
    6. '                    
' → logprob: -6.2335286140441895
    7. '
' → logprob: -7.2335286140441895
    8. '    
' → logprob: -7.3585286140441895
    9. ' ' → logprob: -7.4835286140441895
    10. '            
' → logprob: -7.4835286140441895

Token 568: '                   ' (ID: 699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 569: ' for' (ID: 395)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.00826797541230917
    2. '               ' → logprob: -6.258267879486084
    3. '           ' → logprob: -6.383267879486084
    4. 'if' → logprob: -6.383267879486084
    5. '                   ' → logprob: -6.883267879486084
    6. 'cost' → logprob: -7.633267879486084
    7. 'heading' → logprob: -8.133268356323242
    8. 'for' (adapté à ' for') → logprob: -8.383268356323242
    9. '       ' → logprob: -8.508268356323242
    10. 'command' → logprob: -9.133268356323242

Token 570: ' key' (ID: 2140)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -1.4062862396240234
    2. 'key' → logprob: -1.4062862396240234
    3. 'd' → logprob: -2.0312862396240234
    4. 'dst' → logprob: -2.2812862396240234
    5. ' key' → logprob: -2.9062862396240234
    6. 'i' → logprob: -3.1562862396240234
    7. 'k' → logprob: -3.2812862396240234
    8. ' d' → logprob: -4.031286239624023
    9. ' o' → logprob: -4.156286239624023
    10. ' dst' → logprob: -4.281286239624023

Token 571: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0015362853882834315
    2. 'in' → logprob: -6.5015363693237305
    3. ' ' → logprob: -11.12653636932373
    4. 's' → logprob: -12.12653636932373
    5. '<|end|>' → logprob: -12.12653636932373
    6. ',' → logprob: -13.37653636932373
    7. ' ' → logprob: -13.50153636932373
    8. '	in' → logprob: -14.00153636932373
    9. '_in' → logprob: -14.06403636932373
    10. '<|end|>' → logprob: -14.43903636932373

Token 572: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.4928148090839386
    2. 'st' → logprob: -1.6178147792816162
    3. ' order' → logprob: -2.117814779281616
    4. ' stuck' → logprob: -2.867814779281616
    5. 'list' → logprob: -5.617815017700195
    6. 'cost' → logprob: -5.742815017700195
    7. ' list' → logprob: -5.992815017700195
    8. 'range' → logprob: -6.242815017700195
    9. ' range' → logprob: -6.992815017700195
    10. ' cost' → logprob: -7.367815017700195

Token 573: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2572545111179352
    2. ':
' → logprob: -1.5072544813156128
    3. '                       ' → logprob: -5.382254600524902
    4. '       ' → logprob: -8.882254600524902
    5. '<|end|>' → logprob: -9.382254600524902
    6. '   ' → logprob: -9.507254600524902
    7. '                   ' → logprob: -9.632254600524902
    8. '():
' → logprob: -9.882254600524902
    9. '):
' → logprob: -10.007254600524902
    10. ':
' → logprob: -10.132254600524902

Token 574: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.792354166507721
    2. ':
' → logprob: -1.1673541069030762
    3. ':' → logprob: -2.292354106903076
    4. ' cost' → logprob: -2.417354106903076
    5. '                   ' → logprob: -3.792354106903076
    6. '                           ' → logprob: -5.292354106903076
    7. '):
' → logprob: -5.542354106903076
    8. '                               ' → logprob: -5.792354106903076
    9. ' :
' → logprob: -6.417354106903076
    10. '                        
' → logprob: -6.542354106903076

Token 575: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.3931746184825897
    2. ' cost' → logprob: -1.143174648284912
    3. '   ' → logprob: -6.143174648284912
    4. '                           ' → logprob: -6.268174648284912
    5. ' if' → logprob: -7.143174648284912
    6. '                               ' → logprob: -8.018174171447754
    7. 'if' → logprob: -8.018174171447754
    8. '                       ' → logprob: -8.268174171447754
    9. '                   ' → logprob: -8.393174171447754
    10. '               ' → logprob: -9.518174171447754

Token 576: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -2.856408536899835e-05
    2. ' [' → logprob: -11.500028610229492
    3. '[' → logprob: -11.625028610229492
    4. ' =' → logprob: -12.750028610229492
    5. '[:]' → logprob: -13.000028610229492
    6. '=' → logprob: -13.375028610229492
    7. '=[' → logprob: -14.500028610229492
    8. '                       ' → logprob: -15.250028610229492
    9. '```' → logprob: -15.750028610229492
    10. '(key' → logprob: -15.875028610229492

Token 577: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05024413764476776
    2. ']+=' → logprob: -3.675244092941284
    3. ' ]' → logprob: -3.800244092941284
    4. ' +=' → logprob: -6.925244331359863
    5. ']=' → logprob: -8.550244331359863
    6. '=' → logprob: -10.050244331359863
    7. '+=' → logprob: -10.425244331359863
    8. ' =' → logprob: -11.050244331359863
    9. '[' → logprob: -11.550244331359863
    10. ')' → logprob: -12.300244331359863

Token 578: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.4418069124221802
    2. '=' → logprob: -1.9418069124221802
    3. ' =' → logprob: -2.0668067932128906
    4. '+=' → logprob: -2.4418067932128906
    5. ']+=' → logprob: -9.94180679321289
    6. ' ' → logprob: -11.19180679321289
    7. '   ' → logprob: -12.31680679321289
    8. '+' → logprob: -12.44180679321289
    9. ' -=' → logprob: -12.56680679321289
    10. ']' → logprob: -13.06680679321289

Token 579: ' stuck' (ID: 24327)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8397582769393921
    2. 'wf' → logprob: -1.339758276939392
    3. ' wf' → logprob: -2.0897583961486816
    4. ' ' → logprob: -2.7147583961486816
    5. 'st' → logprob: -2.8397583961486816
    6. ' stuck' → logprob: -4.214758396148682
    7. 'store' → logprob: -5.214758396148682
    8. '10' → logprob: -5.214758396148682
    9. 'inf' → logprob: -5.214758396148682
    10. 'dist' → logprob: -5.839758396148682

Token 580: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.00023977462842594832
    2. '_order' → logprob: -8.375239372253418
    3. ' _' → logprob: -12.625239372253418
    4. 'cost' → logprob: -13.375239372253418
    5. '_' → logprob: -13.500239372253418
    6. '_code' → logprob: -13.875239372253418
    7. '```' → logprob: -14.250239372253418
    8. '_count' → logprob: -15.250239372253418
    9. '1' → logprob: -15.375239372253418
    10. 'Cost' → logprob: -15.750239372253418

Token 581: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -1.981667537620524e-06
    2. '[' → logprob: -13.625001907348633
    3. 'key' → logprob: -14.625001907348633
    4. '(key' → logprob: -15.750001907348633
    5. ' [' → logprob: -16.250001907348633
    6. ' key' → logprob: -17.625001907348633
    7. '[
' → logprob: -18.000001907348633
    8. '```' → logprob: -18.000001907348633
    9. '	key' → logprob: -20.000001907348633
    10. '[k' → logprob: -20.125001907348633

Token 582: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 583: '                       ' (ID: 968)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4502551555633545
    2. '<|end|>' → logprob: -1.3252551555633545
    3. '                   ' → logprob: -3.4502551555633545
    4. ' 
' → logprob: -3.4502551555633545
    5. ' ' → logprob: -4.950255393981934
    6. '<|end|>' → logprob: -5.075255393981934
    7. '           ' → logprob: -5.950255393981934
    8. '                    
' → logprob: -5.950255393981934
    9. '    
' → logprob: -6.325255393981934
    10. '                        
' → logprob: -6.450255393981934

Token 584: ' stuck' (ID: 24327)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.6153973937034607
    2. ' stuck' → logprob: -0.8653973937034607
    3. '               ' → logprob: -3.9903974533081055
    4. '
' → logprob: -5.2403974533081055
    5. 'cost' → logprob: -5.3653974533081055
    6. ' cost' → logprob: -5.4903974533081055
    7. ' st' → logprob: -6.9903974533081055
    8. '                   ' → logprob: -7.2403974533081055
    9. 'store' → logprob: -7.3653974533081055
    10. '           ' → logprob: -7.3653974533081055

Token 585: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.01105442550033331
    2. '_order' → logprob: -4.511054515838623
    3. 'cost' → logprob: -12.511054039001465
    4. '_' → logprob: -13.636054039001465
    5. '_code' → logprob: -14.136054039001465
    6. '```' → logprob: -14.761054039001465
    7. ' _' → logprob: -16.01105499267578
    8. '_orders' → logprob: -16.13605499267578
    9. '[_' → logprob: -16.26105499267578
    10. 'Cost' → logprob: -17.01105499267578

Token 586: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -1.6240566083070007e-06
    2. '[' → logprob: -14.000001907348633
    3. ' [' → logprob: -15.125001907348633
    4. 'key' → logprob: -15.375001907348633
    5. ' key' → logprob: -16.375001907348633
    6. '(key' → logprob: -17.000001907348633
    7. '```' → logprob: -17.375001907348633
    8. '[]' → logprob: -18.000001907348633
    9. '=' → logprob: -18.125001907348633
    10. '[
' → logprob: -18.375001907348633

Token 587: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3535468280315399
    2. ']' → logprob: -1.6035468578338623
    3. '[key' → logprob: -2.7285468578338623
    4. ']=' → logprob: -3.8535468578338623
    5. ' =' → logprob: -4.603546619415283
    6. ' ]' → logprob: -10.103547096252441
    7. '[' → logprob: -11.353547096252441
    8. 'key' → logprob: -11.978547096252441
    9. '                   ' → logprob: -12.353547096252441
    10. '           ' → logprob: -12.603547096252441

Token 588: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003177952254191041
    2. ' =' → logprob: -5.753178119659424
    3. '*=' → logprob: -16.253177642822266
    4. '.=' → logprob: -17.378177642822266
    5. ' ' → logprob: -17.503177642822266
    6. '<|end|>' → logprob: -18.128177642822266
    7. ']=' → logprob: -18.253177642822266
    8. '=
' → logprob: -18.253177642822266
    9. ' *=' → logprob: -18.628177642822266
    10. '+=' → logprob: -18.753177642822266

Token 589: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006265374249778688
    2. ' ' → logprob: -7.375626564025879
    3. '   ' → logprob: -17.750625610351562
    4. '```' → logprob: -18.625625610351562
    5. '                   ' → logprob: -18.875625610351562
    6. ' ' → logprob: -19.000625610351562
    7. '  ' → logprob: -19.375625610351562
    8. '۰' → logprob: -19.750625610351562
    9. '                       ' → logprob: -20.063125610351562
    10. '00' → logprob: -20.813125610351562

Token 590: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '```' → logprob: -17.875139236450195
    4. '   ' → logprob: -18.625139236450195
    5. '۰' → logprob: -19.000139236450195
    6. '00' → logprob: -19.062639236450195
    7. '  ' → logprob: -19.125139236450195
    8. ' ' → logprob: -19.125139236450195
    9. '000' → logprob: -19.312639236450195
    10. '<|end|>' → logprob: -20.125139236450195

Token 591: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.580299973487854
    2. ' 
' → logprob: -1.205299973487854
    3. '<|end|>' → logprob: -2.4552998542785645
    4. ' ' → logprob: -4.0802998542785645
    5. '                    
' → logprob: -4.5802998542785645
    6. '  
' → logprob: -5.0802998542785645
    7. '                   ' → logprob: -5.2052998542785645
    8. '            
' → logprob: -6.0802998542785645
    9. '    
' → logprob: -6.2052998542785645
    10. '\n' → logprob: -6.5802998542785645

Token 592: '                   ' (ID: 699)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.6866750717163086
    2. '
' → logprob: -1.0616750717163086
    3. ' ' → logprob: -2.9366750717163086
    4. '                   ' → logprob: -3.6866750717163086
    5. '<|end|>' → logprob: -3.8116750717163086
    6. '                    
' → logprob: -4.061675071716309
    7. '  
' → logprob: -5.186675071716309
    8. '            
' → logprob: -5.811675071716309
    9. '\n' → logprob: -6.061675071716309
    10. '           ' → logprob: -6.186675071716309

Token 593: ' driver' (ID: 8931)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.0500205755233765
    2. '               ' → logprob: -2.300020694732666
    3. 'heading' → logprob: -2.675020694732666
    4. '           ' → logprob: -2.675020694732666
    5. 'd' → logprob: -2.925020694732666
    6. 'cost' → logprob: -2.925020694732666
    7. '
' → logprob: -3.175020694732666
    8. 'st' → logprob: -3.425020694732666
    9. 'order' → logprob: -3.425020694732666
    10. 'dist' → logprob: -4.050020694732666

Token 594: '_hold' (ID: 160928)
  Prédit: '_hold'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hold' → logprob: -1.282920129597187e-05
    2. '_' → logprob: -12.375012397766113
    3. 'hold' → logprob: -13.250012397766113
    4. '=' → logprob: -13.500012397766113
    5. '_cost' → logprob: -13.625012397766113
    6. '+=' → logprob: -14.375012397766113
    7. ' =' → logprob: -14.875012397766113
    8. ' _' → logprob: -15.375012397766113
    9. ' hold' → logprob: -15.500012397766113
    10. '_wait' → logprob: -15.500012397766113

Token 595: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6091893911361694
    2. ' =' → logprob: -1.2341893911361694
    3. '=' → logprob: -1.9841893911361694
    4. '+=' → logprob: -3.609189510345459
    5. ' |=' → logprob: -8.1091890335083
    6. ' -=' → logprob: -9.1091890335083
    7. ',' → logprob: -9.4841890335083
    8. ' ' → logprob: -10.4841890335083
    9. ' ,' → logprob: -11.9841890335083
    10. '<|end|>' → logprob: -11.9841890335083

Token 596: ' sum' (ID: 4215)
  Prédit: 'store'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'store' → logprob: -0.5191290378570557
    2. '0' → logprob: -1.0191290378570557
    3. ' store' → logprob: -3.6441290378570557
    4. ' ' → logprob: -4.644128799438477
    5. '1' → logprob: -5.269128799438477
    6. 'sum' → logprob: -6.894128799438477
    7. 'len' → logprob: -7.144128799438477
    8. 'max' → logprob: -7.769128799438477
    9. ' sum' → logprob: -8.644128799438477
    10. ' max' → logprob: -8.644128799438477

Token 597: '(cost' (ID: 133554)
  Prédit: '(cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cost' → logprob: -0.7689887285232544
    2. '(store' → logprob: -1.0189887285232544
    3. '(order' → logprob: -2.393988609313965
    4. '(st' → logprob: -2.643988609313965
    5. 'cost' → logprob: -4.893988609313965
    6. '(' → logprob: -6.518988609313965
    7. '([' → logprob: -6.643988609313965
    8. 'order' → logprob: -6.893988609313965
    9. '(stor' → logprob: -7.518988609313965
    10. 'store' → logprob: -7.643988609313965

Token 598: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005070687271654606
    2. '[key' → logprob: -5.630070686340332
    3. ')
' → logprob: -7.005070686340332
    4. '.values' → logprob: -7.755070686340332
    5. ' )' → logprob: -9.255070686340332
    6. ')-' → logprob: -11.255070686340332
    7. ')+' → logprob: -11.630070686340332
    8. ')#' → logprob: -12.505070686340332
    9. ')

' → logprob: -13.130070686340332
    10. '[:' → logprob: -13.880070686340332

Token 599: '                   ' (ID: 699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 600: ' stuck' (ID: 24327)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6343636512756348
    2. '           ' → logprob: -1.6343636512756348
    3. 'd' → logprob: -2.5093636512756348
    4. '
' → logprob: -3.5093636512756348
    5. ' dst' → logprob: -4.009363651275635
    6. ' if' → logprob: -4.009363651275635
    7. 'dst' → logprob: -4.009363651275635
    8. '               ' → logprob: -4.134363651275635
    9. 'destination' → logprob: -4.259363651275635
    10. ' next' → logprob: -4.384363651275635

Token 601: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -0.0008079635445028543
    2. '_cost' → logprob: -7.125807762145996
    3. '_' → logprob: -13.000807762145996
    4. '_orders' → logprob: -14.125807762145996
    5. 'order' → logprob: -15.875807762145996
    6. '_code' → logprob: -16.375808715820312
    7. '_answer' → logprob: -17.000808715820312
    8. 'cost' → logprob: -17.125808715820312
    9. 'Order' → logprob: -17.875808715820312
    10. '_command' → logprob: -17.875808715820312

Token 602: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4795340597629547
    2. '.clear' → logprob: -0.9795340299606323
    3. ' =' → logprob: -5.229534149169922
    4. 'clear' → logprob: -10.104534149169922
    5. '.=' → logprob: -10.354534149169922
    6. '.' → logprob: -11.729534149169922
    7. '.Clear' → logprob: -13.604534149169922
    8. '=set' → logprob: -13.979534149169922
    9. ' .' → logprob: -14.229534149169922
    10. '	clear' → logprob: -14.604534149169922

Token 603: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -7.576873758807778e-05
    2. ' set' → logprob: -9.500075340270996
    3. '{' → logprob: -14.750075340270996
    4. '{}' → logprob: -15.000075340270996
    5. '	set' → logprob: -17.625076293945312
    6. '=set' → logprob: -17.875076293945312
    7. ')set' → logprob: -19.000076293945312
    8. '(set' → logprob: -19.375076293945312
    9. ' ' → logprob: -20.000076293945312
    10. 'order' → logprob: -20.000076293945312

Token 604: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00408647395670414
    2. '()
' → logprob: -5.504086494445801
    3. '()

' → logprob: -12.2540864944458
    4. '()
' → logprob: -13.7540864944458
    5. '()\' → logprob: -13.7540864944458
    6. '()<' → logprob: -15.1290864944458
    7. '()</' → logprob: -15.3790864944458
    8. '()]' → logprob: -15.6290864944458
    9. '()}' → logprob: -16.004085540771484
    10. '(),' → logprob: -16.004085540771484

Token 605: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8847004771232605
    2. '           ' → logprob: -1.3847005367279053
    3. '
' → logprob: -2.0097005367279053
    4. '               ' → logprob: -3.2597005367279053
    5. '<|end|>' → logprob: -3.5097005367279053
    6. '                    
' → logprob: -3.7597005367279053
    7. ' 
' → logprob: -3.8847005367279053
    8. '            
' → logprob: -4.259700298309326
    9. '       ' → logprob: -4.384700298309326
    10. ' ' → logprob: -4.509700298309326

Token 606: ' store' (ID: 4897)
  Prédit: 'heading'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heading' → logprob: -0.8653736710548401
    2. '                   ' → logprob: -1.4903736114501953
    3. 'd' → logprob: -2.6153736114501953
    4. 'cost' → logprob: -3.1153736114501953
    5. 'dist' → logprob: -3.2403736114501953
    6. '           ' → logprob: -3.3653736114501953
    7. ' heading' → logprob: -3.3653736114501953
    8. '               ' → logprob: -3.4903736114501953
    9. 'if' → logprob: -4.240373611450195
    10. ' cost' → logprob: -4.865373611450195

Token 607: '_hold' (ID: 160928)
  Prédit: '_hold'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hold' → logprob: -0.00012082771718269214
    2. 'hold' → logprob: -9.125121116638184
    3. '_' → logprob: -12.750121116638184
    4. 'Hold' → logprob: -13.250121116638184
    5. ' hold' → logprob: -13.625121116638184
    6. '=' → logprob: -14.125121116638184
    7. '_continue' → logprob: -14.250121116638184
    8. '_keep' → logprob: -14.625121116638184
    9. '_h' → logprob: -14.750121116638184
    10. '_hide' → logprob: -15.000121116638184

Token 608: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2522420585155487
    2. ' =' → logprob: -1.502242088317871
    3. ' -=' → logprob: -8.377242088317871
    4. '-=' → logprob: -9.877242088317871
    5. ' +=' → logprob: -11.002242088317871
    6. '+=' → logprob: -11.752242088317871
    7. '==' → logprob: -12.627242088317871
    8. ' ' → logprob: -13.252242088317871
    9. '.=' → logprob: -14.877242088317871
    10. ',' → logprob: -15.127242088317871

Token 609: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014171505346894264
    2. ' ' → logprob: -4.264171600341797
    3. 'driver' → logprob: -12.389171600341797
    4. 'store' → logprob: -13.264171600341797
    5. ' driver' → logprob: -14.639171600341797
    6. ' store' → logprob: -15.201671600341797
    7. '   ' → logprob: -15.389171600341797
    8. '  ' → logprob: -15.576671600341797
    9. 'max' → logprob: -16.139171600341797
    10. '```' → logprob: -16.639171600341797

Token 610: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003837213444057852
    2. ' ' → logprob: -7.8753838539123535
    3. 'store' → logprob: -13.375383377075195
    4. 'driver' → logprob: -14.000383377075195
    5. 'max' → logprob: -15.250383377075195
    6. '   ' → logprob: -15.750383377075195
    7. '  ' → logprob: -15.875383377075195
    8. '```' → logprob: -16.250383377075195
    9. '1' → logprob: -17.062883377075195
    10. '-' → logprob: -17.437883377075195

Token 611: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.053092338144779205
    2. '<|end|>' → logprob: -3.4280922412872314
    3. ' 
' → logprob: -5.0530924797058105
    4. '
' → logprob: -6.0530924797058105
    5. '           ' → logprob: -6.3030924797058105
    6. '            
' → logprob: -6.8030924797058105
    7. '                   ' → logprob: -6.8030924797058105
    8. '

' → logprob: -7.1780924797058105
    9. '                    
' → logprob: -7.1780924797058105
    10. '\n' → logprob: -7.3030924797058105

Token 612: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5854353308677673
    2. '                   ' → logprob: -1.710435390472412
    3. '       ' → logprob: -2.710435390472412
    4. '               ' → logprob: -3.085435390472412
    5. ' if' → logprob: -3.335435390472412
    6. '
' → logprob: -3.460435390472412
    7. '            
' → logprob: -4.710435390472412
    8. ',' → logprob: -4.710435390472412
    9. ' 
' → logprob: -4.960435390472412
    10. 'if' → logprob: -5.085435390472412

Token 613: ' if' (ID: 538)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7269570827484131
    2. '           ' → logprob: -1.851957082748413
    3. ' if' → logprob: -1.976957082748413
    4. 'if' (adapté à ' if') → logprob: -2.726957082748413
    5. ' d' → logprob: -2.851957082748413
    6. ' next' → logprob: -4.351957321166992
    7. 'next' → logprob: -4.476957321166992
    8. '               ' → logprob: -4.851957321166992
    9. '                   ' → logprob: -4.851957321166992
    10. 'c' → logprob: -4.976957321166992

Token 614: ' heading' (ID: 23808)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'order' → logprob: -1.3918566703796387
    2. 'len' → logprob: -1.7668566703796387
    3. 'cost' → logprob: -1.7668566703796387
    4. ' len' → logprob: -2.5168566703796387
    5. 'driver' → logprob: -2.8918566703796387
    6. ' order' → logprob: -3.0168566703796387
    7. 'heading' → logprob: -3.1418566703796387
    8. ' cost' → logprob: -3.1418566703796387
    9. 'dist' → logprob: -3.5168566703796387
    10. 'store' → logprob: -3.8918566703796387

Token 615: ' in' (ID: 306)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2091967612504959
    2. ' !=' → logprob: -2.3341968059539795
    3. '==' → logprob: -2.5841968059539795
    4. ' <' → logprob: -5.2091965675354
    5. '!=' → logprob: -5.5841965675354
    6. ' >' → logprob: -5.8341965675354
    7. ':' → logprob: -6.9591965675354
    8. '   ' → logprob: -7.2091965675354
    9. '<|end|>' → logprob: -7.4591965675354
    10. ' >=' → logprob: -7.9591965675354

Token 616: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.04401279240846634
    2. 'next' → logprob: -3.6690127849578857
    3. ' order' → logprob: -4.919013023376465
    4. 'cost' → logprob: -4.919013023376465
    5. ' next' → logprob: -6.669013023376465
    6. 'st' → logprob: -6.794013023376465
    7. ' cost' → logprob: -8.419013023376465
    8. 'command' → logprob: -9.044013023376465
    9. 'wf' → logprob: -10.044013023376465
    10. 'range' → logprob: -10.044013023376465

Token 617: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013205531053245068
    2. ':
' → logprob: -4.388205528259277
    3. ' and' → logprob: -8.138205528259277
    4. '<|end|>' → logprob: -9.638205528259277
    5. '.' → logprob: -9.888205528259277
    6. '       ' → logprob: -10.013205528259277
    7. '           ' → logprob: -10.013205528259277
    8. '{' → logprob: -10.138205528259277
    9. ' :' → logprob: -10.388205528259277
    10. ':
' → logprob: -10.513205528259277

Token 618: ' heading' (ID: 23808)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.2747061252593994
    2. ' cost' → logprob: -1.8997061252593994
    3. 'order' → logprob: -3.3997061252593994
    4. 'dist' → logprob: -4.39970588684082
    5. '(cost' → logprob: -4.77470588684082
    6. ' order' → logprob: -4.77470588684082
    7. ' not' → logprob: -5.02470588684082
    8. ' dist' → logprob: -5.39970588684082
    9. 'driver' → logprob: -5.64970588684082
    10. 'not' → logprob: -5.89970588684082

Token 619: ' >' (ID: 1424)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.1882266402244568
    2. ':' → logprob: -2.5632266998291016
    3. 'not' → logprob: -3.4382266998291016
    4. ' !=' → logprob: -4.063226699829102
    5. ' ==' → logprob: -4.563226699829102
    6. ' in' → logprob: -4.688226699829102
    7. ':
' → logprob: -4.938226699829102
    8. ')' → logprob: -5.813226699829102
    9. '   ' → logprob: -6.063226699829102
    10. '==' → logprob: -6.063226699829102

Token 620: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06102057173848152
    2. ' ' → logprob: -3.186020612716675
    3. '=' → logprob: -4.061020374298096
    4. '-' → logprob: -7.811020374298096
    5. ' -' → logprob: -8.686020851135254
    6. '>' → logprob: -11.436020851135254
    7. ' =' → logprob: -12.311020851135254
    8. ')' → logprob: -12.436020851135254
    9. '1' → logprob: -12.436020851135254
    10. '  ' → logprob: -12.436020851135254

Token 621: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.45006635785102844
    2. '-' → logprob: -1.075066328048706
    3. '=' → logprob: -3.950066328048706
    4. '-V' → logprob: -7.075066566467285
    5. ' ' → logprob: -7.825066566467285
    6. ' -' → logprob: -7.825066566467285
    7. 'V' → logprob: -9.700066566467285
    8. '=-' → logprob: -9.950066566467285
    9. '1' → logprob: -10.700066566467285
    10. '```' → logprob: -11.700066566467285

Token 622: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06169179081916809
    2. ':
' → logprob: -3.1866917610168457
    3. ' and' → logprob: -4.061691761016846
    4. '               ' → logprob: -7.811691761016846
    5. '<|end|>' → logprob: -8.061692237854004
    6. '           ' → logprob: -8.936692237854004
    7. 'and' → logprob: -8.936692237854004
    8. ':

' → logprob: -9.936692237854004
    9. '<|end|>' → logprob: -9.936692237854004
    10. ',' → logprob: -9.936692237854004

Token 623: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8664796948432922
    2. ':' → logprob: -0.9914796948432922
    3. ':
' → logprob: -1.7414796352386475
    4. '<|end|>' → logprob: -4.241479873657227
    5. '           ' → logprob: -6.116479873657227
    6. ' :' → logprob: -6.241479873657227
    7. '                               ' → logprob: -6.616479873657227
    8. ')' → logprob: -6.616479873657227
    9. '   ' → logprob: -6.741479873657227
    10. '
' → logprob: -6.741479873657227

Token 624: ' order' (ID: 2569)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08780524134635925
    2. 'order' (adapté à ' order') → logprob: -3.0878052711486816
    3. ' order' → logprob: -3.7128052711486816
    4. '           ' → logprob: -6.087805271148682
    5. ' cost' → logprob: -6.087805271148682
    6. '   ' → logprob: -6.337805271148682
    7. 'cost' → logprob: -6.337805271148682
    8. '                   ' → logprob: -6.462805271148682
    9. 'command' → logprob: -6.587805271148682
    10. 'store' → logprob: -6.837805271148682

Token 625: ' -=' (ID: 12583)
  Prédit: '.remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remove' → logprob: -0.042985718697309494
    2. '-=' → logprob: -3.292985677719116
    3. ' -=' → logprob: -5.792985916137695
    4. '.dis' → logprob: -6.417985916137695
    5. 'remove' → logprob: -8.667985916137695
    6. '.' → logprob: -9.917985916137695
    7. 'discard' → logprob: -11.667985916137695
    8. '-' → logprob: -11.917985916137695
    9. '=' → logprob: -12.042985916137695
    10. '   ' → logprob: -12.917985916137695

Token 626: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -3.607391408877447e-05
    2. ' {' → logprob: -10.250036239624023
    3. '{s' → logprob: -14.250036239624023
    4. '{i' → logprob: -17.250036239624023
    5. '{sub' → logprob: -17.250036239624023
    6. '{return' → logprob: -17.500036239624023
    7. '{name' → logprob: -17.625036239624023
    8. ' ' → logprob: -18.125036239624023
    9. '{id' → logprob: -18.375036239624023
    10. '{x' → logprob: -18.500036239624023

Token 627: 'heading' (ID: 24070)
  Prédit: 'heading'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heading' → logprob: -7.465036105713807e-06
    2. ' heading' → logprob: -11.875007629394531
    3. '   ' → logprob: -15.250007629394531
    4. 'head' → logprob: -15.750007629394531
    5. '(' → logprob: -18.12500762939453
    6. 'Heading' → logprob: -18.87500762939453
    7. '.heading' → logprob: -18.87500762939453
    8. ' ' → logprob: -19.37500762939453
    9. 'headed' → logprob: -19.75000762939453
    10. '{' → logprob: -19.87500762939453

Token 628: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0682869404554367
    2. '}
' → logprob: -2.818286895751953
    3. ' }' → logprob: -5.693286895751953
    4. '               ' → logprob: -6.818286895751953
    5. '<|end|>' → logprob: -7.818286895751953
    6. ' }
' → logprob: -7.943286895751953
    7. '           ' → logprob: -8.193286895751953
    8. ',' → logprob: -8.443286895751953
    9. '                   ' → logprob: -8.818286895751953
    10. '}
' → logprob: -9.443286895751953

Token 629: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10768601298332214
    2. '
' → logprob: -2.3576860427856445
    3. '                   ' → logprob: -6.2326860427856445
    4. '           ' → logprob: -6.3576860427856445
    5. '                
' → logprob: -6.9826860427856445
    6. ',' → logprob: -7.3576860427856445
    7. '			' → logprob: -7.8576860427856445
    8. '<|end|>' → logprob: -7.9826860427856445
    9. '
' → logprob: -8.232686042785645
    10. ',
' → logprob: -8.357686042785645

Token 630: ' driver' (ID: 8931)
  Prédit: 'driver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'driver' (adapté à ' driver') → logprob: -0.4973045885562897
    2. 'cost' → logprob: -1.8723045587539673
    3. 'dist' → logprob: -1.9973045587539673
    4. ' driver' → logprob: -3.872304677963257
    5. '               ' → logprob: -3.997304677963257
    6. 'command' → logprob: -4.122304439544678
    7. ' cost' → logprob: -4.497304439544678
    8. 'final' → logprob: -4.747304439544678
    9. 'store' → logprob: -4.872304439544678
    10. ' dist' → logprob: -4.997304439544678

Token 631: '_hold' (ID: 160928)
  Prédit: '_hold'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hold' → logprob: -1.0206720617134124e-05
    2. '_cost' → logprob: -12.00001049041748
    3. 'hold' → logprob: -12.87501049041748
    4. '_' → logprob: -14.62501049041748
    5. ' _' → logprob: -15.87501049041748
    6. '   ' → logprob: -16.125009536743164
    7. '_hide' → logprob: -16.375009536743164
    8. 'Hold' → logprob: -16.625009536743164
    9. '```' → logprob: -16.875009536743164
    10. '_dist' → logprob: -17.000009536743164

Token 632: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.1505046784877777
    2. '-=' → logprob: -2.0255045890808105
    3. '=' → logprob: -5.0255045890808105
    4. ' =' → logprob: -7.2755045890808105
    5. '-' → logprob: -8.150505065917969
    6. '+=' → logprob: -9.400505065917969
    7. ' +=' → logprob: -9.400505065917969
    8. '   ' → logprob: -9.650505065917969
    9. ' -' → logprob: -11.775505065917969
    10. '    ' → logprob: -12.525505065917969

Token 633: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.10054448246955872
    2. ' cost' → logprob: -2.3505444526672363
    3. '1' → logprob: -8.100544929504395
    4. '(cost' → logprob: -10.600544929504395
    5. ' ' → logprob: -12.100544929504395
    6. 'dist' → logprob: -13.975544929504395
    7. 'store' → logprob: -15.100544929504395
    8. '   ' → logprob: -15.350544929504395
    9. '(' → logprob: -15.475544929504395
    10. ' ' → logprob: -15.600544929504395

Token 634: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.512236498361744e-07
    2. ' [' → logprob: -14.750000953674316
    3. '[key' → logprob: -16.625
    4. '[token' → logprob: -18.125
    5. 'heading' → logprob: -18.25
    6. '[assembly' → logprob: -18.375
    7. '[href' → logprob: -18.875
    8. '[action' → logprob: -19.375
    9. '	' → logprob: -19.875
    10. '[position' → logprob: -20.25

Token 635: 'heading' (ID: 24070)
  Prédit: 'heading'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heading' → logprob: -0.0002619318547658622
    2. ' heading' → logprob: -8.250262260437012
    3. '[' → logprob: -15.000262260437012
    4. '   ' → logprob: -16.250261306762695
    5. 'head' → logprob: -16.625261306762695
    6. '.heading' → logprob: -17.250261306762695
    7. '-heading' → logprob: -17.750261306762695
    8. 'Heading' → logprob: -18.375261306762695
    9. '_heading' → logprob: -18.500261306762695
    10. ' ' → logprob: -19.375261306762695

Token 636: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01840182952582836
    2. '[' → logprob: -4.393401622772217
    3. ']
' → logprob: -5.268401622772217
    4. ' ]' → logprob: -7.518401622772217
    5. '[
' → logprob: -10.643402099609375
    6. '<|end|>' → logprob: -10.643402099609375
    7. '           ' → logprob: -10.893402099609375
    8. '               ' → logprob: -11.018402099609375
    9. ']+' → logprob: -11.018402099609375
    10. '[token' → logprob: -11.143402099609375

Token 637: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005718077998608351
    2. '           ' → logprob: -5.255718231201172
    3. '
' → logprob: -8.755718231201172
    4. '       ' → logprob: -9.505718231201172
    5. '                   ' → logprob: -10.130718231201172
    6. ' he' → logprob: -10.505718231201172
    7. 'distance' → logprob: -10.755718231201172
    8. '              ' → logprob: -11.005718231201172
    9. 'dist' → logprob: -11.005718231201172
    10. ',' → logprob: -11.380718231201172

Token 638: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.39458194375038147
    2. 'command' → logprob: -2.1445820331573486
    3. '               ' → logprob: -2.2695820331573486
    4. ' cost' → logprob: -2.8945820331573486
    5. 'heading' → logprob: -3.6445820331573486
    6. 'dist' → logprob: -4.5195817947387695
    7. ' command' → logprob: -5.0195817947387695
    8. '           ' → logprob: -6.5195817947387695
    9. ' heading' → logprob: -6.8945817947387695
    10. 'final' → logprob: -7.3945817947387695

Token 639: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.2200749754119897e-06
    2. ' [' → logprob: -13.625001907348633
    3. '=' → logprob: -14.875001907348633
    4. ' =' → logprob: -15.375001907348633
    5. '```' → logprob: -16.500001907348633
    6. '=[' → logprob: -17.000001907348633
    7. '[:]' → logprob: -17.125001907348633
    8. '	' → logprob: -17.250001907348633
    9. '[line' → logprob: -17.375001907348633
    10. '[...]' → logprob: -17.500001907348633

Token 640: 'heading' (ID: 24070)
  Prédit: 'heading'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heading' → logprob: -0.00015205175441224128
    2. '[' → logprob: -9.375151634216309
    3. ' heading' → logprob: -9.625151634216309
    4. '.heading' → logprob: -15.000151634216309
    5. '           ' → logprob: -15.125151634216309
    6. '   ' → logprob: -15.375151634216309
    7. '_heading' → logprob: -15.750151634216309
    8. '-heading' → logprob: -16.625152587890625
    9. ' ' → logprob: -17.375152587890625
    10. ' [' → logprob: -17.500152587890625

Token 641: ']' (ID: 60)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4070899188518524
    2. ']' → logprob: -1.1570899486541748
    3. ']=' → logprob: -4.157089710235596
    4. '][' → logprob: -5.907089710235596
    5. '=' → logprob: -6.532089710235596
    6. ' =' → logprob: -9.782090187072754
    7. ' [' → logprob: -9.907090187072754
    8. '   ' → logprob: -11.157090187072754
    9. ' ]' → logprob: -11.157090187072754
    10. ']+=' → logprob: -11.782090187072754

Token 642: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018169255927205086
    2. ' =' → logprob: -4.018169403076172
    3. '+=' → logprob: -11.893169403076172
    4. '[' → logprob: -12.143169403076172
    5. ' +=' → logprob: -12.393169403076172
    6. '-=' → logprob: -13.643169403076172
    7. ' -=' → logprob: -14.018169403076172
    8. '*=' → logprob: -14.643169403076172
    9. ' ' → logprob: -15.018169403076172
    10. '.=' → logprob: -16.143169403076172

Token 643: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004311460361350328
    2. ' ' → logprob: -7.750431060791016
    3. '1' → logprob: -16.125431060791016
    4. ' -' → logprob: -16.125431060791016
    5. '-' → logprob: -16.687931060791016
    6. '   ' → logprob: -17.062931060791016
    7. '۰' → logprob: -17.375431060791016
    8. ' ' → logprob: -17.750431060791016
    9. '  ' → logprob: -17.812931060791016
    10. '```' → logprob: -18.000431060791016

Token 644: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.755678961984813e-05
    2. ' ' → logprob: -9.500077247619629
    3. '-' → logprob: -14.062577247619629
    4. '1' → logprob: -14.937577247619629
    5. ' -' → logprob: -15.312577247619629
    6. 's' → logprob: -15.750077247619629
    7. '   ' → logprob: -15.937577247619629
    8. '۰' → logprob: -16.000078201293945
    9. '```' → logprob: -16.125078201293945
    10. '  ' → logprob: -16.500078201293945

Token 645: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 646: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 647: ' current' (ID: 2208)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9106318950653076
    2. 'next' → logprob: -1.2856318950653076
    3. 'if' → logprob: -1.9106318950653076
    4. 'd' → logprob: -2.4106318950653076
    5. 'dist' → logprob: -4.035632133483887
    6. 'dst' → logprob: -4.160632133483887
    7. 'dest' → logprob: -4.910632133483887
    8. 'n' → logprob: -5.160632133483887
    9. '   ' → logprob: -5.285632133483887
    10. ' if' → logprob: -5.535632133483887

Token 648: '_id' (ID: 1537)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.502830445766449
    2. '_' → logprob: -2.0028305053710938
    3. '_heading' → logprob: -2.1278305053710938
    4. '=' → logprob: -2.8778305053710938
    5. '_pos' → logprob: -3.6278305053710938
    6. '_location' → logprob: -4.877830505371094
    7. '_position' → logprob: -5.002830505371094
    8. '_space' → logprob: -5.252830505371094
    9. '_dist' → logprob: -5.377830505371094
    10. ' +=' → logprob: -5.377830505371094

Token 649: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08146020025014877
    2. '=' → logprob: -2.9564602375030518
    3. ' +=' → logprob: -4.206459999084473
    4. ',' → logprob: -4.706459999084473
    5. ' ' → logprob: -7.206459999084473
    6. '+=' → logprob: -7.331459999084473
    7. '<|end|>' → logprob: -8.206459999084473
    8. ')' → logprob: -8.581459999084473
    9. ' ,' → logprob: -9.206459999084473
    10. ' ==' → logprob: -9.831459999084473

Token 650: ' heading' (ID: 23808)
  Prédit: 'heading'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heading' → logprob: -0.10552138835191727
    2. 'next' → logprob: -3.2305214405059814
    3. 'dec' → logprob: -3.6055214405059814
    4. '0' → logprob: -4.105521202087402
    5. ' heading' → logprob: -4.355521202087402
    6. ' next' → logprob: -6.105521202087402
    7. 'head' → logprob: -7.230521202087402
    8. ' ' → logprob: -7.355521202087402
    9. 'decision' → logprob: -8.730521202087402
    10. '   ' → logprob: -9.355521202087402

Token 651: '
' (ID: 198)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.161641001701355
    2. '+' → logprob: -1.786641001701355
    3. '
' → logprob: -1.911641001701355
    4. '<|end|>' → logprob: -1.911641001701355
    5. ' =' → logprob: -2.7866411209106445
    6. '           ' → logprob: -3.4116411209106445
    7. '<|end|>' → logprob: -3.9116411209106445
    8. ' 
' → logprob: -4.0366411209106445
    9. '   ' → logprob: -4.1616411209106445
    10. '=' → logprob: -4.4116411209106445

Token 652: '           ' (ID: 352)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.9229482412338257
    2. ' if' → logprob: -1.6729482412338257
    3. '
' → logprob: -1.9229482412338257
    4. '       ' → logprob: -2.1729483604431152
    5. '           ' → logprob: -3.1729483604431152
    6. 'next' → logprob: -3.1729483604431152
    7. '   ' → logprob: -3.4229483604431152
    8. ' 
' → logprob: -4.672948360443115
    9. 'if' → logprob: -4.797948360443115
    10. '    
' → logprob: -5.547948360443115

Token 653: ' if' (ID: 538)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6527390480041504
    2. 'next' → logprob: -1.4027390480041504
    3. 'if' (adapté à ' if') → logprob: -2.2777390480041504
    4. '           ' → logprob: -2.6527390480041504
    5. 'dst' → logprob: -3.6527390480041504
    6. 'dest' → logprob: -5.15273904800415
    7. 'destination' → logprob: -5.27773904800415
    8. 'best' → logprob: -5.65273904800415
    9. '(next' → logprob: -5.90273904800415
    10. 'target' → logprob: -6.40273904800415

Token 654: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.45258498191833496
    2. 'order' → logprob: -1.577584981918335
    3. ' len' → logprob: -2.202584981918335
    4. ' order' → logprob: -4.327585220336914
    5. 'driver' → logprob: -4.577585220336914
    6. 'cost' → logprob: -4.577585220336914
    7. 'store' → logprob: -5.327585220336914
    8. ' not' → logprob: -5.952585220336914
    9. 'not' → logprob: -6.327585220336914
    10. ' cost' → logprob: -6.827585220336914

Token 655: '(order' (ID: 33050)
  Prédit: '(order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(order' → logprob: -0.006832113955169916
    2. 'order' → logprob: -5.006832122802734
    3. '(command' → logprob: -9.756832122802734
    4. '(cost' → logprob: -10.131832122802734
    5. 'cost' → logprob: -12.256832122802734
    6. ' (' → logprob: -12.381832122802734
    7. ' order' → logprob: -12.381832122802734
    8. '(' → logprob: -12.756832122802734
    9. 'command' → logprob: -13.631832122802734
    10. '	order' → logprob: -14.881832122802734

Token 656: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05666406825184822
    2. ' ==' → logprob: -3.431663990020752
    3. ' >' → logprob: -4.806663990020752
    4. ')>' → logprob: -4.806663990020752
    5. ')==' → logprob: -6.181663990020752
    6. '==' → logprob: -6.306663990020752
    7. '>' → logprob: -6.556663990020752
    8. ' )' → logprob: -7.181663990020752
    9. '):' → logprob: -9.18166446685791
    10. ':' → logprob: -9.68166446685791

Token 657: ' >' (ID: 1424)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1476266086101532
    2. ' >' → logprob: -2.6476266384124756
    3. '==' → logprob: -2.8976266384124756
    4. '>' → logprob: -4.5226263999938965
    5. ':' → logprob: -8.272626876831055
    6. ')' → logprob: -9.772626876831055
    7. '<|end|>' → logprob: -11.022626876831055
    8. ')==' → logprob: -11.522626876831055
    9. '()>' → logprob: -11.522626876831055
    10. '()==' → logprob: -11.647626876831055

Token 658: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005935082212090492
    2. ' ' → logprob: -5.130935192108154
    3. '1' → logprob: -12.755934715270996
    4. '   ' → logprob: -13.255934715270996
    5. '=' → logprob: -14.380934715270996
    6. '  ' → logprob: -14.630934715270996
    7. '```' → logprob: -15.380934715270996
    8. '>' → logprob: -15.755934715270996
    9. '       ' → logprob: -16.380935668945312
    10. '           ' → logprob: -16.380935668945312

Token 659: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015062900492921472
    2. ' ' → logprob: -6.501506328582764
    3. '1' → logprob: -12.876505851745605
    4. '   ' → logprob: -14.626505851745605
    5. '  ' → logprob: -15.689005851745605
    6. '=' → logprob: -15.876505851745605
    7. '>' → logprob: -16.001506805419922
    8. '```' → logprob: -16.189006805419922
    9. '    ' → logprob: -16.626506805419922
    10. '
' → logprob: -16.626506805419922

Token 660: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3927246928215027
    2. ':' → logprob: -1.1427247524261475
    3. ' and' → logprob: -5.392724514007568
    4. '):
' → logprob: -7.392724514007568
    5. ',' → logprob: -8.392724990844727
    6. '       ' → logprob: -8.892724990844727
    7. '           ' → logprob: -9.517724990844727
    8. '               ' → logprob: -10.142724990844727
    9. ':

' → logprob: -10.517724990844727
    10. ' :
' → logprob: -10.517724990844727

Token 661: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.2589010000228882
    2. '       ' → logprob: -1.5089010000228882
    3. ' next' → logprob: -1.6339010000228882
    4. '
' → logprob: -2.5089011192321777
    5. '           ' → logprob: -2.7589011192321777
    6. ',' → logprob: -3.0089011192321777
    7. ' d' → logprob: -3.1339011192321777
    8. 'next' → logprob: -4.383901119232178
    9. '        
' → logprob: -4.633901119232178
    10. '<|end|>' → logprob: -4.633901119232178

Token 662: ' if' (ID: 538)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5424373149871826
    2. '               ' → logprob: -1.4174373149871826
    3. 'next' → logprob: -2.2924373149871826
    4. 'dst' → logprob: -3.5424373149871826
    5. '           ' → logprob: -4.042437553405762
    6. '   ' → logprob: -4.542437553405762
    7. 'dest' → logprob: -6.042437553405762
    8. 'heading' → logprob: -6.167437553405762
    9. 'destination' → logprob: -6.167437553405762
    10. '       ' → logprob: -6.417437553405762

Token 663: ' current' (ID: 2208)
  Prédit: 'heading'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heading' → logprob: -1.1813104152679443
    2. 'len' → logprob: -1.8063104152679443
    3. 'current' → logprob: -1.8063104152679443
    4. 'cost' → logprob: -1.9313104152679443
    5. 'order' → logprob: -3.4313104152679443
    6. 'driver' → logprob: -3.4313104152679443
    7. ' current' → logprob: -3.8063104152679443
    8. 'command' → logprob: -4.056310653686523
    9. ' len' → logprob: -4.056310653686523
    10. ' heading' → logprob: -4.056310653686523

Token 664: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.003884511534124613
    2. '+' → logprob: -6.878884315490723
    3. ' in' → logprob: -7.753884315490723
    4. ')' → logprob: -7.753884315490723
    5. '_' → logprob: -8.003884315490723
    6. '   ' → logprob: -8.003884315490723
    7. ' +' → logprob: -8.128884315490723
    8. ' ' → logprob: -8.878884315490723
    9. 'in' → logprob: -9.003884315490723
    10. '!=' → logprob: -9.003884315490723

Token 665: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.41694581508636475
    2. '!=' → logprob: -1.7919458150863647
    3. ' not' → logprob: -2.1669459342956543
    4. ' ==' → logprob: -3.5419459342956543
    5. '==' → logprob: -4.041945934295654
    6. ' in' → logprob: -4.541945934295654
    7. 'not' → logprob: -6.291945934295654
    8. 'in' → logprob: -7.791945934295654
    9. '   ' → logprob: -8.791945457458496
    10. ' ' → logprob: -10.416945457458496

Token 666: ' final' (ID: 1721)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020194975659251213
    2. ' ' → logprob: -4.020195007324219
    3. '-' → logprob: -6.895195007324219
    4. 'heading' → logprob: -7.520195007324219
    5. 'max' → logprob: -8.270195007324219
    6. ' -' → logprob: -9.520195007324219
    7. '   ' → logprob: -9.895195007324219
    8. 'min' → logprob: -10.770195007324219
    9. 'head' → logprob: -11.145195007324219
    10. 'order' → logprob: -11.395195007324219

Token 667: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.010268784128129482
    2. '_id' → logprob: -5.760268688201904
    3. '_' → logprob: -6.260268688201904
    4. '_dst' → logprob: -6.260268688201904
    5. '_dest' → logprob: -6.760268688201904
    6. 'dist' → logprob: -7.010268688201904
    7. ' ' → logprob: -8.885269165039062
    8. '   ' → logprob: -8.885269165039062
    9. '```' → logprob: -9.010269165039062
    10. '0' → logprob: -9.510269165039062

Token 668: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.21073023974895477
    2. ':' → logprob: -2.0857303142547607
    3. ' and' → logprob: -3.0857303142547607
    4. ' or' → logprob: -4.585730075836182
    5. '                   ' → logprob: -5.210730075836182
    6. 'and' → logprob: -6.335730075836182
    7. '               ' → logprob: -6.710730075836182
    8. '           ' → logprob: -7.835730075836182
    9. '   ' → logprob: -8.33573055267334
    10. ' :
' → logprob: -8.46073055267334

Token 669: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.013127529993653297
    2. '               ' → logprob: -5.638127326965332
    3. '                       ' → logprob: -5.763127326965332
    4. ':
' → logprob: -6.638127326965332
    5. '<|end|>' → logprob: -7.138127326965332
    6. '                    
' → logprob: -7.263127326965332
    7. '                           ' → logprob: -7.388127326965332
    8. ':' → logprob: -7.638127326965332
    9. ' =' → logprob: -7.638127326965332
    10. '
' → logprob: -8.138127326965332

Token 670: ' final' (ID: 1721)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5610908269882202
    2. 'final' (adapté à ' final') → logprob: -1.0610908269882202
    3. 'd' → logprob: -3.5610909461975098
    4. 'next' → logprob: -4.56109094619751
    5. '               ' → logprob: -4.68609094619751
    6. ' final' → logprob: -4.81109094619751
    7. '(final' → logprob: -5.43609094619751
    8. 'current' → logprob: -5.56109094619751
    9. 'dist' → logprob: -5.93609094619751
    10. 'dst' → logprob: -5.93609094619751

Token 671: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.004787645768374205
    2. ' =' → logprob: -6.629787445068359
    3. 'dist' → logprob: -6.629787445068359
    4. '_cost' → logprob: -7.254787445068359
    5. '_dest' → logprob: -7.754787445068359
    6. '=' → logprob: -8.50478744506836
    7. '_dst' → logprob: -8.87978744506836
    8. '_id' → logprob: -9.25478744506836
    9. ' +=' → logprob: -9.37978744506836
    10. '_distance' → logprob: -9.62978744506836

Token 672: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.33505749702453613
    2. ' =' → logprob: -1.4600574970245361
    3. ' +=' → logprob: -3.585057497024536
    4. '+=' → logprob: -3.710057497024536
    5. ',' → logprob: -8.585057258605957
    6. '+' → logprob: -10.835057258605957
    7. '   ' → logprob: -11.210057258605957
    8. ' ' → logprob: -11.460057258605957
    9. ')' → logprob: -11.835057258605957
    10. ' +' → logprob: -12.210057258605957

Token 673: ' max' (ID: 2999)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.4393775165081024
    2. 'heading' → logprob: -1.0643775463104248
    3. ' heading' → logprob: -5.189377307891846
    4. ' dist' → logprob: -5.814377307891846
    5. 'cost' → logprob: -7.314377307891846
    6. 'command' → logprob: -7.814377307891846
    7. 'next' → logprob: -8.189377784729004
    8. '=' → logprob: -8.939377784729004
    9. '_' → logprob: -9.439377784729004
    10. 'head' → logprob: -9.564377784729004

Token 674: '_hold' (ID: 160928)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.8054296374320984
    2. 'cost' → logprob: -1.1804296970367432
    3. '_key' → logprob: -2.430429697036743
    4. '_dst' → logprob: -2.555429697036743
    5. ' =' → logprob: -3.305429697036743
    6. '=' → logprob: -4.055429458618164
    7. 'key' → logprob: -5.055429458618164
    8. '_c' → logprob: -5.555429458618164
    9. '_token' → logprob: -5.805429458618164
    10. 'dst' → logprob: -5.930429458618164

Token 675: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6326433420181274
    2. '=' → logprob: -0.7576433420181274
    3. ',' → logprob: -10.507643699645996
    4. '<|end|>' → logprob: -12.007643699645996
    5. ' ' → logprob: -12.882643699645996
    6. '   ' → logprob: -13.257643699645996
    7. ')' → logprob: -13.882643699645996
    8. 'token' → logprob: -14.132643699645996
    9. '  ' → logprob: -14.757643699645996
    10. ')=' → logprob: -14.882643699645996

Token 676: ' decide' (ID: 13001)
  Prédit: 'dec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dec' → logprob: -0.007897029630839825
    2. ' decide' → logprob: -5.007896900177002
    3. '   ' → logprob: -6.882896900177002
    4. '  ' → logprob: -9.88289737701416
    5. '    ' → logprob: -10.38289737701416
    6. ' dec' → logprob: -10.63289737701416
    7. '      ' → logprob: -11.63289737701416
    8. '     ' → logprob: -11.63289737701416
    9. '       ' → logprob: -11.75789737701416
    10. ' ' → logprob: -12.13289737701416

Token 677: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.0001698094274615869
    2. 'next' → logprob: -8.75016975402832
    3. 'order' → logprob: -12.12516975402832
    4. '_dst' → logprob: -13.00016975402832
    5. '_order' → logprob: -13.50016975402832
    6. 'cost' → logprob: -14.25016975402832
    7. 'Next' → logprob: -14.50016975402832
    8. 'dst' → logprob: -14.62516975402832
    9. '```' → logprob: -15.50016975402832
    10. '_NEXT' → logprob: -16.25016975402832

Token 678: '_dst' (ID: 79776)
  Prédit: '_dst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dst' → logprob: -0.004081724211573601
    2. 'dst' → logprob: -5.504081726074219
    3. '(dst' → logprob: -13.129081726074219
    4. '	dst' → logprob: -14.504081726074219
    5. ' dst' → logprob: -15.629081726074219
    6. '```' → logprob: -15.754081726074219
    7. '.dst' → logprob: -15.879081726074219
    8. 'Dst' → logprob: -16.25408172607422
    9. 'cost' → logprob: -16.62908172607422
    10. '_DST' → logprob: -16.87908172607422

Token 679: '(cost' (ID: 133554)
  Prédit: '(cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cost' → logprob: -0.00018923594325315207
    2. '(order' → logprob: -8.750188827514648
    3. 'cost' → logprob: -11.625188827514648
    4. '(distance' → logprob: -11.875188827514648
    5. '(dist' → logprob: -12.250188827514648
    6. '(st' → logprob: -12.375188827514648
    7. '(' → logprob: -13.125188827514648
    8. ' (' → logprob: -13.500188827514648
    9. '(store' → logprob: -14.125188827514648
    10. '(edge' → logprob: -15.250188827514648

Token 680: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0206413883715868
    2. '(order' → logprob: -3.895641326904297
    3. 'order' → logprob: -10.020641326904297
    4. ' ,' → logprob: -11.145641326904297
    5. ',(' → logprob: -11.270641326904297
    6. ',
' → logprob: -12.020641326904297
    7. '               ' → logprob: -12.520641326904297
    8. ')' → logprob: -13.145641326904297
    9. '                   ' → logprob: -13.145641326904297
    10. ',[' → logprob: -13.145641326904297

Token 681: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.0002120038407156244
    2. ' order' → logprob: -8.500211715698242
    3. 'list' → logprob: -12.250211715698242
    4. '[' → logprob: -13.125211715698242
    5. '(order' → logprob: -14.875211715698242
    6. 'range' → logprob: -15.000211715698242
    7. '   ' → logprob: -15.250211715698242
    8. '	order' → logprob: -15.375211715698242
    9. '{' → logprob: -15.625211715698242
    10. 'cost' → logprob: -16.375211715698242

Token 682: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005822144914418459
    2. ')
' → logprob: -5.25582218170166
    3. '               ' → logprob: -7.50582218170166
    4. '                   ' → logprob: -10.75582218170166
    5. ')
' → logprob: -12.13082218170166
    6. ' )' → logprob: -12.75582218170166
    7. '[' → logprob: -13.00582218170166
    8. '                       ' → logprob: -13.50582218170166
    9. '           ' → logprob: -14.00582218170166
    10. '   ' → logprob: -14.50582218170166

Token 683: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.10883518308401108
    2. '               ' → logprob: -2.608835220336914
    3. '
' → logprob: -4.608835220336914
    4. '<|end|>' → logprob: -4.608835220336914
    5. '                    
' → logprob: -6.233835220336914
    6. '           ' → logprob: -6.233835220336914
    7. '                       ' → logprob: -6.733835220336914
    8. '       ' → logprob: -7.233835220336914
    9. '<|end|>' → logprob: -7.983835220336914
    10. ')' → logprob: -8.108835220336914

Token 684: ' if' (ID: 538)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.3630615472793579
    2. '                   ' → logprob: -1.613061547279358
    3. '               ' → logprob: -2.8630614280700684
    4. 'heading' → logprob: -3.2380614280700684
    5. 'if' (adapté à ' if') → logprob: -5.613061428070068
    6. '           ' → logprob: -6.113061428070068
    7. '
' → logprob: -6.488061428070068
    8. 'command' → logprob: -8.363061904907227
    9. ' dist' → logprob: -8.488061904907227
    10. '                       ' → logprob: -8.738061904907227

Token 685: ' driver' (ID: 8931)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.5969243049621582
    2. 'max' → logprob: -0.9719243049621582
    3. ' max' → logprob: -3.596924304962158
    4. ' final' → logprob: -3.596924304962158
    5. 'cost' → logprob: -5.346924304962158
    6. 'current' → logprob: -5.471924304962158
    7. 'dist' → logprob: -5.721924304962158
    8. '(max' → logprob: -7.221924304962158
    9. '(final' → logprob: -7.221924304962158
    10. ' current' → logprob: -7.971924304962158

Token 686: '_hold' (ID: 160928)
  Prédit: '_hold'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hold' → logprob: -2.2246291337069124e-05
    2. 'hold' → logprob: -11.000021934509277
    3. '>' → logprob: -13.125021934509277
    4. '   ' → logprob: -14.500021934509277
    5. '```' → logprob: -14.875021934509277
    6. 'Hold' → logprob: -14.875021934509277
    7. '_have' → logprob: -15.625021934509277
    8. '_id' → logprob: -15.875021934509277
    9. '_holder' → logprob: -16.250022888183594
    10. '_' → logprob: -16.250022888183594

Token 687: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5335983633995056
    2. '>' → logprob: -1.2835984230041504
    3. ' ==' → logprob: -2.4085984230041504
    4. '==' → logprob: -3.4085984230041504
    5. ' -' → logprob: -5.03359842300415
    6. ' <=' → logprob: -6.40859842300415
    7. ' <' → logprob: -6.40859842300415
    8. '-' → logprob: -6.90859842300415
    9. '   ' → logprob: -7.15859842300415
    10. ' >=' → logprob: -7.53359842300415

Token 688: ' store' (ID: 4897)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.09809362888336182
    2. ' max' → logprob: -2.7230935096740723
    3. 'cost' → logprob: -4.098093509674072
    4. '0' → logprob: -6.098093509674072
    5. ' ' → logprob: -6.098093509674072
    6. ' cost' → logprob: -6.598093509674072
    7. 'final' → logprob: -6.598093509674072
    8. 'store' → logprob: -6.973093509674072
    9. '1' → logprob: -7.098093509674072
    10. '100' → logprob: -7.098093509674072

Token 689: '_hold' (ID: 160928)
  Prédit: '_hold'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hold' → logprob: -0.0009309909655712545
    2. 'hold' → logprob: -7.0009307861328125
    3. '_keep' → logprob: -12.875930786132812
    4. '   ' → logprob: -12.875930786132812
    5. '_order' → logprob: -13.375930786132812
    6. ' ' → logprob: -13.625930786132812
    7. '-' → logprob: -13.875930786132812
    8. '_' → logprob: -14.000930786132812
    9. '>' → logprob: -14.500930786132812
    10. '```' → logprob: -14.500930786132812

Token 690: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.67998868227005
    2. ' or' → logprob: -1.5549886226654053
    3. ':
' → logprob: -1.8049886226654053
    4. ' and' → logprob: -2.6799886226654053
    5. '                       ' → logprob: -3.1799886226654053
    6. '                   ' → logprob: -5.179988861083984
    7. '                           ' → logprob: -7.429988861083984
    8. '               ' → logprob: -7.554988861083984
    9. 'and' → logprob: -8.804988861083984
    10. ' :' → logprob: -9.054988861083984

Token 691: ' current' (ID: 2208)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.8784568309783936
    2. 'final' → logprob: -1.5034568309783936
    3. ' max' → logprob: -1.7534568309783936
    4. ' final' → logprob: -2.5034568309783936
    5. 'cost' → logprob: -3.2534568309783936
    6. 'store' → logprob: -4.628457069396973
    7. ' cost' → logprob: -4.753457069396973
    8. 'order' → logprob: -4.878457069396973
    9. 'len' → logprob: -5.253457069396973
    10. '(max' → logprob: -5.253457069396973

Token 692: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.2904307544231415
    2. '_hold' → logprob: -1.7904307842254639
    3. '_dist' → logprob: -2.790430784225464
    4. 'hold' → logprob: -4.790430545806885
    5. 'final' → logprob: -5.165430545806885
    6. '_cost' → logprob: -5.665430545806885
    7. '_dst' → logprob: -6.540430545806885
    8. '_final' → logprob: -6.915430545806885
    9. 'dist' → logprob: -7.540430545806885
    10. '_d' → logprob: -7.790430545806885

Token 693: ' >' (ID: 1424)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.18644091486930847
    2. '!=' → logprob: -1.9364409446716309
    3. '==' → logprob: -4.311440944671631
    4. ' ==' → logprob: -4.561440944671631
    5. ' not' → logprob: -7.561440944671631
    6. '+' → logprob: -7.561440944671631
    7. ' <' → logprob: -8.061440467834473
    8. ' in' → logprob: -8.436440467834473
    9. ' +' → logprob: -8.936440467834473
    10. ' ' → logprob: -9.311440467834473

Token 694: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14997383952140808
    2. ' ' → logprob: -2.2749738693237305
    3. '-' → logprob: -4.2749738693237305
    4. ' final' → logprob: -4.7749738693237305
    5. '=' → logprob: -4.8999738693237305
    6. 'final' → logprob: -5.7749738693237305
    7. ' -' → logprob: -6.0249738693237305
    8. ' max' → logprob: -7.3999738693237305
    9. 'max' → logprob: -8.14997386932373
    10. '  ' → logprob: -9.39997386932373

Token 695: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12592466175556183
    2. '-' → logprob: -2.375924587249756
    3. ' ' → logprob: -4.125924587249756
    4. 'final' → logprob: -5.500924587249756
    5. '=' → logprob: -5.625924587249756
    6. ' -' → logprob: -7.125924587249756
    7. ' final' → logprob: -8.000925064086914
    8. 'max' → logprob: -8.375925064086914
    9. '  ' → logprob: -10.375925064086914
    10. '-final' → logprob: -10.750925064086914

Token 696: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9914237856864929
    2. ':
' → logprob: -0.9914237856864929
    3. ' and' → logprob: -1.3664238452911377
    4. '                       ' → logprob: -6.866423606872559
    5. 'and' → logprob: -7.116423606872559
    6. ' or' → logprob: -7.866423606872559
    7. '                   ' → logprob: -8.116423606872559
    8. ',' → logprob: -9.241423606872559
    9. ' :
' → logprob: -9.866423606872559
    10. ' :' → logprob: -10.116423606872559

Token 697: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.893380880355835
    2. 'cost' → logprob: -2.018380880355835
    3. 'max' → logprob: -2.143380880355835
    4. ' cost' → logprob: -2.268380880355835
    5. 'final' → logprob: -2.393380880355835
    6. ' final' → logprob: -2.393380880355835
    7. ' current' → logprob: -2.893380880355835
    8. 'current' → logprob: -3.018380880355835
    9. ' order' → logprob: -3.268380880355835
    10. 'order' → logprob: -3.893380880355835

Token 698: '_hold' (ID: 160928)
  Prédit: '_hold'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hold' → logprob: -0.00026336227892898023
    2. '_cost' → logprob: -9.000263214111328
    3. '>' → logprob: -9.500263214111328
    4. 'hold' → logprob: -10.000263214111328
    5. '   ' → logprob: -12.375263214111328
    6. '```' → logprob: -12.750263214111328
    7. ' >' → logprob: -13.375263214111328
    8. '_keep' → logprob: -13.875263214111328
    9. 'Hold' → logprob: -13.875263214111328
    10. '\' → logprob: -14.000263214111328

Token 699: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.4585745632648468
    2. '>' → logprob: -1.2085745334625244
    3. ':' → logprob: -3.4585745334625244
    4. ' ==' → logprob: -4.4585747718811035
    5. ' <' → logprob: -4.8335747718811035
    6. '==' → logprob: -4.9585747718811035
    7. ' >=' → logprob: -5.9585747718811035
    8. ' !=' → logprob: -6.0835747718811035
    9. ' +' → logprob: -6.7085747718811035
    10. ' and' → logprob: -7.0835747718811035

Token 700: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.21979030966758728
    2. 'current' → logprob: -2.34479022026062
    3. 'cost' → logprob: -2.59479022026062
    4. 'store' → logprob: -4.719790458679199
    5. ' ' → logprob: -4.844790458679199
    6. 'final' → logprob: -5.969790458679199
    7. ' current' → logprob: -6.719790458679199
    8. '1' → logprob: -6.844790458679199
    9. 'st' → logprob: -6.844790458679199
    10. ' cost' → logprob: -6.969790458679199

Token 701: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09353744983673096
    2. 'current' → logprob: -2.5935373306274414
    3. 'cost' → logprob: -5.218537330627441
    4. ' ' → logprob: -5.968537330627441
    5. 'heading' → logprob: -5.968537330627441
    6. 'final' → logprob: -6.718537330627441
    7. 'store' → logprob: -6.843537330627441
    8. 'driver' → logprob: -7.468537330627441
    9. 'max' → logprob: -7.718537330627441
    10. '-' → logprob: -8.593537330627441

Token 702: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5779294371604919
    2. ':' → logprob: -1.0779294967651367
    3. ' and' → logprob: -2.3279294967651367
    4. 'and' → logprob: -7.827929496765137
    5. '):
' → logprob: -8.327929496765137
    6. ' :
' → logprob: -9.077929496765137
    7. ' :' → logprob: -9.452929496765137
    8. ':
' → logprob: -10.077929496765137
    9. '                   ' → logprob: -10.202929496765137
    10. ',' → logprob: -10.327929496765137

Token 703: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.14537948369979858
    2. ':' → logprob: -2.6453795433044434
    3. ':
' → logprob: -2.8953795433044434
    4. '                   ' → logprob: -5.520379543304443
    5. ' and' → logprob: -6.770379543304443
    6. '):
' → logprob: -7.645379543304443
    7. '                           ' → logprob: -7.770379543304443
    8. '.' → logprob: -7.895379543304443
    9. ',' → logprob: -7.895379543304443
    10. '<|end|>' → logprob: -8.020379066467285

Token 704: ' final' (ID: 1721)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'final' (adapté à ' final') → logprob: -0.1188097894191742
    2. ' final' → logprob: -2.493809700012207
    3. 'command' → logprob: -4.118809700012207
    4. '                   ' → logprob: -5.243809700012207
    5. ' command' → logprob: -5.618809700012207
    6. 'current' → logprob: -6.243809700012207
    7. '                       ' → logprob: -6.493809700012207
    8. ' current' → logprob: -8.868809700012207
    9. '                           ' → logprob: -9.118809700012207
    10. 'pass' → logprob: -9.368809700012207

Token 705: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.00022833107504993677
    2. 'dist' → logprob: -8.625227928161621
    3. '_dst' → logprob: -11.375227928161621
    4. '_cost' → logprob: -11.625227928161621
    5. 'Dist' → logprob: -12.250227928161621
    6. '_dest' → logprob: -12.250227928161621
    7. ',' → logprob: -12.625227928161621
    8. ' =' → logprob: -13.125227928161621
    9. '	dist' → logprob: -13.125227928161621
    10. ' Dist' → logprob: -13.500227928161621

Token 706: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4855993092060089
    2. ' =' → logprob: -0.9855992794036865
    3. ',' → logprob: -4.485599517822266
    4. ' +=' → logprob: -9.610599517822266
    5. '+=' → logprob: -9.985599517822266
    6. ' ,' → logprob: -10.110599517822266
    7. ' ' → logprob: -11.610599517822266
    8. ' -=' → logprob: -11.610599517822266
    9. '-=' → logprob: -12.985599517822266
    10. '==' → logprob: -13.110599517822266

Token 707: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05330923572182655
    2. 'current' → logprob: -3.303309202194214
    3. 'heading' → logprob: -5.553309440612793
    4. ' ' → logprob: -5.678309440612793
    5. '-' → logprob: -5.928309440612793
    6. 'final' → logprob: -6.303309440612793
    7. 'max' → logprob: -6.928309440612793
    8. 'next' → logprob: -7.053309440612793
    9. 'st' → logprob: -7.803309440612793
    10. 'store' → logprob: -8.053309440612793

Token 708: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08547641336917877
    2. 'current' → logprob: -2.5854763984680176
    3. 'heading' → logprob: -5.960476398468018
    4. ' ' → logprob: -6.585476398468018
    5. '-' → logprob: -6.835476398468018
    6. 'final' → logprob: -7.835476398468018
    7. 'st' → logprob: -7.835476398468018
    8. 'max' → logprob: -8.710476875305176
    9. ' current' → logprob: -8.960476875305176
    10. 'store' → logprob: -8.960476875305176

Token 709: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4407995045185089
    2. '
' → logprob: -2.1907994747161865
    3. '                   ' → logprob: -2.3157994747161865
    4. ' else' → logprob: -3.5657994747161865
    5. ' 
' → logprob: -3.9407994747161865
    6. ' ' → logprob: -4.190799713134766
    7. 'else' → logprob: -4.440799713134766
    8. '           ' → logprob: -4.565799713134766
    9. '                
' → logprob: -4.940799713134766
    10. '                        
' → logprob: -4.940799713134766

Token 710: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6030411720275879
    2. '                   ' → logprob: -1.103041172027588
    3. ' final' → logprob: -3.228041172027588
    4. ' current' → logprob: -3.978041172027588
    5. ' else' → logprob: -4.603041172027588
    6. 'current' → logprob: -4.603041172027588
    7. 'final' → logprob: -4.728041172027588
    8. '
' → logprob: -5.353041172027588
    9. '                       ' → logprob: -5.853041172027588
    10. '                ' → logprob: -6.228041172027588

Token 711: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.48030754923820496
    2. 'if' → logprob: -2.4803075790405273
    3. 'next' → logprob: -2.4803075790405273
    4. '           ' → logprob: -2.8553075790405273
    5. '                   ' → logprob: -3.1053075790405273
    6. ' next' → logprob: -3.7303075790405273
    7. 'current' → logprob: -3.7303075790405273
    8. 'heading' → logprob: -4.105307579040527
    9. ' if' → logprob: -4.230307579040527
    10. 'final' → logprob: -4.730307579040527

Token 712: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.014919289387762547
    2. ':
' → logprob: -4.389919281005859
    3. '           ' → logprob: -6.764919281005859
    4. ':' → logprob: -7.264919281005859
    5. '       ' → logprob: -8.26491928100586
    6. '                   ' → logprob: -9.13991928100586
    7. '                       ' → logprob: -9.13991928100586
    8. '):
' → logprob: -10.63991928100586
    9. ',' → logprob: -11.01491928100586
    10. '   ' → logprob: -11.01491928100586

Token 713: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0015692608430981636
    2. '           ' → logprob: -6.5015692710876465
    3. 'command' → logprob: -10.501568794250488
    4. '       ' → logprob: -11.001568794250488
    5. '                   ' → logprob: -11.126568794250488
    6. '   ' → logprob: -12.376568794250488
    7. ' command' → logprob: -13.376568794250488
    8. 'final' → logprob: -13.876568794250488
    9. '                       ' → logprob: -14.376568794250488
    10. 'if' → logprob: -15.251568794250488

Token 714: ' final' (ID: 1721)
  Prédit: 'command'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'command' → logprob: -0.16815800964832306
    2. 'final' (adapté à ' final') → logprob: -2.1681580543518066
    3. '               ' → logprob: -3.7931580543518066
    4. ' command' → logprob: -4.793158054351807
    5. 'heading' → logprob: -5.043158054351807
    6. '           ' → logprob: -6.918158054351807
    7. ' final' → logprob: -6.918158054351807
    8. '                   ' → logprob: -7.918158054351807
    9. 'if' → logprob: -8.043157577514648
    10. '   ' → logprob: -8.418157577514648

Token 715: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -5.438573680294212e-06
    2. 'dist' → logprob: -13.000005722045898
    3. '_dest' → logprob: -13.375005722045898
    4. '_dst' → logprob: -13.875005722045898
    5. '_DIST' → logprob: -15.500005722045898
    6. 'Dist' → logprob: -15.875005722045898
    7. '_d' → logprob: -16.8750057220459
    8. '_distance' → logprob: -17.0000057220459
    9. ' =' → logprob: -17.0000057220459
    10. '	dist' → logprob: -17.3750057220459

Token 716: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759491920471191
    2. '=' → logprob: -0.8259491920471191
    3. ' +=' → logprob: -11.950948715209961
    4. ',' → logprob: -13.575948715209961
    5. '+=' → logprob: -13.575948715209961
    6. ' ' → logprob: -14.575948715209961
    7. ' ' → logprob: -16.57594871520996
    8. '＝' → logprob: -17.07594871520996
    9. '   ' → logprob: -17.32594871520996
    10. ')' → logprob: -17.32594871520996

Token 717: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003492923453450203
    2. '-' → logprob: -6.003492832183838
    3. ' ' → logprob: -7.003492832183838
    4. 'heading' → logprob: -9.378493309020996
    5. ' -' → logprob: -11.128493309020996
    6. 'final' → logprob: -13.503493309020996
    7. 'None' → logprob: -13.628493309020996
    8. 'head' → logprob: -13.628493309020996
    9. 'V' → logprob: -14.065993309020996
    10. '  ' → logprob: -14.503493309020996

Token 718: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00269015203230083
    2. '-' → logprob: -6.002690315246582
    3. 'heading' → logprob: -8.627690315246582
    4. ' ' → logprob: -10.627690315246582
    5. 'final' → logprob: -12.877690315246582
    6. 'head' → logprob: -13.252690315246582
    7. 'V' → logprob: -13.252690315246582
    8. ' -' → logprob: -13.377690315246582
    9. 'None' → logprob: -14.377690315246582
    10. '-V' → logprob: -15.127690315246582

Token 719: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5745711326599121
    2. ' 
' → logprob: -2.324571132659912
    3. '           ' → logprob: -2.324571132659912
    4. '<|end|>' → logprob: -2.324571132659912
    5. '
' → logprob: -3.199571132659912
    6. '            
' → logprob: -4.199571132659912
    7. ',' → logprob: -4.324571132659912
    8. '        
' → logprob: -4.699571132659912
    9. ' if' → logprob: -4.824571132659912
    10. '   ' → logprob: -4.949571132659912

Token 720: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.384967565536499
    2. ' if' → logprob: -1.509967565536499
    3. '       ' → logprob: -3.009967565536499
    4. 'if' → logprob: -3.884967565536499
    5. '
' → logprob: -4.634967803955078
    6. '   ' → logprob: -5.384967803955078
    7. '            
' → logprob: -5.384967803955078
    8. ' next' → logprob: -6.134967803955078
    9. '        
' → logprob: -6.384967803955078
    10. '```' → logprob: -6.509967803955078

Token 721: ' heading' (ID: 23808)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11191073805093765
    2. 'dist' → logprob: -2.611910820007324
    3. '           ' → logprob: -3.861910820007324
    4. 'heading' (adapté à ' heading') → logprob: -5.986910820007324
    5. 'next' → logprob: -6.361910820007324
    6. 'distance' → logprob: -6.361910820007324
    7. 'dx' → logprob: -6.611910820007324
    8. 'move' → logprob: -6.736910820007324
    9. 'diff' → logprob: -6.986910820007324
    10. 'cost' → logprob: -7.611910820007324

Token 722: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3049679696559906
    2. ' =' → logprob: -1.554967999458313
    3. ' +=' → logprob: -3.5549678802490234
    4. '+=' → logprob: -3.8049678802490234
    5. ',' → logprob: -7.179967880249023
    6. '==' → logprob: -11.304967880249023
    7. '_' → logprob: -11.929967880249023
    8. '+' → logprob: -12.179967880249023
    9. '_=' → logprob: -12.554967880249023
    10. '_tokens' → logprob: -12.929967880249023

Token 723: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.2339620143175125
    2. ' next' → logprob: -1.608962059020996
    3. 'final' → logprob: -4.983962059020996
    4. ' final' → logprob: -6.483962059020996
    5. '0' → logprob: -9.233962059020996
    6. ' ' → logprob: -11.108962059020996
    7. '   ' → logprob: -11.483962059020996
    8. '	next' → logprob: -11.983962059020996
    9. '(next' → logprob: -12.483962059020996
    10. '  ' → logprob: -13.233962059020996

Token 724: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -6.265633419388905e-05
    2. '[' → logprob: -10.250062942504883
    3. '_' → logprob: -11.000062942504883
    4. '```' → logprob: -11.750062942504883
    5. '[_' → logprob: -13.500062942504883
    6. '_[' → logprob: -15.000062942504883
    7. '`' → logprob: -15.875062942504883
    8. '[next' → logprob: -16.250062942504883
    9. '[line' → logprob: -16.250062942504883
    10. '``' → logprob: -16.500062942504883

Token 725: '[current' (ID: 49470)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0015829472104087472
    2. 'heading' → logprob: -6.501583099365234
    3. '[current' → logprob: -9.501583099365234
    4. '```' → logprob: -12.751583099365234
    5. ' [' → logprob: -14.001583099365234
    6. 'current' → logprob: -14.251583099365234
    7. ' heading' → logprob: -14.876583099365234
    8. '[int' → logprob: -15.001583099365234
    9. '[in' → logprob: -15.376583099365234
    10. '[
' → logprob: -15.626583099365234

Token 726: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.010668235830962658
    2. '[' → logprob: -5.0106682777404785
    3. 'heading' → logprob: -6.0106682777404785
    4. 'id' → logprob: -6.6356682777404785
    5. '```' → logprob: -10.01066780090332
    6. '][' → logprob: -10.38566780090332
    7. '   ' → logprob: -11.01066780090332
    8. '_heading' → logprob: -11.38566780090332
    9. ',' → logprob: -11.63566780090332
    10. 'head' → logprob: -12.13566780090332

Token 727: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.06202717870473862
    2. '[' → logprob: -2.8120272159576416
    3. ',' → logprob: -11.062026977539062
    4. ']' → logprob: -11.187026977539062
    5. ' ][' → logprob: -11.312026977539062
    6. '```' → logprob: -12.062026977539062
    7. 'final' → logprob: -12.562026977539062
    8. ' [' → logprob: -13.562026977539062
    9. '   ' → logprob: -13.812026977539062
    10. '}[' → logprob: -13.812026977539062

Token 728: 'final' (ID: 17196)
  Prédit: 'final'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'final' → logprob: -1.306760805164231e-05
    2. ' final' → logprob: -11.25001335144043
    3. '(final' → logprob: -18.37501335144043
    4. '   ' → logprob: -19.25001335144043
    5. '	final' → logprob: -20.87501335144043
    6. ' ' → logprob: -22.50001335144043
    7. '  ' → logprob: -22.62501335144043
    8. '           ' → logprob: -23.50001335144043
    9. 'full' → logprob: -23.62501335144043
    10. 'Final' → logprob: -23.87501335144043

Token 729: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.0034170090220868587
    2. 'ist' → logprob: -5.753417015075684
    3. 'dist' → logprob: -8.878417015075684
    4. 't' → logprob: -10.378417015075684
    5. '_dest' → logprob: -10.878417015075684
    6. 'st' → logprob: -11.378417015075684
    7. '_dst' → logprob: -11.628417015075684
    8. '_' → logprob: -11.753417015075684
    9. '_id' → logprob: -12.128417015075684
    10. 'Dist' → logprob: -12.503417015075684

Token 730: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002705145161598921
    2. ' ]' → logprob: -8.50027084350586
    3. ']
' → logprob: -9.75027084350586
    4. '<|end|>' → logprob: -12.75027084350586
    5. '   ' → logprob: -13.62527084350586
    6. ']+' → logprob: -14.12527084350586
    7. ')' → logprob: -14.12527084350586
    8. '[' → logprob: -14.25027084350586
    9. ')]' → logprob: -15.37527084350586
    10. ']()' → logprob: -15.37527084350586

Token 731: '           ' (ID: 352)
  Prédit: 'command'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'command' → logprob: -0.16358022391796112
    2. '   ' → logprob: -2.6635801792144775
    3. '       ' → logprob: -4.038580417633057
    4. '           ' → logprob: -4.413580417633057
    5. 'if' → logprob: -4.663580417633057
    6. '\n' → logprob: -5.038580417633057
    7. '	command' → logprob: -5.163580417633057
    8. '\t' → logprob: -5.413580417633057
    9. ' command' → logprob: -5.538580417633057
    10. 'print' → logprob: -5.663580417633057

Token 732: ' dist' (ID: 3601)
  Prédit: 'command'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'command' → logprob: -0.6696242690086365
    2. 'dist' (adapté à ' dist') → logprob: -0.7946242690086365
    3. 'if' → logprob: -3.7946243286132812
    4. 'final' → logprob: -5.544624328613281
    5. ' command' → logprob: -5.544624328613281
    6. ' if' → logprob: -6.169624328613281
    7. ' dist' → logprob: -7.044624328613281
    8. 'print' → logprob: -7.544624328613281
    9. '```' → logprob: -7.669624328613281
    10. '.' → logprob: -7.794624328613281

Token 733: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -15.250000953674316
    3. '[left' → logprob: -16.125
    4. '_LEFT' → logprob: -17.0
    5. '[_' → logprob: -17.125
    6. '_length' → logprob: -17.375
    7. '_le' → logprob: -17.5
    8. ' _' → logprob: -18.25
    9. '[' → logprob: -18.375
    10. '_len' → logprob: -18.5

Token 734: ' =' (ID: 314)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.43844395875930786
    2. '-=' → logprob: -1.063443899154663
    3. '-' → logprob: -4.938444137573242
    4. '+=' → logprob: -6.688444137573242
    5. ' +=' → logprob: -7.438444137573242
    6. '=' → logprob: -7.688444137573242
    7. '[' → logprob: -9.063444137573242
    8. ' -' → logprob: -9.938444137573242
    9. '[-' → logprob: -10.938444137573242
    10. '   ' → logprob: -11.188444137573242

Token 735: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.5761157870292664
    2. 'wf' → logprob: -0.8261157870292664
    3. '1' → logprob: -9.451115608215332
    4. ' wf' → logprob: -9.951115608215332
    5. ' edge' → logprob: -11.076115608215332
    6. '   ' → logprob: -12.201115608215332
    7. 'w' → logprob: -12.951115608215332
    8. ' ' → logprob: -13.201115608215332
    9. 'wv' → logprob: -13.201115608215332
    10. 'wg' → logprob: -13.326115608215332

Token 736: '[current' (ID: 49470)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12693534791469574
    2. '[current' → logprob: -2.1269352436065674
    3. 'current' → logprob: -12.501935005187988
    4. 'heading' → logprob: -13.001935005187988
    5. '[curr' → logprob: -15.126935005187988
    6. ' [' → logprob: -15.376935005187988
    7. '[cur' → logprob: -15.501935005187988
    8. '```' → logprob: -15.876935005187988
    9. ' ' → logprob: -16.501935958862305
    10. '   ' → logprob: -16.751935958862305

Token 737: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.006485146004706621
    2. 'id' → logprob: -5.8814849853515625
    3. '[current' → logprob: -6.6314849853515625
    4. 'current' → logprob: -6.7564849853515625
    5. '[' → logprob: -7.3814849853515625
    6. '][' → logprob: -7.8814849853515625
    7. '```' → logprob: -9.506484985351562
    8. ']' → logprob: -10.131484985351562
    9. 'Id' → logprob: -11.256484985351562
    10. ' ' → logprob: -11.506484985351562

Token 738: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.12712475657463074
    2. '[' → logprob: -2.127124786376953
    3. '[current' → logprob: -9.502124786376953
    4. 'heading' → logprob: -10.002124786376953
    5. '}[' → logprob: -10.127124786376953
    6. ']' → logprob: -11.502124786376953
    7. '"][' → logprob: -11.877124786376953
    8. '   ' → logprob: -12.252124786376953
    9. ' ][' → logprob: -12.877124786376953
    10. ''][' → logprob: -13.127124786376953

Token 739: 'heading' (ID: 24070)
  Prédit: 'heading'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heading' → logprob: -4.008129963040119e-06
    2. ' heading' → logprob: -12.500003814697266
    3. 'final' → logprob: -15.625003814697266
    4. '
' → logprob: -19.500003814697266
    5. 'head' → logprob: -19.750003814697266
    6. '.heading' → logprob: -19.875003814697266
    7. 'next' → logprob: -20.500003814697266
    8. 'Heading' → logprob: -20.875003814697266
    9. '_heading' → logprob: -21.000003814697266
    10. '
' → logprob: -21.250003814697266

Token 740: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002522865077480674
    2. ']-' → logprob: -6.252522945404053
    3. '[' → logprob: -8.127522468566895
    4. ' ]' → logprob: -8.502522468566895
    5. '<|end|>' → logprob: -9.627522468566895
    6. ']
' → logprob: -11.502522468566895
    7. ' -' → logprob: -12.252522468566895
    8. ']+' → logprob: -12.752522468566895
    9. '-' → logprob: -12.752522468566895
    10. '][' → logprob: -13.252522468566895

Token 741: ' -' (ID: 533)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.361605703830719
    2. '       ' → logprob: -1.9866056442260742
    3. '   ' → logprob: -3.111605644226074
    4. '<|end|>' → logprob: -3.111605644226074
    5. '    
' → logprob: -4.361605644226074
    6. '\n' → logprob: -4.486605644226074
    7. '\t' → logprob: -4.611605644226074
    8. '	' → logprob: -4.861605644226074
    9. '        
' → logprob: -5.236605644226074
    10. '[' → logprob: -5.361605644226074

Token 742: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '```' → logprob: -19.0
    4. '0' → logprob: -19.25
    5. '   ' → logprob: -19.5
    6. '           ' → logprob: -21.25
    7. '
' → logprob: -21.875
    8. '=' → logprob: -22.125
    9. '                   ' → logprob: -22.125
    10. '...' → logprob: -22.5

Token 743: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -14.000001907348633
    3. '0' → logprob: -14.250001907348633
    4. '   ' → logprob: -17.625001907348633
    5. '           ' → logprob: -18.875001907348633
    6. '```' → logprob: -19.750001907348633
    7. '  ' → logprob: -20.250001907348633
    8. 'command' → logprob: -20.625001907348633
    9. '       ' → logprob: -21.125001907348633
    10. '                                           ' → logprob: -21.125001907348633

Token 744: '
' (ID: 198)
  Prédit: 'command'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'command' → logprob: -0.21241529285907745
    2. '       ' → logprob: -2.2124152183532715
    3. '           ' → logprob: -2.5874152183532715
    4. '   ' → logprob: -5.7124152183532715
    5. ' command' → logprob: -6.7124152183532715
    6. '	command' → logprob: -6.8374152183532715
    7. '	' → logprob: -8.08741569519043
    8. '		' → logprob: -8.33741569519043
    9. 'if' → logprob: -8.33741569519043
    10. 'print' → logprob: -8.46241569519043

Token 745: '           ' (ID: 352)
  Prédit: 'command'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'command' → logprob: -0.9023790955543518
    2. '	command' → logprob: -1.027379035949707
    3. '       ' → logprob: -2.277379035949707
    4. '   ' → logprob: -3.027379035949707
    5. '	' → logprob: -3.152379035949707
    6. '\t' → logprob: -4.027379035949707
    7. '<|end|>' → logprob: -5.652379035949707
    8. '	continue' → logprob: -6.027379035949707
    9. '           ' → logprob: -6.152379035949707
    10. 'continue' → logprob: -6.277379035949707

Token 746: ' command' (ID: 6348)
  Prédit: 'command'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'command' (adapté à ' command') → logprob: -8.542423165636137e-05
    2. '	command' → logprob: -10.500085830688477
    3. 'if' → logprob: -10.750085830688477
    4. ' command' → logprob: -11.375085830688477
    5. '   ' → logprob: -11.625085830688477
    6. 'print' → logprob: -11.750085830688477
    7. '       ' → logprob: -12.500085830688477
    8. 'continue' → logprob: -12.875085830688477
    9. '```' → logprob: -13.875085830688477
    10. '           ' → logprob: -15.250085830688477

Token 747: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -1.981667537620524e-06
    2. '[' → logprob: -13.625001907348633
    3. 't' → logprob: -14.625001907348633
    4. ' [' → logprob: -16.625001907348633
    5. '	t' → logprob: -16.750001907348633
    6. '```' → logprob: -16.875001907348633
    7. '.append' → logprob: -17.000001907348633
    8. '   ' → logprob: -18.125001907348633
    9. '[
' → logprob: -18.125001907348633
    10. '\[' → logprob: -18.125001907348633

Token 748: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01178654097020626
    2. '=' → logprob: -4.511786460876465
    3. ' =' → logprob: -7.761786460876465
    4. ']=' → logprob: -8.386786460876465
    5. ' ]' → logprob: -10.261786460876465
    6. '[' → logprob: -10.386786460876465
    7. ')' → logprob: -11.886786460876465
    8. '   ' → logprob: -12.511786460876465
    9. '.append' → logprob: -12.886786460876465
    10. ']+=' → logprob: -13.386786460876465

Token 749: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019286326132714748
    2. ' =' → logprob: -6.251928806304932
    3. ' ' → logprob: -18.751928329467773
    4. ')' → logprob: -19.126928329467773
    5. '＝' → logprob: -19.251928329467773
    6. '=
' → logprob: -19.501928329467773
    7. '=head' → logprob: -19.751928329467773
    8. '=int' → logprob: -19.876928329467773
    9. '+=' → logprob: -20.126928329467773
    10. '=}' → logprob: -20.376928329467773

Token 750: ' heading' (ID: 23808)
  Prédit: 'heading'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heading' → logprob: -0.0024756586644798517
    2. ' heading' → logprob: -6.002475738525391
    3. 'head' → logprob: -17.37747573852539
    4. '.heading' → logprob: -19.12747573852539
    5. 'Heading' → logprob: -19.25247573852539
    6. '_heading' → logprob: -20.00247573852539
    7. 'header' → logprob: -21.12747573852539
    8. 'headed' → logprob: -21.62747573852539
    9. '-heading' → logprob: -22.12747573852539
    10. '   ' → logprob: -22.37747573852539

Token 751: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 752: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005626845522783697
    2. ' ' → logprob: -7.50056266784668
    3. '0' → logprob: -11.87556266784668
    4. '<|end|>' → logprob: -13.00056266784668
    5. '```' → logprob: -15.00056266784668
    6. '[' → logprob: -18.62556266784668
    7. '`' → logprob: -19.12556266784668
    8. '<|end|>' → logprob: -19.12556266784668
    9. ',' → logprob: -19.50056266784668
    10. '``' → logprob: -19.75056266784668

Token 753: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.750000953674316
    3. '0' → logprob: -16.000001907348633
    4. '<|end|>' → logprob: -16.500001907348633
    5. '```' → logprob: -17.375001907348633
    6. '`' → logprob: -20.625001907348633
    7. '
' → logprob: -20.750001907348633
    8. '-' → logprob: -20.875001907348633
    9. '[' → logprob: -21.125001907348633
    10. '+' → logprob: -21.875001907348633

Token 754: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 755: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 756: ' for' (ID: 395)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.037866804748773575
    2. 'print' → logprob: -3.5378668308258057
    3. 'for' (adapté à ' for') → logprob: -5.162866592407227
    4. ' return' → logprob: -6.162866592407227
    5. '   ' → logprob: -9.287866592407227
    6. ' for' → logprob: -9.412866592407227
    7. '
' → logprob: -10.287866592407227
    8. '	return' → logprob: -10.912866592407227
    9. '```' → logprob: -11.412866592407227
    10. ' print' → logprob: -11.662866592407227

Token 757: ' i' (ID: 575)
  Prédit: 'cmd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cmd' → logprob: -0.7043144702911377
    2. 'c' → logprob: -0.9543144702911377
    3. ' cmd' → logprob: -2.7043144702911377
    4. ' c' → logprob: -3.2043144702911377
    5. 'i' → logprob: -5.204314231872559
    6. 't' → logprob: -5.454314231872559
    7. ' t' → logprob: -6.579314231872559
    8. ' i' → logprob: -6.829314231872559
    9. 'x' → logprob: -8.829314231872559
    10. 'command' → logprob: -8.829314231872559

Token 758: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11518669128417969
    2. 'in' → logprob: -2.2401866912841797
    3. 'n' → logprob: -6.24018669128418
    4. ',' → logprob: -8.24018669128418
    5. '_' → logprob: -9.36518669128418
    6. '(' → logprob: -11.11518669128418
    7. 't' → logprob: -11.61518669128418
    8. ' ' → logprob: -11.61518669128418
    9. 'range' → logprob: -12.61518669128418
    10. '(n' → logprob: -12.61518669128418

Token 759: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00726620526984334
    2. 'command' → logprob: -5.007266044616699
    3. ' range' → logprob: -7.507266044616699
    4. ' command' → logprob: -13.6322660446167
    5. '   ' → logprob: -15.3822660446167
    6. '  ' → logprob: -17.007266998291016
    7. ' ' → logprob: -17.132266998291016
    8. '```' → logprob: -17.507266998291016
    9. 'print' → logprob: -17.632266998291016
    10. '
' → logprob: -17.757266998291016

Token 760: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -0.0007079057977534831
    2. '(len' → logprob: -7.500708103179932
    3. 'T' → logprob: -9.000707626342773
    4. '(' → logprob: -10.625707626342773
    5. 'len' → logprob: -12.625707626342773
    6. '(t' → logprob: -13.250707626342773
    7. ' (' → logprob: -13.375707626342773
    8. ' T' → logprob: -16.125707626342773
    9. '(command' → logprob: -16.125707626342773
    10. '   ' → logprob: -16.375707626342773

Token 761: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4741041660308838
    2. '):
' → logprob: -0.9741041660308838
    3. '):
' → logprob: -11.849103927612305
    4. '   ' → logprob: -11.974103927612305
    5. ':' → logprob: -12.099103927612305
    6. ')' → logprob: -12.224103927612305
    7. ' ):' → logprob: -14.099103927612305
    8. ',' → logprob: -14.724103927612305
    9. ':
' → logprob: -14.849103927612305
    10. '+' → logprob: -14.974103927612305

Token 762: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25512799620628357
    2. 'print' → logprob: -2.0051279067993164
    3. '   ' → logprob: -2.6301279067993164
    4. ' print' → logprob: -4.005127906799316
    5. '```' → logprob: -8.755127906799316
    6. '	print' → logprob: -9.880127906799316
    7. '	' → logprob: -11.630127906799316
    8. '
' → logprob: -11.880127906799316
    9. '	   ' → logprob: -12.255127906799316
    10. '``' → logprob: -12.380127906799316

Token 763: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.857719275401905e-05
    2. ' print' → logprob: -10.250038146972656
    3. '   ' → logprob: -13.000038146972656
    4. '       ' → logprob: -14.000038146972656
    5. 'if' → logprob: -18.375038146972656
    6. '	print' → logprob: -18.500038146972656
    7. '```' → logprob: -20.000038146972656
    8. 'sys' → logprob: -21.750038146972656
    9. '           ' → logprob: -22.375038146972656
    10. ' ' → logprob: -22.875038146972656

Token 764: '(command' (ID: 33772)
  Prédit: '(command'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(command' → logprob: -0.38687366247177124
    2. 'command' → logprob: -1.136873722076416
    3. ' command' → logprob: -12.886873245239258
    4. '(' → logprob: -16.136873245239258
    5. ' (' → logprob: -20.136873245239258
    6. '	command' → logprob: -20.136873245239258
    7. '(
' → logprob: -20.761873245239258
    8. 'Command' → logprob: -21.761873245239258
    9. '.command' → logprob: -22.136873245239258
    10. '()' → logprob: -22.511873245239258

Token 765: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.512236498361744e-07
    2. '[t' → logprob: -14.625000953674316
    3. '[' → logprob: -18.125
    4. ' [' → logprob: -18.875
    5. '   ' → logprob: -21.5
    6. ')' → logprob: -21.5
    7. '(i' → logprob: -21.5
    8. ')[' → logprob: -21.625
    9. '[
' → logprob: -21.75
    10. 'i' → logprob: -21.75

Token 766: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.935296834039036e-06
    2. '())' → logprob: -13.87500286102295
    3. '))' → logprob: -14.12500286102295
    4. ' )' → logprob: -14.37500286102295
    5. '])' → logprob: -16.250003814697266
    6. '   ' → logprob: -16.250003814697266
    7. ')`' → logprob: -16.250003814697266
    8. ')
' → logprob: -16.375003814697266
    9. '})' → logprob: -16.875003814697266
    10. ')i' → logprob: -16.875003814697266

Token 767: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 768: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 769: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 770: '0' (ID: 15)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00404491787776351
    2. 'solve' → logprob: -5.629045009613037
    3. ' None' → logprob: -8.004044532775879
    4. '0' → logprob: -9.879044532775879
    5. '<|end|>' → logprob: -9.879044532775879
    6. '```' → logprob: -13.129044532775879
    7. '[]' → logprob: -13.379044532775879
    8. '(None' → logprob: -14.004044532775879
    9. 'def' → logprob: -14.379044532775879
    10. '#' → logprob: -14.504044532775879

Token 771: '

' (ID: 279)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00909973680973053
    2. 'solve' → logprob: -5.259099960327148
    3. '<|end|>' → logprob: -6.134099960327148
    4. ' if' → logprob: -7.384099960327148
    5. '```' → logprob: -7.884099960327148
    6. '
' → logprob: -7.884099960327148
    7. '#' → logprob: -8.759099960327148
    8. ' solve' → logprob: -9.759099960327148
    9. '.solve' → logprob: -11.134099960327148
    10. '.' → logprob: -11.259099960327148

Token 772: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07458677142858505
    2. '<|end|>' → logprob: -2.949586868286133
    3. '```' → logprob: -4.824586868286133
    4. '
' → logprob: -5.199586868286133
    5. ' if' → logprob: -6.324586868286133
    6. '#' → logprob: -6.449586868286133
    7. ')' → logprob: -6.699586868286133
    8. '<|end|>' → logprob: -7.699586868286133
    9. '[' → logprob: -8.824586868286133
    10. '}' → logprob: -9.074586868286133

Token 773: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0052464487962424755
    2. '__' → logprob: -5.255246639251709
    3. ' ' → logprob: -12.13024616241455
    4. '_' → logprob: -12.50524616241455
    5. ' ' → logprob: -13.75524616241455
    6. '_name' → logprob: -13.88024616241455
    7. 'name' → logprob: -13.88024616241455
    8. '___' → logprob: -15.88024616241455
    9. '  ' → logprob: -16.255247116088867
    10. 'Name' → logprob: -16.255247116088867

Token 774: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.13256855309009552
    2. ' __' → logprob: -2.257568597793579
    3. ' ==' → logprob: -4.632568359375
    4. '.__' → logprob: -5.382568359375
    5. '__.' → logprob: -6.132568359375
    6. '__.__' → logprob: -6.757568359375
    7. ' .' → logprob: -6.882568359375
    8. 'name' → logprob: -8.382568359375
    9. '.' → logprob: -8.507568359375
    10. '.name' → logprob: -9.132568359375

Token 775: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.173704271830502e-06
    2. '==' → logprob: -13.12500286102295
    3. '__.__' → logprob: -14.25000286102295
    4. '____' → logprob: -15.50000286102295
    5. '__
' → logprob: -15.62500286102295
    6. '___' → logprob: -16.875003814697266
    7. '__('' → logprob: -17.125003814697266
    8. ' ==' → logprob: -17.125003814697266
    9. '__.' → logprob: -17.125003814697266
    10. 'name' → logprob: -17.250003814697266

Token 776: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2482159584760666
    2. ' ==' → logprob: -1.623215913772583
    3. '==' → logprob: -3.998215913772583
    4. '=="' → logprob: -5.498216152191162
    5. '__":
' → logprob: -10.748215675354004
    6. '=='' → logprob: -11.123215675354004
    7. '__.__' → logprob: -11.248215675354004
    8. '==
' → logprob: -11.248215675354004
    9. '___' → logprob: -12.248215675354004
    10. ' =="' → logprob: -12.373215675354004

Token 777: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.006763564422726631
    2. ''' → logprob: -5.006763458251953
    3. ' "__' → logprob: -10.006763458251953
    4. '__' → logprob: -12.881763458251953
    5. ' '__' → logprob: -14.881763458251953
    6. '"name' → logprob: -16.256763458251953
    7. '"user' → logprob: -16.756763458251953
    8. '("__' → logprob: -17.506763458251953
    9. '"_' → logprob: -17.756763458251953
    10. '   ' → logprob: -17.881763458251953

Token 778: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.005600715056061745
    2. '__' → logprob: -5.255600929260254
    3. '"' → logprob: -8.505600929260254
    4. ''' → logprob: -9.255600929260254
    5. '_main' → logprob: -10.505600929260254
    6. ' main' → logprob: -11.130600929260254
    7. 'name' → logprob: -11.505600929260254
    8. '__":
' → logprob: -12.880600929260254
    9. '_MAIN' → logprob: -12.880600929260254
    10. 'Main' → logprob: -13.380600929260254

Token 779: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.1139584556221962
    2. '__' → logprob: -2.4889583587646484
    3. '__':
' → logprob: -3.7389583587646484
    4. '__:' → logprob: -7.863958358764648
    5. '():
' → logprob: -8.238958358764648
    6. '__()
' → logprob: -9.738958358764648
    7. '__["' → logprob: -9.863958358764648
    8. '__);
' → logprob: -10.488958358764648
    9. ':' → logprob: -10.613958358764648
    10. '__
' → logprob: -10.863958358764648

Token 780: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037401601672172546
    2. 'solve' → logprob: -3.6624016761779785
    3. ' solve' → logprob: -4.5374016761779785
    4. '	s' → logprob: -8.41240119934082
    5. '.solve' → logprob: -9.91240119934082
    6. '```' → logprob: -10.66240119934082
    7. '    
' → logprob: -11.28740119934082
    8. '   ' → logprob: -11.41240119934082
    9. ' ' → logprob: -12.16240119934082
    10. '  ' → logprob: -12.66240119934082

Token 781: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' (adapté à ' solve') → logprob: -2.339278580620885e-06
    2. ' solve' → logprob: -13.375001907348633
    3. '   ' → logprob: -14.875001907348633
    4. 'import' → logprob: -15.375001907348633
    5. 'sys' → logprob: -16.375001907348633
    6. '.solve' → logprob: -16.625001907348633
    7. '```' → logprob: -17.750001907348633
    8. 'main' → logprob: -19.125001907348633
    9. '    
' → logprob: -19.875001907348633
    10. 'simulate' → logprob: -20.500001907348633

Token 782: '()' (ID: 416)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8810138702392578
    2. '()' → logprob: -1.2560138702392578
    3. '<|end|>' → logprob: -1.2560138702392578
    4. '(' → logprob: -4.756013870239258
    5. '()
' → logprob: -6.131013870239258
    6. '(
' → logprob: -6.381013870239258
    7. '```' → logprob: -6.506013870239258
    8. '\n' → logprob: -7.256013870239258
    9. ')' → logprob: -7.756013870239258
    10. '<|end|>' → logprob: -8.131013870239258


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 780
Tokens correctement prédits (1ère position, stricte): 333
Tokens correctement prédits (1ère position, avec adaptation): 356
Tokens correctement prédits (top 10): 646
Précision stricte (1ère position): 42.69%
Précision adaptée (1ère position): 45.64%
Précision (top 10): 82.82%
================================================================================
