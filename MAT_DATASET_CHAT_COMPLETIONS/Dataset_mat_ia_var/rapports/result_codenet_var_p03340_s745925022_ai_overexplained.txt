================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:53
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demander à l'utilisateur de saisir un nombre entier, puis stocker cette valeur dans la variable 'n'
# 'input()' lit une ligne de texte au clavier, 'int()' convertit ce texte en entier
n = int(input())

# Demander à l'utilisateur de saisir une liste de nombres entiers séparés par des espaces
# 'input()' lit la ligne
# 'split()' divise la chaîne en une liste de sous-chaînes selon les espaces
# 'map(int, ...)' convertit chaque sous-chaîne en entier
# 'list(...)' convertit l'objet 'map' en liste Python
a = list(map(int, input().split()))

# Initialiser la variable qui contiendra le résultat final
# On utilise la valeur 0 comme point de départ car on va additionner ultérieurement à cette variable
result = 0

# Initialiser l'indice x, qui servira à parcourir le tableau 'a'
x = 0

# Initialiser une variable nommée 'i' à 0, qui sera utilisée comme un accumulateur pour former la somme courante des éléments de la sous-séquence
i = 0

# Démarrer une boucle for qui va de 0 jusqu'à n-1
# 'range(n)' crée un itérable de n valeurs commençant à 0 et finissant à n-1
# À chaque itération, 'j' vaudra l'indice actuel de la boucle
for j in range(n):
    # Boucle while permettant d'étendre la fenêtre vers la droite autant que possible
    # La condition 'x < n' garantit que l'indice x ne dépasse pas le dernier élément du tableau
    # 'i & a[x]' effectue un 'ET' binaire entre l'accumulateur courant 'i' et le prochain élément 'a[x]'
    # Si 'i & a[x] == 0', cela veut dire qu'aucun bit à 1 n'est commun entre 'i' et 'a[x]', donc ils peuvent être additionnés sans collision binaire
    while x < n and (i & a[x]) == 0:
        # Ajouter à 'i' la valeur de 'a[x]', ce qui agrandit la fenêtre courante
        i += a[x]
        # Incrémenter l'indice 'x' pour pointer vers le prochain élément de la liste pour l'itération suivante
        x += 1
    # Ajouter à 'result' le nombre de sous-séquences valides trouvées pour l'indice 'j'
    # 'x - j' est le nombre d'intervalles possibles commençant à l'indice 'j'
    result += x - j
    # Retirer de 'i' la valeur de 'a[j]' pour déplacer le début de la fenêtre vers la droite lors de l'itération suivante
    # Cela permet à la fenêtre glissante de ne plus considérer l'élément de début précédent
    i -= a[j]

# Afficher le résultat final, qui est le nombre total de sous-séquences satisfaisant la condition
print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ander' (ID: 9330)
  → Token d'amorce (pas de prédiction)

Token 3: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24378345906734467
    2. '_' → logprob: -1.6187834739685059
    3. ' à' → logprob: -5.243783473968506
    4. ' =' → logprob: -5.993783473968506
    5. ''' → logprob: -6.368783473968506
    6. ' a' → logprob: -6.618783473968506
    7. ' #' → logprob: -7.243783473968506
    8. ' _' → logprob: -7.743783473968506
    9. ' de' → logprob: -7.743783473968506
    10. ' la' → logprob: -7.743783473968506

Token 4: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.18355052173137665
    2. 'util' → logprob: -1.933550477027893
    3. 'user' → logprob: -4.1835503578186035
    4. ' l' → logprob: -5.5585503578186035
    5. 'u' → logprob: -5.8085503578186035
    6. 'us' → logprob: -7.4335503578186035
    7. 'un' → logprob: -9.433550834655762
    8. ' user' → logprob: -9.558550834655762
    9. 'input' → logprob: -10.933550834655762
    10. 'client' → logprob: -11.058550834655762

Token 5: ''utilisateur' (ID: 140803)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.8029055595397949
    2. ''utilisateur' → logprob: -0.9279055595397949
    3. ' utilisateur' → logprob: -2.552905559539795
    4. 'u' → logprob: -3.052905559539795
    5. '’utilisateur' → logprob: -3.802905559539795
    6. 'a' → logprob: -5.302905559539795
    7. '_util' → logprob: -6.552905559539795
    8. ''' → logprob: -7.552905559539795
    9. 'user' → logprob: -7.552905559539795
    10. ' user' → logprob: -8.427906036376953

Token 6: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9578115344047546
    2. ' ' → logprob: -1.7078115940093994
    3. 's' → logprob: -1.9578115940093994
    4. 'input' → logprob: -2.4578115940093994
    5. 'name' → logprob: -3.5828115940093994
    6. '=' → logprob: -3.8328115940093994
    7. ' =' → logprob: -4.20781135559082
    8. '=input' → logprob: -4.45781135559082
    9. ',' → logprob: -4.70781135559082
    10. '#' → logprob: -4.83281135559082

Token 7: ' saisir' (ID: 152120)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05577504262328148
    2. ' saisir' → logprob: -3.6807749271392822
    3. 'entr' → logprob: -3.9307749271392822
    4. 'r' → logprob: -5.055775165557861
    5. ' entrer' → logprob: -7.055775165557861
    6. '```' → logprob: -7.305775165557861
    7. 'entrée' → logprob: -8.180774688720703
    8. 'contin' → logprob: -8.680774688720703
    9. '#' → logprob: -9.055774688720703
    10. 'ent' → logprob: -9.180774688720703

Token 8: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.008853874169290066
    2. '_' → logprob: -5.508853912353516
    3. ''' → logprob: -6.258853912353516
    4. ' un' → logprob: -7.133853912353516
    5. ' une' → logprob: -7.508853912353516
    6. 's' → logprob: -7.883853912353516
    7. ' ' → logprob: -8.383853912353516
    8. 'u' → logprob: -8.758853912353516
    9. ' u' → logprob: -9.383853912353516
    10. ' a' → logprob: -9.383853912353516

Token 9: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.5433986186981201
    2. ' nombre' → logprob: -1.1683986186981201
    3. 'nom' → logprob: -3.29339861869812
    4. 'e' → logprob: -3.91839861869812
    5. ' nom' → logprob: -4.043398857116699
    6. ' ' → logprob: -5.043398857116699
    7. 'texte' → logprob: -5.168398857116699
    8. 'n' → logprob: -5.293398857116699
    9. 'a' → logprob: -5.418398857116699
    10. '```' → logprob: -6.668398857116699

Token 10: ' entier' (ID: 80473)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01620703935623169
    2. 'nombre' → logprob: -4.766207218170166
    3. 'x' → logprob: -6.016207218170166
    4. '_' → logprob: -6.766207218170166
    5. 's' → logprob: -7.016207218170166
    6. 'input' → logprob: -7.641207218170166
    7. '#' → logprob: -7.766207218170166
    8. 'i' → logprob: -8.266206741333008
    9. ' ' → logprob: -8.391206741333008
    10. '`' → logprob: -8.391206741333008

Token 11: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.013101872988045216
    2. 'nombre' → logprob: -5.513102054595947
    3. 'x' → logprob: -5.888102054595947
    4. '\n' → logprob: -6.013102054595947
    5. '```' → logprob: -7.013102054595947
    6. 'input' → logprob: -7.513102054595947
    7. '`' → logprob: -7.763102054595947
    8. '\' → logprob: -7.888102054595947
    9. 'i' → logprob: -8.263101577758789
    10. 'number' → logprob: -8.638101577758789

Token 12: ' puis' (ID: 18766)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.09762395173311234
    2. ' ' → logprob: -3.2226240634918213
    3. 'nombre' → logprob: -4.222623825073242
    4. 'ent' → logprob: -4.472623825073242
    5. ' n' → logprob: -4.847623825073242
    6. 'num' → logprob: -5.222623825073242
    7. 'input' → logprob: -5.472623825073242
    8. 's' → logprob: -6.097623825073242
    9. 'x' → logprob: -6.222623825073242
    10. 'a' → logprob: -6.597623825073242

Token 13: ' stock' (ID: 6546)
  Prédit: ' calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.9003115892410278
    2. ' afficher' → logprob: -0.9003115892410278
    3. ' effectuer' → logprob: -2.6503114700317383
    4. ' continuer' → logprob: -3.2753114700317383
    5. 'calcul' → logprob: -4.150311470031738
    6. 'aff' → logprob: -4.275311470031738
    7. ' vérifier' → logprob: -5.025311470031738
    8. ' print' → logprob: -5.025311470031738
    9. ' multiplier' → logprob: -5.275311470031738
    10. ' le' → logprob: -5.525311470031738

Token 14: 'er' (ID: 259)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6262437105178833
    2. 'é' → logprob: -1.1262437105178833
    3. 'er' → logprob: -2.5012435913085938
    4. 'r' → logprob: -2.8762435913085938
    5. 'a' → logprob: -6.626243591308594
    6. 'u' → logprob: -7.876243591308594
    7. '_' → logprob: -8.126243591308594
    8. 'z' → logprob: -8.501243591308594
    9. '#' → logprob: -9.126243591308594
    10. ' ' → logprob: -9.376243591308594

Token 15: ' cette' (ID: 7696)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06681983172893524
    2. ' ' → logprob: -2.816819906234741
    3. '```' → logprob: -5.941819667816162
    4. ':' → logprob: -7.566819667816162
    5. '`' → logprob: -7.566819667816162
    6. ' _' → logprob: -8.44182014465332
    7. ''' → logprob: -8.56682014465332
    8. '(' → logprob: -8.69182014465332
    9. ',' → logprob: -9.31682014465332
    10. 's' → logprob: -9.69182014465332

Token 16: ' valeur' (ID: 41664)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.029395533725619316
    2. '_' → logprob: -3.779395580291748
    3. ' valeur' → logprob: -5.279395580291748
    4. '  ' → logprob: -8.40439510345459
    5. ' )' → logprob: -9.15439510345459
    6. ' _' → logprob: -9.27939510345459
    7. 's' → logprob: -9.27939510345459
    8. ' ligne' → logprob: -9.65439510345459
    9. ' ' → logprob: -9.77939510345459
    10. '   ' → logprob: -10.27939510345459

Token 17: ' dans' (ID: 2671)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.026209143921732903
    2. 'nombre' → logprob: -4.026209354400635
    3. 'x' → logprob: -5.151209354400635
    4. '```' → logprob: -7.651209354400635
    5. '`' → logprob: -8.151208877563477
    6. '#' → logprob: -8.151208877563477
    7. 'i' → logprob: -8.276208877563477
    8. 'num' → logprob: -8.526208877563477
    9. 'number' → logprob: -9.026208877563477
    10. 'input' → logprob: -9.276208877563477

Token 18: ' la' (ID: 557)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.6478065252304077
    2. ' la' → logprob: -1.1478065252304077
    3. 'une' → logprob: -2.1478066444396973
    4. 'la' → logprob: -3.7728066444396973
    5. ' ' → logprob: -5.147806644439697
    6. ' a' → logprob: -5.147806644439697
    7. 'a' → logprob: -6.272806644439697
    8. 'le' → logprob: -6.647806644439697
    9. ' un' → logprob: -6.772806644439697
    10. ' ' → logprob: -7.272806644439697

Token 19: ' variable' (ID: 11076)
  Prédit: ' variable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' variable' → logprob: -0.11295168846845627
    2. 'variable' → logprob: -2.4879517555236816
    3. ' ' → logprob: -3.9879517555236816
    4. '_' → logprob: -5.612951755523682
    5. 'var' → logprob: -8.487951278686523
    6. '```' → logprob: -8.612951278686523
    7. '_variable' → logprob: -8.737951278686523
    8. ' ' → logprob: -8.862951278686523
    9. '`' → logprob: -9.112951278686523
    10. ' var' → logprob: -9.237951278686523

Token 20: ' '' (ID: 461)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3736464977264404
    2. 'n' → logprob: -1.4986464977264404
    3. 'nombre' → logprob: -1.6236464977264404
    4. '_' → logprob: -2.2486464977264404
    5. ' nombre' → logprob: -2.3736464977264404
    6. ' n' → logprob: -2.9986464977264404
    7. ' entier' → logprob: -4.1236467361450195
    8. '`' → logprob: -4.3736467361450195
    9. 'ent' → logprob: -4.4986467361450195
    10. 's' → logprob: -4.9986467361450195

Token 21: 'n' (ID: 77)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.0653642937541008
    2. 'n' → logprob: -2.815364360809326
    3. 'num' → logprob: -6.940364360809326
    4. 'number' → logprob: -7.065364360809326
    5. 'nb' → logprob: -7.565364360809326
    6. 'ent' → logprob: -7.815364360809326
    7. 'user' → logprob: -8.565363883972168
    8. '`' → logprob: -8.940363883972168
    9. ' nombre' → logprob: -8.940363883972168
    10. 'x' → logprob: -9.440363883972168

Token 22: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.36623331904411316
    2. ')' → logprob: -1.6162333488464355
    3. 'n' → logprob: -2.8662333488464355
    4. '')' → logprob: -4.1162333488464355
    5. 'e' → logprob: -4.9912333488464355
    6. '.' → logprob: -5.3662333488464355
    7. ':' → logprob: -5.4912333488464355
    8. '#' → logprob: -5.4912333488464355
    9. '```' → logprob: -6.1162333488464355
    10. '']' → logprob: -6.2412333488464355

Token 23: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0007968813297338784
    2. ' ' → logprob: -7.500796794891357
    3. ' n' → logprob: -9.250797271728516
    4. 'i' → logprob: -10.500797271728516
    5. '_' → logprob: -11.125797271728516
    6. ':' → logprob: -11.250797271728516
    7. 'a' → logprob: -11.375797271728516
    8. '```' → logprob: -11.625797271728516
    9. ' 
' → logprob: -11.625797271728516
    10. 'x' → logprob: -11.750797271728516

Token 24: ' '' (ID: 461)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.001368453842587769
    2. ' n' → logprob: -6.626368522644043
    3. ' ' → logprob: -10.126368522644043
    4. ' ' → logprob: -14.126368522644043
    5. '#' → logprob: -15.126368522644043
    6. ' ```' → logprob: -15.376368522644043
    7. 's' → logprob: -15.501368522644043
    8. 'x' → logprob: -15.626368522644043
    9. ' #' → logprob: -16.001367568969727
    10. ' 
' → logprob: -16.126367568969727

Token 25: 'input' (ID: 2586)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.6312321753939614e-05
    2. ' n' → logprob: -10.875036239624023
    3. ' ' → logprob: -11.875036239624023
    4. '#' → logprob: -12.375036239624023
    5. '```' → logprob: -13.375036239624023
    6. '`' → logprob: -14.375036239624023
    7. ''' → logprob: -14.875036239624023
    8. 'try' → logprob: -15.125036239624023
    9. ' `' → logprob: -15.250036239624023
    10. '')' → logprob: -15.375036239624023

Token 26: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18344028294086456
    2. '('' → logprob: -1.8084403276443481
    3. '("' → logprob: -6.308440208435059
    4. '()' → logprob: -6.933440208435059
    5. ''' → logprob: -7.808440208435059
    6. ')' → logprob: -8.808440208435059
    7. '("")' → logprob: -8.808440208435059
    8. '(
' → logprob: -10.308440208435059
    9. '')' → logprob: -10.558440208435059
    10. '("("' → logprob: -11.183440208435059

Token 27: ''' (ID: 6)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.5932585597038269
    2. ')' → logprob: -1.2182586193084717
    3. '(' → logprob: -2.0932586193084717
    4. '')' → logprob: -4.343258380889893
    5. '("' → logprob: -4.468258380889893
    6. ''' → logprob: -6.343258380889893
    7. ')'' → logprob: -7.093258380889893
    8. '()' → logprob: -7.343258380889893
    9. '(
' → logprob: -8.84325885772705
    10. ''''' → logprob: -9.34325885772705

Token 28: ' lit' (ID: 11980)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006367524620145559
    2. 'n' → logprob: -5.5063676834106445
    3. '(
' → logprob: -6.5063676834106445
    4. ')' → logprob: -8.256367683410645
    5. '(n' → logprob: -9.131367683410645
    6. '=' → logprob: -9.381367683410645
    7. ',' → logprob: -9.631367683410645
    8. '#' → logprob: -9.756367683410645
    9. '()' → logprob: -10.131367683410645
    10. 's' → logprob: -10.256367683410645

Token 29: ' une' (ID: 2463)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13791704177856445
    2. '()' → logprob: -2.1379170417785645
    3. ' une' → logprob: -5.5129170417785645
    4. ' la' → logprob: -6.2629170417785645
    5. ' ' → logprob: -7.0129170417785645
    6. 'l' → logprob: -7.5129170417785645
    7. 'une' → logprob: -7.5129170417785645
    8. '('' → logprob: -7.7629170417785645
    9. ' l' → logprob: -7.7629170417785645
    10. 's' → logprob: -8.012916564941406

Token 30: ' ligne' (ID: 19583)
  Prédit: ' chaîne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.681518018245697
    2. ' ' → logprob: -0.931518018245697
    3. ' ligne' → logprob: -3.056518077850342
    4. ' chaine' → logprob: -3.931518077850342
    5. ' string' → logprob: -4.556518077850342
    6. 'chaine' → logprob: -4.681518077850342
    7. ' valeur' → logprob: -5.556518077850342
    8. 'cha' → logprob: -6.306518077850342
    9. 's' → logprob: -6.556518077850342
    10. 'entrée' → logprob: -6.931518077850342

Token 31: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7437241673469543
    2. 'n' → logprob: -0.7437241673469543
    3. ')' → logprob: -4.618724346160889
    4. ',' → logprob: -4.868724346160889
    5. ' ' → logprob: -5.118724346160889
    6. '(
' → logprob: -5.118724346160889
    7. ' (' → logprob: -5.368724346160889
    8. '#' → logprob: -5.993724346160889
    9. '(n' → logprob: -6.118724346160889
    10. '()' → logprob: -6.118724346160889

Token 32: ' texte' (ID: 53492)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.5538683533668518
    2. 'texte' → logprob: -1.178868293762207
    3. ' code' → logprob: -2.803868293762207
    4. ' texte' → logprob: -3.553868293762207
    5. 'l' → logprob: -4.928868293762207
    6. 's' → logprob: -5.053868293762207
    7. 'commande' → logprob: -5.178868293762207
    8. 'entrée' → logprob: -6.053868293762207
    9. 't' → logprob: -6.553868293762207
    10. 'input' → logprob: -7.178868293762207

Token 33: ' au' (ID: 2791)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -6.074907287256792e-05
    2. ',' → logprob: -10.75006103515625
    3. '#' → logprob: -11.25006103515625
    4. '
' → logprob: -12.25006103515625
    5. ' n' → logprob: -12.50006103515625
    6. '```' → logprob: -12.50006103515625
    7. ')' → logprob: -13.00006103515625
    8. ' ' → logprob: -13.62506103515625
    9. 'x' → logprob: -13.62506103515625
    10. '(' → logprob: -13.87506103515625

Token 34: ' clavier' (ID: 187878)
  Prédit: ' clavier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' clavier' → logprob: -0.9334628582000732
    2. 'format' → logprob: -1.0584628582000732
    3. 'input' → logprob: -2.3084628582000732
    4. 'cl' → logprob: -2.6834628582000732
    5. 'près' → logprob: -3.1834628582000732
    6. 'n' → logprob: -4.433463096618652
    7. 'keyboard' → logprob: -4.808463096618652
    8. 'stdin' → logprob: -5.308463096618652
    9. 'terminal' → logprob: -5.558463096618652
    10. 'entrée' → logprob: -6.058463096618652

Token 35: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.700132997939363e-05
    2. '#' → logprob: -11.750017166137695
    3. '```' → logprob: -12.500017166137695
    4. ',' → logprob: -13.000017166137695
    5. ' 
' → logprob: -14.875017166137695
    6. '
' → logprob: -15.000017166137695
    7. '' → logprob: -15.125017166137695
    8. ' ' → logprob: -15.125017166137695
    9. '`' → logprob: -15.250017166137695
    10. '

' → logprob: -15.250017166137695

Token 36: ' '' (ID: 461)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0036262006033211946
    2. ' n' → logprob: -6.128626346588135
    3. ')' → logprob: -7.628626346588135
    4. ',' → logprob: -8.503625869750977
    5. ' ' → logprob: -8.503625869750977
    6. ' )' → logprob: -9.253625869750977
    7. '#' → logprob: -9.503625869750977
    8. 'a' → logprob: -9.628625869750977
    9. 't' → logprob: -10.378625869750977
    10. 'et' → logprob: -10.628625869750977

Token 37: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0051325964741408825
    2. ' int' → logprob: -5.755132675170898
    3. 'n' → logprob: -6.380132675170898
    4. 'input' → logprob: -8.880132675170898
    5. '=int' → logprob: -9.880132675170898
    6. ')' → logprob: -11.005132675170898
    7. ' n' → logprob: -11.130132675170898
    8. 'ent' → logprob: -11.630132675170898
    9. '`' → logprob: -11.880132675170898
    10. '```' → logprob: -12.255132675170898

Token 38: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5331811904907227
    2. '(' → logprob: -0.9081811904907227
    3. '('' → logprob: -4.658181190490723
    4. '(input' → logprob: -9.283181190490723
    5. '()`' → logprob: -9.658181190490723
    6. '("""' → logprob: -9.783181190490723
    7. '("' → logprob: -9.908181190490723
    8. '(...)' → logprob: -10.033181190490723
    9. '```' → logprob: -10.283181190490723
    10. '(
' → logprob: -10.658181190490723

Token 39: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4992992877960205
    2. '(' → logprob: -0.9992992877960205
    3. '()' → logprob: -3.8742992877960205
    4. '('' → logprob: -6.374299049377441
    5. '```' → logprob: -7.124299049377441
    6. '(
' → logprob: -8.249299049377441
    7. ')`' → logprob: -8.749299049377441
    8. ' )' → logprob: -8.749299049377441
    9. '(`' → logprob: -8.999299049377441
    10. '(convert' → logprob: -9.124299049377441

Token 40: ' convert' (ID: 8452)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0033142424654215574
    2. 'convert' → logprob: -6.503314018249512
    3. '(convert' → logprob: -7.378314018249512
    4. '(
' → logprob: -7.878314018249512
    5. ')' → logprob: -8.628314018249512
    6. ' convert' → logprob: -8.753314018249512
    7. ' convertir' → logprob: -9.003314018249512
    8. ' transforme' → logprob: -9.128314018249512
    9. ' (' → logprob: -9.753314018249512
    10. '()' → logprob: -10.253314018249512

Token 41: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.016310598701238632
    2. 'i' → logprob: -4.141310691833496
    3. 'ir' → logprob: -9.266310691833496
    4. ' it' → logprob: -9.766310691833496
    5. '```' → logprob: -10.016310691833496
    6. '

' → logprob: -11.016310691833496
    7. 'ît' → logprob: -11.891310691833496
    8. '   ' → logprob: -12.016310691833496
    9. 'is' → logprob: -12.141310691833496
    10. '#' → logprob: -12.641310691833496

Token 42: ' ce' (ID: 2357)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0038171762134879827
    2. ' (' → logprob: -5.878817081451416
    3. ' ' → logprob: -8.003817558288574
    4. '(n' → logprob: -8.878817558288574
    5. '(
' → logprob: -8.878817558288574
    6. 'l' → logprob: -9.003817558288574
    7. ')' → logprob: -10.128817558288574
    8. ',' → logprob: -10.253817558288574
    9. 'n' → logprob: -10.503817558288574
    10. '```' → logprob: -10.628817558288574

Token 43: ' texte' (ID: 53492)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.015114665031433
    2. '_' → logprob: -1.140114665031433
    3. 'es' → logprob: -2.3901147842407227
    4. ' espace' → logprob: -2.5151147842407227
    5. 'n' → logprob: -3.0151147842407227
    6. ''' → logprob: -4.515114784240723
    7. ' )' → logprob: -4.765114784240723
    8. ' 
' → logprob: -4.890114784240723
    9. ' n' → logprob: -4.890114784240723
    10. 'u' → logprob: -5.390114784240723

Token 44: ' en' (ID: 469)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005176239646971226
    2. '(n' → logprob: -6.255176067352295
    3. 'n' → logprob: -6.505176067352295
    4. '(
' → logprob: -7.005176067352295
    5. 's' → logprob: -7.880176067352295
    6. ' (' → logprob: -8.755176544189453
    7. ')' → logprob: -9.630176544189453
    8. ',' → logprob: -9.755176544189453
    9. '()' → logprob: -9.755176544189453
    10. '('' → logprob: -11.005176544189453

Token 45: ' entier' (ID: 80473)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.8209885954856873
    2. ' ' → logprob: -0.9459885954856873
    3. ' entier' → logprob: -2.070988655090332
    4. ' int' → logprob: -3.820988655090332
    5. ' nombre' → logprob: -4.820988655090332
    6. 'ent' → logprob: -5.070988655090332
    7. ' ent' → logprob: -6.070988655090332
    8. 'un' → logprob: -6.570988655090332
    9. ' ' → logprob: -6.695988655090332
    10. 'int' → logprob: -6.820988655090332

Token 46: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.320199877838604e-07
    2. ' n' → logprob: -15.625
    3. '```' → logprob: -16.375
    4. '#' → logprob: -16.875
    5. '
' → logprob: -17.5
    6. 'x' → logprob: -17.75
    7. '\n' → logprob: -17.75
    8. ':' → logprob: -18.75
    9. '\' → logprob: -18.875
    10. '	n' → logprob: -19.125

Token 47: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.842555426876061e-06
    2. '```' → logprob: -13.000004768371582
    3. ':' → logprob: -13.375004768371582
    4. '#' → logprob: -15.125004768371582
    5. ',' → logprob: -15.500004768371582
    6. '\n' → logprob: -16.1250057220459
    7. '\' → logprob: -16.2500057220459
    8. '`' → logprob: -16.2500057220459
    9. ' n' → logprob: -16.7500057220459
    10. '

' → logprob: -17.2500057220459

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008615515194833279
    2. '=' → logprob: -4.758615493774414
    3. ' ' → logprob: -14.508615493774414
    4. '=int' → logprob: -15.758615493774414
    5. ' ' → logprob: -16.008615493774414
    6. '=input' → logprob: -16.633615493774414
    7. ' =
' → logprob: -16.758615493774414
    8. ',' → logprob: -17.758615493774414
    9. ' =)' → logprob: -18.383615493774414
    10. 'space' → logprob: -18.508615493774414

Token 49: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.0017027945723384619
    2. 'int' → logprob: -6.376702785491943
    3. ' input' → logprob: -14.876703262329102
    4. ' ' → logprob: -16.2517032623291
    5. '=int' → logprob: -16.3767032623291
    6. ' ' → logprob: -17.0017032623291
    7. '<int' → logprob: -17.5017032623291
    8. '(int' → logprob: -17.5017032623291
    9. '[int' → logprob: -17.6267032623291
    10. 'input' → logprob: -18.3767032623291

Token 50: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6932187676429749
    2. '(input' → logprob: -0.6932187676429749
    3. '('' → logprob: -10.443219184875488
    4. ' (' → logprob: -10.568219184875488
    5. '()' → logprob: -12.068219184875488
    6. '(
' → logprob: -12.943219184875488
    7. 'input' → logprob: -12.943219184875488
    8. '(user' → logprob: -13.193219184875488
    9. '(`' → logprob: -14.318219184875488
    10. '(

' → logprob: -14.693219184875488

Token 51: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1316046416759491
    2. '()' → logprob: -2.3816046714782715
    3. '("("' → logprob: -4.3816046714782715
    4. '())' → logprob: -4.5066046714782715
    5. '('' → logprob: -5.1316046714782715
    6. '("' → logprob: -7.2566046714782715
    7. '(""))' → logprob: -8.381604194641113
    8. ')' → logprob: -9.006604194641113
    9. '("")' → logprob: -9.131604194641113
    10. '(()' → logprob: -9.256604194641113

Token 52: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0409610271453857
    2. '#' → logprob: -1.6659610271453857
    3. ' ' → logprob: -1.6659610271453857
    4. '<|end|>' → logprob: -2.2909610271453857
    5. ' if' → logprob: -2.9159610271453857
    6. 'if' → logprob: -3.1659610271453857
    7. '
' → logprob: -3.2909610271453857
    8. ' 
' → logprob: -4.790961265563965
    9. 'n' → logprob: -5.790961265563965
    10. '*' → logprob: -6.165961265563965

Token 53: ' Dem' (ID: 9458)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.21940651535987854
    2. 'if' → logprob: -1.7194064855575562
    3. ' for' → logprob: -4.719406604766846
    4. 'for' → logprob: -5.219406604766846
    5. '#' → logprob: -6.219406604766846
    6. ' ' → logprob: -7.219406604766846
    7. ' #' → logprob: -7.969406604766846
    8. 'factor' → logprob: -9.594406127929688
    9. ' while' → logprob: -9.719406127929688
    10. 's' → logprob: -9.719406127929688

Token 54: 'ander' (ID: 9330)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4339541792869568
    2. 'ar' → logprob: -2.3089542388916016
    3. 'ander' → logprob: -2.4339542388916016
    4. 'andez' → logprob: -2.6839542388916016
    5. 'arer' → logprob: -2.6839542388916016
    6. 'arrer' → logprob: -4.558954238891602
    7. 'e' → logprob: -5.683954238891602
    8. '#' → logprob: -6.183954238891602
    9. 'er' → logprob: -6.433954238891602
    10. 'an' → logprob: -6.683954238891602

Token 55: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013984846882522106
    2. '()' → logprob: -4.638984680175781
    3. '("' → logprob: -6.263984680175781
    4. '#' → logprob: -7.638984680175781
    5. ' (' → logprob: -7.763984680175781
    6. ' ' → logprob: -8.138984680175781
    7. '('' → logprob: -8.388984680175781
    8. '(n' → logprob: -8.763984680175781
    9. ')' → logprob: -8.888984680175781
    10. 'à' → logprob: -9.763984680175781

Token 56: ' l' (ID: 305)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.9861472845077515
    2. ' l' → logprob: -1.1111472845077515
    3. 'l' → logprob: -1.9861472845077515
    4. ' ' → logprob: -2.486147403717041
    5. ' n' → logprob: -3.486147403717041
    6. ' user' → logprob: -4.736147403717041
    7. 'n' → logprob: -5.236147403717041
    8. '_' → logprob: -5.361147403717041
    9. '<|end|>' → logprob: -5.361147403717041
    10. 'un' → logprob: -5.611147403717041

Token 57: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.49011102318763733
    2. ''' → logprob: -2.2401111125946045
    3. 'a' → logprob: -2.4901111125946045
    4. '_' → logprob: -2.8651111125946045
    5. ''ent' → logprob: -3.1151111125946045
    6. 'e' → logprob: -3.4901111125946045
    7. 'ombre' → logprob: -4.615110874176025
    8. '''' → logprob: -5.240110874176025
    9. ''a' → logprob: -5.365110874176025
    10. 'u' → logprob: -5.365110874176025

Token 58: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.27602419257164
    2. '()' → logprob: -1.5260242223739624
    3. '('' → logprob: -4.901024341583252
    4. '("' → logprob: -5.651024341583252
    5. ' (' → logprob: -5.776024341583252
    6. ')' → logprob: -5.901024341583252
    7. ' )' → logprob: -7.026024341583252
    8. ' de' → logprob: -7.401024341583252
    9. ' ' → logprob: -7.526024341583252
    10. '("""' → logprob: -7.526024341583252

Token 59: ' saisir' (ID: 152120)
  Prédit: ' saisir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' saisir' → logprob: -0.3539038598537445
    2. 's' → logprob: -1.228903889656067
    3. 'entr' → logprob: -6.478903770446777
    4. 'r' → logprob: -6.728903770446777
    5. 'n' → logprob: -7.103903770446777
    6. ' entrer' → logprob: -7.853903770446777
    7. ' sais' → logprob: -8.978903770446777
    8. 'input' → logprob: -8.978903770446777
    9. ' n' → logprob: -8.978903770446777
    10. ' continuer' → logprob: -9.103903770446777

Token 60: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.3469955325126648
    2. ' ' → logprob: -1.3469955921173096
    3. '  ' → logprob: -4.8469953536987305
    4. '(' → logprob: -5.2219953536987305
    5. 'un' → logprob: -5.4719953536987305
    6. '()' → logprob: -5.7219953536987305
    7. ' ' → logprob: -5.9719953536987305
    8. ')' → logprob: -6.4719953536987305
    9. ' une' → logprob: -6.7219953536987305
    10. ' (' → logprob: -6.8469953536987305

Token 61: ' liste' (ID: 31719)
  Prédit: ' autre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' autre' → logprob: -1.1137726306915283
    2. ' ' → logprob: -1.4887726306915283
    3. ' valeur' → logprob: -2.2387726306915283
    4. ' chaîne' → logprob: -2.2387726306915283
    5. ' deuxième' → logprob: -2.4887726306915283
    6. ' phrase' → logprob: -3.2387726306915283
    7. 'de' → logprob: -3.3637726306915283
    8. ' seconde' → logprob: -4.238772392272949
    9. ' chaine' → logprob: -4.738772392272949
    10. 'chaine' → logprob: -4.863772392272949

Token 62: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.702763557434082
    2. '(' → logprob: -2.327763557434082
    3. '[' → logprob: -2.702763557434082
    4. ' de' → logprob: -2.827763557434082
    5. '[]' → logprob: -2.827763557434082
    6. 'a' → logprob: -3.077763557434082
    7. 's' → logprob: -3.077763557434082
    8. '()' → logprob: -3.827763557434082
    9. '_' → logprob: -3.952763557434082
    10. 'es' → logprob: -4.202763557434082

Token 63: ' nombres' (ID: 76205)
  Prédit: ' nombres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.13406139612197876
    2. 'n' → logprob: -2.759061336517334
    3. ' n' → logprob: -4.259061336517334
    4. ' espaces' → logprob: -4.509061336517334
    5. 'nombre' → logprob: -4.634061336517334
    6. ' ent' → logprob: -5.259061336517334
    7. ' nombre' → logprob: -5.509061336517334
    8. 's' → logprob: -5.759061336517334
    9. 'ent' → logprob: -6.134061336517334
    10. 'space' → logprob: -6.884061336517334

Token 64: ' ent' (ID: 1121)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.21533790230751038
    2. ' ' → logprob: -2.8403379917144775
    3. ' ,' → logprob: -2.9653379917144775
    4. ',' → logprob: -4.090337753295898
    5. '[' → logprob: -4.965337753295898
    6. '[]' → logprob: -4.965337753295898
    7. 'es' → logprob: -5.090337753295898
    8. 'n' → logprob: -5.215337753295898
    9. ' []' → logprob: -5.215337753295898
    10. 'e' → logprob: -5.465337753295898

Token 65: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.001353806466795504
    2. 'i' → logprob: -6.751353740692139
    3. 'ier' → logprob: -8.626354217529297
    4. '```' → logprob: -13.501354217529297
    5. '#' → logprob: -14.376354217529297
    6. '   ' → logprob: -14.876354217529297
    7. 'ières' → logprob: -15.001354217529297
    8. 'ers' → logprob: -15.001354217529297
    9. '       ' → logprob: -16.001354217529297
    10. '`' → logprob: -16.376354217529297

Token 66: ' sépar' (ID: 97160)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.489775538444519
    2. 's' → logprob: -1.489775538444519
    3. ' ' → logprob: -1.864775538444519
    4. '(' → logprob: -1.989775538444519
    5. '[' → logprob: -2.6147756576538086
    6. ' ,' → logprob: -2.6147756576538086
    7. ' (' → logprob: -3.3647756576538086
    8. '()' → logprob: -3.9897756576538086
    9. 'l' → logprob: -4.489775657653809
    10. ' =' → logprob: -5.114775657653809

Token 67: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.18033187091350555
    2. 'é' → logprob: -1.805331826210022
    3. 'es' → logprob: -8.30533218383789
    4. 'ée' → logprob: -8.55533218383789
    5. '```' → logprob: -9.55533218383789
    6. 'e' → logprob: -10.43033218383789
    7. 's' → logprob: -11.30533218383789
    8. 'ées' → logprob: -11.43033218383789
    9. 'ès' → logprob: -11.93033218383789
    10. '�' → logprob: -12.18033218383789

Token 68: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.3431139588356018
    2. 'par' → logprob: -1.343113899230957
    3. 'es' → logprob: -4.218113899230957
    4. '```' → logprob: -5.968113899230957
    5. 'space' → logprob: -6.218113899230957
    6. ' espaces' → logprob: -6.343113899230957
    7. '<|end|>' → logprob: -6.343113899230957
    8. ''espace' → logprob: -6.843113899230957
    9. '_par' → logprob: -6.843113899230957
    10. '(space' → logprob: -7.218113899230957

Token 69: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.5964054465293884
    2. ' espaces' → logprob: -1.7214055061340332
    3. 'es' → logprob: -2.471405506134033
    4. 'des' → logprob: -2.846405506134033
    5. ''espace' → logprob: -3.096405506134033
    6. 'spaces' → logprob: -4.096405506134033
    7. ' ' → logprob: -4.346405506134033
    8. ''esp' → logprob: -4.471405506134033
    9. ' espace' → logprob: -4.596405506134033
    10. 'space' → logprob: -4.971405506134033

Token 70: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.16708414256572723
    2. 'esp' → logprob: -2.167084217071533
    3. 'es' → logprob: -3.542084217071533
    4. ' espace' → logprob: -5.667084217071533
    5. ''esp' → logprob: -5.917084217071533
    6. 'spaces' → logprob: -6.542084217071533
    7. ''espace' → logprob: -6.792084217071533
    8. 'space' → logprob: -7.542084217071533
    9. ' ' → logprob: -8.417083740234375
    10. '_' → logprob: -8.417083740234375

Token 71: '
' (ID: 198)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.638115406036377
    2. 's' → logprob: -1.263115406036377
    3. 'n' → logprob: -2.388115406036377
    4. ' l' → logprob: -3.513115406036377
    5. 'x' → logprob: -4.763115406036377
    6. 'numbers' → logprob: -4.763115406036377
    7. 'lst' → logprob: -4.888115406036377
    8. 'input' → logprob: -5.513115406036377
    9. 'liste' → logprob: -5.638115406036377
    10. ' ' → logprob: -5.638115406036377

Token 72: '#' (ID: 2)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.7290045619010925
    2. 'l' → logprob: -1.4790046215057373
    3. ' numbers' → logprob: -2.3540046215057373
    4. 's' → logprob: -3.3540046215057373
    5. ' lst' → logprob: -3.6040046215057373
    6. ' l' → logprob: -3.7290046215057373
    7. 'lst' → logprob: -3.8540046215057373
    8. 'liste' → logprob: -3.9790046215057373
    9. 'nums' → logprob: -4.229004383087158
    10. 'n' → logprob: -4.229004383087158

Token 73: ' '' (ID: 461)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.29186639189720154
    2. 'numbers' → logprob: -2.0418663024902344
    3. ' l' → logprob: -3.5418663024902344
    4. 'lst' → logprob: -4.041866302490234
    5. ' numbers' → logprob: -4.166866302490234
    6. 's' → logprob: -4.541866302490234
    7. ' lst' → logprob: -4.666866302490234
    8. 'liste' → logprob: -4.791866302490234
    9. 'n' → logprob: -5.041866302490234
    10. 'ent' → logprob: -5.291866302490234

Token 74: 'input' (ID: 2586)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.9967608451843262
    2. 'liste' → logprob: -1.6217608451843262
    3. 'numbers' → logprob: -1.7467608451843262
    4. 'l' → logprob: -2.121760845184326
    5. 'input' → logprob: -3.496760845184326
    6. 'values' → logprob: -3.996760845184326
    7. 'list' → logprob: -3.996760845184326
    8. 'nums' → logprob: -4.496760845184326
    9. 'ent' → logprob: -4.621760845184326
    10. 'li' → logprob: -4.621760845184326

Token 75: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.010751964524388313
    2. '().' → logprob: -4.635752201080322
    3. '())' → logprob: -7.010752201080322
    4. '()

' → logprob: -10.385751724243164
    5. ')' → logprob: -11.385751724243164
    6. '(' → logprob: -11.385751724243164
    7. ' ()' → logprob: -11.510751724243164
    8. '()
' → logprob: -11.510751724243164
    9. '()]' → logprob: -12.510751724243164
    10. '()>' → logprob: -12.885751724243164

Token 76: ''' (ID: 6)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4794065058231354
    2. '().' → logprob: -0.979406476020813
    3. '())' → logprob: -5.854406356811523
    4. ')' → logprob: -6.354406356811523
    5. '(' → logprob: -7.604406356811523
    6. '()

' → logprob: -9.604406356811523
    7. 's' → logprob: -10.729406356811523
    8. '()
' → logprob: -10.729406356811523
    9. '()).' → logprob: -11.604406356811523
    10. '.split' → logprob: -11.604406356811523

Token 77: ' lit' (ID: 11980)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.27623799443244934
    2. '().' → logprob: -2.276237964630127
    3. ')' → logprob: -2.526237964630127
    4. 's' → logprob: -3.901237964630127
    5. ' )' → logprob: -4.151237964630127
    6. '.' → logprob: -5.151237964630127
    7. '(' → logprob: -5.651237964630127
    8. ' .' → logprob: -5.776237964630127
    9. '())' → logprob: -5.776237964630127
    10. '.split' → logprob: -6.276237964630127

Token 78: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09561821818351746
    2. ' une' → logprob: -2.72061824798584
    3. 'une' → logprob: -4.22061824798584
    4. '(' → logprob: -4.97061824798584
    5. ' ()' → logprob: -5.97061824798584
    6. ' ' → logprob: -8.34561824798584
    7. ')' → logprob: -8.59561824798584
    8. ' )' → logprob: -8.84561824798584
    9. 'a' → logprob: -9.09561824798584
    10. '_' → logprob: -9.97061824798584

Token 79: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.25556445121765137
    2. ' ligne' → logprob: -1.8805644512176514
    3. 'l' → logprob: -3.1305644512176514
    4. 'texte' → logprob: -4.7555646896362305
    5. 'liste' → logprob: -5.0055646896362305
    6. 'entrée' → logprob: -6.2555646896362305
    7. 'chaine' → logprob: -6.2555646896362305
    8. 's' → logprob: -6.3805646896362305
    9. 'input' → logprob: -6.8805646896362305
    10. 'a' → logprob: -6.8805646896362305

Token 80: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6832923889160156
    2. ' )' → logprob: -1.8082923889160156
    3. ' suivante' → logprob: -2.4332923889160156
    4. ' ' → logprob: -2.4332923889160156
    5. ')' → logprob: -3.0582923889160156
    6. ' =' → logprob: -3.8082923889160156
    7. 'au' → logprob: -4.433292388916016
    8. ' de' → logprob: -4.808292388916016
    9. 's' → logprob: -4.933292388916016
    10. ' au' → logprob: -4.933292388916016

Token 81: '#' (ID: 2)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.121695876121521
    2. 'n' → logprob: -1.121695876121521
    3. 's' → logprob: -1.621695876121521
    4. 'numbers' → logprob: -3.6216959953308105
    5. 'ligne' → logprob: -3.9966959953308105
    6. 'liste' → logprob: -4.2466959953308105
    7. 't' → logprob: -4.2466959953308105
    8. 'x' → logprob: -4.8716959953308105
    9. 'ent' → logprob: -4.8716959953308105
    10. ' )' → logprob: -5.2466959953308105

Token 82: ' '' (ID: 461)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.25842583179473877
    2. 'numbers' → logprob: -2.883425712585449
    3. 'liste' → logprob: -3.133425712585449
    4. 'lst' → logprob: -3.633425712585449
    5. ' l' → logprob: -4.133425712585449
    6. 'ligne' → logprob: -4.383425712585449
    7. 'val' → logprob: -4.508425712585449
    8. ' lst' → logprob: -4.883425712585449
    9. ' numbers' → logprob: -4.883425712585449
    10. 'nums' → logprob: -5.133425712585449

Token 83: 'split' (ID: 13627)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.654276967048645
    2. 'liste' → logprob: -1.529276967048645
    3. 'lst' → logprob: -1.779276967048645
    4. 'l' → logprob: -3.1542768478393555
    5. 'numbers' → logprob: -3.7792768478393555
    6. 'map' → logprob: -5.1542768478393555
    7. 'input' → logprob: -5.2792768478393555
    8. 'li' → logprob: -5.2792768478393555
    9. 'n' → logprob: -5.5292768478393555
    10. 'split' → logprob: -6.4042768478393555

Token 84: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0011490292381495237
    2. '(' → logprob: -7.2511491775512695
    3. '('' → logprob: -8.00114917755127
    4. ' ()' → logprob: -9.87614917755127
    5. '().' → logprob: -10.50114917755127
    6. '()]' → logprob: -11.87614917755127
    7. '("' → logprob: -12.25114917755127
    8. '(),' → logprob: -13.00114917755127
    9. '())' → logprob: -13.00114917755127
    10. '（）' → logprob: -13.12614917755127

Token 85: ''' (ID: 6)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.010575635358691216
    2. '(' → logprob: -5.135575771331787
    3. '().' → logprob: -6.260575771331787
    4. ' ()' → logprob: -6.385575771331787
    5. '('' → logprob: -7.885575771331787
    6. ')' → logprob: -8.510575294494629
    7. '())' → logprob: -8.635575294494629
    8. ' )' → logprob: -9.385575294494629
    9. '(
' → logprob: -10.510575294494629
    10. ' (' → logprob: -10.635575294494629

Token 86: ' div' (ID: 4223)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04426383599638939
    2. ' ()' → logprob: -3.4192638397216797
    3. '(' → logprob: -4.79426383972168
    4. '().' → logprob: -6.41926383972168
    5. ' (' → logprob: -7.79426383972168
    6. '('' → logprob: -9.79426383972168
    7. ' ' → logprob: -10.54426383972168
    8. ' ())' → logprob: -11.04426383972168
    9. '())' → logprob: -11.29426383972168
    10. ' ().' → logprob: -11.41926383972168

Token 87: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.03893542289733887
    2. '()' → logprob: -4.163935661315918
    3. 'se' → logprob: -4.663935661315918
    4. 'ide' → logprob: -5.788935661315918
    5. 'e' → logprob: -6.538935661315918
    6. 'de' → logprob: -6.913935661315918
    7. '(' → logprob: -7.163935661315918
    8. '#' → logprob: -7.288935661315918
    9. ')' → logprob: -7.288935661315918
    10. 't' → logprob: -7.288935661315918

Token 88: ' la' (ID: 557)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5282492637634277
    2. '()' → logprob: -1.0282492637634277
    3. '('' → logprob: -3.4032492637634277
    4. ' ()' → logprob: -4.653249263763428
    5. ' (' → logprob: -4.903249263763428
    6. ' ' → logprob: -6.778249263763428
    7. '("' → logprob: -7.778249263763428
    8. ' )' → logprob: -8.528249740600586
    9. ' la' → logprob: -8.528249740600586
    10. '("""' → logprob: -8.903249740600586

Token 89: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.2882016897201538
    2. 'chaine' → logprob: -1.7882016897201538
    3. 'ligne' → logprob: -3.5382018089294434
    4. ' ligne' → logprob: -4.038201808929443
    5. ' chaine' → logprob: -4.038201808929443
    6. 'cha' → logprob: -4.538201808929443
    7. 's' → logprob: -5.663201808929443
    8. 'l' → logprob: -6.788201808929443
    9. 'entrée' → logprob: -6.913201808929443
    10. 'string' → logprob: -7.788201808929443

Token 90: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004641472361981869
    2. ' ()' → logprob: -5.879641532897949
    3. '('' → logprob: -7.004641532897949
    4. '(' → logprob: -7.379641532897949
    5. 's' → logprob: -9.50464153289795
    6. '("' → logprob: -9.62964153289795
    7. '[]' → logprob: -11.25464153289795
    8. '()
' → logprob: -11.37964153289795
    9. ' (' → logprob: -11.37964153289795
    10. ')' → logprob: -11.37964153289795

Token 91: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.954484224319458
    2. ' espaces' → logprob: -0.954484224319458
    3. ' des' → logprob: -2.079484224319458
    4. ' un' → logprob: -4.204483985900879
    5. ' '' → logprob: -4.204483985900879
    6. ' ' → logprob: -4.579483985900879
    7. ' espace' → logprob: -4.954483985900879
    8. 'une' → logprob: -4.954483985900879
    9. 's' → logprob: -5.079483985900879
    10. '[]' → logprob: -5.204483985900879

Token 92: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.0770835354924202
    2. 'liste' → logprob: -2.7020835876464844
    3. 's' → logprob: -5.827083587646484
    4. 'list' → logprob: -6.952083587646484
    5. ' list' → logprob: -7.202083587646484
    6. ' chaîne' → logprob: -7.327083587646484
    7. 'chaine' → logprob: -7.577083587646484
    8. ' listes' → logprob: -7.702083587646484
    9. 'Liste' → logprob: -8.452083587646484
    10. ' ' → logprob: -9.327083587646484

Token 93: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2382085770368576
    2. '(' → logprob: -1.988208532333374
    3. '('' → logprob: -3.488208532333374
    4. ' ()' → logprob: -3.613208532333374
    5. ' (' → logprob: -5.488208770751953
    6. '[' → logprob: -5.738208770751953
    7. 's' → logprob: -5.738208770751953
    8. '("' → logprob: -6.488208770751953
    9. ')' → logprob: -6.488208770751953
    10. ' )' → logprob: -7.488208770751953

Token 94: ' sous' (ID: 14487)
  Prédit: ' chaînes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.29199621081352234
    2. ' espaces' → logprob: -1.4169962406158447
    3. 'esp' → logprob: -5.666996002197266
    4. ' chain' → logprob: -5.916996002197266
    5. 'cha' → logprob: -6.916996002197266
    6. ' chaîne' → logprob: -7.416996002197266
    7. 'chain' → logprob: -7.791996002197266
    8. ''esp' → logprob: -7.916996002197266
    9. ' '' → logprob: -8.041996002197266
    10. ' strings' → logprob: -8.166996002197266

Token 95: '-cha' (ID: 163177)
  Prédit: ' chaînes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.016501737758517265
    2. ' chain' → logprob: -4.7665019035339355
    3. '-chain' → logprob: -6.2665019035339355
    4. '-cha' → logprob: -6.3915019035339355
    5. 'chain' → logprob: -7.1415019035339355
    6. '-' → logprob: -7.2665019035339355
    7. '_chain' → logprob: -7.2665019035339355
    8. 'cha' → logprob: -7.3915019035339355
    9. ' chaîne' → logprob: -8.141501426696777
    10. '_' → logprob: -8.641501426696777

Token 96: 'înes' (ID: 171517)
  Prédit: 'înes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'înes' → logprob: -0.08668851107358932
    2. 'î' → logprob: -2.71168851852417
    3. 'nes' → logprob: -4.46168851852417
    4. 'ines' → logprob: -5.58668851852417
    5. ' nes' → logprob: -7.58668851852417
    6. 'r' → logprob: -8.461688041687012
    7. 'Î' → logprob: -9.336688041687012
    8. 'ı' → logprob: -9.586688041687012
    9. 'ï' → logprob: -9.961688041687012
    10. '   ' → logprob: -10.211688041687012

Token 97: ' selon' (ID: 27571)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9396647214889526
    2. 'n' → logprob: -1.1896647214889526
    3. ')' → logprob: -2.314664840698242
    4. ',' → logprob: -2.939664840698242
    5. ' )' → logprob: -3.564664840698242
    6. ' ' → logprob: -3.689664840698242
    7. '()' → logprob: -3.939664840698242
    8. '[' → logprob: -4.064664840698242
    9. ' n' → logprob: -4.189664840698242
    10. ' ,' → logprob: -4.564664840698242

Token 98: ' les' (ID: 1341)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.6708347201347351
    2. ' les' → logprob: -1.4208347797393799
    3. ' espaces' → logprob: -2.67083477973938
    4. 'les' → logprob: -3.29583477973938
    5. ''' → logprob: -3.54583477973938
    6. ' ' → logprob: -3.67083477973938
    7. 'l' → logprob: -3.67083477973938
    8. 's' → logprob: -4.170834541320801
    9. ' des' → logprob: -4.295834541320801
    10. ''esp' → logprob: -5.420834541320801

Token 99: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.18516585230827332
    2. 'esp' → logprob: -1.8101658821105957
    3. ''esp' → logprob: -5.435165882110596
    4. 'es' → logprob: -7.560165882110596
    5. 'spaces' → logprob: -8.560165405273438
    6. ''espace' → logprob: -9.185165405273438
    7. ' espace' → logprob: -9.435165405273438
    8. ' esp' → logprob: -9.810165405273438
    9. '’esp' → logprob: -10.810165405273438
    10. ' espacios' → logprob: -11.060165405273438

Token 100: '
' (ID: 198)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.605595052242279
    2. 'n' → logprob: -1.6055951118469238
    3. 'l' → logprob: -1.8555951118469238
    4. 'lst' → logprob: -3.355595111846924
    5. 'liste' → logprob: -3.980595111846924
    6. 'nums' → logprob: -4.480595111846924
    7. 's' → logprob: -4.980595111846924
    8. ' numbers' → logprob: -5.230595111846924
    9. 'a' → logprob: -5.605595111846924
    10. 'ent' → logprob: -5.730595111846924

Token 101: '#' (ID: 2)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -1.045667052268982
    2. 'l' → logprob: -1.420667052268982
    3. 'n' → logprob: -1.795667052268982
    4. 'lst' → logprob: -2.0456671714782715
    5. 'liste' → logprob: -3.0456671714782715
    6. 'nums' → logprob: -3.9206671714782715
    7. 'ent' → logprob: -4.1706671714782715
    8. 'nombre' → logprob: -6.0456671714782715
    9. 'list' → logprob: -6.0456671714782715
    10. ' numbers' → logprob: -6.0456671714782715

Token 102: ' '' (ID: 461)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.6688389778137207
    2. 'lst' → logprob: -1.1688389778137207
    3. 'l' → logprob: -3.0438389778137207
    4. ' lst' → logprob: -3.1688389778137207
    5. 'liste' → logprob: -3.5438389778137207
    6. ' numbers' → logprob: -3.9188389778137207
    7. 'nums' → logprob: -5.043838977813721
    8. 'list' → logprob: -5.418838977813721
    9. 'values' → logprob: -5.543838977813721
    10. ' nombres' → logprob: -5.793838977813721

Token 103: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.595003068447113
    2. 'list' → logprob: -0.845003068447113
    3. 'liste' → logprob: -4.595003128051758
    4. 'lst' → logprob: -5.345003128051758
    5. 'numbers' → logprob: -6.470003128051758
    6. ' map' → logprob: -7.220003128051758
    7. 'li' → logprob: -7.470003128051758
    8. ' list' → logprob: -7.970003128051758
    9. 'n' → logprob: -8.220003128051758
    10. ' lst' → logprob: -9.595003128051758

Token 104: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.11999358236789703
    2. '(' → logprob: -2.2449936866760254
    3. '(lambda' → logprob: -5.119993686676025
    4. '<int' → logprob: -7.494993686676025
    5. '()' → logprob: -8.494993209838867
    6. '(str' → logprob: -9.119993209838867
    7. '(
' → logprob: -9.744993209838867
    8. 'int' → logprob: -9.869993209838867
    9. '=int' → logprob: -9.869993209838867
    10. '[int' → logprob: -10.369993209838867

Token 105: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20165491104125977
    2. ',input' → logprob: -2.0766549110412598
    3. ')' → logprob: -3.0766549110412598
    4. ')'' → logprob: -5.07665491104126
    5. '(input' → logprob: -6.70165491104126
    6. ''' → logprob: -7.32665491104126
    7. ' ,' → logprob: -7.45165491104126
    8. ','' → logprob: -7.57665491104126
    9. ')`' → logprob: -8.201654434204102
    10. '),' → logprob: -8.701654434204102

Token 106: ' ...' (ID: 2550)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.08926397562026978
    2. ' input' → logprob: -2.464263916015625
    3. ')' → logprob: -8.339263916015625
    4. '(input' → logprob: -9.964263916015625
    5. ' )' → logprob: -11.089263916015625
    6. 'n' → logprob: -12.714263916015625
    7. '[input' → logprob: -12.839263916015625
    8. '=input' → logprob: -12.964263916015625
    9. '))' → logprob: -13.214263916015625
    10. ' ' → logprob: -13.214263916015625

Token 107: ')'' (ID: 45517)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.023800434544682503
    2. 'input' → logprob: -4.023800373077393
    3. ')' → logprob: -5.523800373077393
    4. ' (' → logprob: -7.148800373077393
    5. ' input' → logprob: -8.27380084991455
    6. '(' → logprob: -8.77380084991455
    7. '(n' → logprob: -9.02380084991455
    8. 'n' → logprob: -9.89880084991455
    9. '())' → logprob: -10.14880084991455
    10. ',input' → logprob: -10.14880084991455

Token 108: ' convert' (ID: 8452)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0798477828502655
    2. '(' → logprob: -3.704847812652588
    3. ' )' → logprob: -4.204847812652588
    4. 'n' → logprob: -4.329847812652588
    5. ' n' → logprob: -5.454847812652588
    6. '()' → logprob: -5.454847812652588
    7. '(
' → logprob: -5.704847812652588
    8. ',' → logprob: -5.829847812652588
    9. ' =' → logprob: -6.829847812652588
    10. 's' → logprob: -6.954847812652588

Token 109: 'it' (ID: 278)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.02508474886417389
    2. 'it' → logprob: -3.9000847339630127
    3. 'ise' → logprob: -6.900084972381592
    4. 'ue' → logprob: -7.275084972381592
    5. 't' → logprob: -7.775084972381592
    6. 'ère' → logprob: -7.775084972381592
    7. ')' → logprob: -8.275084495544434
    8. 'int' → logprob: -8.400084495544434
    9. '()' → logprob: -8.900084495544434
    10. 'er' → logprob: -8.900084495544434

Token 110: ' chaque' (ID: 21194)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9451103806495667
    2. '(input' → logprob: -1.1951103210449219
    3. 'list' → logprob: -1.8201103210449219
    4. 'input' → logprob: -3.445110321044922
    5. 'int' → logprob: -3.695110321044922
    6. ')' → logprob: -3.695110321044922
    7. '(int' → logprob: -3.945110321044922
    8. '(list' → logprob: -4.445110321044922
    9. ' (' → logprob: -5.195110321044922
    10. 'map' → logprob: -5.445110321044922

Token 111: ' sous' (ID: 14487)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.17385070025920868
    2. 'input' → logprob: -2.7988507747650146
    3. '(input' → logprob: -3.7988507747650146
    4. 'element' → logprob: -3.9238507747650146
    5. '(' → logprob: -4.2988505363464355
    6. ')' → logprob: -4.6738505363464355
    7. ' élément' → logprob: -5.4238505363464355
    8. 'elem' → logprob: -5.5488505363464355
    9. ' )' → logprob: -5.7988505363464355
    10. ' (' → logprob: -5.7988505363464355

Token 112: '-cha' (ID: 163177)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.923052191734314
    2. '_' → logprob: -1.423052191734314
    3. ' chaînes' → logprob: -1.673052191734314
    4. ' chaîne' → logprob: -2.6730523109436035
    5. '-' → logprob: -3.0480523109436035
    6. '_chain' → logprob: -4.4230523109436035
    7. 'chain' → logprob: -4.5480523109436035
    8. '-cha' → logprob: -5.2980523109436035
    9. '_str' → logprob: -5.5480523109436035
    10. ' chaine' → logprob: -5.5480523109436035

Token 113: 'îne' (ID: 55188)
  Prédit: 'îne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'îne' → logprob: -0.006808329839259386
    2. 'î' → logprob: -5.381808280944824
    3. 'ïne' → logprob: -6.881808280944824
    4. 'ne' → logprob: -7.381808280944824
    5. 'ine' → logprob: -7.881808280944824
    6. 'înes' → logprob: -9.381808280944824
    7. 'Î' → logprob: -10.881808280944824
    8. 'íne' → logprob: -11.506808280944824
    9. 'în' → logprob: -11.756808280944824
    10. 'ì' → logprob: -12.131808280944824

Token 114: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3081376254558563
    2. '(' → logprob: -1.4331376552581787
    3. '(n' → logprob: -5.1831374168396
    4. ',' → logprob: -5.5581374168396
    5. '(lambda' → logprob: -5.5581374168396
    6. '(input' → logprob: -5.6831374168396
    7. ' )' → logprob: -6.0581374168396
    8. 'n' → logprob: -6.8081374168396
    9. '(int' → logprob: -6.9331374168396
    10. '(str' → logprob: -7.3081374168396

Token 115: ' entier' (ID: 80473)
  Prédit: ' entier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entier' → logprob: -1.1205614805221558
    2. 'ent' → logprob: -1.2455614805221558
    3. ' int' → logprob: -1.7455614805221558
    4. 'int' → logprob: -2.3705615997314453
    5. ' ent' → logprob: -2.7455615997314453
    6. ' un' → logprob: -2.9955615997314453
    7. ' des' → logprob: -5.870561599731445
    8. 'un' → logprob: -7.870561599731445
    9. '_ent' → logprob: -8.745561599731445
    10. ' integer' → logprob: -8.995561599731445

Token 116: '
' (ID: 198)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lst' → logprob: -1.0148029327392578
    2. 'numbers' → logprob: -1.2648029327392578
    3. 'l' → logprob: -1.8898029327392578
    4. 'liste' → logprob: -2.514802932739258
    5. 'n' → logprob: -2.639802932739258
    6. 'nums' → logprob: -4.514802932739258
    7. 'li' → logprob: -4.889802932739258
    8. ' lst' → logprob: -5.139802932739258
    9. 'nombre' → logprob: -5.264802932739258
    10. 'ent' → logprob: -5.514802932739258

Token 117: '#' (ID: 2)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.7626815438270569
    2. 'lst' → logprob: -1.137681484222412
    3. 'l' → logprob: -2.637681484222412
    4. 'liste' → logprob: -3.012681484222412
    5. 'a' → logprob: -3.762681484222412
    6. 'nums' → logprob: -3.887681484222412
    7. 'n' → logprob: -4.137681484222412
    8. 'ent' → logprob: -4.637681484222412
    9. 'arr' → logprob: -5.012681484222412
    10. 'nombre' → logprob: -5.762681484222412

Token 118: ' '' (ID: 461)
  Prédit: ' lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lst' → logprob: -0.8503113985061646
    2. 'lst' → logprob: -1.2253113985061646
    3. 'numbers' → logprob: -2.100311279296875
    4. ' numbers' → logprob: -2.850311279296875
    5. 'liste' → logprob: -2.975311279296875
    6. 'l' → logprob: -4.225311279296875
    7. ' l' → logprob: -5.350311279296875
    8. ' liste' → logprob: -5.475311279296875
    9. ' nombres' → logprob: -5.725311279296875
    10. 'nums' → logprob: -5.725311279296875

Token 119: 'list' (ID: 2641)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -1.1337645053863525
    2. 'lst' → logprob: -1.2587645053863525
    3. 'list' → logprob: -1.3837645053863525
    4. 'numbers' → logprob: -2.6337645053863525
    5. 'n' → logprob: -3.2587645053863525
    6. ' lst' → logprob: -4.008764266967773
    7. 'l' → logprob: -5.383764266967773
    8. 'nums' → logprob: -5.633764266967773
    9. 'li' → logprob: -6.008764266967773
    10. ' numbers' → logprob: -7.258764266967773

Token 120: '(...)' (ID: 96375)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7190869450569153
    2. '()' → logprob: -0.8440869450569153
    3. '(map' → logprob: -2.5940868854522705
    4. '('' → logprob: -5.96908712387085
    5. '(input' → logprob: -6.34408712387085
    6. '(s' → logprob: -6.96908712387085
    7. ')' → logprob: -7.09408712387085
    8. '(int' → logprob: -7.59408712387085
    9. '(com' → logprob: -7.84408712387085
    10. '(...)' → logprob: -8.594086647033691

Token 121: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.050888657569885254
    2. '()' → logprob: -4.050888538360596
    3. '(' → logprob: -4.175888538360596
    4. '=' → logprob: -5.550888538360596
    5. ')'' → logprob: -5.800888538360596
    6. '')' → logprob: -6.175888538360596
    7. '('' → logprob: -6.425888538360596
    8. ''' → logprob: -6.550888538360596
    9. '(...)' → logprob: -6.800888538360596
    10. ' )' → logprob: -7.175888538360596

Token 122: ' convert' (ID: 8452)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14240172505378723
    2. '(' → logprob: -2.767401695251465
    3. ' =' → logprob: -2.767401695251465
    4. 's' → logprob: -5.892401695251465
    5. 'n' → logprob: -6.392401695251465
    6. ')' → logprob: -7.142401695251465
    7. '<|end|>' → logprob: -7.892401695251465
    8. '=list' → logprob: -8.517401695251465
    9. '(
' → logprob: -8.642401695251465
    10. '(n' → logprob: -8.642401695251465

Token 123: 'it' (ID: 278)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6813204288482666
    2. 'ise' → logprob: -1.1813204288482666
    3. 'er' → logprob: -2.0563204288482666
    4. 'ert' → logprob: -3.3063204288482666
    5. 'it' → logprob: -4.6813201904296875
    6. 't' → logprob: -5.5563201904296875
    7. '()' → logprob: -6.4313201904296875
    8. 'ize' → logprob: -6.6813201904296875
    9. 'iert' → logprob: -6.6813201904296875
    10. 'et' → logprob: -7.1813201904296875

Token 124: ' l' (ID: 305)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.739449679851532
    2. 'map' → logprob: -1.2394497394561768
    3. '(' → logprob: -2.8644497394561768
    4. 'list' → logprob: -2.9894497394561768
    5. 'input' → logprob: -3.1144497394561768
    6. 'la' → logprob: -3.6144497394561768
    7. '(list' → logprob: -3.8644497394561768
    8. '(input' → logprob: -4.364449501037598
    9. ' la' → logprob: -5.114449501037598
    10. 'l' → logprob: -5.864449501037598

Token 125: ''objet' (ID: 124566)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6464940309524536
    2. 'es' → logprob: -1.5214940309524536
    3. 'input' → logprob: -2.146493911743164
    4. 'a' → logprob: -3.271493911743164
    5. '(map' → logprob: -3.396493911743164
    6. 'map' → logprob: -3.646493911743164
    7. ')' → logprob: -4.521493911743164
    8. 'ist' → logprob: -5.771493911743164
    9. '```' → logprob: -6.021493911743164
    10. ' input' → logprob: -6.021493911743164

Token 126: ' '' (ID: 461)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.11786217987537384
    2. '(map' → logprob: -2.3678622245788574
    3. ' map' → logprob: -4.242862224578857
    4. '_map' → logprob: -6.742862224578857
    5. 'list' → logprob: -7.617862224578857
    6. '(' → logprob: -8.2428617477417
    7. ')' → logprob: -8.9928617477417
    8. 'to' → logprob: -9.2428617477417
    9. ',map' → logprob: -9.2428617477417
    10. 'filter' → logprob: -9.7428617477417

Token 127: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0013466615928336978
    2. ' map' → logprob: -6.626346588134766
    3. '(map' → logprob: -11.626346588134766
    4. '_map' → logprob: -13.001346588134766
    5. 'iterator' → logprob: -13.376346588134766
    6. '-map' → logprob: -13.751346588134766
    7. '	map' → logprob: -13.751346588134766
    8. ',map' → logprob: -13.876346588134766
    9. 'list' → logprob: -14.126346588134766
    10. 'm' → logprob: -14.251346588134766

Token 128: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5056049823760986
    2. '(...)' → logprob: -2.0056049823760986
    3. '()' → logprob: -2.2556049823760986
    4. '(map' → logprob: -2.7556049823760986
    5. '(int' → logprob: -3.6306049823760986
    6. ' en' → logprob: -3.6306049823760986
    7. '(list' → logprob: -4.1306047439575195
    8. ')' → logprob: -5.8806047439575195
    9. '(' → logprob: -5.8806047439575195
    10. 'int' → logprob: -6.1306047439575195

Token 129: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.9299202561378479
    2. '(' → logprob: -1.3049201965332031
    3. '()' → logprob: -2.304920196533203
    4. '(input' → logprob: -2.679920196533203
    5. 'input' → logprob: -3.929920196533203
    6. 'en' → logprob: -3.929920196533203
    7. '(list' → logprob: -4.179920196533203
    8. 'into' → logprob: -4.179920196533203
    9. '(map' → logprob: -4.429920196533203
    10. ' into' → logprob: -4.554920196533203

Token 130: ' liste' (ID: 31719)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.13744553923606873
    2. ' liste' → logprob: -2.1374454498291016
    3. 'une' → logprob: -5.262445449829102
    4. ' list' → logprob: -5.637445449829102
    5. 'liste' → logprob: -6.762445449829102
    6. 'list' → logprob: -8.012445449829102
    7. ' ' → logprob: -9.262445449829102
    8. ' a' → logprob: -10.012445449829102
    9. ' ' → logprob: -11.262445449829102
    10. 'a' → logprob: -11.387445449829102

Token 131: ' Python' (ID: 26534)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.7858555912971497
    2. 'numbers' → logprob: -1.1608555316925049
    3. 'l' → logprob: -2.160855531692505
    4. 'ent' → logprob: -3.410855531692505
    5. 'liste' → logprob: -3.910855531692505
    6. 'a' → logprob: -4.160855770111084
    7. 'nums' → logprob: -4.410855770111084
    8. 'L' → logprob: -4.535855770111084
    9. 'n' → logprob: -5.285855770111084
    10. 'arr' → logprob: -5.660855770111084

Token 132: '
' (ID: 198)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.9079651832580566
    2. 's' → logprob: -1.1579651832580566
    3. 'n' → logprob: -2.0329651832580566
    4. 'l' → logprob: -3.1579651832580566
    5. 'lst' → logprob: -4.032965183258057
    6. 'nums' → logprob: -4.282965183258057
    7. '(numbers' → logprob: -4.282965183258057
    8. 'liste' → logprob: -4.407965183258057
    9. 'ent' → logprob: -4.407965183258057
    10. ' numbers' → logprob: -4.532965183258057

Token 133: 'a' (ID: 64)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.6483336687088013
    2. 'numbers' → logprob: -1.0233336687088013
    3. 'l' → logprob: -3.0233335494995117
    4. 'liste' → logprob: -3.7733335494995117
    5. 'nums' → logprob: -4.148333549499512
    6. 'a' → logprob: -4.898333549499512
    7. 'ent' → logprob: -5.023333549499512
    8. 'arr' → logprob: -5.023333549499512
    9. 'n' → logprob: -6.148333549499512
    10. 'L' → logprob: -6.523333549499512

Token 134: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020554035902023315
    2. '=' → logprob: -3.8955540657043457
    3. ' ' → logprob: -11.895553588867188
    4. 'a' → logprob: -13.645553588867188
    5. ' =[' → logprob: -13.770553588867188
    6. '_' → logprob: -14.270553588867188
    7. ' =
' → logprob: -14.895553588867188
    8. '[' → logprob: -15.020553588867188
    9. 's' → logprob: -15.145553588867188
    10. '_list' → logprob: -15.395553588867188

Token 135: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00861456897109747
    2. ' list' → logprob: -4.758614540100098
    3. 'int' → logprob: -17.383615493774414
    4. '[list' → logprob: -18.133615493774414
    5. '=list' → logprob: -18.508615493774414
    6. 'List' → logprob: -18.508615493774414
    7. '	list' → logprob: -19.633615493774414
    8. '[' → logprob: -20.133615493774414
    9. '(list' → logprob: -20.383615493774414
    10. 'li' → logprob: -20.633615493774414

Token 136: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.007207605987787247
    2. '(' → logprob: -5.00720739364624
    3. '(int' → logprob: -7.75720739364624
    4. '(input' → logprob: -9.882207870483398
    5. ' (' → logprob: -11.632207870483398
    6. '(m' → logprob: -12.757207870483398
    7. '(
' → logprob: -14.757207870483398
    8. '(mapping' → logprob: -14.882207870483398
    9. ',map' → logprob: -16.0072078704834
    10. '(

' → logprob: -16.0072078704834

Token 137: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0012805953156203032
    2. '(' → logprob: -6.751280784606934
    3. 'int' → logprob: -9.876280784606934
    4. '<int' → logprob: -9.876280784606934
    5. '[int' → logprob: -12.751280784606934
    6. '(
' → logprob: -13.376280784606934
    7. ' int' → logprob: -13.876280784606934
    8. ' (' → logprob: -14.126280784606934
    9. '=int' → logprob: -14.376280784606934
    10. ',int' → logprob: -15.126280784606934

Token 138: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.06293853372335434
    2. ',input' → logprob: -2.8129384517669678
    3. ',' → logprob: -7.187938690185547
    4. ' (' → logprob: -8.937938690185547
    5. '(' → logprob: -9.687938690185547
    6. 'input' → logprob: -11.187938690185547
    7. '=input' → logprob: -12.437938690185547
    8. ' ,' → logprob: -13.312938690185547
    9. ' input' → logprob: -13.437938690185547
    10. ',(' → logprob: -15.562938690185547

Token 139: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0004156568902544677
    2. ' input' → logprob: -7.875415802001953
    3. '(input' → logprob: -10.250415802001953
    4. ' ' → logprob: -16.000415802001953
    5. '	input' → logprob: -17.750415802001953
    6. ',input' → logprob: -18.000415802001953
    7. '<input' → logprob: -18.250415802001953
    8. '=input' → logprob: -18.375415802001953
    9. '_input' → logprob: -18.875415802001953
    10. '  ' → logprob: -19.250415802001953

Token 140: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.02388424053788185
    2. '()' → logprob: -3.7738842964172363
    3. '()))' → logprob: -7.648884296417236
    4. '())' → logprob: -8.898883819580078
    5. '())))' → logprob: -11.023883819580078
    6. '()));' → logprob: -12.523883819580078
    7. '()>' → logprob: -13.398883819580078
    8. ')' → logprob: -13.898883819580078
    9. ' ()' → logprob: -14.648883819580078
    10. ' ().' → logprob: -15.023883819580078

Token 141: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0002615742268972099
    2. 'strip' → logprob: -8.250261306762695
    3. ' split' → logprob: -15.625261306762695
    4. 'rstrip' → logprob: -16.250261306762695
    5. '(split' → logprob: -16.750261306762695
    6. ')' → logprob: -17.750261306762695
    7. 'plit' → logprob: -19.750261306762695
    8. '.split' → logprob: -20.125261306762695
    9. 'spl' → logprob: -20.375261306762695
    10. '()' → logprob: -21.250261306762695

Token 142: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.23350973427295685
    2. '()' → logprob: -1.7335097789764404
    3. '())' → logprob: -3.4835097789764404
    4. '())))' → logprob: -7.733509540557861
    5. '))' → logprob: -8.10851001739502
    6. '(' → logprob: -9.60851001739502
    7. ')' → logprob: -10.10851001739502
    8. '()));' → logprob: -10.73351001739502
    9. ')))' → logprob: -12.35851001739502
    10. '()))
' → logprob: -12.60851001739502

Token 143: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9734166264533997
    2. 'if' → logprob: -0.9734166264533997
    3. 'for' → logprob: -1.9734165668487549
    4. '[' → logprob: -3.848416566848755
    5. 'i' → logprob: -3.848416566848755
    6. 's' → logprob: -4.348416805267334
    7. 'print' → logprob: -4.473416805267334
    8. '
' → logprob: -4.473416805267334
    9. 'a' → logprob: -4.598416805267334
    10. 'n' → logprob: -5.473416805267334

Token 144: ' Initial' (ID: 9209)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4254133403301239
    2. 'if' → logprob: -1.9254133701324463
    3. '#' → logprob: -2.0504133701324463
    4. 'print' → logprob: -3.6754133701324463
    5. 's' → logprob: -4.175413131713867
    6. 'sum' → logprob: -4.175413131713867
    7. 'result' → logprob: -5.300413131713867
    8. ' for' → logprob: -5.425413131713867
    9. ' if' → logprob: -6.175413131713867
    10. 'p' → logprob: -6.550413131713867

Token 145: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.3543020188808441
    2. 'al' → logprob: -2.104301929473877
    3. 'isation' → logprob: -2.479301929473877
    4. 'is' → logprob: -3.479301929473877
    5. 's' → logprob: -4.104301929473877
    6. 'a' → logprob: -4.229301929473877
    7. 'er' → logprob: -4.479301929473877
    8. '_' → logprob: -4.979301929473877
    9. 'isateur' → logprob: -5.979301929473877
    10. '#' → logprob: -6.479301929473877

Token 146: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10925357043743134
    2. ' s' → logprob: -3.6092536449432373
    3. 'sum' → logprob: -3.6092536449432373
    4. 'total' → logprob: -4.109253406524658
    5. 'result' → logprob: -4.609253406524658
    6. ' total' → logprob: -5.109253406524658
    7. ' somme' → logprob: -5.484253406524658
    8. 'max' → logprob: -5.609253406524658
    9. ' sum' → logprob: -6.109253406524658
    10. ' result' → logprob: -6.359253406524658

Token 147: ' variable' (ID: 11076)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.011128113605082035
    2. ' somme' → logprob: -5.136127948760986
    3. 'result' → logprob: -6.261127948760986
    4. 'som' → logprob: -7.136127948760986
    5. 'variable' → logprob: -7.636127948760986
    6. 'b' → logprob: -8.261128425598145
    7. 'max' → logprob: -8.261128425598145
    8. 'fact' → logprob: -8.511128425598145
    9. 'sum' → logprob: -8.761128425598145
    10. 'total' → logprob: -9.011128425598145

Token 148: ' qui' (ID: 2780)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6087258458137512
    2. ' s' → logprob: -1.7337257862091064
    3. 'sum' → logprob: -1.9837257862091064
    4. ' sum' → logprob: -2.8587257862091064
    5. ' somme' → logprob: -3.7337257862091064
    6. ' total' → logprob: -4.1087260246276855
    7. 'total' → logprob: -4.2337260246276855
    8. 'result' → logprob: -4.4837260246276855
    9. ' result' → logprob: -5.4837260246276855
    10. ' i' → logprob: -5.6087260246276855

Token 149: ' cont' (ID: 836)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.34653985500335693
    2. '#' → logprob: -1.846539855003357
    3. 'max' → logprob: -2.7215399742126465
    4. 'sum' → logprob: -3.7215399742126465
    5. ' somme' → logprob: -4.9715399742126465
    6. 'result' → logprob: -4.9715399742126465
    7. 'comp' → logprob: -5.3465399742126465
    8. 'som' → logprob: -5.5965399742126465
    9. 'min' → logprob: -5.9715399742126465
    10. ' s' → logprob: -6.3465399742126465

Token 150: 'i' (ID: 72)
  Prédit: 'ient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.05843525007367134
    2. 'i' → logprob: -3.3084352016448975
    3. 't' → logprob: -5.308435440063477
    4. 'enir' → logprob: -5.433435440063477
    5. 'ien' → logprob: -6.183435440063477
    6. 'ent' → logprob: -6.558435440063477
    7. 'iend' → logprob: -6.558435440063477
    8. '#' → logprob: -6.683435440063477
    9. 'e' → logprob: -7.058435440063477
    10. 'enant' → logprob: -7.308435440063477

Token 151: 'endra' (ID: 32364)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.33476608991622925
    2. 't' → logprob: -2.209766149520874
    3. 'ent' → logprob: -3.209766149520874
    4. 'ner' → logprob: -3.209766149520874
    5. 'nent' → logprob: -3.834766149520874
    6. 'nera' → logprob: -3.834766149520874
    7. 'nu' → logprob: -4.209765911102295
    8. 'endra' → logprob: -5.084765911102295
    9. 'e' → logprob: -5.084765911102295
    10. 'er' → logprob: -5.459765911102295

Token 152: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.23793216049671173
    2. 'la' → logprob: -1.7379322052001953
    3. 's' → logprob: -3.7379322052001953
    4. 'le' → logprob: -5.112932205200195
    5. ' le' → logprob: -5.487932205200195
    6. 'l' → logprob: -7.237932205200195
    7. '#' → logprob: -8.237932205200195
    8. 'a' → logprob: -8.612932205200195
    9. 'sum' → logprob: -8.612932205200195
    10. ' ' → logprob: -8.862932205200195

Token 153: ' résultat' (ID: 62556)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.27442511916160583
    2. ' maximum' → logprob: -2.5244250297546387
    3. 'maximum' → logprob: -2.8994250297546387
    4. 'nombre' → logprob: -3.1494250297546387
    5. ' résultat' → logprob: -4.024425029754639
    6. ' nombre' → logprob: -4.399425029754639
    7. 'max' → logprob: -4.524425029754639
    8. 'rés' → logprob: -5.649425029754639
    9. ' max' → logprob: -5.774425029754639
    10. ' somme' → logprob: -6.024425029754639

Token 154: ' final' (ID: 1721)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.3179333209991455
    2. ' result' → logprob: -1.4429333209991455
    3. 's' → logprob: -1.6929333209991455
    4. 'r' → logprob: -2.0679333209991455
    5. 'res' → logprob: -2.8179333209991455
    6. ' r' → logprob: -3.8179333209991455
    7. 'sum' → logprob: -4.192933082580566
    8. ' res' → logprob: -4.317933082580566
    9. ' total' → logprob: -4.317933082580566
    10. ' max' → logprob: -4.567933082580566

Token 155: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8299232721328735
    2. 'result' → logprob: -0.9549232721328735
    3. 'sum' → logprob: -2.204923152923584
    4. 'r' → logprob: -3.954923152923584
    5. ' result' → logprob: -4.329923152923584
    6. 'res' → logprob: -4.454923152923584
    7. 'total' → logprob: -4.829923152923584
    8. ' somme' → logprob: -5.329923152923584
    9. ' sum' → logprob: -5.704923152923584
    10. ' resultat' → logprob: -6.329923152923584

Token 156: '#' (ID: 2)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.24818852543830872
    2. 's' → logprob: -2.3731884956359863
    3. 'sum' → logprob: -2.3731884956359863
    4. ' result' → logprob: -4.498188495635986
    5. 'res' → logprob: -4.998188495635986
    6. 'total' → logprob: -5.123188495635986
    7. 'r' → logprob: -6.123188495635986
    8. ' sum' → logprob: -6.498188495635986
    9. ' somme' → logprob: -6.623188495635986
    10. 'max' → logprob: -6.748188495635986

Token 157: ' On' (ID: 2160)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.39589977264404297
    2. 's' → logprob: -1.520899772644043
    3. ' result' → logprob: -3.395899772644043
    4. 'res' → logprob: -4.145899772644043
    5. 'sum' → logprob: -4.270899772644043
    6. ' resultat' → logprob: -4.645899772644043
    7. ' somme' → logprob: -4.645899772644043
    8. ' s' → logprob: -4.770899772644043
    9. 'total' → logprob: -5.270899772644043
    10. 'max' → logprob: -6.020899772644043

Token 158: ' utilise' (ID: 70283)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.166894555091858
    2. '_' → logprob: -2.5418944358825684
    3. 'cherche' → logprob: -2.6668944358825684
    4. 'comp' → logprob: -3.1668944358825684
    5. ' somme' → logprob: -3.1668944358825684
    6. ' =' → logprob: -3.2918944358825684
    7. ' va' → logprob: -3.4168944358825684
    8. ' cherche' → logprob: -3.4168944358825684
    9. ' veut' → logprob: -3.5418944358825684
    10. 'tr' → logprob: -3.6668944358825684

Token 159: ' la' (ID: 557)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.8891853094100952
    2. ' sum' → logprob: -1.2641853094100952
    3. ' la' → logprob: -2.3891854286193848
    4. ' une' → logprob: -3.0141854286193848
    5. ' ' → logprob: -3.6391854286193848
    6. '_' → logprob: -3.7641854286193848
    7. 'a' → logprob: -4.014185428619385
    8. 'max' → logprob: -4.514185428619385
    9. 'une' → logprob: -4.639185428619385
    10. ' un' → logprob: -4.639185428619385

Token 160: ' valeur' (ID: 41664)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5017577409744263
    2. 'max' → logprob: -2.5017576217651367
    3. 'variable' → logprob: -2.6267576217651367
    4. 'sum' → logprob: -2.7517576217651367
    5. ' variable' → logprob: -3.1267576217651367
    6. ' somme' → logprob: -3.1267576217651367
    7. 'for' → logprob: -3.2517576217651367
    8. 'min' → logprob: -4.251757621765137
    9. '_' → logprob: -5.001757621765137
    10. 'result' → logprob: -5.251757621765137

Token 161: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8992204666137695
    2. 'max' → logprob: -1.7742204666137695
    3. '0' → logprob: -2.5242204666137695
    4. ' ' → logprob: -2.6492204666137695
    5. ' max' → logprob: -2.7742204666137695
    6. ' maximale' → logprob: -2.7742204666137695
    7. ' n' → logprob: -3.3992204666137695
    8. '_max' → logprob: -3.7742204666137695
    9. 'a' → logprob: -4.1492204666137695
    10. 'n' → logprob: -4.3992204666137695

Token 162: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7042122483253479
    2. '1' → logprob: -1.0792121887207031
    3. 'a' → logprob: -3.079212188720703
    4. 'n' → logprob: -3.329212188720703
    5. 'max' → logprob: -3.579212188720703
    6. ' ' → logprob: -3.954212188720703
    7. 'None' → logprob: -4.829212188720703
    8. 'True' → logprob: -4.954212188720703
    9. ' True' → logprob: -5.454212188720703
    10. ' max' → logprob: -5.454212188720703

Token 163: ' comme' (ID: 7971)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.27645647525787354
    2. 's' → logprob: -2.526456356048584
    3. ' result' → logprob: -3.026456356048584
    4. 'r' → logprob: -3.651456356048584
    5. 'sum' → logprob: -3.901456356048584
    6. 'res' → logprob: -3.901456356048584
    7. ' ' → logprob: -4.026456356048584
    8. 'total' → logprob: -4.901456356048584
    9. 'max' → logprob: -5.151456356048584
    10. ' résultat' → logprob: -5.651456356048584

Token 164: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.02014777809381485
    2. 'val' → logprob: -4.770147800445557
    3. 'base' → logprob: -5.395147800445557
    4. 'acc' → logprob: -6.020147800445557
    5. ' point' → logprob: -6.520147800445557
    6. 's' → logprob: -6.895147800445557
    7. 'dé' → logprob: -7.895147800445557
    8. 'comp' → logprob: -8.145147323608398
    9. 'c' → logprob: -8.395147323608398
    10. 'part' → logprob: -8.520147323608398

Token 165: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.47564467787742615
    2. ' de' → logprob: -0.9756447076797485
    3. '_de' → logprob: -6.975644588470459
    4. 'u' → logprob: -9.100645065307617
    5. '0' → logprob: -9.350645065307617
    6. 'd' → logprob: -9.475645065307617
    7. 'initial' → logprob: -9.850645065307617
    8. ' ' → logprob: -9.975645065307617
    9. '_depart' → logprob: -10.100645065307617
    10. 'depart' → logprob: -10.225645065307617

Token 166: ' départ' (ID: 32693)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.0018913877429440618
    2. 'depart' → logprob: -6.376891613006592
    3. ' départ' → logprob: -9.501891136169434
    4. 'd' → logprob: -9.626891136169434
    5. 'part' → logprob: -10.376891136169434
    6. 'departure' → logprob: -12.001891136169434
    7. 'dep' → logprob: -12.876891136169434
    8. 'ré' → logprob: -13.126891136169434
    9. ' ' → logprob: -13.626891136169434
    10. 'de' → logprob: -14.001891136169434

Token 167: ' car' (ID: 1669)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.13365337252616882
    2. ' result' → logprob: -3.258653402328491
    3. 'res' → logprob: -3.383653402328491
    4. 's' → logprob: -3.883653402328491
    5. 'r' → logprob: -4.008653163909912
    6. 'sum' → logprob: -4.883653163909912
    7. 'total' → logprob: -5.758653163909912
    8. ' total' → logprob: -7.758653163909912
    9. ' résultat' → logprob: -7.758653163909912
    10. ' res' → logprob: -7.883653163909912

Token 168: ' on' (ID: 402)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.9408872723579407
    2. '0' → logprob: -1.565887212753296
    3. ' on' → logprob: -1.815887212753296
    4. 'c' → logprob: -2.690887212753296
    5. ' l' → logprob: -2.690887212753296
    6. 'la' → logprob: -3.315887212753296
    7. ' la' → logprob: -3.815887212753296
    8. ' c' → logprob: -4.440887451171875
    9. 'on' → logprob: -4.440887451171875
    10. ' ' → logprob: -5.815887451171875

Token 169: ' va' (ID: 3423)
  Prédit: 'va'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'va' → logprob: -0.9457015991210938
    2. 've' → logprob: -2.3207015991210938
    3. ' va' → logprob: -2.4457015991210938
    4. 'mult' → logprob: -2.4457015991210938
    5. ' multipl' → logprob: -2.5707015991210938
    6. ' veut' → logprob: -2.9457015991210938
    7. 'cherche' → logprob: -2.9457015991210938
    8. ' souhaite' → logprob: -3.4457015991210938
    9. ' cherche' → logprob: -3.6957015991210938
    10. 's' → logprob: -4.445701599121094

Token 170: ' addition' (ID: 5856)
  Prédit: 'addition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'addition' → logprob: -1.4205023050308228
    2. ' addition' → logprob: -1.5455023050308228
    3. 'calcul' → logprob: -2.045502185821533
    4. 'mult' → logprob: -2.545502185821533
    5. ' multiplier' → logprob: -3.045502185821533
    6. ' calcul' → logprob: -3.045502185821533
    7. ' effectuer' → logprob: -3.170502185821533
    8. 's' → logprob: -3.795502185821533
    9. 'x' → logprob: -3.920502185821533
    10. 'chercher' → logprob: -4.170502185821533

Token 171: 'ner' (ID: 1247)
  Prédit: 'ner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ner' → logprob: -0.034668270498514175
    2. '+' → logprob: -4.159668445587158
    3. 'er' → logprob: -4.534668445587158
    4. 'n' → logprob: -5.409668445587158
    5. 'r' → logprob: -7.159668445587158
    6. '   ' → logprob: -7.534668445587158
    7. ' ' → logprob: -7.534668445587158
    8. 'nner' → logprob: -7.784668445587158
    9. ' +' → logprob: -7.909668445587158
    10. ' a' → logprob: -9.03466796875

Token 172: ' ult' (ID: 11619)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.2123550176620483
    2. ' result' → logprob: -1.8373550176620483
    3. 'a' → logprob: -2.087355136871338
    4. ' total' → logprob: -2.212355136871338
    5. 'total' → logprob: -2.712355136871338
    6. ' ' → logprob: -2.712355136871338
    7. 's' → logprob: -2.837355136871338
    8. 'sum' → logprob: -3.462355136871338
    9. ' somme' → logprob: -3.587355136871338
    10. ' sum' → logprob: -4.087355136871338

Token 173: 'érieure' (ID: 45836)
  Prédit: 'érieure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érieure' → logprob: -0.7132237553596497
    2. 'é' → logprob: -1.0882236957550049
    3. 'e' → logprob: -2.963223695755005
    4. 'es' → logprob: -3.338223695755005
    5. 'ément' → logprob: -3.338223695755005
    6. 'és' → logprob: -4.338223934173584
    7. 'è' → logprob: -4.588223934173584
    8. 'ement' → logprob: -5.463223934173584
    9. 'ém' → logprob: -5.463223934173584
    10. 'ès' → logprob: -5.713223934173584

Token 174: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.062342967838048935
    2. 'm' → logprob: -2.937342882156372
    3. 'mentation' → logprob: -6.062343120574951
    4. '```' → logprob: -7.187343120574951
    5. 'sement' → logprob: -7.312343120574951
    6. 'ments' → logprob: -7.437343120574951
    7. '#' → logprob: -7.562343120574951
    8. 'usement' → logprob: -8.062342643737793
    9. 's' → logprob: -8.187342643737793
    10. '   ' → logprob: -8.437342643737793

Token 175: ' à' (ID: 1221)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.2664202153682709
    2. 's' → logprob: -1.7664202451705933
    3. 'sum' → logprob: -3.2664201259613037
    4. 'total' → logprob: -4.391420364379883
    5. 'res' → logprob: -4.891420364379883
    6. 'r' → logprob: -5.641420364379883
    7. ' result' → logprob: -7.391420364379883
    8. 'rés' → logprob: -8.766420364379883
    9. ' somme' → logprob: -8.891420364379883
    10. 'som' → logprob: -9.016420364379883

Token 176: ' cette' (ID: 7696)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5315976142883301
    2. 'a' → logprob: -1.53159761428833
    3. 'result' → logprob: -2.03159761428833
    4. 'res' → logprob: -4.15659761428833
    5. 's' → logprob: -4.78159761428833
    6. ' ' → logprob: -4.78159761428833
    7. 'total' → logprob: -5.28159761428833
    8. 'r' → logprob: -5.53159761428833
    9. 'la' → logprob: -5.90659761428833
    10. ' result' → logprob: -5.90659761428833

Token 177: ' variable' (ID: 11076)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.31738749146461487
    2. '0' → logprob: -1.9423874616622925
    3. 'variable' → logprob: -2.942387580871582
    4. 's' → logprob: -3.567387580871582
    5. ' valeur' → logprob: -4.067387580871582
    6. 'result' → logprob: -5.192387580871582
    7. '#' → logprob: -5.192387580871582
    8. ' somme' → logprob: -5.567387580871582
    9. 'z' → logprob: -6.067387580871582
    10. 'var' → logprob: -6.442387580871582

Token 178: '
' (ID: 198)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.24262626469135284
    2. 's' → logprob: -1.9926263093948364
    3. 'sum' → logprob: -2.742626190185547
    4. 'total' → logprob: -4.492626190185547
    5. 'res' → logprob: -5.742626190185547
    6. 'som' → logprob: -9.242626190185547
    7. 'r' → logprob: -9.617626190185547
    8. 'rés' → logprob: -9.992626190185547
    9. 'acc' → logprob: -10.242626190185547
    10. '```' → logprob: -11.617626190185547

Token 179: 'result' (ID: 2521)
  Prédit: 'result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.192705899477005
    2. 's' → logprob: -2.0677058696746826
    3. 'total' → logprob: -3.6927058696746826
    4. 'sum' → logprob: -3.9427058696746826
    5. 'res' → logprob: -5.567706108093262
    6. 'som' → logprob: -8.067706108093262
    7. 'rés' → logprob: -9.317706108093262
    8. 'r' → logprob: -9.692706108093262
    9. '```' → logprob: -10.067706108093262
    10. ' result' → logprob: -10.817706108093262

Token 180: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4742814898490906
    2. '=' → logprob: -0.9742814898490906
    3. '_' → logprob: -8.724281311035156
    4. 'at' → logprob: -10.849281311035156
    5. ' ' → logprob: -11.224281311035156
    6. 's' → logprob: -12.724281311035156
    7. 'a' → logprob: -12.974281311035156
    8. ' ' → logprob: -13.349281311035156
    9. ')' → logprob: -14.724281311035156
    10. '=result' → logprob: -14.849281311035156

Token 181: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003600544296205044
    2. ' ' → logprob: -5.628600597381592
    3. 'n' → logprob: -15.378600120544434
    4. ' ' → logprob: -15.628600120544434
    5. ' n' → logprob: -17.31610107421875
    6. 'a' → logprob: -17.69110107421875
    7. 'sum' → logprob: -17.75360107421875
    8. '۰' → logprob: -17.81610107421875
    9. '   ' → logprob: -18.00360107421875
    10. '1' → logprob: -18.81610107421875

Token 182: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.87500286102295
    3. 'n' → logprob: -15.37500286102295
    4. 'sum' → logprob: -16.000003814697266
    5. 'a' → logprob: -16.250003814697266
    6. '۰' → logprob: -17.625003814697266
    7. 's' → logprob: -17.937503814697266
    8. 'int' → logprob: -18.437503814697266
    9. '０' → logprob: -18.625003814697266
    10. '00' → logprob: -19.562503814697266

Token 183: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04614308476448059
    2. 'for' → logprob: -3.296143054962158
    3. '<|end|>' → logprob: -5.796143054962158
    4. ' for' → logprob: -5.921143054962158
    5. ' 
' → logprob: -6.921143054962158
    6. '
' → logprob: -7.421143054962158
    7. '\n' → logprob: -8.546143531799316
    8. 'n' → logprob: -8.921143531799316
    9. '' → logprob: -8.921143531799316
    10. ' ' → logprob: -9.421143531799316

Token 184: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0001254693343071267
    2. 'i' → logprob: -9.875125885009766
    3. 'f' → logprob: -10.000125885009766
    4. ' for' → logprob: -10.750125885009766
    5. '
' → logprob: -12.875125885009766
    6. 'n' → logprob: -13.375125885009766
    7. 'fo' → logprob: -13.750125885009766
    8. 'if' → logprob: -14.375125885009766
    9. '#' → logprob: -14.875125885009766
    10. 'a' → logprob: -15.500125885009766

Token 185: ' Initial' (ID: 9209)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3544423381972592e-05
    2. 'i' → logprob: -11.75001335144043
    3. ' for' → logprob: -12.37501335144043
    4. 'fo' → logprob: -14.50001335144043
    5. 'if' → logprob: -14.87501335144043
    6. '#' → logprob: -15.12501335144043
    7. 'f' → logprob: -16.12501335144043
    8. 'range' → logprob: -16.25001335144043
    9. 'while' → logprob: -16.87501335144043
    10. 'a' → logprob: -18.00001335144043

Token 186: 'iser' (ID: 7466)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24901817739009857
    2. 'iser' → logprob: -1.7490181922912598
    3. 'i' → logprob: -3.6240181922912598
    4. '#' → logprob: -5.24901819229126
    5. 'izer' → logprob: -5.74901819229126
    6. ' for' → logprob: -5.74901819229126
    7. 'er' → logprob: -5.74901819229126
    8. ':' → logprob: -6.49901819229126
    9. 'if' → logprob: -6.62401819229126
    10. '_' → logprob: -7.62401819229126

Token 187: ' l' (ID: 305)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.19498267769813538
    2. 'i' → logprob: -1.944982647895813
    3. ' un' → logprob: -4.069982528686523
    4. ' une' → logprob: -4.444982528686523
    5. ' l' → logprob: -6.944982528686523
    6. ' a' → logprob: -7.194982528686523
    7. ' la' → logprob: -7.319982528686523
    8. 'a' → logprob: -7.569982528686523
    9. 'un' → logprob: -7.694982528686523
    10. 'l' → logprob: -7.819982528686523

Token 188: ''ind' (ID: 82245)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05152619630098343
    2. ''' → logprob: -3.4265263080596924
    3. ''ind' → logprob: -4.426526069641113
    4. 'e' → logprob: -6.551526069641113
    5. 'indice' → logprob: -7.051526069641113
    6. ''i' → logprob: -8.051526069641113
    7. 'i' → logprob: -8.176526069641113
    8. 'index' → logprob: -8.301526069641113
    9. ''a' → logprob: -8.426526069641113
    10. ''aide' → logprob: -8.676526069641113

Token 189: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.07013171166181564
    2. 'ice' → logprob: -2.695131778717041
    3. 'i' → logprob: -9.945131301879883
    4. 'index' → logprob: -10.445131301879883
    5. 'dex' → logprob: -10.445131301879883
    6. '=' → logprob: -10.820131301879883
    7. 'e' → logprob: -11.445131301879883
    8. 'exp' → logprob: -11.695131301879883
    9. 'ic' → logprob: -12.070131301879883
    10. 'x' → logprob: -12.320131301879883

Token 190: ' x' (ID: 1215)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1269451230764389
    2. ' i' → logprob: -2.1269450187683105
    3. ' =' → logprob: -11.626945495605469
    4. '	i' → logprob: -13.001945495605469
    5. 'index' → logprob: -13.001945495605469
    6. '=' → logprob: -13.876945495605469
    7. ' index' → logprob: -14.376945495605469
    8. 'indice' → logprob: -14.626945495605469
    9. '_i' → logprob: -15.251945495605469
    10. ' ' → logprob: -15.251945495605469

Token 191: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005974062252789736
    2. '=' → logprob: -5.130974292755127
    3. 'x' → logprob: -10.255973815917969
    4. ' ' → logprob: -11.880973815917969
    5. ' x' → logprob: -13.880973815917969
    6. '0' → logprob: -14.005973815917969
    7. ',' → logprob: -14.755973815917969
    8. 's' → logprob: -14.755973815917969
    9. 'e' → logprob: -15.380973815917969
    10. ' ' → logprob: -16.13097381591797

Token 192: ' qui' (ID: 2780)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7696109414100647
    2. '0' → logprob: -1.51961088180542
    3. ' x' → logprob: -1.51961088180542
    4. ' ' → logprob: -2.39461088180542
    5. ' =' → logprob: -5.26961088180542
    6. '=' → logprob: -6.01961088180542
    7. ' i' → logprob: -8.894611358642578
    8. 'i' → logprob: -9.019611358642578
    9. '1' → logprob: -10.519611358642578
    10. ')' → logprob: -10.644611358642578

Token 193: ' serv' (ID: 2096)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5270971655845642
    2. ' =' → logprob: -0.9020971655845642
    3. ' va' → logprob: -6.902097225189209
    4. ' ' → logprob: -7.027097225189209
    5. 'range' → logprob: -7.527097225189209
    6. ' range' → logprob: -7.902097225189209
    7. 's' → logprob: -8.65209674835205
    8. 'x' → logprob: -8.65209674835205
    9. ' devra' → logprob: -10.02709674835205
    10. ' n' → logprob: -10.02709674835205

Token 194: 'ira' (ID: 2633)
  Prédit: 'era'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'era' → logprob: -0.428911030292511
    2. 'ra' → logprob: -1.3039109706878662
    3. 'a' → logprob: -3.553910970687866
    4. 'ira' → logprob: -3.678910970687866
    5. 'e' → logprob: -4.053911209106445
    6. 'ant' → logprob: -5.428911209106445
    7. 'r' → logprob: -7.178911209106445
    8. 'er' → logprob: -7.428911209106445
    9. 'ent' → logprob: -8.428911209106445
    10. '#' → logprob: -10.428911209106445

Token 195: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.6382686495780945
    2. ' ' → logprob: -1.8882687091827393
    3. '=' → logprob: -2.1382687091827393
    4. 'à' → logprob: -2.3882687091827393
    5. ' =' → logprob: -2.7632687091827393
    6. '<|end|>' → logprob: -4.51326847076416
    7. 'a' → logprob: -5.13826847076416
    8. ')' → logprob: -5.13826847076416
    9. 'x' → logprob: -5.26326847076416
    10. ' a' → logprob: -5.51326847076416

Token 196: ' parcour' (ID: 130642)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0888230949640274
    2. ' ' → logprob: -2.588823080062866
    3. ' parcour' → logprob: -4.838823318481445
    4. '1' → logprob: -6.838823318481445
    5. 'x' → logprob: -8.088823318481445
    6. ' iter' → logprob: -9.213823318481445
    7. 'range' → logprob: -9.338823318481445
    8. 'i' → logprob: -9.588823318481445
    9. ' compter' → logprob: -9.838823318481445
    10. ' i' → logprob: -10.338823318481445

Token 197: 'ir' (ID: 380)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.027374371886253357
    2. 'ir' → logprob: -3.777374267578125
    3. 'i' → logprob: -5.902374267578125
    4. 're' → logprob: -8.027374267578125
    5. ' ' → logprob: -8.027374267578125
    6. 'r' → logprob: -8.277374267578125
    7. 'ie' → logprob: -9.027374267578125
    8. 'e' → logprob: -9.152374267578125
    9. ' i' → logprob: -9.902374267578125
    10. 'age' → logprob: -10.652374267578125

Token 198: ' le' (ID: 505)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5629945993423462
    2. ' range' → logprob: -1.8129945993423462
    3. ' la' → logprob: -2.1879944801330566
    4. ' ' → logprob: -2.9379944801330566
    5. 'a' → logprob: -3.0629944801330566
    6. ' a' → logprob: -3.8129944801330566
    7. '<|end|>' → logprob: -3.8129944801330566
    8. ' the' → logprob: -5.937994480133057
    9. 'la' → logprob: -6.437994480133057
    10. 'n' → logprob: -6.437994480133057

Token 199: ' tableau' (ID: 67053)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04914329573512077
    2. ' a' → logprob: -3.5491433143615723
    3. ' tableau' → logprob: -4.424143314361572
    4. 'liste' → logprob: -6.049143314361572
    5. ' liste' → logprob: -6.674143314361572
    6. 's' → logprob: -7.299143314361572
    7. 'list' → logprob: -7.549143314361572
    8. 'n' → logprob: -7.799143314361572
    9. 'table' → logprob: -8.299142837524414
    10. ' code' → logprob: -8.424142837524414

Token 200: ' '' (ID: 461)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.09512438625097275
    2. ' x' → logprob: -2.4701244831085205
    3. ' =' → logprob: -5.220124244689941
    4. '0' → logprob: -7.970124244689941
    5. '=' → logprob: -8.595124244689941
    6. ' ' → logprob: -8.845124244689941
    7. 'i' → logprob: -9.845124244689941
    8. ' i' → logprob: -11.845124244689941
    9. 'range' → logprob: -11.845124244689941
    10. '=x' → logprob: -12.095124244689941

Token 201: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0046210684813559055
    2. ' a' → logprob: -5.3796210289001465
    3. ')' → logprob: -14.879621505737305
    4. 'n' → logprob: -16.379621505737305
    5. '')' → logprob: -16.504621505737305
    6. ' ' → logprob: -16.504621505737305
    7. ''a' → logprob: -16.504621505737305
    8. 's' → logprob: -17.004621505737305
    9. ' )' → logprob: -17.504621505737305
    10. '	a' → logprob: -18.192121505737305

Token 202: ''
' (ID: 2207)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28230372071266174
    2. 'x' → logprob: -1.9073036909103394
    3. 'a' → logprob: -3.532303810119629
    4. ' )' → logprob: -3.907303810119629
    5. ' =' → logprob: -4.157303810119629
    6. 'i' → logprob: -4.282303810119629
    7. ' x' → logprob: -5.532303810119629
    8. '=' → logprob: -5.782303810119629
    9. ']' → logprob: -5.782303810119629
    10. ' ' → logprob: -6.282303810119629

Token 203: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.008630049414932728
    2. ' x' → logprob: -4.758630275726318
    3. '0' → logprob: -11.13362979888916
    4. '
' → logprob: -14.63362979888916
    5. ' ' → logprob: -15.50862979888916
    6. ' 
' → logprob: -16.258630752563477
    7. 'i' → logprob: -17.633630752563477
    8. '

' → logprob: -17.758630752563477
    9. ' =' → logprob: -18.258630752563477
    10. '=' → logprob: -18.508630752563477

Token 204: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407710552215576
    2. '=' → logprob: -0.9740771055221558
    3. 'x' → logprob: -17.599077224731445
    4. '＝' → logprob: -18.224077224731445
    5. ' =
' → logprob: -18.224077224731445
    6. '=int' → logprob: -18.849077224731445
    7. ' ' → logprob: -18.849077224731445
    8. ')' → logprob: -18.849077224731445
    9. '=
' → logprob: -19.099077224731445
    10. ',' → logprob: -19.474077224731445

Token 205: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.553032628493384e-05
    2. ' ' → logprob: -9.500075340270996
    3. '1' → logprob: -14.500075340270996
    4. 'n' → logprob: -17.437576293945312
    5. '۰' → logprob: -17.500076293945312
    6. '=' → logprob: -18.375076293945312
    7. '   ' → logprob: -18.625076293945312
    8. '```' → logprob: -19.062576293945312
    9. '０' → logprob: -19.187576293945312
    10. '  ' → logprob: -19.500076293945312

Token 206: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.392824874026701e-05
    2. '1' → logprob: -10.75003433227539
    3. ' ' → logprob: -11.62503433227539
    4. 'n' → logprob: -12.75003433227539
    5. '-' → logprob: -15.31253433227539
    6. 'x' → logprob: -16.68753433227539
    7. '2' → logprob: -16.81253433227539
    8. 'a' → logprob: -17.50003433227539
    9. '(' → logprob: -17.62503433227539
    10. '```' → logprob: -17.68753433227539

Token 207: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.052897751331329346
    2. 'while' → logprob: -3.8028976917266846
    3. '<|end|>' → logprob: -4.302897930145264
    4. ' while' → logprob: -4.802897930145264
    5. ' 
' → logprob: -5.677897930145264
    6. ' ' → logprob: -6.052897930145264
    7. '\n' → logprob: -8.052897453308105
    8. '#' → logprob: -8.052897453308105
    9. '' → logprob: -8.177897453308105
    10. '  
' → logprob: -8.177897453308105

Token 208: '#' (ID: 2)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.261574923992157
    2. '
' → logprob: -1.5115749835968018
    3. ' while' → logprob: -5.011574745178223
    4. '#' → logprob: -7.011574745178223
    5. 'w' → logprob: -7.261574745178223
    6. ' 
' → logprob: -7.761574745178223
    7. '<|end|>' → logprob: -8.636574745178223
    8. 'wh' → logprob: -9.136574745178223
    9. '\n' → logprob: -9.136574745178223
    10. '  
' → logprob: -9.261574745178223

Token 209: ' Initial' (ID: 9209)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -4.4849443838757e-06
    2. ' while' → logprob: -13.125004768371582
    3. 'wh' → logprob: -13.500004768371582
    4. 'for' → logprob: -14.375004768371582
    5. 'While' → logprob: -15.250004768371582
    6. 'w' → logprob: -16.125003814697266
    7. '#' → logprob: -16.500003814697266
    8. '```' → logprob: -17.000003814697266
    9. '	while' → logprob: -17.125003814697266
    10. 'tant' → logprob: -18.500003814697266

Token 210: 'iser' (ID: 7466)
  Prédit: 'ser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ser' → logprob: -0.17598190903663635
    2. 'iser' → logprob: -1.925981879234314
    3. 'er' → logprob: -4.5509819984436035
    4. 'al' → logprob: -6.4259819984436035
    5. 's' → logprob: -6.5509819984436035
    6. '#' → logprob: -6.5509819984436035
    7. 't' → logprob: -9.175981521606445
    8. 'zer' → logprob: -9.425981521606445
    9. 'is' → logprob: -9.925981521606445
    10. 'sir' → logprob: -10.050981521606445

Token 211: ' une' (ID: 2463)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.9631558656692505
    2. 'a' → logprob: -2.338155746459961
    3. ' a' → logprob: -2.338155746459961
    4. 'result' → logprob: -2.338155746459961
    5. ' l' → logprob: -2.713155746459961
    6. 'x' → logprob: -3.213155746459961
    7. ' result' → logprob: -3.463155746459961
    8. 'l' → logprob: -3.838155746459961
    9. 'le' → logprob: -3.838155746459961
    10. 'n' → logprob: -3.838155746459961

Token 212: ' variable' (ID: 11076)
  Prédit: ' variable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' variable' → logprob: -1.2517244815826416
    2. 'while' → logprob: -1.5017244815826416
    3. ' while' → logprob: -1.6267244815826416
    4. ' longueur' → logprob: -2.1267244815826416
    5. ' valeur' → logprob: -3.0017244815826416
    6. ' boucle' → logprob: -3.5017244815826416
    7. 'variable' → logprob: -4.3767242431640625
    8. ' somme' → logprob: -4.8767242431640625
    9. ' nouvelle' → logprob: -5.0017242431640625
    10. ' boolean' → logprob: -5.2517242431640625

Token 213: ' nom' (ID: 8080)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'step' → logprob: -1.2125437259674072
    2. ' step' → logprob: -1.3375437259674072
    3. 'max' → logprob: -2.4625437259674072
    4. 'count' → logprob: -2.5875437259674072
    5. 'length' → logprob: -3.2125437259674072
    6. 'sum' → logprob: -3.5875437259674072
    7. 's' → logprob: -3.7125437259674072
    8. 'increment' → logprob: -3.7125437259674072
    9. 'interval' → logprob: -3.7125437259674072
    10. 'limit' → logprob: -4.337543487548828

Token 214: 'm' (ID: 76)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7107229828834534
    2. 'm' → logprob: -1.0857229232788086
    3. 'bre' → logprob: -2.2107229232788086
    4. ' =' → logprob: -3.9607229232788086
    5. 'ée' → logprob: -4.460722923278809
    6. 'é' → logprob: -4.585722923278809
    7. 'mé' → logprob: -5.460722923278809
    8. 'e' → logprob: -5.960722923278809
    9. 'b' → logprob: -5.960722923278809
    10. '#' → logprob: -6.085722923278809

Token 215: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.0748717337846756
    2. 'é' → logprob: -2.949871778488159
    3. 'e' → logprob: -3.949871778488159
    4. '=' → logprob: -7.82487154006958
    5. 'm' → logprob: -9.949872016906738
    6. 'ee' → logprob: -10.449872016906738
    7. '#' → logprob: -10.824872016906738
    8. 'a' → logprob: -11.449872016906738
    9. 'bre' → logprob: -12.449872016906738
    10. 'b' → logprob: -12.699872016906738

Token 216: ' '' (ID: 461)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.2640554904937744
    2. 's' → logprob: -1.8890554904937744
    3. 'step' → logprob: -1.8890554904937744
    4. 'count' → logprob: -2.0140554904937744
    5. 'length' → logprob: -2.1390554904937744
    6. 'max' → logprob: -3.8890554904937744
    7. 'i' → logprob: -3.8890554904937744
    8. 'temp' → logprob: -4.264055252075195
    9. 'interval' → logprob: -4.514055252075195
    10. 'increment' → logprob: -4.639055252075195

Token 217: 'i' (ID: 72)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.40927255153656
    2. 'step' → logprob: -2.0342726707458496
    3. 'sum' → logprob: -2.2842726707458496
    4. 's' → logprob: -2.5342726707458496
    5. 'current' → logprob: -2.6592726707458496
    6. 'temp' → logprob: -2.7842726707458496
    7. 'length' → logprob: -3.1592726707458496
    8. 'max' → logprob: -3.2842726707458496
    9. 'pas' → logprob: -3.5342726707458496
    10. 'counter' → logprob: -4.03427267074585

Token 218: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.054255008697509766
    2. 'n' → logprob: -3.1792550086975098
    3. ' =' → logprob: -5.05425500869751
    4. ' '' → logprob: -5.80425500869751
    5. 'nt' → logprob: -7.42925500869751
    6. '=' → logprob: -7.67925500869751
    7. 'nd' → logprob: -7.80425500869751
    8. 'nde' → logprob: -9.554254531860352
    9. 'x' → logprob: -9.929254531860352
    10. 'ndice' → logprob: -10.179254531860352

Token 219: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15649829804897308
    2. ' =' → logprob: -2.4064981937408447
    3. 'i' → logprob: -2.9064981937408447
    4. ' i' → logprob: -10.281497955322266
    5. '=i' → logprob: -10.781497955322266
    6. '=
' → logprob: -12.031497955322266
    7. 'x' → logprob: -12.406497955322266
    8. 'a' → logprob: -13.531497955322266
    9. 'int' → logprob: -14.031497955322266
    10. ',' → logprob: -14.406497955322266

Token 220: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.050541914999485016
    2. '1' → logprob: -3.050541877746582
    3. 'n' → logprob: -6.300541877746582
    4. ' ' → logprob: -9.300541877746582
    5. 'x' → logprob: -11.050541877746582
    6. 'a' → logprob: -13.425541877746582
    7. '-' → logprob: -13.425541877746582
    8. 'int' → logprob: -13.550541877746582
    9. 'i' → logprob: -13.800541877746582
    10. ' n' → logprob: -13.925541877746582

Token 221: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.042535021901130676
    2. '1' → logprob: -3.2925350666046143
    3. 'n' → logprob: -5.417534828186035
    4. ' ' → logprob: -10.542534828186035
    5. 'int' → logprob: -12.667534828186035
    6. 'x' → logprob: -12.792534828186035
    7. '2' → logprob: -13.042534828186035
    8. 'a' → logprob: -13.292534828186035
    9. ' n' → logprob: -13.667534828186035
    10. 'i' → logprob: -13.792534828186035

Token 222: ',' (ID: 11)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -6.704273118884885e-07
    2. ' i' → logprob: -14.750000953674316
    3. '
' → logprob: -16.125
    4. ' =' → logprob: -16.375
    5. '=' → logprob: -17.625
    6. '```' → logprob: -19.5
    7. '	i' → logprob: -20.0
    8. '0' → logprob: -21.0
    9. '=i' → logprob: -21.25
    10. '

' → logprob: -21.25

Token 223: ' qui' (ID: 2780)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005657740402966738
    2. ' i' → logprob: -5.25565767288208
    3. '#' → logprob: -8.005658149719238
    4. '
' → logprob: -10.005658149719238
    5. ' #' → logprob: -11.130658149719238
    6. '0' → logprob: -11.130658149719238
    7. ' ' → logprob: -11.880658149719238
    8. ' 
' → logprob: -12.380658149719238
    9. 'n' → logprob: -13.630658149719238
    10. ' =' → logprob: -14.005658149719238

Token 224: ' sera' (ID: 15511)
  Prédit: 'serv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'serv' → logprob: -0.14772966504096985
    2. ' serv' → logprob: -2.5227296352386475
    3. 'sera' → logprob: -3.3977296352386475
    4. 'sert' → logprob: -5.022729873657227
    5. 'va' → logprob: -6.147729873657227
    6. ' sera' → logprob: -6.147729873657227
    7. ' permettra' → logprob: -6.272729873657227
    8. 's' → logprob: -6.522729873657227
    9. 'ser' → logprob: -6.647729873657227
    10. '#' → logprob: -6.647729873657227

Token 225: ' utilisée' (ID: 106548)
  Prédit: ' utilisée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisée' → logprob: -0.027066368609666824
    2. 'util' → logprob: -3.777066469192505
    3. ' utilisé' → logprob: -6.777066230773926
    4. 'i' → logprob: -7.402066230773926
    5. ' used' → logprob: -7.652066230773926
    6. 'used' → logprob: -7.777066230773926
    7. ' la' → logprob: -8.277066230773926
    8. 'la' → logprob: -8.902066230773926
    9. '0' → logprob: -9.527066230773926
    10. ' i' → logprob: -9.527066230773926

Token 226: ' comme' (ID: 7971)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -1.569297432899475
    2. 'dans' → logprob: -1.694297432899475
    3. 'for' → logprob: -1.819297432899475
    4. ' dans' → logprob: -1.944297432899475
    5. 'pour' → logprob: -2.5692973136901855
    6. ' pour' → logprob: -2.9442973136901855
    7. 'à' → logprob: -3.1942973136901855
    8. ' for' → logprob: -3.3192973136901855
    9. 'i' → logprob: -3.9442973136901855
    10. ' i' → logprob: -4.1942973136901855

Token 227: ' un' (ID: 537)
  Prédit: ' compteur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' compteur' → logprob: -1.0230683088302612
    2. 'comp' → logprob: -1.2730683088302612
    3. 'i' → logprob: -2.023068428039551
    4. '1' → logprob: -2.023068428039551
    5. '0' → logprob: -3.273068428039551
    6. ' i' → logprob: -3.773068428039551
    7. ' ' → logprob: -5.273068428039551
    8. 'indice' → logprob: -5.523068428039551
    9. ' boucle' → logprob: -5.648068428039551
    10. 'counter' → logprob: -5.898068428039551

Token 228: ' accumulate' (ID: 74226)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.13409319519996643
    2. ' compteur' → logprob: -2.1340932846069336
    3. 'index' → logprob: -5.884093284606934
    4. 'indice' → logprob: -6.259093284606934
    5. 'counter' → logprob: -6.884093284606934
    6. 'c' → logprob: -7.509093284606934
    7. 'com' → logprob: -7.884093284606934
    8. ' index' → logprob: -8.634093284606934
    9. 'i' → logprob: -8.759093284606934
    10. 'curse' → logprob: -10.634093284606934

Token 229: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.0007911669090390205
    2. 'r' → logprob: -7.250791072845459
    3. 'u' → logprob: -9.750791549682617
    4. '#' → logprob: -10.875791549682617
    5. 'i' → logprob: -13.500791549682617
    6. 'eur' → logprob: -13.625791549682617
    7. 'x' → logprob: -15.000791549682617
    8. 'ure' → logprob: -15.375791549682617
    9. ' ur' → logprob: -15.500791549682617
    10. 'n' → logprob: -16.250791549682617

Token 230: ' pour' (ID: 1930)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -8.101369894575328e-05
    2. ' =' → logprob: -10.125081062316895
    3. ' i' → logprob: -10.750081062316895
    4. '
' → logprob: -11.625081062316895
    5. '=' → logprob: -11.875081062316895
    6. '<|end|>' → logprob: -14.375081062316895
    7. ',' → logprob: -14.875081062316895
    8. 'int' → logprob: -15.000081062316895
    9. '_i' → logprob: -15.250081062316895
    10. '=i' → logprob: -15.375081062316895

Token 231: ' former' (ID: 9254)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6361709237098694
    2. 'l' → logprob: -2.3861708641052246
    3. 'comp' → logprob: -2.6361708641052246
    4. ' compter' → logprob: -3.0111708641052246
    5. 'le' → logprob: -3.1361708641052246
    6. 'la' → logprob: -3.3861708641052246
    7. ' la' → logprob: -3.5111708641052246
    8. 'x' → logprob: -3.6361708641052246
    9. ' i' → logprob: -3.7611708641052246
    10. 's' → logprob: -4.136170864105225

Token 232: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.564194679260254
    2. ' ' → logprob: -1.564194679260254
    3. 'le' → logprob: -2.189194679260254
    4. ' une' → logprob: -2.689194679260254
    5. 'l' → logprob: -2.814194679260254
    6. ' un' → logprob: -2.939194679260254
    7. '1' → logprob: -2.939194679260254
    8. 'n' → logprob: -3.064194679260254
    9. ' la' → logprob: -3.064194679260254
    10. ' le' → logprob: -3.439194679260254

Token 233: ' somme' (ID: 64484)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.02265060506761074
    2. 'num' → logprob: -5.022650718688965
    3. 'number' → logprob: -5.147650718688965
    4. 's' → logprob: -5.897650718688965
    5. 'mot' → logprob: -6.897650718688965
    6. 'chaine' → logprob: -7.022650718688965
    7. ' nombre' → logprob: -7.147650718688965
    8. 'val' → logprob: -7.147650718688965
    9. 'ch' → logprob: -7.522650718688965
    10. 'temp' → logprob: -7.772650718688965

Token 234: ' cour' (ID: 2871)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.451116051815916e-05
    2. ' i' → logprob: -11.000024795532227
    3. '
' → logprob: -12.875024795532227
    4. ' =' → logprob: -12.875024795532227
    5. '=' → logprob: -13.625024795532227
    6. '```' → logprob: -14.625024795532227
    7. ' ' → logprob: -15.625024795532227
    8. '	i' → logprob: -16.500024795532227
    9. ',' → logprob: -16.625024795532227
    10. '   ' → logprob: -16.750024795532227

Token 235: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.010712572373449802
    2. 'ant' → logprob: -4.635712623596191
    3. 'r' → logprob: -7.385712623596191
    4. 'u' → logprob: -9.260712623596191
    5. 'amment' → logprob: -9.510712623596191
    6. 'a' → logprob: -9.885712623596191
    7. 'nante' → logprob: -10.010712623596191
    8. ' ' → logprob: -11.760712623596191
    9. 'iante' → logprob: -11.885712623596191
    10. 'antes' → logprob: -12.135712623596191

Token 236: ' des' (ID: 731)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00017123986617662013
    2. ' =' → logprob: -9.500171661376953
    3. ' i' → logprob: -10.000171661376953
    4. '=' → logprob: -10.625171661376953
    5. '
' → logprob: -10.750171661376953
    6. '```' → logprob: -13.500171661376953
    7. ',' → logprob: -13.625171661376953
    8. 's' → logprob: -14.750171661376953
    9. ' ' → logprob: -15.000171661376953
    10. '=i' → logprob: -15.250171661376953

Token 237: ' éléments' (ID: 57375)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.17430514097213745
    2. '0' → logprob: -3.0493052005767822
    3. 'i' → logprob: -3.5493052005767822
    4. 's' → logprob: -3.5493052005767822
    5. 'result' → logprob: -4.299304962158203
    6. '1' → logprob: -4.924304962158203
    7. 'élé' → logprob: -4.924304962158203
    8. 'elements' → logprob: -5.424304962158203
    9. ' a' → logprob: -5.674304962158203
    10. 'n' → logprob: -5.799304962158203

Token 238: ' de' (ID: 334)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0007321976590901613
    2. ' i' → logprob: -7.625732421875
    3. ' =' → logprob: -8.625732421875
    4. '
' → logprob: -10.375732421875
    5. 's' → logprob: -11.500732421875
    6. '=' → logprob: -11.875732421875
    7. ' ' → logprob: -12.250732421875
    8. '```' → logprob: -12.750732421875
    9. ',' → logprob: -13.750732421875
    10. '_i' → logprob: -13.875732421875

Token 239: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04164797067642212
    2. 'la' → logprob: -4.291647911071777
    3. ' la' → logprob: -4.291647911071777
    4. ' a' → logprob: -4.416647911071777
    5. 'l' → logprob: -8.041647911071777
    6. 's' → logprob: -8.416647911071777
    7. 'the' → logprob: -9.041647911071777
    8. 'range' → logprob: -9.166647911071777
    9. 'sub' → logprob: -9.291647911071777
    10. 'result' → logprob: -10.041647911071777

Token 240: ' sous' (ID: 14487)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0037488907109946012
    2. 's' → logprob: -6.878748893737793
    3. 'liste' → logprob: -6.878748893737793
    4. 'range' → logprob: -7.503748893737793
    5. '#' → logprob: -8.003748893737793
    6. ' a' → logprob: -8.378748893737793
    7. 'sub' → logprob: -9.003748893737793
    8. 'b' → logprob: -9.378748893737793
    9. 'list' → logprob: -10.003748893737793
    10. 'array' → logprob: -10.128748893737793

Token 241: '-s' (ID: 2011)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4279451072216034
    2. '_' → logprob: -2.177945137023926
    3. 'liste' → logprob: -2.677945137023926
    4. '#' → logprob: -3.302945137023926
    5. 'sequence' → logprob: -3.552945137023926
    6. 's' → logprob: -3.677945137023926
    7. 'chaine' → logprob: -3.802945137023926
    8. 'list' → logprob: -4.177945137023926
    9. '_s' → logprob: -5.052945137023926
    10. '_list' → logprob: -5.552945137023926

Token 242: 'é' (ID: 377)
  Prédit: 'quence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.37829339504241943
    2. 'um' → logprob: -1.6282933950424194
    3. '#' → logprob: -2.628293514251709
    4. 'u' → logprob: -4.628293514251709
    5. 'erie' → logprob: -5.003293514251709
    6. 'omme' → logprob: -5.003293514251709
    7. 'quences' → logprob: -5.253293514251709
    8. 'ries' → logprob: -5.878293514251709
    9. 'gment' → logprob: -6.253293514251709
    10. 'eg' → logprob: -6.253293514251709

Token 243: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.00655302032828331
    2. 'rie' → logprob: -5.3815531730651855
    3. 'q' → logprob: -6.7565531730651855
    4. '#' → logprob: -7.8815531730651855
    5. 'que' → logprob: -9.131552696228027
    6. 'qu' → logprob: -9.631552696228027
    7. 'quences' → logprob: -9.756552696228027
    8. 'r' → logprob: -9.881552696228027
    9. 'quent' → logprob: -10.381552696228027
    10. '   ' → logprob: -11.631552696228027

Token 244: '
' (ID: 198)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00013774730905424803
    2. '
' → logprob: -9.250137329101562
    3. ' i' → logprob: -10.375137329101562
    4. '
' → logprob: -12.500137329101562
    5. ' =' → logprob: -13.375137329101562
    6. ' 
' → logprob: -14.250137329101562
    7. '```' → logprob: -14.250137329101562
    8. ' ' → logprob: -14.375137329101562
    9. '

' → logprob: -14.500137329101562
    10. '' → logprob: -14.625137329101562

Token 245: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.4974866644479334e-05
    2. '```' → logprob: -11.875015258789062
    3. ' i' → logprob: -12.250015258789062
    4. '
' → logprob: -13.000015258789062
    5. ' =' → logprob: -15.750015258789062
    6. '=' → logprob: -15.875015258789062
    7. '``' → logprob: -15.875015258789062
    8. '
' → logprob: -16.250015258789062
    9. ' 
' → logprob: -16.250015258789062
    10. '#' → logprob: -16.250015258789062

Token 246: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868766129016876
    2. ' =' → logprob: -1.1368765830993652
    3. 's' → logprob: -13.386877059936523
    4. ' ' → logprob: -14.136877059936523
    5. ' +=' → logprob: -14.511877059936523
    6. 'x' → logprob: -14.511877059936523
    7. 'i' → logprob: -15.011877059936523
    8. ' =
' → logprob: -15.136877059936523
    9. '+=' → logprob: -15.261877059936523
    10. ' ' → logprob: -15.261877059936523

Token 247: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02975129522383213
    2. ' ' → logprob: -3.5297513008117676
    3. ' ' → logprob: -14.65475082397461
    4. 'n' → logprob: -16.27975082397461
    5. 'a' → logprob: -16.52975082397461
    6. '  ' → logprob: -17.21725082397461
    7. ' n' → logprob: -17.27975082397461
    8. '   ' → logprob: -17.34225082397461
    9. '1' → logprob: -17.52975082397461
    10. '00' → logprob: -18.15475082397461

Token 248: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. 'a' → logprob: -19.50001335144043
    4. '   ' → logprob: -19.75001335144043
    5. 'n' → logprob: -20.25001335144043
    6. '۰' → logprob: -20.50001335144043
    7. '  ' → logprob: -20.81251335144043
    8. '-' → logprob: -21.31251335144043
    9. '000' → logprob: -21.43751335144043
    10. '```' → logprob: -21.50001335144043

Token 249: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 250: '#' (ID: 2)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.01710788533091545
    2. 'for' → logprob: -5.267107963562012
    3. ' while' → logprob: -5.392107963562012
    4. '<|end|>' → logprob: -5.642107963562012
    5. '#' → logprob: -5.767107963562012
    6. 'n' → logprob: -8.767107963562012
    7. '+' → logprob: -9.517107963562012
    8. 'x' → logprob: -9.517107963562012
    9. '
' → logprob: -10.517107963562012
    10. '<|end|>' → logprob: -10.642107963562012

Token 251: ' D' (ID: 415)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0006909898947924376
    2. 'for' → logprob: -7.375690937042236
    3. '#' → logprob: -10.375691413879395
    4. 'While' → logprob: -11.375691413879395
    5. ' while' → logprob: -11.500691413879395
    6. 'i' → logprob: -13.125691413879395
    7. 'n' → logprob: -13.625691413879395
    8. 'wh' → logprob: -13.625691413879395
    9. 't' → logprob: -14.250691413879395
    10. 'w' → logprob: -14.375691413879395

Token 252: 'ém' (ID: 4135)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.13148654997348785
    2. 'o' → logprob: -3.256486654281616
    3. 'é' → logprob: -3.756486654281616
    4. 'ef' → logprob: -4.381486415863037
    5. '#' → logprob: -4.506486415863037
    6. 'i' → logprob: -4.631486415863037
    7. 'while' → logprob: -5.381486415863037
    8. 'u' → logprob: -5.631486415863037
    9. 'x' → logprob: -5.756486415863037
    10. 'éf' → logprob: -6.006486415863037

Token 253: 'arrer' (ID: 85856)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.28923580050468445
    2. 'é' → logprob: -1.5392358303070068
    3. 'i' → logprob: -4.539235591888428
    4. 'ef' → logprob: -5.164235591888428
    5. '#' → logprob: -5.414235591888428
    6. 'éc' → logprob: -5.914235591888428
    7. 'ém' → logprob: -5.914235591888428
    8. 'u' → logprob: -6.664235591888428
    9. 'ebut' → logprob: -6.664235591888428
    10. 'em' → logprob: -6.914235591888428

Token 254: ' une' (ID: 2463)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.3880484700202942
    2. 'while' → logprob: -1.1380484104156494
    3. ' a' → logprob: -7.7630486488342285
    4. ' ' → logprob: -8.01304817199707
    5. ' la' → logprob: -9.01304817199707
    6. ':' → logprob: -10.13804817199707
    7. ' une' → logprob: -10.38804817199707
    8. '	while' → logprob: -10.51304817199707
    9. 'le' → logprob: -10.63804817199707
    10. 'a' → logprob: -10.76304817199707

Token 255: ' boucle' (ID: 174211)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3714500963687897
    2. ' while' → logprob: -1.2464500665664673
    3. 'bou' → logprob: -3.871450185775757
    4. ' boucle' → logprob: -6.496449947357178
    5. ' bou' → logprob: -9.496450424194336
    6. 'wh' → logprob: -9.746450424194336
    7. ' ' → logprob: -9.996450424194336
    8. 't' → logprob: -10.246450424194336
    9. 'b' → logprob: -10.371450424194336
    10. 'hile' → logprob: -10.371450424194336

Token 256: ' for' (ID: 395)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.10025196522474289
    2. ' while' → logprob: -2.3502519130706787
    3. 'for' → logprob: -10.475252151489258
    4. '	while' → logprob: -12.600252151489258
    5. 'w' → logprob: -12.725252151489258
    6. ':' → logprob: -13.100252151489258
    7. 'wh' → logprob: -13.350252151489258
    8. '
' → logprob: -13.475252151489258
    9. ' for' → logprob: -13.475252151489258
    10. ' 
' → logprob: -14.100252151489258

Token 257: ' qui' (ID: 2780)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5222978591918945
    2. ' x' → logprob: -2.0222978591918945
    3. ' _' → logprob: -2.0222978591918945
    4. '_' → logprob: -3.0222978591918945
    5. 'for' → logprob: -3.5222978591918945
    6. ' range' → logprob: -3.5222978591918945
    7. ' in' → logprob: -4.5222978591918945
    8. ' n' → logprob: -5.0222978591918945
    9. ' i' → logprob: -5.1472978591918945
    10. 'x' → logprob: -5.5222978591918945

Token 258: ' va' (ID: 3423)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4301087558269501
    2. 'range' → logprob: -1.6801087856292725
    3. ' x' → logprob: -2.5551087856292725
    4. 'x' → logprob: -3.3051087856292725
    5. ' i' → logprob: -3.3051087856292725
    6. '_' → logprob: -5.930108547210693
    7. 'i' → logprob: -5.930108547210693
    8. 'for' → logprob: -6.680108547210693
    9. ' for' → logprob: -6.680108547210693
    10. 'r' → logprob: -7.555108547210693

Token 259: ' de' (ID: 334)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07242246717214584
    2. ' range' → logprob: -2.822422504425049
    3. 'for' → logprob: -4.947422504425049
    4. 'x' → logprob: -6.822422504425049
    5. 'r' → logprob: -7.447422504425049
    6. 'i' → logprob: -7.447422504425049
    7. ' for' → logprob: -7.697422504425049
    8. ' i' → logprob: -8.82242202758789
    9. 'n' → logprob: -9.19742202758789
    10. ' x' → logprob: -10.07242202758789

Token 260: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08736655116081238
    2. ' ' → logprob: -2.5873665809631348
    3. 'x' → logprob: -5.337366580963135
    4. '1' → logprob: -6.337366580963135
    5. ' x' → logprob: -6.587366580963135
    6. 'range' → logprob: -8.462366104125977
    7. ' range' → logprob: -8.837366104125977
    8. 'n' → logprob: -10.212366104125977
    9. ' i' → logprob: -10.337366104125977
    10. 'i' → logprob: -10.462366104125977

Token 261: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001362020499072969
    2. 'x' → logprob: -7.251361846923828
    3. '1' → logprob: -8.001361846923828
    4. ' ' → logprob: -8.251361846923828
    5. 'range' → logprob: -10.376361846923828
    6. 'i' → logprob: -11.376361846923828
    7. 'n' → logprob: -11.626361846923828
    8. ' x' → logprob: -13.126361846923828
    9. ' range' → logprob: -14.376361846923828
    10. '2' → logprob: -15.001361846923828

Token 262: ' jusqu' (ID: 21961)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -1.547442078590393
    2. 'to' → logprob: -1.547442078590393
    3. ' à' → logprob: -1.672442078590393
    4. 'n' → logprob: -1.797442078590393
    5. ' n' → logprob: -2.6724419593811035
    6. ',' → logprob: -2.7974419593811035
    7. 'à' → logprob: -2.9224419593811035
    8. ' in' → logprob: -4.6724419593811035
    9. 'range' → logprob: -4.7974419593811035
    10. 'in' → logprob: -5.0474419593811035

Token 263: ''à' (ID: 33688)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.4312466084957123
    2. '(' → logprob: -1.0562466382980347
    3. 'n' → logprob: -6.556246757507324
    4. 'a' → logprob: -7.806246757507324
    5. 'à' → logprob: -8.181246757507324
    6. 'e' → logprob: -9.431246757507324
    7. ' (' → logprob: -9.556246757507324
    8. 'au' → logprob: -9.681246757507324
    9. ' à' → logprob: -10.181246757507324
    10. '(len' → logprob: -10.556246757507324

Token 264: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2520070970058441
    2. ' n' → logprob: -1.5020071268081665
    3. 'len' → logprob: -10.502007484436035
    4. ' len' → logprob: -10.502007484436035
    5. ' ' → logprob: -11.127007484436035
    6. '(n' → logprob: -12.127007484436035
    7. '	n' → logprob: -14.127007484436035
    8. 'x' → logprob: -14.252007484436035
    9. '(' → logprob: -15.502007484436035
    10. ' x' → logprob: -15.627007484436035

Token 265: '-' (ID: 12)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6304054260253906
    2. '(n' → logprob: -1.7554054260253906
    3. 'range' → logprob: -1.8804054260253906
    4. '(' → logprob: -2.7554054260253906
    5. 'n' → logprob: -3.8804054260253906
    6. ' range' → logprob: -4.380405426025391
    7. '(range' → logprob: -4.505405426025391
    8. ' in' → logprob: -4.505405426025391
    9. '+' → logprob: -4.755405426025391
    10. 'in' → logprob: -5.255405426025391

Token 266: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.73052782076411e-05
    2. ' ' → logprob: -9.625067710876465
    3. '-' → logprob: -14.000067710876465
    4. 'n' → logprob: -15.625067710876465
    5. '2' → logprob: -16.75006675720215
    6. '```' → logprob: -16.87506675720215
    7. ' -' → logprob: -17.37506675720215
    8. '   ' → logprob: -17.37506675720215
    9. '  ' → logprob: -17.87506675720215
    10. ')' → logprob: -17.87506675720215

Token 267: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11692355573177338
    2. ' for' → logprob: -2.2419235706329346
    3. ':' → logprob: -5.8669233322143555
    4. 'range' → logprob: -7.7419233322143555
    5. 'n' → logprob: -8.366923332214355
    6. ' in' → logprob: -8.866923332214355
    7. '
' → logprob: -9.366923332214355
    8. ',' → logprob: -9.366923332214355
    9. 'in' → logprob: -9.741923332214355
    10. ':
' → logprob: -9.991923332214355

Token 268: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003582263889256865
    2. ' for' → logprob: -8.000358581542969
    3. 'range' → logprob: -10.750358581542969
    4. 'n' → logprob: -14.375358581542969
    5. '```' → logprob: -14.875358581542969
    6. '
' → logprob: -15.500358581542969
    7. ':' → logprob: -15.875358581542969
    8. 'pour' → logprob: -17.37535858154297
    9. ' range' → logprob: -17.75035858154297
    10. '(range' → logprob: -18.00035858154297

Token 269: ' '' (ID: 461)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.896309739408025e-07
    2. ' for' → logprob: -14.125000953674316
    3. '
' → logprob: -18.875
    4. '```' → logprob: -19.25
    5. 'range' → logprob: -19.625
    6. 'fo' → logprob: -20.125
    7. 'n' → logprob: -20.375
    8. 'from' → logprob: -20.5
    9. 'while' → logprob: -20.5
    10. 'f' → logprob: -20.625

Token 270: 'range' (ID: 20967)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.043299462646245956
    2. 'range' → logprob: -3.793299436569214
    3. ' for' → logprob: -4.668299674987793
    4. 'i' → logprob: -5.418299674987793
    5. 'x' → logprob: -5.543299674987793
    6. ' range' → logprob: -7.168299674987793
    7. 'n' → logprob: -7.668299674987793
    8. '_' → logprob: -7.668299674987793
    9. ' i' → logprob: -8.793299674987793
    10. ' x' → logprob: -9.543299674987793

Token 271: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.004628176800906658
    2. '(' → logprob: -5.3796281814575195
    3. ' (' → logprob: -12.50462818145752
    4. 'n' → logprob: -13.25462818145752
    5. '('' → logprob: -13.87962818145752
    6. '(
' → logprob: -13.87962818145752
    7. ' n' → logprob: -15.50462818145752
    8. ')' → logprob: -16.254627227783203
    9. '(len' → logprob: -16.379627227783203
    10. ')n' → logprob: -16.879627227783203

Token 272: ')'' (ID: 45517)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03567024692893028
    2. ')' → logprob: -3.410670280456543
    3. ')'' → logprob: -6.660670280456543
    4. '):
' → logprob: -7.910670280456543
    5. ')':' → logprob: -8.285670280456543
    6. ''):' → logprob: -10.160670280456543
    7. ' ):' → logprob: -10.410670280456543
    8. '()' → logprob: -11.285670280456543
    9. '(' → logprob: -11.785670280456543
    10. '('' → logprob: -12.285670280456543

Token 273: ' crée' (ID: 102256)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2534101903438568
    2. 'for' → logprob: -1.5034102201461792
    3. ' for' → logprob: -6.878410339355469
    4. ':
' → logprob: -8.003410339355469
    5. ')' → logprob: -10.003410339355469
    6. '):' → logprob: -10.128410339355469
    7. '(' → logprob: -11.628410339355469
    8. 'in' → logprob: -11.878410339355469
    9. '(range' → logprob: -12.753410339355469
    10. 'range' → logprob: -12.878410339355469

Token 274: ' un' (ID: 537)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.042363520711660385
    2. '(' → logprob: -3.792363405227661
    3. 'n' → logprob: -4.16736364364624
    4. 'range' → logprob: -5.91736364364624
    5. '(range' → logprob: -7.66736364364624
    6. ')' → logprob: -8.667363166809082
    7. ' n' → logprob: -9.792363166809082
    8. ' range' → logprob: -10.792363166809082
    9. ' (' → logprob: -11.667363166809082
    10. 'a' → logprob: -12.292363166809082

Token 275: ' it' (ID: 480)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.09377159178256989
    2. ' range' → logprob: -3.4687716960906982
    3. 'sequence' → logprob: -3.7187716960906982
    4. ' sequence' → logprob: -3.9687716960906982
    5. 'n' → logprob: -4.843771457672119
    6. 'interval' → logprob: -5.718771457672119
    7. 'iter' → logprob: -7.093771457672119
    8. 'objet' → logprob: -7.843771457672119
    9. ')' → logprob: -7.968771457672119
    10. ' interval' → logprob: -7.968771457672119

Token 276: 'ér' (ID: 2156)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.07770425826311111
    2. 'range' → logprob: -3.7027041912078857
    3. '(range' → logprob: -4.702704429626465
    4. 'éra' → logprob: -4.827704429626465
    5. '(' → logprob: -4.952704429626465
    6. 'érateur' → logprob: -5.077704429626465
    7. 'ération' → logprob: -5.452704429626465
    8. 'érer' → logprob: -5.827704429626465
    9. 'é' → logprob: -5.952704429626465
    10. '(n' → logprob: -6.077704429626465

Token 277: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -0.005986273754388094
    2. 'ateur' → logprob: -5.255986213684082
    3. 'ator' → logprob: -7.505986213684082
    4. 'er' → logprob: -9.005986213684082
    5. 'range' → logprob: -9.755986213684082
    6. 'ate' → logprob: -12.755986213684082
    7. 'e' → logprob: -12.880986213684082
    8. 'r' → logprob: -13.130986213684082
    9. 'érateur' → logprob: -13.130986213684082
    10. '(range' → logprob: -13.255986213684082

Token 278: ' de' (ID: 334)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.18298035860061646
    2. 'for' → logprob: -2.0579802989959717
    3. '(' → logprob: -3.3079802989959717
    4. ':' → logprob: -6.182980537414551
    5. ' for' → logprob: -7.432980537414551
    6. ')' → logprob: -9.43298053741455
    7. 'n' → logprob: -9.68298053741455
    8. '(range' → logprob: -10.05798053741455
    9. '(i' → logprob: -10.80798053741455
    10. '):' → logprob: -11.55798053741455

Token 279: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01870807260274887
    2. ' n' → logprob: -4.143708229064941
    3. '0' → logprob: -6.268708229064941
    4. '(n' → logprob: -7.643708229064941
    5. 'range' → logprob: -8.518708229064941
    6. '(' → logprob: -9.893708229064941
    7. ' range' → logprob: -11.143708229064941
    8. ')' → logprob: -11.393708229064941
    9. ')n' → logprob: -11.518708229064941
    10. ' ' → logprob: -11.768708229064941

Token 280: ' valeurs' (ID: 73668)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.191900372505188
    2. '):' → logprob: -1.816900372505188
    3. ':' → logprob: -5.316900253295898
    4. '(n' → logprob: -5.816900253295898
    5. '(' → logprob: -6.566900253295898
    6. ')n' → logprob: -7.066900253295898
    7. ' ):' → logprob: -7.941900253295898
    8. 'n' → logprob: -8.066900253295898
    9. '(range' → logprob: -8.566900253295898
    10. ' )' → logprob: -8.816900253295898

Token 281: ' comm' (ID: 1394)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.40241506695747375
    2. ':' → logprob: -1.1524150371551514
    3. '(' → logprob: -4.9024152755737305
    4. ' for' → logprob: -5.5274152755737305
    5. '(n' → logprob: -6.6524152755737305
    6. '(range' → logprob: -6.9024152755737305
    7. ')' → logprob: -7.6524152755737305
    8. '):' → logprob: -7.9024152755737305
    9. 'range' → logprob: -8.02741527557373
    10. ':
' → logprob: -8.27741527557373

Token 282: 'en' (ID: 262)
  Prédit: 'encé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'encé' → logprob: -0.08963000029325485
    2. 'ence' → logprob: -3.589629888534546
    3. 'enc' → logprob: -3.714629888534546
    4. 'enç' → logprob: -4.214630126953125
    5. 'encer' → logprob: -4.839630126953125
    6. 'enced' → logprob: -5.714630126953125
    7. 'en' → logprob: -5.964630126953125
    8. 'encing' → logprob: -6.339630126953125
    9. 'range' → logprob: -6.964630126953125
    10. 'encent' → logprob: -7.089630126953125

Token 283: 'çant' (ID: 78714)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.24982048571109772
    2. 'range' → logprob: -1.6248204708099365
    3. 'e' → logprob: -4.124820709228516
    4. 'ts' → logprob: -6.374820709228516
    5. 'es' → logprob: -6.749820709228516
    6. 'x' → logprob: -6.999820709228516
    7. '#' → logprob: -7.374820709228516
    8. 'n' → logprob: -7.499820709228516
    9. 'r' → logprob: -7.874820709228516
    10. 'ée' → logprob: -7.874820709228516

Token 284: ' à' (ID: 1221)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.6651188731193542
    2. 'à' → logprob: -1.665118932723999
    3. '(' → logprob: -1.790118932723999
    4. ' par' → logprob: -2.790118932723999
    5. ' à' → logprob: -3.165118932723999
    6. ')' → logprob: -4.54011869430542
    7. ' ' → logprob: -5.16511869430542
    8. '0' → logprob: -6.29011869430542
    9. 'at' → logprob: -6.54011869430542
    10. '()' → logprob: -6.54011869430542

Token 285: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004078639671206474
    2. ' ' → logprob: -5.5040788650512695
    3. ' ' → logprob: -16.379077911376953
    4. '1' → logprob: -17.879077911376953
    5. '```' → logprob: -18.129077911376953
    6. ' zero' → logprob: -18.254077911376953
    7. ' zéro' → logprob: -18.254077911376953
    8. ')' → logprob: -19.254077911376953
    9. '  ' → logprob: -19.504077911376953
    10. ',' → logprob: -20.254077911376953

Token 286: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '```' → logprob: -19.625003814697266
    4. '1' → logprob: -20.375003814697266
    5. 'zero' → logprob: -20.750003814697266
    6. ' zéro' → logprob: -21.375003814697266
    7. '۰' → logprob: -22.000003814697266
    8. '=' → logprob: -22.125003814697266
    9. ')' → logprob: -22.375003814697266
    10. '`' → logprob: -22.750003814697266

Token 287: ' et' (ID: 859)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.244413766078651e-05
    2. ' for' → logprob: -9.500082015991211
    3. ':' → logprob: -12.125082015991211
    4. 'range' → logprob: -14.125082015991211
    5. ')' → logprob: -14.875082015991211
    6. '
' → logprob: -15.375082015991211
    7. 'f' → logprob: -15.375082015991211
    8. '(' → logprob: -15.625082015991211
    9. 'n' → logprob: -16.00008201599121
    10. 'pour' → logprob: -17.00008201599121

Token 288: ' fin' (ID: 2131)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.14645667374134064
    2. ' s' → logprob: -2.771456718444824
    3. 's' → logprob: -3.146456718444824
    4. ' all' → logprob: -4.521456718444824
    5. 'n' → logprob: -4.771456718444824
    6. ' allant' → logprob: -5.646456718444824
    7. 'se' → logprob: -6.521456718444824
    8. '```' → logprob: -6.896456718444824
    9. ' n' → logprob: -7.271456718444824
    10. 'ex' → logprob: -7.521456718444824

Token 289: 'issant' (ID: 31359)
  Prédit: 'ant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -1.342071294784546
    2. 'à' → logprob: -1.967071294784546
    3. ')' → logprob: -2.217071294784546
    4. 'au' → logprob: -2.717071294784546
    5. 'par' → logprob: -3.092071294784546
    6. 'nant' → logprob: -3.342071294784546
    7. 'endant' → logprob: -3.717071294784546
    8. 'n' → logprob: -3.967071294784546
    9. '=' → logprob: -4.092071533203125
    10. 'issant' → logprob: -4.217071533203125

Token 290: ' à' (ID: 1221)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.8764809966087341
    2. ' à' → logprob: -1.001481056213379
    3. '(n' → logprob: -2.126481056213379
    4. ' n' → logprob: -3.251481056213379
    5. ')' → logprob: -4.251481056213379
    6. 'n' → logprob: -4.626481056213379
    7. ' ' → logprob: -4.751481056213379
    8. '(' → logprob: -4.751481056213379
    9. ' au' → logprob: -5.626481056213379
    10. 'par' → logprob: -6.001481056213379

Token 291: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3868737816810608
    2. ' n' → logprob: -1.136873722076416
    3. '(n' → logprob: -13.761874198913574
    4. ',n' → logprob: -14.636874198913574
    5. '	n' → logprob: -14.761874198913574
    6. '1' → logprob: -15.261874198913574
    7. ')n' → logprob: -15.386874198913574
    8. ' ' → logprob: -16.136873245239258
    9. '```' → logprob: -16.386873245239258
    10. ',' → logprob: -16.761873245239258

Token 292: '-' (ID: 12)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1874796599149704
    2. '):' → logprob: -2.9374797344207764
    3. '(range' → logprob: -2.9374797344207764
    4. 'range' → logprob: -3.3124797344207764
    5. ':' → logprob: -4.562479496002197
    6. '(n' → logprob: -4.937479496002197
    7. '(' → logprob: -5.062479496002197
    8. ' range' → logprob: -7.312479496002197
    9. '.' → logprob: -7.687479496002197
    10. 'n' → logprob: -8.062479972839355

Token 293: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. '-' → logprob: -14.875001907348633
    3. ' ' → logprob: -15.000001907348633
    4. '```' → logprob: -15.625001907348633
    5. 'range' → logprob: -15.750001907348633
    6. 'n' → logprob: -16.125001907348633
    7. '2' → logprob: -16.375001907348633
    8. '0' → logprob: -16.625001907348633
    9. 'i' → logprob: -17.125001907348633
    10. ',' → logprob: -17.625001907348633

Token 294: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005152635276317596
    2. ' for' → logprob: -7.625515460968018
    3. ':' → logprob: -10.75051498413086
    4. '
' → logprob: -13.00051498413086
    5. 'f' → logprob: -13.62551498413086
    6. '```' → logprob: -13.87551498413086
    7. ':
' → logprob: -14.37551498413086
    8. 'pour' → logprob: -15.25051498413086
    9. 'fo' → logprob: -15.62551498413086
    10. 'n' → logprob: -15.87551498413086

Token 295: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.204720582696609e-05
    2. ' for' → logprob: -9.875052452087402
    3. 'f' → logprob: -15.375052452087402
    4. 'or' → logprob: -16.250051498413086
    5. '```' → logprob: -16.625051498413086
    6. 'fo' → logprob: -17.000051498413086
    7. ')' → logprob: -17.125051498413086
    8. ':' → logprob: -17.625051498413086
    9. '
' → logprob: -17.625051498413086
    10. 'range' → logprob: -18.250051498413086

Token 296: ' À' (ID: 27643)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007101670489646494
    2. ' for' → logprob: -7.2507100105285645
    3. '```' → logprob: -17.125709533691406
    4. '
' → logprob: -17.250709533691406
    5. ':' → logprob: -18.000709533691406
    6. 'f' → logprob: -18.625709533691406
    7. 'fo' → logprob: -19.375709533691406
    8. 'from' → logprob: -19.750709533691406
    9. '	for' → logprob: -19.750709533691406
    10. ')' → logprob: -20.375709533691406

Token 297: ' chaque' (ID: 21194)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.6065106391906738
    2. ' chaque' → logprob: -1.7315106391906738
    3. ' range' → logprob: -1.8565106391906738
    4. ' for' → logprob: -1.9815106391906738
    5. 'for' → logprob: -2.106510639190674
    6. 'i' → logprob: -2.481510639190674
    7. 'range' → logprob: -3.231510639190674
    8. ' x' → logprob: -3.606510639190674
    9. 'x' → logprob: -4.606510639190674
    10. '_' → logprob: -4.731510639190674

Token 298: ' it' (ID: 480)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2697799503803253
    2. ' x' → logprob: -2.394779920578003
    3. ':' → logprob: -2.894779920578003
    4. ' :' → logprob: -3.644779920578003
    5. '_' → logprob: -4.269780158996582
    6. ' i' → logprob: -4.269780158996582
    7. 'x' → logprob: -4.519780158996582
    8. 'n' → logprob: -5.769780158996582
    9. ' for' → logprob: -5.769780158996582
    10. 'for' → logprob: -6.269780158996582

Token 299: 'ération' (ID: 24977)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.1507432907819748
    2. 'ération' → logprob: -2.400743246078491
    3. 'ère' → logprob: -3.525743246078491
    4. 'é' → logprob: -4.77574348449707
    5. 'r' → logprob: -6.27574348449707
    6. 'érer' → logprob: -6.40074348449707
    7. 'éré' → logprob: -6.52574348449707
    8. 'érée' → logprob: -6.90074348449707
    9. 'e' → logprob: -7.02574348449707
    10. 'érant' → logprob: -7.15074348449707

Token 300: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09129166603088379
    2. ' :' → logprob: -3.091291666030884
    3. 'for' → logprob: -3.591291666030884
    4. ' for' → logprob: -4.841291427612305
    5. ':
' → logprob: -6.091291427612305
    6. '   ' → logprob: -6.591291427612305
    7. ',' → logprob: -6.966291427612305
    8. ' ' → logprob: -7.216291427612305
    9. 'in' → logprob: -7.716291427612305
    10. ' :
' → logprob: -7.841291427612305

Token 301: ' '' (ID: 461)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7371495962142944
    2. ' x' → logprob: -1.6121495962142944
    3. ' for' → logprob: -2.112149715423584
    4. ' if' → logprob: -2.737149715423584
    5. 'for' → logprob: -3.362149715423584
    6. ' result' → logprob: -3.612149715423584
    7. ' ' → logprob: -4.112149715423584
    8. 'x' → logprob: -4.237149715423584
    9. 'i' → logprob: -4.612149715423584
    10. 'if' → logprob: -4.612149715423584

Token 302: 'j' (ID: 73)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7116478681564331
    2. ' x' → logprob: -0.9616478681564331
    3. 'a' → logprob: -2.8366479873657227
    4. ' a' → logprob: -3.7116479873657227
    5. ' i' → logprob: -3.8366479873657227
    6. 'i' → logprob: -3.9616479873657227
    7. ' ' → logprob: -6.711647987365723
    8. '   ' → logprob: -7.336647987365723
    9. 'result' → logprob: -8.211647987365723
    10. ' result' → logprob: -8.836647987365723

Token 303: ''' (ID: 6)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14902867376804352
    2. 'in' → logprob: -2.149028778076172
    3. ')' → logprob: -3.899028778076172
    4. ' ' → logprob: -6.774028778076172
    5. ' )' → logprob: -9.149028778076172
    6. ',' → logprob: -9.274028778076172
    7. '  ' → logprob: -10.399028778076172
    8. ' i' → logprob: -10.524028778076172
    9. '   ' → logprob: -10.649028778076172
    10. ' en' → logprob: -10.649028778076172

Token 304: ' va' (ID: 3423)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16669471561908722
    2. 'in' → logprob: -2.9166946411132812
    3. ',' → logprob: -3.1666946411132812
    4. ' ' → logprob: -3.9166946411132812
    5. ' =' → logprob: -4.041694641113281
    6. '=' → logprob: -5.166694641113281
    7. ')' → logprob: -5.416694641113281
    8. '<|end|>' → logprob: -5.416694641113281
    9. ' ,' → logprob: -5.791694641113281
    10. '  ' → logprob: -8.166694641113281

Token 305: 'ud' (ID: 527)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4207872152328491
    2. ' in' → logprob: -1.1707872152328491
    3. '=' → logprob: -4.295787334442139
    4. ')' → logprob: -5.795787334442139
    5. '_' → logprob: -5.920787334442139
    6. ' =' → logprob: -6.045787334442139
    7. ' ' → logprob: -6.170787334442139
    8. 'range' → logprob: -6.670787334442139
    9. 'au' → logprob: -7.045787334442139
    10. 'prendre' → logprob: -7.170787334442139

Token 306: 'ra' (ID: 614)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7381747961044312
    2. ' j' → logprob: -1.4881747961044312
    3. ' ' → logprob: -1.6131747961044312
    4. ' =' → logprob: -3.1131749153137207
    5. ''' → logprob: -4.613174915313721
    6. '   ' → logprob: -4.738174915313721
    7. 'j' → logprob: -4.738174915313721
    8. '  ' → logprob: -5.113174915313721
    9. ')' → logprob: -5.738174915313721
    10. ',' → logprob: -5.863174915313721

Token 307: ' l' (ID: 305)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.016073787584900856
    2. ' j' → logprob: -4.891073703765869
    3. '  ' → logprob: -6.391073703765869
    4. 'j' → logprob: -6.391073703765869
    5. '    ' → logprob: -6.516073703765869
    6. ')' → logprob: -6.766073703765869
    7. ',' → logprob: -7.516073703765869
    8. '_' → logprob: -7.641073703765869
    9. ''' → logprob: -8.391074180603027
    10. ' )' → logprob: -8.766074180603027

Token 308: ''ind' (ID: 82245)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -1.1639279127120972
    2. ''' → logprob: -1.4139279127120972
    3. ' ' → logprob: -1.5389279127120972
    4. '  ' → logprob: -2.2889280319213867
    5. ' '' → logprob: -3.4139280319213867
    6. ''espace' → logprob: -4.288928031921387
    7. ')' → logprob: -4.538928031921387
    8. 'j' → logprob: -4.663928031921387
    9. ' espace' → logprob: -5.288928031921387
    10. 'a' → logprob: -5.288928031921387

Token 309: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.023333409801125526
    2. 'e' → logprob: -3.8983333110809326
    3. 'i' → logprob: -6.398333549499512
    4. 'é' → logprob: -6.898333549499512
    5. 'ice' → logprob: -10.023333549499512
    6. 'x' → logprob: -10.523333549499512
    7. '   ' → logprob: -12.023333549499512
    8. 'ent' → logprob: -12.398333549499512
    9. 'exp' → logprob: -12.523333549499512
    10. 'j' → logprob: -12.523333549499512

Token 310: ' actuel' (ID: 113646)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6244320273399353
    2. ' ' → logprob: -1.12443208694458
    3. 'in' → logprob: -2.49943208694458
    4. ' j' → logprob: -3.49943208694458
    5. ' for' → logprob: -5.12443208694458
    6. ')' → logprob: -5.24943208694458
    7. ',' → logprob: -5.24943208694458
    8. 'for' → logprob: -5.62443208694458
    9. '  ' → logprob: -6.74943208694458
    10. 'n' → logprob: -6.87443208694458

Token 311: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2510477602481842
    2. ' for' → logprob: -2.3760478496551514
    3. 'in' → logprob: -2.6260478496551514
    4. ' in' → logprob: -3.0010478496551514
    5. ':' → logprob: -5.126047611236572
    6. ')' → logprob: -8.00104808807373
    7. ',' → logprob: -8.25104808807373
    8. ' =' → logprob: -9.62604808807373
    9. 'range' → logprob: -9.75104808807373
    10. ' :' → logprob: -10.00104808807373

Token 312: ' la' (ID: 557)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5728463530540466
    2. 'range' → logprob: -1.0728464126586914
    3. ' la' → logprob: -2.6978464126586914
    4. ' ' → logprob: -5.072846412658691
    5. ' j' → logprob: -5.197846412658691
    6. ' n' → logprob: -5.447846412658691
    7. 'n' → logprob: -5.697846412658691
    8. ' for' → logprob: -6.197846412658691
    9. ' the' → logprob: -6.572846412658691
    10. 'for' → logprob: -6.697846412658691

Token 313: ' boucle' (ID: 174211)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7543976902961731
    2. 'for' → logprob: -1.8793976306915283
    3. 'range' → logprob: -2.0043976306915283
    4. ' range' → logprob: -2.0043976306915283
    5. ' boucle' → logprob: -2.7543976306915283
    6. ' ' → logprob: -3.2543976306915283
    7. ' loop' → logprob: -6.254397869110107
    8. 'bou' → logprob: -6.379397869110107
    9. ' bou' → logprob: -7.754397869110107
    10. 'r' → logprob: -8.12939739227295

Token 314: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.025184378027915955
    2. ' for' → logprob: -4.275184154510498
    3. ':' → logprob: -4.525184154510498
    4. ':
' → logprob: -10.150184631347656
    5. 'in' → logprob: -10.525184631347656
    6. ' :' → logprob: -11.150184631347656
    7. '
' → logprob: -11.650184631347656
    8. 'n' → logprob: -11.775184631347656
    9. ' in' → logprob: -11.775184631347656
    10. ')' → logprob: -12.525184631347656

Token 315: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0015700951917096972
    2. ' for' → logprob: -6.626570224761963
    3. 'f' → logprob: -8.626569747924805
    4. 'j' → logprob: -10.751569747924805
    5. ':' → logprob: -11.001569747924805
    6. '
' → logprob: -11.376569747924805
    7. '```' → logprob: -12.001569747924805
    8. 'n' → logprob: -12.501569747924805
    9. ',' → logprob: -13.876569747924805
    10. ' 
' → logprob: -14.001569747924805

Token 316: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.012676924467086792
    2. 'j' → logprob: -4.76267671585083
    3. ' ' → logprob: -5.51267671585083
    4. ' ' → logprob: -12.262677192687988
    5. '  ' → logprob: -12.387677192687988
    6. ' i' → logprob: -13.012677192687988
    7. ' in' → logprob: -13.012677192687988
    8. '_' → logprob: -13.137677192687988
    9. ' _' → logprob: -14.012677192687988
    10. 'space' → logprob: -14.387677192687988

Token 317: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026353826746344566
    2. 'in' → logprob: -3.6513538360595703
    3. ' ' → logprob: -10.02635383605957
    4. 'range' → logprob: -13.40135383605957
    5. ')' → logprob: -13.90135383605957
    6. '	in' → logprob: -14.40135383605957
    7. 'import' → logprob: -14.46385383605957
    8. ',' → logprob: -14.52635383605957
    9. 'In' → logprob: -14.58885383605957
    10. '```' → logprob: -14.71385383605957

Token 318: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.005930101033300161
    2. 'range' → logprob: -5.130929946899414
    3. '(range' → logprob: -14.505929946899414
    4. ' ' → logprob: -14.630929946899414
    5. '	range' → logprob: -15.880929946899414
    6. 'n' → logprob: -16.255929946899414
    7. ' ' → logprob: -16.380929946899414
    8. ' n' → logprob: -16.630929946899414
    9. ')' → logprob: -16.880929946899414
    10. ' xrange' → logprob: -17.505929946899414

Token 319: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0015080781886354089
    2. '(' → logprob: -6.5015082359313965
    3. ' (' → logprob: -12.126507759094238
    4. '(
' → logprob: -14.876507759094238
    5. 'n' → logprob: -17.751508712768555
    6. '(j' → logprob: -18.751508712768555
    7. '((' → logprob: -19.751508712768555
    8. '(

' → logprob: -19.876508712768555
    9. '(len' → logprob: -20.126508712768555
    10. '(x' → logprob: -20.751508712768555

Token 320: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -1.8550976164988242e-05
    2. '):
' → logprob: -11.625018119812012
    3. ':' → logprob: -12.500018119812012
    4. ' ):' → logprob: -12.750018119812012
    5. ')' → logprob: -13.125018119812012
    6. '+' → logprob: -14.375018119812012
    7. '[' → logprob: -16.125019073486328
    8. '():' → logprob: -16.625019073486328
    9. '):
' → logprob: -16.750019073486328
    10. '   ' → logprob: -17.375019073486328

Token 321: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7511221766471863
    2. '   ' → logprob: -1.126122236251831
    3. ' :' → logprob: -1.876122236251831
    4. ' ' → logprob: -4.001121997833252
    5. '    ' → logprob: -4.376121997833252
    6. '<|end|>' → logprob: -5.376121997833252
    7. '    
' → logprob: -6.001121997833252
    8. ' :
' → logprob: -6.001121997833252
    9. ' i' → logprob: -6.251121997833252
    10. ' if' → logprob: -6.376121997833252

Token 322: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5404678583145142
    2. ' i' → logprob: -1.1654678583145142
    3. 'i' → logprob: -2.2904677391052246
    4. '    
' → logprob: -6.290467739105225
    5. ' if' → logprob: -6.665467739105225
    6. 'if' → logprob: -7.540467739105225
    7. '	i' → logprob: -7.790467739105225
    8. '```' → logprob: -8.790468215942383
    9. ' 
' → logprob: -9.790468215942383
    10. '       ' → logprob: -9.915468215942383

Token 323: ' Bou' (ID: 33816)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.009378602728247643
    2. '   ' → logprob: -5.134378433227539
    3. ' i' → logprob: -5.759378433227539
    4. 'if' → logprob: -8.884378433227539
    5. 'for' → logprob: -10.384378433227539
    6. '    
' → logprob: -10.509378433227539
    7. ' ' → logprob: -10.634378433227539
    8. '  ' → logprob: -11.009378433227539
    9. '#' → logprob: -11.134378433227539
    10. '	i' → logprob: -11.634378433227539

Token 324: 'cle' (ID: 3170)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6127387881278992
    2. 'cle' → logprob: -1.362738847732544
    3. '       ' → logprob: -2.862738847732544
    4. 'ter' → logprob: -3.237738847732544
    5. 't' → logprob: -3.612738847732544
    6. 'c' → logprob: -4.237738609313965
    7. 'u' → logprob: -4.237738609313965
    8. 'cler' → logprob: -4.362738609313965
    9. 'clé' → logprob: -4.987738609313965
    10. 'r' → logprob: -5.362738609313965

Token 325: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8327692747116089
    2. '    ' → logprob: -1.0827692747116089
    3. ':' → logprob: -2.4577693939208984
    4. ' =' → logprob: -3.3327693939208984
    5. ' if' → logprob: -3.9577693939208984
    6. ' for' → logprob: -4.082769393920898
    7. 'for' → logprob: -4.207769393920898
    8. ' ' → logprob: -4.207769393920898
    9. ' +=' → logprob: -4.957769393920898
    10. ' :' → logprob: -5.082769393920898

Token 326: ' permettant' (ID: 61092)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.42908933758735657
    2. ' x' → logprob: -1.3040893077850342
    3. ' a' → logprob: -2.804089307785034
    4. '    ' → logprob: -5.304089546203613
    5. '   ' → logprob: -5.804089546203613
    6. ' ' → logprob: -5.929089546203613
    7. 'x' → logprob: -6.429089546203613
    8. ' j' → logprob: -6.679089546203613
    9. ' (' → logprob: -7.179089546203613
    10. 'a' → logprob: -7.304089546203613

Token 327: ' d' (ID: 272)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.7868151664733887
    2. ' i' → logprob: -0.9118151664733887
    3. 'x' → logprob: -2.2868151664733887
    4. 'i' → logprob: -3.6618151664733887
    5. '   ' → logprob: -5.286815166473389
    6. ' (' → logprob: -5.911815166473389
    7. ' ' → logprob: -6.161815166473389
    8. ' j' → logprob: -6.536815166473389
    9. ' a' → logprob: -7.036815166473389
    10. ' result' → logprob: -7.411815166473389

Token 328: ''ét' (ID: 23771)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6427710056304932
    2. ' a' → logprob: -2.017771005630493
    3. ' continuer' → logprob: -2.017771005630493
    4. 'x' → logprob: -3.017771005630493
    5. 'i' → logprob: -3.142771005630493
    6. 'a' → logprob: -3.392771005630493
    7. '   ' → logprob: -4.142770767211914
    8. ' j' → logprob: -4.392770767211914
    9. ' ajouter' → logprob: -5.142770767211914
    10. ' x' → logprob: -5.142770767211914

Token 329: 'endre' (ID: 9574)
  Prédit: 'endre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endre' → logprob: -0.11969750374555588
    2. 'tre' → logprob: -3.4946975708007812
    3. 'nd' → logprob: -4.494697570800781
    4. 'i' → logprob: -4.619697570800781
    5. 'x' → logprob: -4.994697570800781
    6. 'end' → logprob: -5.244697570800781
    7. 'ancer' → logprob: -5.619697570800781
    8. 'indre' → logprob: -5.744697570800781
    9. 'acher' → logprob: -5.994697570800781
    10. 'trer' → logprob: -5.994697570800781

Token 330: ' la' (ID: 557)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4317862093448639
    2. ' x' → logprob: -1.1817861795425415
    3. 'x' → logprob: -3.681786298751831
    4. '   ' → logprob: -5.181786060333252
    5. 'i' → logprob: -5.431786060333252
    6. ' (' → logprob: -5.556786060333252
    7. ' ' → logprob: -6.806786060333252
    8. ' j' → logprob: -7.056786060333252
    9. ' result' → logprob: -7.306786060333252
    10. ' a' → logprob: -8.18178653717041

Token 331: ' fenêtre' (ID: 109648)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8329225778579712
    2. ' i' → logprob: -0.9579225778579712
    3. ' j' → logprob: -2.8329224586486816
    4. 'j' → logprob: -2.8329224586486816
    5. 'x' → logprob: -3.5829224586486816
    6. 's' → logprob: -4.457922458648682
    7. ' x' → logprob: -4.582922458648682
    8. 'sub' → logprob: -5.582922458648682
    9. ' somme' → logprob: -5.832922458648682
    10. '   ' → logprob: -6.332922458648682

Token 332: ' vers' (ID: 3640)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0149917602539062
    2. ' if' → logprob: -1.0149917602539062
    3. '    ' → logprob: -1.8899917602539062
    4. ' ' → logprob: -2.5149917602539062
    5. ' while' → logprob: -4.139991760253906
    6. ' and' → logprob: -5.264991760253906
    7. '  ' → logprob: -5.764991760253906
    8. 'if' → logprob: -5.764991760253906
    9. ':' → logprob: -6.264991760253906
    10. '<|end|>' → logprob: -6.389991760253906

Token 333: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.14047551155090332
    2. 'l' → logprob: -3.1404755115509033
    3. ' la' → logprob: -3.2654755115509033
    4. 'j' → logprob: -3.5154755115509033
    5. '   ' → logprob: -4.890475273132324
    6. 'dro' → logprob: -5.515475273132324
    7. 'the' → logprob: -6.140475273132324
    8. 'le' → logprob: -6.390475273132324
    9. 'x' → logprob: -6.890475273132324
    10. ' ' → logprob: -7.390475273132324

Token 334: ' droite' (ID: 61428)
  Prédit: ' droite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' droite' → logprob: -0.9848462343215942
    2. 'j' → logprob: -1.2348462343215942
    3. 'right' → logprob: -1.9848462343215942
    4. '   ' → logprob: -2.1098461151123047
    5. 'x' → logprob: -3.7348461151123047
    6. ' right' → logprob: -4.234846115112305
    7. 'dro' → logprob: -4.484846115112305
    8. ' j' → logprob: -4.609846115112305
    9. ' ' → logprob: -4.734846115112305
    10. '  ' → logprob: -6.609846115112305

Token 335: ' autant' (ID: 46683)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12813077867031097
    2. '       ' → logprob: -2.5031306743621826
    3. ' while' → logprob: -3.8781306743621826
    4. '    ' → logprob: -4.753130912780762
    5. ' if' → logprob: -6.253130912780762
    6. ':' → logprob: -6.503130912780762
    7. ' :' → logprob: -6.878130912780762
    8. 'while' → logprob: -7.128130912780762
    9. '	while' → logprob: -7.253130912780762
    10. '        
' → logprob: -7.878130912780762

Token 336: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.13640400767326355
    2. '   ' → logprob: -2.386404037475586
    3. '    ' → logprob: -4.136404037475586
    4. 'que' → logprob: -4.386404037475586
    5. '       ' → logprob: -6.011404037475586
    6. ' qu' → logprob: -6.636404037475586
    7. 'qu' → logprob: -7.011404037475586
    8. '  ' → logprob: -7.011404037475586
    9. '        ' → logprob: -7.636404037475586
    10. '           ' → logprob: -8.386404037475586

Token 337: ' possible' (ID: 4149)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.6849760413169861
    2. 'x' → logprob: -1.1849761009216309
    3. ' j' → logprob: -2.059976100921631
    4. 'j' → logprob: -3.559976100921631
    5. ' i' → logprob: -4.059976100921631
    6. ' a' → logprob: -5.184976100921631
    7. 'a' → logprob: -5.184976100921631
    8. 'i' → logprob: -5.684976100921631
    9. '   ' → logprob: -7.434976100921631
    10. ' (' → logprob: -7.684976100921631

Token 338: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08886454254388809
    2. ' and' → logprob: -2.83886456489563
    3. '       ' → logprob: -4.588864326477051
    4. ' while' → logprob: -4.588864326477051
    5. '    ' → logprob: -5.463864326477051
    6. ' if' → logprob: -7.213864326477051
    7. 'and' → logprob: -8.46386432647705
    8. ':' → logprob: -9.08886432647705
    9. 'while' → logprob: -9.21386432647705
    10. ' (' → logprob: -9.21386432647705

Token 339: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04874474182724953
    2. ' while' → logprob: -3.7987446784973145
    3. '    ' → logprob: -4.0487446784973145
    4. '       ' → logprob: -6.0487446784973145
    5. ' if' → logprob: -7.0487446784973145
    6. ' ' → logprob: -7.2987446784973145
    7. ' and' → logprob: -7.4237446784973145
    8. ' 
' → logprob: -7.7987446784973145
    9. '     
' → logprob: -7.9237446784973145
    10. ':' → logprob: -8.048745155334473

Token 340: ' #' (ID: 1069)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.12916144728660583
    2. ' if' → logprob: -2.7541613578796387
    3. '   ' → logprob: -3.8791613578796387
    4. 'while' → logprob: -3.8791613578796387
    5. '    ' → logprob: -4.379161357879639
    6. 'if' → logprob: -6.004161357879639
    7. ' ' → logprob: -7.754161357879639
    8. '	while' → logprob: -8.004161834716797
    9. ' (' → logprob: -9.504161834716797
    10. '     
' → logprob: -9.504161834716797

Token 341: ' La' (ID: 3038)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.05739755555987358
    2. 'while' → logprob: -2.9323976039886475
    3. '   ' → logprob: -6.057397365570068
    4. '	while' → logprob: -9.307397842407227
    5. '    ' → logprob: -9.932397842407227
    6. ' ' → logprob: -11.432397842407227
    7. ' if' → logprob: -11.557397842407227
    8. '   ' → logprob: -12.057397842407227
    9. 'if' → logprob: -13.307397842407227
    10. ' ' → logprob: -13.807397842407227

Token 342: ' condition' (ID: 7060)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.18136832118034363
    2. 'x' → logprob: -1.931368350982666
    3. ' j' → logprob: -4.431368350982666
    4. ' i' → logprob: -5.681368350982666
    5. 'j' → logprob: -6.181368350982666
    6. ' a' → logprob: -6.556368350982666
    7. 'i' → logprob: -7.306368350982666
    8. 'a' → logprob: -7.306368350982666
    9. ' ' → logprob: -8.431367874145508
    10. ' while' → logprob: -8.931367874145508

Token 343: ' '' (ID: 461)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.12506020069122314
    2. 'x' → logprob: -3.0000600814819336
    3. ' i' → logprob: -3.3750600814819336
    4. ' j' → logprob: -4.125060081481934
    5. '   ' → logprob: -4.750060081481934
    6. ' and' → logprob: -5.875060081481934
    7. 'i' → logprob: -6.500060081481934
    8. ' while' → logprob: -6.750060081481934
    9. ' ' → logprob: -6.875060081481934
    10. 'j' → logprob: -7.250060081481934

Token 344: 'x' (ID: 87)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7273639440536499
    2. 'x' → logprob: -0.7273639440536499
    3. 'j' → logprob: -4.2273640632629395
    4. ' i' → logprob: -4.6023640632629395
    5. ' x' → logprob: -4.8523640632629395
    6. '   ' → logprob: -8.102363586425781
    7. ' j' → logprob: -8.102363586425781
    8. 'result' → logprob: -8.602363586425781
    9. '(i' → logprob: -8.727363586425781
    10. '(x' → logprob: -9.602363586425781

Token 345: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3133320212364197
    2. ' <=' → logprob: -1.8133320808410645
    3. '<=' → logprob: -2.9383320808410645
    4. '<' → logprob: -3.0633320808410645
    5. '<n' → logprob: -5.4383320808410645
    6. ' -' → logprob: -7.0633320808410645
    7. '<len' → logprob: -8.063331604003906
    8. ' +' → logprob: -8.313331604003906
    9. '+' → logprob: -9.063331604003906
    10. ' ' → logprob: -9.688331604003906

Token 346: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.14269055426120758
    2. ' n' → logprob: -2.017690658569336
    3. ' ' → logprob: -11.517690658569336
    4. '   ' → logprob: -13.642690658569336
    5. '	n' → logprob: -13.767690658569336
    6. 'len' → logprob: -14.017690658569336
    7. '  ' → logprob: -14.642690658569336
    8. ')' → logprob: -14.767690658569336
    9. ')n' → logprob: -14.892690658569336
    10. ' len' → logprob: -15.142690658569336

Token 347: ''' (ID: 6)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.22572781145572662
    2. 'and' → logprob: -1.6007277965545654
    3. ')' → logprob: -8.725728034973145
    4. '   ' → logprob: -9.475728034973145
    5. ''' → logprob: -9.850728034973145
    6. ' ' → logprob: -12.100728034973145
    7. '    ' → logprob: -12.475728034973145
    8. 'et' → logprob: -12.725728034973145
    9. ' )' → logprob: -12.975728034973145
    10. ' et' → logprob: -13.225728034973145

Token 348: ' garantit' (ID: 182078)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.012514598667621613
    2. 'and' → logprob: -4.387514591217041
    3. ' ' → logprob: -13.3875150680542
    4. '    ' → logprob: -13.7625150680542
    5. '   ' → logprob: -13.7625150680542
    6. ' et' → logprob: -14.2625150680542
    7. 'et' → logprob: -15.6375150680542
    8. ' an' → logprob: -16.012514114379883
    9. ' и' → logprob: -16.512514114379883
    10. '	and' → logprob: -16.512514114379883

Token 349: ' que' (ID: 661)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.09088660031557083
    2. 'and' → logprob: -2.9658865928649902
    3. ' ' → logprob: -3.4658865928649902
    4. '   ' → logprob: -6.59088659286499
    5. ' et' → logprob: -6.84088659286499
    6. ' a' → logprob: -7.34088659286499
    7. 'et' → logprob: -8.215887069702148
    8. ' that' → logprob: -8.340887069702148
    9. ' que' → logprob: -8.840887069702148
    10. '  ' → logprob: -9.090887069702148

Token 350: ' l' (ID: 305)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.09373902529478073
    2. 'x' → logprob: -2.4687390327453613
    3. ' n' → logprob: -5.718739032745361
    4. ' ' → logprob: -7.718739032745361
    5. ' and' → logprob: -7.843739032745361
    6. 'n' → logprob: -8.093738555908203
    7. ' a' → logprob: -8.718738555908203
    8. 'a' → logprob: -10.343738555908203
    9. ' len' → logprob: -10.343738555908203
    10. 'and' → logprob: -10.593738555908203

Token 351: ''ind' (ID: 82245)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.07964370399713516
    2. ' x' → logprob: -3.704643726348877
    3. 'x' → logprob: -3.954643726348877
    4. 'a' → logprob: -4.204643726348877
    5. ' a' → logprob: -5.454643726348877
    6. '<' → logprob: -5.579643726348877
    7. ' ' → logprob: -6.079643726348877
    8. 'e' → logprob: -6.329643726348877
    9. '   ' → logprob: -6.454643726348877
    10. ' and' → logprob: -6.954643726348877

Token 352: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.2826714515686035
    2. 'ice' → logprob: -1.4076714515686035
    3. 'ices' → logprob: -7.0326714515686035
    4. 'exe' → logprob: -8.657670974731445
    5. 'i' → logprob: -8.782670974731445
    6. 'e' → logprob: -9.032670974731445
    7. '   ' → logprob: -9.782670974731445
    8. 'x' → logprob: -11.532670974731445
    9. 'ité' → logprob: -11.782670974731445
    10. 'ixe' → logprob: -11.907670974731445

Token 353: ' x' (ID: 1215)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1874646246433258
    2. ' +' → logprob: -2.562464714050293
    3. '+' → logprob: -3.062464714050293
    4. ' <=' → logprob: -3.312464714050293
    5. '<' → logprob: -5.687464714050293
    6. 'a' → logprob: -6.062464714050293
    7. ' ' → logprob: -6.312464714050293
    8. '<=' → logprob: -6.437464714050293
    9. 'x' → logprob: -7.687464714050293
    10. '<x' → logprob: -8.562464714050293

Token 354: ' ne' (ID: 453)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.06641709804534912
    2. '<' → logprob: -3.1914172172546387
    3. '+' → logprob: -4.441417217254639
    4. ' +' → logprob: -5.316417217254639
    5. ' <=' → logprob: -5.441417217254639
    6. '<=' → logprob: -6.941417217254639
    7. '<n' → logprob: -7.441417217254639
    8. '<len' → logprob: -8.06641674041748
    9. ' ' → logprob: -9.44141674041748
    10. '   ' → logprob: -9.69141674041748

Token 355: ' dépasse' (ID: 165701)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.15875573456287384
    2. '<' → logprob: -2.5337557792663574
    3. '<=' → logprob: -3.6587557792663574
    4. ' <=' → logprob: -4.283755779266357
    5. '<n' → logprob: -4.283755779266357
    6. '<len' → logprob: -5.408755779266357
    7. '<|end|>' → logprob: -5.533755779266357
    8. ')' → logprob: -6.533755779266357
    9. ' ' → logprob: -6.908755779266357
    10. ' n' → logprob: -7.658755779266357

Token 356: ' pas' (ID: 2173)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3184919059276581
    2. 'n' → logprob: -1.3184919357299805
    3. ' la' → logprob: -5.4434919357299805
    4. '   ' → logprob: -7.8184919357299805
    5. ' ' → logprob: -9.06849193572998
    6. 'la' → logprob: -9.56849193572998
    7. '  ' → logprob: -10.06849193572998
    8. ' len' → logprob: -10.06849193572998
    9. 'len' → logprob: -10.56849193572998
    10. ' le' → logprob: -10.81849193572998

Token 357: ' le' (ID: 505)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.1539490818977356
    2. 'n' → logprob: -2.028949022293091
    3. ' la' → logprob: -4.77894926071167
    4. ' ' → logprob: -6.90394926071167
    5. '   ' → logprob: -7.02894926071167
    6. ' the' → logprob: -8.653948783874512
    7. '	n' → logprob: -8.653948783874512
    8. '(n' → logprob: -9.653948783874512
    9. ' le' → logprob: -9.653948783874512
    10. '  ' → logprob: -9.778948783874512

Token 358: ' dernier' (ID: 27982)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05979124829173088
    2. ' n' → logprob: -3.309791326522827
    3. 'len' → logprob: -3.934791326522827
    4. ' len' → logprob: -7.684791088104248
    5. 'length' → logprob: -7.684791088104248
    6. 'tail' → logprob: -7.809791088104248
    7. 'nombre' → logprob: -8.184791564941406
    8. ' ' → logprob: -9.434791564941406
    9. 'long' → logprob: -9.809791564941406
    10. ' taille' → logprob: -9.934791564941406

Token 359: ' élément' (ID: 99627)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0778990983963013
    2. ' and' → logprob: -1.7028990983963013
    3. '   ' → logprob: -1.7028990983963013
    4. ' élément' → logprob: -2.8278989791870117
    5. ')' → logprob: -3.2028989791870117
    6. ' )' → logprob: -3.3278989791870117
    7. ' index' → logprob: -3.4528989791870117
    8. '  ' → logprob: -3.7028989791870117
    9. 'élé' → logprob: -3.9528989791870117
    10. 'indice' → logprob: -4.452898979187012

Token 360: ' du' (ID: 1462)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10306379944086075
    2. '   ' → logprob: -2.8530638217926025
    3. 'and' → logprob: -3.3530638217926025
    4. ' et' → logprob: -5.603063583374023
    5. 'et' → logprob: -6.728063583374023
    6. '    ' → logprob: -8.228063583374023
    7. ' ' → logprob: -10.103063583374023
    8. 'a' → logprob: -10.353063583374023
    9. '  ' → logprob: -10.853063583374023
    10. ' a' → logprob: -11.353063583374023

Token 361: ' tableau' (ID: 67053)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08921612054109573
    2. ' a' → logprob: -2.4642162322998047
    3. 'n' → logprob: -9.089216232299805
    4. ' ' → logprob: -9.839216232299805
    5. ' array' → logprob: -10.214216232299805
    6. ' tableau' → logprob: -10.339216232299805
    7. 'array' → logprob: -11.089216232299805
    8. ' n' → logprob: -11.714216232299805
    9. '   ' → logprob: -12.089216232299805
    10. ' list' → logprob: -13.089216232299805

Token 362: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.05432501435279846
    2. 'and' → logprob: -3.1793251037597656
    3. '   ' → logprob: -4.554325103759766
    4. '    ' → logprob: -8.179325103759766
    5. ' et' → logprob: -8.304325103759766
    6. 'et' → logprob: -9.554325103759766
    7. ' ' → logprob: -9.679325103759766
    8. ' while' → logprob: -10.679325103759766
    9. 'a' → logprob: -11.179325103759766
    10. '  ' → logprob: -11.429325103759766

Token 363: '   ' (ID: 271)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.39240482449531555
    2. '   ' → logprob: -1.5174047946929932
    3. 'and' → logprob: -2.267404794692993
    4. '    ' → logprob: -7.642405033111572
    5. ' while' → logprob: -7.642405033111572
    6. 'while' → logprob: -8.017404556274414
    7. ' ' → logprob: -9.017404556274414
    8. '  ' → logprob: -9.517404556274414
    9. 'a' → logprob: -9.517404556274414
    10. ' et' → logprob: -10.017404556274414

Token 364: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49545818567276
    2. ' while' → logprob: -1.2454581260681152
    3. 'while' → logprob: -2.3704581260681152
    4. ' and' → logprob: -4.995458126068115
    5. 'and' → logprob: -6.745458126068115
    6. '    ' → logprob: -7.245458126068115
    7. '  ' → logprob: -8.370458602905273
    8. ' ' → logprob: -8.370458602905273
    9. '	while' → logprob: -9.495458602905273
    10. ' ' → logprob: -9.620458602905273

Token 365: ' '' (ID: 461)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.48486295342445374
    2. 'and' → logprob: -1.8598629236221313
    3. ' i' → logprob: -2.984863042831421
    4. '   ' → logprob: -3.234863042831421
    5. ' a' → logprob: -3.484863042831421
    6. 'a' → logprob: -3.484863042831421
    7. ' while' → logprob: -3.734863042831421
    8. 'i' → logprob: -3.859863042831421
    9. 'while' → logprob: -3.984863042831421
    10. ' x' → logprob: -5.234862804412842

Token 366: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05551028624176979
    2. ' i' → logprob: -3.6805102825164795
    3. 'a' → logprob: -3.8055102825164795
    4. 'result' → logprob: -5.430510520935059
    5. 'x' → logprob: -7.055510520935059
    6. ' a' → logprob: -7.805510520935059
    7. '   ' → logprob: -8.055510520935059
    8. 'j' → logprob: -8.680510520935059
    9. ' ' → logprob: -9.555510520935059
    10. 'n' → logprob: -9.805510520935059

Token 367: ' &' (ID: 827)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.062069304287433624
    2. '+' → logprob: -2.8120694160461426
    3. '+a' → logprob: -9.812068939208984
    4. ' <' → logprob: -11.062068939208984
    5. ' <=' → logprob: -12.062068939208984
    6. ' ' → logprob: -12.562068939208984
    7. ' +=' → logprob: -12.937068939208984
    8. ' plus' → logprob: -12.937068939208984
    9. ' +
' → logprob: -12.937068939208984
    10. 'a' → logprob: -12.937068939208984

Token 368: ' a' (ID: 261)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7755195498466492
    2. ' a' → logprob: -1.775519609451294
    3. '&' → logprob: -2.025519609451294
    4. 'a' → logprob: -2.150519609451294
    5. '+a' → logprob: -3.650519609451294
    6. ' ' → logprob: -4.150519371032715
    7. ' +' → logprob: -4.400519371032715
    8. 'amp' → logprob: -4.525519371032715
    9. '+x' → logprob: -4.900519371032715
    10. ' x' → logprob: -5.025519371032715

Token 369: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.002888802206143737
    2. '[' → logprob: -5.8778886795043945
    3. ' [' → logprob: -10.252888679504395
    4. 'x' → logprob: -11.002888679504395
    5. ' x' → logprob: -11.002888679504395
    6. '[j' → logprob: -12.752888679504395
    7. ' ' → logprob: -12.877888679504395
    8. '```' → logprob: -13.127888679504395
    9. '[i' → logprob: -13.377888679504395
    10. '   ' → logprob: -13.627888679504395

Token 370: ']'' (ID: 75642)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.210478737950325
    2. ')==' → logprob: -2.5854787826538086
    3. ' ==' → logprob: -2.9604787826538086
    4. '==' → logprob: -3.3354787826538086
    5. ''' → logprob: -4.335478782653809
    6. ')'' → logprob: -4.460478782653809
    7. ' )' → logprob: -7.710478782653809
    8. '=='' → logprob: -7.835478782653809
    9. ':' → logprob: -8.335478782653809
    10. '[' → logprob: -8.460478782653809

Token 371: ' effect' (ID: 3159)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4174615442752838
    2. '==' → logprob: -1.1674615144729614
    3. ' !=' → logprob: -3.917461633682251
    4. '!=' → logprob: -4.667461395263672
    5. ':' → logprob: -8.292461395263672
    6. '>' → logprob: -8.917461395263672
    7. ')==' → logprob: -9.417461395263672
    8. ')' → logprob: -9.667461395263672
    9. '[' → logprob: -9.667461395263672
    10. '   ' → logprob: -9.792461395263672

Token 372: 'ue' (ID: 466)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3392215669155121
    2. '&' → logprob: -1.3392215967178345
    3. '>' → logprob: -4.839221477508545
    4. '==' → logprob: -5.964221477508545
    5. 'nbsp' → logprob: -6.214221477508545
    6. '1' → logprob: -6.589221477508545
    7. '#' → logprob: -6.839221477508545
    8. '+' → logprob: -6.964221477508545
    9. ' i' → logprob: -7.089221477508545
    10. '  ' → logprob: -7.214221477508545

Token 373: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4655276834964752
    2. ' (' → logprob: -1.5905276536941528
    3. ' &' → logprob: -2.8405277729034424
    4. '<|end|>' → logprob: -3.5905277729034424
    5. ' not' → logprob: -4.215527534484863
    6. ' a' → logprob: -4.215527534484863
    7. '&' → logprob: -4.465527534484863
    8. ')' → logprob: -4.840527534484863
    9. '  ' → logprob: -5.340527534484863
    10. ' )' → logprob: -5.715527534484863

Token 374: ' '' (ID: 461)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -0.11359279602766037
    2. ' bit' → logprob: -2.6135928630828857
    3. ' &' → logprob: -3.4885928630828857
    4. 'bit' → logprob: -6.613592624664307
    5. '&nbsp' → logprob: -7.613592624664307
    6. 'and' → logprob: -7.738592624664307
    7. '&amp' → logprob: -7.863592624664307
    8. ' ' → logprob: -8.488593101501465
    9. '=' → logprob: -8.988593101501465
    10. '>' → logprob: -9.238593101501465

Token 375: 'ET' (ID: 2175)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -0.07377403974533081
    2. ' &' → logprob: -2.9487740993499756
    3. ' bit' → logprob: -4.3237738609313965
    4. '&amp' → logprob: -6.5737738609313965
    5. 'and' → logprob: -6.9487738609313965
    6. '&nbsp' → logprob: -7.3237738609313965
    7. 'bit' → logprob: -7.3237738609313965
    8. ' ' → logprob: -7.3237738609313965
    9. ' and' → logprob: -8.823774337768555
    10. '=' → logprob: -9.073774337768555

Token 376: ''' (ID: 6)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9143437743186951
    2. ' bit' → logprob: -1.0393438339233398
    3. '&' → logprob: -2.41434383392334
    4. '<|end|>' → logprob: -2.91434383392334
    5. '&nbsp' → logprob: -3.28934383392334
    6. ' logique' → logprob: -4.28934383392334
    7. '  ' → logprob: -4.41434383392334
    8. ' ' → logprob: -4.53934383392334
    9. ' &' → logprob: -5.28934383392334
    10. '   ' → logprob: -5.41434383392334

Token 377: ' b' (ID: 287)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 378: 'inaire' (ID: 41465)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -0.14889690279960632
    2. ' ' → logprob: -2.8988969326019287
    3. ' &' → logprob: -3.2738969326019287
    4. '  ' → logprob: -4.14889669418335
    5. '=' → logprob: -4.14889669418335
    6. '   ' → logprob: -5.39889669418335
    7. '&nbsp' → logprob: -5.52389669418335
    8. 'i' → logprob: -6.77389669418335
    9. '    ' → logprob: -7.39889669418335
    10. ''' → logprob: -7.52389669418335

Token 379: ' entre' (ID: 3853)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.24351990222930908
    2. '==' → logprob: -2.2435197830200195
    3. ' !=' → logprob: -3.2435197830200195
    4. '   ' → logprob: -3.9935197830200195
    5. '=' → logprob: -4.1185197830200195
    6. ' ' → logprob: -4.8685197830200195
    7. ')' → logprob: -4.9935197830200195
    8. '!=' → logprob: -5.4935197830200195
    9. '_' → logprob: -5.9935197830200195
    10. '&' → logprob: -6.1185197830200195

Token 380: ' l' (ID: 305)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4009789228439331
    2. 'i' → logprob: -1.150978922843933
    3. ' ' → logprob: -4.400979042053223
    4. '  ' → logprob: -7.275979042053223
    5. ' (' → logprob: -8.275979042053223
    6. '(i' → logprob: -8.400979042053223
    7. ' ' → logprob: -9.400979042053223
    8. ')' → logprob: -9.525979042053223
    9. '(' → logprob: -9.650979042053223
    10. '```' → logprob: -10.150979042053223

Token 381: ''acc' (ID: 46331)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08150196075439453
    2. '&' → logprob: -3.3315019607543945
    3. ''' → logprob: -4.7065019607543945
    4. 'a' → logprob: -4.9565019607543945
    5. ' i' → logprob: -4.9565019607543945
    6. 'x' → logprob: -5.0815019607543945
    7. ' &' → logprob: -5.0815019607543945
    8. 'space' → logprob: -6.2065019607543945
    9. ' ' → logprob: -6.9565019607543945
    10. '  ' → logprob: -7.8315019607543945

Token 382: 'umulate' (ID: 134636)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -0.4429997503757477
    2. 'i' → logprob: -1.0679997205734253
    3. '   ' → logprob: -5.942999839782715
    4. ' &' → logprob: -5.942999839782715
    5. ')' → logprob: -6.192999839782715
    6. '=' → logprob: -6.817999839782715
    7. 'and' → logprob: -6.942999839782715
    8. 'x' → logprob: -7.442999839782715
    9. ' i' → logprob: -7.442999839782715
    10. '       ' → logprob: -7.567999839782715

Token 383: 'ur' (ID: 330)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8051748871803284
    2. '   ' → logprob: -1.9301748275756836
    3. ' ' → logprob: -2.1801748275756836
    4. '&' → logprob: -2.5551748275756836
    5. '  ' → logprob: -2.5551748275756836
    6. '=' → logprob: -2.6801748275756836
    7. ' i' → logprob: -3.4301748275756836
    8. '    ' → logprob: -4.555174827575684
    9. ')' → logprob: -4.680174827575684
    10. ' &' → logprob: -5.180174827575684

Token 384: ' courant' (ID: 74694)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6717767119407654
    2. ' &' → logprob: -1.1717767715454102
    3. ' and' → logprob: -2.79677677154541
    4. '    ' → logprob: -4.04677677154541
    5. '&' → logprob: -4.42177677154541
    6. 'and' → logprob: -4.42177677154541
    7. ' ' → logprob: -4.42177677154541
    8. 'i' → logprob: -4.54677677154541
    9. ')' → logprob: -4.67177677154541
    10. ' et' → logprob: -4.79677677154541

Token 385: ' '' (ID: 461)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.8356180191040039
    2. '   ' → logprob: -0.9606180191040039
    3. 'and' → logprob: -2.835618019104004
    4. ')' → logprob: -2.960618019104004
    5. ' &' → logprob: -3.585618019104004
    6. ' ==' → logprob: -4.460618019104004
    7. '&' → logprob: -4.835618019104004
    8. ' !=' → logprob: -5.335618019104004
    9. ' ' → logprob: -5.585618019104004
    10. '    ' → logprob: -5.960618019104004

Token 386: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04342217743396759
    2. ' i' → logprob: -3.293422222137451
    3. ')' → logprob: -6.043422222137451
    4. '&' → logprob: -6.668422222137451
    5. ' ' → logprob: -6.918422222137451
    6. ' &' → logprob: -8.668421745300293
    7. ' )' → logprob: -8.918421745300293
    8. 'a' → logprob: -9.168421745300293
    9. ' and' → logprob: -9.918421745300293
    10. '&i' → logprob: -10.168421745300293

Token 387: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1122807264328003
    2. ' and' → logprob: -1.4872807264328003
    3. ' &' → logprob: -1.9872807264328003
    4. '   ' → logprob: -2.23728084564209
    5. ' et' → logprob: -2.36228084564209
    6. 'and' → logprob: -3.11228084564209
    7. '&' → logprob: -3.61228084564209
    8. ' ' → logprob: -4.23728084564209
    9. ' )' → logprob: -4.61228084564209
    10. 'et' → logprob: -5.86228084564209

Token 388: ' et' (ID: 859)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7163242697715759
    2. '&' → logprob: -1.7163243293762207
    3. 'and' → logprob: -1.8413243293762207
    4. ' &' → logprob: -1.9663243293762207
    5. '   ' → logprob: -4.466324329376221
    6. ' ==' → logprob: -4.716324329376221
    7. ')' → logprob: -5.341324329376221
    8. '==' → logprob: -5.966324329376221
    9. ' !=' → logprob: -6.341324329376221
    10. ' ' → logprob: -7.341324329376221

Token 389: ' le' (ID: 505)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.25914525985717773
    2. 'a' → logprob: -1.5091452598571777
    3. ' ' → logprob: -5.259145259857178
    4. ' ~' → logprob: -6.634145259857178
    5. '~' → logprob: -8.509145736694336
    6. '  ' → logprob: -9.259145736694336
    7. ' ' → logprob: -9.384145736694336
    8. ' (' → logprob: -9.509145736694336
    9. '   ' → logprob: -9.509145736694336
    10. ' (~' → logprob: -10.134145736694336

Token 390: ' prochain' (ID: 52413)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.160814106464386
    2. ' a' → logprob: -1.9108140468597412
    3. ' ' → logprob: -7.66081428527832
    4. '   ' → logprob: -10.16081428527832
    5. '  ' → logprob: -10.53581428527832
    6. ' ' → logprob: -11.41081428527832
    7. '    ' → logprob: -11.78581428527832
    8. 'x' → logprob: -12.28581428527832
    9. '`' → logprob: -12.66081428527832
    10. '     ' → logprob: -12.78581428527832

Token 391: ' élément' (ID: 99627)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8956315517425537
    2. ' &' → logprob: -1.5206315517425537
    3. ' ' → logprob: -1.8956315517425537
    4. ' a' → logprob: -1.8956315517425537
    5. '   ' → logprob: -3.8956315517425537
    6. ' )' → logprob: -4.145631790161133
    7. '&' → logprob: -4.520631790161133
    8. ')' → logprob: -5.020631790161133
    9. '[a' → logprob: -5.270631790161133
    10. '  ' → logprob: -5.770631790161133

Token 392: ' '' (ID: 461)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3723103404045105
    2. '[x' → logprob: -1.7473104000091553
    3. '   ' → logprob: -2.2473104000091553
    4. ' !=' → logprob: -4.497310161590576
    5. ' ==' → logprob: -5.122310161590576
    6. ' )' → logprob: -5.747310161590576
    7. '[i' → logprob: -6.747310161590576
    8. '       ' → logprob: -7.122310161590576
    9. '==' → logprob: -7.122310161590576
    10. '!=' → logprob: -7.372310161590576

Token 393: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.005529831163585186
    2. ' a' → logprob: -5.505529880523682
    3. '[x' → logprob: -6.880529880523682
    4. 'x' → logprob: -8.130529403686523
    5. '[a' → logprob: -9.880529403686523
    6. ')' → logprob: -10.505529403686523
    7. ' )' → logprob: -11.630529403686523
    8. ' ' → logprob: -11.755529403686523
    9. ' x' → logprob: -12.005529403686523
    10. '   ' → logprob: -12.005529403686523

Token 394: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0005448113661259413
    2. '[' → logprob: -7.625545024871826
    3. 'x' → logprob: -11.125544548034668
    4. ' [' → logprob: -11.250544548034668
    5. '[a' → logprob: -12.000544548034668
    6. '[
' → logprob: -12.125544548034668
    7. ' ' → logprob: -12.875544548034668
    8. '
' → logprob: -12.875544548034668
    9. '   ' → logprob: -12.875544548034668
    10. ']' → logprob: -13.125544548034668

Token 395: ']'
' (ID: 157073)
  Prédit: ')''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')'' → logprob: -0.3701991140842438
    2. ']'' → logprob: -1.3701990842819214
    3. ')' → logprob: -3.870199203491211
    4. '[x' → logprob: -4.620199203491211
    5. ' )' → logprob: -5.245199203491211
    6. '])' → logprob: -5.370199203491211
    7. ')]' → logprob: -5.370199203491211
    8. ''' → logprob: -5.620199203491211
    9. ']' → logprob: -5.745199203491211
    10. ' ]' → logprob: -6.995199203491211

Token 396: '   ' (ID: 271)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1370195597410202
    2. '==' → logprob: -2.137019634246826
    3. ' and' → logprob: -5.512019634246826
    4. '   ' → logprob: -6.012019634246826
    5. ' !=' → logprob: -6.137019634246826
    6. '=' → logprob: -7.762019634246826
    7. '!=' → logprob: -8.012019157409668
    8. 'and' → logprob: -8.012019157409668
    9. ' =' → logprob: -9.887019157409668
    10. ' |' → logprob: -10.012019157409668

Token 397: ' #' (ID: 1069)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6309676766395569
    2. ' and' → logprob: -1.255967617034912
    3. ' !=' → logprob: -2.255967617034912
    4. '==' → logprob: -3.380967617034912
    5. 'and' → logprob: -3.880967617034912
    6. '   ' → logprob: -4.505967617034912
    7. '!=' → logprob: -4.755967617034912
    8. '>' → logprob: -6.755967617034912
    9. ' >' → logprob: -6.755967617034912
    10. ' &' → logprob: -7.880967617034912

Token 398: ' Si' (ID: 7832)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03382342681288719
    2. '==' → logprob: -3.4088234901428223
    3. '=' → logprob: -9.908823013305664
    4. ' !=' → logprob: -10.033823013305664
    5. ' =' → logprob: -10.783823013305664
    6. ' and' → logprob: -11.033823013305664
    7. ' ' → logprob: -11.033823013305664
    8. '   ' → logprob: -11.783823013305664
    9. ')' → logprob: -12.533823013305664
    10. '!=' → logprob: -12.658823013305664

Token 399: ' '' (ID: 461)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.11583369225263596
    2. '(i' → logprob: -2.7408337593078613
    3. '(' → logprob: -3.8658337593078613
    4. ' not' → logprob: -4.240833759307861
    5. ' i' → logprob: -4.865833759307861
    6. 'i' → logprob: -7.115833759307861
    7. 'not' → logprob: -7.740833759307861
    8. ' ' → logprob: -8.365833282470703
    9. '(not' → logprob: -8.865833282470703
    10. ' ' → logprob: -8.990833282470703

Token 400: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.4344528913497925
    2. ' (' → logprob: -1.0594528913497925
    3. '(' → logprob: -5.559453010559082
    4. 'i' → logprob: -6.684453010559082
    5. ' i' → logprob: -7.934453010559082
    6. ' not' → logprob: -9.809453010559082
    7. 'not' → logprob: -10.059453010559082
    8. ' ' → logprob: -10.434453010559082
    9. '((' → logprob: -10.434453010559082
    10. '(not' → logprob: -10.684453010559082

Token 401: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.010644171386957169
    2. '&' → logprob: -4.88564395904541
    3. ' |' → logprob: -6.26064395904541
    4. ' ' → logprob: -7.51064395904541
    5. '|' → logprob: -8.38564395904541
    6. ' &
' → logprob: -9.01064395904541
    7. '   ' → logprob: -9.26064395904541
    8. ' ' → logprob: -10.51064395904541
    9. ' and' → logprob: -10.63564395904541
    10. ' ==' → logprob: -11.26064395904541

Token 402: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.34851881861686707
    2. 'a' → logprob: -1.2235188484191895
    3. ' ' → logprob: -9.973518371582031
    4. ' ' → logprob: -11.598518371582031
    5. '   ' → logprob: -12.473518371582031
    6. '	a' → logprob: -12.973518371582031
    7. ')' → logprob: -13.473518371582031
    8. '    ' → logprob: -13.723518371582031
    9. ' x' → logprob: -13.848518371582031
    10. '```' → logprob: -13.973518371582031

Token 403: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0396326407790184
    2. 'x' → logprob: -3.539632558822632
    3. '[' → logprob: -5.164632797241211
    4. ' x' → logprob: -6.289632797241211
    5. ' ' → logprob: -6.914632797241211
    6. '   ' → logprob: -7.914632797241211
    7. 'a' → logprob: -9.039632797241211
    8. ')' → logprob: -9.164632797241211
    9. '```' → logprob: -9.164632797241211
    10. ' [' → logprob: -9.414632797241211

Token 404: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006321816239506006
    2. '')' → logprob: -6.256321907043457
    3. ')'' → logprob: -6.756321907043457
    4. ')==' → logprob: -6.881321907043457
    5. ' ==' → logprob: -7.131321907043457
    6. ''' → logprob: -7.256321907043457
    7. ' )' → logprob: -8.006321907043457
    8. ']' → logprob: -8.381321907043457
    9. '）' → logprob: -10.881321907043457
    10. '==' → logprob: -10.881321907043457

Token 405: ' ==' (ID: 951)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7739525437355042
    2. ' ==' → logprob: -0.7739525437355042
    3. '==' → logprob: -2.8989524841308594
    4. ')==' → logprob: -4.398952484130859
    5. ' )' → logprob: -4.648952484130859
    6. ' !=' → logprob: -8.89895248413086
    7. '=' → logprob: -8.89895248413086
    8. ' =' → logprob: -9.27395248413086
    9. ''' → logprob: -9.64895248413086
    10. ' ' → logprob: -9.89895248413086

Token 406: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03364984691143036
    2. ' ' → logprob: -3.4086499214172363
    3. 'a' → logprob: -13.158649444580078
    4. ' ' → logprob: -13.658649444580078
    5. '=' → logprob: -15.533649444580078
    6. 'i' → logprob: -15.721149444580078
    7. '   ' → logprob: -15.908649444580078
    8. ' a' → logprob: -15.971149444580078
    9. '```' → logprob: -16.346149444580078
    10. '  ' → logprob: -16.721149444580078

Token 407: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.113290095934644e-05
    2. ' ' → logprob: -10.125081062316895
    3. 'i' → logprob: -10.500081062316895
    4. 'a' → logprob: -11.375081062316895
    5. '=' → logprob: -15.250081062316895
    6. '```' → logprob: -15.625081062316895
    7. '۰' → logprob: -15.875081062316895
    8. '   ' → logprob: -15.937581062316895
    9. '
' → logprob: -16.18758201599121
    10. '(' → logprob: -16.43758201599121

Token 408: '',' (ID: 787)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18564121425151825
    2. '':' → logprob: -2.310641288757324
    3. ' and' → logprob: -3.185641288757324
    4. '):' → logprob: -4.310641288757324
    5. ''' → logprob: -5.185641288757324
    6. '   ' → logprob: -5.810641288757324
    7. ':'' → logprob: -6.060641288757324
    8. ' :' → logprob: -6.185641288757324
    9. 'and' → logprob: -7.435641288757324
    10. ')' → logprob: -7.685641288757324

Token 409: ' cela' (ID: 17542)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8442384600639343
    2. '    ' → logprob: -1.594238519668579
    3. ' :' → logprob: -1.594238519668579
    4. ':' → logprob: -2.344238519668579
    5. '   ' → logprob: -3.094238519668579
    6. '     
' → logprob: -5.21923828125
    7. '     ' → logprob: -5.59423828125
    8. '  ' → logprob: -5.84423828125
    9. ' and' → logprob: -6.21923828125
    10. '       ' → logprob: -6.21923828125

Token 410: ' veut' (ID: 41653)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6122323870658875
    2. ' and' → logprob: -0.9872323870658875
    3. 'and' → logprob: -3.3622324466705322
    4. ' et' → logprob: -3.8622324466705322
    5. ' :' → logprob: -4.487232208251953
    6. '   ' → logprob: -4.612232208251953
    7. ':
' → logprob: -5.737232208251953
    8. 'et' → logprob: -6.112232208251953
    9. '       ' → logprob: -6.612232208251953
    10. '):' → logprob: -8.487232208251953

Token 411: ' dire' (ID: 4071)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.07257179915904999
    2. '   ' → logprob: -2.9475717544555664
    3. '#' → logprob: -4.947571754455566
    4. 'dire' → logprob: -6.447571754455566
    5. '       ' → logprob: -6.822571754455566
    6. ' dire' → logprob: -6.947571754455566
    7. ' bien' → logprob: -6.947571754455566
    8. ' ' → logprob: -7.072571754455566
    9. ':' → logprob: -7.197571754455566
    10. 'que' → logprob: -7.447571754455566

Token 412: ' qu' (ID: 474)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24644722044467926
    2. '    ' → logprob: -2.6214473247528076
    3. '   ' → logprob: -2.8714473247528076
    4. ' que' → logprob: -3.1214473247528076
    5. ' that' → logprob: -3.6214473247528076
    6. '  ' → logprob: -4.9964470863342285
    7. ',' → logprob: -6.1214470863342285
    8. ' a' → logprob: -6.1214470863342285
    9. ' qu' → logprob: -6.7464470863342285
    10. ' ' → logprob: -6.9964470863342285

Token 413: ''' (ID: 6)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5809175968170166
    2. ' a' → logprob: -1.8309175968170166
    3. '   ' → logprob: -3.3309175968170166
    4. ' (' → logprob: -3.4559175968170166
    5. ' i' → logprob: -3.4559175968170166
    6. ' the' → logprob: -3.5809175968170166
    7. ' que' → logprob: -3.7059175968170166
    8. ' there' → logprob: -4.2059173583984375
    9. 'a' → logprob: -4.3309173583984375
    10. ' l' → logprob: -4.3309173583984375

Token 414: 'auc' (ID: 11816)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5012555718421936
    2. '(' → logprob: -1.6262555122375488
    3. '(i' → logprob: -1.6262555122375488
    4. '(x' → logprob: -8.626255989074707
    5. '(a' → logprob: -8.751255989074707
    6. 'a' → logprob: -9.126255989074707
    7. ' i' → logprob: -9.376255989074707
    8. '(n' → logprob: -9.501255989074707
    9. ' ' → logprob: -10.126255989074707
    10. 'x' → logprob: -10.251255989074707

Token 415: 'un' (ID: 373)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32528984546661377
    2. ' que' → logprob: -3.075289726257324
    3. ' i' → logprob: -3.200289726257324
    4. ' ' → logprob: -3.450289726257324
    5. '       ' → logprob: -3.825289726257324
    6. 'x' → logprob: -3.825289726257324
    7. 'i' → logprob: -4.075289726257324
    8. '(i' → logprob: -4.450289726257324
    9. '      ' → logprob: -4.575289726257324
    10. 'e' → logprob: -4.575289726257324

Token 416: ' bit' (ID: 3546)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9260971546173096
    2. ' bit' → logprob: -1.0510971546173096
    3. ' espace' → logprob: -2.0510971546173096
    4. ' bits' → logprob: -2.9260971546173096
    5. '1' → logprob: -3.9260971546173096
    6. ' &' → logprob: -4.1760969161987305
    7. 'bit' → logprob: -5.0510969161987305
    8. '&' → logprob: -5.3010969161987305
    9. ' espaces' → logprob: -5.3010969161987305
    10. ' ' → logprob: -5.3010969161987305

Token 417: ' à' (ID: 1221)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.552862823009491
    2. ' set' → logprob: -1.1778628826141357
    3. '   ' → logprob: -3.4278628826141357
    4. 'n' → logprob: -3.9278628826141357
    5. ' ' → logprob: -3.9278628826141357
    6. ' de' → logprob: -4.052862644195557
    7. '1' → logprob: -4.302862644195557
    8. ' ne' → logprob: -5.427862644195557
    9. 'set' → logprob: -6.052862644195557
    10. '    ' → logprob: -6.802862644195557

Token 418: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003893541870638728
    2. 'un' → logprob: -6.5038933753967285
    3. '```' → logprob: -6.8788933753967285
    4. ' ' → logprob: -7.7538933753967285
    5. ' ' → logprob: -8.628893852233887
    6. 'part' → logprob: -8.753893852233887
    7. ''un' → logprob: -9.003893852233887
    8. 'la' → logprob: -9.378893852233887
    9. 'commun' → logprob: -9.378893852233887
    10. ''' → logprob: -9.628893852233887

Token 419: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010360259329900146
    2. 'un' → logprob: -7.001036167144775
    3. '```' → logprob: -9.626035690307617
    4. ''un' → logprob: -10.626035690307617
    5. ''' → logprob: -11.376035690307617
    6. 'l' → logprob: -12.751035690307617
    7. '0' → logprob: -12.876035690307617
    8. 'part' → logprob: -12.876035690307617
    9. 'la' → logprob: -13.001035690307617
    10. '...' → logprob: -13.626035690307617

Token 420: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.16288712620735168
    2. ' set' → logprob: -2.4128870964050293
    3. 'n' → logprob: -3.1628870964050293
    4. ' ' → logprob: -5.412887096405029
    5. ' in' → logprob: -6.162887096405029
    6. '   ' → logprob: -6.287887096405029
    7. 'set' → logprob: -6.287887096405029
    8. ' de' → logprob: -6.287887096405029
    9. ' dans' → logprob: -7.037887096405029
    10. ')' → logprob: -7.287887096405029

Token 421: ''est' (ID: 6616)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7472423911094666
    2. 'n' → logprob: -1.7472424507141113
    3. ''est' → logprob: -1.7472424507141113
    4. 'est' → logprob: -2.2472424507141113
    5. ' est' → logprob: -3.8722424507141113
    6. 'a' → logprob: -4.497242450714111
    7. '’est' → logprob: -4.872242450714111
    8. ' is' → logprob: -5.372242450714111
    9. '&' → logprob: -5.622242450714111
    10. ' set' → logprob: -5.622242450714111

Token 422: ' commun' (ID: 2797)
  Prédit: 'prés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prés' → logprob: -0.48184454441070557
    2. 'part' → logprob: -2.231844425201416
    3. '1' → logprob: -2.856844425201416
    4. 'commun' → logprob: -2.981844425201416
    5. 'set' → logprob: -3.481844425201416
    6. 'comm' → logprob: -3.731844425201416
    7. ' partagé' → logprob: -3.731844425201416
    8. ' présent' → logprob: -4.106844425201416
    9. ' commun' → logprob: -4.356844425201416
    10. 'present' → logprob: -4.606844425201416

Token 423: ' entre' (ID: 3853)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9522087574005127
    2. ' à' → logprob: -1.7022087574005127
    3. ' ' → logprob: -1.9522087574005127
    4. ' entre' → logprob: -2.0772087574005127
    5. ' and' → logprob: -2.8272087574005127
    6. ' et' → logprob: -3.2022087574005127
    7. 'and' → logprob: -4.077208518981934
    8. ' a' → logprob: -4.577208518981934
    9. ' between' → logprob: -5.202208518981934
    10. '  ' → logprob: -5.202208518981934

Token 424: ' '' (ID: 461)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5762388706207275
    2. 'i' → logprob: -0.8262388706207275
    3. ' ' → logprob: -8.326238632202148
    4. ' ' → logprob: -11.076238632202148
    5. '	i' → logprob: -11.326238632202148
    6. '   ' → logprob: -11.701238632202148
    7. 'l' → logprob: -12.201238632202148
    8. ' l' → logprob: -12.201238632202148
    9. 'a' → logprob: -12.576238632202148
    10. ' la' → logprob: -13.576238632202148

Token 425: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08916030824184418
    2. ' i' → logprob: -2.464160203933716
    3. 'a' → logprob: -10.214159965515137
    4. ')' → logprob: -10.214159965515137
    5. ' ' → logprob: -10.214159965515137
    6. ''' → logprob: -10.714159965515137
    7. ' ' → logprob: -10.839159965515137
    8. ' '' → logprob: -10.839159965515137
    9. '   ' → logprob: -11.214159965515137
    10. '	i' → logprob: -11.714159965515137

Token 426: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.5608108043670654
    2. ')' → logprob: -1.6858108043670654
    3. ' '' → logprob: -1.8108108043670654
    4. ' and' → logprob: -2.0608108043670654
    5. ' &' → logprob: -2.1858108043670654
    6. ' ' → logprob: -3.0608108043670654
    7. '   ' → logprob: -3.0608108043670654
    8. '&' → logprob: -3.3108108043670654
    9. 'and' → logprob: -3.5608108043670654
    10. ' et' → logprob: -4.0608110427856445

Token 427: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6936237812042236
    2. ' and' → logprob: -1.3186237812042236
    3. 'and' → logprob: -1.6936237812042236
    4. ' et' → logprob: -3.6936237812042236
    5. '    ' → logprob: -5.0686235427856445
    6. 'et' → logprob: -5.1936235427856445
    7. ' ' → logprob: -5.1936235427856445
    8. ' &' → logprob: -6.4436235427856445
    9. ')' → logprob: -6.5686235427856445
    10. '&' → logprob: -6.6936235427856445

Token 428: ' '' (ID: 461)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.47424307465553284
    2. ' a' → logprob: -0.9742430448532104
    3. ' ' → logprob: -9.0992431640625
    4. ' ' → logprob: -10.0992431640625
    5. '   ' → logprob: -13.0992431640625
    6. ' the' → logprob: -13.2242431640625
    7. 'i' → logprob: -13.4742431640625
    8. ' i' → logprob: -13.7242431640625
    9. '  ' → logprob: -13.9742431640625
    10. '	a' → logprob: -13.9742431640625

Token 429: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.17987796664237976
    2. ' a' → logprob: -1.8048779964447021
    3. ' ' → logprob: -9.304878234863281
    4. ' ' → logprob: -11.179878234863281
    5. '   ' → logprob: -11.929878234863281
    6. ')' → logprob: -12.429878234863281
    7. ']' → logprob: -12.929878234863281
    8. 'x' → logprob: -13.304878234863281
    9. '	a' → logprob: -13.429878234863281
    10. '')' → logprob: -13.804878234863281

Token 430: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0019492254359647632
    2. '[' → logprob: -6.501949310302734
    3. '['' → logprob: -7.751949310302734
    4. 'x' → logprob: -11.376949310302734
    5. ']' → logprob: -13.501949310302734
    6. '')' → logprob: -14.501949310302734
    7. '   ' → logprob: -14.626949310302734
    8. ' ' → logprob: -14.876949310302734
    9. ' [' → logprob: -15.001949310302734
    10. ''' → logprob: -15.001949310302734

Token 431: ']',' (ID: 66429)
  Prédit: ')''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')'' → logprob: -1.1212587356567383
    2. ')' → logprob: -1.2462587356567383
    3. ']'' → logprob: -1.9962587356567383
    4. '   ' → logprob: -2.6212587356567383
    5. ']' → logprob: -2.9962587356567383
    6. ')':' → logprob: -3.2462587356567383
    7. '):' → logprob: -3.6212587356567383
    8. ''' → logprob: -3.9962587356567383
    9. ' )' → logprob: -4.746258735656738
    10. '])' → logprob: -4.871258735656738

Token 432: ' donc' (ID: 14206)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4948987662792206
    2. ':' → logprob: -2.119898796081543
    3. ' and' → logprob: -2.119898796081543
    4. '       ' → logprob: -2.369898796081543
    5. '    ' → logprob: -3.994898796081543
    6. ' :' → logprob: -4.119898796081543
    7. ' ' → logprob: -4.619898796081543
    8. 'and' → logprob: -5.494898796081543
    9. '  ' → logprob: -6.369898796081543
    10. '):' → logprob: -6.619898796081543

Token 433: ' ils' (ID: 15387)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04875506833195686
    2. '    ' → logprob: -3.798755168914795
    3. ':' → logprob: -4.298755168914795
    4. '       ' → logprob: -5.298755168914795
    5. ' ' → logprob: -6.548755168914795
    6. ' :' → logprob: -7.048755168914795
    7. '  ' → logprob: -7.173755168914795
    8. ' and' → logprob: -8.048754692077637
    9. ' i' → logprob: -8.173754692077637
    10. '    
' → logprob: -8.298754692077637

Token 434: ' peuvent' (ID: 21321)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1935557872056961
    2. '==' → logprob: -3.0685558319091797
    3. '   ' → logprob: -3.4435558319091797
    4. '=' → logprob: -3.6935558319091797
    5. ' !=' → logprob: -3.9435558319091797
    6. ' &' → logprob: -4.19355583190918
    7. ' and' → logprob: -5.06855583190918
    8. ' =' → logprob: -5.31855583190918
    9. '|' → logprob: -5.44355583190918
    10. ' |' → logprob: -5.69355583190918

Token 435: ' être' (ID: 9104)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05826690047979355
    2. ' continuer' → logprob: -4.058267116546631
    3. ' être' → logprob: -4.933267116546631
    4. '       ' → logprob: -5.433267116546631
    5. '    ' → logprob: -5.433267116546631
    6. ' continue' → logprob: -5.683267116546631
    7. ' ' → logprob: -5.933267116546631
    8. ' be' → logprob: -6.308267116546631
    9. 'être' → logprob: -6.308267116546631
    10. 'contin' → logprob: -6.433267116546631

Token 436: ' addition' (ID: 5856)
  Prédit: ' ajout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ajout' → logprob: -0.8801113963127136
    2. ' addition' → logprob: -2.0051114559173584
    3. ' combin' → logprob: -2.1301114559173584
    4. 'aj' → logprob: -2.2551114559173584
    5. ' ajouté' → logprob: -2.3801114559173584
    6. ' ' → logprob: -3.6301114559173584
    7. '   ' → logprob: -3.6301114559173584
    8. 'addition' → logprob: -3.8801114559173584
    9. '|' → logprob: -4.005111217498779
    10. ' utilisés' → logprob: -5.380111217498779

Token 437: 'nés' (ID: 72145)
  Prédit: 'nés'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nés' → logprob: -0.011463096365332603
    2. '   ' → logprob: -5.261463165283203
    3. '+' → logprob: -6.136463165283203
    4. 'ner' → logprob: -6.636463165283203
    5. 'és' → logprob: -6.886463165283203
    6. 'né' → logprob: -7.011463165283203
    7. 'n' → logprob: -7.886463165283203
    8. 'nées' → logprob: -8.261463165283203
    9. 'née' → logprob: -10.636463165283203
    10. 's' → logprob: -10.886463165283203

Token 438: ' sans' (ID: 9828)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14621879160404205
    2. ' and' → logprob: -2.021218776702881
    3. 'and' → logprob: -6.021218776702881
    4. '       ' → logprob: -7.146218776702881
    5. '    ' → logprob: -8.896219253540039
    6. ':' → logprob: -10.021219253540039
    7. ' or' → logprob: -10.396219253540039
    8. ')' → logprob: -10.771219253540039
    9. '  ' → logprob: -10.896219253540039
    10. ' et' → logprob: -11.146219253540039

Token 439: ' collision' (ID: 34967)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3278813660144806
    2. '1' → logprob: -3.452881336212158
    3. '```' → logprob: -3.452881336212158
    4. '  
' → logprob: -3.577881336212158
    5. ' espace' → logprob: -4.452881336212158
    6. ' ' → logprob: -4.577881336212158
    7. '  ' → logprob: -4.577881336212158
    8. 'space' → logprob: -4.577881336212158
    9. '   ' → logprob: -4.702881336212158
    10. ' x' → logprob: -4.827881336212158

Token 440: ' b' (ID: 287)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44260919094085693
    2. ' and' → logprob: -1.067609190940857
    3. 'and' → logprob: -4.4426093101501465
    4. '       ' → logprob: -6.5676093101501465
    5. '    ' → logprob: -8.567608833312988
    6. ':' → logprob: -8.942608833312988
    7. ' or' → logprob: -9.692608833312988
    8. '  ' → logprob: -9.817608833312988
    9. ' if' → logprob: -9.942608833312988
    10. ' ' → logprob: -10.192608833312988

Token 441: 'inaire' (ID: 41465)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.2023158222436905
    2. 'its' → logprob: -1.8273158073425293
    3. 'i' → logprob: -4.452315807342529
    4. 'inaire' → logprob: -5.577315807342529
    5. 'in' → logprob: -5.827315807342529
    6. '```' → logprob: -6.702315807342529
    7. 'inary' → logprob: -7.702315807342529
    8. '1' → logprob: -8.202316284179688
    9. 'e' → logprob: -8.452316284179688
    10. '   ' → logprob: -8.702316284179688

Token 442: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.536005437374115
    2. ' and' → logprob: -0.911005437374115
    3. 'and' → logprob: -5.16100549697876
    4. '       ' → logprob: -5.28600549697876
    5. ':' → logprob: -6.66100549697876
    6. ')' → logprob: -8.786005020141602
    7. '    ' → logprob: -8.786005020141602
    8. ' or' → logprob: -9.286005020141602
    9. ' if' → logprob: -9.536005020141602
    10. ',' → logprob: -10.036005020141602

Token 443: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3392201066017151
    2. ' and' → logprob: -1.3392200469970703
    3. 'and' → logprob: -3.7142200469970703
    4. '       ' → logprob: -7.83922004699707
    5. '    ' → logprob: -8.08922004699707
    6. ' if' → logprob: -8.21422004699707
    7. 'if' → logprob: -9.96422004699707
    8. '  ' → logprob: -10.08922004699707
    9. ' while' → logprob: -10.33922004699707
    10. ':' → logprob: -10.46422004699707

Token 444: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09752750396728516
    2. ' and' → logprob: -2.722527503967285
    3. 'and' → logprob: -3.847527503967285
    4. 'while' (adapté à ' while') → logprob: -5.972527503967285
    5. ' while' → logprob: -6.472527503967285
    6. '       ' → logprob: -6.972527503967285
    7. 'if' → logprob: -7.972527503967285
    8. ' if' → logprob: -8.472527503967285
    9. '  ' → logprob: -9.222527503967285
    10. '    ' → logprob: -9.472527503967285

Token 445: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.00325328903272748
    2. 'x' → logprob: -5.75325345993042
    3. ' ' → logprob: -10.128252983093262
    4. ' ' → logprob: -10.503252983093262
    5. ' (' → logprob: -12.003252983093262
    6. '(x' → logprob: -14.003252983093262
    7. '(' → logprob: -14.753252983093262
    8. '	x' → logprob: -14.753252983093262
    9. ' ' → logprob: -16.253253936767578
    10. '   ' → logprob: -16.253253936767578

Token 446: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.03404340520501137
    2. '<' → logprob: -3.784043312072754
    3. '<n' → logprob: -4.534043312072754
    4. '<len' → logprob: -13.659043312072754
    5. ' ' → logprob: -14.784043312072754
    6. '<size' → logprob: -15.409043312072754
    7. '<N' → logprob: -15.534043312072754
    8. '<num' → logprob: -16.03404426574707
    9. '[n' → logprob: -16.15904426574707
    10. ' n' → logprob: -16.40904426574707

Token 447: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16022443771362305
    2. ' n' → logprob: -1.910224437713623
    3. '	n' → logprob: -16.28522491455078
    4. ' ' → logprob: -16.53522491455078
    5. '   ' → logprob: -16.91022491455078
    6. '(n' → logprob: -17.91022491455078
    7. ' ' → logprob: -19.28522491455078
    8. ')n' → logprob: -19.41022491455078
    9. '```' → logprob: -19.53522491455078
    10. '<n' → logprob: -19.91022491455078

Token 448: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.12694038450717926
    2. 'and' → logprob: -2.1269404888153076
    3. '   ' → logprob: -11.501940727233887
    4. ' ' → logprob: -13.626940727233887
    5. '    ' → logprob: -14.626940727233887
    6. ' и' → logprob: -15.501940727233887
    7. '  ' → logprob: -16.00193977355957
    8. ' et' → logprob: -16.37693977355957
    9. '	and' → logprob: -16.75193977355957
    10. ' ' → logprob: -17.00193977355957

Token 449: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0037468678783625364
    2. ' (' → logprob: -5.62874698638916
    3. '(' → logprob: -9.00374698638916
    4. 'i' → logprob: -11.75374698638916
    5. '((' → logprob: -11.75374698638916
    6. '   ' → logprob: -12.12874698638916
    7. '[i' → logprob: -14.00374698638916
    8. ' ' → logprob: -14.50374698638916
    9. ' i' → logprob: -14.87874698638916
    10. '(I' → logprob: -15.37874698638916

Token 450: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4288620054721832
    2. '(i' → logprob: -1.0538619756698608
    3. ' i' → logprob: -9.678861618041992
    4. ' (' → logprob: -9.928861618041992
    5. '(' → logprob: -10.178861618041992
    6. '[i' → logprob: -12.678861618041992
    7. '   ' → logprob: -12.803861618041992
    8. '{i' → logprob: -13.428861618041992
    9. '(
' → logprob: -13.678861618041992
    10. '	i' → logprob: -14.303861618041992

Token 451: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.3869096040725708
    2. '&' → logprob: -1.1369096040725708
    3. '&a' → logprob: -11.636909484863281
    4. '&r' → logprob: -12.011909484863281
    5. '&nbsp' → logprob: -12.386909484863281
    6. '&amp' → logprob: -12.386909484863281
    7. ' ' → logprob: -12.511909484863281
    8. '&p' → logprob: -13.261909484863281
    9. '&s' → logprob: -13.511909484863281
    10. '&i' → logprob: -13.636909484863281

Token 452: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3132810592651367
    2. ' a' → logprob: -1.3132810592651367
    3. ' ' → logprob: -11.813281059265137
    4. ')' → logprob: -12.188281059265137
    5. '	a' → logprob: -12.813281059265137
    6. ' ' → logprob: -13.938281059265137
    7. '_a' → logprob: -14.063281059265137
    8. '  ' → logprob: -14.813281059265137
    9. ')a' → logprob: -15.563281059265137
    10. '   ' → logprob: -15.813281059265137

Token 453: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -4.191489642835222e-05
    2. '[' → logprob: -10.250041961669922
    3. 'x' → logprob: -12.375041961669922
    4. ' [' → logprob: -13.875041961669922
    5. '[
' → logprob: -13.875041961669922
    6. '   ' → logprob: -15.750041961669922
    7. '```' → logprob: -16.000041961669922
    8. '(x' → logprob: -16.875041961669922
    9. '{x' → logprob: -17.000041961669922
    10. ' x' → logprob: -17.625041961669922

Token 454: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018649426056072116
    2. ')==' → logprob: -8.625186920166016
    3. ' )' → logprob: -12.750186920166016
    4. '==' → logprob: -13.375186920166016
    5. '）' → logprob: -14.000186920166016
    6. '])' → logprob: -14.375186920166016
    7. '))' → logprob: -15.125186920166016
    8. '')' → logprob: -15.625186920166016
    9. ' ==' → logprob: -15.875186920166016
    10. ']' → logprob: -16.625186920166016

Token 455: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.01815767213702202
    2. ' ==' → logprob: -4.018157482147217
    3. ')==' → logprob: -12.518157958984375
    4. '=' → logprob: -13.143157958984375
    5. ')' → logprob: -13.518157958984375
    6. '==
' → logprob: -15.018157958984375
    7. '()==' → logprob: -15.518157958984375
    8. ']==' → logprob: -15.893157958984375
    9. '===' → logprob: -16.518157958984375
    10. '[' → logprob: -16.768157958984375

Token 456: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004306692280806601
    2. ' ' → logprob: -7.750430583953857
    3. '   ' → logprob: -18.750431060791016
    4. '000' → logprob: -20.625431060791016
    5. '۰' → logprob: -21.250431060791016
    6. '00' → logprob: -21.625431060791016
    7. ' ' → logprob: -21.750431060791016
    8. '=' → logprob: -22.250431060791016
    9. '  ' → logprob: -23.000431060791016
    10. '```' → logprob: -23.125431060791016

Token 457: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '```' → logprob: -19.875001907348633
    4. '۰' → logprob: -20.125001907348633
    5. '   ' → logprob: -20.625001907348633
    6. '000' → logprob: -22.000001907348633
    7. ' ' → logprob: -22.125001907348633
    8. '٠' → logprob: -22.250001907348633
    9. '０' → logprob: -22.375001907348633
    10. '  ' → logprob: -23.125001907348633

Token 458: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08931336551904678
    2. ':
' → logprob: -2.464313268661499
    3. '   ' → logprob: -8.339313507080078
    4. '       ' → logprob: -9.214313507080078
    5. ' :' → logprob: -10.964313507080078
    6. ' :
' → logprob: -11.714313507080078
    7. ' and' → logprob: -12.214313507080078
    8. '):
' → logprob: -13.339313507080078
    9. ':
' → logprob: -13.964313507080078
    10. '):' → logprob: -13.964313507080078

Token 459: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09137022495269775
    2. ':' → logprob: -3.091370105743408
    3. '<|end|>' → logprob: -3.716370105743408
    4. '   ' → logprob: -4.466370105743408
    5. ' ' → logprob: -5.966370105743408
    6. '    ' → logprob: -6.966370105743408
    7. '<|end|>' → logprob: -7.716370105743408
    8. ' :' → logprob: -7.841370105743408
    9. '  ' → logprob: -7.966370105743408
    10. '        
' → logprob: -7.966370105743408

Token 460: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0582355260848999
    2. ' i' → logprob: -3.4332356452941895
    3. 'i' → logprob: -4.5582356452941895
    4. '   ' → logprob: -4.8082356452941895
    5. ' ' → logprob: -6.0582356452941895
    6. '<|end|>' → logprob: -7.0582356452941895
    7. '        
' → logprob: -7.3082356452941895
    8. '  ' → logprob: -8.308235168457031
    9. '
' → logprob: -8.433235168457031
    10. '    ' → logprob: -8.558235168457031

Token 461: ' Ajouter' (ID: 165754)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.015973253175616264
    2. ' i' → logprob: -4.515973091125488
    3. '   ' → logprob: -5.765973091125488
    4. '       ' → logprob: -6.390973091125488
    5. '  ' → logprob: -10.640973091125488
    6. '           ' → logprob: -10.890973091125488
    7. '    ' → logprob: -11.015973091125488
    8. '	i' → logprob: -11.140973091125488
    9. ' ' → logprob: -11.515973091125488
    10. '      ' → logprob: -12.265973091125488

Token 462: ' à' (ID: 1221)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08248753100633621
    2. ' a' → logprob: -2.5824875831604004
    3. 'i' → logprob: -5.8324875831604
    4. ' i' → logprob: -7.4574875831604
    5. '   ' → logprob: -9.957487106323242
    6. '       ' → logprob: -10.832487106323242
    7. '    ' → logprob: -12.332487106323242
    8. '	a' → logprob: -12.582487106323242
    9. '           ' → logprob: -13.332487106323242
    10. ' the' → logprob: -13.332487106323242

Token 463: ' '' (ID: 461)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0007206532754935324
    2. ' i' → logprob: -7.250720500946045
    3. 'x' → logprob: -12.000720977783203
    4. '   ' → logprob: -12.875720977783203
    5. '	i' → logprob: -13.875720977783203
    6. 'a' → logprob: -14.375720977783203
    7. ' ' → logprob: -15.750720977783203
    8. '```' → logprob: -16.000720977783203
    9. '[i' → logprob: -16.375720977783203
    10. '`' → logprob: -16.875720977783203

Token 464: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00012332366895861924
    2. ' i' → logprob: -10.000123023986816
    3. 'x' → logprob: -10.125123023986816
    4. 'a' → logprob: -10.250123023986816
    5. '   ' → logprob: -13.875123023986816
    6. '	i' → logprob: -14.250123023986816
    7. '```' → logprob: -16.000123977661133
    8. '       ' → logprob: -16.125123977661133
    9. ' ' → logprob: -16.250123977661133
    10. '  ' → logprob: -16.500123977661133

Token 465: ''' (ID: 6)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '|' → logprob: -0.2284052073955536
    2. ' |=' → logprob: -1.603405237197876
    3. ' +=' → logprob: -6.353404998779297
    4. '=' → logprob: -7.603404998779297
    5. '+=' → logprob: -7.978404998779297
    6. ' |' → logprob: -8.853404998779297
    7. ' ' → logprob: -8.978404998779297
    8. '   ' → logprob: -10.103404998779297
    9. ')' → logprob: -10.103404998779297
    10. ' =' → logprob: -11.353404998779297

Token 466: ' la' (ID: 557)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '|' → logprob: -0.26676008105278015
    2. ' |=' → logprob: -1.7667601108551025
    3. ' i' → logprob: -3.6417601108551025
    4. 'i' → logprob: -3.8917601108551025
    5. '=' → logprob: -5.016759872436523
    6. '   ' → logprob: -5.266759872436523
    7. ' =' → logprob: -6.891759872436523
    8. ' ' → logprob: -7.016759872436523
    9. ' +=' → logprob: -7.141759872436523
    10. ' |' → logprob: -7.391759872436523

Token 467: ' valeur' (ID: 41664)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.005373441148549318
    2. ' a' → logprob: -5.380373477935791
    3. 'val' → logprob: -8.130373001098633
    4. ' valeur' → logprob: -8.255373001098633
    5. '[a' → logprob: -9.505373001098633
    6. '|' → logprob: -10.880373001098633
    7. '[' → logprob: -10.880373001098633
    8. ' ' → logprob: -11.255373001098633
    9. 'x' → logprob: -11.380373001098633
    10. '   ' → logprob: -11.755373001098633

Token 468: ' de' (ID: 334)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05010105296969414
    2. ' a' → logprob: -3.1751010417938232
    3. ' de' → logprob: -5.175101280212402
    4. '   ' → logprob: -7.925101280212402
    5. 'de' → logprob: -8.050101280212402
    6. '+' → logprob: -8.175101280212402
    7. '=' → logprob: -9.550101280212402
    8. '    ' → logprob: -9.675101280212402
    9. '[a' → logprob: -9.800101280212402
    10. '	a' → logprob: -9.925101280212402

Token 469: ' '' (ID: 461)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.003178306156769395
    2. ' a' → logprob: -5.753178119659424
    3. '   ' → logprob: -15.378178596496582
    4. ' ' → logprob: -15.503178596496582
    5. '	a' → logprob: -15.628178596496582
    6. '  ' → logprob: -17.878177642822266
    7. '    ' → logprob: -18.753177642822266
    8. '_a' → logprob: -19.503177642822266
    9. '[a' → logprob: -19.503177642822266
    10. '```' → logprob: -20.003177642822266

Token 470: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0206720617134124e-05
    2. ' a' → logprob: -11.50001049041748
    3. '   ' → logprob: -18.750009536743164
    4. ' ' → logprob: -19.125009536743164
    5. '```' → logprob: -19.250009536743164
    6. '	a' → logprob: -19.875009536743164
    7. '[a' → logprob: -20.375009536743164
    8. '`' → logprob: -21.250009536743164
    9. '  ' → logprob: -21.375009536743164
    10. ''a' → logprob: -21.750009536743164

Token 471: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -4.127333340875339e-06
    2. '[' → logprob: -12.625003814697266
    3. 'x' → logprob: -14.125003814697266
    4. '[
' → logprob: -17.125003814697266
    5. ' [' → logprob: -17.375003814697266
    6. '[a' → logprob: -17.375003814697266
    7. '(x' → logprob: -17.625003814697266
    8. '```' → logprob: -18.250003814697266
    9. ' x' → logprob: -19.375003814697266
    10. 'a' → logprob: -20.125003814697266

Token 472: ']',' (ID: 66429)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.35185861587524414
    2. ']' → logprob: -1.6018586158752441
    3. ']'' → logprob: -2.726858615875244
    4. ''' → logprob: -3.601858615875244
    5. '']' → logprob: -6.851858615875244
    6. '[' → logprob: -7.226858615875244
    7. ')' → logprob: -9.101858139038086
    8. '')' → logprob: -9.226858139038086
    9. ')'' → logprob: -9.351858139038086
    10. ''[' → logprob: -9.851858139038086

Token 473: ' ce' (ID: 2357)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3244474530220032
    2. ' i' → logprob: -1.3244473934173584
    3. '       ' → logprob: -4.5744476318359375
    4. '   ' → logprob: -7.8244476318359375
    5. '        
' → logprob: -8.699447631835938
    6. ' 
' → logprob: -9.574447631835938
    7. '           ' → logprob: -10.324447631835938
    8. ' ' → logprob: -10.449447631835938
    9. '	i' → logprob: -10.574447631835938
    10. '  ' → logprob: -11.199447631835938

Token 474: ' qui' (ID: 2780)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2179572582244873
    2. 'i' → logprob: -1.7179572582244873
    3. '=' → logprob: -5.342957496643066
    4. 'qui' → logprob: -5.967957496643066
    5. 'a' → logprob: -6.592957496643066
    6. '&' → logprob: -6.717957496643066
    7. '|' → logprob: -7.717957496643066
    8. '>' → logprob: -7.842957496643066
    9. '   ' → logprob: -7.967957496643066
    10. ' &' → logprob: -7.967957496643066

Token 475: ' agr' (ID: 11966)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '|' → logprob: -0.20202705264091492
    2. 'i' → logprob: -2.8270270824432373
    3. 'x' → logprob: -3.2020270824432373
    4. ' fait' → logprob: -4.702026844024658
    5. 'or' → logprob: -5.077026844024658
    6. '#' → logprob: -5.077026844024658
    7. 's' → logprob: -5.202026844024658
    8. '```' → logprob: -5.202026844024658
    9. 'met' → logprob: -5.577026844024658
    10. ' |=' → logprob: -5.577026844024658

Token 476: 'and' (ID: 427)
  Prédit: 'grave'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grave' → logprob: -1.229170322418213
    2. 'and' → logprob: -1.479170322418213
    3. 'range' → logprob: -1.979170322418213
    4. '`' → logprob: -2.479170322418213
    5. 'g' → logprob: -2.729170322418213
    6. 'mente' → logprob: -3.354170322418213
    7. 'ège' → logprob: -3.354170322418213
    8. '"' → logprob: -4.354170322418213
    9. 'grand' → logprob: -4.479170322418213
    10. 'é' → logprob: -4.854170322418213

Token 477: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.0004978670622222126
    2. 'd' → logprob: -9.000497817993164
    3. 'i' → logprob: -9.500497817993164
    4. ' it' → logprob: -9.500497817993164
    5. '   ' → logprob: -9.750497817993164
    6. 'dit' → logprob: -10.500497817993164
    7. 'rit' → logprob: -10.750497817993164
    8. 'ir' → logprob: -11.125497817993164
    9. '[it' → logprob: -11.875497817993164
    10. '#' → logprob: -12.000497817993164

Token 478: ' la' (ID: 557)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3528149724006653
    2. 'i' → logprob: -1.2278149127960205
    3. ' l' → logprob: -6.4778151512146
    4. 'l' → logprob: -6.9778151512146
    5. ' la' → logprob: -7.2278151512146
    6. '   ' → logprob: -7.4778151512146
    7. ' ' → logprob: -8.352814674377441
    8. '	i' → logprob: -8.602814674377441
    9. '  ' → logprob: -9.977814674377441
    10. ' ' → logprob: -10.102814674377441

Token 479: ' fenêtre' (ID: 109648)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6659932136535645
    2. 's' → logprob: -0.7909932136535645
    3. 'fen' → logprob: -3.7909932136535645
    4. 'window' → logprob: -5.5409932136535645
    5. ' i' → logprob: -6.5409932136535645
    6. '   ' → logprob: -6.6659932136535645
    7. 'sé' → logprob: -7.0409932136535645
    8. 'ensemble' → logprob: -7.4159932136535645
    9. 'interval' → logprob: -8.040992736816406
    10. ' fenêtre' → logprob: -8.165992736816406

Token 480: ' cour' (ID: 2871)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6666363477706909
    2. 'i' → logprob: -0.9166363477706909
    3. ' i' → logprob: -2.7916364669799805
    4. '   ' → logprob: -3.7916364669799805
    5. '           ' → logprob: -7.2916364669799805
    6. '	i' → logprob: -7.4166364669799805
    7. '
' → logprob: -7.7916364669799805
    8. '        
' → logprob: -8.41663646697998
    9. '[i' → logprob: -8.79163646697998
    10. '    
' → logprob: -8.91663646697998

Token 481: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.0009343287092633545
    2. 'r' → logprob: -7.50093412399292
    3. 'ant' → logprob: -8.500934600830078
    4. 'a' → logprob: -9.750934600830078
    5. 'i' → logprob: -10.250934600830078
    6. '   ' → logprob: -10.250934600830078
    7. 'x' → logprob: -10.750934600830078
    8. 'amment' → logprob: -11.625934600830078
    9. '[i' → logprob: -12.500934600830078
    10. 'ente' → logprob: -13.000934600830078

Token 482: '
' (ID: 198)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1729896515607834
    2. ' i' → logprob: -2.6729896068573
    3. '       ' → logprob: -2.9229896068573
    4. '   ' → logprob: -3.6729896068573
    5. '
' → logprob: -5.547989845275879
    6. '    
' → logprob: -6.672989845275879
    7. '           ' → logprob: -6.922989845275879
    8. ' 
' → logprob: -7.172989845275879
    9. '        
' → logprob: -7.172989845275879
    10. '=' → logprob: -7.672989845275879

Token 483: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.451281875371933
    2. ' i' → logprob: -1.5762819051742554
    3. 'i' → logprob: -2.201281785964966
    4. '   ' → logprob: -3.201281785964966
    5. '	i' → logprob: -6.326282024383545
    6. '	' → logprob: -7.326282024383545
    7. ' ' → logprob: -7.451282024383545
    8. '        
' → logprob: -7.951282024383545
    9. ' =' → logprob: -8.201281547546387
    10. '    
' → logprob: -8.451281547546387

Token 484: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.0003945688367821276
    2. ' i' → logprob: -8.250394821166992
    3. '       ' → logprob: -9.250394821166992
    4. '   ' → logprob: -10.250394821166992
    5. '           ' → logprob: -14.000394821166992
    6. '  ' → logprob: -15.125394821166992
    7. '	i' → logprob: -15.250394821166992
    8. '        
' → logprob: -15.750394821166992
    9. '
' → logprob: -16.500394821166992
    10. '      ' → logprob: -16.500394821166992

Token 485: ' +=' (ID: 2757)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.10693753510713577
    2. ' |=' → logprob: -2.3569376468658447
    3. '+=' → logprob: -5.106937408447266
    4. ' +=' → logprob: -7.731937408447266
    5. '=' → logprob: -8.481937408447266
    6. ' ^=' → logprob: -12.481937408447266
    7. ' =' → logprob: -13.731937408447266
    8. ' ' → logprob: -13.981937408447266
    9. '|=
' → logprob: -14.481937408447266
    10. ' ' → logprob: -14.981937408447266

Token 486: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07889000326395035
    2. ' a' → logprob: -2.578890085220337
    3. '	a' → logprob: -15.953889846801758
    4. ' ' → logprob: -16.078889846801758
    5. ' ' → logprob: -16.953889846801758
    6. '   ' → logprob: -18.828889846801758
    7. 'i' → logprob: -19.078889846801758
    8. '_a' → logprob: -19.328889846801758
    9. '(a' → logprob: -19.953889846801758
    10. '  ' → logprob: -19.953889846801758

Token 487: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -4.246537173457909e-06
    2. '[' → logprob: -12.500003814697266
    3. 'x' → logprob: -15.000003814697266
    4. '```' → logprob: -16.500003814697266
    5. '[a' → logprob: -16.625003814697266
    6. ' [' → logprob: -16.750003814697266
    7. '[
' → logprob: -18.500003814697266
    8. 'a' → logprob: -19.000003814697266
    9. '\[' → logprob: -19.000003814697266
    10. '(x' → logprob: -19.875003814697266

Token 488: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04967531934380531
    2. ']
' → logprob: -3.049675226211548
    3. ')' → logprob: -6.924675464630127
    4. ')
' → logprob: -10.174674987792969
    5. ' ]' → logprob: -10.799674987792969
    6. ']
' → logprob: -11.049674987792969
    7. '   ' → logprob: -11.424674987792969
    8. ')]' → logprob: -12.049674987792969
    9. '       ' → logprob: -12.424674987792969
    10. ']

' → logprob: -12.924674987792969

Token 489: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04402363300323486
    2. 'x' → logprob: -3.7940235137939453
    3. '
' → logprob: -4.919023513793945
    4. '   ' → logprob: -5.044023513793945
    5. '        
' → logprob: -6.044023513793945
    6. '\n' → logprob: -6.294023513793945
    7. '    
' → logprob: -7.419023513793945
    8. ' x' → logprob: -7.919023513793945
    9. '           ' → logprob: -8.294023513793945
    10. '\' → logprob: -8.544023513793945

Token 490: ' #' (ID: 1069)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.027733417227864265
    2. '       ' → logprob: -3.902733325958252
    3. ' x' → logprob: -5.027733325958252
    4. '   ' → logprob: -8.27773380279541
    5. '	x' → logprob: -8.40273380279541
    6. '<|end|>' → logprob: -10.15273380279541
    7. ' ' → logprob: -10.77773380279541
    8. '        
' → logprob: -11.02773380279541
    9. ' 
' → logprob: -11.27773380279541
    10. '	' → logprob: -11.90273380279541

Token 491: ' In' (ID: 730)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.1398757123970427e-05
    2. ' x' → logprob: -11.500011444091797
    3. '   ' → logprob: -13.750011444091797
    4. '       ' → logprob: -15.750011444091797
    5. '	x' → logprob: -18.125011444091797
    6. '           ' → logprob: -20.750011444091797
    7. '    ' → logprob: -20.875011444091797
    8. ' ' → logprob: -21.125011444091797
    9. '  ' → logprob: -21.250011444091797
    10. '     ' → logprob: -22.125011444091797

Token 492: 'cr' (ID: 798)
  Prédit: 'crement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'crement' → logprob: -0.024738356471061707
    2. 'cr' → logprob: -3.899738311767578
    3. 'cre' → logprob: -6.024738311767578
    4. 'c' → logprob: -7.399738311767578
    5. 'd' → logprob: -7.524738311767578
    6. 'dex' → logprob: -8.274738311767578
    7. 'crease' → logprob: -9.274738311767578
    8. 'x' → logprob: -9.399738311767578
    9. 'CREMENT' → logprob: -10.024738311767578
    10. 't' → logprob: -10.149738311767578

Token 493: 'ément' (ID: 17645)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.051179561764001846
    2. 'dex' → logprob: -4.0511794090271
    3. '       ' → logprob: -4.3011794090271
    4. 'crement' → logprob: -5.3011794090271
    5. 'er' → logprob: -5.5511794090271
    6. '   ' → logprob: -5.5511794090271
    7. 'ex' → logprob: -5.9261794090271
    8. 'crease' → logprob: -7.4261794090271
    9. 'rement' → logprob: -7.6761794090271
    10. 'cr' → logprob: -7.8011794090271

Token 494: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0004074354947078973
    2. 'x' → logprob: -7.8754072189331055
    3. 'e' → logprob: -10.750407218933105
    4. ' x' → logprob: -12.625407218933105
    5. 'ent' → logprob: -14.000407218933105
    6. 'r' → logprob: -14.875407218933105
    7. '   ' → logprob: -15.125407218933105
    8. 'ar' → logprob: -15.250407218933105
    9. '       ' → logprob: -15.250407218933105
    10. 'eer' → logprob: -16.000408172607422

Token 495: ' l' (ID: 305)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0007101670489646494
    2. ' x' → logprob: -7.2507100105285645
    3. '	x' → logprob: -16.250709533691406
    4. '   ' → logprob: -16.500709533691406
    5. '(x' → logprob: -17.375709533691406
    6. '       ' → logprob: -18.500709533691406
    7. ' ' → logprob: -20.375709533691406
    8. '```' → logprob: -20.875709533691406
    9. '[x' → logprob: -22.250709533691406
    10. '    ' → logprob: -22.375709533691406

Token 496: ''ind' (ID: 82245)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0005558936391025782
    2. ' x' → logprob: -7.500555992126465
    3. '	x' → logprob: -13.625555992126465
    4. '   ' → logprob: -13.750555992126465
    5. ' ' → logprob: -14.875555992126465
    6. '    ' → logprob: -16.00055503845215
    7. '  ' → logprob: -16.87555503845215
    8. '[x' → logprob: -17.75055503845215
    9. '(x' → logprob: -17.87555503845215
    10. '       ' → logprob: -17.87555503845215

Token 497: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.00408932426944375
    2. 'x' → logprob: -5.50408935546875
    3. 'dex' → logprob: -12.12908935546875
    4. 'e' → logprob: -12.87908935546875
    5. 'ice' → logprob: -13.75408935546875
    6. '   ' → logprob: -14.37908935546875
    7. 'ent' → logprob: -14.50408935546875
    8. ' ex' → logprob: -15.75408935546875
    9. '```' → logprob: -16.50408935546875
    10. 't' → logprob: -16.75408935546875

Token 498: ' '' (ID: 461)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0619741789996624
    2. ' x' → logprob: -2.811974287033081
    3. '	x' → logprob: -12.18697452545166
    4. '   ' → logprob: -14.06197452545166
    5. ' ' → logprob: -14.68697452545166
    6. '<|end|>' → logprob: -17.186973571777344
    7. '(x' → logprob: -17.311973571777344
    8. '    ' → logprob: -17.311973571777344
    9. '[x' → logprob: -17.686973571777344
    10. '       ' → logprob: -17.936973571777344

Token 499: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.320199877838604e-07
    2. ' x' → logprob: -14.75
    3. '	x' → logprob: -21.25
    4. '"x' → logprob: -23.0
    5. '   ' → logprob: -23.375
    6. ')x' → logprob: -24.0
    7. ' ' → logprob: -24.125
    8. ''x' → logprob: -24.375
    9. '<|end|>' → logprob: -24.375
    10. '```' → logprob: -24.625

Token 500: ''' (ID: 6)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.8947398066520691
    2. '<|end|>' → logprob: -1.0197398662567139
    3. '+=' → logprob: -1.6447398662567139
    4. '       ' → logprob: -4.019739627838135
    5. ')' → logprob: -4.769739627838135
    6. '<|end|>' → logprob: -5.519739627838135
    7. '+' → logprob: -5.769739627838135
    8. '   ' → logprob: -6.644739627838135
    9. '```' → logprob: -6.769739627838135
    10. ']+=' → logprob: -7.894739627838135

Token 501: ' pour' (ID: 1930)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3817777633666992
    2. ' +=' → logprob: -1.8817777633666992
    3. '       ' → logprob: -2.131777763366699
    4. 'x' → logprob: -3.256777763366699
    5. '   ' → logprob: -5.506777763366699
    6. '<|end|>' → logprob: -6.381777763366699
    7. '```' → logprob: -7.506777763366699
    8. ' x' → logprob: -7.631777763366699
    9. '+' → logprob: -7.756777763366699
    10. '=' → logprob: -8.5067777633667

Token 502: ' pointer' (ID: 16233)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07221952825784683
    2. 'pass' → logprob: -2.9472196102142334
    3. ' x' → logprob: -4.322219371795654
    4. 'contin' → logprob: -6.822219371795654
    5. ' pass' → logprob: -7.447219371795654
    6. ' continuer' → logprob: -7.447219371795654
    7. '1' → logprob: -7.572219371795654
    8. '   ' → logprob: -7.822219371795654
    9. ' avancer' → logprob: -8.447219848632812
    10. ' ' → logprob: -8.572219848632812

Token 503: ' vers' (ID: 3640)
  Prédit: 'vers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vers' → logprob: -0.6708287000656128
    2. ' vers' → logprob: -1.2958287000656128
    3. 'x' → logprob: -3.0458288192749023
    4. 'à' → logprob: -3.1708288192749023
    5. '   ' → logprob: -3.2958288192749023
    6. ' à' → logprob: -3.5458288192749023
    7. 'au' → logprob: -3.6708288192749023
    8. '       ' → logprob: -3.7958288192749023
    9. '+' → logprob: -6.045828819274902
    10. '=' → logprob: -6.295828819274902

Token 504: ' le' (ID: 505)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.373917579650879
    2. 'le' → logprob: -1.498917579650879
    3. ' le' → logprob: -1.498917579650879
    4. 'la' → logprob: -2.123917579650879
    5. 'l' → logprob: -2.373917579650879
    6. ' la' → logprob: -3.373917579650879
    7. ' the' → logprob: -3.998917579650879
    8. 'the' → logprob: -4.748917579650879
    9. 'next' → logprob: -4.873917579650879
    10. ' l' → logprob: -4.998917579650879

Token 505: ' prochain' (ID: 52413)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.49764716625213623
    2. 'x' → logprob: -1.2476471662521362
    3. ' prochain' → logprob: -3.872647285461426
    4. 'pro' → logprob: -3.872647285461426
    5. 'su' → logprob: -3.997647285461426
    6. ' suivant' → logprob: -4.622647285461426
    7. 'élé' → logprob: -4.622647285461426
    8. ' next' → logprob: -4.747647285461426
    9. '1' → logprob: -5.747647285461426
    10. ' ' → logprob: -5.872647285461426

Token 506: ' élément' (ID: 99627)
  Prédit: ' élément'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' élément' → logprob: -0.9499685764312744
    2. 'element' → logprob: -1.4499685764312744
    3. '<|end|>' → logprob: -1.8249685764312744
    4. ' element' → logprob: -2.5749685764312744
    5. 'x' → logprob: -2.9499685764312744
    6. 'élé' → logprob: -3.1999685764312744
    7. ' ' → logprob: -3.4499685764312744
    8. ' x' → logprob: -5.074968338012695
    9. '  ' → logprob: -6.199968338012695
    10. '   ' → logprob: -6.449968338012695

Token 507: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04187915846705437
    2. 'x' → logprob: -3.541879177093506
    3. '<|end|>' → logprob: -4.916879177093506
    4. ' x' → logprob: -5.541879177093506
    5. '   ' → logprob: -8.166878700256348
    6. '<|end|>' → logprob: -8.666878700256348
    7. '	x' → logprob: -9.041878700256348
    8. '	' → logprob: -9.916878700256348
    9. '        
' → logprob: -10.041878700256348
    10. '
' → logprob: -10.666878700256348

Token 508: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6132113933563232
    2. 'la' → logprob: -0.8632113933563232
    3. ' la' → logprob: -3.3632113933563232
    4. 'l' → logprob: -6.738211631774902
    5. ' a' → logprob: -7.863211631774902
    6. 'the' → logprob: -8.863211631774902
    7. ' the' → logprob: -9.488211631774902
    8. ' ' → logprob: -9.863211631774902
    9. 'x' → logprob: -10.863211631774902
    10. 'liste' → logprob: -10.988211631774902

Token 509: ' liste' (ID: 31719)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.22343479096889496
    2. 'liste' → logprob: -1.9734348058700562
    3. ' liste' → logprob: -3.4734346866607666
    4. ' a' → logprob: -3.8484346866607666
    5. 'array' → logprob: -6.098434925079346
    6. 'list' → logprob: -6.598434925079346
    7. '   ' → logprob: -6.973434925079346
    8. 'x' → logprob: -6.973434925079346
    9. ' array' → logprob: -7.098434925079346
    10. ' ' → logprob: -7.473434925079346

Token 510: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41446998715400696
    2. 'x' → logprob: -1.1644699573516846
    3. ' x' → logprob: -3.6644699573516846
    4. '<|end|>' → logprob: -7.039470195770264
    5. '   ' → logprob: -7.914470195770264
    6. '        
' → logprob: -8.914469718933105
    7. ' 
' → logprob: -10.539469718933105
    8. ' ' → logprob: -10.664469718933105
    9. '	x' → logprob: -10.664469718933105
    10. '<|end|>' → logprob: -11.039469718933105

Token 511: ' l' (ID: 305)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -1.3688093423843384
    2. 'contin' → logprob: -1.4938093423843384
    3. ' continuer' → logprob: -1.4938093423843384
    4. 'l' → logprob: -2.118809223175049
    5. 'x' → logprob: -3.118809223175049
    6. ' la' → logprob: -3.243809223175049
    7. ' poursuivre' → logprob: -4.118809223175049
    8. ' l' → logprob: -4.493809223175049
    9. 'trait' → logprob: -5.493809223175049
    10. 'ét' → logprob: -5.493809223175049

Token 512: ''' (ID: 6)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.13854952156543732
    2. '+' → logprob: -3.013549566268921
    3. 'x' → logprob: -4.388549327850342
    4. 'ine' → logprob: -4.888549327850342
    5. 'ecture' → logprob: -5.013549327850342
    6. '++' → logprob: -5.138549327850342
    7. ' a' → logprob: -5.263549327850342
    8. '#' → logprob: -5.388549327850342
    9. 'iné' → logprob: -5.638549327850342
    10. 'e' → logprob: -6.013549327850342

Token 513: 'it' (ID: 278)
  Prédit: 'aj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aj' → logprob: -1.4120469093322754
    2. 'iteration' → logprob: -1.7870469093322754
    3. 'it' → logprob: -1.9120469093322754
    4. 'extension' → logprob: -2.0370469093322754
    5. 'pro' → logprob: -2.5370469093322754
    6. 'ex' → logprob: -2.6620469093322754
    7. 'while' → logprob: -2.7870469093322754
    8. 'expl' → logprob: -3.4120469093322754
    9. 'ét' → logprob: -3.9120469093322754
    10. 'analyse' → logprob: -4.537046909332275

Token 514: 'ération' (ID: 24977)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.46635177731513977
    2. 'ération' → logprob: -1.3413517475128174
    3. 'x' → logprob: -2.4663517475128174
    4. 'ér' → logprob: -5.2163519859313965
    5. 'éra' → logprob: -5.4663519859313965
    6. 'é' → logprob: -5.7163519859313965
    7. 'érer' → logprob: -5.8413519859313965
    8. 'érieur' → logprob: -6.2163519859313965
    9. 'ère' → logprob: -6.3413519859313965
    10. 'èr' → logprob: -6.9663519859313965

Token 515: ' suivante' (ID: 107439)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4347568452358246
    2. '       ' → logprob: -1.559756875038147
    3. '   ' → logprob: -2.1847567558288574
    4. ' x' → logprob: -3.5597567558288574
    5. '    ' → logprob: -8.059757232666016
    6. '	x' → logprob: -8.434757232666016
    7. '<|end|>' → logprob: -8.559757232666016
    8. '  ' → logprob: -9.059757232666016
    9. ' ' → logprob: -9.184757232666016
    10. '        
' → logprob: -9.434757232666016

Token 516: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3311140835285187
    2. 'x' → logprob: -1.4561140537261963
    3. ' x' → logprob: -3.0811140537261963
    4. '   ' → logprob: -6.081114292144775
    5. '<|end|>' → logprob: -8.706113815307617
    6. '        
' → logprob: -9.206113815307617
    7. '    ' → logprob: -10.456113815307617
    8. '           ' → logprob: -10.706113815307617
    9. '     ' → logprob: -10.706113815307617
    10. ' 
' → logprob: -10.706113815307617

Token 517: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016275763511657715
    2. 'x' → logprob: -4.266275882720947
    3. '   ' → logprob: -6.766275882720947
    4. ' x' → logprob: -7.016275882720947
    5. '	' → logprob: -10.891275405883789
    6. '	x' → logprob: -11.516275405883789
    7. '        
' → logprob: -11.891275405883789
    8. '           ' → logprob: -11.891275405883789
    9. '<|end|>' → logprob: -11.891275405883789
    10. '      ' → logprob: -13.141275405883789

Token 518: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.0031781906727701426
    2. ' x' → logprob: -5.753178119659424
    3. '1' → logprob: -14.878178596496582
    4. '   ' → logprob: -16.503177642822266
    5. '       ' → logprob: -16.753177642822266
    6. '	x' → logprob: -17.628177642822266
    7. ' ' → logprob: -19.253177642822266
    8. '    ' → logprob: -19.503177642822266
    9. '(x' → logprob: -21.253177642822266
    10. '_x' → logprob: -21.378177642822266

Token 519: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0183557216078043
    2. ' +=' → logprob: -4.018355846405029
    3. '+' → logprob: -8.518355369567871
    4. '+='' → logprob: -13.393355369567871
    5. '=' → logprob: -13.518355369567871
    6. '+="' → logprob: -13.643355369567871
    7. ']+=' → logprob: -13.893355369567871
    8. '   ' → logprob: -14.643355369567871
    9. '++' → logprob: -15.518355369567871
    10. '```' → logprob: -15.893355369567871

Token 520: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '   ' → logprob: -21.75
    4. '```' → logprob: -22.125
    5. '+' → logprob: -24.0
    6. '１' → logprob: -24.125
    7. '۱' → logprob: -24.75
    8. '0' → logprob: -24.75
    9. '<|end|>' → logprob: -25.125
    10. '  ' → logprob: -25.5

Token 521: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '<|end|>' → logprob: -18.875
    4. '```' → logprob: -19.25
    5. '   ' → logprob: -20.5625
    6. '۱' → logprob: -20.6875
    7. '0' → logprob: -20.8125
    8. '１' → logprob: -21.375
    9. '১' → logprob: -21.5
    10. '१' → logprob: -21.5625

Token 522: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5297707915306091
    2. '       ' → logprob: -0.9047707915306091
    3. '#' → logprob: -5.154770851135254
    4. 'result' → logprob: -7.654770851135254
    5. '```' → logprob: -8.779770851135254
    6. ' #' → logprob: -9.279770851135254
    7. '
' → logprob: -9.904770851135254
    8. '  ' → logprob: -11.029770851135254
    9. '        
' → logprob: -11.154770851135254
    10. ' result' → logprob: -11.404770851135254

Token 523: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012353180907666683
    2. 'result' → logprob: -5.26235294342041
    3. ' result' → logprob: -6.26235294342041
    4. '       ' → logprob: -6.38735294342041
    5. '#' → logprob: -7.01235294342041
    6. ' #' → logprob: -7.26235294342041
    7. '    
' → logprob: -7.26235294342041
    8. '
' → logprob: -8.01235294342041
    9. '```' → logprob: -8.63735294342041
    10. '  ' → logprob: -8.76235294342041

Token 524: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3411526679992676
    2. '   ' → logprob: -1.7161526679992676
    3. '#' (adapté à ' #') → logprob: -2.2161526679992676
    4. ' result' → logprob: -8.96615219116211
    5. ' #' → logprob: -10.21615219116211
    6. '```' → logprob: -10.84115219116211
    7. '  ' → logprob: -10.96615219116211
    8. 'length' → logprob: -10.96615219116211
    9. '    
' → logprob: -11.34115219116211
    10. 'max' → logprob: -12.09115219116211

Token 525: ' Ajouter' (ID: 165754)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.030131567269563675
    2. '#' → logprob: -3.5301315784454346
    3. '   ' → logprob: -8.030131340026855
    4. ' result' → logprob: -10.405131340026855
    5. 'length' → logprob: -11.655131340026855
    6. 'while' → logprob: -12.530131340026855
    7. ' #' → logprob: -13.030131340026855
    8. 'temp' → logprob: -13.530131340026855
    9. 'rés' → logprob: -13.530131340026855
    10. 'res' → logprob: -14.030131340026855

Token 526: ' à' (ID: 1221)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6391419172286987
    2. ' x' → logprob: -0.7641419172286987
    3. ' (' → logprob: -5.389142036437988
    4. '(x' → logprob: -6.389142036437988
    5. '   ' → logprob: -9.514142036437988
    6. '(' → logprob: -9.639142036437988
    7. ' result' → logprob: -9.639142036437988
    8. 'result' → logprob: -10.014142036437988
    9. ' i' → logprob: -11.264142036437988
    10. ' ' → logprob: -13.014142036437988

Token 527: ' '' (ID: 461)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.008615042082965374
    2. ' result' → logprob: -4.758615016937256
    3. 'res' → logprob: -15.508615493774414
    4. ' ' → logprob: -16.258615493774414
    5. '(result' → logprob: -17.133615493774414
    6. '	result' → logprob: -17.508615493774414
    7. ' resultat' → logprob: -17.508615493774414
    8. 'answer' → logprob: -17.883615493774414
    9. ' résultat' → logprob: -18.383615493774414
    10. 'rés' → logprob: -19.133615493774414

Token 528: 'result' (ID: 2521)
  Prédit: 'result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.5048530030981055e-06
    2. ' result' → logprob: -13.500001907348633
    3. '
' → logprob: -19.375001907348633
    4. '(result' → logprob: -19.875001907348633
    5. 'answer' → logprob: -20.000001907348633
    6. '	result' → logprob: -20.000001907348633
    7. '   ' → logprob: -20.250001907348633
    8. 'res' → logprob: -20.375001907348633
    9. '```' → logprob: -20.750001907348633
    10. ' ' → logprob: -21.125001907348633

Token 529: ''' (ID: 6)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.1337348073720932
    2. ' le' → logprob: -3.133734703063965
    3. ' max' → logprob: -3.383734703063965
    4. ' x' → logprob: -3.758734703063965
    5. ' i' → logprob: -4.633734703063965
    6. ' la' → logprob: -6.008734703063965
    7. ' ' → logprob: -6.133734703063965
    8. 'max' → logprob: -6.258734703063965
    9. '   ' → logprob: -6.383734703063965
    10. '+=' → logprob: -6.758734703063965

Token 530: ' le' (ID: 505)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.432523638010025
    2. ' max' → logprob: -1.4325236082077026
    3. '+=' → logprob: -2.932523727416992
    4. 'max' → logprob: -3.432523727416992
    5. ' i' → logprob: -4.057523727416992
    6. '   ' → logprob: -5.182523727416992
    7. 'result' → logprob: -6.682523727416992
    8. ' result' → logprob: -7.432523727416992
    9. ' ' → logprob: -7.682523727416992
    10. ',' → logprob: -7.807523727416992

Token 531: ' nombre' (ID: 9733)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0013326213229447603
    2. ' x' → logprob: -6.626332759857178
    3. '(x' → logprob: -12.25133228302002
    4. '   ' → logprob: -13.87633228302002
    5. ' ' → logprob: -14.75133228302002
    6. '	x' → logprob: -15.50133228302002
    7. '  ' → logprob: -16.501333236694336
    8. '{x' → logprob: -16.751333236694336
    9. 'max' → logprob: -17.001333236694336
    10. '"x' → logprob: -17.126333236694336

Token 532: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.046511173248291
    2. 'x' → logprob: -1.296511173248291
    3. 'de' → logprob: -1.671511173248291
    4. '   ' → logprob: -2.046511173248291
    5. ' of' → logprob: -4.171511173248291
    6. '(x' → logprob: -4.421511173248291
    7. 'd' → logprob: -4.671511173248291
    8. ' x' → logprob: -4.921511173248291
    9. 'of' → logprob: -5.796511173248291
    10. '(' → logprob: -6.546511173248291

Token 533: ' sous' (ID: 14487)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.015120214782655239
    2. ' sous' → logprob: -5.265120029449463
    3. 'x' → logprob: -6.015120029449463
    4. 'sub' → logprob: -6.390120029449463
    5. 'fen' → logprob: -6.765120029449463
    6. 'ss' → logprob: -6.890120029449463
    7. '#' → logprob: -7.140120029449463
    8. 'j' → logprob: -7.765120029449463
    9. '```' → logprob: -7.890120029449463
    10. 'élé' → logprob: -8.140120506286621

Token 534: '-s' (ID: 2011)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.8290935754776001
    2. '   ' → logprob: -1.8290935754776
    3. 'sé' → logprob: -2.3290934562683105
    4. 'quences' → logprob: -3.0790934562683105
    5. '_sequences' → logprob: -3.2040934562683105
    6. 's' → logprob: -3.3290934562683105
    7. 'élé' → logprob: -3.7040934562683105
    8. 'for' → logprob: -3.8290934562683105
    9. ' sequences' → logprob: -4.0790934562683105
    10. '-' → logprob: -4.0790934562683105

Token 535: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.1613064706325531
    2. 'quences' → logprob: -2.286306381225586
    3. 'équ' → logprob: -3.536306381225586
    4. 'e' → logprob: -5.286306381225586
    5. 's' → logprob: -6.036306381225586
    6. 'q' → logprob: -6.411306381225586
    7. 'eq' → logprob: -6.536306381225586
    8. '?' → logprob: -6.661306381225586
    9. 'èques' → logprob: -6.661306381225586
    10. 'uites' → logprob: -7.036306381225586

Token 536: 'quences' (ID: 16559)
  Prédit: 'quences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quences' → logprob: -0.00031532408320344985
    2. 'q' → logprob: -8.37531566619873
    3. 'quence' → logprob: -10.25031566619873
    4. 'ences' → logprob: -11.25031566619873
    5. 'qu' → logprob: -11.25031566619873
    6. '```' → logprob: -12.00031566619873
    7. '   ' → logprob: -12.37531566619873
    8. 'quent' → logprob: -13.00031566619873
    9. '#' → logprob: -13.50031566619873
    10. '-' → logprob: -14.12531566619873

Token 537: ' val' (ID: 1459)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.26602667570114136
    2. '(x' → logprob: -2.141026735305786
    3. '   ' → logprob: -4.016026496887207
    4. 'distinct' → logprob: -4.016026496887207
    5. 'con' → logprob: -4.141026496887207
    6. 'form' → logprob: -4.266026496887207
    7. ' x' → logprob: -4.266026496887207
    8. 'possible' → logprob: -4.641026496887207
    9. ' possibles' → logprob: -5.016026496887207
    10. 'poss' → logprob: -5.516026496887207

Token 538: 'ides' (ID: 4105)
  Prédit: 'ides'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ides' → logprob: -0.012856641784310341
    2. 'ide' → logprob: -4.387856483459473
    3. 'ues' → logprob: -8.387856483459473
    4. 'id' → logprob: -9.262856483459473
    5. 'i' → logprob: -11.387856483459473
    6. '```' → logprob: -12.887856483459473
    7. 'result' → logprob: -13.137856483459473
    8. 'ider' → logprob: -13.512856483459473
    9. 'ue' → logprob: -13.887856483459473
    10. '#' → logprob: -13.887856483459473

Token 539: ' trouv' (ID: 40254)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.14979024231433868
    2. '(x' → logprob: -2.0247902870178223
    3. ' x' → logprob: -5.649790287017822
    4. '   ' → logprob: -6.649790287017822
    5. '+=' → logprob: -7.024790287017822
    6. ' +=' → logprob: -7.399790287017822
    7. ' (' → logprob: -7.899790287017822
    8. '+' → logprob: -8.399789810180664
    9. '[x' → logprob: -10.274789810180664
    10. '+x' → logprob: -10.274789810180664

Token 540: 'ées' (ID: 5161)
  Prédit: 'ues'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ues' → logprob: -0.010711980052292347
    2. 'u' → logprob: -4.760712146759033
    3. '   ' → logprob: -6.760712146759033
    4. 'ue' → logprob: -7.260712146759033
    5. 'us' → logprob: -10.260711669921875
    6. 'ées' → logprob: -10.760711669921875
    7. 'ides' → logprob: -11.135711669921875
    8. 'n' → logprob: -11.385711669921875
    9. 'uez' → logprob: -11.635711669921875
    10. 'ables' → logprob: -11.635711669921875

Token 541: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7779045701026917
    2. 'x' → logprob: -1.4029045104980469
    3. '+=' → logprob: -2.027904510498047
    4. 'result' → logprob: -2.152904510498047
    5. '+' → logprob: -3.902904510498047
    6. ' +=' → logprob: -4.277904510498047
    7. ' x' → logprob: -5.402904510498047
    8. '+x' → logprob: -6.277904510498047
    9. '(x' → logprob: -6.527904510498047
    10. '
' → logprob: -6.652904510498047

Token 542: ' l' (ID: 305)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.006170051638036966
    2. ' x' → logprob: -5.381170272827148
    3. '(x' → logprob: -6.631170272827148
    4. ' cette' → logprob: -9.006170272827148
    5. ' (' → logprob: -10.381170272827148
    6. 'j' → logprob: -10.756170272827148
    7. 'this' → logprob: -11.381170272827148
    8. ' la' → logprob: -11.631170272827148
    9. 'la' → logprob: -11.881170272827148
    10. '#' → logprob: -12.756170272827148

Token 543: ''ind' (ID: 82245)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7412009835243225
    2. 'j' → logprob: -0.7412009835243225
    3. 'e' → logprob: -4.241200923919678
    4. ' j' → logprob: -4.241200923919678
    5. '[j' → logprob: -5.991200923919678
    6. 'range' → logprob: -6.366200923919678
    7. '+' → logprob: -6.616200923919678
    8. 'indice' → logprob: -6.616200923919678
    9. 'interval' → logprob: -6.616200923919678
    10. 'x' → logprob: -6.866200923919678

Token 544: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.6888324022293091
    2. 'ex' → logprob: -0.8138324022293091
    3. 'range' → logprob: -3.3138322830200195
    4. 'ices' → logprob: -4.9388322830200195
    5. 'é' → logprob: -5.3138322830200195
    6. 'x' → logprob: -5.5638322830200195
    7. 'i' → logprob: -6.9388322830200195
    8. 'j' → logprob: -7.5638322830200195
    9. 'e' → logprob: -8.81383228302002
    10. 't' → logprob: -9.31383228302002

Token 545: ' '' (ID: 461)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.04427501559257507
    2. 'j' → logprob: -3.5442750453948975
    3. ' j' → logprob: -4.544274806976318
    4. '   ' → logprob: -5.794274806976318
    5. '(j' → logprob: -7.794274806976318
    6. '[' → logprob: -8.919275283813477
    7. '       ' → logprob: -10.419275283813477
    8. '    ' → logprob: -10.544275283813477
    9. ' (' → logprob: -11.044275283813477
    10. '```' → logprob: -11.294275283813477

Token 546: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.1279553291387856e-05
    2. ' j' → logprob: -11.750011444091797
    3. '```' → logprob: -14.500011444091797
    4. '_j' → logprob: -14.625011444091797
    5. '[j' → logprob: -14.750011444091797
    6. '$j' → logprob: -15.250011444091797
    7. ')' → logprob: -15.375011444091797
    8. ' ' → logprob: -15.500011444091797
    9. '	j' → logprob: -15.625011444091797
    10. '   ' → logprob: -15.750011444091797

Token 547: ''
' (ID: 2207)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09145627170801163
    2. ' +' → logprob: -3.716456174850464
    3. ')' → logprob: -4.091456413269043
    4. ' *' → logprob: -4.091456413269043
    5. '+' → logprob: -4.716456413269043
    6. ',' → logprob: -5.841456413269043
    7. '  ' → logprob: -6.091456413269043
    8. '*' → logprob: -6.091456413269043
    9. ')*(' → logprob: -6.091456413269043
    10. '*(' → logprob: -6.466456413269043

Token 548: '   ' (ID: 271)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.08529538661241531
    2. ' x' → logprob: -2.5852954387664795
    3. ' +=' → logprob: -5.4602952003479
    4. '   ' → logprob: -7.2102952003479
    5. '+=' → logprob: -7.2102952003479
    6. 'result' → logprob: -8.210295677185059
    7. '+' → logprob: -9.460295677185059
    8. ' result' → logprob: -9.460295677185059
    9. '(x' → logprob: -9.460295677185059
    10. ' (' → logprob: -9.835295677185059

Token 549: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.011303982697427273
    2. '+=' → logprob: -4.511303901672363
    3. ' +=' → logprob: -9.011303901672363
    4. '   ' → logprob: -9.386303901672363
    5. ' result' → logprob: -10.386303901672363
    6. '+=(' → logprob: -12.136303901672363
    7. '
' → logprob: -12.511303901672363
    8. '+
' → logprob: -12.636303901672363
    9. '```' → logprob: -13.011303901672363
    10. '+' → logprob: -13.136303901672363

Token 550: ' '' (ID: 461)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.00019412329129409045
    2. ' result' → logprob: -8.750194549560547
    3. '   ' → logprob: -10.250194549560547
    4. '+=' → logprob: -15.750194549560547
    5. '
' → logprob: -16.250194549560547
    6. '	result' → logprob: -17.000194549560547
    7. ' +=' → logprob: -17.875194549560547
    8. '(result' → logprob: -17.875194549560547
    9. 'answer' → logprob: -18.375194549560547
    10. 'res' → logprob: -19.125194549560547

Token 551: 'x' (ID: 87)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.017102262005209923
    2. 'x' → logprob: -4.142102241516113
    3. '(x' → logprob: -7.392102241516113
    4. ' result' → logprob: -7.767102241516113
    5. '(result' → logprob: -10.767102241516113
    6. ' x' → logprob: -12.767102241516113
    7. 'res' → logprob: -14.142102241516113
    8. '   ' → logprob: -14.642102241516113
    9. ' (' → logprob: -14.767102241516113
    10. '`' → logprob: -14.892102241516113

Token 552: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3875577747821808
    2. '-' → logprob: -1.1375577449798584
    3. '   ' → logprob: -8.012557983398438
    4. ')' → logprob: -9.637557983398438
    5. '<|end|>' → logprob: -9.762557983398438
    6. '=' → logprob: -10.012557983398438
    7. '-j' → logprob: -10.262557983398438
    8. ' ' → logprob: -10.387557983398438
    9. '<|end|>' → logprob: -10.637557983398438
    10. '[' → logprob: -11.262557983398438

Token 553: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.1994775377388578e-05
    2. ' j' → logprob: -11.375012397766113
    3. '<|end|>' → logprob: -15.500012397766113
    4. '_j' → logprob: -16.125011444091797
    5. '	j' → logprob: -16.375011444091797
    6. '$j' → logprob: -16.875011444091797
    7. '[j' → logprob: -17.000011444091797
    8. '1' → logprob: -17.750011444091797
    9. '   ' → logprob: -17.750011444091797
    10. ')' → logprob: -17.875011444091797

Token 554: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.041063833981752396
    2. '')' → logprob: -3.6660637855529785
    3. ''' → logprob: -4.7910637855529785
    4. '+' → logprob: -6.4160637855529785
    5. ' +' → logprob: -6.7910637855529785
    6. '<|end|>' → logprob: -6.9160637855529785
    7. ' )' → logprob: -7.1660637855529785
    8. ')'' → logprob: -7.6660637855529785
    9. '   ' → logprob: -7.9160637855529785
    10. '```' → logprob: -8.291064262390137

Token 555: ' est' (ID: 893)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0955418273806572
    2. '<|end|>' → logprob: -2.8455417156219482
    3. '   ' → logprob: -4.595541954040527
    4. '*' → logprob: -4.970541954040527
    5. ' *' → logprob: -5.095541954040527
    6. '<|end|>' → logprob: -5.345541954040527
    7. ')*' → logprob: -5.970541954040527
    8. '#' → logprob: -7.595541954040527
    9. ' )' → logprob: -7.720541954040527
    10. '),' → logprob: -8.345541954040527

Token 556: ' le' (ID: 505)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 557: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.1435459703207016
    2. ' nombre' → logprob: -2.0185458660125732
    3. 'number' → logprob: -7.518546104431152
    4. 'n' → logprob: -9.143546104431152
    5. 'count' → logprob: -9.143546104431152
    6. ' number' → logprob: -10.393546104431152
    7. 'length' → logprob: -10.768546104431152
    8. 'nb' → logprob: -11.268546104431152
    9. ' nombres' → logprob: -11.393546104431152
    10. 'len' → logprob: -11.768546104431152

Token 558: ' d' (ID: 272)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 559: ''inter' (ID: 55731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 560: 'v' (ID: 85)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.30954596400260925
    2. 'v' → logprob: -1.4345459938049316
    3. 'vals' → logprob: -3.6845459938049316
    4. 'ess' → logprob: -6.934545993804932
    5. 'sections' → logprob: -7.684545993804932
    6. 'vall' → logprob: -8.059545516967773
    7. 'm' → logprob: -8.684545516967773
    8. 'ventions' → logprob: -8.809545516967773
    9. 'ven' → logprob: -8.809545516967773
    10. '_val' → logprob: -9.059545516967773

Token 561: 'alles' (ID: 28825)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.42413148283958435
    2. 'alles' → logprob: -1.4241315126419067
    3. 'val' → logprob: -2.424131393432617
    4. '```' → logprob: -5.424131393432617
    5. '_val' → logprob: -6.299131393432617
    6. 'erv' → logprob: -6.299131393432617
    7. 'eval' → logprob: -6.424131393432617
    8. 'al' → logprob: -6.549131393432617
    9. 'vals' → logprob: -6.799131393432617
    10. 'vall' → logprob: -7.174131393432617

Token 562: ' possibles' (ID: 97753)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 563: ' comm' (ID: 1394)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.7822880744934082
    2. '*(' → logprob: -0.9072880744934082
    3. '   ' → logprob: -2.032288074493408
    4. '*' → logprob: -4.907288074493408
    5. ' -' → logprob: -8.03228759765625
    6. '  ' → logprob: -9.90728759765625
    7. ')' → logprob: -10.03228759765625
    8. '(x' → logprob: -10.03228759765625
    9. '       ' → logprob: -10.40728759765625
    10. ' ' → logprob: -10.78228759765625

Token 564: 'en' (ID: 262)
  Prédit: 'encé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'encé' → logprob: -0.49970731139183044
    2. 'enc' → logprob: -0.9997073411941528
    3. 'enç' → logprob: -3.7497072219848633
    4. 'encent' → logprob: -7.499707221984863
    5. 'ent' → logprob: -8.124707221984863
    6. 'en' → logprob: -8.374707221984863
    7. 'encer' → logprob: -9.249707221984863
    8. 'un' → logprob: -9.249707221984863
    9. '[' → logprob: -9.499707221984863
    10. 'enced' → logprob: -9.499707221984863

Token 565: 'çant' (ID: 78714)
  Prédit: 'çant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'çant' → logprob: -0.015484608709812164
    2. 'c' → logprob: -5.015484809875488
    3. 's' → logprob: -5.765484809875488
    4. 'ç' → logprob: -6.390484809875488
    5. 'ant' → logprob: -6.515484809875488
    6. 'a' → logprob: -7.390484809875488
    7. 'és' → logprob: -8.390484809875488
    8. 't' → logprob: -8.390484809875488
    9. 'x' → logprob: -8.765484809875488
    10. 'ss' → logprob: -8.890484809875488

Token 566: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.05834157392382622
    2. ' at' → logprob: -4.0583415031433105
    3. '   ' → logprob: -4.4333415031433105
    4. 'à' → logprob: -5.0583415031433105
    5. ' par' → logprob: -5.5583415031433105
    6. '<|end|>' → logprob: -5.6833415031433105
    7. ' au' → logprob: -5.9333415031433105
    8. 'from' → logprob: -6.1833415031433105
    9. '    ' → logprob: -6.3083415031433105
    10. 'at' → logprob: -6.5583415031433105

Token 567: ' l' (ID: 305)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0013279760023579001
    2. ' j' → logprob: -6.626327991485596
    3. '```' → logprob: -14.251327514648438
    4. '$j' → logprob: -14.376327514648438
    5. '[j' → logprob: -15.251327514648438
    6. '	j' → logprob: -15.751327514648438
    7. ' ' → logprob: -16.126327514648438
    8. '_j' → logprob: -16.376327514648438
    9. 'x' → logprob: -16.626327514648438
    10. '<|end|>' → logprob: -16.751327514648438

Token 568: ''ind' (ID: 82245)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.1881861537694931
    2. '```' → logprob: -2.9381861686706543
    3. '+' → logprob: -3.3131861686706543
    4. ' j' → logprob: -4.063186168670654
    5. 'index' → logprob: -4.563186168670654
    6. 'x' → logprob: -4.563186168670654
    7. 'indice' → logprob: -4.813186168670654
    8. '[j' → logprob: -5.188186168670654
    9. '`' → logprob: -5.563186168670654
    10. '#' → logprob: -5.688186168670654

Token 569: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.3537580966949463
    2. 'ice' → logprob: -1.2287580966949463
    3. 'ices' → logprob: -5.603757858276367
    4. 'i' → logprob: -7.478757858276367
    5. 'x' → logprob: -7.478757858276367
    6. 'j' → logprob: -8.978757858276367
    7. 'dex' → logprob: -9.603757858276367
    8. '   ' → logprob: -9.853757858276367
    9. 'é' → logprob: -10.228757858276367
    10. 'e' → logprob: -10.228757858276367

Token 570: ' '' (ID: 461)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.6104806661605835
    2. 'j' → logprob: -1.2354806661605835
    3. ' j' → logprob: -1.8604806661605835
    4. '[' → logprob: -5.610480785369873
    5. 'x' → logprob: -6.235480785369873
    6. '```' → logprob: -6.985480785369873
    7. '[x' → logprob: -7.235480785369873
    8. '   ' → logprob: -7.235480785369873
    9. '_j' → logprob: -7.485480785369873
    10. ' ' → logprob: -7.735480785369873

Token 571: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.003180921310558915
    2. ' j' → logprob: -5.753180980682373
    3. '	j' → logprob: -13.378180503845215
    4. '_j' → logprob: -13.878180503845215
    5. '[j' → logprob: -15.128180503845215
    6. '$j' → logprob: -15.253180503845215
    7. ' ' → logprob: -16.00318145751953
    8. '   ' → logprob: -16.87818145751953
    9. '```' → logprob: -17.00318145751953
    10. ''' → logprob: -17.62818145751953

Token 572: ''
' (ID: 2207)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07213990390300751
    2. '   ' → logprob: -2.6971399784088135
    3. '):' → logprob: -7.447139739990234
    4. ' )' → logprob: -7.697139739990234
    5. ')
' → logprob: -8.197139739990234
    6. '):
' → logprob: -8.197139739990234
    7. ' -' → logprob: -8.322139739990234
    8. '')' → logprob: -8.947139739990234
    9. ')*' → logprob: -9.947139739990234
    10. ':' → logprob: -10.072139739990234

Token 573: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00799956452101469
    2. 'result' → logprob: -4.882999420166016
    3. '+' → logprob: -8.257999420166016
    4. ' +' → logprob: -10.507999420166016
    5. '+
' → logprob: -10.507999420166016
    6. ' result' → logprob: -10.757999420166016
    7. '+=' → logprob: -10.757999420166016
    8. ' +=' → logprob: -10.882999420166016
    9. '       ' → logprob: -12.132999420166016
    10. '  ' → logprob: -12.507999420166016

Token 574: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.0009140860638581216
    2. '   ' → logprob: -7.000914096832275
    3. ' result' → logprob: -12.875913619995117
    4. '```' → logprob: -17.625913619995117
    5. '  ' → logprob: -18.250913619995117
    6. '	result' → logprob: -18.500913619995117
    7. '       ' → logprob: -18.625913619995117
    8. ' ' → logprob: -19.125913619995117
    9. '    
' → logprob: -19.875913619995117
    10. '    ' → logprob: -20.250913619995117

Token 575: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.31330379843711853
    2. '+=' → logprob: -1.313303828239441
    3. '+' → logprob: -10.81330394744873
    4. '+=(' → logprob: -11.06330394744873
    5. ']+=' → logprob: -12.81330394744873
    6. '+='' → logprob: -13.18830394744873
    7. '+="' → logprob: -14.06330394744873
    8. '=' → logprob: -15.31330394744873
    9. '   ' → logprob: -15.43830394744873
    10. ')' → logprob: -16.063302993774414

Token 576: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.008693988434970379
    2. '(x' → logprob: -4.758694171905518
    3. ' x' → logprob: -9.50869369506836
    4. '(' → logprob: -12.38369369506836
    5. ' (' → logprob: -13.75869369506836
    6. '	x' → logprob: -17.50869369506836
    7. '_x' → logprob: -17.88369369506836
    8. ' ' → logprob: -18.75869369506836
    9. '"x' → logprob: -19.00869369506836
    10. '   ' → logprob: -19.13369369506836

Token 577: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12696726620197296
    2. '-' → logprob: -2.126967191696167
    3. '   ' → logprob: -10.751967430114746
    4. ' ' → logprob: -11.626967430114746
    5. ' ' → logprob: -12.876967430114746
    6. '-j' → logprob: -13.251967430114746
    7. '  ' → logprob: -13.876967430114746
    8. ' –' → logprob: -14.501967430114746
    9. '	' → logprob: -14.626967430114746
    10. '"' → logprob: -14.626967430114746

Token 578: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.306760805164231e-05
    2. ' j' → logprob: -11.25001335144043
    3. '	j' → logprob: -17.62501335144043
    4. '   ' → logprob: -18.00001335144043
    5. '$j' → logprob: -19.12501335144043
    6. '_j' → logprob: -19.37501335144043
    7. '<|end|>' → logprob: -20.12501335144043
    8. ' ' → logprob: -20.12501335144043
    9. '[j' → logprob: -20.50001335144043
    10. '```' → logprob: -20.50001335144043

Token 579: '
' (ID: 198)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.023928236216306686
    2. '   ' → logprob: -3.773928165435791
    3. '#' → logprob: -7.398928165435791
    4. ' i' → logprob: -10.14892864227295
    5. 'if' → logprob: -10.64892864227295
    6. '    
' → logprob: -12.64892864227295
    7. '	i' → logprob: -13.27392864227295
    8. '```' → logprob: -14.02392864227295
    9. '  ' → logprob: -14.52392864227295
    10. '
' → logprob: -15.14892864227295

Token 580: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07438008487224579
    2. '#' → logprob: -3.0743801593780518
    3. 'i' → logprob: -3.6993801593780518
    4. ' i' → logprob: -8.449379920959473
    5. '    
' → logprob: -9.199379920959473
    6. '```' → logprob: -9.199379920959473
    7. ' #' → logprob: -9.699379920959473
    8. 'if' → logprob: -9.949379920959473
    9. '
' → logprob: -10.199379920959473
    10. '  ' → logprob: -10.449379920959473

Token 581: ' #' (ID: 1069)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005308346822857857
    2. '   ' → logprob: -5.630308151245117
    3. '#' (adapté à ' #') → logprob: -6.380308151245117
    4. ' i' → logprob: -11.380308151245117
    5. '	i' → logprob: -14.880308151245117
    6. '(i' → logprob: -15.880308151245117
    7. '  ' → logprob: -15.880308151245117
    8. '```' → logprob: -16.130308151245117
    9. ' #' → logprob: -17.005308151245117
    10. ' ' → logprob: -17.505308151245117

Token 582: ' Ret' (ID: 16724)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03370920941233635
    2. '#' → logprob: -3.4087092876434326
    3. '   ' → logprob: -10.283709526062012
    4. ' i' → logprob: -10.533709526062012
    5. '	i' → logprob: -14.283709526062012
    6. ' #' → logprob: -14.658709526062012
    7. '  ' → logprob: -15.783709526062012
    8. '       ' → logprob: -15.908709526062012
    9. '(i' → logprob: -15.908709526062012
    10. '{i' → logprob: -16.158708572387695

Token 583: 'irer' (ID: 85189)
  Prédit: 'irer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irer' → logprob: -5.526570384972729e-05
    2. 'rait' → logprob: -10.875055313110352
    3. 'ra' → logprob: -11.375055313110352
    4. 'ire' → logprob: -11.375055313110352
    5. 'r' → logprob: -11.750055313110352
    6. 'i' → logprob: -13.500055313110352
    7. 'ir' → logprob: -13.875055313110352
    8. 'our' → logprob: -14.000055313110352
    9. 'rier' → logprob: -14.750055313110352
    10. 'irar' → logprob: -15.125055313110352

Token 584: ' de' (ID: 334)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00408053956925869
    2. ' a' → logprob: -5.504080772399902
    3. '   ' → logprob: -13.504080772399902
    4. '=' → logprob: -14.629080772399902
    5. '	a' → logprob: -16.629079818725586
    6. '    ' → logprob: -16.754079818725586
    7. ' ' → logprob: -17.004079818725586
    8. ' =' → logprob: -17.629079818725586
    9. '#' → logprob: -18.004079818725586
    10. '```' → logprob: -18.254079818725586

Token 585: ' '' (ID: 461)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004211839754134417
    2. 'a' → logprob: -5.754211902618408
    3. ' i' → logprob: -6.879211902618408
    4. ' a' → logprob: -13.00421142578125
    5. ' ' → logprob: -14.00421142578125
    6. '   ' → logprob: -14.75421142578125
    7. '```' → logprob: -14.87921142578125
    8. '	i' → logprob: -15.25421142578125
    9. '[i' → logprob: -15.75421142578125
    10. '`' → logprob: -16.25421142578125

Token 586: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1472419600977446e-06
    2. ' i' → logprob: -14.125000953674316
    3. 'a' → logprob: -15.000000953674316
    4. '	i' → logprob: -19.625001907348633
    5. ''i' → logprob: -20.500001907348633
    6. '`' → logprob: -20.750001907348633
    7. '```' → logprob: -21.125001907348633
    8. '[i' → logprob: -21.250001907348633
    9. ')' → logprob: -21.250001907348633
    10. ')i' → logprob: -21.625001907348633

Token 587: ''' (ID: 6)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3632144331932068
    2. 'a' → logprob: -1.2382144927978516
    3. ' the' → logprob: -5.238214492797852
    4. ' ' → logprob: -5.363214492797852
    5. ' ' → logprob: -6.613214492797852
    6. '[' → logprob: -7.863214492797852
    7. ' -=' → logprob: -7.988214492797852
    8. '=' → logprob: -8.113214492797852
    9. '```' → logprob: -8.113214492797852
    10. '   ' → logprob: -8.113214492797852

Token 588: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.01107033807784319
    2. ' a' → logprob: -4.511070251464844
    3. ' the' → logprob: -10.761070251464844
    4. 'the' → logprob: -14.511070251464844
    5. ' ' → logprob: -15.511070251464844
    6. '[' → logprob: -15.886070251464844
    7. '[a' → logprob: -15.886070251464844
    8. ' ' → logprob: -16.261070251464844
    9. '	a' → logprob: -16.261070251464844
    10. '   ' → logprob: -16.636070251464844

Token 589: ' valeur' (ID: 41664)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.547789674485102e-05
    2. ' a' → logprob: -10.250035285949707
    3. '   ' → logprob: -18.250036239624023
    4. '```' → logprob: -21.000036239624023
    5. ' ' → logprob: -21.125036239624023
    6. '[a' → logprob: -21.375036239624023
    7. '	a' → logprob: -22.000036239624023
    8. '    ' → logprob: -22.875036239624023
    9. '  ' → logprob: -23.000036239624023
    10. '#a' → logprob: -23.500036239624023

Token 590: ' de' (ID: 334)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0037361837457865477
    2. ' a' → logprob: -6.0037360191345215
    3. ' de' → logprob: -7.1287360191345215
    4. 'de' → logprob: -8.50373649597168
    5. '[a' → logprob: -8.75373649597168
    6. '   ' → logprob: -10.25373649597168
    7. '(a' → logprob: -10.37873649597168
    8. '[' → logprob: -11.37873649597168
    9. '[i' → logprob: -11.62873649597168
    10. '```' → logprob: -12.87873649597168

Token 591: ' '' (ID: 461)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.001170225441455841
    2. ' a' → logprob: -6.7511701583862305
    3. '[a' → logprob: -17.626171112060547
    4. ' ' → logprob: -18.001171112060547
    5. '   ' → logprob: -18.376171112060547
    6. '	a' → logprob: -19.501171112060547
    7. '#a' → logprob: -20.126171112060547
    8. '(a' → logprob: -20.626171112060547
    9. ''a' → logprob: -20.626171112060547
    10. '```' → logprob: -21.376171112060547

Token 592: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -6.2729995988775045e-06
    2. ' a' → logprob: -12.000006675720215
    3. '[a' → logprob: -16.8750057220459
    4. ''a' → logprob: -19.3750057220459
    5. '   ' → logprob: -19.6250057220459
    6. '```' → logprob: -20.0000057220459
    7. '`' → logprob: -20.2500057220459
    8. ' ' → logprob: -20.7500057220459
    9. '[' → logprob: -21.0000057220459
    10. '#a' → logprob: -21.2500057220459

Token 593: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -6.630610641877865e-06
    2. '[' → logprob: -12.625006675720215
    3. 'j' → logprob: -12.625006675720215
    4. '[a' → logprob: -17.1250057220459
    5. '[i' → logprob: -17.8750057220459
    6. '[x' → logprob: -18.2500057220459
    7. ' [' → logprob: -18.2500057220459
    8. '[
' → logprob: -18.7500057220459
    9. ']' → logprob: -19.8750057220459
    10. '	j' → logprob: -20.0000057220459

Token 594: ']'' (ID: 75642)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12905572354793549
    2. ']'' → logprob: -2.1290557384490967
    3. '']' → logprob: -6.379055500030518
    4. ''' → logprob: -8.254055976867676
    5. ' ]' → logprob: -9.379055976867676
    6. ')]' → logprob: -10.254055976867676
    7. ')' → logprob: -11.129055976867676
    8. ')'' → logprob: -11.879055976867676
    9. ']'
' → logprob: -12.129055976867676
    10. ']',' → logprob: -12.254055976867676

Token 595: ' pour' (ID: 1930)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.44102737307548523
    2. ' i' → logprob: -1.5660274028778076
    3. '   ' → logprob: -2.6910274028778076
    4. '-' → logprob: -2.8160274028778076
    5. ' -' → logprob: -4.5660271644592285
    6. '-i' → logprob: -5.4410271644592285
    7. ' -=' → logprob: -6.9410271644592285
    8. '	i' → logprob: -7.0660271644592285
    9. '-
' → logprob: -7.3160271644592285
    10. '[i' → logprob: -7.3160271644592285

Token 596: ' déplacer' (ID: 142135)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.11213093996047974
    2. 'i' → logprob: -2.362130880355835
    3. '<|end|>' → logprob: -4.862131118774414
    4. '|' → logprob: -7.612131118774414
    5. ' ' → logprob: -7.612131118774414
    6. ')' → logprob: -7.612131118774414
    7. ' enlever' → logprob: -7.862131118774414
    8. ' retirer' → logprob: -7.987131118774414
    9. ' continuer' → logprob: -8.112131118774414
    10. ' a' → logprob: -8.362131118774414

Token 597: ' le' (ID: 505)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6531422138214111
    2. ' i' → logprob: -1.1531422138214111
    3. 'a' → logprob: -1.9031422138214111
    4. ' a' → logprob: -4.278141975402832
    5. ')' → logprob: -8.278141975402832
    6. ' the' → logprob: -8.528141975402832
    7. '<|end|>' → logprob: -8.528141975402832
    8. '[i' → logprob: -9.028141975402832
    9. ' la' → logprob: -10.028141975402832
    10. ' ' → logprob: -10.403141975402832

Token 598: ' début' (ID: 29589)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3112376034259796
    2. 'j' → logprob: -1.6862375736236572
    3. '<|end|>' → logprob: -3.4362375736236572
    4. ' i' → logprob: -4.061237812042236
    5. 'a' → logprob: -4.811237812042236
    6. ' j' → logprob: -4.811237812042236
    7. 'x' → logprob: -5.311237812042236
    8. ')' → logprob: -5.686237812042236
    9. 'space' → logprob: -6.311237812042236
    10. '```' → logprob: -6.936237812042236

Token 599: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8650031685829163
    2. ' a' → logprob: -0.9900031685829163
    3. 'a' → logprob: -1.9900031089782715
    4. '   ' → logprob: -4.3650031089782715
    5. ' ' → logprob: -4.4900031089782715
    6. ' i' → logprob: -4.6150031089782715
    7. '[' → logprob: -4.9900031089782715
    8. '    ' → logprob: -5.3650031089782715
    9. ')' → logprob: -5.4900031089782715
    10. ' of' → logprob: -5.6150031089782715

Token 600: ' la' (ID: 557)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3573472499847412
    2. ' i' → logprob: -1.2323472499847412
    3. ' la' → logprob: -4.98234748840332
    4. 'a' → logprob: -6.73234748840332
    5. ' a' → logprob: -8.23234748840332
    6. ' the' → logprob: -8.23234748840332
    7. 'la' → logprob: -8.60734748840332
    8. 'l' → logprob: -10.35734748840332
    9. 'the' → logprob: -10.73234748840332
    10. ' ' → logprob: -10.98234748840332

Token 601: ' fenêtre' (ID: 109648)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fen' → logprob: -0.0626557394862175
    2. ' fenêtre' → logprob: -3.8126556873321533
    3. 'window' → logprob: -3.9376556873321533
    4. 's' → logprob: -4.062655925750732
    5. 'i' → logprob: -6.687655925750732
    6. ' fen' → logprob: -8.562655448913574
    7. ' i' → logprob: -9.687655448913574
    8. ' sous' → logprob: -9.687655448913574
    9. 'sub' → logprob: -9.687655448913574
    10. 'f' → logprob: -9.812655448913574

Token 602: ' vers' (ID: 3640)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16809764504432678
    2. ' i' → logprob: -2.293097734451294
    3. '   ' → logprob: -3.168097734451294
    4. '[i' → logprob: -5.793097496032715
    5. ' -=' → logprob: -6.168097496032715
    6. '<|end|>' → logprob: -6.168097496032715
    7. 'a' → logprob: -7.543097496032715
    8. '(i' → logprob: -7.668097496032715
    9. '    
' → logprob: -7.668097496032715
    10. '=' → logprob: -7.918097496032715

Token 603: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02674155868589878
    2. ' a' → logprob: -4.0267415046691895
    3. 'l' → logprob: -6.1517415046691895
    4. ' ' → logprob: -6.1517415046691895
    5. ' la' → logprob: -6.6517415046691895
    6. '1' → logprob: -7.1517415046691895
    7. ' l' → logprob: -7.1517415046691895
    8. '<|end|>' → logprob: -7.2767415046691895
    9. 'la' → logprob: -8.151741981506348
    10. ' the' → logprob: -9.776741981506348

Token 604: ' droite' (ID: 61428)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009479807689785957
    2. 'j' → logprob: -5.384479999542236
    3. ' ' → logprob: -5.384479999542236
    4. ' j' → logprob: -8.509479522705078
    5. ' droite' → logprob: -11.009479522705078
    6. '0' → logprob: -11.134479522705078
    7. 'a' → logprob: -12.384479522705078
    8. '+' → logprob: -12.759479522705078
    9. '[j' → logprob: -12.759479522705078
    10. 'right' → logprob: -13.259479522705078

Token 605: ' lors' (ID: 15456)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.001882592448964715
    2. ' i' → logprob: -7.001882553100586
    3. '   ' → logprob: -7.376882553100586
    4. '-' → logprob: -8.126882553100586
    5. '-i' → logprob: -10.751882553100586
    6. '-
' → logprob: -11.626882553100586
    7. ' -' → logprob: -12.376882553100586
    8. '
' → logprob: -12.626882553100586
    9. '[i' → logprob: -12.751882553100586
    10. ' -=' → logprob: -13.001882553100586

Token 606: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.3478547930717468
    2. 'a' → logprob: -2.4728548526763916
    3. 'de' → logprob: -2.7228548526763916
    4. '   ' → logprob: -2.8478548526763916
    5. '<|end|>' → logprob: -3.7228548526763916
    6. ' du' → logprob: -4.8478546142578125
    7. 'd' → logprob: -4.9728546142578125
    8. ' d' → logprob: -5.0978546142578125
    9. ' of' → logprob: -5.2228546142578125
    10. ')' → logprob: -5.3478546142578125

Token 607: ' l' (ID: 305)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.33651798963546753
    2. 'l' → logprob: -1.5865180492401123
    3. ' la' → logprob: -2.5865180492401123
    4. 'the' → logprob: -6.336517810821533
    5. ' l' → logprob: -6.586517810821533
    6. 'j' → logprob: -6.836517810821533
    7. 'le' → logprob: -7.086517810821533
    8. '<|end|>' → logprob: -8.961518287658691
    9. 'a' → logprob: -9.461518287658691
    10. '   ' → logprob: -9.461518287658691

Token 608: ''' (ID: 6)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.9108375310897827
    2. 'for' → logprob: -1.1608375310897827
    3. 'range' → logprob: -1.7858375310897827
    4. '#' → logprob: -3.2858376502990723
    5. 'a' → logprob: -4.035837650299072
    6. ' while' → logprob: -4.535837650299072
    7. 'suite' → logprob: -4.910837650299072
    8. ' prochaine' → logprob: -5.035837650299072
    9. 'e' → logprob: -5.535837650299072
    10. ' for' → logprob: -5.785837650299072

Token 609: 'it' (ID: 278)
  Prédit: ' prochaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prochaine' → logprob: -0.5205905437469482
    2. 'it' → logprob: -1.3955905437469482
    3. 'next' → logprob: -3.3955905437469482
    4. ' it' → logprob: -3.5205905437469482
    5. ' ' → logprob: -4.270590782165527
    6. 'iteration' → logprob: -4.270590782165527
    7. '#' → logprob: -4.520590782165527
    8. 'j' → logprob: -4.645590782165527
    9. 'for' → logprob: -4.645590782165527
    10. ' boucle' → logprob: -5.145590782165527

Token 610: 'ération' (ID: 24977)
  Prédit: 'ération'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.2504187524318695
    2. 'er' → logprob: -2.1254186630249023
    3. '   ' → logprob: -3.8754186630249023
    4. 'x' → logprob: -4.500418663024902
    5. '#' → logprob: -4.875418663024902
    6. 'érations' → logprob: -4.875418663024902
    7. 'j' → logprob: -5.000418663024902
    8. 'ère' → logprob: -5.000418663024902
    9. 'érer' → logprob: -5.125418663024902
    10. ']' → logprob: -5.250418663024902

Token 611: ' suivante' (ID: 107439)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021922294050455093
    2. 'i' → logprob: -4.6469221115112305
    3. '<|end|>' → logprob: -5.0219221115112305
    4. ' i' → logprob: -6.7719221115112305
    5. '    ' → logprob: -6.7719221115112305
    6. '  ' → logprob: -7.1469221115112305
    7. '    
' → logprob: -7.7719221115112305
    8. ' ' → logprob: -7.8969221115112305
    9. 'a' → logprob: -7.8969221115112305
    10. 'j' → logprob: -8.02192211151123

Token 612: '
' (ID: 198)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08321055769920349
    2. ' i' → logprob: -3.0832104682922363
    3. '[i' → logprob: -3.9582104682922363
    4. '   ' → logprob: -5.333210468292236
    5. '-' → logprob: -5.833210468292236
    6. '
' → logprob: -5.958210468292236
    7. '<|end|>' → logprob: -7.208210468292236
    8. ' 
' → logprob: -7.583210468292236
    9. 'a' → logprob: -7.708210468292236
    10. '	i' → logprob: -7.833210468292236

Token 613: '   ' (ID: 271)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.010651011019945145
    2. '-' → logprob: -5.010651111602783
    3. '=' → logprob: -6.635651111602783
    4. '-
' → logprob: -7.510651111602783
    5. '[i' → logprob: -7.760651111602783
    6. 'a' → logprob: -7.760651111602783
    7. ' i' → logprob: -8.260650634765625
    8. '\n' → logprob: -8.385650634765625
    9. '   ' → logprob: -9.010650634765625
    10. '```' → logprob: -9.010650634765625

Token 614: ' #' (ID: 1069)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0002668192028068006
    2. '   ' → logprob: -9.250267028808594
    3. ' i' → logprob: -9.250267028808594
    4. '-' → logprob: -9.625267028808594
    5. ' -' → logprob: -12.500267028808594
    6. '-i' → logprob: -13.250267028808594
    7. ' -=' → logprob: -14.125267028808594
    8. '-=' → logprob: -14.250267028808594
    9. '-
' → logprob: -14.500267028808594
    10. '[i' → logprob: -14.750267028808594

Token 615: ' Cela' (ID: 44403)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005471144337207079
    2. ' i' → logprob: -5.380471229553223
    3. '   ' → logprob: -7.880471229553223
    4. ' -=' → logprob: -8.755471229553223
    5. '-=' → logprob: -8.880471229553223
    6. '-' → logprob: -9.005471229553223
    7. 'a' → logprob: -11.005471229553223
    8. ' -' → logprob: -11.505471229553223
    9. '=' → logprob: -12.005471229553223
    10. '	i' → logprob: -12.380471229553223

Token 616: ' permet' (ID: 11798)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.08015458285808563
    2. ' -=' → logprob: -2.5801546573638916
    3. '-' → logprob: -7.5801544189453125
    4. '=' → logprob: -7.8301544189453125
    5. ' ^=' → logprob: -8.955154418945312
    6. ' &=' → logprob: -9.330154418945312
    7. '&' → logprob: -9.955154418945312
    8. '+=' → logprob: -10.205154418945312
    9. '^' → logprob: -10.330154418945312
    10. ' -' → logprob: -11.955154418945312

Token 617: ' à' (ID: 1221)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.750264048576355
    2. 'd' → logprob: -1.500264048576355
    3. ' i' → logprob: -1.500264048576355
    4. ' d' → logprob: -3.3752641677856445
    5. '   ' → logprob: -3.5002641677856445
    6. ' de' → logprob: -5.0002641677856445
    7. 'de' → logprob: -5.7502641677856445
    8. '  ' → logprob: -6.0002641677856445
    9. ' ' → logprob: -6.1252641677856445
    10. '<|end|>' → logprob: -7.0002641677856445

Token 618: ' la' (ID: 557)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0002719449403230101
    2. ' i' → logprob: -9.000271797180176
    3. 'l' → logprob: -9.625271797180176
    4. '   ' → logprob: -10.625271797180176
    5. 'la' → logprob: -11.000271797180176
    6. '```' → logprob: -11.125271797180176
    7. '[i' → logprob: -12.125271797180176
    8. '#' → logprob: -12.375271797180176
    9. ''i' → logprob: -12.750271797180176
    10. '(i' → logprob: -13.125271797180176

Token 619: ' fenêtre' (ID: 109648)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4166303277015686
    2. 'i' → logprob: -1.1666302680969238
    3. ' a' → logprob: -5.041630268096924
    4. 'j' → logprob: -5.416630268096924
    5. '[i' → logprob: -5.541630268096924
    6. ' i' → logprob: -6.291630268096924
    7. '[' → logprob: -6.291630268096924
    8. ')' → logprob: -6.416630268096924
    9. '   ' → logprob: -6.666630268096924
    10. '|' → logprob: -6.791630268096924

Token 620: ' gl' (ID: 2000)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.3986857235431671
    2. '-=' → logprob: -1.1486856937408447
    3. '=' → logprob: -5.023685932159424
    4. '-' → logprob: -5.898685932159424
    5. ' =' → logprob: -6.648685932159424
    6. ' -' → logprob: -7.273685932159424
    7. ' &=' → logprob: -9.023685455322266
    8. ' ^=' → logprob: -9.148685455322266
    9. '   ' → logprob: -9.648685455322266
    10. ' ' → logprob: -10.523685455322266

Token 621: 'issante' (ID: 80061)
  Prédit: 'isser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isser' → logprob: -0.0008118899422697723
    2. 'issante' → logprob: -7.87581205368042
    3. 'iss' → logprob: -8.625811576843262
    4. 'isse' → logprob: -8.625811576843262
    5. 'issant' → logprob: -10.125811576843262
    6. 'issé' → logprob: -11.000811576843262
    7. 'i' → logprob: -12.500811576843262
    8. 'issez' → logprob: -12.500811576843262
    9. 'issement' → logprob: -12.625811576843262
    10. '=i' → logprob: -13.250811576843262

Token 622: ' de' (ID: 334)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.0849582850933075
    2. '-=' → logprob: -3.08495831489563
    3. ' &=' → logprob: -4.584958076477051
    4. '=' → logprob: -4.709958076477051
    5. '   ' → logprob: -5.209958076477051
    6. ' =' → logprob: -5.834958076477051
    7. ' ' → logprob: -6.834958076477051
    8. '-' → logprob: -6.959958076477051
    9. ' -' → logprob: -7.209958076477051
    10. ' ^=' → logprob: -7.334958076477051

Token 623: ' ne' (ID: 453)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9776110649108887
    2. '&' → logprob: -1.1026110649108887
    3. '^' → logprob: -1.4776110649108887
    4. ' &=' → logprob: -3.9776110649108887
    5. '-=' → logprob: -4.477611064910889
    6. ' i' → logprob: -4.977611064910889
    7. ' ^=' → logprob: -5.227611064910889
    8. '&i' → logprob: -5.602611064910889
    9. 'remove' → logprob: -6.102611064910889
    10. '&nbsp' → logprob: -6.352611064910889

Token 624: ' plus' (ID: 2932)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -0.15918321907520294
    2. 'pas' → logprob: -2.1591832637786865
    3. ' pas' → logprob: -4.534183025360107
    4. '+=' → logprob: -5.784183025360107
    5. '   ' → logprob: -5.909183025360107
    6. ' &' → logprob: -6.284183025360107
    7. 'i' → logprob: -6.409183025360107
    8. '=' → logprob: -6.409183025360107
    9. '&i' → logprob: -6.409183025360107
    10. 'et' → logprob: -6.784183025360107

Token 625: ' considérer' (ID: 172894)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -1.017909288406372
    2. 'i' → logprob: -1.017909288406372
    3. 'a' → logprob: -1.892909288406372
    4. ' i' → logprob: -2.767909288406372
    5. ' (' → logprob: -4.142909049987793
    6. ' &' → logprob: -4.142909049987793
    7. '(i' → logprob: -4.267909049987793
    8. ' a' → logprob: -5.267909049987793
    9. '(' → logprob: -5.517909049987793
    10. '&i' → logprob: -5.517909049987793

Token 626: ' l' (ID: 305)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.018153687939047813
    2. ' a' → logprob: -4.018153667449951
    3. '(a' → logprob: -12.64315414428711
    4. '	a' → logprob: -15.76815414428711
    5. ')a' → logprob: -16.51815414428711
    6. '[a' → logprob: -16.64315414428711
    7. '#a' → logprob: -16.76815414428711
    8. '_a' → logprob: -16.76815414428711
    9. '   ' → logprob: -16.76815414428711
    10. '>a' → logprob: -17.89315414428711

Token 627: ''' (ID: 6)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004715276416391134
    2. ' a' → logprob: -5.504715442657471
    3. '[' → logprob: -8.254714965820312
    4. '   ' → logprob: -9.254714965820312
    5. '[j' → logprob: -9.379714965820312
    6. ']' → logprob: -10.004714965820312
    7. '[a' → logprob: -10.004714965820312
    8. ' ' → logprob: -10.754714965820312
    9. 'e' → logprob: -10.754714965820312
    10. '+' → logprob: -11.129714965820312

Token 628: 'élé' (ID: 15228)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00016277639952022582
    2. ' a' → logprob: -8.875163078308105
    3. '```' → logprob: -12.000163078308105
    4. '[j' → logprob: -12.375163078308105
    5. '[a' → logprob: -12.375163078308105
    6. ' ' → logprob: -13.250163078308105
    7. '[' → logprob: -13.625163078308105
    8. '   ' → logprob: -13.625163078308105
    9. ']' → logprob: -13.750163078308105
    10. ')' → logprob: -14.250163078308105

Token 629: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.18625371158123016
    2. 'ments' → logprob: -1.8112536668777466
    3. 'men' → logprob: -6.811253547668457
    4. 'e' → logprob: -7.311253547668457
    5. 'm' → logprob: -7.311253547668457
    6. 'em' → logprob: -7.311253547668457
    7. 'me' → logprob: -7.561253547668457
    8. 'a' → logprob: -7.561253547668457
    9. ']' → logprob: -7.936253547668457
    10. '```' → logprob: -7.936253547668457

Token 630: ' de' (ID: 334)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.07948506623506546
    2. 'a' → logprob: -2.5794851779937744
    3. '[a' → logprob: -8.079484939575195
    4. '[' → logprob: -8.954484939575195
    5. 'j' → logprob: -9.579484939575195
    6. ' a' → logprob: -9.704484939575195
    7. ' [' → logprob: -11.454484939575195
    8. '```' → logprob: -11.579484939575195
    9. '   ' → logprob: -13.829484939575195
    10. ' j' → logprob: -13.954484939575195

Token 631: ' début' (ID: 29589)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0060330769047141075
    2. 'j' → logprob: -5.631032943725586
    3. 'la' → logprob: -7.256032943725586
    4. ' a' → logprob: -7.756032943725586
    5. '[j' → logprob: -8.006032943725586
    6. ' la' → logprob: -8.006032943725586
    7. 'l' → logprob: -8.381032943725586
    8. '```' → logprob: -9.256032943725586
    9. ' j' → logprob: -9.881032943725586
    10. 'indice' → logprob: -10.006032943725586

Token 632: ' précédent' (ID: 128462)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.35750308632850647
    2. '   ' → logprob: -2.2325031757354736
    3. '[j' → logprob: -2.7325031757354736
    4. ' a' → logprob: -2.8575031757354736
    5. ']' → logprob: -3.8575031757354736
    6. '[' → logprob: -4.2325029373168945
    7. ' de' → logprob: -5.3575029373168945
    8. '[i' → logprob: -5.4825029373168945
    9. ' =' → logprob: -5.7325029373168945
    10. '[a' → logprob: -5.8575029373168945

Token 633: '
' (ID: 198)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.782318115234375
    2. '   ' → logprob: -0.907318115234375
    3. '-' → logprob: -2.532318115234375
    4. ' i' → logprob: -3.407318115234375
    5. ' -' → logprob: -4.157318115234375
    6. '-i' → logprob: -6.032318115234375
    7. '[i' → logprob: -6.282318115234375
    8. ' -=' → logprob: -6.407318115234375
    9. '-
' → logprob: -6.657318115234375
    10. '(i' → logprob: -7.782318115234375

Token 634: '   ' (ID: 271)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.040794696658849716
    2. '-' → logprob: -4.290794849395752
    3. '[i' → logprob: -5.040794849395752
    4. '-
' → logprob: -5.165794849395752
    5. ' i' → logprob: -5.415794849395752
    6. '   ' → logprob: -6.040794849395752
    7. '\n' → logprob: -6.290794849395752
    8. '
' → logprob: -6.415794849395752
    9. 'a' → logprob: -7.540794849395752
    10. ' -=' → logprob: -7.665794849395752

Token 635: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.026331299915909767
    2. '-' → logprob: -3.9013311862945557
    3. ' i' → logprob: -5.401331424713135
    4. ' -' → logprob: -8.026330947875977
    5. '   ' → logprob: -8.026330947875977
    6. '-
' → logprob: -8.151330947875977
    7. '-i' → logprob: -8.901330947875977
    8. '-=' → logprob: -9.526330947875977
    9. '^' → logprob: -9.901330947875977
    10. ' -=' → logprob: -10.151330947875977

Token 636: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.5786289572715759
    2. ' -=' → logprob: -0.8286289572715759
    3. '-' → logprob: -6.078629016876221
    4. ' -' → logprob: -9.078628540039062
    5. ' ^=' → logprob: -9.203628540039062
    6. '=' → logprob: -9.703628540039062
    7. ' &=' → logprob: -9.828628540039062
    8. '&' → logprob: -9.953628540039062
    9. '^' → logprob: -12.453628540039062
    10. ' ' → logprob: -12.453628540039062

Token 637: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0009114635176956654
    2. ' a' → logprob: -7.000911235809326
    3. '   ' → logprob: -20.000911712646484
    4. '	a' → logprob: -20.125911712646484
    5. ' ' → logprob: -20.625911712646484
    6. '#a' → logprob: -21.750911712646484
    7. '```' → logprob: -21.875911712646484
    8. ' ' → logprob: -22.250911712646484
    9. '[a' → logprob: -22.375911712646484
    10. 'а' → logprob: -22.875911712646484

Token 638: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.5213274309644476e-05
    2. '[' → logprob: -11.125015258789062
    3. ' [' → logprob: -15.250015258789062
    4. '[i' → logprob: -15.750015258789062
    5. '[
' → logprob: -17.625015258789062
    6. 'j' → logprob: -17.875015258789062
    7. '```' → logprob: -18.375015258789062
    8. '[a' → logprob: -18.500015258789062
    9. '\[' → logprob: -19.250015258789062
    10. '[J' → logprob: -19.500015258789062

Token 639: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0033736536279320717
    2. ' )' → logprob: -6.253373622894287
    3. ']' → logprob: -6.753373622894287
    4. '}' → logprob: -9.003374099731445
    5. ')
' → logprob: -9.628374099731445
    6. '<|end|>' → logprob: -10.253374099731445
    7. '```' → logprob: -10.628374099731445
    8. ' ]' → logprob: -11.503374099731445
    9. '）' → logprob: -12.503374099731445
    10. '   ' → logprob: -12.628374099731445

Token 640: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 641: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. ' print' → logprob: -16.0
    3. '#print' → logprob: -19.5
    4. '
' → logprob: -20.0
    5. '#' → logprob: -20.125
    6. 'pr' → logprob: -20.625
    7. '```' → logprob: -20.875
    8. 'prin' → logprob: -21.625
    9. 'prit' → logprob: -22.0
    10. 'printf' → logprob: -22.875

Token 642: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.04872385039925575
    2. '#' → logprob: -3.0487239360809326
    3. 'iche' → logprob: -9.923724174499512
    4. 'f' → logprob: -10.423724174499512
    5. 'ichage' → logprob: -11.048724174499512
    6. 'cher' → logprob: -11.798724174499512
    7. '```' → logprob: -12.423724174499512
    8. 'ich' → logprob: -12.798724174499512
    9. '   ' → logprob: -12.923724174499512
    10. '>' → logprob: -12.923724174499512

Token 643: ' le' (ID: 505)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.001930420519784093
    2. 'result' → logprob: -6.251930236816406
    3. '(' → logprob: -13.626930236816406
    4. 'print' → logprob: -14.376930236816406
    5. '(print' → logprob: -17.001930236816406
    6. '(
' → logprob: -17.876930236816406
    7. ' result' → logprob: -18.626930236816406
    8. '(res' → logprob: -18.626930236816406
    9. '(resultado' → logprob: -18.626930236816406
    10. '=result' → logprob: -19.126930236816406

Token 644: ' résultat' (ID: 62556)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.029787283390760422
    2. '(result' → logprob: -3.529787302017212
    3. 'print' → logprob: -10.529787063598633
    4. ' résultat' → logprob: -13.029787063598633
    5. '(' → logprob: -13.154787063598633
    6. 'rés' → logprob: -13.279787063598633
    7. ' result' → logprob: -13.529787063598633
    8. 'res' → logprob: -13.779787063598633
    9. ' resultat' → logprob: -14.154787063598633
    10. 'resultado' → logprob: -15.279787063598633

Token 645: ' final' (ID: 1721)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.5690089639974758e-05
    2. 'result' → logprob: -12.375015258789062
    3. '(print' → logprob: -12.500015258789062
    4. ' print' → logprob: -12.750015258789062
    5. '(' → logprob: -12.875015258789062
    6. '()
' → logprob: -14.500015258789062
    7. '```' → logprob: -14.500015258789062
    8. '
' → logprob: -14.750015258789062
    9. '(result' → logprob: -15.375015258789062
    10. ')' → logprob: -15.500015258789062

Token 646: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '```' → logprob: -17.0
    3. ' print' → logprob: -19.25
    4. '``' → logprob: -22.0
    5. '(print' → logprob: -22.875
    6. '
' → logprob: -22.875
    7. 'pr' → logprob: -23.25
    8. 'prin' → logprob: -23.5
    9. '#print' → logprob: -24.125
    10. 'prit' → logprob: -24.5

Token 647: ' qui' (ID: 2780)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0206720617134124e-05
    2. ' print' → logprob: -11.50001049041748
    3. '```' → logprob: -17.500009536743164
    4. '``' → logprob: -23.750009536743164
    5. '#print' → logprob: -24.000009536743164
    6. '.print' → logprob: -24.500009536743164
    7. 'pr' → logprob: -24.625009536743164
    8. '(print' → logprob: -25.750009536743164
    9. 'printf' → logprob: -26.250009536743164
    10. '#' → logprob: -26.250009536743164

Token 648: ' est' (ID: 893)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.42557379603385925
    2. ' représente' → logprob: -1.5505738258361816
    3. ' print' → logprob: -2.5505738258361816
    4. ' contient' → logprob: -3.9255738258361816
    5. ' repres' → logprob: -5.050573825836182
    6. ' represents' → logprob: -5.425573825836182
    7. ' indique' → logprob: -5.800573825836182
    8. '#' → logprob: -5.800573825836182
    9. ' correspond' → logprob: -6.050573825836182
    10. 'repr' → logprob: -6.175573825836182

Token 649: ' le' (ID: 505)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0023341397754848003
    2. '(result' → logprob: -6.252334117889404
    3. 'print' → logprob: -8.002334594726562
    4. ' result' → logprob: -9.627334594726562
    5. 'le' → logprob: -13.252334594726562
    6. 'la' → logprob: -13.627334594726562
    7. '   ' → logprob: -14.627334594726562
    8. ' resultat' → logprob: -15.502334594726562
    9. '```' → logprob: -15.627334594726562
    10. '=result' → logprob: -15.627334594726562

Token 650: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.05974497273564339
    2. 'result' → logprob: -3.0597450733184814
    3. 'print' → logprob: -4.559744834899902
    4. 'total' → logprob: -8.309744834899902
    5. ' nombre' → logprob: -8.684744834899902
    6. 'number' → logprob: -8.934744834899902
    7. '```' → logprob: -10.559744834899902
    8. '#' → logprob: -11.184744834899902
    9. 'rés' → logprob: -11.309744834899902
    10. 'Nombre' → logprob: -11.434744834899902

Token 651: ' total' (ID: 3609)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05409341678023338
    2. 'total' → logprob: -3.804093360900879
    3. 'de' → logprob: -4.179093360900879
    4. ' de' → logprob: -5.179093360900879
    5. 'result' → logprob: -5.554093360900879
    6. 'des' → logprob: -6.179093360900879
    7. ')' → logprob: -7.554093360900879
    8. 'final' → logprob: -7.554093360900879
    9. 'd' → logprob: -7.679093360900879
    10. ' print' → logprob: -7.929093360900879

Token 652: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03411102667450905
    2. '(' → logprob: -3.4091110229492188
    3. '(print' → logprob: -8.034111022949219
    4. '(
' → logprob: -9.534111022949219
    5. 'de' → logprob: -11.159111022949219
    6. ')' → logprob: -11.159111022949219
    7. '()' → logprob: -11.534111022949219
    8. '#' → logprob: -11.659111022949219
    9. '(result' → logprob: -12.284111022949219
    10. 'result' → logprob: -12.784111022949219

Token 653: ' sous' (ID: 14487)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.48914581537246704
    2. ' sous' → logprob: -0.989145815372467
    3. 'sub' → logprob: -4.239145755767822
    4. ' sub' → logprob: -9.11414623260498
    5. 'under' → logprob: -9.36414623260498
    6. '```' → logprob: -9.73914623260498
    7. '_' → logprob: -10.11414623260498
    8. 'sou' → logprob: -10.23914623260498
    9. ' ' → logprob: -10.48914623260498
    10. 'interval' → logprob: -10.86414623260498

Token 654: '-s' (ID: 2011)
  Prédit: 'sé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sé' → logprob: -0.2761179208755493
    2. '-s' → logprob: -1.6511179208755493
    3. 's' → logprob: -3.7761178016662598
    4. '_s' → logprob: -4.02611780166626
    5. '-' → logprob: -4.90111780166626
    6. '_sequences' → logprob: -7.65111780166626
    7. '_' → logprob: -7.77611780166626
    8. ' sé' → logprob: -9.526118278503418
    9. '-se' → logprob: -9.526118278503418
    10. '--' → logprob: -10.526118278503418

Token 655: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.07852915674448013
    2. 'équ' → logprob: -2.953529119491577
    3. 'quences' → logprob: -3.828529119491577
    4. 'e' → logprob: -8.453529357910156
    5. 's' → logprob: -8.578529357910156
    6. 'ques' → logprob: -8.953529357910156
    7. 'uites' → logprob: -8.953529357910156
    8. 'èques' → logprob: -8.953529357910156
    9. '{' → logprob: -9.078529357910156
    10. 'eq' → logprob: -9.078529357910156

Token 656: 'quences' (ID: 16559)
  Prédit: 'quences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quences' → logprob: -8.537868779967539e-06
    2. 'q' → logprob: -12.625008583068848
    3. 'qu' → logprob: -13.125008583068848
    4. 'ries' → logprob: -14.375008583068848
    5. 'quence' → logprob: -14.750008583068848
    6. '   ' → logprob: -14.875008583068848
    7. '-' → logprob: -15.500008583068848
    8. '#' → logprob: -15.500008583068848
    9. '
' → logprob: -15.625008583068848
    10. '--' → logprob: -15.750008583068848

Token 657: ' satisf' (ID: 8824)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.4314967095851898
    2. 'print' → logprob: -1.4314967393875122
    3. '(' → logprob: -2.3064966201782227
    4. '(
' → logprob: -5.306496620178223
    5. '(print' → logprob: -5.306496620178223
    6. 'result' → logprob: -6.431496620178223
    7. '(a' → logprob: -9.306496620178223
    8. 'a' → logprob: -9.431496620178223
    9. '```' → logprob: -10.056496620178223
    10. '()' → logprob: -10.306496620178223

Token 658: 'ais' (ID: 1873)
  Prédit: 'ais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ais' → logprob: -0.0016598280053585768
    2. 'ai' → logprob: -7.001659870147705
    3. 'a' → logprob: -7.626659870147705
    4. 'aites' → logprob: -8.626659393310547
    5. 'aient' → logprob: -10.876659393310547
    6. 'ait' → logprob: -11.126659393310547
    7. 'aits' → logprob: -11.501659393310547
    8. 'e' → logprob: -11.751659393310547
    9. 'aises' → logprob: -12.001659393310547
    10. 'ayant' → logprob: -12.126659393310547

Token 659: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.002330693881958723
    2. 'antes' → logprob: -6.377330780029297
    3. 's' → logprob: -7.877330780029297
    4. 'es' → logprob: -8.502330780029297
    5. 'ants' → logprob: -11.377330780029297
    6. 'f' → logprob: -12.127330780029297
    7. '#' → logprob: -12.377330780029297
    8. 'ait' → logprob: -12.502330780029297
    9. 'tes' → logprob: -12.627330780029297
    10. 'ont' → logprob: -12.752330780029297

Token 660: ' la' (ID: 557)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6510022282600403
    2. 'la' → logprob: -1.4010021686553955
    3. 'aux' → logprob: -2.6510021686553955
    4. 'les' → logprob: -2.7760021686553955
    5. ' la' → logprob: -4.026002407073975
    6. 'l' → logprob: -4.151002407073975
    7. 'the' → logprob: -4.401002407073975
    8. 'le' → logprob: -4.526002407073975
    9. 'au' → logprob: -5.151002407073975
    10. '#' → logprob: -5.401002407073975

Token 661: ' condition' (ID: 7060)
  Prédit: 'condition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'condition' → logprob: -0.01016955729573965
    2. 'pro' → logprob: -4.635169506072998
    3. 'crit' → logprob: -9.135169982910156
    4. 'property' → logprob: -9.260169982910156
    5. ' condition' → logprob: -9.885169982910156
    6. '```' → logprob: -10.510169982910156
    7. ' propriété' → logprob: -10.510169982910156
    8. 'cond' → logprob: -10.760169982910156
    9. ' ' → logprob: -10.885169982910156
    10. 'contr' → logprob: -11.510169982910156

Token 662: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.1008713702030946e-06
    2. '```' → logprob: -13.250001907348633
    3. ' print' → logprob: -15.625001907348633
    4. '
' → logprob: -16.000001907348633
    5. '``' → logprob: -16.875001907348633
    6. '(print' → logprob: -17.375001907348633
    7. '`
' → logprob: -19.500001907348633
    8. 'println' → logprob: -20.125001907348633
    9. '#print' → logprob: -20.750001907348633
    10. 'Print' → logprob: -20.750001907348633

Token 663: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '```' → logprob: -18.5
    3. ' print' → logprob: -21.625
    4. 'pr' → logprob: -22.625
    5. 'prin' → logprob: -23.5
    6. '
' → logprob: -24.625
    7. '``' → logprob: -25.0
    8. '#print' → logprob: -25.625
    9. 'prit' → logprob: -25.625
    10. '(print' → logprob: -25.625

Token 664: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16024911403656006
    2. '(result' → logprob: -1.91024911403656
    3. '()' → logprob: -11.410248756408691
    4. ' (' → logprob: -11.910248756408691
    5. '('' → logprob: -12.910248756408691
    6. '(res' → logprob: -13.785248756408691
    7. '("("' → logprob: -14.035248756408691
    8. '(
' → logprob: -14.660248756408691
    9. '(f' → logprob: -14.660248756408691
    10. '(

' → logprob: -14.910248756408691

Token 665: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1008713702030946e-06
    2. ' )' → logprob: -13.250001907348633
    3. '())' → logprob: -16.500001907348633
    4. '()' → logprob: -16.500001907348633
    5. '))' → logprob: -17.000001907348633
    6. ')`' → logprob: -17.750001907348633
    7. ')#' → logprob: -18.625001907348633
    8. '')' → logprob: -19.250001907348633
    9. ')}' → logprob: -19.750001907348633
    10. '#' → logprob: -20.000001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 663
Tokens correctement prédits (1ère position, stricte): 147
Tokens correctement prédits (1ère position, avec adaptation): 151
Tokens correctement prédits (top 10): 350
Précision stricte (1ère position): 22.17%
Précision adaptée (1ère position): 22.78%
Précision (top 10): 52.79%
================================================================================
